{
    "title": "Dindi Pt. 05",
    "pages": [
        "Hello!\n\nHere's part 5. The finale.\n\nI wish I had more time to edit this. \n\nI've been busy studying to try and get out of college and I promised not to take too long to post my chapters. My time has been very limited lately and I didn't think it would be fair to make you wait for the end of my Summer break to know what happens after the way I ended part 4. \n\nIt took me a while to write this. My inspiration was nowhere to be found, then it came (after weeks and too many bottles of wine to mention) and I got to writing. A lot. As a result, this is the longest chapter yet. It covers everything it should.\n\nAgain, I might be repetitive, but I must always say English is not my first language (and my fingers sometimes work faster than my brain), so you're bound to find some mistakes here. I apologize for it. \n\nWriting this story has been fun. I received a lot of incredible comments and even gained a new penpal (linalinnius, sua linda)! I never expected the feedback to be so great. Thank you!\n\nThank you so, so much for taking a little bit of your time to read this. I'm so, so grateful. This is the end of Dindi, but I'll write again soon (I promise a funnier and emotionally lighter story next time). I quite like this writing thing...\n\nAll those messes from part 4 will be addressed, some new ones will surface, but the end is a happy one (not a spoiler. It always is).\n\nSee you next story.\n\nXOXO,\n\nNana\n\n*****\n\nMORENA\n\n\"This is so good.\"\n\n\"You like it?\"\n\n\"Mmm...I love it. You have magical fingers.\"\n\n\"So I'm doing this right?\"\n\n\"Oh, yes. It's perfect...\"\n\nTravis and I were soaking in his tub. He had insisted I let him wash my hair and his fingers worked magic on my scalp. He massaged it slowly and thoroughly, going from my temples to the back of my head, then to my nape until I was a puddle of melted chocolate.\n\nUnder the water, my own hands were busy manipulating his cock. I did it with no hurry at all, feeling him get hard and tense under my palms before I slowed my rhythm down so he wouldn't come.\n\n\"When is George's party again? Thursday?\" He asked. \n\nI loved the tense huskiness my working hands created in his voice. However, I was way too high on the feel of his fingers to pay attention to his words.\n\n\"Mmm?\" \n\n\"George's party? When is it?\" He asked with an audible satisfied grin.\n\nGeorge's birthday was in three days. He planned a party meant to introduce his new boyfriend to his friends. Negligently, I hadn't been home very often this past few weeks having met the man in question, Lance, only once. As promised, I was trying to figure out how to be with Travis, and not just fuck him -or be fucked by him. So far the thing could not be better.\n\n\"Mmm...Friday night.\" Gee had ordered the cake three weeks in advance, saying Lance liked red velvet and everything had to be perfect.\n\nTravis let one big hand slid from my head to my neck, pressing a thumb to the hollow of my throat on his way down to my breast. The soap and water made it all too easy for his hand to explore. Even surrounded by lukewarm water, I shivered. He had this way of touching me, it almost felt like the first time. As if his touch wasn't already printed on my skin.\n\n\"He's smitten, uh?\" He observed.\n\nHe's not the only one. That little nosy voice told me. You are, too.\n\n\"Mmm-hmm.\" I hummed, absentmindedly. How the fuck could I have the mind to speak when his fingers were pinching my nipples?\n\n\"Should I bring something?\" He used the hand still on my hair to move my head so he could kiss a trail along my jaw. My hand gripped him tighter, making him gasp slightly.\n\nI was trying to decide where to concentrate my attention: if on his hand on my hair, the hand on my breast, or the lips on my skin.\n\n\"Just...hmm...wine. Bring me wine.\" I managed to answer. \n\nI felt his soft chuckle on my ear lobe, but then, to my absolute horror, lips and hands left my skin. My eyes snapped open and I whimpered, knowing I was pouting like a child.\n\n\"Morena.\" Travis called, using my name. I tensed, taking my hand away from his beautifully hard cock. Unless he had something serious to say, he rarely called me by my actual name. This time when he did it though, it was like being ripped out of the most delicious dream.\n\n\"No, Travis. That's not my right name.\" I objected. \n\nHe eyed me with a studied caution that let me know he'd been rehearsing whatever serious thing he had to say. \n\n\"Did my mother say anything to you?\" He asked.\n\nShit.\n\nMy reaction was instantaneous, too fast for me to control. \n\n\"W-What do you mean?\" I stuttered.\n\nI wasn't good at hiding my emotions. Gee always said I couldn't pull a poker face if my life depended on it. Of course that, by now, Travis knew that too.\n\n\"Morena.\" His tone was reprehensive.\n\nAlmost a whole month had passed since we returned from that intense weekend at his mother's. He had noticed my strange behaviour the days following our return but gave up on asking me what was wrong after I had told him I was fine at least a hundred times. I chose not to tell him a thing about what I'd heard, and made sure Max wouldn't as well. \n\nEven so, I had this nagging feeling Mrs. Keegan had wanted me to hear her. She had to know Max and I were within hearing distance of her voice. What I didn't know was the true aim of her evil plan: whether she had intended me to hear her question (though her disapproval of my whole existence was already obvious), or Travis's answer to it. I had bolted out the door before he had a chance to say anything back.\n\n\"Why would you ask me this?\" I said, directing my eyes to the bubbles on the surface of the water.\n\n\"Answer my question first.\" He put a finger under my chin to bring my eyes up to level with his. He knew that would make lying extremely harder for me.\n\n\"No. She didn't say anything to me, Travis.\" I didn't lie. She said it to him, not me. \n\n\"No?\" He surveyed my face for any signs of hidden information.\n\nI did my best to give him a convincing look. \"No. She didn't say a thing. She was perfectly polite.\" \n\n\"But?\"\n\nI signed annoyed. I had no desire to talk about his prejudiced mother. \"But what, Travis?\"\n\n\"Morena.\" He chided, narrowing his cunning eyes.\n\nMorena, Morena. George and Travis both could use my name like it was the worst threat in the world.\n\nI kept my understanding of his mother prejudice to myself for his own sake. That family was fragile enough. Besides, I had developed a natural immunity to those kinds of comments. When you grow up in a house with a black, very strong woman for a mother, and a German, very loving man for a father, as a child, you tend to think that's how the world works. What's so wrong about two people who love each other? \n\nI learned my lesson, though. About how the world works, about how people think, and -thanks to my mother- about not giving the slightest fuck to one's wrongful options.\n\n\"You are beautiful, Morena. You are not bellow anything or anyone. Don't you ever let yourself be put you down for being who are. Just be proud of it.\" Probably the most precious lesson my mother ever taught me.\n\nNow, at 32, remarks like Mr. Keegan's were like mosquitos bites. They itched, bothered me for a while, then they were gone and I was still me. I was still whole and her precious son still wanted every damn inch of my mixed race body.\n\n\"I don't remember much about my father.\" I began, feeling like I had to explain the whole story. This wasn't something Travis would understand easily; having never felt it on his skin. \"But I do remember people's faces when he told them I was his daughter. The same look some people give me when George introduces me as his sister. It's not just their surprise, mind you; 'Oh, but she's a mixed raced child' or \"Oh, but how can she be your your sister if she's black? She's adopted or something?'.\" I huffed, annoyed I had to explain this things yet again. \"Some people look at me like I'm not worth it, you know? Like I'm inferior. Rendered less of a person just because of my skin pigmentation. As if that alone was enough to set me apart as someone who's not good enough. You have to see it, the way people look at us in the streets sometimes. And we're rarely out together...So, no, Travis. Your mother didn't say anything to me. She didn't have to. Looks are worth more than words sometimes.\"\n\nAfraid to look at him and find that pity in his eyes that people so often thought was the right reaction to have -or wost, maybe he'd defend his mother- I proceeded to dip the fingers of my right hand into the warm water. One after the other, from the little finger to the thumb.\n\n\"Dindi?\" I looked up at him to see he was smiling that smile. The elevator smile. The smile that made me feel warm underneath. \"You know you're absolutely perfect, don't you? My mother's issues are her own. They have nothing to do with you.\"\n\nNothing to do with me, but maybe something to do with somebody?\n\n\"Travis,\" I began warily. \"Have you ever met her? Your dad's mistress?\"\n\n\"I met her once.\" He said flatly, and the expression on his face confirmed what I already suspected.\n\n\"She was black, wasn't she?\" My question made his eyes pop out. \"That is why your mother disapproves of me so greatly, isn't it? I remind her of the other woman.\"\n\nTravis's hand returned to my skin. He touched my cheek and I turned my lips into his palm, kissing it. A loud sigh left his lips before he spoke.\n\n\"It doesn't matter what she was. You're a person, not a colour. Nothing justifies my mother's behaviour.\" He focused his wide blue eyes on me in a way that made me feel like I was being lectured. \"To talk about you the way she did, when you were a guest under her roof, I-\" He stopped before he got too far, but I noticed the anger underlining his tone. \n\nTo talk about you the way she did. \n\nI tried with all of my steel not to care about his mother's nonsensical words. However unfazed and familiar you become when it comes to people's stupid misconceptions, a part of you is always upset. After all, you're being judged for simply existing as you are.\n\nAnyway, I could not stop myself from wondering what else Mr. Keegan had said to him when I was out of ear's reach? What had he said to her in return? I didn't give a fuck about the woman's old bitterness, but I did care, and a lot, about Travis's thoughts on the matter.\n\n\"What did she say to you, Travis?\" I asked, averting my gaze from the fascinating bubbles on the tub to him.\n\n\"Nothing.\" He didn't look at me when he lied.\n\nNothing. Right. He'd made me say it. Now was his turn. \n\n\"Oh, come on now, Travis. You wouldn't have asked me that if she'd said nothing.\" I doubted he'd tell me on his own accord. I'd have to push him. \"Just say it, I'm not a china doll. This kind of thing doesn't hurt me anymore. It's annoying, but not strong enough to hurt me. Just bloody say it.\"\n\nHe shook his head, avoiding eye contact. \"It's stupid, Morena. You don't have to hear it.\"\n\n\"Well, I'm asking. So just spill it.\" \n\nHe groaned and fixed his gaze somewhere above my head, before finding my eyes. \n\n\"She just asked me if we were sleeping together.\" He edited her question. The bastard.\n\nAs irritable as the omission was, I could understand him. He thought that by telling me what she had actually said he'd hurt me somehow. He didn't know I had developed a shield against this kind of thing ages go. I smiled, in spite of my annoyance. \n\nNever. He'd said when I asked him not to hurt me.\n\n\"Is that all she said, darling?\" I slid a finger down the slope his nose. \n\n\"Yes.\" He lied again.\n\n\"That's not the whole truth. She didn't use those specific words.\" The plan was not to tell him, but my resolve bursted like the soapy bubbles around us. \"I heard what she asked you, Travis.\" I confessed.\n\nHe frowned, taking in a deep breath through his nose before letting it out. Then that damned pity showed a little on its face.\n\n\"Morena, I-\"\n\n\"Honestly, Travis.\" I said, interrupting him. \"I could not give less of a fuck.\"\n\n\"I-\"\n\n\"Look, love.\" I cut him off again. \"Do you have a problem with it?\" \n\nHis eyes were the biggest pools of blue. He seemed offended I had even asked that. \"It doesn't mean a thing to me.\" He said.\n\n\"Well, then. What do I care about what your mother thinks of me? I'm not shagging her.\" I concluded, creating a smile on his perfect lips that didn't reach his eyes. \n\nMore than in what she had said to him though, I was interested in what he had said to her.\n\n\"What did you tell her when she asked if you were having some of this?\" I slid a suggestive hand down my belly and was rewarded with one of his soft laughs. \n\nHis mother must have expected him to say something that would upset me. Whyever would she ask him such a stupid thing so damn loudly? I'd bet all my money on his answer being quite agreeable to my ears, though. \n\n\"I told her yes, I was. I told her I wouldn't dare stop, and I told her I wouldn't be back home so soon.\"\n\n\"No, Travis! I don't want to be a reason for you to fight with your fam-\" I was quick to protest, but he didn't let me.\n\n\"Morena!\" There should be a rule against him calling me by my given name. \"She raised me. I only know the right from the wrong because of her. And to find out she's such a-\" He stopped himself there, not wanting to give his mother the adjective she so deservedly earned.\n\n\"Racist? That's the word you might be looking for...\" I offered not so nicely. \n\nHe nodded, looking like a boy rather than a man. He was so naive sometimes. \"Yeah. I just feel...I don't know. Disappointed, I guess.\"\n\n\"What's important it's that you are not like that, Travis. I mean...\" I glanced down suggestively at our legs, entwined and contrasting under the water. \"She raised you right.\" That was the best compliment I could give her. And I wasn't even sure her children good upbringing was due to her influence.\n\nTravis looked so much like a lost boy that my mouth moved to meet his, but I could feel he wasn't into the kiss. \n\n\"What is it?\" I had enough of this talk, already. I wanted to be done with it.\n\n\"I was thinking, Dindi.\" At least I was back to being Dindi. \"If my mother isn't the woman I thought she was, maybe my dad saw it too. That might be why he did what he did.\"\n\nTravis was a lovely man, he really was. Nevertheless, he had this boyish vulnerability; A naive wish to justify everything. He couldn't just forgive himself, or his father. He needed to come up with an excuse to do it first.\n\n\"I don't think that justifies it, Travis.\" I knew that might not be the thing he wanted to hear. But I also knew that lying didn't help anyone. \"He felt fooled, so he slept with someone else? Completely abandoned his family for 6 whole months? Why didn't he just divorce her if she wasn't the woman he thought she was? I mean, didn't he keep the other woman until his death? Instead he chose to cheat and break the whole bloody family? Ruin his relationship with you? There's no excuse for cheating. If you are with someone, then you are because you made the conscient choice to be. If you decide that you don't want them anymore, then you should just let them go so you can fuck whoever you want.\" Travis was looking at me with a funny expression. A mix of amusement and disappointment. \"Your mother might not be perfect, but she's your mother. We have both lost a parent, Travis. Are you sure you want to push away the only one you have left?\"\n\nWhen I finished I looked at him cautiously, afraid my words might have bothered him somehow. Instead I saw him eyeing me that way that made me feel like my bones were made of marshmallow. \n\n\"God, you are unbelievable.\" He put his hands on my face and drew it closer to his. \"I just tell you someone offends you and disrespects you for being you, beautiful as you are, and your reaction is to defend them?\" He laughed. \"You are just perfect.\"\n\nThe way I saw it I wasn't defending anyone, least of all his mother. More than three months into whatever it was we had, he still flattered me to the point where I felt uncomfortable. I wasn't used to this. James used to be lovingly enough, but he's always been cold. Reserved. Travis was so physical, caring, being clingy at times, always saying the sweetest things.\n\n\"Oh, I am. Let me tell you. It's exhausting, though I'm used to it. Being perfect, I mean.\" I said. Bantering was always my way of hiding discomfort. My protective shield.\n\nTravis's hands grabbed my hips and brought me closer to him. I felt his hard cock brushing the inside of my thighs. \n\n\"You know what else is perfect?\" He asked. His voice was teasing me, carrying a heavy sensuality.\n\n\"Um?\"\n\n\"Your face when I make you come.\" He said and, easy like that, made wetter than the water around us.\n\nWhatever was said to be right by his mother and society both, it didn't matter. No one I've ever met before; no man, be him black, white, yellow or whatever the fuck he was, had ever made me feel the way Travis did with just a skim of lips along my jaw.\n\n\"Well now, I love me, I love a black woman...\" I moaned-chanted in Travis's ear while his mouth was concentrated on the soft, sensible spot of my neck.\n\nHe pulled his head away and looked at me with an expression both amused and confused.\n\n\"What?\" I asked, feigning misunderstanding while I tried my hardest not to burst into laughter. \"It's Tim Buckley. I've told you I like the Buckleys, haven't I?\"\n\nHe laughed. Dear god, how I loved it when he laughed that way.\n\n\"Come here.\" He pulled me closer, then shut me up with his mouth. My body was already well accustomed to his, had molded itself to his length. When he slid his cock inside me, the motion was easier than breathing. We moved together, inciting the soap on the water to form new bubbles. His fingers got tangled in my hair, still wet with conditioner. \n\nEverything was slippery. His skin, my skin, our mouths, my pussy, his cock. I watched his face while he was inside me. The pleasure I gave him, the crease deforming his brows, the darkness invading the blue of his eyes, his parted lips; The way he used my body like a temple, pushing himself inside my warmth until my thoughts were all scattered and I lost my perception of everything else but him.\n\n****\n\n\"So you got yourself a man, Ginger Gee?\"\n\nGeorge passed me another hot dog to chop so he could make pigs in a blanket for his birthday party.\n\n\"Well, you've got Travis's Wonder Cock. So I got myself a little something to play with, too.\"\n\n\"Travis's Wonder Cock?\" I laughed, wondering where the hell he had come up with that. \"George, how the fuck do you know so much about Travis's cock? Did you sleep with him, too?\"At this point we talked about the cock in question as if it were an entity.\n\n\"Oh, I wish!\" Gee was kneading the dough meant for his hot dogs like a man on a mission. \"You'd be surprised what the girls talk about during makeup.\" He said, lifting his ruddy eyebrows.\n\nThe girls? If I were enough of a hypocrite, I'd ask Travis just how many women had he slept with, for fuck's sake. But I wouldn't want him asking me that sort of thing. So whyever should I do it to him?\n\n\"How many fucking women has he shagged, anyway?\" I asked George, throwing my hands up in mild exasperation. Not that I cared what Travis had done in his past. If anything I was glad he had so much practice. Nevertheless, I was curious. Surely, he wasn't this mind-blowingly good in bed without having lots and lots of practice with lots and lots of women.\n\n\"I might know at least a dozen.\" Gee said being actually serious.\n\n\"A dozen?\"\n\n\"Maybe more.\"\n\nFuck.\n\n\"Oh, please, don't tell me! I do not want to know!\" I screeched, then wondered just how many of those twelve women statistics allowed Gee to invite for his party. ",
        "How many there must have been to make it possible for Gee alone to know 12 of them? But then again, of course George would know so many. He and Travis moved in the same circles. And something must have started the 'Travis is a man whore' rumours. Travis was gorgeous to the point it made you embarrassed to look at him for too long. He was adorable, charming, sweet as honey, and knew just the right way to touch a woman. Plus he had those eyes that invited you to throw your undies at his face. Not to mention his job, which made him particularly interesting for models looking for a little push in theirs careers.\n\nOf course loads of women wanted him. Of course he took just as many as he could. Which begged the question: why on earth had he chosen me?\n\nBefore my mind had a chance to go deep into its wonders I chose to change the subject.\n\n\"Why are we making so many pigs in a blanket again?\" I asked George as I sliced my hundredth sausage.\n\n\"Lance loves them.\"\n\nWhile I was busy with Travis, George had met this bloke. An artist who owned a gallery somewhere in Brooklyn. His name was Lance. He was tall, black, handsome, and artsy. Precisely Gee's type.\n\n\"Lance is marvellous. Best shag of my life!\" He cooed, not hiding how mushy he was because of this Lance. \"You love him, don't you?\"\n\n\"Clearly, you do.\" I teased. Whereas I treated love like a disease, George met the love of his life every month. And every month it was a different person.\n\n\"Yes! Yes! I'm in love! Sue me! But,\" And I had to groan, because I knew what would come next. \"So are you.\"\n\nMy theory is that having a childhood best friend is the same as having your conscience personificated. It will tell you all the things you know to be true, but that you also do your best to deny in order to fool yourself. George knew every trick I had up my sleeve.\n\n\"Oh, Moony Mo.\" He said, using the nickname my father had given me when I was six years old. \"You can fool yourself, but you cannot fool me.\"\n\n\"Shut up.\" I didn't actually say I wasn't. That would be a big, fat lie.\n\n\"Oh, please, Morena. You spend most of your time impaled on his cock.\"\n\nGeorge had rightfully been complaining about never seeing me. Travis had monopolized my time. I was with him every chance I got, but he'd traveled for an editorial thingy he had to do, so I took the chance to spend more time with Gee. I still hadn't told him everything about the weekend I spent with Travis and his family. I was afraid of his reaction.\n\n\"Gee?\" He squinted his eyes, predicting by my tone of voice I had something to confess. \"I told him about James.\"\n\nJames who had broken my heart. My trust. James who had convinced me I wasn't good enough to be in a relationship with anyone. James who had told me I was incapable of loving someone the right way.\n\nGee took my hand in his flour covered ones. \"Why, Mo? You never talk about James.\" If anybody in this world knew how much that particular relationship had damaged me, that was George. \n\n\"I just,\" I hesitated. Not even I, myself, knew how Travis had pierced through my defenses. \"Travis said he didn't want us to end, and...I don't know, Gee. I know he's risky. I can't explain how he did it, but he found a way in and it feels good. I have a mental list of all the reasons why he is wrong for me, but I like him. Very much. He makes me happy, as cliche as it sounds. He's the first man to do that in seven years. That must mean something, mustn't it?\"\n\nGeorge's disapproval sigh was loud. He didn't even try to pretend he agreed with the idea that Travis was boyfriend material. According to him, Travis was meant for sex, not commitment. A boytoy, not a boyfriend. But, Travis himself had been the one to ask for commitment, not me. In every story out there the woman is the one asking for love when the man only wants sex. In our case though, he had been the one to ask me to stay while I had tried to keep our connection purely sexual.\n\n\"I won't lie to you, Mo.\" Gee said. \"If I had to choose, I would've picked a safer bloke. But I like how happy you've been. And it certainly is good to see you opening yourself up to love. I'm sure Travis will be a sensational boyfriend, because if he isn't, I'll bloody break him in half.\" \n\nOpening myself up to love?\n\nLove. Why must he use that particular verb? In my stupid mind, somewhere in its depth, I had convinced myself that not saying the word would actually change the way I felt about it. Whenever I thought about love, I thought about James saying I didn't know how to feel it. \n\nNobody understood it, because nobody had felt the pain I had felt when I had allowed myself to love. Nowadays the problem wasn't even James himself. It was me. Whenever I remembered how pathetic I had been back then; Crawling on my knees, begging him to stay, only to have him rip his engagement ring off of my finger. Never again would I allow a man to make me feel that weak and pathetic.\n\nTravis was a different person, though. In every single aspect. I shouldn't treat him based on the fears someone else had given me. This past month with him, when I had allowed myself to just enjoy him without any reservations, has been the best I've had in ages. He made feel so safe. Happy. I caught myself wondering why the fuck didn't I meet him earlier.\n\nAlthough he was a bit immature, I had to make myself remember he's never been in a real relationship in his life. Not like I had. What did he know of commitment? What did he know of being in love? Of dedicating part of his life to someone else? It was a risky business. Even so, I was willing to bet my chips on him.\n\n\"I'm afraid, Gee.\" I admitted. \"I like him so, so much. I don't know if I can trust myself with him. I'm afraid of me.\" The only reason I was able to stand on my own two feet now was because I had George. He had picked up and glued together piece by piece of my pride and dignity when James ditched me two weeks before our wedding. \n\n\"You listen here, Mo.\" He touched his forehead to mine, using his best lecturing voice. \"You are the most wonderful person in the world. Even if he hurts you, you will be fine. You're little, but you're strong. You're the girl who swung tree branches at fat little bullies to save my arse. If you want to risk it with him, even though I disapprove, I will support you. If it all turns to shit, at least you'll have had good sex.\"\n\nSometimes I thought that if I had an actual brother I wouldn't love him half as much as I did Gee.\n\n\"What would I do with my life without you, Ginger Gee?! I swear to God, sometimes you're so wise, you scare me.\" I kissed his freckled cheek, hugging him like he was a teddy bear. \"I love you more than any man in the world, you know.\" \n\n\"Ah, well. I know you cry every night knowing I'm gay. Because I'm obviously the love of your life.\" He put his long arms around me, speaking into my hair. \"But, Mo? You know you can hurt yourself just as much as he can, don't you?\"\n\n\"What do you mean?\" It wasn't the first time he said something like that to me.\n\n\"I mean, you need to let your guard down.\" He chided me, just the way a brother would his sister. \"The man is surely crazy about you, but you have to remember he's not James.\"\n\nI'm not him, Morena. Travis had told me so himself.\n\n\"I know that, Gee.\" If that was a lie, I couldn't tell if was meant for Gee or for me.\n\nWe let each other go, returning to his hot dogs. I looked up at his freckled face and couldn't help a smile. Even if my love life was shit. Even if Travis wrecked me. At least I knew I had someone who would always help me get back to my feet.\n\n****\n\n\"Oh, please!\"\n\nTravis nibbled my ear, then whispered into it. \"Come on, Dindi. Just let it go, sweetheart.\"\n\n\"Mmm...I...oh...mmm...fuck...\" I mumbled.\n\nI was kneeling on the floor by the bed. My cheek rested against the softness of the bed sheets that caressed my skin. Travis was knelt behind me, working his hips up and inward, invading me completely. Everytime he pounded his cock inside me, the force was such that my body slid up the side of the bed.\n\n\"Just come for me, baby.\" His breath was hot in my ear, his words strangled. He was losing his control. Just as close to the edge as I was.\n\nGeorge would kill me if he ever found out I was being thoroughly fucked in his room. In my defense, I had the decency of not doing it quite on his bed. He had invited half of New York for his birthday. His bedroom (and incidentally mine, too) was the only place in the entire flat that wasn't crawling with people. He had locked it up, but luckily I had a key.\n\nTravis drove his hips inward, his thick, long cock hit that dark spot in me that only he could reach. I might have moaned something. His name, maybe? Who the fuck knows. It was so fucking good, my muscles clutched him tight, as if my pussy refused to ever let him come out of it again.\n\nHis grunts were wild, animalistic. My white dress was ruined. It wasn't hot, quite the contrary, but the drops that ran down my sternum damped the fabric covering my breasts. Travis's own sweat soaked my back. Warm and decadent. He was hot and naked, whereas I had my dress bunched up around my waist.\n\n\"Mhmm...Travis...\" Shit. I was going to come. \n\nNot yet. Not yet. My mind screamed at me. \n\nI hadn't seen him in three days. Three days without feeling him inside me. I thought it funny that such a short period of time would make me so eager and hungry for him. I was in deep with this man. I wasn't this impulsive; this needy. He was ruining me.\n\nWhen he came in through the door all I could think of was how delicious he looked in his simple white t-shirt and clear jeans. Next thing I knew I was sneaking into the room, dragging him along. Then my undies were on the floor. Travis was commanding me to my knees, getting behind me, allowing me to feel his cock, hard and demanding on my ass. He quickly found my wet entrance; like my pussy was a magnet that drew him in.\n\nHe moved fast. Roughly. Ungently. A big, strong hand fisted my hair and held me in place, while the fingers of his other hand applied an extraordinary pressure to my clit. He'd been at it for such a long time I was sure his middle finger was numb, already. I hope to god my nails digging on Gee's mattress wouldn't leave ten permanent, semi circular holes in it.\n\nI felt the heat that emanated from Travis's working muscles. Even the frantic beat of his heart was pulsing against my back, in synchrony with the beat of the music playing on the other side of the door. He sank his teeth on the skin over my shoulder, thrusting in so abruptly, the air in my lungs was kicked out. \n\n\"Come on, honey. I can't wait for you...\" He said through clenched teeth.\n\nI didn't want to let go. I was doing my best to prolong it; that feeling of being full of him. Of feeling his control slipping away from his grasp, knowing that my body drove him that crazy. I was breathing deeply in and out, holding my release back. Forcing Travis to climb all the way up, until the edge, but not jump. Not yet. I wanted more.\n\nHe was merciless, though. He hammered his cock into me, making me scream loud obscenities. The noise unnoticeable to George's guests thanks to the volume and enthusiasm of their chatter.\n\n\"Oh...\" Breathing became a hard task. \n\nThe thighness down south seemed to spread upwards and clutch at my lungs, too. I pressed my damp forehead to the bed, squeezing my eyes shut when I felt my body begin to shatter around Travis. \n\nWhen his cock teased me at that right spot, it was like giving my back to an angry sea. The waves came. One after the other. Swaying my body back and forth. Even if I tried to fight it, the force of the impact was too much. It washed over me; from head to toe, originating in my center. It dismantled me. It drained away my entire being into Travis.\n\nHe grunted, loud enough to make himself heard on the other side of the closed door if not for the party. He stilled, then pushed his hips deep and slowly into me a couple of times, letting his pleasure flow inside me, as mine flowed out. I was left panting, almost sure that my body was on fire.\n\n\"Damn it, Dindi.\" \n\nTravis fell backwards, taking me with him. I landed on top of his naked chest. Opening my eyes proved to be a cumbersome task. I was still numb, feeling fluid, but somehow managed to roll off of him.\n\n\"Are you alright?\" I asked, blindly palming his broad heaving chest.\n\nHe laughed a hoarse, contagious sound. \"God, I love fucking you.\" \n\nI lay beside him and laughed too. My god, I liked him. A lot, really. And it made me so scared I laughed even harder, just to force that particular thought out of my head.\n\nWhen I caught myself, Travis was crawling up my body with one strong thigh intruding in between my legs. Big, warm hands holding my face. Thumbs wiping the tears of laughter out of my eyes.\n\n\"I missed you.\" He whispered into my lips.\n\nI felt tempted to say I missed you, too. I was going to, but I just smiled shyly, my mouth saying instead: \"Yeah, I could tell.\"\n\nThen his lips were on mine. They moved slowly, dangerously compelling my body to answer to his touch. I was exhausted, thinking I was wet to my limit, but as it always happened with Travis, I was proved wrong.\n\nJust when I was reaching down between us to bring his cock back to where it belonged, someone knocked on the door. He pulled his lips away from mine, grunting with impatience.\n\n\"IT'S OCCUPIED!\" He shouted.\n\n\"We should probably go back to the party before Gee notices we've disappeared.\" I said, avoiding his next kiss.\n\nTravis sighed heavily, kissing me one more time before getting to his feet to get dressed. My legs almost gave in under me when I tried to stand up, using the bed for support. I walked gingerly to the bathroom, where I got rid of my damp dress and wiped the slickness of Travis's cum, mixed with my own wetness, from my pussy.\n\nBack in the room, I opened a drawer on the dresser, trying to decide what to wear. George had cleared me the last drawer, so I had to bend down in order to look for clothes.\n\n\"Wow, what a view.\" Travis whistled a moment before I felt his pelvis against my exposed ass.\n\nI spun around, straightening myself, and wrapping my arms around his neck. My naked body was fully pressed to his clothed one that smelled of sweat, sex, and Travis.\n\n\"Don't be a pervert.\" I teased, standing on the tips of my toes to reach his mouth. \"We have to go back before Gee comes looking for me.\"\n\nTravis gave me one of his wicked smiles, whilst his hands were focused on testing the softness of my ass. \"Put on some clothes then, or I won't be held responsible for my actions.\"\n\n\"Oh, please, you don't have the stamina.\" I teased, biting down on my lip tentatively, and putting some distance between us before he made good on his promise. \n\nHe only smiled, watching me lecherously as I slipped into some clean panties, a pair of high-waisted jeans, and a vintage blouse. I spent every day of the week on heels and tight pencil skirts, so whenever I had a chance to wear something comfy I didn't let it pass me by.\n\nA couple of minutes later, I opened the door to face George's abominable party. Just the kind of party I loved to hate. Full of hipsters, supermodels, artsy, pretty, and pretentious people. Except that this time I didn't mind it so much. Travis was right beside me, holding my hand.\n\n****\n\nTravis, as it happened, knew George's new boyfriend, Lance. They had gone to NYU together. I left the two of them reminiscing old college times and went in search of Gee. I found him talking to some very tall and skinny girls.\n\n\"Hey, you.\" He hugged me when I reached him. \"Girls, this is my sister. Morena.\" He introduced me to the two girls who could only be models from the looks of them. \n\n\"Hello.\" I said.\n\n\"Mo, this is Carla.\" Gee gestured to an absolutely stunning brunet, who gave me a sweet smile. \"And this is Anissa.\" The other one was a leggy blond who looked like she had sucked on a lemon. She gave me what I knew to be the most arrogant, forced smile of her life. \n\nWhatever bug was up her arse...\n\n\"It's lovely to meet you.\" I said for social conversation's sake.\n\n\"George is always talking about you, Morena.\" The brunet, Carla, said. She was clearly Italian, judging by her accent.\n\n\"Good things, if he knows what's good for him.\" \n\n\"Of course.\" She laughed.\n\nThe other one, the moody blond, was looking around, as if looking for someone. I was about to ask Carla which part of Italy she was from when Anissa spoke.\n\n\"Are you here with Travis?\" She asked me, out of the blue.\n\nI stared at her open mouthed. Her barely there accent sounded Scandinavian or something like that. I didn't like the way she said his name. Not at all. There was a familiarity in there that bothered me. Why did she want to know if I was with him? Too much interest for my liking.\n\n\"Actually, I'm here, because I live here. And Travis is here, because I'm his girlfriend.\" I sounded ruder than I had intended to be. That was the first time I called myself Travis's girlfriend out loud. Ah, did it feel good to say it.\n\nShe laughed. She straight out laughed. It was an annoying, rehearsed sound. She even threw her head back, the way she would if she were being photographed for the cover of fucking Vogue.\n\n\"That's so funny.\" She said, still recovering from her laughter.\n\nWhat the fuck is wrong with the skinny tart?\n\nAdrenaline kicked in, turning my first instinct into an urge to punch her in her perfect nose. The blood in my veins warmed up and it reached my cheeks. Indignation, and a certain degree of anger as well, were the feelings moving my tongue and opening my mouth to give her a piece of my mind. George was faster than I, though. He squeezed my shoulder, saying in our silent language 'Let me handle this.' \n\n\"Oh, god, Nissa!\" He clapped his hands together ironically, using a voice heavy with affectation. \"I thought so, too! It's super funny, isn't it? Who would have thought that Travis would finally fall in love? But, you know, the credit is all Mo's. She's brilliant. How could he resist her? You would've thought he'd date another bimbo like the ones he's used to, but no. It took a great girl like Mo here to make him finally settle down.\"\n\nAs a rule, I never bickered with other women over men. One of the very important lessons my mother had taught me. \"Never fight another woman over a man, darling. They're the ones who must fight for us.\" She'd said. \n\nGeorge doing it was another story.\n\nIt was obvious on Anissa's face she wanted to dig her fake nails into Gee's eyeballs. The woman was flushed with anger, her mouth formed a perfect indignated O. I was just waiting for her to make a move towards him to let her know just how sharp my own nails were. \n\nTravis, like an actor on a play, chose that very moment to make an entrance. He slid one long arm around my waist. \n\n\"Here you are.\" He whispered into my ear causing me to shiver slightly.\n\nGeorge's grin was so wide and satisfied I was afraid he might split his lips. He gave the Anissa woman a smug look, lifting one rudy eyebrow that said See, bitch?\n\n\"We were just talking about you, Travis!\" Gee said, wrapping himself on Lance's arm, who had just joined our little group.\n\n\"Do I even want to know?\" Travis asked George, smiling his panty wetter smile.\n\nAnissa was the one who answered, though. \"We were just talking about how funny it is that you're in love with Morena.\" \n\nEveryone in the circle fell silent. The awkwardness that polluted the air around us was almost tangible. Travis, to that point, hadn't acknowledged Anissa's presence. When he looked at her, his expression was a hybrid of surprise and discomfort.",
        "\"Hello, Travis.\" She said, rolling his name around her tongue like she would her favorite hard candy.\n\nHe dug his fingers on my hip. An angry reflex. \n\n\"Anissa.\" He said dryly. \n\nOnly then did I completely understand what was really happening, looking between the two of them. Anissa's absent attempt in hiding her familiarity with Travis, and his obvious discomfort around her. \n\nShe was one of the twelve. They had slept together. Obviously. \n\nIt was clear as day for all around them to see it. And she didn't seem to make any kind of effort to hide the fact they knew each other well. George's irony was explained as well. He knew of her history with Travis. Apparently everyone knew. Everyone, but me. The thing is, I was used to being the smartest girl in class.\n\n\"You two know each other?\" I asked Anissa, doing my very best to sound casual, joyful even. I clasped my fingers and Travis's together to assure him everything was fine where he and I were concerned.\n\nThe way people worked, I expected her to say a simple 'yes' to which I would mutter an uninterested 'how nice' and then haul Travis away from there. To everyone's utter surprise, though, her answer was much more elaborate.\n\n\"We used to sleep together.\" She said it the way she'd tell the time. \n\nTravis's grip on my hand was hard enough to crack my knuckles. I heard George gasp. Lance's eyes almost jumped out of their orbits. Carla choked on her drink. And I laughed. Loudly. Heartedly.\n\nAnissa's intention was to shock. Clearly, she had succeeded in that. Not quite where I was concerned, though. So that was Travis's past? I had imagined worst. I expected worst. If jealous, insecure, and angry ex-girlfriends were all I had to deal with, I'd be fine.\n\nAll five pairs of eyes in the circle were on me. They probably thought I was crazy. Anissa most of all. I had not the time, nor the age to deal with this shit. I wasn't about to fight her over Travis. Why should I? What was the point? He was by my side. Holding my hand. She was the past. Behind him. Taking in consideration the way he looked at her, he thought the same.\n\n\"Anissa, that's you name, yeah?\" I said, catching my breath, and using Travis's body for support. I didn't really need it, but it didn't hurt to use it, either. \"If you've slept with this man, then I'm sure you've had quite a marvellous time. Between the two of us,\" At this, I leaned conspiratorially towards her, the way I would if we were best friends sharing a secret. \"He is quite good, isn't he? George actually calls it Travis's Wonder Cock. Luckily for me, I get it regularly and exclusively, being his girlfriend and all.\" \n\nMy mother would have to forgive me. I was way too old to be picking fights over men. But certainly not old enough to listen to such affrontery and be quiet about it.\n\nSilence stretched for a few seconds, then George's British villain laughter erupted. Anissa's eyes were wide as saucers, just as red as the rest of her face. I suddenly felt a bit bad for embarrassing the girl. But then again, she could've chosen to be quiet. Poor Anissa. What had Travis's charm done to her?\n\nLike a fish, she opened and closed her mouth, only huffing and puffing instead of saying any actual words. I thought she'd say something nasty, but she only glared daggers at me, then turned her back to us, marching away. She barely took three steps in the other direction when the whole group started laughing.\n\n\"Fuck, Mo!\" George hugged me. \"That was bloody brilliant!\"\n\n\"You can never tell mom, though!\" I said, laughing so hard tears actually ran down my face. \"She'd kill me!\"\n\nWhen George let me go I risked a glance at Travis. He was rubbing his fingers on his forehead, looking a bit disconcerted, but laughing softly, nonetheless.\n\n\"So you're my girlfriend, uh?\" He said to me.\n\nI wrapped my arms around his middle, tilting my head back to look him in the eyes. \n\n\"Of course I am, silly. I thought that was quite obvious already.\" If he still had any doubts I meant it when I said I'd stay with him, I hoped they had vanished that very minute.\n\n\"It is.\" His smile when he spoke made it unclear which one of us liked the little word more. I stood on the tips of my toes and he bent his body down so he could kiss me.\n\n\"Oh, get a room!\" I vaguely registered George's voice, consumed as I was by Travis' mouth on mine.\n\nI pulled away from him with the will an alcoholic leaves the bar.\n\n\"What did you do to the poor woman, anyway?\" The question wasn't a serious one, even though I was dying to know what exactly had happened between the two of them.\n\n\"Come here.\" Travis took my hand and lead me to a sofa in the far corner of Gee's living room, where we sat down. \n\nAfter almost four months with him, I already knew how he behaved when he was about to tell me something he deemed unpleasant for my ears.\n\n\"About Anissa.\" He began.\n\n\"No, Travis. I was just kidding. You don't have to explain-\" I interrupted him.\n\n\"No, Morena. Let me.\" He interrupted me back.\n\nHis blue, piercing gaze was fixed on me. He looked serious enough to convince me to be quiet and listen to him.\n\n\"Go on, then.\" I said, putting that wayward strand of hair behind his ear.\n\n\"She's right. We used to sleep together.\" He confirmed Anissa's statement, sighing heavily. \"We used to do it every time she was in town. I met her at this party years ago. She knew who I was, so she threw herself at me and...Well, I'm only human.\" He sounded apologetic. The woman wasn't very nice, but she was drop dead gorgeous. \"We had a fling. Nothing serious. Strictly sex. I ended it about a year ago when she decided to trade the sex for magazine covers.\"\n\nSo he had ditched her. No wonder she was so bitter.\n\nHell hath no fury like a woman scorned.\n\n\"For how long exactly did you two had a fling?\" Considering the way Anissa had reacted, she still nurtured some feelings for Travis. Whether those feelings were the love or the hate kind, I didn't know. Regardless of their category though, it was obvious she still wanted him. \n\nWho was I to blame her for that, poor thing.\n\n\"Four years.\" Travis looked a bit embarrassed to admit that.\n\nFuck me. That was a long time. I'd be lying if I said it didn't bother me a little, even though I knew that I was being irrational. I had nor the reason nor the right to be bothered. I didn't even know him back then. He didn't own me any explanation regarding his past behaviors. I only cared for his current actions. The idea of Anissa's hands on him, though...\n\n\"Travis. It doesn't really matter to me what you did, or with whom you did it.\" I brought his face closer to mine with my hands and touched my lips to his. \"Besides, I knew you weren't a virgin when I met you.\" That made him smile and, as always, I got that fluttering feeling in my stomach knowing I was causing it. \"I only care what you do now.\"\n\n\"Now, all I do is you. Only you.\" He said, and the sweet smile in his mouth didn't match the malice in his eyes.\n\n\"So what do you say you do me now, uh?\" \n\nWe were back inside the room in a flash, not minding who would notice our absence this time.\n\n****\n\nWhen we reemerged, a good couple of hours later, roughly twenty people still lingered at the party. Most of them drunk, or still trying to get there. \n\nGee was unashamedly making out with Lance on the nearest couch. \n\n\"Oh, please. Not on my favorite couch.\" George removed his hands from a very embarrassed Lance.\n\n\"Fuck off, Mo. Don't you think I know what you two were doing in there? Naughty Mo.\" He pouted his swollen, freckled lips, eyeing the door of his room with a knowing grin. \"Better change my sheets.\" \n\n\"Technically it's my room, too.\" I gave his shin a playful kick. \"And I didn't use your bed, George! I'm that considerate.\"\n\nGee was drunk, that much was evident. He was crimson red, which was considerably redder than usual. I could smell his vodka breath from a mile away. On Top of that, his face was pasty, and his eyes heavy lidded.\n\n\"I'm walking Travis to the subway station. Be nice and say goodbye to him.\" \n\nWith great effort, and a little help from Lance, Gee got to his feet and threw his arms around Travis's neck. \n\n\"Hey, mate.\" I'm sure he meant to whisper into Travis's ear, but drunk as he was, he yelled more than anything else. \"If you hurt my sister, I'll rip out your balls and put them in jar for public display, no matter how pretty you are.\" When his threat was made clear, George returned to his spot on the sofa, under Lance's arm. \n\nTravis chuckled awkwardly. \"I wouldn't dare do that, George.\"\n\nI believed that. It scared me senseless, but I had to admit Travis hadn't really done anything to disappoint me, or make me distrust him. Every doubt, every reservation came from me. My baggage. My past. It wasn't fair of me to make him pay the price for someone else's mistake. He was lovely. He was my boyfriend. If I was happy as a daisy lately, the fault was all his.\n\n\"Alright. Be back in a bit.\" I said, walking with Travis to the door.\n\nThe boys said their goodbyes, and George resumed his attempts to fit Lance's entire head inside his mouth before I had closed the door completely.\n\n\"Dindi, did you start looking at apartments yet?\" Travis asked me as we climbed down the stairs. \n\nI had mentioned a couple of weeks ago that I needed to find myself a place to live to give Gee the privacy he deserved. Even if he told me I could stay forever. \n\n\"No. Not really. Why?\" I asked him cautiously. He wasn't going to propose what I thought he was going to propose, was he?\n\nDon't, Travis. It's too soon. Way too soon.\n\nHe must have seen the apprehension on my face, because his lips just quirked into a sad smile.\n\n\"No reason. Just wondering if you needed help with that.\" \n\nI tried not to look so relieved. Of course I had serious feelings for him, but we had been too fast since the beginning of this thing between us. If I were to get accustomed to the idea of having a boyfriend after seven years of avoiding one, he'd have to be patient with me.\n\n\"Oh, that'd be lovely. You could help me avoid the dodgy neighborhoods.\" He had this lost puppy dog look on that turned me into mush. \"I'd like somewhere halfway between here and your place so you and Gee don't get jealous of each other.\" I added\n\nWhen I opened the building door and the air hit me, I shivered. The end of the summer was bringing some chilly nights with it.\n\n\"Agh! It's cold!\" I hugged myself, cursing under my breath for not grabbing a coat. Travis was already shrugging out of his. \"No, no! I'll go back and grab a jacket.\" I rushed up the stairs before he could insist with me.\n\nGeorge didn't even notice when I came in. He was way too busy almost fucking his boyfriend in the living room, live, for his remaining guests to see. I entered the bedroom, searching the closet for my leather jacket. Since I was already inside I took the opportunity to pee and check my hair in the bathroom mirror. I took my time, applying some balm to my lips. All the kissing combined with my nervous biting weren't doing them any favours. \n\nWhen I was done, I put on my jacket, then ran down the stairs again. Travis was nowhere in sight, so I figured he must have stepped out of the building. I pushed the door open, glancing both ways, searching for him. Most of Gee's guests were still outside, probably on account of the bar next door. Some of them were smoking, some others making out in dark corners...\n\nThat was when my eyes landed on Travis. \n\nI recognized his profile. The chiseled jawline, the beard, his man bun on top of the blond head. He had his back pressed against the wall, and Anissa's body was pressed against his. \n\nShe was kissing him. \n\nAnd he was kissing her. \n\nHe won't hurt me. I won't let him.\n\nBut how was I to control that?\n\n****\n\nEverything that happened after my brain registered the fact that Annisa's lips were on Travis's felt like a surreal fiction movie. How could it be real when he had promised me he wouldn't hurt me? How could it? Why did breathing hurt so much?\n\nMy legs moved on their own, taking me up the stairs. I pushed Gee's door open and immediately fell on the floor, feeling stupidly weak all of a sudden.\n\n\"Mo!\" Gee was by my side in a flash. \"What's wrong? Why are you crying? Where the bloody hell is Travis?\"\n\nI didn't register most of his words. All I had in my mind was the image of Anissa's body pressed to Travis's.\n\nHow stupid I was. I knew it. I fucking knew it. \n\n\"Knew what, Mo?\" I didn't think I had said that out loud. \"What the fuck did he do to you?\" Gee grabbed my shoulders, shaking me out of my trance until I brought my blurry eyes up to his.\n\n\"Anissa.\" Was all I managed to say. Enough for Gee to understand.\n\nHe helped me up and led me to the couch. I didn't want to sit, though. I needed to stand. I needed to feel something solid and real under my feet. \n\n\"I'm going to fucking kill him!\" Gee screamed menacingly. \n\nLance walked towards the door and opened it. I didn't even hear any knocks. \n\nTravis didn't immediately see me. But when he did, he knew what was wrong. He pushed past Lance and marched my way, his expression determined. \n\nI'm sorry. He was going to say. \n\nSorry. Why do people think that word solves anything?\n\nGeorge's tall body shielded me from Travis. I heard screams, and knew they were fighting, although it was all soundless to me. Tears were falling down my face in such a constant stream I felt them run down the valley in between my breasts.\n\n\"You can't feel things properly, Morena. You don't know the right way to love somebody. How can you expect me to marry a woman whose priority won't be me?\" James's voice was echoing in my mind. \n\n\"I won't hurt you, Dindi.\" Travis had promised. He had promised me he wouldn't. \n\nThen why had he? Why? \n\n\"George?\" He didn't hear my voice, it drowned amid his yelling. \"George?\" I called again, touching his back. He turned to me, allowing Travis to come into my view. \n\nI fixed my gaze on an invisible spot on his white t-shirt. I didn't have the strength to look him in the eyes. Eyes that reminded me of my father. \n\n\"Can you...\" I swallowed back tears that wouldn't let me speak. \"Can you...let me ...talk... to him?\"\n\nWhen I was little I had very bad asthma. It worsened when my father died, only getting better when I was well into my teens. Still, whenever I got too emotional, the worst aspects of it came back. The shortness of breath, the inability to speak, the tightening in my chest, and the awful desperation that followed such feelings. The last time it happened had been seven years ago. When James pulled his ring out of from my reluctant finger.\n\n\"Mo-\"\n\n\"Ple-Please?\" I managed to bring my eyes up to George's. He was flushed to his limit, several veins on his face were bulging. He sucked in his bottom lip, frowning his red brows. \"Please?\" I mouthed.\n\nGee simply nodded and stepped out of Travis's way, turning his attention to the people who, for some reason, hadn't left yet.\n\n\"Alright! Everyone, out! Party is over!\" He yelled, ordering people out the door. \"I'll be right outside, Mo.\" He said, then left himself, dragging Lance out with him.\n\nI still didn't look at Travis. Not even when he stepped my direction. I only stepped back, away from him until my shoulder blades hit a wall. The movement seemed almost like a natural reflex of my body. A protective mechanism.\n\n\"Do-\" I held my hands up to keep him away. \"Do n-not to-touch me!\" I struggled to say. \n\nWith my eyes still fixed on his chest I tried desperately to take gulps of air in. Travis's chest heaved, while I was beginning to feel dizzy with the lack of air in my blood.\n\n\"Y-you pr-promised me.\" Never in my life had I felt so much like an idiot. So stupid, so silly. I should've known better. I knew better! Why didn't I listen to myself? \n\n\"Dindi.\" He said, coming dangerously closer to me.\n\n\"Don't you fucking call me that!\" This time my voice came out in full. All the residual air I had inside my lungs was wasted in that outburst.\n\nI slid down the wall, until I hit the ground. I was panting, clutching at the pendant on my neck with such force, I broke the golden chain. I gasped in vain, the air refused to flow inside my body. I couldn't see anything. Everything was a blur as more tears than I could handle ran down my face and neck. \n\nA wrenching feeling tore at my chest. It was a physical pain. My lungs were rebelling against their own stubbornness. It was also the kind of pain that wasn't entirely literal, but became so when the body was too overwhelmed by it.\n\nThe sudden hate that invaded me was confusing. I didn't know whether to hate Travis or myself more. I hated him for lying to me, using me, and doing just what he'd promised not to do. I hated for myself for being so weak, for sinking to the ground and allowing him to see the power he had over me. \n\nI didn't even have the strength to fight him when he touched me. As unaware of my surroundings as I starting to be, I could feel, more than see, his desperation. He touched my face, lifting my blurry eyes to his, speaking words that didn't reach my ears. All I wished was to have the capacity to push him away.\n\n\"I-\" I tried to speak, but I couldn't. I only wheezed.\n\nMy vision was blackening, my limbs felt heavy and light at the same time. My whole body was surrendering to the deprivation of oxygen. Travis's touch on my skin felt as light as a feather brushing against it. He shook me, screaming words at me as I felt myself drifting away, welcoming the feeling. \n\nJust when I thought I'd pass out and be rid of all the terrible sensations coursing through my body; my inhaler was there and I sucked a huge gulp of air from it. Relief isn't enough a word to describe how I felt. I took another, and another, and another mouthful of air from the inhaler until I was gasping, but breathing on my own. My world slowly shifting back into focus.\n\nMy eyes were closed, my head resting against someone's chest. My hands fisted into the fabric of a shirt. Initially, I thought it was George, then, as my breathing normalized, Travis's scent triggered the recognition area of my brain. I jerked away from him abruptly, my back hitting the wall again. \n\n\"Morena, please.\" His voice was so tortured, carrying so much hurt. \n\nIn that moment, I allowed my eyes to meet his. I realized what a mistake it was as soon as I took in his expression. His eyes, under furrowed brows, were red, contrasting badly with the blue, which was dark, like a stormy sea. His mouth was set in a hard line. He looked at me expectantly, with pain marring his face, making it ugly.\n\n\"You said you wouldn't hurt me. You promised you wouldn't hurt me, Travis.\" My voice was husky, small. It made me sound weak, little and I hated it. I hated him. \n\n\"Morena, listen to me, I-\" He spoke nervously, reaching a hand towards me. I winced, shrinking away from his touch. \n\nWhat I wouldn't give to be able to at least put on a strong front so he wouldn't see me in this disgusting state. I noticed, belatedly, that his lips were stained with her lipstick. Lips that had been on mine minutes ago. Lips that had tasted every possible curve of my body.\n\n\"Go away, Travis.\" I knew that I had to talk to him eventually. It didn't have to be now, though.\n\n\"Morena, please, don't do this.\" He pleaded, reaching a hand to me once again.\n\n\"NO!\" I screamed, disturbing the new balance in my breathing.\n\n\"Just fucking leave, mate.\" George's voice commanded. I didn't even notice he'd returned. \n\nTravis ignored George, giving me one last pleading look, mouthing \"Please\", but I just shook my head, averting my eyes from his. \n\nHe lingered for a few more minutes, then he got to his feet, defeated. \"Please call me when you're ready to talk.\" He said. His voice strangely nasal.",
        "I didn't know whether that was a question or not, so I chose not to answer. I simply wanted him to leave.\n\nGeorge said something to Travis I couldn't quite make out. Next thing I knew I heard the door being locked and George was carrying me to bed and lying behind me. \n\n\"Do you want to talk, Mo?\" He asked. \n\n\"No.\" I croaked.\n\nI only wanted to forget. Forget Travis existed. Forget I had trusted him. Forget I was in love with him already. Forget it had taken me seven years to finally start to let someone in again just to be dealt such a blow. \n\nIt was a curse, but if there was something I could do, it was rationalize things. In my case, that was by far a very bad thing. Even in the state I was in, my mind was working, that internal voice whispering to me: \n\nHe came to Gee's party. Where you live. He was nothing but wonderful all night long. He sweetly explained his past relationship with Anissa even after you had told him it didn't matter to you. Then a minute later he was outside kissing her? A woman who earlier, barely acknowledged by him, had tried her best to spite you? Where is the sense in that, Morena? Why would he try to talk or explain himself if he cared that little?\n\nSo I knew I had to listen to him. Just listen. Let him explain himself. Nevertheless, whether he did explain it or not, it didn't matter a thing. That kiss was all the excuse I needed. I was back behind my wall, where nobody could ever hurt me again.\n\n****\n\nTRAVIS\n\nDindi ran up the stairs to get her coat. I stayed behind, chewing on the thought I had swirling around in my head since the first time she told me she wanted to rent a place for herself. I'd almost said it. Move in with me.\n\nShe pretty much did live with me already. She was at my place all the time. Still, it was too soon. I knew it was. But the thought had been there, after almost four months together. Had it been any other woman, any of the women who came before her, in four months I'd be bored out of my mind. With Dindi? I seemed to want her more everyday. \n\nShe was an unbelievable woman. My favorite thing about her was, by far, the way she made me feel without even trying, just by being who she was. I felt like everything was right in the world. Like I was right. You're in love, Travis. That's what this is. My sister had said, scaring the shit out of me. But was I? How could I know it? Name a feeling I never experienced before? Morena had felt it. She'd been in love. She'd been heartbroken. It showed in her. The way she seemed to guard herself against anything she thought might hurt her. Including me. \n\nWhen Anissa had the nerve to say the things she had in front of Morena...Christ! I could've have murdered her. Dindi, though, proving herself the confident woman I knew her to be, handled the situation beautifully. \n\nHowever, this fear she'd run from me soon wouldn't leave me alone. The situation with my mother had been bad enough. From what Morena told me she'd heard my mother's idiotic question but not my answer. Not my real answer, or the argument that followed it. My reply was more elaborated than the one I had reported to her. 'I won't leave her. I love her.' I had said to my mother. The exact same words she'd heard from my father years ago. \n\nThere was no doubt in my mind -or any other part of me, for that matter- that I was in love with Morena. At some unexpected moment I'd tell her that. Tell her she had me head over heels. God only knew how the fuck that had happened. Some months ago she was the object of my lust -like so many others before her. Now she was all I needed, or wanted. And the lust was all the bigger for it.\n\nAnissa's public confession had both scared me, and enraged me out of my mind. I thought maybe that would make Morena rethink her decision to be with me. But then she'd said it, out loud. She said she was my girlfriend. My girlfriend. When was the last time a woman accurately called herself my girlfriend? Maybe college? Some fifteen years ago? A girl whose name I barely remembered? Anyway, that had only lasted for a mere month.\n\nMorena avoided relationships afraid of the pain the involvement could cause her. I, on the other hand, avoided it because...I guess I just didn't think I was that kind of guy. It was easy enough to find someone willing to have sex with me. A serious relationship? Sure, I've had some women who had wanted that. It just wasn't reciprocal. I never found myself wanting to be in a steady relationship. I didn't really think I had enough to give to someone else. Being responsible for my own life was enough of a challenge, already. I didn't want to feel obligated to do anything for someone else and risk disappointing them.\n\nI wasn't sure I knew how to deal with all the responsibilities a relationship entails. First you meet someone, then you -presumably- fall in love, you move in together, then in a couple of years things start to get more serious. Comes the talk about the future, marriage, kids...Real adult life kicks in.\n\nWhat I didn't understand before I met Dindi was that; when you find someone you truly want to be with, you will gladly do things for them, plan a future with them. Because making them happy, makes you happy. Did that mean I was in love with her, then? Saying the word was one thing, but I was no suitable judge of the feeling. All I knew was that I had never felt like this before. About anyone. I also knew how much love could hurt. Like it did my mother, and Morena herself.\n\nLost in my head, I had wondered outside the building. George was fortunate enough to live next to a bar, and most of the guests who'd left the party were still hanging around in front of the door, holding drinks. The weather was beginning to change, and it was cold enough that I buttoned up my coat.\n\n\"Travis.\" A voice called and I immediately froze. \n\nFuck.\n\nI spun around to see Anissa leaning lazily against the wall. \n\n\"Anissa.\" I muttered uninterested, then diverted my attention away from her.\n\n\"So,\" She moved towards me when all I wanted in the world was to run away from her. Anissa had been one of those mistakes that make you wonder what you should regret more. The mistake itself, or how much you regret it. \"You have a girlfriend, now.\" She said so close to me I felt her hot alcohol breath in my ear. I took a step to the side.\n\n\"I do.\" Was all I said.\n\n\"I remember you saying you didn't date.\" \n\nNot you. I said silently in my head.\n\n\"Well, I do now.\" Was what I actually said out loud.\n\nWhere the fuck was Morena?\n\n\"Yes, I can see that.\" She said, then fell silent. I was about to leave, thanking the heavens she could take a hint and see I had no desire to talk to her when she spoke again. \"That was the best you could do?\" \n\nI was already walking back inside the building, but then turned to see her blowing a puff of smoke from the cigarette she had just lit.\n\n\"What the fuck did you just say?\" I narrowed my eyes, hoping she could see my displeased scowl in the dimly illuminated sidewalk. \n\n\"Oh, come on, honey. We both know you could do better.\" She blew a circle of smoke in the air, smiling one of her feigned feline smiles.\n\nI started to walk away. That being the only thing I could do to keep my temper from getting the best of me. \n\n\"Where are you going?\" Anissa grabbed my arm, but I jerked it away from her hold. \n\n\"Look, Anissa.\" I said, holding my hands up. \"You and I. We have nothing to talk about.\" \n\nShe laughed a forged, ironical sound that disturbed my ears. \n\nHad I ever liked that? Had I ever liked her at all? \n\n\"Oh, Travis, please. You can't honestly tell me you're content with that.\" Once again, I turned my back to her before I forgot she was a woman. And again, she tried to stop me with a hand on my arm. \n\nI whirled around, grabbing her wrist with one firm hand. She winced, and I let go, catching some curious eyes turning our direction. \n\nGreat. All I needed now was people thinking I was a woman hitter.\n\n\"Fuck off, Anissa.\" I spit at her.\n\n\"What? Are you in love with her or something?\" Her cynical smile when she spoke made that seem like the world's most improbable possibility.\n\n\"Yeah, I am. I love her.\" I said it without even thinking. Even if it was just to get Anissa out of my way, it was the truth.\n\nGod! What was taking Morena so fucking long?\n\n\"Yeah, but is she good to you?\" She stepped closer to me, I stepped back. \"Does she do it the way I did it? The way you like it?\" The nicotine on her breath hit my face making me flinch. \n\nMy back was already against a wall I didn't know was behind me. I tried stepping sideways, but she followed me, anticipating my movement. The tip of her cigarette blinked as she took a drag, before throwing the stub at the pavement.\n\nThe last drop of patience I still had left my body. I was about to forget my gentleman like manners when Anissa threw her body flush against mine.\n\nMy brain needed a second to register the fact that she was kissing me. The bitter taste of her cigarette invaded my mouth, awakening something disgusted inside me. I pushed her away so abruptly, she stumbled and fell backwards on the sidewalk. I wiped my mouth with the back of my hand, seeing red.\n\nFuck.\n\nFuck. \n\nFuck.\n\nWhy the fuck didn't I wait for Morena inside?\n\nI didn't stay to check on Anissa. I didn't give a shit about her. I spit on the ground before going back inside the building, but the damn taste of nicotine was impossible to get rid of. \n\nFuck.\n\nMy body was suddenly disgusting to myself. What the hell was Anissa's problem? I should've stayed inside. I should've gone back inside the second I saw her.\n\nMorena wasn't back yet so I went up to see what was taking her so long. My hand hovered over the door before I knocked, though. How was I going to explain what had just happened with Anissa? Would she believe me? Would she forgive me? Should I really tell her? God, it'd hurt her so much.\n\nI finally knocked and Lance opened the door. He had a strange look on his face, and I opened my mouth to ask him what was the matter when my eyes found her behind him, standing in the center of the living room, beside George. \n\nI'll never forget the look on her face. Nor will I ever forgive myself for it. \n\nNot that she had much of a reaction. She just stood perfectly still, lowering her eyes as tears fell down her neck. However, all the pain I'd caused was clear. She'd seen it. She'd seen Anissa kiss me. I saw the hurt that marred her beautiful face. \n\nGod, what the fuck have I done?\n\nI pushed blindly past Lance and went straight for Morena like a bull charges for its teaser waving a red flag, but George blocked my way.\n\n\"Don't you fucking dare come near her, you fucking prick!\" In all the time I've known George I could never have imagined he could look so menacing.\n\n\"George, please. I can explain. Just let me talk to her, for Christ's sake!\" I defended myself, trying desperately to make him understand it wasn't my fault. It wasn't. I would never dare hurt her. \"Morena?\" I called, trying to catch her attention. She didn't seem to hear me, I couldn't see her face, but it was obvious she wasn't even moving. \n\n\"George, please. I need to talk to her.\" I pleaded with him. I tried to reach her, and every move I made towards her was frustrated by George's body getting in my way. \"Fuck! Come on, man!\"\n\n\"Look mate, you should leave.\" He said, holding his hands up. \"Fucking leave before I-\"\n\n\"George, this is between Morena and I. Just-\" \n\n\"Between you and her!? George's voice went up several decibels. \"I bloody knew you'd hurt her! I fucking knew it! You better get the fuck out of here before I-\"\n\n\"George?\" Morena's voice was low and weepy coming from behind him. He didn't seem to hear it.\n\n\"...fucking smash your face...\" He continued throwing threats at me, then stopped when he finally heard her calling him. He turned his back to me, allowing my eyes to settle on her for a flash of a moment.\n\nShe didn't look at my face. Her eyes were down, empty and puffy. Her tears were flowing down so intensely even her neck seemed to be soaked wet. \n\n\"Can you...\" She sounded breathless, struggling to speak. \"Can you...let me...talk...to him?\" She wanted to talk to me. My relief was such I almost sank to my knees.\n\n\"Mo-\" George obviously didn't think that was a good idea.\n\n\"Ple-Please?\" She stammered. \n\nIf I could punch myself I would've. Weeks ago she had stood before me, told me all about how that James guy had hurt her and made me promise I wouldn't do the same. Now here I was. The reason for the pain and unhappiness that consumed her. \n\nHowever, here was something I could explain. I fucked it all up, yes. But I could explain myself. Here was a mistake I wasn't entirely to blame for.\n\nGeorge moved away from her, not without darting me a warning look before he ushered out the people still inside his apartment watching everything with acute interest.\n\nPeople started to leave with reluctance, and George himself left too. He took Lance by the arm and led him out the door. \n\n\"I'll be right outside, Mo.\" He said, closing the door after himself.\n\nOnce I was alone with Morena, the words were on the tip of my tongue. I'm sorry. She winced as I stepped towards her, retreating until a wall behind her back stopped her. To see her avoiding me like that...I prefered a punch in the face from George. \n\n\"Do-\" She put her hands in front of her, as if to defend herself from me. \"Do n-not to-touch me!\" \n\nShe wheezed and tried to breath, having little success at it. It seemed to me she was having an asthma attack or something like that. That was the moment when I began to feel desperate. All I wanted in the world was to touch her, but she pressed herself to the wall to put as much distance between us as she could. I felt like the great shit I've always known I was.\n\n\"Y-You pr-promised me.\" She still didn't look at me. She had her eyes purposely fixed on my chest as she gasped for air. \n\nIf only she'd let me explain myself. I hadn't broken my promise. I would never dare to.\n\nShe appeared to be so little, so fragile, retreating into herself. My god, I've never wanted to hug her so much. Somehow I knew she wouldn't let me touch her. I didn't deserve to, but I tried anyway.\n\n\"Dindi.\" I pleaded, advancing towards her. \n\n\"Don't you fucking call me that!\" Her reaction was so raw, so sudden I put a feet behind me involuntarily. \n\nThen she crumbled down. Her back slid down the wall until she landed on the floor, slumpy. She panted, gasped, wheezed, made desperate ugly noises in her throat, increasing my own anguish with every sound. She clutched at her pendant and the golden chain snapped, sliding from her neck into her hand. \n\nHer reaction scared me more than anything. I moved towards her, dropping to my knees in front of her, trying to figured out what I could do to help her. She was crying so hard I doubted she could she clearly. I wanted to lend the air I had in my lungs to her. She was as desperate as I felt, fisting my shirt in her hands, opening her mouth to urge in the air that refused to help her. I held her face in my hands, miserably imploring her for a clue of what to do.\n\n\"I-\" She opened her mouth, trying to speak, but only a hissing sound escaped her throat.\n\nI was going insane. I felt her frail body going limp in my arms. \"What do I do, Dindi? How do I help you for god's sake! Tell me what the fuck to do!\" I shook her lightly in an attempt to keep her eyes from closing.\n\nWithout warning, hot tears ran down my face as well. I couldn't tell what the fuck they were for. If fear, anger, self loathing, sheer fear or desperation.\n\nWhat do I do?\n\nShe opened her mouth, whether to speak or fight for air, I couldn't tell. I saw her eyelids become heavy, her head lolled towards her chest as her struggle for air was being replaced by a gradual silence. \n\nThen a thought came to me: If she had asthma she probably carried an inhaler nearby. I ran to her room, searching hastily for her bag, then scattered its contents on the bed, praying I'd find the damn inhaler. \n\nPlease, let her have one of those things in her bag. Please.\n\nI found the little red thing, and in a flash, I was back by her side, urging her to take a breath out of it. Blindly, she reached for it like a thirsty man would a bottle of water in the desert. She pushed in one, two, four mouthfuls of air from the inhaler. She gasped, breathing, raggedly, but on her own.\n\nI pulled her to my chest and she settled into it, breathing with more easiness as the minutes went by. If five, ten, thirty minutes passed, I wasn't able to tell. I just held her, burying my nose in her curls, feeling as the risings and fallings of her chest came to a normal rhythm. \n\nSomehow I knew that was the last time I'd touch her in a while. I clung to her desperately. I couldn't let her go. She was the best thing in my life.\n\nShe squirmed in my arms, then jerked away so unexpectedly her back hit the wall behind her with an audible thud. I flinched, feeling like a limb was removed from my body.\n\n\"Morena, please.\" \n\nShe finally looked at me and I felt a kick in my chest. Was I the reason for that? She didn't even seem like herself. She looked broken. Her lips quivered, her eyes that I loved so much were swollen and red, full of hurt. There was nothing there of the woman I was so crazy about. \n\nI'm going to lose her. Fuck. I'm going to lose her.\n\nSomething hard settled on her eyes, changing her whole expression. A fierce determination that puffed her chest.\n\n\"You said you wouldn't hurt me. You promised you wouldn't hurt me, Travis.\" The weakness of her voice did nothing to diminish the harsh accusation in it. \n\n\"Morena, listen to me. I-\" I could fix this. If she would only let me explain myself. I could fix it.\n\n\"Go away, Travis.\" She snapped with a violence that startled me.\n\nShit. I couldn't leave her. I wouldn't. Not like this. Not before I fixed everything.\n\n\"Morena, please, don't do this.\" I tried to touch her yet again, but she grimaced, recoiling from me as if I were contagious.\n\n\"NO!\" She cried out, wrapping her arms around herself.\n\nWhat the fuck had I done? How the fuck had any of this happened? How was I going to fix this? She was only beginning to trust me. I almost had her...\n\n\"Just fucking leave, mate.\" George was back. \n\nThe last thing I wanted to do was leave her. \"Please.\" I whispered so lowly, even I couldn't hear my own voice.\n\nShe shook her head, turning it from side to the side. I knew there was no point in staying. It was obvious she couldn't bear my presence. I knew her wl enough to understand that insistence wouldn't do me any good. George would punch me any time in the near future. Maybe the best thing to do was to give her time. Eventually she would have to talk to me. I hoped.\n\n\"Please, call me when you're ready to talk.\" I said to her as I got to my feet.\n\n\"Here.\" I handed her inhaler to George, heading for the door.\n\n\"Hey,\" He called. \"Carla told me what happened. She saw Annisa throw herself at you. I'll tell Mo when she's better.\"\n\nThank fuck! \n\nIf she didn't want to hear it from me, maybe she'd listen to George.\n\n\"Oh, thank you, George! Tell her I-\" I was so grateful, I could've kissed his feet.\n\n\"Look,\" He interrupted me. \"You hurt the person I love most in the world, Travis. I'll tell her what really happened here, but you have better fix this. Mo is racional. She'll talk to you eventually. You'll crawl at her feet if you have to, but do something about this.\"\n\n\"I'll do everything I can.\" I promised.\n\nAnd I would. Fucking anything.\n\nGeorge just nodded and went towards her, picking her up in his arms. He was probably the only person in the world who could comfort her now. How I envied him that. She looked like a ragged doll. What I wouldn't give to be the one to take care of her.",
        "I left, deciding to walk all the way home, taking the time to think. Doing my best not to go mad or do something stupid. Once again I had ruined the best thing I had in my life. Hurt someone I loved. At least this time I still had a chance to put things to rights. Now I just had to figure out how I would do it. Because I would never forgive myself if I lost her.\n\n****\n\nMORENA\n\nHe called me a million times. Then he called George, then he tried me again. I wasn't ready to hear his voice. It was childish, I knew that. But just thinking of him made it hard to breath. Listening to his voice, to him saying I'm sorry would be too much.\n\nWhere I had the good timing of arriving exactly the minute Anissa's mouth was on his, Carla had seen the whole thing. She'd told George how Anissa had forced Travis's hand, thrown herself at him, making it impossible for him to avoid her without being physically violent.\n\nThat inner voice kept telling me that explanation made sense. He didn't mean to hurt you. I ignored that voice, though. I thought it was the unwiser part of me. That impulsive part that wanted me to forgive and forget and run back to him. I was too proud for that however right the voice was. He hadn't hurt me. Actually, he had. Just not on purpose. It wasn't his fault. It hurt all the same. \n\nAfter years of keeping myself safe and secure, avoiding any man who tried to get too close, I had opened a door for Travis on his request. Now here I was. Hurt again. Incapable of trusting, of allowing myself to feel, proving James right.\n\n\"You don't know how to feel things properly.\" He'd said.\n\nI was feeling pain, alright.\n\nTravis was dangerously close to showing me just how wrong James had been. Because I caught myself thinking about him when I thought my mind was blank. When it came to spending time with George or him, I surprised myself choosing the latter over my best friend most times.\n\nI was falling in love with him. No. What the fuck was I lying for? I had already fallen. Seemed as, the harder I tried not to, the more I fell for him. He'd been lovely. Wonderful, even. The sex was the most incredible connection I've ever felt in life. I was afraid I might never be that in sync with any man ever again. He made me laugh, made me feel special, happy. Needed. Most importantly he made me feel. I spent years avoiding the things he incited me to feel, and after three months with him I was head over heels.\n\n\"Where do I meet you, Mo?\" Gee asked.\n\nI taught at a fancy gallery, so I wasn't bound to the usual school breaks. I'd worked all through Summer. Now I had two weeks to rest before the Autumn courses started. Gee hadn't been home in years, I missed my mom like crazy. Travelling home was undisputedly the best alternative for me to spend my holiday. Conveniently, home also happened to be an ocean away from Travis.\n\n\"I'll meet you at the airport.\" I told Gee.\n\nI was going to Travis's loft. After three weeks without seeing him, ignoring his calls, and trying not to think of him while failing beautifully at it, I had finally called him to arrange a time for us to have an honest talk.\n\nIn fact, I only wanted to say what I had to, then be done with it. I planned on staying as little as possible. I knew myself well enough to admit that if I stayed close to him for too long I might lose my courage and end up right where I've been the last three months. Naked in his bed.\n\nGeorge and I shared a cab. I got out in Brooklyn, near Travis's street, and he continued to the airport. \n\n\"You have two hours, Mo.\" He said, as a warning. \n\n\"I won't need two hours.\" \n\n****\n\nTravis had given me a key a couple of months ago. I chose not to use it. Too much familiarity in it. Instead, I pressed the intercom button with his name scribbled under it, and he let me up. When the old freight elevator stopped at his loft he was already there, leaning against the back of his sofa, waiting for me. He looked shit. Just as I did. Thanks to Gee though, and for my pride's sake, I had tried my best to look as composed as it was possible considering I was crumbling down inside.\n\nI hadn't shed a tear this entire week. I felt like I deserved a sobriety chip for that. George made sure I ate well and had all proper meals. He also tried to make sure I slept. But when he himself had fallen asleep, I lay awake, staring at the ceiling until tiredness got the best of me. Most of the time I just pretended to be getting better so he wouldn't worry and cancel his dates with Lance just to babysit me.\n\nBut Travis looked bad. Even in worst shape than I. His beard wasn't perfect trimmed as usual. It was a tad too long, too bushy. His hair was disheveled, tangled in its usual bun. He seemed to be a few shades paler, too. Two purple semi circles stained the skin under his eyes. Even so, he still looked impossibly handsome, making me feel that warmth in my belly that moved down, in between my legs. \n\n\"Hello, Travis.\" I said, ignoring the lump lodging itself in my throat.\n\nHe smiled sadly. \"Di-\" He clamped his mouth shut before the word was fully formed. I was silently thankful. I didn't think I could bear him calling me Dindi. \n\n\"Morena.\" He said instead.\n\nI didn't know what to say back. I just stood there in front of him, awkwardly shifting my weight from foot to foot as if I've never set foot in this place before. As if I had never spent the better part of the last three months in his bed allowing him to touch every inch of me.\n\n\"Would you like to sit?\" He broke the silence, sounding too formal for a man who knew every sound and face I made when he made me come.\n\n\"No.\" I refused his offer. I didn't intend to stay that long. \"I can't stay much. I have somewhere to be.\"\n\nI felt strangely out of place. All of my nerve was deserting me. Everything I had to say was already planned, rehearsed. Now, that I was standing in front of him, I didn't feel so brave anymore. I trapped a loose curl behind my ear, and saw when the corner of Travis's mouth quirked up. It was a nervous tick, one he knew well.\n\n\"Morena, that night-\" He began.\n\nThat night. Of course he wanted to explain himself. What could he possibly say that I didn't already know?\n\n\"I know, Travis.\" I didn't want him to speak about that. As long as he didn't say the words I could go on pretending I was fine. \"George told me what really happened.\" That was probably the only reason why I hadn't lost my mind.\n\nHe simply nodded, ready to try and speak again. Hearing him say I'm sorry would make me crumble. He would mean it, I knew he really was sorry. That wouldn't change the fact I had a hole in my chest that was slowly eating me away. \n\n\"Travis.\" I began, to prevent him from speaking. He leveled his blue eyes with mine. They seemed to be bluer, contrasting even more with the unnatural paleness of his skin. \"I really like you. I like you more than it's wise to like you. We've had a wonderful time together. I wouldn't change it for the world. You have no idea what you've done for me. I can never thank you enough for making me feel again.\" In my mind, I sounded much more confident saying those practiced words.\n\nHe chuckled a bitter, quiet sound. \"But?\"\n\n\"But I won't fight your ex-girlfriends over you. I won't accept your mother's prejudices. We might not have an actual relationship, but we were in a relationship of sorts. Whatever it was, I'm afraid it went somewhere I can't follow.\" \n\nYou like him a lot? What a load of rubbish, Morena.\n\nIf I had the guts to be honest I would've said I'm too much of a coward to give him another chance. Travis knew that as well as I. What he didn't know was how tarnished he was to me. Every time I looked at him I saw her kissing those lips I loved so much. \n\nIt was like being on a rollercoaster. Racist, bitchy mother then crazy, mean, sexy ex the next turn. It all made me dizzy.\n\nTravis just shook his head as if I'd just said the stupidest thing ever, and straightened himself. With the first advance he made towards me, I widened the distance between us, stepping back. He noticed it, but didn't stop. He kept coming at me until his arms were around me. Wearing heels I was tall enough to rest my chin on his shoulders. The scent of fabric softener on his shirt assaulted my nose.\n\n\"Don't do this, please.\" He said on my hair, holding me so tightly I gasped. I wanted to push him away, except I didn't have the strength to do it. Instead I turned my face into his neck and kissed the skin there. \"I can fix this if you let me.\"\n\n\"Listen to me, Travis.\" I tried to pull away to look at him, but he fought back. \"You're a wonderful man. You really are. And you must allow yourself to continue to be.\" He had a bad opinion of himself. I couldn't understand why he didn't see how fantastic a person he was. \"You were already this great when I met you. It doesn't matter what Max says or thinks, or what your mother's misguided conceptions are. It doesn't matter what people say about you. You're lovely. The only problem with you is that you are the only person who doesn't know that. Believe me, please, Travis. You are the sweetest man I've ever met.\" For some reason I felt it was necessary to say that. Perhaps I was trying to compensate for something. \n\nFor not giving him a chance, Morena. For that. That annoying voice in my head said.\n\n\"You sound like you're saying goodbye.\" He said, still hugging me.\n\n\"I am. For now.\" \n\nTravis tensed, the muscles of his arms stiffened around me. \"What do you mean?\" He asked, pulling away.\n\nHis expression was confused. A frown found its way in between his blond brows, crinkling the skin there. \n\n\"I'm going home for a couple of weeks.\" I tried to avoid sounding apologetic, but didn't succeed.\n\n\"What?\" He cocked his head to the side eying me through narrowed eyes. \"Morena, you can't leave now. We need to fix this. We need to talk.\"\n\n\"We are talking, Travis.\" I said, straightening my posture. That mask of coolness I'd been wearing since I arrived fell off.\n\nWhat did he think we were going to achieve here? Did he think we would have this talk, then I would be back in his bed? Just like that? Everything would be fine and perfect because he'd say the magical words?\n\n\"No. You are talking.\" He pointed one long finger at me.\n\nMy first instinct was to argue with him, but he was right. I didn't give him a chance to speak. It was only fair he say what he needed, even if I already knew what that would be.\n\nI'm sorry.\n\nForgive me.\n\nIt wasn't my fault.\n\nI would never hurt you.\n\n\"If you have anything to say I'm listening, but be quick, please. My plane leaves in a few hours.\" Cowardly, I didn't look at him when I spoke. \n\n\"You're leaving today?\" His tone was pure disbelief. \n\nI still didn't look at him when I answered with a simple \"Yes.\"\n\nThe sound of Travis's laugh forced me to look at him. It was a cold, sharp sound that made the little hairs on the back of my neck stand up.\n\n\"You'll leave me now afraid to love me back?\" It was an accusation. \n\nI scoffed. \n\nHow could he be so damn self righteous?\n\n\"I'm not leaving you. Don't be so self absorbed, Travis.\" I lied. Of course he was the reason I had chosen this specific moment to visit my mother. \"Not everything I do is about you. I've got a life of my own, you know. I've got a family, a job. You're not the only one I-\" \n\n\"Don't be coy, Morena. It doesn't suit you. Can you at least admit to yourself you're in love with me, too?\" He snapped, interrupting me.\n\nIn love with me, too.\n\nInsecurity and a bit of immaturity as well, made me want to ask When did you ever tell me you loved me? I refrained from making such a fool of myself, though. I knew better. I knew he loved me. He'd made me feel it. I didn't need words.\n\nWasn't it all too fast? Way too fast?\n\nNot only did I know he loved me, I knew I was in love with him, too. But if I didn't admit it before, I wasn't going to do it now. It would only give him fuel to try and make me stay. If he did try it, he'd have good chances to succeed. My determination was as thin as veil around him. All I wanted was for him to let me go. So I made the stupid, selfish choice to be cruel.\n\n\"In love with you, too? What do you know of being in love, Travis?! I spent seven years of my life being in love with the same person.\" I started crying, attacking him with words. Whatever dignity I'd been faking, vanished. \"I have been in a relationship before. I was engaged while you slept your way through NY! While you were fucking Annisa, and god knows who else, I was busy being an actual adult!\"\n\nMy words were bitter, meant to be hurtful. Travis stood before me listening to every word, taking them in as if he deserved them when he didn't. He didn't. \n\nI was breathless, angry, feeling a sudden deep despise for myself when Travis closed the gap between and kissed me. Completely unexpectedly. At first, I struggled with him, hitting my fists on his chest, until he twisted my arms and held them firmly behind my back. Then I gave in to him, just as I always did whenever he touched me. My body betrayed me, finding the places in his where they fitted together. He forced my mouth to open with his tongue, pushing it inside, only to find my own tongue eager to meet his. Travis sensed my body relaxing as I surrendered myself into his kiss. \n\nI still wanted him. So much it ached. \n\nMy skin, my hands, my lips wanted to feel him. They responded only to that attraction that had no ties to logic. It was biology. Instinct. Lust.\n\nMy head, though, the one I listened to, the one that governed all of me, would never let my body have Travis for its pleasure alone. It pondered the consequences of impulsivity and stopped me on my tracks on the road to regret. My brain screamed at me: No. No. No. You can't. \n\nTravis's grip on my wrist loosened, and I took that chance to escape his kiss. When he didn't let me I fought harder. My palm went flat against his cheek and it left a tingling, burning sensation on my flesh. Travis winced, stumbling back. I regretted it instantly. My body shook from head to toe as tears fell down my cheeks. \n\n\"God, I'm sorry.\" I wiped away the tears on my eyes with shaky hands and turned my back to leave. I was making a perfect mess of things. We would never get anywhere if I kept on behaving this way. \"I'm sorry, Travis. This isn't-\" He grabbed my arm, whirling me around to face him. \n\nThere was a perfect red print of my hand on his left cheek. I got the crazy urge to kiss it.\n\n\"Morena, please. Don't go, yet. Just listen to me.\" He asked me so tenderly, completely ignoring the fact I had just hit him.\n\nI looked at him puzzled. Considering the way I was behaving, I expected him to throw me out. I certainly deserved it. Why did he have to be so lovely? \n\nTotally bewildered, I nodded. Of course I'd listen to him. I owned him that, at least.\n\n\"That day with Anissa.\" I couldn't help but flinch when he said her name. The sound bringing back to me the image of her lips on his. \"She just threw herself at me, Morena. I pushed her away immediately. She came out of nowhere, what the fuck could I have done? Hit her? I swear to you I didn't encourage her in any way. Please, you have to believe me. I would never hurt you.\" \n\nI looked down at my feet, still crying, clenching my fists at my sides. I believed him. Not only because I had already heard the truth from someone else, but because he sounded so desperately sincere. Most of all, I wanted with every inch of my body to believe him. \n\nThat bitterness was there, though. Showing its face from behind my wall. I couldn't help the feeling of betrayal and deceit that clawed its way up my throat. It was all made worse by the fact that I was totally, completely and irrefutably in love with Travis. Yet, every time I looked at his lips, I saw her lipstick maculating them. What really fucked me up, though, was the fact that I wanted to kiss him even so.\n\nHe had promised me he wouldn't hurt me. He promised after I told him about James. About how that experienced had ruined me. Broken me. \n\nThis thing with Travis hurt way more than James's refusal of me, though. That cut had been made on clear skin. Travis had reopened an already aching wound.\n\n\"I know, Travis. I believe you.\" I whispered, glancing sideways, to where his bedroom door was. To the place where he'd had me so many times over the last months. \n\nRelief washed over him, relaxing the worried creases on his face. He smiled the first genuinely happy smile since I arrived. My answer gave him courage to touch me again. This time I didn't let him, though.\n\n\"It's just that...\" I said, evading his touch. \"Whether you meant to hurt me or not, you did it. I know you didn't purposely do it. I know it wasn't your fault, but you did it, anyway. I look at you and I feel it. It hurts too much. I can't bear to be hurt anymore, Travis. I just can't. I'm sorry. I'm not that strong. I look at you and I see that woman all over you. I can't even-\" I choked on my own words. \n\nIt was cowardice in its purest form. Fear. The result of one single bad experience that I was allowing to control my whole life. I saw pain flash across Travis's blue eyes. I wasn't fair to him. He was paying for James's mistakes and my weaknesses. I understood what had happened. I could forgive him for that. What I couldn't do was stop myself from feeling so hurt.\n\n\"I'm not him, Morena.\" He said, not for the first time. It was like he read my mind. \"I am in love with you. I love you and I want to be with you.\" He said softly.\n\nI love you.\n\nDid he really say that? Out loud? \n\nMy heart fluttered in my chest. He loved me. He'd said it. My response to his confession was to cry even more. \n\nI didn't deserve this. How could he love me? Someone who couldn't even give him the benefit of the doubt? Who didn't grant him the trust the deserved? \n\nBut did he deserve it? Did I?\n\nThe duality of it all was driving me insane.\n\nI could forgive it all, be with him, ignore the fact this pain he'd caused in me (even if it was unintended) was making me miserable. However, I couldn't run from my past. It was always on my back. It had made me who I was. I had trust issues and Travis had shattered the trust I had on him.\n\nOn the other hand, he didn't chose to break my trust. He didn't do it. He was made to do it. He was almost blameless in it all. His only blame perhaps, was being too irresistible. Or maybe it wasn't even about him. I had messed with Anissa, humiliated her. She, in turn, had taken her revenge on me by throwing herself at Travis. Still, not even she could have planned it so perfectly that I'd arrive exactly when she was giving him a kiss that lasted less than 5 seconds. Also, she couldn't have know that would be the most efficient way to hurt me; by making me feel like I wasn't enough for him so that he'd feel the need to go out there and get more. \n\n\"You don't love me, Morena. You don't know the right way to love somebody.\" Those old words echoed in my head.\n\nHow could Travis love somebody who couldn't even say it back? He deserved better. What would happen when he actually did something he deserved to be blamed for if I couldn't even forgive him for something he didn't purposely do? He should just let me go. I wasn't what he needed. To achieve that, I said things I didn't mean for the second time.\n\n\"You just bumped into my life without any thought, Travis. Only three months aren't enough for people to-\"\n\n\"Oh, they were enough. They were enough for me.\" He interrupted me with a dark, scary laugh crawling up his throat. \"Don't be ridiculous, Morena. I know you. I know you're a crappy liar. The time we had affected you the same way it did me. Don't say it didn't.\"",
        "He was sincerely mad. I had poked the bear. Now I had to deal with the consequences and play my own game.\n\n\"Don't be ridiculous yourself, Travis. You know me? I'm not the first woman to spend time in your bed, I certainly won't be the last. Do you consider yourself a connoisseur of them all?\" My tone was sharp, sarcastic. I threw his past, his reputation at his face, being unfair to him yet again. There's no telling how you make somebody love you. Actually, you don't. It just happens. The recipe to making them hate you is easier.\n\nTravis's face stiffened. The corners of his mouth dropped, disgusted. \"You know what? You don't want to say it, don't say it. You know you're not any woman to me. You know I love you, and you know you feel the same, whatever lies you tell yourself.\"\n\n\"God! Does your ego knows no bounds? You know, not every woman you fuck falls in love with you, Travis! We won't all love you like Anissa does! You're not that perfect!\" I said, exasperated. I put a hand to my forehead to stop its shaking, almost physically trying to find more hurtful things to say, just to make him desist. \"You're 35 and three months with me summon up the only real relationship you've ever had! How can you be in love with me? Do you even know how it feels?\"\n\nHis complexion reddened. His skin seemed to be thinner, and the hot blood under it was that much more evident. He moved closer to me with an astonishing feigned calmness.\n\n\"Yes, Morena! Because of you, I know how it feels! And I feel enough of it to be willing to try and fix this when you -who fucking knows it all- want to run away!\" He practically whispered, keeping his rage caged with a great deal of effort. I would rather have him yell at me.\n\n\"What if I don't want to fix it?\" I puffed my chest, obligating myself to face him on my full height.\n\nThat made him lose his grip on his calm act.\n\n\"You do. You want to, because you fucking love me, Morena. I've been inside you. I've seen your face when I make you come, when I make you moan my name, and you fucking love me! You need me just as much as I need you!\" \n\nIt made me want to laugh just how sure of himself he was. Had I been that obvious? Or was it Travis? Could he see that deep inside me? The firmness of his speech was enough to convince me if I didn't know him to be right, already. I did love him. I did need him. \n\nNevermind that. He'd given me just the right weapon to carry on with my farse. \n\n\"You think I love you because you made me come? Please, Travis. A thousand men out there could it. You need me? Need me? You keep saying you need me! You don't fucking need me! You want me to keep your shit together! I just make you feel good about yourself!\" This time when I spoke I hit a nerve. Not one that made him mad, though. It was worst than that. I hurt him. \n\n\"Morena. That-\" His voice was lower when he spoke, but I didn't let him finish that sentence, afraid he'd say anything that would make me rethink my plan to push him away.\n\n\"You're self destructive, Travis. You think you're worthless, and you want me to save you from yourself, from your broken family.\" Every word out of my mouth was automatic. I didn't think of the consequences saying them would bring. \"I'm sorry, I can't be your bloody band aid. I can't fix you, as much as I love you!\" I stopped, giving my brain time to registered what I had just said. My tongue worked too fast, was too impulsive. I didn't mean to say those words.\n\nI saw it in his face when he heard me. None of the things I said before were taken into consideration. He only heard those three last words.\n\nDamn you, Morena. Why did you say it? Why?\n\nHis blue eyes widened and he almost smiled. \n\n\"Did you just..?\" He seemed to doubt his ears as much as I did my mouth. But I'd said it, loud and clear. \"You love me? You see! You love me! Then fucking stay, Morena! Forgive me, for fuck's sake!\" \n\nWhat was it with this man? I had just tried my best to hurt him, offend him, said mean things to him and all he cared about were the three little words that gave him hope? The words I didn't even mean to say?\n\n\"Stop asking me to stay, Travis! I can't fucking stay!\" I snapped, hoping he'd give it up before I broke down.\n\n\"Can't or won't?\" He asked. \n\nThe look on his face was so tortured, so sad. I felt like the worst person in the world for doing that to him. I had convinced myself it was for the best though. I was damaged. Travis had too much baggage. It was a doomed relationship from the start.\n\nWe were a mess. We could only hurt each other. I couldn't trust myself. He couldn't trust himself. I was all fear and reserve. He was all self loathing and impulsivity. Our past relationships wouldn't leave us alone. His damn mother hated me because I was born the wrong colour according to her standards. How could it work?\n\nWe loved each other, but love isn't always enough. \n\nBetter I run now. Later it would only hurt more. More hurt than this could be physically unbearable.\n\nThose blue eyes on me weighted a ton. I forced my gaze away from Travis's. I didn't even have the courage to face him. \"I have to go. I'll miss my flight.\" I clutched my bag, turning my back to him. Something was bothering me, though. Guilt, most likely, for being such a bitch to him. I felt like I had to say something else. \"I do love you, Travis. Yes. I'm sure women loved you before. And it's not your fault I can't trust you, I dragged you into my history. It's just the way I am. There's nothing we can do here. Think of how you met me! How impulsive and crazy that was! This can't work. Fuck, just look at that business with your mother! We both knew this would end eventually. It was sex. It was meant to be just about the sex. We shouldn't have-\"\n\n\"Oh, fuck that!\" Travis exploded, dismissing all that was left of his calmness and reserve. \"You can fuck anyone, Morena. Sex you find in every corner! But this,\" He gestured frantically between us, to some invisible, but tangible thing standing there. \"What I feel for you? With you? You don't find this anywhere. I love you! You can't just dismiss that as if it were nothing! I fucking love you. Damn my mother to hell!\"\n\nHe said those words like they held some kind of power. Actually they did, and he knew just how much.\n\nI had something to say, but I blinked, then my back was against a wall, and Travis's body was trapping mine against his. His heat penetrated the flimsy fabric of my blouse, and reached my skin.\n\n\"Travis, don't please.\" I whispered.\n\nHe leaned his forehead against mine, bracing his hands on the wall. I didn't move a muscle. I knew I should push him away, I shouldn't let him touch me, but I loved how it felt to have him so close to me. It was inevitable. I couldn't resist him.\n\n\"You don't want to leave, Morena. You want to stay. You want me.\" To prove his point he reached a hand down, to the hem of my skirt. \"Look at me and say it. Say you don't want me. Say you don't love me, too. Say it.\"\n\nI turned my face to the side, squeezing my eyes shut. I wouldn't say it. I couldn't. No matter how resolved I was to make him give up on me, I couldn't tell such lie.\n\nTravis's hand was very well acquainted with my thighs. His fingers had no trouble sliding in through the sides of my panties until he found that spot where all my need for him was concentrated. Embarrassingly wet and slippery. I fisted my hands on his shirt, feeling my nails scrape the skin under it.\n\n\"Ah!\" The soft traitor moan that escaped me was a weak, involuntary reflex.\n\n\"You see?\" He muttered, not hiding his triumph. He let his middle finger dance around my clit, tricking me out of another moan. \"See how much you want me? You love me, Dindi.\" \n\nDindi. When he called me that, something snapped inside of me. \n\n\"Stop it!\" An unknown strength surged from a depth in me. I used the hands fisting his shirt to push him away.\n\nHe stumbled back, confused, looking like he didn't know where he was. I was left shaking, feeling ashamed of my weakness for him as I straightened my skirt.\n\n\"Morena, please.\" He sucked on his fingers so casually, the simple gesture almost drove me crazy. I was torn between throwing the nearest vase, or myself at him.\n\n\"That's enough, Travis.\" The saner part of me spoke.\n\nThis could go on forever. There was nothing I could think to say to end this conversation. Travis would always have an argument to throw back at me, and I didn't want to have to sink even lower to hurt him. So I just made my way to the elevator.\n\n\"Morena.\" He called, walking after me.\n\n\"Please don't, Travis. I have to go.\" I held up a hand, stepping inside the old elevator. My pussy still hummed after his touch. \"I don't regret a single moment I spent with you. Not a single one. I'm glad I met you, but I don't know how to stay with you. I'm sorry.\" I said, already closing the elevator gate.\n\n\"You can learn.\" He retorted.\n\n\"I can't.\"\n\n\"You know this isn't the way, Morena. Please.\" He said, still trying even as the elevator started to go down. \n\nThen just like that, I watched him disappear. Knowing in my gut I had never in my life been so miserable, and most definitely not caused it with my own hands. I had brought it all on myself. I chose the course the conversation followed when I could've handled things differently. No point crying over spilled milk.\n\nI had to deal with the consequences of my own actions. Alone.\n\n****\n\n\"How did it go, Mo?\" Gee asked me.\n\n\"Well,\" I was crying before the words were even out of my mouth. \"He said he loved me and I was a bitch. I did what I had to.\" \n\nI was a bitch. I was selfish. Selfish. A coward. Now I got what I wanted. I was alone. Again. No one would ever hurt me again, because I would never let anyone close enough to do it. No even the man I loved.\n\n****\n\nSEVEN YEARS AGO\n\n\"Mum. I'll call the baker later.\" My mother could've planned the whole fucking wedding by herself. I wondered why the bloody hell I hadn't let her. \"I'm sure they got it all sorted out. They understood the groom is allergic to nuts. Which is why I chose a chocolate cake with chocolate icing and chocolate filling. It will all be fine. Now, I must go. James is home. Bye, Mum. Love you!\" I hang up before she could say more.\n\n\"Your Mum again?\" James asked, shrugging out of his soaked coat.\n\n\"Yeah. Babbling about the bloody cake, and the flowers, and the dress...Agh, can't we just slope?\" I pushed up from my chair and moved towards him. \"Let's go to Vegas. Tonight.\" \n\nI threw my arms around his neck. His hair was damp from the insistent rain outside. My lips pressed against the cold skin of his neck, but his arms around me were a colder embrace.\n\n\"What's the matter?\" I asked him, pulling away.\n\nHe looked right into my eyes when he spoke. \"We need to talk, Morena.\" \n\nIn that moment I wished I had the ability to disappear. Seven years in a relationship with another person taught you things. You knew what they liked, what they hated. You knew what made them sad, what made them happy. You knew when a fight was about to begin. \n\n\"About what exactly?\" \n\nPlease, don't say us. Please don't say us.\n\n\"About the wedding.\" He said, intensely fixing his green eyes on me. He was a lawyer. A bloody good one. He could look anyone in the eyes while telling them the worst imaginable lies.\n\nAbout the wedding was worse than about us. \n\n\"What about it, Jim?\" I asked, already feeling a lump clawing up my throat.\n\n\"Come have a sit.\" He gestured to his red chair, but I refused his offer.\n\n\"I'd rather stand. Thank you.\" \n\n\"Morena...\"\n\n\"Oh, just fucking say it, already.\" I knew that whatever it was he had to say, it wouldn't be anything good. I just wanted to be done with it. \"Spill it.\"\n\nJames had been acting funny lately. He seemed to be distracted. Distant. But then again he's always been very quiet and reserved. I just assumed it was wedding jitters. Now I was afraid it might be something more serious.\n\nHe ran a nervous hand over his wavy chestnut hair and sighed heavily. Same thing he did every time he was about to say something he knew I wouldn't like.\n\n\"I can't marry you, Morena.\" He said it calmly, making that sound like the simplest affirmative in the world.\n\nMy incredulous laugh was scandalously loud. \"Oh, darling. That's not funny.\" \n\nHe was serious. I knew he was serious. My brain, on the other hand, refused to accept that information as a valid one.\n\n\"Morena, please, don't make this harder than it has to be.\" He stood there perfectly composed.\n\n\"What?\" I, on the other hand, had a temper. \"You just said you can't marry me two weeks prior to our fucking wedding and you expect me to take you seriously?\"\n\nTo my complete horror, I felt warm, wet tears ran down my face. James hated when I cried. He said it was a sign of weakness. That I should always fight weakness.\n\n\"We should never have let it go this far. It was a mistake from the beginning. We're not right for each other.\"\n\nI stepped back as if I had been struck across the face. \"We're not right for each other? When did you conclude that?\" I spat words at him. Me, a complete emotional mess and he, the personification of calmness itself. \"Tell me, when did you make this great discovery? When, in all the seven fucking years we've been together?!\"\n\nHe stood still, calm as a damn statue. Not even a single twitch of eye to tell me he was a feeling human being.\n\n\"Morena. Please. You're not behaving accordingly-\"\n\n\"I'm not behaving accordingly?!\" I cut him off. \"What the bloody hell do you expect, James? Don't you think I'm behaving accordingly? Accordingly to a woman who's just been told, two fucking weeks before her wedding, that he fianc\u00e9 can't marry her?\"\n\nThe floor under my feet didn't even felt real. Nothing was real. Nothing. Because none of this could actually be happening.\n\n\"Why?\" I asked him when it finally occurred to me to do so.\n\nI was ignoring the pain that threatened to bring me to my knees and beg him to stay. Beg him to marry me. I loved him. I loved him more than anything in the world. \n\n\"I can't marry a woman whose priority won't be me.\" He said, matter of factly.\n\nI wanted to laugh, but only succeeded in gasping. \"W-what?\"\n\n\"You don't want to be my wife, Morena. You don't want to have a family. Our family. You want to be a teacher. You want to have a career. How can I expect you to raise my children when you'll be busy educating other people's?\"\n\nMy shock was too great to allow me to speak something back.\n\n\"You're an extremely selfish person.\" James continued. \"You won't ever be where I want you to be. You won't ever be where I need you to be.\"\n\nEvery word out of his mouth was a blow. For how long had he felt like this? For how long had he known he didn't want to marry me? \n\nOf all the things I could've have said to him...I could've have cursed him to hell. Told him how wrong he was. Called him out for the prick he was, but what came out of my mouth were the most pathetic, prideless words possible.\n\n\"But I love you.\" I whimpered, saying that with the mindless hope it'd change his mind.\n\nThe way he looked at me was the way he would look at a stranger he could sympathise with, but not have any real connection with. His mouth twitched and it morphed into the coldest of grins.\n\n\"You don't love me, Morena. You don't know how. You can't feel things properly. You love yourself. But not me.\"\n\nJames had a way of always convincing me he knew better. So when he said I didn't know how to love him, I believed him. Somehow I believed it was my fault.\n\n\"What do you mean? Of course I love you, James! I love you! How can you-\" Instead of acting as the situation demanded I sank to the lowest form of patheticness. \n\nWhy would he say such things? What had I done? Hadn't I treated him well? Loved him enough? Where had I gone wrong?\n\n\"I'm moving out tonight. You can keep the flat.\" He said, turning his back to me and walking into our room.\n\n\"Wh-\" He was moving out? \"You're moving out? Where are you going?\" \n\nHe already had a place to be. He'd been sleeping beside me. Living with me knowing he'd leave me. Knowing he didn't want to be with me anymore. How could such a thing be possible? You dedicate years of your life to another person and they leave you just like that? With little or no consideration for your feelings at all?\n\nHe opened the closet and took his old suitcase out. \n\n\"I found a place.\" He said, throwing his shirts, with little regard for their state, into the suitcase.\n\n\"You found a place?\" I watched him pack a sky blue shirt I had given him.\n\n\"Yes.\" He said flatly.\n\n\"Where?\"\n\n\"Camden.\"\n\n\"Camden?\" \n\nThe bottle of cologne he had on his hand hit the suitcase with enough force to shatter to glass, if it weren't for the soft fabric of his shirts.\n\n\"Honestly, Morena, must you repeat everything I say?\" He snapped, face red, eyes wide.\n\nI didn't know what it was. The shock. Sheer stupidity. The love I felt for him. But I felt numb. As if I were in a surreal dream, or rather, a nightmare, just waiting to wake up. It didn't seem possible that he would throw away almost 8 years of our lives like that. And because he didn't believe I loved him? No.\n\n\"James,\" I began, voice small. \"We're getting married in two weeks. The invitations were sent months ago. We-\"\n\n\"We are NOT getting married, Morena! I will not fucking marry you!\" In seven years. That was the very first time he had ever raised his voice to me.\n\nI opened my mouth, my lips quivered, but the words didn't come out. \n\nDon't leave me. I love you.\n\nCall it residual pride, whatever. Something wouldn't let me say it. I just watched as James went in and out of the bathroom gathering his belongings and tossing them inside his suitcase.\n\nTwo years of a shared roof fit inside that suitcase.\n\n\"Is there someone else?\" I found the voice to ask him. \"Is that what this is? You've met someone?\"\n\nJames stopped by the bathroom door, with his back turned to me. His silence was all the answer I needed.\n\nI gasped as if someone had physically punched me in the gut. All my strength deserted me and I crumbled to the floor.\n\n\"I need the ring back.\" He said coldly.\n\nMy only reaction was to fist the hand with the ring. He took a deep exasperated breath, then crouched in front of me, yanking my arm and forcing my hand open. I had worn the ring for two years. I had put on weight, lost weight while using it. It refused to come out. James pulled it out with little consideration, the metal biting at my skin as the ring slid off with reluctance. All I was left with was a paler line of skin to prove I ever had that ring.\n\nHe put the little circle in the pocket of his trousers, then clutched the handle of the same suitcase he had used when he took me to Paris for my 23 birthday. By then I was having enough trouble to breath it showed on my face. It didn't stop him walking past me as if I were a beggar in the street. To be ignored. Shunned. \n\nI heard him close the door. Tears burned my eyes. I couldn't even move. I was waiting to wake up. For that moment when I would crack my eyes open and find James on the bed beside me. I would hug him, wrap my arms around his ribs and tell him about the awful dream I just had. \n\nBut I didn't wake up. Air refused to get inside my lungs. I started to feel desperate. As numb as my mind was, my body was fighting. My knees crawled to the bathroom. My hand opened a drawer and found my inhaler. My mouth opened, forcing me to take a gulp of the medicine, before my head fell to the cold tile floor. \n\nYou don't love me, Morena. You don't know how. You can't feel things properly. The words ringed in my head like a stubborn church bell. Echoing. \n\nI curled into a ball on my bathroom floor. Hours went by. God only knows how many. I only knew I was alive when George showed up and woke me up."
    ],
    "authorname": "Nanaya",
    "tags": [
        "black woman",
        "white man",
        "interracial",
        "interracial romance",
        "romance",
        "romantic"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/dindi-pt-05"
}