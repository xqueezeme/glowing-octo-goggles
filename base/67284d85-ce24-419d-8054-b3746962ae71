{
    "title": "The Blossoming of Becca Pt. 01",
    "pages": [
        "This is one part of an 8-part story. It is a pseudo-incest tale about the burgeoning relationship between a man and his stepdaughter. Within this story I explore certain fetishes having to do with feet, anal, and various bodily fluids and odors. If any of that is not your cup of tea, this probably isn't the story for you. Consider this your warning.\n\nIf you like this story and want to follow my characters' adventures within their connected universe, I recommend bookmarking my page, as the next story may or may not be in the same category. Constructive feedback is appreciated.\n\nAll characters involved in sexual or explicit activity are 18 years of age or older.\n\nThis is the first part of The Blossoming of Becca, and as such, there is more story building than explicit material, but the story (and the sex) builds accordingly throughout the following chapters. Enjoy!\n\n* * * * *\n\nThursday evening\n\n\"Hey, dad.\"\n\nBecca came through the front door dragging her feet, as was normal after she got home from her part-time job at a local grocery store. She kicked off her sneakers, peeled off her sweaty socks, and dropped everything on the floor. Then she flopped down onto the couch like a ragdoll and leaned her head against me. I put my arm around her shoulders and gave her a side hug.\n\n\"Hey, beautiful. How was work?\"\n\nShe shrugged and melted into me a little more. I knew she didn't love the job, since she was on her feet all day and had to wear pants and a polo shirt in this hot summer weather, but I had encouraged her to stick it out for most of the summer. We had talked about it and agreed that she could quit a couple weeks before she had to go off to college.\n\nI had always tried to teach her the value of money and the importance of working hard and saving for the future. And because of that, she rarely ever asked me for anything. She had had a summer job since she turned sixteen and insisted on earning her own spending money, as well as saving for college. And that made me extremely proud.\n\nI squeezed her a little more tightly and kissed the top of her head, which still smelled like shampoo from this morning's shower. Her hand rested on my thigh and I closed my eyes, trying to get my warring thoughts under control.\n\n* * * * *\n\nBecca had turned eighteen in May and had graduated at the beginning of June. It was now almost July, and she would be heading off to college in about two months. She was going to Clearwater University, which was only about an hour from our house, but I was still dreading the day she left. It had been just the two of us for so many years.\n\nI had met Becca's mom when I was 24. Julie Simpson was a year older, with a three-year-old daughter whose father had been in the military and met an early death overseas before she was born. We fell in love quickly and deeply, marrying within a year of meeting each other. A year and a half after our wedding, Julie was diagnosed with Stage 4 breast cancer. Six months later, Becca and I were on our own. I was completely devastated and utterly lost. I had just turned 27 and I was only making about 24K at a crappy telemarketing job, raising a 6-year-old all by myself. After some serious soul searching, I came to the conclusion that I needed to grow up and get my shit together.\n\nI earned a certificate in project management and began farming my resume out as a consultant, which enabled me to work remotely from home. After learning how to manage my time wisely, I started working multiple contracts simultaneously. Long story short, I now make over 250K per year. The perks are obvious\u2014financial stability and a constant presence at home for my stepdaughter in a beautiful house in Pass-a-Grille, which is on a beach peninsula in the greater St. Petersburg area of Florida. The drawback is that I tend to work long hours to pay for it.\n\nBecause of my work schedule, and maybe because I didn't want to divide my time between Becca and another person, I never got seriously involved with anyone else. I had been on dates here and there, but nothing stuck. I was the only thing Becca had in this world, and I was terrified to mess it up.\n\nIt's strange to think about now, but for some reason I never got around to officially adopting her. She has grown up as Rebecca Simpson, although she has always been Becca to me. My name is Tim Davis and legally, I am her guardian, but for all intents and purposes I've never been anything less than dad.\n\nNeedless to say, I cherish every moment I get to spend with Becca. She's been the apple of my eye and has grown up into a beautiful, thoughtful, self-sufficient young lady. So, you can imagine my surprise\u2014and shame\u2014when I began to see her in a different light.\n\n* * * * *\n\nA few weeks ago, Becca and her best friend Sydney were tanning in the back yard by the pool. I've always thought Sydney was a little cutie\u20145'5\", dark hair, B-cups, petite and thin\u2014and seeing them walk around the house in bikinis was an almost daily event in the summer. I was always very careful about how I interacted with Becca's friends, because I never wanted to come off as a creeper. But I am a red-blooded 39-year-old male, and a hot, scantily clad girl is something that will always catch my eye.\n\nAnyway, like I said, they were tanning back by the pool, lying on their stomachs on beach towels they had spread out on the tile deck. I was on a break from work, so I decided to join them for a bit. After changing into my swim trunks, I walked through the sliding glass door onto the stone-tiled patio and approached. It appeared that they had fallen asleep. They were wearing sunglasses, but it looked like their eyes were closed, and their breathing was slow and rhythmic. Not wanting to wake them, I stepped quietly into the pool and submerged myself, slicking my hair against my head. When I surfaced, I glanced in their direction. They hadn't moved at all. They were oriented so that their heads were pointing toward the house, while their feet were right there, so close to the edge of the pool that I could touch them if I wanted to. With my stomach in my throat and my heart beating fast, I felt a strong compulsion to move closer, and did so silently. When I reached the edge of the pool, I stopped and stared.\n\nNow might be a good time to mention that I've always had a foot fetish. There is something about a girl's feet that turns me on like nothing else. Whether it is their cute little toes, or the pink coloration on their soles, or even the smell and taste, which evokes something forbidden and dirty, I love it all.\n\nSo, as I stared at the flawless bottoms of those 18-year-old feet, my cock began to swell. Initially, my gaze was drawn to Sydney. Her feet were smaller than Becca's with tiny little toes and smooth-looking pink soles. The edges of her heels and the pads of her toes showed only the smallest callouses from her footwear. Because they were lying face down, Sydney's toenails rested against the tiles and her heels pointed toward the sky, mere inches from my face. The skin on her arches was pale and wrinkled from having been in the water. I glanced up and noticed her legs were shiny and wet with tanning oil. Her shorter legs were slightly thinner than Becca's and my heart raced as I thought about rubbing oil into her inner thighs. Her yellow bikini bottoms disappeared into the crevice between those cute little cheeks and left a generous portion of her flawless teenaged ass exposed to the sun's warm rays. As I hung onto the edge of the pool, my gaze traveled back to her toes which were so close I could touch them with my tongue. I licked my lips as my thoughts spun out of control.\n\nInadvertently, my eyes moved to the left. My stepdaughter's feet were slightly larger than Sydney's, but no less alluring. Where Sydney had a few small patches of dry skin here and there, Becca's were utterly perfect. Her toenails were exquisitely manicured, and the pink skin of her heels and the pads below her toes were without blemish. As I studied them from only inches away, I realized I was holding my breath. Quietly, I exhaled and resumed normal breathing. My head spun and I thought I might pass out from the lack of oxygen. Or maybe it was the fear of getting caught. But the girls were just as motionless as they had been since I arrived, and I wasn't done looking.\n\nBecca's legs were long and perfectly shaped. Taking notice of her ass for the very first time, I was blown away. When had she grown into such a beautiful, sexy young woman? Her black bikini bottoms were even more snugged into her butt than Sydney's, since Becca's thighs and ass were a little thicker. I could just make out the area of her asshole, where the roundness of her ass cheeks parted slightly before continuing toward her vulva.\n\nAt that moment, it was like something broke in my brain. A wall that had been there for years and years had crumbled under the weight of my lust. I was suddenly overcome with the desire to touch and taste every part of her body\u2014her feet, her legs, her ass, her pus...\n\nWhat the fuck was I doing? She was my daughter! I had raised her since she was a little girl!\n\nImmediately my mind began to fight back against my objections, and I started justifying my lecherous thoughts. She was my stepdaughter, and not in any way related to me by blood. She was eighteen years old and legally a woman. And this was the first time I had even noticed how hot she was, so it wasn't as if I was some vile predator.\n\nNevertheless, I closed my eyes and shook my head, disgusted with myself and the erection that was straining against my trunks. Pushing away from the edge of the pool, I blew out all my breath and sank to the bottom, sitting there until my body screamed for oxygen. I pushed off and thrashed my way to the surface, noisily gasping for air as I swam to the stairs. Becca and Sydney started simultaneously, glancing over their shoulders at the commotion in the water.\n\n\"Hey, dad,\" Becca said. \"We didn't hear you come out.\"\n\nThankfully, my cock had deflated, so I walked up the stairs and grabbed a clean towel from a stack we kept inside an outdoor cupboard. \"Just jumped in for a quick refresher,\" I said, not looking at the girls as I walked back into the house. I immediately headed upstairs and jacked off in the shower, trying to restrict my thoughts only to Sydney's tight little body. But images of Becca kept intruding, and when I came, I was picturing my daughter's incredible ass. Feeling miserable, I went back to my office and buried myself in work.\n\n* * * * *\n\nOver the next couple weeks, I began to realize just how lonely I was, and how long I had felt that way. I had always had Becca to keep me company, but romantic female companionship was something I had relegated to the back burner. But something had been awakened inside me, and I was beginning to see things through a different filter.\n\nIt had been commonplace for Becca to walk around the house in nothing but panties and a t-shirt every morning and night since she was a little girl. I had never seen it as an issue, and neither had she. But after the incident in the pool, my eyes had been opened. Suddenly, I was noticing that this beautiful young woman never wore a bra under those t-shirts\u2014some of which were quite thin\u2014and her nipples made definite impressions\u2014in the material and on me. And the underwear she wore were no longer the 'granny-panty' type that I had bought her when she was younger. She did her own shopping now, and her choices in intimate wear tended toward less coverage than I had realized\u2014bikini briefs, t-backs, thongs... I mean, how in the world had I not realized she was wearing thongs in front of me?\n\nAnd when we would watch TV in the evenings, it was more of the same thing. She would sit cross-legged on the couch with her panty-covered camel toe peeking out from beneath the hem of her t-shirt like it was the most natural thing in the world. And for her it was. It was shocking only for me. I was the one with the issue, not her.\n\nHow had I been so blinded to her blossoming femininity? And how could I now live like this, consumed by constant thoughts of my stepdaughter's nubile body? Maybe the better question was...what should I do about it?\n\n* * * * *\n\n\"Work that bad, huh?\" I asked as I gave her another squeeze.\n\n\"It's OK,\" she replied. \"It's just tiring. And my feet hurt.\"\n\nAnd there it was\u2014the perfect opportunity. I cursed myself inside, because I knew that I wasn't going to let that opportunity slip by. I was going to take full advantage of it.\n\n\"Let me rub your feet for you,\" I said.\n\n\"Ew, no! That's gross, dad! You don't want to touch my feet!\"\n\nI'm not sure why, but I had never really done that for her before. We were always close, but Becca never asked me for back rubs or foot massages or anything of the like, and I never offered. I guess some dads did those things, but I've always sort of associated them with sexual intimacy and for obvious reasons, sexual intimacy had never been a part of our relationship. But the same justifications that had been rolling around in my brain for the last couple weeks popped up again\u2014Becca was now eighteen, and sexual intimacy between us wouldn't be incestuous because we didn't share blood.\n\n\"Nonsense. Feet aren't gross. Whatever gave you that idea?\"\n\n\"Feet smell bad!\" she replied with a grimace. \"Everyone knows that. And mine have been closed up in my work sneakers for most of the afternoon and evening.\"\n\n\"You are a clean girl, Becca,\" I replied. \"Your body has natural odors, but I've never noticed any bad smells coming from you. It's totally fine. I'm not grossed out by you in any way.\"\n\nBecca sat up straight and studied me, trying to judge if I was serious. \"I still think it's gross.\"\n\nSmiling, I said, \"Why don't you go upstairs and get into your night clothes, then come back down and I will give you a foot rub. It will be fine, I promise.\" I leaned over and kissed her on the head again.\n\n\"I should get a shower, though,\" she said.\n\n\"Not yet. Just get changed. Then, before you go to bed, if you want to get a shower, you can.\"\n\nBecca gave me a skeptical look. \"OK...\" she replied, drawing out the word as if she were unsure about the idea or my reasoning behind it. But she was a good girl and almost always did what I asked right away. She stood up and trudged up the stairs. About five minutes later, she came back down in her usual nighttime uniform\u2014panties and a thin t-shirt. The panties were dark blue and must have been the pair she had been wearing all day because I thought I got the faintest whiff of vaginal musk as she sat down next to me again. I didn't say or do anything right away and Becca fidgeted as we stared at the television. I could tell she wasn't going to be the one to bring up the subject of the foot rub.\n\n\"Why don't you lie down and put your feet in my lap?\" I suggested with a smile.\n\nBecca shifted uncomfortably. \"Are you sure about this, dad? You don't have to do this. I will totally survive without a foot massage.\"\n\n\"I know you will, silly,\" I replied. \"But wouldn't if feel nice to get one?\"\n\n\"I guess,\" she said as she shrugged, giving me an insecure smile. But she did as I asked. She pushed a couple throw pillows into the center joint of the L-shaped sectional sofa and lay down, carefully placing her feet in my lap. From this vantage I could see a puffy camel toe in her dark panties and visible pokies in her shirt. My dick twitched in my shorts.\n\nAs I looked down at her feet, I was taken aback by just how sexy they were. Her toes were small with perfect, painted nails. The bottoms of her toes, the pads underneath, and her heels were a rosy shade of pink. Her arches were white, and they wrinkled adorably as she self-consciously scrunched up her toes. The aroma that wafted up into my nose acted like pheromones, sending a signal to my crotch. Even though her feet had been enclosed in her shoes and socks for most of the day, the smell wasn't off-putting or overpowering. On the contrary, it was enticingly aromatic...and it made my head swim.\n\nI took one of her feet in my hands as she watched nervously. As I rubbed it, I noticed that it was baby-smooth and softer than I had imagined, if a little sweaty. Immediately, my cock began to swell. I quickly grabbed a throw pillow from between my hip and the arm of the couch and set it on my lap, then rested her heel on it, hoping she would misconstrue the reason I had placed it there.\n\n\"Do my feet smell bad?\" she asked, cringing.\n\nImpulsively, I lifted her foot and stuck my nose right between her sweaty toes, inhaling deeply. \"Nope,\" I replied, giving her a Cheshire cat grin.\n\n\"Dad!\" she shouted, yanking her foot out of my hands, and retreated to the other end of the couch. \"That's so disgusting!\" She lifted a foot to her own nose and took a big whiff. \"Ugh! They do smell! I don't want you touching them right now! I should have gotten a shower!\"\n\n\"Sweetheart,\" I said reassuringly, \"there is nothing about your feet that I find disgusting. They have a slight odor from being in your shoes and socks. But they aren't dirty or nasty. Put them back on the pillow.\"\n\nBecca didn't move a muscle, remaining tightly curled up at the opposite end of the couch, her face red from embarrassment.\n\n\"Please?\" She still didn't move. \"Trust me,\" I implored. \"Your feet are beautiful, just like the rest of you. I am not grossed out by your feet.\" I patted the pillow in my lap.\n\nBegrudgingly, she lay down, stretched out, and placed her feet back in my lap. As she adjusted herself, I noticed the edge of her panties had ridden up, and the puffy edge of one lower lip was slightly exposed. Outwardly, I showed no sign that I had noticed, but inwardly I groaned as my desire was inflamed. It took every ounce of my willpower not to sit there and stare at her pussy. I pried my attention away from her inner thighs and grasped the foot closest to me. I began to rub and knead her heel and arch, working my way up to the pads under her toes. Becca's eyes closed and she let out a sound of blissful relaxation. As I massaged her sexy little foot, I began to contemplate why she might feel self-conscious about them\u2014or any other part of her body.\n\n\"Have I ever made you feel like your body was dirty or shameful?\" I asked.\n\nBecca gave me a strange look. \"No. Why?\"\n\n\"I just wondered. My parents were that way and it always bothered me. They didn't consider it proper to show certain parts of the body around the house. I guess I thought that because you are self-conscious about your feet, maybe I did or said something in the past that gave you the impression that they were gross.\"\n\n\"I don't think so,\" she replied. Her eyes moved around the room as she thought about it. \"I think I just came to that conclusion on my own. My feet don't normally smell very good after I've had my work shoes on for hours. I just didn't want you to think I was a scumbag.\"\n\n\"Oh, babe! I have never thought that, nor would I ever! I know you are a very clean person. I wouldn't be afraid to smell any part of you.\"\n\nBecca's eyes grew wide at my choice of words.\n\n\"You know what I mean,\" I said quickly, trying to recover from my Freudian slip. \"I just don't want you ever to be self-conscious about your body around me.\"\n\n\"OK,\" she said, probably wondering where I was headed with this conversation.\n\nI grabbed her other foot and began massaging it, pushing my thumbs into her arch. Her eyes closed once again, and she smiled as she sighed.\n\n\"I didn't know you were so good at this, dad,\" she said. \"Why have you never done this before?\"\n\n\"I guess I never thought about it,\" I replied honestly. \"But when you said your feet hurt, I figured it might be a nice thing to do for you.\"\n\n\"Mmm, thank you,\" she cooed.",
        "After a few minutes of massaging her in silence, I began working on her toes and the spaces between, saying, \"Did I ever tell you that your mom and I dabbled in naturism when you were little?\"\n\nBecca opened her eyes and asked, \"What's that?\"\n\n\"Naturism? You never heard that term? People sometimes call it nudism.\"\n\nBecca yanked her feet out of my hands again and shot up onto her knees. \"What? You and mom were nudists? How? When?\"\n\nI chuckled at her reaction. \"There were a few times we went over to Haulover, which is a nude beach north of Miami Beach. And once we even went to a naturist campground. It was fun. Then she got sick.\"\n\nBecca's eyes bugged out of her skull and her jaw was practically in her lap. \"I can't believe this. Why did you never tell me?\"\n\n\"It never came up,\" I replied, shrugging my shoulders. \"Anyway, the reason I'm telling you now is so that you know I'm not some stuffy, uptight prude. I've never suggested that your clothes weren't appropriate for going out or that your swimsuits were too skimpy. It's not me. And it wasn't your mom either. We were on the same page. If she had lived, we probably would have raised you more along those lines\u2014maybe even taking you to naturist events. So, I don't want you to ever feel self-conscious around me in any way. You never know, I might decide to start practicing naturism here at home.\" I smiled and winked at her, trying to keep a modicum of levity while ensuring she understood I was serious.\n\nBecca's expression hadn't changed much at all throughout the entire discussion. She maintained her fa\u00e7ade of shock and utter disbelief. When she snapped out of it, she shook her head and said, \"You would really go naked around the house? In front of me?\"\n\n\"Why not? You are an eighteen-year-old adult now, so even if you weren't raised to be a naturist, it doesn't mean you couldn't become one or be exposed to one.\"\n\n\"Oh, I don't think I could ever become a naturist,\" she replied with a serious shake of her head.\n\n\"You never know,\" I said. \"Don't discount something until you've tried it.\"\n\nBecca blew out a breath. I'm pretty sure I had blown her mind. \"I think I'm going to get a shower and head to bed early.\"\n\n\"Oh, OK,\" I said, trying not to sound as disappointed as I was. Had I messed thing up with her? Did she now think I was some kind of pervert? \"Have a good night,\" I said, spreading my arms, and she immediately came in for a hug, pressing her thinly covered C-cup breasts against my chest. I kissed her on the cheek and gave her a good squeeze. \"I love you.\"\n\n\"Love you too, dad.\"\n\nI couldn't help but notice her almost bare ass cheeks shifting and bouncing as she walked out of the living room.\n\n* * * * *\n\nBecca was floored. She felt like her dad had dropped a bomb on her. Her mom had been a nudist? Or at least, if her dad was to be believed\u2014and she had no reason to doubt him\u2014they had been on their way to becoming nudists together. Or naturists. And how, if at all, did this change things with her dad? Well, he was actually her stepdad, wasn't he? She had thought of him as simply dad for so long that there was no real difference.\n\nShe tossed her t-shirt and panties in the clothes basket in the bathroom and started the shower. As she mechanically went through the motions of washing her hair and body she imagined going to a nude beach. She wondered what it would feel like to take off her bikini and set it on her beach towel as she walked to the water completely nude. In her imagination, all the guys at the beach stopped dead in their tracks and stared at her private parts as she walked. The Becca in her daydream immediately started to cover her naked body with her arms, but she forced herself to relax and walk normally into the water. As she submerged her body, the men all went back to their normal activities. Then she plucked up the courage to walk back to her beach towel. As she did, all eyes were once again on her nakedness. She quickly lay on her beach towel and put sunglasses over her eyes. From behind the dark shades, she watched as guys walked by, their eyes lecherously crawling over her bare breasts and pussy. Eventually, a group of men gathered around her beach towel and stood there staring at her. To her surprise, she spread her legs and began to masturbate.\n\nWhat the fuck! Becca stood in the lukewarm shower shivering as her fantasy popped like a soap bubble. She felt her face turn hot as she glanced down at her nipples. They were as erect as she had ever seen them. Quickly, she shut the water off and wrapped towels around her hair and body, then walked to her bedroom and shut the door. As she finished drying, she couldn't rid her mind of the explicit daydream.\n\nTossing the towels on the floor, she crawled into bed. She normally slept naked, only donning panties and a t-shirt when she left her room. Now she wondered about that. Her dad hadn't taught her to do that. It was something she had started doing a few years ago. She wasn't exactly sure why. But it felt better to sleep without clothing. Was it in her blood? Was whatever compulsion that had prompted her mom to try out naturism buried in her own subconscious? She had never even thought about public nudity until her dad had mentioned it. Now she couldn't stop thinking about it.\n\nHer hand found its way to her smoothly shaved mound and the wetness between her lips, and she slid two fingers inside her vagina. The thoughts in her head had made her incredibly wet. She pumped her fingers in and out a few times, coating them with slippery vaginal lubricant, and began working herself up. Reaching into her nightstand drawer, she pulled out a tiny vibrator, no longer than the palm of her hand. A friend had bought it for her as a gift and she had used it almost every day since.\n\nShe clicked the button to turn it on and pressed it against her clit. Mmm. She shoved the two fingers back inside herself and pumped her wet pussy. Once again, she was on the nude beach. Her daydream picked up right where it had left off, with her masturbating in front of a group of guys. They were stroking their hard dicks, standing in a circle around her beach towel. As she got closer and closer to orgasm, she felt the first splash of cum fall on her belly. More and more semen began to rain down on her, falling on her legs, her tits, her face. As every part of her body felt the wetness of their thick sperm, she knew she was going to come.\n\nBecca's eyes squeezed shut as her wet fingers noisily pumped in and out of her pussy. The low, steady hum of the vibrator against her clit caused her vaginal muscles to seize as strong contractions gripped her womb. Over and over, she bucked as she came, and she let out a long moan as the powerful orgasm assaulted her body. When she could take no more clitoral stimulation, she clumsily shut off the vibrator and let it fall to the bed. Her fingers continued to massage herself inside as she lay there embarrassed and ashamed of the fantasy that had just played out in her head.\n\n* * * * *\n\nAfter my show was over, I set my tea glass in the sink and headed upstairs. The hallway was humid with warm air and smelled like shampoo and soap from Becca's recent shower.\n\nNervously, I stopped and listened with my ear pressed against her door. I could hear a low hum and the only thing I could think of was that it sounded like a vibrator. Huh. I hadn't known she owned one.\n\nSuddenly, Becca let out a long moan and my heart began to beat faster. Holy shit! I had just heard my daughter have an orgasm. After thirty seconds of listening and not hearing anything more, I became too nervous to stand there any longer. I tiptoed directly across the hall to my bedroom and quietly shut the door. My dick was already halfway erect, and within a few minutes I was shooting a powerful load into some tissues. I fell asleep trying to imagine what Becca's face looked like as she came.\n\n* * * * *\n\nFriday\n\nThe next day, Becca seemed a little distant, or maybe just lost in her thoughts. I was in my home office for most of the day, but from the little I interacted with her during my breaks I could tell she wasn't herself. By the time I called it quits, she was back at work.\n\nWhen she came home after 9pm, she kicked her shoes off by the door and took her usual spot on the couch next to me. I was relieved to see that she snuggled into me just as closely as she had the night before. Whatever she was preoccupied with, it hadn't come between us.\n\n\"Hi, sweetie. How was your night?\"\n\nBecca shrugged her shoulders. \"Same.\"\n\n\"How are your feet?\" I asked, hopeful to repeat last night's activities.\n\n\"Sore,\" she said, glancing at me out of the corner of her eye.\n\n\"Do you want another foot massage?\" I asked.\n\nBecca stiffened under my arm, but then relaxed. She looked up at me and asked, \"Are you sure you wouldn't mind? It felt really good last night.\"\n\n\"I don't mind at all,\" I replied with a smile. I sent her upstairs to get changed into her night clothes and was pleased to see she hadn't altered her routine. She wore a strappy tank top that was just as thin as her usual t-shirts and her nipples made serious indentations in the material. It was a little disappointing to see she wasn't wearing a thong. But her light blue bikini panties were small, and they clung tightly to her vulva, producing a noticeable camel toe in the front. Oddly, she was still wearing the socks she had worn home under her work shoes.\n\nShe lay down on the couch exactly like she had last night, tugging the hem of her shirt down to modestly cover as much of her panties as possible\u2014which wasn't much. I could still see her pubic mound nestled between her sexy thighs. And pulling on her shirt had displayed the shape of her nipples even more prominently.\n\nI peeled her sweaty socks off and the musty scent of her feet wafted up into my nostrils. They had a definite odor, but it wasn't the stinky, sour stench that some people produce. It was just a stale smell of feet that hadn't been exposed to fresh air in a few hours. I couldn't wait to smell them up close.\n\n\"Ugh, I can smell them from here,\" she whined, beginning to pull her feet off my lap.\n\nI grabbed them and held them in place. \"Becca, there is nothing wrong with your feet. You have a natural scent that is not bad or disgusting. I will prove it to you. Do you trust me?\"\n\nBecca looked unsure and a bit frightened of what I might do.\n\n\"Do you trust me?\" I asked again.\n\n\"Of course, I trust you, dad. I just don't like the idea of you telling me they don't stink, when you might actually be disgusted by them.\"\n\n\"I promise I don't find your feet disgusting in the slightest way. Now, don't pull away. You said you trust me. Do you swear not to move them?\"\n\nBecca nodded her head, but her face was a mask of anxiety.\n\nI lifted her foot up to my face and stuck my nose between her sweaty toes. She cringed and began to tense up, but I held her fast. I drew in a deep breath and closed my eyes. Her fragrance was like an aphrodisiac and I savored every second of it, sucking it deeply into my sinuses. Becca looked mortified.\n\nI grabbed her other foot and brought it up next to the first one. I repeated the act, sniffing the rich aroma from between her toes. My cock was beginning to swell, so I quickly grabbed the pillow and placed it on my lap again. I set her feet on the pillow and began rubbing them, leaning down, and sniffing them a couple more times. I smiled at her and she tried to smile back, but she couldn't muster the sincerity to pull it off.\n\n\"What are you thinking right now?\" I asked.\n\n\"I'm thinking you're a weirdo,\" she replied honestly.\n\nI laughed. \"Why am I a weirdo? Because I like the smell of your feet?\"\n\n\"Uh, yeah!\" she said in that singsong teenaged attitudinal way.\n\n\"What's not to like? They are cute. They are clean. You take good care of them. I can tell you have had a pedicure recently. They are smooth and soft. They feel nice in my hands. And yes, I like the smell of them\u2014even when they've been in your shoes for hours. I don't think that makes me a weirdo. I just appreciate everything about you, and I don't find any part of your body repellant in any way.\"\n\nBecca swallowed nervously. \"Do you have some kind of foot fetish?\"\n\nWow. There it was. I hadn't really expected her to even know what that was. And I definitely hadn't expected her to call me out on it. I paused for a moment to gather my thoughts. I wanted to word things in just the right way.\n\n\"A fetish is often tied into a sexual desire, but it doesn't always have to be. I would definitely say that I have a foot fetish, but you are my daughter and\u2014\"\n\n\"Stepdaughter,\" she interjected, testing me.\n\n\u2014I...yes, my stepdaughter...and I am not trying to be sexual with you. I guess one of the benefits of my foot fetish is that I'm not turned off in any way by the sight or smell of your feet. And that goes beyond feet, by the way. I consider myself a 'smell guy'. I enjoy all of the natural scents and aromas that are emitted by a clean, beautiful girl.\"\n\nI hoped she had bought it, because inside I was a ball of sexual frustration. But I couldn't let her know that. At least, not yet.\n\nShe bit her lip as I continued massaging her feet. I could tell her mind was awhirl with thoughts.\n\n\"And what we talked about last night\u2014naturism\u2014isn't tied into sex either. Sexual acts are forbidden at most naturist activities. It's about people loving life in their own bodies, unashamed of their nakedness, and wanting to enjoy as much time as possible without the restrictions of clothing.\"\n\nI rubbed her ankles and her calves as well, and goosebumps pebbled her skin. Her breathing had deepened, and she was staring off into space. \"What's on your mind?\" I asked.\n\nBecca's gaze landed on me and her eyelids fluttered. \"I can't deny that what you told me last night kind of rocked my world. I can't believe you and mom actually took your clothes off in public! It blows my mind. But the more I think about it the more the idea...umm...has a certain appeal.\" She blushed furiously.\n\nI smiled and nodded. I was pretty sure she had been about to say 'turns me on' before she caught herself, but I couldn't be certain. Still, the seeds had been planted, and it seemed they might be growing.\n\n\"Well, if it sounds like it might be something you are interested in, the safest thing to do is to begin at home. It's just me here, and I'm the last person who would judge you for wanting to take off your clothes.\"\n\nBecca's face turned red. \"I don't know if I could walk around naked in front of you, dad.\"\n\n\"Look at it this way,\" I said. \"Every morning and evening I see you halfway between dressed and naked. Right now, you are in panties and a thin shirt, as usual. And you obviously aren't wearing a bra under that material.\"\n\nBecca self-consciously crossed her arms in front of her chest as her mouth gaped open in mortification.\n\n\"I'm not saying this to be sexual. As I said, nudity and sex don't necessarily go hand in hand, like at the naturist beaches and camps. So, taking off your shirt and panties would totally be no big deal. At least not to me. I've seen plenty of naked girls in my life. It wouldn't be shocking in the least. It's just your own insecurities and fears you have to overcome.\"\n\nBecca's toes scrunched up as I began to rub them again, and I noticed her legs were covered in serious goose bumps. I looked at her and smiled.\n\n\"I'm totally serious, sweetie. If naturism, or whatever you want to call it\u2014enjoying some time around the house clothes-free, if you will\u2014is something that you want to explore, there is no safer place than right here. It's your house as much as it is mine.\"\n\n\"What about you?\" Becca asked a little defensively. \"I don't see you walking around naked.\"\n\n\"Well, we haven't discussed it before now. But I have absolutely no problem taking my clothes off. I'll do it right now. I don't care.\"\n\n\"No, that's OK,\" Becca said quickly. \"I have to think about this. I don't know if I'm ready to try something like that. Or to see you do it. It's just...too weird.\"\n\n\"OK. That's fine. Just let me know what you decide. If you want to give it a try, I'll definitely join you. If you think it's not the way to go, then I will respect your wishes and keep my clothes on as well.\"\n\nBecca nodded and withdrew her feet from my lap. She sat up next to me and stared into my eyes, her thoughts unreadable. \"Thanks, dad.\"\n\n\"For what?\" I asked.\n\n\"For being so understanding. And cool about this. I'm not saying that I wouldn't ever give it a try. I just need to think about it.\"\n\n\"Of course,\" I replied, giving her a hug.\n\nBecca retired for the night and went upstairs to take her nightly shower. After a couple minutes, I went upstairs as well. She was still in the bathroom, so I went to my bedroom. Once I heard the bathroom door open, I waited a minute and crept out into the hallway. I tiptoed up to her closed door and listened, but I heard nothing except her television. Nervously, I walked back to my own bedroom and fell asleep imagining what she looked like naked and wondering if I might actually get the opportunity to find out.\n\n* * * * *\n\nSaturday\n\nBy 10am the next morning, Becca still hadn't come out of her bedroom. It was Saturday, so my work schedule was on my time. I had no meetings, because the companies I worked for were out of office on the weekend, but I normally used Saturday and Sunday to catch up on my workload. After grabbing some food in the kitchen, I started to head upstairs and saw Becca's bedroom door open up. Her room was the first door on the right at the top of the stairs, with my bedroom directly across the hall from hers. The bathroom was at the end of the hall on the right, across from my office. As I slowly ascended the stairs, she turned toward the bathroom and I saw her from the back. She was wearing panties, but no shirt.\n\nRealizing she was taking a brave new step, I froze on the stairs, not wanting to spook her. But as she continued down the hall, I climbed up a couple more steps so I could keep her in view. She glanced into my office, then turned right into the bathroom, giving me a split-second view of side-boob and nipples. I was shocked. I couldn't believe she had actually walked out of her room topless. I hadn't been sure if my words had been having any effect on her, but obviously they had.\n\nI walked quietly to the end of the hall and listened with my ear to the bathroom door. I could hear the musical tinkling of her pee as it hit the water in the toilet bowl. After the toilet flushed, I quickly tiptoed across the hall to my office and had a seat at my computer. I waited for a couple minutes, but when the bathroom door didn't open, I crept out into the hallway and listened again. The shower was running, so I stepped back into my office. Instead of sitting at my desk, which didn't have a direct view of the door, I lay down on the leather couch that I used for power naps. It gave me a direct line of sight into the hallway, and I could see the closed bathroom door from where I lay. I munched on the toast I had made while I waited.\n\nAfter about ten minutes, the bathroom door opened and there stood Becca in just her panties\u2014freshly showered with her bare breasts in the open air and her hair up in a towel. She peeked around the corner, looking to see if I was anywhere in the hallway, before stepping out of the bathroom. Then she looked into my office and her eyes landed on me lying there on the couch. I waved and said, \"Hi, babe!\"\n\nBecca squealed and darted down the hallway, out of my view. She didn't enter her bedroom, though. Or at least, I didn't hear her door close. \"I didn't mean to startle you!\" I yelled from my position on the couch. A couple seconds later, Becca poked her head around the doorjamb.",
        "\"Uh, that's OK. Good morning,\" she said in a nervous voice.\n\n\"Come in,\" I said. \"You don't have to hide.\"\n\n\"Umm...I'm topless, dad. I thought I would be daring and give it a try, but now that I'm half naked, I'm suddenly way more nervous than I thought I would be.\"\n\n\"I saw that you were topless,\" I replied, smiling. \"I was coming up the stairs when you went into the bathroom and I caught a glimpse at that time. And just now, when you walked out of the bathroom, I got a pretty good view of your bare breasts. It's OK, though. I applaud you for taking that first big step. Do you want to come in the room?\"\n\nBecca's eyes were wide, probably embarrassed that I had already seen her, and I could see she was trying to decide whether to purposefully expose herself to me. Slowly, she walked into the doorway. She was standing in nothing but her bikini panties with her arms crossed over her chest and she shifted nervously from one bare foot to the other.\n\n\"Are you going to stay topless for a while or is this too much for you?\" I stayed where I was, reclined on the leather couch with my fingers interlocked behind my head\u2014the picture of nonchalant relaxation.\n\n\"I don't know yet,\" she replied. \"I'm scared.\"\n\n\"Aww, don't be scared, sweetie. Nothing is going to happen. Either stay that way and enjoy it or go get dressed. Nobody is forcing anything on you. But if you decide to stay topless, I promise you that it will be no big deal.\"\n\nBecca breathed deeply in and out and looked at a point above her head. Her eyes stayed fixed on the ceiling as she lowered her arms and exposed her breasts to me. I had seen her in a bikini top more times than I could count, and I had always guessed that she was probably a C-cup. Seeing her bare breasts confirmed that my guess was most likely correct. They were nice and full, with tiny areolae and nipples that were a deep rose-pink color. Her breasts were much whiter than the surrounding flesh and her tan lines were fairly pronounced. To be honest, seeing her breasts jogged a memory and I realized they reminded me very much of her mother's. As I studied her, I noticed that she was no longer staring at the ceiling, but neither was she looking at me. It seemed she was too embarrassed to meet my gaze.\n\n\"Becca,\" I said. \"Look at me.\"\n\nHer eyes blinked a couple times before she forced herself to look into my eyes, nervously bouncing on her heels, which unknowingly caused her breasts to jiggle.\n\n\"You are absolutely stunning,\" I stated. \"And guess what? The world didn't end because your breasts are exposed.\"\n\nShe gave me a half-smile, but her arms moved upward as if she wanted to cover herself again.\n\n\"Think about it. You are in your own house. I'm the only one here besides you. You are completely safe. And you're topless. I've now seen your breasts. No big deal. So, feel free to continue to be topless, or to get dressed. It's totally up to you. And if you want to explore the idea of being completely nude, that would be equally acceptable.\"\n\nBecca bit her lower lip and let her arms drop. She stepped into my office and walked around, looking at things as if she had never been in this room before. I think she was simply testing the fact that she was actually naked in front of me and trying to resolve it in her mind. She stepped over to my computer, then walked to the window and peeked out between the blinds. Then she approached me, her diaphragm moving up and down as she took deep, nervous breaths. I sat up on the couch and she took a seat next to me. She looked around the room again for a moment and then forced herself to stare into my eyes. I purposefully waited until she was looking at me before I glanced down at her breasts, which caused a small gasp to escape her lips. Up close, they were fucking gorgeous. They were round, white globes and they looked amazingly soft. Each areola was small and deeply pink with tiny little bumps around the circumference, and her nipples stuck out like hard little buttons. I looked back up into her eyes and smiled.\n\n\"How do you feel?\" I asked.\n\n\"Very exposed,\" she said. Her voice had the slightest quaver to it. \"But the longer I have been in this room, the more I'm getting used to it. It's like I had to break down something that was taboo in my mind. I'm still trying to fight my instinct to run and hide.\"\n\n\"That's all it is,\" I replied. \"It is the breaking of what you have always thought to be a hard societal rule. Society says it's wrong to be naked in front of other people unless you are being intimate with them. But once you disassociate nudity from the idea that it is bad or wrong, you discover that it is not only not a big deal, but it is actually fun and quite pleasurable.\"\n\nBecca nodded as she listened to my words. \"So, you seriously wouldn't care if I was topless around the house at any given moment on any given day?\"\n\n\"Nope,\" I replied. \"Like I said, you could be completely nude for all I care.\"\n\nBecca blushed and almost covered her breasts before forcing her hands to relax in her lap.\n\n\"Let's play it by ear,\" she said with a nervous smile.\n\n\"Let's do that,\" I said. I stood up from the couch and walked over to my computer desk. \"I'm going to get a couple hours of work done. Feel free to do whatever you want, dressed or undressed.\" I smiled and gave her a wink.\n\nBecca's face lit up with that radiant smile that she always got when she was really happy about something and walked out of the room.\n\n* * * * *\n\nAs she returned to her room, Becca exhaled loudly. She closed the door behind her and sat on her bed. Looking down at her breasts, she saw that her nipples were extremely erect, and she blushed knowing her dad had seen them in that state. She unwound the towel from around her head and tossed it in her laundry basket, then lay down on her bed, pulling her damp hair to the side. She slid her fingers underneath the elastic waistband of her panties to find that she was incredibly wet.\n\nThis morning it had taken her an hour and a half to work up the courage to leave her room with no t-shirt on. She had almost chickened out numerous times, but eventually she forced herself to act. She had been tired of putting off her shower, and so she decided to go for it. When she left her bedroom, she had glanced around but hadn't seen her dad anywhere. That had been a relief because it would allow her to grow accustomed to being topless in the house by herself before she had to think about doing it in front of him.\n\nAfter her shower, she had opened the door quickly without thinking. And when she saw him lying on the couch in his office, she had panicked. Suddenly, her bravado had flown out the window. When he called her into his office, she had thought she might pee herself. But after hearing his words of encouragement, she had decided to take a leap of faith and just get it over with. And to be honest, she was glad she had. The feeling of being seen by him was electric. She was embarrassed by how much she had enjoyed it.\n\nAs Becca recounted what she had done, her fingers slipped in and out of her slick pussy, working her body up to the point that it felt like she had a fever. Her face and chest were hot, and she felt little prickles all over her skin. She rubbed and fingered herself under her panties, her other hand playing with her little nipples, until she reached the point when she couldn't stop, the pressure ready to burst. Her entire body went rigid, and her toes scrunched up tightly as she feverishly polished her clit. When the first waves of the orgasm washed over her, she cried out loudly as the strong muscular contractions in her vagina drove her into a state of painful pleasure. Her eyes shot open, and she slapped her hand over her mouth as she stared at her closed bedroom door. Moaning into her hand, her fingers continued their assault on her sensitive nub as she rode the orgasm to its finish.\n\nShe really hoped her dad hadn't heard that. How embarrassing.\n\nBecca lay there panting as she wiped the sweat from her face. Her fingers smelled like her pussy. She decided she was famished, so she pulled on a pair of cutoff denim shorts over her panties and stood at the door working up the courage to open it. After a few seconds of indecision, she twisted the handle and walked out. She went into the kitchen and fixed herself some eggs and toast and poured a glass of orange juice, then took the food into the living room and sat on the couch. Finding an episode of Friends, she watched TV and ate. It didn't take long before she forgot she was topless.\n\n* * * * *\n\nAfter a couple hours I decided to take a break from my work and grab a snack. I walked down to the kitchen and broke a banana off the bunch. When I walked around the corner into the living room, I stopped dead in my tracks. Becca was asleep on the couch, lying on her side, in nothing but shorts. Apparently, she hadn't heard me, so I took a seat on the opposite section of the L-shaped sofa. Her bare breasts rose and fell with each breath. I tried to see her as my daughter, but it was difficult. I was beginning to look at her as a woman\u2014a beautiful, incredibly sexy young woman. God, I hoped I wouldn't mess this up.\n\nShe never woke, so I let her sleep. After I ate the banana, I went back up to my office and shut the door. I didn't want to, but I couldn't help masturbating as I pictured Becca's nubile breasts.\n\n* * * * *\n\nMuch to my surprise, Becca stayed topless for the entire day. When the evening came, I took my usual spot on the couch and turned on a movie I had seen a dozen times. After my workload, I sometimes liked to veg out and not concentrate too intently on anything\u2014even television.\n\nBecca sauntered downstairs and flopped down next to me, trying, but not quite succeeding, to act nonchalant about the fact that her boobs were out. Her eyes kept flashing down to her breasts and then over to me in a nervous pattern. When I didn't acknowledge her toplessness, she wrapped her arms around my bicep and hugged into me, pressing her soft breast into my arm. I looked at her and smiled, then leaned over and kissed her on the cheek. It was obvious that she wanted me to notice her, so I decided not to tease her any longer.\n\n\"How are you feeling about being topless today?\" I asked.\n\nBecca swallowed audibly and said, \"It's been...different.\"\n\n\"Different in what way?\" I prodded.\n\n\"Well...I was really nervous this morning. But as the day has gone on, I've gotten a little bit used to it, although it's...\" She let it hang there.\n\n\"It's what?\" I asked.\n\nHer face colored and she looked down in her lap. \"It's...it's kind of...exciting. Like...an electric jolt in my chest...when you look at me.\"\n\n\"Do you mean it's sexually exciting? Or some other kind of exciting?\"\n\nBecca threw a wide-eyed look at me. \"I mean, it's not like that,\" she said a little too quickly, possibly trying to cover up the fact that there may indeed have been some kind of sexual spark there. \"But...I don't know how to explain it exactly.\"\n\nI nodded and smiled. \"Being nude can be exciting.\" After an awkward silence between us, I asked, \"Would you like a foot massage?\"\n\nBecca's eyes closed for a second and she shuddered. I could tell she was struggling with something under the surface, and I wasn't quite sure what it was. But I had my suspicions. I wasn't finding much, if any, resistance to my suggestions lately, so I decided to up the ante. If I ran into a problem, I would deal with it when it came up. \"Well?\" I asked.\n\n\"I didn't work today, so my feet aren't sore. You don't have to,\" she said unconvincingly.\n\n\"Your feet don't have to be sore to enjoy a foot rub,\" I countered with a smile.\n\n\"Well, only if\u2014if you don't mind,\" she stated, focusing on no one in particular, yet not moving from my side.\n\nI patted her bare knee to signal that she should lie down. She did just that and set her feet in my lap. Again, I marveled at how smooth and flawless her feet actually were. Her long bare legs went all the way up to her short, cutoff denim shorts, and everything else above her waistband was naked as well. I noticed the diamond stud she wore in her navel, then I paused to study her breasts again from this front-facing position and her face turned beet red. Her chest heaved as I stared at her.\n\n\"Beautiful,\" I stated.\n\nBecca blinked a couple times, took a deep breath, and said, \"Thanks...dad.\"\n\nHer pronounced use of my familial title made me think that she was putting me in my place a little bit. I gave her a wry smile as I placed the throw pillow on my lap and went to work on her feet. After ten minutes of massaging her toes, heels, arches, and ankles, Becca was completely relaxed, and I decided to take a chance.\n\n\"Would you mind if I smelled your feet again?\" I asked hopefully.\n\nBecca's eyes shot open, and the mask of relaxation fell away. \"Why?\" she asked.\n\n\"Well, as I told you before, I do enjoy feet. I actually enjoy your feet a lot. They are soft and smooth and very pretty. And I'd really like to smell them again if it's OK with you.\"\n\nShe gave me that same grimace of disgust, although I didn't think it was quite as pronounced as last time. \"I guess,\" she said, conceding reluctantly.\n\nI gently brought a foot up to my face and stuck my nose between her toes, breathing deeply. Her feet weren't sweaty or nearly as aromatic as they had been last night because she hadn't had shoes on all day. Although, they were just a little bit discolored with dust and dirt from the floor. No matter how clean your house is, you will never get a hundred percent of the dirt off the floor, and it will always show on your bare feet. I did the same with the other foot, secretly wanting to jerk off, but of course I refrained.\n\nThroughout my olfactory orgy, Becca had watched me with a mixture of curiosity and disgust\u2014like I was a rare specimen of insect she had never seen before. After a moment, though, she no longer looked nauseous. As I continued to rub her feet, sniffing between all of her toes, her eyes closed again, and she sunk into the throw pillow that was under her head. I watched in amazement as her hands subconsciously reached up and squeezed her erect nipples, her thighs pressing together as she did so. Her hands returned to her lap and she opened her eyes, continuing to watch me. I don't think she even realized what she had done in front of me. After I had gotten my fill, I continued with the massage, but Becca didn't seem nearly as relaxed as she had been. She fidgeted constantly and I could tell she wanted me to stop, so I brought the massage to an end.\n\n\"How is that?\" I asked.\n\n\"That felt really good, dad. Thank you.\" She sat up and kissed me on the cheek. Her face was scarlet. \"I'm going to head to bed for the night.\"\n\n\"OK. Have a good night. Love you.\"\n\n\"Love you,\" she replied as she ran upstairs.\n\n* * * * *\n\nBecca shut the bathroom door and sat down on the toilet. She was shaking. And confused. She couldn't believe she had let her dad smell her feet again. It seemed so dirty\u2014and sexual\u2014despite what her dad had said. He hadn't reacted like it was affecting him sexually, but she was mortified to admit that it had had that very effect on her. Her clit was throbbing. It was all she could do to get through the massage without having an orgasm in front of him. Despite her humiliation and shame, she realized that she needed to come.\n\nShe stood up and unbuttoned her shorts, letting them fall to the floor. She pulled down her panties to find a gooey mess inside. They were soaked and the gusset was sticky with white, creamy discharge. She pulled her panties off and threw them toward the basket of dirty clothes, then pulled her shorts back up and hurried to her bedroom.\n\n* * * * *\n\nAfter I was flaccid enough that it wouldn't be embarrassing to walk around in front of my daughter, I replaced the throw pillow next to the arm of the couch and headed upstairs to the bathroom. As I was standing at the toilet, taking a piss, my eyes caught a blue pair of Becca's panties hanging halfway over the side of the laundry basket. I shook off and tucked myself away, then flushed and turned around to sit on the toilet lid. I gingerly picked up the panties and turned them this way and that, studying them. When I saw the gusset, my breath caught in my throat. These weren't an old pair. She had just taken these off. She must have been wearing them while I gave her the foot massage and by the look of them, she had been seriously aroused. That thought brought a smile to my face.\n\nI lifted the panties to my nose and inhaled. The strong musky scent of Becca's vagina filled my nostrils and my chest constricted with desire. My tongue snaked out and touched the sticky discharge. It was still warm and viscous, and incredibly fragrant. It was something I hadn't experienced in way too long, and it tasted like pure, feminine sexuality. I spent the next five minutes licking the panties clean, swallowing and savoring every bit of Becca's vaginal ambrosia. After I had cleaned up all of her discharge and the panties were soaked with my saliva, I buried them under some other dirty clothes in the basket and hurried down the hallway to my bedroom.\n\n* * * * *\n\nBecca's fingers pumped in and out of her creamy pussy as she lay on her bed, her legs tensing and jittering on top of her covers. The sloppy noises were loud in her ears but slowing down just for the sake of modesty wasn't an option. She was almost there. Reaching down she rubbed her clit as she fingered herself. Within moments, she cried out in orgasm, shaking and leaking all over her hand, and making a fairly large wet spot on her comforter.\n\n* * * * *\n\nAs I stroked myself, I heard Becca moan from her room directly across the hallway. Apparently, we were doing the same thing. Hearing her reach her climax pushed me over the edge and as my balls released, jets of cum landed all over my chest. I made sure to remain silent throughout. Even though she had the luxury of being loud, I didn't. All it would take to mess this up was the slightest inference that I was deriving sexual pleasure from our interactions. I was playing a long game and things seemed to be right on track.\n\n* * * * *\n\nSunday\n\nSunday morning, I went downstairs to our home gym, which was set up in our laundry room. It was a grossly oversized laundry room, and when I had bought the place, I wondered what to do with the space. When I realized I could fit a treadmill, a stationary bike, and a weight bench in there comfortably, it became our gym.\n\nI had been on the treadmill for about twenty minutes when Becca appeared in the doorway. She looked like she had just rolled out of bed\u2014she had bedhead, her eyes were puffy, and she stood in the doorway and yawned. She was once again topless, in nothing but a white pair of panties. I paused my run and hopped off as the treadmill decelerated to a stop.\n\n\"Morning, babe,\" I said breathlessly as I stepped onto the floor.\n\n\"Morning,\" she replied in a sleepy voice.\n\nI walked over to her and held my arms out for a hug. Becca froze for a split second, struggling with the idea of hugging me. I, myself, was only wearing sneakers and a pair of running shorts, and I'm sure she realized that she would have to press her bare boobs against me. She smiled awkwardly and reluctantly came in for the hug. Her breasts felt exquisite as they squished into my chest and blood instantly surged into my cock. Her bare back was warm and soft beneath my hands.\n\n\"Ew!\" Becca whined as she immediately pulled away from me. \"You're all sweaty!\"\n\nI laughed. \"Sorry.\"\n\nBecca wiped her hands straight down her wet breasts, pushing them flat. They bounced back to their natural shape as her hands continued down her stomach. Her nipples suddenly seemed more erect than they had before.",
        "\"What's on your agenda for today?\" I asked with a smile, surreptitiously studying her boobs as she yawned again.\n\n\"I'll probably just lie by the pool for a while,\" she said.\n\n\"Hmm...\"\n\n\"What?\" she asked. \"What does that mean?\"\n\n\"Oh, nothing,\" I said. \"I was just wondering if you would be topless.\"\n\nBecca's eyes grew wide. \"No way! I don't want anyone to see me!\"\n\n\"No one would see you,\" I assured her. \"We have a privacy wall surrounding our property for a reason. No one can see into our back yard.\"\n\n\"Still!\" she exclaimed. \"What if someone came around to the gate? Or what if...I don't know...it's not like it's impossible for someone to see me!\"\n\n\"Well, it's not impossible, I suppose. But it's not likely. And part of practicing naturism is not caring if someone sees you naked. In fact, it can be enjoyable when someone new lays eyes upon your nude body. It's exciting.\" I smiled broadly, trying to make her feel more comfortable with the idea.\n\nBecca gave me a shocked look and unconvincingly said, \"I'll think about it.\"\n\n\"Just an idea,\" I said as I shrugged.\n\nBecca smirked and rolled her eyes as she turned and walked out of the room. Her ass cheeks shifted and jiggled as she left.\n\nMy penis had been growing steadily at the sight of her bare boobs, and my shorts were beginning to tent by the time she walked out. And the sight of her fantastic ass hadn't helped my predicament. I really hoped she hadn't noticed. Immediately, I jumped back on the treadmill and continued my run, trying to think of anything else.\n\n* * * * *\n\nBecca had been lying by the pool for an hour, the conversation with her dad running through her mind the whole time. His words had really gotten to her and when she had left him to his workout and returned to her room, she had begun to wonder why she couldn't be topless at the pool. There was no one back there who would see her. So, she had dug to the bottom of her drawer to find a bikini she had ordered on impulse but had never worn. She walked downstairs self-consciously, wondering where he was, then walked through the sliding glass door onto the back deck with her tanning oil, towel, and sunglasses.\n\nShe fidgeted on the towel, trying to get comfortable. Her orange bikini was smaller than those she normally wore. The fabric triangles over her breasts showed white skin around the edges which was normally covered by her other bikinis. And her bottoms consisted of a small fabric patch that covered her pussy, tying on each side with only strings. Her entire ass was visible, with only the connecting strings at the top of her crack, which covered absolutely nothing.\n\nAfter a tortuous period of indecision, Becca glanced back at the house and around the yard but didn't see anybody. She quickly untied the bikini top and dropped it on the stone tiles next to her, exhaling loudly. Her nerves were on edge as she lay there in the back yard with her breasts completely exposed.\n\nIt took some time for her to feel comfortable enough to relax. Once she realized that the Bare Boob Police weren't going to come flying over the wall like nudity commandos, she began to understand what her dad had been talking about. It actually felt really good to be topless outside. The sun on her naked breasts was warm and the air currents felt especially nice on her nipples. She glanced down to see that they were quite swollen and erect. Blushing, she looked back at the house again, but her dad was nowhere in sight. She exhaled nervously and tried simply to enjoy the moment.\n\n* * * * *\n\nI decided to step away from my computer for a while, so I walked into the hall and saw Becca's bedroom door open. I walked in and peeked out her window to see her lying topless at the pool. The tanning oil made her entire body glisten in the sunlight and her breasts looked amazing. I could feel my dick instantly respond. I quickly took a look in her hamper and saw the white panties she had been wearing when she hugged me earlier. They had a little bit of dried discharge on them. I glanced out the window, just to make sure she hadn't moved, then I smelled and licked the panties clean. My saliva reactivated the dried discharge, and the salty, musky taste exploded in my mouth. I reached down and pulled on my hard cock.\n\nAfter I cleaned up the panties, I used them to stroke myself. Knowing that I was masturbating in Becca's underwear had me ready to blow my load in no time. I glanced out the window every few seconds, making sure she was still there, as I brought myself nearer to orgasm. After one final look out the window, I sat on the edge of her bed and groaned as I filled her panties with my cum. Once I came to my senses, I looked outside again. She was still there at the edge of the pool. I used the panties to clean myself up and shoved them down under some other clothes in her hamper. Then I headed to my room and changed into swim trunks.\n\nWhen I walked outside, I saw Becca sit up nervously as she covered her chest with her arms. \"It's just me,\" I said as I walked to the edge of the pool. Becca lay back down and let her arms fall to her sides as I stepped down into the water, not stopping until I was submerged.\n\n\"Hi, dad,\" she said from behind her dark sunglasses after I had come up for air.\n\nI slicked my wet hair back against my scalp and swam over to the edge of the pool. \"How does it feel?\" I asked.\n\nShe looked around, checking the gate by the side of the house, and said, \"It feels nice. I'm a little nervous, but it feels good.\" She gave me a half-smile, like she was unsure if it was OK for her to be enjoying her toplessness.\n\n\"That's great,\" I replied with a smile. \"No need to be nervous. Even if someone did come around the house to the gate, you are in your own back yard on private property. You aren't doing anything illegal. So, don't worry about it. And if it were someone we don't know, you could always hold your arm in front of your breasts or put your top back on if you feel uncomfortable. The key to naturism, though, is enjoying your nakedness and letting others enjoy it as well.\"\n\nBecca's chest rose and fell as she breathed deep, nervous breaths, taking in my explanation. She bit her bottom lip and gave me a brief nod of her head, letting me know she understood.\n\n\"Maybe we should order a pizza and have it delivered back here. I could let you take care of the payment if you want. It would give you a little experience with public exposure, while remaining in a safe environment. What do you think?\"\n\nBecca's jaw dropped as I suggested it. She began to shake her head. \"I couldn't do that, dad.\"\n\n\"Why not?\" I asked.\n\n\"What if it was someone I know? Like, a boy from school?\"\n\n\"So, what? You're graduated. You don't go to school with those kids anymore. And the likelihood that it would be someone you know is probably pretty slim. It would most likely be a total stranger. Maybe even an older guy. Someone who you might never see again. How about it? Should we give it a try?\"\n\nBecca swallowed nervously. \"I don't know, dad. I don't know if I could.\"\n\n\"Well, I'm getting hungry for lunch. I'm going to go ahead and order. You do whatever you want. You can put your top back on, or you can even go inside if you want. It's totally up to you.\"\n\nI walked into the house and grabbed my phone and wallet, then went back outside to join Becca. I called up one of our favorite pizza places and ordered a large hand-tossed supreme. I gave them our address and told them to come around to the right side of the house and knock on the gate in the privacy wall. Once I disconnected the call, I glanced over at Becca and saw her cheeks were a shade of scarlet that had nothing to do with the sun.\n\n* * * * *\n\nBecca watched the time on her phone like a hawk. She was so nervous, knowing the delivery person would be there within minutes. She glanced at her bikini top lying on the tiles next to her. It would be easy to put it on right now. Heck, she didn't even have to have anything to do with the delivery. She could tell her dad that she didn't want to do it, and he would handle it. But part of her was screaming inside. She needed to do this. If she backed out, she would forever wonder what it would have been like. Just as she made a final decision, telling herself that she would be the one to deal with the delivery driver, she heard a knocking on the wooden gate. Her eyes shot to her dad, who was sitting at the edge of the pool with his legs dangling in the water.\n\n\"Pizza's here,\" he said. \"What's it going to be?\" He pulled a $20 bill out of his wallet and set it next to her.\n\nBecca was shaking as she took her sunglasses off. She robotically grabbed the money and stood up, walking in a straight line to the gate. It was as tall as the privacy wall, so it couldn't be seen over, and she would actually have to open it to see who it was. As she approached the gate, she glanced down and saw that her nipples were sticking straight out. With trembling fingers, she lifted the metal catch and pulled the gate inward.\n\nThe guy with the pizza was young with long blond surfer hair, but he wasn't anyone Becca knew. His eyes grew wide as he looked down and saw her bare breasts. Becca blushed furiously. \"Come in,\" she said, opening the gate wide. She led him to a patio table and told him he could set the pizza there. Her dad waved at the driver and he waved back before pulling the pizza out of the insulated bag. His eyes kept flashing between her eyes and her boobs.\n\n\"Uh...that's $14.95,\" he said, then cleared his throat.\n\nBecca handed him the twenty. \"Keep the change,\" she said as she shifted nervously from one foot to the other.\n\n\"Thanks,\" he replied as he took it and closed the pizza bag. \"See you later,\" he said as he glanced first at her dad, then at Becca, and then took a final long look at her tits. Becca walked him back to the gate and latched it behind him. Then she grabbed the pizza and practically ran over to the pool.\n\n* * * * *\n\n\"Oh my god! Did you see the way he kept staring at my boobs?\"\n\n\"I did,\" I replied with a grin. \"How did it feel to have a stranger look at your bare breasts?\"\n\nBecca paused and then said, \"It was...\" She blushed even brighter, and her eyes couldn't seem to hold my stare.\n\n\"Go ahead,\" I said, encouraging her to put her feelings into words.\n\nBecca sat on her towel and crossed her legs. Sweat had beaded on her chest and a rivulet ran down her belly from between her breasts. She glanced around the yard, trying to collect her thoughts.\n\n\"It was conflicting,\" she finally said. \"Before I opened the gate, my heart was beating out of my chest. Then after I did it, and he looked at me, it was like my stomach had all kinds of butterflies in it. And it was like an electric current ran through my body. It felt taboo, like it was really naughty, and I shouldn't be doing it. But it was really thrilling too. Part of me liked it when he kept staring. It was a huge turn...\" Becca cut herself off and gave me an embarrassed look.\n\n\"It was a turn-on?\" I asked, knowing that was what she had been about to say.\n\nShe looked down at her hands and nodded, trying to keep herself from smiling.\n\n\"It's OK to be turned on by it. I know exactly what you are talking about. It is a turn-on when other people see parts of you that are normally covered. Do you think it's something you would try again?\"\n\nBecca thought for a moment, then said, \"I think so. As long as it was here in the back yard.\"\n\n\"Fair enough,\" I said, patting her knee. \"Maybe next time you will be totally nude. Remember, I told you I had no problem with nudity around the house, not just toplessness.\" Becca's eyes grew as big as saucers and I laughed out loud and said, \"Let's eat.\"\n\nI ran back into the house and got us bottles of Coke, then we devoured the pizza. Becca had to be at work at 1:30, so after we ate, we went back inside, and Becca showered and got ready for work. Before she left, she found me back upstairs at my desk and kissed me on the cheek, telling me she would see me after work.\n\n* * * * *\n\nWhen Becca came home after 9pm, she kicked off her shoes and walked over to the couch, giving me a tight hug. She said she wanted to get out of her work clothes before she sat down, so she headed upstairs. When she reappeared in the living room, she was wearing a long nightshirt that covered her to mid-thigh and sat next to me, cuddling into my arm.\n\n\"Did you decide to give the toplessness a break?\" I asked.\n\nBecca fidgeted. \"Do you remember what you said earlier during lunch?\"\n\n\"Remind me,\" I said. My heart did a flip in my chest. I was almost sure I knew what she was talking about, but I wanted her to confirm it.\n\n\"Remember when you told me again about you being OK with nudity in the house and not just toplessness?\"\n\n\"Oh, yeah. Of course,\" I responded with a smile.\n\n\"Is that something that would really be OK?\" she asked.\n\n\"Absolutely. It's just us here and as far as I'm concerned, however much you do or don't want to wear is perfectly fine. You were born naked, so if you want to be naked, then go for it.\"\n\nBecca stood up shakily, almost falling back into the couch. My hand shot to the small of her back and I helped push her to a standing position. She walked over to the other side of the sectional sofa. Her back was to me and I watched as she reached down and grabbed the hem of her nightshirt. Slowly, she pulled it up until the bottoms of her ass cheeks were exposed. As she continued to peel it upwards, my suspicions were verified. Becca was nude.\n\nto be continued..."
    ],
    "authorname": "saltyboy69",
    "tags": [
        "18-year-old",
        "enf",
        "masturbation",
        "foot fetish",
        "panties",
        "taboo",
        "public nudity",
        "first time",
        "stepfather",
        "stepdaughter"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/the-blossoming-of-becca-pt-01"
}