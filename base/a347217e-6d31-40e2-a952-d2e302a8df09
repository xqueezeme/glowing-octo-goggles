{
    "title": "Power Ch. 03",
    "pages": [
        "This story is part of an ongoing series. The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 10 - Power of Evidence\n\nThursday morning, February 23d...\n\nI called the Westphalia State Crime Lab to send a full team. I called State Patrolmen from the City and from Nextdoor County. I called the City Police and alerted Sapper Warren and Robin Ventura of where we were and what was going on. And only when I had these reinforcements did I call the local county Sheriff.\n\n\"My God.\" he said as he looked around the room. The Crime Lab had set up klieg lights, which illuminated the room to the extent that dark gray walls could be illuminated, and were working on evidence collection. \"Why didn't you call me first, Inspector?\"\n\n\"No disrespect intended, Sheriff.\" I said. \"You guys don't have enough people to secure a scene this massive.\" The entire sanitarium grounds was now crawling with various LEOs.\n\nThere were a couple of other rooms to the left and right of the death chamber. One looked lived in, like a bedroom and living room, but no clothes were present. The other was storage for a lot of junk, but I did see that there was some videocamera equipment.\n\nThere were no tunnels directly to the sanitarium building itself, at least none anyone could find even with the best of sonar equipment... which was brought in by Tanya Perlman's State Crime Lab, who were working in tandem with Westphalia's crew.\n\n\"Someone was up here the other night.\" said the Sheriff. \"We found a tracking device. The FBI said it was one of theirs, but wouldn't say who they were tracking. They said it was probably thrown over the fence to confuse us. Now you guys have found a crime scene underneath the place, and I'm the last person you called. I see now why the SBI is so distrusted. So what's going on here, Commander Troy?\"\n\n\"Multiple murders in multiple jurisdictions.\" I said. \"Serial killer. And speaking of the FBI, if you'll excuse me, I'm going back outside to call them now.\" I suited the deed to the word. Once outside I walked up to where the Black Beauty was. Hugh and Cindy were at the car. Norm Chow was near the storm drain entrance, talking to a couple of State Patrolmen.\n\nI called Jack Muscone on my Police cellphone and told him what we'd found. He said he would come right over. While we waited, I called Chief Moynahan and told him what was up. Then I called Laura and told her.\n\nThirty minutes later, Jack Muscone, Martin Nash, and Lindy Linares arrived. They went inside and looked around, then came back out.\n\n\"Great job, guys.\" Jack said. \"Assuming this is George Aurus, where do you think he is now?\"\n\n\"No idea.\" I said. \"Where's Les Craig?\"\n\n\"No idea.\" said Muscone. \"I just went and got Martin and Lindy and took off. Called my boss on the phone while we were driving here... oh, speak of the devil, there he is.\" \n\nSure enough, FBI Special Agent in Charge Les Craig had pulled up on the road above us, and was making his way down the hillside. I noticed that he first went to the Sheriff, who was at the entrance. I looked over at Cindy, who nodded back to me. Then I went and got my crowbar out of the Black Beauty, and headed up the road towards the gaggle of LEOs.\n\n\"Well, Commander Troy,\" said Craig as I came up to him and the Sheriff. \"What's going on?\"\n\n\"If you'll come with me,\" I said, \"I'll show you the crime scene.\" I led the way back down the tunnel, with Craig, the Sheriff, and Jack Muscone following. The Crime Lab people were finishing up, and rolling trays of evidence were coming down the big concrete pipe.\n\nCraig looked around the main room. \"Think this guy kept multiple people here at one time?\"\n\n\"I don't know.\" I said. \"It's very possible, though.\"\n\n\"Sheriff,\" Craig said, \"the FBI would like to assist you in your investigation of this matter. That's the nice way of saying we'd like to take over the investigation.\"\n\n\"Not my call, Mr. Craig.\" said the Sheriff. \"SBI Inspector Troy has claimed jurisdiction. I thought the SBI was supposed to be taking a supporting role from now on. Guess I was wrong.\"\n\n\"No, Sheriff.\" I said. \"We're assisting you, and when we catch the bastard he will be yours to prosecute, if you want. However, I took jurisdiction specifically so that it could not be given away to the FBI... which has no prurient interest here in investigating the State crime of murder. Unless you can show these killings cross State lines, Mr. Craig?\" I saw Les Craig's eyes narrow as he peered at me.\n\n\"Don't trust us, Commander?\" Craig said, his voice dripping with sarcasm.\n\n\"Do you want the truth?\" I replied. \"Or do you want me to tell you what you want to hear?\"\n\nCraig had heard enough. \"I'll be in touch, Sheriff.\" he said. The Sheriff nodded to him in a friendly fashion. Craig stalked off.\n\n\"Let's go talk outside.\" I said to Muscone.\n\n* * * * * * * * * * * * * * * *\n\n\"Just between you, me, and this pine forest, Jack,\" I said, \"Les Craig was seen having lunch with KXTC reporter Bettina Wurtzburg yesterday.\"\n\n\"I know.\" said Jack. \"My team does not know, and I did not tell my boss. But I have friends here and there, as you do. Craig has met Wurtzburg at least three times in the past couple of weeks.\"\n\n\"Interesting.\" I said. SBI Agent Norm Chow came up to us. \"SBI Agent Norm Chow, do you know FBI Agent Jack Muscone?\"\n\n\"Yes sir, we've met.\" said Chow. They shook hands. \"Good to see you again, sir.\"\n\n\"And you.\" said Muscone. \"I might have known the Iron Crowbar would corral you into working with him. He has a knack of picking out the very best people.\"\n\n\"I'm glad for the chance to work with him.\" said Chow. \"Every time I do, things get exciting. First the Sharples case in Hamilton County, and now this.\"\n\nI chuckled. \"And the party never stops. You ready to go, Norm?\"\n\n\"Yes sir.\" said Chow. Cindy was already behind the wheel of the Black Beauty, and Hugh was in the backseat. I got into the shotgun seat, and Chow got in behind me.\n\n\"I'll talk to you soon, Jack.\" I said as Cindy gunned the engine.\n\n\"Stay out of trouble.\" replied Muscone. He waved to us as we drove out.\n\n* * * * * * * * * * * * * * * *\n\n\"Where to, Commander?\" Cindy asked as we made our way back to the highway.\n\n\"How about the Hillside Diner in Nextdoor County.\" I said. \"Late breakfast on me.\"\n\nAs we drove along, I said \"Norm, Hugh, what did the local LEOs have to say? Especially about the SBI.\"\n\n\"I talked to some of them.\" said Hugh. \"For the most part, they're just doing their jobs, like our Patrol Officers do. They knew you were the Iron Crowbar, Commander, and they didn't seem to have any problem with us being there. I did overhear the Sheriff bitching about the SBI presence. One of the Deputies said he thought the Sheriff was hoping to bust the serial killer himself, and use that to move up the ladder, maybe a job with the SDOJ or the SBI leadership.\"\n\n\"Chow, how do you know Jack Muscone?\" I asked.\n\n\"Met him several times at Law Enforcement seminars and security briefings.\" said Chow.\n\n\"Do you know Les Craig?\" I asked.\n\n\"I know him.\" Chow said, the inflection of his voice showing a lack of approval. \"Heard some rumors about him, too. He was the FBI's point man in Southport against Organized Crime. He was always trying to make a big bust so he could move up the ladder, but he never did. If he were a baseball player, he'd have been sent to the Minors for remedial instruction. And he screwed up some of our operations, too. Of course they're ignoring that, and applying the Peter Principle to him.\"\n\n\"Limitlessly ambitious, he is.\" I said. \"By the way, Cindy, did you get the GPS logs?\"\n\nCindy smiled and held up a mini-laptop computer. \"Sure did. Myron's favorite toy.\"\n\n\"What that?\" asked Chow, interest appearing on his normally placid, emotionless face. \n\n\"I took Les Craig down the tunnel for one reason.\" I said. \"So that Captain Ross could download his GPS logs from his car. This device isn't much of a computer, but it's dedicated to downloading GPS logs from cars, then we can hook it up to our servers and download that data.\"\n\n\"By the way... how did Craig know about the crime scene?\" Cindy asked. \"Martin was helping me download the data, and he told me that Jack did not call Craig.\"\n\n\"I think that Sheriff called Les Craig in.\" I said. \"And I'm not saying anything sinister, here. That Sheriff mentioned that an FBI tracking device was found at the sanitarium; ergo, he probably has been in contact with Craig before, so he called him. That's one reason I called him in only after I had some State Patrol there for our protection, and the Crime Lab to actually get some evidence, of course.\"\n\nI don't think anyone was fooled by my commentary, but I continued: \"So the Sheriff called Craig just as soon as he, the Sheriff, found out. Now I didn't call Jack until well after I'd called the Sheriff, but Jack and his team got there well before Craig... and what do you deduce from that, Mr. Hewitt?\"\n\n\"He had to have come from a lot farther away.\" said Hugh.\n\n\"Yes, exactly.\" I said. \"And I'm curious about that, so I took the liberty of having Captain Ross download Craig's GPS data.\"\n\n\"No wonder you get the results you do, Commander.\" said Chow in his dead flat, dispassionate voice. Cindy grinned.\n\nPart 10 - Power of Experiences\n\nThe food at the Hillside Diner was delicious, and we ate ravenously. When we were done, I called the Nextdoor County Police Department to let them know we were stopping by.\n\nOnce there, I introduced Agent Chow to Lt. Molly Evans. He looked back and forth between her and Cindy several times. He really is good, I thought happily to myself. Then I introduced the NCPD Chief, Lt. Paul Price, and Detective German.\n\n\"We came by,\" I said as we sat in the conference room, \"to let you guys know we found a crime scene that fits the Black Velvet Killer.\" I explained the details.\n\n\"That's great news!\" said the Chief enthusiastically. \"If you make an arrest, let us know and we'll put in an extradition request. I know we'll be fighting a lot of others, but we want to make damn sure we get our shot at him.\" I nodded.\n\n\"So you don't think this has anything to do with the Walnut Prep situation?\" asked Lt. Price.\n\n\"Well, it may, in its own weird way.\" I said. \"We'll get more of the details to you, but the perp appears to be one deranged and seriously fucked up person. It's complicated.\"\n\n\"But not to the Iron Crowbar.\" Molly said, her eyes looking as flirtatious as her voice sounded.\n\n\"Oh, definitely to me.\" I said. \"I still have a long way to go to untangle the mess. And we'll keep you in the loop as we go along.\"\n\n* * * * * * * * * * * * * * * *\n\nBack at TCPD Headquarters, Cindy gave Agent Chow a tour of our Headquarters building as I had Myron Milton, and only Myron Milton, come to my office.\n\n\"Myron,\" I said, handing him the small computer. \"This GPS data was taken without a warrant... from an FBI Agent's car.\"\n\n\"Understood, sir.\" said Myron. \"You'll get a redacted report soon, and no one will ever see this data on our Police servers.\"\n\n\"Well, save it somewhere safe.\" I said. \"In spite of the inadmissibility, it may be probable cause for more warrants in the future. But just make sure we don't get cold-busted for having it in the first place.\"\n\n* * * * * * * * * * * * * * * *\n\n\"Well, seems that Mr. Craig spent last night at the apartment of Bettina Wurtzburg.\" I said to Cindy as we looked at the report Myron had provided.\n\n\"We missed the morning broadcast.\" Cindy said. \"Joanne told me that Bettina looked like she'd gotten laid.\"\n\nI chuckled. \"Les Craig didn't look quite as relaxed today. Let's see... mostly around the City... trip to Nextdoor County, our County, drove around the University... Bettina's home... hmmm... this morning he took the road around the mountain, the one passing right beneath the Cabin. Didn't stop, though.\"\n\nCindy continued, \"Then he went south, into Coltrane County... he was approaching The Asylum when he turned around, went up to the County Road that goes north of The Asylum, then over to State 142 through Nextdoor County to the main highway... and then up to the sanitarium.\"\n\n\"So, Green Crowbar,\" I said, \"what is your evaluation of everything we learned today?\"\n\nCindy said \"I think that storm drain is anything but. It was put there years ago. I suspect that sanitarium patients were taken there and experimented upon. If it is at all like the Asylum was, women were probably taken into those tunnels or somewhere else to be raped.\"\n\n\"Some males might've been taken down there to be sodomized, as well.\" I said. \"I'll go you one further, too. That Federal Installation up there... not all that far away. So maybe a truck or van is loaded up with sanitarium patients, they are driven out of there via that pipe without being seen, driven on up to the Federal Installation, experiments done upon them, then they're returned to the sanitarium.\"\n\n\"The way that whole thing was built, from the sheds to the labyrinth to the big concrete pipe...\" Cindy said, nodding her head, \"... that does sound like something the Government could and would do. Having said that, we don't know if that Federal facility was used for medical reasons, for lack of a better term.\"\n\n\"If not something like that,\" I asked, \"what do you think that facility was for, and is being used for now?\"\n\n\"Word is that they were doing nuclear materials research in the 1950s.\" Cindy said. \"I think it's something related to that.\"\n\n\"I was thinking upon similar lines.\" I said. \"Nuclear medicine is a field that has been limited but is growing. Things like Theraseed to combat prostate cancer without a major operation, for example. It has occurred to me that the CIA could've done experiments using radioactive drugs on some of the sanitarium inmates.\"\n\n\"So why classify the place so highly now?\" Cindy asked.\n\n\"That's the Government for you.\" I said. \"They try to have their cake and eat it, too. They try to not destroy what they've done, but don't want it being found out. The other possibility is that that facility is now being used for something else entirely now... and not necessarily for the good of the American People.\"\n\nAfter some more talk, Cindy left. I called Myron. \"Myron,\" I said, \"I made a mistake telling you to preserve that GPS data. Go ahead and obliterate any possible trace of it, or that we had it at all.\" Myron happily agreed to do so.\n\n* * * * * * * * * * * * * * * *\n\nAt 10:30am, still Thursday, February 23d, I received a phone call. \"It doesn't matter who I am.\" said the caller, whose voice was digitized. \"I called to tell you that an inmate at The Asylum was a patient at the Millwakee Camp when he was high school age. His name is Leonard Lotz.\" The line disconnected before I had a chance to say a word.\n\n* * * * * * * * * * * * * * * *\n\n\"It's a burner.\" said Myron. \"This County's Wal-Mart must sell those by the pallet-load.\"\n\n\"The voice is digitized.\" said Mary. \"There is a new program out there that analyzes digital voice patterns. It says the caller was a man, and was breathing heavily as if he'd exerted himself.\"\n\nI nodded. \"From where did the phone ping?\" I asked.\n\n\"Nextdoor County.\" said Myron. \"Just up Reservoir Drive from the Lakeside Inn & Suites, sir.\" I remembered that Reservoir Drive was to Nextdoor County what Reservoir Road was to our County. \"Then it stopped pinging altogether. I suspect pieces of it are in Lake Reservoir right now.\"\n\n\"Probably.\" I said. \"Can you get an idea of the lot number of the phone from its phone number?\"\n\n\"Yes, and we've done that.\" said Mary.\n\n\"Y'all are too good.\" I said. \"I was going to have a Detective do it just to get some practice. So have one of them try to trace that lot of phones. Okay... what about Leonard Lotz.\"\n\n\"He's a piece of work.\" said Myron. \"Forty-eight years old. Ten years into a sentence for armed robbery. He's considered a nutcase, and was sent to The Asylum for his sentence so he could be evaluated. As you know, sir, The Asylum kept people like him whether he needed treatment or not. He's described as very cold and calculating. He was an expert bank robber, and it was his partner, who is a meathead, that fucked them both up.\"\n\n\"I see.\" I said. \"And he was at Millwakee?\"\n\n\"He was in the Juvie system in the City at that time.\" said Mary. \"That's all I could get without hacking them.\"\n\n\"All right.\" I said. \"Good stuff, great work as usual. Y'all can go.\"\n\nI called Cindy into my office. \"Cindy, I am going to The Asylum to interview someone. You'll hold down the fort here... and be ready and able to respond if I don't walk out of there for any reason. Has Chow left yet?\"\n\n\"He's at the State Crime Lab, sir.\" said Cindy. \"Tanya is giving him a tour of the facility. Nothing about him suggests him having been a CSI or tech before.\"\n\n\"Probably not.\" I said. \"While he observes the Crime Lab, Tanya will be observing him. And her observations will make their way to my email inbox, and Jack's ears through whispers.\" Cindy laughed.\n\n* * * * * * * * * * * * * * * *\n\n1:30pm, still Feb 23d. \"All right, what's this about?\" said Leonard Lotz as he was brought into the interview room and handcuffed to the table. Lotz had shaved his black hair; only stubble was on top. He looked like a typical prisoner: medium build, slightly taller than average, in shape. His voice was perpetually sardonic, and I could tell in his dark eyes that he had plenty of cunning behind them.\n\nWith me was SBI Agent Norm Chow and Lt. Paul Price from Nextdoor County. In my Police SUV were Detective Roy McGhillie and Detective Sergeant Hugh Hewitt. Outside the gate, in a Police Cruiser, were two TCPD SWAT Team members.\n\nThe Asylum had gotten a facelift and some new office buildings, but it was still as forbidding as I ever remembered it. I remembered the raid that rescued Phil Kearns, and I remembered my dream of being in The Asylum while I was under Casey B. Walker's torture. I felt very cold inside.\n\n\"It's hard to do any Christmas shopping for you, Leonard.\" I said. \"You don't smoke, you never were a drinker, you got no family we can arrange a visit with.\"\n\n\"I got a sister out there, somewhere.\" said Lotz. \"If she's smart, she wants no part of me.\"\n\n\"Yeah, I've got that kind of a sister myself.\" I said. \"What I want to ask you about is your time at the Millwakee Camp with Dr. Yarborough.\"\n\n\"Oh yeah. That.\" said Lotz. \"That was an... interesting place. Wish this place was a bit more like it.\"\n\n\"What was it like?\" I asked.\n\n\"It was like any rehab camp, I guess.\" said Lotz. \"Yarborough was a fucking nut, though. Let us have free roam of the place. They practiced what they called 'empowerment'. Well, we were empowered, all right. We'd hook up with the girls, even though we weren't supposed to be in their cabin. I got laid more while I was there than any other time in my life.\"\n\n\"Yarborough knew about it?\"\n\n\"Hell yeah... and he'd have people in his cabin, watching them fuck while he jacked off. Called me in one time, and one of the female counselors was there. She was in her twenties, thought she was going to change the world. She fucked my balls off while that old coot watched.\"\n\n\"So you could walk out of that camp any time you liked?\" I asked.\n\n\"Yeah, and some girls did escape.\" said Leonard. \"They probably became hookers somewhere, but even that would've been better than if they'd been sent home to their drunk fathers to get raped every night. The staff always covered up for the escapes, said the girls were sent back to regular jail. But we knew.\"",
        "\"So there was sex. Drinking?\" I asked.\n\n\"Oh, sure. And we popped pills every once in a while, though those were harder to come by.\" said Leonard.\n\n\"What did they teach you there?\"\n\n\"Aw, it was typical remedial high school shit.\" said Leonard. \"Nobody paid attention, no homework got done. We didn't fucking care, and neither did the staff. Everyone just wanted to get laid.\"\n\n\"So the program didn't work? Nobody tried to do well?\"\n\n\"Oh, sure, there were some kids that played it straight.\" said Leonard. \"But they were scared of the rest of us. They had their own cabins, locked the doors, all that stuff.\"\n\n\"Did they do any tests on you guys?\" I asked. \"Psychological tests, blood tests? Did they test any drugs on you?\"\n\n\"We had questionnaires, talked with the counselors from the college.\" said Lotz. \"But no, they didn't do any blood work or drug testing on us, unless they were putting something in our food without us knowing it.\"\n\n\"You think they did put something in your food?\"\n\n\"No.\" said Leonard. \"It wasn't Yarborough's style. He wanted his methods to work without having to drug us up.\"\n\n\"Did you know a guy named George Aurus?\" I asked.\n\n\"Ohhhh... yeah... Aurus.\" Leonard said. \"The fucking midget.\"\n\n\"What can you tell me about him?\"\n\n\"Like I said, we mostly left the nerd kids alone.\" said Leonard. \"Plenty of pussy being given out for free, and they were begging us guys to fuck them. But George... he's the one that everyone picked on. Now I'm no fag; I haven't even gotten my cherry popped in prison in all my time here and there. But there were a couple of guys that wanted another guy, and they got tired of each other... well, I heard they helped themselves to little George.\"\n\n\"Did he participate in sex with the girls?\"\n\n\"Oh hell no.\" said Leonard. \"In fact, Dr. Yarborough had George sit in while a couple was fucking in front of them. But the teachers wouldn't fuck George. They teased him. But Yarborough seemed to like the dwarf. Kept talking to George about empowering himself. George just listened, but he was in no position to empower himself among that group of thugs, tough girls, and the rest of the shit eaters.\"\n\n\"And I guess you never heard of George again after you left?\" I asked. \"Or from him?\" \n\n\"I heard he went to the Circus, which went bankrupt.\" Leonard said. \"But otherwise, no... unless he's this Black Velvet Killer you're chasing.\" Astute man, Leonard was.\n\n\"Think George is capable of something like that?\" I asked.\n\n\"Maybe. I dunno.\" said Leonard. \"I'm a bank robber, I've never killed anyone. But if my back was to the wall? Well, you know what that's like, Commander. Your back has been to the wall, and you did what you had to do.\"\n\n\"True enough.\" I said. \"So let me ask: has anyone else asked you about George? Especially recently?\"\n\n\"No.\" said Leonard. \"I was told last night that someone was going to interview me this morning, but it took you until now to show up.\"\n\n\"Wasn't me that asked for that morning appointment.\" I said. \"Okay, Leonard, thanks. If you need a small favor that I can help arrange, get word to me.\"\n\n\"Put me in a cell with that 'Silverfish' guy you caught.\" said Leonard. \"I could learn a few things about robbing banks from him.\"\n\n\"By the time you get out of here,\" I said, \"you'll be too old to rob banks.\"\n\n\"We'll see about that.\" said Leonard. \"I'm pretty good at prison breaks. But I'll make you this deal, Mr. Iron Crowbar... I won't go anywhere near your County. I don't want to end up like Silverfish did...\"\n\nPart 11 - Power of Thought\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the redheaded MILF from in front of the State Office Building on Courthouse Square at 7:00am, Friday, February 24th. \"Channel Two News has learned that the SBI has found a crime scene that might be the location where the Black Velvet Killer murdered several men and women!\"\n\n\"The location is west of the City, near an old, abandoned sanitarium.\" Bettina continued. \"Sources tell Channel Two News that the crime scene was found underground. Several bodies related to the Black Velvet killings have been found in that area. The SBI did not give any further details when contacted. The sanitarium itself was closed many years ago, when all of its patients were moved to the State Hospital for Mental Diseases in Coltrane County. That facility is now a standard men's prison.\"\n\n\"And in other news,\" said Bettina, \"lawyers for Citizens for Police Accountability, Jay Swenson and Ken Eidex, filed a complaint with the SBI Office of Ethics and Review, saying that Commander Donald Troy and the Town & County Police failed to give Wayne LaCroix adequate protection while he was out on bail, which led to LaCroix's murder at the hands of unknown perpetrators. In dismissing the complaint, SBI Inspector Britt Maxwell said that the ankle monitor LaCroix was wearing had been tampered with, and that the Police have no obligation to guard any suspect unless they're actually in jail...\"\n\n\"Funny how Bettina didn't mention your name, sir.\" said Joanne Warner as we drank our coffee in MCD. \n\n\"And she's using your good work to make the SBI sound good, sir.\" said Theo Washington.\n\n\"Yep.\" I said. \"But the day, for her to pay, is on its way.\"\n\n* * * * * * * * * * * * * * * *\n\n\"It's ready, sir.\" said Captain of Operations Teresa Croyle. \"The raids will start at around 10:00pm. Early enough to catch most of the working girls still at the clubs. We concentrating on the Tenderloin District.\" She outlined the full plan for me.\n\nWe were in my office, and this was the 'Angels' meeting.\n\n\"The Detectives are ready to question the suspects once they're brought in and booked.\" said Cindy. \"Are we doing this at County Jail, or the Old Mill?\"\n\n\"The Old Mill.\" I said. \"They've got some extra room that Captain Thompson has long had plans for to use for mass processing, like when making arrests during riots.\"\n\n\"Sir, is your original plan, to let girls go that cooperate with our questioning, still in place?\" Cindy asked.\n\n\"Yeah, I think so.\" I said. \"But one thing I'm going to tell the Detectives: if they think a girl or boy knows something really big, they need to get her or him in front of me for some... follow-up questions.\" They nodded.\n\nAfter some more discussion, I then said: \"Ladies, I need to hash through something, and I would like to use you as sounding boards. Speak freely, and nothing is off the table, except using my name in vain.\" They both nodded.\n\n\"The issue is the Black Velvet Killer.\" I said. \"We need to find him, and quickly. Any ideas at all where he might be?\"\n\n\"Hiding in the Asylum, like Ned did?\" asked Cindy. \"I was going to say that jokingly, but you know... it may be a real possibility.\"\n\n\"Yes, that's very true.\" I said. \"I was also thinking he could hide in other facilities the same way: hospitals, and the like. Any other ideas?\"\n\n\"Sir,\" Teresa said, \"the man is only four feet tall, if that. He can't hide that at all, unless he's walking on stilts or something.\"\n\n\"True.\" I said. \"And that may be our trump card in finding him.\"\n\n\"He has to have a money source, sir. A job, welfare, or something.\" said Cindy. \"But the Mouseketeers have been unable to find anything. They've also looked for possible aliases using 'George', 'Power', 'Aurus', or 'Gold'. It's a needle-in-a-haystack search, sir, and so far they've found nothing.\"\n\n\"Yes... money.\" I said. \"The only source of true power outside of a gun. Hmmm, he could've blackmailed someone for money, and we just haven't found that victim yet.\"\n\n\"Government assistance, sir?\" asked Teresa.\n\n\"He has to have a name in order to get that.\" I said. \"And an address or mailbox.\"\n\nAfter a moment of thought, I said \"So what would you do, if you were me? Put out an APB? Go to the Press?\"\n\n\"I'd bring in Chaplain Steven Ikea of the SBI, and have him pray for you.\" Cindy said. That earned her a red crowbar being waved in her general direction.\n\n\"Seriously,\" Cindy said, \"if you put out an APB, chances are he'll find out and he'll disappear. If you go to the Press, he'll see it, but so will everyone else... and people will be remembering seeing a four-foot-tall man. You'll get a ton of leads that won't be him, but you might get that one that is.\"\n\n\"And as I was saying earlier, sir,\" continued Cindy, \"I'm thinking that this is almost a repeat of they way Ned was eluding us all those years ago. He either has someone hiding him and feeding him, or he has some kind of job that gives him access to food and a place to stay, and therefore not be seen.\"\n\nI just nodded. \"Okay.\" I finally said after thinking about it. \"Cindy, ask the Mouseketeers to try to find out where people from that defunct Circus went to. If any are in the City area, or anywhere in the northern part of this State, let me know. And I'll decide tonight if I want to go to the Press about this. If I do, it'll be Priya I go to, and I might ask you to arrange that meeting, Cindy. Okay, you two have work to do, so I won't keep you any longer.\" Taking that as the dismissal it was, my Angels left my office.\n\n* * * * * * * * * * * * * * * *\n\nI spent the day getting my paperwork and reports done on everything about all these cases to this point. The 'mothballs' case was closed as having been taken over by the FBI, and all paperwork on that was now officially classified by the Federal Government. The murders of Terry Schultz and Jeanine Burke were closed as being the work of the now-deceased Jeff Fuqua. There may have been someone else involved in Jeanine's killing, but it would have to be on the back burner for now.\n\nThat left open the murders of Wayne LaCroix and Jeff Fuqua, Michael Burke, and the Black Velvet serial killings. And while the Frozen Mothballs case might be officially closed, I still wanted to know what the answers were. Oh... and there was the case of the sniper that shot out Moe Molinari's window while my hat was sitting on my crowbar in front of it, after seeing the laser dot sight... the... laser... dot... sight...\n\nAs the sun was beginning to set, I sat back in my Command Chair and looked out the window, which faced south, seeing to the right the dying sun and the Fairgrounds behind the parking lot. I began thinking about the Black Velvet serial killer. Where are you, George Aurus? Where can you possibly be hiding?\n\nSome bodies were found around the sanitarium, and the killing chamber was also found near there. All of the dead had come from the City or near it... until Lenora Holmes and Rob Dortmund... they were found in Nextdoor County... they'd disappeared from the Lakeside Inn & Suites... near where that burner call had come from...\n\nNextdoor County... that has to be it, I thought to myself. The bastard is moving west, he's coming towards my County... towards me.\n\nThere was a knock on my door, breaking my reverie. As I turned, Teresa Croyle opened the door and looked in.\n\n\"Commander,\" she said, \"they're assembling for the raids. Is it a 'Go'?\"\n\n\"Yes.\" I said, making the final decision. \"It's a 'Go'. Make it so, Number One.\"\n\nPart 12 - Police Power\n\nAt 10:15pm, Friday, February 24th, Cindy and I headed out in my Police SUV for the Old Mill, which was the Headquarters for Precinct Two. We'd waited until the raids had started, as that one little bit of extra precaution in case someone was watching my vehicle.\n\n\"No drones, except ours.\" said Cindy as she looked at her iPad, which had apps to trace drones. One of those apps was the standard Police app. The other was her private app from her father, and I need not say it was vastly superior in its capabilities.\n\n\"Good.\" I said as I listened to the chatter on the Police radio. \"Looks like this thing is going well.\" The raids had just begun, and the simultaneous, coordinated hits on a number of strip joints and bars where prostitutes were known to be were extremely effective. Paddywagons were filling up quickly.\n\nWe arrived and parked in the employees parking lot, then went inside. The Duty Desk was in good shape and its officers were performing their duties efficiently. The Sergeant was going to have the Desk Patrolman escort us to Ppt. Thompson's office, but I countermanded that, saying that they were busy and we could find our way.\n\n\"They're being processed now, sir.\" said PCpt. Thompson as we came to his office. We watched on the television monitors. The arrested suspects were being put into a large holding cell, then taken in groups to be booked, photographed and fingerprinted. Then they were put in a room with chairs and told to stay in the order they were in.\n\nSome minutes later, as nearly all the raids were finishing up and suspects were in the house, trouble began. One young woman began demanding to be released, saying she and the others were being unlawfully detained... and she was citing the correct sections of the State Code. The other women within her hearing began applauding, then demanding their rights.\n\n\"Okay,\" I said, \"I need to go nip this in the bud. Care to come along, Captain?\"\n\n\"Would not miss it.\" Cindy said. With that, we went downstairs and to the holding area.\n\nThe noise and shouting in the room suddenly ceased when Cindy and I walked in. I studied the young woman who had started the trouble. She was college-age, fairly plain-faced, wore glasses, and her body was decent now but would one day not be able to hide the weight she would gain; her thighs were already beginning that accumulation process.\n\n\"Take her through booking next.\" I said to Patrolman Morton. \"Then bring her to Interrogation-1.\"\n\n\"I demand a lawyer!\" the woman shouted, for the umpteenth time. \"I demand you respect my rights.\"\n\n\"The fact you're able to speak right now shows that I am doing that.\" I replied. I gestured to Morton, who took the woman to booking. The rest of the women began shouting, and it was pandemonium.\n\n*CLANG!* *CLANG!* *CLANG!* *CLANG!* *CLANG!* *CLANG!*\n\nThe red crowbar raked across the iron bars, then I held it up. Things quietened down.\n\n\"Ladies!\" I said loudly. \"Cooperate and go through the line, and you'll be out of here by morning. What that young lady failed to mention is that I can hold you for 72 hours before giving you your Court hearing, if I want to. That's three days where you are in here, not making any money, nobody knowing where you are. Work with me, and you'll be out soon. Keep irritating me, and it'll be a long few days.\"\n\nNot another word was said in the silence of the chamber, and I would have no more trouble tonight.\n\n* * * * * * * * * * * * * * * *\n\n\"Okay.\" I said as I sat down across from the young woman in the Interrogation Room. \"Eileen Brandon. Law student at the University. Originally from the City, moved here last year. Money from your parents and from State tuition grants, no problems there, no debts. So, Ms. Brandon... why were you in in the 'Strokers' strip club tonight?\"\n\n\"I want a lawyer.\" Eileen said. \"I will answer none of your questions without legal representation.\"\n\n\"And you'll get that representation... sometime before your arraignment in 72 hours.\" I said. \"If you were cooperating, you'd be out of here in two hours, but since you're not... we'll play this strictly by the legal book.\" I proceeded to read Eileen her Constitutional rights, then said \"You are charged with resisting arrest, which you did at the club; and inciting to riot, which is what I saw happen in that holding cell tonight.\"\n\n\"That's bullshit!\" Eileen yelled. \"I was demanding my rights! That's a false charge!\"\n\n\"And you'll be able to plead 'not guilty' to it at your hearing.\" I said. \"And while all that is going on, I'll be filing paperwork with the University's Ethics Office related to these charges. You'll be considered for expulsion from the University. And believe me, Eileen, I can make that happen. I can call the University President right now, and he will take my call. And my wife is a professor at the University; after she's done with you, you'll have no shot to graduate, nor transfer with credits.\"\n\n\"You fucking bastard!\" Eileen snarled.\n\n\"So...\" I said, \"you've pretty much invoked. I can't ask you why you were at Strokers tonight, and why you're working the pole and being friendly with the clients, when you should be studying in the law library.\"\n\nI got up. \"Okay, put her in the 72-hour holding cell. Like I said, we're going to run the full charges against her. I'll see you at your trial, Eileen.\" I turned to go, Cindy getting up and following.\n\n\"Wait.\" Eileen said. \"What the fuck do you want?\"\n\nI just shook my head. \"At this point, nothing... but a conviction... and your expulsion from School.\" I said. I turned to go again, seeing the now-scared young woman trying desperately to think of a solution to her considerable problems.\n\n\"Okay, okay.\" the woman said. I was sorely, sorely tempted to walk on out of the room. But I knew that I had this fish landed, and I needed the information she had. I returned to the table.\n\n\"Do you waive your right to silence and your right to counsel?\" I asked, making sure to avoid any legal trap she might be setting... and also to make sure she was well aware of the consequences of her next action.\n\n\"Yes.\" she said. \"What do you want to know?\"\n\n\"You don't need the money.\" I said. \"So why are you pretending to be a working girl?\"\n\n\"It was just for tonight.\" Eileen said. \"We knew you were coming, so I went down there to make sure I was arrested with the other girls.\"\n\n\"You knew we were going to make the raid tonight?\" I asked.\n\n\"Yes.\" said Eileen. \"And I wanted to be there to get arrested, then tell the girls their rights and push back against you cops on their behalf.\"\n\n\"Why didn't you just come in the front door and say you were representing all those that were arrested?\" Cindy asked. \"That would've been more effective, legally.\"\n\n\"I'll keep that in mind.\" Eileen said. \"But I did it the way I did in the hopes your cops would exercise police brutality and give us a better case to sue you.\"\n\n\"Who is the 'we' you're talking about?\" I asked.\n\n\"Ken Eidex and Jay Swenson.\" Eileen said, without hesitation I might add.\n\n\"And Mr. Eidex and Mr.... Swenson...\" I said, pretending to write the names down, \"why are they so interested in a bunch of prostitutes being arrested? Why did they send you to be arrested with the girls?\"\n\n\"They didn't tell me why.\" said Eileen. \"They just said they'd pay me to do it, and they paid me half already. So I did. And you really are violating those women's rights.\"\n\n\"Except you don't know the whole story.\" I said. \"Law students like you should be learning, instead of thinking you know it all and making huge mistakes.\"\n\n\"Go fuck yourself.\" Eileen snarled. Cindy just shook her head in mock sadness.\n\n\"So how did you know we were going to make our raid tonight?\" I asked.\n\n\"Mr. Swenson told me.\" Eileen said. \"I don't know anything further.\"\n\n\"Where were you around February 13th to the 15th?\" I asked.\n\n\"Here.\" Eileen said. \"In school.\" \n\n\"All right.\" I said. \"You get to stay here until we're finished processing all the girls or until the sun rises, whichever comes first.\" With that, I got up and left the room. Eileen was destined for a cell for the next few hours.\n\n* * * * * * * * * * * * * * * *\n\nSeveral rooms were set up for interrogations, complete with portable cameras and audio gear. I had five Detectives at work: Teddy Parker, Theo Washington, Roy McGhillie, Christopher Purvis, and Timothy Geiger. And those Detectives did a very good job implementing their instructions from me.\n\nFirst, the Detective would say \"Before I read you your rights, let me just tell you this: all we want to do is ask some questions. Cooperate, and you get to walk out of here and go home. No court date, no fine, no nothing; you walk. If you don't work with us, though, we'll go through the whole nine yards: 72 hours in holding, arraignment, probably a fine of several hundred dollars. And the questions... consider them 'hypotheticals', off the record, no self-incrimination from them.\"",
        "Most of the girls would take the deal, and would answer the questions. The questions were simple: where were you around February 13t to 15th or so? Did you go out of Town then, or were you working? Why did you leave Town during that time?\n\nI told the Detectives, and also the Uniformed Officers present and watching, that if any girl or her answers didn't seem right, to put them in the second Interrogation room, and I would talk to them myself. There were eight girls and one guy, and two of the girls and the guy were interesting to talk to...\n\n* * * * * * * * * * * * * * * *\n\n\"Her name is Sally Romaine, and her working name is 'Astral', as in the Astral Plane.\" said Joanne Warner, who was helping Precinct Captain Thompson and Lt. Carswell process everyone, watching interrogations but otherwise keeping out of sight, and looking up data with Myron Milton when needed. \"A ton of arrests, all for prostitution.\"\n\nI looked at the woman in the Interrogation Room. Attractive, very fit. Dirty blonde hair, dyed that way. In her late 30s, but looking much older; she was a smoker and a drinker, and the years of turning tricks were taking their toll, etching lines on her face that shouldn't be there on a woman her age.\n\n\"Oh wow, the Iron Crowbar himself.\" she said in a scratchy voice when I went into the room. \"Must be big.\"\n\n\"Hello, Astral.\" I said, sitting down opposite her, Cindy sitting down next to me. \"So I understand you got out of town around Valentine's Day.\"\n\n\"You bet I did, and so did a lot of other women.\" Astral said. \n\n\"And why did you do that?\" I asked.\n\n\"So that's what this bust is about.\" Astral said, putting it together. She then said \"All right, I'll tell you. I was escorting a guy the weekend before. I don't remember his name, of course, but he said he was a junior executive at BigPharmaCorp. He did have money; bought me a dress, shoes, took me out to dinner at The Chop House, then we stayed the night at the University Hotel.\" I nodded.\n\n\"So we were lying in bed after he fucked me, and he asked what I was doing on Valentine's Day.\" Astral said. \"I thought he was going to ask me out for that night, so I said I didn't know. But all he said was that he would be back home, and that I should stay out of Town that night, and especially avoid the Tenderloin District. When I asked why, he just said there might be trouble, and to stay away. So I went to the City that night, and worked the pole at a club, came back that next weekend.\"\n\n\"He didn't say what it was about?\" I asked. \"The trouble?\"\n\n\"No.\" said Astral, \"but I heard that reporter talking about poison gas attacks, and I wondered if that is what it was. But I don't know for sure.\"\n\nI had Astral work with the sketch artist to get a workup of the BigPharmaCorp junior executive, then let her go home.\n\nThe next girl was a black woman named 'Diamond'. Just 'Diamond'. She was pretty, her breasts artificially enhanced, and she had bright, mesmerizing eyes.\n\n\"Well, if it ain't the Iron Cracker.\" she said to start.\n\n\"No need to blaspheme, Diamond.\" I said. \"Consider me to be red and not White today.\" I exhibited the red crowbar as I spoke.\n\n\"Whaddya want, Cracker?\" Diamond asked, her eyes boring into me in a challenge.\n\n\"Why were you out of Town on Valentine's Day?\" I asked.\n\n\"C'mon, you the Iron Crowbar, you should know.\" Diamond replied.\n\n\"I don't know why you were away.\" I said.\n\n\"Man, we all know you've been putting your white crowbar into that reporter Bettina.\" Diamond said. \"And I hear she likes that big cock; maybe I should give you a freebie and find out for myself. Or would your bitch here get jealous?\" She was looking at Cindy.\n\n\"Her?\" I asked, gesturing at Cindy.\n\n\"Oh, never mind, she's not on your team.\" Diamond said. \"So what do you say, Cracker? Want to get some of the best black ass in the County?\"\n\n\"I dunno.\" I replied. \"You ran out on me on Valentine's Day, of all days.\"\n\n\"Yeah, and that reporter you've been banging had the word.\" said Diamond. \"Fucking nerve gas? And yeah, I know they were trying to kill T-Square. That's what Jasmine Nix said.\"\n\n\"Mmm hmmm.\" I hummed. \"So did Jasmine say this before the 14th?\"\n\n\"No, that was later.\" Diamond said. \"I got told the night before that something bad might happen at one of the clubs. I thought it was going to be a Police raid. I've always heard about those in time... until tonight. You keep secrets good, Iron Crowbar.\"\n\n\"Who told you about this bad something the night before Valentine's Day?\" I asked.\n\n\"One of Big Ice's guys.\" said Diamond. \"I was paid to fuck his balls off, so I did. He let it slip after we were done.\" I nodded.\n\n\"Okay, Diamond.\" I said. \"I'm a wee bit too busy to take you up on your offer tonight. And let's hope I don't have to see you again, professionally... my profession. You can go. Have a good night.\"\n\n\"Do I even get a ride home?\" Diamond asked.\n\n\"Sir,\" Cindy said, \"they're shuttling people back to the Cub Club when they're done.\"\n\nI nodded. \"Take the shuttle, Diamond.\"\n\n* * * * * * * * * * * * * * * *\n\nLast was 'Kevin'. Metrosexual. Smallish, slender, fit, brown-black hair looking like a toupee combed sideways over his head.\n\n\"I was at 'The Why' when your raid busted me.\" said Kevin.\n\n\"The where?\" I asked. This could quickly become an Abbott & Costello routine, I realized.\n\n\"Sir, 'The Why' is a gay club south of the Cub Club.\" Cindy said. \"They called it 'The Y', but the real YMCA threatened to sue them, so they changed it... patterned after the 'Why so serious?' comment from The Joker in the Batman movies.\"\n\n\"Okay, I see.\" I said. \"So, Kevin, where were you from the 13th to the 15th of February, give or take?\"\n\nKevin said \"I'll spare you the boring routine, Commander. I usually hang out at Whippets on the weekends. Word was going around that something was going on, maybe something against T-Square. We thought it might be a raid, or possibly a bomb going off. So I got out of Town until the weekend, when I got the 'all clear'.\"\n\n\"Who was sending you those warnings and 'all clear' messages?\" I asked.\n\n\"I don't remember who told me about the problem.\" said Kevin. \"It was really going around Whippets; it seemed everyone knew. Then one of my clients--- er, buddies, told me it was all clear. Don't know how he knew, except that he stayed in Town. He's a University Student, but I won't tell you his name. You're the Iron Crowbar, so you'll figure it out, if you really want to.\"\n\n\"Or you could just tell me and go home now.\" I said. \"Or not tell me, I'll figure it out, and you'll be bored for two days in jail while I do.\" Kevin gave me the name. It was Ken Eidex.\n\n* * * * * * * * * * * * * * * *\n\n5:00am, Saturday, February 25th. All of the Detectives, their leadership, me, and the Chief were in Classroom 'E'. The Chief had come in armed with coffee and a spread of doughnuts and pastries. I just had coffee.\n\n\"First of all,\" I said \"I want to congratulate Lieutenant Masters on putting together the raid. It went beautifully, and with surprise. Nobody got hurt, either, which makes me happy. Good job, Coldiron.\" The room applauded Coldiron.\n\n\"Okay, get your reports in before you go, then go home and get some sleep.\" I said. \"But first, is there anything out of the ordinary that anyone saw? Anything at all?\"\n\n\"Just how quiet they all got whenever you came into a room, Commander.\" said Theo. \"And I'm not just saying this to be saying it. They really did hold you in awe, sir.\"\n\n\"Yes sir, we all saw that, and remarked on it.\" Teddy Parker said.\n\n\"Okay, I'm out of the ordinary.\" I said wearily. \"Anything that we can use to catch perps, though?\"\n\n\"This may or may not be strange.\" Joanne said. \"But they all seemed to not care about being there. And they all seemed to know each other.\"\n\n\"They live for the moment.\" Cindy said. \"They don't really think all that far ahead, and just accept where they are.\" Everyone nodded. I didn't mention that my two dogs acted a lot like that.\n\nJust then, the Duty Desk Sergeant came into the room. \"Commander, there's two FBI Agents and an SBI Agent up front. They say they need to talk to you, and that it's urgent.\"\n\n\"Okay.\" I said. \"Put them in the Main Conference Room. We'll be there in a minute.\"\n\n\"I'm going to be there, too.\" said the Chief. \"Okay, everyone, finish up and go home.\"\n\n* * * * * * * * * * * * * * * *\n\nFBI Special Agent in Charge Les Craig and FBI Special Agent Miles Winters were in the Conference room. Also in the room was SBI Agent Ted Orosco. When the Chief came in, he shooed Craig out of the end table seat nearest the door, taking it for himself. Craig didn't put up a fight, moving to the Chief's right, his back to the door. I was asked to sit in the seat in the middle of the far side, facing off against the three Agents.\n\n\"Commander,\" said Miles Winters, \"we understand that you visited the Asylum the other day?\"\n\n\"Yes, I did.\" I said.\n\n\"And you spoke to a prisoner, Leonard Lotz?\" asked Winters.\n\n\"Yes, I did.\"\n\n\"Why? What did you talk to Lotz about?\" asked Winters.\n\n\"He was at the Millwakee Camp at the same time as a person of interest in the Black Velvet case was there.\"\n\n\"Who is that?\" asked Les Craig.\n\n\"I thought you guys had dropped the Black Velvet case.\" I replied, meeting Craig's peering stare at me.\n\n\"Why are you being evasive, Commander?\" asked Craig. My eyes went over to the Chief, who was looking skeptically at Craig.\n\n\"He's not being evasive.\" the Chief said. \"He's correct... I was told by your Deputy Director that you're no longer investigating the case; therefore, you do not have a need-to-know basis for having that infor-MAY-shunnnnn.\"\n\n\"Maybe we need to interview Commander Troy alone.\" said Craig in reply.\n\n\"Maybe you need to shut your fucking mouth, and leave.\" replied Chief Moynahan. \"This is my Police Headquarters, not yours, Mr. Craig. You have no authority nor jurisdiction here. What -I- have is a Captain of Detectives that would love nothing more than to physically harm you over your insults to her integrity. I'd suggest... you learn to show some res-Pect.\"\n\n\"Commander Troy,\" said SBI Agent Orosco, trying to ease the tension in the room, \"you talked to Leonard Lotz, and about the Millwakee Camp. How did you find out he was once at the Millwakee Camp as an inmate?\"\n\n\"Confidential informant.\" I said. \"And I'm sure you understand that I'm not being evasive, but protecting the C.I.\"\n\n\"Commander, did Leonard Lotz mention breaking out of prison?\" asked Winters. I began seeing the dots fall into a pattern.\n\n\"As I'm sure you will see from the prison's tape of the interview... if you haven't already... you'll see that he said he was good at prison breaks, but didn't mention specifics.\" I replied.\n\n\"Did he mention anywhere he would go, anyone he might try to see?\" asked Winters.\n\n\"Again, it's on the tapes.\" I said. \"He mentioned no specifics. He did say he'd like to be in a cell with the Silverfish, to learn bank robbery methods. How serious he was, or if he was joking, I don't know.\"\n\nThen I added \"Look, I've been around the block when it comes to interrogations, and I can see the direction this is taking. So what happened with Lotz?\"\n\nThe three agents became uncomfortable, and Les Craig's face looked almost sullen. But it was Orosco that told me, possibly as a dig against the FBI Agents.\n\n\"Sir,\" said Orosco, \"Leonard Lotz escaped from The Asylum a few hours ago.\"\n\n\"Goddammit, Orosco!\" whispered Craig.\n\n\"What, you want us to tell you what Lotz said,\" growled Moynahan, \"but you don't want us to know Lotz escaped? Your double-standard hypocrisy is breathtaking, Mr. Craig. Positively breath-taking.\"\n\n\"Well, now you know.\" said Craig. \"And Lotz is an exceptionally dangerous man. We've got to get him back.\"\n\n\"Has Lotz ever killed anyone?\" I asked. The three Agents looked at me with various expressions between skepticism to downright anger. \"Well, has he?\" I asked again.\n\n\"Not that we know of, Commander.\" said Miles Winters. \"But he's still dangerous... and there could always be a first time.\"\n\n\"Yes,\" I said, \"but my point is that you guys are trying to pull the wool over my eyes, and why you think you can get away with that, I don't know. Lotz is dangerous, sure, but that's not why Agent Craig is so desperate to capture him. It's what Lotz knows that has the FBI very scared and agitated. And I'll make you a free present of something else: that is also why he escaped... he's not sitting around and waiting to be murdered.\"\n\n\"What?!\" gasped Orosco. \"What the hell is going on here?\" It was obvious he didn't know, and possibly had been told some b.s. by some Federal Agents.\n\n\"Ask FBI Agent Craig.\" I said. \"Well, Mr. Craig? Going to tell us the real story?\"\n\n\"No.\" said Craig, getting up. \"And if you know what's good for you, you'll keep your mouth shut about it.\"\n\n\"Is that a threat?\" I asked, standing up. \"Because if it is, I'll call your fucking bluff just to see what you can do about it.\"\n\n\"Go ahead.\" said Craig. \"You're already suspected of giving a reporter classified information. And our second interrogation of you will not fail as the first one did.\"\n\n\"That's enough.\" said Chief Moynahan. \"Mr. Craig, I'd suggest you get out of here, get out of my County, and never come back.\" When Craig did not immediately move, the Chief said. \"Get moving, Mr. Craig.\"\n\nIt was most very fortunate for Les Craig that I did not have my red crowbar (or my gun) with me at that moment. Otherwise, he would be dead. The Chief escorted him and the other stunned Agents to the front door, shaking hands with Winters and Orosco but not Craig. He then told the Duty Desk to have a standing order that FBI Agent Les Craig was to never be admitted past the Duty Desk again.\n\nWhen he got back to the Conference Room, he was surprised to see his Police Commander sitting there, stunned by what Craig had just revealed, and in the deepest of reveries...\n\nPart 13 - Power of Hate\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" blared the lovely redheaded MILF reporterette at 7:00am, Saturday, February 25th, from in front of Police Headquarters. \"Channel Two News has learned that a dangerous criminal has escaped from The Asylum!\"\n\n\"The escaped criminal is named Leonard Lotz.\" Bettina continued as a mugshot of Leonard Lotz appeared on the television screen. \"Authorities consider him to be armed and extremely dangerous. Sources tell Channel Two News that Lotz may have some connection with the Black Velvet serial killer, and that Lotz may be in this area. Citizens are asked to not approach this man if you see him, but to call 9-1-1 or the FBI immediately.\"\n\n\"Authorities are not revealing how Lotz escaped The Asylum, but have said he is the only person to have escaped. All other prisoners are accounted for.\" said Bettina. \"The SBI's Office of Ethics and Review is conducting an investigation of how Lotz escaped, but have made no public statements, so far.\"\n\n\"And in other news,\" Bettina said, \"the Town & County Police staged a massive raid in the Tenderloin District, arresting dozens of suspected prostitutes. Most of the suspects were released after being interrogated, while some have been held over for arraignment. One woman, an Eileen Brandon, who is a law student at the University, has declared her intent to sue the Town & County Police and Commander Don Troy, saying her rights as well as many of the other arrested persons' rights were violated during the raid. Citizens for Police Accountability spokespersons Jay Swenson and Ken Eidex released a statement saying they will also file a lawsuit on behalf of the arrested women.\"\n\n\"And the complaints about Commander Donald Troy's brutal methods are continuing,\" said Bettina, \"as Town & County Councilpersons Thomas P. Cook and Kelly Carnes issued a joint statement condemning the Police in general and Commander Troy in particular. Part of their complaint is that the accused prostitutes were released instead of being taken to Court and made to pay fines.\"\n\nBettina then ended her commentary by saying \"All the way around, this looks like yet another disaster for Commander Donald Troy and his Police Force. And now to Sports...\"\n\n\"God damn!\" Cindy muttered under her breath. \"She's out for blood, Commander. Your blood.\"\n\n\"Yeah, and what's up with that?\" asked Jerome Davis, the only other Detective in the room at the moment. Cindy also turned to look at me as Jerome asked the question.\n\n\"Usually,\" I replied, \"when the Media starts coming after me by name, it indicates that they're taking a shot across the bow, so to speak, and they're trying to make me duck and keep my head down. And why do that? Because something's about to happen, and they want me to hesitate in taking action.\"\n\n\"Like that's ever stopped you before, sir.\" Cindy said.\n\n\"I didn't say their tactics work.\" I said. \"But they continue to beat their heads against brick walls, anyway.\"\n\n\"So what's the deal with Leonard Lotz?\" asked Jerome. \"I looked up his rap sheet. Pretty much all bank robberies. They're acting like he's a mass murderer, or this Black Velvet killer.\"\n\n\"Yes,\" I said, \"that is interesting...\" A moment later I realized that Cindy and Jerome were watching me, and that I'd gone into a reverie.\n\nWhen I came out of it, I said \"Cindy... contact Priya Ajmani. She's about to get an exclusive interview.\"\n\n* * * * * * * * * * * * * * * *\n\nIt felt like a meeting of world leaders, or of high-powered Mob leaders. Tense members of armed security were on high alert as they ringed the three black celebrities, each having one lieutenant at the table. Jasmine Nix, Big Ice, and T-Square were separated by equal thirds at the table, their own eyes wary and mistrusting. The location was a penthouse office in one of the City's higher skyscrapers, and the view out the windows that were the walls of the room was breathtaking.\n\n\"I'm telling you, T-Square,\" said Jasmine Nix, \"this whole thing is being done by the Crackers to fuck with us. One of those three bums the Iron Cracker caught was an FBI mole. And that bitch reporter keeps telling us that it was nerve agent being brought in. The Man would not let her report that if they're own fingers weren't in the pie.\"\n\n\"Yeah.\" said Big Ice, trying to sound as intellectually proficient as his two 'partners' at the table. \"And that stuff would kill a lot of niggas in the clubs. That's white trash at work. And how did the Iron Cracker find them and that shit so quick?\"\n\n\"The Iron Crowbar is just that good.\" said T-Square. \"You saw how it was when Eidex and Swenson started those riots. That man was all over their shit; figured them out before they figured themselves out.\"\n\n\"And who started that shit going?\" asked Jasmine. \"It wasn't us; we weren't ready yet. Our shit is going to hit the fans when our new album comes out. Then we start hitting the fucking cops.\"\n\n\"Just the white ones? Or all of them?\" asked T-Square's lieutenant T-Mac.\n\n\"Any nigga cop is a tool of The Man.\" said Jasmine. \"And deserves to be shot down in cold blood, like a rabid dog. That's all the Uncle Tom's working for The Man are: rabid... dogs.\"\n\n\"So you think it was the Government trying to kill me, Jasmine?\" asked T-Square. \"You sure it wasn't someone else... making it look like The Man was coming for me?\"\n\n\"I have no fucking idea.\" said Jasmine. \"It could be anyone. Spics, NS-14, White Roots, or some of those worthless niggas whose lives don't matter because they're too fucking stupid to serve the Cause.\"\n\n\"Or maybe there's treachery going on.\" said T-Square. \"Get me out of the way, and some people get more of the profits of what is going to happen.\"\n\n\"You sayin' one of us was behind that shit?\" asked Big Ice, peering at T-Square as he finally realized what was going on .\n\n\"You tell me.\" said T-Square. But he was not looking at Big Ice. He was peering through his shades straight at Jasmine Nix. She met his look, underscoring it.",
        "\"Gentlemen,\" she said, \"we are close, so very fucking close, to making a major step to get justice for the Oppressed in the filthy country. We are close to making the White Man pay for his crimes against Blacks, for the stealing of our money and the raping of our women. We don't need to be fighting amongst ourselves or mistrusting each other.\n\nShe continued: \"T-Square, think about it.. would Big Ice or myself try to kill a lot of Blacks just to kill you?\"\n\n\"I don't know.\" said T-Square. \"If you were trying to disguise it as an attack by Whitey, you just might. But I'm not accusing anyone here. I'm just saying that I am very aware of what is going on, and so is my Security.\"\n\n\"Good.\" said Jasmine. \"All of our Security needs to be as tight as the Iron Cracker's ass. We're three months away from the album debut, and four months at most from putting it all into action. It'll start here, in the City, and we will burn it to the ground. Then... we go to the Iron Crowbar's County... and we kill him, his family, every one of his cops, and burn that fucking Town to the ground, too.\"\n\n\"You won't do that without a fight.\" said T-Square. \"I've been tryin' to tell ya... the Iron Crowbar don't play. He destroyed the Whitey attack on Providence Springs in his hometown. And he'll fuck us up just as badly, especially if he's fighting for his life... and his children's. I'd rather take on the fucking U.S. Army than the Iron Crowbar protecting his children's lives. He don't fucking play.\"\n\n\"His kids will be as dead as him. All of them.\" Jasmine said, peering hard at T-Square. Does she know my sister's daughter is the Iron Crowbar's daughter? T-Square wondered silently. Does she know I'm not going to let my family get hurt in all this?\n\n\"All right.\" said Jasmine. \"We'll leave the details to our lieutenants. Our friends in Washington are in contact with the right people within the Department of Justice in Washington, people who will take our side, and make sure the Media reports exactly what we want them to.\"\n\n\"Good enough.\" said T-Square. He got up. \"Unless there's something else, I'm going home. I've got two albums to finish cutting.\" With that, he left, his Security following.\n\n\"Ice.\" Jasmine said. \"You need to watch your back, boy. It's T-Square that will cut you, and not even blink. Especially if he finds out what I've told you.\"\n\n\"Don't worry, Jasmine, I got it.\" said Big Ice. Jasmine had assigned him and his people the duty of making sure Paulina Patterson and her daughter Tasha were exterminated when the riots began. Those two bitches were tainted by the Iron Crowbar, especially Tasha, who was a filthy halfbreed and the Iron Cop's progeny...\n\n* * * * * * * * * * * * * * * *\n\nBecca Larrington was seating people for the weekend brunch buffet at the Lakeside Inn & Suites restaurant, when a very short man in a suit came up to the desk. Becca had to look down over the table to see him, so she walked around.\n\n\"Where would you like to sit, sir?\" She asked. \"The window seats are full, but there are still some good ones in the middle.\"\n\n\"Anywhere is fine, young lady.\" said the man, his voice scratchy and whispery. \"And also... somewhere I can speak with you, Ms. Larrington.\"\n\n\"Me?\" asked Becca.\n\n\"Yes.\" said the man. \"My name is George Powers, and I'm a reporter for KSB in the City. I'm doing a follow-up on your sister Kathy... oh, I'm sorry if I've upset you...\"\n\n\"No, it's all right.\" said Becca, who had reacted. \"I just wasn't expecting that.\"\n\n\"I am so sorry if I've brought up bad memories.\" said George. \"I was just hoping I could get a short interview with you, as background. After all, your sister was never recaptured after escaping State Women's Prison, and I'm sure it's hard on your family. Maybe bringing light to her situation could help her.\"\n\n\"I don't know, it's pretty upsetting.\" said Becca.\n\n\"Tell you what.\" said George. \"Here's my card. Just phone that number if you change your mind and would be willing to talk with me.\" With that, George Powers turned and left the restaurant, leaving a confused and chilled Becca looking at a crudely printed card...\n\nTo be continued. "
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama",
        "iron crowbar"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/power-ch-03"
}