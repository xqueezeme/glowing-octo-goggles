{
    "title": "Succubus Summoning 206",
    "pages": [
        "Rosa walked around Phil and examined him suspiciously.\n\n\"I thought the warlock was supposed to be toast. He looks a little lively for someone supposed to be toast.\"\n\nNurse Honey shrugged. \"It seems he's a lot more resilient than we first thought.\"\n\nRosa's eyes narrowed as she looked at the succubus in the white latex nurse's outfit.\n\n\"And you had nothing to do with this? I know you. You don't like to let souls slip from your grasp. It wouldn't surprise me if you gave Verd\u00e9 some help in the hope of slurping up the warlock later.\"\n\nNurse Honey smiled at Rosa's accusations. \"I'm innocent,\" she said. \"Whatever Verd\u00e9 did, she did alone.\"\n\n\"Where is Verd\u00e9?\" Phil asked. He was feeling a little too much like a hunk of meat on a shelf.\n\nRosa and Nurse Honey shared a glance.\n\n\"You don't like to hear about what we get up to with other humans,\" Rosa said.\n\n\"She isn't...\" Phil started.\n\n\"She's meditating in her garden,\" Nurse Honey said. \"She needs to replenish her magical energies.\"\n\n\"Yeah... uh... meditating,\" Rosa said in agreement. She closed her eyes and gave Phil a wide smile.\n\nAnd that wasn't suspicious at all, Phil thought sardonically.\n\n\"I'll be accompanying you to college today in her place,\" Nurse Honey said.\n\nThey attracted a lot of attention on returning to Wargsnouts. Tall, buxom blondes in skintight latex fetishised nurse's outfits tended to do that. Nurse Honey had the kind of body that attracted attention. Rosa wasn't exactly subtle either. Her costume was best described as a pair of flame-red panties and a belt cinched around her equally considerable chest. Her thigh-length boots probably covered more flesh than the rest of her outfit combined. Phil walked between them in his ratty black robes. He had the hood pulled up, but it did little to hide the burning red embarrassment on his face.\n\nHe wasn't that surprised when Lutwidge pulled him aside for a quiet word.\n\n\"Mr Rowling, is it really necessary for your succubi to be dressed so...\" Lutwidge's white whiskers bristled as he looked over Nurse Honey's glossy latex outfit. \"...provocatively. It's distracting the other students.\"\n\nPhil gave a helpless shrug. It wasn't exactly under his control. It was as much as he could do to even get them to let him wear these tatty old robes. Having a say in what the succubi chose to wear was beyond him.\n\n\"Oh leave him alone,\" The Scrote intervened. \"Succubi are supposed to be provocatively attired.\"\n\nHe leered at Rosa and Nurse Honey.\n\n\"It adds a little colour to these drab halls.\"\n\nLutwidge huffed and turned away.\n\nStine looked at Phil with a sly twinkle in his eye.\n\n\"Well, my boy,\" he said. \"You seem to have an uncanny habit of showing up right after being pronounced dead. A useful knack for a warlock to have.\"\n\nHe patted Phil on the shoulder and moved off to the lower entrance to the lecture theatre.\n\n\"Can I make him go whuff?\" Rosa asked after The Scrote's retreating back. \"He looks like he'll go whuff nicely.\" Fires burned in her blue eyes.\n\n\"I don't think our warlock wants us to set fire to his teacher just yet,\" Nurse Honey said.\n\nPhil nodded his head rapidly in agreement. As lapse as Wargsnouts appeared to be on student safety, he suspected torching a teacher warranted sterner measures than expulsion.\n\n\"Heard you were dead,\" Darvill said as Phil entered the antechamber before the main lecture theatre.\n\n\"I should change my name to Snake Plissken,\" Phil joked.\n\nMomentary confusion in Darvill's eyes indicated he didn't get the reference. \"Emma was walking around with a very satisfied expression on her face yesterday. Word on the grapevine was that she'd summoned a daemon to avenge her brother's death and that you'd been killed. Only rumour, of course, the school takes a dim view of warlocks summoning daemons to kill their fellow students.\"\n\n\"It was a close thing,\" Phil admitted with a grimace.\n\n\"Close isn't a word often used when a talented graduate warlock like Emmanuelle Brennan takes it upon herself to squash a novice.\"\n\n\"I got lucky,\" Phil said with a shrug.\n\n\"Lucky is also not a word often used.\"\n\nPhil leaned in closer. \"What am I going to do?\" he asked. \"When she finds out I'm still alive she's going to try again.\"\n\nDarvill arched an eyebrow. \"You haven't heard?\" he asked.\n\n\"It's all over the school,\" the thin student who looked like a more angular version of Darvill, Dever, said.\n\nPhil looked at the faces of the other students. What was all over the school? Why did he never hear anything about anything?\n\n\"Emma's dead,\" the big guy, Higgins, said. \"Security detail found her body in the early hours of the morning.\"\n\n\"Real gruesome it was as well,\" Joey Chalk said with ghoulish relish. \"They reckoned sumthink burst her open from the inside. They're still looking for the head.\"\n\nPhil's eyes widened in alarm.\n\n\"They don't think I did it?\" he asked.\n\nThat was all he needed\u2014one of the more established warlock families at Wargsnouts out for his blood over the deaths of two of their own. His succubi were already dangerous enough without a powerful warlock family wanting him dead. College sucked. He should have stayed back at McRestaurant.\n\nNo, nothing was worse than flipping burgers at Mc-fucking-Restaurant.\n\nThe other students laughed at him.\n\n\"Emma Brennan was an honours graduate with a specialty in summoning shadow daemons. We're novices barely able to exert control over our own daemons. To someone like Emma Brennan a novice like you is bugpaste,\" Dever said. His gaze flicked over to linger on Nurse Honey.\n\n\"Your being alive might raise a few questions,\" Darvill said thoughtfully. He hadn't laughed with the others.\n\n\"I didn't do it,\" Phil said.\n\n\"Chill,\" Darvill said. \"No one thinks you did. Emma had a vicious temper. She had multiple feuds going on at the same time. John even thought she might have had a hand in the death of one of his cousins.\"\n\n\"She kicked the wrong big dog in the nuts and it bit her head off,\" Chalk said.\n\n\"Let's just say you're at the back of a very long queue,\" Darvill said.\n\n\"Oh,\" Phil said.\n\n\"Looks like your good fortune continues,\" Darvill said. \"Your problem seems to have gone away all on its own.\"\n\n\"I suppose so,\" Phil said.\n\nHe wandered away. In the last twenty-four hours he'd been raped and nearly drained dry by a giant spider, then mushed up and spat out of the pot of a giant carnivorous plant. That didn't sound too fortunate to him.\n\nAlthough he was still alive, he supposed. John Brennan\u2014and now his sister\u2014couldn't say the same. So much for learning about daemons in a safe, controlled atmosphere.\n\n* * * *\n\n\"Think he did it?\" Chalk asked as they watched Rowling walk away with his two provocatively-dressed succubi on either side of him.\n\n\"Dude, if he had anything to do with Emma's death they should give him the Oscar every year up until he dies,\" Jack Stone said.\n\n\"Coincidence,\" Higgins said. \"Emma or her daemon botched the attempt. Then someone else ganked her before she could try again. You know how she was. Half the college had good cause. Remember John telling us about how she collected enemies like most girls collected shoes.\"\n\n\"I also remembering John telling us to never get on her bad side as she was a vicious, vindictive, and above all, extremely thorough cow that would not stop until she'd fucked you up,\" Darvill said.\n\n\"We all make mistakes,\" Higgins shrugged. \"Rowling got lucky.\"\n\n\"Ah yeah,\" Darvill said. \"He's a very lucky boy is our Phil Rowling. Vanishes about the same time as Jake, yet comes back with a beautiful succubus on each arm. Jake's dead. John's dead. Now John's sister's dead as well. And still Phil Rowling keeps bumbling along. A lucky boy indeed.\"\n\n\"Think someone is looking out for him?\" Higgins asked. \"Someone higher up in the staff?\"\n\n\"But he's outreach,\" Chalk said. \"Just like us. Well all of us apart from Dever.\"\n\nGary Dever wasn't paying full attention. His gaze was fixed on the tall succubus in the white nurse's outfit. He wasn't sure what it was about her\u2014the long silky blonde hair maybe, or her height, or the sumptuous curves of her tits and ass, or even the way the light glinted off the latex that fit her form so snugly it looked as though it had been painted on. Her other form, when her hair had been green and she'd worn diaphanous green robes, had also been hot, but this was something else. That other form shared the same super-sexiness as the other succubus, the one that sometimes had red hair and sometimes black hair. They were hot enough that no man would ever turn them down, even if they didn't quite conform to his favourite type. Above a certain level of attractiveness it didn't matter if a man was into big-titted black girls or petite little Asians, there were girls you just didn't say no to regardless of preferences. But if a girl was above that threshold and a man's type, then the appeal ran to more than naked lust, it crossed over into obsession, or even stalking territory.\n\nDever's type was tall, big-titted blonde girls.\n\n\"He wouldn't have known anyone at Wargsnouts,\" Chalk continued. \"He didn't even know daemons or magic existed before he came here, how could he have got one of the upper levels of staff to look out for him.\"\n\n\"Maybe he's not aware of anyone looking out for him,\" Darvill said.\n\n\"Ah, you think...?\" Higgins said.\n\n\"It's possible. Warlocks have secret babies just like everyone else. It wouldn't be the first, and won't be the last.\"\n\nDarvill looked over to where Rowling stood hidden within his black robes, flanked on either side by a sex-bomb succubus.\n\n\"I think it might be interesting to keep a close eye on Phil Rowling. Possibly profitable too. What do you think, Gary?\"\n\nDever was still staring at the succubus in the white nurse's outfit. Only she didn't look that much like a succubus with her horns, wings and tail hidden.\n\n\"I want her,\" he said.\n\nDever was very much into big-chested blonde girls. And latex too, apparently, although he hadn't known that until he'd seen the way the glossy material clung to her curves. He had the sudden desire to run his hand over her latex-covered boob and down her side to the appealing curves of her ass. He imagined it to be frictionless, totally smooth.\n\nHe wanted to be Phil right then. Or rather not be him but to have what he had. He wanted to be the one with the gorgeous, statuesque blonde girl in the pervy nurse's outfit standing next to him.\n\n\"She's a succubus,\" Darvill said, both surprised and amused. \"They're the common prostitutes of hell. Once we graduate you'll have the knowledge to fill your bedroom full of them.\"\n\nDarvill didn't understand, she was his type.\n\nThe succubus turned back and gave him a come-hither smile. She'd smiled at him\u2014at him!\u2014he was sure of it.\n\nIt was the nurse's outfit. When Dever had been younger he'd been bedridden for months with glandular fever. His family had hired a nurse to look after him\u2014Nurse Bates. Dever was at an age when he'd started to notice the female body. Tall, blonde and busty, Nurse Bates had a body worth noticing. When she'd leant over him and placed a cool hand on his brow he'd fantasised about all kinds of illicit things he wanted her to do with him, and him with her.\n\nIt hadn't been possible, of course. He'd been only thirteen at the time. He'd had a thing for nurses ever since and Rowling's succubus was the epitome of all those fantasies.\n\nDarvill didn't understand. He couldn't wait. He wanted her... now.\n\nWheels turned in Dever's head. A plan formulated.\n\n* * * *\n\n\"As you will remember from earlier lectures, the first human to provide a reasonably accurate description of the topography of hell was the 13th century Italian poet, Dante Alighieri. In his Inferno he describes travelling through the various circles of hell with the spirit of the ancient Roman poet, Virgil, acting as his guide.\n\n\"We now believe that the entity Dante calls Virgil was in fact the daemon muse, Verghal, and that much of what is described in Inferno was revealed to Dante in his dreams and represents actual parts of the plane we refer to as hell. Of course Dante wasn't entirely accurate and his dream images were filtered through the strong Christian influences of his time.\n\n\"Hell does indeed consist of circles, but it is seven, each corresponding to a primal sin, rather than the nine Dante described in Inferno.\n\n\"Also, while Dante is correct in that the archdaemon Satan or Shaitan resides at the heart of the innermost circle, it is as ruler and Lord of all hell, not a prisoner. Not much is known of the Great Beast save he is rumoured to be one of the most powerful, if not the most powerful, archdaemons in all the circles of hell. Few warlocks have managed to successfully summon the Great Beast. The last, Magister Thomas Farynor, was purported to have done so back in London, 1666, and we all know how that ended...\"\n\nLutwidge droned on and on.\n\nNurse Honey looked on, her face aghast.\n\n\"I know, it's hilarious, isn't it,\" Rosa said, a broad smile on her face.\n\n\"Um, what is?\" Phil sat between them and felt as though they were discussing a joke he didn't get. He supposed it was an improvement on the other lectures, where Verd\u00e9 had instigated near-fatal anal sex with him and N\u00ffte had put on a most-definitely-fatal sex show with another student.\n\n\"We'll correct this when we get back to the castle,\" Nurse Honey said.\n\n\"C\u03adr\u03bcl\u0259a?\" Rosa said.\n\nNurse Honey nodded.\n\n\"She'll like that,\" Rosa said. \"It will keep her occupied while she waits for the constellations to align.\"\n\n\"Occupied with what?\" Phil asked. He didn't know what they were talking about, but he knew it involved him and that worried him.\n\n\"Extra tuition,\" Rosa said. She put an arm around him and squeezed. \"You're our warlock. We have to make sure you're learning the right things. It reflects badly on us if you end up looking like a dunce.\"\n\n* * * *\n\nTwice Dever looked back over his shoulder and saw the succubus in white latex looking down at him. It sent a thrill through him. He knew there was a connection between them\n\nA connection? He chided himself for his naivety. She looked on him like a predator spotting a potentially interesting morsel of prey. He knew that, but fuck was it hard to keep in focus while looking up at her silky blonde hair and the glossy white latex stretched tight across her ample chest.\n\nThat part didn't matter. She was a succubus. He knew how she thought, but more importantly he knew how she could make him feel. It wouldn't be real, then neither were most forms of entertainment and that didn't stop them from being enjoyable experiences.\n\nShe glanced at him again at the end of the lecture\u2014sidelong, over her shoulder, eyes glimmering with filthy desire.\n\nA highly enjoyable experience, Dever thought, feeling his dick throb in his pants. Providing he took the correct precautions.\n\n\"You have the look of someone contemplating an extremely foolhardy course of action,\" Darvill said.\n\nDever stared up at the succubus with a kind of furious intensity in his eyes.\n\n\"You don't understand,\" he said.\n\n\"Oh I understand well enough,\" Darvill said. \"Hot succubus. Supernatural sexual appeal. Sounds like she has a hand in your brain and is working your jaw like you're a glove puppet.\"\n\n\"It's something I have to experience.\"\n\n\"Don't,\" Darvill said, serious now. \"You saw what the other one did to John.\"\n\n\"John was too cocky. We all knew that would be the end of him someday.\"\n\n\"And you planning to fuck the other succubi after seeing her friend fuck John into a withered husk is in no way cocky or really fucking stupid at all.\"\n\n\"No, it isn't,\" Dever said, his expression sly.\n\nHe leant over and whispered his plan in Darvill's ear. The other man's expression was at first doubtful, but as Dever whispered that doubt eroded away. At the end Darvill smiled and gave a salutary nod.\n\n* * * *\n\nDever watched the succubus as she stood in the centre of the antechamber after the lecture had finished. Students and their daemons milled around her, rushing off to other classes and appointments. She turned back to look at him. There was nothing fleeting or demure about her glance this time. Her gaze met Dever's stare and she didn't look away. Illicit desires flickered like thunder at the heart of her cloudy white eyes. She held his gaze long enough that Rowling needed to call out from one of the exits to attract her attention. She turned and walked to her warlock. Dever followed.\n\n\"Where's Rosa?\" the succubus in white asked.\n\n\"She went on ahead,\" Rowling answered.\n\n\"Always so impatient,\" the succubus tsked.\n\nDever followed them a few paces behind. He didn't cling to walls or hang back and peer around corners. That would be stupid and attract attention to him. He walked nonchalantly a few paces behind them, just another student going about his business, which happened to be in the same direction as their business.\n\nAnd also afforded him an excellent view of the tight swell of her ass.\n\nThe succubus knew he was there and knew he was admiring her body. It didn't bother her, if anything she seemed to enjoy the attention and encouraged it with coquettish glances back over her shoulder. She carried herself with the authority and deportment of a real nurse, but those eyes betrayed her just as much as the shine of her fetishised costume.\n\nNurse Naughty, Dever thought as he walked behind them. An erection pressed against the front of his trousers.\n\n\"Where are we going?\" Nurse Naughty asked Rowling.\n\n\"The level two summoning labs,\" he replied. \"Mr Stine asked me to pick up a book for him.\"\n\n\"Sounds a dull errand,\" the succubus complained. \"Do you mind if I take off for a short while?\"\n\nWhile her master wasn't looking she stole a glance over her shoulder at Dever. Her eyes let Dever know exactly what she intended doing during that 'short while'.\n\n\"It won't take too long,\" Rowling said, opening an old wooden door with various arcane symbols scorched into the surface. \"We're already here, Verd\u00e9.\"\n\n* * * *\n\n\"We'll organise some extra lessons with C\u03adr\u03bcl\u0259a for you,\" Rosa said to Phil as they walked down the stone corridors of Wargsnouts. Rosa had an arm around Phil's waist and was setting a fast pace. \"I know she might not look it, but C\u03adr\u03bcl\u0259a's really clever... some of the time. She'll teach you some useful stuff.\"\n\n\"What kind of stuff?\" Phil queried.\n\n\"Oh stuff,\" Rosa shrugged. \"I said we should train you to be a better pet, but the others weren't so keen on that idea.\"\n\nPhil glanced around.\n\n\"Hey, where did Nurse Honey go?\"\n\nRosa stopped and looked around. \"Oh,\" she said. She didn't seem that concerned or surprised. She shrugged. \"She's probably off... meditating somewhere.\"\n\n* * * *\n\nDever closed the door behind him and activated both the locking and 'in use' wards. They stood in a plain stone room, roughly cubic in dimensions. Tall, wax-encrusted candelabra stood at regular intervals along a circle drawn on the floor that encompassed most of the room. The only exit was the ornate wooden door they'd entered through and Dever had just locked it.\n\nThe succubus looked around. \"I don't see any book,\" she said, her face creasing up with confusion.\n\n\"Actually,\" Rowling said. \"I brought you here because there is a task for you to perform. I want you to engage in a sexual threesome with me and Gary here.\"\n\nThe succubus, Verd\u00e9, looked at first Dever and then Rowling. She laughed.\n\n\"Drop the disguise,\" she told Rowling.\n\nRowling flickered away and was replaced by a short, skinny thing. Glowing green eyes peered out through the eyeholes of a misshapen mask. Dever's mimijad occulax daemon.\n\n\"I take it you orchestrated this little scheme,\" Verd\u00e9 said to Dever.\n\nShe'd seen through it, but too late. Dever had her where he wanted her.",
        "\"By Aiwaz and Glykon, daemon, I command thee...\"\n\nDever tailed off as Verd\u00e9 smiled and unzipped the front of her uniform. The zipper went down far enough for him to see the creamy curves of her impressive cleavage. His Adam's apple bobbed up and down as the chant dried up in his throat.\n\n\"If you wanted to fuck me all you had to do was ask,\" Verd\u00e9 said, her lips turned up in an amused smile.\n\nPuzzlement crossed Dever's face.\n\n\"Your master...?\"\n\nVerd\u00e9 looked around and shrugged. \"I don't see him here.\" The meaning in her pure white eyes couldn't be clearer.\n\n\"Oh, I thought...\"\n\n\"That a succubus is faithful to only her master. Hardly. Our desire for sex is insatiable. We never turn down a man that desires to fuck us.\"\n\nShe pushed her substantial boobs together, emphasising and bringing attention to her eye-catching cleavage.\n\n\"I take it you do desire to fuck me?\"\n\nDever nodded a little too vigorously. This had taken an unexpected turn, but he must remain in control.\n\nVerd\u00e9 looked around the plain little stone room with an expression of distaste. \"You could have picked a better room.\"\n\nDever said nothing. He had good reasons for choosing this room.\n\n\"This one is a little lacking in rudimentary comforts,\" the succubus continued.\n\n\"I thought you might be able to do something about that,\" Dever said. \"Like what your friend did in the lecture hall the other day.\"\n\n\"And what was that?\"\n\n\"You know. That bed she made swell out from the floorboards.\"\n\nHer friend had also reduced Brennan to a withered husk, but Dever tried not to think about that. He was smarter; his plan was progressing exactly as it should.\n\n\"Oh, you'd like me to use a little sex magic.\"\n\n\"Sure, show me what you've got,\" Dever said.\n\n\"My pleasure,\" the succubus said with a mischievous smile. She reached behind her and grabbed the end of her tail.\n\nStrange, Dever hadn't seen any evidence of a tail when he'd followed her. It was slender like a whip and terminated in the classic devil's point. It was also the same glossy white as her latex nurse's uniform.\n\nHe watched as she put the tip in her mouth and sucked on the end as though it were a lollipop. Or rather, a naughty girl trying to make sucking on a lollipop look like fellatio. He watched as she released it and then held out her tail like it was a hose. Something weird happened. The end of the point started to expand like a balloon. It reached the size of a small cushion before dropping off the end of her tail and bouncing on the floor like a blown-up condom.\n\nBlue light flickered across the floor, walls and ceiling as the magical cushion came into contact with the stone flagstones. The light briefly highlighted strange sigils and elaborate circles before fading away. Verd\u00e9 looked at the walls and the corners of her mouth turned up in a smile. She returned her attentions back to her tail and puffed out another white cushion.\n\nDever wasn't sure how she was doing it. There was no orifice he could see. It looked like the skin expanded outwards until it was sloughed off as a cushion. And yet after producing each cushion her tail returned to exactly as it was before.\n\nMagic, Dever thought. His cock throbbed in his pants as wondered what other sex magic tricks she knew.\n\n\"Hmm,\" Verd\u00e9 said after producing a half-dozen glossy pillows. \"Instead of these what we really need is one big, luxurious...\" She rolled her tongue around luxurious as if it was Dever's rampant erection she was pleasuring between her lips. \"...bed.\"\n\nShe glanced at Dever.\n\n\"Drop your trousers and masturbate,\" she ordered.\n\n\"Huh?\"\n\n\"I'll sense your arousal and it will make my magic stronger,\" she explained.\n\nDever shrugged and did as she requested. He noticed her hand pumped her tail with the same frequency. Another inflatable cushion started to expand.\n\n\"You seem to be enjoying this,\" Dever said.\n\n\"Of course,\" the succubus said. \"Is that a problem?\"\n\n\"Stealing something from someone loses the thrill if that someone never owned the something in the first place. I mean, if Rowling knew this was happening it wouldn't bother him at all, right?\"\n\n\"What makes you think that?\" the succubus said.\n\n\"Succubi are insatiable for sex, like you said. Any warlock who summons one must know they're going to fuck around behind his back.\"\n\n\"Know, but not necessarily like.\"\n\nMischief glimmered in Verd\u00e9's eyes.\n\n\"My master wouldn't be pleased at all if he knew what I was about to do with you.\"\n\n\"He wouldn't?\"\n\nDever's cock bucked in his hand.\n\n\"Oh no. He loathes it when we fuck other men.\"\n\nDever's smile broadened. Blood rushed down to his erection as it surged to full hardness. He was going to enjoy this.\n\n\"Yes, that's it,\" the succubus said between little erotic sighs and gasps. \"I can sense your arousal.\"\n\nShe gave a long drawn out sigh\u2014like she was climaxing\u2014and an enormous white bubble sloughed off her tail and settled onto the floor like a giant latex beanbag. It was easily large enough to hold two. Verd\u00e9 cheek's were flushed and she panted as if she'd just come. Dever's cock twitched in his hands.\n\n\"Ease off,\" the succubus said. \"We wouldn't want any to go to waste.\"\n\nShe patted the surface of the magical bed. It rocked and swayed and sprang back like rubber.\n\n\"Now come over here.\"\n\nGrinning, Dever kicked off his trousers and underwear, took off his shirt and walked over. He put a hand on the glossy white surface of the giant inflatable cushion. It was smooth like unblemished skin and soft. He climbed in and the bed moulded perfectly to the contours of his body. Now this was comfort, he thought.\n\nThe succubus leaned over him, showing off the shadowy pink cleft of her cleavage. She gave him a matronly smile completely out of keeping with her fetishised uniform and ran a warm hand over his brow.\n\n\"Oh you poor boy,\" she pouted. \"So much pent-up stress and tension.\"\n\nDever smiled. It was like being back on that sickbed with Nurse Bates hovering over him. Only this time she was going to cater to every one of his illicit little fantasises.\n\n\"Now you lie back and let Nurse Honey take good care of you.\"\n\nNurse Honey. He liked that. Naughty Nurse Honey\u2014sweet, but with an undercurrent of sin.\n\nHer hand slid down his side, then moved across to circle his erection and give it a sensual pump. It was uncanny how she seemed to pick up on his fantasies and slot right into role-play. He could see why succubi had their fans. Maybe he should have gone in that direction rather than summoning a mimijad occulax. Everyone else seemed to have way cooler daemons than him.\n\nNurse Honey pushed his legs apart and climbed onto the end of the bed. She stared right into his eyes as she pulled the zipper further down her front until her pink boobs were fully exposed.\n\nWow, that was some pair. Big, soft, pink. So soft he wanted to push his face against them and use them as a pillow.\n\nShe bent over and pushed her substantial boobs together around his cock. If this was a porn film or hentai anime, Dever's cock would have stood up out of the top\u2014the perfect height for Nurse Honey to give him fellatio. Dever hadn't had the fortune to be born with a porn-star cock. His erection vanished completely between the fluffy pink pillows of her breasts.\n\n\"Hmm, the patient appears to be uncommonly tense. Let's see what we can do to relieve some of this stress,\" the succubus role-played to perfection.\n\nShe let some of her spit dribble down into the fleshy chasm of her cleavage. Must be a trick of the light, Dever thought, her spittle seemed unusually thick and amber in colour, more like syrup.\n\nHe stopped thinking about that as Nurse Honey jiggled her tits up and down and smooshed them together around his eager hard-on. The pliant warmth of her chest was wrapped snugly around him. Her silky soft skin rubbed against the sensitive ridge of flesh beneath his helmet as she moved her boobs up and down in his lap.\n\nThat felt good.\n\nReal good.\n\nOh...\n\nHis hips bucked and thick gobbets of creamy cum spurted up out of the end of his cock. They spattered her neck and across the top of her heaving bosom. The rest poured out into the warm cleft of her cleavage. Dever felt an odd sensation. The soft flesh of her boobs crowded his erection and shivers ran through it. Almost like her breasts were drinking up his semen like a sponge, he thought.\n\nThe succubus closed her eyes and gave a contented sigh. Dever watched as the milky white globs of his spilled seed were drawn into her skin and absorbed.\n\nCreepy. He didn't know succubi did that.\n\n\"Oh dear,\" Nurse Honey said as she lifted up his flaccid member between thumb and forefinger. \"The patient appears to have lost their vigour.\"\n\nIt wasn't his fault, Dever thought bitterly. Not everyone was gifted the endurance of a porn-star stallion. She was a succubus anyway, wasn't she supposed to be able to deal with situations like this? She'd better be. Dever wasn't letting her go until he'd fucked her.\n\n\"We shall need to administer some medicine to reverse this decline,\" Nurse Honey said.\n\nThat was more like it, Dever thought.\n\nThe white tip of Nurse Honey's tail arced over her shoulder like a scorpion's tail. The end had even morphed into something that resembled a sting. Or rather a hypodermic syringe. Nurse Honey's tail had become a clear hypodermic needle filled with amber liquid.\n\nWhoa.\n\nDever didn't get a chance to react before the tail whipped down and stabbed his balls. He expected pain, but none came, not even a sharp prick. Instead\u2014\n\nOh...\n\nA warm gush of pleasure expanded through his testicles. It felt like they'd been dipped in warm honey, but on the inside. As the pleasant feeling expanded, so did his balls. It was like his ejaculation of a few moments ago had never happened. Or any of his fervid masturbations of the last month. His balls were full\u2014overfull\u2014and suddenly he was ready to go again. His cock sprang back to full hardness as a warm tide of bliss rose up the shaft.\n\n\"You didn't think a succubus would be satisfied with that little pop, did you,\" Nurse Honey purred.\n\nShe rolled her latex skirt up to above her waist and clambered up on the vinyl bed. Excitement trembled through Dever. Her moist treasures awaited him between her legs. Pouting and cooing like the porn-star nurse she resembled, Nurse Honey rubbed a white-gloved hand up and down his shaft. She pressed his erection flat against the smooth glossy latex covering her stomach.\n\n\"Put it in! Put it in!\" Dever said. He was frightened he was going to pop too soon again.\n\nNurse Honey lifted up her hips, manoeuvred his erection between her legs and then slowly sat down. The pleasant feeling rising up his shaft met another pleasant warmth coming down as his cock sank into her honey pot all the way down to the root. Honey pot was more than just an euphemism. His cock felt like it was submerged in thick, sticky syrup. Her vagina was overflowing.\n\nAnd so was he.\n\nDamn. Premature... again. His cock barely made it all the way into her before it started erupting. Dever twitched and shuddered in orgasm. Nurse Honey milked him with soft sighs and gentle up and down movements of her hips.\n\nSo soon... again. But he knew it wouldn't matter because\u2014\n\nAhh...\n\n\u2014Nurse Honey's tail had slithered under her round ass and injected more warm aphrodisiac into his balls. Dever twitched. He remained hard inside her. Ready to come again.\n\n\"Mmm, the patient is responding well to treatment,\" Naughty Nurse Honey said. \"We shall continue with further tests of sexual function.\"\n\n\"You can take me all the way, baby,\" Dever said.\n\n\"I intend to,\" Nurse Honey said.\n\nShe pushed the zipper of her costume even further down and opened out her uniform to expose the pretty pink nubs of her nipples. He got a brief chance to admire them before Nurse Honey lay down on him and rubbed her wonderful boobs against his chest. She put her arms around and hugged him. Her hips moved up and down with lithe little bounces. Dever's cock moved in and out of her with loud squelches. Her pussy was overflowing with sweet nectar. It surrounded Dever's member in a warm, tingling sheath and dribbled out over his balls. He felt the same stickiness on his chest, as if Nurse Honey exuded the same substance from her nipples. She was a succubus, Dever supposed, her tits weren't exactly going to contain milk.\n\n\"The patient is responding very well to treatment,\" Nurse Honey said. Her hips thudded against Dever's crotch as she rode him.\n\n\"Thanks to his exceptional nurse,\" Dever said. He slammed his hips back against her, driving his dick deeper into her honey-soaked depths.\n\nSuccubi definitely had their uses. He wondered how their warlocks ever found the motivation to get out of bed in the morning when they shared it with this.\n\nThen he supposed that was the danger of succubi.\n\nBut not here. Not for someone who took the right precautions.\n\nIt was a shame Rowling wasn't here to see Dever fuck his succubus like this. Dever would have liked to have seen the expression on his face.\n\nNurse Honey's vagina contracted around him, triggering another eruption of pleasure. He was giving her plenty of his own honey, Dever thought as he pressed up against her and unloaded his balls in pulsing torrents. The succubus squeezed her soft breasts against him in a tight hug. Dever felt that moist stickiness again, but this time, strangely, it felt like it was under his skin. Warm puddles of pleasure rippled out from where her nipples indented his chest.\n\n\"Let me have a go on top,\" Dever commanded.\n\nThe aphrodisiac she'd introduced into his body was fantastic. He felt he could go all night and maybe all tomorrow morning as well. His cock bulged, eager to disgorge more semen. He felt as randy as the musclebound oafs that clogged up the city centre pubs every weekend.\n\n\"The patient appears to be in rude health,\" Nurse Honey said.\n\nThe latex bed shifted as she rolled off Dever and then slid across to take his place. She opened her legs, revealing a vagina filled to overflowing with amber-coloured syrup. Dever took up position on top of her. He steered his erection between the hairless folds of her sex and shoved it up inside her. Sticky warmth enfolded his raging erection.\n\n\"So eager,\" Nurse Honey said.\n\nShe wrapped her arms and legs around him and pulled him down onto the soft pillows of her breasts.\n\n\"And so foolish. There is no escaping a succubus from here. I can drain your life at any moment I choose.\"\n\nDever smiled and shook his head. He gave a sly glance to the faint lines glowing on the walls with eldritch light.\n\n\"Not here,\" he said. \"This is a safe room. Students practise summonings here. The walls, floors and ceiling are covered in protective glyphs and circles. No daemon can harm a human in here.\"\n\nHe rammed his cock in her as deep as it would go for emphasis.\n\nHe'd planned it all out. Everyone said John was the cleverest, but Dever had outdone him. He was going to fuck the succubus and live to brag about it.\n\nAnother hard thrust and the dam burst. He pressed down with his hips and emptied his balls inside her in throbbing gushes. He didn't know if it was because he was on top, or the knowledge he'd outwitted her, but this felt like the most satisfying release of all.\n\nThe succubus didn't seem unduly bothered by his deception. If anything, his words and actions seemed to turn her on even more. She placed hands on either side of his head and pressed her lips against his in a passionate kiss. Being a creature of treachery herself, she recognised and enjoyed seeing it in others. He tasted her on his tongue\u2014sweet like sin.\n\nShe really was full of honey, Dever thought as the sweet taste grew stronger. Then her throat moved and suddenly his mouth was filled with thick syrup. Dever was still reeling in surprise when her white wings, previously hidden, folded around him. They were covered in the same sticky syrup. He felt the wetness against his skin as her latex membranes slid over his back. Using her wings, she hugged him tight to her flesh. Her pussy seemed to melt around him.\n\nIn fact it felt like her whole body was melting around him, like her flesh had suddenly taken on the constituency of soft dough. His cock sank deeper into her and his hips followed. Reflexively he used an arm to check his downward sinking and watched, stunned, as it sank into Nurse Honey's soft boob up to his elbow.\n\nIt looked and felt like she was absorbing him. But that was impossible; the protective circles...\n\n\"I saw the protective circles as I entered the room,\" the succubus said.\n\nHer horns were visible now. They emerged through her white hair like an elaborate crown.\n\nDever sank deeper into her. It was like physical laws had shifted. She no longer occupied space, but had become inverted\u2014a hole leading through to a vast, alternate dimension. She was like quicksand and he was sinking through her into an endless abyss. Her wings stretched taut against his back, helping his descent. Dever couldn't even cry out or use magic as his throat was clogged with her sticky tar.\n\nThis couldn't be happening. The circles...\n\n\"They forbid me from harming or killing you,\" Nurse Honey said. \"but I would never do such a wasteful thing.\"\n\nShe caressed his face as he sank down between the soft valley of her cleavage.\n\n\"I'm keeping you safe within my flesh...\"\n\nDown until her flesh filled his world.\n\n\"...for all eternity.\"\n\nThe soft substance within her bunched around his erection and smoothly tugged him to another orgasm. Dever's struggles ceased as his body was flooded with a wash of pleasure that overwhelmed all his other nerve impulses. As he came it felt like all of him was flowing out, pouring out and mingling with the dancing mutability of her protean flesh. A soothing fog of bliss descended over his thoughts. Maybe it wouldn't be so bad.\n\nThen he heard the screams and lunatic cries of countless imprisoned souls...\n\n* * * *\n\nNurse Honey stretched on the bed like a cat. She climbed out, rolled down her skirt and zipped up the front of her nurse's uniform. The giant white cushion faded out of existence behind her.\n\nThe skinny little daemon with the misshapen mask and glowing green eyes stood before her and held out a hand.\n\nNurse Honey ignored it as she pushed and smoothed back her long, flowing blonde hair. She retrieved her nurse's cap and placed it back on top of her head. A miniature hand and screaming face pressed out against the latex covering her side.\n\nThe creature continued to stand there with its hand out.\n\nNurse Honey finally noticed it was there. She stared disdainfully down at the spindly daemon. The hand and face struggling within her were pulled back down beneath her skin and her latex uniform was smooth and shiny again.\n\nThe daemon lost confidence. Its arm wavered and it stared awkwardly at the floor. It backed off.\n\nNurse Honey paid it no heed as she walked out of the safe room.\n\nto be continued...\n\nAUTHOR'S NOTE\n\nI've added these explanations to pre-empt a couple of questions I suspect would have been asked otherwise:\n\nI haven't got the names mixed up. In some sections of the story Nurse Honey is referred to as Verd\u00e9. This is deliberate. These sections are from Dever's PoV and\u2014like the other students\u2014that's who he thinks she is.\n\nAlso, don't trust too much what Nurse Honey says. She's not reliable.\n\nI hope you enjoyed this chapter. The next one to follow in June/early July if all goes to plan. "
    ],
    "authorname": "manyeyedhydra",
    "tags": [
        "succubus",
        "magic",
        "college",
        "warlock",
        "demon",
        "paizuri",
        "titfuck",
        "honey",
        "absorption"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/succubus-summoning-206"
}