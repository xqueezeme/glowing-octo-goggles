{
    "title": "Lust at First Sight Bk. 01 Pt. 04",
    "pages": [
        "Authors note\n\nI'll keep this short and sweet.\n\nI'd like to start by apologising for being slow on my uploads and communication. There isn't much I can do about creating more time to write, but the communication is all on me. I'll work on keeping you all updated on what's going on. Life had been a bit full-on over the last 12 months with the baby on the way and my own health and mental health issues I have had to deal with.\n\nThis part will be the end of book 1 for Lust at first sight, but not the ending of the series. I have much, much more content for this story that I cannot wait to share with you all. With Harem Sisters wrapped up for now (still more content for Harem Sisters in the future), I can focus entirely on Lust at first sight.\n\nThat's all for now. Peace out.\n\nDarth_Aussie.\n\nChapter 16\n\nI awoke with the morning sun shining through a gap in the curtains covering my bedroom window. The small slit allowed a beam of light to fall directly across my face. It was a very unpleasant way to wake up. But the warm body curled up beside me was very much a pleasant way to wake up.\n\nEmily and I had climbed into bed as soon as we'd returned from our ride the night before. Things had become quite hot and heavy up at the lookout. But we had lost the mood by the time I pulled the bike into the garage. Sure, we probably could have jumped right back into what we had going, but I didn't want to rush things with Emily. She seemed content to just sleep beside me. We shared kisses, and I allowed my hands to wander a little more without feeling bad about my actions. We finally fell asleep with Emily curled up in my arms as I spooned her from behind.\n\n\"Good morning,\" Emily said, then kissed me softly on the lips.\n\n\"It is a good morning,\" I said, returning her kiss.\n\n\"You're cute when you sleep,\" Emily giggled.\n\n\"Am not,\" I said with a mock frown.\n\nEmily giggled, then kissed me on the cheek before sitting up and stretching her arms over her head. She had gone to bed wearing her underwear and whatever t-shirt she was wearing the day before. Her stretching gave me a nice view of her pale skin beneath as her t-shirt rode up.\n\n\"I'm gonna go get breakfast started,\" Emily said, then covered a yawn with her hand. \"Want some?\"\n\n\"Sure thing,\" I smiled, taking in her natural beauty. \"I'll be down in a bit.\"\n\n\"Okie,\" she smiled.\n\nWe shared what started as a quick peck on the lips that turned into a short make-out session where things heated up so much that I was hard enough to hammer nails by the time we parted.\n\n\"I'll be down after I have a shower,\" I said, a little breathless.\n\n\"Okay,\" Emily said again, looking a little flushed.\n\nI admired Emily's cute behind--clad only in her modest black panties--as she left my room, shooting me a broad smile over her shoulder before giggling and darting away.\n\nI probably could have made love to Emily right then and there. After our kiss, the look on her face told me she was as turned on as I was and would have been open for some fooling around. The only problem I had with that was I didn't want to be the one to press the topic of sex or sexual activities with my youngest sister. I knew it would happen eventually--I'd be an idiot for thinking it wouldn't--but I just couldn't bring myself to press the issue. I was going to let Emily take this relationship at her own pace.\n\nI closed my eyes as I lay there thinking about how gorgeous Emily looked in the morning sun. Her hair was usually messy and quite unruly--compared to her sisters--but she had the epitome of bed hair this morning. Not that Emily seemed to mind.\n\nHer natural beauty and zero fucks given about her appearance were some of the things I loved most about her. Sure, I loved how much effort Erica and Mel put into their appearance, and those two were complete knockouts. But that wasn't Emily. And I couldn't pick who was the more beautiful woman out of my sisters.\n\nA thought I never thought I'd be having.\n\nI must have dozed off while I lay there because I suddenly felt my body wake once more. The mattress shifted like someone was climbing into bed with me, and I immediately thought about the night with Jen. Emily was probably joining me, maybe hoping to wake me up with a kiss to tell me breakfast was ready.\n\nI played possum while I waited for my wake-up call, not wanting to ruin the surprise for Emily. Then I felt the blankets pull away from my body, and the next thing I knew, I felt a hand slide into my boxers and fish my cock out, and immediately started stroking me. My eyes shot open, and I pushed up onto my elbows. I almost expected to see Jen with my dick in her hand--since she'd done this before, but I was relieved--and excited--to see Erica stroking my shaft instead.\n\nShe was straddling my hips, hovering over my now erect cock. And completely naked.\n\n\"Good morning,\" I said, smiling at her.\n\n\"It is now,\" she replied with a sultry purse of her lips.\n\nI had a witty comeback ready for her, but my mind went blank as Erica aimed my cock at her waiting entrance and impaled herself on me. The penetration was so sudden and unexpected that I lost all conscious thought. I let out a long moan that Erica echoed as she slowly impaled herself on me. Her body tensed when she reached the halfway mark, and she placed both hands on my stomach as she gyrated her hips for a moment before taking the rest of me inside.\n\n\"Holy shit,\" I gasped, my hands going to her hips automatically.\n\n\"Fuck!\" Erica moaned.\n\nThe feeling was exquisite, like nothing I'd ever felt before. I'd been with my fair share of women in my short life, and sex always felt terrific, but nothing could compare to being inside of this incredible sex goddess. It was like her pussy was cast for my dick alone. She was tight yet yielding to my cock perfectly. Hugging my shaft in a way I didn't know possible.\n\nI was actually inside my sister. We'd toyed with the prospect of fucking the shit out of each other since the moment we met. But now, it was a reality. She'd come to me--like she had the night of the party--and given us both what we had yearned for since the moment our eyes met.\n\n\"Are you okay, Nick?\"\n\nI opened my eyes--unaware I had closed them--and saw Erica staring down at me, her hands pressed flat against my bare stomach. I let my eyes roam over her naked body, from her soft thighs to her hips and over her breasts--which were pressed nicely together as she leaned forward--and finally her goddess-like face. A look of concern showed on her beautiful face, and it clicked.\n\nErica had gambled everything on this encounter, and now she was worried she might have over-stepped. She might have even come by last night and saw Emily in bed with me, deciding it best to come back this morning. She might have even woken up earlier than usual--she was a late sleeper--and waited for Emily to leave. We had fooled around a bunch already but taking the literal plunge into fucking a sibling was still daunting, even to me.\n\n\"Yeah,\" I said. \"Everything's great.\"\n\nErica gave me a small--quite nervous-looking--smile, a smile that made my heart race and my dick pulse.\n\nHer smile turned into a sharp gasp as I rocked my hips. My fingers dug into the smooth flesh of her thighs as I gently began to fuck her. Erica moved with my motion, and soon we had a nice, steady rhythm going. It was nothing like the mad, sex-crazed session I would have expected for our first time. But the feeling of being inside of her and the sight of her naked body atop me was almost too much to handle. I had a feeling she was in a similar situation.\n\nI sat up and shifted on the bed so I could wrap my arms around Erica's waist. She giggled a little as I pulled her body to mine, and our lips met with a powerful kiss. Our tongues danced as Erica began riding me in earnest. I couldn't do much in my position, so I focused on enjoying the rest of her body.\n\nMy lips found her neck, shoulder, breasts, and nipples, one after the other. My hands explored her naked back and groped her juicy butt as I urged her on with my touch. I could tell by the erratic movement of her hips, the gasp in her moans, and the way she buried her face into my shoulder. She was close.\n\nThen my sister hit her peak and climaxed on my cock.\n\n\"Oh, Nick!\" Erica moaned into my ear.\n\nHer thighs squeezed around me tightly, her nails dug into the skin of my back, threatening to draw blood, and her breath was hot on my ear as she continued to mewl and moan my name as she rode out her climax.\n\nAfter a half minute passed, Erica finally came down from her euphoria. Sweat glistened on her chest, and I watched with hypnotic attention as a droplet of her body sweat slid between her amazing breasts.\n\n\"That was amazing,\" she said breathlessly. \"But you didn't cum, did you?\"\n\n\"Not yet,\" I winked.\n\nErica smiled wide and bit her bottom lip before pulling me into another passionate kiss. I rolled us over--so I was on top--and Erica spread her legs wide, welcoming me in. I was still hard enough to pound nails--and deep inside of her--but instead, I was going to pound her.\n\nI needed to make sure we had our intense fuck-session we'd both teased from day one.\n\nI sat up on my knees and grabbed Erica's legs--one in each hand--and draped them over my shoulders. This was one of my favourite positions because it let me get nice and deep. And I wanted to make sure Erica got every inch of me.\n\nI started off with a slow, long thrust, adding a bit of power from my hips as I drove my cock deep inside of Erica's incredibly welcoming pussy. Erica gripped my forearms tightly as if she were hanging on for dear life; as I started slamming deep inside of her.\n\nThe bed creaked with each thrust, and I was worried at first that someone might hear us from outside. Then I remembered that each of our sisters knew what was going on. Mel would probably encourage it, while Amanda might frown and say it isn't right, but she'd never say anything to anyone. The main issue might be Emily. I'd hate for her to feel second-best to anyone.\n\nI'd have to have a chat with her about what she expected from us. But that could come after I rearranged Erica's insides.\n\nErica reached her climax once again, but this time I didn't slow my roll. I kept pounding into her like a mad man as she started shrieking in pleasure this time. Erica had no leverage as I ploughed her relentlessly. All she could do was lay there and take what I gave her. The thought of that alone made me growl with excitement as I increased my effort.\n\nThen it was all over for me.\n\nMy climax hit me like a dump truck running through a blow-up doll. I hilted myself deep inside Erica and hunched over her body, pressing her knees to her shoulders as I tried to force myself deeper and deeper inside of her. Effectively pinning her to the bed with my erection.\n\nI ran both hands through Erica's long hair, gripped it tightly, and pulled her into a savage kiss as my balls emptied what felt like months of pent of seed into her well-fucked vagina. Our tongues danced, but I lost focus as the incredible orgasm shot through my pelvis and found its new home inside my sister. I hadn't felt anything like this before. The sheer volume of what I was depositing into Erica's abused cunt should have been alarming, but I was too caught up in the unparalleled feeling of ecstasy I was currently experiencing.\n\nAfter what must have been a solid minute, I finally finished filling Erica. I was breathing heavily, and sweat covered my entire body, mixing with Erica's sweat and other bodily fluids we'd shared during our short rutting session.\n\n\"I think we made a mess,\" Erica giggled.\n\n\"I really don't care,\" I laughed.\n\nWe shared another kiss before I found the energy to climb off my sibling and extract my still hard cock from her pussy. Erica was indeed right because there was a hell of a mess needing to be cleaned up.\n\nI'd filled my sister with no thought to the consequences. I had a hunch that Erica was on some form of birth control, but I wondered if it would help here. I hadn't just shot a load inside Erica; I filled her to the brim. Even before my cock slid from her, I could see where my seed had pushed out around my erection, dripping down her gorgeous ass, creating a small pool on my bedsheets.\n\n\"Holy shit!\" Erica gasped, sitting up to get a look at the aftermath. \"Is that normal for you?\"\n\n\"Nope,\" I replied, shaking my head. \"Never happened like that before.\"\n\n\"I should take that as a compliment,\" Erica grinned.\n\n\"Take it however you want,\" I leaned in to kiss her.\n\n\"You know I will,\" she replied in a breathy whisper. \"But I need a shower after that.\"\n\n\"Make room for me,\" I said, watching Erica bound out of bed. She looked incredibly sexy as she sauntered to the bathroom with my cum dripping down her thighs.\n\nWe showered together in the small cubicle with only a little fumbling. Erica made sure my cock was clean--with her mouth--and I made sure her ass and fantastic tits were well and truly clean too.\n\nI doubted either of us had time for a quickie in the shower, and while I was still hard from having a near goddess in the shower with me, I was quite spent from earlier. I wondered if each time with my sisters would be like this. The orgasm I'd received from Mel had been quite intense, but nothing on what had just happened.\n\nMaybe I'd have to talk to my platinum-haired sibling and perform some more of her tests, for science purposes, of course.\n\n\"We should probably keep this quiet until I've mentioned something to the others,\" I said to Erica as we dried ourselves.\n\n\"I think I'm well beyond being quiet,\" Erica giggled.\n\n\"You know what I mean,\" I said, giving her bare ass a playful slap.\n\n\"I'll be a good girl,\" she grinned. \"But you'll have to keep me quiet.\"\n\n\"I can think of a few ways,\" I grinned.\n\nWe lost ourselves in a passionate kiss as our naked bodies pressed together. I'd have to learn to control myself around this girl; otherwise, I would never leave this room.\n\n\"Alright,\" I said. \"Breakfast time.\"\n\n\"Go on ahead,\" Erica smiled. \"I'll be down shortly.\"\n\n\"I'll see you down there.\"\n\nWe shared another quick kiss before I dressed and left my still naked sister in the bedroom.\n\nI was surprised Emily hadn't come up to get me for breakfast yet, then I looked at the clock. It hadn't really been all that long since she left to make breakfast. My time with Erica had been short but intense.\n\n\"Good morning.\"\n\nI jumped a little at the greeting from Mel as she looked up from her phone. She gave me a broad smile and rose to her feet from where she perched herself on my couch. She wore a small pair of white cotton shorts and a tiny pink singlet with a rainbow on the front. She very clearly wasn't wearing a bra since I could see her nipples through the thin material. The whole outfit made her look incredibly cute, and the pigtails and thigh-high black and white striped socks completed the look--a look she undoubtedly picked to distract me. If I weren't already hard enough to drill holes with my dick, I'd be full mast just by looking at my platinum-haired sister.\n\nHow long had she been sitting there? Erica and I weren't exactly quiet, even when we were showering together. By the look on Mel's face, she'd been waiting for quite some time.\n\n\"Good morning,\" I replied, trying to act casual.\n\n\"Breakfast is ready,\" Mel said. \"Emily was going to come up here herself, but I thought it best that I do it for her after I spied Erica sneak up here earlier.\"\n\nMel gave me a knowing smile, then glanced over my shoulder to the bedroom door. Erica was still back there, and I had a sudden fear that the two might get into an argument over me. Then I remembered what each of them had said to me on separate occasions.\n\n\"I'm surprised you didn't let yourself back there,\" I said, pointing a thumb over my shoulder to the bedroom door.\n\n\"And ruin Erica's first time with you?\" Mel arched an eyebrow, then stepped closer to me. \"There are some lines even I won't cross.\"\n\nMel ran the palm of her hand over the prominent bulge in my shorts as she leaned in close. She was the shortest of all of my siblings, but right now, the height and size difference between us only made me want to throw the petite blonde over my shoulder and have my way with her, whether Erica was in the room or not.\n\n\"We better get down for breakfast,\" Mel smiled, removing her hand. \"See-yah down there.\"\n\nWith that, she spun on her heel, her long pigtails swishing through the air as she bounced and almost skipped to the door. Shooting me a devilish grin over her shoulder that I almost missed since I was too busy staring at her tight-round little ass.\n\n\"Was that Mel?\"\n\nI turned around to see Erica standing in the doorway to the bedroom. She had pulled her customary black robe on but left it untied from around her waist. I let my eyes roam the sliver of exposed flesh before meeting her eyes.\n\n\"Yeah. She knows,\" I nodded.\n\n\"Of course, she does,\" Erica said as if it were common knowledge. \"They all do.\"\n\n\"Yes...but they don't know what just happened,\" I explained. \"She does.\"\n\n\"I'm just glad she didn't think it was an invite for her to join us,\" Erica replied.\n\n\"I said the same thing. Something about not wanting to intrude on our first time.\"\n\n\"That's sweet,\" Erica smiled. \"I'll make sure I won't intrude on your time with her when it comes.\"\n\n\"Passing me around already, are you?\" I laughed.\n\n\"Nick, my dear, handsome, big-dicked brother,\" Erica said, stepping up to me and placing a hand on my cheek. \"It would be wrong of me to keep that monster-cock away from my sisters. We're all in this fucked up situation together, so they may as well enjoy what I just had. They are my sisters, after all, and I love them.\"\n\nI had no idea how I'd gotten myself into my current situation. I had come to Australia to meet family I never knew I had. All four of my half-siblings were absolute knockouts and amazing women. Each of them seemed to have an immediate attraction to me--as I did them--and even after scoring with two sexy women in a way to help combat what I thought was wrong, I still ended up in bed with one of my goddess-like sisters.\n\nAnd she was completely happy to share me with the others. This kind of shit just didn't happen to me. Or anyone, for that matter.\n\n\"You are one of a kind, Erica,\" I said, pulling her into my arms.\n\n\"I know,\" she smiled.\n\nWe kissed sensually for a minute or two before she urged me to leave. It was best if I left before her. Mel had caught us in the act, but Amanda and Emily still didn't know. I would tell both of them as soon as possible, but I didn't want them to find out this way.\n\nI made the short trip down the backyard and past the pool--contemplating taking a dip to help settle my erection--and into the back through the sliding door where I was greeted with the smell of bacon, buttered toast, and eggs.\n\n\"Just in time,\" Emily said, shooting me a grin as she loaded up a plate of food. \"I thought you fell asleep again.\"\n\n\"I did for a little bit, then I had to shower,\" I explained, moving around the kitchen counter to wrap my arms around Emily. \"Part of me was hoping you'd come back to bed.\"\n\nEmily let out a soft moan that was almost inaudible. But the way she wiggled her hips when I hugged her from behind told me more about her thoughts than any words or sounds of pleasure coming from her lips.\n\n\"Maybe we can cuddle after breakfast?\" she asked nervously.\n\n\"Of course, we can,\" I smiled, kissing her on the cheek.\n\nIt didn't take a rocket surgeon to know that Emily was still a little apprehensive about sex, especially with her own brother. I could tell by the way she looked at me and how her body moved against mine that she wanted to. But she just hadn't crossed the finish line yet. Add that to the fact she is still a virgin, and I could completely understand. I'd let her take it at her own pace.",
        "Emily and I shared a quick kiss on the lips before she ushered me to the dining table and served up some all-star breakfast. Both Emily and Amanda were fantastic cooks, and I would have to watch my weight if these two kept feeding me. Although with the extra strenuous activities I was sure to be having with at least two of my siblings, I could keep any added weight off without too much issue.\n\nMel joined me as I started eating, followed by Emily, and we all had a nice breakfast as the twins started talking about university, which would be started up next week. Meaning I'd be starting my new job also.\n\nI was excited to get out of the house and have something to do. Ever since I could remember, I'd had a job and a purpose for each day. Those days, it was more necessary since my mother didn't make a lot of money and relied on me to chip in whatever I could. These days though, I had enough money in the bank to keep me going for a couple of years if I was careful with my spending. I still wanted to work, so I didn't cut into the cushion I now had, and I'd get to see Emily and Mel each day.\n\nHalfway through breakfast, I spotted Erica creeping across the backyard. She must have hung about in my flat for a while to make sure the coast was clear before coming down. She slipped in through the back door without a sound and crossed the kitchen on bare feet. Emily was seated facing me, so she didn't see her older sister come in, but Mel did. My platinum-haired sister gave me a knowing smirk that shifted to a frown as she looked between her twin and myself. The look on her face told me exactly what she was thinking.\n\nI'd have to tell Emily sooner rather than later.\n\nOnce I was finished eating, I helped Emily with the dishes while Mel cleaned up the dining table and kitchen counter. Emily was all smiles as we worked closely, and I spied Mel giving us a small smile--one that told me how happy she was to see her sister smiling--when she thought I wasn't looking.\n\nJust as we were finishing up, I heard the front door open and slam shut. The next minute, Amanda rolled into the room with the look of fire and brimstone on her usually pleasant face. My eldest sister stopped in her tracks when she saw the three of us in the kitchen, and a flurry of emotions--anger, lust, sorrow, pain, and longing--flitter through her beautiful blue orbs in a matter of seconds as they bore into me.\n\n\"Good morning, Manda,\" Emily said cheerily. \"We just finished breakfast, but I can whip something up for you.\"\n\n\"It's fine,\" Amanda sighed. \"I'm just going to have a nap.\"\n\nAmanda gave me another quick glance, then spun on her heel and strode away. Her footfalls on the stairs sounded heavy, almost like a child throwing a tantrum. The sight of Amanda in a bad mood was a completely new experience. I had seen her happy, sad, and even upset. But never mad.\n\n\"Maybe one of us should go talk to her,\" Emily said after a few seconds. \"I haven't seen Manda like that in a long time.\"\n\n\"I know,\" Mel replied. \"I was actually a little terrified for a minute there.\"\n\n\"I'm guessing that's out of the ordinary for her,\" I asked, turning to the twins.\n\n\"Completely,\" Mel nodded.\n\n\"Manda never goes out all night,\" Emily added. \"I was happy when she told me she was, but now I'm worried Craig and Amanda had a fight.\"\n\n\"Do they fight often?\" I asked.\n\n\"Not at all,\" Mel said. \"Craig is a dick, and I've told Amanda that, but she doesn't rock the boat. It's actually infuriating how little she stands up to him.\"\n\nAmanda was so beautiful she would make a solid 10 look like a barely scraping in 5 on their best day. Not only was she physically stunning--an angelic face and the body of a succubus, with just enough curves to accentuate her lean figure that could make a eunuch crack a stiffy. She was also an incredibly wonderful woman with a smile that brightened even the darkest nights. A woman like her should have her pick of any man and for that man to feel like the luckiest son-of-a-bitch in existence for being with her.\n\nI had no idea why Amanda let Craig walk all over her.\n\n\"She is worried he will leave,\" Emily chimed in as if reading my mind.\n\n\"She could do so much better, though,\" I replied, sounding more than a little frustrated.\n\n\"She could,\" Mel said, giving me a pointed look, one Emily failed to notice.\n\nShe was cute, but she really needed to pay attention to what was going on around her. I was sure a bomb could go off, and my adorable little sister wouldn't notice. Especially when she was giving me a look currently directed my way.\n\n\"I'm guessing you've all told her the same thing?\" I said, and the twins nodded. \"Well...maybe I can go talk to her. I know I'm new around here, but a fresh perspective might help.\"\n\n\"Good idea,\" Mel nodded. \"Come on, Em, let's go watch some T.V.\"\n\n\"Okie,\" Emily smiled. \"We'll be down here if you need anything.\"\n\nThe twins and I parted ways with a quick hug and kiss from each of them. Emily was paying attention this time when Mel kissed me, but she only smiled before looping arms with her platinum-haired twin as they strode away to the living room.\n\nMel once again busted me--with a cheeky smile and a wink--checking out their flawless behinds as they walked away.\n\nI took a deep breath and steeled myself for the up-and-coming confrontation. I shouldn't be so nervous to talk to Amanda about this, but I was. Ever since that kiss--and the follow-up conversations and looks we shared--things had been a little tense between us. I needed to enter this as her brother, not a guy who was jealous of her undeserving boyfriend.\n\nI needed to do what was best for Amanda.\n\nThat's what mattered most of all.\n\nChapter 17\n\nI stood in the hallway outside Amanda's room for what felt like fifteen minutes but couldn't have been more than a minute or two. I was feeling incredibly nervous and anxious about knocking on her door. Not only was I potentially waking her up--I was smart enough to know not to wake a woman when she was napping--but I really didn't really know how Amanda would react to me butting into her relationship with Craig.\n\nI took another deep breath to steady my nerves, then raised my fist to knock; that's when I heard it for the first time.\n\nNow I heard it; I couldn't understand how I had missed it to begin with. I was probably too distracted by my own anxiety to notice, but it sounded like Amanda was sobbing softly.\n\nMy heart jumped at the thought of her in there, all alone, crying into her pillow. It was faint, but there wasn't anything else it could be, and it was definitely coming from her bedroom. Erica was most likely in her room, but it was further up the hallway. Each of the twins had their own rooms too, but they'd stayed downstairs.\n\nIt had to be Amanda.\n\nA new wave of determination washed over me, and I raised my fist to rap on Amanda's bedroom door. If Craig's behaviour had caused my sister to cry, I'd step in, and nothing would stop me.\n\n\"Who is it?\" I heard Amanda call out.\n\n\"It's Nick,\" I replied. \"Are you alright?\"\n\nI heard a rustling from inside the room, and the sound of something being knocked over, and Amanda cursing quietly. Then the door swung inwards, and I was confronted with the eldest of my half-siblings.\n\nOnce again, Amanda's natural beauty struck me stupid for a few seconds.\n\n\"Hey,\" she said, looking a little flushed. \"What's up?\"\n\n\"Just checking in. You seemed upset downstairs, and I wanted to make sure you were okay,\" I replied.\n\nA small smile crept along Amanda's lips as she glanced down to her feet. Then it broadened when her eyes met mine again. \"I'm fine, just tired.\"\n\n\"Okay,\" I nodded, not wanting to push the subject. \"I'll be downstairs if you need anything.\"\n\n\"Thanks,\" Amanda said. \"I really need that nap, though.\"\n\n\"Too easy. I won't let the others bother you,\" I grinned.\n\n\"I'm sure you have ways to keep the others occupied,\" Amanda smirked.\n\n\"And that doesn't bother you anymore?\" I raised an eyebrow questioningly.\n\n\"I care about this family more than anything else,\" Amanda replied seriously. \"Plus, they're all adults and are capable of making their own choices. Just try not to break any hearts and make your choice sooner rather than later.\"\n\nI hadn't really thought about making any choices so far. All three of the siblings I had fooled around with had made it abundantly clear that they didn't mind sharing. Mel even seemed interested in joining in. But Amanda couldn't know that. All she knew was that feelings, attractions, and desires were flying around this house like a freshly popped balloon.\n\nBut she couldn't know what had already happened or the words spoken between our younger siblings and me.\n\nI wondered if Amanda would change her mind if she knew.\n\nI trudged down the stairs feeling a little better about the whole situation. Amanda didn't seem angry, mad, or upset, which made me think that maybe Craig hadn't done anything after all. Then I felt like shit for wishing he had because perhaps I could have Amanda for myself if he did.\n\n\"Sneaking away from Amanda's room so soon after we hooked up?\"\n\nI turned to look back up the stairs as I reached the bottom to see Erica begin her descent. She wore her customary robe that hugged her body like a greedy lover. Erica hadn't tied the belt very well, and I could see plenty of exposed skin down her chest, stomach, and even between her legs with each step she took.\n\nNo doubt she had done that when she heard me in the hall.\n\n\"Nothing like that,\" I chuckled. \"Just checking up on her. I thought maybe she and Craig had a fight because she was in a bad mood when she came home.\"\n\n\"I'd be in a bad mood if I had to spend the night with him,\" Erica smirked. \"Especially when there's such an amazing man at home with an even more amazing cock.\"\n\nErica reached out to brush her hand against my quickly growing erection. A grin spread along her beautiful face as she fondled my cock and felt it grow hard for her.\n\n\"I highly doubt that's why,\" I laughed softly.\n\n\"Well, maybe we can head back up to my room, and she can listen in, hear what she's missing out on,\" Erica whispered, stepping in closer to me.\n\nI drank in the sight that was Erica. The lingering touch, scent, and warmth of her body were still fresh on my mind. The taste of her lips and tongue and the exotic feeling of making love to her felt like something from the most wondrous dream any man could conjure up.\n\nI was extremely tempted to take her up on the offer. But...I had to think of the others. Amanda was in the next room and likely wouldn't appreciate the ruckus, and I had promised to spend some time with Emily after breakfast.\n\n\"Rain check,\" I said, ascending the steps to meet Erica halfway.\n\n\"I can't wait,\" Erica said in a low, breathy tone.\n\n\"You and me both,\" I smiled.\n\nI stopped on the step below Erica and pulled her into a passionate kiss. Our height difference was null-and-void as Erica stood on a higher step, affording me with a great vantage point to grab her magnificent ass with both hands. Erica let out a muted squeal and flashed me a huge grin.\n\n\"Fucking hell, you make me so horny,\" she giggled, delight dancing in her eyes.\n\n\"Feeling is mutual,\" I winked. \"But I better get going for now.\"\n\n\"Okay,\" Erica whispered. \"I'll be thinking about you.\"\n\nA short--but heated--kiss later, we parted ways, but I couldn't help but stare at the swish of her robe as Erica ascended the stairs once more in a teasingly slow manner.\n\nI was tenting my shorts quite obviously now, but I didn't have time to sort anything out. Emily was waiting for me in the living room, and she had said she wanted to cuddle. Then there was Mel, who had decided that tormenting me sexually was her favourite past-time.\n\n\"Hey, you finally made it,\" Emily smiled from her spot on the couch.\n\n\"Is Manda okay?\" Mel asked, her head laying on her twin's lap as she stretched out on the couch.\n\n\"Yeah. She just seemed a little tired,\" I said. \"I'm sure she'll be fine in a few hours when she's had some rest.\"\n\n\"I'll check on her later,\" Emily said. \"Now come watch some T.V.\"\n\nEmily, Mel, and I chilled out on the couch for the next hour, watching cartoons that made me question whether they were for children or not. It seemed the creators loved slipping in adult references whenever they could, and I was surprised no one picked up on it before airing the show.\n\n\"They're meant for adults,\" Emily said when I asked.\n\n\"You really haven't spent much time watching T.V., have you?\" Mel asked.\n\n\"Not really,\" I shrugged. \"I always had stuff to do, and the local channels back home weren't that great.\"\n\n\"Well, now you can watch anything,\" Emily smiled, tossing me the remote.\n\nAnother hour passed, and the shifting of positions on the couch changed too. I was now seated between the girls--after Mel got up to get some popcorn--with Emily on my left, my arm wrapped around her, and Mel spread out across the couch, resting her head in my lap. I had calmed down from my encounter with Erica earlier, but that didn't hold out when Mel started fucking with me.\n\nI felt Mel's hand on my thigh first. The touch was innocent enough, to begin with, but Mel obviously had her own plans. Her fingers trailed down my leg and over my knee before dancing all the way up my inner thigh. Mel's hand--along with the feel of Emily pressed against my side--had the desired effect. My cock was slowly filling with blood, but it took longer than usual for my pal to rise and shine because of the seated position and Mel's face.\n\nBut I guessed from Mel's position, she felt the entire thing.\n\nMy white-haired sister had the side of her face resting on my lap, and I could feel my cock grow and press against her cheek. Mel wiggled a few times--as if getting comfortable--which urged my growing erection on. Once, when Emily wasn't looking, I even saw Mel look up to me and yawn. The opening of her mouth right above the growing bulge in my shorts.\n\nI was starting to learn how much Mel loved teasing the shit out of me.\n\n\"You guys look cosy,\" Erica sauntered into the room in a pair of black denim shorts, fishnet stockings, and a modified band t-shirt with a swooping neckline that displayed her assets for all to see.\n\n\"It's very relaxing,\" Mel replied. \"Join us?\"\n\n\"Maybe later,\" Erica smiled. \"I don't want to butt in on your time with Nick.\"\n\nMel sat up and looked between Erica and me, giving me a big smile. Erica was letting Mel know that she knew about earlier. I wasn't sure exactly what passed between Erica and Mel just then, but I had a feeling it was some silent agreement to share me. I was okay with it--as any man in my position would be--as long as they were. I'd just have to make sure I spread my affections evenly, especially with Emily in the picture too. She had enough of an image problem when it came to her siblings.\n\n\"I'm going out for a bit,\" Erica said. \"I'll see you all at dinner tonight.\"\n\n\"Have fun,\" Emily said.\n\n\"Don't do anything I wouldn't do,\" Mel giggled.\n\n\"See you tonight,\" I replied.\n\nErica gave the three of us a wave and me a coy smile before sauntering out of the living room. The sway of her hips obviously added to make my flagpole of a dick even harder. If that was even possible.\n\n\"Well, I've been lying about long enough,\" I said, stretching my arms over my head. \"I need to get my blood pumping.\"\n\n\"One sec,\" Emily said, pulling her vibrating phone from her pocket and answering it.\n\n\"Blood pumping, hey?\" Mel said, shifting her body, so her head was now resting on my stomach.\n\n\"Do you think of anything else?\" I chuckled.\n\n\"Not when you're around, I don't,\" Mel giggled.\n\n\"If you really want to know, I was thinking about having a dip in the pool,\" I said.\n\n\"Not the most interesting way of getting you shirtless and wet, but it's still entertaining,\" Mel winked.\n\n\"You're welcome to join me,\" I said, running my hand up and down her back.\n\n\"Mmmm,\" Mel purred. \"Tempting, but I have stuff to do. Maybe Emily will join you?\"\n\n\"Not sure Emily is ready for what I've got on my mind,\" I replied, my hand drifting down to squeeze Mel's perfect rump.\n\n\"Isn't it my job to tease you?\" Mel asked with a raised eyebrow.\n\n\"Just giving you a taste of your own medicine,\" I smiled.\n\nMel's eyes bore into mine as my hand rested on her ass. I could almost hear her heart beating as fast as my own, almost smell her arousal. Erica's morning visit seemed to awaken something in me or break down the barrier to what was always there. I'd done it once, and I planned to do it again. I had permission from both of these sex goddesses and even encouragement.\n\nI didn't want to wait anymore.\n\n\"I'm heading out,\" Emily said, stepping back into the living room. \"Jen is having a crisis of some sort, and she needs me.\"\n\n\"What's her crisis? Her last selfie didn't get as many likes as she's used to?\" Mel smirked.\n\n\"Probably something like that,\" Emily sighed. \"But she is my friend, so I better go be there for her.\"\n\n\"She's a shitty friend, Em,\" Mel said, getting to her feet. \"You always do so much for her, and she just shits all over you.\"\n\n\"We've been best friends for years,\" Emily replied. \"I can't just bail on her now.\"\n\n\"Sure, you can,\" Mel smiled.\n\n\"I love you,\" Emily giggled. \"But I'm still going.\"\n\n\"I know you are,\" Mel hugged her twin. \"And that's what makes you an amazing sister and friend.\"\n\n\"Just like you,\" Emily grinned and hugged Mel back. \"Look after Nick while I'm gone and check in on Amanda for me.\"\n\n\"Will do,\" Mel said.\n\n\"I'll help you with your bike,\" I said, getting to my feet.\n\nI followed Emily into the garage and helped her with her bike while she got the door. She didn't need help wheeling her bike out--Emily was actually quite strong--but it was an excellent excuse to give us a moment of privacy. Mel and Erica might be okay with public displays of affection, but I knew Emily wouldn't be.\n\n\"Thanks. But you didn't need to help with that,\" Emily said.\n\n\"I know,\" I nodded. \"But I wanted to do this.\"\n\nI wrapped my arms around Emily's slender waist and pulled her against me. Our lips met with a slow urgency as our bodies pressed together. I took a firm grip on Emily's hips as her fingers ran through my long hair to rest on my neck.\n\n\"That was intense,\" Emily said breathlessly after a few minutes.\n\n\"Yeah. It was,\" I nodded.\n\n\"Can I come up to your room again tonight?\" Emily asked.\n\n\"If you want to,\" I nodded. \"I'd love to have you there.\"\n\n\"Thanks,\" Emily smiled and rested the side of her face against my chest. \"I'm not sure when I'll be ready for...you know.\"\n\n\"You can take as long as you need or want,\" I said, kissing the top of her head. \"There is no rush.\"\n\n\"Thank you,\" Emily sighed contently.\n\nA few minutes of silence passed as I held my youngest sister in my arms. My erection was still standing his ground, digging into Emily's stomach. She must have felt it, but not once did she shift her body or object.\n\n\"I know about Mel and Erica,\" Emily said quietly.\n\n\"I'm sorry,\" I said, not really knowing what to say.\n\n\"You don't need to apologise,\" Emily smiled. \"I love my sisters, and if being with you makes them happy, then I can't be mad at you. Even if I am a little jealous.\"\n\n\"I promise I'll always have time for you, Em,\" I replied, kissing her on the forehead.\n\n\"I know,\" Emily nodded. \"I don't know what it is about you, but I feel I can believe and trust you completely.\"\n\n\"I understand. It's the same way I feel about you, all of you,\" I replied.\n\n\"Even Amanda?\"\n\nThe mere mention of the eldest of my sisters made my stomach flutter. Amanda was the girl of my dreams, and from the moment I saw her, I knew I loved her. She was the most distant of all of my sisters but also the most caring and genuine. I knew she felt the same way about me--and that's why she was so distant after our first kiss--but she was obviously struggling with the ramifications of a sexual relationship with her own half-brother. Much like I had before I gave in.",
        "But Amanda also had a boyfriend, and I didn't want to be responsible for ending that relationship. Even if he was a douche bag.\n\n\"Yes,\" I nodded.\n\n\"You're far better for her than Craig,\" Emily said, laying a hand on my cheek.\n\n\"That may be,\" I sighed. \"But I can't do anything with her while they are together.\"\n\n\"And that is why you're so amazing,\" Emily giggled, giving me a quick kiss on the lips.\n\n\"You know, if you girls keep telling me that, I might start believing it,\" I laughed.\n\n\"We wouldn't want that,\" Emily grinned. \"You'll get a big head.\"\n\n\"Too late,\" I winked.\n\n\"And you're fifteen again,\" Emily rolled her eyes and laughed. \"But I gotta get going. Sorry to leave you in such a...state.\"\n\n\"It's okay. I'm sure I'll live,\" I replied.\n\n\"Okay,\" Emily smiled. \"I'll see you tonight.\"\n\nWe parted with a long kiss that did nothing to aid the situation rapidly getting out of control in my pants, but not once did I even consider pushing Emily for more. I wanted Emily as bad as I wanted Mel, Erica, and even Amanda, but the last thing I wanted to do was to pressure Emily into something when she clearly wasn't ready. It was too bad Erica had gone out when she did.\n\nBut there was still Mel.\n\nI closed the garage door behind Emily and headed back inside, intent on finding my platinum-haired sibling. Mel had been worse than Erica with her teasing ever since we'd fooled around, and I found I couldn't get enough of her. Her small, tight body and firm ass were built for sin, and those devious eyes all but begged me to ravish her every time she looked at me.\n\nMaybe I would do just that.\n\nThe living room was empty, so I went searching for Mel. I heard a splash as I entered the kitchen and suspected she'd gone out to wait for me by the pool. My step quickened as I anticipated what was to come. The last time I'd seen Mel by the pool, she was completely naked.\n\nI slid the back door opened and had my shirt off over my head before I was through the door. I tossed it aside carelessly and contemplated dropping my shorts. But decided against it just in time.\n\nMel was indeed lying on her sun-lounger, shaded by a large umbrella, but she wasn't alone. Amanda must have come down from her room while I was helping Emily with her bike, and it was Amanda that I heard dive into the pool. My eldest sister was ascending the steps at the far side of the pool, and I felt like a deer in the headlights as I watched water run down her flawless body. Her modest black bikini did nothing to hide the amazing curves of her body. Her long, black hair clung to her milky-white skin, looking like a wild stroke of black paint across a perfect canvas.\n\n\"Good of you to join us,\" Mel called out from her seat in the shade. Her wide-brimmed hat and large sunglasses failing to hide her amusement at seeing me so stunned by our sister.\n\n\"Nick,\" Amanda said, looking over her shoulder. Her brilliant blue eyes were as wide as mine felt, and her cheeks reddened just a touch. Then she did the most amazing thing possible.\n\nAmanda smiled at me.\n\n\"Join us for a swim?\" Amanda asked, turning to face me.\n\n\"Yeah...that sounds good,\" I said, stopping to clear my throat.\n\n\"Great, I might make us some lunch. Do you want a beer?\" Amanda asked, fluttering her eyelashes at me.\n\n\"That would be nice,\" I nodded.\n\nAmanda and I shared a drawn-out moment where our eyes locked before she finally bit her bottom lip and headed into the house. My eyes trailed after her as it was impossible to not stare at her world-star ass.\n\n\"You're really not very subtle.\"\n\nI tore my eyes away from Amanda as the back door closed and focused on Mel, lounging under her umbrella. She had lowered her sunglasses, and I saw a cheeky smile spread across her beautiful face. With Amanda gone, I was finally able to focus on my white-haired sister and the almost non-existent two-piece bikini she'd changed into. The white material almost blended into her skin, giving her the appearance of being completely naked. The small patches of cloth barely covered her pierced nipples and smooth vagina. I let myself drink in her petite body before bringing my eyes to meet hers.\n\n\"About as subtle as you are,\" I chuckled.\n\n\"I guess we have more in common than just wanting to fuck each other's brains out,\" Mel giggled, glancing at the tent-pole in my shorts.\n\n\"You're the one that knew I was coming out for a swim,\" I smirked. \"You must have rushed to change into that just for me.\"\n\n\"If Amanda wasn't home, I wouldn't have bothered putting it on at all,\" Mel winked.\n\n\"I was starting to believe nothing could embarrass you,\" I laughed, walking over to the lounger beside Mel.\n\n\"Wrong again, dear brother,\" Mel wagged her finger at me. \"While I love this game of cat and mouse we are playing, I love my sisters more. I don't want to make things awkward for Amanda, especially with her feelings for you.\"\n\n\"Good,\" I nodded. \"Because I don't want to make things awkward for her either.\"\n\n\"Then we have a truce,\" Mel said. \"But I still think you should just whip that monster out and let her have a ride. It would make life around here so much easier.\"\n\n\"You know I can't do that,\" I replied.\n\n\"Yes, yes, I know,\" Mel sighed and waved her hand dismissively. \"Amanda has a boyfriend, and you're all honourable and shit.\"\n\n\"You say that like it's a bad thing,\" I laughed.\n\n\"Only because Amanda is dating the king of douche-canoes, and she would be far happier with you,\" Mel said.\n\n\"You're not the first person to tell me that today.\"\n\n\"Emily is as smart as she is beautiful,\" Mel smiled.\n\n\"Just like her sister,\" I winked.\n\nAmanda joined Mel and me by the pool again with a plate of sandwiches. I was quite hungry, and eating was a good distraction from the bounty of flesh on display by my siblings. Amanda had covered up a little, wrapping a shawl around her hips, but her perfect breasts were still more than enough to stupefy momentarily whenever I lost focus. A feat that happened more often than not, and one both Mel and Amanda caught me out on more than once.\n\n\"Well, that's me done for swimming,\" Amanda said.\n\n\"Yeah, I might go clean up,\" I replied.\n\nIt was only early afternoon, but I hadn't really done anything today. Yet, I'd also done so much. I felt myself missing both Erica and Emily's presence and couldn't wait to see both of my sisters. Amanda and Mel were great, but they were here. I'm sure I'd miss them just as much if I was spending the day with the other two. I didn't have a favourite. I couldn't let myself do that.\n\n\"I'm gonna go play some games,\" Mel said, standing and stretching her arms over her head. I let my eyes roam across her body as she stretched, receiving a coy smile from Mel when our eyes met.\n\nAfter the pool, I went up to my flat to take a quick shower and change, picking out a pair of grey sweatpants and a black t-shirt. I wasn't planning on going anywhere. Once dressed, I brushed my hair quickly and headed back down to the house to see if I could make myself useful for Amanda. Things may have been awkward between us, but I did want to help out around the house and take a load off her plate.\n\nSpending time with the dark-haired beauty was just an added bonus.\n\n\"Anyone home?\" I called out as I entered the kitchen through the back door.\n\nThe kitchen was spotless--as usual--but there was no sign of Amanda of Mel. I walked the bottom floor of the house, looking for my siblings, but I couldn't find either of them anywhere. Then I remembered Mel said something about playing some games. I had noticed an Xbox console in the living room earlier, but I had checked there first. The TV was off, and there was no sign that anyone had been there since Emily left.\n\nThat meant there was only one place she could be.\n\nI ascended the stairs nervously since I hadn't spent much time up here. The girl's bedrooms were all up here, and it felt like I was invading their privacy just by coming up here without their permission. My mother--and grandparents--had been very strict to never enter someone's bedroom without their consent, especially if the door was closed. It was so ingrained in me that I found it physically difficult to even consider just going upstairs and knocking on a random door without someone knowing first. Earlier had been okay because both Emily and Mel had been okay with it. What if I walked in on someone changing or doing something private? Mel would probably be thrilled that I did, but Amanda might freak out. Even if she did have mutual feelings for me.\n\nI took a deep breath and decided it was time to nut up. My siblings had been letting themselves into my living space since I arrived here.\n\nI knew which room was Amanda's from earlier--and that Erica's was right next to hers--but I didn't know which was Mel's and which was Emily's. It made it easier to guess since Emily was out right now so I wouldn't be walking in on her unexpectedly.\n\nI passed by Amanda and Erica's closed doors and the open bathroom door to the only other two doors at the end of the hallway. The guessing game of which door to pick was actually relatively easy once I was standing in front of them. One door had a poster of a\n\nfamous thrash metal guitarist hanging on it, while the other had a decorative skeleton hanging from the door handle. I chuckled at the differences between the twins and how easy it was to pick their styles.\n\nBoth were as cute as the other, though.\n\nI knocked on Mel's door gently but heard nothing back. I waited a few seconds before knocking again a little louder. I was starting to feel a little anxious standing in the hallway, so I tried the handle. The door opened smoothly, and I peeked into the room. I had been expecting a room of black sheets, Halloween decorations, candles, skulls, and black painted walls. Then I remembered the cute pyjamas Mel wore to bed, and Mel's bedroom's purple and pink d\u00e9cor fit her perfectly. The bed was large, with a white metal frame and thick mattress. The hot pink covers and matching pillows were lit up by purple LED lights behind the bed, which bathed the room in a strong purple hue that made distinguishing the other colours difficult. Although not as large as Amanda's, the room was spacious--with a floor to ceiling mirrored wardrobe against the wall opposite the bed, which could make for some interesting sex, especially with the nightclub-like LED lights.\n\nAgainst the far wall sat my platinum-haired sister. Mel had her back to the door, sitting at her desk in a purple gaming chair. Her computer flashed like a rainbow, adding to the chaotic blend of colours around her desk. Mel's chair spun around slowly, and she gave me a wide grin when she saw me.\n\n\"Be right back, guys,\" she said, then clicked a button on her keyboard before removing her headset. Which was also purple, with cat ears.\n\n\"I wasn't exactly expecting all this,\" I said, gesturing to the room.\n\n\"I like to keep some surprises,\" Mel giggled.\n\n\"Well, colour me surprised,\" I laughed.\n\nMel hopped to her feet, and I took in her unicorn and rainbow pyjama pants and top that looked like it'd be tight on a five-year-old. She very clearly wasn't wearing a bra still. She didn't wear much--if any--makeup, and her hair was tied back in a simple ponytail, but she looked as beautiful as the first day I met her.\n\n\"What brings you here?\" Mel asked, crossing the room to stand before me.\n\n\"Just wondering where everyone was,\" I said, looking down at her.\n\nMel was easily the shortest of my siblings, barely reaching my nipples when she was barefoot. But Mel never let her size dictate how she acted or how others saw her. Her presence was demanding, and she knew how to control the room and get her way. She'd all but mastered how to deal with me.\n\n\"Well...I'm glad you finally made it,\" Mel whispered. \"I was starting to worry I'd have to get myself off.\"\n\nHer low, husky tone sent shivers down my spine with her implications. \"You were waiting for me?\"\n\n\"Of course. Just being in the same room as you will have me dripping in seconds,\" Mel bit her lip, then grabbed my hand and brought it to her stomach. She guided my hand under the waistband of her pyjama pants and between her legs. \"Can't you feel how wet I am?\"\n\nMel had opted to not wear any panties, and my hand came into contact with her bare and extremely wet pussy. She felt incredibly warm and inviting. The arousal from her vagina had spread to the tops of her inner thighs. I wanted nothing more than to tear her clothes off and lap up her juices.\n\n\"I can see you're in a similar situation,\" Mel said, pulling my hand from between her legs.\n\nI looked down to see my sweatpants tenting with my erection. I hadn't put on any underwear either, so there was nothing to restrict my cock. There were only two thin pieces of material between Mel and me at this moment.\n\nI was alone with Mel in her bedroom, and there was nothing to stop us from finally taking that last step.\n\nChapter 18\n\n\"I need you,\" I breathed heavily.\n\n\"I know, baby,\" Mel said, taking one of my fingers into her mouth, sucking her own juices from my digits. \"Let me take care of you.\"\n\nI didn't want to play any more games with my platinum-haired sister. We'd fooled around already, and it had been great, but I needed to fuck her. I wanted nothing more than to take her and claim her body as my own. It was like Mel was begging me to do so with the intense gazes she shot my way. But I needed to respect her wishes and take things at her pace.\n\nMuch like I did with Emily.\n\nMel dropped to her knees before me, and with one smooth motion, she had my sweatpants down and my cock out. Her small hand grasped my shaft, causing me to inhale sharply at the feel of her warm hands against my cock.\n\n\"I'll never get tired of seeing this magnificent tool,\" Mel said, eyeing my cock with a heavy degree of awe.\n\n\"You girls definitely know how to inflate my ego,\" I chuckled.\n\n\"You deserve every bit of that ego,\" Mel said, slowly working my cock with both hands now.\n\nI had a witty reply ready, but I forgot it as soon as Mel clamped her luscious lips around the tip of my penis. A spark of pleasure shot through my entire body, my head rolled back, and I let out a low moan as I struggled to keep my legs from buckling under me. Mel swirled her tongue across my glans while she pumped my shaft with her hands. I was lucky I didn't bust a nut right then and there.\n\nAfter a dozen seconds, I finally cooled my jets and glanced down at my white-haired sibling. Mel was staring straight up at me, her gorgeous green eyes sparkling with open lust and admiration, hiding nothing from me. As soon as our eyes met, Mel released her lip-lock on my cock and ran her tongue down the side of my shaft, only to trace a line up the base of it a moment later before sucking the tip into her mouth again. This drew another moan of pleasure from me, but I didn't break eye contact this time. Instead, I placed a hand on the top of Mel's head and guided her as she took more and more of my cock into her mouth.\n\n\"You taste as good as I thought you would,\" Mel said, finally coming up for air. A strand of saliva stretched from the tip of my cock to her lips as she smiled up at me.\n\n\"I'm looking forward to seeing if you taste as good as I think you do,\" I replied with a low growl.\n\n\"Mmmm, so do I,\" Mel purred. \"But not right now. I'm busy.\"\n\nI watched Mel dip her free hand into her pyjama pants and was about to offer to do that for her, but then she pulled her hand back out, and I realised what she had planned. I felt increased wetness around my cock as her hand clasped me. Mel had lubricated her hand using her own juices and was now massaging it into my shaft. Her other hand vanished likewise, returning to join the party.\n\nMel worked my tool in unison with both hands, not leaving an inch of skin untouched. Her mouth hovered open just at the tip of my cock, teasing me with the phantom feel of her lips and tongue. I wasn't going to last much longer, but I didn't know if she wanted me to cum in her mouth or on her. I still wanted to fuck her, and I had a feeling this climax would knock me off my feet for a while.\n\nA knock at the door jolted me out of my lust-filled haze, and I all but jumped across the room, yanking my sweatpants up.\n\n\"Can I come in, Mel?\" Amanda called out through the door.\n\nAmanda knew what was happening in the house and seemed okay with it. But I didn't want to rub it in her face. I looked to Mel--still on her knees--and she gave me a cute pout as she eyed the extremely obvious bulge and spreading wet patch on my sweatpants.\n\n\"One minute,\" Mel called out, then ushered me to the spot beside her bed. \"Just chill here for a minute. I don't want Manda to see us together yet. It might upset her.\"\n\n\"My thoughts too,\" I nodded.\n\nMel and I shared a quick, heated kiss before I dropped onto the floor beside her bed. A few seconds later, I heard the door open, and Amanda walked into the room.\n\n\"Hey, what's up?\" Mel asked, sounding as cool as ice.\n\n\"Have you seen Nick around? I've searched everywhere but can't find him,\" Amanda asked.\n\n\"Looking for some brother fun?\" Mel asked with a giggle.\n\n\"Mel,\" Amanda said with a stern voice.\n\n\"What's up, ladies.\"\n\nFootsteps announced someone else entering the room, and I didn't have to see the smug face to know it was the king of douches, Craig. I had a moment of panic that he might have heard what Mel had said, but from the tone in his voice, he hadn't. Craig was usually way too absorbed in himself that a cow could shit on his foot, and he wouldn't notice until the smell hit his nose.\n\n\"What do you want?\" Mel asked in a strong, venomous tone.\n\n\"Looking for your brother. Is he around?\" Craig asked, seeming to not notice Mel's attitude towards him.\n\n\"Why do you want to know?\" Mel asked.\n\n\"Guy business,\" Craig replied.\n\n\"You want to talk about your muscles and how to act like a dickhead?\" Mel laughed.\n\n\"Cute, but no,\" Craig said, sounding a little irritated. \"Just tell him I'm looking for him if you see him.\"\n\n\"I'll see how I feel,\" Mel said. \"Is that all?\"\n\n\"Yeah. I'll be downstairs, babe.\"\n\nI heard Craig's footsteps on the stairs and sighed in relief. Having Amanda find me in this situation would have been embarrassing, but anyone outside of the family--especially that knob-gobbler--would be devastating.\n\n\"Can you please try to be civil with Craig?\" Amanda sighed heavily.\n\n\"Not a chance. You know I despise that dick,\" Mel replied.\n\n\"You don't have to like him. I'm the one dating him,\" Amanda said.\n\n\"And you could do so much better than him,\" Mel said, her tone softening.\n\n\"Just tell Nick that we were looking for him if you see him,\" Amanda said.\n\n\"Will do,\" Mel replied.\n\nA moment later, the door closed, and I felt a weight on my back.\n\n\"Having fun down there?\" Mel giggled as she straddled my back.\n\n\"Be better if I was lying on my back,\" I laughed.\n\n\"Probably, but we best not with king doofus in the house,\" Mel said, climbing off my back.\n\n\"Agreed,\" I said with heavy regret.\n\nI climbed to my feet and looked longingly at Mel. She had a goofy smile on her face that reminded me of Emily, and it was then I realised that I was seeing the real Amelia. The girl behind the walls she put up. The girl behind the resting bitch face and the snarky comments. In a way, she was more like Erica than her own twin, who wore her expressions and thoughts on her face like an open book.\n\n\"I wonder what Craig wants,\" I said, looking to the door. \"And how I'm gonna get out of this.\"\n\n\"They went downstairs. You could probably sneak down and head out the back,\" Mel said. \"I could do some recon and distraction for you.\"\n\n\"You're the best,\" I laughed.\n\n\"I know,\" Mel smiled.\n\nWe spared a few moments for a passionate kiss that almost made me risk taking things further--even with Craig in the house--but reason won out in the end.",
        "Mel went first, leaving the door open, and I followed her to the stairs, stopping as she descended to the main hallway that ran down the middle of the house. I could quickly head out the front door--or pretend I'm just coming home--but I wasn't dressed for going out and didn't have my boots on. I peered over the railing, and Mel motioned for me to come down, then pointed to the door leading to the garage.\n\n\"They're in there,\" she whispered.\n\n\"Are you sure?\" I asked, straining my ears to see if I could hear anything. \"I thought Amanda didn't go in there very often.\"\n\n\"She doesn't, but Emily is out, so It has to be them. I'll go in, and if it is them, I'll close the door so you can get by,\" Mel said.\n\n\"Sounds like a plan,\" I gave my white-haired sister a thumbs up.\n\n\"You're such a dork,\" Mel giggled.\n\nI crept down the stairs quietly before Mel opened the door to the garage and poked her head through. A second later, she stepped inside and closed the door. I heard Craig's voice as the door opened, but it cut off as soon as Mel closed it behind her. The soundproofing in the garage really was quite remarkable. I made my escape through the house, out the back door, and up the incline in the backyard to the relative privacy of my little flat. Once inside, I stripped out of my clothes and dressed in running shorts, sneakers, and a tank top. I had to make it look like I was out for a run--or trip to the gym--to explain why I wasn't anywhere in the house when they came looking for me.\n\n\"Nick, are you in there?\"\n\nI stepped out of my small bedroom to see Amanda poking her head through my now open door. She smiled when she saw me and stepped through. Craig hot on her heels.\n\n\"Hey, what's up?\" I said, trying to sound as calm as possible. I would have loved an extra minute or two to sort myself out. Although I probably looked a little flushed from my encounter with Mel earlier, so the 'out for a run' scenario might not be so hard to pull off.\n\n\"You got back just in time,\" Amanda said. \"Craig has something he wants to ask you.\"\n\n\"Hey, dude,\" Craig said, stepping past Amanda dismissively, giving me a nod. \"Manda says you're quite a killer on guitar. Wanna join my band? We've been looking for a second guitarist for a while now, but no one we've tried out really suits the band.\"\n\nThe offer from Craig was completely unexpected. I had played with a few bands back in England, but nothing serious. Even if Craig's band wasn't that serious, they still had enough songs for an album, even if it was roughly recorded and edited. I'd also hardly spent any time talking to the guy.\n\n\"I guess I could give it a crack,\" I nodded.\n\n\"Awesome,\" Craig grinned. \"I think you'll be a perfect fit.\"\n\nI wasn't so sure about that myself. Craig was a bit of a dick, and I really didn't like the way his brother looked at Emily and my other sisters. The only one in the band that seemed like a half-decent guy was their bass player, Dan. I'd only met him briefly, but he was courteous to others around him and seemed friendly enough. I knew what Craig was after, though. He was all about that image, regardless of my skill and how well the band got along.\n\n\"Like I said, I'll give it a go and see what happens. I haven't played much over the 12 months, so I might be a bit rusty.\"\n\n\"Sounds good,\" Craig said, then handed me a USB thumb drive. \"All our music is on that. If you need any tabs or sheet music, I can get Dan to send them to you.\"\n\n\"Nah, I won't need that stuff,\" I said, taking the USB stick. \"I usually go by ear.\"\n\n\"If you say so,\" Craig chuckled. \"Anyway, I gotta bounce.\"\n\nI shook Craig's hand when he extended it--adding a nice firm grip--only to be polite and not cause any animosity between us. Craig wrapped his arm around Amanda's waist and walked her out of my flat, but not before she shot me a warm smile over her shoulder.\n\nI didn't know if I was going to bother trying out for Craig's band. I didn't like him enough to want to spend even more time around the guy. But I did miss playing music. The few jam sessions with Emily had been amazing, but they only served to light the spark in me to play with a band again. I'd never made it on stage before, and the fact that Craig's band--which I still didn't know the name of--already had material written and recorded meant all I had to do was learn half a dozen songs, and we could be on stage within a month or two.\n\nThat prospect alone was enough to push me into accepting the try-out.\n\nI headed down to the house and into the garage to fire up one of Amanda's electric guitars--with music on the brain--since I still needed to re-string mine. I grabbed the same Jackson Kelly I had been using already, plugged it into the MESA amplifier that I'd already tweaked to my liking, and lost myself in the shredding and harmonies of my favourite bands.\n\nI lost track of time as I played--lost in my own world--but my hands knew when it was time to stop. I rolled the volume back on the guitar and switched the amplifier to standby before powering it down. I took a deep breath as I let reality come back into focus, and only then did I notice I had gained an audience. Sitting on the couch against the wall sat Emily and Jen, her best friend. Jen had been the first woman I'd slept with since I came to Australia, and while she was insanely hot, I found her to be a bit of a bitch.\n\n\"Hey, I didn't know you two were here,\" I said, placing the guitar on the rack beside me.\n\n\"We've been here for about ten minutes, but we didn't want to disturb you,\" Emily smiled.\n\n\"You're really fucking good,\" Jen said, a little awe in her voice. \"Like, really good.\"\n\n\"Better than I was a few days ago. Emily has been practicing with me,\" I said, unsure how to interact with Jen. She would have been my type physically, but not her personality. Even if she wasn't a bit of a bitch, I had no interest in her after what had started between Erica, Mel, Emily, and myself.\n\n\"Take a compliment,\" Emily giggled. \"You are excellent.\"\n\n\"Okay,\" I laughed. \"Thank you, both of you.\"\n\n\"Amanda had dinner in the oven when we came home. It'll probably be ready soon,\" Emily said.\n\n\"Wait...what time is it?\" I asked.\n\n\"Nearly six-thirty,\" Jen answered, checking the time on her phone.\n\n\"Holy shit,\" I gasped. I knew I had lost track of time, but I didn't realise it had been nearly four hours since I spoke with Craig. My hands were protesting, though. I worked my fingers into fists and flexed my wrists to dispel the cramps I felt coming on. I hadn't felt a thing while I was playing, swept up in the moment, but it was flooding in now like a vegan at a BBQ talking about their life choices. The thought of BBQ made my stomach rumble, and I realised I was really fucking hungry.\n\n\"Come on, I'm starving,\" I said to the girls.\n\nI left ahead of Jen and Emily and beelined it for the kitchen. The garage door not only dampened the sound from the garage, but it also cut off the wonderful aroma wafting through the house, originating from the kitchen. I let my nose take control as it guided me to the kitchen and the promise of a mouth-watering meal.\n\n\"Good evening,\" Amanda greeted me with a warm smile. \"You're just in time.\"\n\n\"Oh damn, that looks good,\" I said, leaning over the kitchen counter to take a whiff of the baking dish holding the treasures I was seeking.\n\n\"It's nothing special,\" Amanda shrugged.\n\n\"It sure smells amazing. What's in it?\" I asked.\n\n\"Beef mince, pasta, cheese, and a homemade pasta sauce Dad used to make,\" Amanda explained with a broad smile.\n\n\"Oh, fuck yeah,\" Mel exclaimed, strolling into the kitchen, still in her PJ's. \"I am so looking forward to this. Amanda makes an amazing pasta bake.\"\n\n\"I thought you couldn't have much red meat?\" I asked my white-haired sister.\n\n\"Not often, but this is my red meat day,\" Mel grinned and clapped her hands.\n\n\"We have particular days a month where we allow ourselves some red meat. Steak is usually far too heavy for us, so this is a great in-between,\" Amanda explained.\n\n\"Steak has nothing on this,\" Mel said through a mouthful of food.\n\n\"Amelia!\" Amanda scolded her sister but began laughing before she finished.\n\nMel swallowed and grinned at me before licking her fork clean seductively.\n\nI helped set the table and dish out the amazing smelling meal to everyone, including Jen. I wasn't sure why she was here, but she seemed a little different than she had the night I met her. I didn't really have much experience with her considering our longest encounter was me fucking her into the mattress while I watched Erica finger herself in the darkness. But Mel didn't like Jen, and I trusted her judgment when it came to her twin.\n\n\"Have you set a day with Craig yet?\" Amanda asked after we all started eating.\n\n\"For what?\" Erica asked.\n\n\"Nick is trying out for Draugr,\" Amanda explained.\n\n\"Why?\" Erica scoffed. \"You've heard Nick play. He is ten times better than any of those guys. Plus, he isn't a dickhead.\"\n\n\"Agreed,\" Mel said through a mouthful of food.\n\n\"They're not that bad, Erica. And I'd appreciate it if you didn't talk about Craig that way,\" Amanda said, a touch of anger in her tone.\n\n\"Calm down, everyone,\" I said, putting my fork down. \"I haven't even listened to the music Craig gave me. It can't hurt to give it a go and see what happens.\"\n\n\"Just let me know when you're feeling comfortable to practice with them, and I can let Craig know,\" Amanda smiled.\n\nThe kitchen fell silent after that, the tension almost as thick as the cheese in my dinner. Amanda shot glares at Erica from time to time when her sister wasn't looking, and Erica rubbed my leg with her barefoot under the table. It was risky with Jen here, but it wasn't like anyone was dropping spoons under the table and giving me a blowjob during dinner.\n\nWell...Mel might, just to fuck with me.\n\nAfter dinner, I helped Amanda clear the table and wash the dishes as usual, and as usual, she tried to get me to relax while she did it. I'd keep at it, and one day she might stop protesting.\n\nOnce the kitchen was spick-and-span once more, I headed into the living room where Jen and Emily had retreated to after dinner. The girls were talking softly when I entered, so I took a seat at the edge of the couch on Emily's side so I didn't intrude on their obviously private conversation. From time to time, I looked over at the two of them, expecting to see a coy smile or devious look from Jen, but I never did. She actually looked quite upset and almost like she was about to break down any second.\n\nBut she never did.\n\nAn hour later, Jen excused herself, and Emily walked her outside to her car before coming back and joining me on the couch, this time cuddling up beside me.\n\n\"What was that all about?\" I asked.\n\n\"Can we talk about it later?\" Emily replied softly. \"I just wanna be with you right now.\"\n\n\"You got it,\" I said, kissing the top of her head.\n\nWe sat like that--in silence--for the next hour or more until I realised Emily had fallen asleep. She was snoring softly with her head against my chest. I brushed her messy hair aside and just watched her for a moment. Emily hardly wore any makeup, but she was incredibly beautiful without it. All of my sisters were, but Emily had a triple-A natural beauty.\n\nNothing could make my heart warm more than her goofy smile.\n\n\"God damn, I fucking love you.\"\n\nI looked up to see Erica standing in the archway to the living room.\n\n\"Say what?\" I asked, unsure if I heard her correctly.\n\n\"You, I love you,\" Erica said, smiling at me. \"The way you're looking at Emily right now. That alone makes me love you more than anything because I know you'll never hurt her.\"\n\n\"I would never hurt any of you,\" I replied without hesitation.\n\n\"I know,\" Erica nodded. \"And the fact that I believe you means there is something special about you. We all see it.\"\n\n\"I'm just a normal guy,\" I said.\n\nErica crossed the room and knelt by my feet, taking my free hand in hers. \"Shut up and take a compliment.\"\n\nI laughed, knowing Erica had no way of hearing the exact words Emily spoke mere hours earlier. \"Not the first time I've heard that today.\"\n\n\"We're all very smart women in this household,\" Erica smiled, kissing my hand. \"Well...Amanda has her moments.\"\n\n\"You need to let up on her,\" I sighed. \"I don't like Craig any more than you do, but it's her choice.\"\n\n\"I know,\" Erica nodded. \"I only do it because I love her, and she deserves to be happy. I see the way she looks at you. It's the same way you were looking at Emily just then and the same way I look at you.\"\n\n\"That may be true, but you need to respect her decisions,\" I said firmly.\n\n\"Fine,\" Erica sighed. \"I'll let up on the Craig hate train...for now.\"\n\n\"Thank you,\" I said, leaning down to kiss her softly on the lips.\n\n\"Can I come and see you later?\" Erica asked, unmistakable lust in her eyes.\n\n\"I would love that,\" I sighed. \"But I already told Emily she could spend the night.\"\n\n\"That's okay,\" Erica replied, barely hiding her disappointment.\n\n\"I'm really sorry, I'm not used to this yet,\" I said. \"How about tomorrow night? Just the two of us.\"\n\n\"I'd like that,\" Erica grinned. \"It's a date.\"\n\nWe shared another long kiss before Erica smoothed Emily's hair and kissed her sister's forehead softly. The affection took me off guard momentarily since Erica rarely showed any outward signs of love and affection for anyone, even her sisters. There really was more to my lustrous sister than I initially thought.\n\n\"Goodnight,\" Erica said in a whisper.\n\nNot once did my eyes leave her amazing ass as she sauntered out of the living room, giving her hips that exaggerated sway I loved so, so much.\n\nEmily stirred shortly after, and her beautiful brown eyes fluttered open. She smiled when she saw me, then stretched out like a cat waking from a nap and let out a cute little yawn.\n\n\"I needed that nap, but I think it's time for a shower, then bed,\" Emily said.\n\n\"Go for it. I'll be waiting in my room for you,\" I said, kissing her on the cheek.\n\n\"I'll be quick,\" Emily smiled, then bounded to her feet and up the stairs.\n\nI sat there for a few minutes as I let my erection calm down. I swear I was like a teenager who just figured out what to do with his dick, and everything and anything resembling the curves of a woman set me off. I was never like this around women.\n\nBut my sisters weren't just any women.\n\nThe house was mostly silent as I left through the back door and made my way up to my flat. The door was unlocked--as usual--and I immediately started stripping out of my clothes before tossing them over the back of my couch. I probably should have been more cautious about getting naked so freely since my half-siblings loved walking in unannounced so often. But then again, maybe I wanted one of them to just walk in on me right now. I'd had mind-blowing sex with Erica this morning--our first time--but that had done nothing to quieten my overacting libido. If anything, it had made me hornier all day, especially after the encounter with Mel earlier. Maybe I should rub one out before bed. I doubted I would get anything from Emily tonight, and it might help me sleep easier.\n\nI crossed the small living room of my flat and headed for the bathroom. I needed a shower, which would be the best place to sort myself out right now. Then I heard the door to my flat open.\n\nI spun around expecting to see Emily and prepared myself to apologise for standing around in my birthday suit and assure her it wasn't an expectation for sex. But I didn't see the messy-haired twin. It was Erica standing at my door. All but licking her lips.\n\n\"I know you're spending the night with Emily,\" Erica said, crossing the room, her eyes on my cock. \"And I know you and Emily are taking things slow, so I figured I'd give you a hand...or two to help you sleep tonight.\"\n\n\"How do you know Emily and I are taking it slow?\" I asked with a raised eyebrow.\n\n\"We're girls, sisters, and we're both into the same guy,\" Erica shrugged as if that was all the explanation needed.\n\nErica dropped to her knees in front of me and ran her hands up my naked thighs. Her nails dragged at my skin, sending shivers through my whole body. My cock pulsed to life before her. I was expecting a bit of a tease to start with, but Erica wasn't playing around. Her lips wrapped around the tip of my penis, and her tongue flicked across my glans. I groaned in pleasure at the warm, wet feeling of her mouth, and my legs almost buckled underneath me when I felt the tip of my cock press against the back of her throat. Erica worked me in and out of her mouth a few times--without the use of her hands--before she took me down her throat in one smooth motion. Her nose pressed against my pubic bone, and her beautiful blue eyes locked onto mine as I felt her tongue lap at the underside of my shaft.\n\n\"Holy fucking shit!\" I gaped, grabbing a fistful of Erica's long, black hair.\n\nErica moaned her reply as she slid my cock out of her throat, keeping the head in her mouth as she took a deep breath. Then, like an absolute trooper, she took me back down her throat again. She did this five times before she released my cock from her wondrous mouth.\n\n\"You have the most amazing cock,\" She grinned, breathing heavily as she jerked my saliva-coated cock with one hand and massaged my balls with the other. \"I could get used to sucking this every morning.\"\n\n\"Well, I'm not going anywhere,\" I said between gasps of pleasure.\n\n\"Good, because I'm nowhere near done with you,\" Erica ran her tongue up the underside of my cock, causing my whole body to vibrate with pleasure.\n\n\"I'm close to cumming,\" I gasped, not wanting to but unable to hold it back after the day I had.\n\n\"Good,\" Erica said, pulling her top down to expose her weapons of mass distraction. \"Cum straight on my tits.\"\n\nHer words had the intended effect, and I could feel myself growing steadily closer to what I knew was going to be an orgasm of colossal proportions. Then, Erica's phone rang.\n\n\"Shit, hang on,\" Erica said, grabbing her phone from where she'd discarded it on the floor.\n\nI was so close to cumming, but I dared not touch myself to finish off. Erica had worked hard for this, and I wanted her to enjoy it as much as I knew I would.\n\n\"Okay, I'll be right down,\" Erica said, then hung up. \"I am so fucking sorry, Nick. Mel has something important she needs my help with.\"\n\n\"It's fine,\" I said, barely able to hide my disappointment. \"Go help her out. We can pick this up tomorrow.\"\n\n\"I will make this up to you,\" Erica said, getting to her feet. \"I promise.\"\n\n\"It's fine,\" I smiled, pulling her into a hug.\n\nWe shared a quick, passionate kiss that almost made me try to convince her to stick around and finish what we started. After all, I would only need another minute at most. But I didn't want to beg Erica to stick around when she couldn't. It wasn't like Erica to give up any pursuit of sexual contact between us, so it must have been important to draw her away.\n\nWe parted after our kiss, me watching Erica's glorious ass as she left my flat, and Erica gave me a look back--flashing me a dazzling smile--before vanishing into the night.\n\n\"Time for that shower,\" I said to myself. \"A really fucking cold one.\"\n\nChapter 19\n\nThe icy cold water washed over my naked body, sending goosebumps racing across my skin. I was never a fan of cold showers, but I had endured them more than a few times in my life when my mother was late paying the bills. So, I could manage for a minute or two.\n\nI washed and dried myself quickly, changing into a pair of shorts and a t-shirt for bed. I preferred to sleep in the nude, but I figured I had better show some form of modesty since Emily was joining me tonight. Once again, I heard the front door open without a knock, and Emily stepped into my bedroom only a moment later.",
        "\"Ready for bed?\" I asked, turning to greet her.\n\n\"Yep,\" Emily smiled.\n\nAs usual, Emily wore a long t-shirt that stopped mid-thigh, leaving her milky white legs exposed, and by the delightful bounce of her breasts when she moved, I could tell she wasn't wearing a bra. I switched the lights off and climbed into bed first, scooting over to one side and pulled the covers back for Emily. She slid into the bed eagerly, worming her way under the covers until she was pressed up against me, our faces merely an inch apart.\n\n\"Hey,\" Emily smiled, kissing me on the lips.\n\n\"Hey to you,\" I said, kissing her back.\n\n\"I'm so glad you let me sleep here tonight,\" she said. \"I love waking up next to you.\"\n\n\"The feelings mutual,\" I said, wrapping arms around her slim waist and pulling her against me.\n\n\"I'm sorry I'm not ready for...you know,\" Emily said after a moment of silence.\n\n\"It's fine,\" I assured her. \"There's no rush.\"\n\n\"But isn't it...uncomfortable for you?\" Emily asked.\n\nAs usual around my sexy as fuck siblings, my cock had decided he wanted to join the party and was now pressing against Emily's stomach. The cold shower had helped calm me down from my brief and anti-climactic encounter with Erica. But there was no real long-term solution when I had this all-star babe in bed with me. Well...no other long-term.\n\n\"It's not so bad,\" I lied. \"Guys get used to this kind of thing.\"\n\n\"Do you ever...do it yourself?\" Emily asked shyly.\n\n\"All guys do, and most girls from what I've been told,\" I chuckled.\n\n\"You can do that if you want,\" Emily said, her tone low and breathy.\n\n\"Do you want to see that?\" I asked, more than a little interested in the idea. It wasn't sex, but it would still be better than jacking off on my own.\n\n\"Well...\" Emily bit her bottom lip in a way that made her look incredibly sexy, but she probably didn't even know what she was doing. \"I haven't seen one in person before.\"\n\n\"And you want to?\" I asked, dragging this conversation out on purpose. It was making Emily squirm. Something I found very entertaining.\n\n\"Only yours,\" she blurted out.\n\n\"Okay,\" I nodded. \"Can you get the lamp?\"\n\nEmily slipped away from me for a moment and switched on the bedside lamp--It was one of those Himalayan salt lamps--that bathed the room in a soft, warm glow. Emily perched herself next to me, sitting cross-legged with her hands on her lap. She looked both eager and anxious.\n\nI pulled the covers away--revealing the very obvious tent in my shorts--and hooked my thumbs under the waistband of my shorts.\n\n\"Could you take your shirt off too?\" Emily asked just before I pulled my shorts down.\n\n\"Sure,\" I smiled and sat up in bed to pull my shirt off. \"That better?\"\n\n\"Yes,\" Emily said, her eyes exploring my naked chest before settling on my barely concealed erection.\n\nThe sexual tension in the room was so thick I was surprised neither of us was choking on it. I could feel Emily's heat and warmth, smell the scent of her body wash and almost feel her body against mine. It made me a little light-headed. But that was probably because all the blood in my body rushed to my erection, promising a monolithic climax.\n\nThen I slid my shorts down and kicked them off. My flagpole of a dick sprang free and slapped against my stomach as I lay back. I immediately grasped myself with one hand and began stroking my cock leisurely.\n\n\"It's big,\" Emily whispered, almost too softly for me to hear, then spoke a little louder. \"Does it hurt? It looks painful.\"\n\n\"Not really,\" I said. \"I'm sure it could get painful, but it's more just really uncomfortable.\"\n\n\"So, you just do that?\" she said, gesturing to my hand that was slowly working my shaft.\n\n\"Pretty much, but usually with a mental image or visual stimulation,\" I said and immediately wanted to take my words back. I didn't want Emily to think I was pushing her to get naked or anything.\n\n\"I can show you my boobs if you like,\" Emily said, almost too quickly.\n\n\"I definitely won't object to that,\" I said. \"If you're comfortable with it, that is.\"\n\nEmily's eyes lingered on my naked body for a few seconds before she pulled the hem of her shirt up and over her head. Her glorious breasts spilled forth. Emily wasn't as gifted in the chest department as her older sisters were, but Emily's were perfect for her body. Her tiny nipples were already erect--a sign of her arousal--and begging for attention.\n\n\"Does this help?\" she asked, sitting there with her hands in her lap, looking a little nervous.\n\n\"Very much so,\" I said, my eyes glued to her breasts as I worked my shaft.\n\n\"Did you already cum?\" Emily asked a moment later.\n\n\"No,\" I said, noticing the precum leaking from the tip of my penis. \"That's normal and happens when I get really turned on.\"\n\n\"So...more comes out when you orgasm?\" Emily asked, leaning forward for a better look.\n\n\"Yeah, a bit more,\" I said, downplaying it. My experiences so far with my half-sisters had been far more intense than any other girl I'd been with before. But I didn't want to scare Emily off with that.\n\n\"Do you mind if I?\" Emily asked, looking ten times more nervous.\n\n\"Go ahead,\" I smiled, letting go of my cock and laying my hands under my head.\n\nEmily's fingers traced up the underside of my shaft, sending a shiver through my body before she finally wrapped her hand around me. Her hands were warm and soft, causing me to let out an involuntary groan of pleasure at her touch.\n\n\"Is that too hard?\" she asked, letting go quickly.\n\n\"Oh no, not at all,\" I said. \"You could even squeeze a bit harder. It feels good.\"\n\nEmily's grip tightened just right on my shaft as she slowly worked my tool. Precum leaked from the tip of my penis, coating my erection, but Emily didn't stop. She kept going until there was a satisfying wet sound coming from her movements as she massaged my own precum into the length of my shaft. My eyes drifted shut somewhere along the way as I lay there, basking in the feel of Emily's soft hands around my pole, but I opened them again when I felt Emily's body shift on the bed. And I was not disappointed in what I saw.\n\nEmily straddled my thighs, her breasts pushed together in such a way that if it were any of my other sisters, it would have been intentional. But Emily was different. She was beautiful, funny and adorable, but lacked the experience and open sex appeal that her sisters openly portrayed. But that alone was what made our current scenario that much more arousing.\n\n\"You're so beautiful,\" I said, sitting up in bed so I could reach her easier. My hand brushed along her thigh--causing Emily to shiver--and over her hips before cupping one breast with a firm grip before paying equal attention to the other.\n\n\"That feels nice,\" Emily moaned softly.\n\nEmily's body seemed to vibrate under my touch. Her hands kept working my shaft, only stopping a few times when she got distracted whilst I paid extra attention to her nipples. I had to hold myself up with one arm, so I was only free to explore her body with my right hand, but Emily seemed to enjoy my touch as much as I did hers.\n\nI was so absorbed in the sights, sounds, and feel of Emily as I stroke and groped her near-naked body that I almost forgot that she was working my rock-hard erection with her soft hands. Emily slowly picked up speed as she became more comfortable and genuinely seemed to enjoy herself. Her full, soft lips were parted slightly as she let out heavy breathes filled with desire and lust.\n\n\"I'm close,\" I groaned in pleasure. Emily didn't stop or slow. In fact, she sped up and added a pleasurable twist to her wrist as it glided up and down the length of my erection. Sending me hurtling to the finish line.\n\nAll of the desire, lust, and sexual frustration from the day burst forth like an overflowing dam about to destroy a small rural village. I felt my climax racing in, and there was nothing in the universe that would stop it this time. Emily, on the other hand, had no idea just how over the edge I was. I pulled her into a passionate kiss, running my fingers through her wavy hair as our tongues danced a primal and aggressive battle that was entirely unfamiliar for the two of us.\n\nThen my orgasm hit me like a Mack truck running through a ceramics store.\n\nI let out a deep, guttural growl of pleasure into Emily's mouth as the first spray of cum erupted from my rigid staff. I broke our kiss to stare into Emily's eyes as she continued to stroke my shaft, not realising immediately what was happening. Then her eyes drifted down to my cock, growing wide at the sight of my warm seed spraying her soft belly and running down her closed fist.\n\nI wanted to tell her to keep going, but I was at a loss for words as my climax turned my brain to jelly along with the rest of my body. I gripped her hair hard as I pressed my forehead to hers and let out another groan of pleasure as my cock continued to paint a mess of both of our bodies like an angry artist whipping up a masterpiece.\n\nAfter a minute or two, I finally came down from Mount Everest and loosened my grip on Emily's hair and her hip, which I hadn't realised I was gripping so intensely, leaving a faint but unmistakable mark on her fair skin that would fade by morning.\n\n\"Holy fuck,\" I breathed heavily, slumping back onto the mattress. \"I really fucking needed that.\"\n\nEmily's hand was still gripping my softening cock, her eyes fixed on the mass of creamy seed that now covered her hand, my cock, both our stomachs, and even a few strands reaching as high as her full, perfect breasts. It really was quite a sight. One that made my cock twitch.\n\n\"There's so much of it,\" Emily said finally. \"Is that normal?\"\n\n\"Today was a strange day,\" I said, running my hands up her thighs. \"Let's just say I had a bit of pent-up frustration.\"\n\n\"Well, I'm glad I could help,\" Emily smiled.\n\n\"You were amazing,\" I smiled back.\n\n\"Thanks,\" Emily said, looking back down at our cum covered bodies.\n\n\"We can go take a shower together if you'd like. Or you could take one first if you're more comfortable with that,\" I suggested, knowing she would want to clean up before bed as much as I would.\n\n\"I'd like to do that together,\" Emily said, biting her bottom lip shyly.\n\n\"So would I.\"\n\nA few minutes later, I was standing in my modest shower cubicle with a completely naked Emily. My cock had refused to play ball with me and stood to attention as soon as I began helping Emily wash. I could tell she was still a little nervous and awkward with being naked in front of me, so I tried my best to make her feel good, but at the same time relax her and let her know she was in control of how far we went tonight. I'd already received one hell of a hand job from the inexperienced twin--even though I was horny enough to fuck all night--and could sleep easy.\n\nI helped soap up Emily's back first--spending more time than was necessary on her gloriously pert behind and washing over her hips--before she turned to face me. She gave me a shy look and almost crossed her arms over her breasts by instinct. Then I kissed her, and her body melted into me. Our kiss was hot and passionate while staying slow and sensual. Emily's body pressed against mine, trapping my erect penis between us. The mixture of hot, steamy water and her naked flesh was making my head spin and my cock throb so hard I'm sure Emily could feel each pulse.\n\n\"Turn around,\" I said once our kiss finally ended.\n\nEmily bit her lip and nodded. As soon as her back was to me, I pulled her against my chest, wrapping my arms around her body, cupping her right breast with my left hand, and grabbing her hip with my right hand. I would have gone straight for the hot spot between their legs with either of my other sisters I was currently in a sexual relationship with. Teasing and fingering them until I had them squirming against me. But not with Emily. I had to work her up to the heavy stuff.\n\n\"Are you okay with this?\" I whispered into Emily's ear.\n\n\"Yesss!\" Emily hissed, pressed back against me.\n\nI momentarily released my hold on her as I lathered my hands with shower gel, then returned them to her body. Emily let out a little squeak at the cold but immediately moaned as I started massaging her breasts, stomach, and over her hips. All the while, my cock nestled nicely between her butt cheeks. Precum leaked from the tip of my cock as she moved her hips pleasurably, causing her butt to wiggle against my cock.\n\nOnce I was satisfied I had cleaned Emily's front as much as I had her back--I was very thorough--I let my right hand drop back to her stomach, just above her pubis as I fondled her breasts some more with my left hand. Almost as soon as my right hand stopped on her stomach, Emily's hand shot out and grabbed my wrist. For a split second, I was worried I'd gone too far, but Emily quickly showed me I hadn't gone far enough. My wavy-haired younger sister parted her legs slightly and brought my hand to the small patch of pubic hair above her vagina. I wasted no time as I ran my fingers along her slick folds, teasingly pressed into her just enough to get a gasp of pleasure and adding a bit of pressure to her clit before kissing at her neck.\n\nEmily moaned loudly as my fingers probed at her. Her whole body was vibrating, and I felt her legs go weak as I held her to my body. I was already so horny that it felt like I hadn't had sex in months, even though I'd fucked Erica this morning and blown a load only fifteen minutes earlier. I could have easily bent Emily forward and slid into her. But she might not be ready for that, especially so out of the blue. Emily must have read my mind because she reached behind herself, grasped my cock, and created enough space between our bodies to angle it down and in between her legs before clamping her deliciously soft thighs together. From here, all it would take is a slight angle change on my part, and I would penetrate another sister.\n\nI opted for the next best thing.\n\nI started thrusting between Emily's legs as I groped at her breasts. I wasn't inside of her like I really wanted, but I could feel the warmth from her pussy gliding along the length of my shaft with each thrust. Emily seemed to be enjoying herself since she hardly stopped moaning. Then I felt the angle change only for a split second, but it was enough for the tip of my penis to graze her clit, sending her over the edge instantly.\n\nEmily's body vibrated and trembled in my arms as her orgasm rocketed through her. I held her against me, turning her face to the side so I could kiss her. The look of sheer ecstasy on her face triggered my second climax, bringing forth a torrent of seed that would have been considered significant if not for the previous load that Emily's hands had coaxed from me.\n\nThe next thing I remembered was leaning against the wall of the shower, Emily facing me as she rested her head against my chest. We were both breathing heavily as we came down from our euphoria.\n\n\"Does it always feel this good,\" Emily said, sounding very out of breath.\n\n\"Not always. There is something different about you girls,\" I replied, instantly wishing I hadn't mentioned the others.\n\n\"Then I don't want to be with anyone else ever again,\" Emily whispered.\n\nWe kissed softly for a while as the hot water washed away the fatigue in our muscles. Then we dried off as we shared more touching and kissing. Emily seemed to be far more comfortable with her naked body around me now, not even attempting to cover herself with the towel as she dried and even choosing to sleep naked with me. I felt my cock twitch once more as Emily snuggled up against me in bed, but even he was too exhausted to party anymore.\n\nI awoke the following day to the ever-growing familiar sight of Emily beside me, only she was completely naked this morning. The warmth from the summer sun had heated the small bedroom already. As a result, Emily must have kicked the covers off in her sleep. I enjoyed the sight of her naked body snuggled up beside me. The curve of her hips to her ass, her long, smooth legs, but it was the small part of her full lips and angelic features that made my heart skip a beat.\n\n\"Good morning,\" Emily said groggily, her eyes fluttering open.\n\n\"It is a good morning,\" I replied, kissing her softly on the lips.\n\nOur bodies entwined as our tongues met. My morning wood pressed into Emily's stomach, and her legs parted when I rolled on top of her. Emily reached between us and gave my cock a few strokes, and I thought this was the moment. She angled my erection, her legs were spread wide, and she gave me an intense--but nervous as hell--stare.\n\n\"Nick, are you awake?\"\n\nAmanda's voice started both Emily and me. I jumped from the bed like I'd shit myself in my sleep. My heart was racing immediately, but I didn't know why. Amanda knew what was going on, and even though she may not approve--from jealousy, according to Mel--she wouldn't say anything.\n\nEmily jumped from the bed with a few explicit curses muttered and grabbed one of my old t-shirts from my floor pile, gave me a quick kiss after pulling it on, and darted into the bathroom. Amanda may accept what was going on in the house, but that didn't mean we had to flaunt it in front of her. Especially if she had conflicting feelings about it. With how quickly Emily jumped into action, I got the feeling she felt the same way.\n\nI quickly pulled on a pair of jeans and headed into my small living room. I probably should have put a shirt on, but it was far warmer over here than back home, and it felt good to go shirtless. The girls all seemed to enjoy it too, and it was a little fun watching Amanda squirm.\n\n\"Hey, what's up?\" I asked, stepping into the small combo kitchen/living room.\n\nAmanda must have come up to see me shortly after getting out of bed. Her hair was neatly brushed and pulled back into a ponytail. She wore a white tank top that looked a size too small for her--obviously no bra--with a pair of black boy-short-like panties that left almost nothing to my imagination. I was thankful for my jeans as they slightly helped restrict my now raging boner. Amanda's eyes roamed my chest quickly before focusing on my face. Our eyes met, and her cheeks darkened a touch.\n\n\"Just seeing if you've thought about Craig's offer some more,\" she said, her hands clasped almost nervously before her.\n\n\"A little,\" I lied. I'd had much more important things on my mind last night. \"Does he need an answer right away?\"\n\n\"Kind of. They have a show in four weeks and would like to have a new member by then,\" Amanda answered.\n\n\"Four weeks isn't a lot of time, but I understand why he wants an answer so soon,\" I replied, crossing my arms over my chest. Four weeks wasn't much time to learn new music, but I'd heard their stuff before and was confident I could pull it off. \"Let me take a shower and think about it, and I'll let you know at breakfast?\"\n\n\"Awesome!\" Amanda clapped her hands and jumped on the spot, making her breasts bounce delightfully. \"You'll do great.\"\n\n\"I haven't said yes yet,\" I laughed.\n\n\"I know,\" Amanda nodded, then closed the distance between us quickly to hug me.\n\nI wrapped my arms around her thin waist and almost groaned in pleasure as Amanda's body melted against me. Her tank top did nothing to hide the feel of her perfect breasts against my skin, yet I still needed the feel of her naked flesh against my chest so badly I wanted to tear the garment from her body. My cock was fighting a battle against my constricting jeans and now was pushing into Amanda's stomach as she hugged me. The moment was filled with raw sexual tension that could explode at any moment.\n\n\"Thanks,\" Amanda said as our embraced slowly ended.\n\n\"I haven't said yes yet,\" I repeated, letting my hands drop to her hips.\n\n\"I know,\" Amanda nodded, placing her hands against my chest. \"I just wanted to thank you for coming into our lives. The others haven't been happier, and well...I love having you around.\"",
        "\"I should be thanking you for allowing me to come,\" I said, gently pulling Amanda closer to me. She responded eagerly, and soon our faces were a mere inch apart.\n\n\"I guess we can both be thankful for each other,\" Amanda said in a low, breathy tone.\n\nAmanda was the tallest out of all of my siblings, only a couple of inches shorter than me. Our bodies fit well together, and it would only take the slightest fraction of a move forward to taste her lips once more. And to have her. The girl I fell in love with the moment I saw her.\n\n\"I better take that shower,\" I said, letting my hands fall away from her hips.\n\nMy words broke the moment, and Amanda blinked rapidly for a few seconds before nodding and taking a hasty step back. We had both been caught up in a moment of sexually charged energy that could have so quickly turned the opposite way. I needed to be the responsible one and make sure Amanda didn't make a mistake. She had been taking care of the others since their mother left, so it was about time someone helped take care of her.\n\n\"I'll start breakfast,\" Amanda smiled.\n\nI watched her leave without even trying to hide my admiration of her amazing ass, which caused Amanda to blush when she looked over her shoulder at me. I would respect her wishes and not push the topic of her and me, but that didn't mean I wasn't going to enjoy the eye candy she put on display for me.\n\nI heard the shower running when I turned back to my bedroom and wondered if that had been going when Amanda was here. If so, there was no chance she missed it and knew one of her sisters had spent the night.\n\nI opened the bathroom door to see Emily standing under the shower spray, the entrance to the small cubicle wide open. She gave me a small smile, then covered her exposed breasts and crotch with her hands playfully. I stripped my jeans off in record time--which was extremely difficult with my boner--and joined the brunette twin in the shower.\n\nWe touched and kissed much like we had last night, but it didn't go any further. The moment from earlier had faded, and I guessed Emily was feeling nervous about having sex once more. I was a little frustrated by her reluctance but quickly reigned it in. I didn't want to make her feel forced or pressured into sex, especially for her first time.\n\n\"I'm sorry,\" Emily said as if reading my mind.\n\n\"It's okay,\" I smiled.\n\n\"Do you want me to suck it for you?\" she asked so casually that it took a moment for her words to sink in.\n\n\"You...want to do that?\" I asked.\n\n\"I've always wanted to try it,\" Emily smiled. \"And I did a handjob last night.\"\n\n\"Sure, fire away,\" I grinned.\n\n\"Just don't get any in my eye,\" Emily giggled. \"Erica says that hurts like hell.\"\n\n\"Of course, Erica is the one getting jizz in her eye,\" I laughed.\n\nEmily dropped to her knees in the shower and took my erection into her hands once more. She started stroking me like she had the night before, but after a minute, she moved her mouth closer to the tip. Her tongue ran across the tip of my cock in a testing way, but it still sent a shiver through my whole body. Then Emily took the tip of my penis between her full lips, and I let out a groan of pleasure.\n\n\"You're doing great,\" I said, running my fingers through her wet hair.\n\n\"Thanks,\" Emily said, running her tongue up the side of my cock before sucking the tip between her lips again.\n\n\"You seem to know what to do,\" I said, gasping as another surge of pleasure shot through my loins.\n\n\"I've talked to the others and watched porn,\" Emily shrugged.\n\n\"Well, it seems--\" my words were cut off when Emily gagged on my cock suddenly. She'd taken me into her mouth and all the way to the back of her throat without warning. She was obviously not very skilled at deepthroating, but she tried twice more before I felt her throat constrict around the tip of my penis. I hadn't been expecting her to go that far so quickly, and the surprise tactic sent me over the edge.\n\nEmily gagged and pulled my cock from her mouth, but it was all over for me. Warm seed erupted from my erection and splattered across Emily's face as she sucked in a gulp of air, but she didn't miss a beat. Her lips were around the tip of my penis once more as I shit my load of cum into her mouth. Emily's tongue lapped at the tip of my penis as she swallowed down my morning load of baby batter with a moan of pleasure.\n\n\"What the hell, Emily,\" I said, breathing heavy. \"Are you a witch?\"\n\n\"Erica said you might like that,\" Emily giggled, still licking my cock.\n\n\"Well, she was right,\" I laughed.\n\n\"You taste really good,\" Emily smiled up at me. \"I thought it would taste gross, but I was going to swallow anyway. But no, you taste yummy.\"\n\n\"Glad you enjoyed it as much as I did,\" I laughed and pulled Emily to her feet. Emily squealed a little before I pulled her into a heated kiss that had Emily moaning into my mouth in no time.\n\n\"We should probably head down now,\" Emily said after our moment of passion came to an end.\n\n\"Yeah,\" I said, thinking about what to say to Amanda. Once again, I hadn't even thought about Craig's offer. It was almost like there were far more important people that kept distracting me.\n\nWe finished up in the shower, dried ourselves, and dressed without getting too distracted by each other. Emily hadn't brought any other clothes with her, so she slipped her underwear back on and grabbed one of my fresh t-shirts from my dresser. There wasn't a single thing hotter in the world to me than a sexy woman wearing one of my shirts. It was like a flag signalling to the world that we had spent the night together. A sign I was sure the others would recognise immediately.\n\n\"Let's go,\" Emily grinned. \"I'm starving.\"\n\nChapter 20\n\nThe rest of the household was awake and seated at the breakfast table when Emily and I entered through the back door. I'd opted not to wear a shirt to breakfast because it was a nice day out, and I was feeling good about myself today. These women lusted after me as much as I had them, and I loved the feeling of their eyes on me.\n\n\"Good morning,\" I said to everyone as I took my seat beside Mel.\n\n\"Sleep well?\" Mel asked, giving me a wide grin. She was still dressed in her pink unicorn and rainbow pyjama pants and tiny white top, looking like a great breakfast snack herself.\n\n\"Very well, thank you,\" I replied.\n\nEmily took a seat beside Erica, who was eye-fucking the shit out of me from across the table. I could almost feel the arousal in her gaze and suspected she'd had a frustrating night thinking about how I promised we'd spend tonight together. I had to admit, I was really looking forward to it myself. I thoroughly enjoyed spending the night with Emily, but I really needed to fuck.\n\n\"Dig in,\" Amanda said, placing a plate of bacon, eggs, and buttered toast before me.\n\nI thanked her, letting my eyes linger on her body for a few seconds before my stomach rumbled loudly, and I began shovelling food into my mouth.\n\nThe girls chatted like normal as we all ate. Mel and Emily spoke about going back to University next week, reminding me that I started my new job soon. I had to go in on the weekend for some sort of orientation before the students started back. I was looking forward to working again, even though I was tempted to just stay at home with Erica and take advantage of all the privacy we would have.\n\nA hand on my leg brought my attention away from my food and to Mel beside me. She was still chatting normally with her twin, even as she worked the button to my jeans with one hand and started pulling my fly down. The next thing I knew, my cock was out, and her tiny hand started working my tool. I tried focusing on my food as Mel somehow managed to jerk me off under the table and maintain a conversation about school schedules and study groups with her sister.\n\n\"So, Nick. About that thing,\" Amanda said. \"I hate to get pushy, but it's kind of time-sensitive.\"\n\nI hadn't really given it any thought, and I was having a tough time concentrating on anything apart from Mel's hand on my cock. I guess it couldn't hurt to accept Craig's offer. It would be great to play in an already established band.\n\n\"Yeah, I'll do it,\" I said, taking a deep breath.\n\n\"Awesome,\" Amanda grinned, then rose from her chair and rounded the table to give me a quick hug. Mel's hand stayed on my cock--under the table--and continued stroking me, even picking up speed as Amanda wrapped her arms around me. The close contact with the eldest of my siblings and Mel's hand was pushing me to the finish line far quicker than any handjob I'd received in my life.\n\n\"What's going on?\" Erica asked.\n\n\"Nick is going to play with Craig's band,\" Amanda said, straightening from our hug and resting a hand on my shoulder.\n\n\"And here it thought you had good taste, dear brother,\" Erica smiled and raised an eyebrow.\n\n\"That's great news!\" Emily grinned. \"I can't wait to see you play.\"\n\n\"Maybe I'll actually enjoy seeing them play live now,\" Erica added.\n\n\"It's been a while since I played with a band, and it should be a lot of fun,\" I shrugged. \"That's if I can learn all their songs in four weeks.\"\n\n\"You'll do it,\" Emily said, still grinning. \"You're an amazing musician.\"\n\n\"And their music isn't exactly difficult,\" Erica laughed softly.\n\nAmanda ignored her sister's snarky comments and returned to her chair, shooting me a smile.\n\n\"Maybe you could practice with me,\" I said to Amanda.\n\nAmanda gave me a shocked look like I'd said I wanted to jump off the roof or something. Then shook her head and stared down at her food. \"I'm not even sure I know how to play anymore. I haven't touched a guitar in years.\"\n\n\"You could do it easy,\" Mel said.\n\n\"Yeah, you're amazing, Manda,\" Emily added.\n\n\"Even with one arm, you'd be better than Craig,\" Erica jabbed.\n\n\"Thanks,\" Amanda said, her cheeks turning a slight shade of red. \"But I'm not sure.\"\n\n\"That's okay,\" I said, reaching across the table to place my hand on hers. \"If you don't want to, I won't keep asking. But I'd like to play with you sometime.\"\n\nOur eyes met, and I could immediately tell Amanda wanted to play with me as much as I did her. And not with any instruments.\n\nBreakfast ended without any relief from Mel under the table. I waited until the other girls left the table before stuffing my erection into my jeans and helping Amanda with the dishes. Emily hung around chatting to her sister as we washed, dried, and stacked the dishes from the morning.\n\n\"I'm gonna go change,\" Emily said, hopping down from the kitchen counter she'd perched herself on and bounded upstairs.\n\n\"She's in a good mood,\" Amanda said, bending down to store some pots.\n\n\"Yeah, she must have slept well,\" I said, my eyes locked onto Amanda's barely concealed behind. She was taking a while to sort those pots.\n\n\"I haven't had a good night's sleep in a while,\" Amanda said after she straightened.\n\nWas she suggesting something to me? I wasn't very good at reading women when they wanted to be subtle--or even when they held a neon sign over their head with big letters saying 'I WANT YOUR DICK'--and I was doubly bad at reading what Amanda was saying without saying it. With any other girl, I'd just go for it, and if I struck out, it wouldn't have been a big deal. But if I pushed Amanda too hard, it might ruin our current relationship.\n\n\"Well, I hope that changes for you soon,\" I said flatly.\n\n\"Yeah, so do I,\" Amanda said, sounding a little deflated.\n\nShe had been flirting with me or at least being suggestive towards me. It was actually quite irritating if I was honest with myself. Amanda had made the first move on me, then threw the brakes on. She had acted jealous about the others when she turned me down. She also came to my flat looking like dinner, dessert, and a snack all in one, knowing how I felt about her. And now these comments. Amanda was my perfect woman, but I could move on from her if it wasn't going to happen.\n\nBut not if she didn't let me move on.\n\n\"I'm gonna go practice,\" I said, stacking the last of the dishes.\n\n\"Alright. I'm gonna go get some groceries later. Do you mind giving me a hand?\" Amanda asked, a slightly sad look on her beautiful face.\n\n\"Yeah, just come get me when you're ready to go,\" I said. \"Do you mind if I use one of your guitars?\"\n\n\"No, not at all,\" Amanda shook her head. \"Have fun.\"\n\nI headed up to my flat after leaving the kitchen to throw on a t-shirt, my boots and grab my things before I snuck in a quick cigarette and headed back into the house. I had the USB that Craig had given me with the music I was supposed to learn, but I had no way of playing it. There was no sign of the girls, so I went upstairs to see if someone had a computer or laptop I could borrow. I knew Mel had a computer, so I knocked on her door first.\n\nThe door swung inward after a few seconds, and I was greeted by Mel in only a pair of black cotton shorts that rode low on her hips. I was literally stunned like a deer in headlights as I focused on her small, pert breasts and the bars pierced through her nipples.\n\n\"Eyes are up here,\" Mel giggled.\n\n\"Sorry,\" I chuckled. \"I didn't think you'd be so underdressed.\"\n\n\"Pro-tip, I'm usually this underdressed when in my room,\" Mel winked. \"And you're welcome to come in whenever you want.\"\n\n\"Noted,\" I laughed, then held up the USB drive. \"But I was after a laptop or computer so I could listen to this music.\"\n\n\"Boring,\" Mel sighed dramatically. \"But I'll help since you're my big brother, and I love you.\"\n\nMel stepped away from her door and motioned for me to come in. I closed the door behind me and let my eyes wander over her mostly naked body. It wouldn't take much effort to throw her down on her bed and have my way with her. Mel would love that, and we'd finally be able to enjoy each other in a way that we hadn't been able to yet. But I was still hesitant to do so with the other girls in their rooms.\n\nI had a feeling Mel would not be the quiet type.\n\n\"Here, you can use this. It's a bit old, but it'll do the job for what you need,\" Mel said, handing me an old silver laptop with stickers of skulls covering most of the surface. \"Or you can stay awhile, and we can have some actual fun.\"\n\nI took the laptop and fought against the urge to just give in. I wanted her, and she wanted me, but there was still that side of me that needed a bit more privacy than we had currently.\n\n\"Maybe later,\" I winked, trying my best to be coy with her.\n\nMel bit her bottom lip and stepped closer to me, resting her hand against my crotch. \"You know where to find me.\"\n\nI groaned at her touch and took a deep breath, ready to throw my plans for the day down the toilet and take her up on her offer. Would it be so bad to just fuck the day away with this little demon?\n\n\"Take these too,\" Mel said, thrusting a pair of black headphones my way. \"Now go on, off you get.\"\n\nMel ushered me towards the door before I could protest and change my mind.\n\n\"I'll just have to get myself off,\" Mel said with a wink, then closed the door.\n\n\"What the fuck just happened,\" I said to myself as I stared at the door. \"Women are strange.\"\n\nJust as I started descending the stairs, the door to Erica's room opened, and the buxom goddess strolled out with a dark-red towel wrapped around her sinful body.\n\n\"Coming to see me?\" Erica asked with a coy smile.\n\n\"Actually, just borrowing a laptop from Mel,\" I said.\n\nErica walked over to me and purposefully opened her towel to readjust it, giving me a frontal view of her glorious body.\n\n\"Well...don't let me distract you,\" she winked.\n\n\"Too late,\" I chuckled.\n\n\"Good,\" Erica grinned. \"I can't wait for tonight.\"\n\n\"Neither can I,\" I replied. \"But we could sneak off and have some fun earlier if you want.\"\n\n\"As much as I know I'd enjoy that,\" Erica stepped closer to me. \"I want to wait for tonight.\"\n\n\"I'm all yours tonight, I promise,\" I said, pulling her against me with one hand.\n\n\"And I'm all yours,\" Erica gasped. \"Anything you want.\"\n\nWe kissed hungrily for a few moments, then I remembered where we were and gave her ass a quick squeeze before separating from the gorgeous woman.\n\n\"I'll see you later,\" I winked.\n\n\"I'll be thinking about you while I'm all naked and wet in the shower,\" Erica smiled coyly.\n\nOnce more, I was going into my day with a perpetual boner. Only this time, I knew I was going to work it off later tonight with Erica.\n\nI spent the next couple of hours listening to each song recorded on the USB and playing along with them. The music wasn't too difficult--although the recording quality wasn't excellent--and it only took a few listens to each song before I was able to play along without stopping too often. The only issue I had was a lot of the songs sounded very similar, so I found myself having trouble differentiating them from one another. I started adding my own flair to the music once I become comfortable with a couple of the songs. Nothing too major, just enough to make it more enjoyable to play and make it my own. I wasn't sure if they'd appreciate that, but If I was going to join their band, I wanted to add my own sound and style to what I played. If they didn't like it, they could always find someone to copy and paste what they've already done.\n\n\"You've picked that up quickly.\"\n\nI looked up to see Amanda standing in the doorway to the garage. She was dressed in a tight pair of black jeans that would give a blind man an erection, with a black top that left a tantalizing sliver of her pale skin exposed across her stomach.\n\n\"Thanks,\" I said, placing the guitar on the stand. \"It isn't too hard to follow along with. But I'll still need to practice with the rest of them to make sure we're tight.\"\n\n\"I've messaged Craig to tell him you're in and gave him your number so you guys can organize rehearsal,\" Amanda said, leaning against the doorframe.\n\n\"Thanks, I guess I better keep my phone on me then,\" I nodded.\n\nI rarely kept track of where my phone was these days. I only had one back home for emergencies and when one of my employers needed to call me. My friends would often call me when they wanted to hang out, but I had it on silent more often than not, and it wasn't even in the same room as me when I was home.\n\n\"You ready to head out?\" Amanda asked.\n\n\"Yeah, I'm good to go.\"\n\nI tidied up and closed the laptop before heading outside and climbing into Amanda's car. The ride to the small shopping mall was quiet and a little awkward, but the music Amanda had playing helped a little. Things were strange between the eldest of my sisters and me. We had started our relationship so strong, and I felt like I could talk to her about anything, but now I wasn't sure what was happening between us. She flirted openly with me and often made moves for more but always backed off first. I'd be happy to keep our relationship platonic if that's what she really wanted, but it was hard when she kept making advances and dropping hints. Did she want me to make the first move? What if I did, and I totally ruined everything.\n\nWomen were an enigma to me sometimes.\n\nOnce at the grocery store, I pushed the cart while Amanda walked ahead, tossing in things she needed. I was able to enjoy the view of her glorious backside from my spot behind the cart, but it wasn't the same. I found myself getting increasingly irritated by Amanda and her frivolous attitude towards us. She knew how I felt about her but kept pushing me away. I respect her decision and try to keep it simple between us. But then she gives me one of those looks that makes my legs weak.\n\n\"Aren't you two a gorgeous couple.\"\n\nI was in a bit of a daze as I pushed the cart behind Amanda and didn't notice the short elderly woman ahead.\n\n\"Hello Mrs Sullivan,\" Amanda greeted the woman. \"This is Nick.\"\n\n\"It's lovely to meet you, Nick. But, please, call me Betty,\" the elderly woman said pleasantly, then turned to Amanda. \"He is very handsome. You must feel fortunate, my dear.\"",
        "\"Nick is--\" Amanda started to say, but Mrs Sullivan interrupted her.\n\n\"You make sure you take good care of her,\" Betty said to me. \"She is such a wonderful young woman.\"\n\n\"Don't worry,\" I grinned. \"I'll be sure to treat her well.\"\n\n\"I can tell you're a good man,\" Betty smiled. \"Not like that slacker you were dating last time. What was his name again? Chris?\"\n\n\"Craig,\" Amanda replied. \"And we're actu--\"\n\n\"That's the one. I always knew you were too good for him, my dear,\" Mrs Sullivan cut in again, placing a hand on Amanda's arm. \"You need to be with someone who loves and respects you, my dear. The same goes for both of you. But I can see it in your eyes, and it warms my old heart.\"\n\nBetty went on for another ten minutes about her late husband and how great of a man he was and how Amanda shouldn't settle for anything less than the perfect man for her. Then she began telling me how handsome I was again. Amanda blushed furiously throughout the whole ordeal but never again tried to correct the elderly woman.\n\n\"Oh, would you look at the time,\" Mrs Sullivan said after fifteen minutes. \"I've been prattling on and on, keeping you two love birds.\"\n\n\"It's okay, really. We don't mind,\" Amanda said.\n\n\"Nonsense,\" Betty waved her hand. \"You two have a wonderful day and cherish every moment you have together.\"\n\nBetty gave Amanda a hug, then placed a hand on my arm as she passed by the cart, planting a grandmotherly kiss on my cheek before she was on her way.\n\n\"I think she likes me,\" I said to Amanda.\n\nAmanda burst out laughing, smiling widely. Our eyes met, and the smile she gave me made my heart skip a beat. I suddenly felt foolish for being annoyed at this woman. We were both in a strange situation, and I couldn't begrudge her for not knowing how to navigate it. I was just as reluctant to engage in a sexual relationship with Erica.\n\n\"Shall we continue on, my dear?\" I asked Amanda, holding my arm out for her.\n\n\"Yes, we shall,\" Amanda giggled, looping her arm through mine.\n\nThe rest of our trip to the grocery store and ride home was far more comfortable as we chatted and joked. The tension in the air between us was gone, thanks to one little old lady. I didn't want to hold any bad feelings towards Amanda, and I felt horrible for the short time that I had.\n\nOnce we arrived home, we spent most of the day together just hanging out, watching TV, and listening to music. A few moments when our eyes met or a touch lingered could have evolved into something more, but I tried my best not to let it affect the mood.\n\n\"I love you,\" Amanda said softly as we lounged on the couch.\n\n\"I love you too,\" I replied just as softly.\n\n\"I just don't know how to deal with these feelings right now, and I am really sorry,\" Amanda said.\n\n\"It's okay,\" I said, pulling her into a hug. \"It isn't your fault.\"\n\n\"I kissed you first,\" Amanda sighed. \"I started this whole thing.\"\n\n\"In a way, you did. But not how you think,\" I said.\n\n\"What do you mean?\"\n\n\"I fell for you the moment I saw you,\" I confessed. \"I've never believed in love at first sight, but it happened.\"\n\n\"Good,\" Amanda said.\n\n\"Good?\" I asked, giving her a puzzled look.\n\n\"I'm not the only one who instantly fell in love the moment we met,\" Amanda said.\n\nMy heart jumped at her words. I wanted nothing more than to take her into my arms and kiss her until I was out of breath. This beautiful, amazing, caring woman just told me she fell in love with me at the exact moment I had fallen for her. But I still couldn't have her.\n\n\"I'm going to need some time,\" Amanda said finally. \"I can't do this while I'm with Craig...I just can't.\"\n\n\"I understand,\" I nodded. \"What about...the others?\"\n\nI was dreading what Amanda would say about Emily, Mel, and Erica. Amanda knew what was going on in the house with her sisters and me and had shown jealousy along with acceptance of what was happening. I loved her, but I also had those feelings for the others, and I don't think I could choose if given an ultimatum.\n\n\"Do you love them?\" Amanda asked.\n\n\"Yes,\" I answered truthfully.\n\n\"So do I,\" Amanda nodded.\n\nWe watched TV in silence for another hour before getting up to start getting dinner sorted. I helped out in the kitchen, just wanting to be near Amanda. We hadn't kissed or even flirted since we returned home from the grocery store earlier. But a hand on the back while passing each other, or our shoulders touching as we stood side-by-side, held just as much affection and intimacy as making out with a dozen other women. Women who weren't my sibling that is.\n\nI was really starting to believe that Mel was onto something with her theory about why we're all feeling the way we are, but there was more to it. Genetic sexual attraction was all well and good, but these women were something special. Sure, they were all sexy as hell, and each of them made me as horny as a teenager at a pool party, but they were more than just amazing bodies and beautiful faces.\n\n\"You two look like you had a good day,\" Mel said when she sat down for dinner.\n\n\"It was relaxing,\" Amanda smiled.\n\n\"Did you bang?\" Erica asked bluntly.\n\n\"Erica!\" Amanda scolded but broke her angry demeanour by laughing.\n\n\"It's just a question,\" Erica shrugged.\n\n\"One that is very reasonable to ask in this household,\" Mel added.\n\n\"Leave them alone,\" Emily cut in. \"What they do together is none of our business.\"\n\n\"Can you three stop talking about my sex life, please,\" Amanda said.\n\n\"So, you did bang?\" Erica grinned.\n\n\"Nah...I don't think they did,\" Mel pursed her lips in thought. \"She'd be in a much better mood if they did.\"\n\n\"Well, this went weird fast,\" I laughed.\n\n\"Welcome to the family,\" Mel grinned. \"We make weird seem normal.\"\n\n\"You two need to stop being mean to Manda,\" Emily said with a stern look that made her look incredibly cute.\n\n\"Sorry, Em,\" Mel and Erica said in unison.\n\nEmily flashed Amanda and me a bright, cheerful smile before taking my hand in front of everyone. I guess the cat was out of the bag publicly now, and Emily was feeling affectionate. Throughout dinner, she sat right up beside me and shamelessly showed affection and looked incredibly cute doing it. Even Amanda smiled when Emily wrapped her arms around my neck and planted a kiss on my cheek.\n\nI guess they really did love each other enough to avoid jealousy.\n\nOnce we finished dinner, I got up to help with the dishes, but Emily grabbed my hand and pulled me away from the others.\n\n\"I'll help Manda with cleaning up,\" Emily said. \"You should go spend time with Erica.\"\n\n\"You're not jealous you can't spend the night with me?\" I asked, still a little sceptical.\n\n\"A little,\" Emily nodded. \"But you haven't spent much time with Erica over the last few days, and I know she wants to.\"\n\n\"How do you know that?\" I asked.\n\n\"Because if I hadn't spent the night in your bed for a few days, I would feel the same,\" Emily smiled. \"Go on.\"\n\n\"I have no idea how I became so lucky,\" I said, kissing her on the lips.\n\n\"Just never forget it,\" Emily grinned, then bounded off to help Amanda with the dishes.\n\nI glanced over to Mel--standing by the kitchen counter--and noticed she was studying me intently. The platinum-haired minx gave me a knowing wink before blowing me a kiss. It was then I realised I hadn't seen Erica leave. I was starting to wonder just how much those three talked. And what their plans were.\n\nI left the main house and made the trip up to my flat. I wasn't sure where Erica had gone, but I could expect her to come by on her own. What I didn't expect was to find her stark naked in my living room, waiting for me.\n\n\"You took long enough,\" Erica said, her eyes full of hunger.\n\n\"Then get over here,\" I said, drinking in the sight of her flawless body.\n\nErica obeyed immediately. She was in my arms in a second, and our lips collided as our tongues roughly battled for dominance. Erica was already naked, but I was still clothed. That was no issue for my temptress of a sister though, she had my shirt off and jeans down to my ankles in record time, dropping to her knees as she went. My cock bounced free, and she had it between her lips before my brain could register. I let out a loud moan of pleasure as Erica took more than half my length down her throat on the first pass. Then all the way down on the second. Erica was wasting no time as she mercilessly rammed my erection down her throat, pressing her nose against my pubis each time.\n\n\"You're not playing around tonight,\" I groaned.\n\n\"Neither should you,\" Erica gasped, then spat on my cock before working it in with both hands. \"I just want you to use me tonight. I need it.\"\n\n\"Safe word?\" I asked.\n\n\"Craig,\" Erica grinned.\n\n\"Why Craig?\" I asked, puzzled.\n\n\"Because I'm not saying his fucking name while you fuck the shit out of me,\" Erica replied, her chest heaving with excitement, eyes filled with need and lust.\n\nI grinned, then grabbed a fistful of her hair, tilting her head back hard and kissing her roughly. \"Alright then.\"\n\nI had been with a few girls in my time that liked it rough, enjoyed being treated like a fuck toy, but none of them were even half as gorgeous and sexy as Erica. She always seemed to be on a whole other level to them. I was excited to see how far she'd go. Or how far she'd let me go.\n\nI pulled Erica by her hair over to the back of the couch, letting her shimmy over on her knees. With her back against the back of the couch, I stepped closer to her and aimed my cock at her mouth. Erica was playing coy, though, and kept her lips shut, glaring up at me defiantly. I yanked on her hair hard and gave her a slap across the face, hard enough to be heard but not cause any real pain. Erica let out a pleasurable moan, then opened her mouth just enough for me to slide my cock between her luscious lips.\n\nI knew she could take my cock down her throat with ease, so I went straight for home base and hilted myself in her throat with an audible groan of pleasure. I pulled back slowly--keeping the tip of my cock between her lips--before plunging deep into her throat again. I worked my hips steadily as I fucked her throat, pumping deep each time and slowly picking up speed, pulling out every thirty seconds to let her gulp some air before fucking her mouth some more.\n\nA few minutes in, I noticed Erica toying with her own pussy as I used her mouth.\n\n\"Hands behind your back,\" I said, pulling my cock from her throat and delivering another--harder--slap across her face. Erica moaned again but kept fingering herself, earning another slap. She finally complied after the third blow and moaned loudly as my cock slid down her throat again. I was quite worked up from earlier today and spending the day around Amanda, but my mind was clear, and I was in control with no risk of blowing my wad too soon.\n\nAfter another few minutes of throat fucking Erica, I pulled out and let her gasp some much-needed oxygen in before wrapping my fingers around her throat, lifting her to her feet. Out of all of my sisters, Erica would probably weigh the most because of her ample curves, but she was still light enough for me to manhandle with ease. Once on her feet, I cupped her incredibly slick vagina with one hand as I slowly began squeezing the other around her throat. I worked two fingers inside of her warm, wet tunnel and started fingering her as I choked her slowly. Erica grasped my forearm and half grinned, half moaned as I helped her quickly approach her first orgasm of the night.\n\nThen she exploded, and I released my grip on her throat, catching her in my arms as her legs gave way. Erica trembled against me as her climax shot through her body. She buried her face in my chest as she shook almost violently. I cupped her sex one more and confirmed that she was now dripping, her juices coating the insides of her thighs.\n\nI dropped to one knee and threw one of Erica's legs over my shoulder before I dove into her succulent pussy. I licked at her thighs, savouring the taste of her pussy before assaulting her slick folds and engorged clitoris with a savage intensity that had her all but screaming in pleasure within the first minute. Erica still hadn't come down from her first climax, and I could tell the second was bearing down on her like a dump truck with no breaks rolling down a steep incline. Then it crashed into the sexy vixen, and she nearly suffocated me with her luscious thighs as I continued to devour her.\n\n\"Holy fucking shit!\" Erica moaned.\n\nI was high on her juices and the sound of her moans now. My cock was rock hard, and everything about our situation was intoxicating. I felt my chest heaving, and my senses heightened by Erica's body's taste, scent, and feel.\n\nI felt the need to breed this marvellous specimen of a woman.\n\nI let Erica's leg drop from over my shoulder and wrapped my arm around Erica's waist as I stood up, lifting her onto my shoulder with ease. Erica let out a playful squeal as I carried her to the bedroom, smacking her on the ass hard before dumping her unceremoniously onto my bed.\n\nI didn't say a word as I grabbed her by the ankles, flipping her onto her stomach. Erica let me take the lead and pushed up onto her knees, wiggling her perfect ass at me while giving me a sensual, primal look over her shoulder. She wanted what I wanted.\n\nI gave each of her juicy cheeks a hard slap before aiming my flagpole of a dick--still slick with her saliva--at her drenched entrance and slid in with one effortless thrust. I sheathed myself completely inside of Erica's pussy, growling in pleasure at her warmth and the way she hugged and squeezed at my cock. Then I started thrusting like an animal in heat.\n\nThe night was unusually warm, added with the heat from our bodies and the intensity of our rutting, caused the room to swelter in no time. Sweat ran down my chest as I ploughed into Erica's now well-fucked cunt without reprieve. Erica's hair was matted with sweat as she clung to the bedsheets like her life depended on it, almost non-stop moaning and growling with pleasure as I bottomed out inside of her with each hard, savage thrust.\n\nI felt my first climax building up suddenly and instinctively slowed my pace to prolong the pleasure, but something in my brain clicked, and I started hammering into Erica like a beast. My orgasm hit hard, and I hilted myself deep inside of her as I filled her to overflowing, then I kept fucking her. My cock was still hard as nails as I continued to plunge deep inside of Erica. My seed was seeping out from Erica's vagina, running down her thighs to mix with her own juices as she almost constantly rode high on an orgasm that seemed to finish as another started. My body felt invigorated and powerful like I had endless stamina. My erection never wavered.\n\nI had no idea how long I'd been ploughing into Erica from behind, and I didn't care. Finally, I pulled my harder-than-steel dick from Erica--gave her pussy a smack--then grabbed her legs and flipped her onto her back. The look on Erica's gorgeous face was pure bliss as she grinned like an idiot up at me. Her body was now soaked in sweat, just as mine was, but I wasn't done with her yet.\n\nI slid between her legs quickly and slammed home once more. Erica accepted me willingly, spurning me on with curses, moans, growls, and words to encourage me to use her like a cheap whore.\n\nAnother orgasm came on me quickly, and I filled her with another massive load as I continued to pump my cock deep inside her. My erection stayed strong, so I kept working my hips as I clutched her body tight against mine. Our naked flesh slapped together audibly, and I could feel Erica's slick skin slide against my own as we locked ourselves together in what had to have been the most frantic and savage sex of my entire life.\n\n\"I love you,\" Erica managed to get out between gasps of pleasure.\n\nI wiped away the tangle of hair from her face and marvelled at how utterly beautiful she was. Her makeup was ruined, and her face was sweaty with strands of hair clinging to her skin, a complete contrast to the usually perfectly styled and manicured visage Erica showed daily.\n\n\"I love you too,\" I said, kissing her deeply as my final orgasm reared its head, and I filled Erica to the brim for what must have been the fifth time tonight.\n\nThe room was eerily quiet a few moments later as we lay together on my ruined bedsheets. Erica's legs twitched and trembled as she lay against my side. The scent of the room was overpowering with sex and sweat, but neither of us seemed to mind.\n\n\"Promise me one thing,\" Erica said after a few minutes of silence.\n\n\"What's that?\n\n\"That we don't do that every night,\" Erica giggled, kissing my chest. \"I don't think I could survive that every night.\"\n\n\"Deal,\" I chuckled. \"How about tomorrow night? I make love to you instead.\"\n\n\"Or in the morning,\" Erica said, kissing me softly on the lips.\n\n\"Whatever you want.\"\n\nEnd Book 1"
    ],
    "authorname": "Darth_Aussie",
    "tags": [
        "harem",
        "incest",
        "brother x sister",
        "teasing",
        "little sister",
        "twins",
        "creampie",
        "breeding",
        "love",
        "rough sex"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/lust-at-first-sight-bk-01-pt-04"
}