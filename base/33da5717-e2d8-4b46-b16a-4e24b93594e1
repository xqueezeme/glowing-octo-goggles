{
    "title": "Roommate Interrupts my Butt Play",
    "pages": [
        "Before this story starts, I just wanted to give a heads up that, like in my last story, there is a relatively long build up before the action starts.\n\n-----------------\n\nThese days when everyone is mostly confined to their homes, having a roommate means that my \"alone time\" is severely limited. For weeks my only alone time has happened either in the dead of night when my roommate is asleep or locked in our bathroom. Both being awkward, needing to be quiet to avoid my roommate hearing. Not that I am necessarily loud, but the knowledge that I need to keep it down, is enough to make me self-conscious and ruin my ability to focus on what I am doing.\n\nThis means that I haven't been able to truly satisfy myself, leaving me horny and frustrated, so when my roommate had to go to a doctors appointment that would keep her out of the house for at least an hour, I was quick to seize the opportunity.\n\nAs soon as she left I set an alarm for 45 minutes to ensure that I would have time to finish off and get cleaned up before she returned. After that I quickly found the toys I needed for my play and got into it.\n\nAbout 15 minutes after I started, I was lying naked on my belly on my bed, my legs spread and my hand working a dildo in and out of my well lubed ass, when the door to my room opened. \n\nI had been so absorbed in my play that I had missed my roommate returning early and when I didn't respond to her call, she had come to my room to let me know she was back.\n\n\"Hey, the doctor called and...\" Anna, that's my roommate's name by the way, said as she opened the door. Her voice dying down as she saw the position she had walked in on me in.\n\nI turned to look at her, neither of us saying anything, the only sound in the room the persistent vibration from the toy still in my behind.\n\n\"Anna, I...\" I started to say before she cut me off.\n\n\"Oh my god, I am so sorry. I, I...the doctor called and cancelled and I...sorry,\" with that she turned and fled through the door, closing it behind her.\n\nAnd that is where I am now. Sitting in my bed, mortified at what Anna might think of me and embarrassed as hell. All arousal chased away, my dildo lying forgotten on the bed.\n\nWhile we are close me and Anna have never really talked about sex or masturbation or anything of the sort. I know that due to her upbringing it isn't really something she is comfortable discussing and I have always done my best to respect her feelings and not push my sexuality in her face. Also, while I don't have the same hang-ups about discussing sexual matters as her, I am still a very private person when it comes to the actual acts. I know, to some, the idea of having another person within hearing distance, or even having another person watching, is a turn on, but to me it has always been a surefire way to stop my arousal dead in its tracks. The exception of course being if the other person is a partner in the act.\n\nSo what do I do now? Do I go talk to her? I have no idea how to start a conversation like that. Or do I try to just ignore it and pretend that nothing happened? Or will that make things even weirder. \n\nI am starting to feel a bit chilled, sitting naked on my bed, still wet with sweat, and other fluids, from my earlier play. I decide that that at least is something I can do something about, so I grab my toys and a towel and head to our shared bathroom. \n\nThe layout of our house is so that our bedrooms are next to each other, with the bathroom being on the other side of a hallway. If you turn down the hallway you will either get to our front door or, if you turn the other way, end up in our living room / kitchen combo room. This means that I can pretty easily slip from my room to the bathroom without much risk of running into Anna.\n\nOnce in the bathroom I quickly clean the toys before turning on the shower and stepping under the hot flow of water.\n\nI usually enjoy showering, the feel of the hot water against my body, sliding my soaped hands over my skin, maybe lingering a bit in certain places, but today my mind is too distracted for that.\n\nAfter I dry off I quickly slip back to my room. I hate the fact that I feel like I have to sneak my naked body from the bathroom to my bedroom. While we have never spoken about sexual things, nudity has never been an issue and normally I would just walk between the rooms without given it a thought. Hell if there was something I needed in the living room or if I had something I needed to ask her, I would not have hesitated to go there in the buff, but after earlier I feel awkward and like my nudity will mean something else if she happened to see me.\n\nIn my room I slip into a short sleeved loose t-shirt and a pair of sweatpants. For a moment I consider putting on underwear, something I otherwise usually don't do when it is just the two of us home. But I worry that suddenly putting on underwear will just make things even more awkward if Anna notices, like it is an open admission that what happened earlier has changed things.\n\nAfter putting my clothes on I sit on my bed. \n\nSitting there I start getting annoyed with myself. \"Okay, stop, you are blowing this way out of proportions. So what if she walked in on you masturbating. So what if she saw me with a dildo up the behind. It is not like I was doing something wrong. I was alone in my room, thinking she was out.\"\n\nBut even though I know logically that makes sense, I can't seem to shake the embarrassment and, yes, fear, that somehow what happened will ruin our friendship. I haven't really realized how much our friendship means to me before now, us living together being the result of coincidence rather than intention, but over time we have grown really close.\n\nI don't know how long I sit there spiraling in the same pointless thought patterns, but I am eventually interrupted by a knock on the door.\n\n\"Mary, do you wanna come eat with me?\" I hear Anna ask through the door. Mary is my name by the way or actually it is Marilyn, but no one but my parents call me that.\n\nThe fact that Anna is asking through the door and the fact that she is asking at all is unusual. We normally always eat together and she would usually either have called me out to help cook or, if she decided to do it herself, simply have yelled \"Dinner\" from the kitchen to get me to come.\n\n\"It's ok if you don't want to,\" I hear her say, her voice sounding sad and I hear her start walking away from my door.\n\nI quickly jump up and rush to the door, pulling it open and stumble out after her.\n\n\"Wait up! Of course I want food,\" I say as I catch up to her, deciding to try to act like nothing has happened.\n\nWe walk together to the table we usually eat at and sit at our normal spots. Before living with Anna i would usually eat sitting in the sofa in front of the television, balancing my plate on my knees. Anna however have insisted from day one that we eat at the dinning table and, while I was skeptical at first, I must say it has grown on me. Not the table itself, but the conversation over the dinner. \n\nWe make some small talk, her complaining that her doctor had called to reschedule her appointment while she was on her way there and me agreeing that it is totally not ok. By silent agreement neither of us mention what happened earlier, but it is clear that it is still on both of our minds and the conversation quickly dries up leaving an uncomfortable silence in its wake.\n\nTaking a deep breath Anna breaks the silence. \"Look, about earlier, I am really sorry for walking in on you like that. I...I didn't know you where doing...you know. I just got back and when you didn't answer I...\" shrugging she lets her words trail off, her eyes looking down, avoiding eye contact.\n\n\"No, no, you don't have anything to be sorry about. I mean you didn't do anything wrong. You didn't even do anything. I mean we come into each other's room all the time. I am the one that should be...\" I say before she interrupts me.\n\n\"Stop, you don't have anything to apologize for. I was the one...\" she says before it is my turn to interrupt.\n\n\"No I mean it, you didn't..\"\n\n\"Neither did you. I was the one...\"\n\n\"It was me, I am so...\"\n\nNeither of us able to get a full sentence out before the other interrupts, we eventually both give up and stop talking, both sitting and looking down at our hands.\n\nI raise my eyes and she does the same at the same time. When our eyes meet a second passes by and then we both break out into laughter.\n\nThrough her laughter she chokes out, \"So we're good?\"\n\n\"Yeah,\" I reply. \"I am embarrassed as fuck, but I was never angry. I was just worried about what you would think. I know you aren't really comfortable with all that...stuff\".\n\n\"I know, I am not...\" She starts looking down, suddenly embarrassed again, before I interrupt her.\n\n\"No, no, it's okay. I respect how you feel.\"\n\nStill looking down she whispers, in a voice so low that I can barely hear it. \"It is not that I have anything against that sorta stuff. It is just, it is so embarrassing and I don't...I mean...it wasn't really something we talked about where I am from and I don't really know...you know?\"\n\nShe is still looking down, so I stand up and walk around the table. Putting my arm around her shoulder I say, \"No, I have no idea what you are saying. Just spit it out. It is just me and you here and nothing you say will make me think any less of you.\"\n\n\"I am, you know, curious, about that kind of thing. I just, I don't know how to talk about it. I don't know how to ask.\"\n\nRealizing what she is saying I am momentarily stumped, realizing that I have misjudged her all this time and what I thought was prudeness was really insecurity.\n\n\"Wait, so you are saying that you want to talk about...\" I almost say that stuff, in order to spare her ears, but if we are going to be able to talk about it, we have to be able to say it, \"...sex stuff?\"\n\nShe mutely nods her head.\n\n\"Well ok. Let us make a deal. You can say anything you want, ask anything you want, no matter how silly you think it is and I won't judge or laugh at you or...well ok, I might laugh, but you don't have to feel embarrassed if I do. I won't think any less of you.\"\n\nShe sits for a moment, mulling it over, before simply saying, \"Okay.\"\n\n\"Okay, lets clean this up and go sit in the sofa and talk,\" I say and then, without waiting for a reply, I start gathering up our plates.\n\nAs expected her upbringing does not allow her to stay seated while I clean up, so she gets up and starts helping out.\n\nWe clean up in silence, both lost in thought and before long we are done.\n\nI grab her hand and start tugging her to the sofa. \"Okay, lets do this.\"\n\nWe have a large sofa that easily hold four people with room to spare and as I sit down, she sits on the opposite end of the sofa, as far from me as possible, trying to put distance between us and between her and the conversation we are about to have.\n\nI am not going to allow that so I get up and move over to sit right next to her, putting my arm around her shoulders.\n\n\"Much better,\" I say. \"Now start talking.\"\n\n\"I don't know where to start.\"\n\n\"Okay, how about we start by establishing how much you already know.\"\n\n\"Okay, I guess,\" she says the doubt clear in her voice.\n\n\"Alright, so, first thing first, have you ever, you know, done it? Have you ever had sex.\"\n\nTo my surprise she nods, \"Once.\"\n\n\"And how was it?\"\n\n\"Not that good. Neither of us knew what we were doing and he, you know, finished, real quick.\"\n\n\"Hmm ok, but that's pretty normal. First times are usually pretty meh. The trick is to do it again and again and again. But lets not dwell on that. What about, you know, what I was doing earlier?\"\n\n\"I-I have never put anything up my...\" she starts to say before I interrupt her with a giggle.\n\n\"I didn't mean that. I just mean, you know, playing with yourself. Masturbating.\"\n\n\"Yes. I mean, some. I sometimes touch myself down there, but nothing more than that. I've never tried, you know, with a toy or anything.\"\n\nAt this point her shyness seems to have somewhat faded and she is now looking at me rather than at her hands.\n\n\"So, what are you curious about?\" I ask, hoping to draw her out a bit.\n\n\"That thing I saw you do. Putting something up your butt. How is...is it...nice?\" She asks hesitantly, but with what I can only interpret as genuine interest.\n\nI give her shoulder a small squeeze before replying, \"Well I think so, otherwise I wouldn't be doing it. It is a different feeling than what you get from playing with your girl parts. A different kind of pleasure. For me, when I combine it by touching myself while I have something up my butt, the feeling is so much stronger than either on its own.\"\n\nShe sits still, subconsciously biting her bottom lip, staring out into nothingness as she digests this.\n\nA thought strikes me and I can't help myself from asking, \"Is it something you think you might want to try?\"\n\nAt this she quickly turn her head towards me, looking at me as she whispers, \"I...yes...maybe.\"\n\nAs we have been talking I have been feeling myself getting mildly aroused. I thought it was just from the subjects we were discussing, but upon hearing her admit that I feel my arousal spike and the truth that my arousal is, at least in part, because of Anna, is unescapable.\n\n\"Maybe start with something a little, simpler, than the dildo I was playing with. Maybe you could start by slipping a finger back there when you are touching yourself,\" as I say this I can't keep from picturing it, her lying in bed, naked, one hand stroking her between her legs and the other creeping back to gently start working at her back door. It is these images that inspires me to say, \"If you want me to I can help you.\"\n\n\"He-help me? How?\" she asks, her voice sounding kind of shaky, making me wonder if I am the only one being effected by the conversation.\n\n\"I could help show you how and help you do it the right way and answer any questions you might have and stuff like that,\" I say, wondering if my voice sounds as eager to her as it does to me and hoping she is too districted to notice.\n\n\"But you would have to be there while I...did stuff\"\n\n\"Sure, but, I mean, I don't mind.\"\n\n\"I don't know. Isn't it kind of weird?\"\n\n\"Who cares? It's not like anyone but us will know. So the only thing that matters is whether you want it or not. If you're curious and want to try it then I am happy to help.\"\n\nDespite my words my motives are far from altruistic. The more we talk about it and the more the image flash through my mind, the more I find myself aroused by the thought. I briefly regret not wearing underwear, wondering whether or not my hard nipples are visible through the t-shirt I am wearing and whether my arousal will be visible in the crotch of my sweatpants. For the first time I know what it is like for guys, having to worry about hiding their boners.\n\nWhile I have been taking a physical inventory, Anna has been contemplating my suggestion and she seems to have come to a decision.\n\n\"Okay, I guess we can try.\"\n\nAt that I feel parts of anatomy clench up and I know that if there wasn't a visible wet spot at the crotch of my pants before, there most certainly is now. Thinking quickly I say, \"Okay, if you go to your room and get ready then I will be right there. I just need to grab a few things.\"\n\n\"No-now? We're going to do this now?\"\n\n\"Sure, why not?\" thinking quickly I take a gamble and add, \"Don't even try to pretend that this conversation hasn't got you at least a little bit turned on.\"\n\nI can see my words strike true as she starts to turn red and turn her head. I quickly reach out with my hand and gently put my hand on her cheek and turn her head back towards me and say, \"Hey, me too. It's completely natural and nothing to be embarrassed about.\"\n\nAt this her eyes open wide in surprise, \"Really?\"\n\n\"Really,\" I decide that maybe letting her know how much our conversation has effected me isn't such a bad thing. I gesture towards my hard nipples. \"See for yourself.\"\n\nShe looks down at my chest and then quickly averts her eyes before slowly moving them back.\n\n\"And if that isn't enough proof then look here,\" I say, standing up and grabbing my sweatpants, pulling them up tight against my crotch making sure they capture as much of my wetness as possible. This of course also has the side effect of making the fabric slide against my sensitive parts and it is all I can do to stop myself from moaning out loud.\n\nAs her eyes are inevitably drawn to the wet spot on my pants Anna lets out a gasp and clasps a hand over her mouth.\n\nFor some reason her shocked reaction is highly comical to me and I can't help but burst out laughing. Through my laughter I choke out, \"See nothing to be embarrassed about.\"\n\nAnna looked up at me when I started laughing, but she can't keep her eyes from straying back down to the wet spot in my pants.\n\nShe stands up and says, \"O-okay, le-lets do it.\" and turns and almost flee to her room.\n\nStill laughing to myself, I give her time to get to her room before I start towards mine. \n\nOnce I get to my room I find a bottle of lube. I also consider whether I should bring a small toy, but decide against it, better not push her too much the first time and, of course, if we take it slow then I have an excuse for helping her out again another time.\n\nI stop for a moment and consider whether I am taking advantage of Anna, but after weighing my different motivations I decide that yes, I am partially driven by my own desires, but at the same time, if I can help her be more open and accepting of her sexuality then that is a good thing.\n\nBefore going to her room I make a decision and pull off my shirt and pants. If I am naked as well it might be less hard on her and also, if I am going to demonstrate anything then I might as well start out naked.\n\nAs I stand outside her room, lube in hand, I am faced with a minor dilemma. Her door is closed. Should I knock or just enter. Deciding to play it safe I bring my hand op and knock on her door.\n\n\"Co-come in,\" Anna calls from inside.\n\nI open the door and enter. To my surprise Anna is sitting fully dressed on her bed.\n\n\"You're dressed!\"\n\n\"You're naked!\"\n\n\"Well yeah, I figured it would be less awkward for you if I was naked as well.\"\n\nI walk over and crawl onto the bed sitting cross-legged facing her.\n\n\"Soooooooo?\" I draw out the word and end it on a questioning note and make a gesture towards her to indicate her dressed state.\n\nShe lets out a sigh and visibly steels herself. She then grabs the edge of her shirt and pull it over her head. Not taking a break she then immediately proceeds to open her bra and slide it off, freeing her breasts to the air.\n\nI can't help taking a closer look at her breasts than I have done previously. I have seen them plenty of times, but the different context here makes me see them in a different way and I can't help but wonder what they would feel like in my hands.\n\nUnaware of my thoughts Anna, move to the edge of the bed and stand up to give herself space to unbutton her jeans and slide them down and off of her legs.\n\nI am very interested in seeing whether her white panties has a wet stain on them, but unfortunately the angle she got off the bed at means that I can't see it.\n\nShe slides the panties down her legs and step out of them, leaving them on top of her jeans. Part of me really wants to go over there and take a look.\n\nBefore I can turn thought to action however, Anna crawls back onto the bed and the way she does it means that her rear end is briefly facing my way, giving me a clear view of her cute butt and down below it, her wet lower lips, and they are DEFINITELY wet.\n\nI subconsciously lick my lips as a steady warmth spread through my body and coalesces between my legs.\n\nOnce she has made her way back to her previous spot on the bed, Anna turns around and faces me again, copying my cross-legged pose.",
        "\"So what now?\" she asks, in a seemingly calm voice, but knowing her as well as I do I can hear the nervousness she is trying to hide. \n\n\"Well I guess that is up to you. You could lie down and start by just touching yourself like you usually would and then, once you're good and ready, I help you get started with a finger back there. Alternatively if you need some help to get comfortable I could also give you a massage. Or of course if you would rather, then I could also give you a more practical demonstration.\"\n\n\"A practical demonstration?\"\n\n\"Yeah, I could show you.\" I say, taking my hand and letting my fingers trail a path from my neck down between my breasts, down to my belly button and then letting it slide down and to the side to my thigh and around onto my butt cheek. I then let my hand fall back down to resting on the bed.\n\nShe swallows visibly, her eyes glued to my hand, \"N-No I don't think I could handle that.\"\n\n\"Okay then, how about we start with a simple massage and then once you're comfortable you can decide where we go next.\"\n\n\"Okay,\" she says and then she leans forward and lies down on her belly on the bed.\n\nI consider straddling her legs, but decide that the feeling of my wetness pressed against her might be a bit more than she is ready for, so I instead kneel next to her upper body and lean over her.\n\nI start by gently sliding my hands over her back, just making paths from her lower back and up to her shoulders and back down. \n\nDespite the fact that my current touch is relatively innocent, the feel of her smooth soft skin under my hands still send shivers through my body. Of course the view of her butt and the unobstructed chance to stare at it does nothing to calm me down.\n\nAfter sliding my hands over her back a couple of more times, I move them to the top of her shoulders and begin to actually massage her rather than just stroking her.\n\nAs I start massaging her for real, she lets out a small sigh and her body visibly starts to relax. Her muscles loosens and her breathing starts becoming deep and steady.\n\nI work my way down over her shoulders and massage my way down her back. Not rushing, but also not taking too much time.\n\nWhen I reach her lower back I can't help repositioning myself to give me a better view between her legs. Unfortunately her legs are relatively close together, meaning it is limited how much I can see of her lady bits, but I have a pretty good view of her ass, her asshole peeking at me from between her cheeks.\n\nDuring the massage I have felt my arousal slowly building and have felt myself steadily grow wetter to the point where I could easily see myself leaving a wet mark behind when I move from my current spot on the bed.\n\nI continue massaging her lower back for a minute or so, but I can feel the need for us to move on to something else growing and I am unsure how long I will be able to help myself.\n\nI decide to try and push us onward while I am still in complete control of my actions. I lie down next to her, stroking my hand up over her body to the back of her neck and onto her cheek.\n\n\"Hey honey, I think you're ready to move on now.\"\n\n\"Okay, what should I do?\" she asks in low, almost sleepy voice.\n\n\"Well you could just lift yourself a bit and put a hand down between your legs. That way I can continue massaging you if you want me to.\"\n\nInstead of answering she does as I suggested, lifting her body up and repositioning it so that she can slide a hand underneath herself and reach down to her crotch. As her fingers make contact she gives a small gasp.\n\nI crawl down between her legs and gently push them further apart, both to give me a better view of her hand moving over her wet folds, but also to give me room to position myself between them.\n\nI take a moment to just admire the view of her fingers sliding over her clit and listen to her start to moan.\n\nA moment is all I can manage however and I lean forwards and gently place my hands on her ass cheeks, one hand on each cheek.\n\nI was half expecting her to protest, or at least ask me what I am doing, but instead she just lets out a louder moan and I see her fingers start to work faster.\n\nMy new position has brought me closer to her crotch and I have an even better view of her fingers working her their magic. Being closer also means I can hear it as well. The wet sound somehow making it even more erotic.\n\nA large part of me wants to let go of her and move one of my hands between my legs to start giving my own wetness some attention, but I manage keep my eyes on the goal.\n\nI start stroking my hands over her butt cheeks, not really massaging as much as simply groping. I slide my hands down to her inner thigh and stroke her there and then back up to her butt. Grasping her cheeks a bit firmer I pull them apart, spreading her open and stretching her asshole. At this she gives a slight whimper in between her moans.\n\nI am gripped by a desire to lean down and start licking her tiny opening, which surprises me as I have never really thought of the idea of licking someone's ass as something arousing before. I have imagined having someone do it to me, but never the other way around.\n\nI manage to contain myself, however, sure that if I followed through on the desire it would be too much for Anna. Instead I lean down and gently blow on her asshole. This makes her give another whimper and as I continue blowing on her the whimpering starts to rise in volume.\n\nI stop for a moment and ask her, \"Do you think you are ready to try something more back here?\"\n\nMy answer is a half gasped, \"Yes,\" followed by more loud moaning.\n\nI reach out and grab the lube I had brought with me. It is the kind with a pump dispenser at the end and I place it right above her asshole. Using my other hand to hold her cheeks apart, I pumps a generous helping of lube directly onto her asshole.\n\nAs the lube makes contact with her she makes a loud sound, somewhere between a moan and a scream and the muscles in and around her asshole contracts, temporarily squeezing her cheeks together and hiding her asshole.\n\nAfter a few seconds however, she relaxes and I am able to spread her cheeks again, giving me a view of her asshole, now covered in lube.\n\nLooking at her lubed asshole I find myself really wanting to touch her back there, just gently slide my finger over her opening and then slowly slide it inside her. At the same time I know that the point of this whole thing is making her comfortable touching herself back there, not for me to satisfy my own urges.\n\n\"Give me your free hand,\" I say, taking her hand when she reaches it back.\n\nI place her hand on her lower back, just above the cleft of her ass. \"Okay, slide your fingers down between your ass cheeks until you touch your asshole.\"\n\nI use both my hands to hold her ass cheeks open. If I can't touch her, then I can at least make sure I get a good view of the action.\n\nHer hand slowly starts sliding down between her cheeks. Her index finger making the lightest contact with her skin. As it slides onto her lube covered asshole, she lets out a moan that is deeper than her previous ones and I see her entire body shiver.\n\n\"Now gently push against it. You don't have to push your finger inside yet, but you have to feel it pushing against your opening.\"\n\nAs she does, I become aware that the sound of her hand working between her legs have speed up, moving over her clit at a hectic speed. The sound of her moaning has risen in pitch and I can tell that she is close to coming. \n\n\"That's it honey, push the finger against your pretty little asshole and come for me,\" I say, urging her on.\n\nAt my words her body starts shaking and her asshole starts tensing and relaxing as an orgasm starts flowing through her. The finger on her asshole is still pressed against it, but it has yet to move inside, lingering instead at the trembling opening.\n\nI briefly consider physically pushing her finger inside her, but decide to let her enjoy her orgasms instead. We may not have made as much progress as I had expected, but her coming while touching her asshole is a good start and, I remind myself again, slow progress means more chances for me to help her out.\n\nI watch her fingers continue working her clit and watch as her vaginal opening pulses. I can't help wondering what it would feel like if I slipped my finger inside her, having her vaginal walls grab onto my finger as her orgasm continues.\n\nI also listen to her moans, which have gone almost quiet now, as the orgasm is running its course.\n\nI see the fingers on her clit start to slow down, the finger on her asshole slide away and her breathing start to return to normal.\n\nI release her ass cheeks, which I have been holding apart throughout it all, and lie down next to her. I snuggle up next to her, putting my arm around her and gently kiss her cheek.\n\nI am keenly aware that my chest is pushed against her arm, one of my hard nipples resting against her soft skin. Part of me really wants to also move the lower half of my body up against her. The thought of putting one of my legs over hers, putting her thigh between my legs, against my wetness, is enough to make my breathing hitch and make my lower parts clench, sending a wave of pleasure through my body.\n\nI am however still wary of doing something that will push her too far and I am determined that this is about her and making her comfortable with her body. So, taking a deep breath and planting another soft kiss on her cheek, I roll away from her and prepare to go to back to my room and take care of myself in there.\n\nUntil now she has been lying still after her orgasm, her eyes closed, making me believe that she might have fallen asleep, but when I look back at her she has rolled onto her back and propped up her upper body and is looking at me.\n\n\"Where are you going?\" She asks.\n\n\"I was just going to go to my room and take care of myself. I am not gonna lie, all of this has got me pretty horny and I need some relief.\"\n\nShe bites her lip, looking pensive for a moment, before whispering in an almost inaudible voice, \"You don't have to go.\"\n\n\"What?\" I ask, not sure if I heard her right or if my lustful mind was simply hearing what I wanted to hear.\n\n\"I said, you don't have to go. I mean, you were here while I did it and, well, I-I-I wouldn't mind if you did it here too,\" she says, her words uncertain as if she isn't really sure she can get the words out.\n\n\"Are you sure?\" I ask, though it is mostly for show, as I am already moving back onto the bed.\n\n\"Yes, I...\" she says, before stopping and biting her lip briefly before continuing, \"I want to watch.\"\n\nAt this I feel a wave of pleasure shoot through my body and I know that I won't be putting on much of a show for her, probably coming the second I touch myself.\n\n\"How...\" I have to stop and swallow before being able to get the rest of the words out. \"How would you like me to lie?\"\n\nThe thought of her directing my masturbation excites me to the point where I feel my entire body start shaking.\n\nAt my question her eyes open wide in surprise, but it doesn't last long, before a look of concentration mixed with excitement takes it place.\n\n\"Maybe on your knees? That way I can...see,\" her voice breaks on the last word as if not really believing that she would say such a thing.\n\nIn my aroused state I don't hesitate for an instant, immediately rolling onto my knees, with my lower parts facing her. I spread my legs apart to give her as good a view as possible, and lower my upper body down to the mattress.\n\n\"What would you like me to do?\" I ask. The only problem with this position is that I can't see her reaction to my words, but I hear her move on the bed and feel it dipping down behind me as she moves closer.\n\nI feel her hot breath against my wet pussy, showing just how close of an examination she is making. The breath hitting me, causes my vaginal muscles to contract and a loud moan to escape my lips.\n\nThe knowledge that she would have been able to see my vagina moving, combined with her continued breathing against my wet folds is almost enough to send me over the edge without even having touched myself, but I am determined to hold on and give her what she wants.\n\n\"Touch yourself,\" she whispers. I can feel the air of each word hit me, sending waves of pleasure through me.\n\nPart of me had been hoping for more detailed instructions, but given her lack of experience her simple request is completely understandable and I don't waste any time complying.\n\nMy right hand flies between my legs, moving so fast that when it reaches the wetness between my legs it hits with a slapping sound and I give a loud yelp as a stab of pleasure mixed with pain hits me.\n\nI don't let that stop me however, quickly plunging two fingers inside me and angling them so that they press against just the right part of my inner walls. At the same time, my palm is pushing against my clit, adding to the pleasure coursing through me.\n\nI start moving the hand fast, the fingers and palm both moving against their pleasure zones in a frantic way, all control having been pushed from my mind by the all enveloping need to cum.\n\nI start moaning loudly, doing nothing to keep my volume down.\n\nMy excitement is rising rapidly, my orgasm quickly approaching as wave after wave of pleasure crashes through me, but before I can reach the top, I feel a hand on my left butt cheek, pulling my cheeks apart and hear a voice ask, \"Can you touch yourself back here too?\"\n\nAt the words I feel my orgasm starting, but not wanting to disappoint the voice, I put my free hand back there and push my middle and index fingers against my tight asshole. The fingers don't slide inside, as there isn't any lube to allow easy entrance, but the touch still sends another shockwave of pleasure through me, pushing my orgasm to new heights.\n\nThe touch of my fingers against my asshole, pushes the pitch of my moans up making them more akin to screams and I feel my vaginal muscles continuously contract and release my fingers. I also feel my asshole pulse against the fingers pushing against the opening, still not letting them slide inside, but letting them tease the entrance.\n\nThrough all of this I am still keenly aware of the hand on my butt cheek, which has now started making gently circles, caressing my skin.\n\nThe pleasure continues rising until eventually my mind drowns in it, making the rest of the world disappear, the pleasure the only thing that exists.\n\nI don't know how long my mind spends in that blank space of pleasure, but it feels like way too short. When eventually I start becoming aware of my surroundings again, I feel something that almost makes up for the loss of that pure pleasure state.\n\nAt some point I have turned onto my side and I feel a soft body up against me, holding me tightly against it.\n\nUnlike when I held her, Anna hasn't kept back, completely entangling our bodies. Aside from her arms around me, I also feel her breasts pressed against my own and one of her legs is between mine, her thigh pressed against my wet pussy, just as I previously imagined. Our position also means that my own thigh is between her legs, her soft wetness pushed against it.\n\nIf I wasn't just coming down from one of the best orgasms in my life I am sure that my current position would be an instant turn on, but as it is all I feel is a nice warmth spreading through my body and a deep feeling of contentment settling over me.\n\nI open my eyes and immediately meet Anna's eyes, her face right in front of mine.\n\n\"Hi,\" she says, a smile lighting up her face. \"Can we do this again some time?\"\n\n--------------------------------------\n\nThis story is relatively heavy in dialogue. As I believe I mentioned previously I am not really comfortable writing dialogue, so I decided to push through it and write a story with a lot of it. Some of the dialogue in this story is a bit (or actually a lot) awkward, but that is largely intentional, trying to portray the awkwardness of the characters. Hopefully this shines through. I would really appreciate feedback on the dialogue. Does it work? Do you guys like it? Is there anything that could be better?\n\nYou might have noticed that this story ends in a way that leaves a lot of room open for further developments. This is done on purpose, as I am considering continuing this story with another one and possibly even more after that. That will however depend on how this one is received, so if you like this story and want more, then please leave a comment letting me know.\n\nThank you for reading and I hope you enjoyed the story.\n\n \n"
    ],
    "authorname": "I_am_just_writing",
    "tags": [
        "female masturbation",
        "finger",
        "fingering",
        "masturbation",
        "orgasm",
        "roommate"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/roommate-interrupts-my-butt-play"
}