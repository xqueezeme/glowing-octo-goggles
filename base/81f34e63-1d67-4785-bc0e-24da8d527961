{
    "title": "Ladies and their Butts Ch. 03",
    "pages": [
        "A few months later, Beth and I had moved in together, and Fiona came over regularly for threesomes. I'd always wanted a more in-depth version of the story of how they met, so I asked them, and here it is.\n\nBeth had been a flight attendant for a few years. And she took her job very seriously, but one of the main draws for her was being able to meet new people and have one night stands all the time. She liked to fuck passengers, in other words. Never on the plane, though. Like I said, she took her job very seriously and didn't want to get fired, but she didn't see a problem with discreetly slipping her hotel information to anyone she found attractive. She's told me quite a few stories about her experiences during this time. Maybe I'll write a few more of them down one day.\n\nSometimes, of course, nobody would show up. They'd get cold feet, or they were in committed relationships, or the men were gay, or the women weren't. Or sometimes there just wouldn't be anyone on the plane who tickled her fancy. And there would be Beth in her hotel room, waiting and excited and ready in her sexy underwear but with nobody to come and help relieve her. So she developed a great appreciation for porn. She was a true connoisseur.\n\nBy this point, she was already deeply fixated around anal sex, too. So she liked anal-related porn in particular. And one person who kept cropping up in it was Fiona Inverness.\n\nSometimes Fiona was taking a cock up her ass, but more often, she was the active participant, fucking another girl - or, occasionally, guy - up the ass with a big hard dildo. A lot of these also had an aspect of seduction to them: Fiona was a bad-girl predator, beguiling her innocent friend who had - within the story of the porno, anyway - never been with another woman before, or taken it up the ass before.\n\nIn Beth's favourite, another girl's boyfriend has been asking her for anal sex, and she confides in her worldly best friend, Fiona, asking her advice. Fiona assures our heroine that it's not so bad, and offers to help her prepare for it and show her how to really enjoy it, before, naturally sodomizing her senseless with a candy-cane pattern strap-on, because this is a Christmas-themed porno, so they're both wearing Santa hats too.\n\nFor Beth, the idea of being seduced into anal sex with Fiona Inverness was the hottest thing she could think of. Of course, she was hardly a virgin by this point, and pretty experienced when it came to butt sex in particular, but in her fantasies, she liked the idea of being the one who got seduced, the innocent on the verge of corruption, even when in practice she was almost always the initiator. Now that she's in porn herself, she usually winds up playing the ingenue, though she had a brief phase as an oddly perky dominatrix.\n\nSo imagine her surprise when she saw Fiona Inverness on the plane she was working. First class, naturally. She felt her heart speed up as she recognized her, sitting neatly in her seat in a smart twill suit, reading a copy of The Strange Case of Dr. Jekyll and Mr. Hyde as they awaited takeoff. Beth swallowed the butterflies down and began making her rounds, taking people's orders.\n\nWhen she got to Fiona, she smiled brighter than before. She knew, right away, that this was a once-in-a-lifetime chance, and that she wouldn't let a chance with her favourite porn star pass her by.\n\n\"My name is Beth, and I'll be your flight attendant today. Can I get you anything, miss?\" she asked, leaning over a little further than usual, allowing Fiona a glimpse down her top. Fiona, much to Beth's elation, took a moment to admire her cleavage before responding.\n\nFiona had fucked flight attendants before, though never one quite so lovely. Beth was far from being the only person in her profession who liked to sample the passengers, and a woman as beautiful and as sexually aggressive as Fiona could basically pick and choose wherever she went. She was flying to Miami to do a scene. Had Beth been present when Fiona passed through security, she would have been impressed with the shameless way the redheaded woman had declared the assortment of dildos, vibrators, butt plugs, and anal beads she was travelling with. None of these were necessary for the scene. Fiona just liked having them handy, in case an opportunity presented itself.\n\n\"What kind of whisky do you have?\" she asked Beth now, already sure she was getting a definite fuck-me vibe off her sexy British attendant. Beth showed her the list and she chose.\n\n\"I'll be right back with your order,\" said Beth, and winked. She turned around to take the order of the man across the aisle from Fiona now. Again, she bent over a little more dramatically, sticking her round bum out a little. This drew appreciative glances from a number of people along the aisle; Beth was practically oozing sex, and Fiona wasn't the only one to notice, although notice she certainly did. As Beth stood back up, she snuck a quick look back at Fiona. The two made eye contact just for a second before pulling away, but both were smiling.\n\nA few minutes later, Beth returned with her cart, carrying all the orders.\n\n\"Anything else I can get you?\" she asked Fiona.\n\n\"Perhaps later,\" said Fiona, subtly reaching out a finger, below the general eyeline, and stroking, oh so gently, against Beth's leg. Beth's heart was pounding with excitement now. They were making perfect eye contact now, and Beth, very, very subtly licked her lips. Fiona just grinned.\n\nThroughout the flight, Beth would sneak a quick flirt with Fiona whenever convenient, but after her initial display, she kept things a lot subtler. The other attendants mostly caught on but knew not to worry about it; they all liked Beth and knew that she wouldn't let it interfere with doing her job.\n\nToward the end of the flight, Beth was ready to make her move: she'd written down her hotel and room number on a piece of paper - along with \"see you there?\" and a drawing of two female symbols and a pair of kissy lips - and was heading towards Fiona's seat, planning to surreptitiously slip it into her possession. But as she was heading over, she almost bumped into the very object of her attention just outside the bathroom stalls.\n\n\"Hi,\" said Fiona, a predatory look in her eyes.\n\n\"Well, hello there,\" Beth reciprocated, a nasty look on her face. Fiona slowly opened the bathroom door and gave Beth a meaningful look. \"I can't,\" whispered Beth, moving in closer. \"I could lose my job.\" Fiona's face fell. \"But...\" Beth drew the paper from her pocket. \"Maybe we can see each other after landing? Unless you've got any plans?\"\n\nFiona grinned and took the paper from her.\n\n\"Love your work, by the way,\" whispered Beth, and Fiona's grin got bigger.\n\nA few hours later, Beth was sitting in her hotel room, waiting. She'd ordered a bottle of champagne, and it was ready beside the bed, as was she. She'd given herself an enema, taken off her makeup, stripped down to her stockings and a blue g-string, but put back on the hat and jacket that came with her uniform. This was her usual mode of dress when waiting for airline hookups to arrive, a quick reminder to her paramour that yes, they were fucking the stewardess.\n\nShe had done this many times, but this time was different: Fiona Inverness was coming. She was jumping at sounds, thinking every footfall in the corridor was Fiona, dreading the possibility that she would, in spite of it all, be alone tonight, that she wasn't pretty enough.\n\nFinally, a pair of heels click-clacked through the hallway before stopping at her door, and there was a knock.\n\nShe got up, heart in her mouth, and moved to the door, her breasts moving freely underneath the open blazer. She opened the door a crack, and there was Fiona, radiant, in a brown tweed overcoat, with a neat leather suitcase at her side. Fiona slipped inside without a word and looked Beth up and down, savouring every inch of her. Then, suddenly, she dropped the suitcase and lunged, grabbing the blonde woman's wrists and pinning her to the wall, moving in for a deep kiss. Beth gasped her excitement into Fiona's mouth, and their tongues entwined between open lips. Fiona's attention gradually moved downward, leaving a trail of light kisses along Beth's neck and down to her exposed breasts. She pulled the jacket aside and let it fall to the floor, hurriedly, aggressively sucking and kissing Beth's extremely erect nipples. Her hands were still above their heads, holding the wriggling Beth to the wall. Not a word had passed between them since Fiona arrived. At last, Fiona pulled back, and removed her coat, revealing her own absolute nakedness underneath it, save for a pair of heels. She stood, almost defiantly, in front of the admiring Beth, Viking art tattoos on full display, breasts firm, nipples standing to attention, cunt already wet and framed by a single strip of neat, ginger hair. Beth was open-mouthed with lust and excitement, appreciating the body she had seen a thousand times on her laptop screen, but now, finally, in person, and offered to her.\n\nFiona dropped down to her knees now in front of Beth, running her hands down Beth's sides, from her full, firm breasts to her narrow waist and down to her round, shapely bum. She hooked her fingers into Beth's panties and began, slowly, to pull down, looking up at Beth as though asking for permission, confirming that this was what she wanted. Beth's breathing was shallow, her excitement palpable, and she nodded. That was all Fiona needed; she slid the g-string down and off, and saw Beth's pink cunt for the first time. Finally, Fiona broke the silence. \"Oh, Beth,\" she said at last. \"You're beautiful.\" And without another word, she leaned in and put her tongue to Beth's highly excited clitoris.\n\nIt was all Beth could do to stay standing. Fiona's oral technique was phenomenal; it had been a long time since she'd been eaten out with such skill or enthusiasm. Her hands were free now, and she gleefully ran them through Fiona's long red hair, holding the other woman's face to her very wet crotch, and grinding against her.\n\nBefore long, Beth's orgasm came as simply as turning on a faucet, and with more or less the same effect. Fiona stood up, lifting her soaked face level with Beth's. The blonde girl wrapped her arms around the redhead and pulled her in for another kiss, eagerly licking her own juices off of Fiona's face and sucking her own taste from Fiona's tongue. \"Did you like that?\" asked Fiona, wickedly.\n\n\"That was amazing,\" said Beth. \"Just amazing.\"\n\n\"I knew my sexy stewardess had a wild side,\" said Fiona, rubbing her breasts against Beth's. \"It just needed a little bit of bringing out.\" She pulled back now, but pulled Beth with her, before falling backward onto the bed. She opened her own legs now, revealing the wetness of her own cunt, and let her hand move to Beth's chin, slowly drawing the curious blonde in.\n\n\"This is like a dream come true,\" said Beth, before diving in. She peeled the lips of Fiona's pussy back with her gentle fingers, and began to gently tease her swollen clitoris with her tongue.\n\n\"God damn,\" said Fiona, running her own fingers now through Beth's short blonde hair. \"You really know to eat pussy, girl.\"\n\nInwardly, Beth was beaming. She knew she was good at eating pussy, but hearing it from her favourite pornstar - the woman she considered the pinnacle of female sexiness - was deeply gratifying nonetheless. She slowly inserted her right index finger into Fiona's vagina and began to work it. Fiona gave a low sigh of pleasure. \"Hmmmmm... ooh, yeah. Yeah. Just... just like that. Oh damn. Give me another finger.\" Beth was keen to oblige. Her fingers slid easily in and out of Fiona's wet, juicy hole. \n\n\"Do you want to taste yourself?\" she asked.\n\n\"I guess I could,\" said Fiona. \"That's a bit of a turn-on for you, isn't it?\"\n\n\"Mmmm-hmmm,\" sighed Beth. She reached up her fingers toward Fiona's lips and Fiona sucked them, gently. In her line of work, this was a taste she'd gotten to know, and never a specific turn-on for her but certainly not a problem, especially if it got the blonde stewardess to work on her clit with added urgency.\n\nBeth's hands slid up Fiona's tummy and began to play with the redhead's firm, well-defined tits, pinching and squeezing, at first gently but forcefully, and over time, the gentleness subsided. Fiona threw her head back and gave a low, satisfied moan, her eyes drifting closed as she let Beth work. Before long, she felt her own orgasm welling up inside her, and it drifted over her like a warm bath. She took a moment to catch her breath and then moved a hand down to Beth's chin, drawing her up. Beth moved up the bed until the two were nose to nose, and put her arms around Fiona.\n\n\"I'm so happy,\" she said.\n\n\"You're a treasure,\" said Fiona, pecking Beth on the cheek. Both of them had each other's pussy juice dripping down their chins but neither minded one bit.\n\n\"We aim to please,\" giggled Beth, stroking Fiona's long ginger hair.\n\n\"And you did please me,\" said Fiona, moving a hand around Beth's waist and resting it, gently, on the other girl's bum. She had a rough idea of what she wanted to do next, once they had both had a few minutes to gather their strength. \"It's been a long time since I've had service of this quality.\"\n\n\"Would you like some champagne?\" asked Beth. \"I almost forgot about it.\" She sat up, slowly and reluctantly breaking from the cuddle, and poured them each a glass. Fiona never took her hand away from Beth's bum.\n\n\"A toast,\" said Fiona. \"To fucking.\"\n\n\"I'll drink to that,\" said Beth.\n\nBefore long both of them were starting to feel regenerated, and the close proximity of the cuddling, together with the effects of the champagne, had gotten them both turned on again. Beth, the consummate tease, pretended nothing was happening but slowly, very slowly, started to grind her bottom against Fiona's appreciative hand, driving the redhead into a state of bewildered lust.\n\nAnd then she asked the question.\n\n\"Fiona? You know how, in some of your videos, you... I don't know how to put this... you put on a strap-on and...\" Every pause was carefully calculated.\n\n\"Yes?\" Fiona asked, breathless, fingers grazing against Beth's tight anus. Beth pretended not to notice, adding to Fiona's agitation.\n\n\"And... stick it up other girl's bottoms? Is that... is that something you like to do in private, too, or just for the sake of the videos?\"\n\nFiona's excitement was palpable in the air. Beth had said the magic words and Fiona was hooked. Beth had never felt so wanted in all her life.\n\n\"It's... a bit of a kink of mine. Why? Did you want to...?\" Fiona let her question trail off.\n\n\"What? Oh no, of course not. I was just wondering. I don't understand why anyone could ever be enough of a pervert to actually enjoy that.\" But her words were teasing, her judgemental pose a mockery, and Fiona knew it. \"Why? Did you want to do that to me?\" She was smiling openly now, teasing. She openly pushed her bum back against Fiona's hand, grinding.\n\n\"I would like very much do that to you, Beth,\" said Fiona, practically begging now. \"If you'll let me.\"\n\n\"We-e-e-ll...\" said Beth. \"I guess we could, if you really want to. But only on one condition.\"\n\n\"Anything at all,\" said Fiona. Beth was delighted. She had her favourite pornstar in the palm of her hand, begging for the privilege of fucking her the way she, Beth, already liked it best. She was in control, even if Fiona had been put in the role of aggressor.\n\n\"You've got to eat my ass first,\" said Beth.\n\n\"I'd love to,\" said Fiona, giving Beth a grateful squeeze. \"Let me show you my toys.\"\n\nShe got up from the bed, Beth sitting up along with her, and went to her suitcase, almost forgotten beside the door. \"Oh, you don't mind if I spend the night here, do you? Lets me save on hotel fare.\"\n\n\"No problem at all,\" said Beth. \"I hate sleeping alone anyway.\" She was sitting up on the bed now, still naked, her mammoth tits beginning to stand up subtly, signalling her re-arousal. Fiona reached into the suitcase and pulled out a smaller case, like an attache. She brought it to the bed and opened it up. Beth's eyes widened at the sight.\n\nInside were two strap-ons of different sizes, one flexible double-sided dildo, a butt plug, a set of anal beads, and a good-sized tube of lubricant. Beth felt like a kid in a candy store. Which ones to use? Her blue eyes roved over the toys, and her fingers tracked slowly over them as well, enjoying the feel of Fiona's collection. Her other hand shot down to her cunt, and began, lightly, to flick her clitoris.\n\n\"I think this one,\" she finally said, picking the larger of the two strap-ons. Fiona grinned. \"But I'm adding another condition.\"\n\n\"What's that?\"\n\n\"I want to put these beads in you first,\" said Beth, grinning nastily, eyes narrow with lust. \"If you're going to sleep in my bed and the only thanks I get is being sodomized, I think that's fair.\"\n\n\"That's very fair,\" said Fiona. \"Come here, kitten.\" She drew Beth into an embrace, the two women passionately kissing, both deeply aroused. Beth kept up her prudish facade but they both knew she wanted this as much as Fiona did, that they were perverts on equal footing.\n\nFiona broke the kiss and lay down on her belly, sticking her firm buttocks in the air. Beth leaned in and gave her a wet kiss on the right buttock. \"I think I'm going to eat your bum a little bit, too,\" she giggled. \"You don't mind?\"\n\n\"Not at all.\"\n\n\"Smashing,\" said Beth. Her kisses turned into a light bite, and she began to softly drag her teeth along Fiona's smooth pale skin, toward her puckered hole. Beth gently stuck her tongue out and lightly flicked against Fiona's anus, delicate little kisses on her asshole, before grabbing both cheeks and spreading them wider apart. She moved her hands in a powerful massage, caressing and moulding Fiona's buttocks to the contours of her hands. Her tongue movements became harder now, probing aggressively into Fiona, savouring the taste of her. The redhead gasped; she was a girl who liked getting her ass eaten as much as anyone, but this was truly something special.\n\nFinally Beth reached for the tube of lubricant and squeezed a dollop of it onto her fingers. In moments, she was smoothly finger-fucking Fiona's hungry asshole, much to the delight of the redheaded girl. Fiona's hand slid down beneath her body to her coppery curls, and she started, aggressively, to masturbate.\n\nBeth was gentle but forceful, fingering Fiona exactly as she herself liked it. She had her lover on the verge of an orgasm when she finally pulled out her fingers, leaving a gaping void behind. Fiona moaned at her sudden emptiness, before feeling the first bead pop, suddenly, in.\n\n\"Oh, there it is,\" she moaned.\n\n\"That's the first one,\" said Beth. \"So you like travelling with anal beads?\" She stuck her face down to Fiona's asshole and licked it again, where the cord still stuck out. Fiona squirmed with pleasure.\n\n\"I can't always find a pretty little flight attendant to keep me company,\" said Fiona. \"Sometimes I need to- oh!\" She cried out as Beth slid another bead past her sphincter and into her. \"Sometimes I need to unwind on my own.\" Beth could relate to that - it was how she'd discovered Fiona in the first place, and she owned a few toys as well.\n\n\"What would you be doing right now if you weren't here?\"\n\n\"I'd be in my room, fantasizing about this,\" said Fiona. \"About fucking the hot blonde stewardess from the plane. And I'd probably... \" Another grunt as another bead went up her hole. \"Ooh. I'd probably have the beads up my ass and one of those other toys up my snatch.\"\n\n\"You're such a pervert,\" said Beth.\n\n\"I am! Oh fuck, I am!\" Another bead. Four of them now. And a fifth. \"What would you be doing?\" Fiona asked.\n\n\"Probably watching porn. Maybe something with my favourite actress. I don't know if you know her. Her name is Fiona Inverness.\" She slid another bead in. \"I'd watch her put on a strap-on and sodomize some lucky lady, and I'd wish that lady was me. And then. Just maybe...\" She popped in the seventh, final bead. All that was sticking out of Fiona's asshole now was the little loop at the end of the cord, like a sexy tail. \"Maybe I'd put my own anal beads in,\" Beth said. She planted a wet kiss on the side of Fiona's ass and the other woman gave a shiver of pleasure.",
        "\"Is that all of them?\"\n\n\"That's all of them,\" Beth said, lying next to Fiona, on her tummy. She ran a hand through Fiona's bushy red hair. \"I wish I had hair like yours,\" she said.\n\n\"Holy fuck,\" said Fiona, still getting used to the beads in her ass. She'd used them many times before, of course, but she always reacted this way.\n\n\"Come here, sexy,\" said Beth. \"Lick my bum.\" Fiona awkwardly pulled herself up onto her hands and knees and moved down the bed, until her face was level with Beth's bubble butt. She took a moment just to look at it and appreciate it.\n\n\"This is the nicest ass I've ever seen,\" said Fiona. \"You should be in porn.\"\n\n\"Really?\" asked Beth.\n\n\"All the pussy you can eat,\" said Fiona. \"Are you into guys, too?\"\n\n\"Yes...\"\n\n\"They'll be lining up to fuck you. You can have them two or three at a time.\"\n\n\"That sounds nice, but do shut up and start licking.\"\n\nFiona chuckled. \"Maybe I won't. Maybe I've changed my mind and I'm too tired to butt-fuck you.\"\n\n\"Noooooo...\" whispered Beth.\n\n\"Do you want me to? Admit you want me to.\"\n\nBeth saw where this was going now. Her teasing little power play was backfiring on her. But she was desperate for it now. Putting the beads up Fiona's ass had brought her to a level of excitement where she needed release more than anything now. \"Please. I want you to. I need you to.\"\n\nFiona smiled and slapped Beth's ass. \"That's more like it.\" And suddenly her tongue was in Beth's bum, probing, teasing, exploring. Beth gave an excited squeak of joy and reached her hand back, holding Fiona's head in place and tousling her red hair as she serviced Beth's sensitive anus.\n\nBeth knew she could come from this alone but she wanted more, wanted to be penetrated and sodomized by Fiona. She passed back the lube and gave Fiona a pleading look.\n\n\"What do you want me to do with this?\" asked Fiona.\n\n\"You know what,\" moaned Beth.\n\n\"I want to hear you say it.\"\n\nBeth sighed. \"Lube me up and bugger me with that big dirty dildo,\" she begged.\n\nFiona smiled and got to work massaging the lubricant into Beth's tight rectum. \"And you were going to let me think I was the pervert,\" she scolded, still teasing. \"For shame.\"\n\n\"I knowww...\" moaned Beth, as Fiona's fingers moved in and out. \"I'm such a bad girl.\" Fiona was thrilled by Beth's responsiveness to her every movement, and enjoying the sense of fullness the beads were bringing to her own ass.\n\nShe pulled back and began to strap on the dildo. \"You're a very bad girl,\" she said. \"You're a dirty little slut.\"\n\n\"I'm not...\" protested Beth, raising her ass up.\n\n\"You are,\" said Fiona. \"But luckily...\" she hovered the tip of the dildo around Beth's anus now. And then she leaned in to the blonde girl's ear and whispered \"so am I.\"\n\nBeth sharply inhaled, but the breath was pushed back out of her as the dildo slid, smooth and swift, up her bum. \"Fuuuuuuuck,\" she moaned, as Fiona slowly pulled back out.\n\nBeth was in an almost trance-like state now, with the prosthetic cock moving in and out of her anus. Her every sensation was heightened; she could feel Fiona's heartbeat above her, feel Fiona's nipples drag along her back as the redhead thrusted, feel the ridges of the toy move in and out of her with just the slightest friction. Suddenly it stopped. Another of Fiona's games. She gave a moan of frustration.\n\n\"Oh, did you want me to continue?\"\n\nBeth nodded, too stunned to speak.\n\n\"No, I want to hear you say it,\" said Fiona. \"Say you're a dirty little slut like me.\"\n\nUnder other circumstances she might have played coy, and weakly protested, but she needed this too much for games now, and without hesitation, sputtered out \"I'm such a dirty little slut, Miss Inverness. I need you to sodomize me. Please.\"\n\nSuddenly the thrusting returned, drawing a long, low moan from the bottom of Beth's stomach. \"That's better,\" said Fiona, laying a light kiss between Beth's shoulders. In her hypersensitive state, the kiss was almost painful it felt so good, and Beth's breathing hitched as she hit orgasm.\n\n\"Ohhhh, that feels so good,\" she moaned.\n\n\"I'm not done with you yet,\" said Fiona.\n\n\"No,\" gasped Beth. \"Please keep going. I can come a few times this way.\"\n\nThey kept this up for what felt like hours of sheer anal bliss, both women's rectums thoroughly full, Beth gleefully submitting to Fiona's domination, Fiona revelling in Beth's unfettered genuine enjoyment of their sodomy. Fiona fucked Beth to a second and third orgasm before she could feel her own starting to build. \"I'm gonna come,\" she said, almost like a declaration.\n\n\"Please do,\" gasped Beth, grinding back on the invading toy.\n\nFiona started to pick up the pace, desperate for relief, butt-fucking Beth harder and faster than she'd ever butt-fucked anyone before. She was afraid her eagerness would be too much, that she was hurting the gorgeous flight attendant, but Beth was loving every moment of it still, and from the growing pitch of her grunts, reaching her fifth orgasm of the night, counting the cunnilingus earlier.\n\nBeth could feel both of their orgasms building up, and knew just the trick to push Fiona over the edge as her own began to crest. She slid her hand back around Fiona, toward the redhead's freckly bum, and gently grabbed a hold of the end of the cord sticking out of her naughty little hole.\n\n\"You're such a slut,\" groaned Beth, the dildo penetrating deep within her bowels. \"All I had to do was tell you I was a slut too and you gave me all the buttsex I wanted.\"\n\nBefore Fiona could reply, Beth smoothly pulled the beads out of Fiona's ass, all at once. The sudden pulling-out sensation was too much for Fiona, and she gasped out her magnificent climax. At the same moment, Beth's own orgasm struck, and her pink vagina gushed with juices. Both ladies' knees went weak, and they collapsed onto each other on the bed, Fiona still straddling Beth. She gently reached down and pulled the strap-on out of Beth's well-fucked hole, and then put her arms around her, squeezing the blonde against her own body.\n\nFiona fell asleep first. Beth was too excited, too stunned by her own achievement, and needed some time to process it. She lay awake, the little spoon, looking at the beautiful ginger woman who lay, admiringly, beside her.\n\nWhen Beth woke up, Fiona was no longer beside her. For a moment, she felt a panic that it had all been a dream, but no, there was the briefcase by the side of the bed. She looked up to see the bathroom light on, and her ears registered a sink running. Fiona was brushing her teeth. Beth stretched her arms, pulled the blanket up around her chin, and gave a contented sigh. Life was good.\n\n\"You awake?\" asked Fiona.\n\n\"Yes I am, pretty girl,\" said Beth.\n\n\"I had a really good time last night,\" said Fiona.\n\n\"Me too.\"\n\nFiona stepped into the room. She had on a hotel bathrobe, and her hair was wrapped in a towel, as though she'd just emerged from the shower.\n\n\"You took a shower without me?\" asked Beth.\n\n\"I can't stay,\" said Fiona. \"But think about what I said last night. About trying porn.\"\n\nIt was too early for Beth to make career decisions like this. She looked at the clock by the bedside. Just after 8. Yeah, too early.\n\n\"I don't know,\" said Beth.\n\n\"Just think about it. I'm going to give you a copy of my business card, at least. That way...\" she sat on the bed beside Beth and kissed her lightly on the nose. \"Next time we're in the same city we can meet up and do this again.\"\n\n\"Mmmmm, that sounds nice,\" said Beth, running her fingers through Fiona's red hair. \"You're suuuure you don't have time for some quick morning sex?\" She tossed the blanket aside, exposing her voluptuous body.\n\nFiona sighed. \"Well, okay.\" She glanced at the clock. \"I guess I have a few minutes. And I can't say no to those big blue eyes.\" Smiling, she lowered her face down Beth's body, toward her moistening cunt."
    ],
    "authorname": "Primate_House",
    "tags": [
        "lesbian",
        "anal",
        "stewardess",
        "slut",
        "dildo",
        "toys",
        "beads",
        "eating ass",
        "ass",
        "cunnilingus"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/ladies-and-their-butts-ch-03"
}