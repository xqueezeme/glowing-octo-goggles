{
    "title": "Crimes, Torts, and Trials",
    "pages": [
        "This is yet another departure from our typical fare. Will wrote the prior (A Butterscotch Sky), and I (Devo) am offering this multi-character, multi-arc story, with segments related by each in first person.\n\nThe original version of A Walk Changed Everything rates fairly high, so we know that our readers don't shy away from complicated stories. I'm hoping for the same as I offer this tale. After all, everything any author writes is an experiment.\n\nSo far, only one of our tales is written in anything other than first person. This one is written in a number of first-person points of view, and a few segments are in third-person. Since I mentioned \"A Walk,\" don't worry here. It's written in linear time.\n\nFinally, Will helped me with a crap-ton of research for this tale. We couldn't find legal experts that were willing to consult without paying for their time, and the attorneys we personally know don't practice in the fields described. If you do, please suspend some disbelief if we depart from reality.\n\nCOVID isn't a thing in this story. Fiction, right? And, as always, all characters engaging in intimacy are older than eighteen.\n\nWe hope you enjoy Crimes, Torts, and Trials<hr>\n\n<center>CHAPTER 1</center>\n\nRIVER<br>Wednesday, July 24, 2019\n\nMy right thumb was so far inside her that I couldn't stick it in any deeper. I pressed it toward the bone I felt at its pad. I hoped what I was doing would work because I had no clue what else to try. She was beginning to move a little again, and that was encouraging. The moans I heard were also encouraging because it all meant she was still alive.\n\n\"Who has a 911 operator on the line?\" I shouted without looking up to the half-dozen or so people observing the spectacle from various positions and distances.\n\nThough every single person held a phone in a hand, not a single one answered.\n\n\"Idiots doing it for the gram,\" I mumbled to myself as I pulled my own phone from my pocket with my free hand.\n\nThank god I'd recently added my left thumb's print to the Touch ID.\n\n\"911. What is your emergency?\" said the operator that answered after probably two minutes of being on hold.\n\n\"I'm with a female, approximately twenty years of age. I think she's been shot. She was bleeding profusely from her leg. I need an ambulance and police near the intersection of 31st and Indiana. On the south side of Dunbar Park.\"\n\n\"I have your location. Police are already in the area. Second Fire Battalion is responding. It's less than a mile away. Stay on the line with me.\"\n\n\"Okay, but I need to put my cell down. I'm putting you on speaker so I can use both hands to keep pressure on her wound. Give me a few seconds.\"\n\n\"I understand. What's your current status?\" the operator asked.\n\n\"I have my thumb in the wound. I'm trying to stop the bleeding.\"\n\n\"Perfect. Keep doing what you're doing until an EMT advises otherwise.\"\n\nWithin seconds, I heard the wail of sirens approaching from the south and saw a police cruiser's flashing lights rounding the corner of 31st to the west. The evening rush hour had long since ended, so I was hopeful the EMTs would be able to quickly navigate the less than a mile's worth of streets that otherwise would have been congested.\n\nTwo officers exited the cruiser. The shorter one spoke first.\n\n\"Oh, look! It's Markie!\"\n\nI didn't look up when I said, \"Give it a rest. I literally have my hands full right now, okay?\"\n\n\"Oh, shit,\" the taller gasped when he grasped the meaning of my words. \"What happened?\"\n\nThe shorter cop pissed me off, and I was a bit terse with the other as a result.\n\n\"I'm pretty sure she's been shot. I mean, there's this hole in her thigh, but how would I know what made it? I heard what I thought were firecrackers. This lady had just jogged by me going the opposite direction, and I heard her collapse behind me. At first I thought she just tripped or something, but then she grabbed her leg, and I saw her bleeding. She lost consciousness a few seconds later.\"\n\n\"The firecrackers. The shots. Where'd they come from?\" the man asked.\n\n\"It sounded like they came from the direction of the softball field,\" I answered, pointing northward with my head because my hands were occupied.\n\n\"What did you hear?\"\n\n\"Like I said. I thought it was firecrackers.\"\n\n\"Yeah. I get that. Can you describe it better? We were already nearby. Dispatch had already received a couple of calls of gunfire in the area.\"\n\n\"It was like... bang. Bang&ndash;bang&ndash;bang.\"\n\n\"Four shots?\"\n\n\"Yeah. I think so. One, then three more a few seconds later.\"\n\n\"Did you see anyone?\" the officer asked.\n\n\"No one except a few dog-walkers, this jogger, and the idiots that were videoing the whole thing that have suddenly and miraculously disappeared. There was also a pair of people riding a tandem bicycle along the other sidewalk across the street.\"\n\n\"Units on TAC-3, check the vicinity near and north of the Dunbar Park softball field. Witness heard shots from that direction,\" the officer spoke into his radio's shoulder-clipped microphone.\n\n\"Justin, don't waste your breath. I'll fill you in later,\" the shorter policeman said.\n\nLess than a minute elapsed before two CFD trucks and an ambulance arrived along the curb.\n\n\"Move back, please,\" a rather rotund EMT, already wearing blue exam gloves, demanded.\n\n\"I don't think I should,\" I said.\n\nI removed my left hand from over my right, affording the EMT a view of the situation.\n\n\"Oh. Yeah. Don't,\" he said, jaunting back to the ambulance as another EMT went to work placing an oxygen mask and checking vitals.\n\nThe bigger guy then returned to me. He unwrapped a couple of items. One was a packet of granules, the other an applicator he deposited them into. He readied himself, placing his hands next to mine.\n\n\"When I say three, remove both of your hands and move back,\" he said.\n\n\"Understood,\" I responded.\n\n\"Okay. One&ndash; two&ndash;\"\n\nI removed my thumb from the wound one second later and the EMT placed Celox granules into the wound.\n\n\"You did a good job slowing the blood loss. We'll take it from here. One of the guys over there will help you clean up,\" he nodded toward some firemen who seemed more than willing to assist.\n\n\"Aw, did you get your pretty little hands dirty?\" the short officer taunted as I walked toward the firemen.\n\nI thought about giving him a piece of my mind, but decided I didn't need to waste my time.\n\nA particularly observant firefighter must have somehow sensed my thoughts, or maybe my face conveyed them.\n\nHe said, \"I know what you're thinking, but don't do it. That particular ass-hat is known for being a bit heavy-handed, and I'm not sure it matters to him that you're a woman.\"\n\n<center><hr style=\"width:50%\"></center>\n\nMy name is River Marquette. I don't like it shortened to Riv. I'm not French, so it's not pronounced Rev\u00e9e, and don't ever call me Markie. Once I'd kicked enough asses in the Corps, the others in my unit caught on quickly enough to address me as simply Sergeant Marquette, or River when ranks weren't required.\n\nI put in my time, serving the last part of it in Okinawa doing training stuff with other countries. In my current job, I get along just fine with most police officers, but a few didn't seem to care for me too much.\n\n<center><hr style=\"width:50%\"></center>\n\nOne of the guys motioned me over to the side of the truck.\n\n\"Stand back a bit. This might come out a bit fast at first,\" he said, uncapping a bulkhead where a hose would normally be fitted. He pulled a lever and water poured out onto the ground, splashing back on my leggings at my shins before it slowed to a suitable flow.\n\n\"Sorry 'bout that,\" he said sheepishly.\n\n\"Don't worry about it,\" I said, stepping forward so I could at least try to rinse the drying and coagulating blood off my hands.\n\nThe water did a decent job, but thankfully, another firefighter came alongside with a pump of antiseptic soap and a few paper towels. I held my palms out and he deposited blobs into both. The soap helped a lot, but I'd have to worry about the undersides of my fingernails later.\n\n\"Can I ask you a question?\" the guy supplying the water said.\n\n\"Go ahead,\" I replied and began to rinse.\n\n\"Did you really have your finger in her leg?\" he asked with an oddly-elevated pitch in his voice.\n\n\"My thumb, but yeah.\"\n\n\"How'd you even think to do that?\"\n\n\"All of you are EMTs, aren't you?\" I asked.\n\n\"Only basic life support. Not paramedics like the bus drivers,\" he said, pointing toward the ambulance.\n\n\"I've read a lot of books,\" I chuckled because it wasn't a lie. \"I read quite a lot when I had downtime overseas. You know, when my unit was on standby or something else boring.\"\n\n\"Military?\" he asked, handing me the towels.\n\n\"USMC. Second of the Second.\"\n\n\"Oorah! Semper Fi, sister!\" \n\nI chuckled at his exuberance. \"You, too?\" I asked as I dried my hands, trying to fish out the rusty flecks under my nails.\n\n\"Yes, ma'am. I was based at Camp Gonsalves in Okinawa. I exited five years ago.\"\n\n\"The JWTC? You were a jungle rat, huh? We might have even been on the island at the same time. I completed my contract seven years ago.\"\n\nWe compared MOSes and our ages when we enlisted, and discovered we were only a year apart.\n\n\"Shit&mdash; Um, sorry for the language, ma'am. Small world, isn't it?\" he blushed.\n\nHis self-aborted expletive surprised me, because I was accustomed to far worse than his slip. As he shut off the flow of water from the truck, I walked a few steps down the sidewalk to deposit the spent paper towels in a waste bin.\n\n\"Thank you for helping me clean myself up,\" I said.\n\n\"No problem, ma'am,\" he answered.\n\nI chuckled again. He was sweet, rather cute, and quite well-built. Given his left ring finger was bare, I sensed where the interaction might head. I decided I'd gently turn him down if he tried to ask me out because the last thing I wanted was to get involved with yet another form of adrenaline junkie.\n\nI said, \"I can do without the ma'ams, and also the sist&mdash;\"\n\nThe sound of the metallic ping was preceded only by maybe a second before the distinctive twin pops. And those sounds preceded the searing pain I felt at my hip by maybe two.\n\nI didn't realize what was happening until I saw the two cops run to the opposite side of the firetruck. I instinctively followed them to cover.\n\nThe douchebag officer was suddenly all-business when he shouted into his radio.\n\nDONAGH\n\n\"Vinnie!\" I shouted to the paramedic who was climbing into the driver's seat of the ambulance. \"This lady's hit! Get them both out of here!\"\n\nI'd seen it. I'm damn-near certain I did. A little sliver of the fabric of her running pants opened up, revealing some skin which began to bleed before she yelped and squatted to the ground.\n\nVincent ducked as he maneuvered himself to the back doors.\n\nThe woman drew her hand from her backside, revealing blood on her palm.\n\n\"Oh, damn,\" she groaned.\n\n\"Can you make it over here on your own?\" Vinnie shouted to the woman crouching next to me.\n\n\"I think so!\"\n\n\"Then do it!\" he yelled and pointed into the one opened door.\n\nShe managed to make it there, but struggled to climb in. The man inside grabbed her under her arms and pulled her into the box. Vincent scuttled back to the cab after securing the rear door, engaged the sirens, and departed the direction opposite from where we all thought the gunfire originated.\n\n\"Unit 17, advise status,\" I heard on an officer's radio.\n\n\"Suspect is disarmed and in custody. Some drunk moron popping shots from his patio with a 1911. Mark us in transport to holding.\"\n\n\"10-4, Unit 17.\"\n\nEverybody around me was visibly relieved, myself included.\n\n\"That'll make ya piss your pants,\" one of my crewmates chuckled morbidly as I went back to the other side of the truck to shut down the pump panel.\n\n\"Check that out,\" he added, pointing to a hole in the side of the red-painted body. \"You got lucky.\"\n\n\"Well, those two ladies didn't.\"\n\nRIVER\n\n\"The trauma surgeon has already described how the team plans to extract that bullet and why it needs to be removed to avoid long term pain and possible complications, yes?\"\n\nI nodded.\n\n\"The good news is that there's several ways I can proceed with your anesthesia, and I'll leave the choice to you.\"\n\nHe spoke for several minutes, describing the options. I was already doped up with hydromorphone and felt its effects, but I tried my best to pay attention.\n\n\"That's what I want,\" I said after his last description. \n\n\"Alright then. Let me get what I need and we'll get it started.\"\n\n\"Oh!\" I said before he'd walked too far away. \"Make sure the surgeon saves whatever he takes out of me for forensics and, if possible, see if someone can take a picture of it next to something that'll give it scale.\"\n\nHe nodded his acknowledgment.\n\nYeah. I'd been shot in my ass. Again.\n\nWell, I guess that's not entirely true. The first time wasn't from a bullet. It was from a fragment of a training mortar which squibbed in its tube fifty feet away from me. Somehow, that entire crew walked away with only minor scratches, but I was the one teased for getting my backside \"fragged.\"\n\nMy anesthesiologist was correct. The lidocaine injections were more painful than the original wound, with the&mdash; what'd he call it&mdash; a cluneal nerve block? Well, whatever it was called felt like the nerves were being zapped with electricity when the ultrasound-guided needles found their targets.\n\nBut mercifully, I felt completely numb in that area within a few minutes after he was done giving me the shots.\n\nTwilight anesthesia is funny stuff. All I remember was the doctor pointing to the anesthesiologist and saying something to the effect of, \"Your best buddy there is giving you something that'll help you relax&mdash;\" followed immediately by the voice of a recovery nurse coaxing me to wake up.\n\nI was soon fully alert, and thankfully still numb where I wanted to be. It'd taken the surgeon about an hour to extract the bullet from my backside and repair the damage it caused.\n\nI was discharged from the hospital eighteen hours after I'd been admitted, and took a taxi to my residence. The taxi driver, even though he looked like a big gruff oaf took pity on me and actually helped me to my door.<hr>\n\n<center>CHAPTER 2</center>\n\nCANDACE WATERS<br>Monday, July 29, 2019\n\n\"He did what?\"\n\n\"She. The woman probably saved your life.\"\n\n\"By sticking a finger in my leg?\" I challenged.\n\n\"Yeah. So I've been told,\" my doctor answered.\n\n\"Huh,\" I said, thinking to myself. \"Seems strange. Why would anyone do that?\"\n\n\"To gain hemostatic control. I know, that's medical gobbledygook, but it means stopping, or at least slowing, the loss of blood. The bullet that hit you nicked a major artery. What she did kept you alive until the paramedics arrived. Otherwise, you might have bled to death.\"\n\n\"You're telling me that she was the proverbial dutch boy that stuck his finger in a dam, saving the village below?\"\n\n\"Pretty much,\" he answered.\n\n\"Well, if that's the case, why is my leg not getting better?\"\n\n\"Clots dislodged causing reduced circulation. The heparin should help.\"\n\n\"Clots formed where some random woman stuck a finger inside my wound? When will we know more?\"\n\n\"Another week, perhaps two.\"\n\nI'd already been in the hospital a week, but I have a life to live, and being stuck in the hospital for another week was putting a cramp in it. The only thing I had to look forward to were more visits from my boyfriend.<hr>\n\nDONAGH<br>Friday, August 2, 2019\n\nI noticed her limp. I mean, who wouldn't? But, I knew the reason for it, and I was happy to see that she was at least ambulatory.\n\n\"Can I help you, ma'am?\" I asked as she walked into the bay with a crutch under an arm.\n\nShe was carrying a duffel in her free hand, and she placed it on the front bumper of the truck.\n\n\"I thought I told you last week to ease up on the ma'ams and sisters.\"\n\n\"Yes, ma'am, you&mdash; Sorry. I don't know how else to speak to you.\"\n\n\"Like a marine.\"\n\n\"Fine, Jarhead!\" I growled, leaning into the lingo. \"Whiskey tango foxtrot, over?\"\n\nShe laughed at the familiar taunt.\n\n\"Nice, but don't go overboard.\"\n\n\"What can I do for you?\" I asked.\n\n\"I brought your battalion some goodies,\" she said. \"I hope your crew doesn't have any allergies and is in the mood for peanut butter cookies, because I baked like eleventy dozen as a thank you.\"\n\nShe unzipped the duffel to reveal two disposable aluminum pans, then pulled back one of their lids to offer me one. I took a bite and regretted I didn't have a glass of cold milk to accompany the delicious treat.\n\n\"Oh, shit this is so delicious,\" I said, mumbling the words with my full mouth.\n\n\"Giving up your self-censorship?\" she chuckled.\n\n\"Oh. Sorry, ma'am&mdash; I still don't know your&mdash;\"\n\n\"River,\" she said. \"My name is River.\"\n\n\"River,\" I echoed. \"That's a beautiful name. Mine is Donagh. It's a pleasure to make your acquaintance,\" I said, pronouncing my given name with the proper inflection and accent. Truth be told, it's the only Irish word I can pronounce near-perfectly because my paternal grandparents were the immigrants and insisted on using that name instead of my more common one. My mother is sixth-generation American, so yeah, there's that.\n\n\"An Irishman, huh? No way I can pronounce it properly.\"\n\n\"Call me Donny.\"\n\n\"That's easier. Nice to meet you, Donny. Don't hog the cookies for yourself. Share them, and make sure everyone here knows how much I appreciate what you all do for people like me and that stranger, okay?\"\n\n\"Yes, ma'a&mdash; River. I will. How are you doing? I mean, are you okay?\"\n\n\"I'm doing alright. The bullet fractured a bone in my hip, so I can't exactly put my full weight on that leg yet, but other than that, I'm okay.\"\n\n\"Good to hear. How about the other woman?\"\n\n\"I don't know much about her. She came to just as the ambulance arrived at the hospital. As I was getting prepped for surgery, another ER doctor came and asked exactly what I'd done with her, and told me he was confident she'd be okay. To be honest, given her wound, I'm surprised mine wasn't worse.\"\n\n\"Did your doctor give you any clue what hit you?\"\n\n\"Yeah. He printed a photo of it. I don't know how to identify what it is, but I wanted it for the record, you know?\"\n\n\"Do you have it with you?\" I asked.\n\n\"It's in my car. Why?\"\n\n\"Would you mind showing it to me?\" I asked. \"I might be able to help you out.\"\n\n\"I suppose I could,\" she nodded.\n\n\"Okay. I'm going to put these wonders in the kitchen. I'll meet you at your car.\"\n\n\"Sure,\" she responded.\n\nI considered violating the promise I'd made, but I placed the pans in the station's kitchen instead of my locker. I even portioned cookies into zip-top bags for the other two shifts.\n\nShe showed me the picture when I rejoined her in the front parking area.\n\n\"Nice. He even put a scale there,\" I said when I noticed the finely graduated measuring rule alongside the deformed bullet.\n\nI went to the toolbox in the bay and removed a similar one.\n\n\"It's even printed to scale,\" I said when I noticed the marks in the photograph aligned perfectly with the one I held alongside it.\n\nI pivoted my scale to the butt of the bullet in the print.\n\n\"Weird. This can't be right,\" I muttered to myself.\n\n\"What's wrong?\" she asked.\n\n\"The cops arrested some drunk dude for shooting his pistol off his porch. It wasn't more than a few minutes after the ambulance left the area with you and that other lady in it. I'm pretty sure they said he was shooting a 1911.\"",
        "\"Yeah, and?\" she pressed.\n\n\"A 1911. Like a Colt .45. It's still a very common and popular handgun. Even though they were first made a hundred-plus years ago, they're still manufactured by several companies now.\"\n\n\"I'm not following.\"\n\n\"Ma'am, the 1911 is a forty-five caliber handgun. That means the bullets for it are almost a half-inch in diameter.\"\n\n\"Okay,\" she said.\n\n\"The one in this picture is only a little over a quarter of an inch in diameter. It was a hollow-point, which is why it looks like a mushroom. I'm guessing&mdash; well, no, I'm actually pretty sure this is a thirty-two caliber. Probably thirty-two ACP, but could be a thirty-two North American. I guess it's possible to modify a 1911 to fire thirty-two ACPs, but I'm betting you were wounded by someone other than the guy the CPD arrested.\"\n\n\"Whoa. Too much, too fast. Boil it down.\"\n\n\"You were probably shot by someone who's still out there. You need to find out from the police what that man's gun was loaded with. If they collected this bullet here,\" I said, waving the photo, \"they'll already be comparing.\"\n\nShe opened the door to her car and carefully placed herself in the driver's seat, and maneuvered the single crutch she'd used into its back seat.\n\nShe sat silently for quite a few moments.\n\n\"Have any friends in the CPD I could call?\"\n\nI smiled.<hr>\n\nTuesday, August 13, 2019\n\n\"I don't understand,\" Candace Waters said, trying to keep herself from breaking down.\n\nHer brother sat next to her, and she clutched his hands tightly in near-paralyzing fear.\n\nThe doctor said, \"Miss Waters, I know it's a lot to take in. But the anticoagulants aren't working. We can't continue to increase the dosage because it'll put you at significant risk of a brain aneurysm. The necrosis of muscle tissue in your leg is worsening. You've been deliberating for too long, and you're now at a very high risk of sepsis. We need to do this today&mdash; more like right now.\"\n\n\"I don't know what to do!\" she cried, losing control of her emotions under the crushing weight of the immense decision.\n\nAs paralyzing as the fear was, it didn't help her sort through her confusion.\n\n\"I was expecting to get better! I was told I'd get better!\" she barked, as she had for several declining days.\n\nThe pain she felt would have caused any other mammal to do what was necessary of its own volition, but a human's basic instincts are often confused by its higher-order reasoning.\n\n\"Come on! You have to do this! You'll die if you don't!\" her brother said firmly.\n\n\"Peter, help me, please?!\" she sobbed.\n\n\"Tell him. Tell Doctor Simpson you're consenting!\"\n\n\"I can't! Don't you understand?\" she bawled, her face deeply reddened. \"I can't do it!\"\n\n\"Okay, I know, Candy. I get it,\" he answered, maintaining the two-handed grasp on her only hand without intravenous lines.\n\n\"Doctor Simpson, I don't care what department he or she comes from, but I need you to find us a Cook County notary public. Any other willing adult will need to accompany him or her. It'd be better for all of us if you do so as soon as at all possible. Do you understand what I'm saying?\"\n\nThe speaking man gestured subtly at a document that was sitting on a side table, outside of the field of view of the bedridden patient. The document's title read \"Power of Attorney for Health Care,\" which the medical doctor was able to read due to his proximity.\n\nHe stared at Peter Waters for several silent moments before he answered. \"I think I do. Give me a little time,\" he said and briskly left the room.\n\n\"Candace, I won't lie to you. I think you're in a state of mind where you're not able to make the right choice, okay?\"\n\n\"Shut the hell up, Peter, I know what you're doing.\"\n\n\"You do?\"\n\n\"You're going to ask me to sign a legal document giving you the authority to make the decision for me,\" she continued sobbing.\n\n\"Yeah,\" he sighed. \"Will you sign it? I'm only trying to save your life. I can't bear the thought of losing you so soon after Mom and Dad. You and I are all that remains of our family. You're my sister, for criminy's sake!\"\n\nShe held her arms up, visibly beckoning her brother to return her offered embrace of surrender.\n\n\"Go get him. I don't want to lawyer up,\" she chuckled nervously through her sniffles. \"Tell him to come back.\"\n\nHer brother jumped to the door and hollered the doctor's name just before he'd stepped into the elevator.\n\nThe doctor almost sprinted in return, grabbing the clipboard he'd left at the nurses' station. He placed it on Miss Waters's lap.\n\n\"Help me, Peter,\" Candace begged, thrusting the board at him.\n\nHe carefully filled out the consent form which detailed several rather important details such as which limb was about to be amputated, and where such amputation would be. In Miss Waters's case, it would be just below the knee. The form also disclosed the risks and hazards, and obsequiously tried to disclaim any liability should more complications occur. Peter Waters, JD, Attorney at Law, knew better, so he had no problems advising his sister to initial all the blanks and sign the form.\n\n\"Miss Waters,\" the doctor spoke after accepting the document, \"did you eat breakfast?\"\n\n\"A few hours ago, and it was only two bites. They came right back up.\"\n\nDONAGH\n\n\"Hey, Dad,\" I said as soon as he answered my call.\n\n\"Hey, yourself, Son. You okay?\"\n\nI laughed. \"Why do you always ask me if I'm okay?\"\n\n\"You know how your mother worries,\" he deflected.\n\n\"Yeah. All is good, but I'm sure you heard about what happened to my battalion last week.\"\n\n\"Of course I did, Donny. Are you sure you're okay?\"\n\n\"It was a bit of a soil-your-pants moment, you know? But yeah, I'm okay.\"\n\n\"Yeah, I've had a few of those myself,\" he chuckled. \"So, what's going on?\"\n\n\"I want to ask you a favor.\"\n\n\"Sure. What is it?\"\n\n\"Can you tell me what caliber handgun that guy that evening had? You know, the one who shot at us and might have wounded two women? I'm pretty sure I heard radio chatter that it was a Colt 1911, which means it was probably a forty-five. But has that been verified?\"\n\nHe groaned audibly. \"Donny. You know what you're asking puts me in a bind, don't you? That is an active investigation. It's two investigations now.\"\n\nTwo investigations?\n\n\"I'm not asking for full disclosure, Dad. I'm only hoping to help a woman. She was the second person to be wounded that night, and she showed me a picture of the bullet her surgeons extracted from her. It was even next to a scale, which I compared with one from our toolbox. You taught me how to reload cartridges, Dad, so I know what I saw. Long story short, I'm pretty sure she was shot with a 32ACP.\"\n\n\"Okay, and?\" he pressed.\n\n\"Dad, that second woman had stuck her thumb in the first lady's leg to stop the bleeding! There's no way she could have done that if that first lady was hit by a 32ACP. The first woman could have been hit by a stray bullet from the drunk jackass that was arrested that evening, but I think the second lady was shot by someone else,\" I said. \"Dad, I just need a hint.\"\n\n\"I'm following, but I don't understand what you have to do with it?\"\n\nI didn't answer.\n\n\"Son?\"\n\nI sighed. \"The second lady, I want to help her.\"\n\n\"Help her, huh?\"\n\n\"Stop it, Dad. She's a marine. Second of the Second, just like you.\"\n\nHe sighed. \"Give me a second.\"\n\nHe was on speakerphone, so I could hear him typing on a keyboard.\n\n\"Donny, all I will say is that you're not heading down a dead end street. I can't tell you you're wrong. Copy?\"\n\n\"Uh&mdash; Oh. Yeah. Okay, Dad. Thanks.\"\n\nMiss Marq&mdash; River had given me her cellphone number while at the station, and I quickly retrieved it to send her a text message.\n\nI think I was right. There's a really good comfort-food specialty cafe near the station. It's on Lowe Avenue. I'm off duty at 0800. Care to meet me there at 0830 for breakfast?\n\nYou're going to have to give me more was the quick reply.\n\nI called a contact at the CPD. I've got some info for you.\n\nThe next reply took a little more time.\n\nDonny, are you hitting on me?\n\nRIVER\n\nHis reply: No. Why would that matter?\n\nHe seemed genuinely sweet, and yeah, he was a handsome guy. I just didn't want to go another round with someone like him.\n\nIt kind of would. I'd like to know what news you have but I'm not looking for a hookup.\n\nWhoa not what I meant don't paint me into a corner!\n\nHis almost instantaneous and unedited reply shifted the burden of proof to me, and I realized I had none. My face burned in my own embarrassment for putting him on such a spot with my implied accusation.\n\nMy reply: Sorry. I was being presumptuous.\n\nYeah you were.\n\nSo no strings?\n\nHis reply: No strings.\n\nSend me the address?\n\nI received a pin, and I checked the map.\n\n8:30. I'll be there. I sent.\n\nHe replied immediately with a thumbs-up emoji.\n\nAn hour and a half. I had an hour and a half to spare until the appointed time. I carefully stepped into my shower and took care of business. I don't know why, but I even shaved my legs for the first time in weeks. The only-slowly-improving lack of flexibility in my hip was why I was ten minutes late.\n\nLike a true gentleman, Donny stood from the four-top table he'd already secured and waved at me when he saw me enter the establishment. I hobbled to the table, and a passing busboy aided me with my chair. I tucked my crutch out of the way so it wouldn't be a tripping hazard.\n\n\"Hi,\" I offered. \"What do you have for me?\"\n\n\"A menu,\" Donny said, offering me one.\n\n\"You sure there's no strings?\" I chuckled.\n\n\"Cut it out, okay? Besides. I never said I was covering your tab,\" he said with some obvious exasperation in his voice as a waiter appeared.\n\n\"I'll have the English breakfast, please,\" he spoke to the guy without breaking his eye contact with me, \"but I don't think she's hungry.\"\n\nThe waiter's eyes shot toward me, back to him, then back to me.\n\nI succumbed.\n\n\"The Texas Skillet, please,\" I said.\n\nThe man stepped away after ensuring our water glasses were filled.\n\n\"You weren't shot by the guy the cops arrested that night,\" Donny said as soon as the waiter departed.\n\nI almost coughed on the water I'd just sipped.\n\n\"What?\" I asked\n\n\"Yeah. I have it on good authority that the man who was popping a gun off his porch didn't hit you or my firetruck.\"\n\n\"How?\" I challenged. \"Who told you?\"\n\n\"The Chief of Dees,\" he answered.\n\n\"The Chief of Detectives?\" I asked, seeking clarification.\n\nWhen he didn't answer, I pulled my phone out and did a quick Google search: chicago police department chief of detectives\n\nThe top hit made everything clear. Well, at least the result made it more clear.\n\nChief of Detectives: Declan Donagh McHugh &mdash; 2014 &ndash; present\n\nI felt the corners of my lips curl.\n\n\"Donny, what's your full and proper name?\" I asked.\n\nHis response was a slow sigh.\n\n\"Donny, answer me.\"\n\n\"Donagh Shamus,\" he timidly answered.\n\n\"Huh-uh. I want your full name,\" I prodded.\n\n\"You cheated,\" he said after several moments, pointing at my phone. \"It's Donagh Shamus McHugh.\"\n\n\"The Chief of Detectives of the Chicago Police Department wouldn't happen to be a relative, would he?\"\n\n\"He's my father.\"\n\n\"You crafty little lad,\" I said with as passable an Irish accent I could muster.\n\nHe grinned a little. \"I knew it'd be faster if I asked myself. Red tape and all that crap. But, keep it to yourself. I don't want to cause him any trouble for leaking anything. Definitely don't let the press catch wind of it.\"\n\n\"I won't. And, thank you. But I'm not sure where I go from here. Doesn't do me much good knowing that the person who shot me isn't the same one who shot the other woman.\"\n\nHis stare was piercing and a touch disconcerting, and it didn't cease when a server arrived to deliver our breakfasts.\n\n\"Why are you sounding confused?\" he finally asked.\n\n\"I don't understand,\" I said before I took a bite of hashbrowns.\n\nHe hadn't even picked up his fork yet.\n\n\"You don't know where to go from here? With the news I just gave you?\"\n\nI shrugged and swallowed, feigning ignorance.\n\n\"River, I know who you are. I know what you do for a living. I don't believe for a second that you're at all confused.\"\n\nI watched him carefully, cautiously.\n\n\"You do, huh?\"\n\n\"R. Marquette Investigations, right?\"\n\n\"How long did it take you to figure it out?\" I asked because I'd apparently dropped some unintended breadcrumbs somewhere.\n\n\"We responded to a medical assist yesterday morning in an office building on Pershing. I noticed the name on the building directory while we were waiting for the elevator, and I remembered that asshole cop calling you Markie.\"\n\n\"If you ever call me Mark&mdash;\"\n\n\"I wouldn't,\" he interrupted. \"That'd be the height of disrespect. Anyway, I Googled. I saw your portrait on the about page of your website.\"\n\n\"What, are you net-stalking me?\"\n\n\"Jeez! What is it with you? You're accusing me of net-stalking you? That means you're net-stalking my father. Come on. I Googled. Just like you Googled a few minutes ago.\"\n\n\"Okay. Fair enough,\" I admitted, taking a bite of my entree.\n\n\"Now. Tell me why almost every single thing I've said or done has turned me into your idea of an asshole.\"\n\nI blotted my mouth with my napkin and swallowed.\n\n\"The cop that called me Markie is the asshole.\"\n\n\"Sure. How'd he even know who you were, anyway?\"\n\n\"I went out with him.\"\n\n\"I'm guessing it didn't end well?\"\n\n\"You could say that. When I broke it off with him, it started up a whole thing.\"\n\n\"What happened?\" he asked before taking a bite of sliced tomato.\n\n\"It wasn't immediate, but a while later, I started getting junk mail from attorneys all over the city, like probably at least three or four per day, offering to fight a speeding ticket.\"\n\n\"Were you planning on objecting to one or something?\"\n\n\"No!\" I laughed. \"I haven't gotten a ticket since I was in high school. I never got the supposed ticket, at least in my hand. I called the courthouse and inquired, and it turned out that prick wrote me a ticket, put it in the system, and started a whole mess. Jeez. I even have proof that I wasn't even on the road on the date and time he put on the citation.\"\n\n\"That's messed up. So what'd you do about it?\"\n\n\"I went to the courthouse and paid the fines and fees.\"\n\n\"What? Why would you do that if you could prove it was falsified? I'd have dragged him into court.\"\n\n\"While we were still together, he received a commendation from his superiors for outstanding traffic service. That's a fancy-pants way of saying he was leading the pack in writing traffic citations. At the time, I was pretty proud of him, you know? A commendation from high-ups is a big deal, right?\n\n\"Anyway, when I got that ticket, I wondered if maybe what happened to me was not a one-off. You know, maybe he was scheming his way into the limelight at other people's expense, and worse, completely without their knowledge. So I began digging into it.\"\n\n\"Did you find anything?\"\n\n\"Hell yeah,\" I chuckled, and it made him smile quite handsomely.\n\n\"Don't keep me in suspense,\" he urged.\n\n\"I rented a car for a few days, because I figured he'd recognize mine if he saw it. I started keeping tabs on him while he was on duty. Every now and then, I'd see him canvasing parking lots at grocery stores or shopping centers or whatnot. I watched him through binoculars, and saw him scribbling stuff as he was checking out parked cars. Then he'd pull into an out of the way spot and go to work on the computer in his patrol car.\"\n\n\"If he was punching tickets into his mobile computer, I would imagine they'd be time-stamped, right? So he wouldn't be entering them every two or three minutes, because he couldn't possibly be stopping people that often.\"\n\n\"True. So, on my final observation, in a different rental by the way, I jotted down the plates of the cars he seemed to be interested in. Over the next few days, I kept watch on the district court's website and waited to see if those plates ever showed up in traffic court records.\"\n\n\"Well?\"\n\n\"Some of them did. Usually the pricey ones, you know? BMWs. Mercedes. Lexuses. Uh, is the plural of Lexus Lexus? Is it seven Lexus or Lexi? or Lexuses? Never mind. Doesn't matter. Anyway, they all showed the same infraction. Doing fifty in a forty.\"\n\n\"Nine, you're fine. Ten, you're mine,\" Donny quipped.\n\n\"Something like that.\"\n\n\"So he was cooking the books in a way?\"\n\n\"Seemed like it to me. So I called him on it and told him I was onto his scam. I think that's why he was taunting me and trying to get me amped up the night I got butthurt when you and I met each other.\"\n\nHe had to grab his napkin because he'd just taken a drink of his juice.\n\n\"Sorry! I didn't mean to laugh!\" he said when he recovered. \"But... you made it sound&mdash;\"\n\n\"I know,\" I felt myself smiling.\n\n\"It was funny.\"\n\n\"Donny, can you tell me your proper name again?\" I asked.\n\nHe spoke it distinctly, and I tried my best to repeat it the same way.\n\n\"That's close, but for the gee aitch at the end, the back of your tongue shouldn't shut off the air. More like something closer to hah than gah, but still in-between.\"\n\nI tried again.\n\n\"Yeah. That's better,\" he smiled, taking another bite.\n\nI smiled, too.\n\n\"You still haven't answered my question,\" he said.\n\n\"Yes, I have.\"\n\n\"Not my first one. Why are you acting offended by things I've said and done?\"\n\n\"Because, in a lot of ways, you remind me of that jerk.\"\n\n\"Hold on. Now it's my turn to be offended.\"\n\n\"No, sorry. That came out wrong. I liked the guy. I actually did. But then his 'I'm Too Sexy For This Shirt' kind of crap started showing. I could tell he thought himself more macho than he should, you know? I'd had enough of that in the Corps. And don't say oorah or&mdash;\"\n\n\"I was only going to thank you for putting that worm in my ear,\" he grinned.\n\nI chuckled. \"You're welcome.\"\n\nWe ate in relative silence for several minutes. I watched him. He really was rather cute, and sort of reserved. I really appreciated that part of his character.\n\n\"Donagh,\" I said, \"thank you.\"\n\n\"Think nothing of it, me lass,\" he said in a delightful Irish accent.\n\nOur conversation continued as we dined. He was a good guy. I liked his initiative. I liked his banter. I liked his attitude. I was beginning to like him.<hr>\n\n<center>CHAPTER 3</center>\n\nWednesday, August 12, 2019. 3:17pm\n\nA very frustrated and suddenly fearful man swiped his screen, moving the page back to the top of the article. He'd read it a half dozen times, all the way to the summary at the end which read:\n\nInvestigators confirmed in a press release today the more-seriously injured person was wounded by an intoxicated elderly man who fired a pistol multiple times from his porch in the twenty-seven-hundred block of Michigan Avenue. The other victim was wounded by an unknown second assailant. Police are asking anyone with information to contact Crime Stoppers or the police directly.\n\nThe wall-mounted land-line rang, startling the man.\n\n\"Go for Sid,\" the man slurred, half drunk into the receiver.\n\n\"You told me you'd take care of it,\" the voice on the other end of the line whispered. \"You screwed up.\"\n\nThe man clumsily replaced the corded receiver back on the hook.\n\nSix seconds later, the phone rang again, its shrill tones piercing his ears. The back of the handset held a caller ID unit which displayed BLOCKED. He pressed the down-arrow button next to the display, and it indicated the prior call was similarly tagged.",
        "He didn't answer.\n\nHis cellular phone chirped a few moments later when it'd received a text message.\n\nyour an idiot Sid. You better answer you door when I get there in tnty minutes dumbass\n\nThe man powered off his phone, opened the door to his apartment, nudging with his bare foot a shoe between the door and jamb to keep it from latching behind him. He stepped across the grungy corridor to the service closet. Normally loathing its proximity to his apartment due to the fetid stench, he was then appreciative of its closeness. He pulled the grimy handle of the trash chute door and moved to deposit his cellphone into it.\n\n\"No, you dipshit,\" scolded the man who grabbed Sid's arm, pulling the phone, as well as the hand which held it, away from the chute. \"Never throw a good phone away. Destroy the SIM card. Pulverize it with a hammer or stick it in a lump of meat and run it down your garbage disposal. Whatever.\n\n\"Oh. Did I say twenty minutes? I meant twenty seconds, you moron!\" the man said as he shoved the other back through his door and shut it carefully behind him.\n\n\"I paid you a thousand bucks to end her, Sid, not just give her a fucking limp.\"\n\n\"I'm sorry! There were too many cops around for me to slow down too much. Give me another chance, please?! Just give me one more try!\"\n\n\"You should've waited for better opportunity,\" the alpha male said as he scanned the studio apartment, a dwelling barely deserving of either word.\n\n\"It's disgusting in here,\" the man added.\n\n\"Yeah,\" the other answered obediently like the scolded cur he was, drawing a mild smile from his employer.\n\n\"What did you do with the gun you used?\"\n\n\"It's in the top drawer right there,\" he said, pointing into the dirty kitchen.\n\nThe man sighed. \"You try to dump your phone down the garbage chute, but you didn't think to try to get rid of this?\"\n\nIn his mind, he was secretly pleased at his sudden fortune. He'd found a better way out than the one he'd planned.\n\nHe withdrew the small semiautomatic handgun from a drawer full of takeout menus, condiment packets, and random other fast-food detritus. He checked its safety and the position of the ejector tab which indicated a round was chambered already.\n\n\"I'll deal with this. I'll drop it in the Chicago River or throw it in the lake,\" he said. \"Now. Take the SIM card out of your phone.\"\n\n\"I don't know how.\"\n\n\"That's okay. Even people who have brains brighter than your nightlight-dim bulb don't,\" the other said soothingly. \"Let me show you. Put your phone there,\" he said, pointing at a table which was covered with soiled paper plates and a host of houseflies.\n\nAs the man did so, the other rapidly paced three steps further away and drew his sidearm. The man's forehead was placed in its sights. He pulled the trigger of the one he'd removed from the drawer, under his arm, into the door behind him. A fraction of a single second later, the Glock 17 sent its projectile into the man's forehead.\n\nThe shooter began counting, while pulling the almost invisible plugs from his ears. He grimaced at the bitter taste of wax as he swallowed them one at a time. After wiping it down thoroughly, he placed the smaller gun snuggly in the other man's hand, and placed the fingers around the butt and the index in the trigger guard, adding pressure at the fingertips. He removed it, then kicked it across the floor. He briefly searched before finding the ejected casings from both pistols, and relocated them to more appropriate positions using a pencil he found on the table.\n\nGross, the man thought to himself, seeing the white- and gray-matter within the blood on the opposing wall. Nine seconds. That works.<hr>\n\nCANDACE WATERS<br>Friday, September 27, 2019\n\n\"You can't imagine what this feels like. It feels like I've stubbed all five of my toes, and I can't rub the pain away!\"\n\n\"Yeah. I get it. Just follow your doctor's guidance, Candy.\"\n\n\"No, I don't think you do get it, Peter!\"\n\n\"I don't understand phantom limb pain, but that's why he put you on gabapentin. It's only been a week. He said it'd take some time to see if it works. Are you doing those exercises he told you to try?\"\n\n\"You mean imagining flexing muscles that don't exist any more?\"\n\nHe only nodded.\n\n\"Well, I'm imagining trying to pick up that dust-bunny right there with my non-existent toes.\"\n\n\"Good.\"\n\nIt helped, but not much.\n\n\"I've lost everything. Everything!\"\n\n\"Candy, you're alive! You've lost a part of one of your legs. That's all.\"\n\n\"You can't understand. The marathon is in two weeks. I haven't missed it since I first ran it in 2012. I'll never be able to do that again.\"\n\nMy brother had the audacity to chuckle.\n\n\"Why the hell are you laugh&mdash;\"\n\n\"Whoa, Candy. I'm only laughing because I remember signing the entry form as your legal guardian. I was so proud to do it, and you kicked ass. Mom and Dad would have been so proud.\"\n\n\"You think?\" I asked.\n\n\"I know.\"\n\n\"Well, there's that, and then there's Kirk. I haven't seen him even once since the day after the surgery. He hasn't even called me, and isn't answering when I call him. I'm waiting for the day he drops the bomb on me that he's breaking off our engagement,\" I said, fiddling the ring on my finger I'd only worn for four months. I refused to cry. I'd become rather good at forcing tears away. \"Who could blame him?\" \n\n\"At this point, sis, I don't know what else I can do for you. You're writing yourself off way too soon, but you're not listening to me or anyone else. I just&mdash; No. I only have a juris doctorate. I'm an attorney, not an MD, a psychologist, or anything even approaching what you need. I don't know how else to help you.\"\n\nHe sparked something in my mind.\n\n\"I could sue her, couldn't I?\" I said several moments later.\n\n\"Sue who?\"\n\n\"The woman that did this to me.\"\n\n\"Did what to you, Candy? The woman saved your life.\"\n\n\"That's your point of view. In my own, I think she took it from me, at least the one I knew.\"\n\n\"You're serious?\" he challenged.\n\nI stared him down. He knew I was.\n\n\"Personal injury isn't my specialty. I can't.\"\n\n\"No, but you're one of the best medical malpractice litigators in Chicago.\"\n\n\"This is different. That lady probably isn't a physician.\"\n\n\"She tried to play doctor, Peter!\"\n\nHe stared at me for several silent moments.\n\n\"Look. I can't ethically go after her for malpractice if she wasn't acting as a licensed physician, in which case her actions had an a posteriori affect on your outcome.\"\n\n\"Cut out the Latin gobbledygook!\"\n\nHe sighed. \"The only thing I can do is to try to prove she violated one of the tenets of Illinois's Good Samaritan laws. I can't promise you anything. It'll be a long shot, but will you commit yourself to engaging in your recovery if I agree?\"\n\n\"Yes,\" I answered.\n\n\"Fully engage.\"\n\n\"I will do what I'm told.\"\n\n\"No, Candy,\" he said, wagging his finger at me. \"Don't mince words with me. You're going to commit to doing not just what you're told, but what you know in your heart you need to do.\"\n\n\"Understood.\"\n\n\"And what I say you need to do.\"\n\n\"You're pressing your luck.\"\n\nHe only stared at me again.\n\n\"Fine. Be that way.\"<hr>\n\nRIVER<br>Wednesday, October 9, 2019\n\n\"Miss Marquette?\" said a man standing by the door to my office when I arrived.\n\n\"Yes?\" I said, taking the envelope he'd handed me.\n\n\"You've been served, ma'am,\" he said.\n\nI removed the single-page form and immediately recognized it simply by the formatting of its text. There was no point in trying to refuse it. There was also no point in getting uppity or belligerent with him because, well, he was just the messenger, and I even doubted he knew what he was serving me with. He was just doing his job. I unlocked my door and asked him to follow me in.\n\nI sat at my desk and read the paper, then checked the second page which was simply a duplicate of the first accompanied by a yellow Post-It tab with an arrow pointing to a signature block. I printed my full legal name which, of course, was misspelled on the form, then signed and dated it with the pen the man had offered.\n\nI held the pen and the signed copy of the paper back out to him in opposite hands.\n\n\"Try to have a nice day, ma'am,\" he said, taking only the paper from me. \"I highly, highly recommend you keep the pen. It's a really good pen, you know?\"\n\n\"Oh. Thanks,\" I said, setting it aside.\n\nThe man briskly departed my office, and I read the form again.\n\nCase #19-09300116\n\nYou, River Markett, are hereby notified of the below civil action, and are ordered to appear in the 447th Judicial District Court of Cook County, Illinois, on October 28, 2019 at 9:00am to answer to this complaint.\n\nAt your option, you may avoid appearance before the court by accessing the Cook County document e-Filing system and filing your answer no later than 5:00 PM, October 24, 2019. Completing the form online will notify the court of your compliance along with an evidentiary receipt you should print for your records.\n\nCandace S. Waters, Complainant<br>vs<br>River Markett, Defendant\n\nOn July 24, 2019, at approximately 7:00 PM, complainant was struck by a stray bullet. Complainant claims that additional injuries were inflicted by defendant by actions done willingly, callously, and negligently. Said actions caused grievous bodily harm resulting in amputation of complainant's left leg below the knee.\n\nIt is the complainant's position that said complications would not have occurred had the defendant not attempted to intervene without medical training. Complainant is seeking redress and compensation in the amount of $500,000.\n\nFiled with the court clerk on this date by representing counsel, Peter Waters, Esq., 3141 Madrid Avenue, Chicago, IL.\n\nPeter and Candace Waters? That can't be a coincidence, I thought to myself as I woke up my PC and brought up Google in a browser.\n\nI entered a search for \"Peter\" \"Candace\" \"Waters\", each word in its own quotes, to indicate that every hit must contain all three words.\n\nA bazillion results appeared, so I added \"Chicago\" to the query.\n\nThat modification removed most of the bazillion hits, and I knew I was about to have a long, distracted day. I'd already stopped accepting new clients in order to have the time to investigate my own shooting, and I suspected this distraction would force me to delay that investigation as well.\n\nThe fourth link on the third page of search results held the answer to my question. It was a link to the Chicago Tribune.\n\nFrom left: Candace Waters (16) with Peter Waters (24) A half dozen other names were listed below a photograph.\n\nOf course, the website's paywall only let me see some blurred paragraphs and similarly-blurred additional photographs before nagging me to subscribe. I sacrificed ten dollars and put a reminder on my calendar to unsubscribe in twenty-nine days.\n\nAt only sixteen years of age, Candace Waters of Oak Park, coached by her brother, Peter, placed in the top ten percent of the youngest runners with an unofficial time of 3:56:42 in yesterday's 36th running of the Chicago Marathon.\n\n\"I never imagined I could do this,\" the teenager spoke through tears. \"I ran for four hours with the memories of my parents as the fuel and energy I needed. Peter encouraged me the entire time. He could have ran on ahead of me. Instead, he stayed right beside me, encouraging me. He was a top-performer last year, but eased up on himself for my sake. We did this in their memory.\"\n\nPeter Waters became his sister's legal guardian after the death of their parents.\n\nI right-clicked the hyperlink into a new tab.\n\nFebruary 11, 2011<br>&nbsp;&nbsp;&nbsp;&nbsp;Owner/Landlord Found Guilty In Tenants' Deaths\n\nLeon Watts was found guilty yesterday of criminal negligence in the deaths of tenants residing in a unit he owned and supervised. Carbon monoxide fumes from the building's failing boiler claimed the lives of Peter and Genevieve \"Genie\" Waters. Their children, Peter Jr. and Candace, were away when their parents perished.\n\nThe article detailed more specifics than I wanted to read, and I was quickly overcome with emotion.\n\nI dialed a number I hadn't called in months.\n\n\"Hey, Mom, it's me. Can we talk?\" I asked the woman who answered.\n\n\"Something's wrong. I can hear it in your voice, River. What's wrong?\"\n\n\"Just my world seems like it's about to crash down around me,\" I answered.\n\n\"What's happened?\"\n\n\"Can you get Dad and put your phone on speaker?\"\n\n\"Of course!\"\n\nThe line was silent for several moments.\n\n\"Hey, Riv. Are you okay?\" said my father's stoic and stolid voice.\n\nMy family members were the only people on Earth I permitted, in fact, preferred, to address me by my abbreviated name. Just a sort of personal connectedness reserved only for them, I suppose.\n\n\"I'm sorry I haven't called. I won't make excuses. I've just been lazy.\"\n\n\"I won't argue,\" my dad lightly chuckled. \"How are you feeling? You getting better, baby girl?\"\n\nI smiled at my father's words because he still called me, his daughter of thirty years, his baby girl.\n\n\"Yeah. I am. My hip is still a tiny bit sore, but it's a lot better.\"\n\n\"Hell, River. You saved the life of another human being, even though it turned into a literal pain in the ass for you.\"\n\n\"I don't know what possessed me to do it.\"\n\n\"You did the right thing,\" my mother said.\n\n\"Well, that very woman is taking me to court.\"\n\n\"What? Why?\"\n\nI read them the summary off the paper.\n\n\"What can we do?\" my parents spoke almost simultaneously.\n\n\"Do you happen to have a spare half-million dollars under your mattress?\"\n\n\"Oh, no, River. Are you serious?\"\n\n\"That's how much she's suing for. I don't know what to do.\"\n\n\"Find an attorney, Riv. A good one. That's all I can suggest,\" my father said after a few moments.\n\n\"Have any suggestions?\"\n\n\"How would I know?\" he said with a light chuckle.\n\n\"I guess I'll figure it out.\"\n\n\"You always do,\" my mother said.\n\n\"Mom, Dad, I love you,\" I said. \"I've kinda taken you both for granted. And I shouldn't.\"\n\n\"Thanks, Sweetie. That means a lot,\" my mother said. \"We love you, too. Glad you're getting better.\"\n\nWe disconnected.\n\nI considered my options. I didn't have many. I'd been in court before, but I'd never been taken there for anything so personally perilous.\n\nI twiddled a pen as I considered my options. It wasn't until it'd escaped my hand and I'd picked it up off the carpet that I noticed the imprint on its barrel. It was the pen the process server had insisted I keep.\n\nAlex Reid<br>Senior Partner<br>Reid & Muntz, LLC.\n\nTo Google I went again. The firm's website was quite professionally designed. I studied the introductory material several times, and what I read led me to dial the number at the bottom of every page.\n\n\"Reid and Muntz. How can I help you?\" said the attendant that answered.\n\n\"I'm not sure. I think I need to speak to Alex Reid.\"\n\n\"May I have your name?\"\n\n\"River Marquette.\"\n\n\"One moment, Ma'am. He's expecting your call.\"\n\n\"Hello, Miss Marquette. This is Alex. How can I help you?\"\n\n\"I'm surmising you already have an answer to that question. I was given a subpoena, and the process server gave me a pen with your firm's info on it.\"\n\n\"Yeah. I want to represent you in Waters vee Marquette.\"\n\n\"Whoa. Wait. How could you know about that?\"\n\n\"Simple,\" the man said. \"Everything is filed online. It's public access unless records are sealed, and the suit against you isn't. I was reviewing the docket... you know, the courts' calendars, and I saw your respondent's hearing is scheduled on the 28th of next month, which is the same day as one of my other case's.\"\n\n\"It won't be for long. I'm going to answer the complaint electronically.\"\n\n\"That's certainly your prerogative, Miss Marquette, but I would recommend against doing that until you've thoroughly discussed it with an attorney.\"\n\n\"How did I get your pen?\" I asked.\n\n\"Process servers are licensed by the state, and most are independent. It just so happens that the guy that served you the Waters summons also serves some of mine. I asked him to give it to you.\"\n\n\"Oh. So, what are your initial thoughts?\" I asked.\n\n\"This is free legal advice, okay?\"\n\n\"Yeah,\" I responded.\n\n\"She's grasping at straws. Without a doubt. I've faced her brother a few times. He's an excellent attorney, so I'm surprised he's filed this case. I'm also surprised they're only asking for a half-million dollars. Anyone else would ask for at least ten times as much. I can only think he's cautioned her, you know?\"\n\n\"No, I don't. Spell it out for me,\" I urged.\n\n\"If they thought they were in a good position, they wouldn't demand such a paltry amount. To me, that suggests they both know her case is rather weak.\"\n\n\"They do?\"\n\n\"I'm one percent away from being absolutely certain.\"\n\nI considered his statement for several silent moments, then asked, \"What will your services cost me?\"\n\n\"Don't worry about that right now. We can discuss that later, and all those discussions will be on me. I don't expect you to remember it, but you've sat in the witness stand in front of me on more than one occasion. I've never called you as a witness, but several of your clients' attorneys have. You're good. You're damned good at what you do. I know what you're capable of.\"\n\n\"Okay. I'll consider it.\"\n\n\"That's all I ask. Have a nice day, Miss Marquette.\"\n\n\"Thanks,\" I said, hanging up the call.\n\nI gave up any hope of a productive workday, then texted someone I'd become a bit fond of from the few times we'd texted or talked. I don't know. There was just something about him I found comforting, or maybe even attracting. Truth be told, I still wasn't sure of his intent, or his penchant for thrill, he was just a bit... different.\n\nAre you working today? I need an ear, and you're the friendliest ear I've talked to in a long time.\n\nAre you okay? Donny replied a few minutes later.\n\nNot really.\n\nI can meet you at that same cafe if you liked it.\n\nASAP?\n\nThirty minutes?\n\n10:00 &#128076;\n\n&#128077;<hr>\n\n\"You look out of sorts, River. What's wrong? Are you okay? Your recovery having a setback?\" he asked as he approached the table I'd already been sat at.\n\nI stood to greet him. The first words from his reply to my text, as well as those he spoke, showed he cared, at least, a little. He courteously maneuvered my chair to help me re-seat myself. He truly seemed a sweet guy. \n\n\"No. After three months, I'm pretty much back to normal. We should order, then I'll explain.\"\n\n\"Sure,\" he answered as he beckoned one of the waitstaff.\n\nI ordered Eggs Benedict, roasted asparagus, and a side of fruit salad. Donny didn't even look at the menu.\n\n\"That sounds perfect,\" he said to her, \"same for me.\"\n\nShe jotted her notes and stepped away, reappearing a moment later with two cups and a decanter of coffee.\n\n\"So,\" Donny said after taking a sip. \"what's going on?\"\n\n\"That woman I helped a few months ago is suing me.\"\n\n\"For what?\"\n\n\"The subpoena said I caused her grievous bodily harm or something like that.\"\n\n\"That can't be right. You probably saved her life!\"\n\n\"Maybe I did, but, apparently her injuries, or whatever, lead to an amputated leg, and she's apparently blaming me.\"\n\n\"Sounds like she's a Karen or something. Besides, the EMT that worked on her was telling you what to do. When we were all back at the station later, he said you probably kept her from bleeding out on the spot.\"",
        "\"Well, that's good to know, but I've been given a hardy welcome to the litigious society we live in,\" I said.\n\nI nervously smiled because I didn't want him to think I was about to break down.\n\n\"God. That really sucks,\" he offered. \"Is there anything I can do to help?\"\n\n\"I really don't know. I just talked to an attorney this morning before I called you. Strangest thing. The guy who brought the subpoena to my office gave me a swag pen bearing his firm's logo and stuff.\"\n\n\"Well, that's a good sign, isn't it?\" he said.\n\n\"I really have no idea.\"\n\nHe reached over the table and took my hand in his.\n\n\"You'll do fine, River. I'm sure of it,\" he said.\n\nIt was that moment I caught a scent of him. Oh, hell. Oh hell. I leaned forward and subtly smelled the air around him.\n\n\"You smell like smoke,\" I said.\n\nHe quickly pulled his hand away.\n\n\"Uh, oh. I'm sorry. I just got off shift, and sometimes two or even three full-on scrubs in the shower doesn't get rid of it.\"\n\n\"Donny, I'm the one who should apologize. Given what you&mdash; Crap. I don't know how to walk that back. I didn't mean to embarrass you,\" I offered.\n\n\"I can't even tell anymore, you know? I guess I've kinda become nose-blind to it.\"\n\n\"Well, I don't mind. In fact,\" I slowly said, \"it sorta makes you seem even more... well. It doesn't bother me at all, okay?\"\n\nI took his hand back and laced my fingers through his. I wasn't put off by him one single bit, and was hinting I wouldn't mind... well, I wouldn't mind a string anymore.\n\nHis face looked a bit puzzled and suddenly shy.\n\nThe server arriving with our plates was an unfortunate interruption to a calm, close moment.\n\nHe cleared his throat nervously, giving me the sense I'd spooked him. Had I made a very handsome man, literally oozing pure masculinity, nervous?\n\nIt was... well, it was weird. It seemed our following conversation during the impromptu brunch was forced. Strained. Just... yeah. Weird. I liked him. Like Goldilocks thought of a particular bed, I thought the guy was... just right.\n\n\"Think nothing of it,\" I said after Donny thanked me profusely for the meal.\n\nI'd insisted on paying the tab myself, because he'd given me some courage and hope in the challenge before me, as well as a bit of a lead on something he stated was... curious.\n\nI went back to my office and did some distracted busy-work for a couple of hours.\n\n\"Screw it,\" I said to myself because I couldn't dismiss the thought from my head.\n\nI made a call to a number. I disabled caller-ID by dialing *67 first.\n\n\"Officer Rogers answering for Officer Swanson,\" a man said.\n\n\"Hello. My name is&mdash; Oh, I'm so sorry. Who did you say you are?\"\n\nThe man gave his full name, and blazing suspicion suddenly flashed in my mind.\n\n\"I apologize for bothering you, but I think I dialed a wrong number.\" \n\n\"No worries,\" he answered just before I hung up my phone.\n\nOh, no. Oh please no.\n\nI grabbed a certain pen and made another call.\n\nExchanges were made between the receptionist and me before I was forwarded to the attorney.\n\n\"Miss Marquette. Come to my office. Now. We need to talk face to face.\"\n\nI looked up the address on my MacBook, and responded, \"Okay. Give me a half hour.\"\n\nI locked up my office and left.<hr>\n\n<center>CHAPTER 4</center>\n\nIt took me thirty minutes to drive to the office building which bore his firm's name on the exterior.\n\nOn entering the opulent but dated lobby, a rather young-looking receptionist greeted me.\n\n\"Miss Marquette?\"\n\n\"Yes, how did you know?\"\n\n\"Mr. Reid is expecting you. I'll let him know you're here,\" she said, dialing an extension on her phone.\n\n\"He'll be just a few minutes, ma'am. Please make yourself comfortable. Would you like a bottle of water or a soft drink?\"\n\n\"Uh, no thanks,\" I said.\n\nI'd have taken a seat in one of what looked like very comfortable chairs, but instead, I explored, looking at the various photographs displayed on the walls. Mr. Reid was apparently fairly well-connected. There was even a photograph of him with Rommie Manuel. I wasn't a fan, but hey. The man had been mayor for the prior eight years. I noticed a particular individual in the background of the image.\n\n\"I didn't think much of that guy,\" I heard a voice say as the man approached me, \"but the other partner thinks he's the bee's knees.\"\n\nI turned to face the man. Vague memories did, in fact, suggest I'd seen him before. Then they meshed together.\n\n\"Now I recognize you.\"\n\n\"Good to know!\"\n\n\"I'm guessing, since you were wearing a suit, you weren't running?\" I asked, pointing back to the photograph.\n\n\"Heck no. Look at me!\" he chuckled, comically jiggling his belly which wasn't big at all. \"Did you?\"\n\n\"Yeah. I'd signed up to run the marathon for the first time this weekend, but that's not going to happen. My first try at a half-marathon, which I failed at spectacularly, by the way, I met that woman right there,\" I said as I pointed to the figure in the background. \"She was an inspirational woman. This picture was taken four years ago, right?\"\n\n\"That sounds about right. Come on back,\" he said, gesturing to the door he'd come through.\n\nI followed him, and he closed his office's door behind him. I sat across from him at his desk.\n\n\"I need you to start from square one, okay? Talk to me for a minute like I'm still in junior high. Tell me what's happened and what you know and what you think you might know.\"\n\n\"It's simple. I'm telling you I think my ex-boyfriend might have tried to have me killed.\"\n\nALEX REID\n\nI knew the instant I first met her in a courtroom that the image she used in her business's website didn't do her justice. At maybe a few inches over five feet tall, she was shorter than I recalled, but that was because I'd never stood immediately with her, usually being seated at a table. And, of course, the headshot on the website hid that trait completely. Didn't matter. I was a touch attracted.\n\n\"Miss Marquette, I asked you to start from the beginning,\"\n\nShe laid out a fairly clear path from point A to point B, then to C, D, and F, then jumped to Timbuktu.\n\n\"What you've described does sound plausible, at least on the surface. But I'm still unclear what any of that has to do with the Waters complaint against you. The endgame, you know?\"\n\n\"I doubt the two are related at all, other than timing,\" she said. \"My physical interaction with that woman ended right before I was injured.\"\n\n\"And you're certain you both weren't hit by the same shooter, whether that be the drunk or your ex?\"\n\n\"Those particular details haven't been made public.\"\n\n\"Then why do you think they're unrelated?\" I pushed.\n\n\"I can't be certain, but I have information from a source I think I should trust.\"\n\n\"I'm afraid you're going to need to be more specific, ma'am,\"\n\n\"I don't see why,\" she challenged.\n\n\"If I'm going to represent you, I need to know the whole situation because cases go down the drain quickly if relevant details appear at the last minute.\"\n\n\"Okay.\"\n\nHe pressed a button on his desk phone. \"Maddie, what's on my schedule this evening?\"\n\nOnly a few seconds elapsed before he received an answer via the intercom.\n\n\"Nothing since the Simmons deposition was rescheduled to next Thursday.\"\n\n\"Are you free for a few more hours?\" he continued, \"Feel absolutely free to say 'no.'\"\n\n\"Sure, Mr. Reid. I wouldn't mind some overtime,\" she chuckled.\n\nHe pressed the button again, then spoke to me.\n\n\"How about this. We've been at this for a couple of hours, the shadows are getting long, and, to be honest, my stomach is telling me I'm hungry. If you're up to it, we can continue this discussion over dinner. There's a fantastic little Italian bistro off Lamar Avenue. It's quaint and quiet. Maddie, my PA, is also one of our paralegals and an aspiring attorney-to-be in her own right. She'll be helpful in keeping this discussion relevant and on point. The firm will cover the check as a business expense.\"\n\n\"Yeah. I haven't eaten since earlier this morning. I'm game.\"\n\nI didn't say that the presence of a third party would also discourage me from acting like a hormonal adolescent with my prospective client. Who knows what could happen after a few glasses of wine?\n\nRIVER\n\nHe was absolutely correct. The little bistro was quite cozy, and their eggplant parmesan was beyond anything I'd ever eaten. I took a mental note to add the place to the list of restaurants I liked.\n\nMr. Reid's paralegal was very helpful, prompting questions and making observations as we laid out the strategy for the response to the civil complaint against me.\n\n\"See now?\" he asked.\n\n\"Yeah. I think I do.\"\n\n\"Let me boil it down a little more,\" he said. \"Sure. It's easy to respond online. Based on what we've discussed today, Maddie could write it all in the next few days and submit the response electronically, as you were considering doing yourself. But answering while standing before the judge compels the complainant&mdash; Miss Waters, or at least her counsel, to appear as well. There is so much more information conveyed non-verbally just in the opposition's body language. I'd miss it all if this were done online.\"\n\n\"That does make sense,\" I responded. \"So. Are you considering representing me?\"\n\nHe grinned, sipped from his wine glass, then blotted his mouth politely with his linen napkin.\n\n\"Miss Marquette, I already have, and the answer is 'yes.'\"\n\n\"So, what happens next?\"\n\n\"Maddie will polish up all of this discussion and pull out the most salient points for the response and the hearing. I'll use the rest to start strategizing arguments. With any luck, this will all be over within a few months. I know a little about Peter Waters. I've been in court with him a few times. I am willing to wager another dinner, on me, that he's going to file what's called a 'motion of summary judgment' with the court at that initial hearing.\"\n\n\"What does that mean?\"\n\n\"If, indeed, he does that, it means he thinks, or will pretend that his case is an absolute slam dunk, that there is no reason for a trial, and that he believes he can argue the points with plenty of case law and precedent, and that the judge should rule from the bench without even seating a jury.\"\n\n\"What? That doesn't seem fair!\" I argued.\n\nHe waved his hands in front of him. \"Just legal maneuvering, ma'am. The central thesis of a request for summary judgment is the presumption that none of the relevant facts are in dispute, which I assure you, most certainly will be. He will, somehow, have to be prepared to argue that your actions are exempt from the immunity of Illinois's Good Samaritan statutes, and I'll be gearing up to fight any such conjecture.\"\n\nI smiled. The guy seemed really, really sharp, and I felt a sudden sense of waning anxiety. \"Well, okay then. But what if you lose your bet and he doesn't file it?\"\n\n\"Then we can split our tabs. Sound good, then?\"\n\n\"Yeah. Thanks.\"\n\n\"Excellent,\" he said\n\nA short time later, the two seated with me collected their things into their cases. He gestured toward the exit with his extended left arm.\n\nAs I stepped in that direction, I felt his right hand alight at the small of my back. I instinctively widened my first strides, and it disappeared. At a shoulder would have been odd, but otherwise not an issue. Four inches lower, and he'd have had his balls separated from each other by the width of my knee. But... no. It was in the I don't know zone.\n\nALEX REID\n\nDamn it, I thought, mentally kicking my own backside when I observed her basically lunging away. That was stupid.\n\n\"My apologies, Miss Marquette. That was... well, I was just trying to be polite and show you out.\"\n\n\"It's alright. I just don't like being touched from behind. It makes me uncomfortable.\"\n\n\"I understand, I appreciate you telling me that,\" I said, holding the door open for her.\n\nNow, in my defense (though a poor one), I was a tad tipsy. And, in all honesty, the woman was simply quite pretty. Shiny, slightly wavy jet-black hair, bundled behind her head in an elastic band, allowed it to sway mesmerizingly between her shoulders as she walked with wonderfully long legs (for her stature, that is) attached to the the cutest tush imaginable.\n\nMy sight wasn't tarnished by beer goggles&mdash; rather... wine goggles. I had the same opinion when she arrived at the office. She was just simply beautiful, and the confident edge of her personality was refreshing. She seemed so solidly focused and engaged in the situation.\n\nI was completely looking forward to working with her and convinced myself I'd even handle the work pro bono if it guaranteed it.\n\n\"You haven't brought up the other thing you told me on the phone,\" I prompted once the three of us stepped into the parking area. \"You know, when I cut you off and told you to come to the office.\"\n\n\"Yeah. You're right. What we've been discussing this evening is a civil complaint, right?\" she said. \"Now we're talking a criminal matter, and you wouldn't be the one to prosecute such a case.\"\n\n\"Good on you,\" I chuckled. \"Most laypeople don't understand the distinction between a tort and a crime. Miss waters suit is a civil one. Her complaint against you is termed a tort. In suits such as hers against you, I can represent either the complainant or respondent. I can only represent the defendant in a criminal trial. The case has to be brought by a prosecutor representing 'the people,'\" I air-quoted. \"I've always liked that term because it means the charge isn't levied by a single person, that being the victim of the crime, but by the entire community the prosecutor represents. It's based on the idea that the comitted crime offends the whole population.\"\n\n\"No, I understand that. But, if you were defending that asshole, what would you hope I wouldn't do first?\"\n\n\"That's easy. You have to call whoever is investigating it and tell him or her everything you know.\"\n\n\"Let me run this by you. This morning, I called a number, just to nudge me one way or another against a suspicion. The guy that answered the phone gave his name, and said he was answering the phone on his partner's behalf. The partner was my ex-boyfriend, and both of them just happened to be at the scene when I got hurt. I can't imagine it being a coincidence, you know? But I said I'd dialed a wrong number and hung up when I realized the connection.\"\n\n\"You're sure of the names?\"\n\n\"I'm sure of Justin Rogers's, and no way I'd miss the face of the other.\"\n\nI chuckled lightly. \"I believe you. Do you have any friends or anyone you with a badge you could call?\"\n\n\"Maybe.\"\n\n\"Then do it as soon as you can,\" I said, then added, \"You drove yourself here, but are you able to drive home?\"\n\n\"Sure. But probably not legal, so I ordered a ride before we came out here. I'll pick up my car in the morning.\"\n\n\"Good. Try to relax this evening. I'm all but certain this is an open-and-shut thing. I'll touch base with you early next week.\"\n\nA car pulled into a nearby parking spot and flashed its lights. Ms. Marquette nodded at me, then turned for the Uber she'd requested. I enjoyed watching her walk away before Maddie honked from her own car I'd ridden in.<hr>\n\nRIVER<br>Saturday, October 12, 2019\n\nMy spirit was uplifted after the meeting with my attorney, so I was able to get quite a bit accomplished at work the last two days of the prior week. On Saturday, I hosted a get-together at my place where I was able to chill and relax with friends, several of whom were going to run the marathon the next morning. I'd prepared a bunch of snacks that were low on the glycemic index scale for them to enjoy. I also set out several varieties of soft drinks and non-alcoholic beverages (and even NA beer) to accompany them, plus a casserole full of chicken alfredo for those that didn't discipline their diets or weren't running. Like me.\n\nMy spirit was lifted even further when I answered the knock at my door about two hours after the gathering began.\n\n\"Hey,\" he said. \"Am I too late?\"\n\n\"Not at all, Donagh. Come on in. I'm so glad you could make it.\"\n\nHe laughed quite easily. \"You said it perfectly!\"\n\nI smiled and curled my hand in his. He didn't flinch or seem nervous. That made me happy.\n\n\"Everyone, this is Donny McHugh,\" I said to the dozen or so people milling around the living spaces, then paraded the handsome hunk and introduced each of the folks to him.\n\n\"I hope there won't be a quiz later,\" he chuckled humorously. \"So, almost everyone here is running tomorrow?\"\n\nFive people raised hands.\n\nI added, \"I've done this night-before-the-race shindig every year. Wasn't going to let my boo-boo get in the way of a traditional get-together, at least.\"\n\n\"Well, hopefully I won't be seeing any of you folks there,\" Donny said, drawing curious expressions.\n\nIt made me laugh. \"He's with the CFD. He'll be working one of the med stations along the route.\"\n\nThat reveal prompted lots of conversation between us all, and we decided to wrap it up around midnight, everyone filing out over the course of a few minutes.\n\n\"Nice people,\" Donny observed when I closed the door.\n\n\"They really are,\" I smiled at him.\n\nI felt nervous then. Not because of Donny, but because of what I was about to request.\n\n\"Donny, I need a favor, one which you should definitely decline if you're not comfortable with it. I know it might be putting you in a bit of a bind.\"\n\n\"I'll try my best. What do you need?\"\n\n\"I need to have a conversation with your father.\"\n\n\"What about?\"\n\n\"What you told me a few days ago. About your suspicions. I think you were right.\"\n\nHe walked to the kitchen table, cracked open a Coke, and sat in one of the chairs.\n\n\"Convince me. You should be telling it to the detective in charge of the investigation. That's a huge deal.\"\n\n\"I can't. At least, I don't think I should. I don't know him. I don't know if I can trust him, especially given he'd be required to start investigating one of their own.\"\n\n\"Your ex isn't a detective, River. He's a patrolman. They run in different circles,\" Donny countered.\n\n\"I get what you're saying. But I still don't know him. I'm afraid he'd let something slip or even tell my ex that I suspect him.\"\n\n\"You don't know my dad, either.\"\n\n\"No, but I know you. I trust you. Do you trust your dad is doing his job? I get a sense that you know what's what, and if your father wants me to talk to the detective in charge, I'll do that if he tells me to go that way. Besides. The detective hasn't gotten anywhere, and it's been three months.\"\n\nHe sat silently for a few moments, watching me, sipping on his pop.\n\n\"Okay,\" he said. \"I can't promise anything, but I'll ask, okay?\"\n\nI stepped over to him, held out my hand, and he stood to face me. I wrapped my arms around his shoulders and hugged him. Good lord he smelled so good. I kissed his cheek and said, \"Thank you, Donny. I owe you.\"<hr>\n\n<center>CHAPTER 5</center>\n\nRIVER<br>Sunday, October 13, 2019, 8:00am\n\nThe shot of a starting pistol releasing the second wave of runners startled me as much as the first one had at 7:30am. A little PTSD, I guess. My friends and I had been camped out since about four o'clock that morning, ensuring a good vantage point to watch the hoards begin their ordeals.\n\nI'd even had the chance to find Donny's tent. He was busy, but he took a few seconds introducing me to his fellow firefighters and EMTs. I kind of grinned as he took the heavy dose of ribbing from his coworkers, and it didn't stop him from giving me a hug and a kiss on my cheek before he excused himself to finish setting up stations where IVs or oxygen could be delivered to upward of fifty people at a time.",
        "\"The weather is supposed to be perfect, which should help!\" I said as I left to rejoin my other friends to watch and cheer for our five running friends.\n\nI'd entered all their bib numbers into the app on my phone which would display their progress through various positions. Another one went in, as well, for a bit of an inspiration of mine by the name of Marisol Jamil. Her strength and determination resonated with me. I considered her a heroine of sorts, and followed her on social media. She was also the woman I'd seen in the photograph hanging in Alex Reid's lobby.\n\nThe weather was, indeed, quite beautiful, but I made darn sure to keep the sunscreen applied, as we all spent close to six hours outdoors.\n\nMy friends waited as close to Grant Park as we could until everyone we were cheering crossed the finish line. We all agreed to meet at a local microbrewery to celebrate the following evening.<hr>\n\nDONAGH<br>Tuesday, October 15, 2019, 9:17am\n\n\"Hey, River,\" I said when she answered my call.\n\n\"Hey, yourself, Donny! We haven't caught up since I saw you at the tent. Everything go okay for you Sunday?\"\n\n\"It wasn't as bad as we'd prepped for, which is always a good thing,\" I answered. \"We treated about a hundred people at our station, and only two of them had to be transported. So, yeah. It wasn't nearly as bad as last year's was.\"\n\n\"Good to hear,\" she said. \"Are you off today?\"\n\n\"Yeah. As a matter of fact, I am, and that's why I'm calling. I talked to my father last night at dinner. He wants to talk to you.\"\n\n\"He's agreed to meet me?\"\n\n\"He's not just agreed, he insists. I didn't give him specific details you've given me, but when I told him you think a police officer tried to kill you, that got his attention. I haven't told him anything else.\"\n\n\"When?\" she asked.\n\n\"He just called me a few minutes ago to tell me he's cleared his schedule.\"\n\n\"Like today?\"\n\n\"Yeah.\"\n\n\"Let me call you back. I have a few meetings with clients on my calendar. I need to see if I can reschedule them.\"\n\n\"Sure thing,\" I answered.\n\n\"Donny, thanks. Really. I appreciate your help.\"\n\nIt was a few hours before she called me back.\n\nShe asked me where to go, and I offered to drive her there myself. I wouldn't be in my father's office while they talked, of course, but I wanted her to know I'd be outside the door as a sort of distant support. I really liked the woman. She was rather attractive, for sure, but there was just something about her personality and carriage that nudged me in that direction.\n\n\"You sure this okay with you?\" she asked as soon as she climbed into my car.\n\n\"Of course it is. Don't worry about a thing. My dad's the life of any neighborhood party, but he's all-business on the job. He's fair and observant. Think about it like you're only having a conversation. Like you are talking to me or any other friend.\"\n\nShe sighed deeply. \"I'm nervous.\"\n\nI took her left hand in mine and gave it a gentle squeeze.\n\nFifteen minutes later, I escorted her to the CoD's office in the Public Safety Headquarters building on Michigan Avenue. I settled into a chair after another mutual hand-squeeze when my father invited River into his office.\n\nAn hour and a half later, a woman knocked on the door that separated River and me, and my dad beckoned her to enter.\n\nRIVER<br>2:03pm\n\n\"Miss Marquette, this is June Donaver, a principal investigator from Internal Affairs,\" Chief McHugh said.\n\n\"Hello,\" I nervously responded and shook the woman's offered hand.\n\n\"I'm going to leave the two of you alone because I don't want to bias the conversation. I need you to relate to her every single thing you've told me. I'll be out there if either of you need me.\"\n\nHe left the room.\n\nAnother hour transpired as I repeated the conversation almost word-for-word, with almost identical questions from her, and identical answers from myself.\n\n\"Miss Marquette,\" she said, \"Thank you. I promise the stagnation of this investigation will end if I can get answers to some very pointed and probably uncomfortable questions. May I continue?\"\n\nI nervously nodded.\n\n\"Let me start by asking how you and Officer Swanson met, and the full extent of your relationship.\"\n\nAnother hour elapsed. I was exhausted and in tears by the end of it. When I left the office, Donny was still waiting.\n\n\"You look like you've been through the wringer,\" he said when we were finally out of view from anyone.\n\n\"God. I didn't think it'd be that rough. That wasn't just a conversation. It felt more like an interrogation. And not just once, but twice!\"\n\n\"I'm so sorry, River,\" he said. \"I couldn't have known. Are you okay?\"\n\n\"I will be. I just wasn't&mdash; I don't know. I feel like I've&mdash;\"\n\n\"&mdash;Done the right thing?\" he interrupted. \"Don't ever tell yourself otherwise.\"\n\n\"Thanks, Donny. I really appreciate everything you've done for me.\"\n\nHe took my hand and folded his fingers through mine as he drove me back to my office where I'd left my car. I brought his hand to my face and subtly smelled the scent of his skin. He gently brushed the back of his fingers over my cheek and chin.\n\nStrings. Strings? I no longer gave an ounce of crap about strings.<hr>\n\nALEX REID<br>Monday, October 28, 2019\n\nRiver and I met at the courthouse an hour before the appointed time so I could coach her. She'd been in courts before, so it was basically a rehash and review of various things other attorneys had likely advised on courtroom etiquette and whatnot. Keep your phone on mute. Don't keep it on the table. Keep it put away. Never interrupt the judge. Don't answer opposing counsel's question without a two or three second delay to give me the opportunity to evaluate the question and have time to object if needed, and never, ever speak directly to the complainant, and only to her attorney when you're on the stand.\n\n\"All rise!\" the uniformed bailiff ordered the gallery. \"The 447th Judicial District Court of Cook County is now in session, The Honorable Grace McWhirter presiding.\"\n\nThe courtroom was packed with people, as was typical of every Monday. The court had summonsed probably a dozen cases for the same time slot of nine o'clock. Much like a doctor, the judge expected the litigants to wait on her so she wouldn't have to wait on them. It was well-ordered chaos, and everyone who physically could rose to their feet. Of course, a few elderly people couldn't, as well as one very young woman, one Candace Waters. I recognized her from the photograph River had pointed out to me.\n\nThe rather well-experienced jurist stepped to her chair on the elevated bench, rapped her gavel on its block, and said, \"You may be seated. Let's get things moving. Bailiff, please call the first case.\"\n\nWe sat quietly, watching the proceedings of other cases move rather rapid-fire. Judge McWhirter ran a tight ship and kept things moving briskly.\n\nAfter about ninety minutes had passed, the bailiff looked at the clipboard he was holding. \"Parties to case 19-09300116, please rise.\"\n\n\"That's us,\" I whispered to River.\n\nShe and I stood. Another man did as well, standing next to a woman who couldn't. She was in a wheelchair.\n\n\"Please come forward,\" he said, opening the low gate at the bar.\n\nI motioned River toward the left-hand table, and the other gentlemen pushed the other woman's wheelchair to the other table. The bailiff repositioned one of the chairs to make room for her. The three that could remained standing, and the bailiff continued to read.\n\n\"Case 19-09300116, Candace S. Waters vee River E. Marquette, with a complaint of willful negligence leading to grievous bodily harm. Complainant seeks redress and compensation of five hundred thousand dollars,\" he concluded, then stepped back to his desk.\n\nThe judge looked over at me and my client for a few moments, then over to the pair at the other table.\n\n\"Counselor Waters, would you happen to be related to the woman you're standing next to, or is this just one of those happy coincidences?\"\n\nHe grinned slightly. \"No, Your Honor, it's no coincidence. She is my sister.\"\n\n\"Peter, you're not making the start of the day easy,\" Judge McWhirter stated with a bit of frustration evident in her voice.\n\nThat she knew his first name was not at all surprising. We'd both stood before her in court a number of times. She'd learned a lot of names from experience.\n\nThat she addressed him by it was an additional hint to her frustration. It wasn't particularly rare for a jurist to address a familiar attorney by first name, but it wasn't particularly common, either. At no time, however, would an attorney ever address the judge in the same manner while he or she was on the bench.\n\nPETER WATERS\n\n\"You are aware that I don't particularly like the idea of attorneys representing their own family members, are you not?\" the judge asked me.\n\nYay! Off to the races! I sarcastically thought to myself. Not a good start.\n\n\"Yes, ma'am, I am well aware, but I assure you I am able to represent her objectively.\"\n\n\"Ma'am,\" the judge spoke to my sist&mdash; my client. \"Please state and spell your full name for the court.\"\n\nShe did.\n\n\"You as well, please,\" the judge spoke to the other woman who similarly complied.\n\n\"Counselor, give me the highlights,\" she directed me.\n\nI spent several minutes describing the chain of events which led to the surgical removal of my sister's lower limb. I kept an eye on the clock because I knew to allow myself no more than five minutes to lay things out.\n\n\"Anything else?\" Judge McWhirter asked me.\n\n\"Just one thing more thing, Your Honor. I have filed a motion of summary judgment in this matter.\"\n\n\"Mr. Reid?\" she said, addressing the other attorney.\n\nI clenched, preparing to have my ass handed to me.\n\n\"I am aware. I wouldn't be standing before Your Honor if I weren't prepared to argue it. Suffice it to say that there are, most certainly, facts in dispute. I request as quick a hearing as the court will oblige.\"\n\nShe chuckled at him. \"Aren't you on your A game, Mr. Reid,\" she said. \"Quick quick, or normal quick?\"\n\n\"As soon as you might permit, Your Honor. My client is more than anxious to put this all behind her.\"\n\n\"Very well. Mitzie, short date, please,\" the judge spoke to her clerk who quickly began clicking her computer's mouse.\n\n\"Friday, one o'clock?\" she said about thirty seconds later.\n\n\"Permit me, Your Honor?\" he said, withdrawing his phone from his briefcase and holding it up.\n\nShe nodded.\n\nHe tapped his phone's screen.\n\n\"That's good with us,\" he said.\n\n\"So ordered,\" Judge McWhirter said before rapping her gavel.\n\nMy ass had been sufficiently handed to me, as I expected. Plus, I couldn't object to the quick date because that would make it appear as if I weren't at all prepared. The two at the opposing table had nothing to gather, and I struggled to replace my own papers into my briefcase. I then assisted my sister out of the courtroom.\n\nRIVER\n\n\"How'd do you think that went?\" Alex asked me.\n\n\"A bit like a whirlwind. What did all of that mean?\"\n\n\"Remember how I told you everything these days is filed electronically?\"\n\n\"Yeah,\" I said.\n\n\"I read his motion already. It was pro forma. Heck. There are better examples in first-year law school books. I knew he'd try, but there's just nothing there. I'm actually a bit surprised at him for not trying harder. I'm suspecting now that he was hoping I'd ask for a longer interval, and I think I surprised him by agreeing to a hearing only a few days away from now.\"\n\n\"To be honest, that surprised me, as well.\"\n\n\"Don't worry about it. Quashing that motion will be easy. I could do it in my sleep.\"\n\n\"If you say so.\"\n\n\"Anywho, Remember that bet I made with you at dinner with Maddie and me a few weeks ago?\"\n\n\"Remind me,\" I requested, because I couldn't recall it.\n\n\"That if he did file that motion, I'd treat you to dinner,\" he said with a bit of a grin on his face.\n\n\"Oh. Yes, I remember that.\"\n\n\"Give me a call at my office when you want to cash in that chip. But right now, I need to meet another client upstairs for an arbitration,\" he said, walking backwards.\n\n\"Good luck,\" I said.\n\nHe turned, looked at his watch, and began hustling towards the stairwell.\n\n\"That guy's a bit of an odd duck,\" I said to myself with a chuckle as I headed for the exit.\n\nI pulled up my calendar app on my cell. Donny had created a shared calendar where he kept his shift schedule so I knew when he was or wasn't working.\n\nDONAGH<br>11:22am\n\nI read the text from River, and I smiled. Hey! You wouldn't happen to be free for lunch, would you? My hearing just ended and I'm in a bit of a good mood.\n\nI am. I'd love to meet you. Good news?\n\nYeah. Some. We can talk about it at a table. What do you have a taste for? I'm up for anything other than Thai.\n\nShucks. That's what I was going to suggest.<br>&#129315; JK<br>Do you like Indian food?\n\nOoh. A spicy chicken curry with naan sounds awesome! &#128523;\n\nTandoor Oven @ noon? It's near the corner of Pershing and Giles.\n\nPerfect! See you soon!\n\nMy smile widened. I had just enough time to take another shower, just in case. I'd even started making sure I took my work clothes off in the laundry room so the odors wouldn't transfer to the clean clothes in the closet.\n\nThirty minutes later, I was standing in the waiting area, peering through the windows until I saw River's long, lithely muscular legs maneuver her up the sidewalk to the door. I stepped out on the sidewalk to greet her, and held the door open for her.\n\n\"Hey,\" I smiled.\n\n\"Hey, yourself,\" she smiled back. \"Enjoying your day off?\"\n\n\"I am now,\" I said.\n\nShe laughed. \"Come on. You have a life outside of the firehouse, don't you?\"\n\n\"I do,\" I said a little quietly. \"Just gets better on days like this. Come on. They've already got a table ready for us.\"\n\nShe followed me, and I pulled her chair out for her.\n\n\"Thank you, kind sir,\" she said, with humorous mock pomp, taking the seat.\n\nI very much had a difficult time not staring. I mean, jeez. She had to have been the most beautifully- and impeccably-dressed woman within a mile radius. I'd never before seen her dressed as she was that day. Every other time we'd met up, she was in rather casual clothing. Something like jeans and a sweatshirt, or jogging pants or sweats, whatever. She looked fantastic in all that, too, but what sat before me was a stunningly beautiful professionally-attired woman. She was dressed in a dark gray knee-length skirt, a matching blazer, and a snug knitted black turtleneck. Man, if it all didn't highlight her shape perfectly.\n\nI was simply entranced.\n\n\"Donny?\" she said, waving her hand in front of my eyes.\n\n\"Oh,\" I laughed nervously. \"I apologize for staring. You are quite a nice sight, River.\"\n\nShe smiled. \"I haven't worn this outfit in maybe a year. In fact, I think I was in court then, too. Just a bit uppity for the everyday, you know?\"\n\n\"I don't know whether your suit flatters you, or you it.\"\n\n\"That's very sweet of you,\" she said, reaching across the table to my hand.\n\nHer fingers felt a tad cool to the touch, so I covered them with my other. She gently squeezed.\n\nOh, hell. I was so smitten. I was glad to be wearing long sleeves, or she'd have seen the goosebumps flash up my arm at the sensation of her hand in mine.\n\nIn short order, our waiter attended our table and we selected our lunches. River spent the intervening time filling me in on the hearing. She even chuckled lightly at the end.\n\n\"You know, I think I just spent more time describing the whole thing than it actually took to happen.\"\n\n\"That fast, huh?\"\n\n\"Yeah. Alex, my attorney, was really quite fast on his feet. The other guy seemed a bit off his game, according to Alex. He said his filings were sort of weak, and he was genuinely taken aback because the Waters guy is supposed to be a good attorney, too. They've argued cases against each other, so I guess he would know.\"\n\n\"That has to give you some confidence, doesn't it?\"\n\n\"For sure. We're back in court on Friday and I'm curious to see what's going to happen next. He said him and his paralegal are already laying out their whole argument.\"\n\nWe continued to discuss it, then this and that as we dined on our meals. We tried samples of each other's dishes. Her chicken murgh kari packed just the right amount of heat and was probably very satisfying against the nip of the autumn weather.\n\nAfter we split the check, I followed her to the exit, watching her subtly curvy hips sashay as she walked. No limp in sight.\n\n\"You look like you've completely recovered,\" I said from behind her, realizing I'd probably just betrayed my eyes' behavior.\n\nIf I had, she didn't let on. Instead, she made a grasping motion with the fingers of her left hand, signaling that she wanted me to take it and walk alongside her. I did.\n\n\"Everything sounds like it's heading in the right direction for you,\" I said.\n\n\"Whoa!\" she barked, holding up other palm. \"Do not jinx it!\"\n\nI ran my pinched thumb and forefinger over my lips. \"Won't happen again,\" I murmured through one corner of my mouth.\n\nShe laughed at my actions.\n\n\"Hey. I know you're working tomorrow which also means you're on duty Friday.\"\n\n\"That's right,\" I said.\n\n\"Is there any chance you can swap with someone in the A or B shift so you can be in court with me? It's not a big deal if you can't.\"\n\n\"It would help?\" I asked.\n\n\"Yes. Knowing you're in the room will bolster my confidence.\"\n\n\"Then I will do my absolute best to see if I can make that happen,\" I smiled.\n\nI walked with her the rest of the way to the office building which contained a small two-room suite from where she ran her small business.\n\n\"Catch up with you later?\" I asked.\n\n\"Count on it,\" she said with a wink as she entered the building.\n\nRIVER<br>9:26pm\n\nThe uptick in my energy after court allowed me to work quite late. I was glad I had the forethought long before to keep a few spare changes of clothes in one of the file drawers, because as soon as I got there earlier in the afternoon after lunch with Donny, I shed and hung my suit and exchanged my underwear for a comfy pair of briefs instead of the booty-biting thong, and a jog bra instead of the underwire one that'd been digging into my armpit for seven hours. Running pants and a sweatshirt completed my casual assemblage for the following seven hours I'd worked in the office, only pausing for an occasional peach Fresca or a tinkle. I hadn't eaten dinner yet, but that didn't stop me from unlocking another file drawer and pulling out a bottle of Knob Creek 12 Year Bourbon I'd kept there, as yet unopened, since a particularly-appreciative client had given it to me a year earlier.\n\nI had just placed the bottle in the bag with my clothes when a reflection distracted me. I saw it on the glass covering a Patrick Nagel print on the wall. The source was the window behind my desk. Someone was shining light through it.\n\nKnowing better than to lift a slat to look through the blinds, I grabbed my DSLR, darted out of my suite, down to the opposite exit at the side of the building, and edged myself around the corner of the building's exterior. I zoomed in on the car which was shining a light attached to the vehicle's A pillar.\n\n\"Oh, god no,\" I whispered to myself. I even heard my own voice tremble.\n\nI snapped several photographs, then switched the camera to video capture mode. The image displayed on the backlit LCD was slightly grainy in the low light. I quickly ensured focus, then deactivated the display because I didn't want the illuminated panel to betray my concealment. With my free hand, I dialed 911 on my cell.",
        "\"911, what is your emergency?\" the operator asked.\n\n\"Um, There's a prowler or someone trying to shine a light through my office window. Can you send someone? My office is at Palisade Park, 917 Pershing, Suite 114.\"\n\n\"The system shows a unit already at that address,\" the operator said.\n\n\"Why? Why is he lighting things up?\"\n\n\"It's perfectly normal, ma'am. Patrolmen do things like that all the time. Their lights scatter nefarious people, you know?\"\n\n\"Oh. I understand. Thanks,\" I said, \"Just so I can be sure, would you please ask them to come knock on the main doors? It just doesn't feel right.\"\n\n\"Give me a few seconds. I'll send a message to that unit's console.\"\n\n\"Thank you,\" I said.\n\nNot ten seconds later, the patrol car accelerated with skids out of the parking lot.\n\n\"Ma'am, stand by. That unit just departed. It wasn't dispatched, so I'm not sure why. I'll dispatch another.\"\n\n\"No, don't worry about it. I guess that police officer didn't see anything of interest. It's okay. Thank you for listening.\"\n\nThe call disconnected, I went back inside the building and immediately called someone else. The voice that answered sounded fatigued.\n\n\"River, are you okay?\" his first words, once again, conveying concern for me.\n\n\"Something just happened that I can't ignore.\"<hr>\n\n<center>CHAPTER 6</center>\n\nDONAGH<br>10:17pm\n\nI rubbed the sleep out of my eyes as quickly as I could.\n\n\"What's wrong?\"\n\n\"I'm pretty sure I'm being stalked by one of Chicago's finest.\"\n\n\"Was it your ex?\"\n\n\"Probably, but I'm not sure. I took pictures and some video.\"\n\n\"Where are&mdash; like right now, where exactly are you?\"\n\n\"Inside my office,\" she answered.\n\n\"Don't move. I'll be there in twenty minutes, okay? Can you recognize my car in the dark?\"\n\n\"The red Prius?\"\n\n\"Yes, and my license plate ends in 713, okay?\"\n\n\"Okay.\"\n\n\"Check it, River, make sure you see it. Sit tight. I'll be there as soon as I can.\"\n\n\"Okay,\" she uncharacteristically whimpered. \"Thank you for being such a good friend. I'm sorry for waking you up!\"\n\nI grabbed my fob, then realized I wasn't dressed for public view. I tossed on the quickest clothing I could find and ran to my car.\n\nI was at her building quicker than I thought I could be. I aimed my car's front toward the window I'd looked out of a few weeks before. I flashed my high-beams, then extinguished them. A slat lifted for a few seconds, and the office's lights went out.\n\nI went for the main doors. River ran toward them, pressed the exit button to release the magnetic lock, grasped my hand, and ran with it entrapped in hers to my car.\n\n\"You okay?\" I panted.\n\n\"Drive, Donny. Please?\" she cried. \"Just drive.\"\n\nI quickly departed the lot. \"Riv, where do you want me to take you? Your apartment?\"\n\nShe didn't answer. She was quite visibly shaken. A camera she had fell from her lap into the floorboard of my car when I slowed for a red light, and she didn't even react. I interpreted her silence as a \"no.\"\n\n\"River, come on. Talk to me. Are you alright?\"\n\n\"Just keep driving,\" she said.\n\nI could tell she was checking the mirrors, and I began to do so myself. I made a few random turns, watching to see if anyone was following. I turned onto the last street, stopped my car, and watched every angle for any approaching headlights. I saw none, so I continued forward into the complex's parking lot. I shut off the power to my Prius.\n\nI observed my surroundings for several moments, noting that she was doing the same.\n\n\"Where are we?\" she whispered.\n\n\"My apartment.\"\n\nShe bolted from my car. I fetched her DSLR from the floor and shut my door. I held my key fob against the reader at the glass door. Hearing it beep, I opened the door and River rushed herself into a space unknown to her.\n\nShe followed me down the short hallway to the entrance of my apartment. Once I'd unlocked and opened its door, she darted through it where she collided with an end table in the small living room.\n\n\"Whoa, girl, slow down!\"\n\n\"Donny! Please don't yell at me!\"\n\n\"Sorry. You're right. I barked. I&mdash; forget about it.\"\n\nShe stared at me, and I saw the fright in her eyes.\n\n\"Jeez, River. Are you okay?\" I asked, stroking her upper arm.\n\nShe stared at me for several moments. She took the camera from my other hand, powered it up, pushed a few buttons, and turned its back to face me.\n\nI saw the familiar colors of a CPD patrol cruiser moving its searchlight in small motions. It sounded like River was talking to someone.\n\nI heard the screech of the tires as the unit sped out of the parking lot.\n\n\"Do you have a computer that can read an SD card?\" she asked.\n\n\"Yeah. Right here,\" I said, pulling my laptop off the couch and setting on the countertop. I powered it up and logged in.\n\nShe handed me the black plastic card she'd extracted from the camera, and I put it into the slot on the side of the laptop. A file explorer window opened automatically. I stepped to the side and let River do what she wanted.\n\nShe opened the first photo in the folder, and tabbed through several others until she found one of interest. She used the zoom tool, adjusted the brightness and contrast in the image, bringing a face into clearer detail.\n\n\"I knew it. It was Dennis.\"\n\n\"Who?\"\n\n\"Dennis Swanson. My ex. I'd better get home before he tries something else.\"\n\nI'd only seen the man once before, months earlier, and I didn't commit the face to my memory.\n\n\"You're staying here, River.\"\n\n\"I can't, Donny, I need to go home,\" she argued, rubbing her forehead.\n\n\"Don't you think that'd be the next place he'd look? I'm not going to let you argue with me,\" I said, working quickly to remove evidence of my bachelor lifestyle from around the apartment, particularly making sure I hadn't left any dirty clothes on the bathroom floor. \"I'm going to change the sheets on the bed. Wait here.\"\n\nIt took me scant minutes to do that task.\n\n\"There's not a whole lot in the pantry or fridge, but you're welcome to whatever you want,\" I said once I'd returned to the living area.\n\nShe was sitting on the couch with her head in her hand. I softly rubbed her back between her shoulders. She sort of leaned into it.\n\n\"Your day flipped over really fast, huh?\" I said.\n\nShe only nodded.\n\n\"First thing tomorrow, you need to get in contact with my dad or lieutenant Donaver. They definitely need to know what's happened.\"\n\nShe simply nodded again.\n\n\"Are you tired?\"\n\nShe sat more erect and shook her head. \"No. Far from it now. I had a bottle of Knob Creek stashed away in my office. It's been there for a year or so. I was gonna take it home and celebrate a fantastic day with a shot or two then hit my rack, but I'm like ears open eyeballs click now.\"\n\n\"That sometimes happens to me if we have an overnight response. It takes me an hour or so to wind down once we get back to the station before I can get back to sleep.\"\n\nShe groaned. \"Oh, crap, Donny. I am so sorry. I forgot you had to work tomorrow morning and here I went and woke you up.\"\n\nI suddenly felt like a jerk that, in only trying to relate to her, I made her feel guilty.\n\n\"River, look at me,\" I urged. She did. \"Don't say that, okay? I'm no Rambo or anything, but I'm glad you called me. I'm happy to give you a safe space.\"\n\nShe smiled.\n\n\"Jeez. Look at us. Two Marines hunkered in a hidey-hole.\"\n\nShe'd gone into Marine-mode. Ears open, Eyeballs click, Hidey-hole. I wanted to draw her back to the now.\n\n\"No, just you,\" I said. \"I live here.\"\n\nThat made her laugh and seemed to ease her stress.\n\n\"River, did you ever follow through on your threat to your ex to expose his traffic ticket racket?\"\n\n\"You know what? No! I didn't!\"\n\n\"Does he know that?\"\n\n\"I don't know how he would, unless he wanted to risk bringing light to it himself by nosing around or asking.\"\n\n\"Do you think he's vindictive enough to keep you from doing it?\"\n\n\"Come on. I can't imagine anyone would kill someone to basically avoid an administrative slap on the wrist. Let alone Dennis. He's an arrogant little puffed-up turd, but not that arrogant,\" she said, \"At least I don't think so.\"\n\n\"It wouldn't necessarily be just a reprimand. He could be brought up on criminal charges for filing a false report. Or multiple false reports. Our battalion chief has said that if he were to falsify an incident report, which they have to fill out after every call, he'd could go to jail, and that's why he's always so anal about filling them out correctly and asking us to read them to see if we see any mistakes before he submits them.\"\n\n\"Oh,\" she sighed.\n\nI rubbed her back just a little longer. Again, she leaned into it. If we'd progressed to that point, I would have kissed her lips to try to ease her stress or comfort her. But we hadn't, so I didn't.\n\n\"You gonna be okay?\" I asked.\n\n\"Yeah. Thank you so much, Donny. I really appreciate you, you know?\"\n\n\"Why don't you see if you can get some sleep,\" I suggested. \"There's another door to the bathroom from the bedroom. I usually get up around six thirty or so, but I'll keep it down.\"\n\nI rose when she did. She leaned toward me and kissed my cheek. I walked her to my bedroom, she closed the door. I heard the flick of the room's light switch being turned off, and the sound of her climbing into my bed.\n\nI turned off the rest of the lights in my apartment and settled onto the couch.<hr>\n\nRIVER<br>Tuesday, October 29, 2019, 7:10am\n\nDonny's position looked uncomfortable to me as he slept on the short sofa, but he was still out cold, and I didn't want to wake him up again. I used my iPhone's flashlight to explore the kitchen. There was a coffee maker and an open box of K-Cups on the counter, and a few dirty dishes in the sink. I found a few cups in the cabinet above the Keurig, and started the machine brewing a store brand which I hoped would be passable. The brewer hissed and steamed at the end of its job.\n\nI quietly sat at the small kitchenette table to check emails and stuff on my phone.\n\n\"Hey. Were you able to get any sleep?\" I heard Donny whisper.\n\n\"Yes, I was,\" I smiled.\n\nWhat I didn't say was that the scent of his bed and room helped relax my nerves.\n\nHe started his own cup of coffee after tossing the hot spent pod into the trash. Then he tapped on his own phone while it brewed. He pulled out the opposite chair at the table and was preparing to sit when his phone rang.\n\n\"That was quick,\" he said before answering it. \"Hey, Dad.\"\n\nI could hear muted speech from the phone pressed to his ear.\n\n\"Yeah. It happened last night around eleven o'clock or thereabouts.\"\n\n\"Dad, she's sitting right here. Let me put you on speaker&mdash; Come on, Dad. Now's not the best time for this. Give it a rest, would you?\" he said with minor irritation in his voice.\n\nI didn't have to hear to know I was likely the subject of an awkward question.\n\n\"Okay. Hold on,\" he said, placing his phone on the tabletop and tapping the screen. \"Go ahead. You're on speaker.\"\n\n\"Hello? Miss Marquette?\" he said.\n\n\"Yes, sir?\"\n\n\"Give me a sec. I want to try to conference on June Donaver. She's the IA investigator you spoke with in my office a few weeks ago, okay?\"\n\n\"I understand,\" I responded.\n\nThe line was silent for about two minutes.\n\n\"Miss Marquette,\" the woman said, \"This is June Donaver. We spoke two weeks ago. I'm to understand you had a bit of excitement last night. Would you mind telling me what happened?\"\n\n\"I remember, ma'am,\" I said, then spent four or five minutes describing the event.\n\n\"How can you be certain this involved Officer Swanson?\" she asked.\n\n\"Because I have photos and some video.\"\n\n\"Hold on. You recorded it all?\"\n\n\"I'm a private investigator, so I know a little bit about countersurve&mdash;\" I felt myself getting a little irritated, so I took a deep breath. \"Yes. I did. I went out the side exit of the building and was able to get some shots of the car. I was able to tweak the contrast and stuff until I could see his face. I'm certain it was him.\"\n\n\"Do any of the photographs happen to show the unit's ID number?\"\n\n\"Give me a few minutes to see,\" I said, shooting a look at Donny.\n\nHe immediately rose from the table and fetched his laptop from the other room. The SD card was still installed. Donny unlocked it and rotated the laptop to face me.\n\n\"Is it the four digit number on the front fender?\" I asked.\n\n\"It is.\"\n\n\"It's 9022.\"\n\nWe all could hear the tapping of keys.\n\n\"Yeah, okay then,\" she said.\n\n\"What are you seeing, June?\" the chief asked.\n\n\"That unit was indeed at that location at that time. I can confirm that, at least according to dispatchers' logs, it wasn't directed there, and it left ten minutes later, a few seconds after a message was sent electronically requesting a security check. That unit indicated an intercept of a speeder doing fifty in a forty two minutes later. The dispatchers' logs indicate the caller declined a followup visit.\"\n\n\"I did. I declined.\"\n\n\"Why did you decline, ma'am?\" the chief asked.\n\n\"Because the individual shining the light into my window left. What would a followup add?\"\n\n\"I understand your point,\" the man said. \"I'm going to send a unit from a zone other than Officer Swanson's to pick you up and bring you here to my office. Can you spare a few hours?\"\n\n\"Yes, I can,\" I answered.\n\n\"You're at Donny's apartment?\" he asked.\n\nI felt my eyes fly wide, and they caught Donny's. His face showed resignation.\n\n\"Yeah, Dad,\" Donny said.\n\n\"I'll text you the unit number. Relay it to Miss Marquette. I'll have it in five minutes. Miss Marquette, please bring the photos and videos and everything you have with you.\"\n\n\"I understand,\" I replied.\n\nThe call disconnected.\n\n\"Crap, River. I wish I could go with you,\" Donny said. \"Just to sit outside the door so you'd know I was there to support you.\"\n\n\"I know you do. But I'm meeting your father. I trust that you trust him to do the right thing.\"\n\nHe nodded, then went to his pantry and took out an opened box of crunchy granola bars, then to his fridge where he withdrew a half gallon of milk.\n\n\"Breakfast,\" he chuckled.\n\nI smiled, stepping closer to him.\n\n\"Donny,\" I whispered, giving in to an overpowering desire I'd fought for weeks.\n\nI placed my hands above his hips and stepped closer. I closed my eyes and tilted my head slightly, hoping he'd understand my tacit request.<hr>\n\n<center>CHAPTER 7</center>\n\nDECLAN McHUGH<br>7:57am\n\nI quickly redialed the last number, and June Donaver answered.\n\n\"What are you thinking?\" I asked her.\n\n\"Still not convinced yet. I've been looking at his records, and there's a few things which don't sit quite right with me. If that lady can back up her statements, I think...\"\n\n\"You think what?\"\n\n\"Never mind. I don't want to get ahead of ourselves. I'm on my way to your office now.\"\n\nI called the detectives assigned to the investigation of River's shooting at Dunbar Park and asked them to come to my office, then called the District Attorney's office and asked them to send someone over, as well.\n\nOnce everyone had assembled, we discussed the matter at hand for over two hours. The four of us listened to Miss Marquette's umpteenth recounting of events, then reviewed the video and examined the photographs.\n\nI took an urgent phone call from another detective while the others continued.\n\nWhen June Donaver had heard everything she needed and had her questions answered, she retrieved an empty evidence bag from a storeroom and placed Miss Marquette's SD card inside, then sealed, signed, and logged it. She had Miss Marquette sign the affidavit she prepared during the discussion.\n\n\"Miss Marquette, do you have a place you can go to other than your residence? I'm concerned for your safety,\" I asked as we concluded.\n\n\"At this time of day, the building my office is in is pretty active. Lots of people around.\"\n\n\"I'll ask one of my plain-clothes to drop you off there.\"\n\nWe all thanked her for her assistance and I asked her to wait in the anteroom until one of my men arrived.\n\n\"This is hardly a strong case,\" the ADA said. \"The most we might be able to charge him with at this point is&mdash;\"\n\n\"Hold that thought. That call I took in the middle of this discussion was from another one of my detectives. There's more. Swanson was in an officer-involved shooting a while back. He took down a guy with a wants and warrants list as long as your arm.\"\n\n\"I remember that,\" June said. \"Other than the fact his body-cam wasn't armed, it was determined it was a clean shoot.\"\n\n\"We were able to get pretty good ballistics from the slug the on-scene investigators were able to pull out of a wall, and of course, it matched the gun found at the scene. However, in Miss Marquette's case, the bullet hit dense bone and was so distorted that our ballistics folks couldn't match it to anything. We sent it to the FBI in Quantico. Their lab popped a hit in NIBIN. To the Swanson case.\"\n\n\"Holy crap. Are you sure?\"\n\n\"The detective called me just as soon as he read the report. The two shootings are definitely linked.\"\n\n\"But how does that implicate Swanson? Doesn't that mean that he took down the man who shot Miss Marquette?\"\n\n\"There were a few oddities in the Swanson incident. When NIBIN flagged the match, our ballistics did another test and found traces of graphite in the bullet casings retrieved from the apartment.\"\n\nThe ADA shrugged.\n\n\"Too many people watch too many crime shows. Crime scene investigators don't use pencils to pick up shell casings like TV cops do.\"\n\nI watched as his brain worked it through.\n\n\"Are you suggesting Swanson staged it?\"\n\n\"It's sure as hell looking like a distinct possibility. There were what, at the time, seemed like minor irregularities. Swanson and Justin Rogers, his partner, were, for a fact, canvasing that building for witnesses in the shootings of the two joggers. But they, against procedural standards, split up at Swanson's suggestion. And, as I already mentioned, his body camera wasn't activated until after the incident commander arrived. That seemed to have been corroborated by Rogers's cam footage June's investigator reviewed.\"\n\nJune nodded her agreement.\n\nThe ADA considered all he'd heard.\n\n\"Minor irregularities and coincidences are piling up. Red flags are waving. May I?\" he asked, pointing to my desk.\n\nI nodded, so he sat in my chair and used my PC.\n\n\"Warrant bench clerk, please,\" he spoke into his cellphone.\n\nHe drummed her fingers on my desk while he waited. A few moments later, he requested an expedited review and signature for the warrant he'd submitted. Twenty minutes later, the laser printer came to life and nine pages were ejected. He stapled the pages in groups of three, handing one of the groups to Ms. Donaver.\n\n\"Arrest Dennis Swanson. The charge is homicide in the second degree.\"\n\nI'd barely opened my mouth to argue before he stopped me.\n\n\"It's an easier indictment to make stick, and a high enough charge that I can ask for denial of bail. We can re-indict for first degree if a stronger case can be made.\"\n\nRIVER<br>7:16pm\n\nI stank. I hadn't had a shower in almost 36 hours. At least my breath was fresh because Donny had given me a toothbrush and a little tube of toothpaste, the sorts dental hygienists give patients after cleanings. Though my office suite had a decent-enough unisex restroom, it didn't have a shower. I changed into the last set of spare clothes I'd stashed in the office.\n\n\"Marquette Investigations,\" I said, answering my cell when it displayed an unknown but local number on its display when it rang.\n\n\"Miss Marquette? This is June Donaver.\"\n\n\"Oh. Ms. Donaver. You're working late. What can I do for you?\""
    ],
    "authorname": "WillDevo",
    "tags": [],
    "category": "Romance",
    "url": "https://www.literotica.com/s/crimes-torts-and-trials"
}