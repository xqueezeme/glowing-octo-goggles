{
    "title": "When Ordinary Isn't Ch. 02",
    "pages": [
        "Neither Nina nor Stephanie did anything but stare at her for a few moments. Nina had even stopped chewing the grape tomato half she'd just put in her mouth.\n\n\"Wait,\" she said with a full mouth. She chewed for several seconds and swallowed. \"You said just a few minutes ago that you two scr&mdash;\"\n\n\"I know. I lied,\" she grinned. \"Now let me finish. We have to be back at work in less than a half hour.\"\n\n\"Okay,\" Nina said.\n\n\"So, yeah. I was so ready to, well, you know... it really surprised me when he called it a night. Like really surprised me.\"\n\n\"Just who was that guy?\" Stephanie asked.\n\n\"Your guess is as good as mine, but just wow. He was so charming, so handsome, so... so vulnerable. And so... well-behaved,\" she sighed.\n\n\"Were you frustrated?\"\n\n\"A little bit. Yeah.\"\n\n\"Were you horny because you were on your per&mdash;\"\n\n\"Nina!\" Stephanie interrupted, \"Knock it off!\"\n\n\"Possibly,\" Peggy answered nonetheless.\n\n\"Keep going,\" Stephanie urged.\n\n\"Well, we met at McDonald's at 8:30.\"\n\n<hr>\n\n\"Good morning,\" she said as he stepped out of her car. She'd been waiting for just a few minutes.\n\n\"Good morning to you, too. Wow. You look really nice this morning.\"\n\n\"Thank you,\" she smiled. \"It's amazing what proper wardrobe, freshly styled hair, and a little makeup can do, huh?\"\n\n\"I didn't realize your hair was so long,\" he said.\n\n\"Yeah, I keep it all tied up when I work because I can't have it getting in the way.\"\n\n\"I can imagine.\"\n\nHis eyes couldn't help study her fine appearance. Her blonde hair glowed in the morning sun as it cascaded over her shoulders in flowing waves that moved hypnotically in the gentle breeze. \n\nShe took his offered hand as they began to walk from the parking spot to the entrance but held him back a few paces from the door, quickly stepped close to him, and kissed him softly.\n\n\"Wow. What was that for?\" he asked.\n\n\"I just wanted to see if... Yeah. It was just as nice,\" she cooed, subconsciously licking and rubbing her lips together.\n\nHe smiled at her and kissed her in return. Her delicate, subtle perfume, the scent of her fresh breath and minty lips awakened him further. He felt himself becoming immediately aroused and begrudgingly separated himself from her.\n\n\"Before I forget, can I take a look at your tail light?\" he asked.\n\n\"Is that a euphemism?\" she grinned.\n\nHe chuckled. \"Well, no, but since you mentioned it,\" he answered.\n\nShe started walking toward her own vehicle and gave her rump a little extra sway as he observed it.\n\n\"Nice,\" he hush-yelled.\n\n\"It's this one,\" she pointed to the red lens of the tail light. \n\n\"Can you pop the trunk?\"\n\nShe grinned broadly at him, turned, and twerked her butt once.\n\n\"Knock it off, Peggy!\" he laughed back. \n\nShe double-tapped a button on her fob and the trunk latch released.\n\n\"It isn't working this morning, either.\"\n\nHe noticed a small chunk of wet, woody material fall from the rubber gasket. He saw the deep impression it'd left in the neoprene and the wet fabric liner underneath it. It was damp near the tail light housing. He pulled the fabric back and noticed droplets of water on the wiring harness. He disconnected the plug and removed the bulb. Peering into the recessed connector, he saw moisture.\n\nHe puckered and blew forcefully into the socket and the water was evacuated. He repeated the process several times then re-seated the bulb. He dried the wiring harness and its connector and situated everything back in place but left the fabric loosely folded out of the way.\n\n\"Okay, give it a try,\" he said.\n\nShe climbed into the vehicle and pressed the brake pedal. \n\n\"Et voila!\" he called out.\n\n\"Seriously? What'd you do?\"\n\n\"Every time it's gone out, had it recently rained?\"\n\nShe thought for a few moments. \"You know what? I think so!\"\n\n\"Yeah. There was some junk caught in the gasket so it leaked. Water got into the connector. Just a simple short. Enough to keep the lamp from lighting, but not enough to blow the fuse or cause the other lights to go out.\"\n\n\"Something so simple?\"\n\n\"Well, no guarantees, but yeah, sometimes it is. That gasket will need a little help to re-seat, though. The sunshine today might get the metal warm enough to soften and relax it back into shape, but if not, you can use a hair dryer or something to warm it enough until it does.\"\n\n\"That's incredible,\" she said. \"Thank you!\"\n\n\"My pleasure,\" he smiled, took her hand, and led her inside.\n\nNot standing on any ceremony, the two settled into a booth with their breakfasts. She'd ordered the big breakfast with pancakes. He ordered two egg and sausage sandwiches with hash browns. \n\n\"So what are your plans for adventure today?\" Peggy asked.\n\n\"I don't have any. I usually don't. I just go wherever. If I see something that sparks my interest, I go check it out.\"\n\nHe waited to see if she made the connection. By her smile, he knew that she'd picked up on the clue that he genuinely wanted to be with her.\n\n\"Have you been to Cocoa Beach?\"\n\n\"No, but I don't think I could manage with...\" and he pointed at his foot.\n\n\"Fair point if you want to walk barefoot or get in the water,\" she acknowledged. \"Is your foot tender?\"\n\n\"A little, especially if I'm on it for a while.\"\n\n\"Gets throbby?\"\n\n\"Yep.\"\n\n\"It'll feel better in a few days,\" she said. \"So. Anything requiring a lot of walking is out, so no theme parks, unless you get a motorized scooter. Water parks are out of the question, too.\" She thought for a few moments. \"You like go-karts?\"\n\n\"Do you really need to ask?\" he chuckled.\n\n\"Guess not. I've been in your rental. Would you enjoy Andretti's?\"\n\n\"What's that?\"\n\n\"It's an activity place with an arcade, bowling, stuff like that. But the big draw is the indoor go-kart tracks. The karts are battery powered. Electric means nice torque and acceleration. If you go through the training course, the adjust the governor and they get close to forty miles an hour.\"\n\n\"Now you're speaking my language,\" he grinned. \"That sounds fun. You want to drive?\"\n\n\"Of course I do,\" she laughed, \"that's why I suggested it. But they're single seaters, not tandems, so we'll both be driving.\"\n\nHe chuckled. \"That's not what I meant. You want to leave your car here and drive us in my rental?\"\n\n\"What?\" she gasped. \"No way. Huh uh. I'd be in serious trouble if I got us in even a little fender bender.\"\n\n\"Nah, it'll be okay. I promise. I took the insurance.\"\n\n\"You're going to let a stranger drive that car?\"\n\n\"You're not a stranger anymore.\"\n\nHe could see the obvious excitement in her eyes. After all, she'd never driven anything more sporty than a Mustang GT. She'd never driven anything close to that incredible automobile.\n\n<hr>\n\n\"You're joking.\" Nina was suddenly interested. \"An Audi R8?\"\n\n\"Yeah. It was a gorgeous car. It roared. It was almost as good-looking as him.\"\n\n\"Almost? Are you out of your mind? Most women would think even a greasy, fat slob was handsome if they saw one wheezing out of one of those.\"\n\n\"That offends me. You're disgusting,\" Peggy groaned.\n\n\"Peg, do you know how much an R8 costs?\"\n\n\"What do I care? It was a rental.\"\n\n\"Maybe,\" Nina countered, \"but a new one can cost almost a quarter million, so I would bet that a rented one would cost more than a thousand bucks a day.\"\n\nPeggy visibly paled. \"Oh my god.\"\n\n\"Yeah,\" Nina laughed.\n\n\"Cut it out. Don't mess with me like that,\" Peggy said with a touch of desperation in her voice.\n\n\"I'm not, honey.\"\n\n\"I knew it was a pricey car, but not&mdash;\"\n\n\"So what happened? Did you wreck it?\" Stephanie asked.\n\n\"No I didn't wreck it! I didn't put a scratch on it. I didn't have a chance to get it over eighty miles an hour.\"\n\n\"Why not?\"\n\n\"Because there's no Autobahn here, stupid, and neither of us were willing to take the risk of getting pulled over.\"\n\n\"Wimps,\" Stephanie teased. \n\n<hr>\n\n\"That was so incredible,\" he said, almost breathlessly, as he unbuckled himself from his kart. \n\n\"I thought you'd like that,\" Peggy grinned from ear to ear. \"How's your foot?\"\n\n\"Well, I wasn't using the brake much, so it's fine. Wanna go again?\"\n\n\"Hell yeah,\" she laughed. \n\nHe bought them three more sets of races. The fifty pound difference in weight gave her a slight advantage, and her skill allowed her to capitalize on it. She beat him on almost every heat.\n\n\"The helmets have completely wrecked my hair, haven't they,\" she laughed, looking at her reflection in the window as they passed through the briefing room for the last time.\n\n\"A little, maybe, but you still look fantastic,\" he said honestly.\n\nThey went to the bar and sipped on a couple of soft drinks while they conversed and chatted.\n\nThey played laser tag twice. The second time, she studied the monitors in the staging area, noting on the CCTV observations cameras a few places in the arena she could use to her advantage.\n\nIt was a slow day at the center, and they had the arena to themselves for the second bout. As soon as they were ushered into the arena, she ran away from him and waited in her chosen spot, an area devoid of coverage by the cameras. She didn't want the operator to see what she was planning.\n\nHe sought her out, canvasing, he thought, the entire field. She'd beaten him squarely in the kart races, but he was bound and determined to top her score in tag again.\n\nHe hunted her slowly and methodically. He thought his pursuit was so stealthy that he was startled when a hand grabbed his target vest from behind and pulled him aggressively between two corner shields. The next next thing he knew, Peggy's tongue was in his mouth and her hands were grasping his backside. The vests were an interference, but that didn't prevent him from enjoying the taste of her mouth and the scent of her breath. He pawed at her bottom, seeking to draw her tightly to him, but the vest was too bulky and cumbersome to allow it.\n\nHe felt her hand snake up between them. She pushed him against the wall and shot him squarely in the chest with her own weapon. The wicked smile on her face made him laugh out loud just as the time ran out and the end-of-game alert chimed. She'd beaten him with a single shot.\n\nHe kissed her softly before they walked out of the arena, hand in hand, both laughing at her trickery. \n\n\"You hungry? They've got lots of good food here,\" she asked. \"You've been so generous to me, please let me buy lunch.\"\n\nHe sat on a bench and slipped off his shoe to rub his foot.\n\n\"Starting to get achy?\" she asked. \n\n\"Yeah, just a bit.\"\n\n\"Maybe laser tag wasn't the best idea. We should rest for a bit.\"\n\n\"I'm okay. Besides, I'm really having a lot of fun with&mdash;\"\n\n\"Hold on a sec,\" she said when something caught her eyes.\n\nHer brows furrowed. She knelt down on the carpet in front of him and lifted his foot.\n\n\"Nope, we need to get you back to your place and get your foot propped up.\"\n\n\"Why?\" \n\n\"You're oozing through your sock,\" she said, matter-of-factly.\n\n\"Oh, great,\" he groaned. \"Should I go back to the ER?\"\n\n\"Probably not, I can check it out when we get you back.\"\n\n\"Huh-uh. No!\" he argued. \"The last thing I want is to make you work.\"\n\nShe laughed tenderly. \"Are you kidding? Compared to what I see in a day, you've got just an itty-bitty boo-boo. Let's go. We can stop and grab some food on the way there.\"\n\n\"Okay, okay, you win,\" he said, slipping his shoe back on but leaving it untied to relieve the pressure.\n\nHe tucked the laces out of the way. She smiled when he handed her the fob to the R8 again. She loved driving it, and she particularly enjoyed the passenger even more.\n\n\"I picked breakfast, you pick lunch,\" she said.\n\n\"Panda?\"\n\n\"It's like you're reading my thoughts,\" she laughed.\n\nThat he had something instantly in mind impressed her. In her experience, most dates would be unnecessarily deferential. The moment he said it, she knew exactly what she planned to order, and her stomach growled, quite audibly.\n\n\"Hungry?\" he chuckled.\n\n\"Like you can't imagine,\" she answered.\n\nEric enjoyed watching her delight in his rental, and was pleased that the high-performance engine was coupled with the 7-speed dual-clutch automatic transmission. While he was a bit of a purist and would have preferred a manual transmission, he was happy that it left her right hand unoccupied so she could hold his during the drive. \n\nHe was a bit confused when she pulled off the road into a small shopping center until he saw the sign on the building to which she'd driven. It was the drugstore.\n\n\"Wait here. I'll just be a minute,\" she said as she opened her door.\n\nA short time later, she returned carrying a bag containing a small bottle of hydrogen peroxide, a box of sterile gauze pads, adhesive bandages, and another item Eric couldn't identify.\n\n\"You're taking the prescription you filled last night, aren't you?\" she asked.\n\n\"Yes, Doctor,\" he chuckled. \"One last night and one this morning.\"\n\n\"Good. Now, let's get some food!\" \n\nAfter passing through the drive-through (earning some appreciative automotive ogles from employees at the window) and completing the drive to Eric's resort, Peggy carefully parked his rental in the structure and they returned to his suite. \n\nHe placed the to-go bag on the counter in the kitchenette and she motioned toward the sofa. He took a seat.\n\nShe pulled the rolling chair from the desk and sat in front of him, placing the supplies she'd bought at the pharmacy atop the coffee table.\n\n\"Okay, let's see what's going on here,\" she said, carefully removing his shoe and sock. She propped his foot on her knee.\n\n\"Anything wrong with it?\"\n\n\"Well, yeah, you've got a hole in your skin and it's been sewn up,\" she chuckled, paying close attention to what she was doing.\n\n\"Nothing to worry about, it's what I expected, and it's completely normal,\" she said as she moistened a square of gauze with peroxide and dabbed it on and around the sutured wound at his instep.\n\n\"Does this hurt?\" she asked.\n\n\"No, but it's cold.\"\n\n\"I'll bet,\" she said. She covered the site with an adhesive bandage.\n\n\"Change this every few hours until it stops draining. The sutures can come out in a few weeks.\"\n\nShe deliberately tickled the arch of his foot, and he reflexively pulled it away from her.\n\n\"What was that for!?\" he laughed.\n\n\"Just checking for nerve damage,\" she grinned.\n\nHe sat for a few moments just looking at her.\n\n\"You know what? I'm really having a lot of fun being with you. I like you.\"\n\n\"Yeah? Well, I kinda like you, too,\" she smiled back.\n\n\"Come here,\" he said, patting the cushion next to him. \n\nShe sidled next to him and he wrapped his arm gently around her shoulder.\n\n\"Can I ask you a question?\" he said.\n\n\"Of course.\"\n\n\"What you do. What you do for work. How do you do it? How do you go through the day with what you see and have to do for those kids?\"\n\n\"Well, it took practice, of course.\n\n\"When I was beginning my internship, I seriously thought about changing disciplines. It was so hard to see little kids in the states they were in. It was emotionally draining, but I was encouraged by my attending to keep at it. I soon learned that I had to distance myself from them as children. I know this sounds dark and heartless, but sometimes I have to stop thinking of them as humans when I first see them.\"\n\n\"Yeah, you're right. That sounds harsh.\"\n\n\"But it makes it easier for me to remain objective, to stay in the moment, and to do what needs to be done if I think of the patients as... more like broken machines. I assess the mechanics, and I do what needs to be done to put things back together. Kind of like you in some ways, I guess.\n\n\"But, usually, that's where the total objectivity ends. After I get them out of the surgical center, I see them as humans again. When I see them improving during follow-ups, I...\" she paused.\n\n\"You what?\"\n\n\"That's when I usually get sappy and weepy. I love kids, you know? The joy it brings me to see them leave the hospital usually wipes out the bad days.\"\n\n\"Usually?\"\n\n\"Yeah. Usually. Sometimes it... Well, sometimes things go bad fast and it feels like getting the rug yanked out underneath me. Those days are rough.\"\n\n\"I can only imagine,\" he said, stroking her shoulder. \"Thank you for what you do. Really.\"\n\n\"You're so sweet,\" she sighed.\n\nShe enjoyed the close, tender contact between them, the feel of the heat of his body radiating into hers soothed and comforted her. She felt him kiss her temple softly. She was worried that he'd taste the residual dried sweat on her skin. Instead, he inhaled against her hair and sighed.\n\n\"You smell really nice,\" he said.\n\n\"You don't have to keep paying me compliments, you know,\" she said as she pivoted around and embraced him.\n\nShe licked his lips and pushed her tongue between them. His darted into hers as they exchanged heat, passion and passion and moisture between them.\n\n\"You've already got me hooked,\" she said with occupied lips.\n\nShe repositioned herself fluidly, straddling his legs and pushing her knees under the back cushions of the sofa with her bottom on his thighs. She grasped his hair in her hands and brought his mouth to hers, allowing him to consume her. Her mouth watered with the flavor of his kisses, and he relished the moisture with his own, drawing her into him.\n\nHe held her bottom in his hands, feeling the heat of her body through the cloth of her shorts. Her driving embrace and the intensity of her affection aroused him. He was certain she could feel his state through the crotch of her shorts, and the worry began to rise within him as she ground against him and groaned.\n\n\"Eric, what have you done to me?\"\n\n\"I don't know... but... but please stop,\" he said.\n\nHis heart was pounding so hard he could hear his own pulse in his ears. He wasn't sure if he'd spoken loudly enough because he wasn't even sure he heard his own words. But when she immediately froze and stopped kissing him, he knew.\n\nShe pushed herself away from his chest with her hands against his shoulders and looked at him with concern in her eyes.\n\n\"Why? What did I do wrong? I thought you&mdash;\"\n\n\"God, Peggy. You're like no other woman I've ever met. But I can't stomach the thought of...\"\n\n\"Of what, Eric?\"\n\n\"A one night stand,\" he said, meekly.\n\n\"Talk to me. Tell me what's going on in your head,\" she challenged, gently stroking his cheek with her palm and rubbing his lower lip softly with the pad of her thumb.\n\n\"For one thing, I'm afraid I'm hooked on you, too. And I'm going back home tomorrow.\"\n\nShe watched his eyes for a few moments. His demeanor astounded her. She knew with certainty he was as into her as she was him. She could feel the evidence between her thighs. She was confused why he'd be turning away what would undoubtedly be a mutually enjoyable experience.\n\n\"I know, but... what if maybe you stay another day or two, considering you don't have a job waiting for you, you know?\"\n\nHer eyes conveyed a desire he'd never seen. \n\n\"I can't. I wish I could, but no. I just can't. I don't have a desk job anymore, but there are other things going on which I can't ignore.\"\n\n\"Listen to me, will you? Why does the idea of a one night stand put you off?\"\n\n\"It's just... wrong.\"\n\n\"I don't get it,\" she said, kissing him softly again.\n\n\"It's just not a nice thing to do.\"\n\n\"Oh, okay. I think I understand. You're a gentleman. You're being chivalrous, and that is an incredibly rare thing these days, and one of the things that's really attracted me to you. But I think your mind is twisted in the wrong direction.\"\n\n\"How so?\"\n\n\"A one night stand is a bad thing because it's intentional, and the separation the next morning is convenient and preferred, and usually one-sided. Like an abandonment. Am I right?\"\n\n\"You are. I'm not the kind of guy that takes what he wants and then drifts into the wind. I don't want you to think of me like that.\"",
        "\"Would you stick around longer if you could?\"\n\n\"You bet I would,\" he said.\n\n\"Well, then this isn't that. You need to go. I need to stay here. It's not convenient. It's not preferred. It's unfortunate for both of us, so don't think of it as a one night stand. This could be a night I hope we both enjoy and regret having to see end.\"\n\n\"Oh?\" his eyes and expression suggested he was grasping her meaning.\n\n\"Yes, Eric. I don't like the term myself because it sounds so tawdry. But I can think of nothing I'd rather do than spend the rest of your time here with you,\" she said before kissing him softly.\n\n\"Besides,\" she added when she felt him stiffen between her legs again. \"It's not night yet. It's barely one o'clock in the afternoon, and I don't plan on leaving until you tell me to.\"\n\n\"My word, girl. How did I manage to meet you?\"\n\n\"Luck of the stars, or maybe the weather. And your honesty... your sensitivity. You thought to protect my dignity when... well, you know. And the way you treated me with such respect last night, with kindness and generosity, and the way you seem so timid, yet I can smell smoke rising from you from some fire I hope I might be responsible for.\"\n\nHe pulled her to him and took her tongue into his mouth.\n\n\"You are so totally responsible,\" he groaned in pleasure of her flavor.\n\n\"Ooh hell,\" she mewled, feeling his erection in contact with her genitals through the multiple layers of clothing.\n\n\"Talk to me. Please talk to me and tell me what you want... what you like.\" \n\n\"You... you've knocked me off course so I don't know,\" he answered.\n\nShe shivered as he traced his fingers over her scapulae and down the sides of her body. Goosebumps appeared on top of goosebumps.\n\n\"Just... touch me more,\" she sighed.\n\n\"Can I... \" he asked, tugging at the base of her tucked shirt.\n\nShe nodded, leaning back and raising her arms.\n\nHe enticed himself as he very slowly lifted her shirt. His eyes delighted in the sight of her bra. He leaned into her and inhaled the scent of her skin. His senses caught the aromas of their shared morning entertainment and his nostrils flared. He traced the tip of his nose across a cup of her bra and she quivered when it passed over a firm pea-sized morsel he didn't feel underneath the spongy padded fabric. \n\nWhen she caught the desire showing in his eyes, she playfully removed the garment, stretched the elastic, and shot it to the corner of the room. His pupils dilated when his eyes caught sight of breasts he could only describe as perfect. Nipples that begged to be suckled sprouted from pink areolae just slightly broader than them.\n\n\"Oh fu&mdash;\" he aborted his expletive when he saw her sculpted tummy, taught and lean.\n\n\"Say it, Eric, you don't need to be polite. I'm a big girl,\" she begged.\n\n\"You're not a girl. You're a hotter-than-hell woman. Your breasts are so beautiful,\" he groaned before taking a nipple into his mouth, pulling at it with his lips as it hardened. He then tugged gently at the other.\n\n\"That feels so good,\" she purred. \n\nShe felt the fingers of his hands trace from her suede belt down the center seam of her shorts. One hand continued lower, seeking her, craving to touch her between her legs. It met her warmth.\n\n\"Be careful, Eric, okay?\" she murmured. \"I don't want to mess up my clothes again. I didn't bring a change with me.\"\n\n\"Okay, I'll stop. Sorry.\"\n\n\"I don't want you to stop, but what I want to do might mess with your brain and I don't want that,\" she said with frantic kisses between spoken words.\n\n\"I don't care. I desire you more than anyone I've ever met,\" he hissed.\n\n\"Oh?\" she cooed. \n\n\"Oh.\"\n\n\"It's not something I've done before, and it will probably be a bit messy. Are you willing?\"\n\n\"With a perfectly feminine creature like you? I want to get messy with you. We can go shopping later.\"\n\nHe grasped her waist and pushed his hardness against her crotch. She shimmied down his thighs and pressed her palm against the front of his shorts. \n\n\"You're so hard,\" she groaned, feeling his shaft through his clothes. \"I want it. I need it,\" she whispered.\n\nHe nudged her away and she pivoted off his lap.\n\n\"Come here. Follow me,\" he said, offering her a hand which she took. He led her to the bathroom and started water flowing in the shower.\n\n\"Good idea,\" she said, pulling at the back pocket of his shorts. \"But first, I want to see the smoke,\" she cooed, eliciting a chuckle from him.\n\nShe turned him to face her and unbuttoned his shorts and slid the zipper slowly down. Her eyes widened when she slid them down along with his boxers, looking at his man-parts. He drew her back to her feet.\n\n\"My turn,\" he said, kneeling in front of her.\n\n\"Eric, are you sure you&mdash;\"\n\n\"More than anything,\" he answered.\n\nHe removed her shorts first, and was awed at the sight of her snug snowy-white panties.\n\n\"Oh, jeez. That's so hot,\" he whispered.\n\n\"What is?\" \n\n\"Why is such simplicity so sexy?\" he asked, pressing in opposite directions against her hips, turning her so he could see her pantied bottom. He softly stroked her buttocks and traced the elastic at her legs. He felt his penis throbbing, beating in rhythm to his pulse.\n\n\"May I?\" he asked, tugging at the elastic around her waist.\n\nShe nodded.\n\nAs he had with her shirt, he teased himself by drawing her panties ever so slowly down. He nipped at her bottom with his teeth, eliciting gasps from her. The elastic of the waistband stretched and thinned as he lowered it over her hips and the beginning swells of her slight bottom. He saw the crinkled opening of her cute little butt and anticipated the glorious exposure as the gusset of her panties began to separate from the full, fleshy vulva it concealed.\n\n<center>+-+-+-+-+-+-+-+-+</center>\n\nEven though she was facing away from him, he saw a pair of threads between her lips. They unfurled as the fabric of her panties was pulled away from her groin. They dangled from her body and moved in the breath he exhaled at the sight.\n\nShe worried about what he was thinking. She was concerned with her appearance and scent until she felt and heard his warm exhalation. That even a released breath could excite her was an incredible newness. He again grasped her hips gently to pivot her to face him.\n\nHis eyes delighted in the full, beautifully sculpted and trimmed mat of pale fur. He looked up to her eyes and his arching lips and cheeks offered her a wonderfully appreciative testament of his delight before his lips relaxed to kiss her mons.\n\nIt was the lightest of kisses. It wasn't stationary. He teased his nose and lips with the texture of the coarse hair and the delicate scent of arousal rising from her. He deposited a firmer kiss onto the spongy flesh of her pubis and pulled at the hairs he'd clamped between his lips. \n\nPeggy gasped then sighed deeply feeling the tugging of the follicles. Grasping his hair, pulling him firmly into that clutch, her clitoris tingled despite being fully hidden between her labia.\n\n\"Good god, you're so beautiful,\" he purred and nibbled lightly at the pad of flesh.\n\n\"I love what you're doing,\" she whimpered because she'd never experienced such sensations before.\n\nHe was so squarely in the moment with her that his desire rang in his ears.\n\n\"I want you to feel good. I want to give you pleasure. What should I do?\" he asked.\n\n\"The shower is a good idea. I'm so ready, but I... I need a moment of privacy before I get in.\"\n\n\"Why?\" he asked.\n\nAs an answer, she parted her knees slightly and pointed at the strings dangling from her body.\n\n\"I'll do whatever you ask, but if you'll permit it, I really don't want to leave.\"\n\nShe saw the intense curiosity in his eyes and the turgidity of his involuntarily bobbing erection. She wanted it inside her body, and she was more than willing to acquiesce to his desires to expedite their coupling. \n\nShe wordlessly stepped to the toilet. She lifted the lid and squatted with her knees astride it. She unrolled about eighteen inches of tissue from the dispenser and folded it into a pad about six inches long. With her free hand, she tugged at the strings until she felt it begin to emerge from her introitus. \n\n\"Are you sure?\" she asked.\n\nHe nodded, watching.\n\nShe withdrew the tampon and enclosed it in the paper she'd prepared. She placed it into the waste basket adjacent to the toilet. She feasted on the accepting desire he displayed. His eyes widened further when she allowed him to watch her, much to his surprise, empty her bladder.\n\nMore from habit than necessity (considering she was about to shower), she wiped herself with another pull of the paper from the roll then sat upon the seat.\n\n<center>+-+-+-+-+-+-+-+-+</center>\n\n\"Come here,\" she requested, crooking her finger at him. She reached to the vanity and removed from a bag the condoms she'd bought at the drugstore.\n\n\"This might seem indelicate. For that I apologize, but I insist,\" she said very evenly, holding the box toward him.\n\nHis mind processed her words. He knew she was being rightfully cautious and chastised himself for not thinking of it himself.\n\n\"I agree,\" he said, removing one of the five packets from the perforated chain. He peeled open the foil and carefully situated its contents along his shaft. He pinched the tip of the condom to extend its reservoir as she watched, aroused, more than interested.\n\nShe stepped into the shower. She almost yelped in glee when she noted the grab bars. She took deliberate hold of one and pushed out her little bottom toward the back of the tub.\n\nHe followed her lead and slid the curtain closed behind him.\n\nEric knew Peggy had no idea who he was. There could be no preconceived notions because she knew nothing about him or what he'd recently done. She was in the moment, and she wasn't judging or taking advantage of him. Her lack of knowledge was a blessing in disguise. He craved her and allowed himself to enjoy the incredible intimacy she was offering because of those facts. It was only the two of them.\n\nHe was hers, and she was his. \n\nShared, entirely mutual, and genuine intimacy was something that had been absent from his life for quite some time. His unfortunately too-honed senses believed she was not attempting to use him, and he allowed himself the rare pleasure of an attractive, encouraging woman that was displaying true desire to satisfy her own cravings.\n\nWithin moments, with comfortingly warm water pouring on them both, he pushed himself into her body.\n\n\"Oh!\" she cried out. \"Oh, Eric, you... you... you're perfect.\"\n\nThe tightness of her body felt exquisite to him. She leaned further forward until her back was almost parallel to the floor of the tub which allowed him to enter her completely with his full length, his scrotum against her skin.\n\n\"Don't move yet. Just... let me feel like this. You feel so good,\" she mewled, pushing her bottom firmly against his hips.\n\nHe felt her squeezing his length and saw her anus constrict tightly with the contractions.\n\nShe felt his penis nestled at her cervix. Her genitals felt full, engorged, and incredibly sensitive. His size and shape aligned to reach a spot she attended to with toys when she was by herself. She'd never felt it touched before by a man. Her body gripped and squeezed in reflex at the sensation. She rocked her pelvis ever so slightly. Her insides felt every touch in that magic, tingling hollow.\n\nShe brought her free hand between her legs and strummed her clitoris with her fingers. He could feel her motions fluttering her labia around the base of his penis.\n\n\"Oh shit, you feel so good. You're right there. You're right on a spot,\" she rasped. \n\nHe withdrew an inch and pushed even more firmly into her body, grasping her hips, seating himself fully into her. \n\n\"Yes! Like that. But harder,\" she begged.\n\nThat she knew exactly what she wanted, and was unencumbered in vocalizing her desires, thrilled and empowered him. He did exactly as she asked, withdrawing slightly and ramming into the pocket that stimulated her fully.\n\n\"Oh fuck yes yes yes... \" she stammered after a dozen strokes.\n\nHer anus winked repeatedly.\n\nIt had been some time since Eric had witnessed a woman evidencing genuine climactic pleasure. His prior three encounters were pretenders. He'd always found it suspicious when any woman had an apparently powerful orgasm mere moments after he'd experienced his, even if he faked it.\n\nIt had been that realization that made him swear off. He horridly disliked the false fronts women would put on with their insistence that their pleasure didn't matter, or was on cue. \"I only want to make you feel good,\" they'd say.\n\nHe hated being played. He was certain he hadn't given a woman an orgasm due to their own genuine desire and pleasure in ages, but not then, not there, not with Peggy. There was nothing fake about her or her climax, and that fact brought him pleasure unlike he'd experienced in that same long while.\n\n<center>+-+-+-+-+-+-+-+-+</center>\n\nHe increased the stride of his strokes, pulling out then driving himself back in to his root. It didn't disturb him to see the colorless latex was becoming streaked with her menses. Instead, it pleased him that she was enjoying herself and wasn't worried about him experiencing her even then. It allowed him to wrap himself in the exquisite pleasure the offerings of their bodies afforded.\n\nHe felt the familiar sensations begin to draw near. He grasped one small cheek of her bottom in one hand and the opposite hip in his other. The tiled bathroom echoed with the slaps of his thighs against hers.\n\n\"God, Eric. Here it comes again! What are you doing to me?!\" \n\nThe rhythmic pulses within her floor ended him. He emptied himself a few strokes later, pushing as deeply into her body as he could. The hand at her crotch reached out to the wall to steady her body as he tried to climb inside her. Her ankles and calves flexed as she stood on her toes with the force of his final thrust. The completeness of her vaginal grasp, the vision of the water soaking her hair, rolling down her back, down the cleft of her bottom, over her anus and around his root tore at his emotional barriers. \n\nHe neared a point where he almost cried out words of affection, but he trapped them in his mind. His esophagus burned when he swallowed the initial utterance. He forced his emotions to settle before she might sense his state.\n\nPeggy didn't know where her own emotions were because of her stupor. Though she might have felt shame in the improbably quick, impromptu trip from meet-and-greet to intercourse which set a record by months, she didn't. She felt quite good about it. She hadn't felt so satisfied in years.\n\n\"Oh, good lord, Eric...\" she panted. \n\nHe slowly withdrew and let the water rinse her blood off of his condom and her vagina then drift toward the drain.\n\nWhen she noticed the tinged water below her, she, acting on instinct, pressed a hand to her body to stem the flow.\n\nEric chuckled.\n\n\"Peggy, you don't need to worry about it. It's okay. We're in the shower.\" \n\nShe removed her hand and rinsed it off when his observation made her feel a little silly. She turned to face him.\n\nWith one hand, she pulled his neck toward her for a steamy shower kiss, and the other held his softening penis. She loved the flavor of his mouth, and it made her curious beyond description. She adjusted the direction of the shower head, removed the bar of soap from the small wire dish, and knelt in front of him. With soapy hands, she washed his mat of hair.\n\n<center>+-+-+-+-+-+-+-+-+</center>\n\nShe gazed into his eyes and smiled the sweetest, most serene smile he'd ever seen. Though his pulse was still elevated from their romp, her expression made it quicken. When the soap rinsed away, he felt for the base of the condom to remove it. She playfully swatted his hand away. She lifted his penis and looked at the reservoir of the condom, swollen with the semen trapped within it.\n\nShe carefully and gently removed the latex from his penis and peered at the condom, feeling its weight. She dropped it near the drain, then took him into her mouth and tenderly suckled and cleansed the semen from its tip.\n\nShe knew from her urology rotation that men found such direct stimulation uncomfortable after an orgasm, but she craved to taste him. Her skin tingled when she did and heard him groan for a few seconds before he pulled away from her. Once more, she soaped her hands and washed his shaft and glans very gently.\n\n\"God, girl... just... god.\"\n\n\"Was I good?\" she asked with honest desire for an answer.\n\nThose three exact words grated against his skin. It was a common question from the women that bedded him, seeking to ensure he was satisfied. He knew they were only taking his temperature to see how much more likely it'd be they'd get what they wanted.\n\nHis logical brain thankfully stepped in front of almost barked words when he realized it just wasn't possible with Peggy.\n\n\"What is it?\" she asked, sensing his delay and introspection, even seeing echoes of his former aborted emotions in his eyes.\n\n\"I don't know. This is going to sound way corny and sappy, but there's something about you that I just haven't experienced in way too long, and it's really quite pleasant,\" he answered honestly. \"You made me feel extraordinarily fantastic.\"\n\n\"Wow,\" she cooed, rubbing his back. \"You made me feel incredible, too. I haven't had an orgasm so intense in ages. My god. You did it twice, for crying out loud. You get to a spot inside me that... Well, I haven't experienced that in way too long, either.\"\n\nHe decided not to bring up the fact that her comparison, being a physical one, was different than his emotional meaning. He didn't want her to feel burdened by that at all, considering they'd agreed that the imminent separation was already part of the puzzle.\n\n\"There's something else, though, right?\" she asked. \n\n\"What do you mean?\"\n\n\"You looked for a moment like you looked at me when we were having dessert. Right before you told me about what happened to your sister. Is there something else you're not telling me?\"\n\nHer eyes conveyed genuine concern for him, not herself. Her gaze compelled him to answer.\n\n\"Yeah, maybe. I really don't feel comfortable going into any detail. But just like I told you yesterday, I've been burned a few times. It makes it difficult for me to be open. To trust.\"\n\n\"I remember, but you asked me out for dessert anyway.\"\n\n\"That's because I do trust you. I'm comfortable around you because you're...\"\n\n\"I'm what?\" she whispered tenderly.\n\n\"Don't take this the wrong way. But you're... real. I think.\"\n\nThat made her laugh because it sounded like he was only accustomed to interacting with androids. But she understood his intent.\n\n\"Wow! That's a high compliment!\"\n\nHer statement wasn't sarcastic in the slightest. It made her feel good to be equated with whatever concept of reality made him feel delight, comfort, pleasure, and trust.\n\n\"Let's get out of here,\" he said. I'm getting hungry.\"\n\n\"Holy crap! I totally forgot about our lunch,\" she laughed. He adored her laugh. \"We'll probably need to nuke it,\" she said, turning off the water.\n\nShe thought about certain logistics for a few seconds, but decided there was no reason to hesitate with him. She'd already shown him much worse, and wasn't afraid to ask for a favor.\n\n\"Would you mind bringing me my purse?\" she said as she dried off.\n\nWhen she saw a small pink streak on the towel, she added \"stat\" with a chuckle.\n\nHe saw it, too, and laughed with her delightfully playful use of her professional argot. \n\nWith his towel knotted at his waist, Eric ducked out of the room. He paused for all of four seconds thinking about how easy it'd be to unsnap her purse, find her pocket book, and take a quick peek at her driver's license or a credit card to discover her full name, but resisted the urge. He brought it to her.",
        "She looked at her hands. \"Um, I don't want to get it wet. Could you open that snap and hand me a tampon?\"\n\n\"Uh, sure,\" he said, surprised that she was not only allowing but encouraging him to look through her purse. He'd always thought such an act to be taboo, but he did as she asked.\n\nShe didn't ask him to, so he didn't leave. She only grinned mischievously as he watched her place it into her body.\n\nEric went to the bedroom and made sure his sutures were dry before he replaced the bandage. After donning clean clothes, he went to the kitchenette and started re-heating their lunches. It'd been more than an hour since they'd arrived back at the condo, so they had cooled somewhat. \n\nShe was fully dressed when she rejoined him. Her hair had been blown dry, but it'd lost most of its styling.\n\n\"Do I look okay?\" she asked.\n\n\"Of course you do. You make natural beauty raise its bar,\" he answered honestly.\n\n\"I want to ask you something,\" she said, \"and I'm not judging. I'm just curious, okay?\"\n\n\"Sure. Anything.\"\n\n\"Did watching me remove my thing turn you on?\"\n\n\"Yeah. But probably not for the reason you're thinking,\" he answered.\n\n\"What do you mean?\"\n\n\"I was just... curious. What got my blood moving was... was your willingness to share something so personal with me. Same thing when you...\" he stopped.\n\nShe chuckled at his hesitance. \"When I peed?\"\n\n\"Yeah,\" he said, meekly. \"It kinda makes me think that you trust me, too.\"\n\n\"I do trust you,\" she said. \"Thank you for your honesty. I can't tell you how refreshing pure honesty is to me. And I know you probably think I'm weird that I let you watch.\"\n\n\"Weird? No. Not at all.\"\n\n\"Kinky?\" she laughed.\n\n\"Yeah. Maybe.\" he smiled broadly. \"It's something I've never in my life seen, and again, you... you let me see things from your point of view, kind of.\"\n\nHe watched her body language and her expressions, seeking any clue that he'd crossed a line. \n\n\"You know what? I don't care. I don't!\" She paused. \"Wait, that doesn't sound right. I do care. But... the way I figure it, I'll never see you again, so what the hell. I let a little kinkiness sneak by,\" she grinned.\n\n\"I'm really, really having a lot of fun being with you, in case I haven't said it recently,\" Eric smiled.\n\n\"Me, too. And please don't think I'm what any other ordinary man would think I am after the things we've done in the last eighteen hours.\"\n\n\"That hurts,\" he groaned dramatically. \"You're more than what any ordinary man would think you are. You're far more.\"\n\nHe popped open the microwave and sat her plate of steaming food on the table along with a fork. He fetched the napkins and the packets of soy sauce, chili, and hot mustard, and placed them on the table, then began nuking his own. He noticed she didn't touch a thing until his was warmed and he'd sat down with her, but as soon as he sat, she grabbed two packets each of the mustard and chili. It would have been unremarkable except that he always used the same combination.\n\nOh, shit, he thought to himself because \"compatibility\" was a word that he would usually use only to describe hardware and software. \n\n\"You know what would make this meal even better?\" he asked.\n\n\"A very slightly chilled bottle of Merlot?\"\n\nOh, shit, he repeated to himself for the same reason.\n\n\"No, I was thinking a six-pack of Bud Light,\" he lied as a playful test.\n\n\"You're out of your mind,\" she grinned. \"Beer and burgers, yeah. Maybe even pizza. But with spicy Asian food, a good Merlot rules.\"\n\nHe chuckled at her perfect observation.\n\n\"Hey! Can I... uh, never mind,\" she aborted her words.\n\n\"What?\" he asked.\n\n\"Uh, I kinda want to have some of yours, too,\" she said with a sheepish grin.\n\n\"So right!\" he said, offering his plate to her, from which she scooped several small portions. Without him asking, she placed some of her own on his plate. As they had with their desserts the night before, he was delighted she wanted to share with him.\n\n<hr>\n\nPeggy saw the two ladies staring at her. \n\n\"What!\" she demanded.\n\n\"Wow,\" Stephanie whispered, while Nina said nothing. \"That is so sweet,\" she blinked.\n\n\"Told ya,\" Peggy said before she took a big bite of her sandwich and started chewing. The other two had long-since finished their meals, but Peggy's had barely been touched because she had been too busy talking.\n\n\"Is that it? Is that the end?\"\n\n\"No,\" Peggy answered with her napkin covering her full mouth.\n\n\"Come on, Peg. You have to show me a picture,\" Nina finally spoke.\n\nPeggy wordlessly took her phone from her pocket and opened the photo app and handed the phone to Nina. Stephanie scooted her chair closer to Nina so she could see as well.\n\n\"Oh my god,\" Nina mewled. \"He's so beautiful!\"\n\n\"Beautiful? What are you, eight?\" chuckled Stephanie. He's like completely&mdash;\"\n\n\"Perfect,\" Peggy said, having swallowed her food.\n\n\"Yeah,\" both the other ladies swooned in unison.\n\nNina swiped the phone and her smile widened. \"Aww, that's such a sweet kiss-pic! You two look so happy!\"\n\nPeggy grabbed the phone from her.\n\n\"I recognize that place. Did that come later?\" Nina asked.\n\n\"Yeah. Later that night.\"\n\n\"Come on, finish your lunch. We're due back in like fifteen minutes,\" Stephanie urged.\n\n\"I'll take the rest of mine to go. Nina, it's your turn to pick up the check,\" Peggy reminded her.\n\nPeggy ate a few more hurried bites before the waiter came with a take-away box and the tab.\n\n\"So,\" Peggy continued after she'd transferred the remaining contents of her plate to the box, \"we went to ICON Park later that evening and goofed around there. Ordinarily, it's not a place I'd hang out because it's so touristy. But considering Eric was a tourist, I thought he might enjoy it.\"\n\n\"Did he?\"\n\n\"Oh, yeah. I'm pretty sure he did,\" Peggy answered. \"I'll tell you more on the way back.\"\n\nThe trio left the bistro for their walk back to the hospital.\n\n<hr>\n\nThe line for The Wheel wasn't long at all. Peggy and Eric were escorted into a cabin mere minutes after the tickets were purchased.\n\n\"Wow. You can see for miles up here!\" Eric said.\n\nHe saw no horizon in the darkness as they looked out the panoramic windows as the cabin on the 400-foot tall wheel reached its apex.\n\n\"Nice, isn't it?\" Peggy said, holding his hand. \"On a really bright, clear day, you can see the Atlantic.\" \n\n\"Seriously?\" he playfully squinted with his hand above his brow.\n\nShe laughed at his display. \"What are you expecting to see way out there? It's too dark!\"\n\nHe pulled her close to him. The cabin's air conditioning was working quite well, and it was a bit chilly inside. The warmth shared between them was welcome. \n\n\"I always love seeing the city lights at night,\" Peggy commented. \"I've been to the Eye in London, too, but it was so gloomy that day I could barely even see The Gherkin,\" she said.\n\n\"What took you to England?\"\n\n\"My parents and I vacationed there right before I graduated from med school. I thought San Francisco was crowded until I went to London. Couldn't stand the place.\"\n\nHe chuckled lightly. \"Yeah? I'm not crazy about it, either. If you want crowded, you should try Bangalore.\"\n\n\"Hah! No, thanks,\" she laughed. \"So, to what other places have you been?\"\n\nTo tell her that he'd been all over the world, to almost every continent, was a risk he didn't feel worth taking. \"Australia, or maybe South Africa was the furthest,\" he answered vaguely but honestly.\n\nHe silently watched the city move through the panoramic windows.\n\n\"I wish it wasn't so crowded in this cabin,\" he whispered into her ear.\n\n\"Why? So something like this,\" she smooched him chastely, \"could be a bit more?\"\n\n\"Yeah,\" he smiled in the dim ambient light.\n\n\"Well, then thank heavens we're the only ones in here,\" she sighed against his playfully sardonic observation. She pulled him toward her and kissed him slowly, softly.\n\nWith her current position in the cabin and the direction she was facing, he knew it was safe to give her bottom a gentle caress and a soft squeeze without being observed. He turned her to face the window and he stood behind her. He wrapped his arms around her and put his hands on her warm, flat tummy. \n\nShe felt his hand begin to trace up her torso. \"Easy there, buddy, did you notice the camera on the ceiling?\" she cautioned.\n\n\"Yeah, I know,\" he whispered. \"But it can't see through our bodies.\"\n\nThe Wheel had almost completed its rotation. Its hub was behind the couple. He knew neither the security fish-eye camera nor any other people in other cabins could observe, so he continued. He placed one hand gently on her breast and the other at her crotch, feeling her warmth. He held her, feeling her widen her stance ever so slightly, hearing her sigh against him as he gently stroked her between her legs.\n\nShe felt his penis harden against her bottom and slipped a hand behind her to give it a little attention, massaging it, feeling it lengthen with her touch.\n\n\"Damn, Peggy, you're dangerous, too.\"\n\n\"You think? Let's see. Don't move,\" she said, \"stay just like that.\"\n\nShe brought her phone up in front of their faces with her free hand. He smiled naturally as she framed the shot on the screen. Of course, the head-shots cropped out everything below their shoulders, which made the photo all that much more entertaining to her. She knew that every time she looked at that completely benign picture, only he and she would know they were seriously feeling each other up when the shutter clicked.\n\nShe took a half dozen similar pictures, then one with them kissing gently.\n\nThey released their mutually intimate grasps before the adjacent cabins came into positions where their occupants could see inside. A little while later, the interior lights brightened in preparation for their return to the loading platform.\n\nThey walked together, hand in hand, toward the parking structure. She stopped walking and stared at the passing tourists for a few moments.\n\n\"Eric, I want to ask you something,\" she said. Her nerves and agitation were evident in her body language.\n\n\"What is it?\" he asked, seeing it.\n\n\"Can I... Do you... um, I'm sorry. This is so completely unlike me.\"\n\n\"Just say it,\" he encouraged.\n\n\"Can I stay with you tonight?\"\n\n\"I can't think of any question to which I'd rather say yes.\"\n\n\"I want to. I like you. I like you a lot. And I know you're leaving in the morning, and I don't want to be anywhere else. I know what that sounds like... and, I'm not that kind of person. I just want to be with you.\"\n\n\"Peggy, do you know who I am?\"\n\n\"No, and... what does it matter? You don't know much about me, either. Well, yeah, you know more about me than I do about you, but&mdash\"\n\n\"Stop,\" Eric interrupted. \"Just... hush.\"\n\nHe studied her eyes and saw no hints she was being untruthful. He smiled at her, pulled her close and kissed her passionately in the shadows of the parking structure.\n\n\"Come on, let's go back,\" he sighed. \"I can always sleep on the plane.\"\n\nShe laughed that endearing laugh before climbing into the passenger seat of the R8. The echoing roar of its engine turned heads as they departed.\n\nHe drove Peggy to the McDonald's and deposited her at her car so she could have it available to her the next morning. That time, he followed her to ensure they weren't separated as had happened the prior evening. The two enjoyed each other's company until exhaustion forced sleep on them in warm, easy embraces.\n\n\"One more time,\" Peggy sighed, stretching her totally naked body against his totally naked body when they awakened.\n\n\"I don't know if I can manage it,\" he groaned with a smile as she kissed him. \n\n\"Are you sure?\" she cooed, holding his penis in her hand, palpating it, awakening it. He thought he'd be spent, and was surprised his body responded.\n\n\"Well, maybe,\" he grinned.\n\n\"I need a shower first,\" she said.\n\n\"Only if I can come with you,\" he smiled. \n\nShe rose from the bed and pulled him along with her to the bathroom.\n\n\"You're not going to need that,\" she said when he removed the last condom from the box. \n\n\"I thought&mdash;\" he began to argue, confused.\n\n\"Yeah, but no. Not for what I'm about to do. She tapped her lips and grinned widely. His brain caught up and he smiled.\n\n\"Alright then, but turnabout is fair play,\" he wagged his eyebrows at her.\n\n\"I don't think that'd be a good idea,\" her face showed caution.\n\n\"Let me put it this way. I'm not letting you leave this place until I've had the... Shit, Peggy! I've gotta be out of here in less than two hours, and I'm dying to taste you.\" \n\nHis bluntness surprised her. He'd not been so direct with her. As simple as his words were, it was the strongest conveyance of his wants he'd expressed, and she wasn't going to turn him down.\n\n\"You're in charge,\" she cooed. \"Do whatever you want,\" she said to the man with wild wild desire showing in his eyes.\n\nHe guided her under the warm shower, allowing the water to wet her skin. He soaped his hands and gave her entire body a rather comforting lather which felt to her more like a soothing massage. He covered all the territory from her hairline, under her arms, her breasts and taut stomach, then her back and bottom. \n\nHe then moved to her feet, washing each one carefully before moving up each calf to her thighs. He'd wisely unfolded a towel in the bottom of the tub to prevent soapy feet from slipping on the smooth finish. \n\n\"Did that feel good?\" he asked softly.\n\n\"Yeah. Very. But... you missed a spot.\"\n\nHe soaped the washcloth once more and attended to the flesh and fur between her legs.\n\nHe allowed the shower to rinse her, and brought palms-full of water to her underside to rinse her fur, vulva, and the shallow valley between her buttocks.\n\nHe smiled at her. \"Lean back against the wall,\" he gently guided her. He moved the shower head so the water wouldn't spray directly on them, then knelt before her, nipping at her fur, feeling goosebumps rise on both of her thighs. He nuzzled into her mons and extended his tongue into her slit and tasted her, finding her pea. \n\nWith one hand, he pushed against the hood of her clitoris, bringing her button out. He teased its glans with the tip of his tongue and felt the muscles of her bottom clench in reflex to the intense, sudden stimulation.\n\nMoving the strings out of the way, and with digits and tongue alone, he brought her to a climax so intense she almost lost her grip on the bar she was holding.\n\n\"Ooh... \" she gasped and tensed then relaxed her legs as her orgasm waned. He supported her weight by bracing her knees and thighs so she couldn't collapse.\n\nHe grinned as she looked down at him serenely.\n\n\"Good lord you are so yummy,\" he praised.\n\nHe stood and clutched her body to his. He stroked her back softly with his fingertips. \n\n\"Really? Could you taste&mdash;\"\n\n\"No,\" he interrupted. \"I can't imagine how much more intensely you'd turn me on a week or two from now when your pheromones go nuts,\" he grinned.\n\nShe smacked him playfully on the arm. \"You animal!\" she laughed.\n\n\"I know, I know.\"\n\n\"Now. Let's see your animal side,\" she cooed, massaging his shaft. She knelt to her knees on the soft towel and took him into her mouth, stroking his base and cuddling his balls in her other hand. She encouraged him to slowly irrumate her, using her gripping hand to ensure he knew not to go too deeply.\n\nHer tongue pressed into his frenulum and she moaned. He could feel the vibration of her guttural sounds, and she could feel his smooth head rubbing against her taste buds. His penis finally offered her a dribble of pre-cum, allowing her to consume his essence the same way he'd consumed hers. \n\nAfter several minutes of glorious pleasure, he warned her. \"Peggy, here it comes. Here it...\"\n\nShe moved away from his rod, allowing him to disgorge his semen across her neck and breasts. \"Yeah, let it out. That's it. Let it all out,\" she cooed at him, smiling upward at his gaze.\n\n\"Fuck, Peg!\" he cried out in utter bliss at the apex of his climax as he began to see stars. He wobbled unsteadily and allowed his knees to weaken onto the towel with her. He took her mouth against his, kissing her deeply as she finished milking his body with both hands, gently squeezing and squeegeeing him to emptiness.\n\n\"Ooh,\" he crooned, leaning forward and resting his head on her shoulder. He then extended his legs and drew her onto his lap, clutching her hot, wet body to his, holding her bottom with gentle, light caresses and squeezes as they kissed tenderly.\n\n\"Sometimes I hate my life,\" he said wistfully. \n\n\"What?\" she said, shocked.\n\n\"That didn't come out right. I mean I hate that life is making me leave right now.\"\n\n\"But&mdash;\"\n\n\"Have you enjoyed these few days as much as I have?\" he asked her.\n\n\"Maybe more,\" she smiled. \"Just remember. It wasn't a one-night stand.\"\n\nAnd with that, the two finished their showers. They dried together. They dressed together.\n\nAfter one delicious, passionate parting kiss, and a satisfied smile on her face so wide it made her cheeks hurt, she left. Her heart ached, too.\n\n<hr>\n\n\"So, yeah. I, Miss Prissy, had a great time,\" Peggy said.\n\n\"Did you sleep with him?\" Stephanie asked because Peggy purposely kept the intimate details to herself.\n\n\"None of your business,\" she said.\n\n\"Where did he say he worked?\" Nina asked.\n\n\"Something Marlin. Ritter Marlin? Wright Marlin maybe? I don't know. I just remember the Marlin part because it was the dad's name in Finding Nemo.\"\n\n\"So what now?\" Stephanie prompted.\n\n\"What do you mean? He went his way and I went mine. That's sorta one reason it made it incredible. I guess we were both just kind of able to let everything slip away, keep our lives out of it, and all of that. It was just us. Just us. The mystery made it a little risky, which made it all that much more exciting.\"\n\nStephanie seemed to be the only one paying attention as they continued walking. Nina had her face buried in her phone. Peggy figured Nina would walk into a street sign or straight into traffic some day, but Nina always seemed somehow aware of her surroundings even when she was glued to Instagram or Twitter or whatever she was interested in.\n\n\"But you let him get away.\"\n\n\"He wasn't running, Steph, and I wasn't trying to hold on to him. We knew what we were doing.\"\n\n\"But that wasn't just an ordinary fling.\"\n\n\"No. It wasn't. And... I actually kind of miss him,\" Peggy sighed with a down-turned face. \"He was so sweet and cari&mdash;\"\n\n\"Stop!\" Nina barked, grabbing the shoulder of Peggy's scrub shirt.\n\n\"Ouch, woman! What?!\" Peggy turned to face Nina and saw her wide eyes staring at her phone.\n\n\"You said his first name is Eric?\"\n\n\"Yeah. So?\"\n\n\"Could the place he worked at have been Reiter-Marlin?\"\n\n\"Yeah, that sounds familiar,\" Peggy agreed.\n\n\"His name. It's Eric Reiter,\" Nina gasped. \"This is him, right?\"\n\nNina held up her phone to show Peggy a photograph. Peggy took it from her hand and her eyes widened. It was definitely Eric. But definitely not the Eric she'd met. The man on the screen was dressed to perfection in a perfectly tailored suit with perfectly coiffed hair spiked mildly in an incredibly handsome style. He was wearing rimless glasses and wore a confident, beaming smile. His posture was relaxed yet exhibited strength and self-assurance.\n\n\"Holy crap! How'd you find this?\" Peggy gasped.\n\nNina snatched the phone from Peggy. \"Sorry, Honey, we're back on shift in like three minutes.\"\n\n\"Knock it off, Nina!\" Peggy almost shouted at her.\n\n\"You're not going to believe it, and we don't have time for this now.\"\n\n\"Stop! What did you find?!\"\n\n\"Fine. Come on. I need a PC,\" Nina said.\n\nThe trio hustled into the hospital and walked briskly to the closest nurses' station they could find with an unoccupied computer.",
        "Nina woke up the screen by jiggling the mouse, brought up a browser, and repeated her search on Google.\n\nA Wall Street Journal article appeared. The photograph of Eric was there in all its glory.\n\n\"There. Now, I've got to get upstairs,\" Nina said. \"We need to talk after work, okay? Please don't leave until we can meet in the lounge. Call me if you're hung up in surgery or anything and I'll wait for you.\"\n\nThe other two watched Nina walk away.\n\nPeggy sat in the chair and read the article. It was dated three weeks prior.\n\n\"RMX Co-Captain Left Ship Before it Sailed\"\n\nLate last week, and ahead of yesterday's IPO of Reiter-Marlin (NYSE:RMX $397.17/-2%), co-founder Eric Reiter disclosed in a filing to the Securities and Exchange Commission that he would not be occupying the seats of Chairman and President as had previously been detailed.\n\nReiter's filing indicated his intent to sell ten percent of his ownership to his long-time friend and RMX co-founder, Lance Marlin.\n\nIn a press release after the IPO had closed, Marlin said, \"I've known Eric Reiter for as long as I can remember. He and I created this incredible venture. And though I was saddened to learn of his desire to step aside, I fully support his decision. Investors can rest assured that he will remain on the board of directors. The board, at this time, has no intentions of changing the name of the company. Eric's name will remain in our branding and masthead.\"\n\nAs previously reported, the initial public offering of Reiter-Marlin stock netted ample new capital after thoroughly satisfying the thirsts of the venture capitalists which financed their start-up seven years ago. The company has little debt, and has cash reserves in excess of $1B.\n\nIn a separately held conference, Eric Reiter explained his decision. \"There's nothing I want more than to see the corporation flourish, and I determined the best conditions for that to happen included me stepping aside and letting Lance run with it. Lance has a much stronger sense for business than I ever have, which is evidenced by investor interest in what we've grown as partners.\n\n\"I've been part of an incredibly successful adventure, and right now, I'm thinking of turning my success in a direction that allows me to help others do the same. I've set my focus on a few new projects, one of which will allow me to turn some of what I've been blessed with back to the community that's been my home for almost four decades. What I'm working on now in no way conflicts or competes with Reiter-Marlin's efforts or interests.\"\n\nMany of the patents filed by Eric Reiter during the startup of the company are to be assigned to the corporation, and others will be part of a cash or stock royalty agreement the terms of which the company is keeping very close to the vest.\n\n\"I can't believe what I'm reading,\" Peggy said quietly. \n\n\"What does it say?\" Stephanie asked.\n\n\"Give me a minute,\" she responded distractedly. \n\nPeggy clicked a link at the bottom of the page which read, \"Eric Reiter pledges $50M to Children's Hospital.\"\n\nShe clicked it and opened another article in The Oklahoman which was published two days before.\n\nEric Reiter, formerly of newsworthy Reiter-Marlin, has publicly pledged a $50 million endowment to Children's Hospital of Oklahoma City. At the joint press conference held with the chairman of the hospital's board of directors, Mr. Reiter said, \"This has been in the making for a while, and I'm excited to see what the future holds. This endowment is earmarked to form a new research unit within Children's Hospital of Oklahoma City.\"\n\nWhen asked why he'd chosen to form and fund the new unit, he said, \"My sister's experience sparked the idea and set things in motion several months ago. As fate would have it, I had the unfathomably coincidental opportunity to meet an incredibly impassioned pediatric trauma surgeon when I was vacationing in Florida a few weeks ago. That surgeon described to me an interesting treatment protocol, a research study I thought bore substantial merit. But funding for that study is faced with enormous challenges at the facility at which the physician is currently practicing. When certain possibilities are right in front of me, I tend to act. I've since attached a proviso to the endowment making its final funding contingent on inviting that individual to OKC in consideration for the position of Research Director.\"\n\nReiter indicated he had not yet been able to contact the individual described, and declined all requests to provide the individual's name.\n\n\"That's because he doesn't know it,\" Peggy muttered.\n\n\"Doesn't know what?\" Stephanie urged.\n\n\"He doesn't know my name.\"\n\n\"Who? Eric?\"\n\n\"Yeah. Eric doesn't know my full name.\" \n\n\"You told Nina and me that already. What's going on? You're acting strange.\"\n\nPeggy closed the browser and rose from the desk. She was already five minutes late reporting back in to her unit, and started walking briskly to the elevators.\n\n\"What the hell is going on, Peggy?\" Stephanie was struggling to keep up with her.\n\n\"I've got to think, Steph, and I've got tons of crap to do in the next six hours. Nina said she wanted to meet me in the lounge after our shifts end. Let's go get drinks after work. I think I'm gonna need a few,\" she said, excitedly, just as the elevator opened. \"See ya!!\" she hollered as the doors slid closed, leaving Stephanie standing there in stunned silence.\n\nWhen she'd finally checked back in, she sat at a workstation and opened a browser. She Googled \"Reiter-Marlin,\" and the results sent her directly to the corporate website.\n\nShe clicked Contact Us.\n\nThere was only a toll-free telephone number listed. She pulled out her cellphone and dialed it. An operator answered.\n\n\"Reiter-Marlin. To whom may I direct your call?\"\n\n\"Hello,\" she said. \"I'd like to speak with Eric Reiter.\"\n\n\"I'm sorry,\" the operator said immediately, \"Mr. Reiter is no longer with the company.\"\n\n\"Oh, that's right. Is there any chance you know how I can contact him?\"\n\n\"I'm sure you can understand that we can't provide such information.\"\n\n\"I understand. Um...\" her mind was racing, trying to think of any other ways of connecting with Eric. \"I understand. Is there a way maybe to get a message to him that I've learned he is trying to contact me, but doesn't know how, and I have no other way of contacting him, either. I just read an article in an Oklahoma newspaper in which he was quoted as saying he's not been able to contact me.\"\n\nThe line was silent for several seconds.\n\n\"May I have your name, please?\" the operator asked.\n\n\"Doctor Margaret Foreman.\"\n\n\"I'm sorry, Doctor Foreman, I don't see your name on our incoming contacts list.\"\n\n\"Try Peggy. He knows me only as Peggy.\"\n\n\"I see. Thank you, Doctor Foreman. Please hold one moment while I connect you to Lance Marlin.\"\n\n\"No, I'm looking for Eric&mdash;\" she stopped speaking when she heard holding music.\n\nShe listened for about thirty seconds. Her finger was hovering over the red 'X' on her phone's screen, almost ready to hang up, when a man answered.\n\n\"Good afternoon, Doctor Foreman, I'm Lance Marlin.\"\n\n\"Uh, hello. I know I sound like a crazy person, but I'm trying to reach Eric Reiter and I quite frankly don't know what's going on or why I was forwarded to you.\"\n\n\"I can explain that. You understand that being an executive of a corporation requires security measures which are sometimes aggravating. The operators don't hand out contact info for any employee. All they're permitted to do for most calls to employees is forward them to their extension or voicemail box. For the more senior employees and executives, they provided a list of approved callers. If a caller isn't on that list, they go nowhere.\n\n\"Since Eric stepped down, he added you to my list with your first name, which was a bit challenging, because the system doesn't like first-name-only information,\" he laughed.\n\n\"Oh,\" was all she could think to say.\n\n\"Eric has been trying to find you for the last week, too, but your hospital advised him there's no one employed there with the name of Peggy.\"\n\n\"That's because the name on my record is Margaret,\" she answered.\n\n\"Makes sense. Eric's really anxious to talk to you, and he was hoping you might try to contact him here.\"\n\n\"So, can you transfer me to him or something?\" Peggy was growing more anxious and a little frustrated.\n\n\"No. I can't contact him right now. He's working out the final details of an endowment he announced a couple of days ago, so he's got lawyers and doctors all arguing in a room about tees and cees. If you give me your cellphone number, I will text it to him.\"\n\n\"Can you please just give me his number?\" Peggy asked.\n\n\"No. I'm sorry, Doctor Foreman, I can't. He'd have my hide if you turned out to be a stalker. It has to be his decision to contact you.\"\n\n\"A stalker?\"\n\n\"I'll let him explain it.\"\n\nShe gave him her number and politely ended the call, offering genuine gratitude for his help, and sharing his laughter at the absurdity of the situation. Her excitement was boiling. She wasn't sure whether it was due to the opportunity to talk to Eric again, or the possibility of an incredible professional endeavor right in front of her. It took her most of the afternoon to realize it was both reasons.\n\nShe spent the next four hours visiting with patients, checking on their progress. Her phone rang just as she finished with her case notes. \n\n\"Doctor Foreman,\" she answered.\n\n\"Hey, Peggy, it's Eric!\"\n\n\"Holy crap! It's so good to hear from you!\"\n\n\"It's good to hear your voice again, too. How on Earth did you figure out a way to get in contact with me?\" he said excitedly.\n\n\"One of my friends somehow figured out who you are. I have no idea how she did it. It just happened after lunch a few hours ago. I'd shown a couple of my friends one of the the pictures we took on The Wheel, and I guess she recognized the name of your business, and she found an article online with your picture. So yeah, I know more about you now than I did two weeks ago, but only what I've read in the papers.\n\n\"So, who are you and what the hell is going on? And why did you keep asking me if I know who you are?\"\n\n\"Because it's sort of important for me to know. I'm sorry I have to be so elusive and dodgy, but I can explain it. And for now, I need you to do me a favor. Those photos you took of us, please keep them to yourself. I'm not demanding it, you can of course do whatever you like, but I'm just asking for a favor. Peggy, I need you to know something.\"\n\n\"What?\" \n\n\"I trust you, okay? And I'm walking out on a limb. I want to tell you about me, but I don't want to do it over the phone. I'd really prefer to talk with you in person. When is your next break?\"\n\n\"You're in town again?\" she asked excitedly. \"I'm almost off shift. Unless something happens, I'll be done at seven o'clock.\"\n\n\"No. I'm not in Orlando,\" he said. \"My words were poorly chosen. When do you have a few days off?\"\n\n\"I'm off for four days starting tomorrow, but I'm on call the last two of those four.\"\n\n\"Is there any possibility you can meet me here tomorrow?\"\n\n\"Where's here?\" she asked.\n\n\"Oh, duh. Sorry. There I go again. I'm in Georgia. Atlanta, to be precise.\"\n\n\"Why? What's up there?\" she asked.\n\n\"Meetings about the endowment,\" he answered.\n\nHe forced himself to breathe slower and focus his attention. The pure joy he heard in her voice matched what he felt when she'd answered his call. He was stumbling to speak effectively, and didn't want to come across as clumsy or unclear as he spoke his next entreaty.\n\n\"Peggy, I'm detecting a little concern in your voice. All I can say is you have no reason to worry. I'm just the guy you met two weeks ago. Whatever you've learned by reading the papers, just set that it aside for the moment, okay? I don't want anything reporters write to cloud your judgment. Just remember who I was when we met. That's all ask.\"\n\n\"That's easier said than done.\"\n\n\"Have you read anything about me so far that frightens you?\"\n\n\"No, it only deepens the whole mystery. I read the article in the Wall Street Journal about your company's IPO and your decision to leave it. There was a link to another article in the Oklahoma City newspaper about the endowment you're offering to some hospital in Oklahoma.\"\n\n\"Yeah, that's kind of a big deal to me.\"\n\n\"I can only imagine.\" She paused. \"Eric, Am I the doctor you're looking for?\"\n\n\"Yes. And I want... well, a lot of people would like to discuss it with you.\"\n\n\"It sounds... interesting. I don't get off work for another two hours. Then I'll need to pack and start driving. Atlanta's like seven or eight hours away. Or maybe I can find a flight and figure all that out.\"\n\n\"You don't need to drive or fly commercial. I'm going to send my Citation to Orlando tonight. It'll hangar there and be ready to fly you up here first thing tomorrow morning. There's nothing I'd like more than to be on it to meet you, but it's too crazy here at the moment for me to fly down tonight.\"\n\nPeggy felt as if her skin was sizzling with static electricity. Everything was happening so fast and she felt as if she was about to pass out.\n\n\"Your Citation? That's like a private jet, right? Okay, wow. Just... wow... um... I don't...\"\n\n\"Peggy, take a deep breath. It's okay. I know this is a lot to absorb, but I'm as excited as you sound, too. I'm looking forward to seeing you and telling you all about the whole thing. Please promise me you won't read anything else. Don't go Google-crazy. It's really important to me.\"\n\n\"Okay, I promise. What time will the flight leave?\"\n\nHe laughed with immediately recognized warmth. \"You drive to an executive terminal, walk up the steps into the airplane, and say 'Let's go.' That's when the flight leaves.\"\n\n\"Seriously?\"\n\n\"Yeah. Here's what will happen if you agree.\n\n\"You'll be in Atlanta for six or seven hours and talk to a few people, then we'll fly together to Oklahoma City. You'll overnight at a really nice hotel. The next day, there's a bunch more people you'll need to talk to. You'll get back to Orlando in time for your on-call. It'll be a whirlwind, but we can make it all fit.\"\n\n\"Uh, okay. Where do I go for the flight?\"\n\n\"I don't know. I'll have my pilot call you. Can she call the number I just used?\"\n\n\"What? The pilot is going to call me?\"\n\n\"Sure. She's going to need to know where you live so she can tell you which airport to go to.\" \n\n\"Orlando, Eric!\" Peggy laughed.\n\n\"I'm sure Orlando has more than one airport,\" he chuckled. \"She'll want to know which one is the most convenient for you.\"\n\n\"Oh, my god, Eric. This just isn't making any sense.\"\n\n\"Take another breath, Peggy. I'm sorry for surprising you like this,\" he said.\n\nShe felt the need to put her head between her knees. It took her a few moments before the fuzz dissipated.\n\n\"This is just so crazy.\"\n\n\"I know, and I understand. I've been right where you are and it wasn't too long ago. I'll tell you all about it when I see you.\"\n\n\"Okay.\"\n\n\"I'm sorry if I come across as being demanding, but dress for the flight and pack like you're going to a job interview. Whatever that means to you is completely up to you, but the meetings you'll be attending are exactly that. You'll most likely be under the microscope for at least part of the meeting in Atlanta, and certainly in Oklahoma.\"\n\n\"Part?\" she asked.\n\n\"Yeah. Most of what's happening tomorrow is all legal stuff, but some of the board members are here and I'm sure they're going to have some questions when they meet you.\"\n\n\"Oh, of course,\" she said with mock flair.\n\n\"And bring casual stuff, too. There's no luggage limitation and no checked bag fees,\" he laughed.\n\n\"Casual stuff? Did you have anything in mind?\" she probed.\n\n\"Of course I do, but it'd be undignified of me to say that how you were dressed when we spent the day together looked fantastic on you. All of it.\" \n\n\"You got it, Eric Reiter,\" she sighed. \"You know, you look like a Reiter.\"\n\n\"Doctor Margaret Foreman, you look like an angel.\"\n\n\"That's very, very sweet,\" she said.\n\nHe couldn't see her tender smile, but he heard it in her tone of voice.\n\n\"I need to say something else.\"\n\n\"Oh, boy,\" she said cautiously.\n\n\"No, it's nothing like that. Tomorrow's going to seem crazy and maybe a little overwhelming. Please don't let it envelop you. I hope it's fun and exciting, but what I really want you to know is that I haven't stopped thinking about you since you left the resort. You've tripped something in me. I don't know what it is, but I'm really looking forward to seeing you again.\"\n\nHis words almost overwhelmed her. Her brain was still reeling and she suddenly felt like she'd taken a deep breath of halothane. She heard the final two sentences in her own mind, but they were in her own voice. It had been an enjoyable weekend... but it was supposed to be detached. She had to admit to herself that the hook through her lip was still there, but she wasn't sure whether or not she wanted to admit it to him.\n\n\"Peggy?\" he said after the long pause.\n\n\"Yeah. Me, too, Eric.\"\n\nThe rest of her shift was less eventful by yards than the ten minute phone call. Thankfully, no emergencies arrived at the ER which required her service, as she was worried her mind would be distracted. She met Stephanie and Nina in the staff lounge at 7:06pm. She didn't sit down. \n\n\"Sorry, ladies, I can't do this tonight. I've gotta run,\" Peggy said.\n\n\"Why? I thought we were going to get drinks. It's the weekend!\" Stephanie argued.\n\nIt wasn't a weekend on any calendar printed in the modern world, but it was the rare coincidence in their compressed-shift calendars that all three would share two days off.\n\n\"I know, but I can't. Something is happening and I can't afford a hangover or even being tired tomorrow morning.\"\n\n\"What's going on?\" Nina asked.\n\n\"Eric is flying me to Atlanta to meet some people,\" Peggy answered.\n\n\"What?! You found him?\" Nina demanded.\n\n\"No, you found him, and I reconnected with him. Long story, but he's sending an airplane down here tonight. He said the pilot will be calling me to get some information. I'll be going to Georgia first thing tomorrow morning.\"\n\n\"You've got to be fucking kidding me,\" Stephanie said before slapping her hands across her mouth. \n\n\"Mind your language, woman,\" Nina scolded.\n\n\"No kidding. No jokes,\" Peggy said.\n\n\"What do you think he's up to?\" Stephanie asked.\n\n\"I have a fairly good idea, but I'm not going to talk about any specifics until I've heard all the details myself.\"\n\n\"You're chasing a man,\" Nina scoffed.\n\n\"No, I'm not,\" Peggy glowered as she turned to leave the facility. She wondered, though, if it wasn't true."
    ],
    "authorname": "WillDevo",
    "tags": [
        "love story",
        "mystery man",
        "sportscar",
        "female doctor",
        "doctor",
        "romance",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/when-ordinary-isnt-ch-02"
}