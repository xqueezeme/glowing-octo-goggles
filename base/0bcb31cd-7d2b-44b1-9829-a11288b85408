{
    "title": "The Circle Ch. 05",
    "pages": [
        "<p align=\"center\">Chapter 5 - Cunnilingus and group sex</p>\n\nAlice sat on the kitchen counter with a beer in her hand. She wore cutoffs and that sexy man's shirt with the tails tied in a knot just under her breasts.\n\nAlice exclaimed, \"You mean you didn't go down on the girls? I thought I taught you better than to leave a girl wanting.\"\n\nBob said, \"Honest, I sized up the situation and thought we'd do better to leave when we did. Sheila was horny but embarrassed for what she'd done. Zoey was more than satisfied, and probably wanted to get fucked.\"\n\nAlice rolled her eyes.\n\nJim said, \"We were very cuddly in saying goodbye and thank you. I promised we'd be back tonight and that we'd turn the tables on them. I left it to them to figure out what that meant.\"\n\nAlice scolded, \"They may be cold dead fishes tonight.\"\n\nMatt said, \"Except for one thing. I whispered to Zoey as we left, that she should try to see if Sheila might be interested in sharing herself. She understood and looked interested.\"\n\nBob said, \"You didn't tell us that. Wow! What'd she say?\"\n\n\"She just gave me a look that said 'That is a great idea.'\"\n\n\"Do you think Zoey and Sheila did something together after we left?\" Alice asked with great interest, obviously intrigued that a couple of the girls might be as bisexual as she was.\n\nMatt said, \"I wouldn't be surprised, and I did get to feel Zoey's pussy, although it was through her thong. I'm hoping tonight we can be a little more relaxed.\"\n\nJim asked, \"What time are we meeting them? \n\n\"We're bringing dinner to Sheila's about six-thirty. Her parents are still away two more nights.\"\n\nAlice warned, \"You'd better bring a gourmet dinner that says 'I love you' in a hundred different ways.\"\n\nMatt said, \"Then we'd better get on it. We have to be there in two hours.\"\n\nExactly at six-thirty, three cars pulled up in front of Sheila's home. Zoey and Sheila appeared at the door almost instantly wearing normal casual clothes.\n\nThe men each got out of their cars wearing tuxedos. Every step was precise and calculated. Reaching into their rear seats, they extracted several large glass platters covered with silver covers. Bob's was slightly smaller, but he also carried a large picnic basket in his other hand.\n\nThe men marched in step to the front door, and as the girls held the door open, right into the dining room. No one said a word despite the greetings from the girls.\n\nBob immediately cleared the dining room table, opened his basket, and spread out a damask tablecloth, and silver place settings for each of them. He set out five fine china places and side plates. He extracted two bottles of wine and cooling baskets, and set those on the table. Next were some flowers for each place at the table where the girls would sit, and then attractively folded napkins.\n\nAs Bob was setting the table, Matt and Jim were unwrapping the main courses: salads, bowls of lobster bisque, a salmon souffl\u00e9, Mediterranean vegetables, and a light cheese cake for dessert.\n\nZoey and Sheila stood in the doorway to the dining room watching the trio in action. No one said a word, although both girls had tried to engage the men in conversation at first.\n\nWhen all was done Jim and Matt stood at attention at the side of the dining room. Bob acted as the ma\u00eetre d' and circled the table ensuring that each detail was done to perfection. Once satisfied, sometimes with minor adjustments to the placement of a fork or spoon, he rushed to the doorway where the women were standing. \n\n\"Oh, ladies. Forgive me for not being here instantly when you arrived. Your table is ready, and your guests should be here momentarily.\" He offered his arms to each of them, and escorted them into the room, holding their chair, seating them, and placing the napkin in their laps after crisply snapping it in the air.\n\nWhile the girls smiled and laughed occasionally over the theatrics, the men kept a formal look to their faces. This was a five-star restaurant and the hired help did not fraternize with the customers.\n\nEventually, they all left the room, and then one at a time reentered, kissed each girl, and sat in their places. Dinner from there on was more normal, except the food was pure five stars.\n\nWhenever something needed to be cleared, the men rotated responsibility for jumping into action and clearing the table to the kitchen.\n\nSheila smiled and laughed, \"What are you trying to do with all this? Why?\"\n\nMatt responded with joy, \"We love you, and want to impress you. This just seemed like one way we could send you that message, albeit a little corny.\"\n\nSheila was speechless at the frankness of his statement, and at his use of the 'L' word. She instantly got tears in her eyes but toughed through the moment without any rolling down her cheeks.\n\nZoey said, \"You did all of this just to impress us?\"\n\nJim nodded. \"Matt said it well. We love you all, Monica included although she's away for another few days. We have to admit to cheating; the meal came from Antoine's French restaurant, and he loaned us the platters and covers and all.\"\n\nSomehow the conversation moved to Bob's ten secrets to life, happiness, and success. He reiterated the list as he had it so far, and then led a discussion about the kinds of goals we should each have. He made sure we all knew to write them down, and keep them in front of us every day.\"\n\nSheila suggested that the Law of Attraction came into play because of the goal setting and constant focus on them. \"If you can visualize it and feel what it would be like, what you wish for will come to you.\"\n\nBob said, \"I agree, and you have to take action. You have to  'feel' like you're achieving it - like you have achieved it. You can't wish for a pile of money or a new car, and then sit back and do nothing. You have to act and help the universe deliver on that goal.\"\n\nZoey listened with fascination and obviously soaked up the discussion like a sponge. Finally, she asked, \"Did you men set goals that involved us - Monica, Sheila and me?\"\n\nShe was then quiet, but stared at Bob, Jim, and Matt in turn. This was the one question the men had avoided answering in all the earlier discussions. Sheila had also turned to await the answer, pleased that her best friend had been so insightful as to ask it.\n\nBob started the answer, \"Yes. We talked about whom our dream girls were; whom we wanted in our lives more than anyone else in the universe.\"\n\nJim jumped in, \"I'd had a fantasy about Sheila for years, but it had matured from when I was fourteen to something more realistic and meaningful today. When I saw her friends, I realized I wanted not only her, but also you Zoey and Monica in my life.\"\n\nMatt said, \"I felt the same way. The one thing that stood in our way was your attitudes towards men. We joked with you about it a few weeks ago, but you were each considered an ice princess. We decided not to let that get in the way of believing that we could achieve our goal.\"\n\nBob said, \"We knew that to win your hearts we had to win your minds and trust. We've been going very slowly in terms of dating you. We really wanted to get to know you better than anything, and have you know us and know that we were sincere and authentic. We believed that if we were careful with you - as you deserve, and followed some good advice we got, that we could win all of you over to want to be with us. \" He put the emphasis on the last word.\n\nSheila and Zoey were looking from man to man as they spoke almost as if they were watching a three-sided tennis match. Their faces were expressionless.\n\nJim said, \"We were not mechanical in our approach. We really liked you ... and now love you, and we hope that you can accept that we had you as our primary relationship goal for all time - and I do mean for forever.\"\n\nThe three men looked at the two women in silence at that point. Their eyes shifted between the two women. Bob hoped that the whole idea of them all being together hadn't just exploded to smithereens before his eyes.\n\nSheila stood and pulled Zoey up as well. They each went to each man and hugged him, and gave a kiss.\n\nSheila said, \"That's so sweet. I really believe what you said, and I'm glad you've taken your time with us. We needed it. Each of us had some bad experiences with men, and you've surely taken me beyond those.\"\n\nZoey nodded in agreement.\n\nZoey and Sheila pulled the men into the family room, despite a weak protest about clearing the dishes and cleaning the kitchen.\n\nOne by one each person was stripped of his or her clothing by the members of the opposite sex. The tuxedos were carefully draped over chairs, and the casual clothes the girls wore disappeared as well. A million passionate and loving kisses passed between each pairing.\n\nThe men were agog as the women removed every last trace of clothing, leaving them nude and unbelievably desirable. The men all sported hard-ons of epic proportions - perfect 'tens' as Jim referred to the on his ten-point scale.\n\nWhen the five of them stood in the dim light, Jim went to Sheila and took her to a sofa. He lowered her back so she was sitting, and then nestled his face between her legs. As his tongue touched her slit, she emitted a long, low growl of sexual satisfaction. \"Oh, God. Sooooooo niiiiiccccceeee.\"\n\nBob cradled Sheila's upper body, kissed her, and then focused attention on stimulating her breasts in accompaniment to Jim's pussy attack. The kisses and words of affection were icing on the cake.\n\nBeside them, Matt had his face buried in Zoey's pussy, his tongue going wild when he wasn't latched onto her clit or licking and sucking for all he was worth. \n\nZoey came only a moment later in a fireworks display that rivaled that in the Nation's capital on July fourth. She rolled from that orgasm into another, and then another. She'd been thinking about sex since the night before and this was the result.\n\nSheila seemed to be ascending a staircase to the highest mountain in the world. Eventually, the two men brought her to the top, and then helped her jump into a land of orgasmic bliss far beyond anything she'd ever experienced. \n\nSheila wailed, and then cried in happiness because the pleasure was beyond anything she'd experienced or even imagined. Bob held her tight, and then Jim was beside her too also cuddling her body.\n\nMatt looked over and winked at Jim. The pair changed places. After Jim had held Zoey for a little, he went down on her again. His cunnilingus style was different, and unique, at least according to Alice. Zoey quickly responded to his technique, and soon soared into Orgasmland again.\n\nSheila got down on her knees alternately sucking on Matt and Bob, when Jim looked over. He smiled at her quick recovery, and willingness to return the oral sex favors bestowed upon her. Just watching her lithe body in front of the other men as she performed for them made his cock harder than a rock.\n\nZoey inhaled the missile in front of her, and Jim jumped, but in pleasure. She counter-rotated both hands around his shaft as she bobbed up and down on the head.\n\nIn only a few minutes, the men each came at the hands and mouths of their women. They were basket cases for a few moments, panting and breathing heavy, just as the women had done in response to their orgasms.\n\nZoey had saved some of the cum in her mouth, and kissed Jim, hoping to tease him a little with the taste of his own semen.\n\nJim tasted himself, but barely responded. She looked at him. \"Have you tasted yourself before?\"\n\nJim smiled, \"Sort of. I went to sex school and was taught not to dislike the taste of cum, even when it's not mine. It's much better mixed with pussy juice.\"\n\nHis remark gave Zoey food for thought. What was sex school? When had he gone? Whose pussy juice had he tasted along with his cum or someone else's cum? All the indications she gotten from her research was that he'd been a shy man in college, and a high school geek.\n\nMatt came and nestled into Zoey's other side. He asked her, \"Did you and Sheila do anything last night after we left? I was hoping that you'd bring each other off.\"\n\nZoey instantly blushed scarlet at the question, and more at the answer she knew she had to give him.\n\nMatt said, \"Hey, no judgments here. If you did, great, and we can build on that. If you didn't, take it as homework for some time in the future.\" Jim nodded in agreement, as did Bob.\n\nMatt noticed that Sheila was also blushing a brilliant pink hue, having heard the question and the comment.\n\nZoey said in a near whisper, \"Yes, we did. We made love to each other. It was a first for both of us.\"\n\nMatt leaned in and kissed her. \"I hope it was a beautiful experience for each of you.\"\n\nZoey nodded, and Sheila said in a reverent tone, \"It was amazing.\" She smiled and added, \"I guess we're bisexual.\"\n\nZoey said, \"Monica will be so sorry she left. We have so much to tell her, and to do with her when she comes home. She'll need to catch up to us. We both want to make love to her, and I know you guys do too.\"\n\nMatt asked both girls, \"Are you all right with the group sex, as it has turned out to be?\"\n\n\"Oh, yes,\" Sheila replied. \"I love being attended to by three men. Those little climaxes you and Bob gave me a moment ago were the biggest bolt of pleasure I've ever had in my life. It kind of erased some of the bad sexual experiences I've had. Thank you.\"\n\nAll three men registered that they wanted to know what had happened to so turn Sheila off of men and turn her into an ice princess. This wasn't the time or place to discover the answer, however.\n\nZoey said, \"I feel strange loving the three of you men, and even loving Sheila in a physical way, but I wouldn't change it for anything. The whole idea of monogamy is for the birds; Bob, you're right.\"\n\nSheila nodded in agreement.\n\nJim said, \"Then except for Monica, maybe we're right where we want to be.\"\n\nMatt and Bob winked at each other, obviously thinking about Alice and her wish to be included.\n\n<p align=\"center\">* * * * *</p>\n\nThe transition to having intercourse was a natural progression that happened the next evening for the three men and two women. It was the last night that Sheila had the house to herself because her parents came back from a long weekend away.\n\nMatt had suggested to Sheila that if this was what she wanted, then she should orchestrate how it happened and with whom. Zoey had been right there and agreed. True to their strategy of slowness, the men suggested they stop at oral sex and wait until the next night so the girls could think about the implications of the love act. Sheila was the most delicate and demanding of the three girls, a carry forward from being an ice princess in college. She agreed to wait a day, but did make sure that there was another round of orgasms and heavy petting for the five of them. Third base was heavily covered in orgasms and cum.\n\nZoey hinted as the men were leaving with all their dinner fixings, that she intended to seduce Sheila the moment the door was shut.\n\nThe next night, after a dinner of leftovers, Sheila led the group into the family room. The lights were dim, soft music was playing, and the mood was definitely seductive.\n\nSheila said in a soft tone, \"I want you to remove our clothing, then your own clothing, and then dance with us. Zoey and I want you to make love to the two of us, but I want you three to keep changing between the two of us every minute or two.\" She laughed, \"that is, if you last that long.\"\n\n\"We are both on birth control, so we want you to finish inside us. We think that will be especially loving and sexy. We hope you'll go again and maybe again after that. We don't care how late we go. I want to sleep in someone's arms and so does Zoey.\" \n\nMatt, Jim, and Bob took a long time to slowly disrobe the two girls. Between each piece of clothing they rained down a hundred kisses on them and swayed to the music. They also moved from girl to girl. So Sheila and Zoey wouldn't feel out of the place, the men lost comparable pieces of clothing along the way.\n\nWhen they were nude, Bob gently pulled Zoey to his body, and started to dance. As they swayed together, his hard-on got wedged between their bodies. Zoey smiled shyly, but he could tell she appreciated the eroticism of the moment. She reached between them and fondled his package.\n\nNext to them, Jim pulled Sheila into a dance that turned out to be more of a vertical series of deep French kisses bringing the sexual heat between them to a new level. Matt took turns nestling in behind Sheila and then Zoey, kissing her back, shoulders, neck, and ears to help add an even greater sense of romance for the women.\n\nAfter several dances, and lots of feeling and sucking, Sheila pulled Matt, her partner at the time, to the sofa. She lay back and spread her legs revealing her luscious pussy to him and the others. Matt dropped to his knees, and spent a couple of minutes eating out his lover as Bob sucked and made love to her breasts. Beside them, Jim was eating Zoey. The girls even kissed one another several times; deep passionate kisses with lots of tongue.\n\nSheila looked up at Matt, and whispered, \"Now, please.\" There was no doubt what she wanted to have happen.\n\nIn that moment, their relationship and all the others in the room changed forever. Matt rose, rubbed his cock up and down Sheila's sodden slit, and then slowly sank deep into her body, and he brought his lips to hers.\n\nBeside Matt and Sheila, Jim penetrated Zoey's tiny form with his large cock. Zoey was nearly beside herself at the pleasure as her breasts stated to oscillate in sync with his thrusts.\n\nAfter a couple of minutes of gentle lovemaking, Matt pulled away from Sheila and Bob quickly took his place, making just as much a production of his first penetration of his lover.\n\nAbout thirty seconds later, Jim rolled from Zoey's embrace to allow Matt to make love to her. Zoey was as enthralled with her new partner as they got into a new rhythm. The change of partner felt so unusual, but so right.\n\nA couple of minutes later the men rotated among the women again, Jim going to Sheila, Bob to Zoey, and Matt standing by watching and being stimulated by the eye candy of the other couples fucking.\n\nIn time, Bob blasted his cum into Sheila just as she'd requested. The words of love between them couldn't be duplicated by the finest romance novel. The feeling of his strong jets brought her to orgasm too. The sounds of the two cascaded next to them where Zoey reacted with an orgasm that resulted in her pussy milking and sucking on Jim's cock until he came in buckets. By that time, Sheila was hosting Matt's final thrusts as he added to the load already deep inside her.\n\nAfter a few moments of cuddling, Sheila announced to the room, \"I never want to stop doing this. I want to fuck all the time now. I love you guys, and I want to make love with you non-stop.\"\n\nMatt chuckled, \"Your parents might have some objection to our frequent use of their family room - as in every night from now on.\" Although he teased about the frequency of their lovemaking, he watched Sheila to see if she responded negatively in any way. She didn't.\n\nSheila mumbled, \"Oh, shit. That's right.\"\n\nZoey said with some humor, \"My parents are kind of liberal, but all the switching around might bother them; plus I'm betting that Monica is kind of loud when she cums - as in loud enough to wake the dead.\"\n\nThe men commented about how they lived with their parents as well, something so many 'twenties' did. Not one of the five had a love nest they could use.\n\nSheila said, \"What will we do? I don't want to make love in the back of a car. That accounted for a couple of my bad experiences in my dark past.\"\n\nJim said, \"I have an idea, but I need to explore the option and let you know tomorrow after work. I don't want to get anyone's hopes up, but I may have a place.\"",
        "After a second round of lovemaking, the guys left Sheila and Zoey together. The girls were cuddled together on one of the sofas, obviously with the intent of sleeping nude together after some further lovemaking. The men were pleased that they were being so open about their affection for each other.\n\nJim and Matt arranged lunch with Alice in the morning. They met at the local Paneras, and after getting their salads and sandwiches they quickly updated Alice on what had happened with the two girls.\n\nAlice said, \"So you accomplished your big goal. What now?\"\n\nMatt said, \"Not quite. We still have some loose ends. Obviously, we have to bring Monica into the fold when she returns from Colorado with her parents. We also want to bring you into our circle, assuming that you want to spend more time with us.\"\n\n\"Oh, I do. I do. I'm grateful that you really want me, despite my advanced age.\"\n\nJim said, \"You're in my constellation of intimate friends who I love. I wouldn't have it any other way given that you're willing, and forget the age thing. You've given us confidence and wisdom of your experience to help us do the right thing with our girlfriends ... and I love you.\"\n\n\"Will the girls accept me?\" Alice clearly was touched by the words of love.\n\n\"We'll see. That's partly why we wanted to talk. We have a problem at this point, probably one that a lot of people in our age bracket have. We don't have a place to connect with each other. There's an opportunity there too.\"\n\n\"You mean fuck, and you'd like to use my place to fuck your girlfriends, right?\"\n\n\"Yes and yes,\" Jim laughed. \"I also think this might be the idea way to introduce you to the group too. We show up to make love to one another, and right now we have an extra guy with Monica being away. So, you join The Circle and handle the extra guy as we rotate partners. Everybody gets to know you and how loving and much fun you are, and bingo, you're in The Circle.\"\n\nAlice thought about that for a few bites of her salad. \"I like it. I'll do it. I assume you want to start tonight.\"\n\nHeads nodded.\n\n\"Good. I need some cock in a bad way. I almost thought we might stop by my place on the way back to work, but this seems more reasonable. How about you come by around seven.\"\n\n\"Want us to bring dinner?\"\n\n\"Yes. Can you do Chinese takeout?\"\n\n\"You got it.\""
    ],
    "authorname": "SteveWallace",
    "tags": [
        "polyamory",
        "group sex",
        "dating",
        "relationships",
        "threesome",
        "foursome",
        "orgy",
        "cunnilingus",
        "oral"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-circle-ch-05"
}