{
    "title": "Constance: Condom Conundrum",
    "pages": [
        "Gentlemen, think back for a moment to when you were eighteen, a pastoral mid-summer night on a sandy shore of a deserted tree-lined lake, the only light from the stars, the moon, and a fragrant fire on the beach. Now add the fact that you're a wee bit stoned, drinking some brews with your closest friends. It's been more than a month since high school graduation and you're still in that in-between world, no longer a high school kid, but not exactly a mature, responsible adult.\n\nPlus, you've just screwed one of the cutest little former cheerleader butts on the entire cheerleading team.\n\nTo top off this exquisite - no, incredibly and pleasantly unexpected - event, the girl with the only other butt in your class who could compete with the one you've just nailed, is offering you one of two choices. You can have her drink your male seed straight from the condom you've just used and are still wearing -- or you can, finally, touch her tits, the biggest pair of tits in the whole school (and maybe the whole state) about which you've fantasized every day in school and most evenings in your bedroom for the last few years. In fact, you can remember the many times you'd be sitting in a class trying to catch a peek of flesh between the buttons of her blouse or just staring at her slender back in front of you and the bra band beneath her top, imagining what it would be like to unhook that bra and set those unbelievably huge breasts free.\n\nThat's a condom conundrum.\n\nMaybe you've already made up your mind. If not or even if you have, let me tell you the story.\n\nOne of my closest girlfriends in grade school, then in high school was Piper. As we were growing up we played house together, dressed Barbies like GI Joes (and vice versa), and always dreamt about meeting our own Prince Charming, getting engaged, having a to-die-for wedding (at the county's classiest restaurant - it even had a wine list!), having children, buying a house with a playhouse for the girls and a treehouse for the boys -- and living happily ever after. \n\nThat was all well and good for \"ever aftering.\" For the time being we were and always thought we'd be best buds. \n\nWe were also very competitive. If she got braces, I got braces. If I got a bicycle, she got a bicycle. Everything was a tautology: If A, then A. But as we began the sudden race into puberty, things began to change.\n\nOur friendship grew deeper and we shared some intimate secrets we'd never share with others, but we also started to one-up one another. The balance of the tautology became more of a hypothetical syllogism: If A, then A + B. (Even though I was relatively late in \"blossoming,\" by my eighteenth birthday that spring, I'd become the school's object of adoration, envy (or sometimes jealously), fascination, and even ridicule, because of my outrageously large boobs on my tallish, slender frame. In fact, they would have been overlarge on a short, stocky woman. On me, they were the fantasy of every male -- and I mean every one -- in the school.\n\nOf course, Piper never, ever, tried to compete with me in that category. In fact, in the whole town no one could. There was just no competition.\n\nBy the time we reached junior high school it was clear to us that neither of us was college material. Our idea of the future involved getting out of high school, continuing our jobs working at the local supermarket, and maybe someday, getting to be assistant manager or even manager, just in time for our weddings. It was rural, and we were romantics, down to the diaries we kept with our self-indulgent, just-barely-teen angst.\n\nJust give me a guitar and I'd be the next Joni Mitchell.\n\nFor now, I'll leave out the boring details about how each of us lost her virginity, but even that was competitive. Dating became a giant arena as to who was going out with whom and who did what with whom, how many times, etc. If you could count it, we'd compete over it. (In fact, this was in the Seventies and the movie Deep Throat had become a phenomenon. Well, Piper and I got into a long-running competition about that technique too, but that's another story.)\n\nIt was all fun, though, and we were among a group of friends/hippies/party girls. Fun (sex, drugs, and rock 'n' roll) was the focus of our lives.\n\nWe had gone late this night, like many other nights that summer, to Lake Bogey, a smallish lake out in the middle of the woods with some vacation cottages on it and two small beaches, one at each end of the ellipsoid lake. (We'd always thought it had been named after Humphrey Bogart, but recently learned, to my disappointment, that it had been named Lac Beauregard by some European settler in the 1700s and no one could pronounce it properly. Ergo, Lake Bogey.)\n\nThe ebony, moonlit night smelled of cooling mid-summer heat and the aroma of our lonely fire. There were about a dozen of us; a few couples and an assortment of good friends from way back in grade school, some jocks, some brainiacs (the au courant term for nerds), some average Joes. At one time or another we'd all hung out together and were friends.\n\nMy first real boyfriend (the only guy with whom I'd ever been naked or intimate) and I had broken up a few weeks before when he left to go to an early freshman event at his new college. I never expected him to come back to our little town again and was OK with the break-up. (There were things I missed, of course, but I was always pretty good at \"staying in the moment.\") So I was by myself. Piper was with Jeff her latest boyfriend. There were two other couples and five or six single guys.\n\nThere we were gathered, organized on some blankets on the sand and on a couple of picnic tables around the fire. We'd smoked some joints and downed some beers, and everything was perfect with the world, staring up at the starry night.\n\nSomeone had a transistor radio playing Carly Simon singing You're So Vain, and each of us was silent or just humming along with the music.\n\nOut of the blue-black night, I hear through my addled mellowness, \"Constance, I know you love drinking sperm. I dare you to give everyone a blowjob and have them come in your mouth.\"\n\nMy first stunned reaction was embarrassment, then anger. That little bitch! I thought to myself.\n\nIn truth, I had enjoyed it more and more, when my boyfriend came in my mouth and I had experienced more intense orgasms simultaneously, ones that were way more pleasurable for me than when he'd play with me or even when he'd lick me.\n\nYou see, I was still a vaginal virgin. Don't ask me why. It's a long time ago. I was raised in the time and the place that a woman was supposed to stay a virgin until she was married. In our little town, the sexual revolution was an event happening seemingly in another country, far, far away.\n\nMy boyfriend convinced me that sucking his cock was a way to maintain both him and my integrity. So, dignity be damned: I had been sucking him for the past few months.\n\nFrom the first time I put him in my mouth, I loved it. I loved everything about it. Often I'd come just by sucking him. Sometimes I'd forget that he was attached to \"the cock.\" I made love to it, stared at it and loved to lick it, to kiss it and to make it happy.\n\nAnd, every time he'd come I would, too, especially when he'd come in my mouth. I loved his cum. I'd lick it up from his abs if I missed any and I'd always lick my fingers after cleaning any missed drops off his cock. \n\nUnfortunately, I'd told this to Piper.\n\nSo, at the moment all I could think was: how stupid of me to share this with her, my ultracompetitive friend. Now she'd made me a dare and I'd never done anything like this before. \n\nOf course, my chest was the goal most guys were going for when they asked it out. In fact, I think my college-bound ex-boyfriend was the only guy to ever really look into my eyes. He could actually tell you -- without looking -- what color my eyes are.\n\nSure, I sometimes liked the attention, but more often than not I would have preferred to be a B cup. A few times I found myself looking longingly at more normally endowed girls at school. A few girls had larger than average busts, but you could count the ones who were relatively slim with large breasts on one hand. (That is, they had large breasts on their chests; the hand was just for counting!)\n\nWith my boobs constantly being ogled, it was expected that I was a sex fiend before I even said a word to anyone.\n\nLess-than-200-word rant: Why is it that a woman with a big bust is just expected to be interested in sex? Oh, I know, (she says sarcastically) \"It's because she has big boobs!\"Can't a woman be permitted to have the body that she was born with? Can you imagine if every man had a little Spandex cock sock that was displayed through the open fly of his pants?\n\nHmm. That's a bizarre image, but it's making me wet. Men who are small might hate the idea. On the other hand, men who are well endowed might welcome the fact that, finally, for all the world to see, their size might be known. (Forget about a pickle in your pocket, we'd just know who was glad to see us!) Plus, consider the dramatic modification this will require in the fashion industry, Hollywood, image consultants, the clothing racks at Wal-Mart...\n\nThis is going to require more rumination. Pardon the irrational interruption. Now, where was I?\n\nSo, the dare was there. I couldn't back down, but I also couldn't just give a BJ to every guy then and there! I must admit, though, that the thought was kind of exciting and had I been a little drunker or higher I might have.\n\nI suddenly got quite wet between my legs and licked my lips without even thinking.\n\n\"OK,\" I said, finally figuring what I thought was a way out. She'd never go for this. \"You fuck 'em and I'll drink it.\"\n\n\"I'm not fucking all these guys. Pete would never let me. Would you, baby?\" she said, pouting like a sex kitten at her boyfriend.\n\n\"Oh, wow,\" he said, slowly, in a stoned stupor, \"Piper.\"\n\nAfter a few moments he added, \"I think it would be kind of ... hot.\" \n\n\"Well, I don't know what kinds of diseases any of you perverts have and I don't have my diaphragm with me anyway, so the answer's 'No!'\" she said firmly.\n\nWe all sat there, considering this enticing topic for a few silent, horny moments. I just knew Piper was excited about the thought of screwing the eight or nine guys there. In fact, Pete's fondling the crotch of her jeans and her strongly pressing herself against his hand was causing her to sound like she was nearing an orgasm right then, just thinking about it.\n\nAs far as the guys went, you could see each of them adjusting to the sudden stirring between his legs. For all I knew, a few might have already shot a load in his shorts just at the potential of this whole sexually charged chat and where it might lead.\n\nI was kind of up for it, as the guys had all gone swimming -- nude -- and they looked awfully cute. Plus, most anything would turn me on at the moment, having not sucked my boyfriend since he'd left a couple of weeks ago.\n\nAnd, Piper was right. I really loved the taste of my ex's cum. I was just hoping that every guy tasted the same way.\n\nPiper, not ever being one to back down from a dare nor to do things on other people's terms if she could wiggle her cute little cheerleader butt out of it, said finally, probably unsure whether it would happen or not, \"Only if you fuck me with a rubber.\"\n\nAfter a pause for everyone to decide if she meant it or was just teasing the guys, she added, \"Then squeeze the cum like a toothpaste tube onto Little Miss Big Tits's tongue.\"\n\nAnd with that, she dared me by sticking her tongue out at me.\n\nI don't remember what I said exactly, but it was the Seventies version of \"Bring it on, Bitch!\"\n\nWe all smoked some more grass and grabbed some more beers in silence, unsure of what would happen next. Finally, Piper was in command. She took a couple of spare blankets, folded them on the bench of a picnic table, dropped her shorts and panties, and offered that cute little butt up to the guys.\n\nI remember that Jeff went first. He was one of our school's top jocks and got a scholarship to go to a big school with a bigger athletics budget. Of course, he would go first.\n\nJeff had slipped on a rubber. (Did every guy always have one or two in his wallet? What am I, an idiot? Of course, he did.) Leaving his girlfriend's side, he got over to Piper, stepped up to the proffered pussy and with no subtlety whatsoever, thrust into my friend who, fortunately for her, was no longer a virgin.\n\nIn fact, she was no longer a virgin at least dozens, if not hundreds, of times!\n\nTo most everyone's amazement, that good old stud Jeff lasted in her about as much time as it would take him to spell his name. He may not have been the quickest in school, but on the football field, on the track, and tonight just standing up and screwing my friend Piper on the picnic table, he'd have won a blue ribbon for speed.\n\nPiper was as surprised as any of us that Jeff was done in 30 seconds. I was a little apprehensive -- and, I must admit, a little excited - about having his semen dribbled onto my tongue.\n\nHis hips were still slightly pulsing forward into her, wringing out the last of his orgasm, and he was done. He just stood there for a moment or two, a peaceful and silly grin on his face.\n\nHe next backed out of her pussy and shuffled sideways in the sand, pants down at his ankles, the two feet or so to where I was sitting.\n\nIt was then that his typically taciturn girlfriend Barbara got up and carefully removed the condom so as to (a) not pull out any stray crotch hair -- obviously a well-practiced routine -- and (b) not lose any of his precious seed. She held it up for all to see like a trophy.\n\nWith the expression on her face and the glint in her eye, it seemed to me that Barbara thought this was payback for me and my boobs, not that I was ever mean to her. It felt that, regardless of Piper's statement to the contrary, the girls there didn't believe that anyone could like the taste of cum, so by making me swallow it I was getting my just desserts. (I'm not even going to deign to lower myself to such an obvious straight line. Puns deserve better.)\n\nHolding the top tightly closed with one hand, she upended the thing with the other and moved it in front of me, just at forehead level, a hint of gloating appearing in her dimly lit eyes.\n\nSecretly, I decided that it was, like, \"copacetic.\" The girls would think they were \"getting even\" with me for having an attractive shape (OK, I'm being discrete and modest.), and I might really enjoy the taste of the semen from all these guys.\n\nI could slightly smell Piper's secretions and a tinge of condom lubricant.\n\nThere I was, Barbara holding a condom of cum a few inches from one side of my face and Jeff's slippery dick (For those of you history buffs, yes, he was still president, but I am really trying to maintain the honor of the pun.) a few inches from the other, as he stared down at my upturned face.\n\nAs I opened my mouth to receive the seed, she stopped when Jeff cried -- no, whined, \"Please, Constance, lemme see 'em. Let me see those tits. I gotta see 'em, just for second.\"\n\nBefore I knew it, the entire group, both the guys and the gals, were yelling and whooping that they wanted to see them.\n\nThis went on for a minute or more, eventually it became a chant, \"Bare your boobs! Bare your boobs! Boobs! Boobs! Boobs!\"\n\nAfter a few minutes of this distraction I realized that my semen, well, Jeff's semen, was probably cooling off and I wondered if it would still be yummy at a lower than straight from the source temperature. Would I gag? Would it taste like what's-his-name's?\n\nMy body notwithstanding, I was still new to sex. Even though these were my friends -- or maybe because they were -- I didn't feel comfortable baring the twins.\n\nDeciding this was getting out of control and that, in the dimming fire's light I really wouldn't need to show much to satisfy this bunch of stoned, drunken, and horny high school graduates, I shouted, \"Stop it.\"\n\nIn fact, I had come up with a plan.\n\n\"I'll take off my t-shirt, so you can see 'em in my bra. But that's it. Well, except,\" then I paused for emphasis, \"you can decide what you want. If you want me to swallow your cum, fine, but if you want to feel them then you have to spill your rubber's on my chest and I don't have to swallow it.\"\n\nFrom the corner of my eye, I could see Piper smirking, knowing that I'd probably be coming just from the thought of drinking their semen. For now, at least, the secret was safe. I think we both realized that we were edging towards a new horizon of sexuality that at the time was a little embarrassing, at least for me.\n\nTeasingly singing a little of a bump and grind tune, I slowly pulled my T-shirt over my head, quickly straightened up my hair with my fingers, sat back against the picnic table, shoved my very large bra with the girls nestled in them forward, and, when I felt everyone was staring at the middle of my cleavage, very slowly slid my tongue around my lips to wet them.\n\n\"OK, Barb, let's have it,\" I said with unusual bravado, and then I added for effect, \"I'm thirsty.\"\n\nNext I moved my head back up, stared at the condom in Barbara's hands, opened my mouth and thrust out my tongue.\n\nAll was quiet; no one moved (though it's quite possible that there was an array of fluids relocating in a variety of sites in the immediate vicinity). I felt sorry momentarily for Barbara. She couldn't figure out what to do. She was probably thinking, \"Do I want him fondling her enormous tits?\" or \"do I want her swallowing his cum?\"\n\nThis, I realized was a lose-lose situation for poor Barbara.\n\nOh well, I thought. Screw it. Just let me taste the damn stuff already. \n\nBarbara looked up at Jeff. Jeff was staring at the tops of my breasts sticking out the tops of my bra cups. I was staring at the condom.\n\nThe rest were just agape at the scene in a miasma replete with alcohol, THC, and hormones. Lots and lots of hormones.\n\nBarbara decided to act. (Good for her, I thought to myself, let's get this semen streamin'.) She moved the condom over my outstretched tongue and took her finger off the lower (open) end. The slimy, spicy cum hit my tongue with an audible splat.\n\nFor a moment I just let it sit there, feeling its texture and slight warmth as Barbara moved her finger to the other hand and squeezed down, like getting the last bit out of the toothpaste.\n\nI was still thinking about the taste as I realized that some was starting to spill off my tongue. I brought my tongue back inside and closed my mouth.\n\nThe pooled cum began to slide down to the back of my tongue. It felt slightly tingly and I hadn't realized there was so much of it.\n\nJust holding it in my mouth was suddenly a turn-on. I swished it from one side of my mouth to the other. Then back again. It was now tasting kind of sweet. As my saliva mixed with it, I began to think it was growing in volume, but it was probably air bubbles.\n\nThe sounds of my mouth making cum-moving noises seemed to be the only sounds in the world, except for the crackling embers of the dying fire. There was probably the radio, too, but I didn't hear it, the music drowned out by cum-swishing.\n\nEventually I swallowed it with a loud \"gulp.\" As it slid down my throat I felt the light touch of a finger touch my skin at the top of my left bra cup. That had an effect on me that I could never have imagined. I came like a horny 18-year-old!\n\nThe sudden, intense orgasm seemed to last for hours, but in reality was only ten or twenty seconds -- of pure ecstasy. I don't know what sounds I was making, but I felt that I was being envied by the girlfriends for a whole new reason.\n\nScrew 'em! I thought to myself in mid-climax.\n\nWhen I finally stopped coming. I opened my eyes and found everyone as still as a painting, with eyes wide-open -- all staring at me.",
        "I was a little embarrassed, but not sure why. (What's wrong with a good orgasm? Jeff had just had one. I could vouch for that!)\n\nTurning to see whose finger was on my breast I looked down and didn't see one. That was odd.\n\nReaching down to feel myself there, I felt the oily residue of a drop of Jeff's cum that must have dribbled out of my mouth. It shows you what a little drop of cum can do for a girl, especially one who hasn't had a cock to suck in a few weeks.\n\nI was a little surprised at myself, actually. I'd never tasted cum from a rubber before, but the whole thing and the thought of the thing were really hot and made me even hornier. I made a mental note to try this again in the future, on another occasion when I was a little more comfortable and in control - and in a bedroom.\n\nThe guys had now lined up behind Piper. Each lasted longer than Jeff, but, after all, they were horny 18-year-olds. I'd say each came in about 4 or 5 minutes. Every time a guy came in her (usually quite loudly) I think I began to salivate, anticipating in some bizarre Pavlovian way the gooey treat about to dribble onto my tongue.\n\nA guy would enter Piper. The squealing and moaning would start. A few minutes later it reached a crescendo and it would quickly die down. Then I knew I'd be getting my mouthful of the white stuff. This made me climax too -- each time!\n\nAfter each would come, he turned surprisingly quiet - especially compared to Piper who kept moaning up a storm especially now that she had Pete's dick ensconced in her mouth. The guy would pull out, roll off his condom (or get help from his girlfriend), and slowly drip the semen onto my tongue, lit by nothing but star, moon, and fire light.\n\nI began to love the dribbling. The swallowing was better, but playing with this exquisite man juice was fun and sexy. And made me cum again and again.\n\nOften I'd even let a little spill onto my chest, just to rub it in with my fingers. That always got the guy screwing Piper to come. It was kind of cool, this control I had over a guy screwing another girl -- without even touching either one of them -- and sitting right there next to them, to boot.\n\nAnd so the rest of the night went.\n\nPete was last since, by now, my old friend Piper had practically annexed his cock down her throat. Without her mouth filled with his cock she was screaming loudly, more so than she had all evening. I guess the thing they had going for them was good.\n\nAfter he came, Piper turned around and whipped that little sucker off his still-good-sized dick. Holding it with care, she sucked him deeply into her mouth and moved in front of me with a mischievous smirk on her face.\n\nI opened my mouth that still had the penultimate guy's (the brainiac's) cum in it since I was enjoying playing with it. In truth, my mouth was awash in sperm, little guys swimming in every direction, searching for the impossible dream. Poor babies.\n\nAs Piper looked down at me I dutifully opened my mouth and extended my tongue carefully keeping as much of the brainiac's delicious semen from spilling down onto my chest.\n\nShe ever so slowly let it drip out of the condom, almost like getting the last few drops out of a bottle of maple syrup. After what seemed an eternity I thought she'd finished and closed my mouth that had long ago begun to spill cum onto my chest and bra. \n\nAs I was slowly swilling the sweet semen around my mouth -- to everyone's continued amusement and amazement -- she then spit the cum she'd gotten from Pete's cock at my tits. This caused two things to happen simultaneously.\n\nI began to smile and I began to come. The smiling became a loud cum-laden laugh and some of the semen in my mouth flowed down my chin onto my chest and bra. The majority of it, projected by my sudden guffaw, flew at Piper.\n\nMy laughter intensified seeing her previously pristine top now drenched in saliva and semen. Thankfully, this made her laugh too, but only after she dropped Pete's now spent rubber on my forehead where it sat for a second or two before rolling down my cheek and onto the top of my right bra cup.\n\nPiper, still standing before me, looked a mess, her hair in disarray, naked from the waist down, her T-shirt soaked with a whole lot of DNA. The laughter emanating from just the two of us was suddenly enhanced when a current hit Let's Get It On from Marvin Gaye came on the transistor radio. It caused everyone to laugh and the mood to shift from a possibly vindictive catfight between two babes to a stoned laughter eventually causing some minor stomach pains.\n\nI was exhausted from coming so much. I still had all but my T-shirt on and, even though everyone wanted \"Boobs!\" they clearly wanted me to swallow their cum more. (I couldn't decide if I was hurt by that or not.)\n\nAs we all began to giddily calm down there was a stretch of tacit meditation and we all could sense that the night was drawing to a close.\n\nSuddenly Piper (who'd had a beer bottle in her mouth all night if Pete's cock wasn't there) blurted quite drunkenly, \"Well, I still think you should see Constance's tits. They're the size of fuckin' cantaloupes!\"\n\nAnd with that she collapsed onto a blanket on the sand.\n\nWe all laughed the laughter of young people who'd shared a new intimacy that was both highly exquisite and profoundly strange.\n\nAs for myself, I put on my T-shirt and a sweatshirt. My bra was soaked in semen, but I knew that would dry soon enough.\n\nThe dying embers provided just enough light for us to gather up our belongings.\n\nWalking back to the car, now getting her second wind, Piper said to me, \"Boy, I'm a little sore. I've never fucked that much in one night.\"\n\n\"Hey, babe,\" I responded. \"You were great. I never knew you came like that, with such, uh, gusto. I think they heard you in the next county.\"\n\nAfter a moment I asked, \"You OK?\" meaning it, as I rubbed her across the back.\n\nShe nodded and was silent.\n\nThen one of the brainier guys said, out of the blue, or black, \"Hey, Constance, your tongue must be sore from holding it out like that all night. Can you say 'The sixth sick sheik's sixth sheep's sick'?\"\n\nI laughed, but didn't say anything because he was right. My tongue and jaw were a little sore. And, I was still savoring the tingly feeling in my mouth.\n\n\"What? Cat got your tongue or is it just coated with cum?\" Piper kidded me.\n\n\"OK\" I answered. \"'Peter's Piper, picked his pickle,\" I began to laugh again, \"and proudly popped his prick. She - \" Now I was laughing too hard to make up any more coherent alliteration. \n\nPiper, never one to not get the last word in (Mrs. Watson, my sixth grade English teacher, would have had a field day with the abhorrent grammar in that phrase. 'Sorry, Mrs. Watson.'), slapping Pete's butt and tickling me, said, \"Rubber, baby, Bogey bumpers,\" three times fast, saying it almost incoherently the third time. With that she reeled into me and we both fell to the sand, loudly giggling in a reeking heap of cum-stained clothing, hair and pussy juice.\n\nSo, there, in mid August at Lake Bogey in the wee hours of the morning and in their addled states, a dozen young men and women fell down on the sand, dropped everything in their hands and on their shoulders, and laughed so hard that most actually admitted, the next day, dribbling in his or her pants.\n\n*  *  *\n\nIn a half-sleep, the middle of a bizarre dream. Sitting at the counter in a soda shop painted all white, next to an anthropomorphized cow, I was sipping a vanilla milkshake through a very tiny straw, the kind they put in mixed drinks. I loved the milkshake, but couldn't seem to sip enough for a real mouthful. Frustrated, I asked the cow why I was having such difficulty.\n\nThen the Rolling Stones were singing You Can't Always Get What You Want.\n\nLooking around my bedroom I saw the clock radio playing, it was 8:30. I was alone, semi-awake and naked under the thin top sheet. I had a blurred recollection of the previous night's fun hanging out at Lake Bogey: We had gotten very blitzed. \n\nI wasn't sure how I'd gotten home, but now I was waking up in my bed. Life was good and I began to smile as I sung along with the Stones. I got up, didn't want to look at myself in the mirror, but set right to picking up my clothes strewn on the floor, my bare breasts slightly swaying. Panties, jeans, T-shirt, sandals, but no bra. I hadn't left it anywhere since I wasn't seeing anyone and I knew I hadn't gone braless. (The few times I walked around town braless, the mayor greeted me personally. It was creepy.)\n\nWhen I couldn't find it anywhere I looked in the bathroom where it was hanging on a towel hook. Hmm. I'd never done that before.\n\nI picked it up and the normally soft material of the cups was hard, like thin cardboard.\n\nI couldn't imagine what had happened and I took a closer look. As it got nearer my face the peculiar and intriguing smell of dried cum struck me like a maul. Memories of the previous night's actual events flooded my mind. My naked pussy flooded, too.\n\nI picked up my left boob, licking and sucking it, hoping to find some delicious slippery semen remnants from the previous night. I briefly and furiously rubbed my clit and, sitting down on the side of the tub, had a wonderful, surprising, and utterly delightful orgasm. "
    ],
    "authorname": "Global Carol",
    "tags": [
        "cum drinking",
        "1970s",
        "big boobs",
        "the seventies",
        "cum swallowing",
        "18 year old",
        "coming of age",
        "cheerleader"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/constance-condom-conundrum"
}