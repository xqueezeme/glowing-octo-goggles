{
    "title": "There and Back Again Ch. 031-032",
    "pages": [
        "Chapter Thirty-One: Necessity Rules \n\nBefore lunch the next day, a very anxious-looking Swiftrunner was back. He was told to bring us to see the Lady, as I knew he would. He added his own stipulation though \u2013 we had to have our weapons bound or leave them behind. I knew it wouldn't be a huge hindrance \u2013 they'd never find all of Zevran's daggers, Shale didn't use a weapon anyway, and the two mages were hardly helpless while empty-handed, but Sten, Alistair, and Leliana were all less than thrilled with the prospect. But Zathrian pointed out the hypocrisy \u2013 we were asking him to go literally into the wolves' den, because we supposedly trusted the werewolves; was it really that strange that we be asked to show a sign of that faith? I was vaguely concerned about Zathrian turning on us, but allowing that thought to show would only end us up in worse trouble. I tied my daggers into their sheaths as directed, with some sort of thin twine Swiftrunner presented. \n\nOnce ready, we followed Swiftrunner deeper into the forest. When we finally came to the ruin, we were brought through a side tunnel directly into the Lady's domain, bypassing the undead, spiders, and the dragon in the ruins altogether, to my relief. Though I wondered if we should go in to the rest of the ruin later, since I knew that dragon had quite a hoard, and somewhere down there was a way for Wynne or Morrigan to learn to become an arcane warrior. The number of werewolves had increased as we got closer and closer to the Lady, and they all flanked us, low-pitched growls echoing through the hallways. None of them spoke, they just watched us, and I couldn't tell if the stares were hostile, hopeful, or just curious. \n\nFinally we were led to a large, open room that had been breached by nature in multiple places. Roots projected through the ceiling, and a few trees even grew in drifts of dirt that had collected in the rubble. Sylvans, I remembered, though I hoped we wouldn't have to learn that the hard way. We were ushered into the centre of the room, surrounded by huge, furred, growling werewolves. Suddenly they parted to allow a beautiful, naked woman to approach us. Her skin was an odd, pale, almost grey colour, and was crisscrossed with vines, so dark a green they appeared black, which barely covered her nipples and obscured her sex. Alistair blushed a deep crimson and turned away; Sten looked uncomfortable and also averted his eyes. By contrast, Aedan met her eyes with equanimity and Zevran didn't even try to hide his appreciative look. \n\nThe werewolves all slightly bowed as she walked between them, and the growling quieted; even I was a little bit awed at the aura of authority that surrounded the Lady of the Forest. Her voice was sweet and melodic but undeniably alien. She spoke briefly with Aedan, and then approached Zathrian. His face was guarded, and the growling began again as she got close to him, but to everyone's amazement, she walked right up to him, reached out and pulled him into her arms. A gasp echoed around the room, the werewolves who'd spent so long hating Zathrian all apparently gob-smacked. I saw Zathrian's face falter and then he began sobbing before I averted my eyes. Everyone moved subtly away to allow them some privacy, which was also something I didn't expect. Amazing \u2013 when you don't slaughter half of them to reach her, they're a little more understanding! \n\nWe huddled together, all of us still somewhat uneasy, eyeing the werewolves and Zathrian with the Lady. The latter two were deep in discussion, to my continued surprise. The werewolves were also uncertain, milling around and talking in deep gravelly voices amongst themselves. I strolled over to a toppled marble column and sat down, Prince at my heels. A werewolf watched me do it and strode in my direction. I wasn't sure whether I'd violated some unknown rule about sitting in the Lady's presence, and debated whether to spring back up or remain where I was. Before he could reach me, Alistair was in front of me, sheltering me from whatever the wolf was going to do. He held his hands out, palms forward. \n\n\"Easy, friend.\" He nodded towards the Lady of the Forest. \"That is your lady; this is ours. Leave her alone.\" As he spoke, Aedan, Zevran, Leliana, and even Sten and Morrigan came over to join him, shielding me with their bodies but keeping their postures non-threatening. Prince growled, low and threatening. I guess he didn't get the memo about not picking fights! I was horribly embarrassed, and extremely pleased all at the same time. The werewolf growled, but backed off when Swiftrunner barked at him. I couldn't understand the language, but the meaning was clear in any language. He tucked his tail behind him and turned, slinking away. \n\nAedan sat himself beside me, Leliana on the opposite side, and Alistair crouched in front of me. The rest stood around in seeming random positions, but the tension was still quite obvious. My companions were a little over-protective, and I was mortified to discover how safe and warm inside that made me feel. Even when I'd just shot down Alistair's advance... \n\nFinally Zathrian and the Lady rejoined the group. We all stood to meet them. All traces of Zathrian's arrogance were gone, and he stood, slightly stooped, face drawn. He looked...old. \n\n\"The Lady has convinced me that she wishes only to be allowed to die. My hate blinded me, for so long...I knew nothing else. It is time to let that go.\" He turned to us. \"Thank you, Grey Wardens, and you, Seer. I will prepare the ritual to end my curse. Please...please tell Lanaya that I have great faith in her, and that I know she will be a better Keeper than I have been these past centuries?\" \n\nWe nodded, solemnly, and he stepped to the centre of the room, sitting down and closing his eyes. The Lady did a quick circuit among the werewolves, not talking, but touching each one as she passed. When she reached Swiftrunner, she took his shoulders in her hands, and he bent so his forehead touched hers. They stayed like that for a few moments, and we all averted our eyes, wishing we were elsewhere. She finally separated from the huge beast, and approached Zathrian. She shimmered, and her skin seemed to suddenly change, and where there had been a beautiful, if unearthly woman, now there was a large, white wolf. It padded over to Zathrian, then settled onto its belly, head resting on Zathrian's knee. He opened his eyes one last time to lock eyes with the creature, then raised a small, wickedly sharp dagger and dragged it across the palm of his opposite hand. \n\nThe usual tingly crawly sensation went up my spine before he did it, and Alistair and I traded looks. There was a flash of light, and when our eyes cleared, all that remained of Zathrian and the Lady were bones. The next thing we noticed was that all the werewolves had changed back into human form. They were naked, more men than women, and a variety of ages from teens to elderly. They talked amongst themselves for a bit, as we silently watched. Some knew they had family to go back to, while others could be sure their families were either dead or had moved on; those with nowhere to go got sorted out into small groups accompanying those who had homes and agreed to take them; soon, all of the former werewolves had grouped up and made their way out of the ruins. Several pledged to go to Redcliffe and join the forces we hoped to gather there to combat the Blight, and I was impressed. \n\nWe were finally alone in the crumbling ruins. We sat to chat about our options, including confronting the undead and the dragon in the ruins, or just leaving. Aedan was reluctant to leave the dangerous creatures lurking down there in case some innocent stumbled on the place in the future, and so with a sigh we all agreed to clear the ruin out. I climbed to my feet, stopping Alistair before he could walk away from me. \n\n\"I'm your Lady?\" \n\nHe flushed slightly, face defensive. \"Yeah, well, you are, whether you like it or not. You let Aedan lead, you even make a good show out of it, but we all know we'd follow you in a heartbeat if you contradicted him. And you...remind all of us what we're fighting for. It's easy to lose sight of that when you're in a dark place, surrounded by darkspawn and dragons and abominations.\" \n\nHis shoulders squared as he turned to walk away, and it was my turn to be left, standing with my mouth hanging open, looking ridiculous. \n\nThe group gathered around the doors to the rest of the ancient ruin, and I finally joined them, at the back, daggers out. Going backwards through the ruin felt weird, and of course, the first thing we encountered was a room full of undead and an arcane horror. I could feel that horrible, itchy, magic aura from the room next to it, so we were prepared; Alistair drained most of its mana, Morrigan drained a bit more, and then Aedan, Zevran, Sten, and Alistair hacked it to pieces. Once it was dead, the rest of the corpses were pretty easy to defeat. \n\nA few more rooms of corpses followed, and, clumsy as they were, I was even able to help out a little bit. I got yelled at by Wynne, but ignored her. Alistair was harder to ignore \u2013 he took me by the arm and shouted at me angrily. I agreed to stay back with a sigh. We found the room with the odd phylactery containing the spirit that taught the Arcane Warrior abilities. Wynne stepped up and held the phylactery. It was creepy, actually, to watch \u2013 her eyes rolled back in her head, her body lifted up slightly as though she hung from a thread on the ceiling, and she convulsed for about a minute. When it was done she slumped down, and Aedan caught her, easing her to the ground. She regained consciousness after a minute, and claimed to feel fine. With no one else who could heal to check her out, we were forced to believe her. She claimed to know all about Arcane Warrior magic now, and we watched her destroy the phylactery on the nearby altar. \n\nNext we ended up killing a shade in the shape of an elven woman, and managed to complete the elven ritual without the tablet, since I knew the steps from the wiki. The Juggernaut armour was impressive looking, and fit Alistair perfectly. I was relieved that the pieces were actually all together; apparently the hide and seek out in the ruins with tombstones was just for entertainment value. \n\nThere were more skeletons, and then eventually a set of stairs leading up towards the surface. We knew the dragon was at the top of the stairs, and Aedan convinced me to wait at the bottom until he called. I have never been known for my patience, and this was no exception. I stood at the bottom of the stairs, looking balefully up, anxiously fidgeting. I'm going to take up nail biting, at this rate! \n\nI heard the clashing of metal, the roaring of a dragon, and knew the fight was on. It lasted for an eternity. Frustrated and afraid, I couldn't wait; I took the stairs two at a time as I raced to the top to check on my friends. Barging through the door, which someone had closed, the scene before me was something out of my worst nightmare. \n\nThe air smelled like sulfur and made my eyes water. The source of the smell, an enormous fire-breathing dragon, was in the middle of the room surrounded by my companions. Off to my right, Wynne was down with blood trickling from a wound in her head. Her eyes were closed, and I didn't know if she was unconscious or dead. Sten, Shale, and Alistair faced the dragon, who would alternate snapping and clawing at one then another. Zevran and Aedan were nowhere to be seen. Leliana was back in a corner, firing arrow after arrow, but most of them just bounced off the creature's thick hide. Morrigan stood over Wynne's prone form, alternately shooting frost spells to slow the dragon down and keep the fire from causing too much damage, and trying to rouse the elderly healer at her feet. \n\nAs I watched, the dragon spun, its tail arcing through the air, connecting with Shale and tossing her towards Sten. Both went down in a tangled pile of limbs and rocks, and I briefly wondered if Sten could survive being landed upon by Shale. Stopping the turn, Alistair was left alone facing the dragon. And then I realised it was taking a deep breath, which I could only assume foreshadowed a blast of flame; Alistair, being the only nearby target, had nowhere to run. He was going to burn. He raised his shield, but even from across the room I could see that his shoulders had slumped; he knew he couldn't survive. \n\nIt was like the world suddenly quit spinning, like time just...stopped. I couldn't move, couldn't breathe, could only stare helplessly at the man I was stupidly in love with and watch him die. Alistair spotted me, and smiled a slow, sad smile, and I felt my heart shatter into thousands of tiny pieces. I suddenly realised that everyone I'd ever cared about was in that room, and at least one of them was going to die. Something inside me snapped. I had not risked my life at Ostagar to save Duncan and Cailan for Alistair, only to watch him burn. \n\nAnd then suddenly time caught back up, and before I even had time to think, I was running. I pulled my daggers from their sheaths, and shouting at the top of my lungs, pelted towards the dragon, whose profile faced me. I waved my arms like a crazy person, trying to get the beast's attention, and it seemed to work. Suddenly faced with a new adversary, the dragon's head turned towards me. It seemed to be moving in slow motion, but I realised that was just my perception heightened by fear. Realising what I was up to, Alistair shouted something at me, but it was too late. \n\nThe dragon's mouth opened and a great gout of flame erupted from its maw. It started before the head was facing me, splashing harmlessly against the stone walls of the ruin, but as it continued to turn the heat grew more and more intense. I opened my mouth to scream in agony, but the air was so hot I couldn't even draw a breath. I felt my skin start to burn, my armour blackening, and mercifully began to lose consciousness. The last thing I saw as I fell was Zevran climbing up the beast's back, and Alistair leaping at the neck, digging his sword in and hanging on. And then everything went black. \n\n******** \n\nI dreamt of home. I was quite sure it was a dream \u2013 I couldn't look around, couldn't sit up. How I could dream when I should be dead was beyond me, but apparently rumours of my demise must have been exaggerated. My doctor was there, trying to talk to me, but my mouth was full of cotton or something, and I couldn't make any sound. So this is what a lucid dream feels like. I would have pinched myself but I couldn't move. I tried to think of things that should wake me up \u2013 the smell of my own roasting human flesh, my fear of what happened after I passed out, the incredible pain I had felt, even tried imagining Alistair kissing me, anything to shock my mind into waking up. It didn't work. My heart was pounding as I worried about my companions in Ferelden. Not a good time to be sleeping, Sierra. Wake up! \n\nI briefly wondered if I could be in the Fade again, but figured the answer must be no if I was able to have that coherent a thought. When I'd been in the Fade before, I'd felt very confused, unable to think clearly. This felt different. \n\nI tried concentrating on what my dream doctor was saying, but it was like I was hearing underwater; I caught every third or fifth word, and my lip-reading skills weren't strong enough to fill in the blanks. He started shining a little tiny flashlight into my eyes \u2013 ow! \u2013 and then proceeded to pinch my hands. I'd have screeched and pulled away if I was capable, but my arms felt like they were cooked spaghetti, which coincidentally had the density of lead. I couldn't even twitch. But my assumption that this was a dream went out the window \u2013 I'd never dreamt of pain before, that I could remember. \n\nMy eyes drifted closed, and when they opened again, Aedan was there. He looked afraid. He was shaking me, and I couldn't understand him, but knew enough to guess he was calling my name. I still couldn't move, couldn't speak. Wynne came into view, and Aedan was talking to her, arms waving in jerky gestures. Wynne's face was calm, but the confusion was clear. She didn't understand either. \n\nThe next time I blinked, I was back on Earth. It was dizzying and confusing, and I wanted to cry. Maybe this was what I'd feared since first realizing I was travelling to Ferelden \u2013 I was stuck somehow, between worlds. I'd never wake up again, never see Alistair smile or ruffle Aedan's hair or tease him about Zevran...The one part of my body apparently under voluntary control was my eyes, and tears welled up before I could blink them away. I could feel them trickle down my cheek, but couldn't brush them away. It seemed a major indignity, somehow. \n\nThe doctor noticed the tears, and was immediately back in my face. I concentrated, and he finally tried to speak slowly and clearly. \n\n\"Sierra, can you hear me?\" He face-palmed. \"Sorry, that was dumb. Listen, if you can understand me, blink once for yes and twice for no. Okay?\" \n\nI slowly, deliberately blinked once. \n\n\"Okay I just want to test our system. Lemme think...uh, is the sky purple?\" \n\nI blinked twice. He smiled. \n\n\"Excellent. Alright listen. I'm not sure exactly what's going on \u2013 you started convulsing and your skin blistered, then cleared again a few minutes later. Now you're not moving. Can you feel things?\" \n\nI blinked once. \n\n\"Huh. So, I guess...some sort of locked-in syndrome. I'll have to try-\" \n\nI interrupted with two emphatic blinks. \n\n\"No? No to what? Not locked in?\" \n\nBlink. \n\n\"I...okay, I'm not even sure what to start asking, with such limited response possible. Do you understand what's going on?\" \n\nTwo blinks. \n\n\"But you don't think it's locked in syndrome.\" \n\nTwo blinks. \n\n\"I...well I suppose you wouldn't be able to blink if it was. Alright, well I'll do some research. See what I can figure out. Are you in pain?\" \n\nTwo blinks. \n\n\"Okay. Do you need anything? Hungry, thirsty, need to use the bathroom?\" \n\nThree blinks. \n\n\"Uh...oh. You need something, but none of those things?\" \n\nOne blink. \n\n\"Um...are you cold? Need a blanket?\" \n\nThree blinks. \n\n\"Not a blanket? Something else?\" \n\nOne blink. He looked stumped. I wanted to scream. Something flickered behind his eyes. Enlightenment? \n\n\"Oh, let me guess. You want your clothes on.\" \n\nOne very relieved blink. \n\n\"Alright, I'll see what I can do.\" \n\nI settled in to wait, and my eyes drifted shut again. How can I be tired? All I've done is sleep. When I woke again, I was in Ferelden. I was being carried, but I couldn't turn my head to see who carried me. I recognised the ruins we walked through, and realised we must be leaving them, since we were heading through the werewolf lair and up the stairs. It made sense \u2013 with at least Wynne injured, and me unconscious, staying around as prey for spiders and undead wasn't very appealing. I was desperate for the ability to look around, so I could reassure myself that everyone was safe. Whatever happened to me, I wanted to know. Sadly my prayers went unanswered, and the back of Aedan, in front of me, was all I succeeded in seeing. At least he's safe. I closed my eyes and let the tears come. \n\nThe next time I opened my eyes, I was lying on the ground, blue sky shining down on me. Ferelden, still. Maybe I'm stabilising again. I was highly relieved to find myself able to turn my head. I felt weak, but at least capable of moving to some extent. On one side, there was nothing but trees, but the opposite side showed me Aedan's sleeping face. I could feel his large warm hand gripping mine, and squeezed gently. His eyes popped open, and a huge smile broke out when he saw me looking at him. \n\n\"Wynne! She's awake!\" He hollered across what I assumed was our camp, and then turned back to me. \"How are you, sweetheart?\" ",
        "I tried to talk, but a croak was all I managed. \"Water?\" \n\nWynne dropped down beside me, already prepared with a water skin. She carefully poured me a tiny mouthful of what tasted like the best thing ever, though my brain informed me it was just cold water. I swished enough to moisten the cotton balls filling my mouth, and then opened for more. After a few swallows, I was finally able to clear my throat and talk. \n\n\"Wynne? You okay?\" \n\nShe smiled at me. \"It'll take a bit more than a head wound to keep me down, child.\" \n\nI sighed in relief. \"Alistair?\" \n\n\"Sleeping right now. But he's fine otherwise. You saved him, Sierra. He carried you out of that nightmare place, if that tells you how well he is.\" \n\n\"Good.\" I smiled dreamily. \"Sleepy.\" \n\n\"Rest, child. You're safe and all is well.\" She stood, and the last thing I heard before I fell back asleep was her saying \"I need to go check on Morrigan. Stay with her, Aedan.\" \n\nChapter Thirty-Two: Road to Recovery \n\nI woke with the memory of what Wynne was saying as I fell asleep. What was wrong with Morrigan? Had something happened as they exited the ruins? I groaned as I sat up, and immediately felt an arm wrap around behind me, supporting me. \n\nI turned towards the source of the support. \"Aedan? Wha...\" I cut off. It wasn't Aedan with his arm around me. It was Alistair. His handsome face looked down at me, closer than I'd ever been, and I was momentarily struck dumb. I blurted out the first thing that came to mind. \n\n\"Your eyebrows are gone.\" Oh, smooth, Sierra. Why not just ask him if you can have his babies while you're at it? \n\nSaid badly singed eyebrows were raised, and he smirked slightly as he responded. \"Ah, so that's why you did it. Couldn't stand to see me looking silly without eyebrows?\" \n\nI was saved from having to reply to this by the timely arrival of Wynne and Aedan. Alistair backed off and let Wynne check me out, while Aedan supported me and fussed over me. \n\n\"How do you feel, Sierra?\" Wynne gave her professional, bland smile as she checked my pulse. \n\n\"Weak. And hungry. Like I ran a thousand miles and haven't eaten in a month. Where are we?\" \n\n\"We're still in the Brecilian Forest, on our way back to the Dalish camp. What you are feeling is normal, given what you've been through the past few days.\" \n\n\"And what exactly have I been through? Oh, and what happened to Morrigan?\" \n\nAlistair laughed. \"You happened to her!\" \n\nWynne shot him a dirty look, and he shut up. \"She's fine. She...well, she's insisted on learning a healing spell. And a mana rejuvenation spell. So you never have an excuse to do that again, or so she said. And she rather...overdid it, trying to learn. She'll sleep for a while, but she's fine.\" \n\nI flushed. \"For me? Wow. I'll have to thank her. Once she wakes up, that is. You, uh, didn't answer my first question. What exactly happened?\" \n\n\"You don't remember?\" Wynne looked concerned, and her hand went to my forehead. \n\n\"I remember the dragon. Nothing after that.\" Wynne, Alistair, and Aedan exchanged glances. \"Now you're freaking me out. Just tell me!\" \n\nAedan spoke. \"Sierra, you...almost died. The dragon almost burned you alive. You distracted it enough that Alistair and Zev were able to kill it. Morrigan put you under with a sleep spell until Wynne recovered and could heal you, but then you wouldn't wake up. We carried you out unconscious.\" \n\nAlistair cut in. \"And my eyebrows will grow back.\" \n\nWynne rolled her eyes at him. \"Sierra, I very nearly didn't get you back. We're lucky my spirit seems to have taken a liking to you. I'm still not sure why it took so long for you to wake up, though. What, in Andraste's name, were you thinking about, charging a dragon?\" \n\nI felt a little bit guilty, looking at the concern written on my friend's faces. I didn't want to die, but given the choices I'd had...Ferelden needed Alistair. I need Alistair. I just need him to live. Is that too much to ask? \n\nThey were all looking at me, Wynne's expression concerned, Alistair's now confused. Oh, I'm supposed to say something? Aedan looked amused, like he knew where my mind had wandered to. \n\n\"Um. Sorry?\" \n\nI had no idea what the right answer was. Did I feel bad for scaring them all? Yes. Did I regret my actions? Not in the least. And I'd do it again, a thousand times, to keep any one of them alive. Especially Alistair. Not that I was hoping I'd have to. Suicide was never something I'd considered. \n\n\"Just don't do it again, Sierra.\" \n\n\"I can't promise that, Wynne. If it comes down to it...if it's life or death...I'll do it again.\" \n\n\"You could die, child.\" \n\nI shrugged. I really don't care. Huh. \"That's a price I'm willing to pay. I'm...I won't say expendable, that's not what I mean, but...I'm not the important one, here. You guys are. If you don't end the blight, a whole lot more people are going to lose their lives. If the cost of keeping you all alive is my life, then I accept that.\" \n\nThere was a veritable explosion of shocked, angry come-backs after that declaration, and Aedan behind me shook me slightly. Alistair stalked off, apparently too angry to even shout at me. Leliana came over, and when she overheard what I had said, she started in as well. \n\n\"Hey. I didn't save Duncan and Cailan for Alistair, just to watch him die instead. You might as well stop, because you're never going to convince me it was the wrong thing to do. I'm grateful I survived \u2013 I don't want to die, you know \u2013 but I won't feel sorry for saving him.\" \n\nI closed my eyes and let it wash over me, half-reclined against Aedan. I was still hungry, but the fatigue seemed more important, especially when fighting it meant listening to people scold me. It had the intended effect, but not in the way I expected \u2013 the scolding stopped, and all of a sudden everyone was falling all over themselves to make me more comfortable. Wynne did some sort of magic thing that tickled \u2013 some sort of diagnostic, like a CT scan, I guessed \u2013 and Leliana ran off to find me something to eat. I tried to eat it, but my arms were so tired that Aedan actually had to help me finish the soup. Afterwards, I was pleasantly muzzy and slumped back into Aedan's arms, drowsing. Leli sang, something Fereldan for once, and it was nice just to relax. \n\nAfter a bit, Morrigan emerged from a tent and came over to the campfire. Her steps were slow, halting, and her posture stooped; she wasn't feeling well, clearly. I struggled to sit up, and grabbed her hand once she sat nearby. \n\n\"Morrigan, are you alright? I was worried when Wynne told me what happened.\" \n\nShe looked at me haughtily, but the effect was somewhat spoiled by the dark circles under her eyes. \"I doubt that, somehow.\" \n\n\"No, I really was. I don't wish for you to make yourself ill trying to learn new spells.\" I squeezed her hand lightly. \"Thank you. I know healing isn't your preferred type of spell. I want you to know I'm grateful.\" \n\nShe studied my face for a moment, and finally nodded. \n\nI pitched my voice low, so that only Aedan and Morrigan could hear. \"How bad was it, honestly? Learning from Wynne?\" I almost thought I saw a smile twitch. \n\n\"Let's just say the old bat did not miss the opportunity to lecture me on how she has been trying to teach me healing since we met.\" \n\nI winced. \"Thanks for taking one for the team, Morrigan.\" \n\nHer lips twitched again. \"You are welcome. 'Twas lucky it was you who was injured, actually \u2013 had it been the Chantry boy, I most certainly wouldn't have bothered...or perhaps I'd have turned him into a toad when I recovered.\" She said it loud enough that Alistair, just returning from wherever he'd stormed off to earlier, could hear; he tried to shoot her a dirty look, but wasn't successful due to the audible gulp of fear. I giggled and Aedan snorted. \n\n\"Morrigan! You do have a sense of humour!\" \n\nAedan's comment solicited giggles from Leliana and me, and even Alistair smirked, though her joke was at his expense. Morrigan simply sniffed and turned to her own dinner, though I saw her lips twist wryly when she thought no one was looking. \n\nI dozed off, head on Aedan's shoulder, with my friends around me, talking and joking around the campfire. As exhausted as I was, the only thing I could feel was contentment. When I woke, I was in a dark tent, and as always when I woke somewhere I didn't fall asleep, I wondered who had put me there. It was the tent I shared with Aedan, though his bedroll was empty. I figured out why when I heard his voice, whispering outside. \n\n\"No.\" \n\n\"Aedan-\" Alistair's voice was surprisingly forceful, even if pitched quietly. \n\n\"I get it, Alistair. I do. But she's not ready. She can barely feed herself. It's going to have to wait.\" \n\nThey moved off together, and I sighed heavily once they were out of earshot. I wasn't looking forward to the next private conversation with Alistair. I fell asleep again, thankfully not remembering my dreams. \n\nIn the morning, we packed up and decided to try to head to the Dalish camp. At first I tried to walk; Alistair took my pack, as usual, and I smiled gratefully at him. It quickly became obvious, however, that even unburdened I wasn't going to get very far. My feet were dragging before I'd gone fifty steps, and at one point I actually fell asleep on my feet, and collapsed, waking with a start when my face hit the dirt. Dreading what was next, I sat huddled into a ball. As I expected, Alistair shifted both my pack and his own to Sten's broad shoulders, then reached down and picked me up. Again. I didn't even protest; I knew I'd just be threatened with being thrown over Sten's shoulder like so much luggage. At least the upside of being carried was that I could eat while we travelled; I found myself quite ravenous. \n\nWe stopped for lunch so that Alistair could eat as well; his hands were sort of full, and I was far too embarrassed to even think about feeding him as he carried me. Afterwards, Shale approached me, and to my surprise, offered to carry me for part of the afternoon. I would have declined, but after carrying me for hours, Alistair was rubbing his shoulders and trying to stretch when he thought I wasn't looking, and I couldn't turn down the chance to give him a break, even as I acknowledged I'd be disappointed not to be cradled in his arms for a while. Instead of cradling me, like Alistair did, she placed me up on her shoulder, and then allowed me to brace myself with feet wedged into cracks in the stone. \n\n\"Is this how Wilhelm used to force you to carry him?\" I took the resulting rumble as a yes. \"I'm sorry, Shale. I would never have asked you to carry me.\" \n\n\"I...believe It means that. I find myself feeling oddly grateful for being treated like a person, in this strange group.\" \n\n\"I can understand that. Although, you are a person, it should just go without saying that you be treated as such.\" \n\n\"I...would ask a question, if It would permit me.\" \n\n\"Of course. Ask me anything.\" \n\n\"It said...that I was once a dwarf. A female dwarf.\" \n\n\"Yes. Shayle, a warrior of House Cadash. You volunteered to be made into a golem to try to save your Thaig.\" \n\n\"Does It know...why golems were created?\" \n\n\"To fight darkspawn. A long time ago, the Dwarven Kingdom was much larger than it currently is, covering hundreds of miles underground, with roads leading between each Thaig. Then the darkspawn came, and many of the Thaigs were overwhelmed. Those who could, fled eventually to Orzammar. Caridin created the Anvil of the Void to create golems \u2013 the ultimate weapon against darkspawn. It started with volunteers, like you, but then the King started forcing criminals and his political enemies into it too. Unfortunately, the golems required activation rods to function, and as the dwarves fighting with them died, the golems became deactivated.\" \n\n\"And how did I end up property of him?\" The last word was hissed. \n\n\"That I don't know. I can only assume at some point he entered the Deep Roads and found you and your activation rod. Shale...why did you decide to believe me now? When I tried to tell you before...\" \n\n\"I...in the temple. Where we found the ashes of the squishy ones' prophet? I met...myself, I think. My dwarf self.\" \n\n\"Oh! I wondered what happened to everyone.\" \n\n\"And It has not pried into everyone's visions? I find myself surprised.\" \n\n\"Yeah, yeah, I'm nosey. I know. But I figured if no one mentioned it, I was best to leave it alone. I didn't want to talk about it either.\" \n\n\"I am...sorry. For not believing It.\" \n\n\"Thanks, Shale. If you ever...\" I can't believe I'm saying this. \"...want to talk, I'm always willing.\" \n\nShe rumbled something that I couldn't interpret, and I let it slide. \n\nWe spent the rest of the afternoon walking in silence. I was exhausted, and clinging to Shale's shoulder sapped all of my energy. Stopping early, both for me and Morrigan, Aedan actually had to help me down or I was sure I'd have fallen. He fed me again, and I started to feel like a hobbit, with second breakfasts and elevensies. Tired as I was, I muttered something about not having furry feet before falling soundly asleep on Aedan's shoulder. \n\nWhen I woke in the morning, I was being carried again. I'd apparently slept through the night, then the usual morning activities, and then being picked up by Sten, of all people. When I opened my eyes, Sten's expression was one of amused disbelief, as if he couldn't figure out how he'd been talked into this, and I didn't want to think about the conversation Aedan must have had with him to convince the Qunari to carry me. And actually carry me comfortably, instead of thrown over his shoulder. My respect for Aedan's diplomacy went up a couple of notches. \n\nHe was walking with Alistair on one side of him, and Aedan on the other; both Wardens were tripping over themselves to encourage Sten to keep going, and to tell him not to hurt me or wake me up. In fact they were so engrossed in telling Sten what to do that neither noticed I was actually awake. I listened for a few minutes, and Sten's expression became downright smug when he saw me watching. I finally broke down laughing when Aedan nagged Sten not to wake me, for the third time in two minutes. \n\n\"I appreciate the thought, brother, but I'm quite certain you and Alistair were far more likely to wake me with talking than Sten was with walking!\" Both of them blushed furiously, and Sten actually laughed out loud. I rule! I made the Qunari laugh! \n\nThey gave me a break for personal needs, and after I insisted on walking at least for a while. I scarfed some bread and jerky while we walked, and realised that I actually was feeling dramatically better, though still a bit fatigued. I walked all the way back to the Dalish camp, ending up really, really annoyed by the combination of Aedan, Alistair, and Wynne all hovering around me and checking on me every five seconds. I tried walking with Shale or Sten, hoping that would be enough for them to leave me alone, but no such luck. By the time we reached the Dalish, I mumbled some excuses, left Aedan to talk to Lanaya by himself, and took off into the woods a little ways to throw myself down on a rock and sit in blessed silence for a little bit. \n\nI'd sat only a few moments, when I got an uneasy feeling, making my muscles tense and my hands reach for my daggers. I realised what it was in a couple more seconds and called out. \n\n\"Might as well sit, Zev. Hovering is only going to irritate me more.\" \n\n\"Apologies, cara mia. You always seem to know when I'm lurking nearby. Aedan made me promise to keep an eye on you.\" He settled on the rock beside me, and I leaned against him slightly. \n\nI sighed. \"I know. And part of me is rather thrilled to have a brother who cares about me; the rest wants to strangle him to death.\" \n\n\"I'd prefer it if you didn't. I've never been interested in necrophilia, particularly, and I don't have the desire to start now.\" \n\nI laughed. \"I'll make you a deal then. I'll resist the urge to kill him, if you help me distract him from fussing over me.\" \n\n\"Oh, this sounds interesting, no? Any limits on how I distract him?\" \n\n\"Not from my perspective, Zev.\" I shot him a naughty grin and he responded. \"Have fun, just keep the details to yourself. Now, how am I going to get Wynne and Alistair off my back?\" \n\n\"Alistair would be too easy, bella donna...you have many ways to distract a handsome templar, I'm sure, and if not I'd be willing to teach you-\" \n\n\"Thanks, Zev, not quite what I had in mind. I'll let you know if I ever reconsider.\" \n\nHe tsk'd at me. \"You're as bad as a Fereldan.\" \n\nWe sat quietly until the sun started to set and it got colder, then headed back to our campsite within the Dalish camp. Aedan was back, the Dalish were mourning, but Danyla was back with Athras and as I sat in a circle with my companions, I was pleased with life for a bit. I knew I'd put up with a lot worse than everyone fussing over me to stay this happy. Again I fell asleep on Aedan's shoulder, drowsing comfortably in the warmth of the fire. \n\n******** \n\nI woke in hospital, back in my skimpy gown. Given that I never soiled myself, I was truly wishing that they would leave me in my clothes. I thought I might have a chat with the next nurse I ran into. Sitting up, I pushed my call bell and then stood, fishing around in the little wardrobe by my bed for my clothes. A calm-looking, older nurse arrived as I was finishing dressing, and she smiled. \n\n\"They weren't lying! You've got to be the only coma patient who stays strong enough to get up on your own.\" \n\nI blushed, embarrassed at the thought of rumours circulating about my bizarre condition. \"Yep, that's me. The freak.\" \n\nShe smiled kindly. \"Well, now I don't know about that, but you're a little bit of a marvel, I'll give you that. The doctor is going to want to talk to you, and I imagine you'd like to get cleaned up after...\" \n\n\"Yeah, about that. Is there someone I can ask for permission to leave me dressed in my clothes unless I'm being bathed? I really dislike the gowns you all keep making me wear.\" I waved my hand in the direction of the skimpy piece of fabric on the bed. \n\nShe laughed. \"I can understand that \u2013 they're a bit drafty for my tastes too, deary. I'll see what I can do.\" \n\nShe reminded me of Wynne, and I thought the two would actually get along quite famously. She went off to find the doctor, and I wandered over to the nearby sink to check the mirror. I now looked almost exactly like my Fereldan self. The only difference was the nose...and I vaguely recalled a story where I got hit in the face with a ball as a kid, and wondered if perhaps I'd broken it at some point. My clothes were slightly baggy, with extra space in the ass, chest, and stomach, but a bit tight around the shoulders. Yet somehow my skin didn't sag like I thought it would after weight loss. Every time I thought about that my head threatened to explode. My clothes change size in Ferelden but the ones here are now too big, yet somehow my skin still fits right? I was interrupted in my self-inspection when my doctor wandered in, still looking worn out. \n\n\"Do you ever sleep, doc?\" \n\nHe smiled, but the expression was forced. \"It's hard to sleep with you scaring the pants off everyone all the time, Sierra.\" \n\nI felt somehow guilty, which made me scoff. Like I want to burn to death? I tried not to, but blushed anyway. \"What can I say? I guess I like the attention.\" \n\nHe scowled at me, and I scowled back. \"What? I don't exactly enjoy the convulsions and things either! I don't control it, you know.\" \n\nHis face softened and he sighed. \"I know. It's not your fault. It's just so damned...frustrating, to have no idea what's going on with you. Those burns...I thought you were going to die.\" ",
        "\"I...think I probably was supposed to, really. Being anchored here might have been what saved me, even. I don't know for sure, but it was like I got stuck between the two places. I don't know. I'd rather not do it again, I can tell you that.\" \n\nHe studied my face as I spoke. \"I get the impression that given the choice, you'd stay there. You'd never come back.\" I nodded, somewhat sheepishly. \"Is it really that much better there?\" \n\n\"It's...different, I guess. Some things are definitely worse \u2013 no showers, no toilets, no toilet paper...but there's also magic and dragons and a family. I'm important, there.\" \n\n\"You're important here!\" \n\n\"No, I'm really not. Let me demonstrate. How many visitors have I had here?\" He shook his head, unsure. \"I'd wager it's none. I bet you've never walked in on anyone sitting with me. I don't have any friends, here. There, well...there were eight people gathered around me trying to take care of me when I was burned. And not because it was their job, but because they care about me. I have a brother! Here the only people who'd notice if I died are you and a guardian whose paycheque would stop coming. Where would you rather be?\" \n\n\"And if it isn't real?\" \n\n\"Then I guess I'm the happiest delusional patient in the psych ward.\" \n\nHe laughed then, and looked ten years younger. \n\n\"Listen. I know this is a pain in the ass for you. I just want you to know I'm grateful for your help, and if something happens, it's because of what happened to me over there. It isn't your fault.\" \n\nHe smiled, squeezed my hand, and took his leave as I was getting dizzy. \"Say hi to your brother for me.\""
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-31-32"
}