{
    "title": "Full-Bodied Apparition",
    "pages": [
        "Author's Preface:\n\nHappy Halloween/All Hallows' Eve/Samhain/Harvest Festival/Etc. to everyone!\n\nFull-Bodied Apparition is my entry for the 2019 Halloween Story Contest. I struggled with the appropriate category for this story but decided in the end that it belonged in Erotic Horror, even though the horror elements are not the main focus. \n\nI hope readers enjoy the story, and I always welcome feedback.\n\n-Kveldulf\n\n* * *\n\nThe following story is a work of fiction. All characters are fictional and over eighteen. Please be aware that the story contains violence, gore, and other things you might expect from the horror genre.\n\n* * *\n\nFull-Bodied Apparition\n\nPrologue:\n\nVirginia City, Nevada\n\nSeptember 1869\n\nThe raucous sounds of B Street and C Street dulled behind Honor Quinn\u2014Born Honora O'Cuinn of County Wexford, Ireland\u2014as she led the rotund man uphill across A street and into an alley that led past the Harris Mansion. A loud groan interrupted his labored breathing as he followed her up the slope.\n\n\"You'd better have the best cunny in the whole damned Comstock to make me climb this fucking hill,\" Carlton Stokes slurred between shallow breaths.\n\nHonor glanced back at him, noting the wobble of the drunk man's bulk. She also saw his long, dark coat flap open in the wind, revealing a pistol on his belt. The saloon girl shivered but not from the cold, although the wind coming over the mountain blasted her with the chill of the late September night. She debated signaling Gus to call it all off. Doing so would mean fully servicing the bulky man, but she could live with that. She was not as sure about living if he pulled that gun.\n\nWhen they emerged out of the alley onto Howard Street, Honor stopped to ponder what to do next. But quicker than she expected, Stokes caught up with her and settled his meaty hand on her shoulder, using her for support while he gasped the cold mountain air. His hot breath, reeking of alcohol, flowed around her face. The impulse to push him away and scream flashed through her mind. Instead, she kissed him, her hand guiding his off her shoulder and to the satin bodice of her low-cut dress. His meaty paw rested on the swell of her left breast before his fingers tightened, squeezing and twisting. The pain from her abused bosom both repulsed and warmed Honor as she plunged her tongue past his rough lips.\n\n\"We're doing it here, in the street?\" he asked a several seconds later, fat fingers pinching her rigid nipple where it tented the thin material of her dress.\n\n\"Too much wind, lover,\" the dancer purred, kissing the reddening flesh of his jowly face. \"There's a nice, sheltered place right past that house across the street. A woodshed. The owner lets me use it for patrons when the saloon is full.\"\n\n\"You mean when you want to cheat the saloonkeeper out of his share,\" Stokes chortled, twisting her now overly sensitive nub, his free hand thrusting under her skirts and probing between her legs.\n\n\"I wouldn't do that,\" the young woman pouted, pushing the wandering hand away while pressing the one groping her chest tighter against her now aching breast. \"I mean, how could I with a name like 'Honor'?\"\n\n\"Because you're a whore,\" the man scoffed, the hand she had tried to redirect sliding back under her skirts.\n\n\"And you'll get to enjoy that fact as soon as we're in the...\"\n\n\"Then get going, harlot. I want to ram my cockstand into that wet little tulip you got betwixt your legs. Don't think I can't feel your juices running.\"\n\nStokes freed her breast, withdrew his hand from under her dress, spun her around with unnerving strength, and landed a sharp smack on her rear. Honor yelped and started across the street, acutely aware of her stinging bottom and how much worse it would have been if two layers of material had not protected her. This one warranted care, of that she was sure, although she had not suspected so when he was slobbering over her powered cleavage in the saloon.\n\nHurrying her step, the dancer strode up a path between houses toward a small building behind the house on the left. And although the woodshed's east-facing entrance provided shelter from most of the wind, it would still be cold inside. But Honor knew that not much warmed a room faster than sex.\n\nHe won't be dipping his wick in me, she remembered as she entered the shed. Gus would arrive before that could happen. Just using her mouth on the mark would ensure he remained distracted enough that he would not notice Gus.\n\n\"In here,\" she told the bulky shadow behind her, and then she was falling, pain radiating from her derriere where his hand had hit her with another force to drive her to hands and knees.\n\n\"What are you...?\" she began to ask, but the question died on her lips as he pushed her silk skirt and lace underskirt up to her waist, her exposed bottom breaking out in goose-pimples as a shudder ran through her frame.\n\n\"A little skinnier than I might like,\" the man grumbled while slamming what felt like at least two fingers deep inside of her, eliciting a gasp then a moan. \"I mean with those teats, I'd thought you'd have a bit more meat on your bones.\"\n\n\"You didn't pay for a rough ride,\" the redheaded woman snapped, climbing to her feet and pulling away from his invading digits. \"You paid for a dickie lick, nothing more.\"\n\n\"I paid for everything, whore,\" Stokes growled, and she could feel his glare even though the shed was too dark to make out his features. \"But if you want to start out with your mouth, then by all means, go ahead.\"\n\n\"Let me light the lamp first,\" Honor said, moving toward the pole on which it hung. Relief that his groping had ended, at least for the moment, mixed with worry that Gus might wait too long.\n\n\"Why? Won't the folks in the house see the light?\"\n\n\"The house to the north can't see it, and the owner of the southern house knows I use the shed,\" the dancer explained. She did not add that the owner of the southern house, a widower named Tanner, enjoyed Honor's charms at least twice a month in return for the use of the shed, sometimes more often if she and Gus needed other services from the man, who worked as an undertaker.\n\nThe lamp's light spread through the small space, and Honor turned toward Stokes, a broad smile on her face. She needed all his attention focused on her, so with trembling fingers, this time mostly on account of the cold, she unlaced the front of her green satin dress and let it fall off her shoulders and breasts. Stokes leered at her, his small, dark, porcine eyes fixed on her bared breasts.\n\nThe smile still on her full lips, the saloon girl ran her hands up her silvery corset, starting where her dress had settled around her waist and moving to the spill of her breasts over the supporting wire. The corset had been a gift from Gus, something to give her bosom the lift it needed for maxim cleavage while allowing men access to her smooth, rounded breasts and thick, firm nipples. It was beautiful, and Gust told her it had come all the way from Paris. So, she endured the discomfort of wearing it because Gus had bought it for her, and because her patrons seemed to enjoy what it did for her figure.\n\n\"God, those teats make up for the skinny ass and hips,\" Stokes told her as his cold fingers squeezed her pale flesh. The young woman nodded, her fingers running through his greasy hair. The moment his lips dropped to one firm nipple, she forced out an exaggerated moan. She did not believe her hips and derriere to be thin\u2014she knew many men, Gus and the undertaker Tanner among them, who she thought would agree with her. But she did not tell Stokes that. Instead, she increased the volume of her not entirely faked vocalizations and dropped her hands to the fly of his trousers.\n\n\"This feels ready to suck,\" she murmured in her ear as her fingers traced the outline of his rigid shaft.\n\n\"Ready for your whore lips,\" he grunted, nibbling on her tender flesh with more force than would have been her choice.\n\nA low, throaty moan escaped Honor's red-painted lips, the authenticity of the noise taking her by surprise. Actually entertaining the thought of letting this man ride her, she grasped the girth of his swollen manhood through his pants. With an unexpected flutter of lust in her belly, she imagined what his meaty organ would feel like violating her soaked loins.\n\nStick to the plan, whore, she chastised herself. Gus will see to your pathetic needs.\n\nBut while Gus's shaft stood long and proud and had always pleased her, she knew it could not compare in thickness to what she felt beneath Stokes's pants. On the other hand, Gus might be angry if she went off script and let the big man couple with her. And it had been Gus who had pulled her from the gutter in San Francisco a few months after her brother's death. She owed him her loyalty, and her life.\n\n\"Let down your trousers,\" she instructed Stokes, pushing his face off her now slick and heaving chest.\n\nThe portly man grunted and fumbled at the suspenders that held up his pants. While he did so, Honor dropped to her knees, fingers deftly unbuttoning Stokes' fly. Within seconds, she pulled his substantial shaft through the opening, her small hand stroking the veiny length as its owner gave up trying to undo his suspenders.\n\nAfter moistening her lips, the dancer slid them over the purple, bulbous head of the circumcised penis. She had been with other circumcised men, but they had all been Jews, at least she assumed that was the case, and Stokes did not look Jewish to her. But those thoughts were gone in an instant as the man grasped her hair and forced half his length into her mouth. Eyes closed, Honor did her best to ignore the slightly sour taste and fetid smell of the man, her tongue moving against the hot, fleshy underside of his penis as the man pumped it between her lips.\n\n\"Oh, now that's sure sweet, my pretty little whore,\" Stokes groaned, his hold on her head slackening and his thrusting ceasing. \"You know what you're doing, alright.\"\n\nHonor, her blue eyes fixed on the man's darker ones, nodded and slid her lips down until the head gagged her. The man groaned again as the dancer ignored her own response and forced herself to take more of him.\n\n\"Holy fuck,\" Stokes moaned, and the redhead felt his knees wobble. She had him, sure he would not notice Gus coming up behind him.\n\nBut where was that man? If he waited too much longer, she would have to let the mark finish in her mouth. Not that it would be a problem for her\u2014she sucked men to completion often enough, and she always swallowed to avoid a mess\u2014but she knew Gus did not like her to do so with these men. He wanted them focused on her, not on anything around them, and that meant keeping them on edge so they would be fully distracted when her partner arrived.\n\n\"Play with your cunny while you suck me, pretty little whore,\" Stokes said after maybe a minute of silence, eliciting a groan and a shiver from Honor. She had already considered doing what the fat man just told her to do but rejected it because she did not think Gus would approve. Despite her misgivings, the big man's words shaped her actions. She dropped her right hand off his manhood, slipped it under her skirts, and found her slick labia. The wetness cooled her index and middle fingers as she ran them up and down her slit, but the inner core of her heated.\n\nQuivers, first deep inside but then traveling up her abdomen, distracted her from her task, and the man began to thrust in and out of her mouth again. Honor groaned, an animalistic, guttural sound escaping around his thick, veined shaft as it violated her willing mouth over and over, all while her probing digits found and attacked her throbbing clitoris. All sense of time, of cold, of place, of the plan, slipped away, and her everything sunk to the twinges deep inside her sex, the jolts of pleasure coursing through her loins, and the relentless thrusting of Stokes's erection down her throat.\n\nThe dancer's left hand, which had been against the man's thigh as insurance against him becoming too eager in his use of her mouth, forgot its job and sought her own breasts, squeezing the cool flesh, pinching and twisting almost painfully hard nipples, driving herself closer and closer to ecstasy, losing herself in the intoxicating mix of pleasure and pain, of submission and use.\n\nA loud grunt from her patron pulled her out of her own growing bliss enough for her to focus on his actions. Thick fingers grasped her hair painfully tight, moving her head so her lips slid up and down the first couple of inches of his length in a driving rhythm. Soon, his penis twitched and pulsated. Knowing the signs, Honor readied herself while still torturing the cold, aching nubs on her breasts and rubbing the warm, needful one between her legs.\n\nWithin seconds, he flooded her mouth with hot, thick fluid, the accustomed taste tinged with the bitterness she associated with hard-living men. Honor closed her eyes, sucking his shaft and swallowing. But at that same moment, her own climax took her. Vibrations in her most sensitive spot turned to spasms deep inside her vagina then became shudders that ran through her frame, mixing with shivers from the suddenly unbearable cold. Without conscious thought, she arched her back, riding the rush of pleasure, not thinking about the still ejaculating penis even as it slipped out of her lips.\n\nWarm, thick fluid splashed across her upper lip and nose, against her chin, and down her neck. Honor's left hand abandoned her breasts and sought Stokes's manhood, but something pushed it away. Opening her eyes, she saw Stokes towering over her, stroking his thick shaft. Disdain mixed with lust on his jowly face as he squirted three more times, all on her breasts.\n\n\"Clean me,\" he growled, pulling her face toward the glistening head of his penis, which still oozed semen.\n\nHonor pushed her tongue between her lips, ready to do as commanded, when a shadow appeared behind Stokes and a sharp thwack filled the shed. The large man's eyes bulged and rolled up as he fell forward. The dancer put out her hands to stop him from crushing her, even though she knew such an attempt would be futile, given the mark's bulk. But before his body could fall on her, it went spinning to the side, landing in a heap with a thud that shook the ground. Gus, face red, eyes burning with anger, stood above her, fingers gripping an iron poker with enough force to turn them white.\n\n\"What are you doing, Honor?\" he scowled, gray eyes boring into her.\n\n\"Distracting him,\" she whispered, trying her best to ignore the rapidly cooling semen sliding down her face, neck, and bosom and hoping Gus would too. \"I thought you'd be here sooner...\"\n\n\"Don't lie, whore,\" her husband and benefactor spat, and for a terrible, long heartbeat, she thought he would raise the poker and strike her. \"I saw you pleasure yourself like a wanton bitch in heat.\"\n\n\"Please, Gus...\"\n\n\"Just shut the up and find his wallet.\"\n\nThe redhead climbed to her feet, tears mixing with the fat man's spunk on her face. She started to pull up her dress, but Gus's cold glare made her leave it be as she moved toward the prone Stokes. A rivulet of blood trickled from his head where Gus had struck him, but that man lay still. Honor tried her best not to touch him as she felt for his wallet, and her fingers found it just as Stokes opened his eyes.\n\n\"Run, you fucking cunt,\" he rasped, his body rolling away with surprising speed.\n\nHonor leaped up and turned. Gus, wide-eyed, stared past her. Green satin dress still bunched around her waist, the young woman pushed past her partner. A gunshot, impossibly loud, reverberated in the tiny woodshed, and sudden pain in her ears caused her to stumble. She looked behind her and saw Gus fall back against a pile of logs, red blooming around the hole in his chest. Then the barrel of the gun caught her eye as it swung toward her. Hatred and pain etched on his fleshy face, their would-be victim glared at her. Honor screamed, a feral noise that tore out of her throat with the force of banshee's wail yet seemed far away, drowned out by the incessant ringing in her ears.\n\nDrawing in a shuddering breath, the frightened girl darted toward the door. Another boom shook her at the same instant that a sharp, fiery agony engulfed her back and chest. Dropping to her knees, Honor struggled to draw breath, the wet, gurgling sound bubbling up out of her throat felt as much as heard. In the moment before darkness took her, she glanced down and saw the gaping wound where seconds before her left breast had been.\n\nRoseville, California \n\nOctober 12, 2019\n\n\"Come on, Jer,\" Emily pouted, her large brown eyes almost but not quite hiding the calculated nature of both her words and her expression.\n\n\"You know I don't like that shit,\" Jeremy grumbled, waving his hand in the direction of his TV where one of his ex's favorite ghost hunting shows played.\n\n\"But it'd be fun. And Mandy and I don't want to go by ourselves...\"\n\n\"That's the real issue, isn't it Em? You're afraid your car won't make it over the mountains. You just want me as a driver.\"\n\n\"No, we want you to go with us. In case we get scared.\"\n\nThat's bullshit, Jeremy warned himself, but he knew he would fall for it anyway. Emily always had a way of getting him to do exactly what she wanted, even though a few years had passed since they last dated; moreover, she had made it quite clear they would not be doing so in the future.\n\nJeremy met Emily in grade school, and he had loved the fair complected, sandy-haired girl for almost all that time. Yet, it was not until senior prom, after her intended date flaked, that they started dating. That night, she became his first, but he suspected she could not say the same of him. But such trivialities did not matter. He was ecstatic that she was finally his. But their relationship only lasted until they left for their respective colleges. She informed him she did not want to be tied down, breaking his heart for the first time.\n\nThe second time she broke his heart was half-way through their junior year of college. They both returned home for the summer after their sophomore years, and after a somewhat drunken hookup, a new relationship bloomed, this one filled with sexual exploits that sometimes pushed his limits but left him exhilarated and in love with Emily again. Then he visited her over Thanksgiving break, the two of them electing to spend the holiday together rather than going home. And it all went well until he suggested a threesome with a friend of hers who had also stayed over the holiday. Her angry response, and the subsequent termination of their relationship, baffled him at first. Several times over the prior summer, they discussed the fantasy of involving another girl, so he did not expect such an extreme result from trying to make that fantasy reality. Once he learned that the friend in question had slept with Emily's most recent ex both before and after they had been together, he thought he understood. But it still hurt.\n\nAnd that pain had rekindled when she moved back to the Sacramento area and into his post-college life. Emily graciously forgave him, but when he asked her out, she polity declined. And she had continued to decline every suggestion he made that they try again, until after two years he quit suggesting it. In the six months or so since then, their friendship grew closer and closer, to the point he even watched her stupid paranormal shows with her. But he wanted to the draw the line at going over the Sierras to Virginia City, Nevada for a Halloween ghost hunting workshop in the old mining town, an 'adventure' that would cost each of them $300, not counting travel costs.\n\n\"It's a lot of money to learn how to find something that doesn't even exist,\" he sighed, knowing he would give in eventually and hating himself for it.",
        "\"Ghosts do exist, Jer. Besides, it'll be fun even if we don't experience anything paranormal.\"\n\n\"It'll be cold and miserable, and we'll be stuck with a bunch of ghost hunting weirdos...\"\n\n\"I'll give you a blowie if you take us. In fact, I'll give you one now and one afterward.\"\n\nThe rest of what Jeremy planned to say left his mind in a rush as her offer infused every corner of his brain with excited thoughts and filled his penis with enough blood to bring it to half-mast.\n\n\"You're gonna swallow a fly if you stand there gaping at me like that,\" Emily giggled a few seconds later when he failed to speak again.\n\n\"Are you serious?\" he asked, finally finding his voice.\n\n\"Yep.\"\n\n\"Fuck...\"\n\n\"No, blowjob only. Well, blowjobs, that is.\"\n\n\"Fuck...\"<br >\n\n\"Jer...\"\n\n\"In the shower?\"\n\nJeremy watched his ex's eyes, and for a moment he thought she might refuse. But with a nod and a grin, she accepted. And that proved to him how serious she was. When they had been together, she only allowed him to ejaculate on her face when they were in the shower, and agreeing to it now meant she also agreed to let him give her a facial. <br >\n\n\"Fuck...\" he repeated a third time, grabbing his ex's hand and pulling her toward the bathroom.\n\n\"I think the word you want is 'suck',\" Emily snickered, offering no resistance.\n\n* * *\n\n\"No touching below the waist... well, no touching me below my waist,\" Emily informed him as she unhooked her bra and let it fall to the tile floor, grabbing her small but shapely breast in her hands and squeezing them. \"But these are fair game.\"\n\nJeremy nodded, knowing he had a huge, stupid grin on his face and not caring. Emily's firm, sensitive breasts were a little bit less than a handful, but he loved them. Loved the small, tan areolas and firm, little nipples; loved the light freckles that covered the inner sides and the valley between them; loved the way goosebumps rose on her smooth skin when he nibbled her firm little nubs; loved the moans that escaped her throat when licked and sucked and took as much of the rounded mass into his mouth as he could. He loved everything about her breasts, and he told her so as he brought his mouth to one.\n\n\"Yeah, I know you do,\" the girl sighed, running her hands through his short, brown hair while he pulled at one rigid nipple with his teeth. \"And you love my mouth too.\"\n\n\"Fuck yeah,\" he agreed, moving his lips to the other tasty little nub.\n\n\"So, we should start the shower,\" Emily suggested, and he thought he heard laughter in her voice.\n\nJeremy reached past the shower curtain and turned the faucet to warm, his eyes never leaving Emily's, which sparkled with mischief and maybe, just maybe, lust. Taking a chance, the young man leaned in to kiss her, but a small palm stopped him.\n\n\"None of that, Jer. We wouldn't want you to get the wrong idea. This is, um, casual only.\"\n\n\"Of course,\" Jeremy mumbled, warmth spreading through his cheeks at his stupidity.\n\nEmily smiled, patted his arm, and slipped her panties off. Jeremy noted that her bush was neatly trimmed, not shaved as it had been before, then her back was to him as she looked into the shower.\n\n\"I'll need two towels,\" she said, glancing over her shoulder. \"One to kneel on and one for after.\"\n\n\"Um, sure. I'll be right back.\"\n\n\"And you'll need to take your clothes off too,\" Jeremy's ex grinned, her eyes locked on where his erection pushed against his jeans.\n\nHe did not bother to reply as he rushed from the bathroom to the linen closet at the end of the short hallway. When he returned with the towels, Emily was in the shower. Jeremy tossed the towels over the shower rod and stripped off his clothes as fast as he could, almost falling twice in the process.\n\n\"Nice of you to finally join me,\" Emily said when he climbed in. Her shoulder-length hair, a few shades darker when wet than dry, clung to her cute, smiling face. Jeremy wanted nothing more than to crush his former girlfriend to him and kiss her inviting lips. But instead, he pulled one of the towels off the curtain rod and handed it to her.\n\n\"Right to business then,\" the petite young woman chuckled. \"But we need to change spots. I can't do this with the water beating down on me the whole time.\n\nJeremy nodded, not trusting himself to speak. For a moment, they were face to face, pressed up against each other as they passed, and the urge to kiss her grew almost too much to bear. But then it was over, and he stood in front of her, the hot water pounding his back and shoulders as she placed the folded towel on the tub floor.\n\n\"This looks as nice as always,\" she broke the silence, a small, soft hand stroking his hard shaft. \"And this looks good too. You've added some muscle.\"\n\nEmily's lips on his chest ignited his skin and his passion. Grabbing her hair, he pulled her head back and leaned down, lips mashing against hers. For a second, then two, she stood rigid, tense, a hand on his chest. But in an instant, everything about her softened, and she gave herself to his arms while her tongue pushed past his lips.\n\n\"You're a bad boy, Jer,\" she told him when the kiss broke, but he saw no reproach in her eyes. \"But that doesn't change anything. This is still casual.\"\n\n\"Sure,\" Jeremy nodded, but he did not think his tone convinced her any more than it did him.\n\nWith a small shake of her head, Emily kissed his chest again, which was just at the right height for her, as she stood nearly a foot shorter than his six-foot frame. Then she kissed his abdomen before crouching and licking her way over his belly button and down to his pubic hair.\n\n\"You ever think you'd see me like this again?\" she asked him, her brown eyes locked on his gray ones.\n\n\"No.\"\n\n\"That makes two of us,\" Emily giggled, settling onto her knees while never breaking eye contact.\n\n\"More sucking and less talking,\" Jeremy suggested, the sight of Emily on her knees with his manhood in hand bolstering his confidence.\n\n\"Rude,\" the girl said, mock horror on her face but that mischievous look still in her eyes.\n\n\"Fuck, are you ever going to stop talking...\"\n\nSoft lips, wet and warm, engulfed the tip of Jeremy's shaft, and the rest of his words turned to a gasp followed by a low groan. Emily never disappointed when it came to giving head, and it felt like she might have even been putting a little something extra in it this time. His ex's tongue swirled around the sensitive glans of his penis, then wiggled against the underside of his shaft as she slid her lips about halfway down his length.\n\n\"So fucking good,\" he moaned, fingers laced in Emily's wet hair. \"Better than I rememb... oh, fuck!\"\n\nThe sandy-haired girl, eyes unwavering, forced herself to take in more of him. For a moment that seemed an eternity, he felt the tip of his erection pushing against the back of her throat. But before it could go in, Emily gagged around him, backing off so that only the head was inside her warm mouth. Despite the setback, the kneeling girl never stopped sucking.\n\n\"Keep that up, and I'm going to be coming in no time,\" Jeremy said, not sure whether he wanted her to continue or to slow down.\n\nEmily winked and maybe smiled around his thickness. Jeremy wondered what that meant, but his ex did not let him think about it too long. By the time he drew another breath, his erection again pushed against the back of her throat. This time, she did not gag as soon. And when she pulled back, it was maybe an inch at most.\n\n\"Are you trying to deepthroat?\" he managed to ask through quick, short breaths.\n\nThe girl shook her head 'no', sending maddening and exhilarating tingles through his sensitive flesh. And then with another wink, she gagged herself on him a third time. That was too much for Jeremy. Tightening his fingers in her hair, he pumped in and out of her mouth a few times. And while he did so, Emily's lips applied suction and her tongue worked its magic.\n\n\"I'm going to come,\" Jeremy rasped seconds later.\n\nHis ex heeded his warning, letting his manhood fall from her lips as she sat back on her heels, staring up at him with an expression he thought indicated anticipation. Jeremy sighed, stroked his erection, and aimed at Emily's cute, sexy, grinning face. And that grin remained, even after he shot several spurts of semen onto her forehead, nose, lips, and chin.\n\nVirginia City, Nevada\n\nOctober 31, 2019 \n\n\"It's as cold as Dante's lower rings of hell our here,\" Mandy grumbled, pulling her coat tighter around her.\n\n\"It's invigorating,\" Emily laughed, bundled up in a long, dark blue coat that fell almost to her knees.\n\n\"I agree with Mandy,\" Jeremy said, noting that his ex seemed almost beside herself with excitement.\n\n\"Just think about the hot shower you'll get when we're back at the hotel later,\" Emily said in a low voice, although he thought it was still loud enough for Mandy to hear.\n\nJeremy grunted and nodded, although in truth, he did not know what to expect. They had all three decided to share a hotel room in Reno rather than drive back over the Sierras after midnight. But even though Mandy would be there with them, Emily had kept up the hints that his second reward for agreeing to this trip would be coming that night. Part of him wondered if that reward might be better than he ever dreamed, wondered if maybe Mandy would join in with them. But most of him believed that Emily was just being a tease and that the second blowjob would not happen until after they returned home.\n\n\"Yeah, that's what I could use right about now,\" Mandy said, pulling a stocking cap over her short, spikey, purple hair.\n\n\"God, you're both crybabies,\" Emily scoffed. \"The saloon is the next door down. It'll be warm inside.\"\n\nNeither Jeremy nor Mandy answered, although Jeremy saw Mandy roll her eyes.\n\n\"I thought you wanted to do this,\" he whispered to the taller girl after Emily entered the saloon.\n\n\"Not when it's so fucking cold,\" Mandy snarled. \"Only Emily would think this was a good idea.\"\n\nJeremy nodded, basking in the comparative warmth of the saloon as they followed Emily to the back of the building then up a flight of stairs. But they were both proven wrong when they walked into what looked like a tiny chapel. At least twenty other people, all engulfed in heavy coats, sat in the wooden pews. Emily, Mandy, and Jeremy squeezed into the only one that looked like it had enough room for three more people.\n\n\"That should be everyone,\" a thin woman said from the front of the chapel. \"Let's get started. My name is Celina Holcomb, and I'm the operator of Dark Spirits.\"\n\nAround fifty and on the taller side, Holcomb let her words linger as she looked at each person in the room. When her gaze settled on Jeremy, he shivered under its intensity. This woman was a true believer, of that he was sure.\n\n\"Tonight is a very special night. On All Hallows' Eve, the barriers between our world and the spirit realm lower, allowing the souls of the departed to return to the land of the living, to manifest more fully than at any other time of the year. And so, for those of you brave enough to accompany us tonight on this great adventure, this may be your best chance to interact with those who have passed on. Virginia City is full of the restless specters, and tonight is their night!\"\n\nFor several seconds, no one in the room said anything. But just as the silence threatened to become overwhelming, a younger, thicker version of their host moved beside Holcomb and spoke.\n\n\"Mother has a flair for the dramatic,\" the younger woman laughed, and Jeremy felt the tenseness drain from the room. \"Although, it is true that Virginia City is one of the most haunted towns in the world. And you'll have your opportunity to hunt some of those haunts tonight. But first, we're going to go on a tour of the sites you'll be investigating later. I'm Tabitha Holcomb, and I'll be your guide.\"\n\n\"When you're done with the tour, you'll all return here. We'll break you up into pairs, give you the equipment you need, and show you how to use it,\" Celina Holcomb took up when her daughter finished. \"After that, each pair will return to one of the haunted locations that Tabitha is about to show you.\"\n\n* * *\n\nThrough a back exit on the second story of the saloon, their guide led them out onto B Street, which was just up the hill from C street, the main street of the old mining town. The first six locations on the tour were all on B Street, and the walking was easy. But the seventh stop required them to climb a steep hill past Piper's Opera House and up Union Street (a glorified gravel path) toward A Street. The climb turned out to be more challenging than many of the want-to-be ghost hunters seemed to be expecting. Several members of the group were breathing hard by the time they reached the intersection of Union Street and A Street.\n\n\"We'll take a short rest here, then continue up that alley beside the Cobb mansion. Our next destination is just on the other side of Howard Street.\"\n\n\"We have to go up more?\" a large woman asked, her face red and damp.\n\n\"And through that dark alley?\" the man with her added, giving her a supporting hand as she tried to catch her breath.\n\n\"We would have to walk down the street and then back up the next street if we did not go through the alley,\" Tabitha smiled. \"Just follow my light, and we'll all be fine.\"\n\n\"At least I'm warmer now,\" Mandy whispered to Emily and Jeremy.\n\nEmily nodded, but Jeremy said nothing as he stared up the sloping alleyway. It did not appear to be as far a walk as it had been from B Street to A Street. But it looked just as steep, and he was already sweating underneath the layers of his sweatshirt, vest, and coat. Hypothermia, something that had not even entered his mind an hour earlier, loomed as a distinct possibility.\n\n\"I think we can press on now,\" the guide announced maybe a couple of minutes later. A low grumbling arose among the group, but everyone followed her up the alley, led by a taller than average young woman who Jeremy had not noticed before. Long dark hair hung straight down her back, almost falling to her well-rounded bottom, which a tight pair of black yoga pants clung to like a second skin. A fitted black coat and black shearling boots completed her outfit.\n\nHow did I miss her? Jeremy asked himself, pondering whether the mystery woman's frontside was as voluptuous as her backside.\n\n\"Ok, just across Howard Street now,\" Tabitha called down to the strung-out group as she opened a wooden gate at the end of the alley and stepped onto a paved street.\n\n\"You're effing kidding me,\" the portly woman complained from where she and her partner brought of the rear, about halfway up the slope.\n\n\"Just a bit further,\" the guide assured them. \"Well, the actual site is a little up the hill behind that yellow house, but we're not going up that far, since there's no a path.\"\n\n\"Thank god,\" Mandy sighed, following Emily through the gate. Jeremy agreed silently, looking back at the stragglers and hoping he did not have to give the fat woman mouth-to-mouth if she collapsed.\n\n\"Okay everyone, gather around me,\" Tabitha urged them. The tour guide stood in front of a two-car garage right off the street. Behind it and to the left was the small yellow house. Jeremy wondered what could have happened here that would be important enough to force a bunch of people, who all paid good money to be here, to make a death march up several hundred feet of slope. But then the dark-haired woman turned toward him, and his discontent melted away.\n\nShe might not have been the prettiest woman he had ever seen, but at the moment, he could not think of who would take that honor. Her straight hair, which he now saw was nearly as black as her clothes, framed a perfectly symmetrical face. Full, lush lips, dark red against white flesh, pouted slightly as her periwinkle blue eyes met his. Jeremy forgot to breathe for a moment as he took all of her in, from her smooth forehead above those startling blue eyes to her thin, turned-up nose and high cheekbones, past plump lips and a fine, slightly pointed chin, down a graceful, pale neck, and finally to the expanse of her bosom, which stood prominent despite the tight, black coat that covered it.\n\n\"Who the fuck is that?\" Emily hissed in his ear, and he saw her gaze fixed on the same young woman.\n\n\"Some bimbo,\" Mandy shrugged. \"Who gives a shit?\"\n\n\"Whatever,\" Emily replied, but her eyes met Jeremy's for a moment, and he thought he saw anger and maybe jealousy in them. Had she caught him staring at the woman? And what would that matter if she did? Emily had made it clear to him, both before and after the blowjob in the shower, that whatever they might do together was just casual, at least to her.\n\n\"Everyone here?\" Tabitha asked, and Jeremy forced his attention back to the tour guide. \"Good. Before this garage was here, a path ran between the yellow house you see and a house beside it that is no longer there. Behind the yellow house, there used to be a woodshed. That woodshed was the site of a grisly double murder in September of 1869, one hundred and fifty years ago. A dance hall girl named Honor Quinn, an Irish immigrant, was caught by her husband with a patron of the saloon where she worked. Now, Honor was not just a dancing girl. She was a shady lady, a prostitute, and the saloon patron was her customer. His name was Carlton Stokes, and he had been a major in the Army of Northern Virginia during the Civil War. Major Stokes carried a revolver, which Honor and her husband, a gambler and pimp named August Stanton, learned with tragic results. According to Stokes, Honor lured him up to the woodshed, and then Stanton attacked him from behind, hitting him in the head with an iron fireplace poker, after which the couple attempted to rob him. But Stokes recovered faster than they expected, and he shot them both.\"\n\nTabitha paused for a moment, her eyes traveling around the group. Jeremy followed her gaze and noted that everyone appeared anxious for the tour guide to continue. But no one seemed as interested in the tale as the curvaceous mystery woman in black did. Her solitary focus seemed to be on Tabitha Holcomb, who clearly enjoyed the attention she was receiving. After a few more seconds of silence, the guide continued her story.\n\n\"Their deaths caused a minor scandal because Edgar Tanner, the undertaker who owned the house and the woodshed, admitted that Honor used it for customers when she didn't want to pay the saloon owner his share, or maybe when she didn't want to pay her pimp husband his share. He denied any knowledge that Stanton and Honor might have used the woodshed to rob her customers, but Stokes pushed the Sheriff to investigate the undertaker anyway. And who knows what might have happened if Stokes had not succumbed to his head injury about a week after the fight. The sheriff never pursued an investigation against Tanner, but his successor as sheriff did note a few years later that the number of disappearances dipped slightly in the months following the deaths of Honor Quinn and August Stanton. So, we may never know if Stanton and Honor were running a scam, or if Stanton, in a fit of anger and jealousy, attacked Honor and her customer that night in 1869. But perhaps tonight is the night we can find out. Although the woodshed is long gone, this house is still one of the most active places in all of Virginia City. Over the years, many who have lived here have seen a woman with long, curly, red hair who is dressed in a risqu\u00e9 green dress, one that would be in keeping with what a saloon dancer and prostitute may have worn.\"\n\nThe tour guide paused as members of the group murmured to those around them. She again looked at all of them in turn, then continued.\n\n\"But in addition to the female apparition, who we believe is Honor Quinn, some people have seen a tall, stern-faced man who wanders the yard or lurks just outside where the old woodshed would have been,\" their tour guide continued. \"We believe that man is August Stanton. Many past owners or tenants of the the house have felt blows to their head when they are out in the yard, and sometimes people have smelled cigar smoke in the middle of the open air.\"",
        "\"How do you know the ghost woman is the prostitute chick and not some other lady who died in the house?\" the large woman's companion asked.<br >\n\n\"Well, her dress is one clue, and the hair is another. Honor reportedly had curly, red hair, and she was considered to be a real beauty. But since this is an adult-only tour, I can tell you the rest of the evidence that supports the idea that the apparition is Honor. Men who have lived in the house have seen the redheaded woman naked or wearing a corset that leaves her breasts bare. And many of those same men have sworn that something, or someone, touched their genitals while they slept.\"\n\nMandy, who stood a little ahead of Terry and Emily, looked back at them, shook her head, and rolled her eyes. Jeremy stifled a laugh, agreeing with Mandy that the story had taken a ludicrous turn. But when he glanced at Emily, she wore her annoyed look. Thankfully it seemed focused on Mandy, not him. Jeremy shrugged to the taller girl, who again rolled her eyes.\n\n\"Both of you are children,\" Emily whispered, arms crossed over her chest.\n\n* * *\n\n\"Welcome back!\" Celina Holcomb beamed as they all filed into the chapel above the saloon. \"I hope you enjoyed the tour. Now we need to divide up for your personal investigations. There is an even number of you all, so everyone will have a partner. But not all of you came in groups of even sizes, so we will need to do some mixing and matching.\"\n\n\"I'm going with one of you two,\" Mandy whispered to Jeremy and Emily. \"I don't want to be stuck with some rando dude.\"\n\n\"It could be a woman,\" Jeremy pointed out in a low voice, thinking of the black-haired woman, who appeared to be by herself.\n\n\"I agree with Mandy,\" Emily said after a pause. \"I don't want to be with a stranger either.\"\n\n\"Fine,\" Jeremy sighed, raising his hand. \"Ms. Holcomb? I volunteer to team up with someone.\"\n\n\"Excellent, dear,\" the older woman smiled. \"But please, call me Celine. And I think I have the perfect partner for a young man such as yourself. Hannah, you don't have a partner, do you?\"\n\n\"No, I don't,\" the raven-haired woman said, her cool eyes appraising Jeremy.\n\n\"Perfect, then. Well, as long as you're brave enough, um...?\"\n\n\"Jeremy,\" Mandy supplied, amusement infusing her voice.\n\n\"As long as you're brave enough, Jeremy. Hannah here has asked to investigate the Honor Quinn haunting, and men have reported being hit on the head by dear Honor's nefarious husband.\"\n\n\"That's fine with me,\" Jeremy shrugged, glancing at Mandy and Emily. Mandy looked like she was about to burst out laughing. Emily, on the other hand, scowled at the floor, and nothing Jeremy could do would make her meet his eyes.\n\n* * *\n\n\"It's nice to meet you, Jeremy,\" Hannah said, taking his hand and shaking it. Her voice was deeper than he expected, yet melodious and feminine despite a distinct huskiness.\n\nAt first, the coolness of her soft flesh surprised him, but then he remembered she had not been wearing gloves on the tour. And the chill did not last long anyway. As she drew her hand away, a warm tingle spread up his fingers.\n\n\"Nice to meet you too, Hannah,\" he smiled, trying to keep his eyes on hers instead of dropping to her chest, which seemed even more prominent up close.\n\n\"It's nice to be warm again for a bit,\" Hannah said, sliding off her black coat and revealing a gray, long-sleeved knit shirt that followed every curve of her torso almost as tightly as the black yoga pants enclosed her buttocks, hips, and long, toned legs.\n\nJeremy continued to do his best not to stare at the light fabric clinging to Hannah's ample bosom, but the presence of glittery green writing across it doomed him to failure. And it took him longer than he suspected it should have to read what was written there, partly because her shape distorted some of the letters and partly because that shape kept distracting him.\n\n\"21<sup>st</sup> Century Witch,\" Hanna said, and he raised his eyes to meet sparkling blue ones that held a hint of what might have been amusement.\n\n\"Oh, it's your costume,\" he grinned, relieved that she must have intended people to read the words stretched across her breasts.\n\n\"Something like that,\" she nodded. \"Has anyone ever told you that you have sexy eyes? I love gray eyes on a man.\"\n\nA crash caused both Hannah and Jeremy to look back at the row of benches behind them. A red-faced Emily met their gaze for a moment before crouching down to retrieve something she must have dropped. But Jeremy could have sworn he saw fury, and maybe something else, on his ex's delicate features before her face was hidden from view.\n\n* * *\n\n\"Do you really believe all this, um, stuff?\" Jeremy asked Hannah as they exited onto B Street.\n\n\"Yeah... don't you?\"\n\n\"Not really. I just came with my friends.\"\n\n\"You mean skeptic girl and jealous girl,\" Hanna snorted, and he found the sound beautiful despite the tone of derision.\n\n\"I guess Mandy is a skeptic, like me,\" Jeremy agreed. \"But why call Emily 'jealous girl'?\"\n\n\"You mean the little one with the sandy blonde hair?\"\n\n\"Yeah.\"\n\n\"Because she's jealous that we're a team,\" Hannah shrugged, and Jeremy diverted his eyes from the way her bosom rose and fell with the movement.\n\n\"She's my ex,\" he told his companion, not elaborating further.\n\n\"Ah, and you dumped her. That makes sense.\"\n\n\"Um, not so much. She dumped me.\"\n\n\"Oh. I see. So you're her insurance guy.\"\n\n\"Insurance guy?\"\n\n\"Some girls like having a guy around they can fall back on if they need to, usually someone who likes them a lot more than they like him. It's their insurance against being alone.\"\n\n\"I don't think that's it,\" Jeremy said, although he pondered whether it might explain the look on Emily's face after she dropped the piece of equipment.\n\n\"Maybe not.\"\n\n\"Hey, I have an idea,\" the young man said, hoping to change the subject. \"My truck's parked just down the hill. We can get it and drive up to Howard Street.\"\n\n\"Sure,\" the raven-haired woman grinned, her voice almost a purr. \"I wouldn't mind a ride with you.\"\n\n* * *\n\n\"I'm not sure of the point of this stupid temperature gun,\" Jeremy complained. \"All it shows is that everything in this fucking house is fucking cold.\"\n\n\"Even me?\" Hannah asked, holding her flashlight chest-high and pointing it up at her face.\n\n\"A singular warm spot,\" he admitted. \"Couldn't they have had the heat turned on for tonight?\"\n\n\"It's a lot warmer in here than outside. And I think it's cool the owners gave us permission to be in here. Celina said they rarely do that. I guess they still hope to rent the place out again.\"\n\n\"Maybe they could advertise it to frat boys. I'm sure they'd be interested in a house with a naked, sexed-up ghost whore.\"\n\n\"That's not very respectful,\" Hannah chided him, her expression unreadable in the dim light.\n\n\"She's the one touching men in their private parts.\"\n\n\"Maybe it's all she knew of men in life, and now it's the only way she can relate to them or communicate with them.\"\n\n\"Maybe,\" Jeremy shrugged, not caring; he just wanted to keep the conversation with Hannah going. \"What now?\"\n\n\"Do you want to see if we can get some EVPs?\"\n\n\"I guess. It's better than standing here doing nothing.\"\n\n\"Okay. You ask her questions.\"\n\n\"Why me?\"\n\n\"You're a guy.\"\n\n\"Fine. Hey, Honor. What kind of name is that for a whore?\"\n\n\"Be more respectful, Jeremy,\" Hanna said, and this time her voice held an edge that had not been there before.\n\n\"Ok. Honor, if you are there, please say something to us.\"\n\nSeveral seconds of silence passed, during which Jeremy realized he would much rather be investigating the living\u2014and real\u2014Hanna instead of some non-existent ghost.\n\n\"My new friend Hannah here tells me some women keep a guy as an insurance policy. Was your Husband August your insurance and you brought men up here to audition to replace him? Or were all the men you fu..,., um, screwed, the insurance policies?\"\n\n\"Funny,\" Hannah grumbled, and Jeremy could have sworn he heard the buxom young woman roll her eyes.\n\n\"And what about the lovely Hannah? Do you think she has an insurance guy, or do you think she's shopping for one?\"\n\n\"I've never needed one,\" the black-haired girl said. \"An insurance guy, I mean.\"\n\n\"Well, I can believe that.\"<br >\n\n\"Why? Because I have big boobs?\"\n\n\"Because you're beautiful.\"\n\nQuiet again descended around the two, but this time it was more awkward than expectant.\n\n\"Well, Honor, it appears we have a smooth talker with us tonight,\" Hannah said, finally breaking the silence. \"What do you think of that?\"\n\n\"I'd hardly call myself a smooth...\" Jeremy started, but Hannah walked past him and toward the next room. Shaking his head, Jeremy followed her through a doorway, eyes on the way her bottom bounced beneath skin-tight yoga pants. Seconds later, his foot kicked something on the floor, something soft and yielding.\n\nA shrieking yowl filled the air around them, and a small shape skittered across the hardwood floor. In the same instant, Hanna screamed and hugged Jeremy, her large, firm breasts pushing against his right arm and side. Switching his flashlight to his free left hand, Jeremy pointed it across the room just in time to see a feline tail and hindquarters exit through a door on the back wall.\n\n\"It's just cat,\" He assured the trembling young woman. \"I think I kicked it in the dark.\"\n\n\"Okay,\" Hannah nodded, but she did not ease up her hold of him.\n\n\"There's nothing to be scared of.\"\n\n\"I know.\"\n\nAfter maybe a minute or so, Hannah relaxed against him. Jeremy carefully slid his right arm from between her breasts and draped it around her shoulders. She nuzzled against his neck and sighed, then pushed her chest harder against his side.\n\n\"Hannah...\"\n\n\"Shhh...\" she said, a finger to his lips, her other hand behind his neck.\n\n\"We shouldn't...\"\n\n\"We should,\" Hannah breathed seconds before she pulled his lips down to hers.\n\nFor a heartbeat, or maybe two, Jeremy thought about Emily, about how long he had loved her, about the promised second blowjob, and about Emily's hints concerning tonight and Mandy, if they were indeed hints. But he also considered what Hannah had said, that he was Emily's insurance guy. And in his heart, he suspected that the black-haired woman was right about Emily. Or at least he wanted her to be right because that freed him up to do what he now desperately wanted to do.\n\nHannah took matters into her own hands before he could act, moving his up to her chest and pushing them against her breasts. At first, he did nothing. Then his fingers tightened, and he felt the bountiful flesh yield intoxicatingly under his grip.\n\n\"This floor is super dusty,\" she said in a rare moment when their tongues were not battling. \"And it's cold in here.\"\n\n\"Want to go to my truck,\" he murmured as he kissed her soft, pale, superbly supple neck.\n\n\"No. I want you to fuck me here, in the dust and cold.\"\n\n\"I have a blanket in the truck,\" Jeremy told her as his hands slid from her chest to her waist and then to her luscious derriere.\n\nHannah pushed against his chest and stepped back. Her flashlight, which had landed on the floor when the cat scared her, lit her in the glow of its LEDs, bathing her in a soft light that made her pale flesh appear almost blue. Without a word, the young woman crouched down, picked up the flashlight, and hurried toward the same door the cat had used.\n\n\"Wait for me here,\" she said over her shoulder.\n\n* * *\n\nWhile Hannah was gone, Jeremy pulled a small LED lantern out of the equipment bag. He put the lantern on the floor in the middle of the room and turned it one. The light was a warmer color than the cool white of the flashlights, and it made even the dusty, empty room look more inviting.\n\n\"Nice mood lighting,\" Hannah's voice said, even huskier than normal, and Jeremy's eyes snapped to the doorway. For the second time since he had met her, she made him forget to breathe.\n\nClad only in a smooth black bra that revealed considerable pale cleavage, matching panties, and her furry boots, Hannah stood in the doorway, the lantern's light revealing the glory of her body. The bluish pall he had seen in the flashlight's cooler glow was gone, replaced by ivory skin that seemed to shimmer before his eyes.\n\n\"Incredible contrast,\" he breathed, licking his lips without conscious intent to do so.\n\n\"Between dressed and undressed?\"\n\n\"Between the black of that bra and the pale beauty of your skin.\"\n\n\"Oh, that,\" the girl giggled, and then her bra dropped to the floor. \"What do you think now?\"\n\nUnable to make his parched mouth form words worthy of what he saw, Jeremy closed the distance between them, marveling at the expanse of her white breasts, each tipped with dark pink areolas and thick, firm nipples maybe a shade darker. When he reached her, he grasped her waist and pulled her to him, the coolness of her skin leeching the warmth from his fingers.\n\n\"You're beautiful,\" he whispered before their lips met, then her hands clasped his neck, her breasts mashed against his torso, and her tongue invaded his mouth with determined force.\n\nBut as much as Jeremy enjoyed the kiss, he wanted more. He inched away from her tight embrace, brought his hands up to her full bosom, and squeezed, feeling the weight of the much more than a handful mass of Hannah's breasts. The raven-haired girl moaned at the contact, then did so again as he kissed his way down her neck. When his lips reached one firm nipple, sucking it between them, her fingers laced through his hair as her moans grew lower and throatier.\n\n\"Stop,\" Hannah panted a little later while his teeth pulled gently at one thick nub while his fingers teased the other.\n\n\"What's wrong?\" Jeremy asked, straightening up and meeting her gaze.\n\n\"Nothing,\" she assured him, fingers tracing across his chest. \"Just figured it was your turn.\"\n\nHer cool lips brushed his for an instant, and then she dropped to her knees in front of him. Jeremy thought about telling her she did not have to do what he thought she was about to do, but her fingers caressing his aching erection through his jeans stopped him cold. He did want this, wanted to feel those full, soft lips slide down his now throbbing manhood. With fumbling fingers, he unbuckled his belt. Hannah grinned up at him, her calmer fingers deftly unbuttoning his fly before yanking his pants and underwear down in one motion, freeing his engorged penis.\n\nWithout a word, Hannah wrapped her lips around the head of his shaft, her tongue swirling as she sucked on the top inch or so. The initial chill from those soft lips burned away in the wet warmth of her eager mouth. After a few seconds of her attention, a shudder ran through his frame as his hands found her silky black hair, fingers intertwining in the luxurious softness of it.\n\nWhen Hannah slid her mouth lower, engulfing half of him, a deep moan escaped his mouth. At the same moment, Jeremy experienced an unexpected epiphany. Hannah's actions did not differ significantly from the last blowjob he received, the one Emily gave him in his shower. And yet, the experience was not at all the same. He could not deny Emily's skill at giving head, but it was like everything else his ex did. Her proficiency was not the result of desire or enjoyment, but rather a byproduct of Emily's dislike of being bad at anything. And although he had not realized it until this moment, he now understood that fellatio was a performance for Emily\u2014something she did to garner praise rather than an act of love, or even lust. And that led him to ponder whether that held true for Emily with all forms of sex.\n\nHannah, on the other hand, not only knew what she was doing quite well, but her undeniable enthusiasm radiated through every wiggle of her tongue and through every slide of her lips up and down. And at that moment, he knew that he could never go back to Emily's calculated efficiency. He had loved her for as long as he could remember, but she never once in all the times they had been together demonstrated the passion that Hannah did in a mere handful of minutes. And maybe this thing with Hannah would not last beyond the night, but it showed him the truth and opened possibilities he had not considered while lost in the shadow of his habitual love for Emily.\n\nThe unexpected and exquisite sensation of his new lover taking his entire length into her mouth and throat pulled the young man away from these thoughts. Knees weak, Jeremy groaned and hoped this new, mind-blowing pleasure would never end. Yet too soon it did. Hannah slid her lips back up his shaft and let it bounce free of them with a soft pop.\n\n\"In a different time and place, I'd continue that,\" she told him, her periwinkle eyes pools of blue fire. \"But I need you to fuck me.\"\n\nJeremy nodded, kicking off his shoes while he watched Hannah lie back and wiggle free of her panties, which she struggled to get over her boots. But when he saw her smooth, rounded mound and the thick folds of her glistening labia, he stopped and stared, his pants and underwear dropping down his calves to pool at his feet. As much as he wanted to do as she asked, to ram his hard shaft deep inside of her, he wanted to taste her more. Stepping out of his jeans and boxers, he knelt between Hannah's parted legs, his fingers finding the wet folds of her sex then slipping inside the slick warmth of her. And while he did so, he lowered his lips to her quivering breasts.\n\n\"Normally, I'd say a guy wearing only a sweatshirt and socks would be a real turn off, but right now... it's not,\" the wiggling girl told him as he worked his fingers in and out of her and nibbled on her erect nipples.\n\n\"Normally, I'd say a beautiful girl lying on a dusty floor and wearing just a pair of furry boots is... sexy as fuck.\"\n\nHannah grinned, then chewed on her bottom lips as she gazed up at him. Jeremy returned her smile, withdrew his fingers, and kissed his way down her chest to her navel and then to her loins. The now whimpering woman shivered when he kissed the point where her labia met. Then a low moan and a more prominent shiver rewarded the young man when he parted her fleshy lips, unhooding her protruding, engorged clitoris.\n\n\"You don't have to do that,\" the girl whimpered as his tongue lapped at her most sensitive spot. \"I'd be happy with you in me.\"\n\n\"Do you want me to stop,\" Jeremy asked, looking up from between her legs and making eye contact with the breathless young woman over the swell of her breasts.\n\n\"Fuck no,\" Hannah groaned, grasping his hair and moving his mouth back to where it had just been.\n\nJeremy allowed himself a quick smile before he resumed licking, loving both the feel and the taste of her, as well as the reaction of her luscious frame\u2014every few seconds, Hannah shuddered and her abdominal muscles clenched. And through it all, louder and louder moans and whimpers filled the dusty air.\n\n\"Oh fuck, yes!\" the black-haired woman screamed, shaking violently before her trembling muscles grew rigid.\n\nUnexpectedly strong fingers tightened in Jeremy's hair, but he endured the discomfort, kissing the tender flesh of Hannah's labia and inner thighs as she rode out her climax. And after her body relaxed, she used her grip to pull Jeremy up, past her chest, and in for a long, wet kiss.\n\n\"That was... fantastic,\" she sighed when their lips finally parted. \"But I really need you to fuck me now.\"\n\n\"Sure,\" Jeremy said, and he felt a lopsided grin spread across his face.\n\nMoving up between Hannah's still widespread legs, he positioned his aching erection so that the tip lay between his new lover's puffy, glistening labia. Their eyes met, hers overflowing with a lust that must have matched his own. Emily crossed his mind for the briefest of moments\u2014a quick image of her, her smile, her large brown eyes, her petite breasts as he had seen them last in his shower\u2014but that fleeting thought dissipated when Hannah's needful, throaty voice reached his ears.",
        "\"Please fuck me, Jeremy.\"\n\nThe young man responded without further consideration to anything besides himself and Hannah, plunging deep into her snug, waiting warmth. A gasp followed by one of those husky, low moans he had heard before filled his ears, and he felt her back arch and her pelvis thrust up to meet his. For an instant, a small smile formed on her full, soft lips, and she reached her hand up to stroke his face.\n\n\"That feel's perfect,\" Hannah murmured, and he felt his manhood twitch in response, silently agreeing with the lovely girl below him. Emily was tighter, but sometimes entering her had been difficult, even uncomfortable. And with respect to the other two girls he had been with before, they had both felt tighter going in, yet Hannah's vagina gripped his length, clung to it, in a way neither of theirs had. It was as if he was made for her and she for him.\n\n\"Like it was designed just for me,\" she continued, echoing his thoughts.\n\n\"Yeah,\" Jeremy agreed, taking a few more seconds to enjoy the feel of Hannah around him.\n\nThe young woman looked like she intended to say something more, but only a small whine came from his lips when he pulled out so that just the head remained inside of her. Biting her bottom lip, she pleaded with her eyes, with her hands that grabbed his waist and pulled, and with her groin that thrust up to try to engulf more of him. Jeremy let her squirm for a little bit before ramming himself as deep into her as he could go.\n\nHannah yelped, shuddered, and moaned, her eyelids fluttering. Jeremy tried to pull back, but he felt her clamp around him, trapping him. Then the pressure was gone, and he withdrew again until only an inch at most stayed in. He did not make her wait this time before he thrust back inside of her. Nor did he let the spasms in her pussy keep him from establishing a driving rhythm. Her large breasts bounced with every impact, and a continuous string of throaty, animalistic moans escaped her parted lips while she stared up at him through half-closed eyes.\n\n\"Oh fuck, I'm coming!\" she gasped, surprising him with how quickly she reached her climax.\n\nHannah grabbed him around his neck, pulling her torso up against his. She kissed him once, then arched her head back. Periwinkle blue eyes rolled up beneath her eyelids as her vagina trapped him, almost vibrating around his suddenly throbbing length. At the same time, the young woman's muscles quivered as her body tensed, and for several seconds no sounds escaped Hannah's wide-open mouth. Then a loud moan, higher-pitched than expected given the girl's prior ones, seemed to echo around his mind and the room.\n\nIt was all too much for the young man, and he erupted inside of her. He could not have pulled out, even if he had the time to do so, because her still spasming vagina held him trapped. But still guilt filled him as he filled her, and he worried whether she was on birth control. But in the next heartbeat, Jeremy's concerns were driven out of his mind. A banshee-like wail pierced his eardrums, sending pain lancing through his head while blinding light forced his eyes shut and the already cold air around his nearly naked form turned freezing. He attempted to concentrate on the heat of the pussy still gripping him, but then that was gone too as his body flew back, away from Hannah.\n\nThe shrieking sound faded as Jeremy landed on his bottom several feet away. Pain from his tailbone and buttocks competed with the lingering agony in his head, and he wondered what had happened to the lantern. The room had gone completely dark after the bright flash.\n\nYour eyes are closed, he told himself, and he realized it was true.\n\nHis eyelids snapped open, and at first, even the dim light shone too bright for him. But as his eyes adjusted, he saw a figure standing above him, dressed in a shimmering, low-cut, green dress. At first, Jeremy stared at deep, pallid cleavage, the bluish white flesh laced with purple veins. Then long tresses of curly, red hair drew his eyes. His gaze drifted up, and a deeper chill than the cold already afflicting him enveloped him. Hannah stared down at him, fiery blue eyes lit by a shimmering, eerie glow. He threw up his hands to push her away, but he snatched them back the moment they touched her, an icy cold shooting through his fingers.\n\nThe woman smiled at him, a smile devoid of warmth or happiness or even humanity, and he recoiled, scrambling back against the wall of the room. The grinning figure seemed to glide with him, trapping him against the wall as it towered over him.\n\nHer bottom incisors weren't crooked before, some rational part of his mind asserted.\n\nJeremy examined the woman closer and knew it was not Hannah, despite his initial reaction. Yet she looked very much like the black-haired woman, say for the slightly crooked teeth, the red hair, and perhaps the shape of her nose. And her eyes. They were a darker blue and contained none of the warmth of Hannah's lighter eyes.\n\n\"Who are you?\" he managed to get out through trembling lips, but the woman did not answer. <br >\n\nYou know who she is, the rational part of his mind told him, at least it sounded like the rational part. But it could not be. What it was suggesting was not at all rational. Indeed, it was the opposite of rational.\n\n\"Ghosts aren't real,\" he whispered.\n\nThe woman still did not respond, at least not in words. A bluish hand reached out, fingers stroking his cheek as Hannah had done earlier when he entered her. Cold deeper than any he ever felt stung his flesh at the touch, and he pushed himself up against the wall.\n\n\"Why do recoil from me so, Gus?\" the redhead asked him, her Irish accent both melodic and jarring to his ears. \"I hate to see fear in those gray eyes I love so much. Is it because I caught you riding that filthy trollop?\"\n\n\"I'm not Gus,\" Jeremy said, watching both the steam of his breath and the way the woman's shimmering eyes narrowed.\n\n\"No, you are not,\" the woman replied, examining him. \"For a moment, I thought... but it doesn't matter. You'll serve another purpose.\"\n\nThe woman\u2014who half of his mind knew must be the specter of Honor Quinn while the other half, the increasingly emotional half, insisted she could not be any such thing\u2014grew fuzzy and dim, as if that which bound her together loosened somehow. And as she faded, Jeremy saw Hannah lying unmoving on the floor near the opposite wall. He wanted to go to her, to cover her nakedness, to protect her. But before he could act, Honor re-solidified before his eyes.\n\nThe apparition no longer wore the green dress. Only black stocking held up by equally black straps around ghostly pale thighs and a silvery corset that covered her midsection but left her loins and bosom bare adorned her pallid body. The massive swell of her breasts, supported below by the corset, drew his eyes. They seemed larger than Hannah's, although in a detached way that seemed odd given the fear coursing through him, he wondered if that just appeared to be the case because the corset shaped her lower torso and lifted her breasts up and together, and maybe also because Honor's hips and thighs appeared slimmer than Hannah's.\n\n\"This will not do,\" the woman scolded, drawing his attention away from her chest.\n\nJeremy gasped and grasped her forearm to deter the icy fingers that caressed his flaccid penis. At the agonizing touch, his testicles shrunk and pushed their way up as far as they could go in his scrotum. He attempted to move further away, but he was still trapped against the wall. All he could do was try to shove her arm away. But he found he did not have the strength to do so, and soon his hands stung from contact with her frigid skin. Breathing heavily from both exertion and terror, the young man dropped his hands to his side in defeat.\n\n\"I'll get you ready,\" Honor smirked, licking her purple lips.\n\nFaster than his eyes could follow, the red-haired head descended to his lap. Shivering, Jeremy scraped his fingernails along the hardwood floor, pushing himself as far back against the wall as possible. Unbearable cold took his soft, tender flesh, and Jeremy screamed. But the agony lasted only an instant.\n\nWarmth spread out from his manhood and up through his loins. Despite his fear, despite the chills lingering where her fingers grasped his thighs, his arousal grew. And as Honor suckled his shaft, her tongue moving in ways that bespoke an experience far greater than Emily's or even Hannah's, the warmth turned to heat that surged through him, bringing perspiration to every part of his body save where her skin touched his.\n\n\"Please...\" Jeremy croaked, unsure whether he begged the apparition to stop or continue.\n\n\"Lie still,\" the woman cooed after letting his now rigid manhood slip from between her lips.\n\nJeremy could not have moved even if he wanted to. A paralysis of terror, disbelief, and desire held him in place. He didn't even raise his hands as Honor shifted in a blink from kneeling between his spread legs to kneeling astride him, her trimmed bush mere inches above his twitching pole.\n\n\"Relax,\" she murmured before frigid fingers took hold of his length and guided it between the cold, damp folds of her labia.\n\nA deeper cold than he had ever felt entombed Jeremy. He fought for every breath, his body trembling. But like when she had taken him into his mouth, warmth replaced frigidity, radiating out of his genitals even quicker this time. Within a matter of seconds, a blistering heat built deep within him, warming him so that her touch brought only a mild chill.\n\nSmoldering, icy eyes never leaving his, Honor rode him, picking up speed, her full, rounded breasts bouncing. Unable to stop himself, he grabbed her bosom, fingers finding frozen, burgundy nipples where they protruded from crinkled areolas the color of day-old bruises. And as he toyed with her firm, thick nubs that felt so much like Hannah's, save for the lingering chill that not even the heat inside him could counter, his digits grew numb.\n\nHonor, eyes now closed, moaned and placed her hands against his chest, the cold seeping through his shirt but meeting the fire raging in his chest. A voice screamed in his head, but it sounded far away, removed from the terrible ecstasy of fire and ice that consumed his flesh and his being. Pulsating spasms around his hypersensitive manhood told him that the redheaded spirit must be close to climax. Dread and anticipation filled his mind, and his own need surged through his loins. Nearly every fiber of his being wanted nothing more than to explode inside her, but the part of him that was screaming warnings feared what might happen when he achieved his release.\n\nMere moments before Jeremy reached the point of no return, the apparition's eyelids snapped open, and she looked to her left, anger burning in her blue eyes. The world around him seemed to rush back in, and Jeremy drew in a long, shuddering breath. Pain and cold assaulted his body, and shouts of \"no\" and \"stop\" and \"get the fuck off him\" sounded in the room. Turning his head, he saw Hannah\u2014still naked\u2014standing near them. Something he could not make out glowed red in her outstretched hand, and her pretty face bore a determined look.\n\nThe high-pitched, piercing wail he had heard before rent the air again, and he shifted his focus back to the redheaded woman. What he saw sent his skin trying to crawl off his body and brought bile to his throat. The specter's flesh had turned from pale, bluish-white to purple-gray. A raw, gaping wound bled where her left breast should have been, and dark, almost black blood flowed down her corset and pooled where their hips met. Desperate, Jeremy pushed at the thing on top of him, ignoring the burning cold. She did not move, except to reach a hand toward Hannah. The naked girl grunted and grimaced in pain before flying backward, landing several feet away in a crumpled, whimpering heap. Jeremy pushed at the apparition with all his strength, but to no avail. She did not move.\n\n\"She will not bother us again,\" Honor purred, the horror of moments before gone, replaced with her prior pale beauty.\n\nBut all Jeremy could see was the dead thing, the thing of nightmares. He struck her torso with his fists, pounding her corset covered abdomen and bare chest. But it did not phase the specter at all. With a smile on her full, purple lips, she rocked back and forth, then slid up and down his penis, which seemed to be frozen erect despite his terror. The heat from her loins, the heat inside him as well, built and built, searing his insides as the ghost of the Irish prostitute slammed herself along his length, faster and faster.\n\n\"Enough, Honora,\" a deep, stern voice commanded.\n\nA tall man coalesced beside the pair, sunken eyes lost in the shadows of a gaunt, bearded face.\n\n\"Get away, Gus,\" she snarled, baring her teeth at the new wraith. \"This is no concern of yours.\"\n\n\"But it is, whore,\" he barked, hand in her hair as he yanked her away. \"Not only are you still my wife, a bond not even death was able to break, trapped here together as we are, but I will not let destroy this boy in your futile attempt to escape our fate. Enough is enough.\"\n\n\"NO!\" Honor screamed, and in that instant, she stood before the ghost of August Stanton, leaving Jeremy slumped against the wall and shivering.\n\nSeeing a chance for escape, the frightened young man scrambled to his hands and knees, intending to crawl away, but fear and the frigid cold overwhelmed him and he vomited onto the floor, his body shaking. A bright light grew behind him, and he turned just in time to see the shimmering glow around Honor build to an eye-searing level.\n\nJeremy looked away, dropping flat on the floor so he could cover his ears as the banshee wail erupted out of Honor's mouth. A roar followed the shriek, then darkness fell, turning the room black except for the faint glow of the LED lantern, which had somehow ended up on its side in the far corner of the room. Risking a look back, the young man did not see either apparition.\n\nAfter several deep, calming breaths, he again forced himself to his hands and knees. Cold still lingered in his flesh and his bones, and Jeremy wondered if he would ever be truly warm again. But the agony of the deep cold had fled with the spirits. As quickly as he could, he crawled to where Hannah lay. When he reached her, he had to shake her to rouse her, and she stared at him with confused eyes.\n\n\"Honor?\"\n\n\"Gone,\" Jeremy sighed, helping Hannah sit up. \"August showed up, they screamed at each other, then disappeared.\"\n\n\"That's it?\" the young woman asked, brow furrowed.\n\n\"He said something about being trapped here together and about being married despite their death. Oh, and that he wouldn't let her destroy me in an attempt to escape their fate.\"\n\n\"She was drawing energy from you,\" Hannah mumbled, almost to herself. \"She wanted to use it to break through.\"\n\n\"To the real world? She was already through. I mean, she was as solid as you or me, at least when she wanted to be.\"\n\n\"Not between the spirit realm and our world,\" the girl explained, her voice growing stronger. \"That veil is lifted on Samhain night. I meant the barrier between the cage that holds her here and the Summer Lands.\"\n\n\"The Summer Lands?\"\n\n\"Wicca heaven, in a sense,\" Hannah shrugged. \"Peace with the undying ones, the Lord and Lady. It has been denied to her, and to August too, because of the evil they did in life. I knew it must be so when I read a story about their ghosts, so I came here tonight, when the veil is lifted and the dead can enter our realm fully, hoping to help her find peace.\"\n\nJeremy shook his head. What the young woman was saying would have seemed like nonsense to him an hour before, but now it made sense. And that caused him to wonder if he might be losing his mind.\n\n\"I never expected her to be the problem. I always believed August must be the reason they are trapped here.\"\n\n\"What?\"\n\n\"She's evil. Or more accurately, she did something in life that made her spirit evil. It had to be something even worse than what August did, and he was a thief and a murderer.\"\n\n\"She was his decoy. She lured men to their death.\"\n\n\"I never believed that part of the story, until now,\" Hannah sighed. \"But that can't be it. It's no worse than anything he did.\"\n\n\"It's too late to worry about it now,\" Jeremy shrugged, standing and helping Hannah to her feet. \"They are gone...\"\n\n\"It's not so late,\" a frosty voice said behind him as Hannah's light blue eyes widened.\n\n\"Honor,\" the naked girl breathed, and red light and warmth enveloped her and Jeremy alike as he turned to face the source of that horrible voice.\n\n\"Your little protection spell will do you no good, witch,\" the apparition sneered. \"Just like it failed before. I'll have the boy. I need him to escape the Nameless One.\"\n\n\"You cannot have him,\" Hannah said in a voice he was sure she intended to sound confident and commanding, yet Jeremy heard a tremor in it.\n\nTaking her hand, he squeezed it. Hannah glanced at him, smiled, and the light around them grew brighter and warmer. The specter of Honor Quinn hissed. A blast of bright light assaulted their eyes, and a chill descended around Jeremy only to fade away within seconds. Hannah, not letting go of Jeremy's hand, stepped in front of him. The glow emanating from her hand turned gold, lighting her face.\n\n\"No, it can't be,\" the spirit said, moving back and diminishing until only a pale, half-naked woman remained. \"You are dead. A long time dead. You must be.\"\n\nThe two stared at each other, and Jeremy marveled at how similar they looked. Both stood roughly the same height, a bit above average for a woman but a few inches shorter than Jeremy. And while it appeared to him that Honor's waist and hips were indeed slenderer than the dark-haired girl's, as he had surmised earlier, seeing them together confirmed that their bosoms were the same size, or close to it. The only significant difference between their breasts, other than coloring, appeared to be areola size, with Honor's looking slightly larger. Then the spirit's comment about Hannah being dead filtered through his preoccupation with their bodies, and Jeremy almost dropped her hand.\n\n\"What do you mean...?\" he started to ask, looking from the ghost to the seemingly living girl, but at the same moment, the male wraith reappeared. His eyes, no longer shrouded, shown a pale, silvery gray as he narrowed them and examined Hannah.\n\n\"You told me she died,\" he said, and Jeremy saw something like fear cross Honor's face. \"You told me our baby died, Honora. Yet this must be her, for you two are as alike as any two women could be, in face and form.\"\n\n\"She cannot be our daughter. She'd be long dead, August,\" Honor said, her low voice flat. \"Too much time has passed.\"\n\n\"One hundred fifty years,\" Hannah said.\n\n\"You are her descendant, our descendant,\" August said after a moment of silence.\n\n\"Your great-great-great-great granddaughter,\" the young woman nodded, her fingers tightening around a relieved Jeremy's hand as both her words and her grip assured him she was not a ghost too.\n\n\"No! Lies!\" Honor's spirit shrieked, the intensity of her white aura building again. \"That baby died.\"\n\n\"Or so you told me, Honora,\" August said, his voice so cold that it sapped what little heat Hannah's spell provided.\n\n\"What life would she have had with us?\" Honor groaned, turning to face her husband's ghost, the light around her fading once more. \"You were a thief, Gus. Yes, you saved me from death in the streets, but only to make me a whore. We weren't fit to be parents, to raise the lass. I gave her to someone who could.\"\n\n\"We did what we had to do, Honora. To survive. For her, we could have changed. We would have changed. But when she died\u2014when you told me she died\u2014darkness took me, took us both, led us here to... this. And now we suffer here, trapped, atoning for the lives we took. Had I known she was alive, maybe I would've never become the murderer you grew to loathe.\"",
        "\"I never loathed you, Gus,\" Honor told him, reaching up to stroke his cheek. \"But all this changed you, made you a much harder man. One who no longer showed hardly any love or affection to his whore of a wife, much less desiring her as more than a rough trounce in the dark, or a release after killing and rolling a mark. Is it any wonder I found what comfort I could with me patrons, those we didn't kill?\"<br >\n\n\"I was what I became because what little was good in me died when you told me my daughter was gone. You took the light away with that lie, casting us both down into darkness. You deserved your fate in life, and you deserve it in death. And I do too, but only because I'm what you made me with your damning deceit. May the Nameless One torment your wretched soul a thousand more years, even if I must suffer that torment as well.\"\n\n\"No,\" Hannah said. \"I'm here to give you peace. Both of you have suffered enough.\"\n\n\"How?\" Honor asked, looking first at Hannah then at Jeremy. \"I've tried, drawn energy out of generations of men who have lived here. It's never been enough. Tonight might have been enough....\"\n\n\"Yeah, I guess I fucked that up for you. Sorry not sorry,\" the naked girl scoffed, and Jeremy noted that her voice did not waver at all. He also felt energy flowing from him and into her, strengthening her.\n\n\"You should not stand before us in such a state, distant granddaughter,\" the specter of August said, and Jeremy wondered if Hannah felt as disconcerted by the change of subject as he did.\n\nBut he did not have the chance to wonder long. A rush of wind and light surrounded both Hannah and Jeremy. As it dissipated, they blinked at their surroundings. Gas lamps and candles lit the room with flickering light, as did the fireplace. Dark, rich rugs covered the floor, and pale-yellow wallpaper adorned the walls. Arranged around the room were exquisite pieces of carved furniture, including a dark red couch, several chairs, and a mahogany desk.\n\n\"Just as I remember,\" Honor breathed. \"Tanner had great taste in furniture.\"\n\n\"Yes, he did,\" August agreed, lounging on one of the chairs. He wore a gray coat, black pants, and a white shirt opened at the collar. His boots showed obvious wear but were polished a glossy black. A smile played across his gaunt face. \"Remember this night, love?\"\n\n\"Tanner invited us over, as if we were respectable people,\" Honor laughed. She wore a lacy blue dress that buttoned to the collar and fell to her feet, covering everything. And yet, it fit like a second skin over her torso, revealing her buxom shape. Brown boots, worn like her husbands but well-crafted of quality leather, showed beneath the dress's hem. \"Introduced us to his daughters and everything, like he wasn't shagging me every chance we gave him and then taking care of the bodies we left in his woodshed.\"\n\n\"It was an evening on which I almost forgot what I was,\" the male ghost sighed.\n\n\"You made love to me that night, Gus,\" Honor said, sitting beside her husband. \"I mean, really made love. Like we did before. Not like I was a whore for you, as I was for all the others.\"\n\n\"Ah, and these two look splendid,\" August's shade remarked, turning his gaze to where Jeremy stood still gripping Hannah's hand.\n\nBut Hannah was no longer naked. An emerald green dress, similar in cut and style to Honors, covered her flesh while revealing her luscious figure. And as for Jeremy, he wore a brown suit and dark brown boots that looked brand new.\n\n\"I still feel naked from the waist down,\" he whispered in Hannah's ear, and she nodded.\n\n\"This is a glamour, an illusion,\" she explained in a low voice. \"But it probably feels as real to them as anything else does.\"\n\n\"Yes, they do,\" Honor agreed, standing once more. \"I'm sorry I tried to take your young man, distant granddaughter. I was desperate. And I'm sorry that I lied to you all those years ago, Gus. Not a day has gone by, in life or in death, that I haven't been sorry for that, and equally sorry for giving her up, for taking her away from us both.\"\n\n\"You can see her again,\" Hannah broke in. \"In the Summer Lands. I can give you the power you need to break through.\"\n\n\"This is possible?\" August asked, climbing to his feet beside his wife.\n\n\"I think so,\" the raven-haired girl nodded. \"I came here to free Honor. I didn't know... well, it doesn't matter. I will give you both peace. I'll need to channel energy from Jeremy, if that's okay with him. It is, right?\"\n\nJeremy nodded and squeezed Hannah's hand. Hannah gave him a quick grin before turning back to the ghost couple.\n\n\"On this night of Samhain, when the veil lifts and the dead walk among the living, I ask the Lord and the Lady to guide these two lost souls to the Summer Lands, to find peace in your presence, and in the presence of their loved ones who came both before and after.\"\n\nJeremy's knees almost buckled as nausea welled up in him, and he broke out in a sheen of sweat despite the sudden cold that surrounded them. The lights of the glamour flickered, dimmed, then blinked out of existence. In the dark, empty, dusty room, the shades of August and Honor stood facing each other, hand in hand. A wound in the middle of Augusts' chest seeped blood, as did the ruin of the nearly naked Honor's left breast. And before Jeremy's horrified eyes, their flesh sunk around bone until all that remained was a thin, desiccated covering stretched taught over their skeletons. A new wave of nausea hit him when Honor turned to look his way and he saw holes appear in her face, revealing the white skull beneath. Beside Jeremy, Hannah shivered as she stifled a sob, then the glow around her, around them, turned green.\n\nTwo small orbs of shimmering green energy shot from Hannah's open hand and streaked toward the spectral couple, disappearing into their sunken chests. Nothing happened at first, but within a heartbeat, green light burst through the specters, transforming them. August stood tall and proud, his face handsome, his naked body lean but muscular. And Honor, her smooth, pale flesh whole again, smiled beside him in radiant beauty.\n\nThe next instant, both the green light and the apparitions faded from existence. Hannah turned to look at him, and Jeremy saw she was crying. He took her in his arms and held her as sobs racked her frame.\n\n* * *\n\n\"We should probably get dressed,\" Jeremy told Hannah, breaking the long silence that had fallen after Honor and August disappeared.\n\nThey sat together on the hardwood floor. A ball of orange energy hovered beside them, radiating warmth. It was not enough to completely drive away the cold\u2014the girl was too drained for that\u2014but it was enough to make it bearable.\n\n\"Or you could make love to me,\" the naked woman said, pale blue eyes unblinking as she stared at him.\n\n\"Are you sure? After everything that happened?\"\n\n\"Oh yes,\" Hannah sighed, taking his hand. \"If you don't mind making love to a witch.\"\n\n\"A witch saved my life tonight,\" Jeremy replied, and for a moment his mind tried to fight against the memories that proved that not only were ghosts real, but witchcraft, or at least wiccacraft, was too. But Jeremy shoved those thoughts away and instead kissed Hannah's full, waiting lips.\n\nThe raven-haired beauty moaned then thrust her tongue between his lips as he brought his hands to her full breasts. Her hands covered his, pushing and squeezing along with him. Almost instantly, Jeremy felt his erection spring into being. At the same time, Hannah lay back, breaking the kiss but making sure his hands did not leave her chest. Smiling, she spread her legs in silent invitation.\n\n\"Do you want to try a different position?\" Jeremy asked. He did not want to himself, but he thought he should offer.\n\n\"Maybe next time,\" Hannah said, her eyes brimming with lust and playfulness. \"But it was so great this way the first time that I don't mind a repeat.\"\n\n\"So, you're saying there will be a next time?\"\n\n\"Just shut up and fuck me,\" the girl laughed, and Jeremy did as she asked, sliding inside of her in one smooth motion.\n\n\"Like you were made for me,\" Hannah murmured, once more echoing her prior words as well as his earlier thoughts.\n\n\"And you for me. Better than anyone...\"\n\n\"Don't want to hear about anyone else,\" she pouted, but he was sure it was playful, not serious. \"Just how much you want me.\"\n\n\"More than I've ever wanted anyone else,\" Jeremy told her as he pumped in and out of her wet, clinging warmth.\n\n\"Oh, that I like hearing,\" Hannah smiled.\n\n\"I like telling you that,\" he grinned, knowing it was true. Emily and his obsession with her seemed like a distant memory.\n\n\"You can be rougher with my boobs,\" his new lover told him after several seconds of silence only broken by her low moans and his occasional grunts as he thrust in and out with a slow, steady, driving rhythm.\n\n\"You wanted to make love,\" Jeremy reminded her, tweaking one thick, rigid nipple.\n\n\"Making love can mean many things, Jeremy.\"\n\nThe young man nodded, grasping her breasts tight enough that her pale flesh bulged between his fingers. Hannah's moans increased in volume, and her legs wrapped behind his buttocks and pulled.\n\n\"Deeper and harder,\" she gasped, eyes shining.\n\nJeremy obliged, pounding into her, driving as deep as he could before pulling back so that just the tip was inside of her, then doing it all again. Over and over, making her body quiver.\n\n\"Faster,\" she groaned maybe a minute later. \"Make me cum all over your hard cock.\"\n\n\"That sounded naughty,\" he joked with her, increasing his tempo while not letting up on the force with which he drove into her.\n\n\"You have no idea, Jer,\" she panted, and for a moment, her use of the same nickname Emily always used for him threw him. But her next words expelled all thought of his ex from his head. \"Witch girls are super slutty and naughty. Everyone knows that.\"\n\n\"Sounds like an ugly stereotype to me,\" he said through increasingly shallow breaths.\n\n\"Fuck no,\" Hannah moaned, back arching, pelvis thrusting to meet him. \"Gospel truth, at least in my case. I'll show you. Call me a slut.\"\n\n\"You're a slut.\"\n\n\"No, not like that. Mean it.\"\n\n\"You're a naughty little slut who likes dirty talk.\"\n\n\"You can do better.\"\n\n\"You're a slut who likes taking a hard cock deep in her pussy.\"\n\n\"Closer... oh so close... kick it up a notch.\"\n\n\"You're a dirty slut who likes her cunt filled with...\"\n\n\"I'M CUMMING!\"\n\nJeremy thought about slowing down or stopping while Hannah convulsed and moaned beneath him in obvious climax, but he did not. He thrust deeper, harder, faster. He let go of her breasts and watched them bounce with each impact. He ran his fingers down her undulating abdomen until they probed where her labia came together, finding her engorged clitoris and rubbing it.\n\n\"Fuck,\" the girl groaned low in her throat. \"Don't stop that. And pull my hair.\"\n\nAfter a brief hesitation, Jeremy snaked his free hand into Hannah's long, black hair, tightening his fingers and pulling.\n\n\"Goddess, yes!\" Hannah gasped, one of her hands over his hand that was between her legs and her other hand grasping his free forearm.\n\n\"You're a slutty, big-titted whore who likes getting fucked rough on the dirty floor,\" Jeremy growled, and he was rewarded with spasms around his manhood.\n\n\"Fucked in what?\" she asked seconds later.\n\n\"Her tight, wet pussy.\"\n\n\"Her what?\"\n\n\"Her slutty, sodden, needful little cunt.\"\n\n\"FUCK YES!\"\n\nJeremy gasped as her vagina tightened around him more than he would have thought possible. At the same time, Hannah ripped his hand away from her clitoris and sunk her fingernails into the flesh of his other arm. Beneath him, her tense, rigid frame shook in time with the rhythmic squeezing around his shaft. Within seconds, even without moving again, Jeremy hit his climax and exploded, filling her.\n\n\"I'm on the pill,\" Hannah whispered some time later as their bodies began to relax together.\n\n\"That's good,\" Jeremy said, rolling to the side and out of her.\n\n\"Well, I guess I needed a hard, nasty fuck rather than making love,\" the girls said after they lay side by side for several seconds, both panting.\n\n\"I aim to please,\" Jeremy laughed.\n\n\"And boy, do you ever.\"\n\n* * *\n\nThey dressed in silence, exchanging small glances and smiles. But even so, something bothered Jeremy, a nagging thought that he could not force out of his mind.\n\n\"You expected to see Honor's ghost tonight,\" he said, a statement not a question.\n\n\"Yeah, I did,\" Hannah agreed, pulling her shirt over her head. \"It's Samhain night. The veil...\"\n\n\"Is lifted. I get that. Well, now I do. What I mean is that you planned to come here and find Honor, to free her.\"\n\n\"I already said that,\" the dark-haired girl replied, defensiveness creeping into her tone.\n\n\"And you knew that she appeared to men, interacted with men, in a way she didn't with women.\"\n\n\"I did.\"\n\n\"So, you maneuvered it so you'd be here with a man, just the two of you, him as bait and you to complete your task.\"\n\n\"I wouldn't say bait, really,\" Hannah shrugged, but even in the dim light of the fading lantern, he saw her face flush.\n\n\"A lure, like Honor was August's lure.\"\n\n\"No, of course not. It's not the same.\"\n\n\"And that's why we fucked the first time. You thought it would draw her out.\"\n\n\"Now that isn't true, Jeremy,\" Hannah said, taking his hand. \"I fucked you because you're a good-looking guy and because you came to my rescue.\"\n\n\"From a cat that scared you. Not that heroic.\"\n\n\"It was for me. I didn't know it was a cat at first. Plus, it was chivalrous and very comforting.\"\n\n\"Fine. Let's say I believe you that this wasn't just about luring out Honor...\"\n\n\"It wasn't,\" Hannah interrupted Jeremy, stepping closer to him and trying to pull him into a kiss.\n\n\"...what do we do now?\" the young man continued, stepping away to avoid the kiss.\n\n\"What do you want to do? Go back to Emily? I can make you a love potion if that's what you want. Well, it's really an enthralling potion, more lust than love, but it can lead to love if the person dosed already has feelings for the target person. And she does have feelings for you if she's keeping you as her insurance guy. Plus, I saw the way she looked at you when you were partnered with me.\"\n\n\"I don't want Emily,\" Jeremy said, still surprised by the absolute truth of that statement. \"I did for a long time, but after what happened tonight, well, things have changed.\"\n\n\"Because of Honor and August?\"\n\n\"Yeah, that was pretty life-changing. But I meant you. I know it was probably just a hook up for you, but I've never felt so, um, well-matched. And I don't just mean the sex, although that was incredible. I mean how we worked together, how close I feel to you even though I've only known you...\"\n\nThis time, Jeremy did not avoid Hannah's interrupting kiss. He let her wrap her arms around his neck and pull him in, and he met lips with lips and tongue with tongue. After a few seconds, his hand dropped to her waist and pulled her closer, her substantial breasts pushing against his torso, her groin pressed against his own, including his stiffening manhood.\n\n\"I feel the same way,\" Hannah whispered when the kiss finally broke.\n\nEpilogue:\n\nJamestown, California\n\nJanuary 1, 2020\n\nLate morning sunlight streamed in through the gap in the curtains, lighting the naked young woman snoring lightly next to Jeremy. He pondered waking her with kisses to her exposed nipples. Instead, he kissed her parted lips. A murmur broke her snoring before Hannah's eyelids fluttered open.\n\n\"Morning, sexy,\" he said, taking one thick nipple between his fingers and rolling it gently.\n\n\"Fuck, you didn't get enough last night?\" his lover groaned, the smile on her full lips belying her words and tone.\n\n\"I can never get enough of you,\" he grinned before sucking her other nipple between his lips.\n\n\"Smooth talker,\" she chuckled before a throaty moan escaped her lips.\n\nJeremy did not reply, other than to start kissing his way down her abdomen.\n\n\"That's still a mess down there from last night,\" Hannah warned him as his lips passed over the short growth of reddish blonde fuzz that covered her mound.\n\n\"Don't care,\" Jeremy said. \"I'm just going for this.\"\n\nHis probing tongue pushed against the hood of Hannah's clitoris, and the girl let out a sharp gasp. He repeated that a few more times with similar results and no objections. Taking that as a good sign, he spread her labia and revealed his true goal, her protruding clitoris, which he kissed then sucked gently.\n\n\"Fuck yeah,\" Hannah grunted before pulling the pillow over her face and moaning into it. He would have preferred to hear her unmuffled, as he loved the sounds she made while on her way to a climax. But someone in another room had complained last night about them being loud, so he understood her wanting to take precautions this time.\n\nMoving between her now widespread legs, Jeremy flicked at his girlfriend's most sensitive spot with the tip of his tongue, then wiggled the flat of it against her engorged nub. Hannah bucked her hips and screamed into the pillow. Not for the first time, the young man reflected on how easy everything was with her. He never worried about pleasing her because he knew he could, just as she pleased him. And it was more than the awesome sex. Even though they were from very different backgrounds and held different beliefs\u2014although he had seen enough now that he was coming around to some of hers\u2014their rare disagreements always faded away quickly, usually during sex of some kind.\n\n\"Just a little more and...fuck! I'm cumming!\" Hannah rasped, fists clenching blanket and bed sheet as her neck and back arched and her abdominal muscles rippled under pale flesh.\n\nJeremy thought about pushing her to another climax, but fingers grabbing his hair and pulling his face away from her groin gave him a good hint that she did not want him to continue. So, he yanked the pillow off her face, stared down into those lovely and loving periwinkle eyes, and kissed her.\n\n\"Ugh, pussy taste,\" she groaned but then immediately shoved her tongue into his mouth, proving she was kidding.\n\nThat was one of the things he loved about Hannah. Sex was playful for her, a joyous activity full of teasing and laughter and pleasure. The transactional sex he had known with Emily, and to a lesser degree with the two other girls he had been with, did not exist with the witch girl.\n\n\"Want a BJ?\" she asked between kisses.\n\n\"What do I have to do to get it?\" he teased her.\n\n\"Take me ghost hunting! Oh wait, we did that last night. And last week. Oh, and the week before.\"\n\n\"And I got head all those times.\"\n\n\"Well, that's true,\" Hannah snickered. \"That's what happens when you ghost hunt with a slut.\"\n\n\"Good point...\"\n\n\"I thought so.\"\n\n\"But then again, the first time I went ghost hunting, I got a blowjob from...\"\n\n\"Say that bitch's name, and I'll give you a so-so BJ.\"\n\n\"I don't think it's in you to give a less than awesome blowjob.\"\n\n\"Yeah, being this good a cocksucker's a curse,\" the girl sighed.\n\n\"You are much better than Emily.\"\n\n\"You said her name, asshole!\"<br >\n\n\"It's an experiment.\"\n\n\"Like making me call out 'Flo' while you fucked me last night?\"\n\nFlo, the resident ghost of the National Hotel in Jamestown, an old mining town in the California Gold Country, had not made an appearance during their first two nights in the hotel. According to local legend, Flo died of a broken heart after her fianc\u00e9 was shot and killed before her eyes. Hanna made a joke about Flo probably being jealous when couples had sex in the hotel, and that gave Jeremy and idea. So after several New Year's Eve drinks leading up to midnight, he suggested Hannah call the ghost's name while they had sex. And the instant after he kissed her to start the new year, they had put his experiment into action.",
        "\"That one was a bust,\" Jeremy laughed. \"I'm hoping this one isn't.\"\n\n\"And what's the goal here? What's the purpose of this hairbrained experiment?\"\n\n\"To see if you are capable of giving an only so-so blowjob. I'm betting that once you start, you'll slip right into your normal super fellatrix mode.\"\n\n\"I wish I'd never told you that word,\" Hannah groaned, rolling her eyes. \"And I wouldn't bet on that if I were you.\"\n\n\"You're saying you think you're upset enough to give me a not so good BJ?\"\n\n\"I'm saying that you're fucking pissing me off. And based on what I've been told in the past, I don't give awesome head when I'm pissed\u2014I give super awesome, mind-blowing, reality-altering head when I'm pissed.\"\n\n\"I don't really like hearing about other guys you've been with...\"\n\n\"Oh, shut the fuck up!\" Hannah hissed, pale blue eyes burning with amusement and lust.\n\nJeremy chuckled and lay back, spreading his legs. His lover maneuvered between them, dragging her heavy breasts along his abdomen then groin as she slid down the bed. For an incredible and agonizing few seconds, she paused while her long, soft hair splayed across his lower belly and loins, those still dark tresses tickling his sensitive flesh. And just when he believed that he could not take a second more, she swept her hair back, grinned up at him, and took the entire length of his erection down her throat in one smooth motion.\n\n\"God, I don't think I'll ever get used to that,\" Jeremy groaned, stroking the hair on the top of her head where an inch worth of strawberry blonde roots showed. After the meeting with her ghostly ancestor, Hannah decided to let her natural hair color grow out.\n\nThe girl rolled her eyes and mumbled something around his shaft, which he suspected was \"Goddess too,\" but the pleasure generated by her throat, mouth, and active tongue ensured he did not care about her teasing him. And yet, he could not resist teasing her.\n\n\"It feels great, but so far I wouldn't say super awe... awe... uuuuhhhhh... oh, fuck...\"\n\nWhile he was talking, Hannah applied more suction than he had ever felt before, hollowing out her cheeks as she shook her head. Jeremy grabbed her hair but then let go while she slid her soft mouth up the length of him with sensuous, almost unbearable slowness. She held just the tip between her plump lips for a few seconds, her tongue wiggling against the sensitive flesh there, then plunged back down to the base. But this time, his lover did not pause at the bottom. Rather, she jerked her head up before driving it back down. Jeremy gasped and grunted, hands clenching and unclenching in Hannah's silky soft hair as she took him to the edge in mere seconds.\n\n\"I'm gonna...\" he announced, and almost instantly, cool air hit his penis. Hannah, eyes sparkling, pulled her head back and grinned at him.\n\n\"Not yet,\" she said, her soft fingers lightly stroking his twitching manhood, sending shivers down his spine as he humped his pelvis upward.\n\nJeremy did not say a word. Rather, he tightened his grip on her hair and tried to push her lips down to the glistening head of his shaft. Hannah shook her head but let him bring her lips to the tip of his erection. A quick kiss was all he received, however, before she licked down his whole length and then back up. Again, Jeremy shivered and humped the air, but he did not try to make her take him in her mouth. Smiling, his lover rubbed his rigid pole on both her cheeks and across her lips. And just when he thought he could not stand a moment more of her teasing, Hannah opened her mouth wide and slurped on the glans of his penis. Jeremy heard a pathetic whimper escape his own throat, and Hannah gave him a knowing wink.\n\n\"You want to come, Baby?\" she cooed, and all he trusted himself to do was nod.\n\n\"Is this just a 'normal' awesome BJ or a super awesome, mind-blowing, reality-altering...\"\n\n\"The second one,\" he croaked. \"Please... please...\"\n\nHannah must have taken pity on him because she slurped half his length into her mouth. And then, with her tongue in constant motion, she sucked up and down that top half as fast as he thought it possible for her to go. Grunting and whining, Jeremy balled up the bedcovers in his fists, just as Hannah had done when he licked her to an orgasm, and tried to give in to the pleasure from his lover's incredibly talented mouth. But the sensations coursing along his aching manhood were too intense, and he suffered on the edge of his climax for what felt like hours. In reality, he exploded in Hannah's mouth after less than a minute, filling it with as much semen as he could ever remember producing. And for the most part, his lover kept up with the deluge, swallowing almost all of it. But a little seeped out around his thickness and trickled out both sides of her lips.\n\n\"Holy fuck,\" Jeremy groaned when she finally let the overstimulated head of his penis slip free of her lips.\n\n\"So, the results are...?\" she asked him before her tongue licked the rivulets of his spunk from the corners of her mouth.\n\n\"You give super awesome, mind-blowing, reality-altering head when you're pissed.\"\n\n\"Shit, you have no idea,\" Hannah laughed, eyes full of playful, loving mischief. \"I was just kinda pissed. Wait until you get me really pissed.\"\n\n\"I'm not sure I would survive it,\" Jeremy admitted.\n\nThe girl sat up and smirked, her face framed by her long, dark hair. Grinning back at her, the young man sat up too, pulling her into a kiss.\n\n\"I love you,\" he told her when their lips parted again.\n\n\"Shit, don't say that for the first time when I've still got the taste of your cum in my mouth,\" Hannah scolded him, but as always, her eyes told the true story.\n\nAt least he hoped they did. However, after several seconds of silence, he began to wonder. But a quick kiss followed by a whispered \"I love you too\" assured him he had read Hannah's eyes right.\n\nA blast of cold air caused the couple to turn toward the back corner of the room. There, in the shadows, shimmered a female apparition in what looked to be a lacy white gown, a reproachful, and perhaps longing, expression etched onto her pallid face.\n\n\"It looks like we found something to draw Flo out after all,\" Hannah said in a low voice as the specter glared at them.\n\nFinis"
    ],
    "authorname": "Kveldulf",
    "tags": [
        "facial",
        "fellatio",
        "ghosts",
        "large breasts",
        "oral sex",
        "shower blowjob",
        "small breasts",
        "swallowing",
        "unprotected sex"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/full-bodied-apparition"
}