{
    "title": "More Than Words Ch. 02",
    "pages": [
        "As always:\nThanks to \"Doc\" for story consulting.\n\n\nMore than Words Ch. 2:  An Unbreakable Vow\n\n\nOne year and three months later:\n\n\n\"Tell me Grant, why don't we ever see or talk to your family?  Is it because of me?\"\n\n\"No Kisara.  Well, yes, but...  How can I say this?\"  Grant appeared deep in thought.\n\n\"Am I an embarrassment?\"\n\n\"No.  Absolutely not.  I love you Kisara and there is not a day that goes by that I don't feel blessed to have you in my life.  My family is just... complicated.\"  Grant began rubbing his temples, something he does when he is unsure of himself or what to say.\n\n\"I love you too and I'm honored to be by your side and Mother would be so proud that I made my vow to such an outstanding human being.  The time spent with you has truly been a dream.  Perhaps if we discuss it, we could uncomplicated the situation.\"\n\n\"I appreciate what you are doing, and I promise to tell you all about my family, but can it please wait just a little longer?  I need time to figure out how I want to word it.\"  Grant was on the verge of begging at this point.\n\n\"Of course.  Take all the time you need.\"  \n\nThe only person I considered family while growing up was Mother.  I am curious to see what a real family is and I'm hopeful to be a part of one.  I understand this is difficult for Grant.  Something happened that caused him to move from L.A. to New York.  He never talks to them, let alone visit.  One thing I know is life is too short and I still miss Mother.  But Grant asked and I will respect his feelings.  I turn off the light and we fall asleep together.\n\nThe alarm clock began to sound, signaling it is now 5 am.  Grant has the long shift today and the night seemed to pass awfully quickly since we went to sleep close to midnight.  He rolls out of bed and jumps in the shower.  Even though I don't need to get up for three more hours, I don't hesitate and head to the kitchen.  I start the coffee and prepare a light breakfast for us.  I heard the shower stop and Grant entered the kitchen shortly thereafter.\n\n\"How many times do I have to tell you, you don't have to get up just to cook me breakfast and make coffee.\"  Grant was finishing buttoning up dark blue shirt.\n\n\"I know I don't have to, I want to.\"\n\n\"Because of your oath, aren't you supposed to do what I tell you to do?\"  Grant let out a chuckle.\n\n\"Yes and no.  I don't want you killing someone because you're operating on an empty stomach and without you're precious caffeine.  Besides, the word \"serve\" is in there somewhere.\"  I split the scrambled eggs onto two plates and went to the dining room table.\n\n\"You are a true paradox.\"  Grant shook his head.  \"Your face appears dead serious but your words make me laugh.  Now if I could just get you to smile.\"\n\n\"I can smile.\"\n\n\"No, I think when your mother said don't make a face or it will stay that way, you didn't listen.\"\n\n\"Well, how about this?  Ha- ha.\"  I spoke the words meaning laughter.\n\nGrant almost cried, laughing so hard.  \"You're going to make me late.\"  Grant stood and kissed me.  \"Thanks for the great breakfast.  Love you and I'll see you tonight, around 8:30.\"\n\n\"Chicken alfredo for dinner.\"\n\n\"Great.\"  Grant called out as the door shut.\n\nAfter clean up, I get ready and make it to my dojo at 8:45.  My clan's reputation, although I don't flaunt it, has brought me plenty of students.  Some come with big egos as all they want to do is prove themselves by beating a famed Akita swordsman in a duel.  It never happens.  Most, however, just want to increase their skill by training with me.  I also have a beginner's class.  I really enjoy teaching the young children as they learn the basics.  It's my way of honoring Mother by passing down her teachings.\n\nI was in the elevator on my way up to the 5th floor apartment Grant and I shared.  The door opened and I did not move.  I sensed something was amiss.  I touched the button for the top floor and made my way to the roof and down the fire escape.  I peered into the open window.  There were two men, very tall and muscular wearing black suits standing six feet apart with their backs to me.  The man on the right had four legs, which means he was overshadowing someone.  A woman with short auburn hair done in a bun, wearing a navy blue executive suit with a white blouse came from the hallway that leads to the bedroom and bathroom and walked casually to the man on the right.  She had a stern look on her face.\n\n\"I can't believe you thought you could hide this from me!\"  She put her hands on her hips.  \"I guess this means my son has finally grown a pair.\"\n\nThe man on the left let loose a quick chuckle and the woman gave a glance full of warning.  \"We set this up nearly twelve years ago in exchange for you leaving the family so you can play doctor in New York.  You should have informed me you succeeded.\"\n\n\"But Mother, I didn't.\"  It was Grant's voice and it was shaky.\n\n\"You mean she's been living with you for over a year and didn't make the oath?\"  She slapped Grant hard in the face.  \"Don't lie to me!  It's shameful enough to know my first born is such a pussy he won't take a life, let alone fire a gun, and now you lie to me as well?  Thank God I got it right the second time around.\"  She sat on the couch and crossed her legs.  \"Grant, don't play poker.\"\n\nI dove through the window and did a somersault in between the two men.  I did a sweep kick with my left foot to the man on the left.  As soon as my foot cleared, I pushed up with my right foot and swung my right arm toward the falling man.  My palm struck him on his right temple.  If he is trained, he'll be down 43 seconds, if not, 1 minute and 27 seconds, and he'll still be woozy.  The man that was on my right, now left, was slow to move to face me, having to move Grant as well.  I made a quick step to the left and Grant I were suddenly face to face, mere inches apart.  The man was bringing his right arm up, and with it, his gun.  I made a sweeping motion with my left hand.  It brushed across the tip of Grant's nose, causing him to flinch.  \"Drop.\"  I whispered.  My hand connected with the gun, effectively knocking it to the floor.  Grant went to the floor.  As soon as his head was clear, I thrust my right palm upwards into the man's nose.  He was now deceased.  And then there was applause.  Grant stood and I turned around to face his mother, who was clapping.\n\n\"Bravo.  Really, bravo.\"  The woman nodded her approval.  \"I must say, I never had the chance to see your mother live and up close, but that was impressive.\"\n\n43 seconds.  I slammed my left elbow backward into the first man's stomach and rotated my left fist 90 degrees upward and connected with his face.  He'll be down for 38 minutes.  Two men entered through the front door, guns drawn.  I slide step so that I am directly in front of Grant, blocking as much of his body my small frame will allow.  In my peripheral vision, a man and a woman walk from the bedroom, with the man in front.  They both have guns as well.  At this point, if a gun fight occurs, Grant will not survive the crossfire.  If he doesn't live, nor will I.  Upon my honor, I will fight to the death.\n\n\"And to think your father said that nothing would beat the original.\"  Grant's mother said with a laugh.\n\n\"You must be Sam.\"  I uttered my first words to this deplorable woman.\n\nShe had a brief look of shock and then looked at Grant.  \"You told her about the family?\"  Her face turned to anger.  \"You shouldn't have...\"\n\n\"No, he didn't.  My father was talking to you the moment before his death.\"\n\n\"Calm down dear.  It's okay.  You'll have your revenge.\"  The voice came from the man in the hall.  A quick glance and I see it is Dave, Grant's brother, comforting my step sister, Danielle.  She had a look of pure evil and an itchy trigger finger as she wanted my head in the worst way.\n\n\"Grant, we're going up.\"  I announced.\n\n\"Ah, it's nice to know that the Akita is intelligent too.  But you don't have to die.  Grant, tell her to yield and we can all go back to L.A.\"\n\nI tilted my head so I could look at Grant.  There was fear in his eyes.  \"Grant, I'll do what you ask, but do you trust me?\"\n\nHis head barely moved, but he did nod in the affirmative.  I immediately grabbed him and bulled him through the open window.  Gun shots rang out.  \"Grant, we're going up.\"  \n\nGrant started up the fire escape as I stayed out of view on the ledge.  I drew my katana from the sheath on my back.  The first goon got one leg out the window and I sliced through him, hoping to create a bottleneck.  I headed up the fire escape and caught up with Grant on the roof.\n\n\"This way.\"  I jumped the three feet to the neighboring rooftop.  We stopped when we reached the end of the building.  \"You still trust me?\"\n\n\"With my life Kisara.\"  Grant said while slightly out of breath.\n\nI grabbed him and jumped; pulling him with me.  It was a seven story drop.  We landed on the soft canvas of the shops awning below us and it caused us to slide.  We landed with a thud on the concrete sidewalk.  We both had some pain, but we were alive.\n\n\"How long have you had that escape route planned?\"  Grant grimaced as he asked.\n\n\"The day I moved in.\"\n\nGrant stood up and offered me his hand, always the gentleman.  \"Kisara, we have to hurry, they're coming!\"\n\nI took his hand and he pulls.  Everything went black.\n\nI groggily woke up to consciousness.  \"Grant!\"  I screamed as I attempted to sit upright, but I didn't get very far.  My restraints held firm and I was jerked back to the hospital bed my arms were chained to.  I had a handcuff on each wrist connected by a chain.  The chain was wrapped underneath the bed, offering me about a foot movement in one direction at a time.  I looked around and all I see is white.  White walls, white tile floors, white ceiling, and one white table.  Even the hospital gown I am wearing is white.  I also realize there was an acute pain coming from my back.  At most it is mildly irritating.\n\n\"Boss, she's awake.\"  The voice came from behind me from someone I couldn't see.\n\n\"Where's Grant?\"  No answer.  I can hear the man's breathing getting heavy.  He was nervous to be alone with me.  A minute later, the door opened and in walked Samantha carrying a briefcase.\n\n\"I see you survived that gunshot wound.  Grant said you would.  Three inches to the right and it would've been a different story.\"  Samantha snickered.  \"Akita's are apparently a resilient lot.\"\n\n\"Where is he?\"\n\n\"He's safe, for now.\"  Samantha's voice was meant to be intimidating.  \"Whether he remains that way is up to you.\"  She set the briefcase on the table.  \"From now on you belong to me.  You are to obey my commands.  If not, well, all I can say is Grant's safety cannot be ensured.\"\n\n\"You would kill your own son?\"\n\n\"Why not?  You killed your own father.\"  Samantha had an amused look on her face.\n\n\"Only dogs are meant to obey.  That is not what the vow is about.\"\n\nSamantha pulled a manila envelope from the briefcase.  \"That's what I'm making it about.  So consider yourself my personal bitch and get on a flight to Hong Kong.\"  She threw the envelope in my direction and it struck me in the face and came to rest on my stomach.  \"I'll give you 30 minutes to decide.\"  She then looked at the man still behind me.  \"Let me know what her decision is.  If it's no, let Danielle know as well.\"\n\n30 minutes.  I meditated for a brief moment before I appeared to struggle reaching for the envelope. \"Sir, can you help me with this envelope?\"  Nothing.  I swear I can hear him debating to himself.  \"Please, I only have 29 minutes and 8 seconds left.\"  That did it.  I hear his tentative footsteps coming closer.  Judging by his gait, he was 6'2\", 237 lbs.  Give or take an inch or pound.  I placed my feet flat with the bed.  Closer.  Closer.  Using the bed as a springboard, I push off and wrap my legs around his neck.  Because of my movement, the handcuffs dig into my wrists slightly.  I'm cutting off his circulation.  His hands went to try to break the hold.  My grasp was too strong.  His face was turning red.  If he wasn't being strangled, he would've loved the view.\n\n\"Where's Grant?\"\n\nAn ineffective attempt for a gasp of air was his response.\n\n\"Speak now and I'll let you live or don't, you die and I find him anyway.\"  I loosened my grip enough for him to answer.\n\n\"He's locked in the penthouse suite at the Dunesbury Hotel.  Please let me go.\"\n\nI retightened my grip.  \"This will hurt, but you'll live.\"  I put my left arm as far to the left side of the bed as possible, giving me a foot clearance on my right side.  This allowed me to tumble the rest of the way and drive his head into the metal bar on the right side of the bed.  I still have him in my grasp as I search his pockets.  I found the keys to the handcuffs in the inside of his suit pocket.  I release my hold.  He'll be off his feet for 32 minutes.\n\n23 minutes left.  I remove the cuffs and head to the door.  I listen for movement on the other side.  Hearing none, I gently open the door and look in both directions.  The hallway is a disaster.  It is also free of people.  At the end of the hall to the left is a half broken exit sign barely hanging from the ceiling.  I swiftly, yet cautiously make my way in that direction.  I glance in each room I pass.  No other was like the white room I was in.  Every room appeared exactly as the hallway did, like a tornado passed through it.  I get to the edge of the hall and I hear voices.  I peek to the left and I see the exit.  I also see two men guarding it while talking fantasy football.  To the right, the hallway extends deep and is exactly like the one I'm standing in except it has light shining in from the rooms across from me.  I've reached the end of the building.\n\nA shadow approached from the right and I quickly duck into the nearest room.  The man turned the corner.  He must be heading to my room.  I waited for him to pass.  I came behind him and put one hand over his mouth as my arms wrapped around his head.  In one movement, I snapped his neck.  I deposited the body in the room I just abandoned and went back to the edge of the hall.\n\n19 minutes.  Waiting for the perfect moment, I dart to the closest room across the hall.  I look out the window and notice I'm on the ground floor of an abandoned hospital facility on an island not far from the Bronx.  I also see my ride, a rowboat that appears to have gone to hell and back.  I climb out the hole where a window used to be and make my way down the overrun grassy terrain to the small vessel.  With all the technology in the world, why can't they design a hospital gown that doesn't leave your butt bare?  It's annoying to be on a rescue mission with the cold wind blowing up my crack.\n\nI push the boat out and hop in.  I have a 16 minute head start before they know I'm gone and it will take me 20 minutes to navigate the dangerous Hell's Gate Strait.  I must reach Grant before they do something rash.  If they don't kill him, there definitely will be an ambush awaiting me at the Dunesbury Hotel.\n\nI arrived on the mainland and began to maneuver my way through the streets of New York.  Two different people propositioned me to play doctor with them as I headed to Evan Bannister's dorm.  He's a 21 year old student of mine who I let run a class of his own at my dojo.  He's barely 6'0 and he's toned, not muscular, but he has near flawless technique with a bo staff and only needs to work on his speed.  I did ask him once why he chose the bo staff.  He explained he was kind of a nerd growing up so his favorite turtle was Donatello.  I didn't get the connection between a turtle, a bo staff, and an ancient renaissance painter, but I didn't ask him to elaborate either.\n\nDusk was falling as I arrived at the dorms of City College and I received a good stare or a whistle from all the boys I passed.  I knocked on the door.  Evan had his back turned to me when he opened the door, laughing at his roommate over some joke about \"shit.\"  When he turned, his expression went solemn.  He straightened up and gave a quick bow.\n\n\"Sensei?\"  Evan was definitely stunned to see me, in a hospital gown no less.  \"Please come in.  What happened to you?  You haven't been at the dojo in two days.  I did what classes I could, but not many of the adults stayed, as they only want to learn from you.\"\n\nI walked in and Evan shut the door.  I heard another whistle as Evan's roommate blatantly looked me over.  \"Evan, is that her?\"  He gave an approving smile.  \"I now see why you go to that karate school every day.  Maybe I should join.\"\n\n\"I wouldn't mess with her George.  She can kill you 100 different ways with moves I can't even pronounce.\"  Evan paused a moment.  \"George, do you mind giving us a minute?\"\n\n\"Sure, take all the time you need roomie.  I know you've wanted this for a long time.  I'll be at Jerry's letting him know you finally have a girl over.  As George passed, he attempted to swat at my bare butt.  I caught his hand and bent.\n\n\"You need to show more respect to women, especially when they are your roommates guest, and the only reason I'm not breaking your wrist right now is because I have an urgent matter to discuss with Evan.\"  I let go of his hand.  \"Now if you'll excuse us.\"  George meekly left the room; the fear of God in his soul.\n\n\"I'm sorry sensei. George is just...\"  Evan struggled for the words as he was now embarrassed.\n\n\"Immature.\"  I finished for him.  It's obvious Evan acts one way with me and another with his roommate.  His true character showed when he immediately reverted for me despite being in his own room.  \"What did he mean you've wanted this for a long time?\"\n\n\"Oh, um, nothing.  George just seems to have this idea I have a crush on you.\"  Evan stared at the floor when he spoke.\n\n\"I know.\"  Evan outright blushed and was near panic at my words.  \"That's okay.  I'm flattered.\"\n\nIt seemed to be an awkward moment for Evan.  He quickly tried to change the subject.  \"You said there was an urgent matter sensei?\"\n\n\"Yes.  I assume you still have the key to the dojo if you've been teaching classes, correct?\"\n\n\"Yes I do.  Did you want it back?  I apologize if I overstepped my place.\"  Evan appeared anxious.\n\n\"No, you've done well.  Thank you.  I was hoping for a ride over there so I can get clothes and my alternate weapons.\"\n\n\"Weapons?  Now?\"  Evan curiously asked as he glanced out the window to verify darkness had indeed swept across the sky.  \"Are you in trouble?\"\n\n\"Grant is.\"\n\n\"I want to help.\"  Evan firmly announced.\n\n\"It's not your fight.\"\n\n\"Sensei, you always tell us, individually, we are one drop.  Together we are an ocean.\"\n\nI stood speechless.  The first time in a long time.  Evan used one of my favorite quotes by Ryunosuke Satoro.  When I tell my students quotes to help them through life, I don't expect them to be thrown back at me.  \n\nEvan had a big smile, proud he got the best of me just once.  \"Here's a shirt, shorts, and a belt.  I know they won't fit, but at least you'll be covered.  We can argue in the car.\"\n\nWe went to the dojo and I changed first and then turned my attention to my wall of weapons.  I grabbed a katana and wakizashi and strapped them to my back.  I then put a rope with 10 hira shuriken (throwing stars) over my shoulder.\n\n\"I thought you didn't like those.\"  Evan grabbed his staff off the wall.\n\n\"I don't like to use them.  They lack the elegance of being in close range combat like hand to hand, a sword, or your bo staff.  You can't look your opponent in the eye and give them the respect they deserve as an equal from a distance.  It's the same with a gun.\"  I finished by grabbing two pairs of binoculars and placed them in a pack.  \"I'm using them because I made a vow and intend to uphold it.\"\n\n\"So it's true what they say about a sacred oath and the Akita clan.\"  Evan paused.  \"Can I hear it?\"",
        "I turned and looked him dead in the eye.  \"It wouldn't be sacred if I told you without meaning it.  Besides, I already made my vow to Grant.\"\n\n\"Fair enough.\"  Evan was disappointed.\n\n\"I'm ready.\"\n\nWe parked near the back entrance of a business sky rise located across the street to the Dunesberry Hotel and made our way to the roof.  It was time to gather intelligence.\n\n\"Wow, that woman is really pissed off.\"  Evan let out a chuckle.  \"She's yelling at everyone.\"\n\n\"That's Grant's mother.\"\n\nEvan lowered his binoculars to look at me.  \"Wait, Grant's mom is holding him hostage?\" \n\n\"Yes.  She doesn't like Grant and she will kill him.  I saw it in her eyes.\"\n\n\"What a shitty parent.  Please forgive my language sensei.\"  Evan went back to looking through the binoculars.  \"I wonder what she's saying.\"\n\n\"She said she's leaving to go back to L.A. in an hour and she's giving them two days to clean up this mess.\"\n\n\"How do you know what she said?\"\n\n\"I'm reading her lips.\"\n\n\"Really?\"  Evan looked over at me again.  \"That's a useful skill.  And what mess is she referring to sensei?\"\n\n\"Me.\"  I now looked at Evan.  \"This means we make our move in an hour and a half.  I'll go in.  Your only job is to get Grant out.  You wait in the hall and I'll send him to you.  Go to your dorm and I'll meet you there.  Understand?\"\n\n\"Yes sensei.\"\n\nRight as Samantha left, we made our way to the receiving door entrance of the hotel.  I'm sure there would at least be one man stationed in the lobby.  I walked calmly and casually to the employee's elevator.  Evan was two steps behind and the exact opposite.  He was fidgeting with one hand on his bo staff; ready to pull it from its sheath in a moment's notice.\n\n\"Relax Evan.  You're acting as if we're going to try to free someone from being held hostage by his own mother.\"\n\n\"I'm nervous.  I keep going over the different possibilities of what's going to happen and I keep coming to the same conclusion.  We are not...\"\n\nI cut him off.  \"Evan, if you will feel you will lose before a battle, then you will.  Never go into any situation with a poor mind.  You will need your wits about you.  Always be positive and trust your training.  That's why we work so hard.  If we need to use it, it's there.  Besides we know there are eight of them and where they are located at.\"\n\n\"Eight?  I counted six in the room.\"\n\n\"Yes, but based on a previous engagement, they tend to have two men standing guard outside the door.\"\n\n\"So you've dealt with them before?\"\n\n\"Yes.\"  The elevator beeped announcing we arrived at the top floor.  \"Wait here and keep this elevator on this floor.\"  The doors opened.  I took a breath and turned into the hall; unleashing four hira shuriken.  Each hit their mark, one in the neck at the vocal chords and another to the body of each man.  Each let out a stifled groan as I darted down the hall to brace the bodies so they wouldn't make a loud thud.  I laid them down, closed their eyes, and bowed.  I gave each the respect I was unable to show them had this been a proper duel.  I located the electronic key card from one of the men and put it in the slot.  I drew my katana and put my hand on the door.  Grant should be on the couch.  Four men at the table behind him, eating.  One sitting in the chair to the right of Grant.  The last man was aimlessly pacing.  I won't know his precise position.  One more deep breath and I went in.\n\nI went immediately for the man in the chair while locating, then throwing two hira shuriken at the pacing man.  I jumped on the sitting man's legs and as I crouched I buried my katana into his chest.  The three men at the table stood and reached for their guns.  Where's the fourth man?  I sprung off of the dead man and drew my wakizashi.\n\n\"Grant get down!\"  Grant immediately complied, lying down on the floor in the fetal position with his arms lifted to cover his head.  \n\nI landed amidst the three men, and we nearly formed a circle.  I jumped again as a multitude of bullets riddled the air where I used to be.  I did a mid air somersault and extended all four of my limbs.  I sliced my katana at the man on my left, cutting off his arm.  I threw my wakizashi and it stabbed the man on my right, piercing his heart.  My legs thrust into the face of the man in the center, knocking him back into the table with a broken nose.  I landed on my back and felt the stitching I had their rip open.\n\n\"Grant, get out now!\"\n\nI let out a loud yell as I flipped back up and did a round house kick with my left leg into the man now missing an arm.  He went down immediately.  This put me into position to forcibly apply my right elbow into the nose of the now standing, albeit barely, man who was in the center.  His broken nose is now shattered and he collapsed into a heap on the floor, unconscious from the pain.  The bathroom door opened from behind me.  The missing fourth man.  I turned and faced him.  It was the same man from the white room at the hospital.\n\nHe dropped his gun.  \"Don't kill me, please.  Remember me?  I told you he was here.  I helped you.\"  The man was slowly slide stepping toward the door.  \"Please.  I quit.  I'm done.  Just let me go.\"  He pleaded.\n\nI put my katana back in its sheath.  \"I never want to see you again.\"\n\nHe turned and ran.  As he hit the door, the end of a bo staff was planted in his face and then swung around and took out his legs.  That man's second concussion of the day.\n\n\"I was letting him go Evan.\"\n\n\"You were?\"  Evan turned in from the hall with a smile on his face.  \"Sorry, kneejerk... \"Evan froze in his tracks.  \"Oh my God, Grant!\"\n\nI bolted and jumped over the couch that now more closely resembled Swiss cheese.  I landed next to him and immediately cradled his head.  He was shot twice, once in the lower left side of his back and the second just under his left shoulder.\n\n\"Grant, tell me what to do.  Tell me how to fix this.\"\n\n\"It's over Kisara.  There's nothing that can be done.\"  Grant's voice was barely audible.\n\n\"I'm sorry I failed you.\"\n\n\"You didn't fail me.  It was my family who failed me.\"\n\nI started to cry.\n\n\"So this is what it takes to finally get you to show an emotion.\"  Grant let out a weak chuckle.  \"I love you.\"\n\n\"I love you too Grant.\"  I set his head down.  \"You will not be going alone.\"  I drew my katana.  \"Upon my code of honor with the discipline of my being, I am bound to protect you with my life and sword.\"  I turned my katana around and lined it up with myself, intent on committing sepukku.\n\n\"Wait.\"  Grant tried to grab at my katana, and then coughed twice.  \"You can't do that to our unborn child.\"  It was Grant's final words.\n\n\"Sensei, we have to leave.\"  Evan carefully removed the katana from my hands.  \"The police are coming.\"\n\nIn fact the police were coming as I heard the sirens for the first time.  Evan had rounded up all the hira shuriken, my wakizashi, and now he had my katana.  He took the sheaths from my back and put them on his.  He carried everything, including me in his arms.\n\nI was in a daze, even as Dr. Harvey Camper, a highly respected colleague of Grant's, re-stitched my wound at Presbyterian Hospital.  I kept holding my stomach.  Was it true?  Grant had taken care of my gunshot wound.  He would have taken blood work.  My menstrual cycle was supposed to start two days ago, but with all the drama and stress, I can understand why it would be late.  Do I even deserve to be a mother?  I failed after all.  I've dishonored myself.  I so badly want to commit sepukku.\n\nWe made it to a hotel.  Evan and I are sharing a room with two beds.  He's carried me this whole time until he finally placed me lovingly in one of the beds.  He pulled up the bedspread and took my hand.\n\n\"Kisara.\"  Somehow, Evan knew not to call me sensei anymore.  \"I am truly sorry about Grant.\"  He began to lightly caress my hand.  \"I want you to now I am here for you.  I'll help you get through this.\"\n\nI began to cry.\n\n\"Upon my code of honor, with the discipline of my being, I am bound to serve and protect you with my life and bo staff.\"\n\n\"Evan, no.  You don't know what those words mean.\"  I managed to say through the tears.\n\n\"Yes I do.  You made it very clear tonight what those words mean.\"  There was a determined look in his eye.  \"Now I've said it, I mean it, and my first act upon it is to try to get you to sleep.\"\n\nI let out a small sigh.  Such a meaningless act.  I don't deserve devotion like this.  I am unworthy.  That's what the vow is about.  Finding someone worthy.  Someone like Grant.  I am not.  I don't even deserve to sleep.  \"Evan, don't throw your life away.  Not for me.\"\n\n\nComing soon, The Finale: Chapter 3 Full Circle"
    ],
    "authorname": "fgmntfmgnshn",
    "tags": [
        "kisara",
        "grant",
        "martial arts",
        "evil mom",
        "evan",
        "katana",
        "bo staff",
        "hostage"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/more-than-words-ch-02"
}