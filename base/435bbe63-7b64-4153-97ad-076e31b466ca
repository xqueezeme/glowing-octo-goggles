{
    "title": "Miracle on RR34 Ch. 01",
    "pages": [
        "Disclaimer: All characters portrayed indulging in sexual activity are 18 chronological years of age or older. Any resemblance between these fictional characters and actual people is completely intentional and meant for parody. Reviews are welcome, flames will be ignored. \n\nThis was done as a request for someone and it's dedicated to them. They know who they are. \n\n*** \n\nGinny Hale sighed forlornly as she sat on her chesterfield in the dim room, the only light provided by the crackling fireplace and some scented candles spread around to make the house smell like gingerbread. She'd made gingerbread cookies earlier, but they were predictably burnt and now her kitchen smelled like a Christmas elf's ass. \n\nShe took another sip of red wine from her oversized glass, unable to decide who or what to be mad at- the weather, for bringing this godawful blizzard on Christmas Eve, her so-called friends for ditching her after she'd gone to all this work to put together a nice party, or herself for going crazy and buying this (admittedly nice) chateau way out here in the boondocks. \n\nStill relatively new to her negotiator position, Ginny had landed a huge deal for the company she worked for and the payout bonus was one of the biggest ever seen in-house. Though she had an office, she had often worked from her cramped apartment downtown, where a glorious chaos only she understood reigned. But the payout had been large enough for her to purchase a very pretty home in the country, not more than ninety minutes from work. Her boss was so pleased with the deal that he said she only had to come in once a week, to pick up whatever she needed to work on. \n\nIt had seemed like a great idea at the time, but now she found she was quite lonely. Few people were will to put forth the effort to come out and visit her. In fact, only three had since the summer when she bought it. Hell, even her boy-toy, Chad from Accounting, could not be bothered and was now just fucking Lily in the secretary pool instead. \n\nBing Crosby was singing 'White Christmas' to her while she moped. The big bay windows to her back porch showed the fury of the storm outside. Driving snow had been battering the countryside for two days now and her boss had called her to just stay safe and not try to come into the city. \n\nHe was a nice old man and she liked him. He'd actually taken a chance and given her the job, after she'd fucked him. She hadn't invited him to her little soiree, because his miserable old bat of a wife was hovering around him constantly these days, certain he'd been tipping on her. But even without Old Man Reese, she'd invited upward of twenty people and none of them had shown. Not even Claire, her best supposed friend, had made it out. She was probably too busy being pinned and screwed by her boyfriend anyway, Guido or Nunzio or whatever his name was. \n\nDean Martin came on, singing 'Marshmallow World'. Normally this was one of her favourites, but tonight it just reminded her that she was alone for Christmas. Again. With another sigh, she drank the rest of the wine in her glass and reached for the bottle, turning it over. \n\nIt was empty. Damn. She'd have to open another one. \n\nShe walked slowly into the kitchen, wearing her ratty old fox-themed footie pajamas, having decided that if she didn't have to dress up for anyone, she was dressing at all. She took a deep drink of spiked egg nog from the jug of it she'd prepared while she found another bottle of zinfandel and burped very loudly. She wrestled the cork off of the bottle and poured most of the contents into her oversized glass, muttering that she didn't have to answer to anyone about what she did, she was a big girl. She slumped back down on the couch while John Lennon asked her what she'd done for Christmas from the stereo system. \n\n\"Up yours, John...\" she said testily as she drank more wine. \n\nShe stood unsteadily, blinking for a moment to try and clear her head. She might have had a bit of a wine fog going on, since she'd nearly polished off two bottles of Old Vine Zinfandel in under two hours. Convincing herself that walking was not a bad idea, she tottered over to the bay windows, reaching a hand out in front of herself to make sure it encountered the glass before her face did. \n\n\"Will you look at that shit out there...\" she muttered to no one in particular. After all, there was no one around to hear her. \n\nWell, almost no one. \n\n\"Hi, Oatmeal,\" she said sweetly, grinning lop-sidedly at the bearded dragon that sat in a terrarium near the bay doors. \"Looks like you're my Christmas date... again...\" \n\nThe tiny lizard said nothing but assumed a darker shade of purplish brown. \n\n\"Same to you too, bugface.\" Ginny muttered sourly, annoyed at being spurned by a reptile with a brain smaller than a sugared peanut. She lumbered back to the kitchen, trying unsuccessfully to eat several pieces of the Turkish Delight she'd tried to make, but they were sticky and runny, most of the reddish-pink mess ending up stuck to the front of her pajamas. \n\n\"Son of a fucking reindeer!\" she spat, attempting to remove the pajamas, her sticky fingers having trouble with the zipper. She finally kicked the thing off and left if in a corner of the kitchen, now wearing nothing except her panties and a halter top. She stomped back into the spacious living room, thoroughly annoyed. While the music played, she looked around for something to do, taking another pull from the egg nog jug she'd brought with her. \n\nThe hot tub. \n\nIt sat near the bay windows, set into the floor and was large enough for five or six people. She'd been hoping that maybe a few people of the dozens she'd invited would show and maybe they could have a fun pool party. She'd even told everyone in the invitations to bring their swimsuits. \n\nBut of course, no one showed. She was beginning to suspect she could live in Buckingham Fucking Palace and still no one would come to see her. This was, literally, the fifth Christmas she'd spent by herself. The timing for friends never worked out and her parents were always off in Monaco or some such place, avoiding the weather. Her mom had already called earlier that night, so she wouldn't hear any more from them for a few days now. \n\nShe sighed yet again and pulled off her underthings, stepping into the water. She was drunker than she wanted to admit, though, missing her footing, squealing and tumbling into the tub with a splash. Ginny came to the surface, sputtering and hissing in outrage. Why couldn't anything work out? Oatmeal just stared at her impassively. \n\n\"You win this time, gravity...\" she growled, displeased with her inelegant entrance. Well, at least she'd been smart enough to put down the jug of nog before trying to get in. She turned on the jets and retrieved her beverage, taking another big pull as the tub rumbled to life. Ginny laid back her head against one of the padded rests and tried to relax, to let her frustrations go. \n\nShe turned on the jets and allowed one to massage her lower back while sipping at a glass of wine. She tried to put the frustrations of the holiday behind her, to let go of the feelings of rejection and somehow not belonging. \n\n\"Why did I but this new fucking home if no one was interested in visiting? Everyone said they thought it was so great, but months later, still no visitors. Do I really not matter that much?\" \n\nIt annoyed her to think not only that she was alone, but that doubtless most of the people who had ditched her were at home getting laid. Claire was doubtless face down and ass up on her bed, getting plowed from behind by Guido. Even Mr Reese, the old geezer, was probably getting some, either from his wife or maybe one of his secretaries. \n\nShe sighed heavily and sat up, putting her now-empty wine glass aside and deciding that just because she was alone on Christmas Eve didn't mean she wasn't owed at least one good orgasm. She leaned forward and rested her forearms on the padded edge of the hot tub, positioning herself so that one of her jets, the one she'd named 'Juan', was right behind her. She felt the flow of water begin to caress her and she rested her head on her forearms as she wiggled further back, feeling the jet more strongly now as it pushed against her ass and her pussy. With a sigh, she found the perfect distance and pressed her face down into her arms, letting Juan work his magic. \n\nWater pressure massaged her netherlips, strong enough to part them and to tease her clit, sending thrills through her. She shuddered and sighed loudly, forgetting, for now, how much men sucked. She bit the knuckle of her index finger, lost in reverie. \n\nGod, if only it were a man fucking her. \n\n\"Alone... on fucking Christmas... where's- ah!- where's the justice in that?!\" \n\nShe was sweating now and panting as the relentless jets battered her womanhood, the sensations overhwelming her steadily. She clenched her teeth and her fists, straining as she fought to hold on a little longer. \n\nShe moaned very loudly, her whole body shaking as Juan delivered a wonderful orgasm. She panted and groaned shamelessly, knowing that no one was around to see her in her pent-up, frustrated lust, expending it on her jacuzzi jets. The scintilating lights behind her eyes, however, were over all too quickly and the climax subsided, replaced by a juddering sensitivity that made Juan's caress too much to bear. She collapsed against the edge of the hot tub, moving her ass away from the jet. \n\n\"Alone... again...\" \n\nShe may have needed the orgasm, but it did nothing to improve her mood. It didn't help that the song 'This Christmas' by Shoes had begun playing as the cumming ended. When it finally felt like her legs would work again, she turned around and slumped into a corner of the tub, as far from Juan as possible. \n\nGinny stayed still for some time, until her feet and fingers felt that annoying level of pruny that made everything awful to touch. With the heat of the water and all the alcohol she'd drunk, she was feeling rather light-headed, so she turned off the stereo and shut off the lights. She found a plate of her fucked-up and burnt gingerbread cookies and left them on a table near the fireplace along with the jug of nog before beginning to head upstairs to bed. \n\n\"Yeah. Fuck this day. And fuck tomorrow too. Maybe if I stay drunk enough it'll just fly by. Fuck Christmas.\" \n\nThe second floor was an open space in the middle, looking down onto the main floor. A set of stairs led up on either side and the bedrooms were spaced around the gallery. She'd loved the design when she bought it, but this only increased her frustration when no one ever came to visit. \n\n\"Gorgeous fucking house... ten acres of beautiful nature filled with deer and ugly-ass wild turkeys... a fucking pond people could skate on... shit, I even found a patch of landrace back there! What's not to love about my new home? Why aren't people shitting themselves in jealousy?\" \n\nShe reached the master bedroom, sighing at how big it felt since she had no one to share it with. She stood in front of the mirror, looking at her naked body and sighing. She was trim and fit, with nicely-sized boobs, she kept her pussy shaved smooth and her full lips were simply made to suck cock. Her skin was fair and even and her dark brown hair was long enough to pull on if you were fucking her ass or taking her from behind. So what the hell was wrong? \n\nThe bed was certainly big enough for two (or maybe her and two guys who didn't mind getting close), but she plunked herself down into it and stared at the ceiling, waiting for the room to stop drunk-spinning. It took longer than she wanted it to, but things finally slowed down an she breathed deeply. \n\nShe reached over with her hand and fumbled around inside the drawer of the nightstand. She finally withdrew an elegant glass dildo, a barely opaque white with bright red stripes curling around it to simulate a candy cane. It had been a Christmas gift from Claire, who had jokingly given it to her until she found a man for herself. \n\nThat bitch. \n\n\"Well, Frosty,\" she sighed, examining him. \"Looks like it's you and me tomorrow. I promise to not get out of bed except to go to the bathroom or get more booze, okay? Because I'm here for you...\" \n\nAnd with that she kissed the dildo and put it aside. She turned out her lamp and sighed deeply as she lay in the dark, waiting for sleep to take her. \n\n\"Fuck Christmas...\" \n\n*** \n\nA noise from downstairs. Her eyes snapped open. She was sure she'd heard something. Her heart pounded in her chest. She took deep breaths to try and calm herself, reasoning that she'd been drunk and it might just be hangover noises. \n\nMaybe just something like branches scraping on the roof or across the walls? \n\nGinny felt a flush of anger and slowly rose, getting out of bed and putting on a plush yellow robe. There were definitely sounds downstairs. She grabbed her rape whistle and her high-school field hockey stick off the wall before quietly opening the door and proceeding out of the room. Her cheeks flushed with fear and anger. How dare someone invade her house? And in this fucking weather! \n\n\"Burglars? Ruffians? Escaped cons?\" \n\n\"Well, at least if they see you they might have their way with you and break your dry spell.\" \n\nShe shook the vile notion from her head, wondering where the hell that'd come from. Could she be that desperate to get laid? \n\nGinny walked as quietly as she could, hearing noises on the roof. Raccoons? Looking to get in from the cold? \n\nFucking trash pandas. \n\nShe rounded the corner of the gallery and put her foot on the top step, her hockey stick ready. She crept down the stairs, still hearing the noises. They seemed to be coming from her living room. Her eyes narrowed as she tried to identify anything that might be amiss. \n\nThen she saw him- a symphony of red trimmed in white, the huge ass swaying back and forth as the intruder was bent over her at the base of her Christmas tree, doing God only knows what to it. He seemed to be humming to himself. \n\nShe walked up silently until she was maybe ten feet away from him, her hockey stick over her shoulder, ready to swing. He didn't hear her or took no notice of her. \n\n\"I don't want to hurt you,\" she growled through clenched teeth. \"But you'd best get the fuck out of my house or I'll hit you so hard Google won't be able to find you.\" \n\nThe person in red paused in their activities and then stood up slowly. After another moment's pause, they stood up and turned around slowly. He was slightly taller than average and quite a bit fatter than societal norms allowed. He had a fat face with dancing blue eyes and red cheeks. Beneath the tapered red hat was long, silvery-white hair and a very full beard and moustache. The intruder looked at her and grinned. \n\n\"Shouldn't you be in bed?\" he asked with a voice that could only be described as jolly. \n\nGinny said nothing. She seemed to be rooted to the spot. She wanted to say something, anything, but she seemed to have been robbed of the power of speech. \n\n\"W- who...\" she finally managed to stammer. \n\n\"Yes, Virginia,\" the visitor said quietly but pleasantly in a soothing voice. \"There really is a Santa Claus.\" \n\nShe blinked and shook her head, trying to articulate a coherent thought. The big man in red chuckled, clearly amused by her predicament. \n\n\"Your egg nog was very good,\" he mentioned as he walked forward a little. \"Your cookies needed a little work, but I appreciate the effort. Maybe a cookbook next year?\" \n\n\"Stay still!\" she snapped, suddenly coming out of her stupor and holding the hockey stick behind her head as if she was winding up for a hit. \"I'll deck you, old man!\" \n\n\"Oh, there's no need for that,\" he said cheerfully, totally unconcerned by her threat. \"It's been a rough year for you, hasn't it, Ginny?\" \n\n\"Why do you know my name?\" she asked, her eyes narrowing in suspicion. \n\n\"Of course I know it,\" the man claiming to be Santa said jovially. \"I'd be pretty lousy at my job if I didn't, right?\" \n\n\"If you're really Santa,\" she said tightly, still not understanding why she hadn't knocked this guy's head off his shoulders yet. \"Then what was I doing the night of October seventeenth last year?\" \n\nHe tilted his head to the side a little and pursed his lips. \"Are you sure?\" \n\n\"C'mon, you haven't got all day.\" \n\n\"Very well,\" he said, sighing. \"You were sitting in McPhearson's Pub, waiting vainly for Greg from IT to show up, because you'd given him a blowjob in the bathroom earlier that day and promised him more. But he went off with Becky from Accounts that night instead of meeting up with you.\" \n\nShe blushed furiously at the memory. \"I... that wasn't the day I meant! I meant the sixteenth!\" \n\nHe shrugged. \"You had the day off and were really frustrated. You slid a condom over that very field hockey stick and used it on yourself, just to see what it was like.\" \n\nGinny dropped the stick very suddenly. \"How the hell do you know that, you perv?\" \n\nThe man shrugged. \"I know all about you, Ginny. And every other boy and girl in the wor-\" \n\n\"Don't give me that horseshit!\" she hissed, glaring at him. \"I had too many Christmases where I didn't get what I want to buy into that cockamamie story!\" \n\n\"Well, you weren't exactly the most exemplary child, were you?\" he reasoned. \"I mean, you weren't horrible, it's not like you were out kicking puppies into woodchippers, but you spent more time in the naughty column that the good column, didn't you?\" \n\n\"What did I ever do that was so naughty?\" she demanded hotly, her fists bunched up at her sides. \n\n\"You and your brother could get rather friendly, couldn't you?\" the man calling himself Santa pointed out. \n\nShe faltered for a moment. \"Lots of siblings play doctor. And those atomic booty bombs where I kept jumping in the air and landing on him were just playful.\" \n\n\"While naked?\" Santa asked, raising a bushy white eyebrow. \n\nGinny blushed. \n\n\"But that wasn't what landed you on the naughty list,\" he added. \"What got you blacklisted was that you lied about doing your homework or cleaning your room while you were messing around with your brother. Your mom and dad would ask you to do your math and you'd slip away to play doctor instead and tell them you'd finished your homework after. Lying is naughty, right?\" \n\n\"Whoah, hold the phone here,\" she said loudly, holding her head as if she was suddenly dizzy from a revelation. She didn't seem to notice that her robe had opened slightly, exposing her cleavage. \"Are you fucking kidding me? Fibbing to my parents kept me from getting the gifts I wanted?\" \n\n\"Were the rules unclear?\" Santa asked. \"I thought the songs on the subject were so easy to follow.\" \n\nGinny pinched her eyes in exasperation and then scowled at him. \"I'm drunk,\" she concluded, trying to convince herself none of this was real. \"I'm drunker than Sarah Palin and you're not really here. I'm still in bed and this is all bullshit.\" \n\nSanta shrugged. \"I was putting stuff under your tree until you arrived and enjoying the nog. I won't mind if you go back to bed.\" \n\n\"No, you're not getting off that easily,\" she said in annoyance. \"You broke into my house in the middle of the storm of the fucking century and I want answers, dammit!\" \n\nHe shrugged. \"Fair enough. Ask away.\" \n\nHer eyes narrowed again. \"Aren't you on kind of a time crunch? Unless I'm the last person on your delivery list, don't you still have a shit ton of houses to visit? Say, a few hundred million?\" \n\nHe waved it off. \"I've got it covered, I promise. I have all the time in the world for you, Ginny. I always have.\" \n\n\"What, so you sub-contract out?\" she said snidely. \"Got FedEx making the rounds for you? Or maybe your 'Elves'?\" She mentioned the last bit with air quotes. ",
        "\"Goodness, this has been a bad year for you, hasn't it?\" he said sympathetically. \"But to answer your question, I am capable of being many places at once.\" \n\n\"Oh, so now you're the Kwizatz-Haderach?\" she asked archly. \n\n\"Hey, it's not just cinnamon I put in my Christmas cider.\" Santa chuckled. \"It's rather complicated to explain.\" \n\n\"So do you, like, clone yourself?\" she asked, her guard seeming to slowly come down. \n\n\"No, not at all,\" he said, shaking his head. \"It involves Cherenkov Radiation, a Holmes field, a Gellar field and, to quote a friend of mine, 'a lot of wibbly-wobbly, timey-wimey... stuff.'\" \n\n\"So it's some sort of deep quantum shit?\" she asked, her body finally relaxing. \n\nHe nodded, smiling. \"Yes, it's very temporal and quantum. I can be many places at once. It's why I don't have to pay for billions in window repairs every year by going supersonic around the world.\" \n\n\"So even while you're talking to me, you're delivering presents?\" she asked, the sheer depth of the conversation hitting her now. She walked over to a stool and sat on it. \n\n\"Like I said, it's difficult to explain without breaking out the chalkboard and calculator,\" he answered. \"The mangnetic lines between the poles help, especially the one that emanates from the Fortress of Solitude.\" \n\nGinny blinked. \"Fortress of Solitude? As in Superman? You're friends with Superman?\" \n\n\"Of course not!\" the jolly man laughed. \"There's no such thing as Superman, silly, he's a comic book character. Had you going, though.\" \n\n\"Holy shit, Santa's a troll,\" she exclaimed, looking at him in bewliderment. \"Well, okay, let's assume that this is all real and not a vivid hallucination resulting from a brain tumor. If I've been such a brat all these years, how do I make up for it? How do I get off the naughty girl list?\" \n\n\"Well, a little restraint would be a start,\" Santa suggested. \"I'm not saying go out and become a Carthusian nun or a Buddhist priestess or anything, but you might try laying off the rampant promiscuity.\" \n\n\"Why is that so bad?\" she demanded. \"What's so wrong with wanting to get banged?\" \n\n\"Nothing,\" he said simply. \"But inevitably you get yourself into some kind of weird situation and end up lying your behind off and lying is a naughty thing to do. So try keeping your legs bolted together a little more.\" \n\n\"Really...\" she said, clearly not impressed. \"Celibacy lessons from Santa Claus. Now I've heard everything.\" \n\n\"According to my report here and speaking frankly, it's taken guys a lot less attractive than me a lot less effort to get you out of your clothes.\" Santa mentioned. \n\n\"This coming from a guy who could clearly use a few P90-X sessions!\" she shot back hotly, standing up, her robe opening further as she stomped toward him. \n\nHe looked down at himself for a moment and guffawed. \"Oh, right, I keep forgetting about that... hang on...\" \n\nThe man held his hands out to his sides and began to glow. The luminous display lit up the room progressively and Ginny held her hand in front of her face when it became too bright to look at for several seconds. When the light finally died away, leaving them once again in the softly lit living room, Ginny gaped in shock at what she saw. \n\nHe was tall, powerfully built, with chiseled muscles, an eight pack and flawless, healthy skin. He'd removed his coat but the red pants remained, stretched tight over muscular thighs. Long, wavy, copper-coloured hair fell past his shoulders and the full beard was reddish-gold. The sapphire-blue eyes stared down at her, still glittering with mirth. \n\n\"Holy Jesus on a pogostick...\" she breathed, her voice little more than a whisper. \"You're a total lumbersexual...\" \n\n\"This is what I really look like,\" he said, spreading his hands out to the sides and showing her his body. His chest rippled as the muscles flexed with the motion. \"But kids react to the fat old man disguise better.\" \n\n\"I'll bet mothers don't,\" she murmured, coming forward as if compelled and reaching out to touch his chest and washboard abs. \"It's like you're Photoshopped.\" \n\nHe smiled as her hands caressed his abs. \"You make me want to not get off the naughty list.\" \n\n\"I think I know what you really want for Christmas...\" he said slyly. \n\nGinny paused and looked up at him in disbelief. \"Are you kidding?\" \n\n\"No, I can't lie.\" the man in red pants replied. \n\n\"I thought it was Superman who couldn't lie.\" \n\n\"Well, the writers had to get that idea from somewhere, I guess.\" Santa mused. \"In any event, if you want, you could end up on the good girl list by being rather naughty.\" \n\nShe stared at him. \"So... get laid by Santa for Christmas?\" \n\nHe shrugged. \"There might be some other goodies in the bag for you, but I think we both know what Ginny really wants and needs for Christmas.\" \n\n\"This is crazy, this is crazy, this is crazy!\" she thought to herself, wrestling with her sensibilities. \"If this is all just a dream, then I can fuck hunky Santa and have no regrets. If this is real, I can fuck sexy Santa and remember it in the morning! It's win-win!\" \n\n\"Well, this is super-easy,\" she declared. \"Santa, I want you to fuck my brains out for Christmas.\" \n\n\"With pleasure, Ginny!\" he said, laughing merrily. \"Whatever you like, however you want it. I have to keep the kiddies happy.\" \n\n\"Good, but just don't say 'kiddies' anymore, because that's kinda creepy,\" she said, throwing her caution to the wind. She knelt down in front of him, putting her hands on the oversized silver belt buckle and undoing it. Letting it drop, she put her fingers on the front of his pants, caressing them over the crotch. Her mouth went dry. \"That'd better not be a secondary present sack you're teasing me with...\" \n\nGinny hooked her fingers into the top of the velvety pants and pulled them down, revealing his manhood. She drew in her breath slowly, her eyes widening. \n\n\"Jesus,\" she muttered. \"You're hung like a fat kid's Christmas stocking...\" \n\n\"Thanks, I make due.\" Santa said cheerfully, watching her admire his cock. \n\n\"By the way, shouldn't I call you something else?\" she asked, looking up at him while her hand reached up to take his huge shaft, wrapping around it, barely. \"I mean, most people call you Santa Claus, but isn't your name Nick or Kris or something?\" \n\nHe shrugged again, grinning. \"Nick, Kris, Klaus, Pelznickel, Joulupukki, Kanakaloka, Dun Che Lao Ren, Weihnachtsmann, Swiety Mikolaj, Hoteiosho, Jultomten, I don't mind, Ginny. I just like hearing you say my name the way you think of me.\" \n\n\"Mmmmm, Santa...\" she replied, smiling as she stroked her hand along his shaft, eyeing it hungrily. How the hell was she going to fit that all in her mouth, forget her aching cunt? \n\n\"Ah, don't use that word,\" he chided, holding up a finger. \"Some words are still naughty, even when you're an adult.\" \n\n\"Stay out of my mind then, creeper.\" Ginny said as she leaned forward and swirled her tongue around the fat head of his cock. She flicked it around the tip and then slowly took it inside her mouth, tongue rolling against it. \n\n\"The hell? How can his dick taste like mint?\" \n\n\"Just wait til you taste my cum.\" Santa said, leering. \n\n\"Fine, but it better not taste like turkey gravy or we're gonna box.\" Ginny said as she pulled her mouth back for a moment. She pumped her hand gently along the shaft, studying her quarry intently. It was definitely the biggest cock she'd ever taken on, and the best-tasting. She'd been experiencing trippy magic all evening, maybe she could fit this monster in her mouth this one night... \n\nShe put the head back in her mouth and relaxed, slowly pushing down the shaft. She moaned as she felt him slide to the back of her mouth and then to her throat. She felt him tremble and lay a huge but gentle hand on the back of her head. \n\n\"Holy shit... I'm deep-throating Santa Claus...\" \n\nGinny took a deep breath through her nose and then tried to relax. Her whole body was tingling with excitement and the whole minty cock thing was throwing her off. Her tongue undulated along the underside of his shaft while the fingers of one hand formed a ring around the base of his cock and the other cupped his balls, fondling them. \n\nGinny was proud of her cocksucking skills and if there was anyone she ever needed to impress with them (aside from her 11th Grade math teacher), it was probably Santa. She calmed herself and began pulling her mouth back along his length, humming and letting her lips vibrate softly on his sensitive skin. \n\n\"Now I know why Mister Bondi gave you that A in math,\" Santa chuckled. \"You're a very naughty girl, Virginia.\" \n\n\"Mmmmm, only for you, Santa baby...\" she cooed as she pulled her mouth off his cock long enough to respond, stroking slowly and swirling her tongue around the head again. She then slid back down the entire length, moaning in pleasure. She could feel her nipples getting hard and her pussy was very, very wet beneath her robe. \n\nBoth his hands were on the back of her head now and holding her gently but firmly. She began to slowly bob back and forth, thrilled at how she was able to take this enormous beast of a cock all the way in her mouth. Sure, maybe there was some weird physics involved that compressed space and time or some shit, but she didn't care and he certainly didn't seem to mind. \n\n\"Mmmmmm, very good, Virginia...\" he said softly, stroking her hair. No one ever called her Virginia and she didn't know why it gave her a tingle when he did. His cock was very full and very hard now, like a pulsing iron rod covered in mint-flavoured velvet. She almost giggled at the thought of how crazy this all was. She really hoped it wasn't a dream. \n\nHer thumb began to squeeze along the underside of his cock as her hand followed her mouth up and down his length. The shaft glistened wetly and the mint was making her drool. She undid her robe and let it fall away, the air of the room kissing her flushed skin. Her hands now took hold of his powerful thighs and she began moving back and forth along his cock more quickly. She could feel his hands flexing in her long, dark hair, caressing her skin. \n\nBreathing through her nose, she moaned as she sucked ardently, her pussy almost aching with desire. She was hoping he would last long enough to fuck her when he went rigid suddenly and groaned, gripping her head tightly and his hips shuddering. Ginny's eyes widened as she felt him began to cum inside her mouth, spurting strongly. She began swallowing hastily, almost in a panic as Santa pumped his hips against her face. \n\n\"Holy shit! Fucking eggnog?\" \n\nHe kept cumming and she was sure she might actually drown when he pulled his huge cock out of her mouth and pumped it furiously in his hand, spattering her tits and stomach with his glitening load. She'd never seen so much cum in her life. It tingled on her skin. \n\nFinally, Santa relaxed, allowing Ginny to put her mouth back around his cock and suck the rest of his cum from him. He was sighing and breathing rather heavily, apparently having enjoyed himself. She eventually released him and smiled up at him wickedly. \n\n\"So,\" she cooed, winking while she gently pumped his cock with her hand. \"Am I back on the good girl list?\" \n\n\"Oh, I'd think so,\" he said, grinned. \"But it's not like I've given you your whole present yet.\" \n\n\"Jeez, you can still go?\" she asked almost in disbelief but also delighted. She really needed to be fucked hard now. \"Your dick taste like mint, your cum tastes like nog, your ass probably tastes like hot cocoa or nutmeg and you can keep it up all night?\" \n\n\"Up all night is kind of my thing, at least once a year.\" Santa said cheerfully. \"So how would you like for me to give you the rest of your present, Virginia?\" \n\n\"Well, golly, Santa,\" she mused, making a show of thinking while she stroked his cock. \"Since you seem to be the gift that keeps on giving, how about we just wing it?\" \n\nHe nodded and she stood up, keeping hold of his cock and gently led him over to the large chesterfield, hoping it would hold his rather muscular frame. She knelt on it, resting her arms along the raised back and smiled at him, wiggling her behind. She wouldn't believe how wet her pussy was. \n\n\"You gonna hurry down my chimney, Santa-baby?\" she asked, smiling slyly. \n\n\"I can't believe you just said that!\" he laughed jovially. He may not have been older, fatter Santa, but the laugh still definitely suited him. He stepped up behind her and took gentle hold of her hips. She could feel him press against her ass and she shivered in anticipation. He slid his massive cock up and down between her ass cheeks, teasing her until she was writhing in desperation. He seemed to know instinctively what she loved most. \n\nWhich only made sense since he was Santa. \n\n\"Ready, Virginia?\" he asked as he pressed the huge mushroom head against her sticky pussy. She nodded eagerly, unwilling to speak. He slid the head in, parting her lips and penetrating her. She groaned loudly as he began to stretch her inner walls. With a slow, steady push of his hips, he pushed the entire length of his cock deep inside her. It robbed her of her breath- she'd never felt so full in her life, even that one time she'd been so horny she'd fucked her parent's bedpost. \n\n\"Ah... uh...\" she gasped, eyes wide. The sensations were like nothing she'd ever experienced. His cock completely filled her to a delightful stretch that didn't hurt except in the good way. His iron shaft throbbed in time with her heartbeat. It was wonderfully warm but also strangely cool all at once, tingling, like mint again. \n\nHow the hell could her cunt taste peppermint? \n\n\"Language, Virginia...\" he chided again as he pressed in just a little bit further. By right his cockhead should have bruising her brainstem, but there was no doubt some weird phsyicis shit involved that she decided not to think about. She was getting fucked by Santa, after all. \n\nShe pressed her forehead against the back of the couch and tried squeezing her pussy around his titan cock or pressing back against him, squirming her ass against his hips. She shuddered in delight, loving how he felt inside her. His hands reached under her body and squeezed and massaged her breasts, sending delicious thrills through her. \n\nHe began to move slowly back and forth, pulling back until just the tip was inside her and pushing in steadily, almost robbing her of breath. She began to feel like a blacksmith's bellows very quickly. The feel of his cock sliding inside her, stretching her and touching deep inside in ways she hadn't known were possible... \n\n\"Ohmygod...\" she gasped, fingers digging into the back of the couch. \"You're tearing me apart and I love it...\" \n\n\"Only the best for my Virginia,\" he said, his ruddy cheeks taking on a flush tone as he fucked her. Her fingers squeezed the meat of her thighs and hips or flexed on her ass cheeks. His heavy balls slapped against her pussy as he drove inside her. Strong yet gentle, forceful and commanding yet accomodating. She felt dominated yet exalted somehow. \n\nHis hand wrapped in her hair and she groaned loudly as he pulled on it, craning her neck. She shuddered in pleasure, feeling her spine almost accordion as he thrust inside while pulling her head back. Her could feel the pulse of his cock through her whole body. Her nails scratched along the couch, almost clawing it. \n\n\"Gnnnnnn, you're gonna make me cum so fucking hard...\" she wailed, feeling the sweat forming on her skin. \"Oh mygawwwwwwwwwwd...\" \n\n\"You're going to make me cum hard too,\" he panted, thrusting deep inside, thumping his hips against her ass. \"You feel wonderful and tight, Virginia...\" \n\n\"Oh, God, he's gonna cum in me...\" she realized. \"Santa's gonna fucking cum in me and he's not wearing anything! Will my birth control work? Shit, will my kids always smell like mint?\" \n\n\"Oh, God, cum in me!\" she panted, thrusting herself back against him and grinding shamelessly. \"Fucking cum in me, Santa!\" \n\n\"Y'want me to cum in you?\" he hissed, his body beginning to tremble. It felt like his cock was getting bigger inside her. \"Want my cum in you?\" \n\n\"God, yes!\" Ginny squeaked, clenching her teeth. \"Fucking cum in me and make me scream!\" \n\nThey strained against one another desperately and then she cried out as a massive orgasm crashed over her. It battered her senses as she felt his hot-yet-tingly-cool cum bathing her insides relentlessly. Her pussy was making greedy sucking sounds as she came, her whole body shuddering almost uncontrollably. She squeezed and clenched and rippled her tight tunnel round him, reveling in the way he stretched and penetrated her ever more deeply. \n\nShe collapsed against the chesterfield, panting heavily, her body drenched in sweat. His massive, hard cock was still deep inside her, pinning her to him. She felt like she was made of lead, an exquisite exhaustion while pleasure crawled over her languidly. That was beyond anything she had ever experienced. \n\nBut he didn't seem to be done with her. His powerful hands took hold of Ginny and turned her around so she was squatting on the couch, her knees spread wide and her arms slung across the high back. She looked up at him in weary astonishment as he nestled himself between her legs and pressed his cock against her sopping pussy again. \n\n\"Auuuuuuuuuugh!\" she wailed as he slid deep inside her again, his huge cock splitting her wide. Her nails dug into the couch again and she clenched her teeth as she sucked in her breath. Ginny tried to regulate her breathing while Santa began sliding in and out slowly, looking down at her with those penetrating blue eyes. \n\n\"Jesus,\" she grunted, feeling almost like a rag doll in his hands, which gripped her hips. \"Gonna fucking kill me with that thing!\" \n\n\"Oh, let's hope not,\" he replied, thrusting into her strongly. \"I'm nowhere near done with you.\" \n\nShe gazed up at him, trembling as he fucked her good and hard. She bit her lip as he squeezed her thighs, before moving his hands up to squeeze her breasts, piching her nipples. She groaned shamelessly as the delicious sting electrified her senses. She tried to squeeze herself around him, baffled by how big he felt inside her. \n\nShe gasped and whimpered as he slapped her pussy lightly. She reached forward and raked her nails over his powerful chest, leaving red marks along the defined muscles. She ground her hips against him wantonly, thrilling to the look of pleasure on this face. \n\n\"Gnnn, fuckin' wreck me...\" she gasped, feeling another massive climax building inside her. \"Make me cum on that beautiful cock, Santa!\" \n\n\"I'll take 'Things Virginia Never Thought She'd Ever Hear Herself Say' for a thousand, Alex!\" he laughed. He reached down and took her ass her hands and pulled her closer, smiling warmly yet wickedly into her eyes as she sank further onto his cock, which penetrated her to the deepest depths yet. She could feel the head pressing against her womb. It didn't hurt, but she felt fuller and more strectched than ever. \n\nShe felt him squeeze her ass cheeks while he thrust into her. She wrapped her arms around his shoulders and held on tight, bumping up and down on his powerful thighs. She moaned loudly and bit his shoulder, trying not to shriek. She tried to squeeze herself around him again, finding that she could barely control her muscles, let alone fuck. \n\nShe bit down as the warmth spread through her, tears of pleasure in her eyes. He thumped his hips against her even more strongly and they strained against one another. Then he growled and released himself, pumping her once again full of his tingling cum. She shuddered and cried out loudly, her head spinning from the unreal ecstasy. Crushing herself to him, Ginny held on desperately, like a ship battered by an unrelenting storm. ",
        "They both slumped onto the couch, breathing heavily. She felt small and almost cocooned in his embrace. She was covered in a heavy sheen of sweat and could feel the thrilling tingle of his cum trickling out of her pussy. It wouldn't be a stain on her couch, it was a mark of honour. Their hearts pounded in rhythm as the orgasm passed over them and slowly flowed away. \n\n\"Holy shit...\" she whispered, her body still limp in his arms. \"I think you've ruined me for sex. I should be mad...\" \n\n\"You have to admit, it makes sense that I'm better at gift-giving than anyone else on the planet.\" Santa reasoned, smiling and stroking her hair while she sat in his lap. \"I'd say you were a little pent up there.\" \n\n\"Mild understatement,\" she moaned, finally raising her head and smiling up at him. \"Thank you, first of all. That was the best thing I've ever felt in my life.\" \n\n\"I aim to please,\" he said cheerfully, caressing his thumb across her cheek and enjoying the shining look in her eyes. \"Kinda my thing, after all.\" \n\n\"So,\" Ginny purred, walking to fingers up his broad chest. \"Is there a Mrs Claus?\" \n\nHe shrugged. \"There has been, of course.\" \n\nShe paused suddenly and looked up at him, hersmile replaced by a deadpan look. \"What do you mean, there has been?\" \n\nHe seemed somewhat confused by her change in demeanour. \"Well, there has been a few in the past, of course- there was Seeki first, then there was Ahoop, followed by Annalina, then Layla, Martha, Juliana, Gretchen and Jessica, Santarina, Kasey, Mary...\" \n\n\"I see,\" she said stonily. \"You've had more wives than Elizabeth Taylor had husbands.\" \n\n\"Well, to be fair, they've been spread over a long period of time.\" Santa replied. \"And they were all special to me.\" \n\n\"So then I'm not special.\" Ginny said flatly. \n\n\"Well of course you are,\" he said, not understanding her mood swing. \"You're my Virginia.\" \n\n\"And Becky down the street is your Becky, and Sarah in the blue house is your Sarah and Hilda in Dusseldorf is your Hilda,\" she concluded. \"Everyone's equally special to you, aren't they?\" \n\nHe didn't know what to say. \n\n\"I'm sorry, I'm not being fair,\" she sighed. \"I just... well, I thought maybe this... y'know, tonight, was truly special. And clearly you're not good at lying.\" \n\n\"Well, no, not at all.\" Santa agreed, still holding her and wondering how he could comfort her. \"I can't lie.\" \n\n\"Like, literally can't?\" she asked, now curious more than anything. \"It's part of your genetic makeup that you can't lie?\" \n\n\"No, nothing like that,\" he admitted. \"But after spending centuries with kids and teaching them to alway tell the truth, I haven't tried telling a lie in so long I don't even know how to do it.\" \n\n\"You don't know how to lie?\" she mused. \n\n\"If I did, it wouldn't be the least bit believable,\" he said. \"Like, if I said right now that your breath smells wonderful and not like old eggnog and vomit, I somehow doubt you'd believe my lie.\" \n\n\"No shit,\" Ginny replied, giving him a stony look. \"You're a horrible liar. You've got the subtlety of a cement truck. Good thing you're Santa and don't have to date to charm a girl.\" \n\nHe held her close, hugging her tight to comfort her. She sighed deeply, still impaled on his hard cock, which showed no sign of abating. \n\n\"God, I can't believe you've still got wood after cumming like a fire hydrant three times,\" she said, her mood softening. She was having the best sex of her life, she reminded herself not to ruin it by being crazy. \"How long can you keep going?\" \n\nHe shrugged his muscular shoulders. \"How long do you need me to?\" \n\n\"Actually, it doesn't surprise me that's your answer.\" Ginny said, smirking. \"If you've got the time, I've got another itch that needs scratching.\" \n\nHe grinned. \"So you haven't broken in that hot tub yet, have you?\" \n\n\"Ooh, Santa...\" she purred, leaning in and biting his earlobe. \"Like you don't make me wet already.\" \n\nHe picked her up and carried her toward the jacuzzi, deftly turning it on with his foot and bringing it rumbling to life. He stepped down into the churning water, setting her one of the seats. As he stood up, she leaned forward and hungrily took his enormous cock into her mouth, sucking ardently. She moved forward and knelt in the water, her hands on his hips again or stroking his balls. \n\nHe picked her up bodily and turned her upside. Ginny squeaked in surprise at first but found his hips in front of her and began sucking again on his tool without delay. He buried his face in her pussy, tongue snaking deep inside her and she groaned gutturaly, Holding her in place with one powerful hand, her teased her taint and then pressed a finger into her ass. \n\n\"Jesus!\" she gasped, almost choking on his cock as he wormed the finger down into her tight tunnel. \"Oh, fuck! Your finger is bigger than some dicks I've fucked!\" \n\nShe attacked his cock again eagerly, bobbing back and forth like her life depended on it. She squirmed in his grip as he lashed her pussy with his tongue and fingered her ass. Her fingernails dug into his thighs and her knees locked around his neck. His cock throbbed in her mouth, still thrilling her with its unique and incredible taste. \n\nHe turned her around again and paid her on the edge of the hot tub, spreading her legs wide. She looked on wantonly as he pushed his tongue back inside her again. He gripped her thighs to hold her in place and she groaned and squirmed, squeezing her breasts and pulling on her nipples. Her breath came in ragged gasps as he drove her to the limit of her sensations. Ginny shook and thrashed as she cried out loudly, cumming on his face. He didn't let up, lapping at her essence eagerly. \n\nShe lay like a dead thing for several seconds before her chest began to rise and fall. Her eyes opened, gazing back at him. She couldn't feel her limbs, just floating on a tingling ocean of deep colours. Santa looked up at her and smiled, pulling his tongue out of her pussy and kissing her clit gently. She shivered at the touch. \n\n\"One hole left, Santa,\" she breathed, her body glistening. \"Got any left in you to perfect my Christmas?\" \n\n\"Always for you, Virginia.\" Santa said warmly, standing and raising her gently into a sitting position. He settled down into the water on one of the seats and then pulled her onto his lap, facing away from him. She moved her hips around until she found his rock-hard cock, waiting for her. She placed her puckered knot against it, giggling as she thought about what he was about to do to her. She took his shaft in her hand and held it steady while she sank down, very slowly. \n\nGinny gasped and shivered as the head pushed aside the tight ring of muscle, popping inside her. Then she sighed as she lowered herself, feeling his massive dick stretching her tight tunnel wide. God, she felt so full it was unreal. Finally, after what felt like an eternity, her ass cheeks pressed to his lap. He was all the way inside her ass and her held her closed as she settled back against him, purring in sensual pleasure. \n\n\"Mmmm, it's never felt this good in my ass before,\" she said softly, her arms reaching back to curl around his neck. She gyrated slowly on his lap, moaning softly. \"A gal could get used to this.\" \n\nHis muscular arms wrapped around her and caressed Ginny's body, massaging her breasts. She loved how she felt pinned to him. She had finally found the measure of her body and began to squeeze her tight ass around his cock. She squirmed in slow circles on his lap, wishing she had some music to fuck him to. \n\nHer stereo system suddenly came on and began playing 'It's Cold Outside'. She giggled and squeezed his neck gently at his thoughtfulness. \n\n\"You think of everything, don't you?\" she purred, lost in her pleasure. \"I can't wait to make you cum again.\" \n\nHe smiled wickedly and pulled gently on her nipples, causing her to groan at the welcome sting. She pressed her ass back into his lap, squeezing again around his throbbing shaft. The water bubbled and churned around her waist, the heat leaving her skin shining. She began to pant as she moved her hips faster, stopping the circular motions and started to move up and down, his cock sliding in and out of her. \n\nSanta took hold of her hips and let her bounce on his lap. Ginny leaned forward, gasping as she fondled her breasts, overcome with a liquid heat as his cock impaled her faster and faster. Water splashed around them as the fucking took on an almost frantic pace. Ginny had never felt anything in her ass like this before, nothing even close to this good. She could very easily become an addict. \n\n\"Gnnn, fuck!\" she grunted, slamming her ass down on him while one hand snaked down and began massaging her pussy and clit. His hands steadied her and helped moved her up and down. She could feel his hips trembling beneath her, his fingers flexing and squeezing her skin. \n\nHer panting became a long, drawn-out keening. She clenched her teeth, shuddering and straining as she tried to prolong the fucking... \n\nGinny screamed and pushed herself back against his massive chest violently, thrashing as she clenched his cock inside her ass while he came. His cream flooded inside her, the unreal hot-cool tingling transporting her. He growled in her ear, almost crushing her commparatively tiny frame against himself. \n\nShe collapsed, utterly exhausted, her chest rising and falling as the world spun around her. She felt him holding her gently, caressing her body in unique ways that seemed to... regulate her blood flow and nerve sensations, making the post-orgasmic bliss she was feeling last as long as possible. She felt herself smile and hum at his consideration, understanding this this is who he was and what he was meant to do. \n\nGinny then did something she almost never did during sex- she leaned her head back, pressed her lips to his and kissed him deeply and with great affection. She held it for as long as she could and then sank back into his embrace, sighing in contentment. \n\n\"Wish you were advertising for a Mrs Claus at the moment,\" she said softly. \"I could get used to this.\" \n\n\"I like things the way they are,\" he replied, hugging her. \"Every year I get to reward you for being a good girl. What could be better than that?\" \n\n\"True, I guess,\" Ginny agreed. \"I'm only human, all this sex could kill me.\" \n\n\"Hey, I'm human too, you know,\" he chuckled. \"Just because I'm immeasurably older than you and subject to quantum laws even my smartest elf couldn't explain doesn't mean I'm a member of some other species.\" \n\n\"Okay, that's fair, although I'd still fuck you if you were an alien or some extra-dimensional being.\" Ginny admitted. \"You've come in me a lot tonight, daddy. Do I need to-\" \n\n\"No,\" he said cheerfully. \"I'm not sterile, but you can't get pregnant unless I decide you will and I've never allowed it.\" \n\n\"I wonder what a Santa kid would be like,\" she mused. \"More like you or the mom?\" \n\n\"No idea,\" he confessed. \"There's not exactly a manual, so I've never taken a chance.\" \n\nShe slowly leaned forward and began to rise, shivering as she slid off his long cock and it popped out of her. She knelt and turned around to face him, not sure she could stand yet, looking up at his still hard member and giggled, pressing her finger against the head. \n\n\"Well, I think you can take him off duty, sir,\" she said sweetly. \"I'm pretty sure that I'm all fucked out for the night, if not the whole season.\" \n\nHe chuckled and let his cock soften, looking into her eyes and caressing his cheek. \"Hopefully that was what you needed for Christmas.\" \n\n\"Definitely, Santa.\" Ginny said, giggling. \"Is it greedy to want the same present again next year?\" \n\n\"No at all,\" he replied, grinning. \"It cuts down on elf-labour hours if I can give people a gift mys-\" \n\nSanta paused in speaking, going silent and looking around, as if listening for something. Neither of them touched the controls, but the motor for the jets turned off and all that could be heard was the howling roar of the winter storm outside. Ginny looked at him in confusion, wondering why his features hardened and a scowl crossed his normally jovial face. \n\n\"That's no storm,\" he said in a low, growling voice. \"Not a regular one, anyway.\" \n\n\"What does that mean?\" she asked, his reaction worrying her for reasons she couldn't readily explain. What the hell was a 'not regular' storm, according to Santa, or anyone else for that matter? He stood up and strode out of the hot tub, taking her by the hand and pulling her out with him. Their naked bodies glistened with water but this was the farthest thing from her mind. \n\n\"What's going on?\" she asked, his consternation beginning to frighten her now. She watched as he tossed her the robe she'd been wearing earlier and then started pulling on his pants and sturdy black boots. \"It's just a winter storm! Isn't it?\" \n\n\"I wish that were true,\" he replied, his expression grim. \"Listen to me very carefully, Virginia. I'll need you to follow me instructions precisely. Do you understand?\" \n\nShe nodded. \"Okay, but-\" \n\n\"Good,\" he said, cutting her off, his eyes flashing. \"It's very important to your safety.\" \n\n\"Can you at least tell me what's happening?\" she pleaded. \n\n\"Krampus.\" Santa muttered darkly as he wrapped bright red straps around his wrists, tightening them. \"I should've been more careful.\" \n\n\"What's Krampus?\" she asked, going pale and she paused in putting on her robe, one of her breasts hanging out. \n\n\"Krampus isn't a what, Krampus is a who,\" he said, his eyes scanning the layout of her expansive living room. \"He's also called Black Pete in some places and legend says he's supposed to be my evil henchman who punishes wicked children.\" \n\n\"I take it that's not true, then?\" she asked, looking around like he did, wondering what he was searching for. \n\n\"Not even close,\" he growled. \"Pardon my French, but Krampus is an evil sonofabitch. He was, at one time long ago, my dedicated helper, but he turned down the path of darkness, becoming twisted and diabolic. Forget punishing children, he wants to destroy Christmas, like it never happened.\" \n\n\"What's that got to do with us here?\" she asked, trying to keep her voice from trembling. \"Can he reach us in this storm?\" \n\n\"This storm is his doing, I recognize it now,\" Santa said, striding over to his huge Christmas bag and beginning to rummage in it. \"A massive storm always precedes his arrival. It can be mistaken for a regular winter storm if you're not paying attention.\" \n\nShe swallowed. \"So what does Kringus-\" \n\n\"Krampus.\" \n\n\"What does he want here?\" \n\n\"He wants to destroy me,\" he said, tossing various toys and items out of the bag as he searched for something. \"He used this regional winter storm of yours to cover his approach. Clever, for him.\" \n\n\"We should call for help!\" she said, shaking with fear. \"Can't you- can't you call the Easter Bunny or something?\" \n\nHe paused his searched and turned to look at her, clearly bemused. \"There's no such thing as the Easter Bunny, Virginia. What kind of rosy fantasy world do you live in?\" \n\nHe went back into the back and found what he was looking for. He turned around and tossed her something. \"Here, take this but do not use it unless I tell you to.\" \n\nShe caught the object and gaped at it in astonishment. \"A nerf gun? Are you serious?\" \n\n\"You said you trust me, just take my word for it, okay?\" he said firmly. He then stopped rummaging and stood up, taking several deep breaths, rotating his shoulders and wrists and cracking his knuckles. \n\n\"Don't you- don't you need a weapon too?\" she asked, watching him in concern, holding her nerf gun tight. Even though the room was already only dimly lit for ambiance, it seemed to be growing darker, the howling of the storm louder.  \n\n\"I don't need a weapon.\" Santa answered, his blue eyes glinting with determination and his muscles rippling as he limbered his body. \"Let's hope I don't anyway.\" \n\nHe pointed to the long wall with no windows. \"Stand by your stereo system and do absolutely nothing until I tell you, okay? I cannot stress that enough, Virginia. Stay where I can see you and stay still away from any windows.\" \n\nShe nodded and assumed her position, waiting quietly, her eyes wide with fear and all post-coital bliss drained from her, replaced by jolts of cortisol and andrenaline. She looked around herself nervously, the awful howl of the wind outside louder than ever. \n\nThen it subsided, followed by a deafening silence that was even more unnerving than the storm. \n\n\"Damn,\" Santa muttered, his fists clenching. \"He didn't come alone...\" \n\nGinny barely had time to register what he was saying before glass shattered and wooden walls splintered, followed by shouts and inhuman hisses. Ginny screamed in terror as dark shapes leapt into her house. \n\nAnd then all Hell broke loose. \n\n*** \n\nEnd of Part I \n\nAuthor's Notes: Someone asked me to write a funny and erotic Christmas tale, but since I can't be normal, it is taking on a radical twist that I hope people will find amusing. I've tried to make Santa awesome but also give him some flaws that the ladies will find both charming and irksome all at once. \n\nI wasn't going to call it anything lame like 'Here Cums Santa Claus' (in spite of my love of Elvis) so I eventually settled on ripping off a classic and beloeved Christmas movie, naming it 'Miracle On Rural Road 34'. Couldn't help myself with the 'Yes, Virginia' quip, of course. As for Superman, Oatmeal and the Easter Bunny, well, get used to more groaners like that, because I like them. \n\nI'm determined to finish this probably three-part story by Decmeber 25th for obvious reasons, which means a few of my other stories will be on hold briefly. Don't throw temper tantrums about me starting new stories (some people have, I'm not kidding, they left really nasty reviews) unless you plan to pay me to work on the story you like. I love all my stories and plan to get back to them. Just let me knock this one out first, okay? \n\nMerry ho-ho and keep your stick on the ice! \n\n- Management"
    ],
    "authorname": "BiscuitHammer",
    "tags": [
        "humour",
        "christmas",
        "parody",
        "alcohol"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/miracle-on-rr34-ch-01"
}