{
    "title": "Like Blood for Coffee Pt. 01",
    "pages": [
        "Even after three thousand years, Starbucks kept its motto: \"Our mission: to inspire and nurture the human spirit \u2013 one person, one cup and one neighborhood at a time.\"\n\nEiri Lao felt a little thrill seeing the words embossed on his visa. Few corporations in Hadrian's American still served human consumer interests. He was proud to be hired on as a designer for one of the oldest surviving industries of the Collapse - even if it was on a temporary work visa, and even if Starbucks was now run by elves. \n\nIn the full flush of his mid-twenties, old mainland Chinese stock mingled with delicate Japanese bloodlines, he was tall and good-looking, with high cheekbones and a full, generous mouth. He did not doubt he was chosen as much for his looks as he was for his marks at Beijing Design Academy. Elven recruiters were shameless in their scrutiny, even requiring applicants to open their mouths so that teeth could be counted. He was treated like a king from the moment his plane landed at SeaTac - vintage limousine, fully furnished apartment in Belltown, monthly stipend of 20,000 marks just for clothes. Elves liked their human employees to dress well. Despite the obvious emphasis on his looks, Eiri found it hard not to buy into the dream of meritocracy. He was young, he graduated with high marks from a good school, and now he was going to be a hotshot product designer at Starbucks in one of the richests territories in the world. \n\nAs a design student, Eiri savored the sight of his new home - a high rise crafted from an church of the Old Faiths, resting on a foundation built of the smooth wood paneling so favored by elvish architects. The floors - also done in wood - were heated throughout his two-bedroom penthouse suite, which had formerly been a cloister. As a man culturally accustomed to removing his shoes at home, this was a welcome luxury in the misty, cold city of Seattle. \n\nWork started the next day. Like him, Eiri's coworkers were chosen for looks. At his first cross-functional sync, he observed them: Christy from chemical engineering had natural D cups; Alan from data science was broad-shouldered and muscular; Jaymin from product operations had the most exquisitely smooth skin making his age impossible to guess. Even Tim the intern looked like a classic interpretation of cupid with big blue eyes and gentle blonde curls. \n\nThey all wore uniforms to work, designed by elves for humans to show off their natural bodies - tight, clinging leggings; loose, flowing sleeveless tunics with arm slits cut down to the bottom of the rib cage; and soft soled sandals to display shapely feet and manicured toenails. Humans were not permitted to wear belts, socks, or underwear with their uniforms. The only exception to this were ultrasuede gloves, used more for handling delicate elven artifacts or personal items than for keeping shapely human hands warm. \n\nWhen his teammates caught sight of him - a tall Asian with a square jaw and flashing black eyes - Alan gave a little chuckle. \"Well - I hope at least one of us is good at the job.\" They all laughed, nervously.\n\nThen they met their product manager, Hallenwae al'nuf'de Air. The only elf among a team of humans assigned to Fulbright - a high elf from one of the greater families. Towering over them by a foot, he was a combination of tree and man: willowy with smooth brown skin whorled like the panels of wood in Eiri's apartment. His head was crowned with antler-like branches atop a rustling mass of leaves that formed elven hair, the face beneath it broad and deep set as if carved into a tree trunk. All elves thought themselves beautiful, none more so than the high elves. Eiri found them horrifying, more so than the native Chinese demons in the streets back home.\n\n\"You all know why you're here,\" the elf said without even a greeting. \"Fulbright ships on a tight product schedule. You are responsible for the look, feel, and execution of the launch. Today is training - exposure to existing flavor profiles managed by Starbucks. Tomorrow, I expect to see problem statements and go to market methodology.\"\n\nChristy spoke up, \"When do we get to test formulas?\"\n\n\"The formula has already been determined,\" the elf sneered. \"You just need to make humans like it. Are there any other... questions.\"\n\nThe tone made it clear none were welcome. The product manager led them through a cursory tour of the Starbucks campus and then turned them over to a Human Resources manager for onboarding. Eiri didn't catch sight of the elf again that day, but somehow he knew they'd never be without his menacing presence again. \n\n...\n\nFour days later, they were put on a new operating schedule. Rather than industry standard human operating hours - nine to five - they were moved to a swing shift starting at three in the afternoon with an hour at seven for dinner. The product manager - Hall, as they called him behind his back - gave no reason for the change. Eiri realized that none of them had reason to complain; they were short term contract workers with no friends and no family in the area. Nowhere to be but work. \n\nHis coworkers began to form bonds with each other. Christy was aggressive in inviting him to coffee, to lunch, to long walks in the fairy parks during their precious daylight hours. Eiri was careful to invite others along with them; he sensed her sexual interest and wanted to stave it off. He was determined to focus on Fulbright, impress his managers, and secure permanent visa status in Seattle. Going back to China, his mother said, was not an option. \n\n\"Keep your head down,\" his mother admonished him when he proudly showed her the hiring packet. \"Do good work, get full contract. You move there, you bring me over when it's safe. Do not get distracted! What would your father say, if he were alive? He would tell you 'don't screw around!' wouldn't he?\"\n\nEiri was a filial son. Even if he hadn't been, he would still have wanted to do well in Seattle to escape demon-controlled China. Elves might be snobbish and racist, but at least they didn't feed on souls! \n\nHe muted Christy's text messages and resolved to think no more about her. Or any woman. And he did not complain when Hall moved them from the open floor of the common work areas to a sequestered \"war room\" bullpen on the fourth floor, forcing him into closer contact with his Christy and he aggressive advances. He kept his head down and worked.\n\n...\n\nEiri met the vampire on the sixth day of work. \n\nAfter sundown, when the main Starbucks employees were just heading to the cantina for the dinner service, Eiri noticed Hall wasn't at his usual desk in the war room. Alan and Jaymin went down to lunch without inviting him; Christy said something about being a long in a minute. And - in a rare moment alone with his work - Eiri turned off the lighting panels and dimmed his monitor to his preferred shade. Then he let himself get lost in research, looking for the right mix of shapes and colors and typography that would entice people to drink the same beverage they'd been drinking for five centuries - and pay almost a dollar more for it per cup. \n\nAfter a while, he felt eyes on him. He turned - but in the dark, saw nothing. The war room door was closed. Eiri turned back to his monitor, was too unsettled to dive back in. He sat in the dark, and waited, listening. Feeling eyes move over his back. \n\nA muffled thump from down the hall startled him. Someone's being sneaky...! The onboarding staff warned them to be on alert at all times for corporate espionage - especially from other human workers, so susceptible to drugging, mind-control, and good old fashioned bribes. Eiri got up from his desk and went to investigate before calling security.\n\nPast the open floor down a narrow corridor leading to the human washrooms, he saw a shadow pressed against the wall. Stepping closer, he saw it resolve into two bodies - elf and human - pressed against a wall.\n\nHall, and Christy, struggling.\n\nAt first, he thought they were fighting - but after a moment of observation, he saw Christy's tunic pushed up to her waist, Hall's hands under it, moving in circular motions around the swell of her breasts. She had one leg wrapped around his hips, her hands gripping the branches on his head, pulling his face to her neck while she squirmed under the pressure of his grip. Her head was back, eyes closed, and mouth open in a silent gasp. Enraptured. \n\nEiri was just about to turn away and leave her to her conquest when she thrashed her head in his direction and opened her eyes.\n\nFor a moment, he met them, feeling a blush spread over his cheeks. Then she saw her blink and utter a cry - alarmed. She let go of Hall and started pushing him away, frantic. The elf held her in place, casually glancing Eiri's way. Then he, too, froze.\n\n\"Oh, don't mind me,\" a voice drawled behind him. \"I was just looking for the women's room.\"\n\nEiri turned and saw her standing just behind him, close enough to reach out and touch her shoulder. She was striking: pale skinned and black-eyed with rich brown hair flowing over her shoulders. She was not tall - the top of her head rising to about halfway up Eiri's chest - but, looking down, he saw the magnificent sweep of her breasts, her hips, pressing against tailored cotton and linen. He was captivated by the symmetry; a perfect hourglass, beautifully proportioned. Her eyes locked onto his and he shivered, feeling as though he stood at the edge of a void that would swallow him. \n\n\"Director,\" Hall said, letting go of Christy. She stumbled to the floor and hastily yanked down her tunic, smoothing it over her hips. \"Of course. It's just this way...\" \n\nEiri felt the strange woman brush past him. Freed from her soulless gaze, he turned his head to follow her with his gaze. She moved like a dancer, graceful, light footed, hips swaying like a metronome. He saw she wore a vintage wool suit, hemmed at the ankle to show off velvet textured heels shining with gold thread embroidery. The swoop of her buttocks was just visible below the asymmetrical hem of the jacket and he caught himself fixating on the sight of it as it swayed away from him.\n\nThen Christy was beside him, swatting his arm. \"Come on,\" she hissed. He followed her. \n\nShe stopped just outside the elevator that would take them down to the cantina. She was tugging the hem of her tunic down around her hips, over her buttocks. Eiri followed the motion of her hands, saw her trying to pull the clinging leggings away from herself, out of the crevice between her legs where they'd ridden up. \n\n\"Are you alright?\" he asked.\n\n\"Yes. No...\" She slapped the panel to call the elevator with her open palm, readjusted the front of her tunic, dragged the hem downward again over her crotch, squirming. \"Forget it. Fuck, how long were you two standing there?\"\n\n\"Couldn't have been long - I didn't know she was behind me,\" Eiri said. \"I don't even know who she is.\"\n\n\"Director Ipomoea,\" Christy said. \"Hall told me she's going to be overseeing the project. I don't know why - vampires don't make coffee.\" She shivered. \"I hate them - they're creepy. And always staring. You can feel it even when they're not looking at you.\"\n\nEiri thought of the quiet dark, the feeling of eyes on him. He felt it again, stepping onto the elevator with Christy. But when he turned, he didn't see anyone standing there. \n\n...\n\n\"Bring the Director a cup, Eiri.\" \n\nNow was the moment Hall would retaliate, Eiri thought. They'd been fighting ever since he interrupted the elf groping Christy. From that moment on, Hall said Eiri's designs were sloppy, his uniform wasn't clean enough, he was late badging in, he was early badging out. Snide little insults after every presentation. None of it bothered Eiri - it wasn't his first job, nor his first passive aggressive manager. But here, in front of the vampires with ultimate control over Fulbright, he knew the elf would work hard to humiliate him. \n\nEiri ground the beans fine, remembering Fulbright's flavor came through best in an espresso texture, no sugar to dull the tang. The porcelain tinkled merrily as he set the cup on its saucer, two-thirds full with the bitter aromatic liquid. He glanced at Hall as he turned to bring the cup to the vampire, expecting to find the angry blue gaze fixed on him, but the elf was turned toward Christy beside him. She had her head down, her cheeks blazing red, the slightest tremble of her shoulders suggesting movement further down her body. He was touching her beneath the table, Eiri thought. \n\nIf anyone noticed, they did not care. Three other vampires stared at him from across the table - like dogs watching a butcher. Jaymin and Alan were messaging each other from their tablets, and Tim the intern was relegated to standing along the wall with two administrative assistants. No one looked at Hall, no one looked at Christy. \n\nBring the Director her cup, Eiri told himself. He approached, noting that the vampire wasn't looking at him. She played with her phone, idly scrolling through Hall's presentation Eiri stayed up late the night before to complete. She was, once again, well-dressed - dark suit tailored within a quarter inch of where her white leather heels met the ground, a flared cuff over her milky white wrists. \n\nEiri still couldn't get over the sight of her. The symmetry, the careful balance as she walked. That ass swaying on silent steps. Sheepishly, he thought of it while showering the night before, had felt his cock pulse with the basic human desire he fought to obliterate while working for elves. He prayed it wouldn't happen now. Not now, while Hall was already out to shame him in front of the beautiful creature to whom he was supposed to bring coffee. \n\nWhen Eiri was close enough to set the cup in front of her, Hall sprang his trap. Though Eiri had never seen Hall do it, he'd seen other Starbucks elven employees manipulate wood - melding their hands into the panels along walls or floors to access hidden controls for water, temperature, and even hidden snack compartments where some hid sacrilegious beef jerky and sugary elemental candy.\n\nHall revealed his natural talents, now, manipulating the wood of the floorboards beneath Eiri, rocking one just enough to cause him to lose his balance. The cup rattled in the saucer, sloshing the steaming coffee within over the delicate brim of the cup hard enough to land on Eiri's hand, stinging his thumb. \n\nEven before the first painful drops landed, Hall was snapping, \"Careful! Humans - so clumsy...\" \n\nPetty motherfucker, Eiri thought.\n\nThe vampire looked at him. Her eyes weren't black, but bistre, the rich color of Turkish Dark. It was only seeing them against the cream of her pale skin that made them seem soulless and empty as he thought before. \n\n\"Uh, Eiri,\" Hall said. \"You spilled. Get our guest a new cup.\"\n\n\"That won't be necessary,\" said the Director. \n\nSomehow, he was still looking into her eyes. She reached up and took the saucer from him, steadying the cup with imperceptible adjustments of her elegant fingers. Placing it on the table, she lifted her hand again and took hold of his wrist, pulling Eiri toward her. A flash of white against pink as she opened her mouth, and then his seared knuckle was plunged into the soothing warmth of her mouth. \n\nWould he feel it then, the sharp fangs pressing into him? They eat humans, you know! His mother warned him once when they saw a vampire in the street. \n\nEiri felt pressure against his skin. But it was not the sting of teeth. She was sucking the coffee from his finger.\n\n\"I'd hate to waste even a drop,\" the Director said. She let go of him. But held him with her eyes. \n\n...\n\nThe elves observed a Julian calendar to humor their human allies, observing New Years celebrations as part of company policy. \n\nGrowing up in demon-controlled China, Eiri had never been to a New Year's party - but he had seen movies, and thought it would be like Chinese New Year, with alcohol instead of the song gao his mother made. Elves didn't drink the stuff, but they allowed the humans in their employ to indulge on holiday, and even ordered champagne for the office party. Christy explained that at midnight, a luminescent ball would rise over the Broken Needle in downtown Seattle, accompanied by fireworks. And then at midnight, everyone would exchange a kiss.\n\n\"It's tradition,\" she insisted, passing him a champagne flute as he walked into the decorated cantina, the tables all pushed back to allow for dancing. \n\nEiri took the glass she offered and abandoned it near the tray trolley. His eyes scanned the room, taking note of the elves who circulated the edge of the dance floor. Plenty of opportunities to embarrass himself, if he wasn't cautious. Alan, Jaymin, and Tim showed no such caution - smuggling a rare bottle of Yamazaki 10 from Old Japan past the badge check. They begged him to take a shot with them, and when he wouldn't - Shooting Yamazaki whiskey! The audacity! - they made him read the Japanese language alcohol warning to them, laughing at his accent. \n\nAt least Hall wasn't there to see his team get wasted. Eiri caught sight of the elf in the company of his family - other tree-like elves with leafy hair - circulating among lesser, more human-looking elves in attendance. Sprinkled throughout, he thought he could identify the Ipomoea vampires: they wore black or white clothes and, like the elves, avoided dancing, preferring to circle the dance floor, watching. Hunting, Eiri thought.\n\nAfter an hour, the humans were all drunk. And now Eiri saw younger elves and vampires drifting onto the floor alongside them, pulling at human hands and arms, testing to find the most pliant, the most willing. Hands slid over buttocks, straps were pushed down to bare shoulders, and every so often, the chasm between warm, gyrating bodies would collapse, hips and loins colliding in a puppetry of sex. Eiri thought that it was strange for a species that valued aesthetic so highly to get such a thrill from teasing sloppy drunks.\n\nTwo hours before midnight, Christy found him lingering near the edge of the floor. Her halter top was slipping down, exposing the blushing areola of one breast. \n\n\"Eiri-chan!\" she insisted on calling him. \"Come-oo, and dance-oo, with me-desoo!\" She grabbed him by the asymmetrical lapels of his blazer and pulled at him. He wasn't sure which offended him more - the racism or her disregard for vintage Alexander McQueen. He tried to pull her away, to guide her from the shark tank of eager hands, pinching fingers. \n\nSuddenly Hall was there, behind her. Eiri greeted him loudly, hoping to warn Christy - but she turned and bumped right into him. \n\n\"Oh, it's you!\" she said, drunken cheerfulness curdling to something sour. \"Back for more? I thought you said I was dirty. You didn't wanna... sully your stupid sullenness with me. You said.\" She laughed, thought she was being funny, but even Eiri could hear the bitter fragility under it.\n\nHall smiled at her, indulgent. The look made Eiri sick. Demons looked at humans that way before contracting souls. Pimps looked at whores that way before exploiting them. \n\nThe elf reached out and caught the drooping strap of Christy's dress. She stumbled a little, her unbound breasts bouncing, a nipple sliding just above the border of the cup. Hall caught it in his hand, gave the nipple a little tweak with his thumb.\n\n\"You've had too much to drink,\" said the elf. He hoisted the strap up, tucking her breast neatly back into the dress. \"I should get you home.\"\n\n\"I'll take her,\" Eiri said, taking Christy by the shoulders and pulling her back. Elves might not think of much of abusing humans, but Eiri couldn't live with himself if he let Hall take advantage of Christy. Under the cover of the party, he thought could get away with standing up to his product manager.\n\n\"Is that wise? Two humans out at night with so many strange vampires about...\" Hall said, about to sneer at their human weakness.",
        "\"He's right. I'll have to take you,\" said the Director. She appeared beside them against the wall, her voice carrying easily through the din of the music. A tall elf marked with the wood antlers of House Air stood at her side. The vampire deferred to him with an almost imperceptible curtsey and he inclined his head, granting permission. \n\nHall bristled - a literal flexing of his leaves and branches in ire. He caught Eiri's eye and snapped, \"Do what she tells you. Vampires are accustomed to being obeyed.\"\n\nThe Director looped an arm around Christy's shoulders and placed her hand at the small of Eiri's back, guiding them away from Hall and toward the entrance. Eiri could feel the pressure of her hand there, through his coat, just above the place where his back rounded into the curve of his buttocks. Like a cattle prod, it led him to the elevator, to the lobby, to the street, and to the back of a black car.\n\nIf he offers to go somewhere with you, do not go with him! His mother warned about the vampire in the streets back at home. Vampires work in the dark. \n\nBut he was already buckling into the backseat, Christy crushed in beside him. The vampire sat across, fixing them both with her magnetic black stare. In no time at all, it intoxicated Christy even further, overwhelming her senses. She shrugged off the shoulder strap of her seatbelt, turned to him, wrapped her arms up and around his neck, pulling him down to his kiss face, again and again. \n\nHe tried to stop her, gently pushing her arms back, pleading softly. \"Get ahold of yourself. You're drunk, you're drunk, stop it...\"\n\n\"I know what I'm doing,\" she whispered, breath hot with Yamazaki. \"Touch me. Do it. She likes it. They all do - they like to watch.\"\n\nEiri glanced at the Director. She was watching. \n\nHe couldn't do it. He took Christy's arms, put both of her wrists in one of his hands and crushed them together in his grip. He held them there on her knee while she struggled and writhed, entreating, begging. Finally pleading, \"You're hurting me!\"\n\n\"It's better this way,\" he hissed at her. The vampire was still watching. \n\nThey came to the employee housing. Like him, Christy had a suite in the converted church, but it was on the far side of the building. The snow had just begun to fall as he wrestled his drunk coworker out of the limousine and onto the icy sidewalk. He slipped - and the Director was there, steadying him with that firm touch. \n\n\"I'll get her to the door,\" she said. \"But you'll have to take her inside yourself.\" \n\nEiri glanced at her, confused. She smiled. And he forgot for a moment what she was. When she smiled, she appeared sweet and friendly, the wide lower lip folding into dimples on her snow white cheeks, the delicate upper lip curling downward. \n\n\"Hallowed ground.\" The Director pointed up at the steeple where a cross would have hung before Hadrian's time. \n\nHe carried Christy into her apartment, swiping his employee badge to unlock the door. She was already swooning, fading. He put her on her bed, and went into her bathroom to look for a bottle of naproxen sodium - still the preferred cure for a hangover even after sixteen thousand years of human hangovers. He found a glass to fill with water. He left both by her bedside table, positioned just far enough away that she wouldn't knock it off the surface if she flailed in her drunken stupor. Eiri almost left then, but turned back for one more detail - fetching the little trash can from the bathroom to position by her bed.\n\nFinally, he felt he'd done enough to help her, and he badged out of her room.\n\nThe vampire was still waiting for him outside. She gestured for him to return to the back of the car. \"Come. It's hours to midnight. People will talk if you two are both gone when the ball rises.\"\n\nEiri hesitated. He could turn away, walk around the block, and be safe inside his apartment - on hallowed ground - with heated floors for the night. But the Director was right. It would be bad for his career if he missed the midnight celebration, worse if Hall thought he and Christy were celebrating it in private. He joined the vampire in the backseat of her car. This time, she sat beside him.\n\n\"You're very particular, aren't you?\" she observed. \"Another man might've dumped her on the floor of the living room and called the job done.\"\n\n\"I prefer... efficiency,\" Eiri said, fumbling for what to say. He wanted to turn to her. Without her eyes on him, he felt alone, bereft. He settled for turning his chin slightly, to look down at her legs, shrouded in shiny black material. Her hand was resting on the seat between them, ungloved. \"Aren't you cold?\"\n\n\"We don't feel cold unless we're starving,\" she said. She picked up her hand then and rested the back of it against his face. It was warmer than his own flesh, which stung still with the icy air from his brief time outside. \"See?\"\n\n\"So... you're not hungry?\"\n\nShe laughed, then, a gentle exhalation of air through the nose. \"No. Does that relax you? It's not my habit to prey on colleagues.\" \n\nThen why were you watching us, he thought. Her hand was still on his face, sliding down his cheek. She ran her thumb along his lips, then pressed it to his chin, turning his head toward her. Those chocolatey eyes met his again, warm and waiting. Like a hot cup of coffee on a cold morning. \n\nShe held him again for a moment, and then said, \"Come to my place. After midnight.\"\n\n... \n\nVampires kept harems, he heard. Dozens of men and women, naked, languishing in well decorated rooms with gothic fireplaces. Waiting to satisfy their masters' appetites. A vampire might feed or fuck any of them at a moment's notice, or sometimes do both at once. \n\nEiri hadn't seen any slaves like those at Starbucks. Everyone wore the elvish uniform - tight pants, green or grey cotton, gloves for handling that which was considered too fine for a human to touch. When the Ipomoea family arrived, he noticed an increase in the number of new employees; obsequious, quiet individuals who never went to the cross-functional syncs but turned up to eat at the cafes. Sometimes he saw bite marks on their necks. \n\nVampires feed on humans, his mother warned him, reading him ghost stories from pre-Collapse about dark mansions and long fangs. But in his mind, he couldn't conjure any image but the Director. Her eyes, her smile - the dimples puckering as she said, \"It's not my habit to prey on colleagues\" - lulled him. If she didn't mean to feed on him, it could mean she wanted only to fuck him. \n\nHe saw her apartment - a rented loft over The Pike - and thought it wouldn't be so bad. It gave the impression of a love nest; low tables, lounge chairs, votive candles on every surface that gave off the heady aroma of jasmine and amber. She left him in the living area while she went up a flight of stairs to the bedroom, preparing. With a designer's eye, Eiri discerned her style was eclectic, every surface a tumult of textures in desaturated palettes. The longer his eyes rested on a piece, the more detail he discovered - curved edges, gilded corners, hidden friezes. The detail captivated him.\n\nAfter a moment, she called for him to come up. It was not her true bedroom, of course - vampires kept their coffins' location a well-guarded secret - but the sheer linen canopy over a bedframe of raw wood and black iron spoke to her attention to even her false sanctuary. She smiled, watching him take it all in. \n\n\"You were expecting a dungeon, perhaps?\" She waited for him on a low-backed side chair, tufted with studs in different metals. She'd removed the expensive jacket, taken off her shoes, undone the top buttons of her blouse, exposing a beautifully embroidered bra underneath. Black lace and leather, constricting boning. \"Come here.\"\n\nEiri hesitated, wondering if she expected him to strip. He could not sit beside her on the chair and she indicated no other place for him to sit. He drew close and saw she held a hairbrush in one hand.\n\n\"Would you... brush my hair for me?\" she asked, handing it to him. Soft bristles. A wooden paddle back, handle made of heavy gilded silver. She turned her back to him, river of chocolatey hair rustling over the silk of her blouse. At the roots, it matched the color of her eyes. Toward the tips, it lightened to almost a honey color.\n\n\"You have interesting tastes,\" he said, setting the brush to the crown of her head. It was easier to speak to her when he wasn't looking at those eyes. \n\n\"Thank you,\" she said. \n\nIn silence, he worked, drawing the brush through her hair, draping smooth hanks of it over his free hand. It took him a few minutes to figure out the most efficient means of detangling, working from the bottom of the snarls rather than the tops. He worried he hurt her with his clumsiness, tugging too hard while he adapted his technique. He tried to go slow, understanding this was a test of seduction. To Eiri's surprise, he found he wanted to please her. \n\nWhen the tangles were all smoothed and the pieces of her hair joined in one unbroken cascade of brown down her back, he thought of setting the brush aside. But to do it, Eiri needed to lean past her, over the chair, to reach the small end table where the brush's matching accessories rested on a mirrored tray. \n\nAs he passed by her ear, she whispered to him. \"I want you to pull my hair.\"\n\nHe froze, not sure he heard correctly. She rested a hand on his elbow, and applied just the slightest bit of pressure, pushing him to straighten. The swell of his cock, nestled into the left leg of his trouser, was at the level of her eye. Terrifyingly close to her mouth. \"Director...?\"\n\nThose eyes, sweeping up to lock onto his. It felt like looking down from a cliff into a diving pool in the dead of night. Dizzying. \n\n\"Grab my hair... and pull on it as hard as you can,\" she said, her voice soft, caressing. \n\nDo whatever she tells you, Hall had said. Vampires are accustomed to being obeyed. Even the elves feared them. \n\nEiri seized a fistfull of the silky brown strands just behind her ear and tugged.\n\n\"Harder,\" she said.\n\nHe obeyed, pulling back, and down. She tilted her head back with the force of it. He saw, towering over her, down the front of her blouse to where the lace of the bra met her creamy skin. He hadn't realized, living among the elves for weeks, how sexual a bra was - its rigid ribs and clever straps foisting the tender flesh of the breasts upward, outward, entreating. Her cups were unlined, and he saw the hint of her nipples pressing against a prison of netted lace. \n\n\"Harder,\" she demanded.\n\nHe obeyed, repositioning his hand along the back of her head to gather more hair, exerting more pressure. She arched her back, and gasped. \n\nThen Eiri saw the teeth. White fangs, a perfect form factor of regular incisors. Fear struck through him, cold and knifelike, in his belly. He held her like that, for a moment, panicked, and then let her go. \n\nHer eyes were open again. In their unfathomable depths, he thought he saw fear. \n\n\"I... I have to go,\" he blurted, stumbling backward. \"Milestone meeting in the morning.\"\n\n\"On New Year's Day?\"\n\n\"Yes,\" he said. Then remembered it was pointless to lie to a vampire. \"No. It's the day after tomorrow. But... I should prepare. I need time.\" \n\nShe held him in place with her gaze, and then dropped it to her lap. In her hands, she held her phone. \"Then, you must go. Goodbye.\"\n\nThe front door opened, and he heard footsteps. A human woman - her assistant, he assumed - come to show him out. \n\nThe vampire did not look at him again when he left. \n\nLater, alone in his bed, he tried to remember her eyes in that moment. Was she sad? Angry? Disappointed? But, to his desperation, all he could recall was the sight of her breasts in the bra, the feel of her silky soft hair between his fingers. Eiri's cock stirred, free of its confines, and he instinctively clasped a hand to it, feeling it swell as he pressed down. \n\nThe white skin, spilling over the tops of the cups. The valley between them so like the one between her legs. Wondering whether her panties matched her bra, whether they rode high between her legs when he squeezed her hair, pulling, pulling, pulling...\n\nI shouldn't, he thought, rubbing his cock, tugging it. I shouldn't make it a habit... with colleagues. But he thought again of her hardening nipples, supplemented with the body memory of Christy pressing against him in the back of the car, begging him. \"Touch me.\" \n\nHe thought of pulling on her hair as he pulled the hard length of his shaft, thought of rubbing the nipples beneath the lace when he ran his thumb over his weeping tip. The last memory he had before the orgasm took him was of her eyes. \n\n...\n\n\"We're not delaying Fulbright because you can't configure a pixel,\" Hall sneered. \"Do what it takes, but get the menu logging where it needs to be by end of day.\"\n\n\"That's not possible,\" Eiri pushed back. \n\nHe knew the retaliation would come. Not just for going against the product manager, but also for depriving him of his plaything. Christy even now thwarted him, maring her natural beauty with the aftermath of a hangover - messy hair, smudged eyeliner, bags under the eyes. The elf would not even sit next to her in that state of dishabble. His rage, couple with the eight hours already gone in their war room with guilt trips for every bathroom break or mouthful of food taken, weighed on Eiri. \n\nHe was just about to suggest staying behind to work on the menu logging himself when the Director breezed into the room. \"I've had dinner ordered to the cantina for you. Please, go and enjoy it. Hallenwae - a moment of your time?\"\n\nShe wore, as always, an impeccable suit cut to flatter her hourglass figure, hugging the curve of her hips, cupping the sweep of her breasts. Eiri's breath caught at the sight of her, imaging the lace underneath. Her hair was plaited down her back in an old style that allowed charming wisps to escape, framing her ears and cheeks with ringlets. \n\nThen those eyes were on him. \"Lao, you want to listen in?\"\n\nHe didn't realize she addressed him until Hall hissed at him to answer. \"Ma'am. I would - if it concerns the logging issue blocking next week's test.\" \n\n\"Stay, then. Hallenwae, give me the rundown.\" \n\nThe elf, flustered, struggled to navigate their scrum chart, squinting at Eiri's neat handwriting. The vampire was, as ever, patient and silent, waiting. Under her gaze, the elf stirred, blinking furiously to contain his frustration, shaking the leaves of his hair in irritated rustles. When at last, he gave up his incomplete explanation, Eiri started to speak, to clarify, but the Director spoke first:\n\n\"It's pointless to launch the test if we're not confident our logging holds up. We don't have budget for custom UI, and I'm loathe to disrupt user experience for a small test. Let's move the marketing sprint up to next week and reassess.\"\n\n\"Director...\"\n\n\"I'm sure Chandagar will resolve the tracking issue and Lao already has the branding A/B test lined up. We gain nothing pushing a test now, launch-wise. As for milestones, we can bend...\" she said, catching Eiri's eye for a fleeting moment, \"without breaking.\" \n\nOverruled, Hall agreed. He fled the war room to cover his frustration, leaving Eiri to rearrange the notes on the task chart. The Director watched him. He could feel her gaze on his back like the touch of her hand on the small of his back - warm, firm, guiding him. \n\n\"Ma'am,\" he said, finally. \"About the other day.\"\n\n\"Yesterday,\" she corrected. \"It's only been eighteen hours.\"\n\n\"Yes,\" he agreed. \"I want to apologize if... if I offended. I've never encountered one of your kind before, in... that way.\"\n\nHe heard a little stir behind him, felt her gaze leave him. Eiri turned to look at her, leaning against the meeting table, arms crossed over her chest. He imaged, but could not see, the line of cleavage between her breasts deepening under the pressure of her arms. \"Don't apologize. I should have explained. I... am here for only a little while, until the launch. There are distractions, plenty of hospitality from my elven hosts. But I, like you, am... particular. I was rather hoping we could share a mutual agreement.\"\n\nEiri did not understand what she meant, not completely. She said she wouldn't feed on him. She clearly wanted to have sex with him. But there was something about the way of her now, nervous and unsettled, that hinted at more. \n\n\"Go on,\" he said.\n\n\"I wanted you to... be rough with me.\" She said the last so softly, he caught himself leaning toward her to hear. \"Among my kind, it's not common. Sex, for us, is a proxy for power. We dominate. We control.\"\n\nShe locked her eyes on him again, and he felt it. That deep, yawning pull like walking the edge of a cliff - always tempted to the edge. She's doing that to me, he realized. It was a way to lure prey. \n\n\"If I want, I could compel you to strip naked right now. Crawl across the floor and kiss my feet.\" The thought crossed his mind as she said it, and he felt his cock stir and his cheeks sting. Simultaneously thrilled and ashamed. But she dropped his gaze and the feeling passed. Had never really been there at all. \"It's nothing I want for myself. But... having it the other way around...\" \n\nEiri found himself drifting closer to her. Did she mean it? Or, like the glamour she caught him in a moment a go, some kind of manipulation? \"Go on,\" he said again. \n\nHer cheeks flushed, pink spreading across the porcelain cheeks. \"It's too... too embarrassing... The things that I want.\" \n\nHe tried to imagine them. Couldn't. What would a vampire - one of the most powerful creatures on earth - want from a bit of hair pulling? Eiri himself had indulged in light spanking with his freshman girlfriend at the Academy. Was there more to it than that? \n\n\"What would it be like? A... mutual agreement, I mean,\" he asked, genuinely curious what rules could exist for a mutual relationship between human and vampire. \"Is it like a demon contract? Do you... put some kind of mark on me, with your teeth...?\"\n\n\"Oh, no, nothing like that!\" she laughed, a nervous bubbling sound. It lit up her eyes in a way almost human. \"It would be - like a typical office romance. Secret. And... not without its privileges.\"\n\n\"Such as?\"\n\nShe met his eyes again, the blush receding from her cheeks as her dimples puckered them. \"I am the Director. I can be good to you. Within reason, of course. Fulbright will ship in six months whether or not our... agreement persists.\"\n\nDoes it mean that much to her? A bit of rough sex? Surely she could get it outside the office...\n\n\"Don't misunderstand,\" she said, and he realized she'd been reading his thoughts. \"I am careful. I don't dally. The nature of my desires isn't something I want shared as common gossip, or mocked among my reports. I chose you because you are vulnerable. Uniquely so, on this team. Hall would cancel your visa with the slightest provocation - and I know you're not eager to go home.\"\n\n\"Is that the only reason?\" Eiri was surprised to hear himself ask. Pride swelled in his chest, pressing against the rough weave of his shirt, the tightness of the leggings over his hips. He was young, good-looking, fresh out of school and working in one of the best job markets for humans. He wanted her to want him, even if she was a vile murderous creature that preyed on humans. \"Did you pick me because I'm weak?\"\n\n\"No, it wasn't the only reason.\" She let her eyes run the length of him, gauging the offer his body made to her now. \"Tonight, then?\"\n\nPride smothered fear. He agreed. \n\n...\n\nShe handed him a black silk blindfold when he came to her. She did not ask, though she must have intuited the effect her eyes had on him. They met again at her apartment. Her human assistant wasn't there, and the car not outside when he arrived.\n\nLike brushing her hair, he had a learning curve to master with the blindfold. He fumbled a little, tying the straps of the silk behind her head where the scalp met the neck. She was fully dressed, and he felt unsure of how and where to touch her to begin stripping her suit. ",
        "He let his fingers linger over her ears. She reached up to touch his hands, clasping them. \"How does it feel?\" he asked her.\n\n\"Good,\" she said, her voice husky with anticipation. \n\nEiri decided to stay behind her. He did not want to catch sight of her fangs in an unguarded moment, and lose his nerve again. He tried instead to think of her as a woman - any woman - there in the circle of his arms. Willing. Waiting. \n\nBe rough with me, she'd said. He started with her hair, looping the end of the braid around his hand and pulling down. He kept his head by her neck, close to her ear. Away from her mouth. Her head came back against his chest, and she gasped, trembling. \n\n\"And that?\"\n\n\"Good...\" she sighed, a tremulous note slowing the word, straining it. \n\nWith his free hand, he went for her jacket, pulling down one shoulder. She helped him, shrugging the other off and letting the heavy garment fall to the floor between their legs. He stepped closer, feeling the warm, solid presence of her body brush against his thighs, his belly. She wore a waistcoat with fastenings too intricate to understand from his vantage point, looking down as he was at the mound of her breasts obscuring her waist. He tugged at the strap in the middle of her back and said, \"Take this off.\"\n\nShe obeyed. And he felt a little thrill of power, seeing her strip the vest off and discard it while he still held her against his chest by her hair. Beneath her sheer blouse, the outline of her bra moved - up and down, up and down - with her breathing. \n\nI want to see it, he thought. He ran his hand down the front of her shirt, intending to unbutton it. She went to help again, fingers blindly tugging at the mouths that held the mother of pearl beads. Neither had a steady hand, shaking. At last, impatient, terrified the spell might break and she would throw him out, he rushed it - stuffing his hand down the from of the v opening at her neck. His palm scraped over lace, made hot from contact with her flesh. Now he gasped, and involuntarily pressed against her, the swelling mound of his erection at her back.\n\nShe moaned again, urging him on. Her hands frozen in the buttons on her shirt. \n\nHe rubbed that forbidden garment, that prison of the flesh the elves reviled, feeling the curves and textures scrape against his skin. He dipped his fingers into the seam where skin met cloth, where her breast spilled over the top of the lace balcony, plunging into the warm, tight confine of the cup. He felt her nipple, hard and puckered, beneath the pads of his fingers. Reaching below the soft underside, he scooped the breast free, hoisting it out to lie atop the emptied lace cup. \n\nFrom there, her hands resumed pulling, undoing, parting the buttons from the eye holes to give him more to see, to touch. \n\n\"Please,\" she whispered. \n\nHe sensed a moment of opportunity, some invitation to fulfill her secret desire. She wanted to be dominated. \"Please, what?\" he asked.\n\n\"T-touch m-me,\" she stammered, the red flush spreading out from under the black blindfold. \n\nHe tweaked the nipple of her loose breast, let go of her hair to wind the other arm around and cup the trapped one, pressing her back against him. She felt the full length of his hardened manhood now, forced down by the leggings, pointing along her back downward toward where her hourglass hips swept out from the spine. \n\nEiri wanted to shove himself into her, wanted to feel her softness yield. They were still standing, three feet from her canopied bed, a tangle of her clothes on the floor. He walked her over to its edge and pushed her down. Instinctively, her hands came out to catch herself and he saw another opportunity, another invitation. He reached for her hands, clasped them, pulled them back behind her, using one hand to pin them together at the small of her back. \n\nShe shifted beneath him, a shadow of her strength threatening to unbalance him. He lifted his hips and realized she was positioning her knees underneath her, lifting her ass to him, the seat of her slacks pulled tight against her apple shaped buttocks. He sat back, half-kneeling against the bed, to take the in the sight of it, breath catching. \n\n\"Touch me,\" she pleaded. \n\nHe obeyed, reaching out to place a hand against her ass, fitting the downward arc of his fingers to the innermost curve of her buttock. His index finger went along the seam of the pants, down to where the heat of her sex warmed it. She made a strangled noise, a high and furious grunt. \n\nWhat does she want, Eiri wondered. His own desire clouded his mind, depriving him of critical thought. There was only the ass in his face, the wrists writhing beneath his hand. What he wanted overcame his rational mind and he grasped her inner thigh, pushing her hips over to one side. He let go of her hands and went for the closed fasteing at her navel, pulling, ripping to undo the catches. Hauling the pants down, the thin slip of lace panties caught in the tangle. \n\nHe saw foam white skin from mid thigh to belly, a dollop of reddish chestnut curls swirled over the mound of her sex. The beauty of it stunned him a moment, and then his eyes traveled above the magnificent expanse, to the sight of her bunched up blouse, one breast hanging loose from the froth of the lace bra. Then on to her face, half shrouded in silk, the hair scattered from her braid tangled around it.\n\nHer mouth open, panting in excitement. The sharp white fangs grazing the wet surface of her tongue.\n\nHe lost his erection. Falling into a panic, Eiri stalled, running his hands down her stomach, over her thighs. Her skin was smooth and warm - like any human woman's. But though he stared at the things that aroused him, he couldn't forget what she was. Vampire. Other. \n\n\"Lao...\" she breathed, uncertain. Her hands moved from underneath her, tensing, ready to move upward to take off the blindfold and trap him with her hypnotic gaze.\n\nEiri slapped a hand on her thigh, hard, and she cried out, parting her legs at the force of it. He saw, between the curls, a bit of pink, and set his fingers there, feeling the silk of labia slick with desire. A finger, lost between its folds, set her to trembling. \"Lao,\" she said again, louder, encouraging.\n\nHe inserted a second finger, easily, thrusting them deep into her canal. She pressed her hips up, bit her lips, the fangs peeking over the pink edges. He shoved a third finger in, twisting. \n\nDoes she really like this? He wondered, amazed. The wet between her legs said yes, but the tightening expression on her face threatened an impending no. He decided to ask her, \"Do you like it?\"\n\nShe made the sound again, something between a woman's cry and an animal's growl. \n\nHe pumped his fingers in her, milking her pleasure, rotating his wrist so that his thumb could tease the hard bud tucked into the peak of her vulva. \"Do you? Do you, Madam Director?\"\n\nShe hissed, baring her teeth. The fangs ever present. \n\nEiri was uncomfortable, now, desiring an end. There was no chance of bringing his erection back. No polite way to remove his hand from her sex and declare himself done. He couldn't bear the thought of her eyes on him, the disappointment there. So he shut his mouth, worked his fingers, grazed his thumb rhythmically over her swollen clit, and was relieved to see her shudder with release, drenching his palm with her pleasure. \n\nHe turned his back to her, as she removed her blindfold, tucked her breast back into the bra. \"Nothing for you?\"\n\n\"No,\" he said. \"I'm tired.\"\n\nShe didn't believe him. Why would she when she could read his thoughts? But she did not press him to say more. She rested her hands on his shoulders, drew him back onto the bed, his feet still on the floor. Eiri closed his eyes, afraid to see her looking at him.\n\n\"You're afraid? I did say I wouldn't feed on you.\"\n\n\"It's more than that...\" \n\nShe stretched out beside him, fitted her body against his, legs brushing his hips. Lying down together, he truly felt how much smaller she was than him - shorter, narrower. Delicate. When they got up from the bed, he wouldn't notice. She would be the Director, a vampire, powerful and imposing with her liquid stare, her knowing silence. \n\nShe reached out, tracing a finger along his check. \"Tell me your thoughts. I'd rather not read them.\"\n\n\"You said something about power in relationships,\" he said, temporizing, drawing out the time between responses so that he could collect his thoughts. The feel of her skin on his calmed him. The tickle of her clothes piqued him - linen, cotton. Soft, yielding fibers. \"Where is the power here?\"\n\nShe took a long time to answer. \"I am one of fifteen children of the Vampire Max Ipomoea. When I first became his child, there were fifty-six. Every so often, we are culled. Our weaknesses are exploited. The strong adapt. The weak die off. My... preferences are especially challenging to my survival. You have nothing to fear from me. Hurt me. Beat me. Bind me. I'll never retaliate. Command me, as if you were my master, and I'll obey.\"\n\nHe drew his fingers over her hair, ran the tip of one over the curve of her ear. She turned her face to his torso, kissed him through the thin cotton, wetting a small circle beneath her tongue just between his ribs. She rested a hand on his chest, ran it down over his belly. \n\n\"Try me,\" she murmured. The pressure of her palm rested just below his navel. \"Command me. Tell me what to do to please you.\" \n\nEiri's head spun. He couldn't believe what she was saying - but he wanted to. The pressure, the monotony, the stress of his job weighed on him. The anxiety he felt, being the plaything of beings far beyond his capacity to understand or best, fed his frustration. Having - at last - a place to vent it was something that tempted him past the point of reason. \n\nHe decided to test her. \"Take off all your clothes.\"\n\nShe shifted, sitting up. The rest of her buttons came undone and the silk blouse peeled down her back. She reached to undo the hooks of the bra, and he stopped her with a hand. \"Leave that on.\" The black lace against her stark white skin mezmorized him. \n\nThe Director stood up from the bed, and hooked her thumbs into the waistband of the pants and panties still bunched around her thighs. She bent down to pull the pants off, wiggling her buttocks to shimmy off the fabric. \n\nEiri sat up, following the side-to-side movement of the fleshy white mounds with his eyes, just inches from his face. He rested his hands on her hips, turning her to face him, keeping his eyes fixed on her stomach, her thighs, the thatch of curly red-brown hair between her legs. He kissed the round of her belly just below her navel and felt her trembling beneath his fingers. \n\n\"On your knees.\"\n\nShe obeyed. \n\n\"Put your hands behind your back.\"\n\nShe obeyed again, without hesitation.\n\nThe possibilities tumbled through his mind, each sending another jolt of blood to his cock. He felt it stirring, rising. But in the back of his mind, the teeth. \n\nEiri realized he was still wearing his shoes. He pushed one foot out, the woven plant fiber gleaming dully in the light of the votive candles. \"Kiss it.\"\n\nTo reach, she had to shift backward on her knees, raise her hips into the air. With her head all the way down, her ass pointed upward, hands clasped at the small of her back. To keep her balance, she had to spread her legs and he saw those magnificent cheeks spreading, the defile between them widening. \n\nHe felt the pressure as she pressed her lips to his shoe. She'd really done it - the vampire was kissing his foot! His cock swelled and he reached for the closure of his leggings, freeing himself. His erect phallus sprang up and he took it in his hand. He saw a quick movement, a move of her head. He nudged her face with his shoe, \"Keep your head down!\"\n\n\"Forgive me, Master...\" she whispered, pressing her cheek to his foot. \n\n\"Lift your ass higher.\" He stroked himself. Each tiny movement she made to accommodate him, obey him, fed his desire. He pulled harder. \"Sit up. Put your hands behind your head. Don't look at me.\"\n\nThe Director rocked back on her folded legs, resting her buttocks on her calves, lifting her torso. She was so close, her breasts grazed his knee as she rose. The sight of the curved glory surging into view, sent him over the edge - and he spent his passion onto her, coating her chest, dripping down onto her tits. \n\nShe sighed, shuddering, eyes fixed on his cock. Her mouth opened, the tongue sliding out. Before she could slide forward to lick him, he commanded, hoarsely, \"No!\" \n\nHe just couldn't get over the teeth. \n\nGasping, dizzy, Eiri rested a moment, watching her watch him. Then, he tucked himself back into the leggings, not caring at all if he stained them, wincing a little at the scrape of cotton on his raw shaft. \n\nSensing the encounter was over, she turned a little away from him. In a smooth, powerful motion, she rose to her feet. \"My car will be waiting outside to take you home.\"\n\nWhen he did not respond, she faced him, the blush gone from her cheeks. Staring down at him with those unfathomable eyes. The Director once more. The role reversal stunned him. He felt something like terror thread its way through his heart, and he mumbled a farewell to her naked stomach.\n\nIn her car on the way to the church that housed him, he wondered, What have I gotten into?\n\n... \n\nInevitably, things got weird at work. He didn't catch sight of the Director in the halls for a day or more. And when she sat in on the cross-functional sync, her eyes were always on her phone whenever he spoke. \n\nEiri did not try to approach. Intrinsically, he understood that at work there would be what his mother called tatemae - the \"outside face,\" a professional facade. Her inside face, honne - flushed, open-mouthed, begging - would only show itself in private, only at her will. \n\nThe balance of power frustrated him, even more so now than it had before their night together. Every snide remark from Hall, every badge swipe against paneled wooden doors, every rigid, constrained dynamic of his employment began to grate on him. Even typical human social convention annoyed him - Christy with her fake laugh, Alan and Jaymin with their aggressively heteronormative jokes meant to disguise their soulful glances at one another. No matter where he looked, \"the rules\" looked back at him, reminding him how powerless he was. \n\nThe soft launch test concluded, returning numbers below expectation. Eiri braced himself for the confrontation with Hall, expecting to see a one-on-one invite hit his calendar. Instead, he was called to the Director's office for a two-on-one - the frosted glass chamber with bowed sides, like a fishbowl. The one-touch opacity filter was off when he arrived; Hall wanted the whole of the office to see him get chewed out. \n\n\"Help me understand what I'm looking at,\" the elf began, holding up his phone to display the deltas, red and angry, hanging well over the black baseline marker. Eiri reached to take it from him, to see the screen more closely - but Hall jerked it back with a furious command, \"Gloves!\"\n\nEiri could not keep back a sigh as he turned to leave the room, go to his desk, and fetch the ultrasuede gloves used for handling proprietary product, and returned to the Director's office to find Hall sitting in one of the two cushioned seats on side of the the Director's desk. He was not invited to sit in the empty one. \n\nHall tossed him the phone. \"Explain. Explain to the Director what happened here.\"\n\nEiri scrolled down, confirmed which of the tests Hall referenced - product recall, the weakest of the bunch. \"Tests came back with lower-than-anticipated uptake. Where we fell down in recall\u2013\"\n\n\"Fell down?\" Hall interrupted. \"Dropped off a cliff, more like.\"\n\nEiri fought to remain calm, feeling his jaw tighten as he handed the phone back to Hall. When the elf refused to take it from him, he set it on the Director's desk. \"Some lag in product recall is expected, given the limited scope of test titles. We knew that without a color association, the average coffee-drinker would...\"\n\nHall snatched the phone from the desk and threw it at Eiri, narrowly missing his head. It bounced off the glass with a sharp bang, drawing the attention of every worker on the open floor beyond the pane. \"We're not interested in the average coffee drinker. This is a high end product for a highly sensitive audience. That's been our market focus from day one. Is that hard for you to recall?\"\n\nThe Director said nothing. Did not even react throughout Hall's tantrum. Eiri glanced at her three times while appealing to Hall's logic, correcting his hyperbole, redirecting his anger. Never once did she return his gaze. But, at last, when Hall had risen to his feet, threatening to cancel the entire project, she interjected, \"That's enough. You've aired your grievances. Now pick up your phone, and take a walk to cool off. Lao and I will align on next steps.\"\n\nHall rounded on her, like a bear rearing on its hind legs to attack. But the Director fixed her eyes on him, and Eiri felt sure she was pressing the elf with her vampiric persuasion. \"Take. A. Walk,\" she said. \n\nHall left. As the door swung shut behind him, the Director touched something on her phone to frost the glass to full opacity. Alone, shielded from the eyes of others, Eiri started to relax, and take a breath.\n\nBut then the Director stood and came around the desk to kneel at his feet. He saw a flash of white skin, the delicate patch just above the inside of the knee, and realized she wore a slitted pencil skirt, not her usual suit pants. Kneeling as she was, he could see the tender white underside of her thigh, a triangle of red lace formed by her panties as the fabric pressed against her. \n\n\"I've missed you... Master,\" she said, shyly. \n\n\"You've got to be kidding me,\" he said. He hadn't meant to say it, but the tension broke him, his hot anger surfacing between the shards of his fractured calm. \"Now?\"\n\nShe looked up. He saw high spots of color on her cheeks - the beginnings of embarrassment. \"Why not? He thinks I'm punishing you. Why not use the opportunity to punish me instead?\"\n\n\"Get up,\" Eiri insisted, rising. \"You can't be serious right now.\"\n\nShe stood, tilting her head back to look up at him. He did not like her eyes on him. Don't you push me like you pushed him...! But even though he could not swear she compelled him, he felt his body stir, starting to respond. \n\n\"You want to, don't you?\" she asked. \"You're angry - I can see it. Let loose. Let me enjoy it.\"\n\n\"Enjoy it?\" Insulted, he grabbed her shoulders, giving her a little shake. \"You think I enjoy this?\"\n\nThe spots spread over her cheeks. She smiled, the tips of her fangs just peeking over her lower lip. He couldn't stand the sight of them. He spun her around, pushing her. She collided with the desk, fell forward. Artfully pushing her ass toward him, the skirt tightening around her hips, her rounded buttocks. His cock stirred at the sight of it. \n\nEiri let his anger guide him, slapping her ass with one hand, hard. She gasped in surprise at the foce of it, bracing her hands on the tabletop to steady herself. He reached for her right arm, pulled it behind her, twisting. \n\n\"You enjoy this,\" he accused her. \"This is for you.\" He spanked, hard.\n\n\"I do,\" she groaned, a soft, desperate noise choked out between the slaps. \"I do enjoy it.\"\n\nHe smacked her firm butt a few more times, not caring if the sound carried beyond the glass. She writhed and wriggled under him, somehow managing to thrust her hips back further with each punishing spank. Furious that she was enjoying his rage, he grabbed the split hem of her skirt and yanked it up over her hips, tearing it.\n\n\"Lao,\" she breathed, startled. \"That's expensive\u2013\"\n\nHe ignored her protests, grasping the band of the red panties sitting over the defile of her ass, and yanking them down around her thighs. The sight of her backside exposed was even more thrilling than his memories of it, and he paused to savor the sight, feeling the throb in his groin. He hated himself for it, and struck her bare buttocks twice more, one blow for each cheek. It left barely a mark. She moaned again.",
        "She really is enjoying this, he thought. She was selfish. She did not care about the tests, she did not care about Hall's humiliation of him. She didn't even appreciate that he was mad; the net result was the same to her. \n\nIn a furious rage, he shoved his fingers into the hot crevice between her fleshy mounds, probing, digging. He found the tight little aperture and inserted a finger into it. She gasped, froze. With his finger pinning her in place, he let go of her arm and went on spanking her, swiping his hand downward over the fleshiest part of her cheeks in painful swats. She struggled, unable to push back without inviting more of the finger into her. She spread her hands on the desk, bracing against the blows. He heard her panting, and he plunged a second finger into the puckering orifice, working the knuckles inside of her. She grunted, twisted under his assault. \n\n\"Do you enjoy that? Do you like being fucked in the ass?\" he demanded. He thrust his hand against her, roughly, bending the fingers inside of her. \"Because that's what you're doing to me! This is what you put us through!\" \n\nHe grabbed her hair, and pulled while shoving a third finger into her. She hissed in pain, arching her back, throwing her hips against the edge of the desk trying to get away from those stabbing fingers that stretched her. \"Stop,\" she said. \"Please...!\"\n\nEiri paused, amazed at his temerity, wondering if she really wanted him to stop or if it was all part of the game to her. Before he could decide, there was a knock on the door.\n\nIn a blindingly fast motion, she stood up, turned, wrenching her ass free of his grip, and struck him. Eiri flew backward with the force of it, colliding with one of the chairs, falling over it. Everyone definitely heard that. \n\n\"What is it?\" the Director said, voice steady but sharp. She was straightening her clothes, smoothing her hair, her back to him.\n\n\"Ma'am,\" her assistant called in a knowing sing-song voice. \"Your 11 o'clock is here.\"\n\n\"I'll take it in here. Bring coffee.\" The Director ran a hand over the torn seam of a skirt. She would not look at him, but he knew she spoke to him when she said, coldly, \"You should go.\"\n\nHe stepped outside her office, feeling the throbbing parts of his back and neck where they struck the chair. His erection long gone. It wasn't until he made it to the bathroom that he saw the blood on his glove. Shame, mingled with pleasure, twisted his stomach. \n\nEiri hid there until it was time to go home for the day. \n\n... \n\nOddly, work improved for the team after the incident. The Director moved them out of the war room back into the open floor, allowing them to take one of the bays near the windows on the fourth floor. Hall also took them off swing shift, allowing them to clock in at 10am instead of 3pm. The regular hours put them in contact with the other Starbucks employees, and moral improved. Christy wore less makeup; Alan and Jaymin spent less time together and indulged in fewer exclusionary jokes. Eiri had the opportunity to meet with several other designers and attend the broader company marketing syncs. The contact restored the team's spirit and gave them each new ideas for improvements to the product.\n\nThe move also kept them at the office mainly during daylight hours. The Director and her subordinates weren't around, then, for chance encounters. Once or twice, Eiri drifted by the frosted fishbowl office, searching for her silhouette. She was never there, even after sundown. \n\nGuilt tore at him. As much as he felt he had the right to be angry, he couldn't convince himself that his actions toward the Director were appropriate. Two wrongs don't make a right, his mother often told him. \n\nHe struggled with how to atone. A private message? A note to her assistant? Eiri never saw the woman anywhere on campus during his work hours. Leaving a note under her office door wasn't even open to him - the seal was airtight and monitored by camera. \n\nFulbright chugged along. The second round of taste tests with the \"soft boil\" technique and his Bauhaus-inspired font tracked positive on sentiment analysis and product recall. Christy also found a new compound treatment for the inside of the cups that improved flavor, pulling long overtime hours in the lab with a few of the chemists she met during lunchtime. \n\nOne day, she invited Eiri to visit her there below ground in the secure lab, and he was started to see bite marks on her neck. \"Has the Director seen this?\" he asked, innocently, when she finished explaining the science of flavor manipulation.\n\nChristy's hand went to her neck, a telltale sheepish crinkle forming in her lips \"Yes... she wanted to know why I kept staying late. We got dinner a few times...\"\n\nEiri was shocked to realize he was jealous. She never bought me dinner, he thought. Did she ask you to brush her hair, too?\n\nChristy mistook his look for one of chagrin. \"Oh, don't worry, Eiri-chan! She's really very nice, and it doesn't hurt at all. It's like getting a hickey!\" She smiled. \"I can... show you sometime if you like?\"\n\n\"I make it a point not to fool around with coworkers,\" he lied. \n\nThe deadline for the spring taste test approached. Eiri found himself putting in more hours alongside Christy, revising the go-to-market strategy and backfilling the roadmap with her achievements to improve Hall's confidence in the tests. Jaymin completed the menu logging ahead of schedule, but Hall, always ready to exploit, hinted that Eiri needed to pull an all-nighter to design a new lid for the limited edition seasonal cups. \n\nVindictive son of a bitch, Eiri thought. Nevertheless, he obliged, lowering all the lights in his corner of the bullpen and losing himself in the design process he loved so much. \n\nSometime before midnight, he caught sight of the Director, walking the concrete path that looped the center of his floor. She was alone, without even her assistant, engrossed in something on her phone screen. She went to the fishbowl and shut the door, frosted the glass. Eiri's heart thumped in his chest. Had she seen him? Did she know he was there? \n\nA tumult of feelings overwhelmed him. Anger, jealousy, suspicion. Had she only toyed with him all this time, with her talk of mutual understanding, of not feeding on coworkers? Was she fucking more of his coworkers, all of them, Hall? Beneath those burning questions smoldered shame - white hot and liquid in his stomach. How could he ever look her in the eyes again without remembering her blood on his fingers, the exhilaration he felt at hurting her?\n\nShame won out. His mother raised him to fear vampires and elves and all the creatures of the Collapse. But she also raised him to be honorable to own up to his mistakes. He got up from his desk and made his way to the fishbowl.\n\n\"Director,\" he announced, rapping on the glass. \"A word, please.\"\n\n\"Come in.\" She defrosted the glass.\n\nNo skirts to entice him, no hairbrush awaited him. She stood beside her desk, a stack of reports spread out over its surface, her phone in her hand. \"Yes?\"\n\nEiri approached, closing the door behind him. He kept his head down so that he wouldn't have to see her eyes on him. \"Director. I apologize for my actions.\" Reflexively, he bowed.\n\nShe did not respond. He heard her moving, shuffling the reports. After a long moment, she said, \"Is that all?\"\n\nHis face felt hot. What does she mean...? Did she want some other form of apology? Was it a test to see if he wanted to resume their agreement? \n\nHe lifted his torso to look at her. But as he did, he caught a flicker of alarm in her face. At the exact moment, all the lights in the building winked out. Her phone vibrated.\n\n\"Shit,\" the Director hissed. \"Lao, get down on the floor.\"\n\nConfused, he hesitated. Then felt her hand around his ankle, yanking his leg out from under him. He landed hard on his back with a thud, knocking the wind from him. \"Oof!\"\n\n\"Stay still,\" she whispered. \"Security breach.\"\n\nFar below them, through the floor, they could feel vibrations. Irregular, moving. Eiri stiffened, ready to rise. But the Director reached over his chest, pinned his shoulders down with her hands. He'd never imagined the raw strength there until it held him. \n\n\"Gunfire,\" she said. \"Can you hear it?\"\n\nHe couldn't - not with his human ears. But he felt another rumble through the ground, powerful enough to rattle the furniture. \"Was that an explosion?\"\n\n\"I think so.\" \n\nHe could feel her there, lying alongside him. The tension in the dark stretching. Frustratingly, he felt the beginnings of an erection. Why now? They waited like that for seconds, minutes. He filled the time with thoughts of the woman beside him, memories of her skin, the breasts bound in her lace bra. He couldn't help himself.\n\nShe stirred a little, an imperceptible movement that brought them closer together. She fitted her waist against his hip, like that time they laid together in her fake bed, talking. He imagined, but could not feel, the warmth of her skin through his clothes.\n\nShe was reading his thoughts.\n\nHe imagined her again, reaching behind to unhook herself, imagining the breasts falling like apples from a tree, the nipples red and hard. His cock got harder. Even before he could wonder whether or not she could see in the dark, her hand closed around it. He gasped. She covered her mouth with his, hot and open against his. He shoved his tongue inside, urgently. In the dark, without her eyes on him, with no way of seeing her teeth, she was just a woman. Just a warm, turgid body sliding against his, entrating.\n\nEiri didn't know if it was the danger or the thrill of the forbidden or both, but seized with a sudden frantic desire, he turned to her. Extended his leg over her, mounting, pressing down. He thrust his hips down against her, pinning her to the floor while he crushed his mouth to hers. \n\nI want to punish you, he thought, hoping she could hear it. If we die tonight, I want the last thing you think of to be my cock. He rammed his hips down onto her with brutal thrusts, feeling her rock beneath him with the force of it.\n\nHer hands were moving, down his torso, over his stomach, to the drawstrings of his leggings. Her fingers worked, freeing him. \n\nHe put a hand in her hair, wound his fingers through it. Pulled. She arched her back, pressing the smooth linen of her pants against his full, hard length. \"Pull your pants down,\" he whispered. Far below them, the ground rumbled. \"Hurry.\" \n\nHe felt her wiggling beneath him, that maddening shimmy. Grinding herself against him as the friction of fabric receded, rolled downward. The cool, naked flesh of her thighs was a shock against his aching hot shaft. She kept wiggling. He let go of her hair, reached between them, digging his thumbs past her hip bones to where he felt the coarse, curling hair, searching. She moved, and he felt a wetness somewhere near the base of his shaft.\n\nShe lifted her hips as he lowered his - and he was in her. He flexed his buttocks, braced his hands against her, holding her down. In three short, sharp thrusts he was all the way inside, buried to the hilt.\n\nAnother explosion rocked the floor below them. He froze, feeling his cock pulse inside of her, the blood rushing all through his body in a frantic surge. \n\n\"Don't stop,\" she begged. \n\nHe found her mouth again, muzzled her with his own, plunging his tongue deep into the hot, wet hole while his cock did the same. She was moving now, small gyrating movements of her hips. He felt all around inside of her, the ridges, the smoothness. Human women sometimes flinched under him, held him back with their thighs to control the depth of his thrust. With her trapped there beneath him, tight little moans in her throat, he ran the full depth of his manhood into her, deep as he could go, not worried if he hurt her. Knowing she loved it if he did. \n\nThe glass above them lit up, a light refracting against the glass. She tightened around him, surprised. The light moved - a flashlight shone from a great distance. Eiri felt a thread of terror wind through him, snaking down from his chest to his groin. His cock surged with it, quivered - and burst like a dam. She shuddered, feeling him spend inside her.\n\nThe light moved again, passing over the office wall. A voice called out, \"This is Air security - executing an emergency wellness check. Any persons on this floor, identify yourself!\"\n\nShe called back, still beneath him, still sheathing him, voice perfectly steady, \"Two employees here! Is the evacuation route secure?\"\n\nEiri got to his knees, pulling out of her, tucking himself back into his pants. She shimmied her pants back up, smearing their mingled juices along her legs with her panties. He reached to help her to her feet, and she managed to smooth her hair and tuck her shirt in with incredible speed, buttoning her blazer neatly over her abdomen as a security guard pushed through the glass door, shining their flashlights at them.\n\n\"Director,\" he said. \"The route is clear. Please follow me to the meeting point.\" \n\nShe led him out, following the guard. She walked as she always did, light-stepped and confident like a dance. Totally at ease despite the danger, despite his cum dribbling down her legs.\n\nAs they were led through the pitch black halls, Eiri couldn't resist reaching out to cup a buttock, slipping a finger between her legs. She was wet through to her pants.\n\n...\n\nSecurity confined all employees to their housing for 48 hours. Eiri didn't catch the full extent of the damage to the building while evacuating, but he caught sight Christy and her boys from the lab being ushered into a security transport. An armored guard took his phone, and his screens vanished from the walls of his condo in the first two hours of the lockdown. \n\nWhatever had happened, it was bad. A Human Resources officer visited his apartment for a half hour security review. They took samples of his blood, his urine. They gave him a bitter mushroom to chew and then asked him a series of questions about where he'd been, who he'd spoken to, had he taken any goods or money from anyone since arriving in Seattle. Mercifully, they did not ask about the Director. When they left, satisfied, Eiri was left behind to retch up the contents of his stomach, head spinning from the effects of the plant.\n\nIt made him anxious and paranoid, unable to eat. Eiri didn't feel safe even with the lights on. He drew the curtains, fetched bottled water and crackers from the kitchen, and kept to his bed, moving as little as possible, rising only to go to the bathroom. He worried that any moment would bring an attack - gunshots through his windows, a pounding on his door. \n\nWhat is going on? He wondered. Was it like the demon attacks on Lan Fan University where hundreds of human students were carried off? Had there been a bombing like on the subways in Uganda when the humans took back the volcano? His mind spun with all the horrors visited on humans just trying to go to work. \n\nFinally, the dreaded pounding came. He jumped up from his bed, alarmed. \"Who is it?\"\n\nThe Director's assistant answered, \"Employees may return to their posts tomorrow morning, but she'd like you to have dinner with her tonight. Her car is waiting to take you to her place. You may stay there tonight.\"\n\nIt never occurred to him that he could refuse. Eiri's hands shook slightly as he drew on his clothes - a crisp slim-fitting Prada suit that hadn't seen the outside of a garment bag since coming to Seattle - put on his shoes. She wasn't waiting for him in the car. Outside Pike Place, he recognized the dark prowling shapes from his youth in China - Demon Triads, on patrol. The Ipomoea must've had extensive connections to use them for private security on elven territory.\n\nHe found her waiting inside, a candlelit dinner set for two on her low dining table. White tablecloth, red wine. She emerged from the kitchen as he entered, wearing simple, shapeless cotton sweatpants and a muscle shirt that bared her arms. Her hair was undone, hanging down her back. In the warm light of the candles, she looked soft and vulnerable - almost human. \n\n\"I'm glad to see you're alright,\" she said. She waved a hand to the table. \"Please, sit.\"\n\nShe set before him a steaming bowl with a familiar smell. \"Ramen?\"\n\nShe smiled. \"I thought you might like some home cooked comfort food. The last few days have been... intense.\" \n\nHe started to wonder how she would know to serve him ramen rather than congee, but then remembered she'd been inside his mind for weeks. \"You're just going to watch me eat?\"\n\nShe chuckled. \"Does it make you uncomfortable? I could taste it a little. But it would be a waste of good ramen. Besides - I'm not even hungry.\"\n\nHe couldn't resist the umami smell. Taking up the long wooden chopsticks, he tasted the broth, picked up the slice of fishcake to nibble. He tried a noodle next, savoring the familiar chewy texture, the satisfying smoothness as he slurped it into his mouth. The sound, he thought, was meant to remind him of sex. \n\n\"Director,\" he said. \"I know I shouldn't ask, but...\" \n\n\"I don't have much I can share,\" she said, following his thought without even using her eyes. \"We didn't take any alive, but none were left to make off with any of our secrets. Mercenaries - difficult to trace, though I think it fairly obvious who stands to gain from a hit on Starbucks.\"\n\nEiri wasn't convinced. Dunkin Donuts had enough market share among demons not to worry about losing a small percentage of its human audience. He thought of saying this to the Director. But he really didn't want to talk about work. Not with her. \"Before the attack...\"\n\n\"You were in the middle of an apology.\"\n\n\"Yes. But you didn't accept?\"\n\n\"No? Well...\" She slid her chair close to his, rested her arm on the table and turned to him. The candlelight glowed against the pure white skin of her head, her neck, sparkling in her bistre eyes. \"I might still be a bit - sore with you. But, I have to say... I understand. I understand what you must have been feeling.\"\n\nHe slurped up the last of his meal. Sat back, facing her. Go on, he thought.\n\nShe smiled, hearing him. \"I haven't been human for eight hundred years. But, I can still remember, sometimes, what it felt like to be human. To have no control over anything. Living after the Collapse, at the mercy of any race that sought to exploit the meek. It was... exhausting.\"\n\n\"Is that why you turned?\"\n\nA blush stained her cheeks. \"That's a very personal question.\"\n\n\"We have a very personal relationship,\" Eiri said.\n\nShe laughed at his bold approach. \"You don't even know my name!\" \n\n\"Well, tell it to me,\" he said, letting his voice take on just a hint of the tone he used when commanding her to take her clothes off.\n\nShe smiled. \"My friends call me Noth.\"\n\n\"And... am I your friend?\"\n\nSlowly, she reached her arm across the table, turning the soft white palm upward. Reaching for him. \"No, but I'd like that.\"\n\nHe took her hand. \"Eiri,\" he said. \"Lao Eiri.\" \n\n\"Nothera Ipomoea,\" she said, squeezing his fingers, the warmth of her palm against his knuckles. Shyly, she added in Japanese, \"Pleased to meet you.\"\n\nNow he laughed. \"Where did you learn that?\"\n\n\"From my human days. Old Japan was still open then, at least to student workers. I lived there for a little while.\"\n\n\"And then?\"\n\n\"You really want to know when I turned?\" She sighed, ran a hand through her hair, the silky brown strands clinging to her knuckles. \"Vampire children are offered The Choice three times in their lives - once at twenty, once at fifty, and finally when you're at death's doorstep. I refused First Choice. When I was in my thirties, I... got sick. Cancer. My husband left me. My father offered me Final Choice, and I accepted.\" She had tears in her eyes. She blinked them away. \"Even now, when I can't remember much else, I can still remember how I felt at the time. Powerless. Victimized. Nothing ever seemed so unfair to me as my life did, then. So - when you say to me now that that's how you feel - brutalized, taken advantage of... I can understand. You have every right to be angry with me, my kind, and the people we do business with at your expense.\"",
        "She hesitated. Then slid her hand up his forearm, caressing his bicep. Trailing her thumb over his chest. She licked her lips.\n\n\"And you still want to fuck?\" Eiri asked, incredulous. \"When you say you know how I hate you?\"\n\n\"Do you hate me?\" She looked into his eyes, but he felt no pull. No hypnotic suggestion. Completely on his own, he remembered the feel of her pinned beneath him, the throb of his cock inside her when the lights shone on the glass and he thought they'd be killed. Wanting to be the last thing she thought of when she died.\n\n\"No,\" he admitted. He reached up and clasped the hand that caressed him, pulling it to his mouth. He kissed her palm. I don't know what it is... The release. The danger. The power. All of it tugged at him in the deepest, most secret places of his heart. Where everything was a blind, raging chaos. He went on kissing her. \n\nShe sighed, enjoying the touch. He went on kissing, down her wrist, her arm. She shuddered when he pressed his lips to the inside of her elbow. \"Eiri...\"\n\nThe sound of his name from her mouth made him hard. He stood, unzipping his suit pants, letting his cock shift upward, out of his left pant leg to peek from between the folds. She stared at the hint of skin there, transfixed. \n\nI could put it in her mouth, he thought. Nothing would please him more. But, looking at her moisten her lips with her tongue, he caught the briefest sight of her fangs. And thought better of putting his dick so close to them. \n\nInstead, he reached one hand out, cupped her face. Ran this thumb along her lower lip, inserting just the tip of it. She puckered her lips, kissing his finger.\n\n\"Open your mouth,\" he said.\n\nShe did and he put his index and middle fingers onto her tongue. Slid them back along it, deeper into her mouth. Her eyes swung up to him.\n\nCan I trust you? He thought.\n\nShe nodded.\n\n\"Really?\" he said aloud. He looked around, eyes coming to rest on the long candles. They were already an hour gone, beads of wax peppering the tapers. He looked back at her, with his fingers jammed into her mouth, and her eyes widened. \n\nHe reached for a candle. \n\nHolding her tongue between his index finger and tongue, he brought the light over her field of vision, the heat of it close to her face. Testing her.\n\n\"Show me your tits,\" he ordered. He kept hold of her tongue, and kept the candle in her face, forcing her to move slowly as she hiked up her top over the high mounds of her breasts. She wore a balconette bra in purple satin with a gold front clasp. He smiled. She knew I'd like that. \n\nHer eyes met his, glittering from the light of the candle. He put her tongue back in her mouth and put just one finger inside with it, thrusting it deep. Let's see if you can keep from biting me... \"Hold still.\"\n\nHe titled the candle, positioning it over the creamy half domes above the purple bra. The first blazing drop grazed the skin where it joined to her chest. She gasped, her mouth contracting around his knuckle. A long, sharp tooth grazing him.\n\n\"Ah, ah, ah,\" he scolded her. \"I don't want to feel any teeth.\" He punished her, pinching her tongue, pulling it out of her mouth. \"Try again...\"\n\nHe dribbled more wax onto her left breast. She squirmed, grunted, but kept her mouth still. \"Good,\" he said. He bent, rewarding her with a kiss on her burning red cheek. \n\nAnother drop of wax on the right breast. The merest graze of her lower teeth against the nail of his thumb as she rocked back. He punished her, pinching the quivering tongue between his fingers. \"I said keep still!\"\n\nShe moaned around his fingers, wiggling in her seat. \n\n\"Take your pants off,\" he told her, keeping a firm grip on her extended tongue. She hooked her thumbs into the sweats and started to pull them down while trying to rise. He splashed candle wax onto the valley of her cleavage and she cried out, sitting her ass back down on her seat. Forced into using smaller, painfully slower moves to pull the cotton sweats down over her thighs.\n\nHe let the wax drip onto them, next. \"Spread your legs.\"\n\nHe let go of her, letting her lean a little back from him, forcing her legs out toward him, spreading at the knees. He looked down as he dripped wax high on her inner thigh, and saw she wore matching purple panties cut in an old style that partially covered the tops of the thighs. Between her legs, the fabric darkened, already soaked through with sweat and desire. \n\n\"I want it there,\" she whispered. He looked up, saw her staring at the candle, lips quivering between her teeth as she bit herself, thrusting her hips toward him. Those teeth...\n\nEiri set the candle back in its holder and knelt between her legs to pull off the sweats. He reached for the band of the panties and pulled those down, keeping the damp satin in his palm as he stood. Stretching the band over her head, he pulled the garment down over her eyes, blinding her, wetting her forehead with her own juices. Casting about, he found his discarded linen napkin on the tabletop, and stuffed it into her mouth, hiding the sight of her teeth. \n\nShe did not resist, though her body rocked under the force of his touch. Blinded, gagged, she waited at the edge of her sheet, legs trembling. Eiri stood back to take in the sight of her, stripped nude from the waist down, top pushed up to her armpits. He reached for the closure of her bra, snapping it open with expert fingers, letting her breasts burst down onto her ribs. Now the look is complete.\n\n\"Lift up your legs.\"\n\nShe leaned back again, looping her hands under her thighs to lift and open her legs. The thatch of red-brown curls parted to reveal the delicate swatch of flesh hidden there. \n\nHe took up the candle again and knelt between her legs. He took his time, admiring her sex, examining it. The outermost lips full and fleshy, flushed dark with arousal. She had only the barest of inner inner lips, the left slightly overlapping the right. The hood over the bud of her clitoris pale and stretched, a tiny divet no larger than the tip of his finger just above it.\n\nShe sensed him staring her, clenching her vulva under the intensity of his gaze, moaning. Moisture glistened between the inner lips. Eiri caught the faintest scent of it, musky, intoxicating.\n\nHe tilted the candle above her and watched the lips shudder and contract as the wax landed on them. Behind her gag, she cried out. The fingers gripping her curved white thighs tightened, nails digging into her ivory skin. \n\nEiri moved the candle away. Put his mouth there instead, letting his tongue slide into the little pocket above her clit. Rewarding her. He slid it down, cupping the flat of his tongue against the tight little bud, about the size of a spring pea. Further down, the tip of his tongue grazed the little mouth, pushing the lips aside, tasting sour and sweet. \n\n\"Mmmm,\" she moaned, writhing in her seat as he stroked her with his mouth.\n\nEiri held the candle over her stomach, dribbling more wax onto the soft flesh that folded there as she doubled her legs back over herself, exposing the full width of her sex to his probing tongue. He delved into it, stroking, licking, applying just the barest pressure to her with his teeth. When the candle burned a little lower, he took back his mouth and brought the blazing tip right beside the dripping cleft of her mons, watching the curling hair tremble and sway in the heat. \n\nHe looked up at her face, half-hidden by her underwear. She knew where the candle was going next.\n\n\"Noth,\" he said. He pushed the wick into the wetness, extinguishing the flame in her cum. \n\n...\n\nWork resumed on Fulbright, though a quarter of regular Starbucks employees did not return to work. The catina was closed until further notice, employee meals being served out in the commons. Clan Air only addressed the attack once in a brief all hands, blaming a radical human rights activist group. Eiri didn't notice anything different in the days that followed, except for some of the panelling being replaced with metallic sheets of some flexible material. The walls of the Director's office were fitted with them. But Eiri hardly noticed - he never went in there anymore. \n\nAt work, she even seemed to avoid him, declining calendar invites to the weekly sync. Once, Hall tried to schedule her to attend a 1 on 1, but she sent a proxy - a snooty young vampire who interrupted Hall almost as much as Hall interrupted Eiri. The spring tests came back strong and they were cleared to enter the final sprint to launch worldwide.\n\nJust ten days. Eiri thought he'd enter into the state of panic he felt completing his thesis - a mind numbing haze of anxiety and pressure.\n\nBut all he thought about was her. Whenever he left the campus - to shower, change, or find food when the cafeteria closed, her car would swoop past him on the street. He'd find her more often than not in the backseat, naked and waiting, not even caring at times to have him tie her hands or pull her hair. \n\nThe vintage limousine added another thrill for Eiri - he'd grown up on ancient prints of pre-Collapse moving stories where lovers met in the back seats of cars on cliff sides. Never before Starbucks had he spent so much time inside of the antique vehicles. Now he had a chance to experiment with the thrill of the confined space, so close to exposure with its moving window panes. He delighted in lifting Noth onto his lap, feeling her squirm against his hard cock as he fondled her breasts, stroked the hot, wet crevice between her legs. \n\nHe liked to have her resist him in the car, pushing his hands and begging him to stop, saying someone might see them. He peeled more and more of her clothes away with each fake, frantic plea, unless she was already nude. Then he settled for pinching her nipples, her labia. Once, trapped in his lap, he even spread her legs far apart using his knees to wedge open her thighs and he slapped her bare sex until she screamed. Surely the driver heard - but the tinted window between his compartment and theirs remained sealed. \n\nThe few times they did make it back to her place without her impaled on his cock, he indulged her - contorting her over tables or chairs, tying her up, tying her down. Pulling her over his knee to spank her bare buttocks with her wooden hairbrush until they flushed a deep, angry red. Winding a leather belt around her face, threaded through her mouth for her to bite down on as he plunged his cock into her from behind, holding the ends in one hand. Shoving a short, thick device into her trembling anus while he fingered her dripping cunt in a steaming hot shower. His favorite was tying her hands behind her back and lifting her up with him inside her, until just his swollen tip fitted into the gaping mouth of her sex - and then he'd let go, watching her slide back down his length, writhing to balance herself with her hands bound, clenching all around him. \n\nHe always gagged her, and commanded her not to look at him when they didn't have the blindfold handy. She took it as part of the game, calling him \"Master,\" and keeping her eyes downcast while he stripped her, bound her, beat her. But seeing her delight in it, the flush of her skin, the sheen of sweat glistening over the high color, he found himself losing sight of the boundary between play and reality. He sometimes caught himself glancing at her on campus, as she passed him in the hall, wanting to reach out and slap her, command her to strip.\n\nThey were so close to the end. Even Hall was caught in the mania of the final sprint, whirling between meetings like a dervish, eyes always darting to the next task. Eiri tried to keep the pace of meetings and syncs with his team, but it wasn't until three days before launch that he even managed to find ten minutes for Christy and a friendly cup of coffee.\n\nShe had fresh bite marks on her neck.\n\nUnder his hard stare, she blushed. \"Come on, don't be like that... I told you, she's nice about.\"\n\n\"The Director?\"\n\n\"Yeah,\" said Christy. \"She listens, you know? And we go out to dinner and she talks about all kinds of things. She's over eight hundred years old, did you know?\"\n\nEiri's jealousy pierced the fog of his lust. He tried to tell himself to keep calm, that it didn't matter, that at the very least, they could talk about it later. But he found himself striding to her office, not even bothering to knock as he pushed inside. She was not alone. A tall elf - the same from the night of New Year's party - held her in his arms from behind, his bearded mouth at her neck. Kissing her. She caught sight of him at the door.\n\n\"Can I help you, Lao?\" she asked. The elf lifted his mighty head and stared. \n\n\"Director,\" he said, unsure. \"I... hoped for a moment of your time.\"\n\nShe considered him a moment. Then rested a hand on the forearm of the elf and said, \"I'll see you for breakfast, dearest.\"\n\n\"I can't wait, my love.\" He kissed her again on the cheek and brushed past Eiri on the way out.\n\nEiri waited until the door closed behind him before uttering a furious exhalation. He stared as hard at her as he had at Christy, disgusted. Horrified. \"Who was that?\"\n\n\"My fiance,\" she said, cool and correct. She seated herself behind her desk and motioned for him to take one of the chairs. \"What's on your mind, my friend?\"\n\nFriend? He sat. \"Why does my chemical engineer have your teeth marks on her? I thought you didn't feed on coworkers.\"\n\n\"Oh, that?\" She smiled. \"She's... an edge case.\" \n\n\"Explain,\" Eiri fumed. He did not like to see her so jovial, so carefree. He preferred to see her stretched over the back of a chair, ass red and raw from his belt. \"Do you... do all of that with her too?\"\n\n\"No, of course not,\" she said. \"Is that it? You're jealous? Don't be. Christy is type AB negative - the rarest blood among humans. I couldn't resist taking the odd sip when she offered. That'd be like turning down a glass of pre-Collapse Yamazaki - ludicrous!\"\n\nHe didn't like the comparison. \"Is that how see us? As sips?\"\n\nShe sighed, broke eye contact. \"I can't change my nature. In any case, if it makes you feel better, I haven't been... intimate with anyone but you.\"\n\n\"And your 'fiance?'\"\n\n\"Eiri,\" she said, sternly. \"Don't be childish. A business relationship sometimes needs social engineering. When Fulbright debuts, there will be questions. A marriage distracts.\"\n\n\"What kind of questions?\"\n\n\"About the blood.\" She locked her eyes onto his; he felt her touch in his mind. \"You don't know...? Hall didn't tell you?\" Her tone took on a menacing pitch. \"I can assume the whole team is in the dark?\"\n\n\"What does the team need to know?\" Eiri asked. \"About blood?\"\n\n\"You really don't know! We use blood to roast Fulbright beans,\" the Director said. \"That's the 'secret' ingredient. Only vampires have the means to source that much blood. Why else would the elves need our help to produce coffee when they've been making it ever since the Collapse?\" \n\nStunned, Eiri put his head in his hands. They didn't tell us. \"We were brought onto the project because they felt humans had better insight into human tastes...\"\n\n\"Elves and their bullshit intrinsic theory,\" the Director said. \" You were hired so they could profile your blood, and send it to us to clone at scale. I'll go over it in the sync - you all should have been informed at kickoff.\"\n\n\"But I don't understand,\" Eiri said. \"Why us? Why our blood?\"\n\nShe blinked at him, her brow furring with mingled compassion and pity. \"Eiri. You're B negative. So is Jaymin. Alan is AB positive. And that intern was O negative. I've known this about you - all of you - since before joining the project. You were selected by blood type, and approved by me as a perfect combination of rare types - we fiddled with it for months to get the right combo for soft boil. I can't believe Hall left you in the dark. That's just fucked up.\"\n\n\"It is!\" He felt sick. Angry. \"You hired us because of blood type?\"\n\n\"Oh, it's not just that,\" she said, trying to comfort him. \"Each of you is more than qualified to launch a consumer product! Beijing Design is no joke. And you know how elves are about looks... Even I'm only here because I was considered aesthetically pleasing! My VP couldn't get a visa.\" She set down her phone. \"Calendar invite for a team huddle tomorrow should be in your inbox. I'm very sorry, Eiri. This isn't good management practice. It's below even demon standards.\" \n\nEiri didn't respond, at first. Selfishly, he thought only of his own turmoil. Drinking coffee made with human blood... He barely thought of his team. Poor Christy. Just a sip. He stood up. \"I'm going home for the day.\"\n\nShe looked at him, eyes full of pity. \"Yes. That sounds reasonable.\"\n\n...\n\nThe Director broke the news the next day during a team sync. Hall, sulking, stood behind her, not even bothering to move his lips in sync to the Director's apology. Eiri glanced at the faces of his teammates and saw them paling with the realization that their work hinged on their own bodies. Christy feigned a careless little shrug, but even she was subdued for the rest of the workday. \n\nEiri thought briefly of rebelling - walking out, quitting. Sabotaging the launch, somehow. Deleting data or leaking it to some human rights activist group. But in a post-Collapse world, he knew that none of it mattered. The elves could replace him; the project would launch with or without him; humans would still drink the coffee even if they were reading the full list of ingredients. He wondered, darkly, if he'd already tasted the coffee made from his own blood from the pots in the office. \n\nHe moped through the final days, feeling none of the adrenaline he usually did from completing a project. Even the odd sight of the Director in the halls didn't distract him from his melancholy, though sometimes he caught her gaze lingering on him. When he saw her car in the street, he deliberately walked by it. She did not send her assistant to collect him.\n\nHouse Air planned a launch party for them the week after they went live. Rather than a company-wide campus happy hour, the invite gave the address somewhere in the Marymoore Copse that didn't show up on Google Maps. Rumors swirled of a mysteries fairy mansion that only appeared under the full moon. A magic place, dark, and secret. \n\n\"Great place to celebrate launching a shady project,\" Alan joked. Christy and Jaymin laughed along with him. No one had seen Tim the intern since the Director broke the news about Fulbright's \"secret ingredient.\" \n\nEiri considered not going, leaving the calendar invite to languish in his inbox. Christy nudged him on Messenger three separate times in a day, trying to entice him. \n\n\"It's just a party,\" she said. \"You're the product designer - how would it look if you don't go??\" And, finally, \"Wear one of your sexy suits. Rub in their knobby faces. They couldn't have done this without you, Eiri.\"\n\nHe caved and said he'd go with her. At the very least to keep her away from vampires looking for \"a sip.\" Almost as soon as he replied to her, he caught sight of the Director and her assistant strolling to the fishbowl. Eiri decided to trail behind them, wondering if he could catch the vampire's eye - inflict some of his turmoil on her mind. \n\nHer fiance waited for her in the office with two of his own associates. The Director left the glass transparent and Eiri discreetly watched from the mini kitchen as the two conversed. He got the sense it was an argument. The elf did not embrace her as he had before, and she kept a physical distance from her fiance that allowed her to keep her neck neutral instead of tilted up. Keeping some power in the exchange. Eiri also though he recognized the set of her jaw from their play - an arrogant, mocking angle she took to provoke him into hitting her harder. \n\nThe elf left without touching her. After a moment, the Director sent her assistant out with a gesture. She was just taking out her phone when her head turned and she saw him, watching her from the kitchen.",
        "He felt the yawning pull of her eyes, hypnotic suggestion. She wants me - bad! The thought thrilled him.\n\n\"Director,\" he said, entering without knocking. She frosted the glass as he closed the door behind him.\n\n\"Eiri,\" she said, waiting by her desk.\n\n\"Was that your fiance who stormed out just now...?\" he asked.\n\nShe sighed. \"It's the guest list. He wants the launch to double as an engagement party - inviting his family's allies, rivals. I wanted to include more employees, let them share Fulbright's success. We're getting a lot of backlash over the prolonged secrecy of the project; I wouldn't want it to reflect badly on your team, hurt your long term employment prospects.\"\n\nEiri winced. He hadn't thought about what would happen without Fulbright to support his visa status. There's no way Hall will renew it... \n\n\"Don't worry about Hall,\" she said with her trick of knowing his thoughts. \"If you want to stay, Eiri, I'm sure it won't be hard for you to find another team. You should talk it over with your manager.\"\n\n\"Isn't that Hall?\" he asked.\n\nShe laughed, incredulous. \"God, no. Eiri - haven't you ever checked the org chart? You report to the head of design. Not the product manager. And certainly not to me.\"\n\nHe blushed, embarrassed. \"I... didn't know.\"\n\n\"It really is your first job out of college, isn't it?\" she chuckled. \n\n\"Don't tease me, Noth,\" he said. She stopped giggling as he said her name. He thought she looked a little sad. \"What?\"\n\n\"You hardly ever say my name. Now I worry I'll never get to hear you say it again,\" she said. \"After the wedding, I'll be moving to their family home, doing whatever it is elven wives do. I expect it's boring. But... maybe a little more restful than the life of a working vampire. If you stay here, you should consider hiring personal security in case whatever group blew up the lunchroom comes back.\"\n\nHe started. Everything felt like it was happening too fast. He hadn't imagined what life would be like when Fulbright shipped, what living in Seattle on a full visa would really be like. In many ways, he realized, it would be no safer than being home in demon China. And he hadn't imagined never again touching Noth's breasts. \n\nShe was imagining it for him now, pushing her sadness, her regret onto him. Augmenting his own sense of impending loss. He wanted to grab her, then, crush her to him. Kiss that terrifying mouth with its deadly teeth and jam his hot cock deep into her weeping cunt. \n\n\"I'd like that,\" she murmured. \"Have you had a chance to shop for an outfit? For the party? Maybe you could come with me to get mine fitted. It's where I'm heading next. ...My fiance isn't invited.\"\n\nThey left together, not even bothering to feign discretion. He held her hand, she laughingly told him a story about having an elemental tailor who could never find scissors. \"Every time, it was 'Can you bite this off for me?' I swear she just wanted to see my teeth!\" \n\n\"Did you bite her?\"\n\n\"God, no. She was a rock elemental - would've snapped my fangs off!\"\n\nThe climbed into the backseat of her car, still laughing. She asked him about where he shopped in China, and was it hard to find clothes that fit his tall frame. He confessed his secret obsession with vintage pre-Collapse neoprene, a rarity in demon-controlled countries. \"After months of organic cotton, it's going to be a real shock to go back to all the synthetics stored in my mother's attic...\" \n\n\"I told you - you don't have to go back, if you don't want to. I know Hall is a nightmare, but he's an outlier among Starbucks elves. A spoiled second son they indulge with the odd high profile job. After this, I imagine he'll get transferred to product operations...\"\n\n\"How did you stand working with him all this time?\"\n\n\"Whenever he opened his mouth, I pictured you fucking me and sent it his way,\" Noth shrugged. \"Seemed to throw him off his monologues.\"\n\nHe turned to her, kissed her cheek with real affection. She squeezed his hand and smiled, dimples blooming in both cheeks. \n\nShe took him to a small boutique in Sunk Town, an indoor shopping district two and a half miles below ground. Eiri was stunned to see hundreds of vampires throning the well-lit tunnels, smiling, laughing, stopping to window shop. Living for all the world as if it were Old Seattle thousands of years ago. \n\n\"I didn't know there were so many here,\" he said. \n\n\"Oh it's a very popular tourism spot for us,\" she said. \"Family friendly nightlife is hard to find everywhere - but the elves did so well preserving the old city underground. It's a great place when you're not interested in hunting or fucking on vacation.\"\n\nThe dress boutique reminded him of the Yves Saint Laurent storefronts in Shanghai - an unassuming entryway with stark contrasting color blocking on the interior. A water elemental ran the shop, drifting between interconnected aquariums checkered across the walls behind the colored panels. Like the fishbowl at the office, a surface might be opaque or transparent, depending on where the salesperson was. \n\nThe water elemental greeted Noth by name. She ran her glowing eyes - like the trailing glow of the flashlight fish - up and down his body and smiled, showing many pointed teeth. \"Will your companion be assisting you at this fitting?\"\n\n\"He will,\" Noth said. The elemental led them to a private changing room where a platform with three lighted mirrors dominated a corner and a long, smooth couch sat opposite. The elemental blacked out the panels as she left, sealing the door behind them for privacy. Eiri sat on the couch, running his hands along the fabric in wonder - real leather! Butter soft and well-maintained. \n\n\"I know,\" Noth said. \"This is place is kind of ridiculous. Far from practical.\" She stepped up onto the platform and twirled, smiling at him. It took Eiri longer than he wanted to admit to realize she cast no reflection in the mirrors.\n\n\"That's why you invited me? To tell you how you look because you can't see for yourself?\"\n\n\"Well... That's not the only reason.\" She winked. \n\nA soft chime sounded, and the door panel dissolved into view, swinging open to reveal Noth's assistant, carrying a garment bag. \"Ma'am, the dress. Let me help you.\"\n\nEiri watched awkwardly, not sure whether to look away or stare, transfixed, as Noth stripped down to her underwear - a nude colored cotton set with white lace applique - and her assistant removed a dramatic, floor-sweeping gown from the garment bag. It was a natural column silhouette in dove gray silk, covered from neck to hem in muted gray-green leaves and dusty pink flowers embroidered in superfine linen fibers that shimmered in the dressing room lights. \n\nNoth stepped into the pool of the fabric, turned to let her assistant fasten the silk button closures up the back. Then - a finishing touch - a long, black satin ribbon looped beneath her breasts, around her stomach, over her hips. The assistant reached to help her boss tie the sash off just under her rounded buttocks at the back, where the row of buttons stopped. \n\nHer work finished, the assistant withdrew. Noth turned to Eiri to ask, \"What do you think?\"\n\n\"The ribbon ruins it,\" he said, bluntly. \n\n\"See, I knew I could trust a designer to tell the truth,\" Noth said. \"I was inspired by the old Roman gowns from antiquity. And I wanted some kind of structure. I won't be wearing anything underneath...\" \n\nReally? He smiled. \"Then, maybe you should try it on as it's intended to be worn...\"\n\nShe smiled back, keeping her fangs hidden behind her lips. She started to reach for the buttons, but he shook his head, stopping her. The gentle touch of her mind in his made him shiver, and he imagined in detail exactly what he wanted her to do. She blushed and his mouth watered as she reached her hands down to her thighs and began to gather up the silk a handful at a time, slowly exposing her bare legs, her trembling knees, and at last, her cotton panties. \n\nShe hooked her thumbs just between her hip bones and the band, slowly shimmying to pull them down. The gown came down with them, obscuring his view. \n\n\"That won't do.\" Eiri stood up, and she kept her eyes down, engaged in the game. \n\nHe came over to her on the platform, marveling at the novelty of seeing himself reflected in the triple mirrors while she didn't cast so much as a shadow. He touched her hips, running his hands over the silky leaves and flowers, feeling the weight of the luxurious fabric as caressed her back, her belly. The satin sash felt cool and smooth under his fingers; it came undone easily as he tugged at the little bow tied below her buttocks. He took the strap between his fingers, measuring out the length of it.\n\n\"Put your hands behind her your back.\"\n\nHe reached for the hem of the gown, hiking it back up over her waist. He tied one end of the satin strap around her bare waist, looped it between her legs, bunching the gown up under her arms. He bound her wrists just above her ass, pinning the folds in place. He had just enough slack left in the strap to reach up her back and wrap around her neck in a tight collar, forcing her to keep her hands in place lest she choke herself. Pulling up on her hands scissored the strap between her legs, where it rubbed against the high mound of her sex. And if she moved too much, she'd lose control of the gown wadded up under her arms, letting its full weight pull down on the strap. An impossible predicament.\n\nSatisfied, Eiri patted a bare butt check and went back to his place on the couch. He admired the sight of her, the beautiful gown contorted and mangled behind the tight band of black satin stark against her white skin. Her cheeks were already bright red, her legs still shaking. \n\n\"On your knees.\"\n\nShe went to kneel and he savored the sight of her wincing as the strap tightened - first around her neck, then over her sex as she struggled to stay upright. Let's make it interesting.\n\n\"Come here.\"\n\nShe shot him a quick glance. \"It's a twelve million dollar gown...\" \n\n\"Do it right and it won't touch the floor,\" he said, adding just a touch of sterness to his voice. \"You're not a careless little girl, are you, Director?\"\n\nShe bit her lip and lowered her eyes again. \"No... Master.\"\n\nHis heart nearly beat out of his chest at the sound of the word. I may never hear it again... \"Come here,\" he commanded again.\n\nShe went to him on her knees. Carefully, painfully lowering herself from the platform with one leg while the strap slipped higher between her folds. Twisting and swallowing as it tightened around her neck. She swished her hips, trying to move her knees in longer strides without compromising herself. But the satin torment hiked up higher, tighter, disappearing completely between her fleshy nether lips as she shuffled to him. I bet it looks even better from behind...\n\nHe put a foot out. \"Kiss it.\"\n\nLike that first time, she had to raise her ass high in the air to accommodate him. He caught sight of the strap snaking up between her buttocks to wrap around her wrists just below the shimmering fabric of her wedding gown. The sight of it made his cock throb and blood rush to his ears. He hardly felt the pressure of her lips on his shoe. \n\nEiri reached down to touch himself, feeling his hard length inside the leggings. Trapped, just like him. He would wear them always while he worked for the elves; a slave to their style, their preferences. He would never be himself while he worked for them. Looking at Noth, trembling at his feet, he started to understand some of what she felt. Living among vampires, always needing to dominate lest she be torn to shreds by her peers. When secretly she longed to be dominated. \n\nWe'll never be free again, he thought. She looked up at him, her eyes sparkling with tears above the radiance of her lusty blush. He felt her mind, knew that she'd heard him. \n\nHe reached out his hand between his legs, and she kissed his palm. He stroked her face tenderly. Beautiful. He did not know if the thought was his or hers.\n\nThen he put his thumb into her mouth, to feel the teeth. He ran the pad of it over her human teeth, then to the sharp tips of the left incisor. He pressed against it ever so slightly - and his skin tore.\n\nHer eyes went wide at the taste of him. She opened her mouth, put out her tongue, rubbing its rough surface over the abrasion. Both tasting him and pushing him away from her fangs. \n\n\"Don't,\" she said. She turned a little away from him. \"If even a drop gets on this gown...\"\n\nHe leaned down, grabbing the taut leather strap behind her neck where it stretched down to her hands. He jerked it back, commanding, \"Open your mouth.\"\n\nShe whimpered, but obeyed, and he plunged his fingers into her, slicing the knuckles against her fangs. Rubbing his blood onto her tongue. Her lips closed around them, sucking with vicious avidity. He thrust them into her, daring her to bite, forcing her to rock back on her heels, the torment of the strap at her neck, her vulva making her grunt with mingled pain and pleasure. \n\nHe was hard, so hard. Eiri let go of the strap and reached to free himself, feeling the hot weight of cock swing out of the leggings at the slightest touch. He looked down at himself and saw a tiny glistening drop at the tip. \n\nShe saw it, too, and she let go of his hand in her mouth, jaw wide, tongue hanging out like a dog. Eiri grabbed his dick, his hand slick with her saliva, and pumped himself. He slid forward on the seat and she dove her head toward him, swallowing him to the hilt in one gulp. \n\n\"Fuck...\" he grunted, feeling the heat of her mouth around him, squeezing. Somewhere in there, the dreadful teeth. But he couldn't feel them past the surge of pressure that came from her, her throat working, her nostrils flaring as she inhaled, sucking him hard, her tongue undulating along the underside of the shaft, the tip of it wiggling at the base of it.\n\nEiri glanced up and saw himself in the mirror - only himself, with his cock appearing to stretch and quiver and glisten all by itself in midair. Never had he seen it so large, so dark, so veiny. He braced both his hands on the edge of the couch and thrust outward with his hips as hard as he could into her eager mouth.\n\nHe came inside her, then and there. He knew it only because she whimpered and quivered, recoiling. He shared her panic - the dress! He held her head with one hand, and cupped his other beneath her chin to catch whatever she did not swallow. He felt her move, felt the throat work. And at last, she snapped her head free of his cock with a wet - pop! - sucking the last of his cum and her spit back into her mouth. Only a thin trickle ran down her lips. He wiped it away with his shirt.\n\nShe swallowed, gasped, and swayed on her knees, dazed and breathless. He reached down to hold her, circling his arms around her while he reached for the knot at her wrists. \"Eiri,\" she whispered his name so sweetly into his ear. \"Eiri...\"\n\nHe kissed her neck, feeling the satin that still bound her there. He worked the knot there free and she shuddered, her arms coming around his back to steady herself. \n\n\"Noth,\" he murmured, smoothing his palms over her gown, straightening it over her hips, careful to keep his bloodied fingers away from the precious garment. The rich silk pooled around her knees on the floor, unmarred, unblemished from their sex play. Covering up their mingled shame and pleasure. \n\nWhen he pulled back to look at her, he saw tears on her cheeks. \"The gown is fine - not even a drop spilled...\" \n\n\"No, it's not that...\" She smiled, wiped the back of her hand over her eyes. \"It's just... I... I've never done that before.\"\n\n\"You're kidding?\"\n\nShe laughed, a rasping giggle. \"I'm not. I was... saving it for marriage. Vampire thing - the mouth is how we make our children, after all. It's special. Sacred.\"\n\nAnd all this time I've been gagging you, he thought. \"I didn't know. I'm... sorry.\"\n\n\"Don't be sorry,\" she said. \"I'm glad it was you. I... care for you, very deeply, Eiri. I know we haven't spent much time together - and it's all been so sordid when we do... But with you is the only time I've been happy here. With you, I feel completely free.\"\n\nHe kissed her, unafraid of her teeth. Afraid now, only of losing her. \n\n[End Part 1]"
    ],
    "authorname": "NoraBarnacle",
    "tags": [
        "fetish",
        "bdsm",
        "supernatural",
        "interracial love",
        "romance",
        "nonhuman",
        "non-human",
        "romantic"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/like-blood-for-coffee-pt-01"
}