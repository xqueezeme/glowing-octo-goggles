{
    "title": "All-Inclusive Summer",
    "pages": [
        "=======================\n\nDaughter and her friends think Daddy's been alone long enough.\n\nJust a quick little story for the Summer Lovin Contest. Nothing earth shattering. There is a relationship between a father and a daughter that some might find a little too close, but there's no incest. If that bothers you, please enjoy one of the other extremely good contest entries. There is a wealth of them this time around.\n\n=======================\n\n\"Daddy?\"\n\nI looked up from where I was working at the computer. It was pretty much all I did most evenings. \"Yes, sweetie?\"\n\n\"You know how you said I could take one friend on vacation, and I invited Tina, and her mother said she couldn't go?\"\n\nYes, I was fully aware. Tina was my daughter's best friend. Two peas in a pod. Twins separated at birth. She lived directly behind us and had been a fixture since the kids were four years old.\n\n\"Yes, and you invited Donna instead.\"\n\nMy daughter had walked over, and she was standing in front of me, hands behind her back, rocking back and forth. I knew the look, she wanted something.\n\n\"Well ... Tina got straight A's, and her father paid up his child support, so her Mom says she can go now.\"\n\n\"That's nice, but you already invited Donna, and I've met with her parents. You can't change your mind now. We've already paid for the tickets, in her name.\"\n\n\"I know, Daddy, but Tina really wants to go. She's been working on her mother for weeks. Can't she come too? It's our last summer. Please?\"\n\nI wanted to remind Wendy that it was our last summer as well. It had been just us two since her mother passed away four years earlier. I had hoped we could spend some time together, one last family vacation. Then she had begged to bring a friend along, and I had folded. Now she was asking for two. I figured I'd never see her for the whole week. \n\nShe noticed my hesitance. \"Please, Daddy! Pretty please? With sugar on top?\"\n\nWhat can I say? My daughter has me wrapped around her little finger. She's been my lone beacon of light for four years. She takes care of me, cooks, cleans, does the laundry, and more. Still maintained good grades. That first year, after losing her mother, when I felt like rolling over and dying, she was the strong one, when no fourteen year old should have to bear that burden. She made sure I ate, got me off to work, stopped me from drinking when all I wanted to do was crawl inside a bottle and die. She even scheduled and made me attend therapy. When I was well enough to handle things, the guilt was overwhelming. I had failed my daughter when she needed me most, and swore never to do it again. She became my raison de vivre. I've been doing my damnedest to make it up to her for the last four years. \n\n\"Of course, darling. If that's what you want. I'll see what I can do to get another ticket, and to add her to our group. The three of you will have to share a room, and I don't want you ignoring Donna, once you and Twin-Tina get together.\"\n\nHer excited squeal, and big hug was enough to make me happy.\n\n* * *\n\nThe last minute addition was pricey, but we could afford it. Hell, once she went off to college, I had nothing to spend money on. I had a great job, and my wife's life insurance had paid for Wendy's college, and paid off our mortgage. Even spoiling my daughter rotten, I was able to bank a few grand every month. This was our last hurrah, and I'd pulled out all the stops, booking a top of the line all-inclusive resort, with two adjoining suites. All activities and amenities were covered. \n\nI was looking forward to relaxing by the pool, taking advantage of the unlimited adult beverages and the views. I hadn't dated since my LeAnne had died. I was quietly anticipating testing the waters once my baby girl left for Rice. \n\nThe girls squealed like little kids when the stretch limo arrived to take us to the airport. It was silly, but Wendy had always wanted to ride in a limo, and it was my last chance to spoil her. The three girls were chattering like magpies, standing up through the sunroof and laughing. It made me feel good.\n\nOn the plane, they sat three across, my baby in the middle, talking about all the things they were going to do. They had a list of the resort activities that must have been a mile long. Tennis, snorkeling, beach volleyball, wind-surfing, water-skiing, para-sailing, pool games, an in-house disco, the list went on and on. From the sounds of things they were planning on doing all within one short week.\n\nMe, I sat on the aisle of the row opposite, next to a young couple that were more interested in each other than anything else. I figured that was how the week was going to be. I was a fourth wheel, but that was fine. As long as Wendy was happy. I could take care of myself.\n\nThe courtesy van picked us up, and the suites were everything I had hoped for. Spacious, with large bedrooms, a casual living area, and a broad balcony seven stories up that overlooked the beach. The girl's side had two queen sized beds, while mine was a single king. Both opened to the same balcony, where all of us gathered once we'd done our minimal unpacking. It was already past noon. \"Lunch, ladies?\"\n\nWendy was their spokesman. \"We thought we'd go to the pool. They have a snack bar there we can eat at.\"\n\nI nodded. I'd eat alone. \"Girls, I don't want you getting trashed. They'll serve you alcohol since you're all eighteen, but don't overdo it. I promised your parents I'd take care of you. So I don't want you separating, or getting drunk. Watch out for each other, Ok?\"\n\nThe girls giggled, and promised they'd be good. Twenty minutes later I was still waiting in the living area, to head downstairs with them. I figured it might be the last time I saw them for a while.\n\nTina was the first to come out, and I was surprised when she came over and gave me a big hug. \"Thanks Mr. Z, for letting me come on this vacation with you guys. You're the best.\"\n\nI gave her a short hug in return, and drew away before she could notice what the effect of her postage stamp bikini was having on me. It had been four years after all, and rosey-palm only went so far. Tina was gorgeous. \"Couldn't leave one of the twins behind, could I?\" \n\nShe rose up on tippy-toes and gave me a peck on the lips, which I hadn't expected. Not when it was the first one in fourteen years. \"We're gonna take care of you, Mr. Z., I promise.\"\n\nAny hope I had for hiding my appreciation of her assets was lost after that little kiss, and her innocent promise. Especially not when Donna and my daughter came bursting out of their room, laughing. Donna jogged up to me, and gave me a huge hug, squishing her over-sized and under-covered breasts against my chest, and dropping a lip-lock on me that almost knocked me over. \"Thanks Mr. Z.,\" she sighed, still squeezing. \"This is going to be the best vacation ever!\"\n\nThen my daughter was taking her place, giving me a hug, and politely ignoring the wood her friends had given me, poking her in the belly. \"Daddy, I want you to make me a promise,\" she said.\n\nI'd been had by the little fiend too many times. \"Not until I know what it is.\"\n\nShe giggled. \"It's not a bad one, I swear.\" She was grinning to beat the band. \"This is your vacation too,\" she said. \"It's been four years, Daddy. I want you to talk to some of the ladies. Maybe you can get lucky. It's about time, don't you think?\"\n\nI know I was blushing. \"Wendy\u2014\"\n\n\"Promise me Daddy! We'll make sure you have your privacy. We're all adults now. So I want you to go out there and try.\"\n\nTina moved up next to me, and rubbed my arm. \"She's right, Mr. Z. You're going to be the best looking man out there. All you'll have to do is smile, and you'll be beating them off. So take care of yourself, we'll be fine.\"\n\nI was getting nervous about their intentions. \"Uh ... you all aren't planning on bringing any boys back to the room, are you?\"\n\nWendy laughed. \"Daddy! What happens in Aruba, stays in Aruba. We'll be good, I promise.\"\n\nTina was quick to add, \"And if we're bad, we'll be careful.\"\n\nShit. That's all I needed to hear. Three 18 year old beauties, in an all-adult super premium resort. Alongside half-a-dozen more resorts. \"Please take care of each other, and don't get too carried away.\"\n\n\"Don't worry Mr. Z.,\" Donna said. \"We'll be good, and careful. Just make sure you do like Wendy said. While we're being good, we expect you to be a little bad.\"\n\nI peeled my daughter's arms from around my neck, and stepped back from the three vixens. \"I'll be by the pool, or on the beach. I'd like you to check in every now and then, so I know you're alive. Let's meet for dinner at seven at the buffet.\"\n\nWendy had more on her mind. \"We thought we might visit the spa while we're here. Can we sign things to the room?\"\n\n\"Just keep it reasonable, alright? Don't go too crazy, or invite half the beach to join you.\"\n\nThat got me a quick kiss, and then the girls were dragging me along.\n\nI lost them almost immediately, and after helping myself to the buffet lunch, I opted for one of the VIP poolside setups. It got me a covered space, with four lounge chairs, in case the girls ever needed a break, a great spot by the pool, and a view out over the beach. Within moments of being seated my cabana 'butler' showed up taking my order, and leaving a list of available amenities.\n\nA couple of hours into my stay, I was more relaxed than I'd been in years. Four large house \"Palace Specials,\" and a half-hour massage from a lovely French masseuse helped a lot. I'd take the occasional dip in the pool, and even joined in a few conversations. I hadn't seen hide nor hair of my girls, but it wasn't on my mind much. I trusted them to take care of each other.\n\nI was sitting back, reading on my Kindle, when Tina made an appearance. \"Just letting you know that we're still around. We're going to do some snorkeling. We thought we'd go to the disco tonight if that's Ok?\"\n\nShe was a dark silhouette standing at the foot of my lounge chair, with the sky bright behind her. \"That's fine. You girls having fun?\"\n\nTina stepped in and sat on the chair next to me. \"More fun than you, it looks like.\"\n\nI grinned. \"I'm having a great time,\" I said. \"Manny is making sure I'm lubricated, and Claire gave me a very nice massage. It's nice to relax.\"\n\n\"Meet any nice ladies yet? Or better yet, any naughty ones?\"\n\n\"No, troublemaker. I've talked to some very pleasant people, and I'm relaxing. I may get a little more social later, but right now all I want to do is unwind.\"\n\nShe stood up and nodded. \"That's good.\" Then she leaned over and gave me a quick kiss. Right on the lips. With a teasing swipe of her tongue. \"You really should make a play for the two ladies watching you from the bar. You're the handsomest man out here. I bet you could pull both of them.\"\n\n\"I'm forty years old, Tina. I'm not some twenty-something hard-body on the prowl. I'm doing fine.\"\n\nShe gave me a grin, running her hand down my chest, and shocking me when it didn't stop until she'd stroked me through my bathing suit. \"Just saying, Mr. Z. Have some fun. You know they're looking for it. Why else would they be here?\"\n\nThen she turned and walked away. Yes, I watched her for a long time, and even glanced over at where the women she'd pointed out were drinking. One of them caught my eye, and even raised a drink in my direction. I gave her a smile, but returned to my Kindle.\n\n* * * \n\nAfter four days, I swore I'd be doing this a lot more often. I loved the services, the pampering, and the relaxed atmosphere. The girls were obviously having the time of their lives, full of stories over dinner. After the first buffet, we had decided to opt for the nicer restaurants, and made reservations after we agreed on which at breakfast. \n\nThe girls lived in their bikinis during the day and dressed up for dinner each evening. My daughter casually informed me that I'd purchased their latest dresses, but I wasn't complaining. I was accompanied by the three most beautiful women in the resort every evening. And with my poolside cabana view, I was in an excellent position to make that observation. If I had needed any corroboration, all you had to do was watch the heads turn where ever we went.\n\nTina and my daughter had very similar looks. Tall, slender, long brown hair, deep tans. They had enough assets to fill their bikinis quite nicely. Wendy was looking more like her mother every day, and LeAnne had been a knockout.\n\nDonna was a few inches shorter, blonde, and a lot curvier. She always looked like she was going to fall out of her bikini top, and I'm certain that the deep cleavage, short hem, and open back of her new dinner dress was stretching the seams on many a pair of men's pants.\n\nDaily massages, twice that day, lots of drinks, pool visits and chatting with many of the other vacationers had me in a great mood. I'd finished reading three of my books, and was more relaxed than I'd been in years.\n\nThe girls' good behavior was helping. They checked in with me often, and although they were drinking, I never saw them drunk. They were dancing the night away in the disco, but came home alone, tipsy and giggly, before one in the morning. They had managed to run up over twelve hundred dollars in charges, at an all-inclusive that's not easy, but they kept me informed, and I made sure they knew it was not a problem. I figured even a thousand dollars apiece was reasonable. It was our last hurrah after all.\n\nWe had wine with dinner, two bottles, and they were feeling little pain. Over a remarkably good steak, Wendy started in. \"It's been four days, Daddy. You dipped your wick yet?\"\n\nI could feel my ears getting hot. \"Wendy, I'm not going to discuss my sex life over dinner.\"\n\nTina giggled. \"Don't you mean lack of sex life, Mr. Z.? Stop holding back. I saw that MILF sit down beside you today. You had to know she was dying for it. Why'd you chase her off?\"\n\nHow did I tell the girls I wasn't looking for some desperate divorcee to get my rocks off? \"Tina honey, I'm here to relax. Not get my bones jumped.\"\n\nWendy pouted. \"It's time Dad. More than time. It's not good for you. Loosen up a little.\"\n\nI chuckled. \"I am loosening up, a lot. I really am having a terrific time, alright?\"\n\nThey left me alone after that, but I should have known from their conspiratorial whispering they were up to no good.\n\n* * * *\n\nWhile the girls were off dancing, I stopped into the casino. Unfortunately I can't say I won a million dollars. I managed to keep my losses under my self-imposed limit, and ended up at the bar, chatting with a few strangers, and partaking of the premium drinks, perhaps a little more than I should have. \n\nBy the time I made it to the room, I had done what I had told the girls not to do. Gotten myself thoroughly drunk. I managed to shower and down a glass of water and some aspirin before heading to bed. It was the first time I hadn't waited up for the girls, but I was in no shape to be seen, and I trusted them.\n\nI woke up to the best feeling in the world. I had a bit of a hangover, but the feeling below my waist was countering that. I sighed, enjoying the unfamiliar sensation. I felt a light breeze on my skin, and looked over to see it was full daylight outside, and my balcony door was open. Looking downward, I could make out blonde hair. \"Donna?\"\n\nShe looked up grinning, and in an easy motion, she straddled me, and settled down on my cock, which she'd been sucking only moments before. \"Good morning,\" she said.\n\nIt felt wonderful, but it only took a few moments for what was happening to sink in. \"Donna, we can't be doing this.\"\n\nShe laughed at me, leaning over and riding my cock, her big bodacious breasts swaying in front of my eyes. \"We gave you four days, Mr. Z. Four days to find yourself a vacation sweetie or three.\"\n\n\"But ... but ...\"\n\nShe pouted. \"Don't you think I'm pretty?\"\n\n\"You're gorgeous.\"\n\nThat earned me a smile. \"I'm not a virgin. None of us are. You know that right?\"\n\nNo, I didn't know that. \"Wendy?\"\n\n\"Bobby Frey.\"\n\nThat little smarmy bastard. He seemed like such a nice kid. I should have known better. Remembered how I was at that age.\n\nDonna accelerated her actions, and I moaned. \"You like that?\" she teased.\n\nI loved it. \"We really shouldn't,\" I said, trying to hang on to reason. It was very difficult, with my hard cock buried in the tightest little pussy I could imagine.\n\n\"We really should, Mr. Z., and we are. Over and over again. You had your chance, four days. Now you're ours.\"\n\n\"Ours?\"\n\n\"Me and Tina. Wendy made us promise that if you didn't get laid, we'd take care of you. It was an easy promise to make. You're a hunk. Nice cock, by the way.\"\n\nIt was difficult for me to think, never mind speak. I hadn't been laid forever, and now this? Not to mention Tina? I didn't need to speak. Donna leaned down and kissed me. A very nice kiss. \"I'm going to fuck you now. Don't hold back. I know you need this.\"\n\nI lost any semblance of control after that. The girl fucked me like a demon, and after only a couple of minutes I was groaning, hanging onto her hips and fucking back. The need to finish came up abruptly, and with a growl, I hammered it home, my insides churning, my cock spitting out its reward forever.\n\nThen she was lying on me, kissing me gently. \"Thank you,\" she whispered softly. \"Let's clean you up, and we can go again.\"\n\nShe walked out of the room naked, while I lay there, my mind in turmoil. I had just fucked an eighteen year old beauty. One of my daughter's best friends. If that wasn't enough, in from the balcony, walked Tina. She wasn't naked, she had panties on. Not much material, but panties none-the-less. She sat down beside me, leaned in and kissed me. \"I'm so pissed,\" she whispered.\n\n\"Pissed?\"\n\n\"I wanted you first. But she won, fair and square. Tonight you're mine. You got it?\"\n\n\"Tina, we can't.\"\n\nShe grinned. \"Oh yes we can, and we will. And I promise you, Mr. Z., you're going to love it.\"\n\nDonna showed back up, and offered me a few aspirin and a tall glass of water. While I was drinking it, she cleaned up the evidence of our coupling. \"How was it?\" Tina asked.\n\n\"Quick,\" Donna giggled. \"Nice, but quick. I bet the next one will be a lot better.\"\n\nTina nodded. \"Don't hurt him. It's been a long time.\"\n\n\"I'm not going to hurt him, I promise. Where's Wendy?\"\n\nTina nodded toward the wall. \"She didn't think he could handle her seeing him like this.\"\n\nI watched their conversation still in a morning daze. \n\nTina looked down at my cock. \"Can I?\"\n\nDonna nodded. \"Just a little Ok? Tonight's all yours. We agreed.\"\n\nTina's response was to suck my cock, getting a quick moan out of me.\n\nDonna took my glass away, and put it on the bedside table. \"Whatever you want, Mr. Z. It's your turn to fuck me. Make it good.\" Then she was doing her best to see what I had for dinner with her naughty tongue.\n\nTina's hot mouth had me hard as quantum physics. She pulled back, smiling and gave Donna a nudge. \"Have a good time, Mr. Z.,\" she said, giving me a quick kiss, and heading back out to the balcony.\n\nAny thoughts of being honorable fell by the wayside, when Donna got on her hands and knees, waving her young ass at me. \"Any ideas, Mr. Z.?\"\n\nOne. \n\nIt only took me a few seconds to line up behind her, and sink my cock to the root. She gasped, and purred like a kitten when I started fucking her slowly. Any thoughts of impropriety or inappropriateness disappeared out the door. I fucked that little blonde bombshell like my life depended on it. Her first sweet orgasm made me feel like a god. I had her on her back, driving it home, when her second hit, in between a series of gasped \"Oh-my-god!s.\" \n\nI slowed down, never wanting to stop, and feasted on her incredible tits. Then I moved down further and had a tasted of that teen slice, until I had her screaming my name. \"Adam!\" she shrieked, over and over again, clutching my head.",
        "My sweet Eve was coming in waves. I sat up and jabbed my cock home in mid squeal, and she screamed. Even in my lust shrouded mind, I heard the giggling. I looked to the side and saw Tina and my rotten daughter watching from the balcony. When they realized they'd been caught, they started clapping, and walked into the room.\n\n\"Do her, Daddy,\" Wendy said, taking a seat next to the bed. At least she was moderately dressed, in her bikini.\n\nTina sat down on the bed next to us, and I'm a little ashamed to say, it didn't stop me from plowing her friend. She brushed Donna's hair to the side. \"Good?\"\n\n\"Oh, God,\" Donna groaned. \"The best.\"\n\nThat made me feel pretty damn confident, and I long-stroked the sweet girl, wrenching a whimper out of her.\n\nTina ran her hand down my back. \"Don't be too hard on her. She doesn't have a lot of experience, Ok?\"\n\nYou could have fooled me. Her pussy was molten lava, hot as the sun, and ridiculously tight. All I could do was nod, holding myself up over the beauty and thrusting away.\n\nThe scene was too hot to believe. Way too hot to control. I picked up the pace, feeling close, and hammered away until I was pounding my cum into her. I think I screamed when I busted my nut.\n\nThen Tina was taking care of both of us, wiping us down. \"Go clean up now. Breakfast ends in half an hour.\"\n\nI was suddenly embarrassed. Naked, not just with these two, but my daughter seated only a few feet away. She noticed. She came over and gave me a quick kiss. \"Don't be shy, Daddy. It's Ok. All I want is for you to be happy.\"\n\n\"You ... you shouldn't be here,\" I whispered. \"Seeing ...\"\n\nShe giggled, and put her finger over my lips. \"It's alright. You and me, we're going to behave. I love you more than anything, but it's too weird. I hope you don't mind.\"\n\nI loved my daughter. And she was the spitting image of my wife, but my mind didn't work that way. I never really thought of doing anything wrong with her. I sighed, glad we were on the same page. \"I love you baby, but I, uh, don't want to love you. That would be messed up. So wrong.\"\n\nShe smiled, and gave me another tender kiss. \"I know. Now go clean up or we're going to miss out on breakfast.\"\n\nHaving a naked blonde beauty in the shower with me was incredible. She was so sweet and loving, adoring even. \"Adam?\"\n\n\"Yes, sweetie?\"\n\n\"Is it Ok if I call you Adam?\"\n\nI laughed, rubbing her delightful, slippery body. \"You can call me whatever you want.\"\n\nShe gave me a great big smile. \"That was the best. The best ever. You're not mad I ambushed you, are you?\"\n\n\"No, not mad in the least. And you're right, that was amazing.\"\n\n\"Do you want to be my boyfriend? Tina and Wendy are going away to college, but I'll be staying local.\"\n\nThat came out of nowhere. \"I'll tell you what. Let's talk about it after we've had a few days together. You are the sweetest thing in the world, and terrific in bed, but we really should get to know each other, don't you think?\" Never mind that she literally could have been my daughter.\n\nShe grinned, nodding. \"I know all about you, Adam. I guess you should get to know me. That will be fun.\"\n\nWe missed the breakfast buffet by five minutes, but fortunately the poolside restaurant served meals all day. We retired to the cabana I'd rented for the week. I was still in a bit of a quandary, but it was obvious my girls were deliriously happy. Wendy was teasing me a lot. \"I told them you wouldn't do anything if we didn't push you. Damn it, Dad! For four days we were practically throwing women at you, and you didn't even try.\"\n\n\"I was in no hurry, baby. I was happy to just relax.\"\n\n\"Happier than screwing Donna's brains out this morning?\"\n\nI looked over at the pretty blonde, and at the amazing body, barely covered in her bikini. \"Not by a long shot. So your father's a big hopeless dope.\"\n\nShe giggled. \"Not hopeless. You just have a lot of inertia. We had to get you rolling.\"\n\n\"So you want me to go pick up those two cuties by the water slide?\" I teased.\n\nTina smacked me. \"You are such a perv! We're here now, whatever you want. Now if you want to play a little when we're not around ...\"\n\nWendy nodded. \"Go for it Daddy. Just be careful.\"\n\nWe'd barely finished eating, and were working on our first drink, when Claire showed up. \"Massage today, monsieur Adam?\" She was smiling as she looked at my lovely companions. \n\n\"Massages all around, please, Claire.\"\n\n\"I will call over Rafael, if you don't mind,\" she said, placing her supplies on the table. I'll confess, I found her accent extremely sexy. She got on her little phone, and five minutes later a tall bronzed demi-god appeared, with teeth as white as chalk.\n\n\"Me first!\" Wendy insisted.\n\nWe had our massages, and I tipped generously. After they'd left, the girls were whispering and I was getting nervous. They got up and pulled the string holding the doors open on three sides, and soon we had some privacy. They ganged up on me, laughing, and before long I was prone, depantsed, and getting a dual blow job from Donna and Tina. Donna had insisted that Tina's turn didn't start until that night, while Tina argued that Donna's turn ended with the shower. Wendy broke the tie, insisting they share.\n\nThe girls were competitive and delightfully talented. Admittedly I was harboring a little performance anxiety, but Claire's massage had given me wood, as it did every day, and the girls were determined to take care of it.\n\nIt was a trip, listening to the activities outside of our little oasis of debauchery, while I was serviced. Wendy's presence was a little disturbing, I admit, especially when I noticed she had her hand inside her bikini bottoms. Nothing was enough to distract me for very long from watching Tina and Donna taking turns sucking.\n\nWe'd been at it several minutes, when Manny, my cabin 'butler' stopped by. He peeked in, then slipped in quickly and quietly. \"Beverages, se\u00f1or, se\u00f1oritas?\"\n\nWendy I guess was a little less of an exhibitionist than her naughty friends. They kept sucking, while Wendy quickly pulled her hand out of her bikini. \"Four more,\" she said, holding up four fingers. Two of them glistening naughtily.\n\nHe nodded, for all practical purposes oblivious to what was going on below my waist. \"Right away, se\u00f1orita.\"\n\nI watched my teen cock-suckers, praising their efforts, warning them of my approaching finish. Donna backed off, and let Tina finish me. I thought that was generous of her, until she kissed me softly, and whispered, \"I don't like the taste. Tina does. I ... I'll do it if you want, Adam.\"\n\nI was too far gone to speak, and groaned as I erupted in darling Tina's mouth. She took it all, and was gentle with me afterward. When she was done, she sat up grinning, wiping her mouth. \"How was it?\" she asked.\n\nChuckling, I pulled her up beside me for a wet kiss. \"That was beyond amazing. You two were spectacular.\" I looked over at Donna, and pulled her in for a quick kiss as well. \"You don't have to do anything you don't enjoy, Donna. We can have plenty of fun other ways.\"\n\nShe smiled, and the girls helped me pull up my shorts just as Manny returned. Tina eagerly took her drink and quickly finished about a third. \"I'm going to need another soon,\" she said to our butler. \"That's thirsty work.\"\n\nHe smiled and nodded. \"Are we done for the moment?\" he asked.\n\nI nodded, and he walked around the oversized tent, and started tying up the sides again, as if it was an everyday occurrence. He left and returned after just a few minutes. He had another \"Palace Special\" for Tina, and a tall pitcher of ice water with lemon slices in it, along with four tumblers. \n\nThe girls were stretched out on the lounges beside me. Wendy sat up. \"I think I'm gonna get some sun on the beach. Coming?\" she asked, looking at her friends. They both looked at me, and I had a feeling they'd had enough of the lazing around. God knows I wish I had their energy. \"Go on. If I don't see you again, we'll meet in the room before dinner. Italian?\"\n\nIt was agreed.\n\nI had no idea how our little escapade was going to be perceived. Once they were gone, I could swear I was catnip. When I took a dip in the pool, I was pounced upon by a couple of attractive women, and was soon joined by two more. They were charming and flirtatious, touching me often, laughing. There was no doubt in my mind I could have any of them, probably either pair. But I was happy with how things were, and flirted back, comfortable, more confident than I'd been in ages.\n\nWhen I retired to my cabana, it wasn't long before the second pair that found us in the pool asked if they could join me. I insisted they did, and had Manny bring us the Specials, and some snacks. \n\nI had a blast, and talking with them was easy and comfortable. I learned about their lives and they learned about mine. Eventually they asked about the girls I was with. I didn't know what to say, and finally confessed the truth. My daughter had recruited two of her friends to get me back on the wagon after four years.\n\nYou could have heard a pin drop. \"Four years?\" Allison asked.\n\nI nodded. \"I hadn't been with a woman since my wife passed away.\"\n\nThe other woman, Beth, nodded. \"I was in a sexless marriage for two years,\" she admitted.\n\nThat stunned me. She was very pretty, very fit. Great body. \"That ... that's inconceivable!\"\n\nShe smiled, leaned in and gave me a very nice kiss. \"Thank you, that was very sweet.\"\n\n\"No, I'm serious. You're beautiful. Why the hell ...?\"\n\nShe laughed. \"Yeah, I asked that myself. Although I have to admit, I didn't look like this. I let myself go a little. Still, it was pretty hard on the ego.\"\n\nAllison jumped in. \"You were still pretty. It was only twenty pounds. Bob was an idiot.\"\n\nI nodded. \"It sounds like Bob was a huge idiot!\"\n\nThey both laughed with me, and asked what my plans were for the evening. \"I'm having dinner with my girls, and uh ...\"\n\n\"Dessert in your room?\" Allison asked.\n\nI nodded, a little embarrassed.\n\n\"What would you say to an appetizer?\" Beth said.\n\nI was stunned. \"I'd say I'm incredibly flattered, but it's been a, uh, busy day already. I'm not twenty anymore.\"\n\nBeth and Allison looked at each other, then Allison opened her beach bag. She dove into it for a minute, then came up with a little tiny bag. I could see it held three pills. \"I bet this would help. We could have a little fun.\"\n\nI'd never had any sex enhancing drugs, and I wasn't sure if I wanted to start. Allison got up and sat on the edge of my chair. \"Honey, this will get you hard, keep you hard, and make you feel like you've died and gone to heaven. My ex is a pharmacist. He was eleven years older than me, and could fuck like a teenager. If he'd been able to keep it in his pants, we'd still be together. Wanna give it a try?\"\n\n\"What is it?\" I asked.\n\n\"Cialis, plus something to help you keep it up, and something to make it feel better. I don't remember the names. My ex-husband, Allen, keeps me supplied. We still get along great, even if we're not married. He's watching our two little ones while I'm away.\" She gave me a smile. \"It's weird. I think we get along better now than when we were married.\"\n\nI wasn't even sure if I was going to need the help. She was a sexy thing, and I could feel myself responding. \"God, you're sexy,\" I said.\n\nHer smile reached from ear to ear. She opened her baggie, and shook out the pills. I know it was foolish, but I took them, and washed them down with my drink. She gave me a quick kiss. \"In about thirty minutes, you're going to be aching to get into me.\"\n\n\"Us,\" Beth insisted.\n\nI looked over at our friend, and saw her nipples were already hard. \"I'm already aching for both of you.\"\n\nThat got me a deep kiss from Allison. \"Right answer, handsome. Shall we?\" She stood up extending her hand. I let them drag me off to their room. We ran into Manny on our way out. \"Will you be returning, se\u00f1or?\"\n\n\"Not for a while, but my girls may come back.\"\n\nHe nodded. \"Very good se\u00f1or. Have a pleasant afternoon.\"\n\nWe made a short side trip to the little store at the front by the desk, where I purchased a box of condoms. There were ten. I was feeling a little optimistic, I'll admit.\n\nPleasant wasn't the word for it. I don't know what the hell was in those pills, but I got hard, and like they said, I stayed hard. Jesus! I know it had to have some kind of euphoric in it, because I felt like I was on fire, and I fucked both of them like a machine. They were very close friends, and the sight of them going down on each other was like a shot of adrenaline to my brain. Plowing Beth from behind while she was eating out her friend was driving me crazy. \n\nMaybe it was using a condom for the first time in more than twenty years, more likely it was the pills, but I couldn't come. I stayed hard, and I loved ever damn minute of plowing their warm wet pussies, but I never came close to coming for what seemed like an eternity.\n\nI took turns on them, and they took turns on me. I ate a ton of bald pussy, and had the best mind rush each time I'd get one of them to come for me. And that was often. Eventually, we wore Beth out, but Allison was insatiable. I finally found a position that was working for me. I had Allison on her back, knees bent back almost to her shoulders. I hammered her until the sweat was pouring off of me. Sweet Beth was cuddled up close, teasing her friend's tits. \"Fuck her, Adam. Fuck the slut's brains out. She needs it, baby. She needs it bad.\"\n\nI needed it at least as much, and when her last orgasm had her screaming loud enough to wake the dead, it pushed me over the edge, and I came as hard as I ever had in my life. It felt beyond incredible, whether it was the situation, how long it had taken to get there, or something in those pills, it was sublime.\n\nI collapsed on the bed, my heart racing, and both of them cuddled up to me. \"That was wonderful,\" Beth said. I sighed as she eased the condom off of me and tied the end in a not.\n\n\"Un-fucking-believable,\" Allison agreed.\n\n\"No kidding. I've never, ever, felt like that. Both your ex's are complete and total idiots.\"\n\nThey giggled, and I sighed, content to hold them.\n\nAfter a few minutes Beth kissed me. \"It's almost five. We probably should get up.\"\n\n\"Five?\" We had left the pool before three. We'd been going at it for more than two solid hours. At least an hour and half of that with my cock in one of their delightful pussies.\n\nThey laughed at me, dragged me off to the shower before letting me get dressed. I felt incredible as I escorted them back downstairs. \"I, uh, would you two care to join me for dinner? Will I get to see you again?\"\n\nBeth was hanging on my arm. \"No, handsome. You should be with your girls. Besides we're leaving tomorrow morning. My poor little pussy is going to be sore for days.\"\n\nThat idea brought a smile to my face.\n\nI got a kiss from them in the lobby, the Allison took my hand in hers, and pushed two little baggies into my palm. \"The one with two pills is for tomorrow. Three pills for the next day. Only if you want. I'm not going to take them back with me, so they'd be wasted anyways.\"\n\nI pocketed them, doubting I'd use them, and gave each of the ladies a hug.\n\nAt the cabana, Manny was at my side with my preferred drink, only a minute after I sat down. \"The usual, senor?\"\n\nI thanked him, enjoying the cool drink.\n\n\"I trust you had a pleasant time?\" he said, and I thought I saw a hint of a smile.\n\n\"Very,\" I said, grinning.\n\n\"Excellent. If I may make a recommendation?\"\n\n\"Of course, Manny.\"\n\n\"Claire could help relax you before dinner, and Alejandro, he makes a remarkable recuperativo.\"\n\n\"That would be perfect. Thank you.\"\n\nClaire was making sure I didn't have a single tight muscle in my entire body, and Alejandro's 'recuparativo' was delicious and energizing. My girls showed up, their bodies glowing.\n\n\"You girls have a good time?\" I asked.\n\nWendy answered. \"We went snorkeling on the catamaran. It was great. You? You didn't just hang out here all day reading again, did you?\"\n\n\"No, I made some friends, and had a wonderful time. This trip has been great.\"\n\n\"Are we going to get to meet your friends?\" she asked. I had a feeling she didn't believe me.\n\n\"No, Allison and Beth begged off, and they're leaving tomorrow. I'd rather spend dinner with my special girls, anyways.\"\n\nThey collapsed onto the chairs, and it wasn't long before Manny had drinks in their hands. The man was going to get a hell of a tip, at the rate he was going. Darling Claire gave each of them about fifteen minutes each of shoulder and back massage, before returning to me.\n\n\"Dinner tonight?\" Donna asked.\n\n\"We forgot to make reservations, I'm not sure we'll get in to any of them.\"\n\nClaire chuckled. \"No, Monsieur Adam. That is not a problem. Our VIPs always get a table. You should try the fusion restaurant if you have not. The food ... c'est incroyable. Chef Jacques is a friend. He is the best. Perhaps the best on the island. Would you like I call for you?\"\n\n\"That would be great, Claire.\"\n\nIt only took about a minute of lightning fast French to get things taken care of. \"Is seven-thirty too late?\" she asked.\n\n\"No, that would be fine.\"\n\nShe finished up on the phone. \"Seven-thirty it is. Have a wonderful dinner, Monsieur Adam.\"\n\n* * * \n\nClaire was right. Dinner was delicious, and we even had a visit to our table from the Chef. My girls were gorgeous, and as improbable as it was (I'm pretty sure it was the pharmaceuticals) the idea of having Tina that night had me hard halfway through dinner.\n\nThe girls insisted I join them in the disco. I wasn't the oldest there, as I'd feared. As a matter of fact, it appeared I was close to the median age. I danced with all three of my girls, but after a while, it became clear that Tina was getting possessive. They were all asked to dance incessantly. I was surprise there were as many people present as there were, and most of the males were showing interest in my girls. Donna and Wendy accepted many dances, but Tina was sticking close. \n\nI wasn't a big drinker. I'd pretty much stopped drinking over three years earlier. The resort's ever-present alcohol had me buzzed. I'd guess we'd been there maybe an hour and a half, when Tina dragged me out to the floor for a slow dance. She was rubbing up against me pretty good, and I was responding. Her hand slipped down between us and gave me a rub.\n\n\"Want to go back to the room?\" she asked, none to subtly.\n\nI looked around and found the other two dancing with their latest suitors. \n\n\"They'll be fine. We're good girls, Mr. Z. We can take care of ourselves. They'll pick a couple of nice guys, take them down to the beach, make out a bit and be back my curfew.\"\n\nHer hip pressed against my erection. \"What do you say? Go back and play?\"\n\nShe was looking up at me with her big brown eyes, so eager. I kissed her softly. \"I'd love to, Tina. Absolutely love to.\"\n\nHer face lit up and she took my hand. \"I'm gonna tell 'em we're going,\" she said, after escorting me back to the seat. In the ten seconds she was gone, a sexy redhead was seated next to me. \"How about a dance, handsome?\" she asked.\n\nI was gob-smacked. Women that looked like that didn't seek me out. She was stuning. It took me a few seconds of her raised eyebrow, to speak. \"I'm actually leaving. I wish I weren't. I'd love to dance with you.\"\n\nShe gave me a big smile. \"I had to try. See you around? You've got the cabana by the pool, right?\"\n\nI nodded stupidly.\n\nShe leaned in and gave me a quick kiss. \"Later then. Maybe you'll save a dance for me tomorrow night.\"\n\nTina was giving me the stink eye when my visitor got up. I think young Tina was as shocked as me when the sultry redhead caressed her shoulder in passing, leaning in to whisper something. My girl turned almost as red as our visitor's hair.",
        "I had tipped our server, and took Tina by the hand. \"What did she say?\"\n\n\"She ... she said I looked scrumptious.\"\n\n\"You do, beautiful. You really do.\"\n\nBack in the room, Tina seemed a little shy. I pulled her into my arms. \"We don't have to do anything, if you're not comfortable.\"\n\nShe shook her head. \"You could have had that woman, couldn't you?\"\n\n\"Probably. Although I think she liked the idea of having you as much as me.\"\n\n\"You still want me? Not her?\" she asked, nervously.\n\nI almost laughed, although I knew that was a bad idea. \"I couldn't help but think about it all day long. You're a beautiful sexy young woman, Tina. I'm more surprised that you want me.\"\n\nShe grinned. \"Heck, Mr. Z. I've had the hots for you since I was thirteen. I couldn't believe it when Wendy told me her plan. I'm glad you didn't hook up with any of those other women.\"\n\nPharmaceuticals or not, I was aching hard, and she could tell. \"You really do want me, don't you?\"\n\n\"I want to eat you alive, then fuck your pretty little brains out.\"\n\nShe giggled, and took my hand. \"Well come on then! What are we waiting for?\"\n\nOnce I had her naked, her tan line surrounding her sweet young treasures was driving me crazy. She was the darkest of the girls, and her lily-white tits, ass and crotch were maddening. I was true to my word and was between her legs, feasting on her pussy as soon as I was able. \n\nTina wasn't the screamer that Donna was, but she was a talkative little moaner. Her constant gasps and oh-my-gods, had me feeling good. I ate her to two delicious orgasms before she was begging me to fuck her.\n\nI eased my way in, watching her face, making sure I wasn't hurting her. I'm not huge, but what I've got is substantial. She stared at me adoringly, while I entered her. \"I can't believe this is finally happening,\" she whispered.\n\n\"Me either, gorgeous. Seeing your sexy body by the pool for the last few years has been driving me crazy.\"\n\nHer smile was enormous. \"Really? You ... you thought about me?\"\n\n\"Of course,\" I moaned, giving her a couple of long slow strokes, warming her up, getting her used to me.\n\nOnce I got going, it was like earlier. I was on fire, as hard as I get, and in no danger of coming anytime soon. I felt like I was back in college. I played with her, teased her, and fucked her like a demon. Every position I had ever thought of, and a couple I'd only seen on porn videos. \n\nShe was the perfect partner. Flexible, willing and very responsive. Whatever I wanted to do, whichever position, she worked with me, until we got it right. It was one of the best experiences of my life, the way we fit together so well, the feelings I was getting, and the way she reacted to everything was beyond my every expectation. She was very oral, always kissing me, licking my skin, sucking on my fingers. It was sexy as hell. Her eyes were lively, and her hands kept running over my skin as if to verify I was actually there. For a forty year old man, having an eighteen year old hard body stroking your ego and everything else she could get hold of, was gratifying.\n\nTina didn't come as easy or often as Donna had, but she would build up to huge ones, and I had her body shaking several times. I loved that little girl, almost like my own. I'd known her forever and watched her develop into the beautiful woman she'd become. Having her in my bed was a fantasy come true.\n\nTwice I took breaks from fucking her to have her go down on me. It drove me a little crazy to see her face full of my cock, and each time I'd finally have to drag her off and fuck her like a madman.\n\nShe was riding me, her whole body glowing, when the other two arrived. They were a little drunk, giggly, and in a very good mood. They collapsed onto my bed, and watched their friend take care of me.\n\n\"Pretty good, huh?\" Donna slurred.\n\n\"Amazing,\" Tina gasped. \"Fucking amazing.\"\n\nWhich of course was a nice boost to my ego. \n\nMy Wendy lay down beside me, rubbing my chest. \"This is good, Daddy. You needed this.\"\n\nI did, and had no idea how badly. The situation had just heated up to an eleven, and Tina was showing off, bouncing up and down on my cock like a pogo stick. It was all too much. \"Kiss me, Donna,\" I said.\n\nShe grinned and gave me a big kiss, then pressed a bare breast against my mouth, her hard little nipple between my lips. I groaned and started coming. Hard.\n\nTina squealed, and dropped down on my cock, grinding away. It wasn't what I wanted, but I was helpless, one arm around my daughter, the other around Donna, her perfect tit in my mouth. A few seconds later Tina was trembling and shaking as she came on my cock.\n\nI was gasping for air, completely worn out, when the girls let me go. Wendy was the first one up and returned with a moistened towel. She tossed it to Donna. \"I'd do the honors, but I'm pretty sure he'd freak out.\"\n\nShe was right. It was already too weird, having her on the bed beside me, fully clothed, while her best friend got my rocks off.\n\nTina had stretched out beside me, her chest heaving. Donna was cleaning me up, which was pretty incredible in and of itself.\n\n\"God, I had no idea,\" Tina said. \"Your Dad is a fuck-god. He made me come so many times I thought I was going to lose my mind.\"\n\nFor a guy who hadn't been laid in four years, until that day, her words made me feel pretty damn good. She rolled over onto her side and looked at my daughter. \"I know it's freaky, but you really are missing out.\"\n\nWendy just smiled. \"Nope. I'm making out pretty good. My Daddy's happy.\"\n\n\"Very, very happy,\" I managed to say, getting a laugh out of all of them.\n\n\"Did you girls have a good time?\" I asked, a little afraid of the answer.\n\nThey both laughed. \"A great time,\" Donna said. \"You sure you want to know?\"\n\n\"Did someone get lucky?\" I asked.\n\nWendy chuckled. \"Not as lucky as you. Handsome brothers from Arizona. They wanted more, but I think they left pretty happy.\"\n\nI couldn't help myself. \"How happy?\"\n\nDonna gave me a little kiss on my poor worn out dick. Then she took it in her mouth for a few seconds. \"That happy.\"\n\n\"Naughty girls,\" I said.\n\n\"Oh, we got a little attention too,\" Wendy said. \"Not what you got, but nice. I got off twice.\"\n\n\"TMI,\" I blurted.\n\n\"Come on, Dad! I just watched my best friend in the whole world ride you like a rodeo cowgirl. Does it really bother you to know I got fingered and gave a guy a blowjob?\"\n\nIt was embarrassing. \"A little. You're still my baby girl.\"\n\nShe cuddled up to me. \"I'll always be your baby girl. But I'm eighteen. I'm going to be headed off to college soon. I'm hardly a virgin.\"\n\n\"Bobby Frey?\"\n\nShe sat up and glared at Donna, who blushed. \"Yeah, Bobby was my first.\"\n\n\"Your first?\"\n\nShe nodded. \"There's only been one other. Jackson.\"\n\n\"I figured. I thought if you had done it, he'd have been the one. Did he treat you good?\"\n\nShe chuckled. \"Not like you and them. But he's nice. The first couple of times were nothing to write home about, but he got the hang of it. He doesn't last that long, but he can get it up and up, and up.\"\n\n\"TMI, TMI.\"\n\nShe smacked my chest. \"Don't be a prude. Be happy for me. It took a while, but he learned how to get me off. A few times.\"\n\nTina sighed, cuddling in close. \"You have no idea Wendy. He's been fucking me since we left. I must have come a dozen times. Your Dad is amazing.\"\n\n\"Inspired, gorgeous. My little fantasy girl.\"\n\n\"Daddy! Have you been fantasizing about Tina?\"\n\n\"Oh, come on, Wendy! She's gorgeous, and around all the time. So damn sexy. Of course I fantasized about her. I had to have someone to fantasize about.\"\n\n\"And how long has that been going on?\" she asked.\n\nUh-oh. \"A ... a while.\"\n\nShe giggled and smacked me. \"Pervert.\"\n\nShe sat up, and dragged a reluctant Donna away from the bed. \"Come on, Donna. It's Tina's night.\"\n\nI wanted to misbehave, but I was worn out. I know Tina was. We took a shower, and I slept with a gorgeous young teen in my bed, content as I'd ever been.\n\n* * *\n\nThe next morning was my second morning sex in four years. It was nothing like the night before. I was wrapped around her, clinging like I was afraid she'd escape. Her smell was in my head, and her soft skin was pressed against mine.\n\nMy hand caressed her soft body, and my erection was pressed against her bottom. As I tried to maneuver in position, she sighed, and lifted a leg for me. Sweet girl. It took a bit of effort but I eventually got the head lodged in her, and I had her from there. Easy, slow-going, but I managed more of my length until I was stroking into her steadily.\n\n\"Mmm, good morning,\" she said.\n\n\"Best morning,\" I replied. \n\nShe twisted a bit, shifting her hips, allowing me deeper. Neither of us seemed to be in a hurry to change things up, and I just lay there, half-asleep, my hips doing most of the work, enjoying the sensation of being inside of her.\n\nIt was no marathon, like the previous day. Maybe the chemicals were wearing off, or maybe it was just too wonderful to last. Eventually I grabbed her hip and thrust a little more forcefully, until I groaned my release. I felt a little bad for not making an effort to get her off, but I figured she still owed me a few after the night before.\n\nShortly after I'd filled her, she twisted around and lay on my chest. \"I can't believe I'm here,\" she said.\n\n\"Me either. It's pretty incredible.\"\n\nShe gave me a long kiss, then pulled away. \"Oh God, please tell me my breath isn't as bad as yours.\"\n\n\"Breath of death, beautiful girl,\" I teased.\n\nShe giggled and cuddled back up, humming her pleasure. \"When you fantasized about me, what were you thinking?\"\n\nI chuckled. \"Too many fantasies to recall them all. Most of them had you walking into my home office and telling me you'd seen me watching you. Then you'd give me a blowjob.\"\n\nShe kissed my chest. \"I have seen you watching. A lot. I should have done just what you said. Mr. Z.\"\n\n\"Tina, sweetie. After all we've done, I think it's Ok for you to call me Adam, don't you think?\"\n\nShe smiled. \"Ok, Adam.\" She stretched like a cat, and sat up, allowing me to see that perfect young body. \"Shave. You're scratchy,\" she said. \"Wanna shower?\"\n\nLike I was going to say no?\n\nWe showered together, soaping each other up, then rinsing each other off. Apparently we took too long. Wendy opened the shower door. \"Enough already, you too. I'm not going to miss breakfast for the second day in a row.\" The evil vixen was naked and climbed in the shower with us, pushing both of us out. It was a naughty thing to do.\n\n\"You have your own shower,\" I reminded her, as I stumbled out.\n\n\"Yours is better,\" she answered. \"Besides, Donna is in the other one.\"\n\nI wrapped a towel around my waist, and cleaned up, shaving closely, brushing my teeth, flossing, using mouthwash. I'd been doing too much kissing not to have an immaculately clean mouth.\n\nI'd lost Tina to the girl's room, and finished dressing on my own. The girls weren't long behind me, getting ready. It was a beautiful day in paradise, and I was about as lucky as a man could get.\n\nBreakfast was Ok, their buffet was nothing like the restaurants, but it was filling and what I needed after the recent calisthenics. Manny must have seen us coming. He had the lounges arranged, and four of the Specials waiting. \"Good morning, se\u00f1or, se\u00f1oritas.\"\n\nWe greeted him, and accepted our drinks. Before long, we were all in the pool, enjoying the cool water, sipping on our drinks, and people watching. \"Any plans for the day?\"\n\n\"We signed up for the free scuba lessons. We're supposed to go to the other pool at eleven. Want to come?\" Wendy said.\n\n\"I don't need lessons. I was certified when I was seventeen.\"\n\nShe looked surprised. \"How come I didn't know that?\"\n\n\"Because you weren't born yet, sweetie, and I never could convince your mother to try diving.\"\n\nApparently, the girls would get some video instruction, time in the pool, and a dive master led dive in shallow water. I almost wished I'd thought to bring my PADI card along. It was tempting to join them, but I was afraid I'd be a distraction. \n\nThey hadn't been gone an hour, when who should show up but the stunning redhead from the night before. She was wearing a bikini that showed off her fabulous body, and a mostly see through wrap. She had a huge hat on that provided some cover from the sun. She didn't even ask, she put her bag down, scooted her lounge chair over until it touched mine, then stretched out beside me. \"You have a nice setup here,\" she said.\n\nI waved Manny over, and he took her drink order. Once he'd left, I asked her how she was enjoying the resort. \n\n\"I love it. I come here twice a year since it opened a few years back. It's my favorite. You?\"\n\n\"It's been great. It's my first all-inclusive resort.\"\n\n\"You picked a great one. Where are your young friends?\" she asked.\n\n\"Diving instruction.\"\n\n\"They'll love Dani. She's a great instructor. They're in good hands. So, what's the story?\"\n\nNot much for small talk. Right to the heart of the matter. \"You tell me yours, I'll tell you mine.\"\n\nShe laughed. \"Mine's not so much to tell. My position at home has me under a lot of scrutiny. I'm single, and any playing around might cause trouble. I date infrequently, mostly because I don't have much time. A few times a year I get away and let my hair down.\"\n\n\"And if you don't mind saying so, it's quite beautiful hair.\"\n\n\"So you like redheads? I was under the impression that brunettes were more your style.\"\n\n\"I'm eclectic.\"\n\n\"That's a nice way to put it. So that's my story. I'm single; I come out to these resorts for a little fun and relaxation. I don't like places like Hedonism, they are so crass, not the kind of company I'm usually looking for. So it's your turn. Spill.\"\n\nI told her my story, abbreviated. Maybe it was the time spent with Beth and Allison, but I had no problem giving her the straight scoop.\n\n\"Four years? I would have gone absolutely nuts. Four months and I'm crawling up the walls. You certainly picked some gorgeous young ladies to play with. You say your daughter is the other brunette? Nothing going on there?\"\n\nIt was kind a personal question. Alright, very personal. For some reason, I didn't care. \"Nope. That not my style. I love her to death, but not like that.\"\n\n\"Not even tempted?\" she asked.\n\n\"No. It's bad enough that I know she's having sex. Although I'll admit I thought it would bother me more when she's around while I'm with her friends.\"\n\n\"Baby girl's curious. You can't blame her. We all have little crushes on our fathers. It's good that you leave it there. You're a good Dad.\"\n\n\"I try. I'm not sure everyone would agree.\"\n\nOur conversation was easy, and she joined me for another dunk in the pool before stretching out again with a Manny Special. I couldn't help but be fascinated by her. She was probably close to my age, but easily the sexiest woman I'd ever seen. Everything about her screamed sex. Once glance around the pool confirmed I wasn't the only one that thought so. She was an eye magnet to every male present. I even caught Manny staring at her a few times.\n\nIt took me a while to screw up my courage. \"Would you like to take a break? Perhaps back in the room?\"\n\nShe laughed. \"I was wondering how blatant I'd have to be before you would ask. I'd love to see your bedroom, Adam. I would absolutely love to.\"\n\nMaybe my confidence wasn't quite where it needed to be, but I opened my beach bag, and extracted the little two pill baggy, downing the contents with the last of my drink.\n\nFiona was a lousy fuck. I know it's heresy, but there it is. After my last four women, she was willing enough, but pretty unresponsive. I did my best to get her off, and used her hard, but no success. She seemed to enjoy it, and urged me on, but the fact that I couldn't give her an orgasm, no matter what I tried, was disappointing.\n\nShe was beautiful, had a great body, and was extremely willing. She was still a little responsive, and active, but nothing like the others. So maybe it's unfair to say she was a lousy fuck. I certainly enjoyed it, a lot. But there was something missing.\n\nOnce I came for her, and again, it took a hell of a long time thanks to my little doctor's helper, she rolled into my arms, and kissed me like I'd hoped she'd fuck. It was wonderful and intense. The woman had mad kissing skills.\n\n\"That was wonderful,\" she said, caressing my skin.\n\nI wondered if she'd been there with me. \"You didn't come. I'm sorry.\"\n\nShe sighed, and gave me another tender kiss. \"I loved it. I don't come during sex with a man. I don't think I ever have. I still loved every minute of it.\"\n\n\"Really?\"\n\nShe laughed, her hand reaching down and removing the rubber I'd been wearing. She tied it off, and held it up, looking at it. \"It took you a long time to get here,\" she said waving it. \"You certainly appeared to enjoy the journey.\"\n\n\"No kidding,\" I said.\n\n\"So, I enjoy the journey as well. I just have difficulty coming from penetration. Now if one of your little friends were here, I'm sure I'd have no difficulty at all.\"\n\nThat was an interesting comment. It also had me second thinking the session we'd just had. She had been fun to fuck. It was my inability to get her off that bothered me. I guess I was still a little insecure. I felt immensely better after her speech.\n\nShe had dropped the condom in the waste basket and cuddled up to me. I looked into her brilliant green eyes, and saw nothing but satisfaction. She had a face that belonged on a magazine cover.\n\n\"Damn, you're beautiful. Does that cause you much trouble?\"\n\nShe giggled. \"A little. I'm used to it. You should have seen me when I was thirty. I swear some men would faint when I walked by. One fellow came in his pants during a conference meeting. It's been useful.\"\n\nTime must have been flying, because we were still lying there, chatting, when the terrible trio showed up, excited from their dive experience.\n\n\"Holy shit!\" Wendy cried out, coming to a screeching halt just inside my door.\n\nThere was a time, hell forty years of it, when I would have been embarrassed as hell and tried to cover up. This time I was proud. I was in bed with a ten. Even if I couldn't get her off.\n\nTina and Donna scurried up behind her, and Tina got big-eyed. \"I know you!\" \n\nFiona laughed. \"Yes. You're the scrumptious girl from last night. I hope you don't mind I've borrowed your man. I promise to return him unharmed.\"\n\n\"How was the diving,\" I asked.\n\n\"Fuck the diving, Dad! When you get over your dry spell, you really get over it, don't you?\"\n\nI was a little surprised that my bedmate was as casual about the whole thing as she was. It made a lot more sense a few seconds later.\n\nFiona rose up on one elbow, her hand reaching down and caressing my cock. \"I don't suppose there's any way I could convince any of you ladies, or even all of you, to join us? I have to admit, I'd love to be with any of you.\"\n\nI thought the girls would be more shocked. My Wendy walked over and sat down on the corner of the bed. \"I think he'd freak out if I did.\"\n\nHoly cow! Was she even thinking it? \"Wendy?\"\n\nShe chuckled. \"Come on, Dad. She's fucking gorgeous.\"\n\n\"But you ... she's a girl!\"\n\n\"And? It's never bothered you when it was me and Tina.\"\n\n\"You and Tina!?\" I gasped. My head was spinning.\n\n\"Jesus, Dad! You had to know. It's been going on for years. All our sleepovers\u2014\"\n\n\"Hell no, I didn't now!\"\n\nFiona laughed, and settled me down with one of her kisses. \"It's no big deal, Daddy. Most of us girls experiment with each other growing up. Is that such a surprise?\"\n\nTina was at the side of the bed. \"We were sure you knew, Mr. Z. We even joked about it.\"\n\n\"I had no idea,\" I admitted.\n\n\"Does it bother you?\" Tina asked. \"That me and Wendy ...\"\n\nFrankly, it did, a little. \"It's ... I guess I'm just surprised.\"",
        "Wendy was still sitting behind me, while Fiona was stretched out on the opposite side, her hand still tugging away at my unresponsive cock. \"Would it freak you out?\" my surprising daughter asked.\n\n\"You and Tina?\" \n\n\"No, silly. Me and your girlfriend. Or, well, any of us and her.\"\n\nI looked over and saw the other two staring at the centerfold beside me. \"Donna too?\"\n\nDonna nodded. \"For the last few months,\" she said softly.\n\n\"I'm such a fucking moron. I had no idea.\"\n\nFiona's laugh grabbed my attention. \"No, you're not a moron. You're a father, who has a hard time accepting his little girl is grown up. It's not the end of the world, Adam. Tell them it's Ok, please?\"\n\nI glanced over at my daughter, who was waiting eagerly for an answer. I looked over at the other two, and my mind started to imagine what they were talking about. All four of them. In bed. Together. Doing ... things. Naughty, delicious things.\n\nFiona gave my cock a tug, and I was embarrassed to see I was hard. Very hard. \"I think that's a yes, ladies. I need a kiss. One of you. Now.\"\n\nWendy was more eager than I thought. She crawled over me, and was on our new friend in a heartbeat. I figured it was time to beat a strategic retreat. I'd had my fun and then some. I had to admit, the idea had my blood running hot. But that was my baby girl, giving my bedmate a tonsillectomy.\n\nI climbed off the bed, and Donna sidled up next to me. \"Will it bother you, Adam? It's just playing around.\"\n\n\"What happens in Aruba, stays in Aruba, right?\"\n\nShe grinned and gave me a big hug and a kiss. \"You're the greatest!\"\n\nI heard laughter, moans and sighs coming from the bed. Tina was already naked, and Wendy was removing her bottoms. It was a little too much to take, and I decided to give them a moment, and used the restroom. I drank a tall glass of water, before returning to my bedroom.\n\nThe bed was a mass of writhing, beautiful women. All three of my girls concentrating most of their attention on the redheaded goddess in their midst. I think the most shocking thing for me was that it was my girl with her head between Fiona's legs, giving her the screaming orgasm I couldn't manage.\n\nAdmittedly, it was without a doubt that most exciting thing I'd ever seen. I was content to watch for a very long time, until Donna's rear end, up in the air by the edge of the bed, was too much to resist. I moved up behind her, and fondled her sweet cheeks. It was my way of letting her know my intentions. She wiggled her butt in invitation while she continued to feast on Fiona. When I slid my cock home, she squealed delightfully, before going back to work.\n\nFiona was right. She had no trouble coming for girls. She even invited me for a ride, and I enjoyed myself, while Donna perched on her face, and my daughter and Tina engaged in 69 beside us. Yes, it was extremely decadent, and no, Fiona didn't come for me, but I enjoyed the hell out of it.\n\nWas it awkward, occasionally brushing against my daughter, while rolling around with the other women. A little. Not as bad as I thought it would be. I even pushed her butt out of the way once, when it got a little too close for comfort.\n\n\"Geez, Dad!\" she growled. \"It's a fucking orgy. Deal with it!\"\n\nOh my God! She was right! I was in my first orgy, and the only man present. I don't know what else you could call it with five people having sex with each other. I was lucky, I had a lot of openings to avail myself of, and avail I did. Once I'd finally come, in Teri's sweet pussy, I rolled over and collapsed. Wendy cuddled up to me, and gave me a little kiss. \"That wasn't so bad, was it? Didn't freak you out too much.\"\n\nI was too worn out to argue. \"No, not bad at all.\"\n\nShe grinned. \"We're still not fucking, you and me.\"\n\n\"No honey.\"\n\nI got a nice kiss for that. \"Good. If you really wanted to, I guess we could, but I'd rather not.\"\n\nI had to admit, it was kind of wonderful to talk about it as easily as we could, while the other three were twisted together like a pretzel. \"You know I love you,\" I said.\n\nShe nodded. \"I love you more. Thanks for not getting all weird. This was absolutely crazy. Where the hell did you find someone who looked like that?\"\n\n\"She is pretty isn't she?\"\n\n\"Fucking-A! Movie star gorgeous. What's the deal?\"\n\n\"She found me, last night at the dance. She stopped by our cabana, and I invited her up. I wasn't expecting this, though.\"\n\nShe giggled, hugging me. \"I don't expect so.\" She was quiet for a second while we were entertained by the moans and sighs beside us. \"You're not mad at about me and Tina, are you?\"\n\n\"And Donna,\" I reminded her.\n\n\"And Donna. Angela too, but only a couple of times.\"\n\nI shook my head. How little I knew my girl. \"No honey, I'm not mad. I guess I'm just learning. I suppose if your Mom was still around, you would have been able to talk to her. I guess it's a little awkward discussing your sex life with your old man.\"\n\nShe sat up and grinned. \"Not anymore!\" I got another quick kiss, and then she was climbing on top of the mess of flesh beside me. I turned on my side and watched. It was an education.\n\nThey slowly started to dissolve, Donna the first to join me, lying on top of me exhausted. \"Have fun?\" I teased.\n\nShe nodded wearily. \"That was crazy.\"\n\n\"No kidding.\"\n\nThen Tina separated, and cuddled up next to me. It was only a minute or so later that Wendy and Fiona finally calmed down. Fiona looked a mess, and her face was like a glazed donut. Every one of the girls had spent a lot of time perched on that gorgeous visage.\n\n\"Happy, Fiona?\" I teased.\n\n\"Sweet mother of God,\" she moaned. \"That was unexpected. How are you still alive?\"\n\n\"I live a charmed life. And one of those young ladies is off limits to me. Anyone feel like dinner?\" I asked.\n\nThe chorus was a resounding yes. I think it took us close to an hour to pull ourselves together. Claire was right, however. A call to reservations, even at the last minute, found us a restaurant with space for five. \"Steakhouse alright?\" I announced to a manic suite.\n\nThere were no nays, and I was about as proud as a man could be escorting four beauties to dinner. I'll admit I was a little surprised that Fiona could fit in one of my daughter's dresses. She certainly made it look good.\n\nThere was a round robin of kisses goodnight, when we parted ways with Fiona. It was our sixth night, and we were leaving the following day. It was sad, knowing we'd never see her again. My original assessment of her as a lousy fuck was gone. So she didn't come from dick. So what? She could suck a mean cock, she was a nice fuck, and she was very willing and flexible. I just had to remember her engaged in 69 with Donna, while I pounded her pussy, and her coming on the blonde bombshell's tongue. That had been hot as fuck!\n\nWe posed for pictures, having the waiter take pictures as the table, and strangers outside the restaurant were kind enough to work their way through each of the smartphones, until everyone had a picture to remember the day by.\n\nArriving back in the room, I was surprised to see the bed had been made. Tina claimed responsibility, having called our suite butler, who had taken care of things. That was good, because the bed had been a complete mess before we were finished.\n\n\"What's the plan?\" I asked.\n\n\"Bed, we gotta get up early,\" Wendy reminded me.\n\nTurns out the plan was four in a bed. I didn't think it possible, but seeing Tina and my daughter going at it beside me, and with a little oral encouragement from sweet Donna, Wendy and I were soon taking turns with her two friends. A long time later Tina was riding me, while Donna was parked between my girl's legs. Wendy reached over and took my hand. \"This is great, isn't it Dad? Not too weird at all, right?\"\n\nA little weird, but I had to admit not too bad. \"Thank you for this week,\" I told her. \"And it's not too weird at all.\"\n\nShe grinned at me, stroking Donna's hair, encouraging her. \"Still a little freaked out, aren't you?\"\n\nI couldn't help but chuckle. \"Just a little.\"\n\nShe wriggled over until she was pressed against my side, pulling my arm around her shoulders. \"Deal with it, old man. Things have changed.\"\n\nThey had, at that. I pulled Tina down so I could kiss her, while fucking up into her tight little pussy. Then she leaned over and kissed Wendy, and I watched from up close. \"Best fucking vacation ever,\" Tina whispered, before returning to kiss me.\n\nI wasn't going to argue that. Donna took her turn a few minutes later, and she finished me. Wendy and Tina were already done, and looked adorable, hanging onto each other. \n\nNo, not too weird. \n\n* * *\n\nWe were up early; we didn't even have sex. The courtesy van left at nine, and we had a lot of packing to do and a few things to take care of, including breakfast. I went out to the pool where I found Manny and made sure he understood I'd been very happy with his service.\n\n\"My pleasure, se\u00f1or Adam. I hope we see you again soon.\"\n\n\"I hope so too,\" I told him.\n\nAt the front desk, I signed off for all of our expenses, and got my receipts. I was surprised to find a message for me. It was short and sweet. A phone number, and the words, \"Call me, Fiona.\"\n\nI was sitting in the back of the van, with Tina under one arm, and Donna the other. It was sad to leave the place behind, but I was confident my drought was over, and it wouldn't be four years before I had sex again.\n\n\"Wanna join the mile high club?\" Tina whispered in my ear.\n\nFour years? I don't think it was going to be four hours.\n\n============================\n\nThanks for reading my Tall Tale. I hope you enjoyed it as much as I did writing it. It's a contest entry and your votes are appreciated. I also love to read your comments and observations. TTT "
    ],
    "authorname": "Tx Tall Tales",
    "tags": [
        "all-inclusive",
        "threesome",
        "orgy",
        "daughter's friends",
        "celibate",
        "aruba",
        "redhead",
        "pool cabana",
        "resort",
        "summer"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/all-inclusive-summer"
}