{
    "title": "My Night with Chloe",
    "pages": [
        "I glanced at my watch as the last student got up to do his presentation. It was 4 pm and I'd been sitting in a jury since 9:30 with a short break for lunch. I was ready for the day to end as he plowed into his song and dance.\n\n\"My project is a branding exercise for a line of organic restaurants. I took my inspiration from their menu and created a graphic and logo that could...\"\n\nHe droned on as I lost my concentration and waited for the day to end. I had been invited to the University to be an outside jurist for a group of sophomores finishing up their spring Computer Graphics and Marketing course. As one not used to endless presentations by young college students, I had begun to run out of gas by mid-afternoon. But, on the whole, the day had been an interesting insight into a group of relatively creative students who had set their sights on a big final push to finish the course and, hopefully, get a good grade. \n\nI looked over at Chloe and smiled. I could see that she too was waning as the afternoon was coming to a close. Chloe had been a student intern at our advertising firm the past two summers and was a month away from graduation. She was a Teaching Assistant for this particular course, being taught by a Professor Stevens, and she had called me to see if I'd be interested in being an \"outside\" professional member of their final jury. The other members were all faculty here at the University and I was the lone member from the actual world of advertising. \n\nHonestly, I probably would have taken a pass on the offer under different circumstances. But how could I turn down Chloe? Plus I still held out hopes that I could lure her back to the office after graduation...or if not this summer, then at some point in the future. I had written her a recommendation letter for a design firm in Cleveland, Ohio, so I knew she was looking further afield. Based on the glowing recommendation letter I had written, any firm would jump at the chance to hire her. I suspected she was moving to the Midwest upon graduation, but I still didn't know for sure. I figured I'd find out later in the evening.\n\nChloe was a senior, but she had taken a gap year before college and was, therefore, a little more mature than most of the college students her age. We had had a very professional relationship during the summers she worked in our Albany office. She had grown up in Clifton Park and was living at home the two summers of her employment with us. She had helped me with a variety of projects and we'd established a wonderful working relationship. She was conscientious, smart, hardworking and focused. She took on any task with a smile and was able to handle clients as well; in fact, they loved her. \n\nIn many ways I felt like a mentor to Chloe over those two summers. And while our relationship was totally professional on every level, there was also a subtle undercurrent that I had always sensed. It wasn't necessarily a flirtatious connection, although that was there for sure. It was deeper than that - more like a mutual attraction at some very basic level that transcended our 33 year age difference.\n\nOf course, on top of being smart and personable, Chloe was also a very attractive young lady. She had always projected a very conservative, innocent image in the time I had known her. I think she had that effect on anyone who met her. But while she had that \"girl-next-door\" look and demeanor, she had a body that belied the image she projected. I had seen her in skin tight jeans the past two summers when she had worked for us and knew she had a killer body to match her sweetheart personality and considerable professional skills. She was a keeper, on every level. \n\nI looked over at her as the young gentleman presenting droned on. Her long wavy black hair contrasted sharply with the smooth pale skin of her complexion. Her big brown eyes surveyed the images being presented as I surveyed her. She was wearing the requisite student uniform of jeans and a tight top and probably stood about 5'-5\" in her sneakers. Her slender body still had an innocence to its curves. Her breasts weren't large - maybe a nice B cup - but they were well proportioned to her thin torso. Her long legs were lean and taut and I had admired them in dresses a few time the previous summer. Her ass was a sight to behold, in jeans or a dress. And when she wore heels, which I had observed only a few times, they added a sensuous air that contrasted with the sweet innocence that permeated her personae. She was an interesting study in contrasts: sweet innocence mixed with sexy as hell. \n\nI felt guilty having lost my concentration, so I refocused on the final presentation and made a few comments as the last student of the afternoon finished up to everyone's relief. It had been a long day. As we broke up and everyone stood and stretched, the Chair of the department wandered over my way.\n\n\"Jake, I can't thank you enough for spending the day with us. The students benefit so much from hearing from a true professional and someone out in the field running a firm.\"\n\n\"Well, you're most welcome, Bart. My pleasure. And, as I'm sure you know, there was no way I could turn Chloe down. That was an impressive display of work for a group of sophomores, I must say.\" \n\nAs the Chair and I talked, Chloe wandered over to thank me as well. Bart chimed in to make sure I knew he hoped I'd stay for dinner. They had comped me a room at the local Hilton for the night and offered me a night on the town in appreciation for a day spent with their students.\n\n\"Jake,\" the chair continued, \"Professor Stevens and I were hoping you'd be able to join us for dinner tonight. We have reservations at one of Burlington's better bistros and hope you're free.\" He turned to Chloe. \"And you made this all possible, Chloe, by inviting Mr. Parsons, so I hope you can join us as well.\"\n\nChloe smiled at the Chair and then at me, appearing to gauge whether I was interested, or not. I was game, as long as she was. \n\n\"Are you able to join us, Jake?\" she asked with a somewhat expectant curve to her question.\n\n\"Of course,\" I replied. \"I can't turn down a free meal now, can I?\"\n\nBart laughed and shook my hand. \"Great, then. We'll see you at 7pm at Juniper. That will give you time to relax and join us later. My wife is coming, as is Professor Steven's girlfriend, so we'll have a nice party of six. See you there,\" he chirped as he turned to talk to a student. \n\nI was finally left alone with Chloe who turned and smiled directly at me.\n\n\"Thank you so much, Jake. This means so much to me - and to the students. Your contributions are most appreciated.\"\n\n\"Like I said, Chloe - you're a hard person to say \"no\" to. It's been my pleasure. I appreciate the invite.\"\n\nI never got tired of looking into her big beautiful eyes. They were so large and expressive and easy to get lost in. I kept my eyes on hers and refused to yield to the desire to scan her body again. I needed to maintain professional decorum. She seemed to have something to add, so I waited for her to continue.\n\n\"So, listen. I know the University is footing the bill for the hotel and dinner, but I feel like I owe you something too for your troubles today - and for your letter of recommendation,\" she added. \"Would you be willing to meet me early at the restaurant? They have a great bar and I'd love to buy you a drink.\"\n\nShe peered up at me with those doe-like eyes, biting her lower lip. Like I said, I couldn't say no to this young woman; nor did I want to.\n\n\"Well, that would be great, Chloe. Of course. You want to meet at six?\"\n\nI could see the sparkle in her eyes as I accepted her invitation and we agreed to meet an hour before the others arrived. I headed back to my hotel with a smile in my head, if not also on my face. \n\nI knew that the restaurant was a short walk from my hotel, so I decided to take a quick nap before showering and getting ready for dinner. I had gotten up quite early to make the trip up from Albany and, while the day had been sedentary, I knew I'd benefit, as I always did, from a quick power nap. \n\nI set my alarm for a half hour later and awoke to a quick shower and a clean set of clothes. I put on slacks and a casual sports coat and looked myself in the mirror. I ran a comb through my long gray hair and switched to a pair of more casual glasses. By ten minutes to six I was meandering toward the restaurant, looking forward to a conversation at the bar prior to our dinner.\n\nI knew Chloe had a serious boyfriend from high school - or at least I assumed she still did. She seemed like the kind of young lady that would mate for life. I didn't know much about him, other than that they had met at a summer camp before her junior year of high school and they had been together ever since. Perhaps her status had changed, but I doubted it. Not that it really mattered one way or the other. But I did sometimes wonder if the young man knew how lucky he really was. \n\nAs I arrived at the restaurant I quickly surveyed the bar and saw Chloe just arriving herself and hanging a small purse on the back of a bar chair. She saw me enter and beamed a smile that made me melt. She looked incredible - transformed from the student garb of a few hours early to an outfit suitable for a night on the town. \n\nShe was wearing a short dark blue dress with small white polka dots. The thin straps contrasted against the pale skin of her delicate shoulders and the bodice of her summery dress highlighted the soft swell of her small breasts. She was wearing surprisingly high strappy heels for a college town, but I wasn't going to complain. They made her look like a model as she stood beaming as I approached.\n\n\"Chloe! Look at you. You look amazing, young lady,\" I stammered, taking the opportunity to unabashedly look her up and down. \"Wow!\"\n\nShe smiled in embarrassment, but I could tell she appreciated the comment. She was wearing light make up, had done her hair up a bit and had a small pendent around her neck, hanging down on the bare white skin of her upper chest. She had clearly taken some time to prepare herself for dinner and I was happier than ever to have an hour to share her company before the others arrived.\n\nShe perched up on bar stool and got comfortable. It was impossible not to show some serious thigh with the length of the dress, but she seemed quite comfortable with her display of smooth alabaster skin. \n\n\"You look pretty sharp yourself, Jake,\" she replied. \"I'm glad you could take me up on my offer.\"\n\n\"Of course. What would you like?\" We surveyed the drink menu - she chose a Chablis and I ordered a dry martini up with Hendricks. We talked nonchalantly for a while. She caught me up with school and the approach of her final year. \n\nAs we settled into our drinks and the conversation flowed, I felt comfortable enough to ask her about the current situation with her boyfriend, Ken. He was a senior engineering major at a college upstate New York and was also about to graduate. She indicated immediately that they were still going strong.\n\n\"He's taken a one year post graduate position with an environmental firm out in Cleveland and I am going to head out there for the summer. I have a summer internship with a design firm there.\" She paused as the news sunk in. \"Thanks, in part, to your recommendation letter. Thank you, Jake.\" She lifted her glass and smiled as we clinked a toast.\n\n\"Oh,\" I replied, not being able to hide my disappointment. \"Well, you're welcome. I'm sorry you won't be joining us again this summer.\"\n\n\"I know, me too. But, Ken's job is going to be good experience and, well, we've never lived together and we thought this would be a good summer to give that a try. We've been going out for seven years, but it's always been somewhat of a long distance relationship. We thought this would be the perfect time to see if we really get along once we're around one another all the time,\" she said cheerily. \"I suspect we will, but, still good to test the waters.\"\n\n\"I agree. Living together is a very different animal than weekends here and there,\" I supported. \"Sounds like a good plan.\"\n\nShe finished her drink, as did I, and we still had a half hour until the others showed up. So we ordered another round and toasted to the approaching summer. As the alcohol took hold, our conversation became a bit more comfortable and free.\n\n\"You must be quite serious about Ken,\" I suggested. \"You've been going out for since high school? That's quite amazing.\"\n\nShe got a somewhat strange look on her face as she replied. I couldn't quite figure out what was on her mind. \n\n\"Yes, it is amazing.\" She didn't seem quite convinced and remained silent as I felt like she wanted to add something to that statement. \"But we decided to do this thing this semester that, well, it's...kind of hard to explain,\" she said rather sheepishly. Her pale skin was the type that flushed easily and I could see her redden from embarrassment at whatever she was hinting at. \"I'm sorry. This wine is going to my head,\" she giggled. But she clearly wanted to share something and, without pushing too hard, I pressed her a bit.\n\n\"What kind of \"thing\" are you talking about?\" I queried, taking another sip from my drink as she did the same.\n\n\"Oh, my God. I can't believe I'm telling you this,\" she exclaimed, putting her face in her hands.\n\n\"What?\" I asked. \"You haven't told me anything yet. What's the big secret?\"\n\nShe took a big sip of wine and a deep breath. \"Okay. It's like this.\" She hesitated and looked me squarely in the eye. She seemed to be sizing me up and making a judgment about whether she should proceed or not. I had no idea where this was going, but now my curiosity was definitely piqued.\n\n\"So Ken and I decided this semester that we should both see other people. You know, not seriously or anything. But we do plan on getting married someday soon and, well, we were both wondering if we'd regret sometime down the road not, you know...\"\n\n\"Umm, no,\" I replied. \"I don't know,\" I said, thought I was beginning to get the drift. \"What? Have you only been with each other?\" I asked point blank.\n\nShe looked sheepish, but nodded with a shy smile. \"Yes,\" she said quietly as she took another sip. I could now see where this was going.\n\n\"So, you decided to spend a semester dating a few other people? What's wrong with that? It sounds like a very mature approach, if you ask me.\" I watched her carefully and could tell there was more to the story. I decided to probe, the alcohol beginning to blunt our inhibitions just a little. \"So how is it going? Have you...\" I hesitated, wondering how to frame this, ...\"been with any other men?\"\n\nShe sighed deeply, as if girding herself for an honest answer. \"Well, Ken has been with a few girls this semester.\" She let the sentence lay there and I knew I needed to push a bit more. \n\n\"So Ken has been on a few dates or has he...slept with a few women?\" This was beginning to get interesting. I felt a bit odd continuing this line of questioning, but I could also tell that, while reluctant, she wanted to talk about it. She took a deep breath before continuing. \n\n\"Well, I might as well tell you everything,\" she said matter-of-factly, taking a deep breath before plowing ahead. \"Yes, he has.\" She waited for this answer to sink in before continuing. \"We decided that this was a good time for both of us to experiment a little bit with others. We're totally serious about one another and plan to spend the rest of lives together. We plan to marry within a year or two.\" She looked at me carefully before continuing. \"But we thought we should, you know, experiment sexually a little bit. We promised to tell each other everything. But we also gave ourselves this one semester to, I don't know, try it out, I guess.\"\n\nI looked at her carefully before I continued. There was still something she was trying to say. I just couldn't quite figure out what it was, but I now had my suspicions.\n\n\"Well, it sounds like a very mature and honest approach, if you ask me. I can think of a couple of friends who had issues later in their married lives because they had never experimented while young. You guys sound like you really have your act together.\"\n\n\"Yes, I guess,\" she replied, but not with any assuredness. \"Ken's had a couple of good experiences, but...\n\n\"But, what?\" I prodded softly. God, she looked so damn beautiful as the soft light of the back bar played on her luminescent skin.\n\n\"Well, I've been a failure at it,\" she finally blurted out. I just looked at her.\n\n\"A failure? Like, what? You mean you haven't been on any dates or found any guys to go out with? I find that hard to believe. You're gorgeous, if you don't mind my being honest.\"\n\n\"Well, I've been on a couple dates, but I just haven't been able to take it any further. None of the guys really appealed to me and, I don't know, I just felt like I was forcing the issue. It didn't feel natural. Plus most of the guys at school are just...\" She let the statement fade as she sipped her wine with a look of consternation on her face. \"And now the semester is almost over and, I don't know, I just feel like I've let my opportunity slip by. It sucks. I want to do it...but I can't.\" Her eyes had watered, but she maintained control of her emotions.\n\n\"Well, I can understand your reluctance,\" I said, trying to lift her spirits. \"On the one hand it's not something you want to do casually. But, given this window of opportunity, I can see how you might want to take advantage while you can. I'm not sure what to tell you, Chloe. I wish there was some way I could help.\"\n\nThere was an awkward silence that transpired as she looked at me with puppy dog eyes and I suddenly started to catch the drift of this conversation. Her look was one of pleading and worry and confusion and lust - all mixed together in one beautiful face. \n\n\"Oh my,\" I said. \"Are you suggesting that...?\" \n\nSuddenly her eyes looked away from me and her face lit up with a smile. She waved and I realized our hosts had arrived. I'm not sure it was good timing or bad timing, but our conversation immediately went on hold as the two couples walked up and greeted us warmly. \n\nBart's wife was about his age - mid sixties - but Professor Steven's girlfriend looked to be several decades younger than he. She was a looker and he seemed quite pleased to be showing her off. We were shown the way to a choice table in a back room and settled down around a large round table for six. Chloe was seated across from me as one couple sat to my right and the other to my left.\n\nThe meal was wonderful and the conversation flowed easily. But, I have to say, I couldn't take my mind off where my talk with Chloe had been headed. Several times during the evening I caught her eye or she caught mine. We smiled benignly, but we both knew we had started a dialogue that would have to be continued later. \n\nAs dinner broke up, we shook hands all around and I tried to find a way to hang back and leave discreetly with Chloe. \n\n\"Do you need a ride, Chloe?\" Bart asked.\n\n\"Oh, no. Thanks, Professor Ryan, but I have my car parked outside.\"\n\n\"Alright then.\" He turned to me and stuck out his hand. \"Thanks again, Jake. And safe travels. I hope we can lure you back again someday.\"\n\n\"I hope so too, Bart.\" We said our goodbyes in front of the restaurant and as the two couples went one direction, Chloe and I went the other.\n\n\"I'll walk you to your car,\" I suggested. She was parked in a rear parking lot and we walked in silence. As we arrived at her car I knew I needed to break the ice.\n\n\"So, Chloe. Were you suggesting what I thought you were at the bar?\" I asked bluntly. I'd had enough to drink at this point that getting to the point was easy.\n\nShe looked at me softly in the sodium glare of the parking lot lighting and searched my eyes for an answer. \n\n\"Well...yes,\" she said, so softly I could barely hear her. \"Would you...consider?\"",
        "\"Chloe. This might be the most unexpected and exciting proposal I've ever received. Are you sure it's not the alcohol talking?\"\n\n\"It's not,\" she assured me, looking at me with the most beautiful soulful eyes.\n\n\"I mean, I'm at least thirty years older than you,\" I implored. \"I used to be your boss,\" I added. \n\n\"But, you're not married and...well, at least not anymore. And I find you very attractive, Jake. We wouldn't be discussing this if I didn't feel something.\" I could see she was beginning to get upset. \"Oh, God,\" she exclaimed as she put her face in her hands. \"I'm so embarrassed. I shouldn't have...I'm so sorry,\" she said in a voice that sounded like she was bordering on tears.\n\nIt was true. I was not married, but I had been. I may have been a confirmed widower for the past seven years, but I surely understood marriage and all the negotiations and compromises that go into a good one. But at this moment Chloe was distraught and I needed to comfort her. \n\n\"Oh, Chloe. No, it's not that. Come here,\" I said, reaching for her and pulling her slender body against mine. Even with heels she was several inches shorter than me as she pressed her head against my shoulder and fought back tears. \"You have nothing to be sorry about. It's an awkward situation, but I understand...I do.\"\n\nI was also feeling a wild mix of emotions at that moment. On the one hand I was trying to comfort a distraught woman who was feeling unsure and embarrassed by an awkward moment. On the other I was becoming aroused by the feel of this slender young lady as she pressed her body against mine in the dark seclusion of the parking lot. I placed one hand on her head and the other on her back as I felt her press herself against me. I suddenly became very aware of the awkwardness of the moment and knew we had to move to more private quarters if we were to continue this discussion. \n\n\"Look at me, Chloe.\" She looked at me with beautiful pleading eyes as I pondered our predicament.\n\n\"I am wildly tempted to take you up on your offer. But, I don't know, it just doesn't seem right. I mean...\" Actually, I didn't know what I meant. I had never been in such a position before. \n\n\"Oh God, Jake. I'm so embarrassed. I can't believe I just said what I did. I'm so sorry!\" She was practically in tears as I pulled her to me again to try and calm her down.\n\n\"Chloe, it's okay. Really. I'm flattered. I really am. I'm just...conflicted.\"\n\nI hadn't exactly said no, because I couldn't. The temptation was overwhelming at this moment. I'd been her boss and she my intern. We'd had a professional relationship and there were certain lines that were not to be crossed.\n\nBut now I was facing one of those once-in-a-lifetime moments and I was reticent to pass on what could, potentially, be a wonderful night with a beautiful young lady. Since I was incapable of making a decision at that very moment, I pulled her to me and she turned her head and rested it on my chest. \n\nAnd while my head may have been conflicted, my body was not. I comforted Chloe and she put her arms around me in a gentle hug, our bodies pressed together. As I gently caressed her hair, I felt my lower body responding to the closeness of this beautiful young lady. I became a bit embarrassed by the erection that was slowly growing between us. My first impulse was to pull away. But, I didn't, and as I hardened, I knew it became obvious to Chloe that I was getting aroused. Rather than push me away, however, she pressed harder against me. It was a clear sign that she knew I was excited and was responding in kind. \n\n\"Hmm. My mind is telling me no. But my body is having other thoughts,\" I whispered in her ear.\n\n\"Good,\" she whispered back. \"I think this is one of those times when you should listen to your body.\"\n\nAnd as we stood there next to her car in the back corner of the parking lot, we stared into one another's eyes, trying to come to some sort of agreement. My erection was pointed off to the side and getting in the way of making any sort of rational decision. And as we looked at one another for a few moments, our faces slowly moved closer to together and our lips met in the softest, gentlest kiss. \n\nHer lips were like feathers and it felt like time stood still as we kissed. It was a soft innocent kiss for the first thirty seconds or so. Then I felt her tongue begin probing my mouth and I returned in kind. In a matter of moments we were locked in a deep French kiss. It felt like we had gone from zero to sixty in nothing flat. I leaned back, both of us panting and already out of breath.\n\n\"Okay,\" I said, our bodies now making it clear what was going to happen. Still, a clear head needed to prevail here before we were humping right there in a semi-public place. I took a deep breath and pulled back to disengage, my erection now a clear and unmistakable protuberance in my slacks.\n\n\"Listen, Chloe. Let's do this. Are you okay to drive?\" She'd had two glasses of wine at the bar, but had switched to water once we were seated for dinner.\n\n\"Yes,\" she replied.\n\n\"Okay. Good. Why don't you drive me back to my hotel? We'll go up to my room and then we're going to talk a little bit and set some ground rules. I'm excited, obviously,\" I said, looking down at my erection straining my pants, \"but I want to make sure we both go into this with a clear head. Sound like a plan?\"\n\n\"Mmmm, okay, Jake. Let's go.\"\n\nShe opened her door as I went around to the passenger side and slid into the car. A few minutes later we were at the hotel and parked in an adjacent lot. It was only 9:30 so the night was young. She grabbed her shoulder bag and we entered the hotel, walking in like we were a couple staying there. No one paid us any mind and we were soon on the elevator. Chloe eyed me nervously, but I gave her a calm smile and a few reassuring words as we exited the elevator. We walked down the dim hallway in silence, both aware of what was soon to come. \n\nAs the door to my room closed we both stood for a moment looking at one another. She wandered over to the window, but the view of Lake Champlain was clouded in darkness. I turned a single bedside light on, took my jacket and shoes off, and used the bathroom, as did she. With that out of the way I sat on the edge of the bed and reached out my hands for her. She wandered over and stood before me. I placed my hands on her hips; she placed her hands on my shoulders. \n\n\"So, if we're going to do this, I need to make a few things clear. Okay?\"\n\n\"Yes,\" she replied. \"I'm listening.\" She looked so damned innocent at that moment. But I don't think I had ever wanted a woman more.\n\n\"First, if at any point in time you decide this is a bad idea or you want to stop, just say so. Okay? As much as I'm as excited about this as you are, I want to make sure you're comfortable. Deal?\"\n\n\"Yes, deal.\"\n\n\"Second, I want you to promise that you'll be honest with Ken about this. Is he going to think it's weird that you decided to sleep with an older man who was your boss at one time?\"\n\n\"I will. We promised to be honest about whatever experiences we had. He's told me, as hard as it was to hear. And I will do the same.\" She hesitated. I knew there was more. \"And as far as you being older, well, I like that. It makes me feel safer. And it makes me excited knowing that you will be gentle and caring. That means so much to me. And also arouses me incredibly. I'm very attracted to you, Jake. I always have been.\"\n\n\"Well, that makes two of us, Chloe. I've always been incredibly attracted to you as well. You are a very beautiful woman and the thought of being with you. Well, you saw, or felt, my state earlier,\" I explained. She giggled.\n\n\"Yes, I did. It was a very impressive display,\" she joked. \n\nI took her hands in mine as I sat and she stood. I was getting lost in her eyes and couldn't wait to touch her, explore her, and give her pleasure. But first I needed to make sure we were both on the same page.\n\n\"Finally, I want to ask you a few questions so I know what your previous experiences have been like with Ken - what you like or don't like. Okay?\"\n\n\"Sure,\" she replied. \"Fire away.\"\n\n\"Can I assume you both have enjoyed oral sex?\" I expected an affirmative answer, but was a bit perplexed by her reply.\n\n\"Oh, yes. I love oral sex. I think I've gotten pretty good at it, if I do say myself. Ken certainly loves what I do to him.\" \n\nI hesitated before probing a bit more. \"That's good. But what about him? Does he go down on you?\"\n\n\"Well, not really. He doesn't really like doing that. So...I guess the answer is...no.\"\n\nI tried not to look dumbfounded, but I was. \n\n\"Really? My God, I'm amazed by that. I find giving a lover oral pleasure to be one of the biggest turn-ons I know of. A man should worship his lover's pussy.\"\n\n\"Well, I guess that's why we're here,\" she giggled. \"You can do whatever you want, Jake. I'm here to learn.\" She smiled the most seductive smile. \"And I'm just being honest,\" she added. \n\n\"Good. So, tell me what positions you like. How does Ken make you achieve orgasm?\"\n\n\"Well, we've tried all the positions. I'm not sure I have a favorite, though I do like being on top sometimes,\" she suggested. \"As far as orgasms, well, I'm not sure. I think I've had some, but I can't say for sure.\" She looked at me almost pleadingly. I was, once again, dumbfounded. Could it be that her lover of six years had never actually made her cum?\n\n\"Do you masturbate? Or ask Ken to try and please you when you're making love?\" I was trying to make sense of an increasingly bizarre situation.\n\n\"Yes, I masturbate sometimes when Ken isn't around. When we have sex, he usually has an orgasm and then, well, he curls up and goes to sleep. What he does always feels good, so I don't complain. It's just, I don't know, that's the way it is.\" I looked at her with what had to be a quizzical expression on my face. \"I'm happy,\" she added, not all that convincingly.\n\nI let go of her hands and put my hands on her hips again. The hotel mattress was high so I was perched on the edge of the bed and our faces were even. Her warm curves felt good under my hands and she had an impressive flair to her hips for such a slender girl. \n\n\"Well, one final thing, Chloe. I'm not going to hold back. I'm going to make love to you...\" \n\n\"Yesssss,\" she whimpered. \"Please! I want you to do it. I want you to do everything.\" \n\n\"I'm going to fuck you , Chloe,\" I added for good measure.\n\n\"Oh, God. Yessss. Please, Jake,\" she gasped.\n\nIf I'd had any hesitations going in, they were gone now. This was going to be one incredible night. \n\nIt was time. I spread my hands on her slender back and pulled her to me slowly. Our lips met in the most tender, delicate kiss. The room was silent except for the tiny whimpers and soft moans from Chloe - and then me. And, just as in the parking lot, our kiss deepened quickly until our tongues were once again probing and exploring. \n\nShe was a good kisser; I had to give her that. And I have loved kissing since my earliest days of sexual awakening as a teenager in junior high. Her hands were on my shoulders and mine on her waist, as we focused on our lips and tongues and mouths. Once again, my erection had invited himself to the party and stood hard and proud between us. Chloe didn't seem to mind; in fact she was pressed firmly against it. We broke our kiss. \n\n\"Ready?\" I asked, already knowing the answer. \n\n\"Mmhmm,\" she replied softly. \"I am.\"\n\nI sat back on the bed and spread my legs. I pulled her to me, still standing. \n\nHer dress was sleeveless and buttoned down the front. While the bodice was snug against her lovely young breasts, the short skirt hung loosely around her smooth slender thighs. As I looked into her gorgeous eyes, I began to unbutton her dress - slowly - one button at a time. She looked at me expectantly as I did so.\n\nAs one button after another fell to the side, I unveiled a sexy black bra. I didn't look at it immediately. I just continued to look into her eyes as I continued undressing her - telling her with my gaze that I was going to unveil her tender body. I unbuttoned the front down to her waist and then put both hands on her bare tummy, feeling her catch her breath as I did. I continued to look her in the eyes as my palms slid up her bare skin until slowly coming to rest under her bra clad breasts. \n\nHer bra was a very thin one, no padding. Her breasts felt surprisingly full as I palmed them through the lace of each cup. She gasped slightly as I fondled her flesh and felt her nipples protruding through her thin bra. \n\n\"Lovely, Chloe.\"\n\nI would return to her breasts in short order. But suddenly the urge to slide my hands up her legs made me change course. As we continued to look at each other, my hands dropped to her knees and then began a slow ascent up the outside of her long smooth thighs. Her skin was just as soft as I expected and a little whimper escaped her mouth as my hands arrived at her hips and then slid around to the rear. \n\nShe was wearing a very tiny thong - the color yet to be determined - and as each hand cupped the soft generous flesh of her cheeks, I leaned in to place a kiss on her bare belly. She moaned as she put her hand on my head, encouraging me to continue.\n\n\"Yes,\" she cooed softly. \"Please. More!\"\n\nI would return to explore that lovely ass later. But first, the dress had to go. I reached up and slid the top off her shoulders. It fell to the floor in a silken heap as I gazed at her standing before me in a black bra, a tiny black thong, and dark blue strappy heels. I don't think I had ever seen a more desirable woman. I'm not sure why, but black lingerie on a pale innocent looking woman has always been an incredible turn-on for me. \n\nBut she was still partially dressed and it was finally time to unveil her precious breasts. I could see the tips of her nipples poking slightly through the thin bra. I wanted to see them. I wanted to suck them. She saw me eyeing them and cupped them both seductively. \n\nI reached behind and easily unclasped her sexy black brassiere. She held it in place for a few seconds - a moment of modesty that passed quickly. I gazed expectantly at her body and she looked down at me as she let the bra fall away and to the floor in a tiny black heap. \n\n\"Oh, Chloe. Your breasts...\" I exclaimed. Words escaped me. Her pale white breasts were small, but beautifully shaped and tipped with the loveliest nipples I had ever gazed upon. They were small as well, but the nipple tip itself was darker than I expected and quite distended - a clear indication of her own arousal. Her breasts looked very delicate and extremely sensitive. \n\nMy hands slid up her tummy and cupped her from below, pushing her tit flesh upwards as I leaned in and gently licked her swollen tips. My tongue washed one, then the other, before I puckered and gently kissed each beautiful nipple. I sucked softly and listened as I heard her breathing catch and a moan escape from some deep dark place. \n\n\"Oh, Jake. Yesssss,\" she encouraged. \"Suck my nipples. Oh my! Ohhhh...\"\n\nIt was clear from the very start that this young lady's body was incredibly sensitive as I did my best to lick and kiss and suck her gorgeous nipples and massage her breasts. I pulled away and looked up into her hungry eyes. She watched as I licked the fingertips of each hand, and then lightly rubbed them over the glistening dark tips of her stiffened tips.\n\nHer erratic breathing told me everything I needed to know. She was thoroughly enjoying the attention and I was loving giving it to her. She deserved to know how a good lover worships and treats the object of his desire, especially a lovely delicate pair of breasts. \n\nI expanded my search as my hands glided all over her smooth body. Her skin was like silk and she continued to respond with ooh's and aah's as I explored her shoulders, arms, belly, back, legs and the impossibly sexy curvature of her glorious ass. This girl was gorgeous and even more beautiful in the flesh than I had expected. And her verbal and physical response to my gliding touch was a testament to just how sensitive she was. \n\nI looked at her breasts, standing so proud and firm; the nipples pointing just slightly up, begging for more attention. As I looked at them, my hands circled behind once again and cupped the most perfect of bubble butts. My palms encased her cheek flesh, my fingers curled into her gap and I could feel the heat emanating from between her legs. \n\n\"Oh, Jake. I love the way you touch me, baby. That feels so good,\" she whispered.\n\n\"We're only getting started, Chloe,\" I said. \"Only getting started,\" I repeated as I leaned in once more to French kiss each distended nipple. Then, I placed my hands on her curvy hips and turned her. \n\n\"Mmm. Let me see that back side, Chloe.\"\n\nShe turned demurely and I hissed under my breath as her perfect ass came into view. The tiny triangle of black satin sat just above the crack of her cheeks, disappearing down into the deep crevice between two of the most perfectly formed cheeks I had ever laid eyes on. I had admired this ass in a pair of tight jeans before. But I was still not prepared for the perfection that now presented itself to me. There was not a wrinkle, dimple or blemish on her flesh and the combination of the flare of her hips and curve outward of her derriere itself was an intoxicating sight. And now it was here before me for the taking.\n\nI reached out with both hands. I touched. I squeezed and I fondled. I moaned my appreciation as my hands wandered up and down the length of her body from behind, always returning to the soft firm flesh of the most perfect ass I had ever had the privilege to touch.\n\n\"You are so incredibly gorgeous, Chloe. I mean, I knew, but...\"\n\n\"Thank you, Jake. I'm glad you like it...that you like me.\"\n\nI stood and pressed up behind her. I wrapped my arms around her and cupped her lovely breasts as I kissed her shoulders, nibbling my way up her neck to her ears. \n\n\"I can't believe we are here,\" I whispered. \"This is a dream come true - a fantasy made real. I love touching you, Chloe.\"\n\n\"Mmm,\" she crooned. \"It's nice to be so appreciated.\"\n\nMy hands began to slide down off her breasts and graze along her taut tummy. But before I slid far enough, she shifted positions on me.\n\n\"You have far too many clothes on, Mister. Time for that to change,\" she directed, as she took my place seated on the edge of the bed and turned me to face her. Her fingers began hurriedly unbuttoning my shirt, which she unceremoniously pulled out of my trousers. As it became loose I assisted in removing and flinging it off to the side. I had already taken off my shoes, so I removed my socks and was now down to my pants and underwear.\n\nShe immediately began to unbuckle my belt and there was an urgency to her actions that excited me. She wasn't being shy and demure anymore. She was no longer the innocent girl next door. She was bound and determined to have me undressed alongside her. That was fine with me. \n\nOnce I was unzipped she dropped to her knees - a move reminiscent of a porn clip, but done in a totally sincere manner. She grabbed the waistband of my pants and boxers together and pulled - down. The downward motion pulled my fully blown erection with it. And as she got to mid-thigh, my stiff cock sprung out with a ferocity that made her laugh as it bounced stiffly right in front of her face.\n\n\"Oh my God, Jake!\" she exclaimed, as her eyes widened and she took in the hardness and length wavering right in front of her face. \"It's so...big...and hard.\" She lifted it in her small hand, appearing to feel its weight and mass. I hadn't been this turned on in a very long time, and that, I knew, was evident even to her untrained eye. She circled her thumb and forefinger around the girth of my tip while her other hand reached up to cup the tight spherical mass of my scrotum. She looked up at me with hungry, lustful eyes and suddenly her innocent face seemed to reflect the dirtiest of desires. ",
        "\"May I?\" she queried.\n\n\"It's yours...to play with all night long,\" I whispered. \n\nShe let go and placed her hands on the front of my thighs, and while looking up at me, stuck her tongue out and lifted up the throbbing tip of my cock. She swished her tongue back and forth right on the underside of my head; that sensitive spot that drives me crazy. I could see her eyes smile at my reaction, just before she opened her mouth and engulfed the entire head. I groaned.\n\nI may have been too quick to think this young lady was inexperienced, or at least in the realm of blowjobs. Her boyfriend may have been negligent in certain areas of their sexual relationship, but there was no doubt now that he had taught her how to suck cock, and well. With one hand now wrapped around the root of my shaft, she began to slide up and down the first three inches of hard flesh as she cupped my balls softly with her free hand. \n\n\"Oh, Chloe,\" I whispered. \"That's so good, baby. So good!\" I exclaimed, as I placed my head on hers so I could feel her movements. She made the sweetest little whimpers as she bobbed slowly, going a little deeper every fourth or fifth suck. She pulled off and began to turn her head, licking her way up and down the shaft. I now shined with her saliva as her hand replaced her mouth and she leaned down low to lick my balls. God, I love that feeling - that warm liquid feel of my testicles being attended to. \n\nThen, as she looked up at me, she stuck her tongue out and began a long slow slobbery journey up my length before gulping and going deep. I took the opportunity to push just a little and heard her gag with that choking sound that only comes from a big cock a little too deep in a lover's mouth. \n\nShe pulled off, caught her breath, and encircled the first couple inches with her thumb and forefinger, jacking me quickly as she spoke. \"Mmmm, I love you cock, Jake. So much different than, Ken's. Thicker,\" she said, before licking the tip with a swiping tongue. \"And longer,\" she added. She was multi-tasking: sucking, stroking and cupping my balls all at the same time. \n\n\"You do that like a pro, Chloe. Ken has taught you well. Very well,\" I added. \"But now it's my turn.\"\n\n\"You don't want to cum in my mouth?\" she asked with a baby girl pout. Damn, she was irresistible.\n\n\"I do, but not yet,\" I replied, as I leaned down and lifted her back up to a standing position before leaning in for a kiss. Our kisses earlier had been hot, but exploratory. Now she was naked and so was I. And she had just sucked my cock for what would be the first of many times in the night to come. The hotness and wetness of our kisses now reflected our growing intimacy. \n\nAs I broke our kiss I guided her back over to the bed. \"Lay back on the pillows. Get comfortable,\" I directed. She did. She fluffed the pillows, lay on her back and spread her legs. The thin line of black silk matched her dark hair and was all that protected the tender bulge of her tiny pussy. Her thong contrasted so starkly against her pale white skin. I salivated at the thought of going down on this young lady. I smiled and climbed onto the bed to join her. \n\nShe had adjusted her head on the pillows so she could watch me - watch me go down on her. While I had to give props to her boyfriend for teaching her how to suck cock, he had lost big time points for being a wuss in the pussy-eating department. Then again, that opened the door for me to give her an experience of a lifetime. I had decided to take my sweet time and bring her arousal along in a slow simmer. I was going to enjoy every second, and so was she. \n\nHer legs were spread wide and she smiled at me with a combination of arousal, curiosity and trepidation. I started out slowly, just kissing her legs, her knees, her calves, the insides of her slender white thighs. I kept my gaze on her as much as possible, trying to gauge her reaction as I gave her inner thighs soft wet kisses. \n\nEven the earliest kisses elicited soft moans and she reached down to lightly rub her silk clad pussy with manicured fingers. I took that sign to mean I should begin nibbling my way up her long lean legs. She was of slender shape, but still had amazing curves for such a slight physique. Her outer labia were somewhat exposed in this position and looked sleek and smooth. But I detected a small tuft of pubic hair under the lacy panel of her tiny thong and smiled knowing that she was a woman who scaped herself carefully down there, yet wasn't afraid of leaving a little hair in place. I loved it. \n\nMy hands wandered and explored as my lips honed in on my target, albeit at an impossibly slow pace. I could already see her hips squirming; awaiting my arrival. I slid my hands under her ass cheeks and lifted her up to my mouth, yet only kissed the very insides of her upper thighs. They were slow wet kisses - lots of tongue and lips - and I kept eye contact as much as I could as I inched northward toward her delicious mound. \n\nAs it came into profile I let out a deep groan. I find few spots sexier on a woman than the rise of her pubis - the Mons Venus. I know it's only pubic bone, but to me it's one of the sexiest curves on a woman's body. Some are more prominent than others, sometimes vying with the prominence of the hip bones for attention. Chloe was that kind of girl. Her legs and tummy had not an ounce of fat - and this allowed for her mound to push her black thong out forward with some sexual authority.\n\nAs I came closer to my target, I laid down on my stomach between her legs. My hands moved up under her thighs and then over the front of her hips. As I kissed closer and closer to her barely hidden treasure I could feel and see her body squirming with anticipation. And, more exciting than anything, I could smell the scent of her arousal, now only a few inches from my face. As I looked into her eyes, now frantic with a look of wild lust and need I had not seen before, I opened my mouth and covered her panty clad pussy with a French kiss. She uttered some unintelligible gibberish as my tongue probed lace to find her juicy groove. For just a few moments I sucked on covered clit, but knew that she, and I, needed direct contact, and soon.\n\nI reached across with my left hand and hooked my middle finger under the panel of her thong - and pulled it aside, exposing one of the juiciest and most succulent pussies I had ever laid my eyes on. Some of her more pronounced features - her full facial lips, her big brown eyes, her prominent nipples - were echoed in her lovely pussy. Her inner lips were furled and bursting as if they were in bloom between the slender ridges of her outer labia. Her protruding lips were luscious and pink; dripping with arousal and from the on-going oral assault on her most intimate place. \n\nCould it be true that her lover of six years had never dined on the juicy flesh that was now before me? Could he have been so oblivious to be unaware of the sexual treasure that was usually hidden inside her tiny panties - waiting for a moment like this? \n\n\"Oh, Chloe,\" I whispered. The room was silent, but for our soft groans and the rustling of bedclothes. \"You're pussy. It's so beautiful,\" I exclaimed in wonder. \n\nAs she stared down at me between her small perky breasts, I extended my tongue and licked the honey from her furled lips. She tasted tangy and sweet and her look of disbelief at what was transpiring spurred me on. Gently, as if I was kissing her facial lips softly, I kissed her pussy with tenderness. It was a closed mouth kiss to begin - lips against lips. But as I felt her body move against me and saw her mouth my name in a look of utter arousal, I opened my mouth and encompassed the whole of her glistening distended lips. \n\n\"Ohhhhh, Jake. Ohhhhh. My God, Jake. Fuck!!\" She was practically quivering with excitement as my tongue pushed forth and delved deep inside the wettest, most succulent pussy I think I had ever tasted. Despite the high tension and utter madness of this erotic moment, I kept my cool and moved slowly and methodically; determined to create a slow burn. At the same time, the slowness of my movements seemed to belie Chloe's need for more - for faster, harder, deeper.\n\nI moved my hands back underneath and while cradling her slender thighs, I used my thumbs to pull her lips apart. Her inner labia were gorgeous - furled pink lips that encased a wet pink chasm of moth-watering flesh. She was dripping - even wetter than I had expected - and I was just getting started. \n\nAs I stared up into her lustful eyes, I leaned down to place my tongue on her asshole, then slowly and methodically licked my way up the length of her deep slice of heaven. She gasped with delight and at my naughtiness. God, she tasted divine and she was so fucking sensitive to every swirl of my tongue and every light suckle on her sex. \n\nOnce I had washed my tongue through the depths of her gorgeous pussy, I brought the tip of my tongue to her focal point. At first I stopped all movement and just focused the attention of the tip of my tongue on the tiniest little nubbin of a clit imaginable. With the slightest movement on her little bud of nerves I elicited a cry of compliance that echoed loudly off the quiet walls of my most proper hotel room. \n\n\"Ooooohhh,\" her voice wavered. \"Fuck! Oh, Jake.\" She threw her head back and pushed her hips up to mash against my mouth. \"Uunphh! Yesss!\" \n\nIt had been less than an hour since we had left her colleagues at the restaurant. Now I was between her slender college legs, eating the sweetest dessert imaginable. I moved to get comfortable and began to dine on her tender lips in earnest. I watched her as I ate her, trying to gauge her satisfaction between the lusty look in her eyes and the involuntary movement of her slender hips and legs. She was into this, no question - and I was determined to make her cum in my mouth. Just for starters. \n\nI added more sensory stimulation to the moment. I began to moan and groan as I flicked her clit in earnest. And my lips made loud sloppy sucking sounds as I slurped her juices into my mouth. She tasted incredible - as I had suspected she would. Her natural juices were flowing copiously and I was not going to miss a drop. She was responding quickly as I worked my oral magic. \n\n\"Yes. Yes, fuck yes! Oh, Jake, fuuuuuuck, don't stop. Don't stop! Ahhhhh!\" \n\nThere was an urgency to her pleading now and I knew she was moving forward at a rapid pace. I could feel her body tensing as I played her like a finely tuned instrument. I alternated using the flat of my tongue with the tip, never straying far from the cute distension of her little clit. And as I felt her hips start to rise up off the bed, lifting her pussy to grind it into my mouth, I turned a hand upward and slid my middle right finger into her juicy hole. I slipped right in. She was tight, but so lubricated that my digit slid in and curled up to find the forward walls of her g-spot. \n\nHer language was nonsensical now. She was making sounds and grunting in a pattern that was other-worldly and totally a product of the moment. I felt her orgasm approaching and knew now was not the time to improvise. Now was the time to focus on what had gotten me to this place in time. So with determination and focus, I used my finger and my tongue in a combined effort that raised the intensity with each passing second. \n\nOh, how I had fantasized about this moment - never thinking it would actually come to pass. But, now with my finger deep inside her young snug vagina and my tongue ravaging the tight fleshy curls of her lips and clit, I hunkered down with one purpose and one purpose only - to make her orgasm, and well. She was close, and getting closer. \n\nAnd so I moaned and slurped and sucked and licked and flicked my pointed tongue in a steady urgent rhythm that was counterpoint to the wiggle of my finger. And as I felt her body lift, riding her wave toward climax, I lashed and wiggled her through a violent, body-shaking orgasm. I had to hold on to for dear life as her body rose and shivered. Her hips bucked, her thighs trembled and she let out a scream that was sure to have made the neighbors wonder what was happening in Room 317. \n\nAs I felt her climax and the wave of a gigantic orgasm crash through her slender body, I tasted the gush of her creamy cum flood my mouth. It tasted just a little different than the juices of arousal - more tangy and intense - borne of the deepest part of her body. \n\nAnd, just as important as the slow steady rush to arousal, was the easing down from an orgasm that I know had shaken her to the core. I had felt it and tasted it and heard it - and I knew she was going to be sensitive for a little bit. I eased back, kissing everything but her throbbing pussy with tenderness and love. \n\n\"Oh, my God, Jake. That was...\"\n\n\"Was what?\" I smiled.\n\nShe just smiled in response and leaned down to kiss me on the lips. I knew that she'd be tasting herself on my mouth and face, but that just seemed to add to the kiss.\n\n\"Can you taste yourself?\" I queried as we broke our kiss. She smiled.\n\n\"Mmhmm,\" was all she said. She looked at me soulfully as I gently stroked her legs and torso. \"You've raised the bar,\" she whispered.\n\n\"Good,\" I replied, as I sat up, then got on my knees to her right side. \"Now just relax and let me touch you,\" I instructed. She was still on her back, legs slightly spread, as my hands washed over her body. I grazed her skin with my fingertips. Her body was so lovely to look at and touch. Her alabaster skin was smooth as silk and I could feel her react to my light touch. \n\nAfter spending a few minutes with both hands going up and down and in different directions, I centered in on her thighs and tummy. Her soft moans let me know that I was headed, once again, in the right direction. I loved how her mound protruded and her lips were still slightly parted from her first orgasm. As my left hand turned and slid slowly down her belly, my right hand slid up her parted thighs. \n\n\"I'm going to touch you, Chloe,\" I whispered, stating the obvious. \n\n\"Mmmmm. Good,\" was all she replied. With my left hand facing down and my right facing up, I arrived at the juncture. My left middle finger slid over her mound and engaged with her clit as my right middle finger found her moist lips and slid gently inside. I watched her face, her eyes closed, as I began to finger her pussy with two hands. \n\nAs my left finger rubbed her slippery little clit in tight circles, my right slipped in up to the first joint and began to wiggle. As I saw her respond, I intensified my movements and depth. My left finger fluttered over her little nubbin of nerves and my right finger slid all the way into her tight wet canal. I tested a few movements on her, trying to gauge what she was responding to the most. \n\nAs I felt her body relax to the moment, but tense to the stimulation, I found a steady groove and watched her intently as I fingered her sweet pussy. Her eyes were closed and there was no mistaking the wet sound of fingers in a woman's sex. I got into a steady rhythm - fluttering her clit as my other finger gently massaged the upper walls of her vagina. Her erratic breathing, bucking hips and constant moans let me know that I was chasing down yet another orgasm. \n\nI didn't let up as I urged her to cum for me. I exhorted her with a soft voice. She had responded earlier to the spoken word; I had a feeling she was one who liked to hear a little dirty talk. I told her what I was doing, where I was touching her and that I wanted her to cum for me - again. I know she heard me, but her entire being was wrapped up in the sensations my fingers were creating and I could tell that she was closing in on another climax.\n\n\"Cum for me, Chloe. Cum on my fingers, baby. Let it go,\" I encouraged.\n\nIt didn't take much for number two to rip through her slender pale body. Her hips bucked and her legs shook intensely as another orgasm rolled through her torso. Once again, I slowed my assault and eased up and away from her tender pussy. I was looking at her as she opened her eyes and came back to reality.\n\n\"Mmm, Jake. You're amazing, baby. So incredible.\" As she looked up at me with a satiated smile, I casually put my right middle finger into my mouth and sucked it. \n\n\"You taste so good, Chloe. So sweet.\" She smiled and rolled toward me. She reached out and cradled my softened cock in her hand. \n\n\"Hmm. We need to do something about this,\" she stated. I was now game. I laid back on the pillows and we moved around so she was between my legs, kneeling. I could tell that she wanted to suck and I knew I'd be hard again in no time. She took a hair band from around her wrist and tied up her hair. She smiled - a smile that said, 'You're gonna want to see this.'\n\nTruth is, I wanted to fuck her. I wanted to be deep inside her. But I wanted her to get me rock hard again - then we could discuss next steps. She began to suck with an earnestness that was born of having just had two very nice orgasms. It was a 'thank you' suck and she pulled out all the stops. I loved how she whimpered softly and made the wettest noises as she brought me back in moments to full erection. Her mouth felt like liquid silk stroking the upper ranges of my shaft as one hand echoed her mouth and moved up and down in unison. Her other hand gently cupped my balls and squeezed so delicately.\n\n\"Oh, Chloe. Damn, girl,\" was about all I could muster in the way of conversation at that moment. \n\n\"Mmm, I love that you shave your balls, Jake,\" was how she responded. And with that, as she held my raging erection aloft with one hand, just lightly stroking, she dove low and used the other hand to feed my balls into her mouth. Her tongue swirled and it felt so fucking warm and wonderful. \n\n\"Oh, fuck, Chloe. Yes!!\" Her tongue was everywhere, lashing my scrotum with languid licks. And just as quickly as she had descended, she came back up to look me straight in the eye. She smiled and jerked my cock a few times and then engulfed it with a deep dive and a choking cough. She pulled away and a long string of saliva spanned in a catenary arch between her lips and the head of my quivering cock. I groaned in appreciation as she returned to sucking me as if her life depended on it.\n\nThe image will always be with me - my sexy little innocent intern with my thick cock in her mouth, her lips wrapped around my girth. She was working me good too, and it was obvious she was prepared for me to explode in my mouth. I lifted my hips much as she had lifted hers, encouraging her to take me deeper. \n\nBut, before she took me beyond the point of no return, I reached down and lifted her head up. \n\n\"I want to be inside you, Chloe. Please,\" I said.\n\n\"Do you have a condom?\" she asked, a bit worried that this might be a problem.\n\n\"Chloe, I had a vasectomy many years ago, baby. No worries.\"\n\nShe smiled at the news and crawled up the bed, straddling me as she reached my side. She reached down between her legs and gathered my heavy erection in her hand, guiding me to her entrance.\n\n\"Fuck me, Chloe. Fuck my cock,\" I added boldly. I wasn't sure how she might respond to such a statement, but I got my answer a few seconds later. She looked me in the eye as she rubbed the bulbous head of my dick along the dripping slit of her pussy. I heard her catch her breath and hiss as she rubbed it against her clit. \n\nThen, as we both held our breath, I felt the tip of my cock sink into the crevice of her entrance. She let go, put both hands on my chest and slowly and carefully lowered herself onto my raging erection. I reached up to cup her precious little tits in my hand as she slowly and carefully descended on rock hard dick. \n\nHer eyes were closed as she worked her pussy down, inch by glorious inch. I gazed down at her slender little body as she went a little deeper every few downward strokes. I could feel myself sinking in and as I reached that point where I was almost in, she began to move with a little more authority. ",
        "She was so incredibly tight for me, but also very well lubricated by this point. As her body finally crashed down against mine and my hard cock was completely sheathed in her pale flesh, she began to rock. I mean, she began to fuck me. Suddenly my young intern with the sweet innocent face and girl-next-door demeanor was fucking me like there was no tomorrow. Again and again she slammed her body down on mine, impaling herself on my enormous shaft. With each descent she let out an \"oomph\" and pretty soon there was a steady stream of exhalations with each descent down my length. I grabbed her hips and ass, feeling her rise up high, only to slam down again with increasing intensity.\n\n\"Yes, Chloe!\" I screamed. \"Fuck me, girl! Do it!\"\n\nShe didn't need any encouragement. She was in a zone unto herself. She was on top and fucking her ex-boss with a vengeance. Her small tits were bobbling like crazy and her eyes were closed in concentration. It felt so good I could feel an orgasm beginning to well up deep in my core. I wasn't ready to cum yet, so I told her to slow down so we could make this moment last. I knew she wanted to cum - again - and I'd oblige. But I also wanted to relish this moment. \n\nShe sat up, my cock entirely inside her, and looked down at me with that angelic smile of hers. She looked like she might be just having a casual conversation at work - except now my cock was stuffed deep inside her depths. She began to rock her hips, back and forth, a move I've always loved. She could slow down, but she couldn't stop moving. Her natural sexual instincts took over and she put her hands over her head and began a more measured, but none less desperate, attempt to make me cum inside her. I would, but not just yet. Fuck, she looked so damn sexy riding me. \n\n\"Slow, Chloe. I want to cum deep inside you, baby. But not yet,\" I exhorted. Chloe leaned down and whispered in my ear. \n\n\"Then turn me over and fuck me, Jake. Fuck me hard,\" she seethed. That was an offer I could not, and would not, refuse.\n\nWith one quick motion I flipped her onto her back as she giggled with delight. She was emboldened n\n\n\"Yeah, Jake. Give me that cock, baby. Fuck me!\" she clambered. \"Fuck me deep!\"\n\nI grabbed her two slender ankles and bent her legs back over her shoulders. I knew she was a flexible little thing and I wanted her exposed to me. Fuck, her pussy and asshole were right there for my taking. She seemed to have no qualms about being totally and utterly opened to me. I leaned down and licked the length of her pink juicy sex - all the way from her tight little puckered anus to the distended furl of lips barely encasing her clit. \n\nI looked at her dark lustful eyes as I returned to her asshole and poked it with a pointed tongue. \n\n\"You're a dirty old man,\" she said, with an evil accepting smile.\n\n\"Why, yes I am,\" I agreed, before returning to her dark puckered hole. \n\nI placed my hands on the back sides of her thighs, framing her gaping sex, and just buried my face in her pussy and devoured her. I moaned as I licked and added a lot of saliva to an already juicy mix. Her pussy was so fucking wet and dripping down her ass crack and painting her inner thighs with a sheen of creamy girl cum. I mouthed her pussy with an open mouth, then moaned loudly as my tongue probed her depths. She groaned my name as I tongue-fucked her in earnest. \n\nAnd then, just as she was getting into my rhythm again, I stopped. As she looked up at me expectantly, I knew my face shone with her essence. I quickly guided my cockhead to her pussy, and with little fanfare and just a couple of preliminary strokes, I plunged into her depths with my full weight. \n\n\"Oomph! Fuck!!\" she screamed. \"Yesss!\" \n\nShe needed to be taken. She wanted to be taken. And I was going to give her the deep hard fuck of a lifetime. I'm sure her boyfriend gave it to her good. But I was determined to give it to her better. And I already knew one thing. We'd start in missionary, but we were going end in a very deep doggy.\n\nI continued to hold her legs up in a vee and knelt upright as I began to slowly thrust away. I loved the view of my length disappearing inside her, then withdrawing, only to plunge home once again. She was watching too as we copulated. She was still so tight, yet my cock sunk into her snug little hole with absolutely no resistance. I rubbed her clit with my thumb as I continued to fuck her, slowly increasing my rhythm. \n\nThen, abruptly, I abandoned all pretense, let go of her legs, reached around to grasp a tight little cheek in each hand and began to bottom out in her over and over and over again. Both of us were making incoherent sounds. It was no longer English; it was just the sounds of lust and completely uninhibited sex. I buried my face in her neck as I pounded her with every ounce of strength I had. For such a tender young thing, she was giving it back to me as good as she was getting it.\n\n\"Oomph! Oomph! Oomph! Oomph!\" she responded, with each deep pounding thrust.\n\nShe exhorted me to go faster, deeper, harder. She was not messing around, and neither was I. She was edging toward orgasm again - we both were, in fact - so I withdrew all of a sudden, leaned down to kiss her, and told her to turn over. She did so quickly and obediently. \n\n\"Mmmm, you want me this way?\" she asked, with a sexy lilt in her sweet young voice.\n\n\"Yes, I do,\" was all I said as I positioned her just so. Her head was on the bed as I straddled her legs. I lifted her hips so her cute little ass was pushed up into the air. I ran my hands up and down her exquisite body.\n\n\"So beautiful, Chloe. You really are something, you know.\" She moaned and pushed her ass a little further up into the air.\n\n\"Fuck,\" was all I could say at that moment. I spanked her ass lightly, wondering how she might respond. She moaned and hissed. I slapped her other cute little cheek and watched it jiggle tightly. She gasped. Her skin was so pale and luminescent; I knew I'd leave handprints if I continued. That might be a direction to explore another day. But right now, I needed to be inside this sweet young girl and she wanted me there.\n\nI spread her cute bubblicious cheeks with one hand and guided by cockhead toward her pussy with the other. I rubbed it up and down her slit, even teased her asshole a little with the bulbous head, then tucked it down low until I felt her open up and pull me in. \n\nI slipped in nicely, but it was very snug. I took my time easing back into her tight little cunt. She arched her back to accommodate me as I watched with relish as my stiff cock slowly slid back inside this amazing young lady. Never in my wildest dreams had I thought this is what I'd be doing on this post jury evening in Burlington. I figured I'd be watching Sports Center before drifting off to sleep right about now. Instead I was fucking a beautiful young college girl. \n\nOh, was she tight. But with patience I slipped in a little deeper with each thrust until I was firmly and completely sheathed in her warm pussy. I grabbed a pillow and pushed it underneath her hips, pushing her tight little butt further up into the air. I couldn't believe the shape of her exquisite curves from every angle. I adjusted my knees, held on to her waist, and began to fuck. \n\nI was so deep and she was so tight, but the lubrication was plenty to keep me gliding in and out, back and forth. I gathered momentum and could tell from her vocal exhortations that she was loving this. I built up a head of steam and an overwhelming need to explode that had been escalating all night and was finally reaching a tipping point. \n\nChloe was groaning loudly and grasping the sheets as I fucked her. I tried pulling her hair, grabbing her neck, and even inserted a thumb in her tight little butthole for a few minutes. She was on fire and wanting more - and while I was giving her all I had, I also felt an orgasm beginning to burble in my depths. \n\n\"Fuck, Jake. Yes! More - don't stop! Don't fucking stop!\" she screamed as I pounded her in lazy dog. \n\nI bent forward and thrust, over and over again. And, as I did so, I reached around and underneath and found her clit with my right hand. And that is what pushed us both over the edge. As I fucked and fingered her clit and she arched her back and grunted with each plunging thrust, I felt an orgasm building with each pounding second.\n\n\"I'm gonna cum, Jake, I'm gonna...\" Her moans were muffled in the pillows and sheets surrounding her head. \n\nShe was clutching the sheets in both hands as I felt my own climax erupting with a vengeance. \n\n\"Mmmm. Me too, Chloe! Me...\"\n\nAnd with that sound of smacking bodies and animalistic grunts echoing in the staid college town hotel room, our bodies were wracked with simultaneous orgasms that left us both panting, spasming, and sweating like swine. \n\nI collapsed on her back and then rolled off, grabbing her as I turned. I pulled her to me and spooned her still shaking form from behind. I heard her whimper softly as aftershocks riddled her slender young body. Slowly, we both began to come down from the high plateau of great sex. I nuzzled her neck from behind and cupped her breast.\n\n\"Chloe,\" I whispered. \"Chloe.\"\n\nIt was a few minutes before either of us could speak again. Our breathing returned to normal and she giggled and turned to look at me, palming the side of my face.\n\n\"Wow,\" she exclaimed. \"Just...wow.\"\n\n\"You ain't so bad yourself, young lady.\"\n\n\"So that's what it's supposed to be like?\"\n\n\"Hey, I only made one half of the equation. You were incredible, Chloe. It takes two.\"\n\n\"Well, you've raised the bar, Mister, I must say. I realize I'm missing out on a few things that I don't want to be missing out on,\" she claimed.\n\n\"Hmm. I thought that might happen when you answered a few of my questions before we started. But, listen. You are both going to learn some things in this hiatus and you'll both be able to bring back new ideas back to your sex life.\"\n\n\"I never knew I could cum like that. Fuck!\" she said before giggling with embarrassment in the way she was talking.\n\n\"Well, now you know. I will say this, in all seriousness. Ken is a very, very lucky man and I hope he is ultimately worthy of your love. I think he will be, but you will need to be forceful in letting him know what you want, what you need, what you deserve.\n\n\"No question about it,\" she said, turning to look at me. She palmed my cheek and leaned up for a kiss. It was a tender kiss, almost like the first time out in the parking lot only a few hours earlier. \n\n\"Now, what else can you teach me?\"\n\n\"How long you got?\" I asked. \n\nShe smiled, turned her body to me and wrapped her slender thigh over my naked body. \n\n\"All night.\" She leaned in for another kiss, the passion already beginning to grow again. \"And then some,\" she whispered."
    ],
    "authorname": "gapster7",
    "tags": [
        "older/younger",
        "intern",
        "boss/intern",
        "older",
        "burlington",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/my-night-with-chloe"
}