{
    "title": "Little Packages Ch. 12",
    "pages": [
        "Thank you to everyone for their patience for this latest chapter, and for those who dropped a kind word to make sure I was ok in these pandemic times. I am, life just got very hectic. I hope you enjoy it and that it was worth the wait.\n\n-----\n\n(Kitten, approximately five months since Chapter 11. Wedding Day)\n\n\"I'm too young to die, Meg,\" I said, feeling like I was about to pass out.\n\nMeg gave an exasperated sigh. She'd been putting up with a lot of melodrama from me in the last 24 hours....everyone had. This was just the latest chapter in it. However, this time, I really did feel like I was about to die.\n\nI was in Meg's hotel with the morning light coming in through the balcony. The room was old, but everything in Venice was old. However, it was well kept, classic, and I fell in love with it the first time I saw it. I was in her room with the balcony door open and there was a fan spinning overhead but no air conditioning of any kind. Most of the buildings in Venice didn't have any sort of AC. Daddy warned me that while getting married in Venice would be memorable and romantic, the downsides would be the massive crowds, the heat, and the humidity.\n\n\"Venice used to be a swamp, Kitten,\" he told me. \"The swamp has spent the last millennia trying to reclaim it. Which means you better be ready for 150% humidity.\"\n\nI laughed, thinking there was my Daddy being silly and exaggerating things. I've lived in Southern Ontario in the summer for the last couple of years. I could handle some heat and humidity.\n\nWrong. So very, very, very wrong. I thought the two months in Prague had prepared me for insane heat and humidity, but Venice was otherworldly. The heat was pushing towards 40 C. It felt like moving through soup. My corset seemed like a good idea in the design stage, but now it felt like it might kill me. And, oh yeah, I was getting married. To my Daddy. Forever.\n\nWhen you're 22, thinking about 30 seems like forever. Thinking about being with someone for the rest of your life... well, realizing what that meant hit me a little late in the proceedings.\n\nI flopped on the bed, the dress spreading out around me and tried to remember to breathe. I ran my fingers across the pearl choker that Daddy had sent over as a 'surprise' wedding gift this morning. The note said it would be a more appropriate collar than my usual heart lock chain on our wedding day.\n\n\"Such a good Daddy,\" I thought to myself and managed to breathe a little easier.\n\nMeg sat next to me and looked a little more sympathetic to my situation. Perhaps looking like I might pass out will do that. Or maybe she was enjoying watching me suffer as some small payback for all the teasing and mocking I'd inflicted on her the last couple of years.\n\n\"You should drink something,\" she said.\n\n\"I'm in a wedding dress. You know what a pain in the ass it is to go to the bathroom to pee in this thing,\" I said. \n\n\"Who said anything about water?\" she said, opening her small handbag to reveal a small flask. Since Daddy and I got together, we hadn't had anything alcoholic. Originally it was to support Daddy after losing his wife to a drunk driver, but it evolved. I drank too much as a teen and was scared of what might happen if I started again. So Daddy told me he didn't think his little girl should drink; it wasn't appropriate. And that's all it took to make it stick.\n\nWhen I tell people, they think it's nuts, but it has been easy. I'd been relieved to have an excuse to stop. Even the non-stop drinking on the movie set had been easy to handle. But for the first time in almost three years, I was deeply tempted. Still, it wouldn't do to have Daddy taste booze on my breath for our first kiss as husband and wife, so I shook my head.\n\n\"Your loss,\" Meg said and took a quick sip. \"I got bombed during my second wedding. Which probably explains why things didn't work out. But I maintain that being drunk is the only sane way to get through one of these things.\"\n\nI laughed, which centered me a bit more. This wasn't a panic attack, but just an above-average freakout. I bet most brides have them. Today, I just happened to be the bride in question.\n\n'Bride.' Me. I am a bride. Oh, holy fuck.\n\nMeg must have seen me swing back from calming down to freaking out again.\n\n\"You're going to be fine, Kitten,\" she said. I glanced at her. She rarely called me anything other than Kit. Well, there were other words, but she usually stuck to Kit. Hearing her say Kitten worked at easing the anxiety.\n\n\"I don't feel ok.\"\n\n\"You're a nauseatingly beautiful bride, and you're about to marry one of the few decent men I've known in my life. Which you are never to tell him. Plus, the two of you are perfect for each other, which I will never repeat outside of this room,\" she said, reaching out to rest her hand on mine. I looked over at her. \"So yeah, you're ok.\"\n\nI took some more deep breaths and, for some reason, Dory from \"Finding Nemo\" started talking in my head and said, \"Just keep swimming,\" which made me giggle. Ok, now I felt better. I walked over to the massive, weathered mirror along the room wall. Yeah, ok, even I had to admit this worked, and I looked good. Maybe even sexy for a bride. One more deep breath, and then I stood up a little straighter. Meg came up behind me and adjusted my cat ears tiara with a smirk on her face.\n\n\"You ready now?\"\n\nI nodded. She held out her arm and I looped mine into it. We started walking towards the door.\n\n\"Well, let's go. We've got a gondola to catch. Time for you to get chained down for the rest of your life,\" she said. I glanced up at her with a horrified look. She was smirking. \n\n\"I would cheerfully murder you right now, but it would get blood on this gorgeous dress,\" I snarled at her.\n\n\"There's my girl. You're all feisty and pissed off. Now you're in the perfect mindset to get married,\" she said.\n\nI shook my head and laughed. \n\n\"Ok, let's go do this,\" I said. One last deep breath as we headed downstairs.\n\nHere we go.\n\n***\n\n(late April, three months earlier)\n\nI did it. I survived and graduated from LaSalle despite the best efforts of the professors and everything else going on this year to drive me insane. It had been a near thing. I wanted to call Daddy more than once to tell him I was dropping out and coming to live with him. I'd just be barefoot and pregnant all the time.\n\nI didn't, though. I toughed it out. I was a big girl when I needed to be. And when I walked out of the last exam, Daddy was outside with flowers. I ran over to him and jumped into his arms. It's probably why he was leaning against a light pole while waiting for me; he knew my reaction.\n\n\"I haven't graduated yet,\" I said into his shirt. \"I might not have passed.\"\n\n\"Oh, please. After all of the work you've done, if you don't graduate we'll just come back and burn the place down,\" he said. I giggled.\n\nAt this point, I'd essentially moved out of my flat in Montreal. Kris had moved out without a word after our confrontation about Daddy in March. I didn't hear anything from her for days and was about to do the unfathomable and reach out to people I knew in Saskatchewan to see if they knew anything when one of my classmates said they saw her working at a bar on Crescent Street. It got back to me that she was couch surfing with some of her co-workers until she could find a new place.\n\nShe never bothered to tell me. Never reached out, so I wouldn't worry. I spent a few days not knowing how to process it until Daddy pointed out the obvious.\n\n\"She's a grown-ass woman, Kitten,\" he said. \"It doesn't sound like she's losing sleep about her choices. Why should you?\"\n\nI'm marrying such a wise Daddy.\n\nAnyway, once I put Kris out of my mind, I focused on my final projects and exams. Yeah, it sucked and it was hard. I asked Daddy if I could just move to his place in Kingston for the last few weeks as I was going nuts in Montreal. He agreed, but I had to swear up and down that it was so I could study. Other than making meals for me so that I ate and letting me sleep in the same bed, he wouldn't agree to anything else so I wouldn't get distracted.\n\nThere were times when I wanted some release, but any time I even vaguely hinted at it, he pointed at my box filled with vibrators and other toys. His sole concession was promising that he would \"make it worth my while\" when I finished my last exam. \n\nSo after finishing that last exam and having Daddy meet me at the school with flowers and looking good enough to eat, I was fully prepared to find an alley near the school to drag him into and have my way with him. Or rather, let him have his way with me. Instead, he sadistically insisted on taking the train back to Kingston. It meant having to wait nearly three hours to get him alone.\n\nI thought I might die on that train ride, especially since Daddy kept teasing me. The train wasn't too crowded, so he ran his hands up and down my legs. When I turned to complain that he was being mean, he looked me in the eye and then ran his thumb along my jawline, then traced my lips. Between the mental exertion of the exam and now this, I could feel my brain melting away. It felt amazing.\n\nNaturally, that's when my phone made a noise. A particular noise I couldn't ignore. My eyes deglazed, and I shook my head a few times. It wasn't fair. I was finally starting to get into a good headspace, and now this. Daddy leaned over and kissed my head.\n\n\"We'll have weeks to play, Kitten,\" he said. \"It's ok.\"\n\n\"I know, but I want to play now,\" I sighed \u2014 such a whiny brat. I focused and looked at the phone. It was a message from Susan asking if I had a moment to Zoom. Relying on the stability of Via Rail's wifi for a Zoom call was pushing it, but I said we could try.\n\n\"So, how'd it go?\" she said.\n\n\"I think I pulled it off,\" I said. And I did. Now that I had some distance from the last exam, yeah, of course, I passed. But when you're in the middle of it all and panicking, it's easy to think you're doomed. But unless I'd missed something or something catastrophic happened, I'd passed. My professors were worried about missing so much time earlier but said I'd bounced back nicely. So yeah, I passed. I graduated from fashion design school. Wow.\n\n\"It just hit you that you passed, didn't it?\" she said, smiling. I nodded. \"Well, congratulations. I'm proud of you for sticking it out, Kit.\"\n\nI blushed. \"Thanks, Susan.\"\n\nIt was cool she was calling to congratulate me. I knew she was a busy woman. Then her face got serious, and I knew it wasn't just a social call.\n\n\"So listen, good news/bad news stuff. The movie production is going ahead, but the start date is bumped back a few weeks. One of the stars is now not available until June 1. It's annoying, but it happens. On the upside, you have a few more weeks to decompress after exams. But I'm not sure if it will mess up your wedding date.\"\n\nI glanced at Daddy. He didn't exactly look happy, but I could tell he was doing some mental calculations. He'd been handling a lot of the preliminary wedding planning. Getting married in Venice wasn't quite as simple as 'Hi, we're here. We want to get married.' He worked with an Italian wedding planning company to help with the paperwork and bookings.\n\nI held the phone back a bit so Susan could see him. She waved at him and he smiled.\n\n\"I'll be honest, it'll be a bit of a nuisance, but the company I've been working with said how smoothly this was all falling into place. So I feel like making them work a little harder. I was going to start booking plane tickets this weekend, so your timing is good.\"\n\nTwo other things dawned on me, although I would only say one of them aloud.\n\n\"This means I can go to my convocation! I thought I would have to miss it because I was in Prague. So that's good,\" I said.\n\n\"Ok. Excellent! I was worried you might back out because of the delay. I'm glad this works, Kit. I have another couple of options for you this fall. Anyway, I'll let you two go and celebrate. I'll touch base with you again in a few weeks, Kit. Enjoy the break.\"\n\nI said thanks and waved bye at her. Then I turned towards Daddy and gave him a predatory look. He looked concerned.\n\n\"You understand that you're mine for the next month, right Daddy? I expect to be fucked silly daily. I plan on wearing any kind of normal clothes under extreme protest. If I'm not pregnant by the time I go to Europe, it won't be for lack of trying,\" I said in a low purr.\n\nHe laughed.\n\n\"I said I'd take care of you. I might have bitten off more than I can chew,\" he said.\n\nI got off my seat and on his lap. A couple of rows down, an older lady gave me a disapproving look. I was almost entirely immune to them by now. Instead, I wrapped my arms around Daddy's neck and kissed him.\n\n\"You have bitten off more than you can chew, Daddy,\" I said once we broke for air. \"But I look forward to you biting me and doing other things to me all month long.\"\n\n***\n\nExcept for the unwelcome return of my period a few days after getting home, I kept my word. The super nice thing about getting the shot was the lack of periods. When it came back with a vengeance, Daddy had to do some extra daddying those few days.\n\nBut other than that, I was naked and prancing around our house. Or I was wearing some of the slutty lingerie I bought from Rachelle and trying to seduce him. Or on warm days dragging him outside so we could fuck somewhere on our property.\n\nBut the special occasion was when I figured out I was ovulating. God bless technology and phone apps for letting me know when that would be. As if I didn't know already. Since I came off the shot, I was getting extra horny at a specific time of the month. I knew the odds of getting pregnant so quickly were slim; it had only been a few months and things were still getting back to normal.\n\nBut this was my last chance before going to Europe and not seeing him for two months. So clearly, measures were required to ensure we took full advantage of the window.\n\nI kept most of the lingerie and costumes in my work area. Daddy never ventured in there, and I liked to surprise him when I dressed up. I had a particular outfit that I'd been saving for the right occasion; A two-piece black lace bra and thong set that hid virtually nothing. I also put on my black lace collar that had a little bell.\n\nA gold chain went around my waist and chains that connected that to my panties, bra, and collar. I did my make-up and added some whiskers for effect. I put my kitten ears on and fluffed up my hair. Then I put on my black lace pull-up stockings. \n\nJust one last thing. I opened up the box that contained my new tail. The other one was brightly coloured and getting a little ratty. This one matched my outfit perfectly. It was long, black, sleek, and the plug was a little bigger. I grabbed some lube, got my ass ready and slowly pushed the tail in, wincing slightly. I reminded myself that it might be uncomfortable now, but it would be amazing later.\n\nI posed in the front of the mirror, moving back and forth, and did a quick spin to make sure I looked good from behind. It was missing something when I realized I needed my lace gloves. I slid them on up to my elbows. I didn't bother with heels; it's not like I would be on my feet long. \n\nNow I looked perfect.\n\nWas it a bit much? Probably. But I wanted it to be too much. I wanted Daddy to see me and lose his mind. If I didn't get pregnant in this outfit, it wouldn't be for lack of trying.\n\nI walked out of the room and down the hall, holding the bell around my neck in my hands to make sure it stayed quiet. The last time I saw Daddy, he was reading with the fire going in the living room. It was a gray, chilly day with fog coming in off the lake. I had been frustrated this morning because I was in the mood to fuck outside. But I thought my Plan B looked pretty damn good.\n\nI peeked around the corner and he hadn't moved. I grinned and then dropped to my hands and knees. I moved into the living room, giving my hips a little back and forth. The bell around my neck made a quiet noise, but I knew he heard it. From a quick flicker in his eyes, I could tell he'd seen and heard me, but he was playing hard to get.\n\nI slowly moved towards him, giving him plenty of time to pretend he wasn't looking at me. When I got near his feet, and he still didn't acknowledge me, I butted my head against his leg.\n\n\"Oh hello, Kitten. I didn't see you there,\" he said. I'm not sure what noise cats make when they're frustrated and know their owner is a liar, but I tried to make that noise. He chuckled.\n\n\"Daddy's very busy right now, Kitten. I'm not sure I have time to play with you,\" he said, and then reached down with one hand and scratched my head behind my cat ears.\n\nHe was reading a Batman graphic novel that I knew he had read - conservatively - at least a half dozen times since we started dating. So my Daddy was a big fat liar. So what would a cat do in these circumstances? Not take no for an answer. I \"jumped\" up and then proceeded to curl up in his lap, disrupting his ability to read.\n\nHe huffed but put the graphic novel down. Then he ran his fingers through my hair and down my back. I made appreciative little purring noises. It wasn't just for show; having his hands run along my body was amping me up nicely, and I was already revving before I ever stepped into the living room.\n\nJudging by what I was feeling pressing into me, he was doing a poor job of acting disinterested.\n\nA dramatic sigh. \"What am I going to do with you, Kitten? You're so disobedient and never listen to me.\"\n\nI looked up at him and made my eyes bigger, willing him into doing what I wanted. I knew the big eyes thing was a particular weakness of his. I try not to use it for evil, but how evil could it be if it got me knocked up?\n\n\"Maybe I should start squirting you with water when you're disobedient,\" he said, looking out the window in \"deep\" thought so he couldn't see the disgusted look on my face. I butted my head against his chest instead. When he looked at me, I renewed my disgusted look, and he barely managed to avoid laughing.\n\nI slid back off his lap a bit and began rubbing my face against the crotch of the pajamas he was wearing. It was the middle of the afternoon, and we weren't going anywhere, so why not? Although he was overdressed for what I wanted. I put my teeth on the drawstring of the pajamas and gave them a playful tug, undoing the loose knot.\n\n\"Bad Kitty,\" he said, but more of a groan this time. I was wearing him down. His hands moved across my body again, stopping on my ass. He reached for my tail and began stroking it, which had the benefit of shifting it around in my ass. I made a noise that was halfway between a purr and a moan.\n\nI cheated a bit using my \"paws\" and lifted his t-shirt. I was then able to rub my face against his stomach and give him little licks and kisses, focussing around the waistband of his pajamas, hoping he'd take the hint,\n\nHe did. With a groan, he lifted his ass, then took his other hand and pulled down his pants. I smiled at the small victory and shifted my attention downward from his stomach to the lovely hard cock right there. I rubbed my face against it, making a purring noise.\n\n\"Christ, Kitten,\" he said, and I knew I had won. No more of this \"oh, what am I going to do with you\" silliness. I knew what I wanted, and I knew just how to get it from him. I ran my tongue along the shaft of his cock, mixed in with some playful licks.\n\nDaddy continued to play with the plug but wasn't going near my pussy, which I wanted. But considering I had to work to get this far, I could be a little patient. I glanced up at him while licking, and he gave me a very hungry look. I paused and grinned at him.\n\n\"Meow, Daddy,\" I said, then slid his cock into my mouth.\n\nI dimly heard him mutter 'Christ,' but I was a little focused on the tasty, hard cock in my mouth. This wasn't going to be a power suck; I wanted him hard and frustrated so that when we moved along to what we both wanted, I was going to get it hard and fast.",
        "At least sucking on his cock had the additional benefit of Daddy leaving my tail alone and sliding his fingers down to contact my pussy. I was soaked before I changed into lingerie, but feeling his fingers brush against my clit shot fireworks through my brain. Not enough to make me cum, but suddenly my brain turned to sludge. Daddy's cock was suddenly the only important thing in the world.\n\nWe went like that for, I dunno....minutes? Hours. Me sucking and licking. Daddy sliding his fingers around my clit. But neither one of us let the other get too close to cumming. The problem is that Daddy has much better willpower than I do. Eventually, the teasing of my clit became too much, and I popped my mouth off Daddy's cock.\n\n\"Meow?\" I managed to say, barely keeping in character. I wanted to say, \"fuck me hard and breed me.\" I'm not sure that 'meow' adequately conveyed that, but I could hope.\n\n\"Do you need something, Kitten?\" he asked, running his free hand through my hair. I briefly had the urge to bat his face with my hand. Instead, I slid off his lap and got on the rug in front of the fire. I put my face down and lifted my hips. Then I gave them a little wiggle. Just in case there was any doubt about what I was after.\n\nHe stood up from his chair, kicked off his pyjamas, and took off his shirt. I looked at him with glazed eyes. I needed him, and I needed to be fucked. It was like coming off that birth control shot jump-started my horniness.\n\nDaddy threw a pillow down for his knee, got behind me and pulled the thong aside and moved my tail onto my back. I fully expected him to tease me a little more. Instead, he gave me what I needed and slammed his cock into me in one hard thrust.\n\n\"Oh fuck!\" I screamed, arching my back and cumming immediately. God, that had never happened before. When I could focus a little more, I could hear the bell around my neck ringing out and the chains on my lingerie rustling as they moved back and forth. I could also feel that Daddy hadn't slowed down. He was still slamming his cock into my pussy. No gentle fuck today, I managed to think briefly. Then I began pushing my hips back towards him, his cock managing to find that extra little bit more depth when he buried into me.\n\n\"This is what you wanted, isn't it, Kitten?\" he growled as he kept pounding me. He shifted his hands from my hips, grabbed my hair and pulled me back. Then he bit my neck... hard.\n\n\"Oh fuck me, Daddy! Keep pounding your little kitty,\" I cried out, feeling my brain short-circuiting again and cumming. I spasmed against his body, which he was holding against him. He stopped fucking me for a moment, letting me cum, while he slid his hands across my body, sliding under my lacy bra and pinching my nipples, causing my orgasm to keep going.\n\nFinally, I caught my breath and could focus again. One of his hands found its way around my throat, and I gasped. He began to slowly move his cock again, and I could focus enough to weakly pulse the muscles in my pussy. It wasn't much, but I could hear the low growling noise in his throat.\n\n\"Kitten, I'm going to put you back on your hands and knees, and I'm going to pound you as hard as I can. Do you understand?\" he said.\n\n\"Yes, Daddy,\" I whispered.\n\n\"And when I cum, I will bury my cock in you as deep as possible to make sure I get you pregnant,\" he said.\n\nIt was a miracle I didn't cum again right then and there. Instead, I dropped back down onto my hands and knees, his cock still hard in me, then I turned and looked at him.\n\n\"Breed your Kitten, Daddy,\" I whispered.\n\nTime blurred again. The only sounds were Daddy panting as he fucked me hard, me crying out, and the sound of our bodies coming together. I dimly wondered where his willpower was coming from. But then I stopped caring. I came again, and this time it didn't stop. The orgasm just kept rolling and rolling. My legs were about to give out when Daddy sank his hands into my ass to keep me up.\n\n\"Oh God, Daddy. You've got to breed me! Now! Oh, fucking cum in your Kitten and breed me!\" I screamed.\n\nDaddy roared, pushed his fat cock into me so far he lifted me off my knees and came. I could feel it. God, I could practically taste it. I screamed again and things blurred into an orgasmic haze.\n\nI had no idea how long I floated like that. Long enough that Daddy slid his cock out of me, and I was now on my back. He put a pillow on my hips, keeping them elevated so that none of his cum could slide out. Dimly I thought to myself, \"Good Daddy.\" We talked about this when we fully committed to getting pregnant.\n\n\"Welcome back, little girl,\" he said. \"Still flying a bit?\"\n\nI focused on what he was saying and then made myself nod. He smiled at me, then reached down, moved some hair from my forehead, and placed a gentle kiss there.\n\n\"Your Daddy's right here. I've got you. Nothing's going to hurt you. You just enjoy the ride and let me know when you're coming down,\" he said.\n\n\"Love you,\" I mouthed to him.\n\n\"Love you too, Kitten,\" he said.\n\n****\n\nNot every day was like that, of course. Although when I was ovulating, I was a lot more demanding of his cock. When we came out the other side, he needed a few days to recover. I also realized there were only a few weeks left before I convocated. Two days after that, I departed for Prague.\n\nI started to mope a bit. Or maybe a lot. I did want to go to Prague. I was excited to go to Europe for the first time and working on a movie set would be exciting. But the whole being barefoot and pregnant with my Daddy was very appealing to me right now. I knew it wasn't going to be like it was the last couple of weeks all the time. And honestly, it would probably get boring after a bit. \n\nBut wandering around naked, getting fucked constantly and having Daddy tend to all my needs? Oh yeah, it was appealing.\n\nAfter a few days of this, Daddy declared he'd had enough, and we needed to do something to \"get the stink of the house off of us.\" I was still a pouty brat, but I couldn't argue with him too much. Besides, it was the May long weekend, the weather turned beautiful again, and there were a bunch of spring fairs and events happening in the area. \n\nDaddy put on shorts and a t-shirt. I sighed, hoping he might dress a little nicer, but he didn't take the hint. I'm incapable of going out in public with him without dressing up a bit. I wanted to give him something to look at. And for others to know that he was a lucky man.\n\nI brought out an old favorite, a green sundress with flowers. Since I bought it, I'd made some adjustments to it, so it was shorter and flared more. I may have also adjusted the bust to give me more cleavage. It was sunny, so I brought out a wide-brimmed hat. The last thing I wanted was sunburn before traveling.\n\nIt was a lovely morning. We agreed to a compromise on the music, alternating our playlists every hour. We hit some craft fairs, and he bought me some earrings and bracelets, which I didn't need, but he thought they would look pretty on me, which is all it took.\n\nI ended up buying him a nice locally made shirt. It was green, and it looked good on him. He immediately put it on, which was an improvement over the old X-Men t-shirt he was wearing.\n\nEventually, I indicated that food now would be good so that I didn't consider cannibalism. We headed to one of our favorite places outside Kingston with a lake view. I was smiling and laughing at something Daddy had said. Which meant I wasn't paying attention when a familiar, giant redhead appeared in front of me.\n\n\"Hi, Kitten,\" Michelle said.\n\nI was in shock for a moment. Despite all the time I spent at Daddy's house and that they only lived 20 minutes away, I hadn't seen either her or Ahmed since the comic con when I got engaged. I wasn't avoiding her; it was just one of those things. Also, it had been a busy last couple of years. I honestly hadn't thought much about the two of them, and when I did, it was mostly with sadness.\n\nI loved the two of them. I was sad we weren't friends anymore because of everything they did for me when things were still new between Daddy and me. But they were also the ones who messed things up. Still, they both were waiting to be seated at the same restaurant we were going to.\n\n\"Hi Michelle. Ahmed. You're both looking good,\" I said, which was true. They were always a beautiful couple. They both looked a little older, but it had been two years. Michelle's hair was shorter and Ahmed's looked a little thinner. She also looked a little...sadder.\n\nWe both stood a little awkward for a moment. Daddy mostly had calmed down from his anger with the both of them. Ahmed worked to build bridges almost immediately; that's just who he was. No, the real thing was how Michelle and I behaved, right here, right now.\n\nThen I had a thought; what the hell...\n\n\"We were just going for some lunch. Want to join us?\" I asked.\n\nAhmed's face looked hopeful, while Michelle looked initially surprised, then she smiled.\n\n\"Yeah, we'd like that.\"\n\nAnd just like that, we mended things. We sat down and it was a great lunch. Michelle grabbed my hand and made appropriate noises over the ring. Daddy and Ahmed chatted about local politics, which was boring, but whatever. It made them happy. Michelle and Ahmed were still doing cosplay, but hadn't made much progress.\n\n\"You were right when you said it would be a hard thing to break into,\" Ahmed said. \"So many people on Etsy want something cheap. Professional cosplayers normally make their own high-end costumes. We still do some, but we're focusing mostly on what pays the bills.\"\n\nI missed cosplaying. I hadn't done it much in the last year because school and life got in the way. Daddy mentioned going back to New York in the fall, but it would depend on how work was going.\n\nAfter the meals, Michelle shot me a look. We excused ourselves and headed to the bathroom. Once we were in there and there was no one else around, she hugged me. I'd forgotten what Michelle hugs were like. Aside from the massive height difference, she was stronger than me, so my toes barely touched the ground when we hugged.\n\nEventually, realizing that I might be struggling to breathe, she dropped me back to the ground. I giggled. I had missed Michelle's hugs.\n\n\"Seriously, we're ok? You were pretty angry with me and....I wasn't the best friend to you back then. I've been talking to someone....professionally, to help deal with some of my issues,\" she said.\n\n\"Yeah, I mean, I was immature and overreacting to things. Everything was so new for Daddy and I, so the very hint of anyone trying to interfere with us, well, you get the idea,\" I said. She nodded.\n\n\"Plus...I had a friend I tried to, well, rescue. Brought her out to Montreal from Saskatchewan, and if the friendship wasn't dead before, it certainly seems over now. We've just changed so much that we have nothing in common anymore.\n\n\"But until things got, well, stupid?\" I asked Michelle, wondering if that was the right word. She nodded again. \"Stupid with us; you were great. You were like a big sister that I never had. I miss that. So yeah, maybe we can try again?\"\n\nIt wasn't an old-school Kitten ramble, but it was close. But I don't think I realized how much I missed Michelle until now. Judging by the look on her face, she missed me too.\n\n\"I'm honestly trying hard not to hug you again because I think crushing you to death is a bad way to renew a friendship,\" she said. I laughed. \"But yeah, I like the idea of trying again.\"\n\nI gave her a hug, which was less likely to result in death. We headed back to the table, and I think both Daddy and Ahmed looked relieved that we were exiting the bathroom laughing and smiling. Bridges mended. After my failure with Kris, it felt terrific. Maybe things would get messed up with Michelle in the future, but I think we'd be smarter and more careful.\n\nWe went back to the table and talked more about our wedding, and Michelle expressed her jealousy about it taking place in Venice. \n\n\"I still haven't been to Europe. I'd love to go one day, but who knows when we'll get the chance,\" she said.\n\nThat's when I had a brainstorm.\n\n\"Daddy, do we have a photographer yet?\" I asked. It felt ridiculous that Daddy was doing so much planning for the wedding, but he was working with the planner in Venice and ran everything past me first to make sure I was okay with it. He shook his head. I glanced at Ahmed and Michelle.\n\n\"So, are you busy in August? We seem to have an opening for our wedding photographer,\" I said.\n\nIt was an insane offer. We had just renewed our friendship. I hadn't run any of this past Daddy yet to see what he thought. Given their popularity, they had to be booked in August when we needed them. Plus, there was the whole matter of payment.\n\nI expected some polite \"well, we're busy that week\" and \"Kitten, we might need to talk about that first\" comments. Instead, Ahmed and Michelle opened their phones and began looking at dates. There was muttering between them. Michelle said she didn't like the bride anyway, and they could pass that one off on someone else.\n\nDaddy shook his head and took another bite of his cheesecake.\n\n\"Never stop surprising me, Kitten,\" he said.\n\n\"Can we make this work? I'm sorry I didn't talk to you first about this, but...\"\n\nHe leaned over and kissed me on the head.\n\n\"We'll make it work,\" he said. \"I...probably overreacted back then. So yeah, we'll figure out a way to make it work.\"\n\nAfter Ahmed and Michelle finished chatting, they said they would have to juggle a few things, but they could clear some time to shoot our wedding. I was over the moon. Ahmed and Daddy promised to get together and hash out the details.\n\nAs we walked out of the restaurant, Michelle took my hand and squeezed. We slowed down as the men kept walking forward.\n\n\"Thanks for this,\" she said. \"Really. It means a lot that you trust us with this. And getting to spend some time not in Kingston for the summer is also amazing.\"\n\n\"I'm not sure you should. Daddy warned me that Italy in August makes hell seem cool and refreshing,\" I said.\n\n\"We'll make it work. Maybe a carefully planned beach day or something,\" she said. Then she glanced to make sure the men weren't in earshot. \"By the way, one of the things I've been doing recently is boudoir photos of the bride-to-be. A little gift for the husband. Let me know if you're interested.\"\n\nI felt my pussy get damp. Despite my exhibitionist streak, I'd always been shy about getting photographed. Daddy wasn't a great photographer. And I was weird about being photographed. When I was cosplaying, sure, I loved it. I was in character and it was fun. Naked or wearing lingerie? I froze up. This was weird given my exhibitionist streak, but I knew girls growing up who sent nudes to guys, and it was a horror show for them. I dodged a few close calls when I was younger, making me very careful.\n\nBut for my husband? I could probably take the risk.\n\n\"I'll think about it, but yeah, that sounds like it could be fun,\" I said.\n\nMichelle hugged me and ran off to catch up with her husband. This had been a pretty shitty year so far; maybe things were finally changing for the better.\n\n***\n\nI was still thinking about that a few weeks later as I got ready to go to my convocation. I was still sad leaving my Daddy for the next two months, but I had a month of mind-blowing sex and my period was late, so maybe I was pregnant. I was finally leaving school behind and getting ready to go on an European adventure.\n\nSo yeah, maybe the year has turned around. It might also explain why I felt horny as I got ready for the convocation ceremony. We'd come into Montreal and got a hotel room for a couple of nights. The day after convocation, I was on my way to Prague.\n\nBut as for tonight....\n\nI looked at my graduation robe and hat hanging on the back of the bathroom door. I posed in front of the mirror again in my little black dress, stockings and 4-inch heels. Combined with my heart lock collar and glasses. I looked good. Professional. Like an adult.\n\nBut I knew several male and female classmates were going naked or just in underwear under their robes. It was a warm evening, and it felt like their last opportunity to be immature. I shimmied the dress down my body and had it pool around my heels. I looked in the mirror again. Black lace push-up bra, French-cut panties, garter and stockings. Better.\n\nI reached over and put on my robe. It came down to my knees, and you couldn't see any cleavage up top. It wasn't transparent when I was backlit. The only way you knew I was only wearing lingerie underneath is If I decided to flash someone. I grinned. It was impossible to resist. Although I knew I needed one more thing to complete the outfit.\n\nI picked up the dress off the floor and opened the door. Daddy was sitting in a chair, looking at his phone. He managed to resist looking at his watch. We still had 30 minutes until we had to be there and it was a 10-minute walk\u2014plenty of time.\n\n\"Can you put this in my purse?\" I asked Daddy. He took the dress and put it in my TARDIS bag that he would hold for me while I walked across the stage.\n\n\"Should I ask?\" he said, raising an eyebrow.\n\nI grabbed the hem of my robe and slowly lifted it until he could see the top of my garters. Then I turned around, raised it above my hips, and wiggled my ass at him before dropping it again. I could hear him make both a sigh and growl simultaneously.\n\n\"It will be torture watching you walk across the stage knowing what you're not wearing under that robe,\" he said.\n\n\"So why torture yourself, Daddy?\" I said. I walked over to the hotel room window, lifted the robe, and did a little shimmy with my hips, trying to lure him over. The one last thing my outfit needed? Daddy's cum in my pussy as I walked across the stage.\n\nI heard Daddy stand up and look in the reflection of the glass. He walked over and clicked off the light, making it harder for people outside to see into the room. Of course, we were on the 30th floor, so I wasn't too worried about that. Then I heard his cane start to tap the floor as it got closer to me.\n\nI closed my eyes and the next thing I felt was his hands running along my ass, which made me moan.\n\n\"What kind of slut wants to be walking across the stage with her Daddy's cum dripping out of her pussy?\" he said.\n\nI could feel my knees buckle with those words.\n\n\"Your slut, Daddy. Your bratty little girl needs your cum in her when she struts across the stage. I'll have a big smile feeling it inside me,\" I said.\n\n\"Oh, well, if you're looking for a unique sensation for walking across the stage...\"\n\nAnd suddenly, I realized maybe I misjudged things. But before I could say anything, his left hand pressed against the back of my neck, pinning me to the window, and the right one landed squarely on my right ass cheek, the sound echoing in the quiet of the room.\n\n\"Owwww! Daddy!\" I whined.\n\n\"Let's give you a nice red ass to keep you distracted when sitting on those hard, little metal seats,\" he said, slapping my other cheek.\n\n\"No Daddy!\" I whined, trying to squirm out of his grip. He wasn't having any part of it and tightened his grip on my neck, reminding me who was in charge. He then spent the next few minutes smacking my ass. It stung and I knew my ass must be cherry red by now.\n\nThen he moved my legs further apart using his cane and slid his fingers across my pussy. Unsurprisingly I was soaking wet.\n\n\"I guess it wasn't that torturous for me to paddle you your ass, little girl,\" he said, running his fingers across my clit and then sliding two fingers into my pussy. I stopped squirming against his grip and lowered my head.\n\n\"Please, Daddy. Please. I need your cock, Daddy. I need you fuck me,\" I pleaded.\n\n\"Oh, it's about what you need, is it?\" he asked, and I realized I had made another mistake. So with his fingers inside my pussy, he gave my ass a few more swats. Cock or not, I could feel my orgasm starting to build. I began pushing my ass back against him; even though it made his slaps harder, I could push his fingers further inside me. I could feel it building and building...",
        "Then an alarm went off somewhere in the room. Unbelievably, Daddy pulled his fingers out of my pussy and took a few steps back. In a daze, I looked back at him.\n\n\"Time to go, Kitten. We'll be late.\"\n\n\"What?\" I managed to get out,\n\nHe stepped back forward and pulled my robe back down over my hips. I groaned, not enjoying the feel of the cheap material against my ass. He made me stand up straight, which was not easy given the heels and rocketing hormones. He slowly walked me towards the door, picking up his phone and my bag along the way. I was still in a daze but realized something terrible was happening.\n\n\"I had a hunch you might be late or try to distract me before going to convocation. I thought setting the alarm would be a solid precaution,\" he said as the door closed behind us.\n\nI finally focussed enough as we walked down the hall towards the elevator. Instead of leaving his cum in me for convocation, I realized he would leave me a hot, squirming mess instead. I was going to have a sore ass and my body was screaming at me to cum.\n\n\"This sucks, Daddy. This is the worst convocation gift ever,\" I pouted.\n\n\"Well, I thought the other day about how much you used to love edging and not being allowed to cum. So I felt a bit nostalgic and thought it would be fun to leave you like this,\" he said. I shot him a murderous look which he pretended not to notice.\n\nConvocation was torturous. At one point, a classmate sitting next to me asked if I was ok because I was flushed and had been squirming ever since the ceremony started. It hurt to sit and my pussy throbbed. When I stood to walk across the stage to get my degree, I glanced back and was surprised there wasn't a wet spot on the chair.\n\nStill, when I got my degree, I looked into the audience and saw my Daddy there. He was beaming with joy and taking pictures. I remembered why I loved the man so much and not that I wanted to fuck and kill him, preferably in that order. But once the ceremony was over I could drag him back to the hotel, or a nearby alley and get taken care of.\n\nThat's when Daddy dropped another surprise on me. I could only get one pass for convocation, so it was obvious who I would take. But outside the hall, as everyone was posing for pictures, Meg, Soo, and Gillian all came rushing up to give me hugs and congratulate me.\n\nIt was great to see them, but now I had further delays. I kept glancing over at Daddy, but he deliberately did not make eye contact. Which meant something else was up.\n\n\"You ok, Kit? You look like you got ants in your pants and you're giving Ben looks that would make hell freeze,\" Meg said after watching me fidget for the 100th time.\n\n\"I'm fine,\" I said in a voice that indicated that I was far from that. \"Just tired. I'll be fine when I get back to the hotel.\"\n\n\"Hotel? Didn't Ben tell you we were taking you out for supper? My treat, so feel free to run up the bill,\" she said.\n\nMy knees buckled. I was going to have to wait hours for relief. He knew it, too. I looked at him again and caught his eye this time. I shot daggers at him. He smiled and shrugged his shoulders with an 'It's out of my hands' look. Fucking him and killing him were drawing closer to a tie.\n\n\"Ok, seriously, what's going on? You looked like you were going to murder him. Is everything ok?\" Meg asked, with some concern in her voice.\n\nI sighed and took some comfort in probably making Meg uncomfortable by telling her the truth.\n\n\"I tried to seduce him before convocation. He turned the tables on me, so now I am fully wound up with no relief in sight,\" I said.\n\n\"Oh, that bastard,\" she said. It was the first time I'd seen her look annoyed with Ben in ages. She moved to go and tell him off, when I touched her arm.\n\n\"No Meg, it's ok. Well, no, it's not 100% ok. I feel like a stiff breeze up this robe will set me off, but I'll manage. Part of me....likes feeling like this,\" I said. \n\nI could see she was fighting not to roll her eyes.\n\n\"Exactly how many kinks do you have, Kit?\" Meg asked.\n\nI dunno,\" I said, shrugging my shoulders. I have quite a few, but I was young, so I was sure there was plenty of time to find more. \"If it's any condolence, he's probably not likely to survive the evening once we get home.\"\n\nMeg nodded as if that was fair.\n\nI changed into my dress and put on my best smile. I deliberately walked with Gillian and Soo a few feet ahead of him and Meg. Two could play at the torture game so I put some extra motion in my hips and maybe did a little flip of the edge of my skirt from time to time.\n\nMy pussy settled down to a dull throb during supper, so I was able to enjoy the food and my friends' company. Soo was particularly energetic. Her Tik Tok following was going through the roof, which made her happy. Gillian was delighted whenever her girlfriend was happy. And they were both thrilled that they were going to Italy.\n\n\"Are you sure you're ok with this, Ben?\" Soo asked for the 100th time. \"We're doing better financially, so we could probably pay our way.\"\n\nDaddy smiled and shook his head. \"I'll fly you there and back and take care of your room in Venice. If you want to stay longer and explore more of Italy, that's on your dime. But we want you there,\" he said.\n\nThe urge to murder him diminished when I remembered how much he was doing for our wedding. He was covering Soo and Gillian's trip over. He wasn't talking about it, but I think he was paying well above the market rate for Ahmed and Michelle to come to Italy and take our photos. It was going to be a small wedding. I would have been ok if it was just the two of us. But I loved that he wanted people who were important to me to attend and didn't mind spending money to make it happen.\n\n\"Well, they're my friends as well. Hopefully, you won't be getting married again for many, many decades, Kitten,\" he told me when I asked if he was sure he wanted to spend all this money on my friends. \"So this is fine.\"\n\nSo yeah, maybe I'll just fuck him unconscious later rather than to death.\n\nThis supper did give me one unexpected bonus. I got to freak out Gillian now rather than when we were in Italy.\n\n\"There is one thing the two of you could do for us,\" I said.\n\n\"Of course. Anything,\" Gillian said.\n\nI flashed her my best evil grin. \"I do need a maid of honor.\"\n\nGillian's jaw dropped and Soo made some noise that confused every dog within two blocks.\n\n\"Oh my God, does that mean she has to wear a dress?!\" Soo asked.\n\n\"Well, it is tradition,\" I said. \"It'll be fun, Gillian. We can all go dress shopping in Italy. It should only take a day or two to find the right one.\"\n\nGillian kept looking paler and paler. I figured between the two of us, Soo and I could torture her for months on the notion of wearing a dress. However, both Daddy and Meg were shooting me disapproving looks. I sighed.\n\n\"You don't have to wear one if you don't want to,\" I said. Gillian looked like she'd received a death row pardon; Soo looked like I just murdered her new puppy. \"I just want you there with me when I get married. We'll figure out the clothing.\"\n\n\"Ok. I'd love to. Thanks, Kitten,\" she said. Soo kept chattering at her that she should wear a dress. I imagine Gillian wouldn't hear the end of it for months. I almost felt bad for her.\n\nI did enjoy supper. I felt a little melancholy when I remembered it would be months before I saw my friends again. Daddy called it a night around midnight, sensing I might be coming down. I got lots of hugs and required promises to message all of them to let me know how Prague was once things settled down.\n\nAs we walked back to the hotel, I looped my arm around Daddy's and burrowed into him. It was late, but the weather was still mild.\n\n\"This is the sucky part about graduating and getting older,\" I said. \"Leaving behind people I love.\"\n\nDaddy leaned down and kissed my head.\n\n\"It's not forever, Kitten. You'll see them again in a few months in Italy. And then you're back home in Kingston. It's all a matter of putting the work into the friendship. Not that I think there's any chance of you drifting apart. Soo simply won't allow it.\"\n\nI laughed. \"True.\" Then I looked up at him. \"This is starting to get real, Daddy. And a bit scary.\"\n\nHe paused for a moment and looked at me. Four-inch heels or not, Daddy still had over six inches of height on me. He looked so damn good, with a trim black suit, his hair and beard were almost gray, but his eyes looked younger. I must be insane to leave this man behind.\n\n\"A little scary is not a bad thing, and we both know you've dealt with scarier. We'll chat all the time and the next time you see me we'll be getting married. I promise, the two months will fly,\" he said.\n\n\"Ok,\" I said, nodding. He was right. I could do this, but there was just one more thing.\n\n\"Of course, you'll need to fuck me silly a few more times before I go. To hold me over,\" I said.\n\n\"I can manage that, but it's going to depend on how quickly you can move in those heels so we can get back to the hotel,\" he said.\n\nWe were back in our hotel in seven minutes. I let my dress slip off in the elevator to ensure he got the message. It would be mighty embarrassing if cameras were in here or if someone got on, but I was beyond caring. However, I deliberately didn't let him touch me. I had to wait this long, so did he.\n\nI got off the elevator and walked in front of him down the hall towards our room. I put some extra sway into my hips. I didn't need to glance behind to know if he was there or the look on his face.\n\nMiraculously, no one saw my little strut, but it did succeed in getting my pussy soaked again. I got to the door and saw him closing the distance between us. He had the familiar hungry look on his face, and I took some comfort that if I've been wet and horny all evening, he was likely hard and had some frustrations to work out.\n\nPerfect.\n\nI gave him a little pose as he tapped the card key on the lock and a sweet smile. Once the door opened, he didn't even give me the chance to walk inside. Instead, he scooped me up and tossed me over his shoulder. I squealed in shock. The cane sometimes deceived me; I never forgot that he worked out and was in good shape. But that he could adjust and toss me around like a rag doll was always a pleasant, pussy soaking surprise.\n\nHe carried me in and dumped me on the bed on my back. He made quick work of his suit, while I made short work of my bra and pushed my panties to the side. I ran my fingers over my clit, closed my eyes, and groaned. I liked giving Daddy a show, but I was so fucking horny that if he didn't fuck me soon....\n\nSuddenly I felt my hand pulled away. I opened my eyes and saw Daddy crawling on the bed between my legs. I held them up high for him. Then he placed his cock at the opening of my pussy. Oh fucking finally. Finally,\n\n\"KItten,\" Daddy said with a hoarse voice.\n\n\"Oh God, Daddy. Please. No talking, only fucking.\"\n\nHe grabbed my legs. I humped my hips upwards, trying to get his cock into me.\n\n\"I took a pill during supper, Kitten. I'm going to be hard for a long time. You're in for a very long night,\" he said.\n\nMy eyes got big. \"Oh G...\"\n\nThen he slammed his cock into me, burying it in me in one swift, hard move. \n\n\"Oh fuck!\" I screamed.\n\nDaddy was merciless with me. I became dimly aware of how time was processing because he kept fucking and using me. He pinned my knees next to my ears and slammed into me hard. I couldn't do much more than grunt and groan, not finding the will or brainpower to make coherent noise. I shuddered and came.\n\nAfter that, he flipped me over on my hands and knees and was a little more gentle. He grabbed my hair, pulled me back and told me I was a brat and deserved to be treated like a whore for teasing him all night. I babbled that I was Daddy's little whore and fucktoy, and he should use me hard. He slammed into me and gave my ass a few more slaps. It was tender from earlier in the evening, but his cock pounding away at me and the sting sent me over the edge again.\n\nI collapsed on the bed and felt about 30 IQ points stupider. I dimly felt the bed shift and he lay on the bed next to me. I looked up at him with glassy eyes but managed to smile. I noticed he positioned himself on the bed so that his cock was right by my mouth. I needed a few minutes to recover, but I could keep him happy until I got my strength back. I took his cock in my hands and moved my mouth towards it.\n\nGod, his cock was soaking. How wet did I get while he was fucking me? I must have squirted a bit and didn't even realize it. I wasn't in the headspace to deepthroat him and I don't think he wanted it either. This was some playing and teasing while I recovered for the next round.\n\nI wrapped my lips around the head and ran my tongue across it. There was no scientific proof that Daddy's cock got harder when he took a pill, but it felt like it. He didn't need the pills 90% of the time, but there was something to be said about fucking him when he took one. He was rougher, his cock was thicker, and it took longer for him to cum. Win, win, win.\n\nI kept moving my mouth and lips around his cock, focusing on the head. I didn't want him to cum in my mouth, but I didn't know how much more I could take right now, so getting him close would be good. Besides, I could feel myself slipping into one of my dumb little girl states. Edging me all evening, then fucking my brains out and making me nurse and suck his cock. I was trancing out.\n\nHe could tell.\n\n\"Are you Daddy's silly little slut now, Kitten?\" he asked.\n\nI giggled and paused in my licking. \"Uh-huh. Allllll I need is Daddy's cock and I'm a happy, happy little slut.\"\n\n\"And where does my little dolly need my cock?\" he said, running his hands through my hair and gently grabbing a handful. I knew break time was over.\n\n\"Wherever Daddy wants to put his cock. I'm just a silly little fucktoy. I do whatever my Daddy tells me,\" I said. I blinked slowly to make myself look dumber, but it wasn't much of an act.\n\n\"Hop on my cock, little girl. Bounce on me until I cum in your soaking wet cunt,\" he growled,\n\nI nodded my head and quickly shifted to get on him. I noticed the heels were in the way and fumbled them off while Daddy looked on impatiently. Finally, I positioned myself over his hips. I planted my feet on the bed on either side of his hips. I then slowly lowered my pussy until I made contact with his cock. Usually, I would tease and do a little shimmy to get him frustrated. But I saw the look on his face. Teasing isn't what he wanted now. I dropped my hips and his cock slid into my pussy.\n\n\"Oh God, your cock feels so good,\" I said, almost sobbing, as I buried him in me. He was so deep, and hard and hot and fuck; I loved him so much.\n\nBut now wasn't the time for thinking about how much I loved him. Now was the time to make my Daddy cum. I placed my hands on his chest to give myself extra leverage and began bouncing on his cock as hard as possible.\n\n\"Oh fuck, Daddy. Your cock is so far up in me. Oh God, I love your big, hard cock,\" I cried out as I bounced on him. He played with my breasts, careful not to pull or pinch my nipples. If he did I would cum almost instantly and then probably pass out.\n\n\"Am I a good little girl, Daddy?\" I asked, raising my voice a few octaves.\n\n\"Yes, you are, Kitten,\" he said, and I could tell from his voice that I was wearing him down. I took my hands off his chest and ran them through my hair. I was giving him the full porn star.\n\n\"Well then, can you give your good little girl your cum, Daddy?\" I asked sweetly. \"I, like, really, really need your cum.\"\n\nHis hands shifted closer to my nipples. I gasped. He began pushing his hips upwards when I fell on his cock. I didn't think it could go any deeper, but he was finding new depths.\n\n\"And why does my slutty little girl need her Daddy's cum?\" he asked. \n\nI grinned. \"So my big strong Daddy can fill me up and then knock me up. So I can carry his baby.\"\n\nHis hips arched up and his face flushed. He was almost there. I slammed down hard one last time and leaned in close.\n\n\"So my Daddy can breed his little girl,\" I whispered.\n\n\"Fuck!\" he cried out and I could feel him cum in me. And somehow, he gave my nipples a tweak at that same time. Seconds later, I was twitching on top of him, my orgasm overtaking me.\n\nWe stayed like that for an indeterminate amount of time. Daddy was trying to catch his breath; I was trying to recall how the English language worked. Finally, I rolled off of him and lay on the bed.\n\n\"If you want to do Round 2 right now, just take me after I pass out. I won't mind. Promise,\" I managed to get out.\n\nHe laughed. \"Doesn't sound like much fun. How about in the morning?\"\n\nI gave him a thumbs up.\n\nWe lay there like that. I didn't even curl into him because we were so sweaty. Finally, I got out of bed to take off the rest of the lingerie and get cleaned up a bit. When I came back 10 minutes later, Daddy was barely awake. I smiled and snuggled into him. \n\n\"I'm late,\" I said quietly. I wasn't sure Daddy would hear me, but he shifted and looked down at me.\n\n\"Have you taken a test yet?\"\n\nI shook my head. \"I was going to wait until I got to Prague. Just to be sure.\"\n\nHe nodded. \"Don't get your hopes up too high yet, Kitten. The doctor said it would take months.\"\n\n\"I won't,\" I said, and then I heard him gently snore. I smiled and touched my stomach. I had to be pregnant after all the fucking we did this month. Had to be.\n\n***\n\nSomewhere over the Atlantic, my period started.\n\nI really, really don't recommend the experience.\n\nI was a physical and emotional mess. Missing my Daddy and friends, freaking out about the new job and going to an actual foreign country - America doesn't count - meant I was already a fully primed emotional explosion waiting for the right spark to go off. The period did the trick.\n\nThank god for the flight attendants. They took care of me, helped me get cleaned up and, as I was crying and freaking out, moved me to an unoccupied row in the back of the plane to get myself together. I managed to babble out something about everything that was going on. The attendant watching me at that moment, Jackie was her name, held my hand and told me it would be ok.\n\n\"Dear, you'll be ok. I know a lot is going on right now, but most of it is good. Trust me; I don't do this job for the pay. New experiences are good, and you're working on a movie set. It'll be fantastic.\n\nI wish I could say she was right. That Prague was amazing. My period on the plane ride was the low point, the movie shoot was amazing, and I learned so much.\n\nI'd be lying, sadly.\n\nPrague was a mess. It was broiling hot, a sociopath directed the movie, and my coworkers were all party girls, baffled that I had no interest in getting hammered every night, let alone getting married so young. It wasn't every day that I thought about calling Susan and telling her I was quitting, quickly followed by calling Daddy and asking for a plane ticket home. Once I got back home, I would settle into a life of being barefoot and pregnant.\n\nNot every day. Probably every second day.\n\nEvery time I came close, I asked myself if I was giving up so soon after spending so much time, money and work. That usually calmed me down enough to get through another day.\n\nFinally, the movie wrapped. And on that last day, Daddy was waiting at the dorm where I'd been living the last two months. I was so happy to see him I cried. I jumped into his arms, knocking him back into the wall.\n\n\"I missed you too, Kitten,\" he said, laughing. I'd tried to keep the worst of it from him, but he knew it had been rough. God, I felt like I was going to shatter. And I knew I could because he would put me back together.\n\n\"Do you have a place?\" I asked. He nodded. I told him to give me two minutes. I ran into my room, grabbed my packed bags, and headed out. I didn't say goodbye to anyone. It's not like I would ever see any of them again.",
        "The next night we were on the night train to Venice. Daddy thought it would be romantic, but sex in the train's tiny sleeper cabin was more awkward and funny than erotic. I also had to be quiet, so we didn't get complaints. But I was still so busy soaking him up I couldn't even complain that much.\n\nAfter making me cum a bunch, I curled up next to him in the tiny bed.\n\n\"So we're going to be married in a few days,\" I said, running my fingers through his chest hair.\n\n\"You're running out of time to bail, Kitten,\" he said, trying to make a joke. I thumped him gently on his chest.\n\n\"Seeing you again and knowing we would be getting married less than a week later was the only thing keeping me sane during that ridiculous movie shoot,\" I said. \"Although I feel bad not being as involved as I should be.\"\n\n\"Don't worry about it, Kitten,\" he said, stroking my hair. And just like that, I did stop worrying about it. He was my Daddy and I was his Kitten. \n\n\"So what happens when we get to Venice?\" I asked. I was still hazy on the plans for the next few days.\n\n\"Well, our friends and dad will be arriving when we get there. We're all getting together for supper tomorrow night,\" he said. \"We're not all hanging out together all the time, but you have to go shopping with Gillian and Soo for wedding clothes...\"\n\n\"Moo hoo ha ha,\" I said, cackling like a supervillain. I told Gillian she didn't have to wear a dress; I didn't say anything about not torturing her with clothes shopping.\n\n\"I have also wrangled, under great protest, an evening out with Meg and her lovely...companions,\" Daddy said.\n\n\"Ooooooh!\" I squealed. It was loud enough to earn a thump on the cabin wall, making me blush and giggle - at a much quieter volume. I was dying to finally meet Meg's fuck buddies. Watching her squirm all evening was the best wedding gift I could get. \n\n\"We also have one last-minute addition. Your boss, Susan, asked if she could attend. I didn't think you would mind. I think she wants to apologize for Prague.\"\n\n\"Well, it was awful, but she doesn't need to do that. It's weird she's coming here for my wedding,\" I said.\n\n\"Ah, she said not to freak out. She was coming to Italy on vacation with her daughter anyway and asked if she could crash.\"\n\n\"Well, it's not like we've invited hundreds of people. It'll be fine,\" I said.\n\n\"That's my good girl,\" he said, kissing my head. Once again, the endorphins of praise from my Daddy washed over me. Three years and his praise never once got old. I rubbed my face against his naked, hairy chest and purred.\n\n***\n\nI was looking forward to dinner and seeing everyone, even if Daddy warned me not to get too excited by the food. Tourists jam most of the restaurants in Venice, and the food is overpriced and mediocre by Italian standards. Still, Daddy managed to find a place for us all to meet that was away from the hordes and had some privacy. And if the food was substandard, it was better than anything I had in months.\n\nAlong with good food, there's nothing like being surrounded by people who love you and have missed you the last two months to get you in the right mood. After a lot of laughter and giving people the debrief on the Prague mess, I made the rounds and spoke to everyone individually.\n\nSoo did her best to try and squeeze me to death as she was over the moon about getting to see Venice \"for real,\" and even Gillian's jetlag and cynical veneer couldn't hide the fact that she was having fun. Although her face took a turn for the worse when I said we should go shopping for her maid of honor apparel the next day. Soo quickly agreed for her before she had a chance to come up with excuses.\n\n\"Kit, I'm not comfortable being some dress-up doll,\" Gillian said. \"Soo has made me relax a bit...\"\n\n\"A lot,\" she interrupted.\n\n\"But it's not like I'm comfortable parading around in a pink bridesmaid dress or anything,\" she said.\n\nI looked at Soo, and even she had to admit our teasing had probably gone too far. I took Gillian by the hand and smiled at her.\n\n\"I promise you there is no pink anything in your future. We will find something kickass and comfortable for you that you'll love and can wear again, all right?\" I asked.\n\nShe nodded and finally gave me the slightly bitchy smile I knew and loved.\n\n\"Yeah, all right. Thanks Kit,\" she said. I hugged her again and moved along the table.\n\nMichelle and Ahmed looked relaxed. I don't think I ever realized how tightly wound they both looked all the time. Running your own business, especially wedding photography, will do a number on your chill. When I mentioned that to Michelle, she laughed.\n\n\"Honestly, Kit, it's the first vacation we've had in so long, I feel like I'm about 20 pounds lighter,\" she said, taking another large sip of wine. She and Ahmed had been doing serious damage to bottles of wine all evening.\n\n\"Um, but you're here shooting my wedding. That's working,\" I said, puzzled.\n\n\"Oh honey, shooting you and being here is far from work,\" Michelle said. Then she leaned over and whispered, \"are you still interested in some boudoir photos?\"\n\nLord knows I'd packed enough lingerie and was likely to buy more when I went shopping with Gillian and Soo. I also recalled a conversation on the film set when one of the actresses talked about how she didn't have a problem with nude scenes.\n\n\"I'm only going to be this young and hot for so long. Why not have photos remembering what it was like,\" she said.\n\nNot that I thought I was over-the-hill at 22, but why not? If I couldn't trust Michelle....\n\n\"Ok, I said. \"What the hell. Today's Monday and I'm getting married on Thursday. So when....\"\n\n\"Early Wednesday morning,\" she said. \"The temperature won't be insane, and our room's morning light is spectacular. I'll kick Ahmed out and get some wedding photos and some...naughtier pictures. Sound good?\"\n\n\"Yup,\" I said, wondering if I'd lost my mind. The next few days were getting nuts. Daddy and I were trying to cram in some sightseeing; I had shopping with Soo and Gillian, photos with Michelle, an evening out with Meg and her partners...\n\nMeg had shown up without them, although I learned their names - Sophie and Jean-Paul. I was about to give her shit about it when she held her hand to delay the barrage she knew was coming.\n\n\"They had a prior engagement on Lido for this evening. Besides, this was a supper for friends and celebrating you and Ben. Bringing the people I'm fucking felt tacky and a distracting,\" she said.\n\n\"I prefer to think of it as providing this evening's entertainment,\" I said, giving her a bratty look. She gave me the finger in reply, which was increasingly her response to me when she couldn't, or wouldn't, reply.\n\n\"You'll meet them tomorrow night. Be happy enough with that,\" she said. And I guess I would have to be. After chatting with her for a few more minutes and trying to get an idea of what she would wear, I went back to Daddy, speaking with his father. They were smiling, but it had a sad look. I knew why.\n\n\"Ah good, someone to stop us from being morose all evening,\" Mike said.\n\nI knew that Daddy had been talking to his father several times a week since the funeral, checking in to make sure his dad was going ok. Mike had friends who were keeping him busy. Although he'd officially retired from work, he was doing a bunch of volunteering. Mike had even been on a few dates, although nothing had come of them. I still thought it was progress.\n\n\"I wish Helen could be here too,\" I said, hugging him,\n\n\"Well, she grew to dislike plane travel as she got older. A flight with some awful turbulence gave her nightmares,\" he said. \"I think you would have faced considerable pressure to get married in Vancouver if she were still here. And I've always wanted to see some of Italy.\"\n\n\"Are you doing ok? I feel bad with all the wedding things going on and that we're not taking care of you more,\" I said. Gillian and Soo had each other and Meg had her fuckbudies. Michelle and Ahmed were together. But Mike was traveling alone.\n\n\"I'm fine, Kit,\" he said. \"Venice is a marvelous place to wander around and see things. I'm enjoying my time here. And there's no shortage of people who will just come up and start talking. You're a bride-to-be. You worry about the hundred other things brides have to worry about, and don't worry about me.\"\n\nI hugged him again. I knew he and Daddy had their rough moments over the years, but he was only ever a sweetheart to me. It was a long trip and I was glad he made it.\n\n***\n\nThe next day was the day of reckoning for Gillian. To my surprise, Meg tagged along. I figured she'd be off spending time with Sophie and Jean-Paul, but she opted to join us.\n\n\"They were out partying last night and didn't get home until late,\" she said, sounding pissed. \"So I'm not waiting for them to drag their asses out of bed. I've got a city to see, so why not tag along with you guys?\"\n\nThey were cranky starting out, each for their own reasons, but Gillian and Meg managed to cheer up as the day progressed. Soo had a list of stores she'd researched and wanted to try. Of course, having the list and finding the store was something else entirely. The best directions in the world matter little in Venice, where one wrong turn will send you hopelessly off course.\n\nStill, we found some fun stores, and while three of us managed to buy some things, we still hadn't located the elusive outfit for Gillian.\n\n\"I told you I was lost cause,\" she said, slightly gloomy.\n\nAnd that's when whatever force exists in the universe that looks out for desperate brides and fashion-challenged lesbians stepped up. We were looking for a place that Soo swore was nearby when we saw a small boutique flying a little pride flag. We all looked at each other and then went inside. A woman a couple of years older than three of us with a blonde streak through her black hair greeted us in Italian. When we responded in our atrocious Italian, she laughed.\n\n\"English is fine,\" she said, with a hint of an accent. \"How can I help?\"\n\n\"We have a desperate bride looking for something for her equally desperate bridesmaid,\" Meg said.\n\n\"Congratulations! When are you getting married?\" the clerk said. Except she said it to Soo and Gillian.\n\n\"Yes, when are we getting married?\" Soo said to Gillian, who turned red. She was teasing, but it dawned on me that I could be attending their wedding one day, and Gillian could make me wear something horrific like a plaid bridesmaid dress. Something to keep in mind in our shopping.\n\n\"Sorry, but they're not getting married,\" I said, waving and bailing Gillian out before saying something she'd regret. \"That would be me. Plain ol' boring heterosexual bride. But I have a lovely gay maid of honor struggling to find something to wear.\"\n\nThe clerk laughed and turned to Gillian. \"So, what do you feel comfortable in?\"\n\n\"Plaid. God, so much plaid,\" Soo said. \n\n\"It's comfortable and keeps me warm in Montreal,\" she replied.\n\n\"Unfortunately, I think something warm is the last thing you want in Venice, but I think it gives me something to start with,\" she said. Then she looked back at me. \"Do you have a picture of your dress?\"\n\nI nodded, took out my phone, and found some pictures of my dress after a few seconds. I handed the phone to her. She spent a minute looking at the pictures, flipping back and forth, then zooming in. She nodded and handed the phone back to me.\n\n\"It's beautiful. Retro, but not overwhelmingly so. Who is the designer?\"\n\n\"Me. I designed and made it.\"\n\nShe had a shocked look and asked for the phone back. She took another look at the photos, then shook her head. Soo, Gillian and Meg looked shocked. I didn't think making your dress was a big deal, but I guess it was judging by everyone's looks.\n\n\"Are you a wedding dress designer?\" she asked.\n\n\"I just graduated from fashion school, but I'm doing mostly TV and movie costuming,\" I said.\n\n\"Well, if you ever want to get into designing wedding dresses, I have people who will hire you in a heartbeat. That dress is stunning,\" she said. Then she grabbed Gillian. \"I think I have something that will work with that dress. Come with me.\"\n\nThey disappeared around a corner and Soo trailed behind, curious to see what miracles the clerk could achieve. I gave them space and looked around the store. Most of it wasn't my thing, but it was nicely made. I could feel Meg come up alongside me and start looking at some of the same clothing.\n\n\"It's weird I keep underestimating you,\" she said.\n\n\"What's that supposed to mean,\" I said, partly ignoring her.\n\n\"When we met, you were a cosplayer going to fashion school. And I didn't take that seriously,\" Meg said.\n\n\"There were a lot of reasons why you didn't take me seriously when we first met, among them that I was mostly naked and running around your best friend's house,\" I said.\n\n\"And you were jailbait,\" she said.\n\n\"I was a solid 18 months past being jailbait,\" I countered.\n\n\"Anyway, I never took what you did seriously. I don't know why; snobbishness probably. But you graduated from a world-class fashion school, have worked movie and TV sets, and just had a very fashion-conscious Italian woman rave about a wedding dress that you designed, made and didn't tell anyone about!\" she said.\n\n\"I couldn't find one I liked, so I took bits and pieces of things I did like in other dresses and made something I liked. Besides, Ben is already spending so much on this, I didn't have the heart to go to him and say I wanted some ludicrously expensive dress,\" I said. \n\n\"Anyway, I'm sorry I underestimated you all these years. You are good at this,\" she said.\n\nMeg and I were far past being pissed off with each other. I considered her one of my best friends. Still, it was one of the nicest things she'd ever said to me, and Meg wasn't a woman that idly gave out compliments. I smiled, turned around and hugged her. To my mild surprise, I felt her arms go around me and hug me back.\n\nIt was a nice moment. I was sorry it had to end when I heard a noise behind me. We broke the hug, turned around and there was a transformed Gillian.\n\nIt wasn't a dress, but a stunning dark linen suit. She was wearing a red camisole underneath it - not plaid, but I recognized the color in some of her clothing. She was nervous wearing it, but it looked fantastic. Soo was beaming.\n\n\"Is it ok? I don't look foolish wearing this?\" Gillian asked.\n\nI walked over to her, got her to do a little spin. When she finished, I smiled and kissed her on the cheek. I didn't want to hug her and wrinkle the suit.\n\n\"You look kick-ass. You should dress like this more often,\" I said.\n\n\"Told you so,\" Soo chipped in. \"You look fantastic, baby. It's sexy and dressy.\"\n\nGillian blushed, but for once, didn't protest. If I marveled at the change between Meg and I over the years, it was stunning how much Gillian had changed since she met Soo. Yeah, she still got angry and had no tolerance when dealing with male bullshit. But around Soo she was a tame pussycat. The bitter, angry woman had changed a lot, and all of it for the better.\n\nLove could do some bizarre things.\n\n\"All right, all right. Let's pack that up. I'm starved,\" Meg said. Blunt, but to the point. I realized I was starving as well. One quick purchase and we headed out looking for lunch.\n\n***\n\nWe were sitting in a tapas bar, which felt like a sacrilegious thing in Venice. Daddy, Meg and I were waiting for Sophie and Jean-Paul. They were already running 45 minutes late, and Meg had texted several times and was growing increasingly frustrated.\n\n\"I hate having my time wasted or the belief that their time is more valuable than mine,\" she said, fuming as she stared at her phone. \"I'd say it was a bloody aggravating European thing, except I've met people on this continent who can show up when they say they're going to.\"\n\nDaddy and I were content to just munch on some food and let Meg fume. As much as I enjoyed teasing her about this relationship, I was starting to feel bad about it. Because I was getting married, I saw anyone in a relationship as something serious. I guess I thought the same thing about Meg and this couple instead of the more practical, reasonable thing; they were just people fucking.\n\nJust when I thought Meg might find a way to reach through the phone and yank them through it, they breezed into the place. They came over to our table, kissed Meg on the cheek and sat down, oblivious to her rage. If nothing else, I was impressed. Neither Daddy nor I could so casually ignore a pissed-off Meg .\n\nAs for Meg, she reluctantly introduced us to her \"friends.\" Sophie and Jean-Paul were in their mid-30s, so Meg wasn't robbing the cradle, but she did have a solid dozen years on them. They were also gorgeous. I was mildly surprised they weren't movie stars or something. \n\n\"Oh, we did some modeling when we were younger,\" Sophie said casually. Her English was good, with a slight accent. Europe was making me feel dumb about only knowing one language. \"It's where Jean-Paul and I met. But it is such a cruel profession, so we moved on.\"\n\n\"And how did the three of you meet?\" I asked. I used my big, manipulative eyes and completely ignored Meg's death glare.\n\n\"She hasn't told you?\" Jean-Paul asked. I shook my head. \"Oh, we were on the beach. She was there by herself, and we were there with some friends. She looked so....alone lying there by herself. And she is, of course, incredibly sexy...\"\n\n\"Jean-Paul,\" I heard Meg say. He ignored her.\n\n\"So I just went over and began chatting with her. Sophie joined in, and we invited her to come out dancing with us later that evening. And that was that.\"\n\n\"Just like that? It sounds so easy and simple when you put it that way. She's so reserved in Canada,\" I said. As long as I didn't look at Meg, I could pretend I didn't know she wanted to strangle me.\n\n\"Oh no, it all flowed very naturally,\" Sophie said, sipping some wine. \"I think we were all on the same page quickly about what we wanted. I mean, younger bisexual women are so filled with drama and demands. Meg knew what she wanted, we knew what we wanted, and everything fell in place so easily.\"\n\nJean-Paul nodded. \"Such a relief. We've had some....mistakes in the past. But Meg is wonderful. Now she just needs to visit more often.\"\n\n\"Or, you know, you could visit me in Canada,\" Meg said. \"It's an eight-hour plane ride, not a four-week voyage by sail.\" Sophie and Jean-Paul rolled their eyes at the suggestion. It was a conversation they'd had before. Meg wasn't winning them over to the idea.\n\nIt carried on like that for a few hours. I can't say they were the most engaging people I've spoken to. They asked a few questions about our wedding and pried Daddy for any embarrassing details or photos about Meg when she was younger, but he didn't bite. They were baffled that we didn't drink and, after a while, seemed content to talk to Meg in French and ignore us altogether.\n\nThey then apologized and said they had another engagement back on Lido, which I interpreted as a party with more exciting people. I figured there was no way Meg would go back with them, but after a heated conversation in French, she came back to us and looked almost embarrassed but said she was heading back with them for the evening.\n\nAs we walked towards the ferry that would take them to Lido, Sophie and Jean-Paul held hands and walked in front of us. Meg, Ben and I were walking behind them.\n\n\"So, what was the big deal about meeting them?\" Ben asked. \"They're very French, but they seem fine.\"\n\nMeg huffed and lowered her head.\n\n\"I hate being hypocritical. Which, for a lawyer, is a little rich, but I hate it. But I gave the two of you no end of crap when you first started dating because of the age gap. I didn't think it would work. I was wrong, obviously. But here I am, involved in a very unconventional relationship with these two. And yes, they are very...French, as you say. But they're kind of a little...\"",
        "\"Overindulged?\" I asked, trying not to sound unkind. Meg nodded.\n\n\"Their families have money. The modeling was a lark for them. But they're not assholes about it. And, well....\"\n\n\"The sex is amazing?\" I offered again.\n\n\"Off the charts,\" Meg said, and she couldn't suppress her grin this time. \"As I said, they're good people. They just needed some....structure. Discipline.\"\n\nDaddy stopped walking because he began laughing so hard he had to lean against a wall. I thought it was a bit mean, but even Meg was laughing. It was good to see her finally lighten up about having a pair of lovers.\n\nAfter Meg and her friends got on the boat, I took Daddy's hand as we began to wind our way to the hotel. Venice was dark, warm, ancient-looking and beautiful. I had no idea where we were going, but Daddy seemed to, and we were content just to take our time. Tomorrow night I was sleeping in Meg's room instead of my room. I didn't see sense in it, but you didn't mess with some traditions.\n\n\"Twenty bucks says they call her 'mommy,'\" I said.\n\n\"No bet,\" Daddy said. He said it so quickly that I wondered if he had inside information, but I didn't press. Instead, I let go of his hand and began skipping around him. He laughed.\n\n\"Someone's happy,\" he said.\n\n\"The countdown is on, Daddy. I'll be your wife soon. No getting rid of me then!\"\n\n\"No getting rid of you now, Kitten,\" he said, smiling. I licked out my tongue, skipping over and wrapped my arms around him. We kissed, and it was a good one. I was briefly scoping out dark alleyways and wondering if I could lure him in one when he gave me a look.\n\n\"I know you want to, Kitten. Hell, I want to. But it was your idea to wait,\" he said.\n\nIn one of my more brilliant and masochistic ideas, I suggested we wait until the night of our wedding to have sex again once we got to Venice. Lots of passion, and it would mean something a little extra. And by dumb luck, I would probably be ovulating again. I was mostly over the last disappointment, but I was hopeful this time would do the trick.\n\nWhich meant I wanted Daddy fully charged and ready to go. Still, I'm thinking past Kitten is a silly bitch for coming up with this plan.\n\n\"I know. It was a moment of weakness, Daddy,\" I said. \"I'll be a good girl...until the honeymoon, of course.\"\n\n\"Well, I would hope so,\" he said, giving my ass a little swat. I giggled and retook his hand, and we walked through the Venice night.\n\n***\n\n\"Come on in, Kit,\" Meg said. \"You can't hide in the bathroom forever. We're losing the light.\"\n\nI took a deep breath, looked in the bathroom mirror, and did a little twirl. Michelle insisted I bring the wedding dress to wear for some of the photos. She said it was because of the light and she wanted some natural-looking pictures before I got all done up the next day. I think she also wanted a sneak peek.\n\nI'd played it cool with Meg yesterday, but it was a relief when the woman in that boutique gushed over the dress. I hadn't shown it to anyone at that point except for a couple of my professors at school. They gave feedback and I made the adjustments.\n\nIt was a tea-length wedding dress with a satin skirt that stopped and swirled out at my knees. The corset had lace over the top. You could get a hint of cleavage. I made it more enticing by adding lace that extended past the corset and stopped short of the neckline. It added something sexy to it.\n\nBut my favorite part was the back of the dress, which was all lace from the waist up. If it looked good from the front, it looked more than a little scandalous from behind. Throw in the vintage, retro feel and mix in some little girl into it, and it was the perfect wedding dress for me. The sprinkles on top were the cat ear tiara that I found online. I would be the perfect little girl/kitten for my Daddy on our wedding day.\n\nI was glad Michelle asked for the photos today. At least I'd get to wear it more than once. I still had to do make-up and hair tomorrow, but I looked good for today's shoot. I walked out of the bathroom to find Michelle already taking pictures.\n\n\"Seriously, Kit. Wow,\" said Michelle. I blushed, which Michelle promptly took more pictures of.\n\n\"How many are you going to take?\" I asked after she directed me around the room. I sat on a chair, I went out to their balcony and looked out at the canal. I sat at a desk and pretended to be writing something. It was fun and Michelle was bossing me around, so I didn't have time to think much. Plus, I knew she was warming me up by letting me parade around in my princess wedding dress.\n\n\"Lots and lots. Most of the work isn't shooting the photos; it's going through all the photos later, finding the best ones and tweaking them. Trust me, I'm paid well, and this isn't work. Relax and don't worry about it,\" she said.\n\nI took her advice, until we got to the part I was worried about. She asked me to undo the corset and the dress.\n\n\"Well, this is where you start getting ready for your big night. So just imagine you're getting undressed and ready for Ben,\" she directed.\n\nWell, that was no problem. One of the things that people forget about Littles like me is that we have amazing imaginations. So tuning out Michelle and imagining getting ready for Daddy was an easy fantasy to slip into. Michelle mainly kept quiet, only occasionally making me pause or wanting me to move to a different spot.\n\nThe dress came off and for the first time I found myself partly naked and being photographed. I blushed and covered my breasts as the dress pooled around my legs. Michelle didn't push or tease me; she kept smiling and taking pictures. I was only wearing my garter, stockings, panties and heels.\n\nI would have to show them at some point, so I dropped my hands, then sat on the bed and made a show out of taking off the stockings. Finally, I was naked except for my panties and heels. I gave Michelle a questioning look.\n\n\"It's up to you, Kit,\" she said, taking pictures and directing me to a few different spots around the room. I was getting dangerously close to the balcony, and my exhibitionist streak kicked in.\n\n\"Oh well, what the hell,\" I said. I covered my breasts with my arm and walked out onto the balcony. Fortunately, the edge of the balcony wall came up to my belly button. I leaned over, still covering my breasts. Michelle snapped away. I found the edge of my panties with my free arm and slowly began to pull them down. Finally, they were dangling off one ankle, when I looked back coyly at the camera. I kicked them off and turned to face Michelle, naked except for the heels.\n\nMichelle took more pictures, but after a couple of minutes, discretion overcame my exhibitionism. The balcony overlooked a quiet canal, so there wasn't much traffic. But much longer and some tourists in a gondola were going to see something not on the standard tour.\n\n\"So, how was that?\" I asked. Michelle gave me a look like I was an idiot.\n\n\"That's possibly the sexiest thing I've ever shot, Kit. If Playboy was still a thing, I could sell those pictures to them. Ben's going to melt when he sees them,\" she said.\n\nI giggled. It had been fun, and showing them to Daddy and having him fuck me silly afterwards was appealing.\n\n\"So, um, lingerie next, I guess?\" I asked.\n\n\"I'm not sure we can top that, but I'm game if you are,\" she said.\n\nI reached into the bag I had brought with me and pulled out something lacy. Not what I was wearing tomorrow night. That was a secret between Daddy and I, but I doubt he would complain.\n\n\"Well, we can't let that light go to waste. Let's see what happens,\" I said.\n\n***\n\nOne of the things Meg told me as I was getting ready in her room was to pause and take things in on my wedding day. So I would remember everything. I thought it was a ludicrous thing to say. It was my wedding day. It was the most important day of my life. It would be burned into my brain for the rest of my life.\n\nAnd yet, when I remember that day, so many of the memories only came back when I was looking at Ahmed and Michelle's photos. It might have been the most important day in my life, but so much of it was a blur.\n\nWhen I walked out of the hotel with Meg and saw Daddy waiting for me by a gondola, my heart stopped.\n\nHe was wearing a tailored gray Italian suit and had even had a new cane for the occasion. He'd gotten his hair cut and his beard trimmed. My god, he looked amazing. Possibly the best he's ever looked in all our time together. All of my nerves vanished, but my lust kicked up several levels. I had the brief, mad urge to grab his hand and drag him back into the hotel. Everyone could wait, oh, 30 minutes or so. Maybe 20 in a pinch.\n\nInstead, Daddy walked up to me, took my hand and kissed it.\n\n\"My God, Kitten. You've never looked more beautiful,\" he said. Because my panties needed to get more soaked at that moment.\n\nIn the gondola. We could totally fuck in the gondola. I bet those guys see that kind of thing all the time. Instead, Daddy took my arm and led me over to the canal's edge and helped me step into the gondola. I was dimly aware that Michelle was there taking pictures of the whole thing. I glanced over, and she had a huge smile on her face. I grinned at her. \n\nGondolas are weird. It's a guy pushing an odd boat through crowded canals while sometimes singing. And since we were dressed up to get married, people were taking pictures, waving and cheering us along. We both waved back, but Daddy quickly noticed that I was squirming a bit and not 100% comfortable.\n\n\"Are you ok, Kitten?\" he asked. \"I thought being watched by crowds would be a bit of a thrill for you.\"\n\nHe wasn't wrong. No sex for several days, that suit he was wearing, all the attention... I'm not sure if brides are supposed to be this horny on their wedding day, but I was revving at a high rate.\n\nBut there was one more thing that had me going. I looked over at Daddy and managed to find another shade of red to hit.\n\n\"When I was getting ready, I felt bad for not wearing my normal collar. I like wearing it because it reminds me that I belong to you, but it didn't go with the dress and nothing else felt right,\" I said.\n\n\"I know. That's why I sent you the pearl collar. I thought it would help, and it looks amazing on you,\" he said.\n\nI blushed and ran my fingers along it for the 100th time since putting it on.\n\n\"It does help, and I love it. But by that point I'd taken other steps to get me in the right mindset,\" I said.\n\nHe had a concerned yet amused look on his face.\n\n\"What did you do, Kitten?\"\n\n\"I put my plug in, Daddy. I'm sitting next to you in this gondola wearing a wedding dress with your collar around my neck. Oh, and I have crowds of people watching and I have a plug in my ass. I'm so horny I can't even think.\"\n\nMy emotions were all over the place. I felt bad, like I was making a mess out of things. I figured Daddy would scold me or make fun of me. Up ahead, I could see our friends waiting by the Palazzo Cavalli. Ahmed was waiting with his camera, and from behind, I could see Meg and Michelle, who was still taking pictures. I could feel panic start to build up.\n\nInstead, Daddy took my face in one of his hands, and the other gently rested on my throat. I immediately felt my mind go still, the panic starting to ease.\n\n\"It's ok, Kitten. You're a nervous, excited bride on her wedding day. People are only going to see a beautiful young woman who is maybe a bit overwhelmed at the moment, which is perfectly understandable. I'm the only one who knows your other secret. I'm here with you, and I will take care of you, ok?\" he said.\n\n\"Yes, Daddy,\" I said in a small voice. I always wanted someone to take care of me, and he would take care of me for the rest of my life, starting today.\n\nWe pulled up in front of the town hall. Gillian and Soo, Mike, Susan and her daughter, who I hadn't had a chance to talk with yet, were waiting. Sophie and Jean-Paul were standing off to the side, waiting for Meg. And Ahmed, who kept taking pictures as I hugged everyone. Meg and Michelle docked behind us and joined the party.\n\n\"My God, you look amazing,\" Susan said after carefully hugging me. Then she examined the dress again. \"You made this, didn't you?\"\n\nI nodded. Susan shook her head.\n\nI would have said more, but then Soo pounced on me, managing to cry, laugh and gush about how amazing I looked all at once. Soo was wearing something that had about six different colors, but still managed to work. It was madness with friends and family hugging us, and random tourists snapping pictures. Some dude came up and asked for a selfie with me until Meg pulled him aside and had a word.\n\n\"Perhaps we should go inside and get away from the hordes,\" Daddy said and glanced at his watch. \"Plus, we're getting married in 15 minutes, so perhaps it might be good to head in.\"\n\nOn the steps, Daddy introduced me to Mia, the lady who had helped organize things for us in Venice. She looked to be in her 30s, but I had no idea when it came to Italian women. I mostly recall her smile was terrifyingly perfect.\n\n\"Congratulations, both of you,\" she said. \"Kit, it's so nice to meet you finally. This wedding has been unusual. Normally it's an insane bride I'm dealing with, but instead, it's been a very calm and reasonable husband. For that alone, this has been a delight.\"\n\n\"Thank you?\" I said, not knowing what else to say. She laughed. It was also perfect.\n\n\"Well, we've had a bit of luck, as there was a last-minute cancellation,\" she started to say.\n\n\"That happens?\" asked Gillian.\n\n\"Oh my, yes. All the time,\" Mia said. \"Cold feet. Some drama during a bridal shower or bachelor party. Someone misses a flight. There's always something.\n\n\"Bad news for them, good news for you. I managed to snare the judge who would marry that couple for you instead. He's a lovely man and speaks English, so there's no need for a translator. Also, you'll love the space where the ceremony takes place. Trust me. Come on, and let's get you married!\"\n\nDaddy took my hand and we all followed Mia up a winding staircase and through a maze of corridors. Finally, we stopped outside some double doors.\n\n\"Ok, as I understand, you're walking in together?\" Mia asked. We nodded. I'd weighed different people giving me away - Mike or even Meg - but none of them felt right. That's when Daddy suggested just walking in together and it just seemed right.\n\n\"Ok, well, the rest of you go inside, and I'll pop out in a minute and let you know when it's time,\" she said. Mia opened the door and ushered everyone inside. I was so busy looking at Daddy and forgot to look at the room.\n\nThat's when I noticed not everyone had gone in. Mike lingered.\n\n\"I'll join the others in a moment, I just....\" he started and then turned his head away.\n\n\"I know. I wish mom were here too,\" Daddy said.\n\nHe shook his head and refocused. \n\n\"I know you do. And so do I. But it's not that,\" Mike said, taking his son's hand. \"I am so proud of you. I never say it enough because I just always assumed you knew. But this year, I realized how hard everything was for you after Beth. And for you to come back and be the man you are now. To be willing to take the plunge...I'm just very proud of you, son.\"\n\nI rarely see Daddy cry these days. Early in our relationship, he did. He tried to hide it, but I knew he struggled with losing Beth. But the last time I saw him cry was at his mom's funeral. But now, he started crying and wrapped his dad up in a hug. I put my hands over my face and willed myself not to begin bawling.\n\nMike broke the hug and came over and took my hands.\n\n\"You can't say anything, Mike. If I'm sobbing when I walk in there with my make-up ruined and they start taking pictures, I'm going to be miffed with you later,\" I said.\n\nHe laughed, squeezed my hands. \n\n\"You are a light in any room you walk into. Thank you for saving my son,\" he said, then kissed me on the cheek. He gave my hands one last squeeze, opened the doors, and walked into the room.\n\nI was absolutely about to lose my shit and start openly sobbing in the middle of the corridor. A handkerchief materialized, and Daddy dabbed tears away from my eyes.\n\n\"Who knew the old man had that in him?\" he said, trying to joke. But I could tell he was rattled.\n\n\"Are you ok?\" I asked. Focusing on him gave me a moment to collect myself.\n\nHe nodded. \"Yeah. I wasn't expecting that. I knew mom not being here would hit us at some point, but that was....good. I've waited most of my life to hear that, but now is as good a time as any.\"\n\nWe both laughed, and that's when Mia reappeared.\n\n\"Well, it's good to see the bride and groom laughing before the big moment. Are you ready?\" she asked.\n\nWe looked at each other, nodded simultaneously, and then grabbed each other's hands and walked inside.\n\nIt was a simple room. There were some classic pieces of art hanging on the wall and an ornate wooden desk at the front of the room. Everyone was sitting but turning to look as we came in. But the most outstanding feature was the balcony on the left. The glass doors were open, and a breeze ruffled some curtains.\n\nIt was perfect.\n\n\"Welcome, welcome,\" said an older man who looked to be in his 70s. \"Come on in, and let's get things started.\"\n\nAll I could hear was the sound of Michelle's camera and my heels clicking on the marble floor as we walked inside.\n\nIt was a simple ceremony and lasted about 20 minutes. We got to sit for some of it, which was nice. Gillian sat to my left; Meg sat to Daddy's right. I don't recall much of what the judge had to say. I was mainly focused on not crying. I did that by holding Daddy's hand and looking at him. He looked at me, smiled and squeezed my hand. That's all I needed.\n\nThen we had to stand and take our vows. I wish I could remember what they were. Daddy suggested early in the planning that we could write our own, but I stomped on that idea. There was no way I would remember anything, and I was either going to start to bawl, babble or both. Standard vows would be fine, thank you very much.\n\nThen we got to a part where I knew I had to focus.\n\n\"Do you, Kit Ashley Clarke, take this man to be your husband?\" the judge said.\n\n\"I do,\" I said, and to my surprise, started to giggle. \n\nI also had a flash; I never had to use the last name 'Clarke' again. Among the many emotions rocketing through my body at that moment, relief was one of them.\n\n\"Do you, Benjamin George Harrison, take this woman to be your wife?\"\n\nI did a slight double-take. How did I not know his middle name? He leaned over and quickly whispered in my ear.\n\n\"Mom was a big Beatles fan,\" Daddy said. Then he turned back to the judge.\n\n\"I do.\"\n\n\"Do you have the rings?\" asked the judge.\n\nMy eyes got wide for a second. Rings? What had we done with the rings?\n\nThat's when Gillian and Meg stepped up and handed the rings to us. Gillian smirked, having seen the moment of panic in my face. After everything I'd put her through, she deserved some amusement.\n\nWe'd bought the rings in Kingston back in May. It was from a local jewelry maker, which appealed to both of us instead of going to some mall chain jewelry store. I looked at Daddy's ring for the first time in months in the palm of my hand. It was gold with some Celtic knotwork that he liked. I could feel my hand start to tremble and had a brief flash of fear that I would drop the damn thing and it would roll under some floorboard, never to be seen again.\n\nI took a deep breath, found some focus, took his hand and slid on the ring.\n\nHe smiled at me and mouthed, \"good girl.\" Then he took my hand and slid on my ring. As soon as he touched me, I just wanted this to be over so we could be alone. Now.\n\nOh, and naked. Or mostly naked.\n\n\"Then by the power invested in me, I now pronounce you husband and wife. You may kiss now if you wish,\" the judge said.\n\nOh, I very much wished. I jumped up in his arms and kissed him, much to the laughter and cheers from everyone there.",
        "After we broke the kiss and my feet hit the floor, I was pleased that Daddy was feeling much the same way I was. I did a little shimmy and raised an eyebrow, letting him know that I was ready and willing if he wanted to sneak away.\n\nInstead, he held out his arm. I sighed and took it.\n\n\"Our guests are waiting, Mrs. Harrison,\" he said.\n\nI could feel myself momentarily stumble as we walked towards our friends. No more Ms. Clarke. I never had to use my parents' name anymore. I was Mrs. Harrison.\n\n\"Oh wow,\" I said quietly. Then I looked up at my Daddy. \"I love you, Mr. Harrison.\"\n\nHe kissed me again.\n\n\"I love you too, Kitten,\" he said. \"Now, let's play nice with our guests for a few hours and then I'll fuck you blind. Sound good?\"\n\nI grinned.\n\n\"Lead the way.\"\n\n***\n\nIt wasn't quite that simple, of course. There were pictures on the balcony, photos by the canal, pictures with friends, and even more pictures. I asked Michell if she was joining us later and taking pictures of our wedding night. It was meant as a joke.\n\n\"If you want,\" she said. \"Ben did pay for the deluxe package, so I guess that's included. What time should I swing by?\"\n\nBefore I had the chance to threaten murder, she cracked up laughing. I reminded myself that I loved the bitch.\n\nThe wedding meal was at a nice restaurant. I thought about changing out of the dress, but when was the next time I was going to wear it? I did concede to wearing what amounted to a table cloth over me when I sat down to eat so I didn't spill anything on it. \n\nIt was nice to be surrounded by so much love and laughter. Susan chatted with me for about 10 minutes, apologizing for Prague, even if it wasn't her fault.\n\n\"I have a plan for you. I think it's going to be much more your speed. We'll talk after you get back from your honeymoon.\n\nI was curious, but decided to wait.\n\nAfter supper we managed to keep the speeches light. Daddy said a few words thanking everybody, and I babbled out something and cried. Then Meg stood and said a few words.\n\n\"I can tell from the look on both their faces that Ben and Kit are slightly worried about what I'm going to say,\" she said, standing at our table. Her wine glass had already been filled and emptied several times. \"But I certainly won't go into detail about the first time I met the both of you together.\"\n\n\"That's because I kicked your ass all over Ben's kitchen even while half-naked,\" I said. \n\n\"Yes, well, that's one interpretation,\" she said, getting a laugh from everyone at the table. \"I've known Ben for longer than I can say here for fear it might indicate how old I am. And aside from Gillian, I've known Kit the longest here. And look, I thought their relationship was a mistake when I first met them. That there was no way it would work. The age difference, the societal pressures, and family and friends would give them no end of shit about it. There was no way it would work.\n\n\"I was wrong,\" she added. Daddy did a Kevin from Home Alone face. Meg flipped him the finger.\n\n\"It happens....rarely, I might add before anyone thinks otherwise. Some of it is magic; Kit literally knocking Ben over at a Comic-Con has to be magic, fate or something. But a lot of it is just putting the work into the relationship. I've seen how they do it up close. Yes, they're as nauseatingly cute in private as they are in public. But I've seen Kit heal Ben after tragedies by just being there for him,\" she said. Then she paused.\n\n\"For me too, if I'm being honest,\" she said, quietly.\n\nI desperately wanted to jump up and hug her, but I was afraid I'd send the table flying. Instead, I reached over, took her hand and squeezed it. She smiled.\n\n\"And I've seen Ben keep her sane with fashion school and dealing with a...challenging family situation. They work well together. It's incredible to watch. I'm not crazy enough to think about getting married again or anything insane like that. But for the two of them, I think it will work just fine.\n\n\"So, everyone, a toast. To Ben and Kit,\" she said. Everyone stood and toasted, I blushed like crazy, but it felt good to hear them all wish us well.\n\nFinally, we said our goodbyes. It was weird. It felt like I was leaving something behind, even if we would see most of them for breakfast tomorrow before we headed off on our honeymoon. One more realization that my life has changed forever.\n\nMichelle and Ahmed took more photos as we sailed off into the evening in the gondola back to our hotel room. Just before we walked in, I jumped into his arms. He laughed and carried me across the threshold.\n\n\"You survived, Kitten,\" he said, depositing me gently on the bed. I flopped back and suddenly heard the bed sing to me, telling me how good it would be to pass out right now. It had been a long, highly emotional day. Week. Last few months. A week-long coma sounded spectacular right now.\n\n\"Kitten, if you're exhausted, it's fine. I can ravage you in the morning after you get a good night's sleep,\" he said, undoing his tie.\n\nIt was tempting, but it also galvanized me. I sat up on the bed, kicked off my shoes, and then got on the floor. I walked over to my Daddy, trying not to wince as my feet throbbed; being in heels for over eight hours will do a number on your feet. I got up on my toes and kissed him. Not a little peck that said, \"that's very kind, Daddy; let's do that.\"\n\nNo, I tried to pour sensuality and promise into it. I felt his arms reach around, grab my ass, and squeeze. I squeaked into the kiss as I got a reminder about the plug still in there.\n\n\"Meanie,\" I said, stepping back.\n\n\"I'm not the one who thought it would be a good idea to have a plug in your ass all day, Kitten,\" he said.\n\nI started to walk towards the bathroom, giving my ass a little extra shake.\n\n\"Well, if my old man can stay awake for 15 more minutes, I promise to give you a wedding night to remember,\" I said.\n\n\"'Old man.' Someone must want her ass to be even more uncomfortable,\" he said, taking off his jacket. I laughed and closed the bathroom door.\n\nI looked in the mirror. Given how long the day was, I still looked pretty good. Tired, but not bad at all. I slipped out of the dress. I hung it up and ran my fingers across it. It was gorgeous and I would probably never wear it again. It was a shame. Then again, maybe I could do something with it later. I bet I could cosplay something out of it.\n\nI finished getting undressed, taking off the pearl collar, got a quick shower and then reached for the delicate lace and silk item I had picked out months ago with Rachelle.\n\n\"It's your wedding night, Kit. You don't need anything elaborate, complicated, or dramatic. It isn't playtime or elaborate seductions. Sexy and elegant is what you need. With a little bit of playfulness,\" she said.\n\nThe chemise I was putting on was what we agreed to. It came down to my upper thighs with the bottom part white silk and the top lacy and transparent. Delicate lace flowers covered my breasts and met at my belly button.\n\nI looked in the mirror, fluffed my hair once and did a little spin. It looked good. I looked good. No panties, of course. I briefly contemplated pulling out the plug, but it would be cruel to deprive Daddy of the chance to play with it. I also ran my fingers quickly along my pussy. I was already soaking wet.\n\nI glanced at the clock on the wall - twenty-five minutes - I was ahead of schedule. I opened the bathroom door and paused in shock.\n\nIt was an old room, as most things in Venice seemed to be. It was large and sparsely furnished. There wasn't a TV, but who went to Venice to watch TV in their hotel room? But it had several advantages. You could feel history coming out of the walls; a fantastic balcony looked over a canal. And a huge, wonderful king-size bed.\n\nDaddy was lying on the bed. Around the room, there were over a dozen candles lit. The place looked magical. I could feel my hands come up to my mouth and I briefly had the urge to cry. \n\n\"I can't believe you did this, Daddy. It's....amazing,\" I said, walking towards the bed. Then I had another thought. \"Is this, like, a fire risk?\"\n\nHe laughed and patted the bed next to him. I got on it and crawled across the bed, eventually resting my head on his chest. I could feel exhaustion waving around the edges but fought it down. No matter how tired I was, there was no way I was passing out and missing out on wedding night sex. Plus, I was sure I was ovulating or would be soon. \n\nI enjoyed feeling Daddy's arms around me so much I had tuned out on him talking. \n\n\"...so yeah, hotel management says it should be safe. I just won't be tossing you around as much as usual,\" he said, running his fingers through my hair.\n\nI decided to move and straddled his stomach. I didn't trust having my pussy rubbing up against his cock yet. I looked at him and smiled.\n\n\"I know you said I don't have to say thank you anymore, but today has been amazing. Better than I ever could have dreamed. So thank you, Daddy. You've made me so happy today I felt like I would burst,\" I said. Then I lowered myself down to his face and kissed him.\n\nI've kissed my Daddy thousands of times since the first one. I'd probably kissed him a couple of dozen times today. But the first kiss, alone in our room on our wedding night, I could feel my brain fizzle. Any chance of falling asleep vanished. It was long, sensual and perfect. I was aware that his hands now rested on my ass.\n\nI came up for air and then looked down at him, my face inches from his and my hair covering our faces. I grinned.\n\n\"Yes, the plug is still in there. It didn't seem right to tease you with it all day and then pull it out. Although you understand that I have other plans for your cum this evening, right?\" I said.\n\nHis hands moved under the chemise, ran along my ass until they found the plug, and then gently pushed on it. I closed my eyes and groaned.\n\n\"You're a crazy woman doing that on your wedding day, Kitten,\" he said, still running his hands over the plug and my ass. I'm sure he could feel how wet his stomach was from my pussy sliding back and forth on it.\n\n\"Yes, but I'm your crazy woman. No getting rid of me now,\" I said.\n\n\"True, but if you're mine now, we need to make an adjustment. I think we need to fix that bare neck you're displaying,\" he said. Then one of his hands left my ass, reached under the pillow and pulled out a new collar. Much like the gold ring on my finger, this was a simple gold band that would discreetly lock around my neck and only Daddy could remove it.\n\nPerfect.\n\n\"Oh Daddy,\" I whispered, then nodded. He reached up and put the collar around my neck. Then, after checking to make sure it wasn't too tight, he clicked it into place. It was a slight sound, but it made me shiver.\n\n\"Who do you belong to?\" he asked quietly.\n\n\"I belong to you, Daddy. Always and forever. I swear,\" I said. \n\n\"Good girl,\" he said, and I thought he might cry. If he did I was doomed. I could already feel myself getting overwhelmed.\n\nThen he rallied and smiled.\n\n\"So why don't you be a good little girl and slide your pussy onto your new husband's cock,\" he said, giving my ass a little swat.\n\n\"Ow,\" I said, not meaning it. Then I slid back and ran my wet pussy lips up and down his cock for a few moments. I heard him groan, and I knew he wouldn't put up with much more of it, but it felt so good. I lifted my hips, grabbed his cock, pointed it upwards and then I sank down on it.\n\n\"Oh god,\" we both said at the same time. It was a miracle I didn't cum right away. It had been days since we last fucked. Combine that with the big day, and the plug still in my ass...it all conspired to set me off immediately. But I managed to hold off. Barely. I felt deeply submissive and wanted Daddy to tell me when I could cum. So instead, I did a slow grind on his cock.\n\n\"My god, Kitten, you're beautiful,\" he said, with something that sounded like awe.\n\n\"Just noticing that?\" I asked, teasing.\n\nThat earned me another swat on the ass. I bounced hard on his cock a few times before switching back to my slow grind. Mutual sexual torture is always fun.\n\n\"No, brat. That stunning chemise, the candlelight and how it's playing with your hair and face. I can't describe it. I'm not sure a camera could capture how beautiful you are right now,\" he said.\n\nThe slow grind vanished. I didn't need to break him yet, but I needed to cum. There's only so much a girl can take. I started bouncing on his cock, letting its tip almost slide out of my pussy, before slamming back down, burying it deep inside. The straps from the chemise also slid off my shoulders. Daddy made a quick adjustment, and soon my breasts were freely moving as I bounced.\n\nHe reached and cupped my tits. I looked at him pleadingly, knowing that I would go off like a rocket as soon as he did anything with them.\n\nI slammed down on his cock hard, burying it deep in my pussy. He reached and pinched both my nipples hard. My eyes shot open.\n\n\"Cum now, Kitten,\" he said.\n\n\"Oh fuck, Daddy!\" I screamed and came.\n\nIt felt amazing after almost a week of not having sex, let alone cumming. I closed my eyes and fireworks went off behind them. Bliss flooded my brain and I was dimly aware that my muscles were spasming. I was using my hands to keep from collapsing on his chest.\n\nAnd all of that was just a taste of what was to come. The next one might do brain damage.\n\nI opened my eyes and looked down at my Daddy. He was smiling, but I could see the tension around his eyes. Then I remembered that if I hadn't cum in a week, neither had he. I had been parading around in a short wedding dress, teasing him with a plug and now riding him wearing sexy lingerie. And then making him patiently wait while my pussy pulsed around his cock.\n\nI bit my lip and tipped over on my right side. Daddy took the hint and rolled with me to be on top. I looked up at him and could see the lust in his eyes. And despite just cumming, I wanted more. I reached up and touched his face and parted my lips. He took the hint and leaned down to kiss me. As he did I wrapped my legs around his hips.\n\nHe pulled back and looked at me. I put my hands above me and grabbed the metal railing of the bed. I tilted my head back so that my neck was more exposed.\n\n\"We'll play more in the morning, Daddy. And we have all week on our honeymoon. But right now, just take me,\" I said. To emphasize the point, I gave his hips a little squeeze.\n\nDaddy took the hint. He pulled back his hips and slammed his cock back into me. I screamed, and nothing in that scream indicated I was in pain.\n\nOften when Daddy was fucking me hard, I closed my eyes and just relished in the sensation of his thick cock stretching out my pussy. But tonight, I needed to watch him. I wanted to encourage him to use his new bride however he wanted.\n\n\"Fuck me harder, Daddy. Give it to your little girl,\" I said to him. \n\nI felt Daddy's hand gently squeeze around my throat, pressing on my new collar. I did a theatrical gasp for air.\n\n\"Oh please, Daddy,\" I cried out.\n\nMy legs lifted off his hips and went up in the air. Daddy wrangled them and pinned my knees closer to my ears. I gasped as his cock managed to get deeper in me.\n\n\"You're mine now, Kitten. That collar and ring mean you're all mine,\" he said, his voice sounding hoarse.\n\n\"Oh yes, Daddy. Fuck me! I'm your little girl now. I belong to you now. Breed me, please!\"\n\nI was dimly aware that his fucking was becoming more erratic. I knew he was close, but I could also feel the orgasm that would leave me a pile of goo was approaching at warp speed. I closed my eyes and just kept feeling it build and build.\n\n\"Oh God, Kitten!\" I heard Daddy cry out, and then I felt his cum explode into me.\n\nMy brain shorted out. Pleasure and ecstasy exploded throughout my body. I cried out and then blacked out.\n\nWhen I eventually came to, I could see Daddy resting alongside me, and he had a damp cloth he was using on my head. I looked up and gave him a dazed smile. I was also dimly aware there was a pillow under my hips. What a good Daddy, making sure none of his cum leaked out.\n\n\"You gave me a bit of a scare, Kitten. Even by your standards, that was a pretty hard cum,\" he said.\n\n\"I'm allll good, Daddy. I really, really needed that,\" I said, my voice sounding slurry. I was conscious but deeply out of it. Then I touched my stomach. Daddy gave me a scolding look.\n\n\"Kitten, do not get yourself too worked up. Yes, that was intense, and yeah, I think I filled you with about a gallon of cum, but that doesn't mean you're pregnant,\" he said.\n\nHe was right, of course. Neither of us wanted to go through the emotional upheavals of earlier the summer. But I couldn't help it; that was so intense and powerful. It felt like something had just happened.\n\nStill, better safe than sorry. I reached up and touched Daddy's face and smiled; then my hand drifted down towards his cock. I touched it and felt it twitch. Oh, I could work with that.\n\n\"Seriously, Kitten?\" he said.\n\n\"You're probably right, Daddy. I'm probably not pregnant. I guess we'll have to keep trying.\"\n\n***\n\nWe tried a lot over the next week. At least once more that night. After the farewell breakfast with everyone, we got on the train and went on our honeymoon in Cinque Terre. I lost track of how much sex we had there. We were good for at least twice a day. I was impressed with Daddy. Yeah, he's in great shape for a man in his 50s, and yeah, I'm sure there was some medicinal assistance towards the end. But he kept up with me and never said no. And I know I was super horny.\n\nWhen we eventually made our way back to Canada, I had a bit of color, a lot of soreness, and was a happy, blissful bride. A week or so after I got back, Susan reached out and asked if I wanted to consult on some costume designs for a new TV show. I was reluctant to leave home, but she told me I could work from home for now. Eventually, she'd expect me to come to New York for meetings, but it could wait.\n\nIt was great, although Daddy had to be strict with me. I wasn't used to working from home, so for the first few days, I kept teasing him and trying to seduce him until he laid down the law that there would be no sex during working hours.\n\nHe was right, although I thought being able to have sex during working hours would be one of the perks of working from home.\n\nI was trying not to think if I was pregnant throughout all of this. I kept in mind Daddy's warning. And he was right.\n\nBut after I was four days late, I got my hands on a pregnancy test. I peed on the strip and then held my breath.\n\nTen minutes later, I walked into Daddy's office, where he was consulting on something. He tried to establish ground rules about interrupting each other when we were supposed to be working, with mixed success. I stood there in the doorway and waited for him to turn around. When he didn't, I cleared my throat.\n\n\"Hi Daddy,\" I said.\n\n\"Hi Kitten,\" he said, not turning around.\n\n\"No, I mean it,\" I said. He finally turned around. I was standing there in a sundress, holding up the pregnancy test in my hand. There were two stripes on it. I waved it and smiled.\n\n\"Hi Daddy,\" I said again and grinned."
    ],
    "authorname": "thanagar",
    "tags": [
        "daddy",
        "older man",
        "younger woman",
        "ddlg",
        "mature",
        "romance",
        "spanking",
        "pet play",
        "breeding"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/little-packages-ch-12"
}