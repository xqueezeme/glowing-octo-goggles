{
    "title": "Down, Boy!",
    "pages": [
        "<p align=\"center\">DOWN, BOY!\n\nWRITING THE ALPHA MALE FOR CONTEMPORARY FICTION\n\n\"I don't want to be the leader. I refuse to be the leader...I want a man lying over me, always over me...His will, his pleasure, his desire, his life, his work, his sexuality the touchstone, the command, my pivot...as a woman, oh, God, as a woman I want to be dominated...I am going to be pursued, fucked, possessed by the will of a male at his time, his bidding.\" -- Anais Nin</p>\n\nAh, Mr. Alpha. He goes by many names; Dom, Master, Daddy, Sir, Giles (ahh, wait -- that one's just mine. Ahem). He's the leader of the pack; the one who wears the trousers; he eats lesser men for breakfast and girl-parts for lunch.\n\nHe's also a big, fuck-off clich\u00e9.\n\nThere's a reason why Mr. Alpha is so popular, so let's not knock him until we have tried (hung and quartered) him. He embodies a lot of endearing/sexy/somewhat disturbing implications about my own self esteem, and that makes him hard to resist. Besides, isn't good fiction all about wish-fulfilment and escapism?\n\nMaybe.\n\nThe problem is this: I'm getting some serious d\u00e9j\u00e0 who? Every alpha story I read seems to be same guy, token differences, tweaked plot. So I googled \"writing alpha males\" and I got a bunch of blog articles from romance authors. It seems that nobody but the category romance gals wants to acknowledge the poor bastard -- yet, he turns up in all sorts of fiction. Now, if you want to write a category romance, great -- write that category character -- but what if you want something more?\n\nNever fear! Dr. Firebrain is on hand to diagnose and prescribe (and that diploma is not mail order. I don't know what you mean. Want a cookie?).\n\nSo: want to write a three-dimensional, addictive alpha male? Read on. (Frankly, he's not going to be very forgiving if you don't).\n\nDIAGNOSIS: HARLEQUIN SYNDROME\n\n<p align=\"center\">\"And this...is your opinion of me! ...My faults, according to your calculation, are heavy indeed! These offences might have been overlooked, had your pride not been hurt by my honest confession of the scruples that have long prevented my forming any serious design.\" Mr. Darcy, Jane Austen's Pride and Prejudice</p>\n\nStefano is a cunt. No, really -- he's a cunt. He's done despicable things in his life; as much as the heroine wants to jump his bones, she just can't bring herself to because he's such a big meanie. Maybe he cheated on her. Maybe he sold his brother down the river in a sordid business deal. Maybe he's a demonic soul-eater who has killed hundreds of innocent people in his quest for psychosexual crack. Here's the kicker -- Stefano seemingly shows no remorse.\n\nBut wait! No! Can it be? Stefano isn't really a cunt at all; it was all just a big misunderstanding on behalf of the ill-informed heroine. He didn't really cheat on her; a nasty rival female just set it up so she thought that he had. He didn't sell his brother down the river; the brother was a lapsed alcoholic who was bitter at being shut out. And yeah, well...maybe he did kill a lot of people as his bad-ass demon self -- but it's ok. He's repenting.\n\nStefano seemed like he had no remorse because he's such a stubborn git who didn't want to appear weak by admitting it. Isn't that cute, when you think about it? Just the kind of guy you want to set up home with...no?\n\nPrescription\n\n1) Patrocillin Let's remove the misunderstanding part. It patronises both the character and the readers. If Stefano has faults, if he's made mistakes -- have him admit to them upfront, or after a little ribbing. Have him be the adult who's trying to deal with them. Don't be afraid to leave your alpha with some jagged edges, even in the event of a happy ending -- his dark side is one of the reasons that we love him.\n\n2) Oxycuntin Let him actually be a cunt. They're fun to write, and women do tend to love them -- so long as they're not cunts to us (in fact, this bit makes us feel special). It's important to note that a cunt is not a guy who's done bad things but has a \"reasonable explanation\" -- a cunt is just not a very nice person. People fall in love with not very nice people all the time, but they don't admit it very often.\n\nWhat? gasps the reader. You're telling me to deliberately write a character whom people are meant to like, as dislikeable? Yes and no. Firstly, never assume that somebody has to be likeable for people to like them; at times, we see a quality in a person that validates something within ourselves, and they garner our sympathy regardless. Secondly, you'll be surprised at what a man can get away with in fiction if he's pretty and clever -- lots of people have written cunts and just called them vampires, and that has served them very well so far. (Run for your iPads, bitches -- I'm on to you!) Thirdly: people who do bad things are fascinating, and there's a whole hotbed of readers who like to dissect them.\n\nHave you noticed the emergence of the anti-hero in popular fiction? He's especially prevalent in fantasy. He's not a wholesome good boy, but he's not a villain either; his purpose usually ends up being for the greater good, whether that is intentional or not. He's a cunt, but he gets the job done. The Dexter series is a good example with the serial killer who only kills serial killers; he's a complex guy who needs careful handling from his writer, but done right? Ooh la la.\n\nDIAGNOSIS: STALKER SYNDROME\n\n<p align=\"center\">\"It makes me...anxious...to be away from you.\" Edward, Stephanie Meyer's Twilight</p>\n\nHe loves me, he loves me no -- whoa. Is that him outside my bedroom window, again? He must really love me...\n\nDominic (see what I did there? See? Oh yeah) is a protective kind of guy. He just wants to keep me safe, you know? He feels this overpowering lust for me twenty-four hours a day, and I guess that means he can't bear to be parted from me in case I fall through a wormhole in time and space (or run off with a werewolf). That's why I wake up and he's watching me sleep, or he won't let me go out alone after dark (or in the light, come to think of it). If I find that I don't want him at first, he might get a bit rough and ready with me. This is partly because I'm so wonderful that he can't control himself (like my autistic cousin, Marty, but with eye contact), and partly because he just senses that I like to be fucked like I'm owned (despite this, he's preoccupied with the idea that he might break me. Jesus, boy -- consent is so 2009).\n\nThe fact that he hangs around like a bad smell couldn't suggest he might be a bit insecure that I might leave him...could it? He doesn't assert himself so aggressively because he's afraid of being weak, oh noes. And I am definitely not insecure, needing a man to want me so desperately that he's ready to force me into the naughty naughties. There's nothing creepy about either of these things, so stop looking at me like that.\n\n(Also, Dominic, I'm on the toilet. This is not cool, ok? I told you -- not for number twos!).\n\nPrescription: Divistat\n\nAs much as he worships me, Dominic needs to get a life. He needs hobbies and friends, and while I want to be his top priority because we still have an overpoweringfuckawesomelove, if he didn't have or want the other stuff...he'd be a bit pathetic. Yeah, I know he struggles to control himself around white-hot me, but talk about that too much and it's going to feel too easy. Maybe I am insecure, and that's ok...but let's not make it so obvious. Please?!).\n\nOf course, he can still hold me down and screw me like he bought me at a slave auction, but he might want to check that I'm into that first...lest he do something embarrassing (like get arrested for sexual assault). An experimental neck bite or hair pull would suffice.\n\nDIAGNOSIS: GASTON SYNDROME\n\n<p align=\"center\">\"As a specimen, yes, I'm intimidating -- my, what a guy! Gaston!\" -- Disney's Beauty and the Beast</p>\n\nGabe is the ultimate male: tall, defined muscles, cock of epic horse proportions, piercing eyes (they're sometimes penetrating, of course), dirty smile. He'll have a token weakness such as his pet dog, or he'll be strangely and conveniently good with my four year-old. Occasionally, I orgasm if he bats his eyelashes a few times in quick succession.\n\nHe's just as glorious in bed; he favours missionary or doggy, where he can exert his horse erection to the point where it forces my cervix to disintegrate, and his cockhead eventually materialises in the Russian wilderness. This is appropriate because he has the intellect of an astronaut and the tenacity of a Soviet spy (fnar).\n\nWhen he talks, it's about sex (read: me), work or himself. He's got a bedroom voice -- ragged and heavy with his lust -- and a boardroom voice, which is calm, deep and measured. I know when I've really got under his skin because he mixes the two up (either that or he forgot to take his bipolar meds).\n\nMen want to be Gabe and women want to fuck him -- but he's mine, all miiiiine! He's an alpha, and alphas are best at everything; there's nothing he can't do (except, of course, control himself when it comes to me. Or admit that he's being stubborn). He's rich, and if he's not famous -- he's infamous in all the right circles.\n\nYou'd think that somebody this perfect might be a bit smug. A bit annoying, perhaps. Or maybe he's disgustingly modest. His sheer Godliness might even be a bit intimidating to a simple female like me. Not that this might ever get dull to read, oh no...\n\nPrescription\n\n1) Moderatine -- give Gabe a fault somewhere, whether it's physical or psychological. Make it a valid fault, too; being shit at Monopoly does not count (be wary of all the usual clich\u00e9s, like his guilt over his evil past, his inability to see his own loveliness or his weakness for the heroine. These may well be present but you need a sucka-punch combo with something else to make him stand out). Alphas tend to be physically strong and I wouldn't suggest that you write someone weedy, but he doesn't have to be six foot three with shoulders as wide as Australia.\n\nYou might even subvert a clich\u00e9; if he's a vampire, have him wear something other than a leather jacket; if he's a businessman, maybe he could wear something other than a suit (or make it a well described/nicely individual suit). Heck, how about an alpha who wears jeans and a band t-shirt? He's out there...\n\n2) Oxycuntin -- being a cunt is usually the realistic product of being near-perfect. Thus, a healthy dose of ass-hattery is once again applicable -- if handled well.\n\n3) Xanass -- so you can't bear to have your alpha any less than perfect? Hnnnghh...gnash...[fist shake]...oh, ok then. You're going to have to make the people around him stop fawning over his every move. Perfect people are not liked by all, even if they're genuinely nice; friends, family and even loved ones get jealous and annoyed. This is often done through a sibling with hardboiled resentment, or another brooding alpha male as competition. Try to avoid those tropes if you can. Here's the trick, though: get the reader to sympathise with the jealous person, instead of the alpha. Have them question, in little moments, who's really in the right here -- you're going for a deep shade of grey, rather than black or white. Poof! Now you've made Gabe seem human and a teensy bit vulnerable, but without having to disturb his masterful fa\u00e7ade.\n\n(Note: having the enemy hate Gabe does not count. He's supposed to hate him).\n\n<p align=\"center\">DIAGNOSIS: FRISKY SPERM SYNDROME\n\n\"Who do you love -- the child, or me?\" Pregnant Dorelei to Imriel, Jacqueline Carey's Kushiel's Justice</p>\n\nMorgan's got a thing about getting me pregnant. He wants to pwn me, you see, and while marriage is necessary for the dramatic (but romantic) resolution of our story, the ultimate way to stamp your ownership over your woman/bitch/little girl/slave is to get her up the duff. Plant your seed. Put a bun in her oven. Clever evolutionary science-types have suggested that we like alphas because they're at the top, so they must have the best quality lurve gravy and thus will ensure the survival of the species. That actually makes sense (or at least, it did before metrosexuality happened. \"My sperm? By Clinique.\").\n\nThe thing that's been kind of bugging me about Morgan is that well...we've only known each other for three weeks. I know that our love is all-encompassing and uber-intense, but don't you have to know somebody a bit longer to guess whether they'll make a half decent parent? Sure, I love that he wants me so much that he wants all these natural, primal things (le swoon), but when I think about it...I kinda want to go travelling first before I get tied down with the sproggage, and it's going to take Vera Wang too long to make my perfect dress for a shotgun wedding (yes, I still care. No, it does not make me a bad person).\n\nPrescription\n\n1) Microguynon -- maybe Morgan doesn't want kids. Plenty of alphas are too busy saving the world, having hotshot, workaholic careers or being rich Peter Pans to realistically want to be fathers, and meeting Mary Sue doesn't break their resolve. I know this isn't the height of wish fulfilment for a lot of women -- but there are women who don't want kids, and they are your readers too (the ones who do want them can still fantasise about changing his mind).\n\n2) Approprion -- marriage and children, for most couples (even the perfect ones!) is usually a slow progression. Sure, accidents happen and some people want to do these things quicker than others, but there's a lot to be said for an alpha who wants to just enjoy his woman for a while first. Even if these things do happen sooner in your story, Morgan doesn't have to be so creepily obsessed by them. Let him not swoon over little girls with his love's eyes, or boys he can bring into the family business. Hell, let him be slightly terrified of them (and let Mary Sue be scared too) -- when he does come around, it'll make it all the more special.\n\nDIAGNOSIS: ME, TARZAN -- YOU, LAME! SYNDROME\n\n<p align=\"center\">\"If you stay, something bad will happen. I think I might hurt you. You don't want to get hurt, do you?\" Patrick Bateman, Brett Easton Ellis's American Psycho</p>\n\nMeet Cain: he's that slightly creepy older guy who lives in a mansion on the hill and has a love of classic literature. I discovered said house and said books when he tied me up in his library and left me there, naked and cold, for about, er...I think it was seventeen hours? Not that I was counting, or anything.\n\nYou'd be forgiven for thinking that Cain doesn't like me very much, because he sure as hell acts like it. I like to be hurt a bit by my guy as much as the next woman -- lush little bruises to mark me as his property? Check. No phone call for a day to keep me on my toes? Bring it on. Domestic abuse disguised as a power game? I might be a fawning female but even I have standards, Cain. Standards! (And you can fuck off with your shitty two-ply toilet paper, because this is not a princess and the pea situation -- you're really just a tightwad, and that is not sexy.)\n\nCain tends to inhabit BDSM and nonhuman stories; it seems to be easier to get away with cunts-with-shoddy-excuses there (bad behaviour? It's ok -- I'm a vampire. Dangerous and disturbing fetish? Don't worry -- I'm at a munch). He occasionally pops up in the Incest category too -- as the aggressive Daddy who makes the little girl cry just so he can get off on wiping her tears away and making it all better. I'm not sure if he's aware that being an alpha is no excuse for treating a woman badly, or that he needs more than a genre to validate his bad taste in seventeenth century literature; fortunately, he's not scary enough to stop me telling him. Fnar.\n\nPrescription\n\n1) Metafetishazol -- so Cain is the product of a deviant mind, and he's there to fulfil a more extreme fetish (if your chosen fetish is being left tied up for seventeen hours, I promise not to judge you. Much). That's fair enough. What he's going to do, though, is do it safely. He's only going to make you think you're in trouble; in other words, nothing he does is going to leave any lasting damage to your body or your mind. A lot of alpha/dom behaviour tends to be explained as being designed to make the woman better/stronger/get in touch with her submissive side, but what a lot of it is written as is just \"all this shit will make you stronger.\" The existence of Post Traumatic Stress Disorder tells us that this is not true.\n\nCain, the internet might not be as pretty as your first edition of Alice in Wonderland, but could you at least Google \"tying a Japanese rope bondage knot\" so I don't get stuck again...? And Daddy, your monster cock is amazing and so much bigger than my boyfriend's -- but going to the ER with vaginal tears was kind of embarrassing.\n\n2) Oxycuntin + Patrocillin -- okay, so Cain likes hurting women and he's not that bothered if they like it. He kind of prefers it if they don't like it, actually. You can still make him your love interest (the psychology of this desire is interesting, but it's way too complex for this little essay), but don't think for a second that just being an alpha validates his behaviour -- he's still a cunt. Probably a misogynist too.\n\nPart of the alpha's appeal is that he's just a bit scary. You know when Cain really gets my adrenaline pumping? When he's a fucking psychopath! Granted, you have to be a special kind of woman to want a bloodthirsty loose cannon in your bed, but we do exist. So make the most of this evil side. Flesh him out. Why is he like this? Why does he enjoy it? Don't patronise the reader with the usual \"misunderstanding\" bollocks -- this guy clearly has issues. Revel in them. Think Patrick Bateman, Humbert Humbert (perhaps not the nymphet bit), Angel before he went all wet blanket, Damon from the Vampire Diaries. Don't waste your time trying to redeem him or make him \"ok\" (if you write him right, your readers will redeem him for you) -- just enjoy him for what he is: un-pc, illegal, inappropriate, about to be sectioned...and kind of yummy.\n\n****\n\nSo we've done the painful part: we've addressed the stereotypes that plague the poor alpha. Confused? In mourning? Slightly aroused? Don't panic.\n\nThere's no reason why you have to ignore every clich\u00e9 when writing your alpha; he wouldn't be an alpha without certain characteristics. Certainly, be careful on how you mix those medications -- they don't all work at once.\n\nTo put things into perspective, here are some alphas that I think we should see more of in fiction -- most of them break one particular mould, rather than smashing them all with their iron fists of literary uberness. They might just give you some ideas, or remind you of some pretty cool alphas that you've read about before.\n\n1) Mr. Three-Dom-Ensional\n\nWilliam is a strong, straight-talking alpha who doesn't take shit from anybody (which he manages to maintain with a somewhat elusive demeanour).But how did he get this way, and why does he behave the way that he does? Sure, maybe he was just born competitive -- but that doesn't give readers (or writers) much to chew on. So don't just think about how William is now; think about what has happened to him (it doesn't have to be a traumatic event), and what he plans for the future. Does he have goals that aren't to do with power, money and sex? Does he have hobbies that are unrelated to that holy trinity? It's common to read about the alpha who just \"is\" -- he never seems to question himself, but he can be an alpha and still do that. It's not the same as being insecure. It's about being self aware, and that's sexy.",
        "We often read about the alpha whose \"bark is worse than his bite\" -- and hey, even tough guys have feelings too! But is it really that simple? Does the bossy, prickly fa\u00e7ade conceal a big teddy bear who just vants to have lotz of bebbez?\n\nMaybe. But I find him a bit pathetic, if I'm honest, so I don't want to read about him.\n\nWhat I do want to read about is the alpha who has his own set of interesting (and possibly deviant) issues. We already touched on this with how bloodthirsty psychopaths seem to make awesome love interests (not very comfortable to see that written down, is it, hmm? But why do you like vampire fiction again...?), but to tone it down a little: how do his insecurities inform what he is? Exactly how far is this alpha prepared to go to assert his dominance, and does he ever worry about crossing his own self-imposed line?\n\nThink about his dialogue, too; does William have to bounce between a guarded killjoy and a sex-crazed WWF wrestler? Can he be snarky and sarcastic, instead? Could he even be a little bit chatty? Dare I say it -- could your alpha talk like a normal person? It makes things ten times more interesting when you get him into the bedroom and discover his other side...\n\nFinally -- think about his position within the pack. One of the things that defines the alpha is the way that other men behave around him. Don't just surround him with yes boys or Judases; mix these guys up, too. Make your beta better.\n\n2) Mr. Grasshopper\n\nWe tend to see alphas who are older (sometimes centuries older) and they're mostly very confident in their dominant natures -- because that's part of being dominant, isn't it...?\n\nNot exactly.\n\nThe transitioning alpha is a fascinating creature. For whatever reason, he's realised that it is in his nature to lead and to be in control, and the shame of occupying the role that cunts usually inhabit is slipping away. He's experimenting. He's not quite sure of himself, and he's not ashamed to admit that. He's often quite young, too. He's occasionally done as a clich\u00e9d \"my wife/girlfriend left me, so I'm not taking any more shit,\" type -- but it's so much more than that. He's not becoming something through deviant Darwinism: he's embracing what was always there. Sometimes he's revelling in his new experiences, and sometimes he's fucking up, lead balloon style. Either way -- I think he's my favourite; fledgling arrogance, buoyant enthusiasm, ever teetering on the edge of control? Mmm. Yes please.\n\nSo if he's not yet a full-blooded alpha, how is Mr. Grasshopper still sexy? Well. Imagine the boy next door, who's quiet and foppish and kind of cute. You never really thought he was your type. Now, imagine him standing over you bare-chested, pressing a firm palm over your left breast and inhaling deeply. Circling your nipple with his thumb as if he's never seen something so perfect. \"Mine,\" he says, squeezing down.\n\nMy work here is done.\n\n3) Mr. Twist Out of Water\n\nThe alpha occupies a number of usual haunts: the business bad-ass has his office and plush hotel rooms; the Lord of the Manor has his study with the roaring fire and his dungeon with the shackles; the vampire has his somewhat bare and impersonal boudoir (usually filled with priceless antiques), or the alley around the back of Tesco's. He's not just made of flesh and teeth and questionable sexual practices: it's about his space, his life, and the people and things he surrounds himself with.\n\nWhat about those guys we don't always think about as alphas, and the spaces they inhabit? The gamers at their tournaments, the emos at their gigs, the librarians (hello Giles!), the vicars, the hobos, the drummers, the yoga guys, the angels (proper angels, not just \"nice boys\" -- although nice boys can make intriguing alphas too). Take that guy who you think doesn't fit into the mould: warm him up. Get him pliable. Stuff him in. How's he looking? Pretty damn good, huh?\n\n(In fact, if anybody can write a convincing -- and not spoof -- story about an impotent alpha, I will send you a picture of my breasts. Which are awesome, by the way. Word).\n\nAnother relevant point here is that the traditional alpha is somewhat outdated and old fashioned (again, we see this played on a lot with vampires who have been around for centuries, or older Daddy/dom figures). What does it mean to be an alpha in the modern world, and how has he evolved?\n\n4) Mr. Big(amy)\n\nWe touched on the biological appeal of alphas earlier; how the (literal) cream of the crop is obviously going to produce the strongest offspring. This theme is prevalent in alpha stories. But what gets ignored, time and time again, is the point that such a man is going to be in demand by more than one woman -- and he's not going to resist, not all the time. He's going to have his cake and eat it, because he can. Nature is telling him to spread his seed, so he's going to put it on toast. And pancakes. And crackers. And Nancy, that hot chick who works at the bookstore.\n\nWho dares to write about the polyamorous alpha? (Not the cheating alpha; he's an entirely different case). It's been done before -- in fact, the Cain type mentioned earlier seems to embrace this side of himself most often -- but what isn't done a lot is an exploration of the implications. The women around him seem to just accept it because Cain is an alpha, and what he says goes. That might be all good for the male reader's wish fulfilment, but it also gets old pretty fast; why not get your teeth into the juicy conflict here? So this alpha wants more than one woman -- women who don't just roll over and bat their eyelashes at him -- and he wants to make it work. How's he going to get that?\n\n5) Mr. Match Made in Hell\n\nAll too often, the alpha meets a sweet, innocent girl and sees the error of his ways. Last Friday? He was kicking it with the guys, scoping out the chicks (while secretly thinking how lame his friends were for enjoying such pastimes, since he's better than that) and throwing a few beers/virgin nuns down his neck. This Friday? He's going to Ikea with Bethany and then meeting her friends for dinner; sure, it'll be awkward at first, but he'll win them over in the end through his dry humour, evident love for Bethany and the fact that even her guy friends will secretly want to lick his shapely man-buttocks.\n\nHold up there.\n\nAlphas like a challenge, right? So what the hell is he doing with Bethany, the pouty virgin who's probably not going to let him near her asshole until they're in the throes of a midlife crisis? (Contrary to popular belief, women do not relax all their inhibitions or preferences for the \"right man\"). Yeah, no guy has been good enough for her to bend her morals of steel -- yet -- but come on. Bethany lives in wait for her alpha. There's a reason that the best ice cream in the world is named after two men; women melt for it, and for them (I wonder if Ben and Jerry are alphas?). It's that easy if you know how -- and the alpha does.\n\nYou know who'd be a real challenge? Zara. The girl who is possibly slightly better than him at the office. The one who likes sex as much as he does, and is a lot more likely to want the things he wants in bed (and be experienced enough to be good at them). He's a confident guy; he doesn't need a girl who's never had a lover before just to bolster his ego...does he? So awesome is he, surely her previous lovers will pale into insignificance! Just because Zara dares to beat him at a few things, doesn't mean that she's dominant herself -- she could make the ultimate sub. Now there's a challenge.\n\nThere's a tendency within genre fiction to have the heroine somehow \"redeem\" her alpha male. If she likes everything about him, though -- why would she want to do that? How about a girl (like Zara) who just accepts him as he is, and enjoys it? Why have our jagged, rough couple morphed into snuggly bears for the end of the novel? That's a very lazy way to resolve conflict. Why does our alpha have to change for the \"better\", and how can you do this differently? The conflict needs to come from elsewhere.\n\n****\n\nOh, you're still here?\n\nSorry. Daddy put me on the naughty step for doing all that thinking, and then I had to redo my pigtails and rub the cookie crumbs off my lip gloss.\n\nWell, that's me done. Officially alpha'd out for at least...ooh, three hours. I hope I've offered a little insight into the alpha in fiction, and I hope you've come away with some cool new ideas. Or maybe you're just embarrassed about your old ones (if it helps, that happens to me all the time. Never give a blow job with a breath strip on your tongue). Either way: it's been fascinating, so thanks for coming along for the ride.\n\nIf you have anything to add, please do so in the comments section -- did I miss anything? Did I get it wrong? Do I owe you for a dry-cleaning bill after what you did to your trousers? Or do you have a rather fabulous example of an alpha story that breaks the mould?\n\nI wish you many fun adventures in the reading and writing of alphas. This has been one small step for bossy boys, but one giant step for -- okay, okay, I'm sorry, Daddy! Don't do it again! Yes, alphas never take small steps...sob, whimper...ooh, that tickles. "
    ],
    "authorname": "Firebrain",
    "tags": [
        "writing how to",
        "alpha",
        "vampire",
        "stereotype",
        "writing advice",
        "writing guide",
        "author advice",
        "writing erotica",
        "analysis"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/down-boy"
}