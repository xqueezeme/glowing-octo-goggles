{
    "title": "My Naive Fianc\u00e9 Goes to Prom",
    "pages": [
        "This story is part of my Naive Boyfriend/Fiance series, but works as a standalone. You can read it without having read the others.\n\nI could have submitted this story in a number of different categories, but I went with this one because the main character experiences it second-hand or as a voyeur. The story's themes also include cheating, exhibitionism, group play, first time and some light incest play.\n\nAll characters are at least 18 years of age.\n\n*****\n\nCHAPTER 1\n\nI swear I wasn't as dumb as my little sister when I was her age. I worked hard to make sure I was never in a stupid situation like Annie is now. And who had to bail her out again? That's right, her older sister. Me.\n\nSee, Annie is about to graduate high school. Tonight is the night of her Senior Prom and, against my advice, she had dated that douchebag Jeremy most of this year. Turns out I was right, he's a scumhole, and she caught him making out with her friend Lauren a couple months ago. I was there to comfort her and dry her tears.\n\nOk, I'm being a bit overdramatic. Jeremy was a true abusive asshole. Mean, manipulative, the whole nine yards. My parents and I were thrilled when they finally broke up. She was a wreck afterward. Sullen, withdrawn, depressed. I remember my senior year fondly, my last big hurrah with my childhood friends. But hers was passing her by as she cried in her room. We weren't sure if she'd ever pull out of it, but then David, my fiance, came to the rescue.\n\nThe two of them had never been particularly close, and I think that lack of history made it easier for him to open her up. He and I had moved in with my parents to save money while I was in grad school, so the two of them ended up spending a lot of time together. He somehow became an expert at cheering her up. He made her smile and laugh again. It warmed my heart to come home from class and see them cuddled up together on the couch, watching a movie and making little inside jokes.\n\nTheir closeness did bug me from time to time. She clearly had a crush on him. David, bless his naive little heart, said that was impossible, but he could never see things that were right in front of his face. She was always trying to get his attention or hang out with him or cuddle him. I'd see them holding hands from time to time. I was glad she could see not all guys were cheating assholes like Jeremy and it was adorable seeing her trying to pretend to not have a crush on him. But he's my fiance! Of course my parents picked up on all this and started referring to David as Annie's boyfriend just to wind me up. All that was fine, I could deal with it. I wished she would let me cuddle with my fiance sometimes and for goodness sake wear a bra around the house more often, but none of it was that big a deal. Until her little scheme came to light.\n\nSee, at some point she came up with this brilliant lie to make Jeremy and Lauren jealous. She had a new boyfriend. One who was in college. He conveniently had to cancel last minute every time she was going to introduce him to her friends. I thought pretend boyfriends were more of a Junior High scheme.\n\nAnyway, now it's prom, and she didn't want her pretend boyfriend to stand her up on the last big night of her high school career. So after a bunch of crying and begging on her part and plenty of lectures and disappointed sighs on mine, I'm standing here at my parents' house, getting ready to send her off to her prom with her real fake boyfriend, David.\n\nDavid's older than college age, of course (28, to be specific), but he can pass well enough now that he shaved his face clean. I have to admit that they look cute together, him in his cheapest suit (have to play up his awkward teen bona fides), her in her formal gown. Not as cute as me and him, of course, but cute nonetheless. \n\nI made Annie promise that this wasn't about making Jeremy and Lauren jealous. Life's too short for jealousy and revenge, and I want Annie to move forward. I think I had mostly gotten through to her. Not fully, judging by the dress she chose. Her figure had gone from beanpole to hourglass basically overnight and she flaunted it this evening. Her neckline plunged, showing a deep canyon of cleavage, and the dress fit tightly to her lithe form well past the flare of her hips. It showed off the bubble butt she'd gotten from spending all that time crouched on the volleyball team. Her ex had made her feel awful about her body, calling her a boy when she was thin and then fat when her chest developed. After they broke up, she only wore baggy clothes that hid her body. After David started opening her up, she began wearing normal clothes again, though was still shy about anyone looking at her. So I was glad she felt comfortable wearing something somewhat revealing.\n\n\"Keep in touch,\" I said as I gave David a kiss goodbye. \"I wanna know how it goes and I can distract you when all the high school drama gets to be too much.\"\n\n\"Thanks,\" he said, shifting from one foot to the other. \"Listen, what do I do if I, uhh...I mean, I'm supposed to be Annie's boyfriend.\"\n\n\"And you'll be sweet and kind to her like a good boyfriend should be,\" I said.\n\n\"Yes, of course,\" he said. \"But I mean like, we're supposed to be two young lovers attending prom together. She's your sister, so I've only ever like, given her hugs and stuff. But it might seem weird if we only like, hold hands and dance like we're at Bible Camp.\"\n\nI giggled. I remember how school dances were. They were faculty supervised, so you couldn't get away with much hanky panky, but most high school couples took advantage of the darkness and anonymity of a large mass of dancing teens to make out, feel each other up, etc. Caleb and Jessica supposedly even fucked on the floor of our prom, though I never believed the rumor. Regardless, David had a point. Her ex had constantly told her that no guy wanted to touch her. If she finally brought in her new boyfriend and he wouldn't touch her either? Bad news.\n\n\"You're right,\" I said. \"I guess you'll have to be a little more, uh, intimate than that. Just remember that you're my fiance and she's my sister, which means she'll also be your sister once we get married.\"\n\n\"Good point,\" he said with a smile. \"I'll try to just feel it out and make sure she seems loved and adored by her pretend boyfriend without actually, y'know...crossing any lines.\"\n\nHe's so considerate. I'm so lucky.\n\nI waved goodbye as my parents drove them away. They were going to dinner with Annie's group of friends, which included her volleyball teammates Victoria, Julia and their boyfriends Rick and Tommy, along with their single friend Nina. After the dance, the seven of them were spending the rest of the night at Julia's family's house. Then tomorrow, I'd meet them at our family's lakehouse, where we would spend the day and night before returning the next morning. Somehow, Annie and her friends convinced all the parents that I was enough adult supervision for the group.\n\nI had dinner with my parents, then we settled in to watch a movie. I pulled out my phone and texted David.\n\nMe: [hey love, how's it going so far?]\n\nDavid: [good, we're in the limo right now from dinner to the dance.]\n\nMe: [how's life as Annie's boyfriend?]\n\nDavid: [alright so far. No one has caught on yet. Julia and Victoria both gushed to Annie that I was handsome and mature, haha.]\n\nMe: [lol]\n\nDavid: [Something weird happened at dinner though.]\n\nI could see him typing for a while, then stop, then type some more, etc. Finally, the text came through.\n\nDavid: [Julia teased Annie about how much cleavage she was showing and that I must really like her boobs. Annie was just playing along and joked that yeah, I'm obsessed with them and always staring. I had been trying to avoid checking out her body since she's your sister, but I had to play along and stare at her cleavage like a horny 20 year old.]\n\nI sighed. I obviously didn't like my fiance staring at my sister's boobs. They're bigger than mine and of course much perkier since she's so much younger. She loved bouncing around the house braless whenever David was there and my parents weren't. I reminded myself that he was probably just as uncomfortable with it as I was. I just wished he wasn't so naive that he could be talked into anything.\n\nMe: [Ugh, that's annoying. Julia's probably just jealous of Annie's boobs, so had to make a thing of it. Sorry babe.]\n\nHe typed for a long time. A much longer time. Finally, my phone dinged.\n\nDavid: [Yeah. Well that's why I had to do what I did later. During dessert, Annie dropped a bite of chocolate cake down the front of her dress and Julia said that I was probably dying to get it for her. Annie was embarrassed and said no, that we didn't do that kind of stuff. Then everyone else kinda went nuts, saying they couldn't believe that we'd been dating for months and she'd never let me touch her boobs when I was clearly so obsessed with them. Anyway, they all started chanting \"GET THAT CAKE\" at us. She was blushing like crazy and I didn't know what to do, but then she just turned and pushed her chest out at me. So I reached in between her boobs and scooped the cake out.]\n\nI groaned. I'd already come to terms with the idea of them acting sweet to each other and grinding on each other all night. But they weren't even to the dance yet and her friends had already forced him to touch her boobs. I suppose they didn't really have a choice, though. As much as I wish he'd called me before diving his hand down the front of my sister's dress, any hesitation would have seemed suspicious at best and unloving at worst.\n\nDavid: [Are you mad?]\n\nMe: [I'm not thrilled, but I guess you had no choice.]\n\nDavid: [Yeah. And they wanted me to lick her chest clean, but we were in the middle of a crowded restaurant. So I had to stick my hand between her boobs a few times to get it all clean.]\n\nI guess he got to touch her big, perky breasts multiple times. I wonder how much they actually resisted. With all her complexes over her body, I doubt she wanted to have a guy feel her up in front of all her friends. But I'm no dummy. I know how amazing her breasts are and how badly any straight guy would want to touch them, even my fiance. I wonder if he just got in and out of her cleavage quickly or if he let his fingers fish around in there for as long as he could get away with. Sigh.\n\nMe: [So where are you now?]\n\nDavid: [We're about to arrive at the dance, I'll check in with you later.]\n\nI tried to pay attention to the movie I was watching with my parents, but it was tough to focus. My fiance was across town with my sister. I had given them permission to act at least somewhat intimate on the dancefloor. He had already felt her tits (kind of). My brain kept serving me images of the two of them locked in an embrace, tongues down each others' throats, hands all over each others' bodies. Maybe they'd even find a dark corner to explore even further.\n\nI shook my head. I was driving myself crazy. The movie finished and my parents went to bed. I texted David, asking how the dance was going. He didn't respond right away, so I prepared for bed too. When I got to my room, I noticed a missed call from him. I immediately called back.\n\n\"Hey darling, how's the dance going?\" I asked.\n\n\"Hey, good!\" he said. \"I stepped outside for some air. Those teens are relentless!\"\n\n\"What do you mean?\" I asked.\n\n\"Oh, just that they're full of energy,\" he said. \"And very persistent.\"\n\n\"Persistent?\"\n\n\"Annie's friends are,\" he said. \"Maybe they're just protective of her since her ex was such an ass. Like, as soon as we hit the dance floor, all the couples were grinding all up on each other. Which is fine, they're horny teens and this is a school dance. But then they noticed that me and Annie were dancing apart, so they basically bullied us into grinding on each other like they were.\"\n\nOf course. Ugh.\n\n\"Which was kind of awkward at first, obviously,\" he went on. \"Like, we talked about this before I left, but it was still weird. Like, I know her as your dorky little sister who needs rides to volleyball practice and I'm probably just her sister's dorky boyfriend to her. We snuggle sometimes at home, but nothing sensual. And then we had to rub our sweaty bodies against each other like it was the most desirable thing in the world.\"\n\n\"Oof, yeah, awkward,\" I said.\n\n\"It was too awkward to do that face-to-face,\" he said. \"So at first we just danced against each other, her in front of me, facing away. It became less uncomfortable after the first few minutes, and we were able to melt into each other a bit more. It was actually kind of nice, because I feel like she and I have only recently become friends on our own terms and being able to dance together felt like it really solidified that.\"\n\n\"Great,\" I said. I tried not to sound too sarcastic. It's great that my sister was bonding with her future brother-in-law, but obviously the circumstances were a bit suspect.\n\n\"Yeah, it was for a while,\" he said. \"Then the inevitable happened.\" He cleared his throat, stuttered, then cleared it again. Clearly he was getting nervous. \"I um, well, I couldn't help but...you see, her butt was rubbing against my crotch and she's got a really, uh, sexy, I mean shapely, uh, rear. And I couldn't help but, y'know, get an erection.\"\n\n\"Uh huh,\" I said. I could hear him gulp. I wasn't too upset. I know he gets boners easily and I figured he would have given the situation. But I was still gonna let him twist in the wind on this one.\n\n\"She didn't notice at first,\" he went on, speaking quickly because of his nerves. \"And then she did and gave me this look and I tried to explain, but the music was so loud, but I think she got it. Anyway, then she turned around so we were face-to-face. I mean, then my boner was just pressed against her tummy, but it was less intense than against her ass.\"\n\n\"Uh huh,\" I said, still making him continue.\n\n\"Also, guys kept staring at her cleavage, obviously,\" he continued. \"I mean, I was too, because I was 'supposed to' after everything at dinner. But I was her date so I was allowed. Anyway, this let her mash her boobs into my chest to protect against all the gawkers.\" I didn't let him respond and let him sit in the silence. \"Are you mad at me?\" he asked.\n\n\"No,\" I said with a sigh. \"I'm not like, excited about all this but I guess that's what I agreed to when I said she could take you as her date.\"\n\n\"I forgot how horny teens are,\" he said.\n\n\"I guess it's been a few years for us,\" I said.\n\n\"Yeah, so, I actually have a question about that,\" he said. \"Her friends are all making out with their boyfriends and dates. Annie and I haven't yet, but it's gotten kind of awkward. They kept chanting for us to kiss on the dancefloor. We said we weren't comfortable with PDA, but they kept pushing it. Then, when I was leaving to come out here and call you, Victoria cornered me and demanded to know why I wouldn't kiss her.\"\n\n\"Ugh,\" I groaned.\n\n\"I tried to play it off,\" he went on. \"But she lectured me about how her ex was so unloving and if I couldn't kiss her in public that meant I was also an asshole or something. It was really, uh, a lot.\"\n\n\"Yeah, Victoria can be like that,\" I said. She was always bossing their group around.\n\n\"Well, um, I kinda uh...promised her that I'd kiss Annie when I got back to the dance,\" he said.\n\n\"What?!\" I said. Dancing was one thing, but I really didn't want my fiance kissing my sister.\n\n\"I didn't want to,\" he said. \"But she wouldn't let it go. She was starting to get suspicious about why I had to come outside anyway. I wanted to call you ASAP, so I didn't know what else to do.\"\n\nI sighed heavily. \"What does Annie think?\" I asked.\n\n\"I don't know, I haven't had a chance to talk to her,\" he said.\n\n\"Fine,\" I said. \"If she wants you to, I guess you have my permission to kiss her. Just don't do anything more than what you have to to blend in.\"\n\n\"Of course,\" he said. \"This has all only been about giving Annie the best prom experience.\"\n\nI agreed and we said our goodbyes. I settled into bed and tried to fall asleep, but my mind couldn't leave the topic.\n\nI'm no idiot, I know how hot my little sister has gotten. Any guy would love to make out with her, gawk at her boobs, grind on her, whatever else they've been doing. I tried to be less cynical about it, but it was tough. I just wished David was a little less naive. Victoria and everyone else weren't concerned with Annie's honor, or whatever. They just didn't want to feel ashamed being horny bimbos with their dates when David and Annie were right there behaving themselves. Annie's too young to tell the difference, and these sorts of emotional layers are the type that go completely over David's head. I suppose it's nice he tries to see the best in people, but I'm always worried about him getting taken advantage of.\n\nI told myself over and over again that there wasn't much to worry about. My sister and fiance wouldn't betray me after all. Sure, she has a big crush on him and his obliviousness knew no end, but they were at a supervised school dance. They're going to kiss and touch a little, but nothing serious could really happen. After the dance ended, they were going to crash at Julia's parents' house, then drive to their lake house in the morning, where I'd be to keep an eye on them. It'll be weird walking down the aisle, knowing that my maid-of-honor had made out with my groom and even felt him grind his hard cock against her ass, but I guess that's what being a good sister means.\n\n*****\n\nCHAPTER 2\n\nI was able to fall asleep eventually. I was pretty annoyed when I woke up to see zero updates from either of them about the rest of the night. I asked David how it went, but got no immediate response, which wasn't a surprise. I was all over the place trying to leave on time and I'm sure they were too. The lakehouse is on an island out in the lake and a ferry only makes the trip between it and the mainland a few times during the day. If we missed the first ferry, it'd be a few hours before it made another trip. It was an hour drive from our town to the ferry, and I didn't get a response from David saying they were on the road until it was 45 minutes before the ferry left.\n\nThe van carrying the high schoolers didn't arrive until they were about to pull the ferry ramp up. They just barely made it on, but they did. After exchanging pleasantries with the tired teenagers, I was able to pull David away from them to talk.\n\n\"How'd last night go?\" I asked.\n\n\"Things got kinda wild. I tried to stick to what you said, but...\" he said, trailing off.\n\nNot the response I wanted. I don't know why I keep having faith David can navigate weird circumstances when he keeps getting talked into doing this, that and the other.\n\n\"What happened?\" I asked.\n\n\"Nothing super crazy or anything. Just trying to figure out how to say it.\"\n\n\"Why don't you just start at the beginning.\"\n\nHe grunted, then sighed. Ugh, another long story, I thought. I reminded myself that everything was supervised and nothing could really happen.\n\n\"After we talked last night, I went back into the dance and started dancing with Annie again,\" he said. \"She was acting really weird, just looking at me and blushing. I figured Victoria must have told her that I'd promised to kiss her, which she later confirmed was right. I thought she was feeling awkward about it, but I guess she was just nervous, because after a few moments, she just grabbed my face and kissed ME.\"\n\n\"Woah.\"\n\n\"Yeah,\" he went on. \"She probably just wanted to get it over with after she knew it was going to happen. Anyway, after we kissed, all her friends cheered and made us kiss again. I thought that was going to be it, but then she opened her mouth and started french kissing me. I thought a closed-mouth kiss would be enough, but I didn't want to embarrass her in front of everyone, so I just went along with it.\"",
        "Great. The teens bullied my naive fiance into making out with my sister. Hardly a surprise, obviously, but still. Ugh.\n\n\"And I guess making out wasn't even good enough for Victoria,\" he continued. \"Because then she shouted 'GRAB HER ASS' and pushed my hand down til it was, well, grabbing her ass. Annie squeaked in surprise because she didn't think I'd actually do it and didn't see that Victoria had made me. So then she grabbed my ass in return.\"\n\nGood lord. I wanted to believe David, but I know how nice Annie's perky little bubble butt would feel. Then again, Victoria was the type to make him do it. Regardless, ugh.\n\n\"So then the rest of the night we had to keep making out and grabbing each others' asses to keep up appearances,\" he said.\n\nSheesh. How naive could he be? He didn't have to do anything he didn't want to. Clearly the first time would have been enough to show that he liked her body and wasn't some asshole who'd shame her. He just couldn't think on that level I guess.\n\n\"That probably wasn't all necessary but I guess I wasn't there,\" I responded.\n\n\"We just tried to go with the flow and not push anything,\" he said. \"Trust me, we could have done a lot more. Julia and her boyfriend would have had sex on the dancefloor if the teachers didn't keep stopping them, lol.\" \n\n\"Did anything else happen at the dance?\"\n\n\"Yeah, but I don't know if I should tell you,\" he answered.\n\n\"Excuse me, that is NOT an answer you can give,\" I said, fuming. \"I'm being extremely generous allowing you both to do this, you will NOT hide anything from me.\"\n\n\"No, not because we did anything bad,\" he said. \"Just that it's embarrassing for Annie and I feel bad telling you.\"\n\n\"I'm her sister,\" I said. \"I've seen her humiliate herself a billion times. Tell me.\"\n\n\"Okay...well this is from late in the night, almost right before the dance ended,\" he began. \"We'd been making out and dancing for a while and I guess it was getting to her. We were facing each other and her chest was smashed into mine and she was kinda rubbing her boobs back and forth across my chest and my leg was between hers and she was kinda grinding on it. I was grabbing her ass with one hand and had the other gripping her hair as we made out. And well, she came.\"\n\n\"She WHAT?!\" I shouted.\n\n\"Yeah,\" he said. \"Had an orgasm. It surprised her, obviously. I could tell something was up because she suddenly froze up and her eyes shot open. I tried to ask what was wrong, but she just went 'no no no no no' and then she clamped her thighs around my leg. I was worried she was peeing herself or something, but then she pressed her lips to mine and moaned really loudly into my mouth. I just held her tight and massaged her body as she peaked and then came down.\"\n\n\"Wow.\"\n\n\"Yeah. She was mortified. I tried to comfort her, but she was so ashamed. At least no one else saw what happened.\"\n\nMy god. I couldn't believe my sister orgasmed on my fiance. Granted, it was probably an accident and she was incredibly embarrassed. But still, that doesn't give her the right. I thought about finding her on the ferry and screaming at her, but I calmed myself down. It was an accident and the last thing she needed was her sister slut-shaming her during her prom. At least I could tease her about it for the rest of her life.\n\n\"The lights came up soon after that to signal the end of the dance,\" he went on. \"I joked with her that at least it was her that orgasmed and not me, otherwise the whole front of my pants would be wet, lol. Not that I was in great shape. I mean, we'd been grinding and making out the whole night and she'd just cum while rubbing against me, so I was THROBBING. Annie did her best to shield it from everyone else, but a couple of the girls saw and teased me about the tent I was making. Saying Annie had better take care of me soon or my blue balls would kill me, haha.\"\n\n\"Ok, so the dance ended. So you just went back to Julia's or what?\" I asked.\n\n\"Yeah, pretty much,\" he said. \"They'd set up a bunch of air mattresses and sleeping bags and such. Guys were supposed to sleep in the living room and girls in Julia's bedroom, but as soon as her parents went to bed, all the girls came out and said that couples were going to sleep together.\"\n\n\"Ugh, of course\"\n\n\"I know,\" he said. \"So Julia took her boyfriend into her room, and the rest of us just doubled up in the living room beds. Me and Annie were on the couch. It was pretty big, but we still had to smash in there together.\"\n\n\"Ugh. Were you able to sleep at least?\" I asked.\n\n\"Yeah, eventually,\" he said. \"The girls hadn't come out just to cuddle and fall asleep of course. Once the giggling and whispering died down, we could hear Victoria and Rick making out and, uh...doing more.\"\n\n\"They were hooking up? Right there in front of you??\" They were teens, so this was fully believable, but still a little surprising.\n\n\"I mean, it was dark and everyone was covered, but yeah, basically,\" he said. \"Annie whispered to me, asking if we should make out too to fit in. I thought we didn't have to anymore because it was dark and we were supposed to be sleeping. We decided we should err on the side of caution.\"\n\n\"So you just went to sleep.\"\n\n\"No, we made out.\"\n\n\"Ugh, darling, this is too much,\" I said. Why did I think he'd stand up to the peer pressure?\n\n\"I know, but we'd made out so much over the course of the evening, I felt like it wouldn't really matter,\" he said. \"At least, at first. But I didn't realize how much different it would be. I mean, at the dance we were in public in the light and fully dressed in formal clothes. But it felt a lot different to be making out in the dark under the covers, where it felt like a secret between the two of us. Plus, it was really hot in that living room because so many people were crowded together in it. I was only in my boxers and Annie was only in her panties and an oversized t-shirt.\"\n\n\"Yeah, that's definitely different.\"\n\n\"Seriously,\" he said. \"Plus, all her friends' talk about my blue balls had gone to Annie's head. I thought we'd just make out and squeeze each others' butts some more, but then her hand travelled around to my front.\"\n\n\"No.\"\n\n\"Yeah,\" he said. \"I was too shocked at first, so she rubbed my hard dick through my boxers some before I could respond. I asked her if that was too far, but she just said she owed me one and wanted to make sure I slept ok.\"\n\n\"I'm glad she was being altruistic, but that really wasn't necessary,\" I said. God, women could play David so easily.\n\n\"I know,\" he said. \"And I stopped her eventually. It was tough, though, because it felt so good after the long night of teasing. And she kept saying how amazing my dick felt and how lucky she was to finally touch it. I guess it's something she'd been thinking about for a while. Plus, we were barely wearing anything and she kept rubbing her big braless tits against me and making the cutest little pouting noises whenever I tried to stop her. But then she tried to reach inside my boxers and I figured that was enough and told her goodnight and rolled over.\"\n\n\"I'm glad you were able to make a stand,\" I said. I didn't need to hear all the details of their little makeout session, but I could appreciate how tough it'd be for him to say no and roll over in that situation. Maybe my naive little fiance was finally growing up.\n\n\"Yeah, same,\" he said. \"And soon after Victoria and Rick quieted down. They were pretty loud considering we weren't supposed to be sleeping together and also were all jammed in the same room together. Plus, Nina kept loudly complaining that we were hooking up and she had to lay there by herself. But we were finally able to get to sleep.\"\n\n\"That's good,\" I said. \"And then you drove up to the lake?\"\n\n\"Ultimately, yeah,\" he said. \"Though there was some drama in the morning.\"\n\n\"Did her parents discover all you together?\" I asked.\n\n\"Yeah, but that wasn't it, this happened before,\" he said. \"They don't have curtains in their living room, so I woke up as soon as the sun came up. I was on the outside of the couch and Annie was spooning me from behind. And I guess she wanted to finish in her sleep what she had started the night before.\"\n\n\"What do you mean?\" I asked.\n\n\"Well, she was sort of softly stroking my lower belly when I woke up,\" he said. \"Like kind of along the waist of my boxers. I had morning wood, so it was only a matter of time before her fingers bumped against the end of it. And then she grabbed it and started stroking it through the boxers again.\"\n\n\"Annie, what the hell?\" I said through clenched teeth. I was glad she was feeling bold enough to make a move on a guy, but I really wish she'd chosen someone other than my fiance.\n\n\"Seriously,\" he said. \"And I thought she was asleep, so I didn't know what to do. I was worried if I woke her, she'd notice my dick was in her hand and assume I'd forced her to grab me while she slept. So I tried to just lay there, but then her fingers ducked inside the waist of my boxers and soon she was softly stroking my bare erection with the tips of her little fingers.\"\n\n\"Did anyone see you?\" I asked.\n\n\"No, everyone else was asleep, thank goodness,\" he said. \"Especially since it was so hot that we'd thrown the sheets off us. So I was laying at the edge of the couch, naked except for my boxers, with her stroking my obvious erection. It was torture, I thought we would get caught at any moment.\"\n\n\"Why didn't you stop her?\" I asked. \"Or wake her up?\"\n\n\"That was just as scary,\" he said. \"Like I mentioned, I was worried she'd think I'd put her hand on my dick while she slept, not that she'd accidentally done it in her sleep. So I tried to very gently pull her hand out of my shorts, when she very softly shushed me and whispered in my ear to let her finish what she'd started last night.\"\n\n\"Wow, she was still on that?\" I asked.\n\n\"Yeah,\" he said. \"And since she was spooning me, I couldn't really say anything to her without everyone else in the room hearing. But her lips were right up against my ear and making my whole body tingle as she kept whispering to me how much she wanted to make my big dick cum, how bad of a date she was for teasing me all night and not getting me off, how she couldn't let her 'boyfriend' be in pain and so on. She was also nibbling on my ear lobe, which was sending shivers up and down my whole body. It's seriously a miracle that I didn't bust in my shorts.\"\n\n\"Sheesh, Annie,\" I muttered.\n\n\"Thankfully, I was rescued by Julia's parents busting in,\" he said. \"I covered myself up before they saw me. They gave us a quick lecture about not staying in our respective rooms, but there were more important matters. Like that we were about to miss the ferry.\"\n\n\"Yeah, you guys barely made it,\" I said.\n\n\"Everyone was still really sweaty and gross from the dance,\" he went on. \"So we all wanted showers. But since we'd slept so late, we didn't really have time. So while Julia's parents were frantically trying to load the van, Julia and Victoria decided that the couples would just have to shower together.\"\n\n\"What?!\" I said, laughing out loud. \"You can't be serious.\"\n\n\"It's true,\" he said, chuckling. \"Annie and I were like, 'uhhh' because we've obviously never seen each other naked, but all the other couples were on board, so suddenly it was just happening.\"\n\nI facepalmed myself. Just because Julia and Victoria wanted to shower with their boyfriends didn't mean that David and Annie had to. Geez, they really would just go along with anything. Annie's an impressionable teen, but David really should know better.\n\n\"You're kidding,\" I said.\n\n\"I wish,\" he said.\n\n\"How did it go?\" I asked.\n\n\"We were in the last couple to go,\" he said. \"With how uncomfortable she's been showing any part of her body recently, I knew this would be really hard for her. I said I'd keep my underwear on so it wouldn't be weird, and she said she would too. I thought that meant her sleep shirt too, but then suddenly she turned her back to me and pulled it off! I couldn't believe it. She covered her boobs with her hands before she turned back around, but it was still really weird to be standing there half-naked with her. My heart was pounding and I could tell she was really nervous too because she kept blushing. I mean, she's my future sister-in-law, and here we were in only our underwear, preparing to cram ourselves into a little stall and get soaking wet. Plus, my boner hadn't gone down at all, so it was super obvious and kept grabbing her attention. Also, her boobs are pretty big, so her little hands didn't do much to cover them and her panties were practically a thong so her butt was mostly on display. So we had to just hang out there basically naked and act like we weren't really distracted by each others' bodies while we waited for the water to heat up.\"\n\n\"Right,\" I said, trying to move it along. I was glad that my sister was overcoming some of her hangups about her body, but I didn't need the full play-by-play. \"So then you showered?\"\n\n\"Yeah,\" he said. \"Which was obviously weird. I've never showered in boxers before and obviously never with your sister. She was really shy about it all, of course, so she made me promise not to look at her when she dropped her arms. I said sure because I knew she didn't want to try to wash herself while also covering her boobs.\"\n\n\"Of course,\" I said. I was glad they were keeping some decency.\n\n\"As we were getting in, she had an idea to save time,\" he went on. \"That first, I would wash my front while she washed my back, then we would switch and team up to wash her body. That sounded fine to me, so we got to work on me. When she got to my waist, she said my boxers covered more than she expected and asked if I had any ideas on what to do because she didn't want her boyfriend to have a sweaty butt all weekend. She had a good point and we didn't have much time. So I said I didn't mind if she saw my butt, and if she was okay with it, I could just take them off. She agreed that was probably the best option and pulled them off for me.\"\n\n\"So you were naked?\" I asked.\n\n\"Yeah, but still facing away from her,\" he said. \"So she just saw my butt. She'd been grabbing and squeezing it a bunch the night before, so I didn't think it'd be a big deal if she saw it briefly.\"\n\nI guess he was right, but based on all her recent behavior, she would of course be super excited to see him naked in any way. I'm sure the worry about his sweaty butt was just a play to get him out of his remaining clothes, but of course he was too naive to see through that.\n\n\"Anyway, she washed my butt and my legs while I did my waist and crotch. We finished up with me and I turned around to rinse my front off,\" he continued. \"A little too quickly, though, because she hadn't turned away yet. She squealed and covered her boobs. I wasn't thinking about it, so I didn't see anything, but she was able to see my entire front.\"\n\n\"Including your...?\" I asked.\n\n\"Yeah, she saw my dick,\" he said. \"And it was still really hard from all her teasing earlier. It was my fault, though, because I forgot to wait for her to turn around first. I didn't even realize I was showing it to her at first because I was too busy rinsing off. Then she was like 'Wow, Davey'. I saw her standing, holding her boobs, staring down at my throbbing erection.\"\n\nOf course she wasn't going to pass up the opportunity. She's been crushing on him and he started waving his boner in front of her, what was she gonna do?\n\n\"I reminded her that it was her turn to get washed,\" he continued. \"So she turned around and I washed her back while she washed her front. When I got to her waist, she asked if I could reach everything ok and I said yeah. But then she said it was silly of her to wear underwear and not get fully clean since I had gotten naked. I said I supposed so and she asked me to take them off her. I asked if she was sure and she told me she knew she could trust me and that being naked around someone else would be a big step for her. I said I was proud of her and she just smiled at me over her shoulder. I slid my hands onto her waist and pushed her soaked panties down until they cleared her hips and butt and fell to the floor with a splat. And suddenly, we were completely naked together.\"\n\nI thought back to the dark days immediately after her breakup when she'd scream and cry if I happened to walk in on her in her underwear. I was touched that my fiance could help return her love of and comfort in her body to her. I just wish they didn't have to rub each other naked to do so.\n\n\"Anyway, I kinda washed her hips then moved on to her legs,\" he said. \"But then she made a big stink about how I hadn't washed her butt, so I did that too. Rubbing soap into her naked ass was kinda weird. I reminded myself that I'd spent most of the previous night feeling and squeezing it, so the difference was just a technical one, even though my dick got really excited about me feeling her bare buns. I finished and stood back up straight when someone knocked on the door and said we had to leave in a couple minutes.\n\n\"I guess she was worried about turning to face me to rinse off like I had to her, so instead she just backed right up into me. That let her rinse her front off fine without me seeing, but it was kinda awkward because my hard dick jabbed into her buttcrack. I'd forgotten how on edge I'd been after all her teasing, and her cheeks were so warm and wet and soft that I almost sprayed a huge load all over her naked ass. That woulda been awkward.\"\n\n\"Yeah, so awkward,\" I deadpanned. I looked at my watch. This story was taking forever.\n\n\"We were finally finished, so we got out and faced away from each other to dry off,\" he said. \"While we did, she thanked me for not barfing when I saw her naked body and said she hoped I didn't regret going through all this for her. That kind of aggravated me in a weird way because she's so amazing and I hate how she's always feeling down on herself, y'know? So I said the only thing I regretted was that I only got to see half of her naked body, because I loved her so much that I would die for the chance to see any and all of her even if she wasn't her amazing, gorgeous, sexy self.\"\n\nI could feel myself tearing up. I kept getting too wrapped up in petty bullshit of this and not appreciating how loving and caring he was. Sure, he was oblivious and could get talked into doing some compromising things. But this was clearly all really weird and awkward for him, and he was willing to go through with it for Annie's sake just because she's my sister and we're just a wedding away from all being family. I was so lucky.\n\n\"Then I heard her squeak, 'Davey, turn around,'\" he went on. \"I did and my jaw dropped. She'd put on panties and her shirt, but she hadn't pulled down her shirt yet. It was all bunched up around her collarbones so her boobs were fully exposed to me. I could tell it was really taxing her, because her face was bright red and her hands were balled into fists with the effort it took to not cover herself up. I was so shocked that I dropped my towel so I was just standing there naked too, boner still raging and pointing at her incredible naked chest.\n\n\"She walked up to me until her breasts were pressing against my naked chest and my hard-on was pressing against her bare tummy. She whispered a thank you, then gave me the softest little kiss on the lips. We stared into each other's eyes for a moment, and my heart beat loudly because I didn't know what would happen next. Then we heard the front door slam and someone shouted for us. That broke the spell and we quickly got dressed and loaded into the van.\"\n\nI wanted to feel happy for my sister, I really did, but I burned with jealousy. Not only jealous of her that she'd just shared this clearly erotic shower with my fiance, though there was definitely that. But also jealous of him for being the one that she's opened up to! I'm her sister and even I haven't seen her boobs! I mean, I have when we were younger. But the growth of her amazing new set of knockers happened during all the drama with her ex, when she was covering up everything all the time. And now that she has the body of a knockout, he gets to see it first?!",
        "I realized I was being ridiculous. I didn't want to see my sister naked after all, except for mere curiosity. I should just be happy that the confident girl I knew was finally coming back.\n\n\"And then you guys sped your way to the ferry,\" I said.\n\n\"Yeah, though, Annie and I were having some issues,\" he said.\n\n\"What do you mean?\" I asked.\n\n\"Well, once we got on the road, everyone pretty much fell asleep immediately,\" he said. \"Except for us. Annie laid down with her head in my lap to rest, but I was still so hard from everything that had happened that morning, so she couldn't get comfortable. At first she tried to just lay with her head against it, but I guess it's tough to sleep when a boner keeps poking you in the cheek. So then she sat up and asked me if I wanted her to take care of it. I thought she was joking, but then she just slipped her little hand down the front of my shorts and grabbed my naked dick!\"\n\n\"Right in front of everyone?!\" I gasped. I was glad she was getting her confidence back, but she was getting a little too bold if you asked me.\n\n\"Yeah,\" he said. \"Well, kinda. We were in the backseat, and everyone else was asleep except for Julia, who was driving. We were whispering so she couldn't hear, but yeah, basically right in front of everyone. She started jacking me off inside my shorts. I was aching so bad and it felt so good. I started leaking so much precum that my dick got completely soaked as her soft little hand stroked it up and down.\n\n\"I told her that I was happy to be her pretend boyfriend for the weekend and that we'd had to push some boundaries, but her making me cum was too far. Apart from being a decade older than her, I was engaged to her sister! She insisted that since we'd seen each other naked and I'd already made her cum on the dancefloor last night, that we weren't going any farther than we'd already gone. Plus, I was her future brother-in-law and she could tell she'd caused me a bunch of pain by teasing me so much without relief. She worried that my balls would explode if she didn't empty them soon, and she'd be a terrible sister if you let her borrow me and she broke me. I said I still didn't want to cum and she couldn't make me. And she sorta took that as a challenge.\"\n\n\"What do you mean?\" I asked. I was glad my sister wanted to relieve his pain, but I was on his side for this one.\n\n\"Well, we were in the van with everyone else, so she couldn't do much,\" he said. \"She tried to jack me off harder, but with our clothes and seatbelts on, she couldn't get much leverage. She rubbed her boobs against my arm, but that didn't really do much either. So then she just started whispering really dirty things into my ear.\"\n\n\"Like what?\"\n\n\"I was pretty far gone and this went on for a while, so I don't really remember all of it.\"\n\n\"You must remember something.\"\n\n\"Yeah, well, uh, it was a lot of different stuff,\" he said. \"Nothing serious, just different things she could think of that she thought might make me bust. At first it was just things like how she couldn't wait to show me her tits again and make me play with them. Then stuff like that she thought my dick felt amazing in her hand and wondered how it'd feel in other parts of her body. She was really getting my heart racing, but I was still holding on, so then she took things up a notch.\"\n\n\"What do you mean?\" I asked.\n\n\"Promise not to get mad,\" he said. I stayed silent and he just continued. \"She probably wasn't being serious. But she was saying stuff like 'your dick is my toy now and I get to play with it whenever I want' and 'it's going to feel so naughty when we keep doing this after you become my brother'.\"\n\n\"Oh my god,\" I said. \"Where was she coming up with this stuff?\"\n\n\"I have no idea,\" he said. \"But after a while, I just couldn't take it anymore. I'd been rock hard basically since the beginning of the dance the night before and I started actually worrying my balls would fall off if I didn't give in soon. So I took a deep breath and just let it happen.\"\n\n\"You came?\" I asked.\n\n\"Yeah,\" he said. \"And it was a massive load because of all the buildup. I pumped rope after rope after rope of jizz all over her hand and wrist inside my shorts.\"\n\n*****\n\nCHAPTER 3\n\nI couldn't believe it. My sister had jerked off my fiance in a car full of people. Even more unbelievable, I didn't feel like I could get upset considering all the context. Ugh, why did this always happen to me?\n\n\"Did anyone see?\" I asked.\n\n\"I didn't think so at first,\" he said. \"But then Nina kept winking at us and asking if I felt better. I feel like she must know.\"\n\nI groaned. Then the ferry horn blasted to let us know we were arriving at the island. We unloaded and drove to our house on the waterfront. The house has 4 bedrooms, so I took one, and the three couples (Annie and David, Victoria and Rick, and Julia and Tommy) each took the others. That left Nina. Nina was fun, but definitely a handful. She's short, tan, curvy and spunky. She'd had a boyfriend most of the time I'd known her, but they broke up right before prom.\n\nI told her that the living room couch pulled out into a bed, but for some reason, she insisted that she sleep on the couch in Annie and David's room instead. I pulled Annie aside later and she explained. Apparently, Annie spent so much time with Nina and her then-boyfriend after Annie's own relationship ended, everyone started calling Annie and Nina his two girlfriends. And now since Annie had a (pretend) boyfriend and Nina didn't, she wanted to return the favor. Nina had been dancing with each of the boyfriends last night and felt like a seventh wheel by the end of the dance, and Annie felt bad for her. I was glad my sister was so kind, but now, not only would my fiance be spending the night down the hall from me, he'd be trapped with two teen girls. I wasn't exactly thrilled.\n\nEveryone wanted to go swimming ASAP, so we went to our respective rooms to change into our swimsuits. I was the first one done, of course, and was down in the lake before anyone else even came outside. Victoria and Rick came out next. Victoria's a tall, willowy redhead and the star of the volleyball team. I'm pretty sure she has a college scholarship from it. She naturally looked amazing in her floral bikini. I don't know her that well, but I do know that she's one of the most popular girls in their school. She's kind, but a bit more aloof than Annie's other friends even though she liked bossing them around from time to time. Her boyfriend Rick was clearly the star of some other athletic team based on his build, demeanor and the fact that he's with Victoria. He was always nice and friendly though.\n\nNext came Julia and Tommy. I didn't know them as well, but Julia was also on the volleyball team, and I think she and Tommy also did theater at their school. I was definitely jealous of Julia's long brown hair, big brown eyes and megawatt smile. Her one-piece bathing suit highlighted her rocking bod. Why did my sister and all her friends have to be such knockouts? Moreover, why did I notice and care? I knew my fiance would be ogling them all day, that's why.\n\nAnnie, David and Nina were the last to come out. Annie and Nina were both in bikinis. Annie looked much less uncomfortable being around other people while wearing so little. I guess all the positive reinforcement from David last night and this morning paid off. When they got outside, I asked David to put sun lotion on my back. I conveniently \"forgot\" the lotion inside, so I'd have a moment to talk to him. The other girls teased Annie that I was trying to steal her boyfriend from her. If only they knew.\n\n\"What took you guys so long?\" I asked.\n\n\"I guess Nina was really starved for attention because her top was off before our door was even closed,\" he said.\n\n\"Of course,\" I said, rolling my eyes.\n\n\"So Annie was immediately like, 'Excuse me, my boyfriend can see your boobs,'\" he said.\n\n\"Wait, she didn't even turn around?\" I asked.\n\n\"No!\" he said. \"She was right in front of me and facing me. Like she wanted me to see or something. Anyway, Annie complained and Nina was just like, 'Oh he doesn't care, my tits are so small, it doesn't matter.' Which is ridiculous. If I cared about big boobs, I wouldn't be engaged to you.\"\n\nI knew David liked my little boobs, but that just meant he liked Nina's little ones too.\n\n\"So she was acting like it was no big deal for her to be half-naked in front of me, but it was clear it was no accident. Like, Nina pulled off her top and her pants right away so she was just left in her thong panties. And once she was practically naked, that's when she started digging through her bag, looking for her swimsuit, her big ass waving back and forth at us.\"\n\n\"Sheesh, Nina,\" I said.\n\n\"It gets worse,\" he said. \"She brought two swimsuits with and wanted our opinion on them. And naturally, she didn't just put them on the bed and ask for our opinion. No, she took off her panties and then held one then the other in front of her naked crotch to 'show' us how they'd look on her. Annie was like, 'Nina, we can see your cooch!' and Nina was like, 'No, you can see my hair. My cooch is hidden between my thighs.' And she held her arms wide so we could see what she meant. And yeah, we couldn't literally see her labia, but she was still just standing in front of us, completely naked, asking us to inspect her crotch. It was weird.\"\n\n\"Right, so anyway, you got dressed,\" I said, eager to move this along. I knew Nina's antics were unlikely to lead anywhere with David's fake girlfriend around to put a stop to things, but I still didn't like hearing about this barely legal teen prancing around naked in front of my fiance.\n\n\"Yeah, eventually,\" he said. \"I mean, I did right after that. Nina spanked my bare ass while I was turned around, pulling my trunks on. I thought Annie would protect me from her. Annie changed too and then we put sun lotion on each other. Thankfully, Nina put her bottoms on for that part, but of course left her top off and insisted I lotion her back and she lotion mine.\"\n\n\"And Annie really was fine with all this?\" I asked. I couldn't imagine my shy little sister being ok with her friend clearly putting the moves on her boyfriend, fake or not. Was she too dumb to realize that's what Nina was up to?\n\n\"Yeah,\" he said. \"She just laughed at her. I guess she was really close with Nina and her boyfriend when they were still a thing. If there comes a day where I claim to understand the minds of teenage girls, kill me because I've clearly been brainwashed by aliens or something.\"\n\nI laughed. He had a point. I was a teen girl once and even I don't pretend to understand them. He finished lotioning my back and we headed outside. We spent most of the afternoon just lazing about in and out of the lake. I could feel the teens didn't love hanging around with their friend's much-older sister, so I tried to keep my distance, spending a lot of time reading on the patio. The two other couples spent plenty of time canoodling. Annie and David did a bit too. I was glad they weren't trying to keep pace with the others. They were totally the type to think they had to do everything these real couples did or risk 'outing' themselves. But it was still weird for me to watch them cuddle and kiss from time to time.\n\nIn the late afternoon, they started playing Truth or Dare, like any group of bored, horny teens. I noticed because there was a distinct increase in yelling and laughing and doing weird things, like belly flopping off the pier or yodeling out into the lake. I decided to wander down to join them.\n\n\"Truth or Dare?\" Julia asked Annie as I approached.\n\n\"Hmmm, truth,\" she answered.\n\n\"Come on, you haven't done a dare yet,\" Nina whined.\n\n\"You're just going to dare me to take my top off!\" Annie retorted. I wasn't surprised Nina was daring the girls to go topless. She probably just wanted an excuse to show off her boobs to everyone. No way Annie would get naked in front of them though.\n\n\"Someone has to!\" Nina said. \"You guys are so boring.\"\n\n\"Truth,\" Annie said.\n\n\"Ugh, fine,\" Nina said. \n\n\"When was the first time you and David had sex?\" Julia asked.\n\nI froze. For one thing, it was weird to hear another woman asked about having sex with my fiance. For another, I knew there was no answer. I saw her and David exchange a nervous glance.\n\n\"Come on, spit it out,\" Julia said.\n\n\"And make it hot,\" Nina added.\n\n\"Ok, um, well, it was a Saturday night,\" Annie said, blushing more than I'd ever seen before. \"And this was when I'd been feeling really down and couldn't get out of bed. So Davey came and-\"\n\n\"Boned your sadness away?\" Nina interrupted.\n\n\"No, come on,\" Annie said.\n\n\"Wait, why was David there?\" Julia asked. Annie, flustered, struggled to respond.\n\n\"We'd had a date planned,\" David broke in. \"Just to watch a movie. And she couldn't get out of bed.\"\n\n\"Yeah, that was it,\" Annie said. \"And he just came into bed and spooned me. Not to get into my pants or anything, but just to make me feel safe and loved. And that was the moment I felt so thankful to have him. I mean, it's cheesy, but it reminded me that real love was possible. And as soon as I felt that sense of true love radiating from him, my mind started thinking about how I could make him feel just as good. And then I remembered that his dick was just right behind my ass.\"\n\nHer friends hooted and hollered and Annie somehow blushed an even deeper shade. I knew this was embarrassing for her, so I was glad she was getting through it. Even if \"it\" was a sex story about my fiance.\n\n\"I was just there to try and comfort her,\" David continued for her. \"So I'm just holding her, trying to think of anything else I could do to cheer her up, when suddenly she starts grinding her cute little butt back into me.\"\n\n\"And then one thing led to another,\" Annie said.\n\n\"Tell us!\" Nina said. \"Give us the details.\"\n\n\"I think you can fill in the rest,\" Annie said.\n\n\"Ugh, I can, but I don't wanna,\" Nina whined.\n\nI thought they hit a lull, so I asked if everyone was cool with pizza for dinner. They said sure and I went inside to order. I thought back and could remember a Saturday evening a few months back when Annie couldn't get out of bed. David went in to talk to her, and a little while later she emerged with him for the first time all day. Did they actually...? No, impossible. They probably just embellished a true story. Smart. When I came back out, Nina had lost her top. She must have finally gotten dared to. Her perky little tits and hard brown nipples were thrust out for everyone to see. She was in the middle of grilling David about why he wouldn't accept a dare while he struggled to keep his eyes of her naked chest. He finally relented.\n\n\"Your dare is,\" she said before pausing dramatically. \"Make out with me for five minutes.\"\n\nHer dare caused an immediate uproar. It did seem a little excessive. I was glad I wouldn't have to watch my fiance make out with some half-naked girl for five full minutes. At first, Annie insisted on just one kiss between the two of them, but then Nina started lowering the makeout length she demanded. Eventually, they agreed one just one full minute of making out. I would have stuck to my guns if he was my boyfriend. I mean, he was. My fiance, I mean. This was getting confusing. I wanted David to protest more, but his willpower was often lacking and Nina was hot, mostly naked and very eager to jump him, so I guess I should cut him some slack.\n\nNina went more full throttle than I expected. She straddled his lap and ground into him as they kissed. She was still only wearing bikini bottoms, and he was in his trunks, so their bare chests were pressing against each other too. Then, when we hit the 30 second mark, she grabbed his wrists and pushed them down until his hands were on her generous ass. Her bottoms were small to begin with and had really bunched up in her crack in her current position, so his hands were almost entirely on her bare cheeks. Everyone cheered when she pushed his hands down, and then again when he gave her thick ass a tentative squeeze, so he squeezed and massaged it until Julia called time.\n\nThat didn't stop Nina, though, and she kept kissing David until Annie told her to stop. She did, but didn't get up. Just settled into his lap side-saddle, still topless. He smiled cheekily as she threw her arms around his neck. Her naked tits were only a foot from his face and his hands rested on her thigh and her bare hip. I expected Annie to say something about this, but didn't. David probably did too. Why was she letting her best friend canoodle with her boyfriend like this? What was I missing?\n\nDavid was next to dare someone, so he dared Rick and Victoria to make out. They're dating, so that wasn't a big deal. In the middle of it, though, Julia tried to rip Victoria's top off. Cool, calm and collected Victoria practically blew her top when she did. Nina booed her, calling her a prude, and the others booed too. Some more dares followed. Julia was dared to make out with Tommy, her boyfriend. This time Nina snuck over and tried to pull her top down, but Julia was able to escape. Then Julia dared Tommy to moon everyone, and he did. \n\nThen it was Annie's turn to do a dare, and I braced myself. I thought she'd be dared to make out with David, and I wasn't thrilled to watch my sister make out with my fiance. But Tommy surprised me when he dared her to make out with Nina instead. My surprise continued as Nina refused to get off David's lap and further when Annie accepted that and just knelt down next to them.\n\nThey made out. Their comfort with it made it clear this wasn't the first time. Maybe my sister had more than meets the eye. Julia, Tommy, Victoria and Rick all cheered. I couldn't see David's reaction because Nina and Annie blocked my view. Nina was still topless, of course. Annie wasn't, but her bikini top wasn't doing a great job keeping her big breasts under control. I can only imagine what kind of pornographic view his front row seat afforded him.\n\nWhen they started kissing, Nina had put her hand on David's chest, ostensibly for balance, but probably just to touch him more. As they approached the time limit, I noticed her hand had slipped down to his lap. Time was called and Annie stood back up. Nina sat back and we all got a clear view of her hand wrapped around David's shorts-covered boner.\n\n\"Hey, that's my boyfriend's dick you're grabbing,\" Annie shouted, pointing at it.\n\n\"I know,\" Nina said. \"I didn't want to, but he made me.\"\n\n\"Hey, that's not true!\" David protested. Nina rolled her eyes.\n\n\"Your boner's been poking my butt for a half hour now,\" she said. \"I had to hold it in place to make sure you didn't try anything dirty while two hot chicks made out on top of you.\"\n\n\"You can make out on top of me,\" Tommy said, smiling. \"I promise to behave myself unlike David.\" Julia play-punched him.\n\n\"It's David's turn,\" Victoria said. Annie turned to him and pursed her lips. I realized Nina still hadn't let go of his cock.\n\n\"I can't believe you'd get so dirty in front of my friends,\" Annie said to David, a huge smile on her face. \"So you need to be punished. I dare you to get cleaned by Nina.\"\n\nEveryone froze a moment, not sure what she meant.\n\n\"There's a shower over there,\" she said, pointing to our outdoor shower stall along the house. \"Nina, can you please teach him a lesson?\"\n\nNina, huge smile on her face, jumped up and helped my fiance to his feet. She then led him into the shower stall. From where we sat, down the lawn a little ways, we could only see their lower legs below the privacy barrier. Above the barrier, we could only see David's head and shoulders and the very top of Nina's head.\n\n\"Wait a second,\" Nina said, poking her head back out. \"I can't trust a dirty boy like David here to behave and keep his hands to himself.\"",
        "I had a flash of inspiration. If she wanted to make sure David's hands wouldn't touch her, I certainly wasn't going to stand in her way. I would obviously help to prevent my fiance from touching this hot, horny, barely legal teen. I hustled to the backyard shed and got a coil of rope. I brought it to Nina. Everyone cheered. Nina asked for help tying him up and I gladly gave it. We circled the rope around each of his wrists and behind the shower pipe. His hands were restrained behind his back and he was forced to stand directly under the showerhead. I tried to ignore the huge erection tenting his trunks. I wasn't happy to see him so aroused by Nina, but she had been half-naked on top of him and massaging his crotch, so there's not much he could do. When we were satisfied that he was restrained, I left the stall and rejoined the others.\n\nNina turned on the shower and David yelped out how cold it was. The water eventually warmed up and they could stand under it without problem.\n\n\"Wait, wait,\" David said to Nina. We couldn't tell at all what was going on.\n\n\"What?\" she asked, voice full of mock innocence. \"I need to get you clean.\"\n\nWe saw David's trunks fall to the ground with a splat. I realized I made a huge mistake. I didn't have to worry about David in there with Nina...I had to worry about Nina in there with David. I'd help her tie my fiance up, and now he was trapped there. Naked. And hard. Her head disappeared from the top of the barrier and we saw her hands appear at the bottom and pull his trunks off his feet. She threw his trunks over the barrier and they landed on the ground halfway between us. The others cheered. We saw her grab the body wash and squirt a bunch of it on her hand, then rub it into his shoulders. Her hands went lower, and we couldn't see anymore. I was in agony, dying to know what she was doing to my naked fiance.\n\n\"Oh my goodness,\" Nina shouted. \"His problem is so BIG. It's gonna take me so LONG to work it out.\" The others cackled at her dumb jokes. I burned with jealousy. I wished he would do something about it, but I was the one who tied him up in there. He probably thought this is what I wanted. I wondered why Annie didn't say anything. Wasn't she jealous at all? David leaned his head back against the shower pipe, eyes closed with pleasure.\n\n\"Don't just give him a handjob!\" Annie shouted, though a bit of playfulness in her voice made me question whether she meant it.\n\n\"I'm not!\" Nina shouted.\n\n\"Yes you are!\" David said. Everyone laughed.\n\n\"How can I be giving you a HANDjob when I'm rubbing your dick with my BOOBS?\" she said.\n\n\"Ok, but you were before,\" he said.\n\n\"Ugh, men!\" she shouted. The others were dying laughing. Even Annie.\n\n\"Okay, I've done everything I could,\" she said, finally stepping back. I let out a sigh of relief. At least it was over. \"He's still a dirty boy, though, Annie. In fact, he got me dirty and now I have to get clean.\" A moment later, her bikini bottom flopped over the side of the barrier. It hung there as I realized that the hot, horny teen was now completely naked with my equally nude and tied-up fiance. And just when I thought we were in the clear.\n\n\"Don't fuck my boyfriend!\" Annie shouted, still laughing. We saw Nina walk under the shower spray, pressing her body to David's to do so. We couldn't make out at all what was happening, but she clearly spent a lot of time rubbing her naked body against my fiance's while pretending to clean herself. She announced that she had to get one more spot and spun away from him, then lifted a leg up and put it down, then rubbed her body up and down against his. An arm of hers snaked up behind his head and pulled it down to hers. We couldn't see, but could hear them kissing. I saw her whisper something in his ear, then finally move away from him. \n\nShe pulled her bottoms off the barrier and put them back on. She sauntered out of the stall and back to us, still topless, leaving David tied up and naked.\n\n\"Uh, some help?!\" David shouted. I got up without thinking.\n\n\"Yeah, I'll save you,\" I said, walking toward the stall.\n\n\"Wait, he's still naked,\" Julia said. I frowned at her, then remembered he's supposed to be with Annie, not me. \n\n\"Oh yeah, I guess Annie...?\" I said, turning to her. How ridiculous. I'd seen him naked a million times, but I'd have to send my little sister in there with him. Granted, she'd seen him naked in the shower this morning, but still.\n\n\"Wait, I have a better idea,\" Nina said. \"Victoria. Truth or Dare?\"\n\n\"Uhh, truth?\" Victoria said. Nina booed her and everyone else quickly joined in. Victoria blushed. \"Ok, fine, dare.\"\n\n\"I dare you to take a shower,\" Nina said, waggling her eyebrows. Victoria looked to the outdoor shower, David's head poking over the barrier. I heard everyone suck their breath in. Nina and Victoria were complete opposites when it came to this sort of thing.\n\n\"Uh, no,\" she said.\n\n\"What's wrong with taking a shower?\" Nina asked.\n\n\"There's a naked guy tied up in there?\" Victoria said. \"My friend's boyfriend?\"\n\n\"Well yeah, that's why this is a dare,\" Nina said. I groaned and shook my head. It was just like Nina to try and push someone else to match her sluttiness. Victoria would never, though. She was kind, but also kind a prude and above-it-all.\n\nAn argument ensued. Victoria said she had a boyfriend and so shouldn't be showering with other guys, but Rick just smiled and said he was fine with it as long as David stayed tied up. I think he enjoys seeing her all worked up. Eventually, she relented and walked to the stall.\n\nI was not thrilled. Having Nina tease and play with my boyfriend was one thing. Having Victoria do it was something else. She didn't become the most popular girl in school just by being good at volleyball. She had long, wavy red hair and a beautiful freckled smile. Her body was lithe and fit. Her firm, perky butt flexed in her skimpy bikini bottoms as her long, smooth legs walked her away from us. On any normal day, I'd feel jealous and upset if my fiance just saw her in a bikini. And here he was going to get a close-up view, maybe more.\n\n\"Oh my god, he's naked!\" Victoria shrieked when she opened the stall door.\n\n\"Duh!\" Nina yelled.\n\n\"I'm not doing it if he's naked,\" she said. She whined some more, then Nina collected his trunks off the ground and disappeared into the stall. I expected to see her put them back around his legs, but she just walked in and then left a moment later.\n\n\"Come on, that doesn't count,\" Victoria whined.\n\n\"Just get it over with!\" Nina said, walking back to us. Annie asked what happened and Nina said she just hung the trunks on David's boner.\n\nVictoria entered the stall. She was a lot taller than Nina and practically the same height as David, so we could see her head as well as her lower legs. She walked over to David, crossed her arms in front of her chest and pressed against him so she'd be under the spray too. I saw him whisper something to her and she giggled. I guess she wasn't as upset about all this as she let on. She spun and got her other side wet, then stepped away.\n\n\"All done!\" she said, only to be met with another round of boos. Nina yelled at her to get naked, and she said no way. Pretty soon, everyone was shouting. Finally, we all heard Victoria over the fray.\n\n\"Fine, fine!\" she shouted. \"I'll take my top off, okay?\"\n\n\"Ugh, fine,\" Nina said. Victoria asked Rick if that was okay and he said he didn't mind. She pulled off her top while facing away from David and draped it over the barrier. She crossed her arms over her breasts and then came back to him and made a big silly show of writhing against him under spray.\n\n\"Oh god, I'm getting SO clean,\" she shouted. Everyone laughed. I was glad that despite everything, he wasn't actually seeing her naked. I looked over to Annie, and she was laughing along too. Maybe she just liked watching David get teased. Victoria turned her back to David and continued writhing against him. She removed her arms from her chest and made a big show of running them through her wet hair, pretending to be one of those women in shampoo commercials who way overact how much they love washing their hair. It was actually pretty funny.\n\nBut then I saw David looking down over her shoulder. I guess she thought facing away from him would be fine, but it looked like he was getting a close look at her whole chest. Her breasts weren't her most striking feature, but they definitely looked good in her bikini. Knowing her, they probably also looked amazing bare. Then, his trunks hit the floor again with a splat. All her gyrating must have knocked them off his boner. She looked over her shoulder, then gasped, spun around and slapped him across the face.\n\n\"I can't believe you got your thing out again!\" she said. We saw her reach down towards it, but we obviously had no idea what she was doing. I guess she had lost her shyness, because we could tell she wasn't bothering to cover her naked chest anymore.\n\n\"Pizza!\" a man shouted from the front of the house. We all jumped.\n\n\"Ah, coming!\" I said, rushing to the house. As I passed by the shower stall, I saw Victoria flipping her bikini top around, trying to find the right way to put it back on. David, still bound, naked and hard, ogled her naked chest. I got inside and grabbed my wallet from my purse. I glanced back outside to see the others heading in while Annie helped untie my nude fiance and Julia helped tie Victoria's top back on right in front of them. Great, I thought. Now my sister and each of her friends had seen my fiance naked and aroused.\n\n*****\n\nCHAPTER 4\n\nEventually, everyone was dressed (except Nina, who apparently would never put her top back on), and we ate pizza inside. Things thankfully calmed down after all the madness of the Truth or Dare game. Even Nina's toplessness became more normalized. I think she could tell, because she let her bikini bottoms, her only item of clothing, drift lower and lower. Half of her ass crack was on display and we could see the top of her pubic hair in front, but no one other than me seemed to mind.\n\nAfter dinner, the girls wanted to change into pajamas, and sent the boys outside to get a bonfire going. I was able to calm down some as I cleaned up. Sure, everyone had seen my fiance naked and aroused, and Nina and Victoria had canoodled with him a bit, but in the end, so what? Ok, my sister had also seen him naked. And shown him her naked body. And jerked him off multiple times, once to completion. And was clearly infatuated with him, with how she'd hang on his every word, laugh at his every joke and tease him whenever he paid attention to anyone else. Now that I listed them out, I realized this is something I'd have to deal with once we got back home. I mean, I'm glad he's gotten her to come out of her shell, but there have to be limits. I'll have to wean her off him somehow. At least the night was winding down. The teens were no doubt tired after the day and a half of excitement. They'd hang out by the bonfire some, then we'd all go to bed.\n\nAs soon as I'd managed to calm myself down, though, I heard the girls screaming and running through the living room. I looked out the kitchen window to see their four completely naked backsides run past the dumbstruck guys (still trying to figure out how to light the bonfire), down the lawn, and into the lake. What the freaking hell. We were so close to a quiet night, and now they're skinny dipping?!\n\nThe guys naturally followed a few steps down toward the water. The girls shrieked at them, telling them to stop being cowards and join them. One by one, they did. First Rick, then Tommy, and then finally my fiance David stripped off all his clothes, then jogged down the darkened lawn to the group of naked teen girls.\n\nMy heart about exploded out of my chest. I had no illusions about what this meant. Horny teens could hardly be trusted to behave themselves when they were clothed in the daylight right in front of you. Now they were naked under the cover of darkness and water and far away from me. I was briefly mad at David for joining them, but I knew he didn't really have a choice. How humiliating would it be for Annie if he had refused so that he could stay and hang out with her older sister? And with how emotionally attached she'd gotten to him, it would have destroyed her fragile mental state. I could only imagine the welcome he would receive from her when he got to the water. I hoped their inherent awkwardness would keep everyone away from each other.\n\nAt first, I thought about joining them, but quickly wrote that off as too awkward. Not knowing what was happening burned me up inside, though. I suddenly had an idea. I ran to the closet and found my dad's binoculars, then went to my bedroom upstairs. My eyes took a moment to adjust, then I could see the forms of the splashing teens (and my fiance) decently well in the moonlight. I raised the binoculars to my eyes.\n\nI finally got a good look at the action and my worst fears were realized. They had coupled off, and I could make out Rick and Victoria and Tommy and Julia canoodling with their partner in the shallow water. That left David, Annie and Nina all together a few yards away. I couldn't quite tell what the three of them were doing. Annie and Nina had their backs to me. The water came up to their waists, so at the very least, David was getting a closeup look at their bare chests. He'd seen both of them naked already, so while I wasn't thrilled my fiance was hanging out nude with these hot teens, I was truly worried about what was going on underneath the water. I knew Nina wouldn't be able to keep her hands off him, and I doubt my sister would either.\n\nThey didn't stay in the lake for long. The water was far too cold. First, Julia and Tommy made their way out, then Rick and Victoria, and finally David, Annie and Nina. As they waded out of the water, Nina jumped on David's back and he gave her a piggyback ride. I looked closer and realized Annie was leading him up the lawn, her little hand wrapped around his hard dick. They walked to the patio for their towels, then made their way inside. I quickly stashed the binoculars and turned my bedroom light on. I had just grabbed my book and was able to pretend to read it by the time they made their way upstairs, giggling and chattering excitedly the whole time.\n\nMy door burst open and Annie, Nina and David walked through. Annie was wrapped in a towel and Nina held one loosely over her front but David was still fully nude and erect.\n\n\"We need to use your shower,\" Annie said.\n\n\"Oh no!\" Nina said, realizing I could see David's nude body, and jumped in front of him. She blushed. \"Sorry, we were skinny dipping. You probably don't wanna see your sister's boyfriend like that.\"\n\nI just nodded. This weekend had all been so weird that I didn't know how to respond anymore. They entered the ensuite bathroom. Nina and David did a weird shuffle the whole way so that his hard cock would remain smashed into her lower back so I couldn't see it. David gave me a sheepish smile right before the door closed. I could tell he was uncomfortable and trying to go with the flow, but I hoped he wasn't enjoying this too much.\n\nThe shower started, then I heard the shower door open and shut. The shower ran for a while. Much longer than it took to rinse off lake water, even if there were three people. Eventually, the shower turned off, but several more minutes went by and still they didn't come out. As the minutes ticked by, I started stressing out. I knew they weren't having Bible study in there, if you catch my drift.\n\nI heard a shout and something tumbling around in there. I seized my chance and bolted to the bathroom door, opening it. David was sitting on the edge of the tub, Annie and Nina kneeling in front of him. All three were completely naked and gathering shampoo bottles from the tub and arranging them back on the edge next to David. He was still completely erect. His entire body was dry, though, except for his dick and balls, which were soaking wet.\n\n\"What the fuck?!\" Annie said to me. Nina saw me then quickly tried to cover David's engorged genitals. Her small hands did little to cover him. \n\n\"Sorry, I just-\" I said.\n\n\"Some bottles got knocked over, it's fine!\" she said. I mumbled an apology and left, leaving the door slightly open on purpose. A moment later, they exited, wrapped in towels. The girls didn't even look at me as they walked by. David, at least, mouthed an apology. They went to the room they were staying in and shut the door.\n\nThe other two couples had finished with their showers by then and were shut in their rooms too. Their lights were all on, so I could tell they were all still up. Each room played some fairly loud music inside, so I couldn't hear what was going on. I went back to my room frustrated. I tried to read, but couldn't focus.\n\nMy fiance was next door with two naked, horny teens. One of them, my sister. I hoped that they behaved themselves, but I wasn't too optimistic. They'd already spent plenty of time together naked, so I didn't expect them to suddenly get dressed. Maybe the excitement of being naked together had worn off, though. All the excitement of the past day and a half must have drained all of them, so they probably just wanted to get some sleep. Plus, while I knew Nina would try to push the envelope as much as possible, Annie was still there to stop her. David was her (pretend) boyfriend after all.\n\nI don't know how, but eventually I fell asleep. Everything was quiet when I woke up the next morning. We had to make the morning ferry, so I woke everyone up. When I got to their room, Nina was asleep on the couch and David and Annie were asleep in the bed. He was on his back and she was draped over him. I was jealous, but I had to admit they did look really cute together. I realized that I truly was sister-of-the-year for letting her have such an amazing prom weekend. \n\nThe drive back home was uneventful. I drove Annie and David, while everyone else went in Julia's van. The two of them slept the whole way. I was glad we were finally getting back to normal. He'd finally be my man again, and not on loan to her. Once we got back home, we unloaded the car. After it was done, I came back outside to close it. When I came back in, I heard them talking softly in her bedroom. I crept to the doorway to listen.\n\n\"Thanks again, for everything, Davey,\" Annie said. Her arms were around his neck, her body pressed against his as her doe eyes gazed straight through him.\n\n\"Of course, Anns,\" he said. I guess he had a pet name for her now too. \"I had a wonderful time.\"\n\nThey kissed. Then kissed again. David moaned and lowered his arms, grasping her ass in both hands and pulling her into him. Ugh, I thought their whole \"date\" ended when we left the lake. I guess one more goodbye kiss wasn't that big a deal.\n\n\"You're going to get me in trouble,\" he whispered to her.\n\n\"You have no idea,\" she said, then kissed him again one more time. \"But that can wait. I need to unpack and shower. So shoo.\"\n\nI silently ran back to the stairs and turned around before he exited her room. We smiled at each other and I walked up to him and gave him a kiss. I could still taste Annie's lip gloss on him. I told him I was so glad to have him back and wanted to hear everything about the night before. He whined that he needed sleep, but I couldn't wait any longer and insisted. He said okay and we went into my room and closed the door.\n\n\"Okay, so, we finished up dinner and I thought you guys were going to hang out and have a bonfire, but then everyone got naked,\" I said.\n\n\"Yeah, I thought that too,\" he said. \"The girls cooked up that on their own. We were surprised as you to see them all running out naked. They were by us in like two seconds, but we could see basically everything in those two seconds. It shocked us so much, we almost forgot to check out their asses once they'd passed us. I mean, uh, that's what I figured Annie's boyfriend would want to do.\"",
        "\"Of course,\" I said.\n\n\"I knew joining them in the water would be trouble,\" he said. \"But next thing I knew, Rick and Tommy were naked and in the water. Annie would look bad if her boyfriend was the only one to refuse, so I figured I had no choice. So I got naked and ran in too. As soon as I did, Annie and Nina surrounded me and, uh, took hold.\"\n\n\"What do you mean?\" I asked.\n\n\"I mean of like, my dick,\" he said, forcing a weak smile. \"I figured they'd try something once I was in there, but not that both of them would immediately grab me. Though it was pretty funny to have them basically fight over it. The water was cold and I was nervous, so it was soft at first, but the feeling of their two naked bodies pressing into me soon won over. That was good because then it was big enough for both of them to have a hand on it at the same time.\"\n\n\"Uh huh,\" I said. The logistics of his dick length weren't really the important part of this story.\n\n\"Anyway, the other two coulples were making out, so we did too,\" he said. \"I tried to switch back and forth between the two of them so neither felt left out. They did a good job busying themselves while the other was making out with me. Like, I'd be kissing Annie, and Nina would knock her hand off my dick and really go to town on it with both of hers. Then I'd be kissing Nina, and Annie would take my hands and make me play with her big, naked boobs.\"\n\n\"I can't believe Annie was cool with all this,\" I said. \"She was so withdrawn and shy for so long, and now she's letting you make out with her friend right in front of her? It doesn't make sense.\"\n\n\"Yeah, I didn't get it either,\" he said. \"Well, at that point at least. It made more sense later on.\"\n\n\"What do you mean?\" I asked.\n\n\"I mean...well, it'll probably make more sense in context later,\" he said. \"Anyway, after a while, the water was too cold for us to handle anymore, so we got out. I figured that'd be the end of our adventure with Nina, but then she jumped on my back and then followed us once we got inside. I thought that Annie's 'college bro boyfriend' would be psyched that her hot little friend wanted to keep hanging out naked with us, so I played along. We wanted to rinse off the lake water, but Victoria and Rick were already in the bathroom and Julia and Tommy were already waiting, so that's why we came into your room. I'm sorry, I know that must have been awkward for you.\"\n\n\"It was, but I get it,\" I said.\n\n\"Thanks, hun,\" he said. \"It did put things in perspective for me, though. I'd spent so much time in the headspace of being Annie's boyfriend, it was a sudden jolt of a reminder that actually I'm engaged to you, so I reminded myself to keep things as tame as possible.\"\n\n\"I appreciate that,\" I said. That's why I loved him. He let girls talk his clothes off, but he always remembered who he was actually with.\n\n\"That was tough, though, since I was about to head into a shower with two very horny girls,\" he said. \"The three of us barely fit in that shower stall together, so I didn't have a chance to not touch them. We were all kind of rubbing against each other constantly. We did really want to get the smelly lake water off us though, so we focused on getting clean. At least at first. Nina finished first and immediately went back to playing with my cock, which had stayed hard due to how much they kept rubbing their soft, wet, nude bodies against me. Annie and I finished and we were all tired of being smashed in that stall together, so we got out and dried off. Nina finished quickly again, then knelt down and dried my legs off. And then...well, ugh, this is kind of silly.\"\n\n\"What was?\" I asked.\n\n\"Well, Nina was kneeling in front of me, drying my legs,\" he said. \"And then naturally got to my package and dried that off, then dropped the towel and just kept playing with it. Annie told her that my dick was fully dry. But Nina was like, 'I keep finding wet spots,' and then licked the full length of my dick!\"\n\nI just shook my head.\n\n\"She dried off the spot she licked, then took the whole thing in her mouth before letting it pop out,\" he said. \"I couldn't help but moan. I thought Annie would be pissed, but she just glared at Nina. So then Nina told her to come take a look, and Annie rolled her eyes and knelt next to her. The two of them were kneeling naked in front of me, faces right in front of my bobbing erection. Annie said she couldn't see any wetness except for Nina's spit, and Nina told her to look closer. She did and discovered precum leaking from the tip. Nina told her to deal with it. I thought she'd just dry it with the towel, but Annie leaned forward, opened her mouth, and took the entire head of my dick inside it!\"\n\n\"Annie!\" I protested.\n\n\"Yeah, I couldn't believe it,\" he said. \"She wrapped her lips around the top of my shaft and sucked, bathing the whole head with her tongue at the same time. I gasped and my knees almost gave out on me. That's when she pulled off and they moved me to the edge of the tub. I sat down, kind of dazed, and they got on all fours and slowly licked up either side of my dick. I was seeing stars at that point, and started falling back. I tried to grab on, and that's when I knocked all the shampoos and stuff into the tub and shouted.\"\n\n\"And that's when I came in,\" I said. \"I'm glad I interrupted that. Sounds like you guys were about to totally lose it.\"\n\n\"Yeah, same,\" he said. \"You shook us out of our reverie. We finished drying off and headed back to our room. I thought we'd just go to bed then, but before I knew it, we were right back where we'd been. I was laying naked on the bed and the two of them were laying between my legs, mouths on my dick.\"\n\n\"Wait, what happened?\" I asked.\n\n\"I don't know,\" he said. \"I came into the room, they ripped off my towel and pushed me on the bed.\"\n\n\"No, I mean like...I still don't understand this,\" I said. \"I thought Annie was shy and reserved and everything. I can't believe she'd actually be down to...well, it sounds like you almost had a threesome.\"\n\n\"Ah, yeah, I thought the same,\" he said. \"Annie filled me in later. Remember after she and Jeremy broke up and she spent a lot of time hanging out with Nina and her boyfriend?\"\n\nI nodded.\n\n\"Apparently, they weren't just hanging out,\" he said.\n\n\"Oh my god,\" I said. \"They were all having sex?!\"\n\n\"Yeah,\" he said. \"Well, kinda. They were hooking up at least. Annie was still a virgin, so Nina's ex didn't fuck her or anything. But I guess they all fooled around a lot.\"\n\n\"It makes more sense why Annie was willing to let Nina throw herself at you,\" I said.\n\n\"Yeah, exactly,\" he said. \"Annie said that soon after we got to the dance, Nina pulled her aside and more or less demanded payback. She said that you were supposed to hookup at your prom, and since she was single, Annie had to share her boyfriend.\"\n\n\"Wow,\" I said, shaking my head. \"Wait, hold on...you said Annie was a virgin? She and Jeremy never had sex?\"\n\n\"I guess not,\" he said. \"Anyway, they spent a long time blowing me. I thought I liked blowjobs before, but having two girls go to town on you at the same time was really next level. While one was sucking on the tip or licking the shaft, the other would be bathing my balls with her hot tongue. And sometimes they would team up, like each running their lips and tongues up and down either side of my shaft. At one point, they even each took one of my balls in their mouth and tongued it until I was writhing and begging for release.\"\n\n\"Uh huh,\" I said. I didn't need all this detail.\n\n\"I was really trying to cum, because I figured then this would all be over,\" he said. \"But they pulled off me right before I could bust. Nina asked Annie if she could sit on it.\"\n\n\"Wait, Nina wanted to fuck you?\" I asked. I guess I shouldn't be surprised.\n\n\"Yeah,\" he said. \"But Annie just looked worried and upset and Nina remembered that she was a virgin, which meant that she and I had never had sex. So Nina apologized and said that Annie should have sex with me first. We were both unsure, but then Nina said that prom was the perfect time for us to lose our virginity to each other. She was right, but the bigger issue was that we weren't actually in a relationship. I was her sister's fiance, not her boyfriend. We'd been playing around all weekend, but that was just for show. Actually having sex was on a different level.\"\n\n\"Ugh, yeah,\" I said. \"And you couldn't exactly tell her that. So how'd you get out of it?\"\n\n\"Well, after Nina cajoled us some, Annie looked to me and was like, 'Maybe I could just put it in to try it?'\" he said. \"My first impression was that that'd be fine, but then I remembered that we were all naked and had been teasing each other most of the day, so that was probably clouding our judgement. Then I thought about how it would play out if I said no. Nina would be disappointed because that meant that her sexy times wouldn't happen. And Annie might have been crushed had I refused her after all that. And I can't bear to think of Annie being upset, so I thought that if she was fine losing her virginity to me, I wouldn't say no.\"\n\n\"Oh my god,\" I said, putting my head in my hands.\n\n\"Are you mad?\" he said. \"I was just trying to keep everyone happy.\"\n\n\"You stuck your dick in my sister,\" I said.\n\n\"I know, but it wasn't like 'real',\" he said. \"It was all pretend. And not to split hairs, but I didn't stick it in her, she climbed on top of me and stuck it in her herself.\"\n\n\"That doesn't make a difference,\" I said. \"I don't know why you didn't just say you were saving yourself for marriage or something.\"\n\n\"I know,\" he said. \"I was just worried that if I started trying to justify saying no, everything would spiral out of control and Nina would figure out that I wasn't actually Annie's boyfriend. And if her friends found out that her boyfriend wasn't real and she'd taken her sister's fiance to prom, she'd never hear the end of it! I knew you wouldn't like it, but family is really important to me, and she's about to become my sister too. I couldn't let her down.\"\n\n\"Just tell me what else happened,\" I sighed. I didn't agree, but I could see what he meant. I guess I should be glad he values family so highly.\n\n\"Ok, so, Annie climbed over me and positioned my dick at her hot, wet entrance,\" he said. \"We made eye contact and she mouthed, 'I love you,' and slowly sank down on it. We both moaned as I entered her for the first time. She fit me like a glove. She was steadying herself with a hand on my chest as she did, but once she got my full dick inside her, she got overwhelmed and had to lay down on me, mashing her boobs between us. We laid still a moment. I was glad she'd jerked me off in the car that morning, otherwise I definitely would have painted her back walls as soon as I got in. She was so hot and wet and tight and they'd been teasing me for hours at that point.\"\n\n\"What was Nina doing?\" I asked. I didn't need more descriptions of how my sister's vagina felt on my fiance's cock.\n\n\"Masturbating on the bed next to us,\" he said with a chortle. \"She kept saying how fucking hot we were and how happy she was to get to see our first time. Soon, Annie started moving her hips around on top of me, so I started thrusting in and out of her slowly. She regained her composure and sat up, grinding on me. Nina said she couldn't wait any longer and shuffled over to her and they started making out. I think that's when Annie came for the first time.\"\n\n\"First time?\" I asked, raising an eyebrow.\n\n\"Yeah, well, I don't really know. You'd have to ask her,\" he said. Fat chance of that happening. \"I barely managed to keep it together while she moaned and her vagina spasmed around my dick. I figured that if we had to have sex to save face in front of Nina, I should at least avoid blowing my load inside her. Anyway, after Annie came I heard her and Nina whispering. Next thing I knew, Nina swung a leg over me and sat her vagina back onto my mouth.\"\n\n\"Oh my god,\" I said, covering my mouth. \"What a nightmare.\"\n\n\"More of a surprise than anything,\" he said. \"I don't mind a hot, young pussy in my face. Some warning would have just been nice. So then the two of them made out while Annie rode my dick and Nina rode my face. Looking back, I'm surprised I didn't cum, but I guess I was just too overwhelmed for my dick to know what to do. Sensory overload.\"\n\n\"That's good, I guess,\" I said. The silver lining on this \"my sister and her friend double-teamed my fiance\" cloud.\n\n\"Nina came soon thereafter,\" he said. \"The poor thing had probably been horny for two days, so she came really hard. We were surprised she didn't wake up the whole house with her screaming. Once she came down, she got off me and stumbled over to the couch, flopping down naked on it. Annie kept riding me, but just a few minutes later, we heard Nina snoring.\"\n\n\"Oh my god,\" I said.\n\n\"Yeah, she straight passed out,\" he said, laughing. \"Which meant that we didn't have to keep up appearances anymore, but we both felt so good that we couldn't pull out at first. We both started feeling pretty guilty, though, since our reason for fucking just fell asleep. Then Annie said that we should probably take care of Nina, and got off me. We found the spare blanket and threw it over her and got a pillow under her head. That left the two of us standing naked in the middle of the room, safe but unsatisfied.\"\n\n*****\n\nCHAPTER 5\n\n\"What happened then?\" I asked. He thought for a moment.\n\n\"Well, it was weird,\" he said. \"We'd spent all day, all weekend, putting up appearances. And we were finally basically alone for the first time and could relax. But we'd gotten so worked up over the afternoon and evening. Hell, we had just been having pretend sex and my cock was still rock hard and dripping with her juices. I knew I at least had to finish myself off, but without the need to prove to anyone else that we were actually in love, it felt wrong to ask her to help me.\"\n\n\"Yeah, that makes sense,\" I said. I obviously didn't love that he and my sister had spent the day canoodling, clothed and not, and had even basically had sex. But at least he realized that we still had limits.\n\n\"I told her I was going to finish myself off,\" he said. \"I sat on the edge of the bed and grabbed my hard, wet dick and started jacking off. She sat next to me and started masturbating herself. But after a minute, I heard her sniff. I looked over to see big tears rolling down her face.\"\n\n\"Oh no,\" I said. They were finally in the clear and all the emotions must have come crashing down on her all at once.\n\n\"I asked her what was wrong and she played it off like it was nothing,\" he said. \"That was obviously a lie because she kept crying. I took her in my arms and we laid down on the bed. I just held her and stroked her hair while she sobbed. After a couple minutes she finally regained her composure and could talk.\"\n\n\"What'd she say?\" I asked.\n\n\"She started off saying she knew she was being silly,\" he said. \"And then started talking about her relationship with Jeremy and how, even though she thought she was head-over-heels in love, the whole time she knew something wasn't right. He was an asshole and because of that, she never wanted to have actual sex with him. Once it finally ended, she was so glad that they'd never done it, so she could save her virginity for her perfect guy who deserved it. And now, even though we never finished, the first time she let a guy into her was with her sister's fiance and it was all pretend. And then she started crying again.\"\n\n\"Oh my goodness, no,\" I said. My heart sank. I'd spent all weekend feeling like some kind of martyr or saint for letting her pretend my fiance was her boyfriend. But now I wondered whether that had been a mistake from the beginning. \"What'd you do?\"\n\n\"I stroked her hair and told her that it didn't matter,\" he said. \"Sex isn't a yes/no question, there's lots of shades of gray, virginity is a made-up thing that is much less important than society acts like it does. She said she knew all that, but it just hurt to know that this past weekend had been the most fun, romantic and sexy weekend of her life and it was hard to know it wasn't real. Her perfect boyfriend didn't exist, I was just putting on an act and she didn't deserve to be happy.\"\n\n\"Yikes,\" I said. I felt myself tearing up just thinking about my sister going to that dark place. She could be dumb and annoying sometimes, but I really did love her.\n\n\"I felt there was only one thing for me to do,\" he said. \"Which was tell her that I think she's amazing, smart, funny, beautiful, kind and sexy and that any guy would be lucky to love her. She smiled and said she appreciated the effort, but said she knew that I was just saying that. That I had to say that because I was her future brother-in-law and that's what any brother is supposed to say. So then I said, 'Is any brother supposed to do this?' and I leaned in and kissed her.\n\n\"At first she didn't respond, just looked at me questioningly. Of course, we'd kissed plenty of times over the weekend, but always because we 'had to'. So I said, 'This isn't your pretend boyfriend David kissing you. This is your real Davey kissing you. This is how I really feel.' I kissed her again, this time with more passion, and she responded, kissing me back. She came alive and got really into it. It felt so good to finally be kissing her as myself, showing her how I really felt and not playing a role. I noticed she was still crying, and she said, 'Don't worry, these aren't sad tears. I'm so happy!'\"\n\n\"Phew, that's good,\" I said. Too bad it required my fiance kissing her again, but I was glad he made my sister feel better.\n\n\"Yeah, I was so relieved,\" he said. \"After sharing some chaste kisses, we started full-on making out. We were so happy to have shared this experience together, it was hard to stop. Plus, we were still fully naked, mashed up against each other and barely 15 minutes earlier, we'd been having sex in a threesome. I was fully erect again in no time, which she quickly noticed and she took me in her hand. Soon, our hands were all over each other as we rolled around on the bed making out. We'd touched, felt and seen each other a fair amount over the weekend, but this really felt like the first time again since we were finally doing it without pretense and with our true, unbridled feelings. \n\n\"Before I knew it, I was laying on top of her, her hand around my hard member and her legs wrapped around my waist. I leaned down to kiss and lick and suck her beautiful huge tits and our bodies shifted so that my dick was lined up with her vagina. I felt her rub the head of my dick up and down across her wet lips and back and forth against her clit. Then she lined me up with her hole and pushed me toward it with her legs.\n\n\"I stopped her right as the head of my dick parted her folds and asked if she was sure. She asked if I loved her and I said I did and she responded that then yes, she was sure. So then I plunged fully into her steamy wet depths.\"\n\n\"You fucked my sister?!\" I asked. \"I know you guys had messed around plenty, but that was all for a reason. This is just because you wanted to fuck.\"\n\n\"Yeah, but that was the whole point,\" he said. \"I knew that I could have rolled off of her and said it was too far. But then we'd be back to square one. I had just been pretending to like her so she'd feel better about herself. I didn't actually like her. No guy did and she'd be alone forever.\"\n\n\"You know that's not true,\" I said. \"She's barely 18, she'll find someone. She's barely started.\"\n\n\"I know that, but she didn't,\" he said. \"I figured that since I'd already been inside her when we were playing pretend in front of Nina, it wouldn't be that different now that we were alone. It's easy to look back now and second guess, but it's impossibly hard to say no when your every hormone is screaming at you to just fuck this sex goddess that's begging you to. Especially if you know that if you stop, you'll once again have a crying teen girl on your hands.\"",
        "\"Do you think I'm a sex goddess?\" I asked. I knew he was right. I empathized with him. But I felt like I always got the short end of the stick.\n\n\"You and I are great together,\" he said. \"I just meant that she has a body that porn stars would be jealous of. You can't deny that.\"\n\n\"Yeah, I know,\" I said. \"I just don't want things to change between us.\"\n\n\"They won't, I promise,\" he said.\n\n\"So then what, you had sex and went to bed?\" I asked.\n\n\"Pretty much,\" he said. \"There'd been so much build up that neither of us lasted very long. After she pushed me inside her the first time, I started pounding away at her. I could tell she was close, so I pinned her hands above her head and bit her neck. That set her off. She screamed and her limbs started spasming. She told me later that it was the most intense orgasm she'd ever had. I couldn't last much longer with her cumming so loudly, her huge tits bouncing right underneath me and her tight little pussy squeezing and massaging my cock. I roared and shot a massive load into her.\"\n\n\"You came in her?!\" I asked.\n\n\"She's on birth control, don't worry,\" he said. I knew that, but that wasn't the issue. \"Anyway, we were so loud, we woke Nina up. After I finished, I rolled off her and Nina applauded, which was funny. Annie went to the bathroom and when she came back, Nina asked if she could join us in bed. Annie said that we actually wanted to sleep now, and Nina said she did too, but that the bed was more comfortable than the couch. So she got in too, leaving me squished between them.\"\n\n\"I'm kind of surprised Nina wouldn't try anything,\" I said.\n\n\"Yeah, same,\" he said. \"Though I kind of ruined that later.\"\n\n\"What do you mean?\" I asked.\n\n\"I woke up sometime in the early morning,\" he said. \"Light was barely starting to peek through the curtains. In my sleep, I'd rolled over and started spooning her and Annie was spooning me. I must have been having a good dream because I was fully erect again. We were still all completely naked, so my dick was smashed in the crack of Nina's big, soft ass. She was lightly grinding it back against me. My arm was around her and she had moved my hand so I was groping her tit when I woke up. I asked her what was happening, and she was like, 'Sorry, I couldn't ignore a huge boner in my ass.'\"\n\n\"She's incorrigible,\" I said.\n\n\"Seriously,\" he said. \"I told her that I wasn't going to do anything while Annie was asleep, figuring that'd be the end of it. But she just reached back over me and shook Annie awake and asked if she could fuck her boyfriend. Annie just smiled and murmured for us to have fun. And I thought, great. Annie and I finally get out from this cloud of pretending to be in a relationship and forge a real connection, and then she pimps me out as soon as her friend's awake again.\"\n\n\"You could have said no,\" I said.\n\n\"I guess,\" he said. \"I just didn't feel like arguing. I figured it'd be easier to just get it over. We fooled around in bed for a bit, but it was tough because Annie was there too and we barely fit when we were all lying still. So after Nina and I played around some, she got out of bed and went to the couch. She kneeled on the edge and grabbed the back of it, bending forward and presenting her little pussy, framed by that huge ass of hers. She looked back and said, 'Come fuck me, big guy.'\n\n\"I got out of bed and did. I quickly realized that she liked a different style than Annie. I was holding onto her hips and fucking her and she started slamming her ass into me. She said, 'Are you gonna fuck me or not, pussy?' That made me mad, so I grabbed her hair and pulled it and told her to call me that again. She moaned loudly, started rubbing her clit and whispered, 'Pussy.' I reached under her and grabbed her neck, choking her lightly. I said I didn't hear her and really slammed in and out of her. She started shuddering, but didn't cum yet, so I knew I had to up the ante. I let go of her hair and neck and spanked her ass red as we fucked. I called her names, like a bad girl and a dirty slut who wanted to fuck her friend's lover. That did it and she came really hard. I was glad she did because I was on the edge and didn't want to cum before her after she kept questioning my manhood like that. I unloaded inside her and then stumbled back to bed.\"\n\n\"Um, great,\" I said. I don't know why he felt the need to give me the full play-by-play. \"Anything else happen I should know about?\"\n\n\"That was pretty much it,\" he said. \"I mean, there was one other thing after we got up.\"\n\n\"What was that?\" I asked.\n\n\"Nina zonked out on the couch after I fucked her,\" he said. \"And Annie and I fell asleep again. Annie was the first to get up and shower after our alarms went off. She said more of my cum leaked out of her during the night and crusted all over her legs so she wanted to get clean. I went next, and Nina still wouldn't wake up. We finally got her up and into the bathroom.\n\n\"That left Annie and I alone. She said it was too bad that we had to go back to normal life, and I agreed that vacation had been more fun. She said that no, she meant that she and I had to go back to just being friends. I said that was probably for the best and she asked if I wanted to do it one more time, 'for the road'. I said I was tempted, but we didn't have much time until Nina was back and we had to leave to catch the ferry. Plus, I wasn't 18 anymore, and I had cum so hard twice already in the past several hours, I probably couldn't get up again. She kissed me and fondled me again. She was fully dressed, but I was only in boxers and a t-shirt.\n\n\"I guess she really wanted it, because then she started getting really dirty. She said it was too bad that I didn't want to fuck her one last time, because soon you and I would be married and she and I would be brother and sister. That even though we'd had sex and could easily imagine each other's naked bodies whenever we saw each other, that it'd be so wrong for a brother and sister to think about ravishing each other. She made me promise to do my best to resist her, because she knew that she couldn't control herself. Anytime she got horny, she would have to try to seduce me again, and I had to say no, no matter how much she flaunted her body or tried to get at my dick.\"\n\n\"Good lord, Annie,\" I said. \"This is insane.\"\n\n\"I know,\" he said. \"She just kept going, massaging my dick and telling me how slutty she would behave if I didn't fuck her again right then. She got me hard again but I was still not reciprocating, so she knelt down, pulled my boxers off, and started blowing me. She stopped every other moment to say something else filthy to me, like 'How does your dick look in your sister's mouth?' Then she pulled her shirt and bra off and wrapped her big boobs around my cock. She rubbed it up and down her hot, soft cleavage, saying shit like 'You better not shoot your hot load all over your sister's tits, that'd be so wrong.'\"\n\nI just shook my head. I had no idea where she was getting these thoughts.\n\n\"I was losing my mind,\" he went on. \"I didn't know what she actually meant and what she was just saying to get a rise out of me. But I was so worried you'd barge in to tell us that we were about to miss the ferry and see her playing with my dick and talking about fucking her brother. And I knew she'd keep escalating until I gave her what she wanted. So I pulled her to her feet, pulled off her jeans and panties, lifted one of her legs and entered her. She jumped into me and wrapped her arms around my neck and her legs around my waist. I held her up, pumping in and out of her for a few moments before slamming her back against the wall and fucking her there.\n\n\"I thought she'd stop with the dirty talk once I started fucking her, but she just kept going. Saying like, 'You fuck me so good, big brother!' and 'How does your little sister's pussy feel on your cock?' and 'Don't cum inside your sister!' She had just finished saying that when Nina walked back in. We froze, but I don't think she heard Annie. Nina just said, 'You two never stop, do you?' and Annie responded, 'No we don't. And we never will.' Nina said that she'd give us a few minutes to finish up as long as we promised to let her join us again, and Annie said that she could fuck us as much and as often as she wanted.\n\n\"Nina closed the door and I carried Annie to the bed. Annie came as soon as I laid her down on the bed, but I was still having trouble after cumming three times over the previous 24 hours. Annie kept up with the dirty talk, but switched from the incest play to saying that I fucked her so good that she would never stop. For the rest of our lives, she'd try to fuck me whenever she could. I could feel myself getting close and I told her that. Then she leaned up and whispered in my ear, 'I'm gonna fuck you on your wedding day.'\"\n\n\"Holy shit,\" I said.\n\n\"That was it and I let loose,\" he said. \"I finally busted, coating her insides with my seed again. It felt so good.\" He paused and took a deep breath, as if remembering the feeling of erupting inside my gorgeous sister. \"Anyway, that was basically it. We cleaned up and got dressed and met you outside to go home.\"\n\n\"That was...wow,\" I said. I couldn't believe that they'd fucked again after we'd all gotten up. While I was busying myself in the house, packing up to leave. I doubly couldn't believe all the filthy shit that came out of my sister's mouth. \"Wait...so you came when she said she'd fuck you on our wedding day?\"\n\n\"That was just the timing of it,\" he said. \"I was about to bust and that just happened to be what she was saying at the time.\"\n\n\"Even if that's true, she's going to think the idea of fucking her before we exchange our vows turns you on,\" I said.\n\n\"Or after,\" he said. I raised an eyebrow. \"I mean, she might have meant fucking after the ceremony. Like, during the reception or something.\"\n\n\"That's not the point,\" I said.\n\n\"Yeah, I know,\" he said. \"I just mean there wasn't anything specific about it. It was all words. I mean, before that she was calling me her brother and saying she was going to fuck me whenever she could. The wedding day thing was probably only as real as those. The point is, prom is over, we're back now, and everything will go back to what it was like before.\"\n\nI guess he had a point. We all say weird things during sex. I thanked him for telling me everything and let him go take a nap. He was understandably exhausted after everything that happened.\n\nI began wondering. I'd always thought my sister was kinda dumb, but was I actually the dumb one? I thought my fiance was naive, but was I actually the naive one? They'd done all these things together that crossed well over any line an engaged man and his fiance's sister should have. He had an explanation for each thing that happened, but still...\n\nBut still nothing. He loved me. The ring on my hand proved it. He loved me so much and cared for my family so much that he'd basically let me pimp him out to my sister just to heal her. If she was too dumb to realize that it was all pretend and only for one weekend, and if he was too naive to realize that some of her feelings were actually real, that wasn't my problem. Sure, I'd be there for both of them as they came to these realizations, but those were their lessons to learn.\n\n\"Where's David?\" Annie asked as I walked back downstairs.\n\n\"He's sleeping in our room,\" I said.\n\n\"Ok, well my room is always so bright during the day, so I think I'll see if I can nap with him,\" she said.\n\n\"Suit yourself,\" I said. \"I've got a paper to write, so I'm going to head to the library to focus.\"\n\nShe said ok and I gathered up my books and computers. As I was leaving, I passed Annie again as she headed toward our room and David. \n\n\"How long are you gonna be gone?\" she asked me.\n\n\"Probably a few hours,\" I said.\n\n\"Ok, well, please call when you're heading back,\" she said. \"That way, uh...we can get...um...dinner started? Yeah, dinner started.\"\n\n\"That'd be great,\" I said.\n\nI noticed she'd changed again, now wearing a very small tanktop that left almost none of her braless breasts to the imagination and tiny cotton shorts that left the bottom half of her ass exposed. She'd also reapplied her makeup. I smiled to myself as she closed his bedroom door behind her. I did not envy David having to explain to her that things were back to normal now, but it was good to have my confident sister back.\n\n \n"
    ],
    "authorname": "CraptainPlanet",
    "tags": [
        "cheating",
        "ffm",
        "pretend",
        "prom",
        "shower",
        "sister",
        "skinny dipping",
        "young",
        "teen",
        "masturbation"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/my-naive-fiance-goes-to-prom"
}