{
    "title": "Something to Write Home About",
    "pages": [
        "This is a long one folks, but it's broken up into sections. As usual, all people and places are fictional. All characters are over eighteen.\n\n*****\n\n\"Are you Reaves Philip? Oh my gosh, I love your books!\"\n\nA middle-aged woman with natural gray hair tickling her eyelids hustled after Reaves on the sidewalk. She was determined to get a word with him even though he was trying to ignore her, walking along at his usual brisk pace.\n\n\"I read Last Dance For Nancy. I thought it was hilarious,\" she said, dodging oncoming pedestrians.\n\nReaves stopped and looked at her. His usual reader, he thought, glancing quickly at her motherish clothes and slightly paunchy body, but not the usual comment.\n\n\"I'm happy to hear you say that,\" Reaves said, looking deep into her light gray eyes. It struck him how lovely they looked, and how they complimented the gray hair most women want to banish. \"It was meant as a comedy you know, but nobody seems to get it.\" \n\n\"I laughed so much,\" she said. \"And when I finished it I laughed even more as I thought back on how it all played out. I think you're brilliant.\"\n\n\"I'm not, but thank you.\"\n\n\"I've read interviews you've done, and I know you hate this kind of thing, but could I get a picture with you?\" she asked sheepishly.\n\nThe dreaded selfie. Reaves loathed them, but since she was one of the only readers who understood his latest book he agreed, pretending to be pleasant for a change. Out came the iPhone, in leaned her head, out stretched her arm and it was over, fairly painlessly. He'd had other fans attempt it, fiddling endlessly with the blasted device, insisting on taking another if it turned out badly, and then another. It was pure torture.\n\n\"I hope I don't embarrass myself too much saying this,\" she said as she put her phone away, \"but the part of the chapter with the Craigslist hook-up? Oh my gosh, I don't know if I've ever read anything quite so erotic before. You should do more of that kind of thing. You've got a real gift for the hot stuff.\"\n\n\"It's funny you should mention that,\" Reaves said. \"My publisher's after me for the same thing. I think he wants to cash in on the Fifty Shades wave.\"\n\n\"You could wipe the floor with that book,\" she said. \"You're ten times the writer. Do a whole book of Craigslist hook-ups and I'll be first in line.\"\n\nReaves thanked her and went on his way, thinking how interesting it was that a middle-aged mother would find Craigslist hook-ups book-worthy.\n\nThe idea stuck, as some ideas do. Two weeks later it was still bouncing around his head. A rough idea started to formulate \u2014 a book about a writer researching a book about hook-ups. Big cities, small towns, the desert West where people live hundreds of miles apart. How would the 'Casual Encounters' section of Craigslist differ in those areas? How would the actual hook-ups differ? Why would it matter? It was an idea he wasn't sure about. Was there really a story there? Characters that people would want to read about?\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nReaves sat in his publishers office, feeling less than confident about his book idea. He'd never brainstormed an idea with anyone before, and certainly not with publishers, who he'd always had an uncomfortable relationship with, but this idea was very different from his usual books, and Poppy was a new and different kind of contact at the office. She'd been with him since his last book, and they hit it off differently. Their meetings were less about business and more about creativity. A direct result, Reaves assumed, of her upbringing. The daughter of hard-core hippies, Poppy had told him she was born in San Francisco in 1967, the Summer of Love. She neared The Big Five-O with grace and a seeming detachment from anything to do with trendy fashion. Reaves liked that about her.\n\n\"So...a new idea you want to bounce off me?\" she said after the usual pleasantries.\n\n\"You know, I'm really ambivalent about this one,\" Reaves said. \"A reader gave me the idea, and as you know I usually don't pay much attention to them,\" he laughed. \"Drives Dean crazy I'm sure.\"\n\n\"Well, Dean's a great boss, but he's not the most in tune with the creative process,\" Poppy said. \"So what did this reader have in mind?\"\n\n\"Erotica.\"\n\nPoppy smiled. \"Ohhh! Dean will like that! Every meeting we have lately he's after us all to find the next \"Fifty Shades of Grey.\" I'll tell you what, I think you'll be good at it. You've flirted with it a bit. I wouldn't have asked you for it, because I didn't think you wanted to go there, but yes, tell me more. Erotica is a big tent, what did you have in mind?\"\n\n\"That's the thing,\" Reaves said. \"I'm not really sure. The idea was to build on the Craigslist hook-up thing from Last Dance For Nancy. Take something like that and make a story out of it. I haven't been able to put my finger on the story angle, but the whole thing is stuck in my head and I need to sort it out and either do something with it or discard it.\"\n\n\"Okay, well that sounds intriguing,\" Poppy said. \"What sort of angles have you thought of?\"\n\nA text buzzed on Poppy's personal cell phone. She glanced at the screen and set it down on her desk. \"I'm sorry,\" she said. \"My father's nurse. He's failing rather rapidly I'm afraid.\"\n\n\"I'm sorry to hear that,\" Reaves said. \"Last I knew you thought the chemo was having an effect.\"\n\n\"It was short-lived unfortunately. He has a day nurse and I'm with him all evening and night. If I seem a bit scattered I'm running on empty these days.\"\n\nReaves took a deep breath. \"I don't tell many folks about this, but my dad passed away from cancer,\" he said. \"I helped my mother care for him. It was desperately sad. I hate to say it, but I wish I had kept my distance.\"\n\nPoppy smiled sadly. \"I'm beginning to understand that kind of thing.\"\n\n\"Thankfully most people aren't as deeply emotional as I am,\" Reaves said. \"I think women handle those situations better.\"\n\n\"I'm not so sure about that,\" Poppy said, sensing the depth of Reaves' pain. \"Did it scar you badly?\"\n\n\"My most vivid memories of him are the ugliness of near death. It's a horrible thing to be left with. I want to remember his laugh, but usually what I see are those hollow eyes, the ones with that profound sense of doom in them.\" Reaves paused. \"I'm telling you all the wrong things aren't I?\"\n\n\"Probably,\" Poppy said, \"but that's what I like about you. I should tell you I'll be taking a little time off at some point. I've spoken to Dean about it. He'll be handling my clients personally while I'm out.\"\n\n\"Oh, sure,\" Reaves said. \"Yeah, you'll need to do that. I wish you and your dad all the best. A dignified death is a wonderful thing. I wish I had a child to take care of me when my day comes.\"\n\n\"So, back to the book,\" Poppy said. \"You've done some research? I know how you like to research,\" she smiled.\n\n\"I have not,\" Reaves said. \"Other than just reading ads for 'casual encounters' and things like that.\"\n\nPoppy smiled. \"Well, you see? There's already heat there, just from that simple phrase. Casual encounters. Maybe it's just the woman's perspective, but that makes me tingle.\"\n\n\"Yeah, that's what I mean. I think it might be a really fascinating world. But how to make a novel out of it? I don't know why I feel so stuck. I think it might be because I feel it more as a non-fiction book, almost like a Studs Terkle 'Working' kind of thing.\"\n\n\"Yes, well that would certainly interest us,\" Poppy said. \"You've pretty much got carte blanche at this point, after all your success.\"\n\n\"That's nice to hear,\" Reaves said. \"I guess the next thing to do is research. Can I confide something in you that I'd rather not have you tell Dean and the others? I'm going to jump in, in a personal way, and try and see this from the inside. I hope you don't see that as too odd, or unseemly. I'm not sure how far I'm going to go with it, but I...I feel a need to see the world from that angle, otherwise I don't think I can do it justice on the page.\"\n\n\"I would expect nothing less from you Reaves,\" Poppy said. \"And I have no problem keeping your methods private. If you'd like to keep me in the loop, I must admit I'd love to hear how things are going. It'd be a nice diversion from what I've got going on at home. I'm going to give you my personal e-mail address,\" she said as she wrote it down. \"If you want to keep your process private that's fine, but I'd love to hear how it's going. I'm up a lot at night, and the weekends are a major slog. A juicy tidbit would be most welcome.\"\n\nThe meeting ended with a pleasant handshake. \"Best of luck with your father,\" Reaves said.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nAn e-mail from Reaves surprised Poppy two nights later...\n\n\u2014 Responded to seven w4m Casual Encounters ads. Two responses, both pros looking for money. Decided to place an ad myself, m4w. We'll see how that goes.\n\nTwo nights later...\n\n\u2014 No response to my ad. Need to work on my wording. Responded to six more w4m. One sincere sounding response. Wants to meet in the park. Talks a good game, dirty but educated sounding. Are you OK with me spelling out, uh, certain things here on this e-mail?\n\nPoppy replied...\n\n\u2014 Spell it out. I'm a big girl :-)\n\nFrom Reaves...\n\n\u2014 Actually a 'big girl' is something different in the sexual world. I believe you fall into the 'athletic' category. I could describe you further if you'd like, for you own future reference of course. :-)\n\nSo the park woman, she offered a blow job but won't fuck unless I'm big enough\n\n\u2014 My, my, she is a picky one isn't she? :-)\n\nHow far are you taking this, or is it none of my business?\n\n\u2014 Haven't decided. Will meet her at least. Need to understand her better.\n\nTwo nights later, well after midnight, Poppy's in-box chimed...\n\n\u2014 She gave blowjob and took wallet. Either good research or just a miserable night. Can't decide.\n\nPoppy replied...\n\n\u2014 Old boyfriend used to say a blowjob makes even the worst day good. :-) Forgot to ask you to describe me the other night...\n\nReaves shot back...\n\n\u2014 Petite, athletic body, naturally beautiful, no artificial colors or preservatives, Graying/blue, old enough to know the good stuff, young enough to appreciate it.\n\nA nice smile carried Poppy thought the rest of a difficult night with her father.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nReaves knew the Craigslist casual encounters experience would be different in different parts of the country, and he needed to experience it firsthand. A cousin had regaled him with stories about a trip he and his wife and kids took in a rented motorhome the year before, and Reaves thought that kind of trip, combined with his book research, would make for a fascinating 'slice of life' journey across the country. There would have to be a book in there somewhere. If he couldn't find it it'd be his own damn fault.\n\nHe took a two month rental on a Winnebago motorhome, a small twenty-four footer with a pop-out on the side for a couch, and twin beds in the back that convert to a big queen size bed. Reaves was no Romeo, and he didn't know how much use a big queen sized bed would be to him, but better to have it than to want it.\n\nLeaving the New York City area in a motorhome after not driving much for the past few years was nerve-wracking, but soon the miles started ticking off and the road-trip was reality. First stop: Scranton Pennsylvania.\n\nHe'd placed an ad in the Scranton/Wilkes Barre Craigslist before he left New York, and had already had two promising hits.\n\nArtist Passing Through - m4w was the hook. He left the rest vague, but it was well written, as you'd expect. It turned out, as he made his way across the country, he got many comments from women about the literate nature of his ads catching their eye.\n\nWhen he arrived in Scranton a contact was made. A woman named \"Sheila\", although one never knows about names and details on Craigslist. One can only assume they're really the gender they say they are until you meet them face to face. Sheila, it turned out was indeed a woman. Somewhere halfway between \"Athletic\" and \"Big Girl\", she was nervous and fidgety when she showed up. If her e-mail was honest she was married and looking for a little something on the side. Not much reason to lie about that, Reaves thought, unless she was another thief. His wallet, computer and important papers were all hidden safely away.\n\nThe meeting took place in a Walmart parking lot, well known for being R.V. friendly, even to the point of letting you stay overnight if you want to. Reaves thought they'd be good places for hook-ups \u2014 more anonymous than campgrounds, though he planned to use them too. \n\n\"So you're an artist?\" Sheila asked as she looked around the still clean smelling, brand-new motorhome.\n\n\"Yeah, heading out West to do some painting.\"\n\n\"You're better looking than I expected,\" she said. \"I usually ask for pictures, but, I dunno, you just seemed intriguing.\"\n\n\"So you do this kind of thing often?\" Reaves asked.\n\nShe gave him a sexy glance. \"Maybe. You?\"\n\n\"First time,\" Reaves said.\n\n\"No shit?\" Sheila said. \"I remember my first time. It was scary.\"\n\nSheila had taken up residence on the couch. Reaves sat next to her.\n\n\"Yeah?\" he said. \"What made you give it a try?\"\n\n\"The husband. A girl can only take so much ignoring,\" she said.\n\n\"It's kind of a small town here. Isn't it risky?\"\n\n\"Scranton?\" she said. \"Fuck no, it's like a bottomless pit of scumbags. That's why you sounded interesting. I don't think any artists live here. It's too fuckin' gray and worn out.\"\n\nReaves marveled at her blue-collar ways. If she had been chewing gum she would have been perfect, he thought, like she'd walked right out of Central Casting. Simple hair, slightly rumpled clothes that would look right at home at the Salvation Army Store, a body that looked tired, like she'd just had a long walk from an all-you-can-eat buffet. She was in better shape than a lot of women these days, but she definitely had an extra layer of inactivity around her otherwise shapely shape.\n\n\"So, we gonna fuck, or what?\" she said, twirling her hair in her fingers like a schoolgirl.\n\n\"You want too?\" Reaves asked, marveling at how easy it all was.\n\n\"Yeah!\" she said quietly but emphatically, looking at Reaves body.\n\nReaves had always thought of himself as decidedly average looking, at least by New York City standards, but maybe in Scranton he had moved up a notch or two? Whatever explained it, he was rolling with it. His sex life had been crap since he broke up with his last girlfriend two years ago, so easy sex with a decent looking woman seemed like pure fun at the moment.\n\n\"Want a drink?\" he asked.\n\n\"Shot maybe,\" Sheila said. She was already unbuttoning her shirt.\n\n\"I've got some whiskey. I think I'll have one,\" Reaves said.\n\n\"Jack? I love me some Jack,\" she said as Reaves poured. \"Whoa! that's a big fuckin' shot!\" Sheila downed it in two quick gulps. \"Fuck yeah! That'll get my motor runnin'. We goin' back there,\" she asked, gesturing to the back bedroom.\n\n\"Whatever you want,\" Reaves said.\n\nShe got up off the couch, leaving her shirt laying there, and walked to the big queen bed in her bra and jeans. \"Fuck yeah! Most of the time I end up in some guy's car. This is gonna be fun!\" she said. She pushed her jeans down and sat on the bed to take them off. \"Come here and show me whattcha got.\"\n\nReaves downed his drink and walked to her. She sat in a very plain bra and even plainer panties, reached for his jeans, deftly unfastened them and pulled out his still soft cock.\n\n\"Not bad,\" she said, glancing up before going to work on it.\n\nShe sucked the soft flesh into her mouth and then pulled off, the suction stretching it like taffy. When it popped out she retrieved it and did it again, two or three more times, until it grew.\n\n\"Nice,\" she said. \"I like growers.\" With more sucking it grew another two inches and she was well satisfied. \"Oh yeah, nice cock. You're gonna fuck me good aren't ya.\"\n\nReaves groaned, enjoying her oral artistry.\n\n\"You wanna eat me? I love havin' guys eat me,\" she said, licking the length of Reaves meaty shaft.\n\nReaves nodded. She shifted back on the bed and pulled off her panties in one motion. Her bra was next and she lay back naked with her legs spread. Her palms felt the smooth bedspread and she looked around as Reaves stripped off his clothes. \"This is pure fuckin' luxury,\" she said. \"I hope you got some time, 'cause I'm gonna do ya good baby.\"\n\n\"You look really nice like that,\" Reaves said as he pulled off the last of his clothing.\n\n\"Yeah? That's nice honey. You look pretty good yourself. I wish you were local, we could get somethin' goin'. Lick my pussy. I love it when I cum the first time with somebody new.\"\n\nReaves moved in between her legs. She wasn't the cleanest woman he'd ever been with, but she wasn't dirty either. Somewhere in between. Fragrant and strongly flavored, but sexy.\n\n\"Oh fuck yeah!\" she moaned, squirming as his tongue went to work.\n\nAs he marveled at her rich flavor he realized that she was probably one of the older women he'd been with. Not quite Poppy's age, but close, and virtually all the sexual conquests in his life had been younger than his thirty-eight years.\n\nSheila propped herself up on her elbows so she could watch. Her whole pelvis was writhing, matching the rhythm of Reaves tongue.\n\n\"Fuck yeah!\" she sighed. \"You fuckin' eat me good! Oh fuck, you're gonna make me cum baby if you keep that up! Oh Fuck! Oh Fuck! Oh Fuuuuck!\"\n\nShe tensed up and then her body trembled wildly. Her final \"Oh Fuuuuck\" was loud enough to be heard across the parking lot. Reaves liked that. He hadn't been with many vocal women before.\n\n\"Damn baby,\" Sheila said. \"That's fuckin' nice. You got a condom? I want you to fuck the shit outta me.\"\n\nReaves was well prepared and slipped one on. Sheila was on all fours waiting for him. \"Fuck me doggie baby. I love it doggie,\" she said. \"Oh fuck! Yeah! All the way baby! Oh fuck!\"\n\nReaves fucked her deep and her body responded like a thoroughbred. The woman clearly enjoyed sex.\n\n\"Yeah!\" she yelled. \"Fuck me with that cock! Harder baby! Fuckin' harder!\"\n\nSheila left an hour later, walking off across the Walmart parking lot to her nondescript car, a faded Nissan or something similar. Reaves realized that the Viagra his doctor had hooked him up with was going to come in handy, at least if there were any more 'Sheilas' lurking in the rest of the country. He'd never had such visceral sex in his life. Sheila was a wild woman in the sack, and he wondered if she'd set the tone for the entire trip, or if he'd gotten lucky right off the bat.\n\nHe sat down and typed out some notes on his computer while it was all fresh in his mind, trying to get as much of her voice down as he could, along with a very detailed description of her. The way she tasted took up two paragraphs.\n\n\u2014 Her mouth tasted of whiskey with some sort of mint behind it, giving it a vaguely 'toothpastey' vibe. Nice. Very kissable. Her skin had too much perfume, probably a 'body splash' or some such thing. It had a bitter effect on my tongue.\n\nSheila's vagina \u2014 pungently slippery might best describe it. Not unpleasant at all, very richly flavored. I found myself savoring it and returning often for a taste. After a dearth of oral sex in my life lately, her's seemed more flavorful and somehow more alluring than others I remember, but maybe it was just the excitement of something new and forbidden. An older woman, a married woman. Was I tasting other men? Or her husband?\n\nAfter a few thousand words of notes on the encounter, Twilight had faded and the lights came on in the parking lot. He sent Poppy an e-mail...\n\n\u2014 First encounter a success. Sheila was perfect, although I may now be spoiled. Can't imagine it'll all be so easy, so pleasant, so pleasurable. How's your father?",
        "Poppy replied...\n\n\u2014 Dad's the same. Thanks for lightening my evening with your report. Care to share any details?\n\nReaves typed out a synopsis, using it as an opportunity to experiment with his erotic prose, and sent it to Poppy. She replied...\n\n\u2014 Wow! I'll need a cold shower as soon as Dad nods off. Don't think I've ever read anything that arousing before. Tempted to call the Super to 'fix my plumbing' tonight. Your book will sell like hotcakes with that kind of writing. :-)\n\nBefore turning in for the night and working on his notes some more, he replied to his second Scranton contact. She was a woman of few words, no name given, no pictures exchanged. They agreed on a noon-time oral only session, at a small park about ten miles from the Walmart.\n\nAt 11:30 AM, after a surprisingly good nights sleep, Reaves pulled out of the parking lot. It struck him, after many hours observing the Walmart traffic, that Sheila was quite possibly the best looking woman in Scranton. Or maybe it was just the superstore's clientele that was skewing his sample.\n\nWhen he pulled the big R.V. into the park a large woman in blue hospital scrubs caught his eye and waved discretely. As he parked his rig she walked off into an area thick with Lilacs. There were other people in the park \u2014 two men eating lunch in their cars, and a mother playing with two young children on the grass. Reaves made sure his wallet wasn't in his pants, locked the door behind him and walked as casually as he could into the lilacs. The woman was there, waiting out of sight.\n\n\"Hi,\" she said, sizing Reaves up.\n\n\"If you'd like we can go in the camper,\" Reaves said. \"It's comfortable.\"\n\n\"No,\" the woman said, looking nervous. \"This way.\"\n\nShe surprised Reaves by taking his hand. The touch prompted a small smile on her face as she led him through the tall shrubs to a more deeply wooded spot. There was a large flat rock to sit on, a few empty beer cans, and the remains of a small campfire. The ashes had been well beaten down by rain and there were at least two used condoms amongst the cigarette butts and fast food wrappers waiting to be incinerated. It was a place that reminded Reaves of his high school days, a place for sneaking a cigarette or smoking a joint, a place to play out adolescent fantasies.\n\nWithout a word the woman pushed her cotton scrub pants down her legs and sat on the rock. Her ankles were bound by the pants, but her knees were spread. Her milky white thighs were twice as big as Reaves', her still-in-place dark-gray panties showing a wet spot. She reached for the button on Reaves' jeans with one hand and felt his ass with her other.\n\n\"You're a good-looking guy,\" she said quietly, glancing up for a fleeting bit of eye contact.\n\nShe moaned deeply as she gave Reaves a blowjob. It was rudimentary at best, never taking more than two or three inches of him in her mouth. She held his ass with both hands the whole time. Her suction was intense though, and her tongue swirled around the tip of his cock. It was a deceptively powerful technique and before long Reaves was headed for an orgasm.\n\n\"I'm gonna cum!\" he grunted.\n\nThe woman nodded, glancing up again for a quick second, never letting up with her mouth. Reaves came with a jolt, the seed Sheila had left him with pumping into the big nurse's mouth. She was almost as breathless as he was, and she swallowed his sticky offering.\n\nShe savored the moment with her eyes closed, and then her panties went to her ankles and she lay back on the big rock. Her knees went even wider. Reaves spread her hairy pussy with his fingers and made first contact with his mouth. The woman jumped when she felt it, with a short, sharp moan that sounded a bit animalistic. She was clean and fragrant with mild perfume \u2014 Reaves was sure she had prepared herself just before she had left her job for her lunch-hour tryst. \n\nShe lay back flat the whole time, eyes open, looking up at the gently swaying canopy of green trees and the deep blue sky above. Reaves worked her pussy methodically, sensing what she liked, and she slowly went deeper into her seeming trance. Arms at her sides, hands flat on the rock, big chest heaving under her scrub shirt. Her breathing gave away her climb to an orgasm, and her grunts gave away the actual event. Reaves found the whole thing fascinating, but strangely detached, especially after the full-on wild-woman session with Sheila the evening before. When the woman pulled up her pants, said \"Thank you,\" and walked away without another word it just added to the strangeness.\n\n\u2014 Woman #2 \u2014 Large, well kept, very few words spoken. Oral received and given in a wooded area of a park. Blue scrubs gave her away as a hospital worker on her lunch hour.\n\nI hope things are going reasonably well for you and your dad.\n\n\u2014 Hospice nurse just left. He's slipping. Thanks for the update. I wonder if any of his nurses have similar lunches...\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nReaves took a long nap after the Nurse hook-up, and after a leisurely evening of grocery shopping and dinner he started the five hour drive to the Pittsburgh area right around midnight. His father used to prefer driving at night when Reaves was a child, and the concept made sense to him. Avoiding traffic when you're a city dweller who's not used to driving seemed like a good thing to do. An unhurried drive, punctuated with a few coffee stops and a truck-stop breakfast had him pulling into a campground on the edge of Moraine State park at around 7:00 AM. Check-in wasn't until 4:00 PM, so he spent the day exploring the park, catching up on e-mails, and scouring the Pittsburgh and Youngstown Ohio Casual Encounters ads.\n\nHe replied to a few, one from a woman in Big Beaver Pennsylvania. That made him smile. His own ad was more specific than the ones he had placed before, mentioning the name of the State Park he was at, wondering if he'd hear from a true local from that neck of the woods. He didn't get any offers from pros the way he did in the cities. In fact he didn't get any response from anybody. Dead silence for a solid day and a half.\n\nAfter an evening stroll around the campground he returned to an e-mail in his in-box...\n\n\u2014 We are at same RV park. My wife has fantasy to give a blow-job while I watch. Anything you're interested in? I'm not into guys, so nothing to worry about there. She says blow-job only, but if you play your cards right she's a horny one. Send us a picture or two. She wants circumcised and bigger than me. I'm 5 inches. Age not too important if you're attractive to her.\n\nReaves sent the pictures he had ready, one full body naked from the neck down, and one hard cock in hand from closer up.\n\n\u2014 She likes. We are lot 44, older fifth-wheel with silver truck. Join us for a cocktail?\n\n\"Are you our gentleman friend?\" A potbellied man asked as Reaves approached on foot. Reaves nodded. \"I never would have pegged you for it,\" the man said. He had a beer can in one hand and reached out the other to shake Reaves' hand. \"We saw you walking around earlier. Hey Trissy! you're never gonna guess!,\" he yelled toward their big fifth-wheel style trailer.\n\nReaves introduced himself as 'Phil' and the man was Bob. They sat down in two lawn chairs under a big awning. The space looked festive \u2014 all the chairs were random bright colors and they were atop a bright yellow rug. A small table held three empty beer cans and an empty glass.\n\n\"Small world huh? All of us right here in the same park. Gotta love the internet, huh? The missus is a little shy. Nervous, you know?\" Bob said, talking fast, like he was a bit nervous himself. \"So, you're probably wondering where we're comin' from, our angle on all this, right?\"\n\n\"Yes, I'd love to hear about it,\" Reaves said.\n\nBob reached into a cooler next to him and pulled out a dripping can of beer. \"You want one Phil? Or we got liquor inside.\"\n\n\"No, that's fine,\" Reaves said, taking the can and popping it open.\n\n\"So it's the Missus birthday,\" Bob said. \"In a couple days actually. The Big Four-O. Ha! She'll hate me for telling you that, but it's a big one, you know?\" His voice got quieter and slower, almost to a whisper. \"So she's had this fantasy for a while, another guy's cock in her mouth while I fuck her, you know what I'm sayin'? I've been all for it, but she's been reluctant to really do it. We've been readin' the ads for quite some time now, but I've never been able to close the deal, you know what I mean? Your ad, right here in the park, sent a little jolt threw her. I could see it clear as day. I dunno if it was the 'artist' thing, or the closeness of it or what, but it was like she suddenly knew it was time, you know what I mean?\" His voice rose again. Trissy, you comin' out Hun? he said toward the trailer.\n\n\"Yup, just makin' another drink,\" a female voice said.\n\nBobs voice went quiet again. \"So, you into that? It's up to her of course, when she comes out and meets you.\"\n\n\"Yeah, sure,\" Reaves said. \"That sounds great. So just so I'm clear, just a hands off blow-job? I don't want to do anything you guys aren't comfortable with.\"\n\nBob leaned in, his voice going even lower, to a beer-soaked growling whisper. \"Just between you and me, I'm pretty sure she's gonna want you to fuck her. Just roll with it, I'm all for it, and she's a horny little minx when she gets goin',\" he said.\n\nThe trailer's screen door creaked open and a small woman with a nervous smile came out.\n\n\"Trissy, this is Phil,\" Bob said.\n\nReaves got up and leaned forward to shake her hand. Her hand was limp, so Reaves didn't squeeze it too hard. Trissy's eyes locked on Reaves' for a moment, looking deep into him before speaking.\n\n\"Nice to meet you Phil,\" she said.\n\n\"Well that was formal,\" Bob laughed. \"Where's your drink honey?\"\n\n\"Oh, I forgot it,\" Trissy said. \"I'm a little scattered.\"\n\nShe turned and went back inside, giving Reaves a look at the backside of her.\n\n\"Nice trunk, huh?\" Bob said, noticing Reaves gaze.\n\nShe was petite and pear-shaped, with some 'junk in the trunk', but not too much. Tight jeans showed it off nicely. A spaghetti strap top with built-in cups covered the top half of her, showing off deeply tanned shoulders and some nice cleavage between her smallish tits. A charm bracelet on her wrist jangled a little when she reached for the door handle. She was only inside a moment and rejoined the men on the lawn chairs.\n\n\"So what kind of art do you do Phil?\" Trissy asked.\n\n\"Painting. Landscapes mostly,\" Reaves said. He felt bad lying about it, but he couldn't risk a Google search with the name Philip. Next time, he thought, a new name was in order.\n\n\"So where are you heading? You off to work somewhere?\" she asked.\n\n\"Yeah, I'm not really sure where. Mountains...desert...I'll know it when I see it.\"\n\n\"It must be fun to have such a free lifestyle,\" she said. \"So, you do this kind of...thing...you're here for...often?\" she asked.\n\n\"No, this trip is the first time I've tried anything like this. I've been curious for a while.\"\n\n\"That makes three of us,\" Bob said. \"Here's to new adventures,\" he said, raising his beer can and taking a swig. \"Well I can tell by the look on my beautiful wife's face that all is well. Shall we take this party inside?\"\n\nTrissy was the first one out of her chair, looking nervous but anxious. She led the two men into the trailer. It was dimly lit, windows closed and shades down. Bob closed the door and locked it.\n\n\"You two have a seat,\" Bob said. I'll set up the atmosphere.\"\n\nReaves didn't expect a kiss, but Trissy sat down close to him and planted one on his lips. She breathed deep through her nose as her hand moved gently on his thigh.\n\nBob turned on a porn DVD on a flat screen TV on the wall. The sounds of sex and cheesy music wafted gently through the slightly stale air.\n\nA lump in Reaves' jeans gave away his arousal. Trissy's hand soon found it, massaging it vigorously as the long kiss continued.\n\n\"He's bigger than me, huh Hun?\" Bob said. He was sitting in an over-stuffed easy chair, sipping on his beer, watching intently.\n\n\"Uh huh,\" she said, still rubbing the lump when the long kiss finally ended.\n\n\"She wanted a flat stomach and a bigger cock,\" Bob said. \"Who'd a thought we'd find you right here, two lanes away?\"\n\nTrissy unfastened Reaves' jeans and slipped her hand inside, moaning as she felt his hard flesh. Reaves lifted his butt and pushed everything down to his knees.\n\n\"Oohhh!\" Trissy moaned quietly when she saw her small hand wrapped around the hard cock.\n\nShe moved in for another kiss, this one hotter and more passionate. Her tongue went deep, trying its best to slither down Reaves throat as she moaned.\n\n\"This is way hotter than porn,\" Bob said, taking another big swig of beer. He got up and got another from the refrigerator. When he returned to his chair, Trissy was moving things forward, her eyes guiding her mouth to Reaves' cock.\n\nReaves moaned as he felt her take him in, her mouth warm and soft, much gentler than the nurse in the park in Scranton. He unbuttoned his shirt and let it fall open. Trissy's hands caressed his bare thighs and up onto his stomach, a flat one with tense muscles, just the way she wanted it. She moaned deeply.\n\n\"Why don't you take off your clothes honey,\" Bob said. \"I'm sure Phil'd like that.\"\n\nShe pulled her mouth off Reaves' meat and looked up at him. Their eye contact was pure lust and she smiled. She pulled off her little top, her bare tits milky white and lovely surrounded by deep tan. She sat back like Reaves, lifted her ass and pushed her jeans and panties down to her ankles. They came off with her sandals and she was quickly back to her blow-job, clearly enjoying it.\n\n\"Isn't she a pretty little thing Phil?\" Bob asked. \n\n\"She's about the sexiest woman I've ever seen,\" Reaves said.\n\nThat brought another moan and a flurry of mouth action, more powerful sucking and an attempt to take him deep. She failed at first, gaging on the extra two inches Reaves had on Bob, but she persisted and finally took him whole, pulling off with a satisfied smile.\n\n\"Oh baby, that's good,\" Reaves sighed as he looked into her lusty eyes. She dove in for more.\n\n\"Looks like plenty of chemistry here. Shall we move this into the other room?\" Bob asked.\n\nTrissy took off Reaves sneakers and pulled off his pants. She stood and took his hand. He left his shirt behind and stood when she did, embracing her. She craned her neck and he bent to kiss her, their hands roaming all over each others moaning bodies as their mouths and tongues nibbled and tasted each other.\n\n\"Damn!\" Bob said. \"This is fuckin' hot! What did we wait so long for honey?\"\n\n\"Phew! I'll say!\" Trissy said. \"Fuckin' hot!\"\n\nShe had hold of Reaves' hard cock and led him to the bedroom, giggling as she passed her husband. Bob smiled and winked at Reaves as they passed. The bedroom was small, mostly filled with a queen-sized bed. It was stripped of covers, with just a tight fitted sheet and two pillows. The blankets were folded and piled in a corner behind the door. His and her's bathrobes, her's a bright fusia color, hung on hooks next to a small dresser. The bedside tables held reading material \u2014 a fishing magazine on one and two pulpy romance novels on the other. As with the rest of the trailer, the windows were shut and the shades were closed. One of the bedside sconces was on, providing a dimly lit, shadowy atmosphere.\n\nWhen they reached the bed Trissy sat on it and immediately took Reaves cock into her mouth again. It was obvious she had an enthusiasm for cock-sucking, and wanted all of it she could get. Reaves was happy to help her with her cravings.\n\nBob walked in behind them, set his beer can on the dresser and started to strip. Reaves was struck by the oddness of it all. Out of the corner of his eye he watched the short, pot-bellied man get down to his birthday suit, pick up his beer and recline on his side on the bed, his head propped up on one elbow. His cock was indeed shorter than Reaves', and mostly hard. Gravity pulled his big belly down toward the bed, giving him an asymmetrical shape that wasn't at all flattering. Reaves found himself wondering what he looked like when Trissy had first met him. Thin and trim perhaps, or maybe she just liked that kind of thing?\n\n\"Fuck Honey!\" Bob said as he watched her ravenous blow-job. \"Save some of that for me.\"\n\n\"Sorry Bobbie,\" she said. \"You know me, I lose track of things.\"\n\nShe swung her knees onto the bed and crawled on all fours to him, taking his five-incher in her mouth.\n\n\"Play with her Phil,\" Bob said, looking at her ass proudly in the air. \"She wouldn't have it up there if she didn't want you too.\"\n\nReaves joined them on the bed, running his hand up her inner thigh to her wet pussy. Trissy's cock-filled mouth moaned deep when she felt his touch. Her ass was quite spectacular in that position. Slightly big ones are at their best in that position, bent over something or on all fours with an arched back, as Trissy was. He could smell the scent of her, and it drew his mouth. When his tongue lapped up through her wet pussy she pulled her mouth off Bob's cock.\n\n\"Ohh-h-h-h Fuu-u-uck!\" she stuttered, her eyes huge, looking into Bob's.\n\n\"Yeah baby,\" Bob said, looking deep into her eyes. \"We're just gettin' started.\"\n\nReaves' fingers circled around the front of her thighs and played with her clit as his tongue lapped up her juices from behind. She tasted clean, a shower right before he showed up he guessed. It was a warm, fresh taste that he loved, and he ate her deeply and with gusto.\n\n\"God!...Fuckin' God!\" she sighed, sounding like she wanted to scream but holding back.\n\nHer hips were swiveling as Reaves ate her, her ass thrusting against his face. It was female carnality of the first order, and Reaves reveled in it. Between vocal exclamations she sucked furiously on her husband's cock.\n\n\"Damn baby! Fuck!\" Bob said.\n\nHe shifted himself, leaning back against the two pillows, his legs spread either side of Trissy. Her head bobbed up and down on him, her mouth moaning and slurping. His cock and the area around it were soaked with her saliva.\n\n\"You want him to fuck you baby?\" Bob said, holding her constantly moving head.\n\n\"Mmm hmm,\" she said as she sucked.\n\n\"Tell me baby,\" Bob said. \"Tell me what you want for your birthday present.\"\n\n\"I want him to fuck me,\" she said with a breathy moan. \"I want him to fuck me hard.\"\n\nReaves stopped his licking and looked across Trissy's deeply tanned back at Bob. Bob smiled and nodded. Reaves thought about a condom, and knew he should use one, but no mention was made and the moment swept him into her, his cock slipping into her sloppy wetness like it was meant to be there.\n\n\"Oh Fuck!\" Trissy said in a high-pitched whisper. \"Oh fuck yeah!\"\n\nReaves bottomed out, deep inside her, and she let out an impossibly sexy groan.\n\n\"Yeah baby,\" Bob said, holding her face in his hands, their eyes locked together. \"Is he fuckin' you good?\"\n\nAnother groaning cry came from deep within her as Reaves started long slow strokes, bottoming each time before drawing out to the tip. He plumbed her depths with a smooth rhythm, matching the porn music coming from the other room.\n\n\"Oh my God!\" Trissy cried quietly. \"Oh Jesus!\"\n\n\"I never knew you were so religious baby,\" Bob said with a smile.\n\n\"Shit baby!\" Trissy said, looking deep into her husbands eyes as Reaves started to get wound up. \"Fuck!\" she yelped.\n\nHer noises went up in volume as the fucking went up in intensity. Soon there was a nearly constant cry coming out of her. She took Bob's cock back in her mouth but it was a losing battle. She had no concentration for it and her body was starting to move with a spastic life of its own. She lay her head on her husbands crotch, grunting with each of Reaves deep thrusts, and let his pummeling sweep her away.",
        "\"Har-der ba-by!\" she said, his thrusts making her whole body shudder. \"Har-der!\"\n\nReaves let instinct take over and he pounded her like an animal.\n\n\"Oh-h-h Ye-ah-h-h-h! she cried. \"Fu-u-u-ck Me-e-e-e!\"\n\nShe was way too loud and completely out of control. It was a beautiful sight. Bob caressed her hair with one hand and played with her tits with the other. The whole trailer seemed to be rocking on its jacks. Her next groan suddenly went devilishly deep and a powerful orgasm ripped through her, unlike anything she'd ever felt before. Bob could tell it was one for the ages. Reaves kept her flying for as long as he could, and then he pulled out and plastered her back with cum, the first shots landing in her shiny brown hair.\n\n\"Fuck baby!\" Bob said when it was over. \"That was fuckin' hot!\"\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\u2014 How's your dad? Please let me know if I can do anything.\n\n\u2014 He's almost gone. Hospice nurse just left, said nothing more to do. Looks like his last hours. So lonely here. Keep me company?\n\n\u2014 Yes, of course. What shall we talk about?\n\n\u2014 How's your \"research\" going? :-)\n\n\u2014 I'm at a State park campground near Pittsburgh. It was looking like nothing was going to happen and then I got a hit from a couple right here in the R.V. park. Best sex ever. Just left them. Wow. I'm almost speechless.\n\n\u2014 A couple? I didn't know you were going there. Very intriguing. Do tell. Do tell.\n\n\u2014 Middle aged husband and wife, on vacation. Wife turns 40 in a few days, has had longstanding fantasy to have another man's cock in her mouth while husband fucks her. Been looking at the ads for years but never pulled the trigger. Nice folks and a woman with a lot of pent-up sexual energy. We went way beyond her original fantasy right from the get-go. I've never been with a woman so enthused. Surprised I was able to keep up, but I did good.\n\n\u2014 I'm not surprised you \"did good\". Based on what you've told me so far you're way more interesting in that department than any man I've known. So what did this one look like, and the hubby.\n\nReaves described them to Poppy, and then she asked for more of a play-by-play, to help keep her mind someplace happy as her father lay dying next to her. My sanity is counting on you, she e-mailed at one point late in the night.\n\nAs Reaves regaled her with tales of his exploits he began to wonder what the hell he was doing out there, driving across the middle of the country, looking for strangers to have sex with.\n\n\u2014 I'm stating to wonder if I'm a complete nut-job, thinking this is 'research'. Is it really, or have I fallen into a hole (no jokes please) that I'm going to have trouble getting out of? Be honest Poppy, is this crazy?\n\n\u2014 Honestly, and from a very personal point of view, I don't think you're crazy, no. I've always been fascinated by sex. There's a big part of me that thinks the world is much to puritanical about it all. Yes, there's pregnancy and STD's to think about, but lot's of pleasurable activities have downsides to them, even ones that are widely accepted. Motor racing for example. People die for goodness sake, right there on national television. Why does something beautiful like sex have to be hidden away? Getting back to your current activities, I'm jealous quite frankly.\n\n\u2014 I'm guessing you're one of the only people in the world who would think this isn't a little crazy.\n\nThe chime of an incoming e-mail woke Reaves from a dream that vanished from his memory when he opened his eyes. He shook off the sleep, sat up from his perch on the couch, and clicked his in-box.\n\n\u2014 Sorry to abandon you like that. I wanted to be with Dad at the end. Having trouble typing through the tears. Dad's gone. You still there?\n\n\u2014 I'm here Poppy. You're an amazing, strong woman. Your father was a lucky man to have you with him at the end, and all through his life as a father. I'm sure he was very proud of you. \n\n\u2014 Reaves Philip, you're a sweetheart. When I first met you I never thought I'd ever say that. :-)\n\n\u2014 Did you make arrangements for tonight?\n\n\u2014 Yes, the funeral director is on his way over, and my best friend is on her way. I could use a hug right now. I need to stop crying \u2014 tell me where you're off to next, or do you have more contacts to meet where you are?\n\n\u2014 Doesn't look like anything else here, unless the woman from Big Beaver Pa. gets back to me. \n\n\u2014 Okay, that made me laugh. :-) Thank you. You've been a life saver tonight. You probably needed to sleep after your workout with Trissy, and here it is 4 AM and you're still talking to me. You're the best. So, Big Beaver? For real?\n\n\u2014 For real. Not too far from here. Her reply was vague, and it's been two days since I've heard from her. Guess I'll move on tomorrow. Trissy and Bill are leaving at the crack of dawn \u2014 she doesn't want to have to face their neighbors after all her wild screaming. She really was something else.\n\n\u2014 Wow! Jealous! Don't suppose you want a companion for a couple weeks? Sorry. I shouldn't even ask that, I know this is a work trip for you. Someone's knocking at the door, gotta go. Thank you!!\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nThe next morning Reaves checked out of the R.V. park and moved to the State Park parking lot to regroup. He sent Poppy an e-mail...\n\n\u2014 I like the idea of a travel companion. I'm driving back for your dad's memorial service. We can leave whenever you're ready after that.\n\n\u2014 Sorry, that was fatigue talking from all the madness yesterday. You're off the hook mister. :-)\n\n\u2014 Hmm. Don't know if I like that answer. Spent all morning liking the idea. If it's the sex that puts you off, I'm putting that on hold for two weeks and we'll just go for a drive and see the sights. I think you need some time off.\n\n\u2014 Dean said I could take my vacation on short notice if I wanted to, to decompress from all of this. I've got two weeks coming, but really, this is nutty to even think about. You don't need to come to the memorial services (sweet of you to offer though), and you certainly don't want a woman ten years older than you along for the kind of book research you're doing. No way Jos\u00e9. Thanks though, you sure know how to make a girl feel better. :-) \n\n\u2014 Bull crap. Age is a state of mind, and you're probably younger than me in that regard. Please reconsider, but if you don't want to join me that's okay. Can we continue our e-mails? I'm enjoying them so much.\n\n\u2014 My friend Sonya says I should do it. I will, but only on one condition. The research continues. I'll gather the females perspective and you gather the males. Think we can make that work somehow? If not, be honest, and I'll just drive up to a friend's place in Maine for a little R+R.\n\n\"\u2014 I like your idea. Exciting to think about the possibilities. Your 'free love' parents would approve if they were here, yes?\n\n\u2014 I doubt it! That's one of the few benefits of outliving them I guess. They'll never know! :-)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nA week later, after a nice memorial service with lots of acoustic guitar playing and singing from Poppy's parents aging hippie friends, she loaded an old military style duffel bag into Reaves new, improved motorhome. He'd traded the other rental in on a slightly bigger one. It was a different style with more luxury and more flexible sleeping arrangements \u2014 a full queen bed in a rear pop-out, and an electrically lowerable front berth that dropped down from the ceiling above the driver's seats.\n\n\"Good lord, this is way nicer than my apartment!\" Poppy said as she looked around.\n\n\"I thought we could take turns with the bedroom in the back, depending on what we've got going on,\" Reaves said. \"The couch and the dinette both convert, but with this we probably won't need them...\"\n\nHe pushed a button and the bed lowered from the ceiling.\n\n\"Good day Mr. Bond!\" Poppy said with a smile as she watched with amazement. She climbed onto it and curled up. \"Oh yeah, this'll be fine. I feel like I need to sleep for a week.\"\n\n\"So are you sure everything is taken care of here?\" Reaves asked. \"We can hang around another day or two if you've got loose ends to clean up.\"\n\n\"Oh no,\" Poppy said. \"I'm ready to escape reality. I've done my good deed, now it's time to start forgetting some of that ugliness.\"\n\n\"All right then, let's get this bus rollin',\" Reaves said. \n\nThey hit the road in the early evening headed for Lancaster Pennsylvania, cruising smoothly across New Jersey on Route 78.\n\n\"So what are your thoughts on the Craigslist thing?\" Reaves asked. \"How do you want to handle things?\"\n\n\"I don't know,\" Poppy said, looking out the huge windshield at the oncoming ribbon of highway. \"It's a bit awkward isn't it? This is extremely presumptuous of me, but I was thinking maybe you and I could spend the night together to break the ice, and then go from there? Of course if you aren't comfortable with that that's fine, we can just do our own thing.\"\n\n\"Why Poppy!\" Reaves said with a smile. \"You read my mind! I wasn't sure how to approach it. Jesus, I feel like parking this thing right now.\"\n\n\"Keep driving mister,\" Poppy smiled. \"We've got two long weeks to enjoy.\"\n\n\"Have you been working on an ad?\" Reaves asked.\n\n\"Educated traveling woman, w4m,\" she said. \"Petite, athletic body, naturally beautiful, no artificial colors or preservatives, Graying/blue, old enough to know the good stuff, young enough to appreciate it. Just passing through area \u2014 anyone want to party?\"\n\n\"Nice!\" Reaves giggled. \"Some of that sounds familiar.\"\n\n\"Sorry about the plagiarism. I liked it so much I wanted to use it. Think it'll hook anybody?\"\n\n\"Absolutely! That's in the top one percent of the ads I've seen, that's for sure. I'd respond to that one. Do you have any pictures to send out?\"\n\n\"Pictures?\" Poppy said, looking horrified.\n\n\"Yeah, there's often a picture swap before a hook-up. Don't worry, just body shots, no faces.\"\n\n\"Wow. I wish I'd taken some ten years ago. Do people cheat like that?\"\n\n\"Yeah, I'm sure they do. Don't worry, you're more than worthy. I can take a few tonight if you want. I've got a little editing program, we can clean them up, give them a soft focus, that kind of thing.\"\n\n\"This is suddenly feeling very real,\" Poppy said, gazing out at the highway. \"Why do I get the feeling a week from now I'll be sitting here naked?\"\n\n\"It's that hippie blood in you,\" Reaves smiled. \n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\"That was so nice,\" Poppy said, snuggled against the side of Reaves. Their naked bodies intermingled on the smooth sheets, the heat they had generated slowly dissipating. \n\n\"Why didn't I know about hippie blood before?\" Reaves asked, nuzzling Poppy's shoulder. \"I'd heard Gypsies are supposed to be hot blooded, but hippies? Who knew!\"\n\nPoppy laughed. \"You sir, bring out the animal in me. I'm not sure I've ever been comfortable letting it out before, but I've felt it, scratching at the cage shall we say, since we started our e-mails. And I'm not a hippie. My parents and their friends have a freedom to their thoughts and actions that I've never had. I guess every generation flip-flops a bit from the other.\"\n\n\"Poppy, you're not giving yourself enough credit. You are so different from other women that I know. I never met your parents, but if you're not a chip off the old block I'm a monkeys uncle.\"\n\n\"Ha! Now there's some sayings our parents generation would approve of!\" Poppy laughed. \"This is so weird. Did we really just screw our brains out in a Walmart parking lot?\"\n\n\"We did. And we're about to do it again,\" Reaves said as his hand slid up Poppy's thigh. Two fingers disappeared inside her.\n\n\"Mr. Philip!\" Poppy said with a delicious smile. \"What would your publisher say?\"\n\n\"I hope she says \"Fuck me harder baby! Fuck me more!\"\"\n\nPoppy moaned. The first round had Reaves eating her to near insanity, followed by missionary and girl on top. This time she had a few other things in mind. She sat up and took Reaves nice cock in her hands, massaging its near hardness as she examined it. Just about the perfect size, she thought, not too long but longer than most of the guys she'd been with, and a nice chunky girth that really filled her. It filled her small hand too, a visual that was really turning her on at the moment. As she stroked it to full hardness she massaged his balls with her other hand. Smooth and soft. Did he shave them, she wondered? Yes, he must, the hair around his cock was short and looked to be groomed too.\n\nShe leaned in and took her first taste of her new lover, his cock tasting of pussy and sweat, with a rich, heady scent of pure sex, something she hadn't smelled in a while. New York City can be a lonely place for a forty-eight-year-old. Poppy moaned quietly as she let the nice cock fill her mouth. \n\nReaves moaned too, the sensuality of the moment sweeping him away, so different feeling than the casual hook-up sex of his 'research'. He could tell Poppy was exploring, taking her time. They had two long weeks to enjoy each other, and they were off to a beautiful start.\n\nPoppy's favorite position, one she hadn't indulged in in many years, was sixty-nine. The anticipation was luscious, slowly sucking Reaves cock as she thought about the move \u2014 how she would swing her leg over his head, how his mouth would feel in that most open of positions, with all of her carnality on wide-open display for him. As she made the move and felt his mouth on her she almost lost it, so overwhelming was the feeling. As his tongue explored her insides she filled her mouth with his cock again, the silky smoothness of it completing a circle of energy that was all about life, all about grabbing on to this spinning planet and living it to the max.\n\nOn her knees ten minutes later, ass in the air, head on the soft sheet, Poppy smiled as Reaves sank into her pussy. The puffy pink lips, engorged and lovely, surrounded his hardness, taking him into her hot core for another round of bliss.\n\n\"God you feel good!\" she said quietly, eyes closed, as close to a dream as you can be when you're awake.\n\nReaves could only moan. Poppy's velvety tunnel felt so glorious he couldn't begin to put it into words. Sometimes it's best to keep your mouth shut and just let the magnificence of life wash over you. He fucked Poppy deep and slow, both of them uttering guttural groans as the intensity rose. The energy of it drew Poppy upward, first to her elbows, then up on all fours, then slowly rising up on her knees. Reaves embraced her as he fucked up into her, his hands holding her lovely tits as her head turned. Their eyes met with a 'this is fucking incredible' look, and then their mouths met and their tongues spelled out the same sentiment, kissing with pure passion as the fucking continued. Reaves' cock rubbed hard against her g-spot in that position and she exploded in orgasm. His hands held her tight as she spasmed, squeezing her tits hard. With her face inches from his she cried out, her eyes looking sideways into his, the 'Oh my God!' look on her face the most beautiful thing Reaves had ever seen.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nThe next morning they woke under a soft blanket, legs still tangled. Sunlight leaked through the closed blinds and the sounds of cars in the parking lot reminded them where they were.\n\n\"How's my hippie lover this morning?\" Reaves asked.\n\nPoppy smiled. \"I'm finally starting to understand the whole 'free love' thing,\" she said.\n\n\"Did you ever talk to your folks about it? What it was like back then?\"\n\n\"No, unfortunately. I never felt comfortable asking my dad about it, and my mom died suddenly when I was too young to get into all that. I'd love to hear her side of it, the woman's perspective. I like to picture big, loving orgies with psychedelic music,\" Poppy laughed, \"but I wonder if it was anything like that at all.\"\n\n\"I wonder if anyone's written a book about the sexual side of the Summer Of Love?\" Reaves said. \"I'm with you though, I like to picture it as a big beautiful orgy. Have you ever been a part of any kind of group sex?\" \n\n\"Never. To be perfectly honest, I'm hoping for a threeway with you on this trip. It's been on my mind for a week, ever since your e-mails about your experience with Bob and Trissy. Dreaming about it helped to carry me through a week of grieving.\"\n\n\"Well my hippie lover, that can almost certainly be arranged. We could put out feelers for a real live orgy too. You never know what Craigslist might have up its sleeve.\"\n\n\"Wow. You know, I've always enjoyed vacations,\" Poppy said. \"They always have a sort of otherworldly feel to them, but this, this is just plain exiting. I've got adrenaline flowing just thinking about the next two weeks.\"\n\n\"That's that hippie blood again. I'm tellin' ya, it's hot stuff,\" Reaves said. His mouth found a tit and he nibbled on the nipple.\n\n\"Ohhhh!\" Poppy moaned quietly. \"Okay, best vacation ever...\"\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nLater that morning they posted their ads and each replied to a few, including two mw4mw ads looking for 'same room swaps'.\n\n\"Let's write an ad looking for an orgy,\" Reaves said. \"I doubt if we'll have much luck in small towns or out in the country, but you never know. We can always hit a bigger city and try it out there.\"\n\nPoppy's adrenaline kicked in again as she listened to Reaves. She was in it for real at that point, no turning back. Go with the flow, just go with the flow, she kept telling herself. The two of them worked up the ad and posted it...\n\nFWB couple looking for group situation/orgy. Both clean, attractive, fit. We are a laid back, easygoing couple, passing through on extended vacation, looking to experience our first orgy.\n\nLater that morning, while Reaves typed up some notes from the trip, Poppy e-mailed her friend Sonya...\n\n\u2014 Sonya,\n\nWell what can I say, you were right. Reaves and I fucked like bunnies last night. Actually it wasn't that frantic, it was slow and beautiful. Orgasms galore. What a way to clear my head! :-)\n\nWe spent the night in a Walmart Parking lot in Lancaster Pennsylvania. They're known for letting RV-ers do this I guess. An odd place to have wild, wonderful sex, but this trip will be full of the unusual, so this is a good way to kick it off. Still grieving dad much of the time, but, this trip is working wonders so far.\n\nThanks so much for helping me these last few weeks, you're the best.\n\nLove you, \n\nPoppy \n\n\u2014 Poppy -\n\nOMG, you go girl! So happy you're able to do this after the time you've had this month. I just looked at Reaves' picture in the back of his book to refresh my memory...YUM! I'm so jealous! What is he, like ten years younger than us? And you're just gonna fuck the shit out of him for two weeks? Along with a bunch of other guys? WTF! Wish I had some of that!\n\nHave fun, stay safe, and most of all, tell me all about it, as often as you can! :-)\n\nLove ya kid,\n\nSonya\n\nReaves and Poppy hit the road, that long ribbon of pavement snaking under them, blue sky and white clouds floating over.\n\n\"It's mesmerizing,\" Poppy said. \"This windshield is so huge, it's like the whole world is coming at us.\"\n\n\"Is it really going to take an entire week before you're sitting there naked?\" Reaves asked with a sly smile.\n\n\"Ha! I'm still a forty-eight year old businesswoman you know!\"\n\n\"Are you disappointed Lancaster was a dud?\"\n\n\"A dud?! Are you kidding? Two nights in bed with you? That was so far from a dud.\"\n\n\"Maybe it's better to ease you into things anyway,\" Reaves said. \"How's your sex life back home, if you don't mind me asking?\"\n\n\"Not even worth talking about really. Let's see, the last guy who made it all the way inside of me was...about six months ago I guess. The dry spells get longer as you get older.\"\n\n\"Maybe that's what all these people on Craigslist are trying to battle,\" Reaves said.",
        "\"Yeah, I guess it's a way to keep the juices flowing,\" Poppy said. \"It seems so dark and devilish though, at least I always thought of it that way. Like the underworld, you know?\"\n\n\"Yeah, that's what's so fascinating about it, or at least I thought so when I was first thinking about the book. But now, after a few experiences, it's not really that way at all. We may come across some of that. I'd find it interesting, as long as it's not too out there.\"\n\nPoppy dozed off in the big comfortable seat as they drove, and the miles ticked off under humming tires. Charlottesville Virginia was their next stop. They pulled into town for an early dinner and then checked in at a campground about a dozen miles away. They had posted their ads on the Charlottesville List before they left Lancaster, and by the time they had the motorhome set up for camping Poppy had three hits and Reaves had two.\n\n\"Nothing on the orgy ad,\" Reaves said. \"I wonder how that'll work out.\"\n\n\"This is a college town,\" Poppy said. \"If my porn watching is any indication, the dorms are full of orgies these days. They don't want old timers like us though. God, it feels so odd talking about this stuff like it's normal.\"\n\n\"Research my dear, research. All in the name of science,\" Reaves laughed.\n\n\"Yeah, I don't know,\" Poppy smirked. \"I'm beginning to think you're just a horny son-of-a-bitch.\"\n\n\"Answer your suitors sweetheart. Let's see what pleasures await...\"\n\n\u2014\n\nTwo-hundred-and-fifty pounds of muscle held Poppy down as a slippery cock fucked her. Each pounding thrust shook her to her core, and her screaming shrieks hung like industrial noise in the thick humid air of the hotel room. It was a visceral, almost violent fuck, the likes of which she'd never experienced before, or even seen watching porn for that matter. The big man had her pinned, and she was in the thick of things big-time. Reaves was in the lobby reading a magazine, the muzak on the speakers lulling him to sleep.\n\n\"Oh!...My!...God!\" Poppy shrieked as the pummeling continued.\n\nWhat started as a meeting for a blow-job had quickly escalated. The big man had asked consent to go farther, and Poppy had given it, but she didn't expect or anticipate how quickly and violently he would take her. It was a rape, and she had unknowingly agreed to it.\n\nThe big man slowed his assault and released the pressure on her arms. She assumed he must have cum inside her. He hadn't, and after the initial violent flurry his face changed, relaxing a bit.\n\n\"Sorry,\" he said. \"You okay?\"\n\n\"Yeah, I think so,\" Poppy said, the fear in her eyes softening a bit. \"That was too much for me.\"\n\nShe knew she didn't want to be scared away from the whole endeavor with Reaves on her first try, so she took a few deep breaths and regrouped. \"Let me on top, okay?\"\n\nThe man freed her from her pinned on her back position. She sat up and rubbed her arms where he had held them. She took a better look at the man. He looked tense and unhappy, not at all like the smiling bare-chest-and-head shot he had sent when they exchanged pictures.\n\n\"You okay?\" Poppy asked. \"You don't look like you're having fun.\"\n\n\"Goin' through a rough patch. My wife. She's...uh...\" he said, shaking his head in disgust.\n\n\"Say no more honey. But I'm not your wife. I'm just here to have a little fun. Can we do that? Have a little fun?\"\n\n\"I'm sorry,\" the man said, looking down at the floor, unhappy with himself.\n\n\"If you smile for me like that picture you sent I'll take off this dress and we can fuck a little. My friend's waiting for me, but we can have another go.\"\n\nThe man smiled. Poppy stood and let her dress fall around her feet, her panties looking disheveled, all stretched out from when the man tried to rip them off her. She took them off and unhooked her bra, surprising herself with how easily she was getting naked with a stranger. Something about the way the whole thing went down made her feel completely in control.\n\n\"Show me that big body of yours,\" she said. \"I've never been with a man as muscular as you.\"\n\nThe man stripped. He wasn't the most handsome specimen in the world, but he was powerfully masculine, and Poppy responded to it.\n\n\"You're a real man, aren't you. I hope you like me too.\"\n\n\"You're beautiful,\" he said, looking down at Poppy's petite frame. \n\nShe leaned back on her arms, legs slightly open, nipples hard. She was fully aware of her body language. So much went though her head in that moment, it surprised her how sharply aware she was, and how she had been able to turn the mood of the whole encounter in her favor. It was a power she'd never felt before, and it was time to put it to the test.\n\n\"Lay down for me, on your back,\" she said.\n\nShe gently massaged the reclining man's muscular thighs, widening the circle of movements until his cock was in play. She'd had it in her mouth earlier but this was different. He was in control then, thrusting it uncomfortably, causing her to gag. This time, with him on his back and Poppy above, he lay passively and she could tell from his face he was enjoying it.\n\n\"You work out honey?\" she asked. \"I've never felt muscles like these before.\"\n\n\"Yeah. Too much time at the gym. And a rugby league.\"\n\n\"Wow! Sexy! Little old me, fucking a rugby player! Wait'll I tell my friend back home, she'll flip when I tell her.\"\n\nPoppy took his cock in her mouth. The big man moaned, and his half-hard cock solidified nicely. It wasn't big, and a bit of an odd shape, but it seemed to fit his rough-and-ready personality.\n\nPoppy reached for her dress on the floor and took a condom out of a pocket. She put it on the man and straddled him, letting her still raw pussy sink down onto it slowly. She put her hands on his big shoulders and started to fuck him.\n\n\"Oh yeah!\" she said quietly. \"See, this is a better pace for me. Is this okay honey?\" she said breathily.\n\n\"Perfect,\" he said. \"You're perfect.\"\n\nPoppy smiled. She was proud of herself on so many levels \u2014 not freaking out at the initial rough stuff, taking control of a damaged man, getting fucked by a strange rugby player in a Virginia hotel room. It was all big for her. Really big.\n\nWhen it was over Poppy went out to the lobby with a content look on her face. \"That was one of the more fascinating times of my life,\" she said to Reaves as they walked out.\n\nThe cab ride to the RV park wasn't the place to talk about it all, but when they got back to their rolling home she opened up. Reaves was distressed at first, and never got fully on board with her relaxed attitude towards what had happened, but by the end of the conversation she had convinced him that it was a positive experience and she was moving on. The lessons learned were good ones, and she wanted to continue.\n\n\"Well, I think you're a better person than me, that's all I can say,\" Reaves said. \"Maybe being so private with a guy isn't the best idea. What do you think about doing a couples ad? Bringing in a third for you to play with?\"\n\n\"It sounds exciting. A threeway with you has been the fantasy, yeah. But I don't want to give up on the one-on-one thing based on one experience. Like I said, I learned good things, and it ended up really hot. I'm proud of myself. Let's just leave it at that, okay?\"\n\n\"Okay. I'm proud of you too,\" Reaves smiled.\n\n\u2014 Sonya,\n\nDo you ever dream of a huge, muscular athlete holding you down, pulling your panties aside and fucking you with your dress on? A rugby player maybe? Close your eyes and think about it \u2014 you can't move, your nipples are hard, your pussy's wet. You can smell him. He looks more manly than any other man you've ever seen. He fucks you so hard you almost go unconscious...\n\nWhen he's done, dazed like an animal, you tame him, massage him, ride him at your speed, like a porn girl. You have an orgasm on top of him that rattles you to your very core, an orgasm that feels like the start of a new chapter, a freer, more 'in control' sexuality that makes you tingle every time you think about it.\n\nHave you ever had a dream like that?\n\nXO,\n\nPoppy\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\"There's a girl driving out,\" Reaves said after he'd checked his e-mails after dinner. \"A student at UVA. Didn't send me a picture after I sent her mine, but says she's nineteen. Did you ever think about older men when you were her age?\"\n\n\"Oh Yeah! Are you kidding? When I was that age my dad's friends were so tempting. Of course they were always perfect gentleman, but I fantasized about them all the time.\"\n\n\"I guess it works both ways. One of my mom's friends was hot.\"\n\n\"Yeah, hormones at that age are crankin' big time,\" Poppy said. \"So I should get out of here if she's on her way. I'll go read over by the kids playground and take a walk around. Have fun...\"\n\nA slightly grimy Toyota Yaris with New York plates pulled up alongside the motorhome ten minutes later. Reaves was sitting outside under the awning.\n\n\"Are you Phil?\" the young girl asked.\n\n\"I am. You must be Madison.\"\n\nShe got out of her car looking casual, but as Reaves got up to greet her he could sense her nervousness. He offered her a drink and she didn't follow him to the door. When he came out with two beers she was sitting stiffly in a lawn chair.\n\n\"So, I see you're from New York,\" Reaves said, gesturing toward the car. \"I'm from Manhattan.\"\n\n\"Oh really?\" Madison said, looking like it was some kind of magical place. \"I'm from upstate, near Utica.\"\n\n\"So what are you studying?\"\n\n\"Business. I just finished freshman year.\"\n\n\"That's something I never had a head for. How's it going? You liking it?\"\n\nMadison sighed. \"Not really,\" she said with a sad laugh. \"My dad sort of pushed me into it.\"\n\n\"A lot of my friends switched majors after the first year,\" Reaves said. \"You could think about that.\"\n\n\"Yeah, maybe,\" she said. She was sipping fast at her beer, already tipping it like it was near empty.\n\n\"I hope you don't mind me asking...what made you answer my ad?\"\n\nMadison smirked and looked shy. \"My friend and I were looking at them. We liked yours. She dared me.\"\n\n\"Oh. Do you often take dares like that?\"\n\n\"No!\" Madison said emphatically. She squirmed in her chair. \"I kinda...can't believe I'm sitting here. When I drove in I thought it was gonna be a trailer park, where people live, you know? With trash around and stuff. I was just gonna drive right through and keep going, you know? But it's like a real nice park here, and this bus of yours...it's not what I expected.\"\n\n\"Yeah, these campgrounds are really nice sometimes. So why didn't your friend come with you? That would have been fun.\"\n\nMadison looked like the idea excited her, but was somehow crazy. \"I'm sure she thought I'd never do it. She had that look on her face, you know? I hate that look.\"\n\nReaves could tell Madison was a shy girl. Low self esteem showed on her face and in the way she dressed and presented herself. She was thin and trim, but slouched and wore jeans that were a little too big to flatter her. A plain gray sweatshirt added to the 'is there a woman in there?' vibe. Reaves liked the natural no-make-up look on her fresh face, and the straight, dark-blonde hair was attractive, cropped perfectly straight at the bottom, just above her shoulders. The few hints of a smile were nice too. \n\n\"Well you showed her, just by showing up and talking to me, right?\"\n\nThe first real smile brightened Madison's pretty face. Reaves got her another beer and she cracked it open.\n\n\"So where are you going in this thing,\" she said, eyeing the big shiny motorhome\n\n\"My friend and I are heading West. Her father just died and she's trying to clear her head a little.\"\n\nMadison looked shocked. \"You have a girlfriend with you?\"\n\n\"No, just a friend. A friend with benefits, I guess that's what folks your age say these days. She's not here, she went for a walk.\"\n\nMadison looked confused, like she was trying to process the strange new world she was in the middle of. \"So you guys have sex with each other, and you do this too?\"\n\n\"Yeah. It sounds crazy when you say it like that, but, yeah. Is this something you still want to do, or haven't you made your mind up yet?\"\n\n\"I think I'll disappoint you. I've only been with one boy.\"\n\n\"Let me put it this way,\" Reaves said. \"Guys my age, we dream of girls like you. I'd love it if my dream came true tonight.\"\n\nMadison sat stunned by the words. Even with her big sweatshirt Reaves could tell her breathing was deeper, shorter. Her eyes, too, showed the 'cranking hormones' Poppy had mentioned. Reaves got up off his lawn chair and offered Madison his hand.\n\nOut of her clothes Madison was a revelation. A long-legged, slim, small-titted beauty, with sharply pointed nipples as hard as stone, and a flowery little pussy with just enough hair so she didn't look like she was twelve.\n\nShe seemed happy with Reaves body too, examining every inch of him with her eyes, particularly fond of his manly ass as he led her by the hand into the bedroom. This was no boy she was about to be fucked by, and the thought was nearly overwhelming.\n\nChoked up with an overabundance of adrenaline, Madison was silent as Reaves sat her down on the big bed. He lowered her down, admiring the purity of her youthfulness. He knelt on the floor, spread her legs, and nestled himself between them.\n\nMadison looked at the ceiling and then her eyes closed as the air left her lungs. It was an involuntary response to Reaves' mouth on her, inside her thigh, down near her knee. His mouth followed his hand to the promised land \u2014 soft petals of flesh, spread open slightly and glistening.\n\nReaves wanted the encounter to be all about Madison. He didn't want her to feel uncomfortable because of her lack of experience, so he would just pleasure her every way he knew how. The first way was with his tongue, and he brought her to a writhing orgasm that was every bit as beautiful to see as you would expect from a shiningly beautiful, youthful girl like Madison.\n\n\"That was so beautiful,\" Reaves said, looking up from his juicy feast.\n\n\"Woowww,\" Madison sighed. \n\nShe was still looking at the ceiling, trying to get her bearings. Reaves lapped up her juices some more and she moaned.\n\n\"Tell me what you want sweetheart,\" Reaves said quietly. His tongue tickled her clit again. \"Anything you've wanted to try? We can do anything.\"\n\nMadison moaned as she thought about it, and her hands went to Reaves head, holding his mouth to her pussy.\n\n\"Oh god!\" she sighed. \"Oh yeah!\"\n\nAfter another shuddering orgasm she tried to gather her wits a little. \"We can try...?\"\n\n\"Anything,\" Reaves said.\n\nShe lay her head back again and Reaves could tell her eyes were big, her mind working. She rolled on her side and was up on all fours, looking back over her shoulder.\n\n\"This?\" she asked shyly.\n\n\"Oh yeah!\" Reaves said with a smile.\"Do you have any idea how unbelievable you look this way?\" He ran his hands up the back of her thighs, his pinkies tickling across her pussy. \"God you're beautiful.\"\n\nHis mouth went back to work and Madison couldn't believe what was happening. The feeling was so delicious she laughed as she moaned. It was music to Reaves ears. He licked all her tender parts \u2014 her lovely pussy all the way to the soft spot between it and her tiny asshole, and then he licked that too, circling his tongue into it as best he could.\n\nA condom was within reach on his bedside table, and he put it on while he licked. He stood, Madison looked back at him with wide eyes, and he pressed the tip of him into her sweet pussy.\n\n\"Ohhh!...Ohhh!...Ohhh!\" Madison sighed with each small thrust.\n\nTo say she was tight would be a laughable understatement, and Reaves wondered if would be the shortest fuck of his life.\n\n\"God! You feel unbelievable!\" he breathed, trying to get a hold of his brain, a brain that was screaming \"Ejaculate! Ejaculate!\"\n\nSomehow he got himself together and thrusted his way home, bottoming out against Madison's sweet ass.\n\nMadison was speechless. What was happening was new and beyond words. She had been fucked before, missionary style when she was a senior in high school, but the whole event went by quickly. The boy was small, and it wasn't very memorable. She had always hoped the 'real thing' would be better. And oh how it was! She wanted to yell out, to scream like the porn girls do, but for some reason she couldn't, choked up with emotion and the soaring, mind spinning feeling of another orgasm building. Another orgasm! Weren't those only 'gifted women' who could have more than one? And the porn girls she was sure were faking it? She couldn't believe it was happening to her. Positively could not believe it!\n\nShe dropped her shoulders to the bed as Reaves' rhythm smoothed into a proper deep fucking. A grunt made its way out of her open mouth, and then another. As the orgasm swelled inside her her noises grew as well, and soon a nearly continuous groaning moan emanated from somewhere deep inside her. It rose in pitch as she flew closer and closer to the fiery core of it all. Finally she reached the molten center, and dove in with a swan dive.\n\nReaves' own release was a thing of beauty too, the fiery tightness of Madison wringing more out of his crackling nerve endings than he thought possible. The big crescendo went on for the longest time, and then their mutual fire burned to a smolder. Madison's limp body went flat with Reaves on her sweaty back, softening slowly inside her.\n\nIt was a long, beautiful session of pure sensuality. An older man with experience and a big, generous heart, and a fresh young woman taking it all in, reveling in every move, every new position, every mind-expanding orgasm.\n\nAs Madison drove out Poppy was walking back, book in hand. She waved at the little Toyota and smiled. Madison slowed to a stop.\n\n\"Are you...Phil's friend?\" she said out the window.\n\n\"Yeah.\"\n\n\"I'm not...like this. I've never done this before,\" Madison said. She wasn't sure why she said it. Her mind was still floating in a blissful place, and she could have easily yelled, \"I just fucked a real man and I fuckin' love it!\" Instead she said, \"I'm not like this,\" more out of girlish instinct than anything else.\n\n\"I know honey, I can tell.\" Poppy walked up to the car and leaned down. \"My first time with a stranger was earlier today. I put an ad in, a man answered it, I went to his hotel.\"\n\nMadison looked astonished, not only at the story, but the honesty as well.\n\n\"Phil was wonderful,\" Madison said. \"I can't even begin to...\" Her voice trailed off, seemingly overwhelmed with the emotion of the experience.\n\n\"Find yourself a good man like him,\" Poppy said. \"Don't settle for bad in bed. I speak from experience.\"\n\nMadison drove off and Poppy smiled a sad smile. Her college days were so far behind her, and nothing like Reaves ever happened to her back then.\n\n\u2014 My grandmother taught me to write thank you notes, so thank you Phil. Our time together was a huge step outside of my comfort zone, and I can already tell I'm a better person because of it. I finally feel like I'm not a high school girl anymore. My friend didn't believe me at first, that I went though with it, but she can tell something's different about me. Anyway, I had so much fun. If you're ever anywhere around here again, look me up. Ha ha! I'm smiling right now, never thought I'd say something like that to a sexy man. Wish I could taste you again.\n\nHave a safe trip,\n\nMaddie\n\nP.S. I met your friend on the way out. I like her. :-)\n\nReaves and Poppy both smiled when they read Madison's e-mail, and they composed Reaves' reply together...\n\n\u2014 Maddie,\n\nI do love your nickname. Wish I'd known it when you were here. It very much suits a sexy young woman like you.\n\nPoppy enjoyed meeting you too. So much so that we were wondering...would you be interested in a threeway with the two of us? If it's not your thing we understand completely. My time with you was so special just as it was, and I'll never forget you. But if you think you might want to join us we'd love it. In fact the idea is quite astonishingly wonderful, if I do say so myself. But I guess any guy would say that about you and Poppy together in his bed.",
        "Please don't think you'll hurt our feelings if you say no. It's totally cool to leave things as they are, with the memory of you burning brightly in my mind, as it will the rest of my days.\n\nXO,\n\nPhil\n\n\u2014 Phil,\n\nYes please! But I should say I've never been with a woman. Poppy might be disappointed. It's funny how connected I felt to her when we met. An odd feeling, but very nice. As I pulled away and looked at her in the mirror she looked so sexy. Older women usually don't hit me that way, but she did. \n\nWe already share you, in a way, so sharing you together makes sense, right? And really, I'd be with you again under just about any circumstances. To have you ask me back makes me happier than you can imagine.\n\nThe details were worked out and Maddie spent the entire next night and morning in the motorhome. Poppy had never been with a woman either, so the two girls explored and experimented on each other, with willing participation and fascinated observation by Reaves. It was a blissful night, with a few hours of sleep in a warm tangle under a blanket. No clothes were worn by any of them from the time Maddie stripped out of her restaurant waitress uniform when she arrived until she reluctantly put it on again at noon the next day for her departure. \n\n\"My roommate will never, ever believe I did all this,\" Maddie said as the three of them were naked in bed, eating donuts after some slow, sensuous early morning love-making.\n\nPoppy got her cellphone and took a selfie \u2014 she and Maddie bare-breasted and smiling while Reaves licked Maddie's pussy, his face not visible. \"There,\" Poppy said. \"Proof. I'll send it to you.\"\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nBack on the road again, with the unknown still ahead of them, both Reaves and Poppy wondered if anything could top what had happened in Charlottesville. Poppy had two eye opening, mind altering experiences, both powerful and empowering in their own way, and Reaves, well, he'd just about fallen in love with Maddie.\n\nA leisurely eight hour drive across the Appalachian Mountains brought them to Lexington Kentucky. Poppy had fallen into a place of deep relaxation on the trip, reclining in the plush passenger's seat wearing only her bra and panties for most of the way, listening to music as she reflected on her life with her father. Reaves could tell she was in a contemplative mood, so conversation was minimal. Her middle-age beauty was on full display through the massive windshield, and they had quite a few laughs at the way traffic altered as male drivers angled for a better view. Appreciative truckers gave loud blasts of their horns.\n\n\"I wonder if this is were the term 'horny' comes from,\" Reaves laughed at one point after a particularly long blast.\n\nPoppy composed a long e-mail to her friend Sonya as they drove, telling her about her first experience making love to another woman...\n\n\u2014 Sonya,\n\nWe've already talked about my rugby man, so now on to chapter two of the Charlottesville story. For lack of a better thought, I'll start this the same way as before...\n\nHave you ever dreamt of making love to a woman? I know I have, many times. I'm not sure why it never happened before \u2014 I've been a sexual woman for over thirty years now, but for some reason I'd never taken that plunge. Well I plunged yesterday, dove right in, and the water was heavenly. Reaves and I spent eighteen hours with an angelic college student named Maddie.\n\nThe experience was so different than sex with a man, even a gentle, caring man like Reaves. Perhaps some of it had to do with the fact that it was the first time for her too, being with a woman I mean. And with Reaves there to fill us whenever and wherever we wanted to be filled, well, it was as good as it gets, I'm sure of that.\n\nI'm writing to you on the road to Kentucky. I'm sitting here in my smallest bra and panties, very much on display to the traffic around us. Truckers are blowing their horns and blowing me kisses. Can you believe it? Me? I can scarcely believe it myself, and yet here I am. If I've learned anything this past week it's that hiding one's true self is a waste of one's life. Best to grab hold of the spinning merry-go-round and hurl one's self aboard. It might be the ride of your life, as I'm finding out.\n\nSo have you, I wonder? Dreamt of making love to a woman? Or maybe you've done it already, and you're way ahead of me? Maybe you've experienced the taste of a woman, that slippery, wet sweetness between her legs that coats your tongue and fills your senses. Maybe your tongue has made a woman cum, her squirming softness pressing hard against your mouth as you drink it all in \u2014 the sight, the sound, the scent and the taste of her. Maybe you've kissed a woman right after you made her cum, both of your hearts still pounding as you share the taste of her in your mouth. Kissing a woman is the most amazing thing, so soft, like floating on a cloud.\n\nYou know, I've touched and fondled my own tits, even masturbated while playing with them, as I'm sure most women have, but touching another woman's, well that's just something I can't even describe. Maddie's are smaller than ours, but perfect, the way nineteen-year-old tits are. I remember mine at nineteen, and I remember yours when we first met at twenty-two. The first time we went to the beach together...I vividly remember yours that day. Do you remember that day Sonya? We both bought tiny little bikinis and giggled as boys looked at us. I must have been looking at you more than the boys that day, because I can still see you in my mind's eye, standing there with your beautiful smile, and the boys have all vanished from my memory.\n\nI'm in a contemplative mood today. Thinking of Dad, trying to orient my memories of him away from the last few months, back to the happy times. It's working. I feel like I'm in a good place right now. A place of love and appreciation. \n\nMom and Dad, they were always free with their bodies, in a way I've never been until this week. There was often nudity in the house, until they sensed me becoming uncomfortable with it when I was a young teen. Swimming remained au naturale throughout their lives though, as I'm sure you remember Sonya! I'll never forget the look on your face when we went to visit them at that cottage they rented and they both walked out in their birthday suits for a swim. Remember how we laughed afterwards? \n\nWe have so many shared memories, you and I. I wonder, do we have any shared dreams?\n\nXO,\n\nPoppy\n\n\"You writing a book of your own?\" Reaves asked as Poppy typed on her laptop.\n\n\"Just catching up on some e-mails. A long one to Sonya, and a few others.\"\n\n\"Tell me about this mysterious Sonya,\" Reaves said as the big motorhome hummed along on the long, open road.\n\nPoppy set the laptop down and relaxed even more in the big, cushy seat.\n\n\"We met when we were twenty-two, fresh out of college. It was a crappy waitress job, but she made it so much fun. You know those kind of people? Both of us were looking for real jobs, but needed something to keep us going. We ended up sharing an apartment out in Queens. My mom and dad just loved her. She's really pretty, so my dad...he always had an eye for the ladies, and Mom, she just hit it off with Sonya like she was another daughter. It was interesting to watch, because Sonya comes from a strict, religious family, and my folks were from the opposite side of the spectrum. The funny thing is I grew up a little uptight, and she was less so. I guess it's true what they say about kids wanting to be different from their parents.\"\n\n\"So what does 'really pretty' mean in descriptive terms,\" Reaves asked.\n\n\"She's a redhead. Dyes it now, but it's her real color. It's funny how that's become popular, isn't it? When I was a kid redheads were almost freaks. It wasn't anything anybody aspired to. If you were going to dye your hair you went blonde. Anyway, she's got beautiful red hair, and blue eyes,\" Poppy said. She was gazing out at the road, and Reaves could sense something more than friendship between she and Sonya. \"They're those blue eyes that cut right through you, like crystal blue, you know what I mean? She's always turned men's heads, but it's more than the eyes doing it. She's always thought she was fat, but I don't think so. It's more like that voluptuousness that was in style back in the fifties, you know? She used to rock a bikini, I'll tell you that.\"\n\n\"So what have you been e-mailing her? Are you telling her all the juicy details?\"\n\nPoppy looked at Reaves and smiled. \"Would you mind if I was?\"\n\n\"Not a bit,\" Reaves said. A trucker pulled up alongside. Poppy blew him a kiss and Reaves smiled.\n\n\"I just told her about Maddie, and I've told her about you, and my rugby man. Pretty much everything I guess,\" Poppy laughed.\n\n\"What does she think about your adventure?\"\n\n\"She says she's jealous. I'll be interested to hear what she thinks about Maddie. I sort of hinted at some thoughts I've had in the past.\"\n\n\"Really! Now were getting somewhere! Do tell!\" Reaves smiled.\n\nPoppy took a deep breath. \"It goes way back actually. She was kinda smokin' hot when we first met. Being roommates back then, there was lots of underwear, and some bare tits now and then. Never anything sexual, just girls living together. She had boys there more than me, and I was like this crazy voyeur. I used to think I was sick, but looking back, I don't think I was. It was just my sex drive trying to assert itself. I fought it though. Boy, did I fight it back then,\" Poppy laughed. \"So she had boys around, and I'd listen to them when they were together. Even watched a couple of times, not out in the open of course. One of the boys saw me watching and tried to get with me after, because he thought it was him I was interested in. That was what sort of made me realize it was Sonya I was interested in. It was her I was listening too and watching. Nothing ever came of it. I didn't want to risk our friendship by saying anything, and I didn't even know what I wanted anyway. It was all very confusing because I really liked boys. Of course as two-and-a-half decades have gone by and sexual attitudes have changed, there's this whole bi-sexual thing that I didn't even know about back then. I marched into adulthood pathetically unaware of so many things. When did you learn about all this stuff?\"\n\n\"Boy, I don't know. I can't really put my finger on it. I guess the porn revolution, with the internet, that sort of opened my eyes to a lot,\" Reaves said.\n\n\"Yeah, I mean that made me aware, but none of it really seemed real until you started e-mailing me with your adventures,\" Poppy said. \"And even that didn't quite register until I joined you. There's nothin' like real life to slap you in the face and wake you up.\"\n\n\"So what's Sonya's story these days? Is she married or anything?\"\n\n\"She was. A long marriage to a nice guy. She has a daughter, Lauren. She's twenty-two now. It was a good, happy marriage. Three years ago he disappeared for two weeks with another woman. That was the end of that.\"\n\n\"Ouch. She dating or anything?\"\n\n\"Nothing worth writing e-mails about, no.\"\n\n\"Maybe you can teach her the ways of the list when you get back,\" Reaves said.\n\nPoppy smirked. \"I'd like to teach her more than that.\"\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nCentral Kentucky. Green pastures, white fences, thoroughbred horses. An RV park right in the center of just such a setting. Idyllic, especially when compared to a Walmart parking lot in Scranton.\n\n\"What did you do!\" Poppy said as she looked over the ads they had posted.\n\nThey'd worked up two different 'couple' ads. One mw4m and one mw4w. In the ad looking for a man to join them Reaves had added a sentence. Well hung, 8\" or bigger to the front of the line.\n\n\"I thought you might like it,\" Reaves smiled.\n\n\"Oh my God!\" Poppy said with a devilish little smile. \n\n\"It'll give you something good to write Sonya about.\"\n\n\"As if you're not big enough!\" Poppy said.\n\nThey had posted five ads in total \u2014 they each had their singles ads, the two couples ads, and the 'looking for an orgy' ad for good measure. The next morning they checked their e-mails. Not surprisingly Poppy received the most action, although she weeded out all the poorly written and creepy ones, leaving only one to reply to. Reaves wasn't so picky. Still thinking of the 'research' angle, he replied to every response to his ad, and quite a few ads placed by women looking for men. The couples ads had no hits, and the orgy ad gathered dust as well.\n\nThe e-mail that drew most of Poppy's attention was from Sonya. She was anxious to read it, but was interrupted \u2014 the couple from the RV next door walked over, morning coffee in hand, when they saw Reaves and Poppy outside with their laptops.\n\n\"Hi neighbors!\" the man said. \"I'm Don and this is my wife Rita.\"\n\nThey were a well groomed couple, even at the relatively early morning hour, dressed in shorts and shirts that would look right at home at a country club. Don, tall and smoothly bald with a close cropped white beard, smiled as he looked things over.\n\n\"So this is that new Thor model huh? I love the cab. That must be a hell of a view out that big windshield. Hate to have to fix a cracked one though. Is this the one with the queen bunk in the back?\" he asked.\n\n\"Yeah, that's the one. I'm Reaves, this is Poppy. Nice to meet you folks.\"\n\nRita sat down with Poppy while the men walked around the RV, looked it over, and then wandered next door as Don pointed out things on his big Winnebago.\n\n\"So how long have you been on the road?\" Rita asked Poppy.\n\n\"Let's see, this is only day four I guess,\" Poppy said. \"That's hard to believe...so much has happened...\"\n\n\"From the look on your face I'm guessing you're not talking about problems,\" Rita said.\n\n\"No, no. It's all good,\" Poppy said with a dreamy look. Rita's smooth legs caught her eye.\n\n\"Reaves is a handsome guy. I'm always a little jealous when I see a woman with a younger man,\" Rita winked, with a little smile.\n\n\"Yeah, I know what you mean,\" Poppy said as the men wandered back into the conversation.\n\n\"Are you two on your honeymoon?\" Rita asked Reaves.\n\n\"No, just a pleasure trip. Poppy's clearing her head from the real world for a couple weeks,\" Reaves said.\n\n\"Ooo! Sounds like fun!\" Rita said. \"The real world can be such a bore.\"\n\nReaves smiled at the smiling Rita. Her eyes were hidden behind lightly tinted sunglasses, but he could tell they had make-up on them, mascara and eye-liner, maybe more. Her whole face had a bit too much make-up, especially for morning at a campground, but she was an attractive woman, in her late fifties he assumed, with a body that was hanging in there nicely. With her short, blonde hair and trim frame, she reminded him of Helen Mirren.\n\n\"You probably already know the best way to shut out the real world,\" Don said. \"They make the best bourbon in the world around here.\"\n\n\"Oh, yeah, Kentucky Bourbon. I hadn't thought of that,\" Reaves said.\n\n\"You really need to pick some up while you're here,\" Don said. \"These days there's a lot of small batch bottlers. It's really wonderful stuff. I always stock up for the year while we're around these parts. Would you like to come by and sample some later? We could take a stab at making the real world go away.\"\n\n\"That's a wonderful idea,\" Rita said. \"Do you have plans?\"\n\n\"Well, we're not sure yet,\" Reaves said. \"We're trying to get together with some friends, but we haven't heard from them yet.\"\n\n\"We'll just be here, doin' our thing, so wander on over if you find yourselves at loose ends this evening. It was nice meeting you both,\" Rita said.\n\nPoppy picked up her laptop after they left, anxious to read Sonya's e-mail...\n\n\u2014 My Dearest Poppy,\n\nMy heart is in my throat as I type these words. Yes, we do, it seems, have a shared dream. Let me put it this way \u2014 the vision of you in my mind's eye, of you sitting there in your smallest bra and panties, writing to me about your feelings for me as truckers blow their horns and blow you kisses...I can't even put into words how that makes me feel. I've loved you Poppy, since the first day we met. I've hidden it behind friendship, but it's love, pure and simple. No, I'm not a closet lesbian, at least I don't think so, and, like you (at least until your experience the other day), I've never experienced physical love with a woman. But oh how I've longed to touch you, to kiss you, to feel your softness and your warmth.\n\nIt's such an odd feeling Poppy, to be letting these feelings out into the open. I'm literally trembling with fear, worried that our friendship won't be able to handle this, even though I know you, and I know me, and I know it will. We're friends till death, you and me, I know that in my heart, but that doesn't make bringing these feelings to light any less surreal. \n\nSo what, may I ask, my wise and sage friend, do we do now? Do I kiss you when you come home? That 'floating on a cloud' kiss you speak of, the one I've long dreamed of? Do I touch those most perfect breasts in all the world? The ones that tiny bikini at the beach all those years ago barely hid? Yes, I was looking at you more than the boys that day too. You were shear perfection that day, so unaffected and natural in your skin. I remember being confused, and I guess I have been ever since I met you twenty-six years ago. Bisexuality? Good lord, it's such a concept, isn't it? Before today it was always an amorphous, unreal kind of thing, but today it strikes me as the most wonderful idea in all the world. Would I like it? Will I like it? Will I have the courage? Will you help me, take my hand, guide me? Oh how I long to look into your eyes right now...\n\nMuch love,\n\nSonya\n\nTears were rolling down Poppy's cheeks when Reaves walked out with two cups of coffee. \"You okay?\" he said.\n\nPoppy sniffled and smiled. \"Yeah. Letter from Sonya.\"\n\n\"Good I hope,\" Reaves said, handing her a cup.\n\n\"The best. I think I might go home.\"\n\n\"Ohhh!\" Reaves said sadly. \"If you need to, yeah, but I can't even tell you how much I'll miss you.\"\n\nPoppy wiped a few more tears. \"I've never felt such powerful friendships in all my life,\" she said, sniffling some more. \"You've changed my life Reaves Philip, at a time when I needed it most. Don't worry, I'm not going to bolt. I'll think it over today. I need to write Sonya though. She really put her heart out there on the line.\"\n\n\u2014 Dear Sweet Sonya,\n\nThe love I feel for you right now is nearly overwhelming. How lucky were we, the day you walked into Moe's Restaurant? I should have been jealous of you \u2014 those curves and that hair and those eyes. The way the men tipped you more than me. But I wasn't. I knew you were something special right from day one. Living with you was the most fun I've ever had with my clothes on, and now I'm wishing I'd taken a page out of my parent's book and made our cohabitation clothing optional. Would we have taken the plunge and kissed each other? 'We could have' or 'we should have' isn't very productive though. 'We can' is a much lovelier thought, don't you think? We cankiss each other. We can touch each others warm bodies. We can lick each other to sweet, glorious orgasms. There never were any rules, but the ones we mistakenly thought were in effect are banished from now on. Life is much too short for imaginary rules.\n\nI'm thinking of cutting my trip short and coming home. I, too, long to look into your eyes, those crystal blue pools of magic that have captivated me for half my life. I don't suppose you could get some time off and join me here on the road with Reaves? Now that would be something to write home about, wouldn't it? :-)\n\nLove you,\n\nPoppy\n\nAfter a walk around the park there was a reply...\n\n\u2014 Poppy,\n\nDo not, I repeat, do not cut your trip short because of me. I know how long it's been since you've had a proper vacation, and after the time you've had taking care of your father you deserve this R+R. And think of the discoveries you've made in just a few short days. It would be a shame to put an end to it so soon.",
        "As far as me joining you two, my goodness girl, are you trying to drive me wild with desire? My heart is just about jumping out of my chest just thinking about it. I can in fact get time off on short notice this time of year, but think it through before you offer again because I'll be on a plane quick as a wink. Does Reaves even know that you asked me?\n\nXO,\n\nSonya\n\n\u2014 Sonya,\n\nHe does now, and he's delighted with the idea. He asked me about you as we were driving yesterday, and when I described you he had that look in his eye men get when they think about you. He suggested Louisville airport tomorrow, late morning or afternoon. Does that work for you? It could be another day or next week if you want, but we'll be in another area by then, so check with us as to where. \n\nIs this really happening? My gosh, how the merry-go-round is spinning right now! Can't wait to see you Sonya.\n\nXO,\n\nPoppy\n\nReaves decided a rental car was needed, and asked Don to take him to get one in the small car he towed behind his Winnebago. As they drove through the countryside their conversation began with travel and RV's, but quickly shifted to the women.\n\n\"Rita loves it on the road,\" Don said. \"It's almost like she's a different woman. At home she's in church groups and volunteers at the hospital, but when we're staying in RV parks she loosens up. The sex is way better. I guess she thinks she can't get caught doing something she shouldn't be doing. Not by anybody she knows anyway, you know what I mean?\"\n\n\"That's interesting,\" Reaves said. \"But yeah, there's a different feel out here. It's like traveling salesman. They tend to get in a lot of trouble.\"\n\n\"It's none of my business, but Poppy looks like she might be fun in that regard,\" Don said. \"Sorry if that's out of line.\"\n\n\"No, that's all right,\" Reaves said. \"Just between you and me, yeah, she's all kinds of fun. I've always wondered about older women. She's...yeah...boy...it's good. Are you and Rita about the same age?\"\n\n\"Yeah, I'm fifty-eight, she's fifty-nine. You get to be my age and the younger ones are what you wonder about. Same with Rita, she loves to check out the 'young bucks' like you. Mind if I ask your ages?\"\n\n\"I'm thirty eight, Poppy's forty-eight. I'm hardly a 'young buck' these days.\"\n\n\"Forty-eight huh? Damn, she looks good.\"\n\n\"I was gonna say the same about Rita,\" Reaves said.\n\n\"I don't suppose you guys are into swinging at all? If you're not that's cool, we can talk about something else.\"\n\n\"You know Don, that would be new to us, although the last few days have been pretty eye opening sexually for Poppy and me. Do you guys partake in that, uh...lifestyle?\"\n\n\"Not in a big way, no. Like I said, at home we're normal suburbanites, whatever that means. But we met another couple on the road last summer and we both loved it. Decided to take it slow though and not continue it at home. You guys would only be our second time. But I don't want to be pushy or anything. Think it over. Come sample some Bourbons tonight. We don't have to do any more than have a few laughs.\"\n\nDon pulled into the rental car place and dropped Reaves off.\n\n\"Get yourself a Mustang GT. The chick's love those,\" he said with a smile as he pulled away.\n\nBack at the campground Reaves told Poppy about his conversation with Don. Poppy looked surprised. \"Swingers? I never would have guessed that.\"\n\n\"They've only done it once I guess, last summer at another park. At home Rita's all straight and churchy.\"\n\n\"Really! Oh my God, that's hilarious! In a good way,\" Poppy smiled. \"So what do you want to do?\"\n\n\"What do you want to do,\" Reaves countered with a smile.\n\n\"Gosh, is sex just everywhere on this trip?\" Poppy said. \"Why did I never experience any of this before?\"\n\n\"When It rains it pours I guess, right?\"\n\n\"I don't know about you, but I feel like its crazy to say no to any of it. I just want to roll around in it all, like a glutton at a buffet. I feel like it may all go away and I'll be back to my old boring life. Feed me while I'm hungry, I say.\"\n\n\"I'm glad you said that because being with you has got me all wound up about older women. Is Rita hot, or is it just me?\"\n\n\"Oh she's got it. Don's got something too. He's one of those high testosterone guys, all bald and virile and confident. I've always liked that kind of thing.\"\n\n\"Correct me if I'm wrong, but it sounds like we're having sex with our neighbors tonight.\"\n\n\"Yeah, it does sound like that doesn't it?\" Poppy giggled. \"Good lord! What have we become? Are we bed hopping sluts?\"\n\n\"You might be, but I'm just doing research,\" Reaves smiled.\n\n\"Oh! Thanks a lot!\" Poppy laughed.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\"This is from Haven Hill Distillery, over in Bardstown,\" Don said as he poured a splash in four glasses. \"Larceny, they call it. They use wheat to give it a little different flavor. Ninety-two proof.\"\n\n\"I can't remember ever drinking Bourbon,\" Poppy said. \"Maybe in a cocktail?\"\n\n\"There's a few,\" Don said. \"Whiskey Sour, Old-Fashioned, Mint Julip. You want to use the cheaper stuff for that though. These are really for sipping.\"\n\nPoppy took a sip. Her eyes grew and she smiled. \"Wow!\" Her smile was one of those light up the room affairs when she was in a good mood, which was most of the time. Her summer dress brightened the dimly lit space too, it's soft but luminous yellow color setting off her blue eyes. \"Oh my God,\" she said. \"It makes me all warm inside.\"\n\n\"I always seem to end up without my clothes on when I drink too much of this stuff,\" Rita said, with a sexy little glance toward Reaves.\n\n\"I can think of no better reason to keep a few bottles on hand,\" Reaves smiled.\n\nReaves hadn't told Don they were interested in anything more than a few drinks, and he didn't know if Rita was interested in more, so there was a little dancing going on as everyone felt things out.\n\nTheir first splash of the golden elixir was downed, and Don poured another from the second of five bottles lined up on the kitchen counter.\n\n\"This one's made over in Frankfort. Blanton's Single Barrel,\" Don said.\n\n\"Ooo, I can taste the difference,\" Poppy said. She ran her tongue over her lips.\n\nShe had no lipstick on them, but their full, soft pinkness didn't really need any. A hint of eye-liner and mascara framed her lovely eyes.\n\nRita, on the other hand, had spent some time on her makeup. Don had told her that the possibility of a partner swap had come up on the car ride earlier in the day, so she had prepared herself. Her best lingerie was hidden under her summer dress, a simple pink cotton number that accentuated her well preserved body. Her lingerie wasn't completely hidden \u2014 her blood-red bra peeked out now and then, its lacy edges visible to Reaves when he stood close to her.\n\nThe conversation flowed effortlessly. Rita's contagious laugh swept away everyone's nerves. Poppy telling of her father's death didn't even bring things down. Everyone agreed losing a loved one was a reason to re-group and grab hold of life while you can. A toast was made to Poppy's dad, emptying the fourth bourbon from their glasses.\n\nDon poured from the fifth bottle, a bigger amount in each of the glasses. It was Noah's Mill Bourbon, the most potent of the five. \"This is my favorite for finishing things off,\" he said.\n\n\"Oh! I hope the party's not over!\" Poppy said, cozying up to Don's arm as he evened up the pour. \"Rita's still got her clothes on.\"\n\nThat drew a big laugh from all, and loosened up the conversation. The alcohol had loosened things up considerably as well.\n\n\"Reaves tells me you two have...swung,\" Poppy said. \"Is that the right way of putting it? That sounds so exciting.\"\n\n\"I believe 'swinged' is the proper term my dear,\" Don said, and everyone laughed.\n\n\"It was beyond exciting,\" Rita said, sounding a little shy about opening up. She took another sip of her drink. \"The other couple, they were very experienced at that kind of thing. We didn't know it when we invited them over of course. It was funny really, we were as innocent as innocent can be,\" she said, looking at Don.\n\n\"Talk about getting swept away in the moment,\" he said. \"They were masterful at how they led us into it all. We were definitely receptive though, even though we'd never thought of doing that kind of thing before. We were ready for it, in a way. Right honey?\"\n\n\"Yeah. Things at home had gotten a little stale. We've been together over thirty years. I guess we were ready for something to kick us in the pants. Sexually I mean.\"\n\n\"I know just what you mean,\" Poppy said. \"I mean not about the thirty years part, I've never been in a long relationship like that, but my sex life has been stale stale stale! When my dad was dying Reaves kicked me in the pants, long distance, by e-mail. I guess I was ready for something too, like you guys. I think it's subconscious as much as anything. Deep down there's just this hunger, this need. It's just gotta get out!\" Poppy laughed.\n\n\"So what happened?\" Rita asked. \"You guys were e-mailing and you decided to take off together for a road trip?\"\n\n\"Reaves was already out here,\" Poppy said. \"Then Dad died and he drove all the way back, sweet man that he is, came to the memorial service and swept me off my feet for a voyage of carnal discovery.\" Poppy laughed again and looked at her glass. \"This juice makes me giggle.\"\n\n\"Intriguing!\" Don said. \"So what kind of carnal discoveries have you made?\"\n\n\"Ha! Wouldn't you like to know,\" Poppy said. \"Better to show than to tell. Are we...\" She wagged her finger between Don and herself.\n\n\"Are you okay honey?\" Don asked Rita.\n\n\"Go. Reaves will take good care of me, right Reaves?\" Rita said, her beautifully made-up eyes looking up at him with alcohol fueled lust.\n\n\"I'd love to Rita,\" Reaves said.\n\n\"Well this is exciting,\" Don said. \"Looks like we're all on the same page. Care to show me your boudoir my dear?\" he said to Poppy.\n\n\"Oh! Yeah!\" Poppy said, a little surprised that they were leaving for separate quarters. \"Have fun you two,\" she said to Reaves and Rita as she took Don's hand. She led him out into the Kentucky darkness and into her bed.\n\n\u2014 Sonya,\n\nDon't know if you'll get this, because you're traveling today, but I just had to write it down. I guess all the note taking Reaves is doing for his book is rubbing off on me.\n\nSpent the evening last night making love with the most delicious older man. Remember Dad's friend Martin, when we were younger? Tall, bald, with a closely cropped graying beard? I don't know if you remember, but I used to think about him, uh, inappropriately. I seem to remember telling you about it back then. Anyway, I just fucked him silly last night. No, it wasn't Martin, but it sure seemed like it was at times, especially when I held his smooth head in my hands as he ate me. Wow, the power of imagination! I don't mean to slight the real man who was with me, Don. He's a delightful, charming man of fifty-eight, and boy does he still look good without his clothes!\n\nSo here's the fun part (as if that wasn't fun enough!). He and his wife are our next-door neighbors here at the RV park, and we did a 'couples swap', me with Don and Reaves with his wife Rita. Wild huh! They're not even big-time swingers, they'd only done it once before. Rita's lovely. If I'm half as elegant and sexy as she is when I'm fifty-nine I'll be happy. With my newfound appreciation of women I was a little disappointed we broke off into separate couples, but I'm not complaining. Being with Don was dream-like. All my older man fantasies wrapped up into one glorious night. Did I mention that we fucked each other silly? I'm guessing Viagra. I tried to pull out all the stuff I'd seen on porn as far as positions go. A new one that I hadn't tried before was amazing. Prone, I think its called, flat on my stomach with my ass humped up. He's got a bigger cock than I expected, and on top of me fucking me prone like that, with his sweat dripping on my back...oh my God did I cum hard! I've never felt anything quite like that.\n\nI probably shouldn't give away other peoples secrets, but Reaves told me all about his time with Rita. He said she was really into the younger man thing, so they played it up with some role-playing, pretending Reaves was her son's best friend, who she hired to come to their house to clean up the RV. How fun is that? :-) Reaves said she went wild on him, and he's really into older women now, with me wetting his appetite and all.\n\nWow, what a wild trip this is. It's like a wonderful, long hallucination, and now, out of the mist of my decades-old desires, you're going to walk into it.\n\nXO,\n\nPoppy\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\"Sonya!\" Poppy yelled across the crowd at the airport. She ran to embrace her old friend. \"Sonya, this is Reaves,\" she said when Reaves joined them. \"He's the Captain of this wonderful journey we're going on.\"\n\n\"So nice to meet you Sonya,\" Reaves said, taking her hand gently.\n\n\"Reaves,\" she said, her eyes dancing between his. She felt like he was reading her mind in that moment, and the things he was reading were dirty indeed. She nearly had an orgasm from nothing but the soft touch of his hand and those eyes. \"Would it be stupid of me to say I'm a big fan? I've read all your books.\"\n\n\"Ha!\" Reaves laughed. \"I'm afraid I have a reputation for being a bit prickly with my fans. You're officially the first one I've ever wanted to spend time with.\"\n\n\"I'm honored,\" Sonya smiled.\n\n\"Oh Sonya, it's so good to see you,\" Poppy said. She embraced her old friend again.\n\n\"Poppy,\" Sonya said quietly in her ear, \"I don't even know what to say...\"\n\nThey pulled their heads back, still holding tight to one another, and looked deep into each others eyes. They both welled up with tears, knowing their relationship had deepened since they had last seen one another.\n\n\"I want to remember this moment,\" Poppy said. She fished in her purse for her phone and gathered them together for a selfie. \"You, my prickly, picture hating friend,\" she said to Reaves, \"just deal with it.\"\n\n\"Don't worry. I'm going to want a copy of this one,\" he said.\n\nAs they got on the highway outside the airport in the rental Ford \u2014 no, not a Mustang GT, a four-door Escort \u2014 Poppy told Sonya about where they were staying.\n\n\"We thought about bringing the RV down here and spending the night at a Walmart, but it's so beautiful at the horse park in Lexington. We wanted to spend a couple days there with you so you can decompress from New York.\"\n\n\"Sounds perfect,\" Sonya said. \"But I'm game to go anywhere and do anything. That's sort of the theme of this trip, isn't it? I left my comfort zone at home,\" she smiled.\n\nReaves was quiet on the hour-and-a-half drive to Lexington, content to listen as Poppy and Sonya caught up, and happy to silently observe Sonya in the rear-view mirror. It was interesting to compare her to Poppy's description. She was an attractive woman, especially considering her forty-eight years, but not the stunner Poppy had raved about. Decades of too much makeup had taken its toll on her skin, and the pin-up girl body was a bit thicker than he'd expected. The rest was as Poppy said though, lovely pale blue eyes and red hair that was soft and fiery at the same time. The smile that never left her face was as radiant as any he had ever seen. He could imagine older men falling all over themselves when she was around. Reaves wondered if she'd dressed with a little extra sexiness for her reunion with Poppy, or if the curvaceous, low-cut, perfectly fitted purple cotton dress was her usual attire.\n\nSonya felt awkward making conversation with Reaves. His silence didn't help. She could feel his eyes on her occasionally, glancing back in the mirror, and she was sneaking looks at him too, wondering what the next week had in store for her. Would he fuck her? Would the three of them end up in bed together? He was very sexy, in an unpretentious kind of way, she thought. And young. She'd never been with a man ten years her junior before, and from what Poppy had written he really knew how to pleasure a woman. \n\nAs they chatted Poppy could sense the sexual tension building. She knew Reaves was using the mirror for things other than checking traffic \u2014 Sonya's cleavage was on full display, and she knew the look on Sonya's face, a combination of nerves and lust. Poppy knew for a fact the three of them would be in bed together, and the thought twisted her insides in a way that she loved. An extraordinary sense of anticipation was in the air. The journey they were on was something she never would have imagined just two weeks ago.\n\nThey drove into the RV park and pulled up alongside their rolling home. Don and Rita were sitting outside theirs, Rita reading a book. Poppy and Reaves waved when they got out of the car. Don sat transfixed as Sonya came into view, her sexy purple dress and red hair glowing in the sun. Reaves smiled. Yup, he thought, older men probably fall all over themselves. He gathered up Sonya's bags and they went inside.\n\n\"Home sweet home,\" Poppy said. \"Does it smell like sex yet? I'd love it if it smelled like sex, everything's been so wonderfully dirty so far.\"\n\n\"Poppy!\" Sonya said, looking surprised the tone of the conversation had taken such a quick turn. \"You really have changed!\"\n\n\"Don't worry, you will too,\" Poppy said. \"Reaves and I will see to that.\"\n\n\"I guess I wouldn't have dropped everything to be here if I didn't want it that way,\" Sonya said. \"It's a bit nerve-wracking though. I don't suppose anyone drinks this early in the day?\"\n\n\"Gin and tonic?\" Poppy said. \"I'll give you the tour after.\"\n\nPoppy made three tall ones, with a spritz of fresh lime juice, and they sat out under the awning, looking out across a rolling green pasture with horses off in the distance. All the small talk about life back in New York was caught up on in the car, so Poppy got right to the good stuff.\n\n\"So I've told you why Reaves is here, and how I joined him to give him the female perspective for his book. Is the Craigslist thing anything you want to try? Or do you just want to have a nice vacation with us? Reaves will probably keep working, right?\" she asked him. \"It's so funny to call it working.\"\n\n\"You know what, this week is up for grabs,\" Reaves said. \"You ladies make the call. I don't need to do anything other than chauffeur you two on a little vacation. I can get back to my book research after you've gone. \n\n\"No!\" Sonya said. \"I flew my ass out here for two reasons. Poppy and I needed to see each other, but also, I want to get in on the fun. I can't believe I said that...\"\n\n\"Well it is fun, you got that right,\" Reaves smiled. \"I never thought working on a book could be like this.\"\n\nPoppy noticed Don and Rita walking over. \"We need to keep the book quiet, okay honey?\" Poppy said quietly to Sonya. \"We're just on a little vacation.\"\n\n\"Oh, yeah, okay,\" Sonya said.\n\n\"Hi neighbors!\" Don said as they approached. \"How're my favorite New Yorkers today?\"\n\n\"We're doing great Don,\" Poppy said. She got up out of her chair and gave he and Rita a kiss on the cheek. \"This is my friend I was telling you about. Sonya, this is Don and Rita.\"\n\nThe realization that they were those neighbors \u2014 the virile older man with the long cock and the role playing wife \u2014 suddenly hit Sonya. After Poppy's email she had looked up 'prone position' porn on the internet and spent a horny evening soaking it all in.\n\n\"You didn't tell us she was this much of a looker,\" Don said. \"I'll bet the whole park's buzzing already.\"\n\n\"You're not so bad yourself,\" Sonya said, jumping right into the swing of things, and she winked at Rita. Don's big smile beamed.\n\n\"We were just on our way out and wanted to say hello,\" Don said.\n\n\"I'm glad you did,\" Poppy said. \"Don't be strangers, we'll be here for at least another day.\""
    ],
    "authorname": "riverboy",
    "tags": [
        "group sex",
        "coed",
        "older man",
        "younger woman",
        "older woman",
        "gangbang",
        "orgy",
        "swingers",
        "younger man",
        "first time bisexual"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/something-to-write-home-about"
}