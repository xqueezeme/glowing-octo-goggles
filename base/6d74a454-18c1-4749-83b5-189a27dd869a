{
    "title": "Policing Vampires",
    "pages": [
        "Roger Coleman steered his car around the corner and continued to cruise the downtown streets. Roger did not cut a flattering picture; he was fat (not overweight, fat), his skin was bad and his interest in personal hygiene was not particularly strong. And he was unsavory in other ways too. For example, he had a strong interest in prostitutes. That was, in fact, what brought him to downtown in the late evening. \n\nThe software and app company that he had founded had done very well, before he sold it to a larger company for more money than he would ever be able to spend. So he could have hired pricier, more attractive, more discreet women, if he had wanted. But he liked the anonymity of picking up a girl off the curb and, truth be told, he got a kick from the way it felt.\n\nThere were a few girls out tonight, scantily clad despite the cool night, but the sight of the woman in the middle of the block drove every other woman out of his head.\n\nShe was... incredible. Tall, with abundant curves, long dark hair and incredible legs. Compared to the other girls on the street she was dressed almost modestly. Not that it mattered. She could have been dressed in sackcloth and still drawn every male eye.\n\nRoger sped up, then slammed on the brakes to stop in front of her. As he rolled down the passenger side window she leaned down and smiled. Her posture gave him a clear look down her dress. Those could not be real. Not that Roger cared.\n\n\"Hi, handsome,\" she said in a soft contralto, \"looking for a date?\"\n\nRoger ignored the 'handsome', he had no illusions about his looks.\n\n\"Yeah, how much?\"\n\nShe shrugged, \"Depends on what you want and how long. Why don't I step in and we can talk about it?\"\n\n\"Sure.\"\n\nRoger felt nervous and anxious. This was ridiculous, he told himself, it wasn't like it was his first time.\n\nThe woman slipped into the car and locked eyes with him. Holding her gaze on his eyes she slid close and reached out to run her hand along his thigh.\n\nHer gaze intensified and Roger felt the nervousness fade away, along with everything but what the woman wanted.\n\n\"Take me to your place, lover. Drive carefully, obey all the traffic rules, and don't bother talking. We've got nothing to talk about.\"\n\n\"Yes. Okay.\"\n\nCarefully, he pulled into traffic and steered for home.\n\nThe woman slapped Roger hard across the face. \"I said not yet, you fat fool.\"\n\nThey were both naked, in Roger's bed, she was kneeling across his hips.\n\nRoger's head jerked to the side with the force of the blow and it took him a few seconds to say \"Hey, that hurt.\" He didn't seem all that interested in anything.\n\n\"Oh shut up, moron, I told you not to talk.\"\n\n\"Sorry.\"\n\nThe woman sighed heavily, which Roger would have enjoyed watching if he had been capable of enjoying anything.\n\n\"You are truly pathetic, aren't you. Why did I bother, I knew you wouldn't be worth the time it would take. I might even have let you live if you'd managed to make me cum once, but you couldn't even do that.\" She leaned over him until her black eyes filled his vision completely. She exerted her will and felt the last of his resistance fade away, along with all thought or emotion. \"That's it,\" she cooed, \"Just let me take care of everything from here on.\"\n\nRoger could do nothing but nod obediently.\n\nDetective Manetti stepped of the elevator and walked down the hall, idly wondering about the price of one of the condos in this building. From the decor it looked pretty high end. More than a cop could afford, that was for sure. \n\nA door halfway down the hall was open and he looked in to see the expected crowd of uniforms and a couple of jumpsuits from the Medical Examiner's office. He stepped in.\n\n\"All right, who called for a detective?\"\n\nA young uniformed officer stepped over. \"I did, sir. Something seemed off and my sergeant said to go ahead.\"\n\n\"All right, give me the rundown.\"\n\n\"Yes sir.\" The young man looked at his notepad. \"Deceased is Roger Coleman, age 38, single. VP at a software company here in town. His office had not heard from him in 2 days, which they said was very unusual for him, so they called. The building manager said he hadn't heard anything from Mr Coleman, and unlocked the door for us. But the deadbolt and chain were both on so we had to break in. We found the body in the bathtub. It looks like a suicide, but there was no note. His wrists were slashed, but when we lifted the body out there was nothing in the tub but him. We found a razor blade that was obviously used to slash his wrists, but it was in the trash can, not anywhere near the tub.\"\n\n\"So, you're thinking murder?\"\n\n\"I'm not paid to think, Detective. That's your job.\"\n\n\"Okay, good work. I'll take it from here. You go back to the station and start working on your report, contact me if you need any help with it.\"\n\n\"Yes sir.\"\n\nManetti stepped into the bathroom. There was a gurney there, with a closed body bag, and several people standing around. Manetti stepped over to an assistant ME that he knew.\n\n\"Hey, Bryan. What have you got for me?\"\n\n\"Oh, hi Phil. I didn't know you were going to catch this. Where's... what's his name, your partner?\"\n\n\"Still on vacation. And his name is Detective Nelson, for your information.\"\n\n\"Whatever. The way you go through partners, he probably won't be around long enough to worry about.\"\n\n\"Slander. What have you got?\"\n\n\"Well, at first glance it's a suicide, but there are a few odd things. First, no note. Nothing conclusive about that, but it's odd. Second, the razor that was used to slash his wrists was 10 or 12 feet away in the trash can. So either he cut his wrists in the tub and made a perfect 3 pointer, or he cut his wrists at the trash can and walked over to the tub to get in, in which case we would expect to see blood on the floor and there is none. Either way, why bother? What's the point? Odd thing number three, there's some blood in the water, but not that much.\"\n\n\"Are we sure he bled to death?\"\n\n\"All indications are that he did, but we won't know for certain until we get him on the table. Ready for odd thing number four?\"\n\n\"Sure, hit me.\"\n\nBryan pointed. \"All the evidence says someone was having a really good time in his bed; secretions and the whole thing. He's not married, so who was it? And the victim had such a great time that he let her leave, locked the door and came in here to do this? Doesn't really add up.\"\n\n\"No, it doesn't. Any other odd things?\"\n\n\"Not so far. Want to have a look at the dearly departed?\"\n\n\"Wouldn't be my first choice.\"\n\n\"Pussy.\"\n\n\"Yep.\" Manetti rubbed the back of his neck for a minute. \"Well, get him on the table as soon as you can and send me the report when it's ready. I don't have to tell you to rush it, do I?\"\n\n\"Since you say it all the time, obviously not.\"\n\n\"Alright, I'm going to talk to the neighbors and see if they have anything to add. Thanks.\"\n\nSince it was the middle of the afternoon Manetti didn't have much luck, most of the neighbors were out. So he wrote brief, banal messages on business cards and stuck them under doors. He might have to come back after dinner time.\n\nHe had more luck down the hall. The resident answered at once, a youngish man with a serious expression.\n\n\"Afternoon, my name is Detective Philip Manetti,\" Manetti flashed his badge and ID. \"I wanted to ask some questions about your neighbor down the hall, Roger Coleman? Did you know him?\"\n\n\"Oh, is something wrong? Did something happen?\"\n\n\"Well, it looks like Mr. Coleman committed suicide, but we have to go through the motions until we're sure either way. It's in a manual I read once. Did you know him?\"\n\n\"Not really, we may have spoken a time or two in the hall but that's all. He wasn't... well, it's not the nicest thing to say, but he wasn't... he had some unpleasant habits. He never appeared particularly clean and he, uh, brought prostitutes home.\"\n\n\"Oh really? Did you happen to see anyone going in or out two nights ago. That would have been Monday night.\"\n\nThe man sighed and clearly resigned himself to getting involved. \"Yes, actually I did. I was going down to my car in the parking garage and saw him getting off the elevator with a woman.\"\n\n\"Can you describe her?\"\n\n\"You think she killed him?\"\n\n\"We don't know anything at this point, but I will need to talk to her. That's in a manual too.\"\n\n\"Yeah, well, uh, actually I think I can do better than describe her. Can you hold on for a second?\"\n\n\"Sure.\"\n\nThe man stepped away and returned a minute later with a large sketch pad. He presented it to Manetti who found a pencil drawing of a very attractive woman.\n\n\"This is her?\"\n\n\"Yes. I'm a commercial artist and she was so stunning I sketched her. That's what caught my eye about her, she was just gorgeous. A lot prettier than any other woman I had ever seen him with. I would have said she couldn't possibly be a prostitute, but I've never seen him with anything else. I suppose it's possible she was a sister or something?\"\n\n\"Anything is possible. How accurate is this sketch?\"\n\n\"Pretty close. I got a good look at her and I have a memory for faces.\"\n\n\"Okay, good. Can I keep this?\"\n\n\"Sure, of course.\" He took the pad back and carefully tore out the picture to return it.\n\n\"Alright, this is a big help,\" Manetti passed over a business card. \"I appreciate it, and if you think of anything else give me a call.\"\n\nManetti leaned back in his chair, put his feet on his desk, closed his eyes and muttered \"Something does not add up.\"\n\nWhen there was no response from the neighboring desk he grunted. Damn, Randy and his vacation. What's the use of a partner who's not around when I need to complain to him? Real cops don't take vacations, everybody knows that.\n\nManetti gathered up his file on Coleman and went to the glassed in office in the corner of the large squad room. He knocked on the door and stuck his head in. \"Hey boss, you got a second? I need to run something by you.\"\n\n\"Sure, come on in,\" came the reply. Manetti's Lieutenant was always willing to offer an opinion on a case and was used to being Manetti's sounding board. \"Which case has got you chasing your tail?\"\n\n\"Coleman. The suicide that is starting to look less like a suicide. Remember the run down I gave you of things that don't add up? I have a couple more. The only fingerprints on the razor blade were Coleman's. And, the ME says not only was there not enough blood in the water, but Coleman would not have died from his wounds. Whoever cut his wrists did a crappy job of it. But, he definitely died from blood loss. I'm not having any luck getting a picture of all this, but it's starting to creep me out.\" \n\n\"Yes, you always feel that way when you have more questions than answers. So, what's your next step.\"\n\n\"I don't know that I've got any choice, I have to talk to the woman.\"\n\n\"The one in the sketch you showed me? How do you plan on finding her?\"\n\n\"I'm kind of limited on that too. I showed the sketch to some guys in vice and no one recognizes her, which isn't much of a surprise. That was a long shot. I don't know that I have much choice but to hit the sidewalk and ask some of the working girls. Maybe someone has seen her or even knows her name.\"\n\n\"That's going to be a lot of shoe leather for something that probably won't work.\"\n\n\"I know, but I'm not sure what else to try.\"\n\n\"Try this first. Question the neighbors again, and maybe hit some of the stores in the neighborhood of Coleman's condo. Maybe you'll get lucky and she stopped in to buy a cup of coffee with a credit card. If that doesn't pan out you can try a couple of nights of whore hunting. We can reassess after that.\"\n\n\"What fun.\"\n\n\"Yes, you always get the best cases. Speaking of that, how are your other cases coming.\"\n\n\"I had a thought on Bastion. You remember how snotty the son in law was when we questioned him? I did some digging and I think he's dying to brag about it to somebody. If we pull him in again and squeeze a little he'll sing us a pretty song.\"\n\n\"Or clam up and ask for a lawyer.\"\n\n\"He didn't seem that smart to me.\"\n\n\"True enough. All right, we'll give it a try, supercop. When is Randy coming back?\"\n\n\"Couple of days. I can't wait to drop some of this stuff into his lap.\"\n\n\"That's what he gets for going out of town.\"\n\n\"My thoughts exactly.\"\n\nManetti slammed his apartment door in frustration, threw the mail on the kitchen counter and stalked into the living room. He threw down his suit coat and kicked off his shoes.\n\nCrap, crap, crap. The whole whore hunt idea had been a complete bust. After 3 nights of walking the sidewalks downtown he had nothing to show for it. He had talked to more prostitutes than he had ever wanted to talk to. He had shown the sketch to everyone. This girl thought maybe the woman in the sketch had been a couple of blocks that way. That girl had never seen the woman in the sketch before. They all talked shit to Manetti. The Lieutenant was going to pull the plug on it any time. Manetti figured he had one more night, two at the outside.\n\nSomething was off on this whole case. It looked like a suicide but it didn't feel like one. Manetti had good instincts and he had learned that ignoring them was usually a mistake.\n\nHe pulled his holster off his belt, unsnapped the hold down strap, dropped the holster and spun with his Beretta in both hands and aimed at the figure standing near the bedroom door.\n\n\"Hands up! You just broke into a cop's apartment, lady, are you crazy? Let me see your hands, now!\"\n\nThe woman slowly and non-threateningly raised her hands to shoulder height. As she did, Manetti looked her over and memorized her face. Pretty, he thought, about 5'7 or 8, 120 pounds, short blonde hair, pale skin. Wearing dark blue slacks, white blouse, black low heel shoes. He tried not to notice the enticing curves her clothes showed off.\n\n\"Calm down, detective. No reason to worry at all. Just calm down.\" Her voice was low and pleasant, calm and sure of herself.\n\n\"I am calm, and if you make a move I don't like I will calmly shoot you. Who are you? What do you want?\"\n\n\"I just needed to talk to you for a few minutes, detective. Then I will go my way and you will not remember a thing. Now, put the gun down on the table. You've got no reason not to trust me.\" Her voice still maintained that calm certainty, and an oddly compelling quality. Manetti found himself almost obeying her, then he tightened his shoulders.\n\n\"I think trusting you is not likely, lady, and I'm happy with my gun pointed at you. Now, who are you and what do you want?\"\n\nThat seemed to take her by surprise, she blinked a few times. \"My name is Pam... Smith, and like I said I need to talk to you.\" \n\n\"Right. And your real name would be?\"\n\n\"You're right, that was pretty clumsy. My name is Pamela Gleason. That's my real name and I have ID to prove it, if you'll let me get it. I just want to talk to you about the case you are working on, that's all.\"\n\n\"Where's your ID?\"\n\n\"It's in the purse sitting on that table next to you. Any chance you could put your gun down while you look at it? I promise I won't move.\"\n\nManetti lowered his pistol but kept his eyes on the woman as he stepped around the table. He opened the purse without looking, spread it open and glanced in. He kept his eyes on the woman as he reached in for the wallet. Then ran into a problem. How to look at her ID and keep his eyes on her?\n\nShe smiled when she saw him reach the same dilemma. \"I can offer a suggestion that might help if you're interested.\"\n\n\"Alright, let's hear it.\"\n\n\"Put your pistol flat on the table and hold your hand a foot or so above it.\"\n\nManetti raised an eyebrow. \"Really? And how will that help?\"\n\n\"Indulge me.\"\n\nHe scoffed. Well, it's not like she's all that close. He did as she instructed.\n\n\"Don't take your eyes off me,\" she said, \"but anytime you're ready grab your pistol, as fast as you can.\"\n\n\"Oh yes, I think I saw this in a movie.\" Before he had finished the first syllable of the last word he slapped his hand down... and felt only smooth linoleum under his hand.\n\nHe looked down, his pistol was gone. He looked back, the woman was standing in the same spot, with his pistol held by the barrel in her right hand. She let the tableau stand for a moment, while Manetti thought hard about the snub-nose .38 in the ankle holster. If he could tip the table over and hide behind it... Then casually she walked over and set his pistol on the table.\n\n\"Any doubt I could kill you if I really wanted to?\"\n\nManetti liked to think of himself as more than an average macho cop, so he shook his head.\n\n\"So why didn't I?\" She asked.\n\n\"Cause you're not stupid enough to shoot a cop?\"\n\n\"Definitely, but what else?\"\n\n\"Cause all you want to do is talk?\"\n\nShe nodded. \"Right. Go ahead and check my ID.\"\n\nNot much point to do anything else. Her wallet had what appeared to be a valid driver's license, credit cards, some cash. And a private investigator's license from the state of New York. All with the name of Pamela Gleason. He dropped the wallet back in her purse, glanced down at his pistol thoughtfully, then went around the table to sit on the couch without touching it. He motioned her to sit in the recliner opposite the couch and she sat down.\n\n\"You wanted to talk, talk,\" he said.\n\n\"You are looking into an apparent suicide.\" It was not a question.\n\n\"I am not at liberty to comment on an open investigation.\"\n\n\"That's all well and good, but I know for a fact that you are.\" Manetti opened his mouth and she hurried on, \"Never mind, I won't tell you how I know.\"\n\n\"This is going to be a short talk, then.\"\n\n\"You're looking for a woman, tall, dark hair, very attractive.\"\n\nManetti took the sketch out of his coat pocket and showed it to the woman. Gleason. She glanced at it and said, \"Yes, that's her. Her last known alias was Lorraine Barnett. She may be posing as a prostitute.\"\n\n\"Posing as one?\"\n\n\"Posing, because she never takes money from her victims. She has sex with them and then kills them.\"\n\n\"Interesting. How did you say you got this information?\"\n\n\"Nice try, detective. Something you don't know, this is not the first city she has done this in. She's been moving gradually west, this is the third city where she has done this. In each city she kills between 4 and 7 men, then she moves on.\"\n\n\"I checked the national databases for similar crimes.\"\n\n\"And found nothing. The information was... suppressed. Don't ask how.\"\n\n\"Right. Are you getting tired of saying that? Never mind. What's her motivation for this?\"\n\n\"Being a psychotic serial killer isn't enough of a motive?\"\n\n\"Not really. Even psychotic serial killers have reasons for what they do, even if the reason is usually psychotic.\"\n\n\"I'm afraid I can't give you any better reason.\"\n\n\"Naturally not. And what is your interest in this?\"\n\n\"I was hired by the family of one of her early victims. I've been trailing her for months. I'd like to find her before she can slip away again.\"\n\n\"And you expect me to help you with that?\"\n\n\"I would like you to help me, but I don't have much expectation of it any more.\"\n\nManetti shook his head. \"Lady, that story is ridiculous, fishy and full of holes. You want to tell the truth this time?\"\n\n\"You doubt my word?\"\n\n\"You sneak into my apartment, do some kind of magic trick to steal my gun, and give me a story that is pure cock and bull? Yes, I doubt your word. If I thought I had a chance to put handcuffs on you I'd run your ass in for trespass and breaking and entering.\"\n\n\"I'm glad you understand the folly of trying that.\"\n\n\"Thanks for the vote of confidence.\"\n\nMoving very slowly, she pulled a business card out of her shirt pocket and set it on the coffee table between them.\n\n\"Detective Manetti, I am looking for this woman too. I expect to find her, but you have gotten closer to her than anyone else has. It is possible that you could find her in another day or two. If you do, I want you to call the number on that card before you try and arrest her. That's my cell. Do not try to arrest this woman without me, she is the most dangerous person you have ever pursued. Your life would be in extreme danger if you tried to take her alone. Just call me and keep her in sight until I can join you. That's all I ask.\"",
        "\"Well, if what you've said is the truth this woman has killed between 10 and 20 men. And since I've only been a cop for 15 years there's no way I would know not to approach a suspect without backup. Thanks for pointing out the obvious.\"\n\n\"Have I done something to irritate you, detective?\"\n\n\"I'm tired, frustrated, my feet hurt, and all I'm getting from you are magic tricks and bullshit. Why would I be irritated?\"\n\n\"Clearly I have worn out my welcome, perhaps I should go now.\"\n\n\"Perhaps you should.\"\n\nShe uncrossed her legs and made to stand up. Manetti moved first, grabbed his pistol off the table and pointed it at the floor.\n\nShe gave him a smile. \"Why detective, don't you trust me?\"\n\n\"When donkeys fly.\"\n\n\"It's not easy being you, is it?\"\n\nShe gathered up her purse and went to the door, Manetti followed her out.\n\nWhen she was a few steps down the hall he called out, \"Hey,\" She turned. \"You're not going to tell me how you got my gun, are you.\" It wasn't a question.\n\n\"Why detective, if I told you I used magic, you'd never believe me.\" She gave a little smug smile, like she had won a competition, then turned and proceeded down the hall again.\n\nUnwilling to let her have the last word, Manetti called out \"I wish people would find a better reason to not tell me things. You know how many times I've heard that just this week?\"\n\nHe slammed the door behind himself, thinking to himself \"Damn that is a nice ass.\"\n\nManetti stood a 10 or 15 yards from the woman that Gleason had called Lorraine Barnett. Son of a bitch, it was her, no doubt about it. She stood on the corner, moving back and forth with an astonishing grace, as though she was bored. The sketch had not done her justice. Even from here he could see that she was stunningly beautiful. What the hell was a woman like that doing pretending to be a street walker, and why was she killing guys? She must be twisted beyond belief.\n\nHe thought about the business card in his wallet. He thought about the warnings Gleason had given him. Well, she didn't look all that dangerous. Besides, he was armed and she wasn't. He could tell. There wasn't anyplace in that dress to hide a weapon. The dress barely hid her. Fuck it. He started walking toward her.\n\nPossibly not the best decision from a safety perspective, but Manetti was still feeling frustrated and confused by the encounter with Gleason. Besides, she didn't look dangerous. And it's not like this was a dark alley somewhere. There were standing under a light, there were cars and pedestrians, and several open businesses. Plenty of witnesses.\n\n\"Excuse me, miss.\" The woman turned to face him and an automatic and enticing smile spread across her face. \"My name is Detective Manetti, I was wondering if I could ask some questions about an investigation?\" Manetti tried to keep his eyes focused on her face.\n\nDid she tense up? Manetti thought she must have, but the smile didn't change. Her eyes, he decided, something about her eyes.\n\n\"What can I do for you, Detective?\" Her voice was low, intimate, almost mesmerizing. Manetti had to force himself to focus.\n\n\"Do you know a man named Roger Coleman?\"\n\n\"I'm not familiar with the name. But I meet so many people, so many men, it's hard to keep their names straight.\"\n\nDamn, she wasn't even pretending to not be a hooker. That's refreshing.\n\n\"A witness saw you with Coleman last Monday night, and saw you entering his condo. Do you recall now?\"\n\n\"A fat, unpleasant looking man? Yes, I vaguely recall him now. Not a very satisfying... transaction, at least for me. He had no complaints.\" She licked her lips and stared at Manetti with a hungry gleam in her eyes. Manetti was starting to sweat. She must know exactly how he was reacting to her.\n\n\"Any problems? He was in good health when you left?\"\n\n\"He was asleep when I left. And smiling. But then he had ample reason to smile. He enjoyed himself, I assure you.\" Her grin became wicked and predatory. The implication was clear. It was hard to ignore. Manetti forced his eyes off her tits and back to her face.\n\n\"Did he say anything to you? Did he give you any indication that he might harm himself?\"\n\n\"No. He wasn't interested in... conversation.\" Again she didn't leave any doubt what she was implying.\n\nIt was curious that she didn't ask what the questions were about. \n\nManetti was getting weird creepy vibes off this woman. She was involved in Coleman's death, he was sure of it. They had no evidence against her, but there was something...\n\n\"I wonder, would you be willing to come to the station so we can go through things in more detail? Your statement would go a long way to clear things up for us.\"\n\n\"Is that really necessary, Detective? You said it was a suicide.\"\n\nSuddenly, Manetti was having no difficulty focusing. Bright alert flags were waving in his brain.\n\n\"Actually, I didn't say any such thing. I'm going to need you to come with me.\"\n\nShe wasn't smiling anymore, and she wasn't inviting anything either. She was beginning to look at him like a cornered rat. A very shapely cornered rat.\n\nExcept she wasn't cornered. She proved that when she turned and ran.\n\nFor just a second Manetti was too surprised to do anything except think \"How can she run so fast in those shoes?\" Then he shook himself and ran after her. \n\nOkay, that was definitely not smart, but what was he going to do?\n\nShe turned a corner and disappeared from his view. Seconds later Manetti turned the same corner and she was gone. Out of view. Disappeared.\n\nHe spent 10 or 15 minutes checking the few places she could have hidden or doors she might have slipped through. Nothing. Everything was locked, there was too much light. She was gone.\n\nThen he remember Pamela Gleason and her magic trick and he started cursing. He didn't stop until he got back to his car.\n\nHe called her from his car, she was in his apartment 10 minutes after he got there. He gave her the rundown of his encounter with the vicious, serial-killer/hooker and how she had vanished under his nose.\n\nGleason's first reaction was not helpful. \"Detective, I told you how dangerous she is, I told you to call me before...\"\n\n\"There were 20 people around!\" He roared at her. \"You think I'm so stupid that I'm going to be alone with her? She's not going to kill me in front of witnesses, for shit sake. But none of that is the point, god dammit, you need to start telling me what the fuck is going on here or I'm running your ass in right now.\"\n\n\"Look...\"\n\n\"No, you look. I have had enough of this case and of you. Any idiot could see that you know what is going on here and you are going to tell me, starting right now.\"\n\nManetti's apartment wasn't large or expensive, but he liked it. He particularly liked the view from the balcony. He was lucky to have a balcony, he knew that, and usually left the curtains open so he could see through the large, sliding glass doors.\n\nRight about then, the large, sliding glass doors, exploded into small shards of glass and sprayed all around the living room.\n\nGleason turned faster than Manetti could see. Suddenly Barnett was there, in the room and charging at them. Gleason charged back and the two women began exchanging blows almost faster than the eye could see. Any of those blows would have driven a rhino to its knees, it sounded like two guys pounding each other with pillows full of sand. Manetti could barely follow it all.\n\nHe pulled his Beretta and cocked it then took a firing stance and tried to get a clear shot, but they were moving too fast. He was watching when Barnett reached out, dug a hand into the back of his recliner and... lifted it in one hand. Then threw it at Gleason. With one hand.\n\nThe chair and Gleason went through the wall into Manetti's bedroom, leaving a huge recliner, and Gleason, sized hole in the wall.\n\n\"Hold it right...urgh.\"\n\nBarnett slapped the pistol out of his hand and grabbed him by the throat. Jesus, she's strong. He could feel her lifting him, almost off the floor. \n\nShe opened her mouth and... hissed at him? Really?\n\nFunny how the extended fangs didn't detract from her looks at all.\n\nThere was a roar from a pistol. \n\nBarnett threw him at the wall, hard. \n\nManetti lost interest for a while.\n\nThe first sensation he got was pain, funny thing about that. There was a kind of general ache all over and a much more specific pain coming from the side of his head. The side that had slammed into the wall. There was a sensation of cold against that side of his head too.\n\n\"Fuck, what the fuck just happened.\"\n\nHe opened his eyes. He was laying on his own bed. Gleason was sitting beside him holding a kitchen towel to the side of his head. It must have been wrapped around ice.\n\nShe looked pretty roughed up. Not surprising. It didn't make her any less distracting.\n\n\"Are you alright? Do you know where you are and all?\" She was looking worried. How nice.\n\n\"Ms. Gleason. We're in bed together. It's a dream come true, although I've got to say you've looked better.\" \n\n\"Yes, you're fine.\" She took the towel off his head and dropped it on his crotch.\n\nManetti retrieved it and pressed it back on the side of his head as he sat up. Yep, there was the huge hole in the wall. There was the remains of his recliner. It wasn't a bad dream.\n\nManetti pushed himself slowly to his feet and gave the remains of his favorite chair a feeble kick. \"Crap, now I'll never get my security deposit back.\"\n\nGleason grabbed his chin and raised his head so she could look into his eyes. \"Your pupils look okay, I don't think you have a concussion.\"\n\n\"I don't have any explanations either, but you're going to fix that, aren't you.\"\n\n\"Wouldn't be my first choice.\"\n\n\"Tough. I've never hit a woman, don't make me start now.\"\n\n\"I'm shaking in my boots.\"\n\nManetti gave her a sour look which she returned with a grin. He tossed the towel onto the bed and said \"She had fangs, for crying out loud. FANGS. She came in from my balcony and we're on the fifth floor. The two of you were throwing punches that would have put Mohamed Ali in the hospital. She picked up my chair with one hand and threw it through the fucking wall!\" He had to stop and put one hand on his head for a second. \"Look, don't make me shout okay, my head might explode. Just tell me what it the hell is going on.\"\n\n\"I'm willing to tell you, detective, but I'm not sure how much you are going to believe.\"\n\n\"At this point I'll believe anything. You're both superheros or vampires or something.\"\n\nManetti was watching her face so he saw her eyebrows go up and how she bit her lip.\n\n\"No, don't try it. I don't believe in either of those things.\"\n\n\"I never said she was a superhero, and I sure as hell am not, but what else would have fangs but a vampire?\"\n\nHe put his face in his hands. \"I need a drink.\" He left the bedroom, intending to go into the kitchen for a bottle of water.\n\n\"Actually, what you really need to do is pack some clothes and leave.\"\n\n\"Huh?\"\n\n\"I wasn't exaggerating when I said how dangerous she was, and now she knows where you live. I hit her 3 times with your gun at close range, but that's not going to stop her for long. We need to get you out of here, someplace she won't know to look, and think about our next step.\"\n\n\"The next step is I call my boss and tell him what's going on.\"\n\n\"Do you have a Thorazine fetish, detective? Because we both know what would happen if you did that.\"\n\n\"Why not? I could use a vacation. Never mind, I'll throw some stuff in a bag. Where are we going?\" Her suggestion did make sense. Manetti was confused, hurting and in a state of denial, but he wasn't stupid.\n\n\"I'm in a long-term hotel on the other side of town. You can sleep on my couch for a couple of nights.\"\n\n\"Holy shit. I'm in fantasy land.\"\n\n\"If you have a better explanation I'm eager to hear it.\"\n\n\"Yeah yeah. Let me get packed. \"\n\nLorraine Barnett lowered herself down on the stiff cock of her victim and began to ride him with enthusiasm. She had drained two homeless men dry because she needed the blood to recover from the gunshot wounds that bitch Gleason had given her. She didn't know anything about those men nor did she care, they were simply the first two she could find. But this one was very carefully selected, she had high hopes for this one. He would help her.\n\nShe leaned forward to lock eyes with him, still moving deliciously, and began to carefully exert her will on him. There were a couple of different ways to do this, through pain or through pleasure. Of the two, she preferred pleasure.\n\n\"That's in, lover,\" she whispered as they continued to fuck. \"You're going to help me, aren't you. You're going to do anything I want.\"\n\n\"Yessss, anything you want.\" the man said.\n\n\"That's a good boy. Now, harder, luscious. As hard as you can. See if you can make me scream.\"\n\nPamela Gleason pulled out her cell phone and quickly typed an email to her supervisor. She would send more details later, but there were a few things he needed to know immediately, and some arrangements to make for Manetti. Poor guy, he was so out of his depth but he struggled to keep up with it all. It was admirable.\n\nShe could hear him muttering as he packed in the bedroom. A good smattering of swearing, along with \"I've got to be out of my mind,\" type comments. But he was packing and he was moving quickly, so sane or not he understood the danger he was in even if he didn't accept her words.\n\nEmail complete she went and stood in the doorway of the bedroom to watch. He was... average. Almost an inch over 6 feet tall, about 180 or 190 pounds, dark hair, green eyes. Average build, with a plain, not unattractive face. His face was lined enough to have character and he carried himself with a odd mix of world-weary fatigue and complete confidence. He was intriguing.\n\nHe was also, apparently, very practical. She watched as he tossed in a box of ammunition for his pistol, along with slipping 4 loaded clips into the pockets of the jeans he had put on. Smart.\n\nHe pulled on a leather jacket, threw the strap of the duffel bag over his shoulder and slipped his hand into the unzipped top. His hand that was holding his pistol. Good thinking.\n\nShe scanned the hallway as he locked his apartment door, then followed him down to the parking garage in the basement. They decided to take her car, under the assumption that Barnett had followed him home. He put his duffel in the back and took the passenger seat, pistol in hand. He split his attention between her and the traffic behind them as she drove.\n\n\"We made a lot of noise trashing my place. How come my nosy neighbors didn't come ask what was going on?\"\n\n\"They did. I waved your badge at them and told them it was police business. That seemed to satisfy them.\"\n\n\"That never worked for me. You must have an honest face.\" He said it with heavy irony. \"So, my gun's not going to stop her for long?\"\n\n\"No, afraid not. You can kill a vampire by shooting at it, but you've got to destroy the brain. The body heals too fast for shooting the body to do much. I couldn't get a good head shot with her choking you so I did what I could.\"\n\n\"So stakes to the heart don't do it either?\"\n\n\"Nah, a vampire will just pull a stake out and shove it up your ass.\"\n\n\"Garlic? Holy water? Crosses?\"\n\n\"All garlic ever did was give me bad breath and all that religious claptrap is just wishful thinking. You know, I've never understood that one. Why would a Jewish vampire be afraid of a cross?\"\n\n\"I've often wondered the same thing,\" Manetti said dryly. \"Can you turn into a bat?\"\n\nShe scoffed. \n\n\"What about sunlight?\"\n\n\"Yeah, that's the one thing Stoker got right. Sunlight will kill us and it ain't pleasant.\"\n\n\"Well, that's something. It's nice to know we've got some advantage, given how strong and fast you guys are.\"\n\n\"Feeling inadequate?\"\n\n\"Not as long as I'm heavily armed. You live on blood?\"\n\n\"No, we eat and drink regular food too, we just need a steady supply of blood to survive. It doesn't have to be human blood but it has to be fresh. Or we've got an artificial substitute that we can use instead, although it tastes like crap.\"\n\n\"Yuck. How often do you, you know.\"\n\n\"Drink blood? It depends on what we're doing. Every 2 or 3 days usually, but she's going to need blood tonight to help her body heal, and a good large dose of it.\"\n\nShe stopped for a red light and he scanned all around the car before looking back at her. He stared at her for a long time, with his brow furrowed.\n\n\"Artificial substitute.\"\n\n\"What?\" He said it like he was figuring something out.\n\n\"You said you have an artificial substitute that you can use instead of blood. That's... interesting.\"\n\n\"How so?\"\n\n\"Well, you'd need laboratory facilities to do the research and development of something like that. Manufacturing, distribution. All of it kept out of sight of regular people. That tells me there's money involved, pretty good organization, communication. Like I said, it's interesting.\"\n\nGleason tried to keep the consternation off her face and swore in her own head. He'd put that together pretty fast and from one slip of her tongue. She ground her teeth and didn't answer.\n\n\"That's okay,\" he said finally. \"If you started being completely honest with me I don't know if I could handle it.\"\n\n\"Look, detective...\"\n\n\"If we're going to be living together you should call me Phil.\"\n\n\"Phil, I'm Pam. I want to be honest with you about all this, but I can't tell you everything. Some of it I can't tell you, and a lot you'd never believe.\"\n\n\"You can't tell me. That means you're under orders, right?\"\n\n\"Well...\"\n\n\"That's alright. I'm getting the picture, I think. There's like a subculture of you guys, right? You keep your heads down because you don't want us regular guys to know we're not the top of the food chain. That's smart, considering we're your food.\"\n\n\"I can't... shit, I just can't, okay?\"\n\n\"Yeah, I know. I'll quit pushing about it. You're trying to keep me alive, after all. How do you get to be a vampire?\"\n\nApparently he had decided to go back to general questions, thank God. \"It's not all that complicated, and it's something else Stoker was close on. You have to be bitten and drained of blood, then before you die the vampire has to share some of his blood with you. There is a combination of two viruses that cause the change, one in the saliva and one in the blood. If you don't get both you don't transform.\"\n\n\"So that's what happened to you?\"\n\n\"Yes, but I don't want to talk about it. It's an intensely... well, I don't want to talk about it.\"\n\n\"What about werewolves?\"\n\nHis brain must be hopping all over the place. Who could blame him. \"What about them?\"\n\n\"Well, are they real too?\"\n\n\"Don't be ridiculous.\"\n\n\"Oh, I see, werewolves are ridiculous, but the undead that's perfectly normal.\"\n\n\"Hey, I'm not undead, pal, I'm as alive as you are. Just... different.\"\n\n\"Yes, you can say that again.\"\n\nShe glanced at Manetti and, to her surprise, saw that he was looking at her differently. Shit, he was checking her out. She took a deep breath and caught a whiff of interest from him. Intensely sexual interest. She hadn't felt anything like that from a man in a long time, and she had not let herself feel it for anyone either. It was disturbing.\n\n\"Granted, my exposure to vampires is limited, but the two I've met have both been, well, very attractive. Are all of you like that?\"\n\n\"Yes, pretty much.\"\n\n\"That makes sense for predators, you'd want to be as attractive to your prey as you can be. I imagine a desire to hide how dangerous you are would go along with that.\"\n\nShe looked at him again in surprise and he shrugged. \"I watch a lot of Discovery Channel stuff.\"\n\nShe felt herself starting to check him out and forced her eyes back on the road. Now was not the time for that. He was a lot smarter and quicker than she had first thought, she had already given away too much by not realizing that. She wondered if he did it on purpose.",
        "\"So, what kinds of regular foods do you like?\"\n\n\"What?\"\n\n\"You said you also eat regular foods, what kind do you like?\"\n\n\"Why do you ask?\"\n\nHe shrugged, \"Just making conversation. I get the feeling we're going to be spending a lot of time together over the next few days.\"\n\n\"You're not going to ask me what my sign is?\"\n\n\"That was next.\" He grinned at her, it was the first completely unguarded, friendly smile she had gotten out of him. She liked it a lot.\n\n\"If you must know, my favorites are Chinese and Italian.\"\n\n\"Great, I'll make lasagna for you.\"\n\n\"You can cook?\"\n\n\"You think with a name like Manetti I can't cook?\"\n\n\"Well that's good because I can't boil water. After the wedding you can do all the cooking and I'll make the money.\" The wedding? Where the hell had that come from?\n\n\"Fine with me, I'm tired of having sore feet.\"\n\n\"Poor thing. Want me to rub them for you?\"\n\n\"I'll let you know.\" She had watched his face before he answered. He had started to make some kind of snarky comment, then changed his mind and came out with something banal. Odd.\n\n\"Oh,\" he said as though remembering something. \"I wanted to ask you about your first visit. You said something about putting my gun down and we were going to talk and I wouldn't remember a thing. The way you said it, it sounded like you expected me to do it.\"\n\n\"Yeah, that's one of the things vampires can do. I call it pushing. We can, to one degree or another, impose our will on non-vampires. When I told you to put your gun down so we could talk I did expect you to do it. I was going to find out how much you knew, then give you some different memories and send you off in the wrong direction. But it didn't work on you. For one reason or another you are resistant to being pushed that way.\"\n\n\"I must be naturally stubborn.\"\n\n\"I was going with thick headed.\"\n\n\"Now you sound like my partner. And my boss. And a lot of other people I know.\"\n\n\"Any chance it's true?\"\n\n\"No question.\"\n\nShe pulled into the parking lot of her hotel and parked. She noticed that he kept his pistol in his hand as they gathered up his luggage and went to her room. She was glad to see it. That level of paranoia might keep him alive.\n\nThe room was actually a small apartment, with living room, kitchen, bedroom and bath. The building had been constructed with vampires in mind, there were no windows in the bedroom and the door shut solidly. Making a perfect hiding place for sleeping away the daylight hours. She could see Manetti checking the place out as soon as he entered. He went straight to the couch and flopped down. Poor guy must be exhausted. He let his head fall back and she watched his muscles relax.\n\nHe was too enticing. She had to get away from him for a few minutes and get her head on straight.\n\n\"Listen, I've got plaster dust all over me, so would you mind if I take a quick shower?\"\n\nHe answered without raising his head. \"Go ahead. I'm staking my claim to the couch and I may not get up for days.\"\n\nShe felt herself licking her lips and forced her mind away, going into the bedroom for clean clothes. She went into the separate bathroom and shut the door firmly. It was not going to happen. It was not. He was too confused, too unsure of this bizarre situation. She was not going to take advantage of that. Just get clean then drink some of the pseudo blood that was in the refrigerator. And stop thinking about how good he looked sprawled out on the couch. And how much you want to ride him.\n\nShit, stop it. You're not some teenage girl with a crush. What makes you think he is even interested. That was the reasonable part of her brain. A completely different part of her brain responded with Oh yeah? Go out there and wiggle your bare ass in his face if you think he's not interested.\n\nShe tried to ignore that, but the image was too strong to forget entirely. And too interesting. But she knew where the thoughts were coming from and was too stubborn to give in to them.\n\nShe peeled out of her dirty clothes and stepped into the shower. Getting clean felt wonderful. Rinsing off required that she run her hands over herself, which felt deliciously sensual. That sparked a few other thoughts about his hands instead of hers. When she realized she was caressing her own breasts she told herself firmly to stop it and stepped out of the shower.\n\nShe cursed silently when she saw that her hands apparently had a life of their own. The clothes she had grabbed without looking were her tightest jeans and a t-shirt with a scooped neckline. And no underwear. She dressed and stepped out of the bathroom, intending to go into the bedroom and get the ugliest bra and panties she owned. She made the mistake of looking over at the couch. Phil had stretched out and was asleep, shoes and socks pulled off and jacket thrown aside. \n\nBefore she knew what was happening she was kneeling at the side of the couch looking into his face. The Hunger surged up, stronger than she had ever felt it before. It would not allow her to step away, and her own stubborn nature would not allow her to get any closer. So she knelt there, breathing hard and trembling.\n\nIt was the sound of panting that woke Manetti. He opened his eyes and saw Pam's face less than an inch from his own.\n\n\"Jesus! What are you doing?\" Then he stopped and looked closer. Her eyes were open wide, her pupils were dilated so much he almost couldn't see any color in her eyes. She was staring at him as though entranced. Was she shivering?\n\n\"Hey, are you alright? Pam?\"\n\nHe sat up and took her arms in his hands to shake her lightly. \"Pam? What's wrong? Hey, are you in there at all?\" He shook her again lightly. Her hands came up to grab his head and she kissed him hard. \n\nManetti was too amazed to do anything.\n\nShe was trying to devour his mouth with hers. It was the hungriest, most passionate kiss he had gotten in... well, ever.\n\nShe was moving. He heard the sound of cloth ripping. She took his hands in hers and brought them to her breasts. Her bare breasts. Her bare, very firm, wonderfully rounded, quite large breasts. He pulled away in surprise.\n\nShe broke the kiss long enough to say, \"Touch me. I need your hands on me.\" She pulled his hands back to her breasts, then wrapped her arms around his neck and went back to trying to swallow his face.\n\nHer nipples were rigid. He brushed his thumbs over them. Just to be sure, of course, not because he was trying to... you know.\n\nShe moaned and released his neck so she could grab his shirt and rip it open too. Well, it wasn't his favorite. Besides, her hands felt really really nice on his chest. And on his stomach. And then further down. She gave his cock a squeeze through his jeans and broke the kiss.\n\n\"You want me,\" she whispered and began pulling her own jeans open. Well, truth be told, he did. She took his hand off her breast and guided it down. \"Touch me here. You want it. You can have it. You can do anything you want to me.\" She was wet and swollen. Jesus, yes, he did want it. Her. She started pulling at his jeans as his finger slid in and out of her wet pussy.\n\nShe reached in and wrapped her fingers around his stiff cock. When she felt how hard he was for her she made a hungry growling sound and said \"Give it to me. Fuck me. I need it.\"\n\nShe grabbed his hair and pulled him down on top of her, guiding his cock into her pussy, then grabbing his ass in both hands and pulling him in deeper.\n\n\"Yes, yes YES AAAAAAAAAAAAHHHHHHHHHHHHH\"\n\nWow, she climaxed almost at once. She bucked and writhed under him, her pussy clamped down on his cock like she was going to keep him there from now on.\n\n\"Come on, more. Fuck me. Come on, I can't stand it.\"\n\nManetti pushed up on his hands, arching his back so he could shove into her hard. Her hands dug into his ass, she was pulling him in, her whole body was tense and there was no intelligence in her eyes. Another orgasm slammed into her and he felt her fingernails digging into his ass.\n\nHis body responded to her pleas even as his mind wondered what in the hell was going on with her.\n\nHe drove into her again and again, pounding her with all his strength. When he tried to slow and let her recover she opened her eyes and said \"MORE MORE.\"\n\nShe was still fucking him wildly, without any restraint at all. Since it was what she wanted he forced his mouth down on hers and fucked her as hard and fast as he could. She screamed and he exploded in her with a loud groan of pleasure.\n\nIt was several minutes before he could raise his head to look down at her. She was breathing hard, eyes closed and smiling. When she felt his gaze on her she opened her eyes and he watched as she slowly came back down to earth. Suddenly a look of horror came over her pretty face and she covered her mouth with both hands.\n\n\"Oh God. Oh God, what did I do. Oh God. Phil, I'm so sorry.\"\n\n\"Are you alright? Not that I'm complaining but what in the hell was that.\"\n\n\"Oh shit, Phil I'm so sorry. I didn't... I couldn't... shit, shit, shit.\"\n\n\"Look, just calm down, alright? Take a deep breath and tell me first of all if you are okay. I didn't hurt you, did I?\"\n\n\"No, you would never... No, I'm fine. Shit, this is so humiliating.\"\n\nNot exactly what he wanted to hear under the circumstances. Manetti noticed that he was still laying on top of her so he slowly slid to one side. She rose to her feet and disappeared in the bedroom. Manetti straightened his clothes, discarded the ruined t-shirt and pulled another one on from his duffel.\n\n\"Would it be easier to explain from in there?\" he called out.\n\n\"No, I'll... hell.\" She came back out, also wearing a new t-shirt. This one was large, fit her like a sack and showed nothing below the neck. It didn't matter, he knew the quality of what was under it.\n\n\"I never really got a chance to explain what it's like to be a vampire, but there are a couple of things you should probably know.\"\n\n\"Ya think?.\"\n\nManetti sat on the couch, after a minute of indecision she joined him. She sat as close as she could without actually sitting in his lap, she didn't notice but Manetti did.\n\n\"I'm sure I'm not going to explain this well,\" she started, \"so please just bear with me and I'll answer your questions as best I can. There are two powerful, over-whelming compulsions that vampires have to deal with. We call them the Hunger and the Thirst. The second you can probably figure out. If we go too long without blood we just go ape-shit and attack people. It's not pretty, it's dangerous and we get in trouble if we let it happen. So I'm very religious about drinking the artificial stuff every couple of days. The Thirst has never been a problem for me.\"\n\n\"The Hunger is something else all together and it's something not many non-vampires know about. It's, well, not to put too fine a word on it, but it's sex. Vampires are very intense emotionally and we are much more connected to our bodies than non-vampires. But if we feel an attraction to someone, usually some non-vampire, then during times of real stress it can, well, take us over. That's what happened. My brain turned off, my body took over and I... basically raped you. I'm really sorry. It was a terrible thing to do to you. It won't happen again.\"\n\n\"It won't?\"\n\n\"No!\" She looked at him incredulously. \"Of course not. I shouldn't have let it happen this time but it caught me by surprise. I could have found another... outlet for it, but I took too long to realize what was happening.\"\n\n\"Well, that's too bad. After I got over the surprise I rather enjoyed it. And you seemed to as well.\"\n\n\"Oh God Almighty, yes. You were great, but it was so wrong.\"\n\n\"Has this ever happened to you before?\"\n\n\"No, never. You're the first guy since I was turned.\"\n\n\"I'm the first guy you've been attracted to since you turned?\"\n\n\"Well, yes.\"\n\n\"Ah ha! So you're attracted to me.\"\n\n\"So? I said I was, didn't I?\"\n\n\"Indirectly. I just wanted to hear you admit it.\"\n\nShe got an incredulous look on her face and snapped \"You're a jerk, you know that?\"\n\n\"Yes, but at least now you're mad instead of feeling sorry for yourself.\"\n\n\"I wasn't... well maybe I was a little.\"\n\n\"Great. So if I tell you that I understand and accept your apology, can we put this behind us? We do have other things to worry about.\"\n\n\"Yes, you're right. I need to get my head out of my ass.\"\n\n\"Good. And by the way, if we were to vote I'd vote for it happening again. A lot. But that's for later.\"\n\n\"You really are a jerk.\"\n\n\"So you said. By the way, I'm attracted to you too, when you're not lying to me or holding things back.\"\n\n\"All right, all right, I'm pretty much done with that.\"\n\n\"Good. So what's our next move?\"\n\n\"Well, I think you're fine for tonight and obviously you're okay during the day. So you're going to be here at night where I can put my hands on you. I mean, where I can watch out for you.\"\n\n\"It's going to be hard to find her if we're both here at night, don't you think?\"\n\n\"My bet is, she's headed out of town right now. I'll give it a day or two to be sure but I'm pretty sure she's moved on.\"\n\n\"I won't complain. After watching you two whale on each other I'm keeping my distance from her.\"\n\n\"Didn't I tell you to stay away from her?\"\n\n\"That's what you're going with? 'I told you so'? Geez, you're worse than my wife. Just spank me and get it over with.\"\n\n\"Don't tempt me. Are you married? I never asked.\"\n\n\"No, not anymore. She traded me in for the non-cop model.\"\n\n\"You mean the non-jerk model?\"\n\n\"Of course. What about you? Do vampires marry?\"\n\n\"Not usually. Uh, well, I might as well tell you. I was married a long time ago, but Lorraine got her hands on my husband and turned him. He didn't make the transition well. Actually, it drove him insane. That happens sometimes to people who aren't guided through the process. Anyway, he turned and he came to find me. He..., uh, well, it wasn't fun for me. But the end result was he turned me.\" She hesitated, obviously torn, then rushed on. \"Shit...\"\n\n\"You don't have to tell me if it's too painful.\"\n\n\"No, I want you to know. He disappeared, I figured he'd run off with his secretary or something, but she had gotten her hands on him. A couple of days later he came home late at night and I was so happy to see him I didn't care where he had been. He told me all kinds of shit, how much he loved me and wanted me and he was sorry. He pushed me down on the bed. I didn't really care, I was so relieved he was home I didn't really notice what was going on. Maybe he was making that happen. Anyway... while he was fucking me, he bit me. While I was unconscious he put some of his blood in my mouth.\" She shrugged uncomfortably. Manetti put his hand over hers and squeezed hard.\n\n\"I'm sorry. I know it's not adequate but I am.\"\n\n\"Thanks. I guess you could say tracking her down is personal.\"\n\nManetti felt her squeeze his hand back hard. Then she leaned over and put her head on his shoulder.\n\n\"Thanks for telling me, I know that wasn't easy to say.\"\n\n\"It's easy to talk to you, I don't know why but I'm comfortable talking about shit with you.\"\n\nManetti's first impulse was to say \"Well, I'm a cop, it's part of my job.\" but that didn't feel right. Like he would have been reducing her admission. So he said, \"I'm glad you feel that way.\" and let it go at that.\n\n\"Uh, I really am sorry about earlier.\"\n\n\"Didn't we agree to put that behind us?\"\n\n\"Yes, you're right. And I'd like to do it again too. A lot.\"\n\nManetti chuckled. \"Well, maybe after this mess is straightened out we can. By the way, where do you live?\"\n\n\"New York City. The biggest population of vampires in the world is there. It's a lot easier to hide our activities in a big city.\"\n\n\"I bet there are a bunch of you in Las Vegas too.\"\n\n\"How did you know?\"\n\n\"I don't know. Vegas and vampires? Seems like a good fit.\"\n\nShe giggled, Manetti found the sound surprising.\n\n\"You must be exhausted, you've had a long weird day.\"\n\n\"Well, I was sleeping pretty well but someone woke me up. I'm not naming any names.\"\n\nShe rose and pulled his hand. \"Come on, let's get you comfortable on the bed. I'm going to make some calls and check on a few things while you sleep.\"\n\nAs he followed her into the bedroom Manetti said, \"You're not the only vampire in town looking for her are you?\"\n\n\"Nope, but I'm the only one you're going to meet. Now, stop staring at my ass.\"\n\n\"How the hell did you know?\"\n\n\"That's for me to know and you to find out. Lay down.\"\n\nManetti grinned at her and lay down. She joined him on the bed and they ended up laying on their sides, facing each other. He stretched his neck out and kissed the end of her nose, which made her giggle again.\n\n\"So, you're just going to lay there and watch me sleep?\"\n\n\"Yes, for a while.\" She gave him a soft smile and stroked his cheek. \"For a jerk you've got a nice face.\"\n\n\"You just said something very nice and insulting at the same time.\"\n\n\"It's a gift. Close your eyes.\"\n\n\"You'll need to get in here when the sun comes up, so wake me up and I'll adjourn to the couch.\"\n\n\"Sleep already.\"\n\nManetti turned onto his other side and closed his eyes. He felt Pam moving closer until she was pressed against his back, she slipped one arm under his head and the other around his waist. He was thinking how pleasant it felt when he went out like he'd been hit by a brick.\n\nAs promised she woke him before dawn and he went into the living room. He tried laying down to sleep a bit more but couldn't do it, so just went ahead and got up. He showered and shaved, dressed in fresh clothes. Pam had done some calling around after he had fallen asleep, she had left him notes on what she had learned. No sign of their quarry but it did not appear that she had left the city yet. How would they know if she had, he wondered.\n\nAround 8:00 he called his lieutenant and said he wasn't feeling well and would take the day off.\n\n\"That's fine, man, you've got more sick time than anyone else in the squad. Oh, have you heard from Randy? He was supposed to start back today, wasn't he?\"\n\n\"No, I haven't heard anything from him. Want me to give him a call or go see him?\"\n\n\"No, I'll call him. Maybe he slept late or something.\"\n\n\"Maybe he was stolen by gypsies.\"\n\n\"Probably, there's been that whole gypsy stealing thing going on. Don't worry about it, he'll turn up. Take care of yourself.\"\n\n\"I will. Thanks.\"\n\nManetti felt at loose ends after that. Pam had left him a laptop with instructions of how to log in, so he used it to check the local newspaper's web sites. Nothing obviously bizarre reported on any of them. Television news didn't have anything either. He assumed that was good and wondered if the shadowy organization Pam had carefully not told him about had anything to do with that.\n\nDespite the kitchen there was no food in the small suite, so around noon he went out for lunch. After that he returned, read the paper he had picked up, then spread it out on the coffee table and cleaned all of his guns carefully; the Beretta the department knew about, the Glock it didn't, and the .38 six-shooter he kept strapped to his ankle. He had a feeling he was going to need them.\n\nAround 3:00 his cell rang, it was his lieutenant calling.\n\n\"Listen Phil, could you come by Randy's place? Something's happened and I need you there.\"\n\n\"What is it?\"\n\n\"I'll tell you when you get here. It's... it's bad, Phil. Really bad.\"\n\nThe apartment reeked of the metallic smell of blood. In the bedroom Manetti could see why, it was everywhere. The bed was soaked with it. It had splashed on the walls. Hell, there was blood on the ceiling. Randy lay naked in the center of the bed. He had been eviscerated. His entrails were draped over the sides of the bed and along the floor. His throat had been torn open. Not cut, torn. His face was untouched. Clearly, whoever had killed him didn't want any doubt about his identity.",
        "Manetti stood at the foot of the bed and took in the charnel house scene. His fists were clenched and he was shaking with rage. Whoever had done it? There was no doubt who had done it.\n\nOther cops and EMTs stood around and offered platitudes to each other. Everyone was shocked. Everyone but Manetti. Manetti wasn't shocked, Manetti was furious.\n\nHe wanted to tell the lieutenant what he could about the situation. He wanted to tell everything but knew how that would be received. Vampires? Damn, Phil, you must be more upset than I thought. Take a week. Take a Valium. Take retirement.\n\nNo. The bitch had to die and he was going to do it. So he said nothing. \n\nHe excused himself as soon as he could, and went out to sit on the hood of a police cruiser parked in the street so he could call Pam's cell.\n\n\"Listen, I hope you check your voicemail as soon as you are up. My partner is dead. There's no doubt what happened. I don't know how she figured out who to kill to get to me, but she did. She slaughtered him. It's horrible.\" He gave her the address. \"Come when you can. I'm perfectly safe here, there are 20 cops around.\"\n\nShe did check her voicemail as soon as she got up and saw the note he had left for her. She was there almost as the sun was completely down. She came straight to him and hugged him hard.\n\n\"Phil, I'm so sorry. This is my fault, I assumed she would run the way she always has. It never occurred to me that she might do something so conspicuous.\"\n\n\"It's not your fault, there's no way you could have predicted something like this. How did she know to target Randy, though? She couldn't come after me, she didn't know where I was, but how did she know he was my partner?\"\n\n\"I don't know. She must have... no, that's not possible. I don't know, Phil, I wish I did. I promise you, we'll get her.\"\n\n\"Yes, I'm going to rip her fucking head off.\"\n\n\"Well, I'm not going to try and convince you to let me handle this, I have done a shitty job so far.\"\n\n\"Don't blame yourself.\"\n\n\"Excuse me, Detective Manetti?\"\n\nManetti turned and saw an unfamiliar young patrolman standing nearby. \"What is it, officer?\"\n\n\"You might want to come take a look at this, sir.\"\n\nThe young man led them to the parking garage beneath the building. In the furthest corner were several dumpsters. As they approached the young officer turned, drawing his sidearm and aimed directly at Pam's head. At the same moment Barnett stepped out, smiling unpleasantly.\n\nManetti went for the Beretta under his coat, as his fingers touched the handle Barnett looked into his eyes and every muscle in his body locked up. It felt like a cramp over his entire body. He wanted to scream but he couldn't open his mouth.\n\n\"Good boy,\" she said to the young man, \"You have done well. I am very happy.\" The boy grinned. Manetti could see no intelligence in his eyes.\n\n\"So this is how you did all this?\" Pam roared. \"You took some nice young man and turned his brain to oatmeal.\"\n\n\"Yes, of course. Now stand very still or he will paint the wall with your brain. Won't you darling.\"\n\nHis grin grew but neither his aim nor his gaze on Pam wavered at all.\n\nCalmly, she approached Manetti and put her hand loosely on his throat. She squeezed a little and he strained to grab her hand and break every bone in it.\n\n\"Put your handcuffs on her now. She will behave or she'll watch this one die.\" Barnett said calmly.\n\n\"Why would I give a shit about him?\" Pam asked.\n\n\"Because I can smell your cunt on him. You're his little whore now, aren't you. You won't do anything that will risk him.\"\n\nAs the officer was snapping his handcuffs around Pam's wrists Barnett said to Manetti, \"Did she tell you that I turned her husband? He was a pathetic little worm, but very tasty.\" Pam made an inarticulate scream of rage. Manetti still couldn't. He burned to dig his fingers into her eyes.\n\nBarnett smiled at him as though she could feel it. She turned to her puppet and said, \"Do you like her? Why don't you squeeze her tits for Detective Manetti, so he can see what you're going to do to her.\"\n\nThe young man stood behind Pam and reached around to grab at her tits roughly. Manetti pictured blood streaming from Barnett's throat.\n\nShe smiled again, then went to lean against the wall. \"Come here and show me how much you like my body.\"\n\nPhil walked to her and took her breasts in his hands as gently as a lover. He stroked her tenderly as he imagined tearing them off and shoving them down her throat.\n\n\"BITCH,\" Pam screamed and Barnett laughed.\n\n\"That's enough, both of you. Men are so easy to manipulate, don't you think.\" Both men stepped back. \"It's a shame that you fucked him,\" she said to Pam, \"I was going to use that to get complete control of him, but that won't work now, so I'll have to go the other route. He won't enjoy that at all, but I will. Put her in your car and drive her out of the city, someplace quiet,\" she said to the young officer. \"When you get there, bend her over the hood of your car and fuck her in the ass. Then leave her there for the sun. Detective Manetti and I will be enjoying ourselves right here.\"\n\nThe officer took Pam by the arm and began to haul her away. \"Phil!\" She called back to him. She struggled and the officer had to grab a handful of her hair to jerk her along. She swore furiously as he dragged her away. There wasn't much she could do with is gun pressed to her temple.\n\nManetti lost sight of her right after that because Barnett punched him hard in the stomach. The strength of her blow bent him over. The only sound he could make was a deep groan. She grabbed his hair and jerked his head up. \n\n\"Perhaps she did not tell you. There are two avenues open to me, pleasure or pain. Since you fucked that little whore pleasure isn't available to me anymore, so we'll go with pain. A lot of it. To bad I can't let you scream, it would draw too much attention.\"\n\nIt went on for a while, Manetti could not decide how long. Too long. She kept her rigid control over him the entire time. No one walked by. No one noticed a thing. \n\nEventually he was laying on his back with her leaning over him, looking deeply into his eyes. She smiled and he felt control of his body returning. \n\n\"I think you're ready now. Say goodbye to your brains.\"\n\nIf his right leg had not been so badly broken he wouldn't have been able to reach the ankle holster. The click of the hammer locking back caused her to begin turning her head to look. The press of the barrel against her forehead caused her to freeze. Her eyes widened and Manetti thought he saw panic there. He wanted to enjoy it for a while, but she was too dangerous. He considered just arresting her, but on what charge? Blood-sucking? Nope. Not practical right now anyway.\n\nHe squeezed. The pistol went off. Her brains went everywhere.\n\nUnlike the movies she did not turn into dust and blow away. She just became a (formerly) very attractive corpse and collapsed on the dirty concrete.\n\nManetti remember reaching for his phone. He didn't remember finding it.\n\nEmergency rooms always have that very distinctive aroma, anti-bacterial cleaner combined with sickness. It's impossible to miss it. So Manetti knew he was in a hospital before he even opened his eyes. The first thing he saw was a woman wearing surgical scrubs, standing at the foot of his bed writing on a clipboard. Then his eyes shifted to the complicated arrangement of wires and pulleys attached to his right leg. Was that what was making it hurt so abysmally? \n\n\"Welcome back, Mr. Manetti. How are you feeling?\"\n\n\"Leg hurts,\" was that croak his voice?\n\n\"I imagine it does. Don't worry, we've got the best orthopedic surgeon in the state on his way. He's going to fill your leg with rods and screws, but it will hurt less after that. I also need to tell you not to worry about insurance or anything like that. You have a... benefactor who is taking care of everything.\"\n\nHuh?\n\n\"I'm sure you're feeling a little fuzzy right now, you're up to your eyebrows in painkillers.\"\n\n\"Anyone looking for me?\"\n\n\"Not yet. I talked to your boss, he's on his way but you'll be going to surgery in a few minutes. You've got some other injuries too but your leg is the main concern right now.\"\n\n\"How about a pretty nurse?\"\n\nThe woman gave him a knowing grin. \"Forget it. You won't be feeling that frisky for a couple of weeks.\"\n\nHe wanted to make a joke about that but the painkillers combined with the fatigue and he was gone again.\n\nWaking up the second time was easier. His leg throbbed. Wasn't it supposed to hurt less? What was going on with his left hand? He opened his eyes and turned his head. Pam was there. She was holding his left hand in both of hers, pressing it between her breasts. Her eyes were closed. Was she praying?\n\n\"Are you the pretty nurse I ordered?\"\n\n\"Oh thank God. Are you alright?\"\n\n\"Me? First rate. Great drugs in this place.\" His ears were on crooked and everything was very soft looking.\n\nShe smiled and brushed the hair off his forehead. \"I was so worried about you.\"\n\nHe blinked and coughed to clear his throat. \"I was worried about you. I thought you said I was resistant to pushing?\" He motioned at the water glass on the table and she held it for him as he sipped through the bent straw.\n\n\"You were when I tried to push you, but I'm not all that strong in that area. Obviously she is. Was.\" \n\n\"I'm glad you're okay, but what happened?\"\n\n\"That poor guy put me in his cruiser and started driving. We were on the interstate just outside the city when he just stopped and fell over. I don't think he had much left after she was finished with him and when you killed her he just quit working. Anyway, the car tore through a barrier and went down a rise before it came to a stop. I had to break my seat belt, kick the door out, then get his door open so I could drag him out and get his keys so I could unlock the handcuffs. It took me forever. By the time I managed it the sun was coming up, so I had to climb in the trunk and wait out the day. Oh stop looking like that, I've spent less comfortable days. I'm fine, really.\"\n\n\"Good, I'm glad. How did you find me?\"\n\n\"Oh, I still had my cell phone. I was able to get to it and make some calls before anything else. I told my people where you were and what was going on. They got there right after you put her down and brought you here. After the sun went down they came and got me.\" She squeezed his hand. \"You don't have to worry about a thing, Phil. They are going to cover your expenses, fix up your apartment and come up with a cover story for your bosses. I insisted. And I talked to your doctors, you're going to be fine but they are a little concerned about your leg. It's pretty bad.\"\n\n\"I'll worry about that later. Thanks for looking out for me.\"\n\n\"We owe you big, honey. Are you in pain? The little clicker thing right there will give you a shot of morphine if you are.\"\n\n\"In a minute. I'm really glad to see you.\"\n\nThe worry on her face disappeared and she gave him a glowing smile before leaning down to deliver a deep, long kiss.\n\nWhen she pulled away he said softly, \"Better not do that, I'm not supposed to be feeling frisky for a couple of weeks. Doctor's orders.\"\n\n\"Screw the doctor.\" She kissed him again. \"And you can forget about pretty nurses, here me buster? You get male nurses or I get violent.\"\n\n\"Another violent female vampire? Spare me.\"\n\n\"You're such a wuss.\" She kissed him hard again, then pulled back an inch or so and stroked his face gently. \"But you're my wuss.\"\n\nThat seemed a pretty possessive but a twinge from his leg drove it out of his mind. It must have shown on his face because Pam went from glowing to worried. \"I'm okay, don't worry. But where is that clicker?\" She passed it to him and he pressed the button. \"It will probably knock me out so you don't have to stick around if you have things to do.\"\n\nShe smiled, \"You can quit trying to get rid of me, I'm not going anywhere.\"\n\nHe squeezed her hand.\n\nA couple of nights later she came in more reserved. \n\n\"Phil, my boss is here and he wants to talk to you. Well, not my boss really, it's more complicated than that.\"\n\n\"Oh? Well sure, bring him in.\"\n\nShe leaned close. \"Honey, he's old even for a vampire. He's been around for centuries, no one is sure how long and he's not saying. So, don't be too... uh,\"\n\n\"Myself?\"\n\n\"I was going to say smart ass, but yeah.\"\n\n\"Relax, I've talked to mayors and governors in my time. I won't embarrass you.\"\n\nHer boss was a handsome man, with olive skin, dark eyes and gray hair. Striking in appearance, but it was his presence that grabbed attention. There was something about him. Power was close but not really. An expectation that he would be heard and obeyed? Something like that. It was intimidating. Manetti hated it. His suit and shoes probably cost more than Manetti made in five years.\n\n\"Detective, how are you feeling?\"\n\n\"Fine, thank you. Well, as well as I can under the circumstances.\"\n\n\"Good. If you need or want anything, simply ask. I have instructed the hospital to provide whatever is required. I'm told that repairs to your apartment have been completed. Some of your furniture and your television were damaged in the altercation. Replacements will be delivered tomorrow. I trust that is adequate?\"\n\n\"No, that's spectacular. I appreciate the generosity.\"\n\n\"We owe you a good deal, Detective. Your handling of this situation and your discretion were more than we could have hoped for.\"\n\n\"Well, I had more than one personal stake in this.\"\n\n\"So I understand. My condolences on the loss of your partner. Did he have family, do you know?\"\n\n\"His parents, I think. He wasn't married.\"\n\n\"I will see that they are given a large compensation for this. It is not enough, of course, but it is what we can do.\"\n\n\"I do appreciate that. He was close with his parents, the loss will be hard on them.\"\n\n\"Think nothing of it. Do you require anything else?\"\n\n\"Well, I asked for a pretty nurse but Pam vetoed that.\"\n\nHe smiled and chuckled politely, then turned to Pam. \"Ms. Gleason, would you excuse us for a few moments? I need to speak to the detective man to man. Perhaps you could get coffee?\"\n\n\"All right,\" She gave Manetti a pleading look as she left, he nodded to her comfortingly.\n\n\"Obviously, I wish to speak to you about Pam. How much do you know about vampires, detective?\"\n\n\"Not much, just what she's told me and what I've seen.\"\n\n\"Yes. Vampires are different from humans in many ways, but the most significant is in how they experience and react to emotions. And this is particularly true of young vampires, like Pam.\"\n\n\"Emotions are very powerful for us, in fact they can be overwhelming. And the emotions they feel for others almost never fade, so a feeling of powerful love will always be powerful. Now, I have known Pam for almost 10 years and you are the first man she has allowed herself to become close to. She is obviously deeply attracted to you, both emotionally and physically. If I might be blunt, have you had sex?\"\n\n\"Well, to be honest, yes.\"\n\n\"I apologize, it is not my business but it is important you understand. She would never have allowed it to happen if she was not drawn to you physically. And she is obviously quite infatuated with you as a result. Now, an infatuation in a vampire could almost be like an obsession in a human. She may not even be aware of it, but she is only going to be happy when you are together. And when you are not together she will be thinking about you.\"\n\n\"Wow, I had no idea. That's a little... okay a lot intimidating.\"\n\n\"I can see how it would be, yes.\"\n\n\"What should I do?\"\n\n\"Whatever you do, do not lie to her. Do not pretend to feel something that you do not truly feel. She will know and it will hurt her even more deeply. She is likely to be possessive and somewhat jealous of any other woman.\"\n\n\"Is that dangerous?\"\n\n\"No, I would not think so. But she would be easily hurt, even by something that seemed minor to you. If, for example, one of the nurses here flirted with you in front of her, Pam might snap at her. However if you flirted with another woman, that would hurt her a great deal.\"\n\n\"So I should stop with the pretty nurses comments?\"\n\n\"I would recommend it, yes.\"\n\nManetti nodded. \"I appreciate the advice. I do like Pam, a lot. She's been here all night, every night since I was brought in. We've talked a lot and the more I get to know about her the more I've come to like her. Yes, I feel affection for her. Quite a bit.\"\n\n\"Good, I am glad. Pam is special to me. She has been unhappy since I met her, it is good to think that she might find some joy in her life.\"\n\n\"I'll do my best.\"\n\n\"I'm sure you will. I should go, thank you for your time, detective. And, again, thank you for dealing with this problem for us.\"\n\n\"You're welcome.\"\n\nPam came in as he left, and seemed a bit hesitant until Manetti held out his hand to her. She came across the room faster than he could see. Once second she was by the door, looking worried. The next she was by the bed, gripping his hand tightly and bending to kiss him.\n\nManetti considered making a joke about not wanting a pretty nurse after all. He considered telling her how he was feeling about her. He considered saying several things but decided against them all. As she pulled away he buried his free hand in her hair and pulled her down for another kiss. This one longer and much deeper. She gave a sigh of happiness before pulling away from him and smiling wickedly.\n\n\"Why Detective Manetti. Are you feeling frisky?\"\n\n\"Probably friskier than I should be, but I don't care.\"\n\n\"Me either. But you better not kiss me like that too much or the whole hall will hear us.\"\n\nHe returned her wicked grin with one of his own. \"Oh yeah? What will they hear?\" \n\n\"Screaming. Grunting. More screaming. Moaning. The bed collapsing. And me cumming like a volcano.\"\n\n\"Well, that's tempting but maybe we should wait. I doubt your boss's generosity would stretch to replacing this bed.\"\n\n\"Spoilsport.\"\n\n\"I know.\"\n\n\"You like my ass, don't you.\"\n\n\"Of course, that's why my hand was on it.\"\n\n\"Good, put it back.\"\n\n\"Your ass?\"\n\n\"No, dummy, your hand.\"\n\nHe held his hand out. \"I don't understand. My hand is right here on my arm.\"\n\nShe gave a sigh of frustration. \"Are you addled by pain killers? Put your hand back on my ass.\"\n\n\"We barely know each other. I don't do things like that on a first date.\"\n\n\"Bullshit, the first time we were alone you begged to touch my ass.\"\n\n\"No, the first time we were alone I pointed a gun at you.\"\n\n\"Freud would say your gun was an extension of your penis. Not that your penis needs to be extended. I mean, I can barely take the whole thing as it is. Phil! You're blushing! I made you blush like a schoolgirl.\"\n\n\"You did not, that was a flush of... sexual anticipation.\"\n\n\"Liar.\" She grabbed his wrist and put his hand on her ass. He grinned up at her and squeezed hard. She rolled her eyes outrageously and bent to kiss him, then ran her hand over his cheek. \"You need a shave.\"\n\n\"I need a shower.\"\n\n\"ooh. Have you ever had a sponge bath, detective?\"\n\n\"No, and I really doubt that would be a good idea. The whole hall would hear us.\"\n\n\"You being in the hospital is really interfering with the satisfaction of my carnal desires, you know?\"\n\n\"What do all those big words mean?\"\n\n\"It means, when you get out of here we're gonna fuck like animals.\"\n\nHis apartment had been more than repaired, it had been upgraded. All of the carpet was brand new, all of the appliances were new, all of his somewhat elderly furniture was gone and had been replaced by top of the line pieces. He had an enormous new flat-screen television and a new stereo system. Every room had been painted. It was all a lot more than he had expected. \n\nPutting together lasagna while standing on a crutch had been a challenge. It was a good thing he started well before the sun went down. He had just slipped the pan into the refrigerator and closed the door when he saw Pam standing in the living room glaring at him. She was wearing a very tight, very short dress and was standing in a Superman pose, hands on hips.",
        "\"Hi you.\"\n\n\"Don't 'hi' me. Didn't I tell you I would bring you home? Didn't I say I would help you get back in here?\"\n\n\"Honey, they discharged me a ten in the morning. What was I supposed to do, wait outside the hospital all day until the sun went down?\"\n\n\"You could have told them to wait, they would have.\"\n\nHe hobbled toward her. \"I was going crazy in that place, after four weeks of daytime television I had to get out. It was fine. I uh... what's it called? I ubered home.\"\n\n\"You are a jerk.\"\n\n\"So you've said. How about a kiss?\"\n\n\"I'd rather kiss a rhino's asshole.\"\n\n\"Well, let me see if I can find one.\"\n\nHe hobbled back into the kitchen and came out with two bottles of beer. He offered her one and said \"This is the best I can do.\"\n\nShe made a frustrated sound.\n\n\"What are you so mad about?\"\n\n\"I wanted to bring you home. I wanted to help you get situated. You're hopping around on one crutch like it's nothing but you could fall and seriously hurt yourself.\"\n\n\"I'm fine, I've been taking care of myself for a long time.\"\n\n\"You're a shit.\"\n\n\"I thought I was a jerk.\"\n\n\"Shut up. You're both.\"\n\n\"Okay. I'm going to sit down on my new couch. Want to join me?\"\n\n\"No.\"\n\nHer anger and her refusal were not entirely sincere because she held one of his arms to help steady him as he made his way to the couch and sat down. She sat down beside him, as close as she could get. She saw several twinges of pain on his face as he settled his cast on the pillow laying on the coffee table, and was instantly solicitous. \"Honey...\"\n\n\"I'm fine, really. I've got a broken leg, so it's going to hurt sometimes.\"\n\n\"I know, but I hate seeing it. And I'm sorry for calling you a shit when you're hurt.\"\n\n\"That's fine, baby. Am I still a jerk?\"\n\n\"Yes.\"\n\n\"Good, I wouldn't want you going soft on me.\"\n\n\"No chance of that. Didn't you have an x-ray today?\"\n\n\"Yes. The doctor is pretty sure I won't need a cane but I will probably have a limp, even after the physical therapy.\" She grimaced. \"It's okay, really, I can deal with that. The problem is, I probably won't be able to meet the physical requirements to keep my gold shield.\"\n\n\"Oh no. What does that mean?\"\n\n\"It means I won't be a detective anymore, they'll have to find something else for me to do. They mentioned some kind of administrative position. And, oddly, instructor of Investigative Techniques at the academy.\"\n\n\"That has possibilities.\"\n\n\"Well, there's always curtain number three. I stay home and cook and you bring home the bacon.\"\n\n\"You'd be insane in a week.\"\n\n\"More than likely.\" He glanced at his watch. \"I should put the lasagna in so it can be cooking.\"\n\n\"Yummy. No, sit still. I'll do it.\"\n\nHe watched her lazily as she turned on the oven and slid the big pan in. Did she bend over like that intentionally? Probably.\n\n\"Nice dress.\"\n\nShe glowed at his compliment. \"Like it? I bought it with you in mind.\"\n\n\"I do like it, very much. It's the perfect combination of elegant and whorish.\"\n\n\"That's why I got it. Oh, just in case you didn't notice, I'm not wearing underwear.\"\n\n\"So? I assumed that much.\"\n\nUh oh. She's back in the Superman pose. \"What the hell is that supposed to mean?\"\n\n\"You didn't have underwear on that time at the hotel. I just assumed you never wore any.\"\n\n\"Never? What kind of slut do you think I am?\"\n\n\"I don't think you're any kind of slut. I think you are a beautiful, intelligent woman who doesn't wear underwear.\" He opened his eyes in feigned innocence. She narrowed hers.\n\n\"How long does this need to cook?\"\n\n\"About an hour, why?\"\n\n\"Because I either have to take you into the bedroom and fuck your brains out, or I have to kill you.\"\n\nManetti pretended to consider. \"Are those my only options?\"\n\n\"Yep.\"\n\n\"Hmm. I'd have to go with the first one then. Help me up?\"\n\nShe stalked over and lifted him, cast and all, in her arms. \"Careful, I wouldn't want to bang your head on the wall or anything.\" She faked banging his head into the wall as she carried him through the door to the bedroom.\n\n\"I'd hate that too. You know, getting carried around like this is kind of sexy.\"\n\n\"It's a good thing I like you so much because you are the most frustrating person I've ever met.\"\n\n\"I always say 'Go with your strengths'\"\n\nShe set him down on the edge of the bed as gently as she could and turned her back to him. \"Unzip me?\"\n\nHe slid the zipper down slowly, then spread the dress open and stroked her bare back as she purred. He slipped it off her shoulders and she wiggled unnecessarily to let it slide over her hips and drop to the floor. \n\nThere was nothing under the dress except Pam, which was more than enough.\n\nShe turned to give him a good long look, smiling lasciviously. \"You like?\" she asked as she ran her fingers lightly over her breasts.\n\n\"I like very much, as you know well.\"\n\n\"You want?\"\n\n\"Yes, baby, I want you like crazy.\" He peeled off his shirt and tossed it to her. She batted it aside.\n\nCarefully and gently she helped him get the rest of his clothes off, then helped him get situated; sitting in the center of the bed with his back against the headboard. \"Like my new bed?\"\n\n\"It's very nice, too bad we're going to wreck it.\"\n\n\"Go easy on me, okay? I've got a broken leg.\"\n\n\"I am not thinking about your bones.\" She crawled up until she was kneeling over him, so she could hold his head and kiss him deeply. \n\nShe pressed his head between her breasts and said with sudden seriousness, \"I never said this, Phil, but I am really sorry that you got hurt. I should have handled this better. I should have seen what she was up to.\"\n\nHe leaned back to look up at her. \"Honey, nothing that happened was your fault. You couldn't foresee what she was planning. And in the end we got her. That's what matters, isn't it?\"\n\n\"I guess, but...\"\n\n\"No buts. No second guesses. No worrying about what we did or didn't do. It's over. It's done.\"\n\nShe nodded, kissed him softly, and with infinite gentleness slide down on his hard cock.\n\n\"Oh baby, do you know how good you feel in me?\" She bit her lip and began to move on him, slowly, carefully and exquisitely. \n\nManetti didn't answer, he was too busy brushing his lips across her stiff nipples and running his hands over the curves of her hips.\n\n\"Are you going to kiss me when I cum on you?\" Her voice was breathy and hoarse. She probably wasn't completely aware of what she was saying.\n\nManetti buried one hand in her hair and pulled her face down, but he was too slow. She gave a soft exclamation of pleasure and climaxed. Her entire body tensed and she shook from the intensity of it.\n\nIt took her several minutes before her breathing slowed and she could open her eyes. \n\n\"Oh God, you are too good at this, you bastard.\"\n\n\"Yes, it's really awful that this is so good for both of us.\"\n\n\"It really is. I just hate it so much.\"\n\n\"I can tell.\" Manetti reached up to cup her firm breasts and run his fingers over her nipples.\n\n\"Yes, that's the part I really hate, when you touch me like that. It's the worst.\"\n\n\"I should stop then.\" He pinched her nipples lightly and she moaned wantonly.\n\n\"Ohhhhhh, don't you dare.\" She kissed him hard and they began to move again, faster this time. Neither of them could focus enough to tease anymore. All they could think of was the pleasure and joy of their coupling. It was less intense, and less vigorous, than their first time in the hotel. But it was even better.\n\nAfterwards she lay alongside him with her head in his lap so he could run his fingers through her hair.\n\n\"I'm really sorry to make you do that. I know how much you dislike it,\" he said and she grinned.\n\n\"Yes, that was even worse than the first time. I hope you don't want to do it too much.\"\n\n\"If I was any kind of a gentleman I wouldn't ever ask you to do it again.\"\n\n\"Yes, and if I was less of a slut I wouldn't be thinking about the next time already.\"\n\nManetti had to think about that. \"Earlier you accused me of thinking you were a slut, now you're saying you are one?\"\n\n\"Well, there's the kind of woman that walks around in a 'fuck me' dress without panties. She's just a slut in general. Then there's the kind of woman who thinks like a slut when she's naked and in bed with her lover. That's the good kind of slut. And if you ask me which one I am you'll be singing soprano.\"\n\n\"Never even occurred to me to ask.\"\n\n\"Uh huh.\"\n\nHe grinned and ran his fingernails lightly down her back. \n\n\"mmmm, okay, you're not nearly as much of a bastard as I thought you were. Turns out you're kinda nice to have around.\"\n\n\"I can cook too.\"\n\n\"I know, it smells great. How much longer?\"\n\n\"I don't know, 15 or 20 minutes probably. It's difficult to say for sure, this is an art, not a science.\"\n\n\"Show off.\"\n\n\"Let's get up, it will take a few minutes to get me dressed and moving around again. Ouch! No biting.\"\n\nAs it turns out, Pam had brought a change of clothes and a few other things in a suitcase Manetti had not seen. She slipped on a robe then helped him get pants and a t-shirt on. Manetti grumbled about the need for her help but stopped when she glared at him. \"You're going to shut up and let me baby you a little, so knock it off.\"\n\nActually, his grumbling had been all for show, having her fussing over him and babying him was surprisingly pleasant. He did, however, draw the line at having her carry him around. \"Save that for special occasions.\"\n\nShe made him stand aside so she could get their dinner out of the oven, and almost dropped it when he reached under her robe to stroke her bare ass. \"You better knock that off or we're never gonna get to the food.\"\n\n\"Hey, it's not my fault you have an irresistible ass.\"\n\n\"You can show me how much you like my ass later, I'm hungry right now. And you need to keep up your strength, I'm going to be making extensive demands on you tonight.\"\n\n\"What demands? Do you need help moving furniture, or something?\"\n\n\"No, breaking it, starting with your new bed. Oh my God this is good.\"\n\n\"Get your fingers out of our dinner. Were you raised in a barn or something?\"\n\nShe laughed and pressed herself against him as they kissed. \"You are so much fun, Phil. You make me furious sometimes, but you are fun to talk to and be around. And you are fabulous in bed.\"\n\n\"I knew it. You only love me for my body.\"\n\n\"Well, hell yes. Are you complaining?\"\n\n\"Of course not. Start serving us up, I'll pour the wine.\""
    ],
    "authorname": "RaginCajun50",
    "tags": [
        "detective",
        "police",
        "vampire",
        "horror"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/policing-vampires"
}