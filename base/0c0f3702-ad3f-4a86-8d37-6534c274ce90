{
    "title": "The Verse",
    "pages": [
        "I hugged myself, walking down the street, trying to hide my face and the tears falling from my eyes. Aaron and I rarely fought, but we also rarely had reason to. We had been together since I was in high school even though we were about as opposite of people as you could be. \n\nI was quiet, an introvert. I loved to read and paint, I had a creative mind. Aaron was a partier, an extrovert who liked to drink and party with his friends. We usually did our own things and we were good with it, got along great.\n\nTonight he had begged me to go with him to his best friend's Halloween party, saying he didn't want to be the only one there without a date on his arm. I got dressed up as Dorothy Gale from Wizard of Oz and went out with him to the huge party, the only girl there not dressed like a slutty something. That was when things started going bad. He was an outrageous flirt, I knew that about him and I didn't mind. It was when he started dancing with other women and grinding on them on the dance floor, touching them inappropriately and letting them touch him that my feelings started getting hurt. When a girl grabbed his dick through his pants, stroking him on the dance floor while he shoved his tongue down her throat, I decided I had hit my limit. I hadn't made a fuss, just quietly told him I was going to call an UBER and go home, I was tired.\n\nHe was drunk and had gotten upset, taken my phone and said no, I would stay with him and hang out. Sarah, the girlfriend of his best friend Alex, had yelled at him, told him to stop being such an asshole and dancing with other girls and hurting me. He yelled at her, told her to mind her business, then yelled at me like it had been my fault he had been called out. Alex yelled at him, then his other friend Jason had yelled at him and his fried Roderick told him he was being a douchebag, especially to me. \n\nAaron took off, leaving me alone at the party without a phone and therefore my wallet since my phone case was my wallet too. I had followed him to the street, but he was gone. Instead of going back in, I had started walking, feeling gutted. I had always known he had a temper, but I was very rarely on the receiving end of it, mostly because I never gave him a single reason. After seeing him tonight, seeing what he would do while I was with him, it made me wonder what he did when I wasn't there. It broke my heart.\n\nI wiped my eyes and looked up, trying to gauge how far I was from home, but it was hard to get oriented while walking. Everything seemed to look different. Was I even on the right street? I walked up to the intersection and looked at the street names, but they weren't familiar. I thought I had turned on the right one, right next to the gas station with the blinking lotto lotto lotto sign. \n\nI looked around, but the streets were dark and empty this late. I should have gone back in and asked Sarah for a ride home, but I had been too embarrassed. \n\nI saw a light flash and I turned, thinking a cop was behind me, then gaped in astonishment as a... portal? opened in the middle of the street, widening and turning into a circle large enough for a man to leap through. Another man dove through, tackling the first man and they fought, punching and grappling, rolling on the ground. I moved to the side, looking at the portal into what looked like another dark street, somewhere else. Somewhere foreign. Was this some ornate costume special effect? A full minute passed and the portal began shrinking, leaving the two men and I in the dark as they continued to struggle and fight. The first man broke free and hit something on his arm and another portal began opening. He kicked the other man back as hard as he could, then dove through the portal to a place I couldn't see. The other man followed him and I ran to the portal to watch the two men struggling again on a dark, cobblestone street.\n\nI was gobsmacked and completely numb as I watched them. Had I been roofied? Drugged? Was this real or some halloween stunt? I peeked into the portal, then stepped in, looking back to make sure it was still behind me as I stepped into a whole new place. A place that had to be somewhere else in the world. I stayed close, ready to go back through in a moment, before the time was up. The other had lasted almost two minutes. This place looked so odd! I took another step away from the portal, looking around, trying to figure out where I was. What was going on. \n\nThe portal snapped closed behind me and I spun, terrified, looking for it. I turned again and the two men were going through another portal. It closed right behind them.\n\n\"Wait!\" I yelled desperately, but they were gone and I was alone on the dark cobblestone street.\n\nPanic welled up as I looked around. What sort of idiot just walked into a portal to another place!?! I was a moron. How was I going to get home? I didn't have my passport or even an ID, they were all in my phone case that Aaron had taken with him. Shit shit shit!\n\nI ran down to the first intersection of the old street, then froze. There was a... something hovering in the street drifting closer to me. It was dark, but I could make out an ovalish body and three long tentacle type legs swaying below it as it drifted closer. The moonlight hit it and it shone metallically and I realized it was a robot of some sort. \n\nIt seemed to go on alert, it's body tensing and somehow I knew it was aware of me now. \"Halt! Curfew breach. Halt! Scan breach. Halt! Incoming instructions.\"\n\nI panicked, turning to run as fast as my short legs would carry me. The thing pursued, if not very quickly. I dodged down alleys and streets, sprinting with fear fueling me. Where the hell was I? Was that thing going to kill me?\n\nI made it to a street with lights and paused, looking around.the buildings around me all looked mostly the same in the dark, but now I could see windows on what looked like the second story of a warehouse. Two of them were pushed open, the bottoms tilted out. I scrambled up the ladder on the closer single story building and onto the roof, then ran to the side of the warehouse, stepping onto the narrow edge and side stepping down until I was at the first open window. I grabbed the ledge and pulled myself in, then hung there a moment. There was no second floor, it was open to the first floor and it was a long drop. I steeled myself, ready to bend my legs, then let go. I rolled and the impact drove the air out of me, but I was fairly certain I was alright as I sat up and took stock of myself. \n\nI stood and looked around the warehouse. It was mostly open and there were chairs and couches, as well as what looked like a kitchen area, all open in the huge space. Along the back wall, boxes were stacked high, but I knew the warehouse went further back than that wall of boxes. I moved closer and there was an opening where the boxes overlapped with about three feet between them. Behind the two walls were several beds, mostly an odd sort of twin sized and one large one in the corner at a 45 degree angle to the room. There was a small, glowing lamp lit, but I knew it wasn't fire. It was something else that glowed like fire. \n\nWhere was I?\n\nI went back out to the front and looked around, looking for something that might tell me where I was. I found a glossy piece of paper, but I could not read the language written on it. I opened the cupboards in the kitchen, but I could not read the labels on the food either. None of it was in writing I recognized. \n\nI wondered if the squid robot was still looking for me as I picked up some sort of electronic device off one of the tables and looked around at all of the strange things. I went back to the boxes and started to open one as I heard noise, the sound of the door being opened. I dove behind the boxes to the corner and froze, trying not to move or breathe as I listened. Was it the squidbot?\n\nNo, voices, very human. \n\n\"... won't be getting any more any time soon,\" said a man with a deep, heavy voice.\n\n\"Get all he has then and make sure he knows that we are to be informed first when he does get more,\" another man demanded. His voice was also deep and very commanding.\n\nThere was noise like a lot of people moving and shuffling around, sitting on the furniture.\n\n\"I wonder what has the sentries up in arms,\" a woman wondered out loud.\n\n\"I've never seen so many out at once,\" a new male voice offered.\n\n\"Probably a verse breech,\" the commanding voice said dismissively. \"Layton, why did you leave the scanner out here?\"\n\n\"I didn't.\"\n\n\"Callen, sweep,\" the commanding voice said quickly.\n\nMy heart pounded as the voices went quiet and I pressed into the boxes and the shadows as hard as I could, praying I wouldn't be seen or heard. \n\nA silhouette of a man came around the boxes and went straight to the back and I watched him look around and behind the beds. He was tall and he wore a skin tight shirt and pants that looked almost like rubber, all in black and white. His head was shaved up one side and arched up high to flow down the opposite side in a cascade of bright white.\n\nHe turned and started back to the front and his eyes fell on me hunched into the corner. He looked grim as he marched to me and yanked me up, then pulled me out front as I let out a terrified yelp.\n\nThere were eight people out front, not including the man dragging me and they were all dressed similar to him in tight rubber clothes. Some had half their heads shaved, , but not the two girls or the smallest man. A large man had both sides of his head shaved and the mohawk he had was plaited in a braid like I had never seen, the sleek black of his hair at odds with his bright amber eyes.\n\nThe white haired man dragged me to him and stopped me in front of him as everyone gathered around me, looking at me in confusion.\n\n\"Is that a girl?\"\n\n\"Why is she dressed like that?\"\n\n\"Is it a child?\"\n\n\"All of you hold your tongues,\" the black haired man snapped as I looked up at him in terror. \"Why are you here?\" he asked me. \"Are you a spy for Allowman?\"\n\n\"I... I... don't know what that is. Please, I was just trying to hide from the squidbot thing, it was yelling at me.\"\n\n\"Squidbot,\" the small man snorted.\n\n\"Lair!\" black hair hissed at the boy. \"Girl... you are a girl?\"\n\n\"Yes?\"\n\n\"What is your name? What is your accent? Where are you from?\"\n\n\"My name is Olivia... I am from the United States. Where am I?\"\n\nThe man cocked his head slightly. \"Did you verse breach here?\"\n\n\"I... don't know what that means?\"\n\n\"Layton, scanner,\" the man demanded. \n\nAnother man picked up the electronic device I had been looking at while the man holding my arm grabbed my right wrists and turned my arm over as he held it out. The other man used the instrument to scan my arm. He did it again, then again. \"No chip, Endrew.\"\n\nThe black haired man cocked his head again and looked me over. \"So, from 68, 91 or 112. I am thinking 112 judging from the odd clothes.\"\n\nI looked around at all of them staring down at me and swallowed hard. \"I still don't know what you mean. Where am I?\"\n\n\"Release her, Callen,\" the man demanded. The large man let me go and I rubbed my arm. The man crossed his arms, looking down at me, scrutinizing me. \"What is your age?\"\n\n\"Twenty three.\"\n\n\"You are petite.\"\n\n\"Yeah.\"\n\n\"Your clothes do not fit you, and yet you still show too much skin,\" he said, gesturing at my legs in the dress.\"\n\n\"It's a costume, a dress... it fits fine.\"\n\n\"Your form cannot be seen at all beneath it, and it shows skin. What sort of world allows so much skin outside of a home? And does not show form to know at a glance whether you are male or female?\"\n\n\"I... I am wearing a dress? And make-up? And my hair...? Anyone looking knows I am a girl? Where am I?\"\n\n\"144,\" he answered, as if that should make sense to me.\n\n\"Is that the address here?\"\n\n\"The paraverse number. This position in this paraverse is the same position you stepped here from in your own paraverse. 112 I think. You are in an alternate universe parallel to your own. How did you come? Your world is not allowed access to the paraverse transit system.\"\n\n\"There were two men... they opened a sort of portal, a door... or opening and I stepped in to look... I thought it would stay open like the other one did, but it closed. They were fighting.\"\n\n\"Bounty hunter,\" a woman said, sniffing disdainfully.\n\n\"Leess,\" the black haired man admonished. He looked back down at me. \"You are trapped here now, with no chip. If the sentries find you, they will dispose of you.\"\n\n\"Dispose? Like... kill me?!? There is no way back to my planet?!?\"\n\n\"If we were to find someone who could transverse, they would have to be convinced to break the law to take you to 112 and risk having their rights stripped. Next to impossible and in order to find one, you would have to risk exposing yourself and being taken to be disposed of. No, girl, you are well and truly trapped here,\" the man smirked, looking me over again. It wasn't a pleasant look. \n\n\"I... what can I do? How can I get out of here? Is there a place in this world I can go to that they won't kill me?\"\n\nBlack hair stepped closer, shaking his head. \"No, pet. There is nowhere for you to go. You will be just fine here though, won't she boys?\"\n\n\"Endrew...\" one of the girls began, taking hold of his arm.\n\n\"Mallee, remove your hand,\" he said, his nostrils flaring.\n\nThe girl yanked her hand back, flinching. \n\nBlack hair, Endrew? looked back to me. \"Tell me about your world, pet. Tell me what women do to serve there.\"\n\n\"What?!? Women don't serve! We are people! Equal! There is no serving!\"\n\nThe men all laughed and the girls looked at me wide eyed. I needed out of this place right now. \n\nI glanced at the door they had all come in, but had no sooner laid eyes on it than Endrew took hold of a handful of my hair. \"Do not consider it, pet,\" he said, his voice low.\n\n\"Endrew,\" the girl he had called Mallee begged pleadingly.\n\n\"Mallee, do not speak of it again,\" he snapped. \"Geon, you have been coveting Mallee, yes? Take her in hand.\"\n\nOne of the other men smiled malevolently, yanking the girl back against him as she went pale. Endrew turned back to me, his eyes taking me in again as his hand held me in place by my hair. He wasn't hurting me, or even being rough, but he had a tight, unyielding hold.\n\n\"Tell me about your world,\" he commanded, Moving to a chair to sit down. He pulled me down to the floor by my hair, forcing me to sit between his legs.\n\n\"I don't know what to say,\" I said, my voice wavering in panic as the others also sat. Not the man who had taken the girl, he was pulling her back beyond the box wall. \"I don't know what this place is like... The roads are paved. We don't have squidbots.\"\n\n\"Sentries,\" he corrected.\n\n\"Sentries. Or chips in our arms. We don't dress like we are about to go deep sea diving and most people don't shave their heads like you all seem to.\"\n\n\"You have no leaders?\"\n\n\"Of course... is that how you show leadership? Shaving your head?\"\n\n\"Somewhat. How do you know who is above you?\"\n\n\"You don't... we don't live like that, all people are equal.\"\n\n\"It sounds like chaos if everyone thinks to lead.\"\n\n\"We have leaders, but we elect them.\"\n\n\"Elect?\"\n\n\"Everyone votes, the person with the most votes wins.\"\n\n\"What if they use force and make others vote? Or use other coercion methods?\"\n\n\"That's not how it works. They just have debates and people pick who they agree with most.\"\n\n\"That sounds complicated and like a system built to be rigged. Why not fight or buy into leadership? Earn it in blood?\"\n\nI paled slightly. Is that how they did it here? Had he hurt or killed people to get his head shaved? \"What is to stop your people from just shaving their heads? Pretending they earned it?\" I asked.\n\nThey all laughed. \"Then the first time they were challenged, they would die horribly,\" Endrew laughed. \"It is so odd to hear you speak. Your accent is so... off. The words are almost right, but just not. Do you have paint on your face?\"\n\n\"It's make-up. Girls wear makeup where I am from, on planet Earth.\"\n\n\"Earth?!?\" he asked, laughing. \"You call it earth? Who would name an entire planet 'dirt'?\" he asked, laughing more. \n\nI blushed. \n\n\"It is not even mostly made of earth, it is more water. What a strange place you come from. What do you call the planets? Rock? Gas?\"\n\nI blushed harder.\n\n\"I do not like the face paint. I wish you to remove it.\"\n\n\"I... need a cloth and water, soap.\"\n\n\"Lair,\" Endrew snapped. \n\nThe small man jumped up, running to the kitchen area to get me a wet cloth. I tried to scrub my face as best I could with Endrew still holding a fistful of my hair. I looked up at him, my heart thudding in my chest. He looked me over thoughtfully. \n\n\"You look even younger now,\" he said, almost unhappily. \"I wish to see your form, you will remove the garment.\"\n\nI hugged myself, shaking my head slightly. \"I don't really want to do that,\" I said softly, horrified.\n\n\"What you want is irrelevant, I gave you a command, pet.\"\n\n\"My name is Olivia,\" I said more boldly, beginning to lose my temper. Something I rarely ever did. \n\n\"You are my pet now. My little pet from another verse. I wish to see your form. I will not ask again.\"\n\nI hugged myself tighter, hunching down on myself as I looked away from him, refusing to do as he asked.\n\n\"Callen,\" he snapped, letting go of my hair with a shove.\n\nThe huge man snatched me up off the floor, yanking my costume open down the back with a rip, then pulling it off of me as I struggled and whimpered, snatching at the fabric. Endrew was standing now, looking down at me as Callan held me up.\n\n\"What is that?\" Endrew demanded in confusion, plucking at my bra and then my underwear. \n\n\"Don't!\" I begged, trying to hide myself.\n\n\"Are you bound in some way like a criminal?\"\n\n\"No! It's my underclothes!\"\n\n\"What purpose do they serve?\"\n\n\"They are just... sanitary. So my girl parts don't touch anything they shouldn't with my dress on.\"\n\n\"That seems redundant. Remove them.\"\n\n\"No!\"\n\n\"Callen.\"\n\nCallen didn't try to unfasten my bra, he just pried it off of me, pulling off the straps and yanking it over my head. The underwear, he just ripped as I cried and tried to curl up, sobbing.\n\n\"Straighten her. Where is your hair?\" he demanded, putting his fingers on my bald pussy.\n\n\"Don't touch me!\" I squealed, trying to fold myself in half. The giant holding me was too strong.\n\n\"I am going to have to use corporal punishment?\" he asked darkly. \"I take no issue with that. Lair, get me a strap.\"\n\n\"No! No, I have it removed! I wax!\"\n\n\"Wax?\" he asked, confused.\n\n\"Hot wax, when it dries and you pull it off, it takes the hair with it.\"\n\n\"That sounds akin to turture. You subject yourself to this or it was a punishment?\"\n\n\"I have it done on purpose. I don't like hair there.\"\n\n\"Why? It is natural. You look too young without it.\"\n\n\"My boyfriend prefers it that way.\"\n\n\"Boyfriend. Is that your keeper?\"\n\n\"No! Please, let me go! Let me have my clothes back!\"\n\n\"No. I wish to see your form. If not a keeper then just a companion?\"\n\n\"No, boyfriend. Not married yet, but on our way there.\"\n\n\"Married. He would be your keeper then?\"\n\n\"No. We don't have keepers! Women are equal! We have mutual partnerships, boyfriends and girlfriends, husbands and wives.\"\n\n\"Who takes care of you? See's you fed and clothed?\"\n\n\"I do!\"\n\n\"How?\"\n\n\"I have a job!\"\n\n\"Females have assigned duties as men do?\"\n\n\"We aren't assigned, no one is assigned, but yes, we work too.\"\n\n\"If you are not assigned, who does the jobs no one likes to do?\"\n\n\"They are hired and paid well, with benefits.\"\n\n\"Benefits? Like a slave?\"\n\n\"No! Like health insurance and vacation time!\"\n\n\"Your world seems confusing and not very organized.\"\n\n\"May I cover now, please?\" I asked, trying to twist and squirm out of the giant's grip.",
        "\"No, do not ask again. I will see your form as I please. Why does this cause you distress? To be shown to your keeper, but you had none showing your bare legs and arms to anyone who might see.\"\n\n\"Bare legs and arms aren't a big deal where I am from! Complete nakedness is! It is something you only do with someone you are intimate with.\"\n\n\"We will be intimate soon. Does that ease your mind?\"\n\n\"No! No, not at all! I don't want to be intimate with you! Where I am from girls have a choice! And we are only intimate with our boyfriends or husbands!\" I lied, panic starting to take over completely.\n\n\"You dislike intimacy? Does it not feel good to you? Perhaps you have been doing it wrong. Or perhaps your keeper did not give you the correct attentions. Did he make you peak for him?\"\n\n\"That has nothing to do with it! You are only supposed to be intimate with people you love!\"\n\n\"Love. Like your parents? Or your siblings? That is very wrong here.\"\n\n\"No! Oh my god! No, of course not! You can love people you aren't related to!\"\n\n\"If you keep someone, you care for them. It is not the same as family, but it is similar. Is that what you mean?\"\n\n\"Our worlds are different. Where I am from you are not intimate with strangers, only people you have promised yourself to. And you don't just pass off a partner when you find someone you like better.\"\n\n\"You are assuming, I believe, that I was Mallee's keeper. I was not. She wished me to be, but I made a choice to keep you.\"\n\n\"You don't even know me!\"\n\n\"You are pleasing to look upon and I like your size. I like the color of your hair and the way it curls. Also, I like to hear you speak. You need a keeper, to be kept safe from the sentries and the Verse Wardens. So I will take you for my pet and be your keeper until I either tire of you or decide to take you as more than a pet. As your keeper I forbid you to try and escape, to try and harm anyone or to say no to anything I ask of you. And you will not cover your form from me. Ever. Do you take issue with this?\"\n\n\"Yes! I am not a slave!\"\n\n\"If you cause disruption or grief for me, I will use corporal punishment. The strap, the ball, then the pyramid, in that order,\" he said, scowling down at me. \"I will not put up with disobedience from my pets.\"\n\nI broke down crying, unable to process what was happening. \"I want to go home! This isn't real! It isn't real! I want to wake up! I want to go home, please!\"\n\n\"Pannar, give her a dose of Pharrot to calm her,\" Endrew said with a scowl. \n\nAnother man stepped up, pulling a vial out of his pocket. He set the end on my wrist and twisted, then there was a pinch and a burn. Seconds later, my body began going languid and limp and my mind fuzzed over.\n\nEndrew caught me up as I sagged in the giant's grasp, then carried me back to the huge bed. I stared up at him, too relaxed and uncaring to move. \n\n\"You gave her too much!\" Endrew said, sounding frustrated.\n\n\"I adjusted the dose for her size, but perhaps she has no tolerance. Perhaps they do not use Pharrot in her verse. Next time I will use less.\"\n\nEndrew scowled down at me and I just stared up at him, my mind at peace. His features were attractive, now that I wasn't too terrified of him to look at him that way. Even the shaved sides of his head seemed to suit him. His face relaxed as his lip curled. \n\n\"Sleep, pet,\" he ordered. \"I want you aware and active when I put hands on you. Participating.\"\n\nI stared as his lips moved, then looked back up to his eyes as he looked down at me. His eyes swept over me as I laid there, unmoving. He cocked his head slightly when his eyes landed back on mine. \n\n\"I am not used to a creature like you,\" he said lightly. \"You stare so openly as if you have the right. Even in an unknown Verse you are beyond bold. It is not seemly to take one who is incapacitated, but I wish you taste your lips. From your look you do not care, I think,\" he said, leaning over me, his face close to mine. I thought he meant to kiss me, but his tongue darted out and licked my lips, literally tasting them. He did it again, then again, long, slow strokes with his tongue, then sucking on my lower lip before pulling back, his eyes hooded. \"Your lips are perfect for tasting, so full and soft. I think you do not mind being intimate at all,\" he said with a smirk. \"Sleep now pet,\" he whispered, leaning in and licking my upper lip with the tip of his tongue. He stood and left, leaving me alone. I could hear other people in the room, it sounded like they were making out. Dimly I thought of the girl he had sent away with the man and thought they must be in one of the other beds, but my body was too relaxed to look and I couldn't gather enough interest to really want to try. I closed my eyes with a small sigh, wondering if what he had done was the same as kissing in this place. Another part of me wondered if when I woke up, I would be in my own bed, all of this a dream. \n\nWhen I opened my eyes, it definitely wasn't a dream. I stared at the ceiling of the open warehouse for a moment before trying to sit up and shove the heavy arm off my waist. \n\nEndrew lifted his head, looking at me through sleepy eyes. \"Go back to sleep little pet, it is early yet.\"\n\n\"I need to use the restroom.\"\n\n\"What?\"\n\n\"I need to pee.\"\n\nHe blanched, looking at me like I had just used a horrible curse or said I was about to go boil a baby alive.\n\n\"Is that not a thing here? You have some medical device that removed the need or something?\"\n\n\"We do not speak of those sorts of things! That is disgusting!\"\n\n\"Well what should I say instead?\"\n\n\"That you need a private moment.\"\n\n\"Ok, I need a private moment.\"\n\n\"Are people really so crass in 112?\"\n\n\"It's just a bodily function, it's normal. Are you going to tell me where I can have a private moment or should I go hunt it down?\"\n\nHe rolled out of bed and I turned away quickly since he was wearing absolutely nothing. I remembered I was wearing nothing as well. I tried to stand with a blanket but his scowl made me let it go as I followed him. He showed me to a little walled off corner with a hole in the floor and pointed at it.\n\n\"Umm, is there a toilet?!?\" I asked, staring at the hole in horror. \"And toilet paper?\"\n\n\"What are those? You do as you need in there.\"\n\n\"What do I clean myself with?\"\n\nHe gestured to a stack of cloth's on a small table. Under it was a box with used cloth's.\n\n\"You don't use toilet paper?\"\n\n\"Paper?\"\n\n\"To wipe with?\"\n\n\"Do not be crass! And no, it does not wash, it would be a waste.\"\n\n\"You throw it out with... your bodily waste.\"\n\n\"I said do not be crass! And that sounds like a larger waste! Why would you not just clean and reuse? Is 112 so wasteful? And would paper not clog the canals?\"\n\n\"It's whatever, can I have some privacy please?\"\n\nHe was waiting for me when I came out, looking perplexed. \"It is not a wonder that 112 is not allowed to use the Paraverse transit system. Your ways are so... off. Your ways might contaminate the other Verses. Come back to bed now, I wish to touch you now that you are no longer incapacitated.\"\n\nI swallowed hard, looking around for something to use as protection.\n\n\"Perhaps you need incentive? You did not mind so much when I tasted you last night. So bold you are with your eyes. Do you not know it is unseemly to look a man in the ye as you do? As if you are an equal?\"\n\n\"I am an equal! There is no subservience where I am from. I am my own person.\"\n\n\"Here you are not. Here you are my pet and you will obey. Do I need take you in hand, pet?\"\n\nI walked away from him, heading back to the room with the beds. I covered as soon as I climbed in and turned my back to him.\n\n\"No, pet, turn to me. I will taste you again,\" he said, taking my shoulder and pulling me to face him. I swallowed hard again and tried to control my breathing. Was this really my new reality? Was this karma for getting so upset with Aaron? No. Aaron was being an asshole, he deserved worse than he got. This was karma for me being too curious.\n\nHe leaned close, so close that I could see nothing but his eyes as he looked into mine, studying me up close as if he could see into my soul if he looked hard enough. He leaned in and touched his tongue to my lips again, lightly drawing it over my mouth as I pressed my lips together in disgust. He moved down, licking lightly along my jaw, then my collarbone and up my neck, making me shiver and giving me goosebumps. He slid his fingertips down my arm and pushed my fist open. I thought he meant to hold my hand, entwine our fingers, but he pressed his fingertips to mine lightly and held them there. He licked along my shoulder, the bare tip of his tongue, making me shiver again.\n\n\"Pet,\" he breathed. \"Your reaction says you enjoy this, yes? This is the attention you have needed?\"\n\nI blinked, not understanding him. Was this what he had meant the night before when he had talked about attentions? If so, they were very... reserved here. That was actually a relief.\n\n\"Do you not wish to taste me as well, pet?\" he asked, darting his tongue out to lick my upper lip.\n\n\"That isn't a thing where I am from,\" I said breathlessly, wondering if he was that good with his tongue everywhere.\n\n\"What do you do?\"\n\n\"Kiss?\"\n\n\"Show me,\" he demanded, his eyes bright. \n\nI turned my head slightly and leaned up, pressing my lips to his softly, kissing him quickly.\n\n\"That is all?\" he asked, confused.\n\n\"There is more when we are closer, know each other better.\"\n\n\"Show me!\"\n\nI leaned in and kissed him again, longer this time and opening my mouth slightly to kiss the right away. He learned quickly, doing the same as I slid my fingers up to his head, into his hair. \n\nHe pulled back, sucking in a breath to look down at me in shock. \"You are very bold, pet. That soon you wish to become more? Not just a pet, but a companion?\"\n\n\"I don't know what that means, you told me to show you how we did things. That is part of it. I don't know your customs, or if that means more here.\"\n\n\"It does. It is very intimate to be allowed to touch my crown.\"\n\n\"Where I am from it just feels good.\"\n\n\"Kiss is nice, but I enjoy tasting. I wish you to taste me as well. Come,\" he said, laying on his back and pulling me up over him.\n\n\"I don't really want to do that,\" I whispered fearfully. \"I have no idea what sorts of germs you have or where you have been.\"\n\n\"Germs?\"\n\n\"Little microscopic things that can make people sick.\"\n\n\"Are your people unclean? Do they not cleanse themselves?\"\n\n\"Of course we do, most of us, but how do I know you do?\"\n\n\"That is absurd. Can you not smell that I am clean? Feel?\"\n\n\"Still, what if some other girl had slobbered on you and I lick where she did?\"\n\n\"Slobber?\"\n\n\"Spit. Saliva.\"\n\n\"So crass!\"\n\n\"You can't speak of any bodily fluids at all? This place is weird. Anyway, I don't want to lick anything that I don't know where it's been. Even then, licking a person is... kinda gross.\"\n\n\"Why? No. Pet, it is our way here and I am saying I wish it. You will do it.\"\n\nI took another trembling breath, then leaned down and touched his neck with my tongue. I licked along his jaw, then down his neck to his shoulder as his hand landed lightly on my back, just his fingertips. With his other hand, he put his fingers under my chin and pulled my mouth up to his. I swallowed hard again as I looked down at him nervously, then very timidly licked along his lower lip. He had full lips, perfect for kissing, but this felt so odd. I traced my tongue around the edge of his lips as he sucked in a breath and held my jaw with his fingertips. I sucked on his lower lip like he had mine and he let out a small sound of pleasure.\n\nI leaned closer, putting my hand on his chest as my body pressed to his and he jerked and gasped, pulling out from under me to sit up.\n\n\"You are too bold by far, pet.\"\n\n\"Is it wrong to touch, too?\"\n\n\"Do you press against bodies this way in 112? Even companions do no more than touch with hands.\"\n\n\"I mean, it's harmless, right? To kiss and cuddle?\"\n\n\"Cuddle?\"\n\n\"Hold each other close.\"\n\n\"If you are bonded, you may do such a thing. Are your people so... forward?\"\n\n\"I don't know. I don't know how you do things here. We can kiss and cuddle without it being a big deal. First base. Second base is groping, touching naughty bits. Third is more than groping, it's like... getting each other off without sex. Home run is sex.\"\n\n\"You speak so openly of things, as if you have no shame at all.\"\n\n\"Our ways are different.\"\n\n\"What is a base?\"\n\n\"It's from a game. Nevermind. It's just a way we refer to levels of... intimacy. You will have to tell me the rules here.\"\n\n\"Perhaps. Perhaps I am enjoying your mistakes,\" he said with a smirk, rolling to show me his very erect penis. \n\nI stared wide eyed for a moment, then turned away quickly, blushing. He was very nicely endowed! \"See, where I am from, that is super rude. Flashing a girl that way!\"\n\n\"Flashing?\"\n\n\"Showing me your... naughty bits with no warning, making me look!\"\n\n\"Naughty bits. You keep saying that. Are your sexualy organs a source of punishment where you are from? Here they are to procreate and for... enjoyment to those who are bonded.\"\n\n\"No, it's just considered naughty or... rude... crass, to show them. We keep them covered unless we are being intimate with our partner.\"\n\n\"Do you have shame for them? You should not, you are pleasant to look upon.\"\n\n\"No! I mean, I don't know. It's just a thing where I am from.\"\n\n\"You are so strange! You are amenable to companionship?\"\n\n\"Endrew!\" Mallee wailed from the bed she was sharing with the man who had taken her back the night before. I couldn't remember his name.\n\nEndrew looked over at her and I noticed then that everyone was awake and watching us. How long had they been watching and listening? I pulled the blanket up higher. \n\n\"It is my choice to make, Mallee. You will not speak out again or I will discharge you from our clan.\"\n\n\"Shanina!\" Mallee said urgently. \n\n\"Had I a care for Shanina, she would be here instead of my pet, would she not?\"\n\n\"The Maliska clan!\"\n\n\"Will understand that I did not have a care for their offering. No more. Pet, answer me.\"\n\n\"I don't understand what you are asking?\"\n\n\"Do you have a wish to become my companion? More than a pet?\"\n\n\"I don't even know you! And you don't know me!\"\n\n\"It is not irrevocable, and I wish to explore you more. You intrigue me where most women do not.\"\n\n\"So you are saying you want to be able to touch me more than the current level allows?\"\n\n\"Among other things. It also grants you immunity from being passed off to my men as a reward. It allows you to look me in the eye when you speak to me,\" he said with a smirk. \"It allows you to dine next to me and not on the floor at my feet.\"\n\n\"Passed to your men?!? I thought you just said you could only have sex with someone who was bound?!?\"\n\n\"I did not say copulation with my men. Is that the only thing your people think of? No, but they would use you. Taste you. You would perform for them.\"\n\n\"Perform? Like, dance?\"\n\n\"Dance? I do not know that word. Things such as preparing food, washing clothing. You ask these questions as though you must weigh your answer. Do you not wish to be my companion?\" he asked, anger in his eyes.\n\nI didn't, but I also didn't want to be passed off to his men. And he had said he wouldn't rape me, it was still just touching. And it didn't sound that bad, better than being a pet. \n\n\"Ok. I'll be your companion,\" I said softly, looking down at my hands.\n\n\"Now you show submission?\" he asked in amusement. \"Leess, go and prepare a fare.\"\n\nI looked up and the other girl got up out of bed in only her skin and walked to the front. I noticed then that the smaller man, Lair, was in bed with the giant, Callen. I blinked at them, confused.\n\n\"Are boys not allowed to be kept as pets in 112?\" Endrew asked, laying back down and pulling me to lay down next to him.\n\n\"Men can be partners, I just didn't realize a man could be a pet here. I thought only women were inferior.\"\n\n\"Inferior? No. They need to be kept and taken care of and in return they obey and serve. Some men choose the same role, as Lair does. Callen keeps him as a pet. He would rise to companion if he would only stop acting as though he weren't a pet. Look at me. Repeat your name to me.\"\n\n\"Olivia, but all my friends call me Ollie.\"\n\n\"It is a strange sounding name. Do you prefer the whole name or the familiar one?\"\n\n\"Either, I answer to both. You choose.\"\n\n\"Ollie then. It is small like you. You are my companion then, Ollie. I wish to taste you again, and touch you.\" \n\nHe didn't wait for my response, he leaned close and ran his tongue along my neck, up to my earlobe, then sucked gently as his fingertips slid over my ribs. He licked along my shoulders as his hand moved up, lightly touching my breast, playing lightly over my nipple and I gasped as I tensed up. I also got goosebumps. He moved and his tongue followed his fingertips over the tops of my breasts and around my nipples before sucking them up in his mouth with a low moan. \n\nMy breathing was turning ragged as I closed my eyes. \"This is very forward for two people who only met last night!\" I said too loudly.\n\n\"You are my companion,\" he breathed, moving up to lick along my lips again and pull my lower lip into his mouth. He laid next to me, his body an inch from mine but not touching mine as he leaned on one elbow to watch his fingers play over my skin. He turned to look at my face as he reached down and played his fingers over my mound.\n\nI sat up, rolling away and off the bed, hiding down behind it.\n\n\"Come back,\" he said in amusement. \"Come lay down, I would touch you.\"\n\n\"I'm good! Umm... can we all get dressed and go eat? Or something?\"\n\n\"I have no clothing for you, you will have to be fitted. Come lay down, I am commanding it.\"\n\n\"If I don't?\"\n\n\"I have told you what disobedience will cost you. Come. Do not ruin my pleasant mood.\"\n\n\"Endrew, we are meeting with Kharros soon,\" Callen said, standing. \n\nI jerked my eyes away. I think they all slept in the nude! \n\n\"He will wait. I will have my fill of my Ollie. Come now,\" he demanded.\n\nI got back into the bed, but curled up under the blankets fearfully. \n\n\"Lay on your back,\" he demanded. \n\nI turned to my back, but pressed my legs together and bent my knees slightly to try and hide myself from his hands.\n\nHe moved close again and slid his hand down as far as he could. \"You will make me use force? Make Callen hold you for me?\"\n\n\"I don't want you to do this!\" I whispered, tears in my eyes.\n\n\"I did not ask what you wished. I gave an order. Callan, bring me the strap and turn her. Hold her down,\" he demanded, taking hold of my arm so I couldn't pull away from him.\n\nCallen brought a long, supple, length of what looked like flexible plastic. It was over two feet long and it was thick at the end, tapering at the handle. Callen took me by the ankles and yanked me up in the air, holding me upside down and turning me so my back was to Endrew as he stood. He picked up the strap as I whimpered, shaking my head. \n\nI thought he would hit me on my bare bottom, instead he brought it down on the bottoms of my feet and I screamed in pain and shock.\n\n\"Will you obey?\" Endrew demanded after the single blow.\n\n\"Yes!\"\n\n\"Return her. Leave the strap, she may need it again,\" he said as Callan lifted me to the bed and let go of my ankles. I laid down where Endrew had told me to, shaking with fear and adrenaline. I had no idea it would hurt so badly to have my feet hit like that! Endrew looked down at me, scowling now as he looked me over. \"You have ruined my good humor,\" he snapped.\n\n\"Sorry,\" I whispered. \n\nHe leaned over me and bit gently on my lower lip, sucking and pulling lightly, then moving down to my breast and sucking on my nipple almost painfully hard. I let out a small whimper as he moved to the other, my body responding to his attentions quickly. He put his hand on my lower belly and lifted his head to look at me, his lips swollen as he slid his hand down between my legs. ",
        "\"Part them now,\" he demanded.\n\nI moved my legs open slightly, starting to panic. \"Can you at least ask the others to leave?!? They are all watching!\"\n\nHe didn't answer as he slid his fingers down, reaching down to cup my pussy in his hand and squeeze lightly. He touched my bald lips with his fingertips, his touch feather soft as he moved to look at what he was doing, watching his fingers play over my sex. He pushed a finger into my slit and I closed my eyes, embarrassed that I was already so wet. \n\n\"I like this,\" he purred, sliding his finger back and forth. He slid a finger into me and I sucked in a breath, not expecting it. He'd said touch!!! His thumb slid up to my clit, rolling over it as he watched his fingers from a few inches away. \"You are sensitive to the touch,\" he said breathily. \"I like that very much.\"\n\nI didn't answer, I looked away from everyone, closing my eyes and taking hold of the blankets. I was trying not to let the feelings overwhelm me, the bliss that was shooting through me. Humiliation and horror that everyone was watching should have been enough to overwhelm the pleasure, but it was actually adding to it. I let out a panting whimper as my back arched, knowing I was about to come.\n\n\"Peak for me, my Little Ollie,\" he whispered, then sucked my nipple up between his lips.\n\nI let out a cry of ecstasy as it hit me, yanking my body up from my hips as I thrashed with every wave. \n\n\"That is perfect!\" he cooed, his eyes bright as he watched in awe. \n\nI came down, trying to catch my breath and unlock my limbs as he leaned up and ran his tongue over my lips. \n\n\"Touching is good, yes?' he asked in amusement.\n\n\"I didn't suck.\"\n\n\"Suck?\"\n\n\"It wasn't awful.\"\n\nHe chuckled. \"Come, taste me, touch me,\" he said, laying on his back and putting an arm behind his head.\n\n\"You want me to jerk you off? Is that what you are telling me to do?\" I asked, a little incredulous.\n\n\"No! You will not try to do that, or harm me in any way! I wish to peak as well, you use your hand. Have you never...?\"\n\n\"That's what I meant. It wasn't literal, it's a term for... making a man peak using your hand.\"\n\n\"That is what I wish, yes.\"\n\nI glanced around the room, horrified. I had actually never done that before. Aaron had never been big on that, he always wanted me to go down on him. That, I was good at. I rolled to my side, shaking as I put my hand on his ribs. \"If I don't do this, you will punish me again?\" I asked in a bare whisper. \n\n\"If you disobey any order I give you at all,\" he said darkly, scowling at me. \n\nI glanced around again. They were all watching me, all of them. Even Callen had gone back to his bed, his back against the wall as he toyed with Lair's hair. \n\nI turned back to Endrew, my eyes skittering over his erect penis as I swallowed hard and moved to hover over him. Nervously, I kissed his chest, then left a trail of kisses up to his shoulder. \n\n\"It is not tasting, but I will accept it,\" he said softly. \"It is kiss even there?\"\n\n\"Yeah,\" I answered breathlessly, starting to shake. I closed my eyes and moved further down, kissing his abs lightly as I slid my hand further down his waist. I ran my fingertips through the hair above his cock as he let out a pleased sigh. I kept going, letting my fingers wrap around the base of his cock, just shy of being able to touch around it. I slid my hand up slowly, lightly, until I got halfway up it's length, then took hold more firmly and began slowly moving my hand up and down.\n\nHe made a noise of displeasure. \"Is that how it is done in your Verse?\" he asked in confusion.\n\n\"I don't really know, I have never done it.\"\n\n\"You have never touched a man this way?\"\n\n\"No... I've never jerked a guy off.\"\n\n\"Hold your hand here,\" he said more gently, correcting the placement of my hand. \"Not so hard, then stroke like this. Yes. Like that,\" he breathed, laying back again.\n\nEmbarrassed, I sat there stroking his cock as everyone watched. This place was insane. After several minutes, my arm began aching and I sat up, switching hands. Several minutes later, I switched again, then again. He didn't seem put off that it was taking so long, he seemed to be enjoying it, but I was ready for it to be over. Tasting was allowed and I knew I was good at that, and anything was better than the burning in my arms as everyone watched me failing miserably. \n\nI leaned over him and wrapped my mouth around the head of his cock and he let out a strangled yelp as he half sat up and his hands darted to my hair to take hold of my head. I slid my lips all the way down as far as I could go until his cock was hitting the back of my throat as he panted in confusion and alarm. I heard more movement and voices closeby and when I opened my eyes, everyone was close, right next to the bed watching me in shock.\n\nI closed my eyes, ignoring them, pretending I didn't have an audience as I took hold of the base of his thick shaft and pulled my lips back up, pressing my tongue hard against the ridge as I moved around for a better angle. \n\n\"Ungaia!\" Endrew cried in what sounded like bliss. \n\nI kept going, sucking for all I was worth, ignoring the murmurs around me. He let out a long, low moan as he came, shooting into my mouth and I swallowed, pulling and sucking until he was done.\n\nI sat up, wiping my mouth on the back of my hand as he looked at me, his eyes wild. \n\n\"You... you fear putting your mouth to mine, yet you would put your mouth THERE?!? That... that is not a thing done here.\"\n\n\"You didn't like it?\"\n\n\"I liked it very much! I have never peaked so quickly!\"\n\nThat was fast?!? Ugh. \n\n\"It is a thing where I am from and it's not seen as taboo. You said tasting, using my mouth was ok.\"\n\n\"I am not objecting! I am just very surprised! That was... the most pleasant thing I have ever felt!\"\n\n\"Can you teach me to do that?\" Lair asked, his eyes bright.\n\nCallen made a shocked noise, then looked at me hopefully.\n\n\"Me too?\" Mallee asked quickly, blushing.\n\nI looked around, my face heating. \"I... ummm... sure. I guess I can do that? If... if Endrew says I can, I guess?\"\n\nEndrew laughed. \"You may, but you will show them with me as your model! Tell me, is it not uncomfortable to know that is the place where...\" he paused, looking for a delicate way of saying it, but I knew what he meant, given his aversion to speaking out loud about bodily fluids.\n\n\"No, I mean, as long as you are clean.\"\n\n\"And to take all of the seed into you as you did. That is your way as well?\"\n\n\"It depends. Some people don't like it, some spit it out or stop as it is happening and use their hand. I don't mind it and it's what... my boyfriend likes.\"\n\n\"No. You do not have a boyfriend or companion there anymore. You belong to me now. We will...\"\n\n\"I have prepared our fare,\" Leess said from the doorway as she came in to start pulling her clothes on. \n\nEveryone went to get dressed except for Endrew. He sat up and looked down at me, his face full of excitement. \"That was exceptional, Little Ollie. I would like that again soon. Tell me, do men do the same for women? Use their mouth on you that way?\"\n\nI blushed furiously. \"Umm, yeah. That's a thing.\"\n\n\"Your verse is so... odd,\" he said, his eyebrows knitting down in wonder. \"I would hear more of this after we eat,\" he said, getting up to get dressed.\n\n\"May I please have my clothes back?\" I asked quickly.\n\n\"I do not like the look of them.\"\n\n\"You all have clothes...\"\n\n\"I will see you fitted today.\"\n\n\"Can I wrap in a sheet?\"\n\n\"Your form is pleasant to look at, why does it shame you so to be seen by your clan?\"\n\n\"It just does.\"\n\n\"Leess!\" he yelled loudly to the girl who had gone back to the front. \"Bring my Ollie's clothes back here to her! They are torn, but you can cover as you like until after the other clan leaves after our fare, yes?\"\n\n\"Thank you,\" I said, looking up at him. \"Really.\"\n\nHe grinned, his eyes shining as he looked me over. \"In return you will let me learn to taste you the same way.\" My face heated all over again as I looked down and he chuckled. \"I like the way you show your shame on your face so openly. It is nice to be around one who cannot be deceptive at all.\"\n\nLeess came trotting in with my torn costume and handed it to me with her head down. I pulled it on with a huge relief and sighed as I was properly covered, even if it did hang on my shoulders from being open down the back.\n\n\"That is a very poorly constructed garment,\" Endrew observed as he fingered a seam.\n\n\"It's a costume.\"\n\n\"Costume?\"\n\n\"For Halloween.\"\n\n\"Halloween?\"\n\n\"A holiday.\"\n\n\"Holiday? No, tell me as we eat, come.\" He took my hand and pulled me up, leading me to the table. The first thing I noticed was that Mallee, Leess and Lair were sitting together on the floor near the table. A crate had been pulled up to the table next to one of the chairs and Endrew motioned me to it as he sat down. I looked at the others on the floor, horrified, but they didn't seem to mind it at all as they ate. \n\nEndrew put food on my plate and I stared at it. \"What is this?\"\n\n\"Corn mash with honey, cooked into cakes,\" Endrew answered.\n\nI tried one and it wasn't bad, even if it did taste very odd. \n\n\"Holday,\" Endrew reminded me.\n\n\"A holiday is a day to celebrate something. On Halloween we sort of celebrate our dead and it's kind of pagan I guess? Anyway, we dress up in costumes so the bad spirits don't recognize us or something. The tradition has been skewed over the years and really it's just a day to wear costumes and have parties.\"\n\n\"Spirits? Of the dead? This happens in your verse?!?\" Lair asked, almost fearful.\n\n\"Oh... umm... some people believe there are spirits and there are people who hunt ghosts and phenomena like that, but not everyone believes it. I don't know what I believe, I've never really thought much about it.\"\n\n\"They can cause harm?\" he persisted.\n\n\"Umm... that's mostly a superstition.\"\n\n\"Superstition?\" Geon asked, leaning forward.\n\n\"A belief in something that isn't necessarily true. Like black cats crossing your path being bad luck, or breaking a mirror meaning seven years of bad luck. Things like that.\"\n\n\"Bad omens,\" Layton said, nodding. \"We have similar things here. Seeing an owl taking prey during daylight hours. Touching a light sphere and having it burst at your touch. A tree with no leaves before mid autumn.\"\n\n\"Yeah, things like that, but different.\"\n\n\"So you wear costumes to hide from spirits,\" Callum said. \"So you do not normally dress that way, yet you thought we should know you as a girl?\"\n\n\"No... I mean. I am dressed as a movie character and she wore normal clothes.\"\n\n\"Movie character?\"\n\n\"You don't have movies here? TV? Television?\"\n\n\"No.\"\n\n\"Plays? Theatre?\"\n\n\"No.\"\n\n\"Concerts?\"\n\n\"I do not know what any of those are,\" Endrew said, shaking his head.\n\n\"Do you have music?\"\n\n\"Of course.\"\n\n\"Concerts are where people who sing or play instruments do it in front of a huge audience. A lot of people.\"\n\n\"Musicis?\"\n\n\"Umm, that sounds close I guess,\" I said, frustrated. \n\n\"There are more questions than answers!\" Callen said angrily. \"We have no time for this. Kharros will arrive any moment with his clan.\"\n\n\"Be easy Callen,\" Endrew said. \"They come to entreaty us, they will wait if they must. Ollie, you said holidays, as if there were more than one.\"\n\n\"Yeah. Like Christmas where a fat man in a red suit comes from the north pole to give all the good kids toys. We decorate christmas trees and get each other presents.\"\n\n\"A fat man lives at the northern point?\" Lair asked, wide eyed.\n\nI smiled now, feeling like being a little facetious. \"Him and his elves, they make toys. Then there is Easter where a rabbit delivers easter baskets to all the children with toys and candy.\"\n\n\"This is not true, yes?\" Geon asked, concerned. \"A rabbit cannot do such a thing!\"\n\n\"Well, he is a large rabbit, as large as a man.\"\n\n\"You are making fun,\" Layton said, his face unamused.\n\nI smiled. \"It is a holiday and that is what the children are told, but no, it's not real. Santa either. The fat man. It is something we celebrate while the kids are young so they can have fun. Thanksgiving we sit around the table and have a huge meal with family, giving thanks for what we have. There are more, but you get the point.\"\n\n\"So many? And no one is productive?\"\n\n\"We are when it's not a holiday. If we didn't...\" I cut off at a single reverberating gong on the metal door. \n\nCallen jumped up and headed to the door as the others stood. Leess began clearing everything away from the table as Endrew put a hand on my back and led me to a chair. He sat down, then pushed me down to sit on the floor next to his leg, leaning on the edge of a chair. Geon and Layton also sat down, Mallee sitting at Geon's feet. And Lair sitting on the floor next to an empty chair, I assumed was Callen's. Leess stayed over by the dining area, cleaning up. \n\nCallen led in a group of five men led by a man who had a more narrow strip of hair than Endrew's. Endrew stood when the man stopped and gave a canted nod in the man's direction. The man returned the nod, then his eyes dropped to me in confusion.\n\n\"What is that?\" he demanded.\n\n\"This is my Little Ollie from another verse.\"\n\n\"A pet?\" he asked, eying me. \"I wish to see her.\"\n\n\"A companion,\" Endrew answered, stiffening.\n\nThe man looked disappointed, but turned back to Endrew. \"You did not have her yesterday.\"\n\n\"Is she what you wish to entreaty me for, Kharros?\"\n\nThe man scowled, glancing down at me again. He was a little older than Endrew, as were all of his men. \"No. You are aware that Norros clan is pushing into my quarter, yes?\"\n\n\"I had heard talk.\"\n\n\"It is so. One of their enforcers took a pet belonging to one of my clan.\"\n\n\"In a challenge.\"\n\n\"Yes, but he claimed companion rights.\"\n\n\"After the challenge was issued. If he felt so much, he should have done that sooner. It is a harsh lesson, but a lesson just so.\"\n\n\"They also took claim to my docks, first using them for their smuggling, then taking them.\"\n\n\"And you cannot take them back?\"\n\n\"I wish help so my men do not take casualties. With a show of great force, they will back down with no bloodshed.\"\n\n\"And if they do not? If my own are harmed?\"\n\n\"For every clansman that is harmed I will give you one man or one pet.\"\n\n\"That is a large offer. You are so sure, then?\"\n\n\"I am. He is feinting, just to see how I will react.\"\n\n\"When?\"\n\n\"Today. My clan can be ready on my signal.\"\n\n\"I will have to send word to my clan if I do this. What do you offer for my help in this?\"\n\n\"The eatery that adjoins your quarter.\"\n\n\"What else, we both know it brings only a small intake.\"\n\n\"Very well. The use of one pier at the docks and free passage through my quarter to use it. A single path of my choice.\"\n\n\"Free run of your quarter to move back and forth, but do no harm as well,\" Endrew countered.\n\n\"Free run! Impossible. You may use the first two streets that run parallel to your quarter and the cross streets to the second street. You may use only Industrial street to reach the pier and return.\"\n\n\"Free run, Kharros. We both know Jattara does not have the strength you need. Free run with the promise to do no harm. It is fair. If we do this, then we are aligned and considered to be your enforcers. It will cost us custom with Norros.\"\n\nKharros went red with anger, then gave a terse nod. \n\n\"Layton,\" Endrew snapped.\n\nLayton jumped up and went to the corner where there were several instruments that looked medical in nature. He brought back a blade that looked as sharp as a scalpel. He handed it to Endrew and Endrew took a knee in front of Kharros, then offered up the blade as he bent his head down.\n\nWhen Kharros jerked the blade out of Endrew's hand, I stood up in fear, clutching my belly and stepping closer. Was he going to hurt Endrew?\n\nKharros looked at me in surprise as Endrew turned his head slightly. \"It is not done, Little Ollie, to distract from this ritual.\"\n\n\"Is he going to hurt you?\" I asked, stepping closer.\n\nEndrew gave me a fond smile. \"Sit, Little Ollie. All is well.\"\n\nI sat down, but I stayed close so I could watch. I had no idea what I was going to do if the large man hurt Endrew, but I wanted to be ready. I realized then what I was thinking. I didn't want Endrew hurt. He was my captor and he had punished me and made me do things! Yet I feared for his life as the man moved the blade to Endrew's head. \n\nTo my surprise, he began shaving away some of the hair on top of Endrew's head, making the swatch of hair more narrow. He did it on both sides until it was even. When he finished, Endrew stood and Kharros took a knee. Layton traded the blade for what looked like a red crayon. Endrew drew a line on Kharros's head, parallel to his mohawk, about half an inch away with what seemed like a red marker. I thought I understood the symbolism. Now Endrew had more power, and Kharros had less. He could only shave his head to that line now. I relaxed. \n\nEndrew handed off the marker, then turned and looked down at me, his eyes shining all over again. \"I do not know if I wish to reward you for your concern, or punish you for trying to interfere. Instead I will offer my new ally a boon at a cost of your shame. Kharross, send your pet to me this night and my Little Ollie will show him something remarkable that you will enjoy greatly.\"\n\n\"You will not harm him?\"\n\n\"Not at all. He will learn a great deal and he will be able to teach the others in your clan as well.\"\n\nI blushed, looking away. How many people were going to be watching? And he was going to have me do it again tonight! Ugh.\n\n\"Very well. I will send him. Send a runner to me when you are ready and we will meet outside my sanctuary. You have my gratitude and my allegiance, Endrew.\"\n\nEndrew gave another canted nod of his head and the other group of people left. Endrew looked back down at me, smirking. \"Perhaps she thinks you are not good enough, Callen?\" he teased.\n\n\"I have accepted that our ways are not her ways and she may not act accordingly. When do you wish me to gather the clan?\"\n\n\"Geon, send off to see My Ollie fitted properly,\" Endrew said with a flip of his wrist. Geon left quickly and Endrew turned back to the others. \"Layton, bring me Durlan. Callen, I wish you close for now. I trust Kharross little. His own father laid a similar trap three decades past, luring Afflon clan into a vice exactly this way. I will be ready either way it plays out. Lair, you will take the girls down to Allewal's and talk to Hadnan. Tell him to allow all of you into the back and say nothing. I will come for all of you once this is done.\"\n\nLair nodded, but gave Callen a worried look. That worried me. \n\n\"How dangerous is what you are about to do?\" I asked, turning to Endrew.\n\n\"Have no distress, my Little Ollie, no harm will fall on me,\" he said, grinning and grazing his fingertips lightly over my cheek. \n\nI blushed, feeling ridiculous for showing so much emotion over someone I had met the night before who was basically holding me captive. \"If something happens, what will I do? You said I would be disposed of. My only chance of finding my way home is if I am alive.\"\n\nHe raised a single eyebrow in amusement. \"There is no leaving here for you, My Little Ollie. You are my companion now, you have agreed. You may not leave unless I release you and I will not release you. Not unless I get bored with you and I do not think that will happen anytime soon. You understand this, yes?\"\n\n\"But if I have a chance... if some way is found for me to get home? You will release me and let me go home, right? Back to my family and my own world?\"\n\n\"We are your clan now. Be at ease, it would be an impossibility to find a way home for you.\"\n\n\"It should have been impossible to get here, but it wasn't! If I got here, then I can get home!\"",
        "\"This is your home now,\" he snapped, starting to sound irritated.\n\nI decided to leave it alone for now, looking down and trying not to let him see how angry I was. I was going to have to find another way. Maybe someone in this world... Verse, who could help me. \n\nHe moved closer, taking my chin in his fingers to tilt my face up. \"Your face is so easily read, My Little Ollie. You would try and escape me if you could. Yet you agreed just moments ago to stay and be my companion. You think so little of your word?\"\n\n\"No! No, that's not it! I... I'm just afraid, you understand that, right? I don't want to die or be treated badly.\"\n\n\"So you would be dishonest to avoid discomfort. Is that the way of things in your world? Deception? Loss of honor to avoid pain?\"\n\nI felt cornered and flustered and that coupled with everything that had happened, I broke down. I began sobbing, turning away from him and hiding my face in embarrassment.\n\n\"You really cannot control your emotions in the least, can you?\" he asked in shock. \"Be easy, Little Ollie,\" he said gently. \"Do you need a dose of Pharros?\"\n\n\"No! No more of that please, not ever.\"\n\n\"You must train yourself to control your emotions better. You show weakness at the wrong moment and it may be a cost to me. If it is known you may be used against me, it would be a detriment. You must remain poised. Lair, I will need you to remain vigilant with this one, she is fragile I think. Little Ollie, wash your face and compose yourself. As soon as the others return we must leave.\"\n\nI shook my head, angry on top of upset now. \"I'm not a faucet!\"\n\n\"I do not know what that means. Calm yourself and wash your face. Lair, get her a cloth. Little Ollie, if you cannot get yourself under control, I will dose you despite your wishes.\"\n\n\"Leave me alone!\" I yelled angrily. I wanted two minutes without him harping at me! \"I need space! Time!\"\n\n\"You have until the others return,\" he said angrily, drawing up.\n\nI yanked away from him and fled to the back room where the beds were and threw myself on his to get all of my tears out. I hated this place and it's stupid rules and stupid traditions and stupid people and weird ways of doing things and dressing! I wanted to just go home!\n\nA warm hand touched my bare back and I jerked hard, turning to see who it was. Endrew looked alarmed as he looked down at me. \"Are you ill?\"\n\n\"I just need a minute!\"\n\n\"You must tell me what that is before I can provide it, Little Ollie.\"\n\n\"Time, a moment. Time to myself to get it out of my system. I just need to cry it out!\"\n\n\"You are a very peculiar creature, Oliva.\"\n\n\"Olivia.\"\n\n\"Olivia. You are hard to understand.\"\n\n\"Imagine being stuck all alone in a world full of strange people who are so different than you are! Imagine a Verse where women are in control and you get stuck there and one claims you as a pet and there is nothing you can do about it. You are forced to accept it or die or be punished! They make you do things you aren't used to and tell you that you cannot...\"\n\n\"Enough! You dwell on things you cannot change instead of moving forward. Understand that this is the way things are now. You will accept this and move on, do you understand?\"\n\n\"It isn't that easy!\"\n\n\"Do I need to bring the strap to you again?\" he asked angrily as a man came into the back with a large box strapped to his back.\n\n\"No,\" I whispered, hunching down and turning away.\n\n\"You will be fitted for clothing, stand and remove the garment!\" Endrew demanded tersely.\n\nI didn't balk, I got up quickly and slid the costume off, then hugged myself as I looked down at the floor. The man with the box came closer, then shrugged it off and opened it. He took out a device that looked almost like a cell phone and pointed it at me. \"Turn slowly,\" he said primly.\n\nI started turning a slow circle, still huddled down on myself. \n\n\"Stand erect, limbs out and keep turning!\" the man spat in irritation.\n\nI stood up and held my arms out, turning as tears rolled down my cheeks.\n\nEndrew moved to stand near the man as I turned and I closed my eyes, thinking if I couldn't see him, he couldn't see my shame. How could he NOT see the shame in this?\n\n\"Enough!\" the man snapped and I dove back into the bed, covering with the blankets.\n\nEndrew scowled at me and moved closer to me, his arms crossed.\n\n\"Color?\" the man snapped as he plugged the scanning device into the box he was folding open. It was some sort of 3-d printing machine.\n\n\"The blue of her eyes,\" Endrew said decidedly.\n\nThe man came to me, holding another smaller scanner to my eye and I looked up at him wide eyed, trying not to blink as he scanned my eye. He walked away as if I were nothing. Less than nothing. I glared at his back.\n\nEndrew stepped over, cutting off my line of sight and I looked up at him. His look was cool and hooded. Yeah, he was pissed.\n\n\"I am a human being!\" I whispered, looking down and away.\n\nThe silence was strained and awkward as I heard the machine boot up and start making a humming noise. A minute later, the man stepped around Endrew and tossed a pair of black rubberlike pants with blue accents next to me on the bed.\n\nI got up and pulled them on, surprised at how much give they had and how easy they were to put on. They fit like a glove. When he handed me the top, it fit the same way. I was a little surprised at how easily I could move in the outfit, they had looked so stiff. I moved around, bouncing around a little. There was even support for my breasts built in!\n\n\"Leave the other two sets there,\" Endrew demanded of the man, then took my wrist and pulled me out of the room. \"Leess, help her with her hair.\"\n\n\"I can do my own hair! Do you have a brush?\"\n\nEndrew looked down at me, his eyes dancing with anger. \"Leess,\" he hissed.\n\nLeess ran to me and began gathering up my hair and plaiting it in an elaborate braid. Once it was long enough to see, I could tell it was plaited like Endrews hair. I looked up at him as she worked, wishing I could understand him and this place. \n\n\"Layton, she needs a chip,\" Endrew snapped as Leess was almost finished.\n\n\"Got one ready, just tell me the name you want on it,\" Layton said, picking up a machine with a very thick needle on it.\n\n\"Olivia?\" Endrew asked me.\n\n\"Yes. O-l-i-v-i-a. Mallory. M-a-l-l-o-r-y. Is he going to jab me with that?\"\n\n\"Just hold still a minute, Little Ollie,\" Endrew said, catching my other arm and turning me. He held my arm out by my hand, wrist up. I made a small noise of fear as Layton came towards me with the device.\n\n\"Be very very still, Olivia,\" he said calmly, as if trying to sooth me. \n\n\"I can dose her,\" Pannar said as I tried to jerk back from the giant needle.\n\n\"Ollie!\" Endrew snapped. \"Be still! Look up at me, now! Look at me and nothing else,\" he demanded, moving me to press my arm on the table. \"Look up at me. Tell me another holday.\"\n\nI opened my mouth and the sharp pain in my wrist made me gasp and let out a shrill whine.\n\n\"It is done,\" Layton said, turning away.\n\nEndrew pressed his thumb to the spot, still holding my wrist. \"You are fine, Little Ollie,\" he said gently. \"Do not go so pale.\"\n\n\"I'm ok. I don't like needles and that... was a really big needle.\"\n\n\"Needle? Injector?\"\n\n\"Yeah, ok,\" I said breathily. \"Same thing. I'm ok.\"\n\n\"Yes?\"\n\n\"Yeah.\"\n\n\"Lair, you will take the girls?\"\n\n\"Yes Endrew, I will see them safe,\" Lair said, stepping up. He turned to Callen and the giant man bent over and they pressed their heads together and clasped hands. It was actually completely endearing and made me like the giant man a lot more. \n\nEndrew turned to me and I looked up at him as he held my wrist, keeping pressure on the spot. He looked over my face as if memorizing it, then gave me a small smile. \"You are a very stunning creature, My Little Ollie,\" he said softly. \"Even if you are infuriating.\"\n\nI blushed and my mouth twitched, wanting to smile back. I refused, biting my cheek so I wouldn't. I looked down, saying nothing, but he put his fingers under my chin and lifted my face to his as he leaned down and pressed his head to mine like Callan had Lair. \n\nHe lingered only a moment, then he let me go and was walking away, everyone following him. Lair put a hand on the back of my shoulder lightly and led me out the door as well, the other two girls close behind and I watched Endrew and Callen walk away in the other direction as Lair led us down the cobblestone streets. He turned down a path to another streat and I noticed as we walked in the daylight that the doors on every building were as black as the cobblestone on the streets. It seemed oddly significant. \n\nHe turned us on another path and down to a door, then lifted a hanging metal rod and whacked the door with it once. A gong rang out and moments later, the door opened. Lair looked at the man a moment, then spoke up after swallowing hard. \"I must speak to Hadnan.\"\n\n\"Lair, have you returned to me, my little pet?\" the man asked with an oily smile, reaching to touch Lair.\n\nLair jerked back quickly, his face half terrified. I knew the look of someone who was facing someone who had abused them in the past.\n\n\"Leave him alone!\" I snapped, stepping up. \"He told you we are here to see Hadnan! Take us to him!\"\n\n\"This one does not know her place, yes? And you speak so oddly, where is it you come from, pet?\" he asked me, his green stained fingers grazing my chin.\n\n\"Don't!\" Lair squeaked, jerking me back. \"Don't touch her! She is Endrew's companion! If you... contaminate her in that way he will be angry.\"\n\n\"Then you will not tell him, will you? A companion then? For Endrew is it? Very well,\" he chuckled nastily. He opened the door wide, allowing us entry as I felt a small wave of nausea creep up. \n\nThe oily man led us back into the building, through a room of men and women with no clothes, laying around looking half out of their minds on drugs. We went down a long hall with open stalls full of men and women touching and tasting and sharing some sort of tube with a green oil in it, getting high. \n\nHe opened another door and showed us into a small room filled with cushions on the floor and we went in. He closed it and Lair turned to me. \"You cannot speak to him that way, or anyone that way. Just keep your eyes down and let no one here touch you, at all, do you understand?\"\n\n\"Yeah,\" I answered, still feeling nauseous. Should I tell him the oily man had touched me briefly? I don't think that was what he meant, so I stayed quiet.\n\nThe door opened and a small man came in with the sides of his head shaved. \"Lair! We have missed you, missed the custom you brought us. Have you brought me new...\"\n\n\"Endrew sent us to be kept here in the back until he comes for us,\" Lair said quickly, getting it out in a rush.\n\n\"I see. As is his right, I suppose. Very well. This room is safe enough, you may abide here until he comes. If you wish, you may step out and taste our delights, Lair? There are some here who have truly missed you.\"\n\n\"I am Callen's pet now,\" Lair said breathlessly, not looking up.\n\n\"Pet? Is that all? There is one here at least who might think to challenge for you.\"\n\n\"Callen? He would die trying and he knows it. Callen wouldn't leave it at putting him down, he would kill him,\" Lair said, still not looking up.\n\n\"And who is this one who stares at me so boldly?\" Hadnan demanded, looking at me.\n\n\"Endrew's companion, Ollie. She is not from here and her ways are off, she means no disrespect.\"\n\n\"Is that so, Ollie?\"\n\nI stared at him a moment, then realized he expected me to answer. What was wrong with me? Why was it taking my brain so long to catch up with what I was hearing and seeing?\n\n\"Yeah,\" I answered, shrugging.\n\nHadnan chuckled, then turned and left, pulling the door shut. I sat down on one of the cushions and watched Lair pace worriedly. Was he worried about where we were or about Callen? Probably Callen. That meant Callen was in real danger... and that meant Endrew was in real danger. I felt twice as sick now. I needed to go find him... make sure he was safe. Why was my head spinning? He wasn't safe. Callen wasn't safe, so how could he protect Endrew? The thought seemed to run circles in my head. I needed to go find Endrew. At the docks. They were going to the docks, I remembered them saying that. I bet I could escape here easily, slip out.\n\nI stood up. \"I... I need a private moment. Where is... where can I have a private moment?\"\n\nLair glanced at me, then gestured to the door distractedly. \"Go up the hall that way and it is the last door.\"\n\nI left, trying to keep my footing as I went down the hall. I saw the restroom, but I also saw a barred back door with light from outside shining in. I lifted the heavy bar and pushed the door open, stumbling into a back alley.\n\nI looked around, then picked a direction, hoping I was on my way to the docks. I would keep heading north, I decided, as much as I could. Endrew had left heading north, I would go the same way. \n\nI kept getting caught having to go east before I could go north again, the streets and alleys seeming to zigzag. A few people in black looked at me curiously as I walked, but no one stopped me or bothered me. \n\nEventually, the cobblestones turned a more normal gray color and the people I saw were also wearing gray and not black. The doors were gray. The looks I got here more like sneers now, and scowls. \n\nI stopped and rested against a tall street sign post. I had been walking forever! It was past noon now, easily and I was getting hungry. I still felt dizzy and lightheaded and thoughts and sights seemed to chase each other around my head, catching up too late to what I was seeing and hearing.\n\nA hand closed around my arm and I looked at the hand, then up at the face. The man it belonged to was a large man, as large as Callen easily, with a mohawk of bright orange hair and orange accents on his gray suit. I blinked at him, then giggled. He looked like something out of a B rated sci fi movie. \n\nHe pulled me off the post and dragged me down the cobblestone street to a corner where several other men stood, waiting for him.\n\n\"She is high on Monava,\" the giant said to the man who was obviously the leader with a narrow stripe of gray hair on his head. \n\n\"Trash,\" one of the other men spat. \"Execute her.\"\n\nThe leader, an older man, but not so old that the gray hair was natural, looked me over. \"Why are you here in our district, lowborn?\" he demanded. \n\nI blinked at him, then shook my head. \"I need to find the docks.\"\n\n\"The... docks? Do you know where you are? And why do you speak that way? Where are you from?\"\n\n\"Earth.\"\n\n\"Earth? Dirt? You... speak sense, girl or I will allow Benoit to execute you as he wishes.\"\n\n\"Earth, parallel to here. A different paraverse,\" I said, trying to remember what Endrew had said.\n\n\"Ahh, a traveler. Are you aware you are lost?\"\n\n\"I need to find the docks.\"\n\nThe man laughed, then put a finger under my chin, forcing me to look up at him. \"How much Monava did you take?\"\n\n\"I don't know what that is?\"\n\n\"The green drug. How much?\"\n\n\"I didn't. A man... he touched me with green fingers... but I left. I got away from him, from all of them.\"\n\n\"I see.\"\n\n\"Where are the docks?\"\n\n\"Are you a pet, girl?\" he asked, moving closer and lifting my face up higher as he looked me over.\n\n\"No. please, I need to get to the docks? It's important.\"\n\nHe chuckled. \"I am sure it is, girl. Ghessu, scan her.\"\n\nAnother man stepped up and scanned my arm and I noticed then that the gray haired man was holding my arm out for him.\n\n\"Olivia Mallory,\" the man said, reading the scanner.\n\n\"Olivia. An odd name, to be sure.\"\n\n\"Ollie. Just Ollie. Can you show me where the docks are?\"\n\n\"She is single minded,\" the giant said with a rumbling laugh.\n\n\"Olivia, my name is Jeshwa... I think I may take you as a pet. For a time, at least. Skawain, what do you think? Would you be pleased to have a new toy once I finish with her?\"\n\n\"I would be very pleased to use this one,\" the giant said, pulling my hair back hard enough to make me look at him.\n\n\"Jeshwa!\" Endrew yelled, marching out of an alley just up the street. \"Let her go!\"\n\nHe was safe! I took in a deep breath, looking at him.\n\n\"Why should I? I have found this morsel wandering my district alone. I've a mind to claim her as a pet.\"\n\n\"She is my companion!\"\n\n\"You have no rights here, no claims on anything in my district.\"\n\n\"Release her,\" Endrew snarled, stopping a few feet away.\n\nSkawain stepped between Endrew and Jeshwa and Callen stepped up to Skawain.\n\n\"Endrew!\" I yelled, trying to pull away from Jeshwa. \"I couldn't find you! I couldn't find the docks! I tried! This man won't let me go and he wouldn't help me find you!\"\n\n\"Lair... was she given Monava?\" Endrew demanded angrily.\n\n\"No! I mean, I don't think so? Scradeil reached for her, but I pulled her back? And she said she needed a private moment and was gone! I sent for you as soon as I saw the back door had been opened!\"\n\n\"Silence!\" Endrew snapped angrily. \"Jeshwa, she was given narcotics against her will, it was not her intention to trespass.\"\n\n\"Yet she has, and I am of a mind to claim her as a pet.\"\n\n\"She is my companion!\"\n\n\"Not here. Here you have no rights, lowborn rat.\"\n\n\"I will challenge you and we both know I will kill you.\"\n\n\"You would challenge your better for this... girl? She must truly be a treat. I cannot wait to taste her nectar for myself.\"\n\n\"You truly wish to die just to try me?\" Endrew asked angrily.\n\nJeshwa laughed. \"Skawain?\"\n\n\"I have laid claim to this girl,\" Skawain sneered. \"A challenge falls to me, lowborn rat.\"\n\n\"So be it,\" Endrew said darkly, stepping up.\n\nI tried to yank away from Jeshwa to see, but I could only see Callen looking in wide eyed concern in Endrew's direction. Jeshwa pulled me back away from the street and the others around him moved with him and I could finally see Endrew as he and the giant circled each other.\n\n\"This isn't right!\" I wailed, trying to yank out of Jeshwa's grasp. \"Let me go! I want to go with him!\"\n\n\"Be still, girl,\" Jeshwa demanded, shaking me hard enough to rattle my teeth.\n\n\"You hurt her and I will kill you,\" Endrew snarled at Jeshwa.\n\nSkawain lunged for him while Endrew was distracted, but Endrew spun away with ease and rammed stiff, pointed fingers into the giant's kidney as he passed, then dodge low and rolled as the giant swung a hulking arm back at him. Endrew was back up and behind him before Skawain was done swinging and Endrew rammed his straight, pointed fingers into Skawains neck, under his jaw. Skawain staggered back and then rushed Endrew again, but Endrew leapt up and rammed a knee into Skawains jaw, riding him down to the ground as the huge man was knocked out with the uppercut from Endrews knee. Endrew didn't hesitate at all, he broke the giants neck with ease, then stood up and stalked to Jeshwa.\n\nJeshwa shoved me down to the ground and stepped back quickly. \"Take her!\"\n\n\"No. I said I would kill you and I will. Come forward, coward.\"\n\n\"I yield! Take her!\"\n\nEndrew sneered at the older man, then moved to help me up.\n\n\"Endy! I was looking for you! I was so afraid you would be hurt!\"\n\n\"Silence, Little Ollie,\" he whispered. \"We will speak of this later. Layton?\"\n\nLayton came forward and Endrew took a knee as Layton handed the sharp razor to Jeshwa. I saw then that more of Endrew's hair had already been shaven away. When Jeshwa stepped up to shave more off, I was torn.\n\n\"No! Endy, your hair is so lovely, do you have to...\"\n\n\"Callen!\" Endrew snapped. Callen came and took hold of me, pulling me away from Endrew, prying my fingers out of his hair. \n\n\"But his hair is so nice! He has lost almost all of it today!\" I wailed, watching Jeshwa shave away a thick swatch of hair. \n\nEndrew finally stood and Jeshwa knelt and Endrew drew lines a good two inches wider than his current hair on both sides. It seemed he had lost a lot today, if I was understanding the way things worked here. ",
        "Endrew stepped back, then turned to me and came to me, turning my face up to his. \"Why did you run, Little Ollie?\" he asked, hurt in his voice.\n\nJeshwa and those with him were slipping away quickly now and the crowd that had gathered was starting to dwindle.\n\n\"I didn't run!\" I said indignantly. \"I was coming to help you, you big jerk! Lair was so afraid for Callen and that meant you were in danger and you needed my help!\" I looked down at Skawain and kicked at him. \"Then HE grabbed me and wouldn't let me go find you or even tell me where you were.\" I looked down at him, then giggled. \"He looks like he's dressed up for Halloween. Oh! He's dead! He might be a spirit now and he is already ready for Halloween! Wait... no. Halloween is over. Endy, I don't feel very good, I don't like how I feel right now.\"\n\nEndrew let out an exasperated sigh, then picked me up, turning to start back to their home.\n\n\"I can take her,\" Callen began, reaching for me.\n\n\"No! I have her,\" Endrew snapped. \"I see you looking at me, Lair. Lower your eyes and do not look at me again!\"\n\n\"I didn't know! I swear!\" Lair said miserably.\n\n\"Lair told me not to let anyone touch me and I wondered if I should tell him the oily man touched my face, but he was so worried, I didn't. I should have told him! He wanted to come too and help Callen I bet, he was so worried. And the oily man sucked, he was trying to be mean to Lair and scare him. Endy? I feel gross.\"\n\n\"Endrew,\" he corrected softly. \n\n\"My Endy,\" I said softly, reaching up to stroke his hair. \"I liked it better like it was, I liked your hair.\"\n\n\"Little Ollie, you must not,\" he said, pulling his head back and trying to turn away from my hand. \"You cannot be so intimate in public!\"\n\n\"Can I kiss you?\" I asked, slipping my arms around his neck and lifting up enough to kiss his jaw and neck.\n\n\"Ollie!\" he cried in shock, completely flustered. I giggled and leaned in close, licking along the edge of his ear. \"Stop!\" he whispered in a near panic.\n\nI laughed wickedly, squirming to pull myself higher, biting his earlobe gently and moaning softly in his ear. \"Mmm, my Endy, I am going to make your toes curl when you get me home and into your bed,\" I promised in a whisper.\n\nHis breathing became ragged as his hands clutched me tight. \"Olivia, you will stop this now!\" he hissed, his cheeks turning pink.\n\nI laughed, kicking my feet, loving that he was so discomfited by a few words in public. I let myself fall against his chest, smiling happily as I traced my fingers over his jaw. \n\nI blinked as the world went dark, then realized we were inside now, inside the warehouse house. I giggled again. Warehouse house. I laughed and Endrew looked down at me in concern as he carried me back to his bed.\n\nHe laid me down and I immediately grabbed two handsful of his hair and pulled him down, kissing him on the mouth. He kissed me for a moment, then pulled back, freeing his hair from my hands. \"Little Ollie, you must not touch my crown, not unless we are fully bonded and never ever in public. Do you understand this?\"\n\n\"But I like your hair. Come here.\"\n\n\"Ollie listen to me...\"\n\n\"No, you listen to me, come here. Come on, take those clothes off and get in bed with me. Mmm, I want to feel your skin, all soft and warm against mine!\" I begged, trying to pull his clothes off.\n\nHe pulled away from my hands so I took my own clothes off before going up on my knees to tug at his again.\n\n\"I think you should sleep, Ollie,\" he said gently, catching my hands. \"I will not allow you to do anything while under the influence of narcotics.\"\n\n\"Endy! I need you! I just want to feel your skin! So smooth and hot! I need you next to me, please?\"\n\n\"Ollie! That is enough, you will lay down now and rest until it is all out of your system. If I have to admonish you again, I will punish you!\"\n\n\"Mm, you going to spank me, daddy? Turn me over your knee? Come down here and let me ride you for a while,\" I demanded, taking hold of his cock through his pants.\n\nHe went very still, his eyes wide as he looked down at me. I could feel him getting hard in my grip and I smiled up at him, using his waistband to pull him closer. I pulled his pants down enough for his cock to spring free, then took it eagerly in my mouth as I grabbed the base, moaning as I finally got his hot, smooth skin close enough to taste. \n\nHe made a noise of surrender and I yanked his pants down further before pulling him into the bed with me and pushing him to his back. I sucked his cock for a few long moments, then moved up, shoving his shirt up to take off of him as I straddled him, pulling it off over his head. He yanked it off and tossed it, his eyes wild with need as I leaned down and kissed his chest, moving lower until I was straddling his cock, grinding against it with my pussy. \n\n\"Mmmm, fuck! Your cock is so hot! You are so hot! Your skin feels so good!\" I cried, pressing against him and soaking up his heat. I sat up, my pussy on his cock, my slit along the length of him and I slid back and forth, my pussy slick and wet as I glided back and forth.\n\n\"Ungaia!\" he cried, his eyes closing as he clenched his hands in fists. I raised up and reached down, guiding his cock into me, then easing down on it as he cried out in shock, grabbing my hips.\n\nI put my hands on his and began riding him, rolling my hips and bouncing on his cock. I moved faster and faster, riding him wildly and tears were leaking out of the corners of his eyes as his back arched up and his head went back. His hands spasmed on my hips as he came, his cock throbbing and shooting inside of me.\n\n\"Oh! Fuck yes Endy!\" I screamed, rolling on him slowly as he squirted into me over and over again. \n\nI finally went still, panting and looked down at him, feeling a euphoric bliss wash over me as I looked down at his wondrous expression. I smiled and fell forward, kissing his lips before rolling off of him and snuggling against him, passing out in exhaustion.\n\nIt was dark when I woke up and I ached. I also felt sick to my stomach and starved at the same time. My head was pounding and I reached up to hold my head as I started to sit up. Something heavy was on me and as I shifted, the heaviness shifted as well. It was an arm, and a shoulder and a leg, all draped over me. It was so ridiculously hot and I huffed as I tried to get out from under all of it. \n\nEndrew rolled off of me, sitting up and putting a hand on my arm. \"Little Ollie?\" he asked sleepily.\n\n\"I need to... I need a private moment,\" I grumbled, trying to stand. Ugh. I hurt! I hurt all over! I stumped out to the front, to the little bathroom area and when I came out, there was a dim light on and Endrew was standing there waiting for me. Naked. Of course. Because naked was a thing here. I realized I was also naked and I hugged myself and looked away from Endrew, who was watching me carefully. \"I'm starving,\" I said, hiding my eyes from the light. \"And I feel like shit.\"\n\n\"Shit?\"\n\n\"Awful. I feel horrible. Achy and sore and gross.\"\n\n\"The narcotic, it is the price to be paid after use.\"\n\nRight. I was drugged. I vaguely remembered that now, the whorehouse drug den place and the man with the green fingers.\n\n\"So... is there something I can eat?\"\n\n\"A moment,\" he said softly. He went to one of the cupboards and pulled out a box. He handed me something that looked like a meat stick. It tasted like beef jerky. I ate it, drinking the water he gave me thirstily, then a second cup as well.\n\nI looked up at him. \"What happened to all of your hair?\" I asked, frowning. It had looked so much better before, now there was just a thin stripe of it.\n\nHis cheeks went red and he looked away.\n\nThe fight! \n\n\"Oh, right. I guess you won the fight? At the docks or wherever?\"\n\n\"Yes. We did. There was no fight, a small show of force and they backed down.\"\n\n\"And for that you get all the cool points?\" I asked, motioning to his head as I chewed.\n\n\"Ollie... we must speak,\" he said softly, not looking at me. \"You were... given a drug that removed all inhibitions from you. I should not have allowed you to... I should have realized you might be more affected than most. I remember what the Pharrot did to you. You... we... We are bonded, my Little Ollie.\"\n\n\"Bonded? Like, your companion, or more than that?\"\n\n\"Bonded. Life mates. Irrevocable. Forever. I should not have let it happen but I did. I knew you were not in a state to know what you were doing...\"\n\n\"Wait! Wait a minute. I can't agree to being bonded if I don't remember it. If I was high or whatever, it doesn't count. Just pretend I never said yes. Did I even say yes or did you tell me I had to say yes? Did you threaten me if I didn't?\"\n\n\"No! No, and it was not words! We... copulated. Only bonded partners may copulate.\"\n\n\"Sex? We had sex?!? Did you RAPE me?\" I demanded, horrified and furious.\n\n\"I do not know this word!\" he said, catching my hand as I swatted at him when he came close.\n\n\"Rape! Force me to have sex with you! You did, didn't you? I knew I felt sore there! It wasn't just a general soreness, you raped me!\"\n\n\"Silence! I did not force you to do anything! I told you to stop, I asked you again and again to stop! You did not! I gave in and let you taste me as you wished... then you decided! You took me into you without asking! Brought me to peek with your... with you. I allowed it to happen and I should not have, but it was you who did it! It is done now. The bond is done. I... I am not displeased.\"\n\nI stared at him numbly, trying to comprehend what he was saying. Tidbits flashed back to me. Giggling and kissing his ear. Playing with his hair. His face turned up in ecstasy as he came while I rode his cock. \n\nI let out a shaky breath, then steadied myself on the counter. \"What... what does this mean?\"\n\n\"A bond is for life, Little Ollie. It means you are mine. Forever.\"\n\nI looked at him, my eyes jerking to his. He had sounded so fiercely proud when he had said that. I knew panic should be taking over, but I felt a sort of calmness welling up instead. I stood up from the table, turning to him and going to him.\n\n\"So what does that mean as far as new rules? I can touch your hair?\"\n\n\"It means I may have you wholly and completely now. As I please.\"\n\n\"As you please?\"\n\n\"Yes. And it would please me to take you now.\"\n\nI took a step back, confused at the way he was speaking. He caught my arm quickly and spun me, lifting me and bending me over the counter. \"Endrew!\" I cried as he pressed his hips to me.\n\n\"You tried hard to bring shame to me today, Little Ollie,\" he said, his voice thick with hurt and light anger.\n\n\"No! Endrew, I wasn't! I wasn't myself and I don't even know what might shame you! I only know how things are in my world! Don't do this!\"\n\n\"You are mine to take. As you took me,\" he said, his voice low with need. I could feel his hard cock pressing against me. \n\nAs panicked as I felt, the feel of his hard cock pressed against my slit was a little thrilling. \"Endrew, you can't hold it against me, what I did while under the influence! That's not fair! I was drugged!\"\n\n\"I wish to hold it against you,\" he purred, grinding his hard cock against my ass. \"I wish to feel you as I felt you earlier. So incredibly hot and gripping all of me so firmly, wrapping around me the way you did. I did not know it would be that way.\"\n\n\"You were a virgin?\" I asked in complete shock.\n\n\"Virgin?\"\n\n\"You had never had sex before then?\"\n\n\"Obviously not, Bonding is for life.\"\n\n\"You aren't allowed to have sex before you bond for life?\" I demanded incredulously.\n\n\"No more talk,\" he said softly, pressing his hips into mine again. He reached down as he pulled back slightly to guide his cock along my slit.\n\n\"Stop!\" I screamed, trying to squirm away, kicking at him.\n\nHis fingers dug into my hips, not painful but very strong. \"You will not resist me on this! We are bonded and you are mine to take! Be still!\"\n\n\"Endrew, please, this is all a mess for me, can't we just slow...\"\n\nHe thrust his hips forward, pushing the tip of his cock into me roughly. I wasn't wet, so he didn't gain as much ground as he had probably imagined he would. It did not stop him from ramming and thrusting again and again until he was completely inside of me.\n\nI had my hands in fists, clenching my teeth as I winced with every thrust, listening to his guttural grunts as he forced entry into me. Tears slid down my cheeks as he began thrusting in a more regular pace. He wasn't trying to hurt me, but my hips were digging into the edge of the counter and it hurt just a little more than his large cock invading me with no help to ease it's passage. He was panting as his fingers squeezed and rubbed my hips as he pumped and I knew he was getting frustrated.\n\n\"Why is it not the same?\" he demanded breathlessly.\n\n\"Because it isn't! It just hurts and I'm not excited! Please stop, you're hurting me!\"\n\nHe growled. \"Get excited!\" he demanded.\n\n\"I can't! The counter is hurting my hips!\"\n\nHe made an angry noise and pulled out of me, then yanked me off the counter and carried me back to the bed. He tossed me down and climbed in next to me as I flipped over and sat up, scooting back from him as he came for me. I saw that almost everyone was sitting up and watching us.\n\nHe grabbed my ankle and yanked me down under him, his eyes intense as he looked down at me. \n\n\"Make them go to bed and stop watching!\" I whispered, horrified.\n\n\"You had no care earlier as they all watched,\" he said as he shoved my legs apart roughly. \"Tell me how to do to you as you did to me with your mouth!\" he demanded. \"I will make you peak for me and you will be ready for me then, yes?\"\n\n\"Endrew! Please!\" I whispered, horrified.\n\nHe gave me a frustrated growl. \"Do as I say!\" he demanded. \"Tell me!\"\n\nI blushed, but I was also exasperated. He wasn't going to stop or let this go! \"It's just... I... You know you to use your hand, I know you do. Just do it the same but with your mouth instead!\" I whispered, my face full of heat. \"Or just use your hand until I am ready!\"\n\n\"No, I wish to use my mouth,\" he said angrily. \n\nWhy was he so angry?!?\n\nBecause I had taken choice from him. He had allowed in the heat of the moment to let himself be bonded. It had meant nothing to me, a moment of pleasure, but for him, it was his life and he had surrendered it to me. He wasn't even angry that we were bonded, just that being bonded wasn't as monumental for me as it was for him. That I was acting like I wasn't as pleased about it as he was.\n\nI reached up and pulled his face down, kissing his lips, then sucking gently on his lower lip. I used my tongue to show him, idly wondering how a people so used to using their tongues on each other had never conceived of felatio? And even questioned how to perform it. The thought was absurd, but I let it go as I demonstrated with my own mouth. \n\nHe seemed to really be enjoying the demonstration as he pulled me tight against him with a small groan, pressing his body into me. I realized that was a new thing for him too, being close on that level. This was all new for him. \n\nThat excited me quite a bit, knowing that things between us were going to be new for him. It also made me feel like I had to make sure it was extra special. I felt a little bad that I couldn't really remember earlier. I should have been embarrassed, but right now I couldn't pull it up. I was just getting excited as I kissed him, writhing against him and feeling his hot body against mine. I wanted him!\n\nHe pulled back suddenly, his breathing ragged and moved down my body, dragging his lips and his tongue over my skin as he went. It sent chills everywhere and I got goosebumps as his lips traveled a slow, meandering path down. I let out a sigh of bliss as I closed my eyes, then lifted my head enough to look down at him as he moved down my hip to my thigh as he lifted my leg by my knee. \n\nI blinked at the people around the bed watching curiously and blushed, turning away quickly. It bothered me how open they all were with watching, even if in some ways they were weirdly prude about how far they could take things with each other. They were all standing close enough to reach out and touch now and Layton was holding a small globe of light. \n\nI was yanked back to Endrew's attentions quickly when his mouth found my swollen pussy lips and he licked and sucked gently. He ran his tongue through my slit and then up to my clit, immediately latching on like I had shown him. I forgot the audience completely as I closed my eyes and let out a sigh of bliss.\n\n\"Yes Endrew! Just like that!\"\n\nHe groaned as his grip tightened around my hips and I was vaguely aware of the others moving and getting better angles. I didn't care! I was rapidly getting lost in Endrew's efforts. His hot mouth around my clit, his tongue working me quickly. I let out a small moan as my hands moved down to hold onto his hair. He stiffened for a moment, then relaxed and went back to what he was doing. I had a brief moment to realize that he was allowing something monumental, but it slipped away.\n\n\"So close!\" I breathed, my body tensing as bliss rose up. \"Yes! Please don't stop! Oh GOD!\" I screamed as I came, wrapping my thighs around his head as I rode his face. I let out a moaning wail with every spasm, then a low, soft moan as I came down and my legs relaxed around his head. He lowered me back down to the bed where my back had arched me up off of it, then licked along my inner thigh and up, before lifting his head and looking at me with a wild sort of hunger. \"My turn,\" I managed, getting up and turning him to his back. \n\nI half attacked his rock hard cock, diving for it and taking hold with both hands before wrapping my lips around it and taking it into my throat as far as I could.\n\n\"Ungaia!\" he managed in a groan of pleasure as his hands darted to my back to hold onto me.\n\nAnother light came on and I saw more than one face inches from mine, watching carefully as I took Endrew's cock into my mouth again and again, stroking with my mouth and hands. I demonstrated for them, sucking and pulling and licking, going all in with everything I had.\n\nIn a few moments, Endrew grabbed my shoulders and yanked me back, throwing me to the bed and rolling over the top of me as he grabbed my knee and hiked my leg high. He guided his cock into me, fumbling a little, but I was so wet it didn't matter. He shoved into me hard enough to make my breath catch, but I was so slick it only felt amazing. He groaned, shuddering slightly as he buried his cock inside me and held it there.\n\n\"Mmm,\" I whispered, pulling him in close to me. Not just because he felt good, but so that he would shield me from everyone watching so closely. \n\nHe was incredibly gentle now, as opposed to just moments ago in the kitchen. His fingers trailed over my body as he made love to me, stroking my hair and face lovingly as he looked down at me in wonder. I felt a lump come up in my throat and my eyes filled up with tears as I looked up at him, overwhelmed with feelings. My heart was aching as he thumbed a tear away from my eye and caressed my face. I turned and pressed my face to his arm, hiding from him too as feelings overwhelmed me. \n\nHe came with a small shudder, hugging me against him as he stroked my hair.\n\nHe rolled off of me, easing to his side, shielding me from the others and pulling me close. Something that was new and special to him as well. I pressed against him, nuzzling into his neck and he held me like he would never release me.\n\nWas I really afraid of this man a while ago? I didn't want him to let me go now. \n\nThe lights went out and the others drifted back to their beds and I quickly heard them trying out their new lesson. Wet sucking noises, moans, heavy breathing. It should have been embarrassing, but it just made me feel a little happy. They had learned something amazingly pleasing from me, something beautiful and erotic. I kind of loved that. ",
        "I drifted off snuggled into Endrew, feeling content and a little sore. A very good, pleasant sore. \n\nWe were all awoken to a gong from the door. \n\nCallen jumped up, completely nude and I blushed, hiding my face as he hurried out through the front to the door.\n\nThe others got up and began quickly dressing, including Endrew. I hurried as well, looking up at him curiously.\n\nCallen came back, looking pleased. \"It is Dannall! We have been offered the sixth district in the pewter sector! Jeshwa was forced to step down and make way for you should you wish it.\"\n\nEndrew stood tall, a small smirk on his lips. \"Call the clan,\" he said, looking over at Pannar. Pannar took off at a run and everyone else went into a flurry of activity. Endrew looked down at me, his eyes shining. \"You have brought me good fortune, Little Ollie,\" he said happily. \"Inadvertent as it may have been. I knew when I saw you you were going to be a positive change in my life.\"\n\n\"What's happening? You get to take Jeshwa's place and wear gray now?\"\n\n\"Pewter. Perhaps. I will ask the clan. Hurry now. Mallee, prepare her hair, something ornate. Lair, prepare my plating, instruct Little Ollie on how it is done. Ollie, stand and watch while Mallee prepares you.\"\n\nI tried to watch what Lair did, the ornate plaiting of the mohawk of hair, but Mallee kept jerking and tugging on my hair as she twisted and rolled. Lair finished before Mallee did and Endrew stood quickly as Lair moved to help Mallee with my hair. \n\n\"She has so much!\" Mallee complained quietly to the small man.\n\n\"She does,\" he breathed, running his fingers through the half of my hair that was still down. \"It is so thick and soft! I wish my own crown were so!\"\n\n\"Stop petting her and help!\" Mallee whispered.\n\nLair chuckled and began tugging on my hair as well. He leaned down close to me. \"Callen very much enjoyed what you taught me,\" he said companionably. \"He wishes to do the same for me!\"\n\n\"It's fun when you both do it at the same time,\" I said, half joking.\n\n\"Oh! Oh, yes, I can see how that would be... very nice. I think we should speak more, you and I!\" he said with an almost giggle, nudging me. \n\n\"Hmph. Geon also had me perform that... act. I did not find it very appealing at all,\" Mallee whispered in a hiss.\n\n\"I bet he enjoyed it though, yes?\" Lair asked, his eyes shining. \"Even Layton allowed Leess to his bed last night to allow her to try it!\"\n\n\"Enough of this talk! You are such a gossip!\" Mallee scowled.\n\n\"Do not mind her, she is always in a foul mood,\" Lair said with a smile. \"It has been so since Kersol gave her to Endrew as a boon. Not even a pet, just a token. She tried to get Endrew to make her more, but he had no interest. Still, she tried to attach herself to him, become something he would protect.\"\n\n\"Your mouth never ceases it's movement!\" Mallee snapped. \"You finish her!\"\n\nMallee stormed away, going out front with the others and Lair laughed. \"Do not mind her. It is not you she is angry at. Endrew offered her a choice of the others, any of them who wanted her. She picked Layton, but he said no. Geon was the only one who wanted her, but she feared his heavy hand. She offered herself to Pannar who is not so beautiful as Geon, but more even handed. He did not want her either, he wishes a pet who belongs to another just now. Endrew let her go unclaimed for some small time and her hope was she could bring him around. The night you came, he gave her to Geon.\"\n\n\"I remember.\"\n\n\"There now. Try not to move too much, I cannot roll as tightly as Mallee or Leess. Come on!\" he said happily, leading me out to the front. \n\nHe handed me off to Endrew and went to stand next to Callen, touching his hand lightly before standing to his side and back one step. The large room was filling with dozens of people in black. Most of them men with just a few women.\n\nI moved closer to Endrew, reaching up and taking his hand and he looked down at me curiously as he closed his hand around mine in a small squeeze before letting go. I kept hold and he patted my hand with his free hand as he held my hand to his chest. It seemed symbolic somehow and I heard several whispers as everyone watched us.\n\nI kept my head down, not looking at anyone as he made the announcement of the offer and asked the large group, a good four dozen men and a dozen women, what they wished to do.\n\nThere was quiet talk as everyone spoke among each other and I was surprised there was no shouting or heated debates. After a few minutes, Endrew raised a fist and a good two thirds of them raised their fists as well. None of the women, they didn't even look up, like their choice didn't matter or count.\n\nEndrew gave a single nod. \"It is decided. Make ready to claim our new position immediately. Gather what you wish and meet me back here before the sun peaks this building.\"\n\nHe turned and looked down at me, his eyes shining with excitement as he bent down enough to slide my fingertips over his lips. \n\n\"I wish you a final time here, before we leave,\" he said softly. He pulled me back to the bed and began pulling my clothes off. \"Callen!\" he called. \"Get my things ready as well, I wish a moment more with my Little Ollie.\"\n\nI looked up at him and started tugging on his clothes, excited to get back into bed with him.\n\nThere was a loud gong and Endrew made a sound of annoyance as Callen hurried away.\n\nHe returned with a tall man dressed all in black and I jerked a blanket up to cover my exposed chest as the man walked right up to me with a large handheld scanner.\n\n\"You have caused me a lot of trouble, little stowaway!\" he hissed angrily.\n\nEndrew pulled me close, half behind him. \"Who are you?\" Endrew demanded.\n\n\"I am no one who concerns you, move. I have to take her back.\"\n\n\"I don't want to go back!\" I wailed, taking hold of Endrew's wrist. It hit me then that I did not. I didn't want to go back at all, I wanted to stay right here with Endrew. I had feelings for him!\n\n\"The choice isn't yours to make, you are from 112, you cannot stay here! I will return you alive or dead, the choice is yours. You, move. You know the Paraverse laws! She cannot be here!\"\n\n\"Then can he come with me?\" I asked desperately.\n\nEndrew looked down at me in shock as he held me against him, then looked at the man in black. \n\n\"There is no law saying they cannot relocate there, but if they do they may never return. Exposure to 112 means no access to the paraverse transit system.\"\n\nI looked up at Endrew, tears falling freely. I had never been more afraid of anything in my life than I was right now of losing him.\n\n\"I will go,\" Endrew breathed, touching my face gently, wiping a tear away.\n\n\"Then I will go as well,\" Callen said, stepping up.\n\n\"Me too!\" Lair cried, rushing forward to take hold of Callen's arm.\n\n\"We will all go,\" Layton said with a decisive nod.\n\nEndrew shook his head. \"We cannot all go. Pannar. I care for you as a brother, I trust you to stay and lead in my stead. Choose a second wisely. Mallee, you may stay or go as you please, I know you have no care for my Little Ollie.\"\n\n\"I will go! I want to go to a place where women are... more,\" she said quickly, her eyes bright with hope.\n\n\"Does anyone else wish to stay here with Pannar?\" Endrew asked.\n\nNo one spoke up.\n\n\"Then we do this now,\" the man in black hissed. He hit something on a metal gauntlet on his wrist and a portal opened up. I saw the street where I had stepped through as I peeked through. \n\nA hand on my back shoved me through the portal and I stumbled and fell, smacking my head on the pavement. A flash of light and then blackness as I passed out.\n\nI opened my eyes to a white ceiling, feeling heavy and groggy and sore.\n\n\"SHE'S AWAKE!\"\n\nThe male voice was familiar, but the loud noise made me wince. I couldn't move. Aaron moved into my field of vision, looking down at me. He looked terrified. \n\n\"Ollie, jeez, you scared the shit out of me! They didn't know if you would even come out of the coma!\"\n\n\"Move aside young man,\" an older doctor said, leaning over me to shine a light in my eyes. I flinched away, my head throbbing.\n\nI tried to speak, but there was a tube in my mouth and throat. I couldn't move at all.\n\n\"Very good, she seems aware and she is reacting positively to stimuli. Miss Mallory? Can you look at me please? Very good. Follow my finger with only your eyes. Good. Do you remember what happened?\"\n\nI could only blink at him. Of course I remembered, how the hell did I get here and where was Endrew?!?\n\nI whined around the tube.\n\n\"Let's get you squared away and I will call the police to tell them you are awake and can answer questions. Young man, I will need you to step back while we get her taken care of, ok?\"\n\nI was numb after the nurses all finally left the room, leaving me half sitting in the hospital bed. I still had an IV in my arm, the one that wasn't in a cast. Two policemen were standing in front of me.\n\nThey looked bored and put upon as they stood there. \"Did you see the vehicle that struck you?\" the younger one asked in monotone.\n\n\"I... wasn't hit by a car? I was in a parallel universe?\"\n\n\"Can you tell us why you were standing in the middle of the road?\"\n\n\"I was coming back through the portal?\"\n\nThe officer asking questions blinked at me like he thought I was fucking with him.\n\n\"I was in a parallel universe! I went there Halloween night and when I came back through the portal, I hit my head!\"\n\n\"Babe!\" Aaron said soothingly, taking hold of my hand. \"Babe, you were hit by a car Halloween night. Hit and run. You were found by another driver right after it happened. You've been in a coma the past couple days.\"\n\nI stared at Aaron in confusion. \"Why are you even here? You ASSHOLE! You LEFT me there, no phone, no ID or card or anything! You need to get out! And get out of my house! Get your shit and get out, I deserve better than you and your cheating, asshole ways!\"\n\n\"Babe! Come on, that's just the meds talking!\"\n\n\"No! Get out of here! I never want to see you again you piece of complete SHIT! Go find someone else to mooch off of and cheat on! I mean it, get him out of here! He isn't allowed in here!\"\n\nThe older cop motioned Aaron out as I held my head in my hands. What the hell was happening?!? What about Endrew?!? I could still feel his touch, the heat of his body against mine. My heart ached for him in a physical way! \n\nI broke down crying. \n\nIt had all been real! It couldn't have been a dream. Please!\n\n\"Ma'am,\" the younger cop said, still sounding bored and put upon. \"Do you remember anything from the night the car struck you?\"\n\n\"No! No, I left the party because he had abandoned me there. I was walking. I saw a light... the rest must have been a dream. Please, leave me alone now?\"\n\n\"If you remember anything, give us a call,\" he sighed, leaving.\n\nI broke down completely when I was alone, curling up and hugging my broken arm, mourning my loss.\n\nThe nurse came in and gave me something to help me calm down in my IV. She came in two hours later, giving me a kind smile. \"I'm about to go off shift, but night shift is coming on. It's a good crew. If you need anything at all, just hit that button, ok?\"\n\nI nodded, but didn't answer as I stayed curled up in the mostly dark room.\n\nAn hour later, a tall man in scrubs came in, his mass of long, wild hair caught back in a wild messy man-bun. I could see tattoos peeking out from under his sleeves and up his neck as I watched him in the darkness. He turned and I blinked.\n\n\"ENDREW?!?\" I wailed. It was him! He had a full head of hair and a lot of ink, but it was him!\n\n\"Hey there, easy now,\" he said soothingly. \"I'm Andrew, I'm your night nurse. Don't let my looks fool you, I'm a big softie. You ok? Is your dad here with you?\"\n\n\"I'm 23! How are you here?\"\n\n\"Well, a lot of night school and student loans out the wazoo,\" he laughed. \"23 huh? Yeah, I guess I can see it. Petite. Sorry if I startled you when I came in, I can see how I would be a scary thing to wake up to.\"\n\n\"I wasn't asleep... I know you. I dreamed of you? Or I didn't. I don't know anymore. Are you from this paraverse?\"\n\n\"Wow. They have you on the good stuff!\" he laughed. \"Never had a girl say she dreamed of me before. Can I take your blood pressure since I have you awake? Your pulse is running at a pretty fast clip...\" he said, his fingers on my pulse.\n\n\"Because it's you...\" I whispered, unable to articulate more. \"Endrew. Is Callen here?\"\n\n\"Callen? Umm, Allan is my roommate's name?\"\n\n\"Lair is his boyfriend?\"\n\n\"Larry... yeah, how did you know that?\"\n\n\"Geon and Mallee?\"\n\n\"Uhh... I guess you mean John and Mallory? My brother and his wife?\"\n\n\"Leess?\"\n\n\"Lisa? My sister? Her husband Payton?\"\n\n\"Not Layton?\"\n\n\"No. Guess you could hear me talking on the phone while you were in your coma?\"\n\n\"No! No, it was all so real! What about Pannar? You left him there, in the other paraverse?\"\n\n\"No idea. Here, why don't I get you something to calm you down?\"\n\n\"No, please. No. I just...\" I looked up at him. Endrew. My Endrew. Or was it this paraverses version of Endrew? Or maybe it was all just a dream? I wasn't sure, but I did know one thing. Dream, or not, something put me in this moment.\n\n\"Hi,\" I said softly, extending my good hand. \"I'm Olivia, Ollie to my friends.\"\n\n\"Lovely to meet you, Little Ollie, I am Andrew. You have quite a stunning smile. How is your arm? On a scale of one to ten...\"\n\n\"It's fine. It's a little sore, but not bad at all. Are you from here?\"\n\n\"Born and raised! Lived in the same house on Blackstone Boulevard my whole life!\"\n\n\"But you were thinking about moving?\" I asked.\n\nHe hesitated, then gave me a smile. \"I guess you did hear everything. Yeah, I found a nice house on Pewter Lake?\"\n\n\"Can I tell you about my dream?\" I asked him, swallowing hard, half afraid of rejection or judgement.\n\nHe grinned and pulled up a chair. \"Slow night on this floor, sure. I can always say you were telling me about aches and pains, right?\"\n\nI told him about my dream, how detailed it was, how vivid it was. Every part of it. Some parts I had to look at the far wall and tell him about with a burning face, but I told him all of it. Right up to the bounty hunter pushing me through the portal and me waking up here.\n\n\"That's... kind of amazing. So you think that my phone calls gave you names? Or you think...?\"\n\n\"It felt real. All of it. I woke up feeling for Endrew what I felt in... the dream? The other paraverse? Whatever it was. My heart ached when I discovered I lost him.\"\n\n\"And I look like him?\"\n\n\"You are him... but with more hair and tattoos.\"\n\n\"So...\" he said with a half smirk. \"You are saying that you kinda dig me?\"\n\n\"I didn't say that! I just... told you everything. Like... full disclosure or whatever.\"\n\nHe stood up, still smirking. \"Well. I don't have a girlfriend at the moment. Full disclosure... you are about as far from my type as you can possibly get. Stunning, don't get me wrong, but that's sort of part of it. You are wholesomely beautiful...\"\n\n\"I wasn't asking to be...\"\n\n\"Let me finish! To be completely honest, tonight is the first time I actually look-looked at you. Your dad is usually here sleeping in that chair.\"\n\n\"Aaron was not my dad, he is my ex.\"\n\n\"Oh... shit. My bad. Uhhh... how OLD is he?\"\n\n\"28?\"\n\n\"Wow. Ok, sorry. He looked... older. And I thought... I mean, you were so small... and the things he was saying to girls on the phone. I assumed you were his kid. Sorry. Anyway, I hadn't looked closely until now. My last girlfriend... I don't say ex because it's sort of a bad connotation. We are still friends. My last girlfriend was tall, leggy. Lots of ink. Bartender. Purple hair, shaved up one side and spiky. Piercings everywhere. You can get the picture I am sure. Girl before her, tall, leggy, lots of ink. Black hair, lots of piercings, tattoo artist. So, I guess you could say I have a type.\"\n\n\"I get it, you don't have to explain, I wasn't...\"\n\n\"I will sedate you if you don't let me finish,\" he laughed. \"My point I was coming around to is, I always date the same type of girl. Maybe that's why it never works. Maybe I should try a date with a petite, wholesome blonde who knows how to love with all her heart and isn't completely jaded and done with life.\"\n\nI felt my face turn red again as I picked at the tape on my IV.\n\n\"So. I am thinking you will probably be released tomorrow? Barring anything bad showing up on your scans? Means you will be out this weekend and probably free? Maybe dinner and a movie?\"\n\n\"Maybe... Maybe dinner at your place with Allan and Larry? I like Larry, he is fun. And it's cute how much Allan loves him when he looks so big and scary and Larry is so little and adorable.\"\n\n\"Wow... how could you possibly know that?!? It's not like I described them when I talked to them...\" he said in amazement. \n\n\"John looks a lot like Larry, they could be brothers, but John is bigger. Lisa is beautiful in a severe sort of way and she is nice even if she has resting bitch face. Mallory is beautiful, but not as nice. Big blue eyes and auburn hair. Peyton has big brown eyes and a dimpled chin.\"\n\n\"Holy shit! Wow. So that's a little scary, not gonna lie... but it's also really cool. Maybe it's some sort of Halloween coma voodoo thing? Ok, Little Ollie. Friday night, my place. Has to be Friday, I work Saturday. Unless you want Thursday night instead?\"\n\nI half nodded, not brave enough to say I was hoping for both nights now. \n\nHe looked me over, his eyes a little in awe, then nodded slightly. \"I need to make my rounds... but I will be back, ok? I want to talk more. I want to know about you. You before you visited another dimension.\"\n\n\"Paraverse.\"\n\n\"Yeah,\" he smiled, his eyes shining. \"That.\"\n\nHe came back after half an hour and we sat up talking between his rounds for the rest of the night. When his shift ended, he came in before he left and took hold of my hand, bending down to kiss the back of it as he stroked with his thumb. \n\n\"If they let you out, text me. I will come and get you, don't call an Uber, ok?\"\n\n\"I don't want to wake you.\"\n\n\"I want to be woken. Besides... maybe I intend to spirit you away back to my place and make you my personal teddy bear while I sleep? Anyway, I will likely be awake before they release you, I sleep in the mornings, wake up in the late afternoon which is when they will likely release you. So call me, ok?\"\n\n\"Ok. You sure?\"\n\n\"Positive. Wouldn't have given you my number if I wasn't. I have to admit... I am kind of excited to see you out of that bed and... already stressing over what I am going to make you for dinner on Thursday. Usually I don't stress that sort of thing at all... but I kind of want to live up to the guy you have in your head.\"\n\n\"You don't have to live up to anything, just be you. And take-out is fine with me, I know you can't cook.\"\n\n\"What? How... wow.\"\n\n\"You always have Lisa cook.\"\n\n\"Wow! This is a little freaky and hella cool. Hey... can I be a little weird now?\"\n\n\"A little weird?\" I asked tiredly, smiling. \"I guess if I can know you and your family from a dream, you can ask me a weird question.\"\n\n\"Can I kiss you?\"\n\n\"That's not a weird question at all,\" I answered breathlessly. \n\nHe half smiled and leaned down, touching my face gently before leaning in closer and kissing me gently. It felt just as amazing as it had in my dream. \n\n\"Fucking hell,\" he breathed wide eyed as he pulled back. He started to say more but there was a quick knock and the nurse came in, giving him enough time to stand up straight. \n\n\"Good morning Miss Mallory! Oh, hey Andrew! You're still here! Are you pulling a double?\"\n\n\"No, just finishing a conversation from earlier. I will see you later, Ollie.\"\n\nHe left, smiling brightly as the nurse came in to check me over. I tried to hide my own smile as I curled up to sleep. I napped on and off all day between check-ins and scans. ",
        "When the doctor finally came in and said I could be released, I was dismayed when he was followed by Aaron.\n\n\"What are you doing here?\" I demanded. \n\n\"They called me, said you were going to be released and you would need a ride home?\"\n\n\"Why would you call him?\" I demanded from the doctor.\n\n\"He is your emergency contact? He was here almost the whole time you were in a coma?\"\n\n\"Talking to other girls on his phone! Texting and talking. I told the police yesterday he isn't allowed near me! And you better be out of my house! Anything left that's your, I am burning! It's HIS fault I am here, did he tell you that? He is only here because he feels guilty. I wouldn't have been walking if he hadn't taken my phone and ID and cards and took off, leaving me there all alone with no way to get home! After openly cheating on me with every girl he could grope or get to grope on him! No, asshole, get out and don't ever contact me again! I want nothing to do with you!\"\n\n\"Ollie, baby, come on. I'm sorry I lost my temper, ok? Don't do this. I really was here the whole time you were out. I'm sorry baby.\"\n\n\"Get out!\"\n\n\"Sir, you need to leave,\" a male nurse said from the doorway. \n\n\"Should we call you a cab?\" the doctor asked.\n\n\"No, I have my phone, I have someone to call,\" I said quickly. As soon as Aaron left, giving me a pleading look, I opened my phone and texted the number Andrew had given me.\n\nHe answered immediately. \"BRT\".\n\nBy the time I was dressed and had signed everything, he was at the door. \n\n\"Andrew?\" the male nurse asked, half punching his arm. \"What's up man?\"\n\n\"Picking her up.\"\n\n\"So I see. Didn't know she was a friend of yours?\"\n\n\"Now you know,\" Andrew evaded with a smile. \"You ok Ollie? You need help walking?\"\n\n\"My hips are sore,\" I answered softly, trying not to look at the other nurse.\n\n\"Shit, if I had known that all you had was a bloody costume to wear out of here... Hold on,\" he said, pulling his flannel shirt off and draping it over my shoulders.\n\nHe helped me out to his truck and drove me home without asking where I lived. I didn't question it, he had access to all my files, it would have been easy for him to look up. \n\nIt shouldn't have surprised me that Aaron was there waiting, but somehow it did. \n\n\"Who the hell is this?\" Aaron demanded immediately as Andrew followed me in.\n\n\"I told you to get your shit and get out! I mean it Aaron! I am done with your cheating and your temper and your bullshit! Get out of my house!\"\n\n\"Have you been cheating on me with this freak?\" Aaron demanded, grabbing my good arm and pulling me away from Andrew roughly.\n\n\"Dude, take your fucking hands off of her,\" Andrew growled, stepping up to Aaron and staring him down.\n\n\"Call your freak off!\" Aaron demanded, looking at me in a rage. \n\nI flinched back and stepped away. \"Just get out, Aaron.\"\n\n\"Where the fuck am I supposed to go? I LIVE here! You can't just kick me out, this is my house too!\"\n\n\"No! This is my house! I inherited it from my nana and I pay all of the bills! You have never once paid a single bill since you moved in! You didn't even help with the remodel for the mancave YOU wanted in the basement for you and your friends to hang out in! This is my house and you have NO right to it! Go move in with your friends! Or your mother! I don't care, but get out of my house!\"\n\n\"I am not leaving you here with this freak!\"\n\n\"I will call the cops if you don't leave now.\"\n\n\"The fuck you will,\" he snarled, snatching my phone away from me. \n\nAndrew grabbed a handful of Aaron's hair and bounced his face off the wall next to me. He took my phone out of Aaron's hand, then walked Aaron out the front door by his hair. I watched, horrified as Andrew pinned him to the ground and leaned over him, saying something in Aarons ear.\n\nWhen Andrew stood up, Aaron scrambled to his car as if he were being chased. Andrew came back in and calmly handed me my phone, though his face was red. \"Call the police. File a report. He will be back when he thinks you are alone, I know his type. How long were you with that dude?\"\n\n\"A while? I was sixteen, he was twenty one?\"\n\n\"Why'd you stay?\"\n\n\"I... I don't know. I never made him angry, I knew not to. I guess I knew he cheated too, but I ignored it.\"\n\n\"You shouldn't stay here tonight. Come stay at my place, with Allan and Larry and... No. Actually, I am going to call in tonight. Come stay with me at my place. Not a debate. Call the cops, get a shower while you are waiting and pack.\"\n\nI felt a little thrill shoot through me. \n\nI called the police and showered, then packed as we waited. When they got there, I told them what had happened, what was going on, they got the names of the two cops who had been there at the hospital when I kicked him out. Andrew told them what he had done to get Aaron out of my house, then gave them his number and address after telling them I would be staying with him for a few days.\n\nA few days!\n\nI peeked up at him, blushing. He had said it so casually, like it was a given even though he hadn't even asked me. \n\nWalking into his house was a little odd. It was an older victorian style, but not the epic, grand kind. More like the plain kind that there were a dozen in a row of on a block. It needed a little work, but it was all from age and not from misuse. The hardwood floors had seen a LOT of wear over the years and I looked around at the eclectic and random decor as he led me through to the living room.\n\nAllan looked over his shoulder at me from the couch and Larry sat up from laying in Allan's lap. I grinned at Larry, he looked exactly the same. Allan had a full head of hair, all puffy and wild and black, no white at all, but it was him. Still big and scary looking. \n\nLisa looked less severe, her face softened by a cute bob cut as she got up and smiled, crossing the floor and holding her hand out. \"And who is THIS?\" she asked, taking my hand. \"She is adorable! What happened?\"\n\n\"Remember I told you about the hit and run coma patient?\"\n\n\"This is her? You didn't say she was adorable!\"\n\n\"This is her, she is going to be staying a few days.\"\n\n\"Wow, baby brother! No mention and then you show up with her out of the blue? I'm Lisa.\"\n\n\"Olivia, but my friends call me Ollie.\"\n\n\"Lovely to meet you Ollie, come sit down. This is Allan and Larry, our roommates. My husband is at work, he will be home soon. John and Mallory took the week to go see the Ozarks in the fall, though I told them it was pretty late for that.\"\n\n\"They just needed a break from us,\" Larry teased. \"You are scrumptious. I would love to get my hands in your hair! And you'll be needing help while your arm is in a cast, right?\"\n\n\"Thanks, Larry, I would appreciate that...\" I said, trying hard not to let emotion overwhelm me again. \n\n\"Everyone have a seat. I want you to listen to this story of hers,\" Andrew said, leading me to a couch and pulling me down to sit next to him, his arm around me tight.\n\nI looked up at him in surprise, but he smiled at me encouragingly. \n\nI told them everything, pausing for questions and comments, and a giggling fit from Larry when I said Callen was Endrews enforcer.\n\n\"So... you dreamed all of this from Andrew talking to us on his phone?\" Lisa asked. \"Which, by the way, Andrew, very unprofessional. Ducking into coma girl's room to make calls.\"\n\n\"I don't know, I guess, but that doesn't explain how I knew what you all looked like or acted like already. I met you all and I knew you all. And Pannar. Endrew left him behind when we came here to lead for him.\"\n\nLisa went pale, sitting up. \"Like... Peter? I mean, all the names were a little off...\"\n\nAndrew's arm tightened around me as he sat up straight. \"Not funny Lis,\" he snapped.\n\n\"No! Think about it! Peter was left behind!\" she said quickly.\n\n\"Who is Peter?\" I asked quietly.\n\n\"Our little brother. Our mom was pregnant with him when we were in the accident,\" Andrew said softly. \"I was in a car seat, that saved my life. Lisa and John were at school. She was trying to drive herself to the hospital, our dad was in Texas. Over the road trucker. She wasn't due yet, not for another four weeks, so he thought it was ok. She went into labor. I don't really remember it, I was young. Two. I just know we buried Mom and Peter together.\"\n\n\"Grew up, left him behind,\" Lisa said softly.\n\n\"This is spooky!\" Larry breathed, curling up close to Allan. \n\n\"What was he like?\" Lisa asked, sitting on the other side of me.\n\n\"I... actually, I never really got to know him well. He was always quiet and distant, aloof. He helped when he was told and he was the one who would calm me with whatever it was when I was scared. He didn't talk much.\"\n\n\"That actually sort of makes sense,\" Lisa said, leaning back. \n\n\"But... Endrew asked Mallee if she wanted to stay behind or come with us?\" I said, shaking my head, putting an end to that theory.\n\n\"Holy shit!\" Allan said, jerking upright.\n\n\"Mallory tried to kill herself last year when they told her she couldn't ever have kids,\" Larry said softly, his eyes huge. \"She almost did. Andrew came home mid shift when he found out it was going to snow and wanted to have what he needed with him after work. He found her by accidental fluke and if he weren't trained, he wouldn't have been able to save her. He saved her.\"\n\nI felt cold all over and I peeked up at Andrew who looked stunned. He looked down at me, searching my face again. \"I don't think anything that happened to you that night was an accident,\" he said softly. \"You were put in my path and I was put in yours, whatever really happened. What I know is, I was there when you were brought in. I was there with you every night. I know you were physically in this world. But I also think that part of you wasn't. I don't know where, or how, or whatever... but I don't care. Every minute I spend with you, every second I spend touching you, I am more and more sure of one thing. You and I are destined for each other no matter what universe it is. I don't say that lightly... I am a sworn, lifetime bachelor, I don't date seriously at all. Ever. That being said... move in with me, Ollie. Move in with me and... I won't ask you to marry me yet, that would be insane, but I don't see it going anywhere but there.\"\n\n\"Uhhh... An? You...\" Lisa began uncertainly, looking at her brother in shock.\n\n\"Ok,\" I said quickly. \"Umm. Yeah. I will move in with you. Or... you can move in with me? I have a house too?\"\n\n\"Maybe after we have kids,\" he said, pulling my face closer in his hands. \"Till then we can stay close to family and friends.\"\n\n\"K,\" I breathed.\n\n\"Did he just say kids?\" Larry asked in an exaggeratedly shocked whisper meant to be heard by everyone. \n\n\"He just fucking said married,\" Allan said, not bothering to whisper. \n\n\"John is going to shit himself!\" Larry giggled.\n\n\"Mallory is going to be pissed.\"\n\n\"Both of you hush,\" Andrew said, not looking at them. \"Ollie?\"\n\n\"Yeah? Umm... do you think we could go be alone for a bit?\" I asked as he started to lean down and kiss me again.\n\nHe jumped up quickly, then bent down and picked me up, carrying me up the stairs to a large bedroom. \n\nHe kicked the door shut behind us."
    ],
    "authorname": "gabthewriter",
    "tags": [
        "paraverse",
        "halloween",
        "noncon",
        "nonconsentual",
        "parallel universe",
        "paranormal",
        "reluctance",
        "romance",
        "science fiction",
        "spooky"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-verse"
}