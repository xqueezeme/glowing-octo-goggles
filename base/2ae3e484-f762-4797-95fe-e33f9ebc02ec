{
    "title": "A Spill of Blood Ch. 06",
    "pages": [
        "Whodunit is answered: Larry Beck had the $32,000,000. Harry got it back, all but $100,000 in cash and $2,000,000 in cryptocurrency he let Beck have in exchange for information about Jordan Regan and Richard Bertram. Harry left, giving Beck a chance to run. Beck either didn't run or didn't run fast enough. He was tortured and killed, along with his girlfriend, Nikki. The single shot to the head with a&nbsp;.22 suggested that Mitchell did it.\n\nWhodunit might be answered, but it's not over. The ones who done it are in the slave business, and that's not okay with Harry. And once they figure out someone knows what they do&nbsp;...\n\n&mdash;C\n\n<center>CHAPTER 6</center>\n\n\"Nine hundred thousand cash,\" I said, dumping the red carry-on I'd taken from Beck's cabin. I dropped a piece of paper next to it. It wasn't an elaborately engraved bearer bond containing secret codes hidden in printer's marks. It was the torn back of an envelope I'd scooped from Beck's desk on which I'd scribbled an account number and the precious sixty-four characters of the password using a cheap-ass ballpoint. \"And twenty-nine million in there. Change the password or move it or whatever the hell just so long as it's not my responsibility anymore.\n\n\"You're short two point one,\" I went on, \"because Beck already bought himself a stretch of beach in Honduras.\" Beck had suggested that story, and it seemed reasonable to me. \"If that's a problem, take it up with the real estate people down there.\"\n\n\"Only two, Mitchell acquired the remaining cash,\" Regan said absently. That told me two things. One, it confirmed Mitchell had been the one to kill Beck. Second, it told me that Mitchell had fucked up. He either hadn't realized that Beck still had an account with millions in it, or hadn't been able to break him. I was betting the former. I doubt Mitchell would fail at the second. The password died with Beck, and that money was gone into the ether forever.\n\nRegan still had the alpha-male hauteur, but I could see the tiny easing of tension in his body as he contemplated what I'd delivered for a moment longer. Then he looked up. \"I said get me the thirty-two, so maybe I'll have you take it up with the real estate people down there.\"\n\n\"Well, there you might have a problem.\" I took a moment of pleasure in watching the spark of interest in his eyes. Regan liked breaking people to his will, but see, I found I liked frustrating him. \"I'm not sure you know this, but Honduras isn't one of the fifty states.\" He looked at me blankly. \"I don't have a passport.\" \n\nI didn't. It had expired during the bad year after Amber left, and getting it renewed had never percolated up to the top of my priority list. We'd used it to travel, she and I. When I'd crawled out of the bottle, there were only fuckbuddies in my life, and I wasn't going to say to Lexie, \"Hey, how does Santorini sound?\"\n\nThough, Harry, now there's Sydney, and Santorini would be&nbsp;...\n\nI dragged myself back from a moment's contemplation of Sydney and one of the topless beaches on the island. I set another item in front of Regan. \"My bill, including itemized expenses.\"\n\nI watched the wheels turn as he contemplated my refusal to track down a mythical waterfront property in Honduras. \"Well, perhaps I'll put Mitchell on that problem.\"\n\n\"Where is your pet rattlesnake? I'm used to him coiled up in the corner.\"\n\n\"Other business.\" He pulled the bill over and glanced at it. \"Well, I didn't expect you to succeed, but you did. So I guess I need to take care of this.\" He reached into the red carry-on and extracted some banded packets. \"You ran a little bit over my time limit. I'm not paying you extra for that. But I said sixty.\" He counted six of the packets onto the desk. \"And it's a little more than your expenses, but call it a tip.\" He added a seventh and gave me a wide smile. \"Nice doing business with you, Harry.\"\n\nI slid the packets into my jacket pocket, gave him a curt nod, and made my way out.\n\n\"Maybe we'll talk again,\" he said as I left the room.\n\nI'd misused a metaphor earlier. Mitchell wasn't a rattlesnake. Mitchell was a mamba, striking silently out of the brush. \n\nA seven thousand dollar tip over and above expenses, the easy acceptance of being stymied, the wide smile of \"nice doing business\"&nbsp;... that was what the dry rattle from behind a rock sounded like, even if the snake didn't realize it was warning me.\n\n<center>\u2022 \u2022 \u2022</center>\n\n\"Is it over?\" Sydney asked.\n\n\"Most of it,\" I lied. \"Beck's dead and most of the money's returned. But I have no way of knowing if friends of those dead cops won't take a little revenge. They may come after me.\" I hesitated, then gave her a tiny morsel more because she wasn't entirely safe, not after Mitchell had seen her take my arm that day. \"It's possible that Regan will want all traces of this mess to disappear, including anyone who knows about the millions.\"\n\nI didn't think Regan would give a damn about people knowing of the millions. But I was certain he'd give a damn about people knowing what his business was. When Beck tried to bribe me with information&nbsp;... well, when Beck did bribe me with information about Bertram, I'd followed a trail of logic. That trail led to Richard Bertram wondering if that bribe attempt had been made and information traded hands. The same logic applied to Jordan Regan. I had a feeling Regan's ego meant he wasn't always careful, but he wasn't stupid, not in his business.\n\n\"I think you should disappear for a while,\" I continued. \"I know you said you didn't have family anywhere, but maybe a trip down to the Keys or something, some place warm where there're no bad guys in your vicinity.\"\n\nShe shivered but shook her head. \"No. I'm staying with you. You've protected me so far. If we're leaving, it's together. We could go to Europe. Maybe we could find some way to get the money Larry left. Two million is enough to disappear in Europe.\"\n\n\"Sorry, hon, I don't think so. Even if he did, I don't have a passport.\"\n\nWe argued. She was scared&mdash;rightly so&mdash;and wanted to flee, but she wanted me along to protect her. She insisted.\n\nI resisted. As much as the thought of lolling about the Mediterranean with Sydney appealed to me, I knew I'd never lose the burning sensation in my gut that came from knowing what was happening back here and doing nothing about it. It was hard to argue with her because I didn't tell her everything. Beck had stolen money, end of story as far as our conversation went. Nothing about the business they were in. I was reluctant to let her see the filthy side of men she'd shared a bed with. I didn't want her skin to crawl or nightmares to haunt her.\n\n\"I'm going to convince you,\" she announced when it was plain that neither of us were budging. \"You'll see.\"\n\n\"How?\"\n\n\"You're going to tell me your fantasies, every single one of them. And I'm going to promise to make all of them come true, every single one of them. And that will make you realize that saying no to me is a very, very silly idea.\" She had a wide grin. \"I'm gonna guess one's a threesome because every straight man has that one&nbsp;... so that's the sweater.\"\n\n\"The sweater?\"\n\n\"Yep. Short-term incentive while I work on the long-term promises.\" She stood and stripped her sweater off. She glanced down. \"Six pieces of clothing left. Tying me to the bed, and then doing whatever you want? Aah, you don't need to answer because your expression already has. That's the right shoe. Okay, I need five more.\"\n\nI hemmed and hawed.\n\n\"Come on, Harry. I'm retired as of a couple of weeks ago, but you know my history. You can't shock me; I've heard them all. And I doubt you can even surprise me. Five more.\" \n\nI struggled to find some high ground to fight from. \"What if I have more than five?\"\n\n\"Well, there's no limit. I said all your fantasies. But you need at least five more to get me naked right now. And I promise that getting me naked right now will be a good thing for you. You like dirty talk, so here's what's going to happen if you come up with five&mdash; \n\n\"Oh, wait! How 'bout this one? You know that when we're in Europe, we're going to try all the fancy restaurants, right?\" I rolled my eyes. She carried right on as if I hadn't. \"And one of those places, I won't tell you which one, I lean over and&nbsp;...\"\n\nHer voice dropped to a sultry, barely audible level.\n\n\"... I whisper, 'I want to suck your cock right now,' and then I take you into a stall in the men's room and do just that.\" Her voice returned to normal. \"Then we go back and have the second course, which\"&mdash;she ran a tongue over her lips&mdash;\"I guess would be the third for me. How 'bout that?\" She giggled. \"Yeah, there's the left shoe. Now stop making me do all the work here.\"\n\nShe teased me until I came up with four more. \"With one of those private cabana tents, so you can do more than ogle\" to the Santorini idea which hadn't entirely left my brain. \"Goody! That's one of mine too,\" to the mile-high club. A tentative suggestion I made met with \"I'm bad at that, but I know just the girl. She's got absolutely no gag reflex. During that threesome.\" \n\nShe rejected \"You do all the work.\"\n\n\"Pfft. I'd do that any time you were feeling tired. No, I need one really wicked one to part with the only thing between you and getting laid right now.\" She slid one hand down her belly to trace the black triangle of lace. \"Bi-curious? No? Okay. Hmm, being my sex slave for a weekend in Saint-Tropez? Uncertain&nbsp;... no problem; we can think about that one. Come on, one really dirty one! One you think, 'No way she'll agree!' One you'd never admit to if it weren't for this.\" \n\n\"This\" was dipping a finger underneath that lace, then drawing it out and sliding it into her mouth. \"Mmm. One more and you can taste for yourself.\"\n\nSo I hit her with one and those panties came off. Just before she slid me inside her body, she pulled her lips from my neck and whispered. \"I'm not shocked. I will be nervous, though. But as long as there's a safe word, that one too. All your fantasies. I trust you.\"\n\n<center>\u2022 \u2022 \u2022</center>\n\n\"It's not over.\" From Jess, it wasn't a question. I'd told her everything.\n\n\"No, it's not.\"\n\n\"So, what do we do about it?\"\n\n\"We get something concrete and then we hand them off to the police.\"\n\n\"I hope they'll let you.\" \n\nThat casual acceptance of my answer spoke volumes. It held the sure certainty that I did believe in the law, that I was someone she could work for. Paired with that was a memory of an evening that started with \"Can you at least write me a fucking reference before you totally bitch out?\" She'd dragged me out of the bar and poured coffee into me. She'd heard the Connecticut story&nbsp;... heard the echo of my rage at evil walking around impervious to the law. It held knowledge that walking away wasn't an option for me. Or her. It held loyalty.\n\nNow I contemplated how to go about it. Where to start unraveling? There'd been five at that party who could have given me a foothold. \n\nCharlie Everett might have been the weakest personality, venal and easily conned. But that same venality had led him to try a little extortion, and Charlie Everett had been a poor judge of his target. I wasn't there, but I could envision what transpired that night: a dark street in the East Village; a hulking shape looming suddenly; an empty construction lot; the muffled crack of a handgun. Detective Murray had confirmed what caliber had killed Everett. \n\nOr maybe no shape looming. \"I'm big but you never see me coming,\" Mitchell had told me.\n\nLarry Beck had been a weak link in another way. He was ruthless and had a certain toughness, but he had an Achilles heel named Nikki&nbsp;... Nichelle Hill. And because he had that weakness, he delayed his flight, and that delay had meant his death. Just in time, I'd managed to snatch enough to get me further but not enough to get me inside.\n\nThat left three&nbsp;... or at least, three that I knew of&nbsp;... who were mixed up in the whole business. Four if you counted Mitchell, but he was part and parcel of Jordan Regan. Regan seemed Teflon for the moment, walled behind his money and Mitchell's gun. I didn't see a chink. \n\nAnders Lindqvist and Richard Bertram. I needed to go after both, and I needed to do it fast before Bertram had a suspicion of what Beck had told me, or before Regan decided to act on his knowledge of it. I needed two irons in the fire.\n\n\"I think we go about this three ways. Bertram, Lindqvist, and Murray. I give everything I have to Murray, let him make the decision whether to take it to the Feds or not. He's the only cop I trust at the moment.\"\n\n\"Because this mess is vice and Gibson was vice,\" Jess said, agreeing.\n\n\"But I doubt that I've got the kind of time that it will take for the FBI to start up an operation. Bertram's plane comes in today. I have to assume he'll hear shortly after that, if he hasn't already. There's a short fuse on that one.\"\n\nShe pulled out a notepad. \"Bertram was staying at the Hotel Capital in Zagreb. As of yesterday, I was able to leave a message for him, so I assume he didn't check out until today. If he flies commercial, the first flight in at the airports around here lands at twelve twenty-five, the last at ten thirty-five tonight. If he's on a private jet, it could be anything, of course. But if we assume that he didn't get up long before dawn, you probably have until later in the afternoon. \n\n\"Bertram and his wife, Rachel, apparently don't live together,\" she went on. \"I don't know if they're separated or what, but she's living up in New Canaan while his address is in town. Maybe that's a place to start. If they're in the middle of a divorce, she might be willing to spill.\"\n\nI stared at her in amazement. She pinked, then she favored me with an arch look. \"And don't forget that raise.\"\n\n\"I haven't. Umm, be right back.\" I ducked into my office for a second. \"Later, we'll go over the books together and figure out what we can afford. In the meantime&nbsp;...\" I set what I'd grabbed from the safe in front of her. \"A bonus.\"\n\nShe stared: two packets, each bound by a yellow and white strap with \"$10,000\" printed on it.\n\n\"It's not going on the W-2, so it's all yours.\"\n\nThe pink got deeper. \"Twen&mdash; I-I&nbsp;... umm&nbsp;...\" She pulled herself together. \"Thank you.\" \n\n\"Out of curiosity, what message did you leave for Bertram?\"\n\n\"Just a phone number to call and that it was urgent.\" \n\n\"You told him to call here? That was&mdash;\"\n\n\"Of course not!\" She picked up her phone. \"I gave this number.\" She put a voicemail recording on speaker.\n\n\"We've tried to contact you several times about your car's warranty. Please call us at&nbsp;...\"\n\n<center>\u2022 \u2022 \u2022</center>\n\nNew Canaan was on the way to New Haven.\n\nI hadn't forgotten the previous piece of information that Jess had dug up. It could easily be nothing&nbsp;... probably was nothing&nbsp;... but Lindqvist's ship stopping at the United Riverhead Terminal was odd, and odd bore checking out. I had no other line on him. The Namibian wouldn't stay in New Haven forever, so I was in the car.\n\nWhen my GPS told me, \"You have reached your destination,\" I was staring at closed wrought-iron gates in a toney section of a toney town. The little voice-box outside brought a male voice. It was polite, but it was rigid.\n\n\"I'm sorry, but Mrs. Bertram is busy and doesn't see anyone without prior arrangement.\"\n\n\"Can you tell her that it's about her husband?\"\n\n\"I'm sorry, but Mrs. Bertram is busy and doesn't see anyone without prior arrangement.\" \n\n\"How 'bout I make an arrangement?\"\n\n\"I'm sorry, but Mrs. Bertram is busy today.\" We played that game through an iteration or two before I gave it up as a lost cause and put the car back in gear.\n\nI thought about leverage as I zipped along I-95. I knew a man who said he owed me for a job I took a few risks for. He said if I ever needed something, look him up. I knew there was a spending cap on that offer, probably a pretty low one since he'd paid me well, but I figured this might be in the budget. I dialed Jess.\n\n\"Did you ever reach Walter Sullivan?\"\n\n\"Well, I got his assistant. I couldn't get past him.\"\n\n\"There's a lot of that going around. Never mind. I'll see if I have any more luck.\"\n\nA call got me the assistant who, after making me wait for ten minutes, allowed as how ten o'clock on Saturday might be possible.\n\n\"It's a little more urgent than that. Is there any way he could talk to me today?\"\n\n\"He's in a meeting right now. You'll need to wait until Saturday.\"\n\nI was starting to lose it with petty tyrants. \"Well, since you obviously can talk to him while he's in that meeting, how 'bout you go back in and talk to him again. Tell him I remember his offer and would take it as a personal favor if I could have a word today.\"\n\nThe miles ticked away. Then a different voice spoke, \"Hello, Mr. Morgan, Walter Sullivan here. What can I do for you?\"\n\nI told him. I ended with, \"The goal of all this will definitely cause Jordan Regan some pain&nbsp;... serious pain.\"\n\nThere was a moment of silence. The voice that responded to that had none of the cordial, businesslike tenor it had when it greeted me. It oozed satisfaction and malevolence. \"That eventuality would put me doubly in your debt. I don't know her personally, but I'm sure it won't be difficult. Give me an hour.\"\n\nI didn't think it would be difficult for him. Jess's research showed Rachel Bertram was on the boards of a number of do-good endeavors, and in that small world of charities and trust funds, gazillionaires like Walter Sullivan were the big dogs. I cut over a lane and made the exit to go back.\n\n<center>\u2022 \u2022 \u2022</center>\n\nI felt sorry for Rachel Bertram the moment I saw her. From the immaculately coiffed hair in a style that was probably described as \"full and flirty\" by the salon, all the way down to the Bean boots ready for mucking about in the garden or just lunch with the girls, she was a picture of the country-club-set wife. She was pretty, both because of nature and because money could buy pampering, and the jeans and sweater revealed a nice figure. \n\nBut that's what made me feel sorry for her. Because that whole preppy, polished, perfect look screamed everything from healthy and fresh at the club pro-am tournament to sophisticated and elegant at the club gala. \n\nWhat it didn't scream was bent naked over a table at a bacchanal&nbsp;... and Richard Bertram apparently had a taste for that. That, assuming Nikki's assessment had been right, was why there was a Coco who had a sugar daddy, a whale.\n\nCoco might have been a better line into Bertram, but I didn't have a starting point. Sydney hadn't encountered her around the Eroticos world, and I wasn't going to dig into her with Regan. He'd made it clear that Bertram and Bertram's people were off-limits. Knowing that Bertram was going to find out about the theft hadn't changed that.\n\nI wonder if she's close. Before he separated, I bet he put her in a nice condo close enough he was able to take advantage of Rachel heading out for tennis lessons or Pilates. \n\nI looked at the woman leading me toward a \"it's sunnier here\" room. \n\nBut he's careful about Coco, I thought, because this woman moves in circles where housewives have lawyers in their contact lists too, the kind of sharks that enjoy nothing more than stripping every morsel of flesh off an errant spouse.\n\nShe was pretty and rich and her eyes spoke of intelligence&nbsp;... and I felt sorry for her.\n\n\"So, Mr. Morgan&nbsp;... can I call you Harry? Please call me Rachel. When Maudie phoned me\"&mdash;I assumed Maudie was a link in the old-boy/girl network chain that Walter had used to get me this meeting&mdash;\"she said it was important. What can I do for you? Is this about the charity?\"",
        "I led with some pleasant haziness while I tried to get a sense of her. She tolerated that for about sixty seconds.\n\n\"Are you here with a story about my husband and another woman? Because if you are, you might as well pack up and go.\" \n\nShe misinterpreted my surprise. She shook her head. \n\n\"No, I'm not na\u00efve. If some husband hired you and is accusing Richard of that, then I'm neither going to break down and cry, 'I knew it!' nor scream, 'It's a lie!' and throw you out. The truth is, I don't know either way. Richard is extremely&nbsp;... red-blooded&nbsp;... and he sometimes keeps company that I would characterize as rather degenerate.\"\n\n\"Such as Jordan Regan?\" I hazarded, working to get my feet back under me. She cocked her head to look at me.\n\n\"Yes, such as Jordan Regan. That one's a man-whore, if you'll pardon the expression. I wish Richard had nothing to do with him. But the thing is, Mr. Morgan, I don't know and I don't care.\" She broke off and bit her lip. \"Well, that's not true. I do care. \n\n\"However, I've settled it in my mind. Richard may or may not sometimes have sex with other women. That possibility comes with the territory with that kind of man. I grew up in a family of them and know all about the double standard. Maybe he does, maybe he doesn't; I don't know. But one thing I do know is that Richard knows if he ever embarrasses me with his actions and forces me to become aware of them, or brings home something, then I will make sure he regrets it forever.\" \n\nThe gray eyes flashed with sudden fire. Behind that polished exterior was some passion. How much did she swallow down pride because she either didn't want to admit to the world that her husband was a cheater, or because she didn't want to give up the lifestyle, or some combination of both?\n\n\"Which brings us to you,\" she went on. \"You probably came up here expecting to find a wife who would be an ally in your investigation once you convinced her. Perhaps you believed that the apparent separation indicated marital problems and maybe there'd be a trove of evidence.\n\n\"But I'm afraid you've gotten hold of the wrong end of the stick. Richard and I are not separated. I despise city life. It's noisy and smelly and rude. He is bored up here. We each live where we are comfortable. He comes up once or twice a month, we give the staff a holiday, and we spend it together. If he is unfaithful other times, he doesn't show it to me, and I am content. So, your drive was probably for nothing.\"\n\nThough her expression stayed neutral, I was sure she was thinking, \"Don't let the door hit you on the way out.\"\n\nI wondered if I believed that \"I am content.\" Then I wondered if maybe Rachel Bertram enjoyed a little tit-for-tat with a tennis instructor somewhere. Then I put those thoughts aside and regrouped. \n\nShe'd misinterpreted my surprise. It wasn't that she'd guessed at my cover story because I wasn't going to use that one. I'd simply been surprised that this corduroy-and-Fair-Isle woman had dived into such a personal conversation with a stranger in under two minutes. I'd also been surprised by the glint of steel she'd revealed underneath. Most of all, I'd been surprised that, somewhere in that short period between Maudie calling her and my arrival, Rachel had taken the trouble to dig up enough information on me. \n\nOr maybe that roadblock of an assistant had gotten her thinking and she'd started digging a half hour earlier, before Maudie's call. Either way, it seemed she knew I was an investigator and even what type of case sometimes came my way.\n\n\"Actually, that's not why I'm here. Fortunately, there's no husband on the warpath with a gun.\" I smiled to keep that light, but her expression didn't follow suit. One perfect eyebrow arched in a question.\n\nI'd spent the minutes on my return journey deciding what to say. I didn't want to tell the truth for fear \"he's running slaves\" would meet with disbelief and doors, metaphorical or real, would slam shut. \n\nI'd considered the prostitute angle, but I'd foreseen that going nowhere. I'd assumed a look of pain and embarrassment might enter her eyes, that she'd bite her lip and tell me it was none of my business. Her actual response had surprised me, but the result was the same.\n\nNeither would a claim of a white-collar problem work. It was likely to get me a question about why I wasn't a process server bearing a notice of a lawsuit. Or maybe, \"So, I presume you can show me credentials from the Securities and Exchange Commission?\" While I did have a number of fake IDs, that wasn't one of them. \n\nI needed an accusation serious enough to get her attention, one she couldn't trip up that easily.\n\n\"I represent someone foreign who's a collector of certain types of art. Not paintings&nbsp;... more ceramics, carvings, mosaics, that kind of thing. A number of acquisitions have gone missing and he&mdash;\"\n\n\"You're saying Richard stole this man's art?\"\n\n\"Absolutely not!\" \n\nShe settled back with a minor gesture that apologized for the rudeness of interrupting, and I went on. \n\n\"The two people responsible have been apprehended. The evidence against them is pretty clear, and there's a fair indication that they're part of a larger organization who specializes in this kind of thing. \n\n\"No, my involvement is more downstream. You see, pre-colonial art is valuable to certain collectors. Sometimes more than valuable: pre-Columbian art is worth an absolute fortune on the black market.\" \n\nTime to show the hook and hope it's big enough, Harry.\n\n\"The issue, of course, is getting pieces from their place of origin to those collectors. It's&nbsp;... difficult&nbsp;... in most countries. The two men had already disposed of the objects. Among the stuff found in their possession were two bills of lading from Excelus Imports.\"\n\nExcelus was Richard Bertram's company. My pause on \"difficult\" was a blatant euphemism for \"illegal.\" She stiffened slightly. \n\n\"The question I'm trying to answer is who knew that the documents, which listed ceramic dishware from a factory in Vietnam, were really for some Aboriginal pieces from Australia and where did they end up.\"\n\nI watched the shuttered eyes as she processed what I'd said. I saw the questions start to form. \n\n\"It's obvious I made some inquiries to find out who you were, Mr. Morgan.\" I noticed I was no longer Harry. \"Not extensive, of course, given the time, but&nbsp;... well, forgive me, but&nbsp;... \"\n\nI foresaw this one coming, and my ego didn't mind a few bruises.\n\n\"You're wondering how an investigator that normally deals with adultery and insurance fraud is involved. It's okay; it's a perfectly legitimate question.\" I smiled to show no hard feelings. \"My father was in the security business. He worked for multinationals and was very good at his job. My current client remembered him when he needed someone in America. However, my father passed away some years ago and the client ended up reaching me.\" \n\n\"And why not the police?\"\n\nSaw that one coming too.\n\n\"Nothing was said, and I don't look a gift horse in the mouth, but my working assumption is that some of those pieces might have had&nbsp;... let's say a shaky provenance. The client's intentions as he expressed them to me were to 'reach some kind of arrangement for the pieces' return.' That's my goal.\" \n\nGo on, Rachel Bertram, ask the third one.\n\n\"And why are you coming to me?\" Bingo.\n\n\"Because wives know things, sometimes a lot more than their husbands realize. I'm looking for a copy of his shipping records. I can match those to dates we know stuff was stolen and maybe find some destinations. I thought maybe you'd know a way to go about getting those.\"\n\n\"I don't believe he did this.\"\n\n\"Maybe he didn't. It's entirely possible they're just using him. It doesn't really matter. I'm not the police and I don't care about your husband in the slightest. Let me emphasize that: I don't care about Mr. Bertram. I care about finding where those items ended up and getting them back.\"\n\nShe deliberated. \"You want me to confront Richard?\"\n\n\"No. That's a bad plan. Look&nbsp;... if I talk to him, I'll get a door slammed in my face. If you talk to him, he denies everything if he's innocent. If he's not innocent, he still denies it and goes into damage-control mode. Then things get dicey.\"\n\n\"What does that mean?\"\n\n\"If my client sees things getting out of control or the trail going dry, I don't think the police are his Plan B option.\" She wasn't stupid. She saw what might be looming behind that vague statement, and her face tightened. I didn't leave it vague. \"By that I mean that more than one person has been killed in this business so far.\"\n\nThat was the hook I hoped was big enough to pull her into action. Just tossing an accusation of smuggling stolen artifacts wasn't much of a pry bar. \"Talk to my lawyers\" would be the automatic response for a person who probably had a squad of them. But \"talk to my lawyers\" stopped lawsuits. It didn't stop bullets.\n\n\"You're joking!\"\n\nWordlessly, I pulled out my phone and showed her a picture, courtesy of Detective Murray and police files. There was no glimmer of recognition at Larry Beck's picture. Morgue photos never quite look like real people, but they do a good job of showing blackened holes where no holes should be in the human head. \n\nShe jerked her eyes away, but not before I saw something. Disgust, yes. Fear, maybe. Could I hope for belief too? \"That was uncalled for!\"\n\n\"I'm sorry, but I need you to believe me that this is serious. I need your help.\"\n\nHer defenses were up now. I was getting nothing from her expression or posture except that she wished she'd never met me. I figured it out three ways. \n\nOne, she was scared by the picture and also scared to confront her husband. In that case, she might actually dig up some shipping records. If she did, that would give me dates&nbsp;... not of possible pre-Columbian art shipments&nbsp;... of people shipments. I'd send those to Murray because playing cowboy wasn't my first choice, no matter what he accused me of. Giving them to him might alert a few dirty cops, but we'd talked&mdash;they'd also hit the desk of an FBI agent at the same time as insurance.\n\nTwo, she was scared of the picture but not scared of confronting her husband. She did it despite my request not to. He'd deny it and go into damage-control mode just like I told her. That was okay. Rachel Bertram talking to her husband wasn't going to trigger anything that wasn't triggered already. The evening I'd recovered the money, I'd worked out that he would suspect Larry Beck had made me an offer and that I knew too much. And for a man like Bertram, suspicion would be enough for action. \n\nBut maybe it would hurry things up because now I wasn't just someone who knew too much. Now I was someone who knew too much and was actively digging for more. People reacting in haste made mistakes. That's what Jordan Regan had wanted when he'd hired me, for me to beat the bushes until someone made that mistake and broke cover. Just because Regan was a scumbag didn't mean it was a bad strategy. \n\nOne little slip up, Richard Bertram, and I'm on you like a bad tattoo.\n\nThree, she would talk herself out of being scared of anything. It would be \"It's hooey, and talk to my lawyers.\" Best case, that was the same as number two. Worst case, she didn't even mention it to her husband, and that left me exactly where I was now.\n\n\"I ha-have to think.\"\n\n\"That's okay. I didn't expect anything more than that.\" I hadn't. Tiny acorns. \"Here's my card. Call me either way once you've thought it through. But Rachel, time is short and these people don't play around.\"\n\nI drove away. In the rearview mirror I saw the figure in jeans and a bright sweater standing in the doorway watching me depart. Somehow, she didn't look so preppily chipper anymore.\n\n<center>\u2022 \u2022 \u2022</center>\n\nI cradled the phone against my ear and took a moment to survey the ship. She'd been repainted since the picture Jess had shown me was taken. She was still the LL Namibian, but the white-over-red hull had given way to black-over-red, and the words \"Hong Kong\" on the stern below her name were gone, replaced with \"Panama.\"\n\nI was used to the monster container ships that slid by on their way to Jersey City or Staten Island. Their large, smooth decks would be piled so high with shipping containers that it seemed inconceivable that they didn't capsize. The Namibian evoked a different era. \n\nFor one thing, despite the fact that she loomed above me, she was small. Four hundred some-odd feet was small compared to ships that were as long as the Empire State Building was tall. A check of that site Jess had found put her at just under ten thousand tons, small even by the standards of a company who specialized in small freighters. \n\nFor another, her bridge and other non-cargo components were amidships, and both fore and aft decks were cluttered with crane towers and the large wings of hold covers standing open. \n\n\"No, there's no room on those decks for containers,\" I answered into the phone.\n\n\"Then I don't know,\" said Detective Murray. \"Way I hear it, women trafficked usually come in on fraudulent visas thinking they've got a legitimate job waiting, and straight-up people smuggling is usually across a land border or in a container. Makes it easy to drop it onto the back of a truck and slide past officials as cargo. No big boxes?\"\n\n\"Just drums, those fifty-five gallon ones, and they're going on the boat, not off.\"\n\n\"Damn if I know, then,\" Murray said, \"unless they're smuggling American girls out for some foreign fuck.\"\n\n\"I doubt he'd want them in the condition they'd be after living in an oil drum for a month.\"\n\n\"Yeah.\"\n\nSo how did this ship figure in? Maybe its presence was innocent, but I had the same sense Jess had had&nbsp;... it wasn't. Regan throws a party to welcome a new client as an owner of a modern-day plantation. Said owner's ship makes an odd stop at a facility where it has no business being. Said owner flies up for a personal visit to what has to be the smallest vessel in his fleet. What's wrong with this picture?\n\nI needed to check those drums just to be sure. Then I needed to poke my nose in other places where it didn't belong.\n\nI had a plan, albeit not a great one. Some of those fake IDs had come courtesy of judicious work with a laser printer capable of writing on plastic cards. The one I was carrying had first seen the light of day when I'd been looking into a worker's comp issue that took me inside the Employees Only section of the PATH. I'd sweated bullets when I'd presented it back then, but it had passed muster without a second glance and had languished in my safe ever since. There are a number of police forces you find around New York. The NYPD was one of them. Another was the PAPD, the Port Authority Police Department, and I was with the CIB, the investigation bureau. The card said so.\n\n\"That says 'Port Authority of New York and New Jersey.' This is Connecticut.\"\n\n\"That garbage is washing up on beaches both sides of the Sound, so we cooperate. We both only got so many men and there's a million places they need to be. I drew this lovely field trip.\" \n\nI held up a clear plastic gallon bag with a fragment of cardboard in it. The bottom of \"otatoes\" was visible along with a Sharpie scrawl of \"L Nambian\" with what looked like the horizontal stroke of another \"L\" coming in from the tear. The fragment was torn from something dug out of a restaurant dumpster. The Sharpie was in my glove compartment.\n\n\"Nambian,\" I observed. \"Seems like someone doesn't know their countries.\"\n\n\"We dispose of our garbage exactly as we should,\" the first mate of the Namibian protested.\n\n\"Look, we both know what happened here. You offloaded refuse when you got into port. Some hauler decided that he could save himself fuel and landfill fees if he just partook of a dark night out in open waters. Currents did the rest. You know it. I know it. But I gotta see your records anyway. If they're in order, I'm outta here, and it becomes the next person's problem.\"\n\nGrumbling, he led me from the head of the gangway toward the bridge structure. The document in question was produced.\n\n\"Got a copier?\"\n\n\"No, and I don't think I should let you&mdash;\"\n\n\"For Christ's sake! It's a garbage report! Never mind the copier.\" I pulled out my phone and snapped a picture before he could do anything. I handed the paper back to him. \"It's dated, signed, and has a hauler's name. That's all I needed. Thanks for your time.\"\n\nAs we made our way down to the main deck and across it, I glanced over at the drums. \"I'm here, so I'll ask. What's your cargo?\"\n\n\"That's detergent. We've got some food, some bulk cosmetics.\"\n\n\"Manifest?\" I saw the annoyance level start to climb and backed down. \"Hell, never mind. No need to make work for anybody.\" He settled.\n\nAs I made my way across the pier, I wandered close enough to eyeball one of the pallets. Plastic drums, the kind with the non-removable head. There were no visible air holes. If there were people inside them, they weren't going to survive the journey. Of course, these drums weren't all the drums being loaded. The open hold had been mostly filled. Still, it didn't feel right that they'd be individually packing human cargo. \n\nMy peripheral vision caught the mate watching me from the deck, so I turned and headed for my car. I drove into town, looking for a diner where I could kill some time. I pulled out my phone and used the calculator. The results told me I needed to get back on board. \n\nThe story about dumped garbage had originally been nothing more than something to get me aboard so I could look around. I'd originally intended to demand to see the galley and the garbage-storage facilities as an excuse for a tour. \n\nOne look at the paper had changed that. I didn't know how many crew it took to run the ship. Container ships ran with crews that seemed ridiculously small for their size, but I supposed older-style freighters needed more. Maybe twenty, twenty-five? \n\nThe first thing that leapt out from my perusal of the paperwork hadn't been company names or dates or who signed what. It had been a number: 23,290&nbsp;... as in 23,290 gallons of black water pumped. I was no math savant, but it didn't take one to wonder just how twenty-five-ish crew were generating a thousand gallons of toilet water a day between Tangier and New Haven. Hell, how did a ship designed for a crew that size even have the capacity to hold that much shit-water?\n\nI googled \"how much garbage cruise ship\" and punched the numbers from the document for solid waste, gray water, and black water. Assuming whoever was aboard the Namibian was as profligate as a cruise passenger, we were talking a hundred twenty-five people. And cruise ship passengers were conspicuous consumers, so it was probably more.\n\nPut that together with something else. The mate's shirt wasn't loose enough to stop the pistol underneath from printing.\n\nI needed to revise my theory. See, I'd been trying to find some way to explain the stop at United Riverhead. When I thought about Lindqvist being a new client of Regan's, it occurred to me that ships needed crews. Nobody said those crews needed to be entirely voluntary. The British Navy had worked on that principle for two hundred years.\n\nI'd assumed Lindqvist Logistik AB decided to cut costs the same way Beck Resources had. The Namibian meets up with another ship at United Riverhead. Maybe it's a passing container ship taking advantage of the deep-water channel; maybe it's a tanker moored there with a dummied hold that was really a holding pen. A lighter crosses between them and a shipping company's labor costs plummet.\n\nBut loading up on pressed crew in Long Island Sound didn't explain an Atlantic crossing with a boat full of people. The stop hadn't been a pickup; it had been a delivery. A Hong Kong flag of convenience changed to a Panamanian one. Larry Beck had said, \"They want to push into Latin America.\"",
        "Regan and Bertram didn't have a new client. They had a new partner.\n\n<center>\u2022 \u2022 \u2022</center>\n\nThe PAPD credentials weren't going to get me aboard a second time. Especially not to roam around unescorted like I wanted. Even if I thought I could shimmy along one of the mooring hawsers, they passed through openings too small to fit my body. I wasn't Felix the Cat&nbsp;... I wasn't going to reach into my Bag of Tricks and pull out an invisibility device or a jetpack.\n\nThat left the gangplank on the starboard side of the ship and a scaffold dangling from two davits on the stern&nbsp;... probably a relic of painting the new registry. The scaffold was a good eight feet off the water. Even if I could find some kind of boat unlocked around the harbor, I didn't fancy trying to snag the platform over my head and winching it up silently in the dark, so the gangplank it was going to be.\n\nI called Jess to kill time. \"I'm going aboard after it gets dark.\"\n\n\"That's a stupid move, Harry.\" \n\n\"Maybe, but she's only in port for another day, and I need to see more.\"\n\n\"Call the police.\"\n\n\"And tell them that there's this ship that produces too much garbage, so we need a SWAT team?\"\n\nShe was silent, which I took as a victory for my sarcasm.\n\n\"Why did you let Beck go?\" The subject change caught me off guard. \n\n\"Because it didn't matter what I did. He was already a dead man. Once Gibson tumbled to his lies, his only hope was to go quickly and he didn't. He waited until Nikki could get clear, and that doomed him and her. Mitchell knew about Beck's cabin.\"\n\nShe processed that. \"Because he got there so fast.\"\n\n\"Yeah.\"\n\n\"Were they tracking you?\"\n\n\"Maybe, maybe not. Maybe Mitchell was in the garage that day putting something on my car, and threatening me was just an added bonus. He didn't spend a lot of effort on it and let me go quickly, which seemed uncharacteristic. \n\n\"But I think they were watching Nikki. If we knew about Beck and Nikki, they certainly did, and Regan definitely had eyes on people. He as much as told me he had other irons in the fire. I'd be surprised if he didn't know quite a bit about each of those men, including a cabin upstate for Beck.\n\n\"But I think there was one thing Regan didn't know and another thing he misjudged. He didn't know Beck had an apartment in that building. William is a good doorman. He doesn't let strangers in, so Regan's watcher had to do it from outside. He thought Beck was staying with Nikki when he went there. And because he didn't know about that apartment, he didn't tell Mitchell to find a way in. If he had, he'd have found the Albany tickets, and Mitchell would have been upstate long before.\"\n\n\"What was it he misjudged?\"\n\n\"What kind of man Beck was. Regan judged him by his own standard, and Regan's the type that would abandon a woman in a heartbeat the second she became inconvenient, let alone a threat. He figured Beck was long gone, probably abroad. So, he had your building watched just on the off chance Nikki would fly to meet him and he could get a destination. I bet anything a car pulled out after her, and someone in it was on the phone to Mitchell. I'd also bet that the reason Mitchell got to Beck's after me wasn't just because I drove quickly. I bet Mitchell assumed she was going to JFK or LaGuardia and headed that way until someone in that car called him and said, 'She's not going to Queens, dude.'\"\n\n\"If Beck had run, he'd have made it.\"\n\n\"Yeah, at least until Mitchell could buy a plane ticket.\" Jess was silent. \"Hey, Jess?\"\n\n\"What?\"\n\n\"Why the question about Beck?\"\n\n\"I like to know what makes you tick, Harry.\"\n\n\"Those gingersnaps you hoard and won't let me steal,\" I said teasingly. She didn't rise to bait. Oh well, I'm not a funny guy. \"Hey, can you get me the name of the ship's captain?\"\n\nI called Murray and left a message because that guy never answered his phone when I called. I added a specific timeframe. Then I turned off my phone because I didn't think I particularly wanted to hear what he'd say when he got the message.\n\nI went back to killing time and thinking about getting aboard the Namibian. Then I took a walk along the wharf, being careful to stay out of sight of the ship. Finally, I went to a hardware store and a sex shop.\n\n<center>\u2022 \u2022 \u2022</center>\n\n\"Where the hell is Captain Karlsson?\" I demanded of the unshaven fellow sitting at the head of the gangplank. \"Lindqvist wants to know why the hell he didn't get a call about some inspector coming aboard today.\"\n\n\"Who are you?\"\n\n\"The guy Lindqvist sent to ask why the hell he didn't get a phone call. Where's Karlsson?\"\n\nHe regarded me with suspicion, but he'd only make out irritation on my face in the chiaroscuro created by a dark night broken by the pinpoint pools of light from harsh ship and pier fixtures. He half-turned and drew the radio from his belt. That was his mistake. He saw the motion out of his peripheral vision and started to turn back toward me, but it didn't matter.\n\nI wasn't wearing socks anymore. That was because I'd put one inside the other, then filled them with eighty half-inch washers I'd bought. They made a nice sap. Even a forearm raised reflexively wasn't enough to stop it whipping over. I wasn't an expert, but I got it pretty much right. He slumped to the deck. By the time he shook it off, his wrists were behind him in cuffs and a ball gag was firmly in his mouth. \n\nAccording to his driver's license, his name was Mario. That didn't sound very Swedish to me, but I guess slave dealers picked up crew where they could. Come to think of it, the first mate's accent had been American.\n\nMario's eyes crossed as he stared up the maw of the Sig. It seemed reasonable that would be the first thing to get his attention; I bet it looked huge from three inches away. A slight tug with my left hand drew his focus to his neck.\n\n\"Feel that? It's an industrial cable tie. You know, like one of those little zip ties, only a lot bigger. They only ratchet one way, and it's already tight enough that it's cutting hard into your skin.\" I showed him my end where I'd jury-rigged using a vise-grip and a piece of strapping around my wrist. \"You jerk to get away, this tightens and doesn't loosen, and you choke out your last minutes. Now, let's go. I want to see where you keep them, and you're gonna show me.\"\n\nWe went.\n\nThe aft lower hold was a scene from a nightmare. Four long rows of cubicles had been constructed that ran the length of it. Two sides of each were heavy sheets of metal, welded top and bottom to the decks. The sides that faced the walkways were barred with poles of metal set close together and reinforced with lateral supports every foot or so. Each cell had a door that sported a conspicuous lock. \n\nHeavy rings were welded onto the solid walls. Each cell had a small opening in the deck&nbsp;... slit toilets. The smell was an eye-watering chlorine disinfectant that couldn't quite hide a hint of sewage. Moisture coated every surface, probably the residue from when the fire hoses at each end were employed to sweep out the filth. It was no different conceptually from the etchings of eighteenth-century slave ships with their manacled lines of prisoners. \n\nThe walls were covered in some rust-inhibiting primer, defaced with the scratching of the inhabitants: names, hash marks counting days, some in scripts I didn't recognize. I stared at the nearest and revised my theories once more. \n\nAlbert Ndadaye \u00e9tait l\u00e0 2014\n\nSeven years ago. Anders Lindqvist wasn't a new partner. Anders Lindqvist had been a partner all along.\n\nThe overhead wasn't even six and a half feet above the deck. It made the place even more claustrophobic. The hold above it probably looked full-sized. I counted. Four rows of five. Each with six sets of rings. A hundred and twenty prisoners in twenty 7'\u00d710' cells. Less than twelve square feet to live a month of your life, not subtracting space for the toilet slit.\n\nI'd seen enough and it was time to go. Then I heard a noise. Not a feet-pounding-toward-me noise, a faint rustle from farther aft. \n\nThe last cage on the starboard side wasn't empty. Two pairs of dark brown eyes stared at me in utter terror. Or maybe it was at the gun and the handcuffed-and-gagged man. \n\nI wasn't good with ages on Oriental faces, but I'd have guessed both were in their late teens or early twenties. Both wore shapeless shifts and clutched cheap, woolen blankets as if they would shield them. I jerked Mario's leash.\n\n\"Still some to sell, huh?\" He made some gurgling noise. \"Just these two?\" He made some more.\n\n\"More,\" one of the women said. She held up fingers: both hands, closed them, four fingers. Then she gestured to the side. Looking around, I realized some of the nearby cages still had thin yoga mats and the same blankets strewn in them. I counted. The fourteen she'd just signaled plus these two.\n\n\"No sell yet. Sex.\" She pointed up. \n\nOn-board crew entertainment, she meant. A perk of the job until they were traded in for the next shipment.\n\n\"Some go off ship. They come for us later.\" She waved at herself and her companion. Her tone didn't spell dread. It spelled resignation. It had been her life for the last month. She was used to it, and that made my gut burn.\n\n\"Where's the key, asshole?\" I asked Mario. He shook his head and I rammed the barrel of the Sig into the hollow of his jaw. That got a cheep of fear from the quiet woman. \"The key!\" His eyes said I better not take those cuffs off, but he gestured his chin upward.\n\n\"They key's with someone upstairs?\" He nodded. I looked over at the talking woman, and she gave a grimace in confirmation.\n\n\"Leader,\" she said.\n\nAs much as I wanted to charge up there, find the captain or first mate or whoever was in charge right now and beat the key out of them, I knew that was stupid. If it took fourteen women to entertain them, it was more men than I could handle. \n\nI was deep inside a box made of metal. There'd be no cell signal down here. I'd have to call the police from on deck. Hopefully, I could stay undetected that long.\n\nNo.\n\n\"Mario, where the fuck are you? We got an intruder.\" The voice sputtered out of the belt radio.\n\n\"Shitter,\" I muttered into it, hoping my voice sounded roughly like Mario's.\n\nNo. There was a pregnant pause.\n\n\"Whoever the fuck you are, you're not getting off the boat.\"\n\n\"Too late, asshole. This rope runs right down by that little hut there, and that's where my car is.\" The bow hawser was, indeed, made fast down by a little equipment shack. Of course, I'd moved to the stern part of the stern hold when I heard the noise.\n\n\"I'll get help,\" I said to the two women, already shoving Mario in front of me. He tried to resist, so I jerked hard on the cable tie. He started gagging for real. He wasn't going to suffocate, I judged, not if he calmed down and took slow breaths. I undid the Velcroed strap from my wrist and wrapped it around a cell bar. With his hands behind him, that would take a moment. Then I went up the aft companionway as quickly and silently as I could.\n\nIf this were an action movie, the disembarkation would go something like this. There'd be a cat-and-mouse game through the hold, across gangways with maybe a gut-clenching tiptoe across a gantry, all dimly lit by some ill-explained pervasive light source. Silence and stalking until&nbsp;... suddenly&nbsp;... shots would ricochet everywhere. \n\nThe hero would race up from the depths, probably being surprised by the cook lunging out of the galley. There'd be some bullet-thwarting power of thin aluminum and hurled kitchen equipment. It would somehow involve a giant butcher knife or a cleaver.\n\nIn the next-to-last moment, there'd be a chase across the main deck with numerous crew members doing unexplained things high up in the rigging. They'd plummet to their deaths cinematically when shot by the protagonist before he plunged over the side in a graceful swan dive. The underwater shot would show bullet traces ripping downward from the surface but never reaching their target.\n\nFinally, the incredibly-not-explosive fuel tanks of the ships would explode, and we'd wait while the hero pulled himself up onto the dock and strode toward the camera, backlit by orange gouts of flame reaching up stories-high.\n\nMine was a lot more mundane, which is not to say I wasn't borderline pissing my pants.\n\nWhoever I'd talked to on the radio wasn't stupid. I'm sure men did go to the bow to check that I wasn't monkeying my way down the mooring line. But as I ascended the upper hold's after companionway, flashlights stabbed down the forward one, accompanied by the clatter of feet on its metal stairs. I heard at least two sets of footsteps drumming across the deck above.\n\nI got to the hatch before those footsteps and waited, tucking myself in the shadow to the side. It was jerked open and the first man stepped over the raised sill of the weather-tight door, flashlight in one hand, gun in the other. \n\nOne thousand lumens from my Maglite&mdash;hardware shops can be such toy stores&mdash;snapping on in his eyes as he turned my way got the expected reaction. He reared back, causing his companion to jostle into him from behind. I slammed the muzzle of my pistol into his throat underneath the arm he'd thrown up to shield his eyes and pushed. He tripped going backward over that sill, crashing into his companion. \n\nAnd then I was in the doorway. Guy Number One was no longer a threat. He was lying on the deck trying to breathe. Guy Number Two fought to recover his balance and bring up his gun, but he stopped at my terse \"No,\" reinforced by my gun pointing unwaveringly on his chest.\n\nA shout came from across the hold. A bullet spanged off metal in my general vicinity, then another. I think Guy Number Two thought I might jerk to return fire and give him an opening. He started to make a move. I squeezed the trigger and put one right above his shoulder. I'm sure he heard the whistle as it sped past his ear, given his flinch. It was roughly out to sea, and I prayed there was nothing solid in line with that for a mile or so. He froze and I stepped out on deck. \n\nMy heart was pounding a mile a minute, but a hundred-foot pistol shot, in the dark at a dark target, who's at a different elevation, and you're moving to catch up with him, and adrenaline is pumping into your system&nbsp;... those fuckers at the front of the hold would have to be damn lucky.\n\n\"Turn.\" I frog-marched Guy Number Two to the rail. Then I clubbed him with the Maglite enough to rattle his brains, and put a shoulder into him. He went over in a screaming tangle of limbs. I suppose he might have broken his neck hitting the water, but the Namibian actually didn't have that much freeboard. \n\nOkay&nbsp;... I didn't consider that; I just didn't really care. \n\nWhile he was bellowing, I slithered down to the painting scaffold dangling off the stern. My plan prior to discovery had been to use the rope pulleys to lower it the rest of the way and slide silently into the water. \n\nMy plan post-discovery was to dangle from the lip to shorten the drop to the water. \n\nThe screech of a bullet ricocheting off the hull mere inches from my head threw all plans out the window, and I went over the side of the scaffold in a lunge that bore no resemblance to a graceful swan dive.\n\nMy thought in that stretched half-second before I hit the water was: how the fuck were they shooting at me back there?\n\nWhen I pulled myself onto a small floating dock a bit farther away from cars and safety, I was glad there were no gouts of flame from the Namibian adding to the illumination. The harsh, industrial lights that dotted the pier cast deep shadows. I slid from one to another, keeping an eye to make sure none of the busy-bee lights fanning out from the ship were getting close. They were heading toward parked cars and pier exits. I'd lost the Maglite in the plunge, but I still had the&nbsp;.45 I'd jammed into a pocket so I could swim. \n\nVery cold turned to bitterly freezing as the air hit me, and I moved quickly before my coordination went. My dad's voice when teaching me to sail the little Hunter 15 he bought used. \"Forty degrees, forty minutes. That's until you go unconscious and drown, Harry. Five and you have trouble swimming because your muscle control starts to go.\" The water I'd just left had been ten degrees warmer than that, but the air was at least ten degrees colder.\n\nI slithered over the rail of the small runabout that was moored there and cast off. I was trusting the offshore breeze of night to drift me away. Then I stripped naked and grabbed the heavy blanket I'd stashed there on my earlier trip. The shakes were starting to hit me as I wrapped myself tightly in it and popped a couple of hand-warmer packets inside. I tucked under the console as much as I could and pulled out my phone.\n\nThe screen lit and I breathed a sigh of relief. I wouldn't have to write a strongly worded letter to the makers of ziplock bags.\n\n\"Morgan, what the&mdash;\"\n\n\"Shut up a moment, Murray. There's no time.\" \n\nAnd there was the value of the man&nbsp;... he did. He took in everything I had to say in silence. He said, \"I'll get on the horn to New Haven now,\" and hung up.\n\nThen, because there were sixteen young women who might be spirited away&mdash;or worse, killed and dumped to cover up&mdash;I made another call to add urgency to things. It was a prepaid phone and would go over the rail when I was done so it wasn't traced to me.\n\n\"911. What's your emergency?\"\n\n\"There are gunshots down at the harbor. Lots of them. They're coming from the Namibian that's tied up at&nbsp;...\"\n\nI spent the next half hour slowly warming back up. Despite the gradually growing distance from the shore, I saw when the berries and cherries came screeching in but I couldn't make out what went down. \n\nI took note a minute later when another vehicle started up a hundred yards away. Moving slowly, it slid out of the commercial area. As it passed under one of the light poles, I saw it was a large black SUV, something the size of a Yukon or an Expedition.\n\nSuddenly I knew where that bullet when I was below the stern had come from. I also realized how the voice on the radio knew that there was an intruder aboard. He'd received a tip off.\n\nThere'd been a black Escalade parked next to the Bentley Mulsanne at Regan's house. Somehow, Mitchell seemed like a black-Escalade kind of guy.\n\nI called the two women I cared about who were involved in this and told them to get to a hotel for safety until this was over. \n\nThen I huddled until I had drifted away from the mess, praying the engine would start when I needed it and I wouldn't have to use the radio to explain a naked man in a stolen boat.\n\n<center>\u2022 \u2022 \u2022</center>\n\nI didn't have a phone, so the drive back to New York allowed me time to think things through. I went to the office first. I had changes of clothes there, and that's where my gun-cleaning stuff was. Saltwater residue and firearms were not a good combination. \n\nJess was there. Apparently, \"stay in the hotel until it's clear\" went in one ear and out the other. The defiant look as I'd come in the door said it all. I'd sighed and dumped it into the mental trash bin with all the other changes around the office during the last year.\n\n\"Detective Murray's called twice. Says he can't get you on your cell. I'm guessing you got rid of it.\" She didn't wait for confirmation. \"Regan called, wouldn't leave a message except for you to call him back. Lexie called.\"\n\nA laugh exploded out of me. \"That's just perfect!\" \n\n\"You should probably call her, Harry.\"\n\nI stared at her in amazement.\n\n\"She's not happy about how things ended.\" As I started to protest, she hurried on. \"I'm not saying you were wrong. You weren't. But it wouldn't cost you anything to let her apologize.\"",
        "As I continued to gape at her, she finally had the decency to flush. \"I didn't like her in your life. As long as she's out of it&nbsp;... well&nbsp;... I don't have anything against her personally.\" \n\nI'll never understand women.\n\n\"Oh, and Sydney wants to know when you're back. She's at the hotel.\" The tone that colored \"Sydney\" was reminiscent of the one that used to color \"Lexie.\"\n\nI gave up and went for a shower and clean clothes. Then I brought Jess up to date. If I was expecting to be told I was a hero, I was sorely mistaken.\n\n\"You're a goddamn idiot!\"\n\nComing from someone who wouldn't stay in the anonymity of a hotel despite a killer roaming the streets, that was rich.\n\nThe phone rang.\n\n\"Yeah, he's here,\" Jess said. \"Finally.\"\n\n\"They got the girls,\" Murray told me when I picked up the receiver. \"They got some of the crew. The captain wasn't aboard, but they got most, including the first mate. Oh&nbsp;... also including one attached to a cage with a sex gag in his mouth.\" That actually got a chuckle out of him. \"You may leave a trail of bodies, but you're entertaining; I'll give you that.\"\n\nI let out a sigh of relief. \"Do they have any idea where the captain is?\"\n\n\"One the crew started singing immediately. The captain went off to meet the boss. And the answer to your next question is, 'He's in the wind.'\"\n\n\"Lindqvist?\"\n\n\"Yeah. New Haven won't do anything without evidence, but I tried the Chatwal. He hadn't checked out, but he wasn't there. I'm guessing a call from the ship to the captain, and the two of them booked.\"\n\nI sighed a Murray-worthy sigh.\n\n\"Hey!\" he said. \"Sixteen women rescued from the life. You can count that as a win. You done good.\" Another chuckle. \"And no more bodies while doing it. What a bonus!\"\n\n<center>\u2022 \u2022 \u2022</center>\n\nI was worried about being followed, so even though I knew which hotel Sydney was staying in, I didn't go there directly. I headed home to dump the salt-stiff clothes and pick up replacements for the office.\n\nI came up to the fourth floor of my building and stopped.\n\nTwo years ago, right after the Amber implosion, I'd been threatened by a husband I photographed in the back seat of his car with a woman&nbsp;... a woman not his wife. He'd sworn in all sincerity that \"One of these days, when you don't expect it, I'm going to fuck you up so bad you'll wish you was dead.\" So far, he hadn't, but some precautions had become a habit. One was carrying most of the time instead of occasionally.\n\nA second was using telltales on my door and windows, innocuous pieces of lint that would fall unnoticed if they were opened. But every once in a while, a draft or the super knocking on my door would disturb one, so I had something else.\n\nI couldn't afford a security service in those early months after she took everything. Frankly, I couldn't see any point. They'd just dispatch a guy who'd arrive ten minutes after I was a cripple. I went with field-expedient methods. \n\nA $29.99 motion sensor from Home Depot, a $7 relay from Amazon, and some wire I'd taken from a construction demolition dumpster. After epoxying the contraption into the ceiling fixture&mdash;who looks at those?&mdash;and swearing up a blue streak for two hours trying to fish wire in the ceiling and down the wall, I had something that wouldn't pass an electrical inspection, but I didn't care.\n\nIf you moved in my apartment, the motion sensor triggered the relay. That relay cut the power to the wall outlet in the hall outside my door. I'd dialed the reset on it up to the maximum of an hour. Another few bucks at Home Depot for some spackle and paint, and all traces inside my abode were gone.\n\nThe nightlight I had plugged into that outlet was off. \n\nBurned out? \n\nSome atavistic sense was screaming, \"No!\" I was learning to listen to those warnings. I backed down the stairs. Twenty bucks to Mr. Kim at the corner bodega let me sit on a stool in his place and watch my door. It took an hour and a half of boredom warring with tension. Then I saw a truck-sized shape come out the door and turn down the block. \n\nIt occurred to me that my parking garage was in that direction. Driving my car didn't seem advisable suddenly. I wondered if Murray had contacts in the bomb squad.\n\nI called Jess. \"Regan's after me. He may go for everyone associated with this case.\"\n\n\"I'll go to the hotel tonight.\" Quiet acceptance, no argument. Sensible. \"He called again and demanded to know where you were.\"\n\n\"Yeah.\"\n\nI called Sydney. Mitchell wasn't following me because he'd been waiting ahead of me. \"I'll be over.\"\n\nShe let me into her room wearing a thick hotel robe. She took in my expression.\n\n\"You're tense. What is it?\"\n\n\"Remember what I said about Regan not wanting everyone to know about millions in dirty money?\" She nodded. \"Mitchell was waiting at my place.\"\n\nHer concern turned to outright fear. I hadn't told her what her customers at the party did for a living, but I'd given her some of what happened to Nikki when we'd argued about her leaving. She'd met Mitchell; she believed me. The same fate could be hers if Mitchell came for her. Damn right she was scared.\n\n\"What do we do?\"\n\n\"You hide. I stop Mitchell.\"\n\n\"How?\"\n\n\"I don't know yet. I have this idea that Regan can be got at, and then he'll call Mitchell off.\"\n\nShe didn't believe that. I could tell. \"We need to run, Harry! There's got to be some way to find that money Larry hid. We take that, what you have saved, and what I have saved, and we go to Europe&nbsp;... Mallorca or maybe the Algarve.\"\n\nI didn't tell her that abroad was no good, that Bertram and Lindqvist had resources abroad and what I knew was big enough for them to spend them. \n\nShe stared at me hopefully. \"Can we get Larry's computer? Maybe your cop friend would let us look at it?\"\n\n\"Maybe he would, but I don't think it will help. I think that money's gone.\"\n\nIt wasn't a no and she took it as a yes. I couldn't tell her that Europe wasn't safe because then I'd have to tell her the rest, and I'd already decided to spare her that. And I didn't tell her that it was all moot because my conscience wouldn't let me run.\n\nShe pulled herself together and smiled. I guess that was an elementary ability in her former profession, to smile convincingly no matter what.\n\n\"But you're tense. I know just what to do about that.\"\n\nShe undid the knot on the robe and let it fall to the floor. There was nothing underneath but Sydney. Full breasts that somehow still defied gravity, a narrow waist leading the eye down past hips made to cradle you, taking the eye to the dark triangle below. I felt myself respond.\n\n\"Come on. I guarantee you're going to be so relaxed by the time I'm done with you.\"\n\nShe drew me to the bed and then undressed me, refusing to let me help. Then she took a scarf. I pulled back as she made to loop it around my head.\n\n\"Relax, Harry. Just a blindfold. We can play tie-up games some other time. This is only a little sensory deprivation. I want you to concentrate on how things feel.\" \n\nHer expression wasn't aggressive or even teasing. I let her tie it around my eyes.\n\n\"Lie on your stomach. I'm going to get some oil and give you a back rub.\" \n\nShe was patient and thorough. Occasionally she'd make a quiet comment. \"Tight here,\" as she worked between my shoulder blades. I wanted to groan in pleasure. She pushed lower to the small of my back and down over my butt.\n\n\"Are you ticklish on your feet?\"\n\n\"No\" and she continued down my legs to knead the calves looser and then pressed deeply into my arches. It felt like tension was being squeegeed from the top of my body down until it dripped out my toes.\n\n\"Still awake?\"\n\nI murmured assent.\n\n\"Then roll over. I'm going to put you to sleep.\"\n\n\"Hmm?\"\n\n\"I'm going to give you a very slow blowjob, and I want you to just let yourself fall asleep after.\"\n\n<center>\u2022 \u2022 \u2022</center>\n\nThe buzz of my phone woke me. We'd changed the rollover on the office phone. It went from there to my phone now, not to Jess's. I didn't want her in the middle any more than she already was. It spoke volumes about the nerves under that calm exterior that she didn't argue even a little bit. Now, I was pissed as hell that someone had dragged me out of some great catch-up sleep.\n\n\"You have caused us a lot of problems.\"\n\nThe prosody told me the speaker hailed either from deep in the heart of Minnesota or across the Atlantic. I'd only heard it say a dozen sentences or so previously, but I knew which one of those two I'd put my money on.\n\n\"I'm trying,\" I said, coming alert.\n\n\"I would like you to stop. What will it take to make that happen?\"\n\nLindqvist waited a moment, and then went on when I didn't say anything.\n\n\"Right now, they are merely problems. It is unfortunate what the crew of that ship was doing under the nose of Lindqvist Logistik's management team. There will certainly be a very public in-house investigation, but the responsibility will be placed squarely where it belongs: on the captain's head.\"\n\n\"And I'm guessing that the captain is already long gone with a sizable addition to his bank account?\"\n\n\"Precisely. Not only him&nbsp;... the first mate knows that if he insists that story is true, not only will all his legal requirements be taken care of, but a bonus will go to his family, with another substantial payment awaiting his eventual parole. Which leaves us with you to deal with. My partners and I would be interested in knowing what that would require.\"\n\n\"Partners? As in more than one?\"\n\nThere was a hesitation, then he said easily, \"I am informed by one of our employees that you know about Richard Bertram.\"\n\n\"Yeah. Who's the other one?\"\n\n\"I am pretty sure you know about Jordan Regan.\"\n\nHe was smooth, but I'd heard that hesitation. \n\n\"Nice try, but Regan's not a partner. I'm thinking he's the lead salesman, the go-to guy for rustling up clients. But he's not in the C-suite with you guys.\"\n\n\"And what do you base that assertion upon?\"\n\nI'd done a lot of thinking on that drive home, and a couple of things that didn't add up one way, added up when figured another.\n\n\"He was too tense about that money. What was that for, anyway? Paying off some police or government officials in your Latin American push?\"\n\nIt was his turn not to answer, so, like him, I went on.\n\n\"Whatever. Regan was too tense, and I figure that's because it wasn't his money to lose. See, if he was a partner, why wouldn't he just say, 'Hey, Richard, we got a rat somewhere. Let's smoke him out'? But instead, he's giving me all kinds of orders designed to keep it from Bertram.\"\n\n\"That is hardly&mdash;\"\n\n\"I'm not done. Regan described Everett, Beck, and you as customers. Now, maybe that's because he was trying to cover for you. But the same logic that applied to dealing with Bertram would have applied to you, right? No, a better explanation is that he was out of the loop on who you were. Compartmentalization. Bertram's his contact upward.\n\n\"It took me a while to get there, but the final touch was Gibson. Bertram was out of town, but Gibson didn't go to Regan. He knew about him; that much was clear from our conversation. But it's like Regan was just another cog in the organization, and not involved in the security side&nbsp;... which a partner would be. So, who's your other partner?\"\n\nThe silence dragged on. I didn't expect him to tell me. He didn't disappoint.\n\n\"You are an intelligent man, and clearly a man of action. So, let me add one more alternative to the mixture. Come work for me. I guarantee you will be rich beyond your dreams in a very short amount of time.\"\n\n\"Hmm, how much do you match on a 401(k)?\"\n\nHe chuckled. \"No, I suspected not. So, let me make it clear. You will not find a way to link what was going on aboard the Namibian to me or my partners. Your first option is that we negotiate a reasonable settlement for you to stop. If you do not, then I think you will find that my partners are rather effective. I, of course, am beyond the reach of your law already. No court will extradite me for some speculative charges in the face of the first mate's story and the captain's obvious guilt. In fact, I would be quite surprised if your district attorneys even tried.\"\n\nFuck! I bet he was on a private plane within an hour after the Namibian was raided. And people as rich as he have fleets of lawyers to make sure predictions like that come true.\n\nI debated the offer he made&nbsp;... not debated taking a payoff to be quiet, but agreeing to buy time and then nailing his ass anyway. But I knew I couldn't carry it off.\n\n\"Sorry, no dice.\"\n\nHe laughed. \"If you had taken the offer, I would have known it was a trap and told my associates to go ahead. I have some sense of you, Mr. Morgan. No, I think it is best we just leave it with the truth, which is a threat. Not one to you only and, therefore, perhaps effective. \n\n\"Drop this or they will kill you and anyone they suspect you might have talked to. That includes the girls from the party, your staff, even those police officers. Think about that. Good night.\" With that, he hung up.\n\n<center>\u2022 \u2022 \u2022</center>\n\nI still hadn't cleaned my gun. I trundled back to the office. Jess was there again. I suppressed my annoyance, but I guess she wasn't the type to sit around a hotel room all day.\n\n\"I forgot to say it, but excellent catch on the Namibian's stop off Long Island, by the way. That proved key.\"\n\nShe pinked.\n\nI told her about the call from Lindqvist and my conjectures on Regan's status. Then she got on her computer and started trying to find any hint of who Bertram might be associated with. Lindqvist had said \"they\" when talking about his stateside partners.\n\n\"Do you have any ideas, even wild ones?\" she asked after a futile thirty minutes.\n\n\"Coco.\"\n\nShe looked startled, then thoughtful. \"The women like Kimi are high class, not just people grabbed off the streets,\" she said. \"They're recruited and brought in thinking they have regular jobs. A woman's presence would be reassuring in that.\"\n\nI nodded. My thinking had gone the same way. \"And unlike the other girls, she doesn't seem to be working out of Eroticos or Gallerie. If we can find her, we might get somewhere.\"\n\n\"How do we do that?\"\n\n\"We get to Regan. He's vulnerable right now because he screwed up and his bosses know it.\"\n\nShe considered it for a long time while I finished cleaning and oiling the&nbsp;.45 that had gone in the drink. I moved on to the 9mm that either sat under my desk or in an ankle holster, once again fretting that the Centennial from my dad was still sitting in police lockup. \n\nFinally, I pulled the little Ruger LC9 off the Tac Mag under Jess's desk. I was surprised to find it was over-oiled. I looked at her.\n\n\"I took it to the range,\" she said, somewhat defensively. \"I was nervous about it, but you said I needed to think in terms of 'pull the trigger or die.'\"\n\n\"I'm glad you did,\" I said sincerely. \"I was meaning to take you, but it's been hectic.\"\n\n\"The guy who showed me how to use it said it's been modified.\"\n\n\"I had the thumb safety removed. Too easy to forget in the moment and that could mean you're dead. Anyway, a little too much oil. Let me show you.\"\n\n\"I think you're right,\" she said as she watched how I serviced the pistol. \"Regan's our way in.\"\n\n<center>\u2022 \u2022 \u2022</center>\n\nDetective Murray had joined us in the hotel for our confab. Even though the combination of murders and trafficking were being handled above his pay grade, he'd taken a person interest. \n\nIt had started with dirty cops, something he hated with a passion. It grew when he saw the pictures the Icaria police sent him of a twenty-eight-year-old woman tied to a bed, her unseeing eyes dull in death. Word of sixteen other women, most of them not even remotely twenty-eight years old, being held as entertainment for a ship's crew up in Connecticut put him over the top.\n\n\"The big boys in homicide and vice have it now. They glommed on the minute they realized what cracking this could mean politically,\" he'd said.\n\n\"But you're here.\"\n\n\"Yeah. It's going to be a jurisdiction fight while everyone tries to suck up the credit, including the fibbies horning in, you can bet. And they won't care about the girls so much as getting the top guys because 'Trafficking Czar Arrested' is so much more career-enhancing than 'Woman Rescued.' So it's gonna drag.\" His stare had been level. \"I'm happy with my career right where it is. I only got boys of my own, but those people are somebody's kids and they don't deserve to be collateral damage. We do what we can and we do it now.\"\n\nHe'd gotten on my case almost immediately.\n\n\"You can't leave her in the dark. Either she gets the hell out of here, or you tell her what's lurking in the shadows.\"\n\nAnd so the three of us&mdash;me, Murray, and Jess&mdash;had headed over to the hotel where Sydney was holed up, and everybody got the whole story. It left Sydney frightened and revolted, just like I'd predicted. She huddled with a pillow pulled up against her front and watched us in silence.\n\n\"I figure Regan's impregnable at home,\" I said when we got to the present moment. \"The powers that be are going to be ultra-cautious about warrants and the like so they don't screw it up for trial. Me sliding in over his wall\"&mdash;I ignored the eye roll from Murray; he didn't actually protest the legality&mdash;\"is out. He's got state-of-the-art alarms and Mitchell.\"\n\n\"You call and set up a meet, he'll just turn it into a trap,\" Murray said. \"We need to get him when he's not expecting it but doesn't have his muscle with him.\"\n\nWe contemplated it silently until Sydney said her first words. \"Men don't bring other men on dates.\"\n\nI considered it. Finally, I shook my head.\n\n\"I can't see how to do it. Even if the hit squad never reported back that I interfered when they went for you, Mitchell knows you're more than just peripherally involved. He saw you take my arm that day at Emerald's apartment.\"\n\n\"Oh!\" she squeaked. Jess looked irritated at that.\n\n\"Cut her a break. It was a tense moment,\" I said. Jess's face smoothed out and she nodded.\n\n\"And I'm not bringing another woman into this. One slip up and Regan will have her killed, or use her to trace back to us and then have her killed.\"\n\nAgain, silence descended.\n\n\"We watch his place. If he goes out for something without Mitchell, we meet him,\" Murray finally said.\n\n\"Can you put someone watching his house?\" I asked Murray.\n\n\"No. Brass doesn't like us peons joggling their elbows. I can do some time when I'm not on duty, but that leaves a lot of hours.\"\n\n\"We can all take turns,\" Jess said. \n\n\"No!\" Before her temper could flare at me, I went on. \"They know what the three of us look like. You don't want Mitchell sliding up in your blind spot.\" The two women looked apprehensive. \"Murray's unknown and is obviously a cop. Not only is that a little bit of immunity, but they're not going to be shocked at some surveillance if they've got moles in the department still.\" I turned back to Murray. \"I'll get someone.\"\n\nThe world of my profession isn't huge and I knew others. I forked out some cash and Regan's place got watched. \n\nThe days dragged and boredom set in as people huddled out of sight. The weather turned New York late-fall foul, rain and sleet coming down regularly. Tempers outside got foul. Tempers inside got close to it. Sydney bore the brunt of it. Jess and I were still going into the office; we had a business to run. Murray had a full-time job that was anything but boring. But Sydney was afraid to go out and the hotel walls closed in.\n\nEach evening, she'd pull me into bed for an energetic romp that expelled the frustrations of the day. I wasn't complaining.\n\nIt was the women who cracked it.\n\n\"Elizabeth Brady,\" Jess announced.\n",
        "\"Who is Elizabeth Brady?\" I asked.\n\n\"Sasha,\" Sydney said. \"I asked around and someone finally got back to me. They knew her real name and where she lived.\" I guess the top tier of escorting was also a small world.\n\n\"So,\" Jess said, \"I went and gave the parking garage attendant fifty bucks, and he said that, yeah, a Bentley showed up occasionally.\"\n\n<center>\u2022 \u2022 \u2022</center>\n\nThe rain fell steadily, turning the street into a moir\u00e9 pattern of reflected taillights and neon. There was a certain visual beauty to it. But it was also a cold rain, the kind that turned the city I loved into a menacing shadow land.\n\nA perfect metaphor, Harry. Life is bright and alive from a distance, but sometimes it's cold and gray when you're in the middle of it.\n\nI shook my head to clear the woolgathering and looked down the block. \"Just a few doors east of a car park,\" Jess had said. I didn't see any lights from second-floor windows in that general vicinity and my hopes fell. I quickened my steps.\n\nA couple of people emerged out onto the sidewalk. It was about where I thought Sasha's entrance might be, but it was hard to tell in the dim illumination the streetlights provided through the rain. One of them headed across the street toward the lavender glow of argon that spelled out \"BAR\" with half the B not working. The other turned in my direction. Some subconscious clues suggested the closer one might be a woman, but woman or shorter guy, it wasn't Sasha. Just the way the person walked told me that. There was none of the slink Sasha had wired into her bones. \n\nThe figure altered course to the left, hugging closer to the buildings, looking away. I stepped toward the curb and kept my eyes on my destination. It was automatic Manhattanite-at-night behavior: give space where you can, don't seem confrontational.\n\nThere was something strange about the glimpse I got of the hooded face. It seemed inhuman almost, but light made it hard to figure out. It looked&nbsp;... squished.\n\nThey passed and my ears did the same thing I'm sure theirs were doing: listened to make sure the footsteps kept receding. Again, habitual wariness. Anyone can be dangerous, especially from behind.\n\nI approached the maw of a parking garage and paused to stare up at the line of windows stretching away one floor above me. None were lit, though the streetlights did give peeks inside for those not blocked with curtains or blinds.\n\nI was distracted from trying to figure out why the face under the hood was strange when I saw the woman step to the window. She didn't turn the light on, but the streetlights were enough. I could tell she was a looker&nbsp;... and she wasn't shy. The wrap loosely tied at her waist was molded across her curves by static, concealing nothing of her shape. This block still had the older mercury-vapor bulbs in the streetlights, and the iconic orange gleam warmed the plunging V of skin between dark robe and dark hair.\n\nI knew that skin, from the neck up at least, and it would be warm even without the lights. Luiza saw me see her and jerked back into the shadow of her apartment. I stepped to the closest doorway and peered at the wall plate. I pressed the one labeled \"E. Brady.\" There was no answer, so I pressed it again. Then I leaned on it. Nothing.\n\nI pressed the one that had \"Cruz\" written beside it. I figured it was a good guess for a last name, and it was next to the first one. It took two pushes until a tinny voice said, \"Wait a couple minutes.\" I waited for the buzz, getting impatient in the chilly wetness. I was contemplating leaning on Luiza's buzzer like I had Sasha's when the door pushed open and a man stepped out. He turned away and headed east without a word. \n\nShe was waiting with her door cracked when I came up the stairs. \n\n\"I recognized you,\" Luiza said. \n\n\"I recognized you,\" I answered. The thin wrap was gone, replaced by leggings and a baggy sweatshirt.\n\n\"He's sort of a boyfriend but he's marr&mdash;\"\n\n\"Luiza,\" I interrupted, \"I couldn't care less who he was or what you two were doing.\" I was pretty certain what they were doing&mdash;or had just done&mdash;but I truly didn't care. \"Why were you at the window?\"\n\n\"I heard her door and was checking to see if he was leaving. I don't like him. He's bad for her.\" I didn't need a glossary to know who \"he\" was. \"If he was gone, I was going to invite her over.\"\n\nOho! Mr. SortOfBoyfriend was going to have a good evening. \n\nShe disabused me of that fantasy almost instantly.\n\n\"We were going to order Chinese, and I was going to see if she wanted some. She hates to cook.\"\n\n\"She's not answering her buzzer, and I leaned on it.\"\n\nShe glanced at the doorway across the hall and frowned. \"I know she's home. I heard him get here like two hours ago. Maybe they're&nbsp;...\" She gave a little shrug-wiggle to imply \"you know.\"\n\n\"And he's not the type to tell me to fuck off through the intercom when I hold it down for thirty seconds?\"\n\nShe looked uncertain. I stepped over to Sasha's door and knocked once, twice, then pounded. Even if you weren't the type of man Regan was, that would bring you boiling to the door. Nothing.\n\n\"Do you have a key?\"\n\nIt wasn't something anyone should see. I don't care if you're a hardened homicide crime scene specialist or a forensic medical examiner, you shouldn't have to see it. Certainly not a woman like Luiza who specialized in good times. Or even a man whose day-to-day was&nbsp;... had been&nbsp;... skip-tracing and occasionally someone getting nookie where they shouldn't.\n\nShe was the first thing that caught your eye. Sasha was spreadeagled on the bed, wrists and ankles pulled to the corners by rope. She was naked, of course. Her eyes stared sightlessly at the ceiling. I didn't need to check for a pulse. A woman's body holds about nine pints of blood. I was willing to bet over half of it made the black pool beside her. \n\nThe shape of that pool told me that it had come from an arterial wound. Her heart had pumped and pumped, creating that spray pattern until it couldn't anymore and just oozed. And then not even that. The pool's position told me where. I leaned enough to see the left side of her neck and, yes, there it was, looking neat and not at all so deadly except for the black around it, right where the carotid was.\n\nBlack because the blood wasn't fresh.\n\nOnly then did I see the other sight. Him. He was also naked. He was also tied, but not on a bed. His arms were drawn up by the rope that looped over the top of the open bathroom door and then down to fasten somewhere behind. Blood streaked down his legs and onto the floor. It was still a deep crimson.\n\nLuiza darted back for the kitchen sink. I heard her retch. I stepped back so I didn't have to look. I took in the room as I pulled out my phone, forcing my mind away from what it had just seen. There were two wine glasses on the coffee table. Those would have been Regan and Sasha. There was a still-wet lowball glass on an end table next to a chair. Fury erupted.\n\nThe fucker sat here and had a drink after doing that. Regan, you stupid fuck. You thought Mitchell was working for you instead of watching you.\n\nI'd been so busy paying attention to the odd little figure who came my way that I didn't pay any to the larger one walking across the street. I dialed Murray. For once, he answered.\n\n\"Another body&nbsp;... two actually. It wasn't me. I want you here even if it's not your precinct, or at least someone you know can be trusted. And Mitchell may be across the street in the bar.\" I gave him the address of the building. I'd already described Mitchell to him. I drew my gun, and Luiza and I went across the hall to wait. After Lindqvist's threat, cops would have to use a battering ram on that door until I heard Murray's voice.\n\n<center>\u2022 \u2022 \u2022</center>\n\nSometimes, fate is on your side. Sometimes that fickle bitch just decides you've taken it up the ass enough and it's the next guy's turn. Sometimes she just arranges it so that one little piece of information is missing from what he knows and you come out okay.\n\nThe last time Mitchell had been to my office had been the day Regan had \"hired\" me. One little piece of information, sometimes that's all it took&nbsp;... like that we'd added cameras since then. I saw the flicker of motion on the always-on monitor and glanced over. Mitchell was sliding to the top of the stairway, clearly moving so as not to make audible footsteps in a glide that didn't shout, \"Mack truck.\" It said, \"Tiger.\" A predator closing in, low and silent. Neither of his hands was empty. One carried the pistol he'd pushed in my face; the other the leaner one that Charlie Everett, Larry Beck, and Nikki Hill had met in their last seconds.\n\n\"Mitchell's here. Back stairs. Go!\" I snapped. With one startled glance at the monitor herself, she went. I was already moving. I needed to give Jess time to get free, not send Mitchell darting for the street immediately. I needed to wait the long seconds while he oozed his way toward our door. I ducked into the supply closet-cum-bedroom. I left the door open four inches.\n\nThe handle of the outer door turned slowly. It didn't squeak. I bet he knew that, had tested it when he was last here. Then he came in fast, his gun already trained on Jess's chair, ready to spit death in the face of our surprise. But not firing blindly. This was experience in action, every move calculated and practiced until it had become automatic.\n\nLooking out from the darkness into the brightly lit room, I could see his eyes dart and take in the situation. They flicked my way and I resisted the impulse to jerk, then they went toward my office. Two partially opened doors. A slight sound from my office and his attention locked that way. I felt a spike of panic.\n\nJess! Get the fuck out!\n\nBut then my brain interpreted what my ears had heard. It was the back stairwell door shutting on its automatic closing mechanism. His brain figured it out also, and I saw the momentary tension ease as he slid toward that door.\n\nThere were no playing fields of Eton here. Giving evil a fair chance to win was a minor evil in itself. You exterminate; you don't duel. I wanted a clean shot to his back, but he never turned fully away from where I was.\n\nMy God, that man is fast!\n\nMy first shot, intended for the heart, hit him somewhere on the far left side of his body as he spun away. He dove behind Jess's desk. Sheet metal and drywall might not stop bullets, but several thicknesses of oak and maple, and drawers filled solid with paper did the job. I put one through the modesty panel just in case he'd tucked himself in there.\n\nThe form bursting low from the other side told me he hadn't. Only my own reflexes saved me as his gun spat and one round went through the opening where I'd been and another punched through the thin panels of the door itself. He also was taking a flier on where his opponent dodged, but like me, was wrong. \n\nI gambled that his light-adjusted eyes didn't see the motion through the door crack as I leapt over behind that door. Sure enough, two more rounds punched through on the wall side of the crack, right where I'd been. I fired blindly through the panel, trusting to my memory of the office layout. Then I dropped and scuttled as shots came in at chest height.\n\nThere was no real cover in the tiny room. I hadn't had time even to flip the mattress up, not that its thin protection would do much against a 10mm round from that cannon. If I stayed in here and he had extra clips of rounds, he'd get lucky. Mitchell seemed like the kind of guy who had extra clips. I had a ten-round magazine, now down to six shots. In a war of attrition, I'd lose.\n\nSilence reigned as we each tried to hear movement. Suddenly, he sent three shots in: one through the wall to the right, one through the door, one through the wall to the left, all angled to strike the floor just feet inside. I looked at the angle of light streaming in. He was standing.\n\nI readied myself for a do-or-die effort, hoping to catch him by surprise, praying it wasn't going to be die, but afraid it was. My big hope was that Jess had made it to the first floor and was somewhere he wouldn't see her when he fled. \n\nHe's off to my right. He's standing. He's fast, so I need his first shots to go elsewhere. \n\nI eased a pillow off the bed. I rehearsed the moves in my mind, like a ski-racer visualizing the course ahead. My left foot kicked the door; my left arm tossed the pillow up into the opening. I used the momentum to twist out low.\n\nHis reflexes hadn't gotten any slower. A round exploded the pillow in mid-air and I saw the muzzle of his gun already tracking the motion lower in the door as mine tracked up to his. \n\nBoth of us buy it, I thought, but I had a premonition you'd be in my sights one day, Mitchell.\n\nA third noise entered the fray. A sharp bark, higher-pitched than either of ours, and Mitchell lurched from the impact, blindsided. Jess stood in the doorway of my office in a classic Weaver stance. She squeezed the trigger of the gun she'd grabbed from under her desk again, and a hole punched in the corridor wall inches from Mitchell's figure. It didn't matter that she missed that second time because I didn't flinch. I led his motion and pulled the trigger twice. Both rounds tore into his chest, two inches apart, just slightly left of the breastbone.\n\nAnother Hollywood trope real life sneered at: instant lights-out from a pistol round to the chest is rare. So I tracked smoothly as he slumped back and let the credenza take his weight. But Mitchell&mdash;I suddenly realized I didn't know if that was his first name or last&mdash;Mitchell was done. I knew it. He knew it. He didn't even try to raise his gun again. No matter how fast he was, I was fast enough that he'd never get it there.\n\n\"You're pretty good with that,\" he said.\n\n\"A lot of practice pretending popup silhouettes were my ex.\"\n\n\"Huh. Women!\" His voice was weak. He was going fast.\n\n\"I don't get it,\" I said. \"Regan's dead. Why the fuck didn't you just disappear and go be a mercenary somewhere?\"\n\nI saw the incomprehension take hold. He tried to say something, but all that came out was an unintelligible mumble. The eyes gradually went vacant, and he slumped back in that completely anticlimactic way that corpses have.\n\n\"Stay back,\" I said to Jess and moved forward. Keeping my gun ready for a coup de gr\u00e2ce in case this was the world's best faking-it, I pulled his from unresisting fingers.\n\n\"We got him, Jess. The monster's dead.\"\n\nExcept that last moment before he went&nbsp;... I thought about Regan and Sasha's deaths. Was Mitchell the only monster?\n\n<center>\u2022 \u2022 \u2022</center>\n\n\"He didn't know Regan was dead.\"\n\n\"What!\"\n\nI repeated it to the three other people sitting around the hotel room. Jess, Sydney, and Murray stared at me.\n\n\"But he killed Regan and Sasha,\" Sydney protested.\n\n\"I thought that for about a hot minute, but it bothered me because it wasn't his style. That was the first thing Regan told me about Mitchell. When Cara was murdered, he said, 'What you found isn't his style,' like that removed all possibility of Mitchell having done it. And I got the same impression when I talked to Mitchell himself. I'm not saying he couldn't be vicious, but the man had a method.\" \n\nMurray and I shared a glance. We'd seen the crime scene photos from the cabin, and knew that Beck had been tortured before being killed, but it had been a horrendous beating. And Nikki had been raped, but again, the marks on her were bruises.\n\n\"He shot both Beck and Nikki at the end. He likes his guns, not knives.\" I shook my head. \"No, he was surprised when I told him Regan was dead. I think he was Regan's man to the end. Regan knew he made a serious mistake by leaving those certificates out for someone to steal. He was trying to prove to his bosses that he could clean up his own mistakes without running to them. That's what Mitchell was doing.\"\n\n\"So who?\" asked Sydney.\n\n\"Bertram,\" the other three of us said simultaneously.\n\n\"Regan had proved too unreliable,\" Murray went on. \"He lost money. Even though they got a lot of it back, it still cost them two mil. And Bertram and Lindqvist got drawn into the light. No pink slips in that business.\"\n\n\"Bertram and his partner,\" I said. They looked at me. \"I saw two people coming out of that building. You said the police canvassed, and nobody else had guests&nbsp;... well, Luiza did, but that was someone else. One of those was bigger, a man. I jumped to the conclusion it was Mitchell in the heat of the moment, but now that I think of it, I don't think he was big enough. The other though&nbsp;...\"\n\nI tried to picture that figure.\n\n\"It was a woman; I'm almost positive. But something was wrong with the face under the hood. It looked squished and artificial.\"\n\n\"Like they were wearing a mask?\"\n\nI nodded. \"Exactly. And Jess and I have a theory that Coco is Bertram's partner. She's still not accounted for.\"\n\n\"Neither's Kimi,\" Sydney said.\n\n\"I don't think we'll ever see Kimi again. I think they finally cracked down on her attitude, and she's in some cathouse in the boonies or maybe Mexico.\" The silence held for a long moment.\n\n\"The FBI's started a case,\" Murray said, \"but you were right. It will take forever to get any real momentum.\"\n\n\"And they'll find us before that happens,\" Sydney said. We could all hear the fear.\n\n\"So, what do we do? Can the police do anything?\" she asked Murray.\n\n\"Can I have an officer here at the hotel? Yeah. But unless you're willing to never go out again, it's hard to stop something when you don't know where or when or how. And honestly, I guess we all have a few concerns about police officers right now. IA is pulling out the stops ever since they heard about New Haven, but they're looking for a needle in a haystack when they're not even sure the needle exists.\"\n\n\"We don't wait,\" I said. \"We find them before they find us, and we end this. The FBI may take a long time to get a case going, but they'll make an arrest if we hand the perps to them, especially if we can get something definitive as evidence. We've got almost nothing to go on, so we scour the barren ground and hope that one little seed is out there.\" I went around the room.\n\n\"Jess, you seem to be able to find almost anything, so get me Richard Bertram's addresses, every one of them you can, home, business offices, clubs, anything.\" She nodded.\n\n\"Sydney, you see if you can find a lead to Coco. Do what you did with Sasha. See if anyone knows of a madame that fits the description. I'm going to give you the number of someone I know. She has an escort agency named Cartier's and&mdash;\"\n\nThree pairs of eyebrows went up.\n\n\"No! Not like that. Someone I almost busted when I was on the job.\" Two pairs went back down; they knew that the worlds of cops and escorts overlapped. I'll leave you to guess which didn't.\n\n\"Call her only as a last resort. I'm serious, last resort. I don't want to use up any goodwill I have with her. But if you do, tell her it's in relation to what I talked to her about before, and the worst case is happening. She'll know what that means. Even if Coco is his mistress and isn't with an agency anymore, I'm betting she was once. She's gotta have left some fingerprints out there. Find me someone who'll talk to me.\"\n\n\"Murray, what are the chances we can look through everything gathered from two crime scenes? Charlie Everett's and Larry Beck's apartment here.\"\n\n\"We won't be able to take anything, but I'll find a way.\"\n\n\"And see if the Icaria police would allow a little professional courtesy and do the same.\"\n\n<center>\u2022 \u2022 \u2022</center>\n\n\"You're too late. I've been and gone.\"\n\nWhat is it with evil villains and not introducing themselves when they call you on the phone? \n\n\"Bertram?\"\n\nMurray was riding shotgun, and his head swiveled sharply my way.",
        "\"Yes. Anders's warning to you didn't seem to make an impression, so I'm reiterating it. Walk away and let all the noise die down. You do that and we leave you alone. It's in our best interest. More deaths means more spotlights shining our way. If you don't back off, though&nbsp;... well, you saw what happened to Jordan. You're going to get nothing from Jordan's house, and you had nothing concrete before. That adds up to nothing. Give it up as a lost cause.\"\n\nDid I believe they'd leave me alone? Not a chance. Yeah, they wanted the spotlights to die down. And then later, on some dark night, I'd be in the wrong quiet place at the wrong quiet time.\n\n\"You know, Bertram? The only thing that would give me greater pleasure than seeing you doing a perp-walk to a squad car is putting a bullet between your eyes. Yeah, I saw what you did to Regan, you sick fuck. I'm going with option one right now because I'm a Boy Scout, but give me just one reason to and I'll pull the trigger.\"\n\nIt felt good to be the one hanging up for once. I ignored the look from Murray.\n\nWe got nothing from Regan's. The computers in the outer office were gone. Both outer and inner offices were stripped of every piece of paper. The safe door hung open, revealing emptiness. We searched through the rest, but other than an extensive porn collection, there was nothing.\n\nThe phone rang again. Another number I didn't know.\n\n\"Mr. Morgan?\"\n\n\"Yes.\"\n\n\"This is Rachel Bertram. I found some business papers. I won't give them to you because I'm not handing you any physical evidence against Richard. But I will give you dates and destinations.\"\n\nFinally! Something's going right and we might get ahead of the game for a moment.\n\n<center>\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500</center>\n\nThe final chapter will be be out shortly. And because it happened in this chapter, here's the  again.&nbsp;&mdash;C"
    ],
    "authorname": "chasten",
    "tags": [
        "noir",
        "hard boiled",
        "hard-boiled",
        "detective",
        "prostitute",
        "escort",
        "new york",
        "mystery"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/a-spill-of-blood-ch-06"
}