{
    "title": "Pledging Tau Geta Delta Pt. 03",
    "pages": [
        "\"So he totally boned you in the lab?\"\n\nI blushed just hearing Alex's chirpy voice as I walked into the frat house. I wasn't sure that I was up to talking about my recent experience with Professor Barrington. Getting strapped down on the bed by my electronics instructor while he teased and tickled my naked body was certainly something I'd never forget. It was also not something I was ready to talk about either. The amazing orgasm he'd given me had nearly shaken me to the core.\n\nI paused just inside the door, wondering if I could just slip through unnoticed. Alex was another of the pledges, another of the girls who had been a guy barely a day ago. She'd embraced her new womanhood with an enthusiasm that left me in awe and generally off kilter whenever I got close to her. I had to admit though, that her attitude was a bit infectious once I got used to it.\n\nI let the door close behind me with a loud enough click that no one could have missed my entrance. There were only a couple of girls in the sitting room. I didn't know one of them, but I recognized Megan and Alex. The two girls looked like they were about to pounce on the third, at least until I'd grabbed their attention.\n\n\"Uh... hi?\" I wavered a bit at the intense look of wickedness that twinkled in Alex's eyes.\n\n\"Alison, come over here and take a seat. We were just sharing our victory stories.\" Alex turned back to the poor girl in the third chair. I remembered seeing her now, a raven haired Asian with cute almond eyes, button nose and a slender frame. She also looked like a deer caught in the headlights, which was an appropriate response when under Alex's dedicated attention.\n\nI gave the poor girl a friendly wave and she gave me a weak smile back. \"I'm Alison.\"\n\n\"Minami.\" She nodded and blushed some more as Alex continued to stare eagerly in her direction.\n\nI considered my options for a moment. It was clear that Alex didn't have an off switch, which meant if there was anything to be done, I would have to distract her.\n\n\"So what did you do, Alex?\" I prodded. Minami let out a sigh and slumped back in her chair as the spunky blond turned towards me. I was happy to help, but I knew that left me in the frying pan.\n\n\"Well, you know there's a really cute graduate assistant for the upper level psych classes? I popped in on his office hours and well, it wasn't hard to get him to give me a bit of personal attention.\" Alex giggled as she thrust out her chest. Her top was doing a good job of showing off her cleavage. I could imagine her ravishing the unsuspecting guy before he even knew what hit him. \"I never realized how much fun it could be getting fucked when someone could walk in at any time. I'm pretty sure he liked it too, I got him to shoot off like three times before I finally let him up for air.\"\n\nI blushed just listening to her story. I had to wonder what kind of girl Alex was supposed to have been in her memories. I could just see her sleeping through half the campus with a lustful smile and plans to get through the other half before graduating. In a way, I was a bit jealous. I was still getting all twisted up with my femininity and masculinity, but she'd clearly gone all in. Of course, not everything was embarrassment at being a girl, the part of me that was Alison was a bit of a shy, especially about sexuality.\n\n\"So, how about you. Who did you pluck? I can tell you had a good time.\" Alex gave me a very knowing stare as she grinned.\n\nI just blushed. I suppose it wasn't hard to see the somewhat silly grin I had. I was still basking in the fleeting edges of my recent orgasm and I wasn't surprised that she could tell. Of course, she could just be bluffing me, but she'd hit the mark either way.\n\n\"Well, I kind of got a private lesson with Professor Barrington.\" I squeezed my knees tight to keep from fidgeting. I didn't really want to go into details, but then I gasped as I remembered that the professor's reputation was rather well known to the female side of the university.\n\nAlex actually sputtered for a moment. Her eyes bulged as she took in what I'd said. \"Professor Barrington? One of his private lessons?\"\n\nI just nodded slowly, blushing furiously as I realized that Alex pretty much knew more than I would have ever wanted to share.\n\n\"Damn girl! I actually seem to have done that back when I was a freshman...\" Alex actually turned a few shades of red herself as she was lost in one of her girly memories. I quivered as well. I could only imagine what it must have been like for an innocent freshman to have done that. Alex shook her head, clearly working her head around those memories. \"Man, that is one kinky dude. Did you know that?\"\n\n\"Not really, but it was certainly memorable.\" I held my hands in my lap to keep them from twirling my hair. It was a habit that I'd noticed I had when I got nervous. It was oddly soothing, but I wasn't eager to look so feminine at the moment.\n\n\"I bet.\" Alex giggled. She squirmed in her chair a bit. I wondered just what was driving her to be so nervous when the sound of the door closing grabbed out attention.\n\nThis time it wasn't a girl. It was the fraternity president Hamilton Prescott. He was looking like his usual stoic self in an almost ridiculously stereotypical sweater vest outfit. I squirmed a bit in my seat when I realized that I thought he was kind of hot, or at least the Alison part of me did. I was slowly getting used to my feminine feelings shooting to the top of my head, but it was still strange finding myself attracted to guys.\n\n\"Well, ladies. It's good to see you all here.\" He held up his hand and a small blue ball of energy popped into being just over his palm. He took a moment to wave his hand around, taking the time to look at each of us through the strange little light. I realized that it must have been magic, but I couldn't quite figure out what it was for. \"And it looks like all of you have met the last challenge. I hope you had fun.\"\n\nWe responded with a mixture of blushes, fidgeting and wayward glances. It was hard enough talking to the other pledges about what we'd done, but talking about it with a guy who was still a guy was a lot harder. The fact that this was the man in charge of us this week didn't make it any easier.\n\nOf course, there was one of us that wasn't about to be cowed by embarrassment. Alex sat up straight and smiled. \"I know I did, sir. I'm ready to get going on the next challenge.\"\n\n\"Well, for your next challenge, you can't get started until tomorrow night, but I can let you know what it is, if you want to know.\" He smiled. I had my fingers twirling my hair before I even thought about it. I was torn. On the one hand, if I knew I'd have time to plan and prepare. On the other hand, I could end up just worrying about it, and since I couldn't get started until tomorrow night anyway, I wasn't quite so eager to get a head start.\n\nAlex, however, wasn't the patient type. \"Sure, let us have it, sir.\"\n\n\"All right, ladies. You can feel free to tell the other pledges when you see them, and I'll be sure to announce it at breakfast tomorrow, but your next challenge will be to go out and find another student for a one night stand. You can't already know them, and no scouting before six tomorrow night.\" Prescott said. He took a seat across from us as he watched our reactions.\n\nAt this point we were mostly numb to the prospect. Our assumption would have been some kind of seduction and sex challenge. It was the running theme after all. In some ways this was almost easier than going after an instructor. There were plenty of places to go for picking up a guy. Alex seemed almost enthusiastic, but everyone else just soaked it in.\n\nSurprisingly enough, Megan decided to break the silence. \"So, sir, would you mind telling us about your pledge week? Did you have to go through the same challenges?\"\n\nPrescott laughed and sat back in his chair. \"Well, if you can imagine, my alter ego was like this little five foot girl with a bobbed haircut and almost no curves. I also had this squeaky voice that just screamed that I was like way to young to be in college. So we had challenges a lot like the ones this week, and boy do I have some stories to tell...\"\n\nHe just let the words hang in the air and smiled at us for the better part of a minute. At first I wondered if it was just a dramatic pause, but then he just let the silence continue until finally he finished his thought. \"But, those are stories for another day, after you've proven yourselves worthy. You've all done really well so far, so I'm looking forward to seeing each of you sign your names in the ledger at the end of the week. After that, we're going to have our biggest party of the year, and you'll get to hear all the great stories.\"\n\nWith that he hopped out of his chair, gave us a bow and trotted off to whatever mission he had next. Everyone took a moment to let things sink in and then we all just laughed. We didn't have any reason to get bent out of shape quite yet.\n\n\"Well, I think I better get some studying done if I'm going out tomorrow. I'll see you all later, girls.\" I stood up and strode off before anyone could hook me back in. I wasn't in the mood for more sharing, and this seemed the best time to escape before I got dragged back in by Alex.\n\nI got back to my room and sat down. It had been a crazy couple of days and I actually looked forward to a bit of studying. A bit of hard core mathematics was just what I needed to forget myself for a while and I really did want to get ahead on things. One way or another, I couldn't let my schoolwork slip. There would be plenty of time to fret about tomorrow night later.\n\nThe next day felt surprisingly normal. I got up, dressed, chatted up with Alex and the other girls before going to class. I was getting used to the random male attention that a reasonably attractive girl gets just walking down the street. It wasn't until I was grabbing a quick snack after class that I even realized just how normal everything really did feel.\n\nIt helped that I didn't think about the evening challenge. The most preparation I'd made was agreeing to go out with Alex and the other girls to a club she knew. I didn't have any better ideas so it was an easy thing to agree to. In the meanwhile, I cleaned up a bit, finished some more homework and was utterly surprised when Alex came knocking at my door at about five thirty.\n\n\"Okay, so why aren't you dressed?\" Alex smiled at me wickedly when she noticed I was still wearing a rather plain t-shirt and jeans. To say that she was dolled up would have been a disservice. Alex had gone all in, with a slinky black dress that showed off her breasts, hugged her hips and had a nice revealing slit up both thighs. Add in a pair of mid sized heels, a black lace collar and some earrings and she was dressed to kill. She'd also managed to do her hair and makeup such that no guy could possibly get the wrong idea about what she was interested in.\n\n\"Well, I thought...\" I stammered as she burst into the room and started to pull off my shirt before I could even start to object.\n\n\"No time for thinking, we've got partying to do, and guys to snare!\" She tossed my shirt across the room and then slid around to unsnap my jeans. Alex was moving far too fast for me, and I was quickly left in just my panties and bra. I knew better than to complain, and she did have a point. I had been putting off the whole outfit selection process.\n\n\"Now, did you even think about what you are going to wear?\" Alex dragged me over to the closet and opened it up. She quickly started plucking out outfits and holding them in front of me and then just as quickly sorting them into two groups. I guessed that one was the reject pile given her expression, and the other must have been the ones that she liked.\n\nThere was a common theme to the outfits that Alex liked. They were all rather sexy in one way or another, short skirts, plunging necklines, or curve hugging sleekness was what she was going for. I didn't really have many outfits that matched up with her ideal, but in the end she'd cut my choices down to three.\n\nThat made it a fair bit easier for me. I didn't like the first two choices. I wasn't quite ready for the slinky black number like Alex, and the hot pink mini skirt and ruffles look was just too girly. So I decided to go a bit more subdued with a light blue halter top and a short skirt.\n\nI settled on my choices and then started to unfasten my bra when I noticed that Alex as still watched me. I gave her a glare. \"Could you turn around?\"\n\n\"What? It's not like I haven't seen boobs before.\" She made a point of thrusting out her nicely rounded chest and outlined them with her hands. Of course she was giving me a wicked smile the whole time. Then she laughed and turned around with a big wave of her hands. \"But, if you insist.\"\n\n\"I'd think you have no shame!\" I laughed as I plucked a matching bra out of my closet and quickly worked my way into it. Feminine undergarments still gave me a bit of trouble, especially since I couldn't relax enough to let my girly instincts take over when I was trying to get my breasts into the cups. I suppose it was still a bridge too far for my manhood.\n\n\"I don't have time for that. You're only young once!\" Alex replied. I could understand the sentiment, even if I wasn't in complete agreement with how aggressively she pursued her philosophy. The truth was it was far too easy to just ride in her wake, and I was actually beginning to enjoy doing just that. She had a way of making the world bend to her will, and it was fun watching her do it.\n\n\"So, let's make the most of it.\" I finished her thought as I wiggled my way into my skirt. For a moment I thought about removing my panties as well. If all went to plan, I wouldn't be needing them for long anyway. Still, modesty won out this time, and I finished getting everything in place.\n\n\"Not without some makeup first.\" Alex flipped around, took one look at me and then swung me into my desk chair. Before I knew it, she had gone through my drawers and had a collection of makeup spread out in front of me.\n\n\"Okay, that's enough. I've got this.\" I grabbed her hand when she reached for some mascara. I took a deep breath. I hadn't really done my makeup yet. I could remember doing it, in my fake girly memories, but that was still different. This was really me with my hands grabbing for an eye shadow applicator.\n\nThankfully, all I had to do was relax and let my instincts take over. Alison knew how to apply her own makeup, so long as I didn't think about what I was doing. It wasn't like I needed much, my complexion was pretty good. The trick was enhancing things to generate the right look.\n\nI half closed my eyes and managed to get a nice line of eye shadow on. Then I hit the mascara and got my eyelashes nice and long. I puffed on a bit of blush and then finalized my handiwork with a bit of bright red lipstick. When I looked at my reflection, I felt a bit of a nervous twitch just looking at myself. All it had taken was a bit of makeup and I was now that much hotter.\n\nMy thoughts swirled for a moment as I looked at the cute girl reflected back at me. I was going to go out and pick up a guy! It was like some kind of crazy dream, and yet I knew I was going to go for it just the same. Part of me was looking forward to it. I had to admit that sex as a girl had been really good. It was entirely different then what I remembered from being a guy.\n\nOh sure, some of it was the same, but there was an entirely different edge. Naturally, the whole catching vs throwing thing made the experience different. Even though I could contribute, it was hard to deny that the guy got to set the pace, and that left me riding along. It seemed crazy how much effect that could make, and yet it was everything.\n\nI shook my head to clear out the over thinking I was doing. Alex was waiting and there was a challenge to get through. The fact that my stomach was quivering in anticipation was just something I needed to push back for now.\n\n\"Okay, how's this?\" I turned to Alex and gave her a big smile. The waxy feeling on my lips was weird, but I figured I'd get used to it. Wearing lipstick was just another strange girly thing that I had to work through.\n\n\"Nice! So did you do it or just let the girl part?\" Alex grinned back at me. I blushed a bit at the accusation.\n\n\"The girl part, of course. Otherwise, I'd look like I was putting on war paint or something.\" I answered. That part was probably true. As a guy I had no clue about makeup, aside from knowing what I liked to see. The notion of putting some on was about as foreign as you could get. Of course, before pledging I'd never have imagined I'd be running around in a bra and panties either.\n\n\"Yeah, I totally tried doing it myself and it wasn't pretty.\" Alex laughed. I suspected that she didn't rely on her girl memories much. I didn't quite know where I'd be without them.\n\n\"Are you two done?\" I heard Megan ask from the other side of the door. I got up and adjusted my clothes one last time. It was time to get the show rolling.\n\n\"We're coming!\" I shouted back and threw open the door. Megan and Brittany were both standing there, and I just had to stop for a moment to appreciate the scene. Both girls were made up perfectly, and were poured into skimpy dresses that left little to the imagination. My masculine taste roared to the top of my head and had my pussy quivering lustfully. I'd always dreamed about being with girls this hot!\n\n\"Woah...\" I managed to say while I picked up my jaw. If these two had any trouble picking up guys I'd have been shocked.\n\n\"Not looking too bad yourself.\" Brittany smiled as she pulled her red mane back over her shoulder. The sprightly girl seemed to always have trouble keeping her waist length hair tamed, but she looked cute wrangling the errant strands.\n\n\"Time's a wasting!\" Alex charged out of my room and pulled us along in her wake. Her force of will had us half way to the club before we even caught our breath. Naturally, she'd known just the place to go and we all simply had to follow after her.\n\nOf course, a troupe of girls dressed to kill got plenty of attention as we strutted off to the club. The lustful glances and occasional leering stares were one thing, but the comments were something else. They veered from lewd to suggestive and always seemed accompanied by gestures that left no doubt about their perverse intent.\n\n\"Hey girls, why don't you let us show you a good time?\"\n\n\"How about I give you a ride?\"\n\n\"Nice tits!\"\n\nThat last one was the final straw for Megan. She stomped over to the guy and slammed him into the side of a building by the time we chased after her. He wasn't that much taller than her and with the fire in her eyes, he was shaking as she pulled back her fist.\n\n\"Would you talk to your sister like that?\" She growled and bunched up more of his shirt in with the hand pressing him into the wall. The rest of us just stopped a couple of steps away and watched.\n\n\"Uh... no... sorry...\" His eyes darted around. It looked like he was trying to find an escape route, but nothing presented itself. He probably wasn't expecting to get nearly pasted by a stacked brunette, and there wasn't anyone around to help him.\n\n\"Damn straight. Now get out of here, jerk!\" Megan pulled him off the wall and pushed him down the sidewalk. She took a moment to regain her composure and fix her dress. For just that moment I could see her as some kind of warrior queen. Man, was she hot! Whoever she found to take home tonight would be one lucky guy.\n\n\"I never realized how many assholes there were.\" Megan tossed her back hair and then motioned for us to go on. The rest of us just giggled. No one would have guessed from looking at her that Megan was the bad ass of our group.\n\nWe just laughed it off. It was easy enough to do after that. If we ever got into real trouble, well, Megan could beat the snot out of them. It certainly got me in the mood for the challenge ahead.",
        "The club was something else entirely. The music, the lights and most of all the people. Tromping around campus all day gave you a rather ordinary view of people. Here everyone was on the prowl, and dressed to attract. I didn't actually go clubbing before, it just wasn't something I felt like doing, and now, I still had to admit I didn't quite get the appeal.\n\nThe music was loud, the air stuffy and the churn of people was intensely distracting. On the other hand, the room was full of scantily clad women and strikingly dressed men, which I suppose was the real point anyway.\n\nAlex was clearly a regular, and in her slinky black dress she made a point of showing off some moves to the thudding rhythm of some techno song. Watching her ass sway and breasts bounce was nearly hypnotic, and her enthusiasm was contagious. First, it was Megan, then Brittany and finally I gave in and started working my booty with the rest of them.\n\nAfter forming our own little dance circle for a couple of songs, it was time for a break and we all strutted off to the bar. That was one reason I didn't go to these kind of places, at my age, I still couldn't get a real drink at anyplace that sold alcohol. You didn't get carded at private parties. I made do with a soda and we shuffled off for a quieter corner.\n\nWe'd barely settled in when a couple of guys walked up. My stomach fluttered. This was it. Everything else had just been a distraction or at best a demonstration. I looked over to see that Alex was smiling and I quickly figured out the plan. A little wild dancing to draw attention and then moving off the dance floor so that any interested guys could make their move. Rinse and repeat until a guy you like pops up.\n\n\"Hey, Jake and I thought you two had some great moves. Do you come here often?\" The shorter of the two guys gave Brittany a winning smile. He was almost my height, but that still gave him a couple of inches on the little red head. Otherwise, he was kind of cute with dark wavy hair and shimmering blue eyes. His wingman wasn't quite the catch, but I could see from the way Megan looked him over that she didn't feel the same way.\n\n\"We're new around here, just checking out the action.\" Megan smiled and made a point of placing her drink on the table next to us. \"But words are so lacking. You ready to dance?\"\n\nBefore I knew it, the four of them were gone. Somehow I suspected that I wouldn't see them again tonight. From the way Brittany and Megan looked those guys over they'd have to screw up big time not to score tonight. Now, it was just me and Alex.\n\n\"Oh, there's a couple of guys right over there.\" Alex made a subtle motion over to a pair hanging just down the bar. One guy was clearly scoping us out, while the other was much more subdued. I could see from his wayward glances that he was interested, but I also felt like he was really nervous too.\n\nOddly enough, that endeared him to me in an instant. I knew just how he felt. If I'd been dropped into the middle of this club back when I was a guy, I'd have been shell shocked in a corner. Oh, I'd enjoy watching all the hot girls, but I'd have been far too shy to ever consider making a move. That was one trait that I didn't entirely share with my girlish side, Alison was a fair bit less introverted than I was.\n\n\"So what do we do?\" I really wasn't quite sure. My current run with men had been rather off key. Heck, my history with women wasn't a whole lot better. It always seemed like I fell into a relationship before I knew what was happening and barely got a handle on things before something blew up. Granted, I wasn't looking for a relationship tonight, but I hadn't been able to seduce anyone lately either.\n\n\"Well, I'm going to do a bit of remote flirting with the eager one and we'll see if he can drag his friend over here.\" Alex turned to give him a playful smile. He turned back to his friend and then back towards Alex. The exchange of suggestive looks and playful gestures continued until he finally pushed away from the bar and his shy friend followed.\n\nI let my feminine instincts take a look at both of them. They were both pretty average looking guys. They weren't even dressed up, the confident one was wearing a button up shirt over a t-shirt, but he'd left it unbutton. The shy one was just in a t-shirt and jeans. He was also doing his best to keep from making eye contact.\n\nI hated to say just how hot that made me. This was when I discovered that my girly self had a soft spot for wounded birds. Not the bad boy kind, but the shy loners, the ones so trapped in their shell that the very notion of an outside world was frightening. It triggered some kind of motherly instinct that just made me want to hug him and tell him everything would be okay before I fucked his brains out.\n\n\"I hope you don't mind that I couldn't resist your eyes.\" The confident guy said as he pulled up to us. He looked right at Alex and I though I could feel the energy just boiling off her. She turned a bit red and her lips turned into a big smile.\n\n\"Not, at all. I'm Alex, and this is Alison.\" She motioned over to me and I gave them a dainty wave.\n\n\"Max and this shy little devil is Patrick.\"\n\nI had to fight down a giggle when Patrick gave us a rather weak wave as well. He couldn't have imagined just how much that pushed my buttons. The hard part was knowing that I couldn't just go over and sweep him off his feet. I knew he'd just run away. The trick was to treat him like a scared little rabbit and sneak up on him. By the time he knew what was happening, I'd already have him for the night.\n\nAs Max and Alex started chatting, I casually slipped over to where Patrick was standing. He was wavering a bit. Without Max's attention, it was easy to see that he would revert back to wallflower mode in no time.\n\n\"So, Patrick, are you a student here?\" I asked. It was always good to start low key, I didn't want to scare him off.\n\n\"Yeah, I'm in comp sci.\" His eyes wavered. I noticed him checking out my cleavage for a moment before he fidgeted and then looked past me before returning my gaze again.\n\n\"I'm guessing you don't get out much. I know I don't. Alex had to almost drag me here tonight.\" I nodded over to the two chatter boxes as they worked through the preliminaries at record pace. Unless something surprising happened, I didn't doubt that Alex had found her man for the evening. Now it was just up for me to decide if I wanted to try keeping Patrick or going off hunting again.\n\n\"Max said I needed to get out more, but I think he just wanted some backup.\" Patrick gave me a weak smile.\n\n\"Well, it doesn't look like he needs any help now. Do you dance?\" I motioned towards the throngs all moving to the latest round of thumping music.\n\n\"Not really.\"\n\n\"Well, me neither, but it seems like the thing to do.\" I held out my hand. He wavered for a moment, looking at it, then grabbed it. He held it softly and I gave him a reassuring smile.\n\nI pulled him onto the dance floor and gave him a quick lesson. He flailed a bit, but soon he got into the basic swing of things. I wasn't a lot better. Alison seemed to have liked dancing sometimes, so I just let my instincts take over and tried to help Patrick through the worst of his discomfort.\n\nAfter a couple of songs he seemed to get into it. As his nervousness melted away, I got to see a more attractive side of him. He had a cute smile, and thoughtful brown eyes beneath his short cut brown hair. He wasn't the crazy muscular type, just kind of a standard guy I supposed. Watching him start to open up was wonderful.\n\nNow that he was more relaxed we took a break off the dance floor. It wasn't long before we were trading stories about our professors. There was a lot of overlap between his program and my engineering classes, and some of the professors were kind of crazy.\n\n\"So, did you have any other plans for tonight?\" I asked as we shared drinks off in a private nook. I enjoyed talking a lot more than the dancing, and Patrick was turning out to be a nice guy. A bit geeky, but that just meant we had a lot in common.\n\n\"Not really. Did you have something in mind?\" He replied. I just gave him a slightly wanton smile. The look on his face was priceless. I don't think his jaw could have dropped any more before he collected himself and gave me an overly happy smile in return.\n\n\"Now, I don't want you to get the wrong idea. This is just a one night thing, okay?\" I replied. I couldn't be sure that he heard me, given the probability that all the blood was rushing out of his head at this point.\n\nIt took him a couple of seconds, but he nodded. He was still stuck in a deer meets headlights mode so I put down my drink and took his hand.\n\n\"Do you mind if we go back to your place?\" I fluttered my eyes at him. I felt completely ridiculous, but a moment later he chugged down a few gulps of his drink, slammed it onto the table and started to stand up.\n\n\"Yeah, let's go.\" He pulled me up and we headed for the door. After I retrieved my purse we were back out into the cool night air.\n\n\"How far is it?\" I asked as I shivered. I hadn't really thought through the notion that it got cold after dark, and I was far from dressed for that. I suppose girls got used to that kind of thing and planned ahead.\n\n\"Oh, not far.\" Patrick slid up behind me and started to rub my arms for me. \"I hope that helps.\"\n\n\"Yeah, thanks.\" I blushed a bit as his hands did warm me up. That and the fact I was blushing. Even just having him rubbing up and down my arms was enough to start getting me excited. I felt kind of strangely in charge of the situation as well. Patrick wasn't the aggressive type, and that allowed me to take the lead, at least somewhat. I knew I had to be careful not to emasculate him too much in the process.\n\n\"I hope you don't mind, I have some roommates. They're usually out pretty late though, so it should just be the two of us at this hour.\" He explained as we arrived at a small apartment building. The lack of good landscaping and peeling paint told me it was meant for students. It was also right off campus.\n\nI followed Patrick up the stairs as I warmed back up. It was good not to be freezing, but that put my mind straight to what I was here for. I was going to some strange guys apartment to fuck him silly. Sure, he seemed harmless, but he had roommates, and what if he wasn't harmless? In that instant I realized just how scary being a girl could be sometimes. Patrick wasn't that strong for a guy, but I had to admit I could be confident that I could fight him off if I had to.\n\nI stopped and took a deep breath. I knew this was just a bit of misplaced anxiety. I was on a collision course with a round of heavy sexing, and as exciting as it was, I couldn't help being a bit nervous. The thing was though, I was getting nervous because of how much I was starting to like it.\n\nI'd already had two massive orgasms as a girl. I'd had men squeezing and rubbing my naked flesh, and felt them inside me, stoking a kind of pleasure that I'd never imagined possible. Sex as a girl was a whole body experience, and one I was starting to eagerly look forward to. I'd been fighting to distract myself from that fact all day, but the truth was, I was ready to jump into bed with anyone who could make me feel like that again.\n\n\"Sorry for the mess...\" Patrick closed the door behind me and before he could say anything else I pressed him back into it and planted a big wet kiss on his lips. I didn't want to debate this anymore, I didn't want to think about it. I just wanted to fuck.\n\nHe was slow to warm up, but I managed to get my tongue into his mouth at the same time I pulled his hands over to my round ass. I encouraged him to squeeze me as I ground my body into his. He may have been in over his head, but I could feel that he was starting to respond the right way. His cock was already hard and pressing into my stomach through our clothes. Now all I had to do was relieve us both of that obstacle.\n\n\"Which way is the bedroom?\" I asked between pecking kisses all the way across his cheek and down his neck.\n\n\"Down the hall... and... uh, last on the right...\" He stammered before I gave him another deep kiss. I wiggled happily in his hands as he rubbed my ass again. He was starting to get into the swing of things, but he was still a couple of pages behind.\n\n\"So, why don't we get back there and we can really let the fun start?\" I gave him a lascivious wink and pulled off of him enough that he could step away from the door. With the way cleared, he grabbed onto my hand and pulled me along, right back to his bedroom.\n\nI had to stifle a giggle at his room. It could almost have been mine, with sci fi posters, and a playboy calendar on the wall next to his computer. Given that it was a month behind, I was pretty sure he hadn't put it up to help tell him what day it was. I tried not to look too closely at it so he wouldn't catch that I'd noticed. Miss August was too hot to be taken down.\n\nThere was a general bit of untidiness to things as well. Clothes on the floor, take out boxes on his desk and his bed looked like a hurricane had gone through. I realized that I had to move quick before he'd start to panic about it. I certainly didn't care one bit that his place was a bit of a disaster, but a normal girl might.\n\nSo before he could say anything I gently turned him around so that his back was to the bed and sent one hand down to undo his belt while I gave him another kiss. I actually felt a bit strange being so aggressive, but I didn't want my catch to panic or flee. So long as I kept his blood flowing down to his crotch, he wouldn't think about trying to escape.\n\n\"Oh, god!\" He gasped when I pulled open his fly and sent my hand into his underwear. I shuddered myself as I wrapped my hand around his cock. The same strange feeling I'd had with Tom flared up again. I had a guys cock in my hand, and was stroking him, getting him ready to slip inside me. It was wild, and wrong on the one hand and insanely hot on the other.\n\nMy feminine and masculine minds were at war again for a moment, at least until Patrick summoned some bravery and reach up to squeeze one of my breasts. For someone with so little apparent experience with women, he was remarkably gentle while pressing just enough to make me gasp and turn my attention back to what I was here for.\n\n\"Oh!\" I squeaked when he pinched one of my nipples. The spike of pleasure was wickedly distracting, and I needed to keep pressing ahead. I decided it was time to press our undressing ahead and grabbed for his shirt. A quick tug later and I was staring at his surprisingly muscular chest. Patrick wasn't exceedingly buff, but for his frame, he clearly took care of himself.\n\nMy clothes followed a moment later, and he slid out of his pants almost as fast as he could go. I wavered for a moment as he stood there naked and horny while I was still in my panties and bra. Did I want to finish undressing or let him? He didn't let me decide when he pressed in, wrapped his arms around me and unhooked my bra. I figured it was time to finish things, and pulled down my panties. With a quick shimmy of my hips we were both standing there without a stitch on.\n\nWe stood there, forgetting what to do next before I finally snapped out of it, and pushed him back onto the bed. He flopped onto the tousled bedding with a shout before I climbed up and straddled him. I had my legs wrapped around his waist and could feel his cock poking into my butt. I'd taken the lead so far this evening, and now I realized I had another opportunity.\n\nWhile I looked down into his shell shocked eyes, I lifted up my hips and slid back. I could feel his cock flopping around between my legs. I reached down and grabbed it. He was hard and throbbing. No doubt watching a naked girl getting ready to mount you did that to a guy.\n\nI fumbled for a moment. I understood the basic idea of being on top as a girl, but the actual mechanics were a bit more complicated. I wiggled and squirmed my hips, trying to get the position right, but the most I managed to do was to frustrate myself and get my pussy even hotter as I rubbed his cock up and down my slit.\n\nThat was it. I paused and took a deep breath. I thought through what I was doing, wiggled into position and then when I felt his cock pressing into just the right point I pushed down and moaned as he slid into me. The feeling was intense, the way my flesh parted for him and he throbbed inside me. I lowered my hips even more until I was grinding into him, fully impaled.\n\n\"Oh, you're so beautiful...\" He managed to gasp as I panted on top of him. I was leaning back slightly, my breasts heaving as I panted, and my hair flowing all around me. I couldn't have imagined a scene hotter than that if I'd tried. I felt kind of strange being complimented like that, but it was validating too. I couldn't help but admit that it made me even hotter.\n\n\"And you feel so good.\" I cooed as I leaned down until my bare breasts were barely rubbing against his chest. I grabbed his hands and pulled them to my chest, letting him cup my soft flesh and squeeze me. It just felt so good! Patrick didn't hold back, his fingers sinking into me, as his cock throbbed. The feeling of being so full was starting to drive me wild and for the first time as a girl, it was my turn to set the pace.\n\nIt was the strangest thing being on top now. It was nothing like being a guy. I had to lift up my hips and push them back down, but instead of sinking into warm pussy, I felt his manhood sliding in and out with each motion. It was hard to keep a rhythm, especially when I was left a near quivering wreck each time I impaled myself on him. It was just too much!\n\nI leaned down again, and his hands left my breasts and started exploring the rest of my seething flesh. I pressed against his chest, melting into him as I gave him another lustful kiss. I kept working my hips against him, but now it was just a grind, and I hated to admit it but I needed something else.\n\n\"Now, it's your turn.\" I pulled him tight and then rolled to my right. The plan was to roll onto my back, but instead we flailed for a moment, and I was nearly tossed out of the bed before he caught me. It took a bit of maneuvering, but then we were in place again. This time with me on the bottom, my legs spread open and him hovering over me with his cock poised to ravish me.\n\nHe was glistening with sweat and panting with desire. I could see the wild in his eyes. There was no more nervous reluctance there, just raw, needful passion. He set upon like a lion, his hands mauling me as he savaged my mouth with his lips. I pulled him in, meeting his kiss and sinking my fingers into him.\n\nRaw passion, however, doesn't always negate experience, and while his hands knew what to do, his hips needed a bit more guidance. After a couple of failed attempts to guide himself in, I reached down, before he could let any embarrassment take hold and helped his cock find my entrance.\n\n\"Oh, yes!\" I cried as he dove into me with one perfect thrust. I pulled him tight again, wrapping my legs around his thighs as I savored the feeling of his hardness filling me. It was so good, but we were past the opening plays. Now there was just one thing my flesh cried out for. \"Fuck me! Oh, please fuck me hard!\"\n\nHe did his best to meet my demands. He threw his head back as his hips began pounding into me. I rose to welcome every thrust, grinding against him, and pressing towards the heights of pleasure. I could feel the strain in him, from the way his hands held me tight and his thrusts grew frantic. He was doing everything he could to hold on, and I was pushing just as hard to join him at that savage peak.\n\n\"Yes, god yes!\" I gasped. It was just so good, the heat, the pressure, the raw sensuality of being one with him. There were no more words. When he finally plunged deep inside, I exploded with him, and our cries of pleasure must have gotten the attention of everyone in the building.",
        "He pulsed inside me, and I squeezed his cock tight with my pussy as I came. We kissed again, lost in the raging pleasure of the flesh. Or lips danced and our tongues drove deep. I'd never expected such intensity, but I couldn't deny the power of it. My whole body quaked from the ecstasy, and I felt a warm, joyous fullness spread over me.\n\n\"That was amazing...\" I looked up at him, stroking his hair. The thought that I was looking up at a man didn't even throw me out of the moment. It was so perfectly natural, just it was to feel him still inside me, throbbing for our shared wonder.\n\n\"Yeah, thank you.\" He gave me a much more gentle kiss than the one we'd just shared. It was deeper, and far more soulful. I met his lips, and let the feeling of closeness wash over me.\n\nWe just cuddled for a while, naked and intertwined. He rolled off me, and we snuggled under his sheets, basking in the afterglow. It was just a perfect moment.\n\nI don't know how much later it was when he started to stroke my side. That warm post orgasmic place I had been in was just so nice it was hard to leave. His hand felt so right, and I whimpered when it strayed over the side of my breast, but he went no further. I appreciated his restraint, but I wasn't sure that was what I wanted.\n\n\"The night is still young, you know.\" I looked into his eyes with a wicked grin. This time he masked any shock he felt much better than before, and slid his hand over my bare ass. I cooed when he gave me a gentle squeeze.\n\nThat was all it took for him to pounce on me again. I squealed and we wrestled for a bit, stroking, kissing and playing every part of our naked bodies. I'm not sure just how long we were at it, but it must have been well past midnight that I finally collapsed next to him, still naked and as well fucked as any girl could be.\n\nI could get used to this. I thought as I drifted off to a blissful sleep. I don't think I've slept more deeply, and for the moment I forgot that tomorrow would bring another challenge, and with it more new experiences.\n\nEnd Part 3\n\n \n"
    ],
    "authorname": "Farleven",
    "tags": [
        "gender bending",
        "fraternity",
        "magical change",
        "college",
        "pledge",
        "initiation",
        "sex games",
        "one night stand"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/pledging-tau-geta-delta-pt-03"
}