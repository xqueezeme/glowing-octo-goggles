{
    "title": "Divinity Ch. 05",
    "pages": [
        "*Hey my Literotica peeps! I'm back, getting better after another nose dive, but it seems to be sticky this time around. So my ladies started to read my stuff, Sasha's favorite is Divinity, she told me that it was lacking some action from my other, less sexy stuff and wanted to see what I could do with Jason's story. I hope she likes what I've got to offer, as well as my other readers here. Sasha had to step out of my life for a while with the plague that is going on currently, and I miss my little brat. This is dedicated to you honey, stay safe and enjoy!*\n\nI woke up early in a strange place but had two naked bodies pressed against me. Once my eyes fully opened I looked down to the sleeping forms of Claire and Ash cuddled against me. Remembering last night got my cock stirring again, but I felt like now was not a good time. I awoke both of them so we could sneak out of the house, although we took time to share some kisses between us. I got Ash's phone number as we got dressed, and Claire declared she was going to ride home with Ash. We all knew they were going to keep fucking, I had tied them together after all.\n\nYou gave them lust for each other, they'll remain together now. My mind told me and I can't help but feel like I did something wrong. Perhaps their paths were different before I met them but now they were linked. I knew they wouldn't leave one another, their lust would grow into love and they'd be happy together. Was that wrong?\n\nI ignored the thoughts as we quietly made our way out of the house, it was dark and I navigated us around the passed-out people around the different rooms. We shared another kiss before they made me promise to call them soon. After that, I was half-hard getting back into my mom's car. I drove home in the quiet streets of early morning, I flicked some Influence and turned all the lights green on the way home. It was probably a little abuse of power doing that, but I was in such a good mood I didn't care.\n\nIt looked like my parents were home when I arrived back. I used Influence to sneak into the house without a sound. Jumping in the shower and washed last night's events off of me. Even though that was a lot of fun I thought about Professor Needle, I mean Shirly, damn I wanted to spend some time with her again. Plus I always had fun with Midnight, my life was improving so much. I chuckled as I finished washing, getting out, and drying off. I went and finished some of my homework and even went ahead with some other assignments.\n\nI heard my parents get up and move around, I figured I should join them. Coming downstairs I saw my mom starting to make breakfast and my dad return from getting his paper. \"Morning,\" I greeted them as I went to get some orange juice.\n\n\"Morning honey,\" Mom replied.\n\n\"Morning son,\" my Dad stated as he sat at the island and opened his paper. \"Big plans today?\"\n\n\"Nothing on the agenda at the moment,\" I replied after pouring my juice and sitting down.\n\n\"Well do you want to invite Midnight over for steaks tonight?\" Mom asked me as she cooked.\n\n\"Oh I forgot about that,\" I replied, pulling out my phone.\n\n\"We tried to get a hold of you yesterday but you weren't picking up your phone.\" Mom told me, I checked my phone and I didn't have any missed calls. That was strange.\n\n\"I was out in the woods yesterday, so I must not have gotten a signal,\" I replied as I texted Midnight-\n\nMe- Hey do you want to come over for steaks tonight, my mom is asking.\n\nMidnight- Sure I'll be over in the afternoon and we can hang out.\n\nMe- Great I'll see you later!\n\n\"Ok, she'll be over this afternoon,\" I informed them.\n\n\"Great! She's really funny,\" Mom replied. \"So when are you two going to be officially dating?\"\n\n\"Mom,\" I complained as she started giggling at me. Mom made waffles and bacon which I chowed down three plates of food. I was pretty energized from last night so I decided to go for a run. Changed into my workout clothes and grabbed my headphones before I ran through my neighborhood. I wasn't paying attention to where I was headed and went farther than I intended to go. There was an empty-looking house at the edge of town, I'd passed by it a dozen or so times and each time I got a chill.\n\nI found myself in front of the house in question. It was old, had two stories, in disrepair, and the yard was overgrown. Something, I could feel it, something was here. It felt dark and angry, but I continued to walk closer. I stepped onto the porch and froze, my spine tingled as it looked at me through the window. I turned my head and only saw a pair of blood-red eyes in the dark house. Something else bugged my mind but I was too focused on the eyes full of malice looking right into my soul.\n\nMy reflexes kicked in and leaped back off the porch as the creature smashed through the window. It was a large black dog-looking thing, red eyes, mouth full of razor-sharp teeth, cloaked in a black mist. It growled lowly at me, snarling spit out of its oversized maw. I swallowed hard, but I didn't feel any fear, I was above this thing after all. I flicked my wrist and summoned my golden bow, I aimed to fire an arrow but the Black Dog charged at me. I ducked, narrowly avoiding it crashing into me. Darting forward, deeper into the yard but the dog was hot on my heels.\n\nI could feel its hot breath on the back of my neck when I rolled forward. The Black Dog trampled me, bouncing me between it and the ground, but shot past me and slammed into a large oak tree. I slid to my knees, aimed, and fired an arrow from the bow. It hit the dog in the right-back leg, it cried out in pain but turned back to charge me again. I fired another arrow, but it knocked the arrow away with its head.\n\n\"Oh fuck,\" I shouted in surprise as I scrambled to my feet and ran to the house. I jumped through a window, sending glass shattering everywhere. I rolled across the floor, slamming into an antique loveseat, smashing it to rubble under me. \"Ok that hurt,\" I groaned aloud. I didn't have time to worry about it as the Black Dog charged through the window I just jumped through. I quickly fired an arrow, it missed but the dog paused long enough for me to jump to my feet. The arrow I missed had started a fire on the ceiling above us. With the house abandoned the fire started to spread quickly, but that was not my problem right now. I ran out of the room, jumped over the banister on the stairs. Turning I fired another arrow at the monster as it came at me, I hit it in the back. It howled in pain but kept coming at me.\n\n\"What the fuck?!\" I shouted as I took the stairs two at a time till I reached the landing. The Black Dog jumped at me but flopped down and it crashed through an old wall, leaving a big hole. I got to my knees again raising the bow, time seemed to slow down. I took a deep breath as I drew the bowstring back and aimed at the hole. The monster roared as it leaped at me, I loosed the arrow into the Black Dog's mouth, it pierced its throat and flew clean through, exiting through the other end. The force of the blow shot the creature back through the hole it made.\n\nI was panting, this should have been terrifying but all I felt was triumphant. I defeated a monster, a true honest to the gods monster. I got to my feet and smiled at my conquest, my Influence refilled as well. I wasn't even aware that I was using a lot of it, but that would explain why that damn thing didn't eat me. I wanted to enjoy the feeling, but I could feel the fire spreading in the house and the structure groaned loudly. My instincts kicked in, I released the bow and dashed into another room. I charged through the window and landed on my feet on the sidewalk below.\n\nI turned toward the house and saw an explosion on the second floor destroy the remaining windows. Sending glass all over the street, I threw my arms up to shield myself even though I knew it wasn't going to harm me. I tried to catch my breath as I watched the fire erupted through the windows.\n\nShit, I should- I felt something else watching me. I turned to see a cute-looking young girl looking right at me. She had frizzy brown hair, tan skin, was skinny but stacked, she was wearing dirty jeans and a Doors t-shirt. She gave me a thankful smile and I felt there was something more to her, but I heard sirens start to blare down the street. I turned and ran, I didn't want any official questions being asked. I felt there was more to that woman but I didn't have time to work on it. I was blocks away before I stopped to fully catch my breath.\n\nI look back at the billowing clouds of black smoke rising from the horizon. \"What the fuck happened?\" I ask myself between breaths.\n\nHeroes fight monsters. My mind rang with the words, but why here and now? I mean weird shit was going to happen, Midnight told me about that, but what the fuck? I guess I'll talk to her about it later. I used some influence to clean the smoke and sweat off me, then remembered I was supposed to be out running.\n\nWell, I was still a good number of blocks from home anyway, once I regained myself I ran back home. Getting inside my mom was busy preparing the food, Dad was busy cleaning the grill. I rushed upstairs and took another shower, letting the hot water relax me. Today had been crazy, so I stayed in probably longer than I needed to. Once out I dried off and got dressed. Decent shirt and my nicer canvas shorts, and my nice pair of sneakers. I slicked my hair back and made sure I looked decent before coming downstairs.\n\nMy mom gave out a whistle when she saw me. \"Wow, you really like this girl.\" She told me with her patented mom smirk.\n\n\"Mom,\" I whined at her as I sat at the island, which she giggled at me.\n\n\"What?\" She started as she began breaking up green beans. \"Look Midnight is a nice girl, she's funny, seems pretty smart, and she's got it in the looks department.\"\n\n\"Aint that the truth,\" I told her and she reached over to smack my arm. \"What?\"\n\n\"You're not supposed to say that aloud,\" she scolded me but her heart wasn't in it as we both snickered. \"I'm just saying, you could do a lot worse. Like what's her name,\" Mom started to ask me, waving her hand as she tried to remember.\n\n\"Let's not even say her name,\" I told her. We chatted for a bit longer until there was a knock on the door. I went to see Midnight at the door, she wore a dark red sundress, with a black corset, fishnets with a rose pattern, and black mary janes. \"Wow, you look good,\" I told her as she stepped in.\n\n\"Well I like you,\" she told me a matter of factly. Coming up to me we shared a very nice kiss. \"Let's go see what your mother thinks.\"\n\n\"Hey,\" I growled at her, but Midnight laughed it off.\n\n\"Hello Mrs. Dodge,\" Midnight greeted Mom as we walked into the kitchen.\n\n\"Oh hey Midnight, wow you look good,\" Midnight did a spin for her. \"Yea she's a keeper,\" my Mom told me. I rolled my eyes as both ladies started to laugh.\n\n\"Nice seeing you again, Midnight,\" my Dad stated as they shook hands.\n\n\"Thank you, sir,\" she replied.\n\n\"Stop that sir shit, I work for a living.\" We all laughed before settling down and starting to chit-chat. We talked for a while before my Dad spoke up. \"So what do you do for a living Midnight,\" he asked her.\n\n\"Dad, why do you-.\" I started to speak up, trying to avoid the issue.\n\nMidnight put her hand on my shoulder. \"Mr. Dodge, your son and I are special, some special people like us don't like society or the rules that go along with it. So I work for an organization that helps stop people like that from doing terrible things.\"\n\nMy Dad nodded at her as he sipped his beer, satisfied with that answer. \"Alright, I get it, I'm a Vet after all.\"\n\n\"So you're like a cop,\" my Mom asked her.\n\n\"Kind of, it's complicated,\" Midnight explained. \"People like us sometimes take requests, we get in trouble too. It goes to the higher-ups and they send people like me to figure it out more or less.\"\n\nMy Dad looked over at me. \"Are you interested in doing that?\" He asked me pointedly.\n\n\"I don't know,\" I replied.\n\n\"Well you've been studying Chemistry for the last year and a half, is that something you want to go into?\" My Mom asked me this time.\n\n\"He's probably more interested in his Chemistry teacher,\" my dad joked with us. I shot him a look as the ladies laughed. \"Well, I looked her up when you chose that as your major, I got curious.\"\n\n\"Well Jason has options like all of us,\" Midnight explained. \"It's up to him.\" We shared a look before sitting down for dinner. I love a good steak and my Dad can cook a great one, he made about triple what we'd normally eat and that was a good call as Midnight and I ate double my parents. We talked some more after dinner on the patio, until my parents excused themselves at my Mom's behest.\n\n\"So what's up,\" Midnight asked as we sat next to each other outside.\n\n\"What do you mean?\" I asked her.\n\n\"You've been holding on to something all night, I can feel it. So what do you want to talk about?\" She asked, running her finger over my hand.\n\n\"So I fought a Black Dog this afternoon,\" I told her, Midnight gave me an interesting look.\n\n\"Well then, I see you triumphed, or we wouldn't be talking.\" She told me.\n\n\"Yea but,\" I paused, \"you told me I'd be seeing weird shit, but not fighting these things.\"\n\n\"Well yes and no, we're drawn to conflict, I mean look at our parents. They were fighting others, each other didn't matter to them. We're hardwired to fight monsters and shit, that's why I wanted to get you ready in case. It just happened a lot quicker than I honestly expected.\" Midnight thought aloud. \"Everything seems to be happening a lot quicker to you than other people like us, that is a little odd.\"\n\n\"A lot of that going on these days,\" I started sipping my tea.\n\n\"No kidding,\" Midnight smirked, leaning over to kiss me. It was a nice long kiss, I reached over and cupped her cheek. \"Mmmm,\" she moaned slightly as she pulled away. \"I'd love a roll in the hay, but I have work to do tonight and you have school.\"\n\n\"Spoilsport,\" I chuckled but pull her back to kiss me again. \"If you have to go, I suppose we can always meet up later,\" I told her.\n\n\"We will, don't worry your little head about it.\" Midnight bopped me on the nose before she snickered. \"At least walk me out.\"\n\n\"Of course,\" I smiled at her as we rose and I took her hand. We walked through the house, Midnight said her goodbyes to my folks. I walked her to the car, Midnight turned and wrapped her arms around my neck and we shared a tender kiss. \"Call me if you need me,\" I whispered to her as we pulled apart.\n\n\"Relex cowboy, I got this one, but if you want to help out in our world, the offer will always be open,\" she whispered back and kissed me again. I watched her drive away before heading back inside. I had to finish up some homework, so I bid my parents goodnight before heading back up to my room. It had been a long day and I honestly wanted to relax, but of course, it is never that simple.\n\nI opened my door and turned on the light, taking a breath, before looking around.\n\n\"What the fuck,\" I proclaimed as I instantly summoned the bow in my hands.\n\nA woman was sitting on my bed, frizzy brown hair, tan skin, wearing a light black dress, fishnet tights, with flowers, skulls, and thorns patterned into them, her feet dangled over the edge of the bed. She was holding a white rose in her hand, a necklace with a silver trinity piece on it, and a happy smile on her face.\n\n\"Hello,\" she greeted me cheerfully.\n\nIt took me a minute to remember where I had seen her from. \"You're the girl from outside of the house,\" I stated as it hit. \"Who the hell are you?\" I asked, keeping the bow pointed down but not releasing it.\n\n\"Well you can call me Sage,\" she replied, holding up her hands like she was presenting herself.\n\nI knew she was lying, but in an honest way as she wasn't trying to hide it. \"So I'm guessing that's not your real name.\"\n\n\"Oh of course not, once you learn a witch's real name, you have power over her,\" Sage told me nonchalantly.\n\n\"You're a witch,\" I stated more as a fact than a question, I drew the bowstring back.\n\n\"Easy, I'm a good witch,\" she told me with a disarming smile, as she dropped the rose in her lap and leaned back on her hands.\n\n\"Yea that's not making me feel any better,\" I told her, I wasn't being won over with her charms. \"The last witches I met didn't exactly rub the right way.\"\n\n\"Oh is that so, rough vagina?\" Sage asked with a knowing smirk on her face, I gave her an unimpressed look. \"Alright, if you'll let me explain, I'd be happy to.\" I raised an eyebrow but didn't say anything. \"Thank you for not shooting me,\" Sage began as she sat up, folding her legs under her. \"I'm sensing you're new to the world of magic,\" she asked me.\n\n\"Somewhat, my Divinity awakened about a week ago,\" I informed her.\n\n\"Hmm, interesting,\" her eyes narrowed as she was lost in thought for a moment. \"Now there are bad witches, like bad people. They make deals with bad things and seek out power for power's sake. That kind of power,\" Sage shook her head remembering something. \"Let's just say it gets in the heads of mortals, like me.\"\n\n\"Still not making me feel any better about the whole witch thing,\" I continued.\n\nSage chuckled and gave me a hungry look. \"Like I was saying bad witches do bad things, that does give us a bad rap, for the most part. On the other hand,\" she picked up the white rose. It started to float and spin slowly in the palm of her hand. \"Good witches like me help people, I heal the sick, I find lost children, I'm not the cause of their disappearances.\" I reached out with my influence, she didn't try to stop me, she was telling me the truth. I took a breath before I released the bow. \"Thank you,\" Sage whispered, she patted the bed next to her. \"Come and sit with me.\" The rose floated away and set down on my desk.\n\nI gave her a look before pushing my shoes off and slipped onto the bed with her. \"Alright, so why are you here, talking with me?\"\n\n\"Well I'm here to thank my rescuer,\" Sage responded, turning so we were face to face. \"And I was hoping we could make a deal,\" she told me with a smirk.\n\n\"There it is,\" I started to get up but Sage held me down.\n\n\"Relax, let me finish,\" Sage stopped me, climbing into my lap. \"So yes, bad witches, bad things. Good witches, mostly good things,\" she continued. \"Witches like me don't take power, or consort with bad things. I ask for it, make deals with good creatures.\"\n\n\"I'm a good creature?\" I asked her with a chuckle.\n\n\"Sure,\" she put her hand on my chest. \"You have a good heart, I just see...\" Sage paused and her eyes went into a faraway look. It was like she was trying to see something, like it was far away, but hazy and cloudy to her. \"Your future isn't determined yet, there's something in the way, a choice. A choice you won't want to make, but you'll have to, love or power...\" Her voice was dark, it sounded like she was speaking from the Fates themselves. I watched her closely, her eyes looked sad, then shocked. A tear rolled down her cheek. In a second it ended, Sage shook her head and wiped the tear from her cheek before smiling back at me.\n\nShe had seen the Loom of Fate itself, I heard myself speak before I realized I was talking. \"What did you see,\" I asked her in a whisper.\n\n\"Oh,\" she piped up like she was surprised she was talking. \"Sorry, I don't know,\" Sage rubbed her eyes. \"Touching the Loom... Is hard. I try not to if I can, but I wanted to, no. I needed to see your heart,\" she told me.\n\n\"And,\" I inquired.\n\n\"You're good, you just have to watch your other-self. People like you have to be careful, where total power corrupts, it's twice as bad for you all.\" Sage informed me, she looked into my eyes. \"I can't remember everything I see from the Loom, but I saw that you're a good guy.\"\n\n\"Ok, what deal do you want to make, I was warned about doing these things,\" I informed her with an unimpressed look.",
        "\"Well, you saved me,\" Sage reminded me.\n\n\"From the Black Dog,\" I asked her.\n\n\"Well yes and no,\" she replied and I gave her a look. \"So I was held in that house, another witch kept me locked in there. One of her pets made sure I didn't leave until you happened to stumble onto the house.\" Sage explained, she was looking me over, lightly running her hands over my shoulders. \"Taking out her pet allowed me to leave, another decade or so in there and I would have been a goner.\"\n\n\"A decade?\"\n\n\"We are long-lived,\" Sage informed me. \"If we know how to live,\" she ran her hand through my hair. \"So I'm asking to make a pact with you.\"\n\nI focused and she still was not using any magic on me. \"Alright, what's this pact?\" I asked her.\n\nSage smiled happily as I didn't say 'no' right away. \"If you allow me, I'll siphon a bit of your power for my own.\" I gave her a look. \"It's nothing you'll miss,\" she leaned back, pressing her ass against my groin. \"You're like a well, a deep well at that. I take a small drink when you refill the well.\"\n\n\"That's it,\" I asked her, \"when my power refills you take a little bit. How do I know you won't take it all, or start small and take more and more until you suck me dry?\" I inquired, watching her closely.\n\nSage rocked head from side to side. \"I admit it sounds too good to be true, but I'm a woman of my word. I promise I will only take a sliver of your overall power. In exchange, if you ever need me to help you, with just about anything, I will give you a phrase and come running.\" She told me, holding up her right hand as the rose continued to spin in the air.\n\nI knew she was telling the truth, I knew deep down I wouldn't miss the sliver of power she wanted from time to time. I felt that this should bug me, I mean Midnight had warned me about making deals with other creatures, but I did save her.\n\nShe owes you., you saved her life, enjoy her\n\nI paused to shove the godly voice down, Sage seemed to notice my struggle but she didn't remark on it. I got the feeling that she liked that I was wrestling this side of me down. \"So, just a sliver, why just a sliver?\"\n\nSage gave me a smirk and my eyes saw her. She was a prime and proper young woman, hair tied tightly back tightly. She had seen women burned at the stake. Then she was the same age, but wild hair, worn clothes, mixing herbs in a cottage. People sought her out when no other doctors could help them. Children that were lost in her woods were returned, warm, and fed. They tried to burn her, but she disappeared every time. Healing the wounded in the Civil War, World War I, World War II, all through the years. Drug overdoses, gunshots, stab wounds, she delivered kids on every continent. Sage, but not Sage, whatever her real name was, she had seen the world in the worst ways and she still only wanted to help.\n\n\"A sliver of power to you is a feast to me, I can do so much good with an ounce of your power.\" She replied as I was back in my room and looking at her again. \"The sick can be healed, the lost can be found, I can and will be a force for good.\"\n\n\"I accept,\" I told her, I knew this was a smart move.\n\n\"Thank you, Jason,\" she whispered to me. Sage started to lean closer.\n\n\"So how does this work,\" I whispered back.\n\n\"We seal the deal with a kiss, of course, then I was hoping you'd let me show you how thankful I am that you saved me.\" Sage was maybe two inches away from me.\n\n\"My parents are home,\" I couldn't believe those words left my mouth.\n\nSage grinned at me. \"I doubt that's a problem for you,\" she took my chin in her hand. This would be my last chance if I wanted to back out, but having a witch in my pocket would be more helpful than a hindrance. I flicked enough Influence around that, not a sound would leave my room and no one would bother us. Her lips pressed against mine and it felt like I was struck by a horny lighting bolt.\n\nSage pressed her body against mine as we fell back on the bed. Her hands ran through my hair, and mine found her waist. She groaned as we kissed, I was getting hard, it was sliding through my pants to press against her. Sage let out a yelp when we pressed harder against each other. She pulled back to look at me, hungry, excited, Sage wanted this, wanted me badly. My hands reached behind her, teasing the backs of her legs, feeling the fishnets and the soft flesh underneath. Her body felt good against mine, she tasted like honey and lavender when her mouth opened and our tongues met. With her legs straddling me it gave me easy access to her ass, I slid my fingers across her cheeks, I continued to tease her skin.\n\nI reached further down, discovering that the fishnets were crotchless and she wasn't wearing anything else down there. I rubbed my fingers against her tender pussy lips, I felt them get wet as I started to pleasure her. Sage broke the kiss and moaned out loud above me.\n\n\"Oh damn, it's been too long,\" she growled out loud as she gripped my shirt, using the leverage to push herself down on my hands. \"Your own hands get boring after the first twelve years or so.\"\n\n\"Fuck how long were you in that house,\" I asked her before I started to kiss her neck.\n\n\"Mmmm, roughly thirty years, I wanted to see Sublime the night that bitch captured me,\" Sage explained.\n\n\"Who was it,\" I asked between kissing and sucking her neck.\n\n\"Don't worry about her, I'll be settling that score soon enough,\" she told me.\n\n\"Maybe I can help,\" I started to tell her.\n\nSage took my chin in her hands again. \"Hey, no more shop talk,\" she scolded me. \"Let's focus on the now.\" Sage gripped the back of my head, pulling me back into our kiss. I groaned as her tongue slid into my mouth and I pressed my fingers into her wet, hot center. My middle finger sliding into her pussy, she was so wet already, my finger was easily coated with her juices. I started to pump my finger in and out, Sage bit on my bottom lip and sucked it into her mouth playfully. \"Use your magic on me, I haven't had a good orgasm in years.\"\n\n\"Oh,\" I pushed more Influence into my hands. \"This is what you want, you want to cum on my fingers?\"\n\nSage growled lustfully as my Influence started to flow into her and made her moan with pleasure. \"Fuck I want to cum so bad,\" she gushed before I inserted another finger. \"Oh, so good!\" She whined as I pumped her cunt rapidly with my fingers. Taping her g-spot repeatedly, sliding another hand down to play with her clit. I rubbed her slowly, feeling her legs quiver, she was close. \"So! Fucking! Good!\" Sage cried out as her orgasm hit her. \"Ah! Ah! Ah!\" I slapped my hand into her, pushing more Influence into her so she could ride out the pleasure for a bit longer. Once she calmed down, I removed my fingers from her, admiring how sticky they were.\n\nI brought my hand to my face so I could taste her cum from my fingers. Sage watched me as I sucked one finger into my mouth. Her pussy juice tasted like vanilla, very sweet vanilla. I raised an eyebrow at her. She giggled as she took my hand and put my other finger into her mouth. After sucking it clean, she ran her tongue up my finger slowly.\n\n\"I was wondering if I had enough juice to pull off one of my favorite tricks,\" she bragged to me.\n\n\"You can change how your pussy tastes,\" I asked her.\n\nSage started to open my shirt, it was gone before she answered. \"It's simple enough, and like my suitors to have a treat when they are down there.\" Sage continued with a giggle. My undershirt was gone too, I pulled Sage's dress up and off of her, the fishnets tights were crotchless as I expected and rested on her stomach. Her body was great, tone waist, nice thighs, I peeked at her rear, a nice heart shape. It was Sage's good-sized D cup breasts that currently had my attention as she shoved her breasts in my face. I began kissing, licking, and sucking them, even her skin tasted sweet as I pleasured her tits with my mouth. \"Oh by the Goddess,\" she whined in pleasure.\n\nSage pulled me up into a sitting position as she undid my pants, trying to rip them off while she pushed them down. My hard cock came springing out and Sage paused to grip me. \"Surprised,\" I asked with a moan as she stroked it gently.\n\n\"A bit, not every Demigod is so... Gifted, as it were,\" Sage informed me. She leaned me back to make it easier to suckle on my shaft. Her mouth was warm and wet as plunged up and down repeatedly for a good couple of minutes.\n\n\"Fucking hell,\" Sage was an expert at this. I knew that if she wanted me to, I would cum in her mouth. Even with my Influence, she could counter it enough to have me blasting my hot cum down her throat. Sage moaned on my cock, sending a wave of pleasure rushing through my spine and into my brain. I was shaking, and I was gripping my comforter with two sweaty hands as she tried to suck my soul out through my cock.\n\nI was right on the edge when she pulled back, licking her lips dramatically. I was panting and annoyed being so close to my climax. \"Don't want to pop you too soon,\" Sage told me with a chuckle as she wiped the spit from the side of her mouth.\n\nI had gone from annoyed to angry.\n\nHow dare this little thing deny you.\n\nI shoved her down on the bed, Sage squealed as I did. I pushed my pants down before I climbed on top of her. She was so wet I slid inside her so easily, she gave no resistance as I plugged her cunt.\n\n\"Oh! Oh, fuck!\" Sage wailed out as bottomed out inside her. She took my whole cock, and I paused to let the pleasure of being insider her wash over me. I watched Sage's eyes roll back in her head. \"This is amazing,\" she groaned into my ear.\n\nI growled at her as her cunt clutched my cock, I pinned her down under me. Her eyes shot open when I held her down. I wanted my climax. I started to thrust into her roughly, pulling back and slamming down on her. My bed was shaking and hitting the wall on my downstroke. Sage's pussy was making squishy sounds as I pounded her, the woman herself was gasping each time I was fully inside her.\n\n\"Gods! Goddess! Fuck! Oh! So! Big!\" Sage stammered with each thrust. I was getting my pleasure, I didn't care about her climax. I pounded away at her for a bit before I pulled back, bringing her to the edge of the bed. I put her feet on my shoulders before I entered her again. My balls slapped her ass as I continued to fuck her roughly.\n\n\"Fuck your pussy is amazing!\" I howled as I felt myself getting close to cumming.\n\n\"Oh, Gods damn! Cum inside me, I need to feel your power! Give me your Divine power!\" She screamed as her orgasm took hold of her again.\n\n\"Argh!\" I bellowed out, when her pussy clamped down on me again it sent me over the edge. I thrust into her as hard as my body would let me, as I fired repeated blasts of jizz into her hot wet cunt. I spread her legs as I fell on top of her, pressing my full weight on top of her. Using her body to please as I just kept cumming, my climax seemed to last for hours as I repeatedly pumped her forcefully. It felt like Sage was sucking my power out as I came, I did feel like she was draining me, but as soon as my Influence hit empty my climax hit its crescendo. I froze on the downward thrust, I was fully inside her, my cum leaking out of her. I felt incredible like I was flying through space like I was swimming in the deepest ocean like I was riding an amazing amount of pleasure.\n\nThen I was slowly falling, my orgasm and my self spent, I noticed I had either rolled over or Sage had pushed me off of her. I was covered in sweat, panting like a dog in the middle of summer, my muscles spasmed all over my body, my cock was still hard and twitching. Once my mind was back in my head, I heard Sage singing softly into my ear, it was an old song. I couldn't hear the words but it was soothing, I felt her hand run lightly over my chest. Where ever her fingers touched me my muscles stopped spasming and my body was beginning to relax.\n\nSoon enough I was a relaxed sweaty mess that Sage was invested in now. My well was empty, Sage had sucked it out of me somehow, but as soon as my breathing returned to normal my Influence refilled instantly. I opened my eyes to see Sage sitting with my head in her lap, caressing my face gently.\n\n\"You drained me,\" I grunted at her quietly.\n\n\"Sorry,\" Sage apologized to me. \"I needed the boost, and I knew your power would get refilled. I was running close to empty, my other deals got broken while I was locked away, I haven't had any fuel in about eight or nine years.\"\n\nI wanted to be mad at her, but with our pact sealed I knew that she wouldn't do that again. \"Alright,\" I told her softly, \"just warn me if you are going to do that again.\"\n\nSage giggled lightly at me. \"I will, but I should be good for a while. At least the ride was fun right?\" I nodded in her head, her fingers lightly ran across my face. \"You're gifted, that's for sure,\" she informed me. \"Even before that bitch got me, it had been quite a while since I've gotten fucked like that.\"\n\n\"When was the last time you got it like that,\" I asked her.\n\nSage thought for a moment, putting a finger on her chin, it was quite cute. \"I would have to say eighty-two, above a jazz club in New York. He was good and rough with me, but not as long or thick as you.\"\n\nThat helped my ego out some. \"So I am curious,\" I started to ask her. Sage looked down at me. \"How do you become a witch?\"\n\n\"Oh,\" she yelped out, a bit surprised. \"That was not what I expected you to ask me honestly,\" Sage told me, her hand went to my chest to continue to caress me gently. \"Well it depends, I've heard of a few different ways. You can get a hold of one of the magical books, there's a good number of them. That's risky though as sometimes they are copies and there can be errors. Finding an original is worth two king's ransoms,\" I nodded my head at her. \"The easiest is to make a deal, find a magical creature, and negotiate.\"\n\n\"What do they ask for?\"\n\nSage shrugged at me. \"It depends on the creature, sometimes they want a thing, some want actual gold. Others might want your name, they might want a favor, sometimes they just want sex.\" She giggled again and I raised an eyebrow. \"That's actually what happened to me,\" she began to tell me. \"I had come to the new world, it was very exciting seeing everything. I was meant to be married off to an old fuck, so I ran away. Got lost in the woods, stumbled onto a small lake. I took a drink and decided to wash up in the lake. Once I was in the water, I got a feeling like I wasn't alone. In the water I noticed a pair of eyes watching me, I was scared but didn't run away. A beautiful blue skin woman came up from the water, a nymph.\n\n\"She asked me what I was doing there, and I told her what had happened. She listened to me as we sat in the water near the shore. I learned she liked to be called Sabrina, and she asked me if I wanted power. I hesitated long enough for her to tell me that there were risks involved, but she would help me. I finally agreed and we made love on the shore of the lake, my first sexual experience. I traded my first time with her for power and spent almost a year learning everything I could from her. I learned to change my appearance, wandered back to civilization, and found out that the man I was supposed to marry had died at sea with a different bride. So I stayed for a while and became the town's healer.\"\n\n\"Huh, I almost didn't think it would be that easy if I'm being honest,\" I told her after I listened to her story.\n\n\"Well it's like winning the lottery, some of us are just lucky,\" Sage informed me, her hand lightly tickling my stomach now. \"Although I learned and grew through the years, magic has always been easy for me. I've spoken with others and they have to work twice as hard to get to my level.\"\n\n\"So how did you get stuck in that house,\" I asked her.\n\nSage grumbled quietly to me. \"We all have vices,\" was what she said. I turned my head to look into her eyes. \"I like candy, a good steak, and sex. She planted a dozen traps for me over the years and I avoided all of them. Until this little kid offered me some gummy frogs and that bitch poisoned me. She wanted to lock me away and drain my power, but I hid it so well she couldn't access it. So she just decided to keep me there until I died, then she could figure it out after my death.\"\n\n\"You can do that?\"\n\n\"Yes,\" Sage told me in a matter-of-fact voice. \"A person who knows what they are doing can study a body and learn all their little secrets. It takes time and effort, but witches can prolong their lives almost limitlessly.\"\n\nI pondered this information, wondering if the same could be said for Divines, like myself. I reached up and caressed her back gently as I laid on her lap. Her hands caressing me was nice, actually being with Sage felt good, but I liked Midnight. I mean the girls from school were fun, I doubted there would be a future with Professor Needle, I mean Shirly. Midnight was my first lover and mentor, I suppose there was a bit of extra affection there, I felt myself smiling as I thought about her. Sage though, there could be something there, I felt a flutter in my heart when I looked up at her and she smiled at me.\n\n\"Will you lay with me tonight, I'm a cuddle slut,\" Sage told me with a giggle.\n\n\"Sure,\" I told her. We shifted under my comforter after I used some Influence to clean our collective cum from it. I held Sage against me as we laid on our side, wrapping my arms around her as we got comfortable. Sage cooed sweetly against me, her soft skin felt good against me. I meant to ponder on this feeling more, but I was exhausted and once we stopped moving I passed out.\n\nI was sure I was asleep as I walked through this forest, it was old, ancient. I noticed I was naked as the breeze ran through the trees and I felt it run across my body. It was cool and refreshing, like a cool drink on a summer day. The gladius I was holding was getting heavy in my hand, I wondered why I didn't have the sheath for it. That would be easier to carry but I didn't have time to worry about it. A monster crashed through the trees, charging me. I managed to dodge the best and stood my ground. It had the body of a lion with both a lion head and goat head and the tail of a poisonous snake.\n\nA Chimera, be careful it can breathe fire.\n\nI discovered this first hand as the goat's mouth opened and a gout of flame flew at me. I dodged again, diving out of the way, the underbrush scratching my skin as I avoided the deadly attack. I jumped back to my feet in time to snatch the snake's head darting out to bite me. I struggled but managed to hold it away from me, but the lion's claws raked across my shoulder. I cried out in pain but chopped the snake's head off. I tossed the dead head away and leaped away as the goat breathed more fire at me. I ignored the warm blood and pain on my shoulder as after the fire died away, I jumped back at the beast. I slashed at the lion's body with the gladius, giving it a gash across its chest.\n\nThis did little but gave the monster pause to howl in pain before it leaped at me, trying to maul me. We tumbled across the ground as I held on to its fur and flung us further across the ground. Together we bounced several times until I landed on my back, the beast on top of me. I used my strength to heft the creature off of me, tossing it away. The Chimera slid across the ground, it looked stunned and I took my chance. I threw myself at the thing, taking the goat head by the horns, I hacked at its neck with my sword. I managed to sever the goat's head before the Chimera threw me off of its injured body.\n\nI rolled across the ground but recovered as I grabbed a root from the ground to stop myself. I got to my feet as the beast did the same, it was down two heads, and I was injured. My shoulder hurt, but I ignored the pain as we sized each other up. I dropped my sword to the ground, I wouldn't need it, I could do this with my bare hands.",
        "We charged at each other, slamming together, the force of the blow swept across the area, shaking the tree limbs and kicking up dust around us. I gripped the lion's head by the neck, it gripped me by the shoulders, its claws digging into my skin. I knew I was bleeding, I knew it hurt, but I was so focused on besting the monster I didn't feel it. Adrenaline pumped through me as I called on my Divine strength, pressing harder and harder on its neck. It cried out in pain, I cried out in frustration. I just wanted this fucking thing to die already!\n\nI roared in pain as I felt the snake's head bite my leg, it must have still been alive and managed to slither up and get me. My pain turned to anger, no Divine retribution, as I felt my power flow through and I ripped the Chimera's last head from its body. I dropped the lion's head and pulled the snake from my leg. Holding it above my head I called upon more power and lighting struck it and me. Destroying the snake's head and purging the poison from my body.\n\nI bested the beast, I won the challenge, I was victorious against one of my ancient enemies. I was powerful. NO! I was power itself!\n\nI was shocked awake, in my bed, in my room, in my home. My heart was beating so fast I thought I was having a heart attack. I scrambled out of bed and fell to the floor on my hands and knees, wheezing loudly as I tried to catch my breath. I was still naked, covered in sweat again, and my shoulders were killing me. I rested my head against the floor as I recovered.\n\nWas it a dream? Was it real? Was it someone's memory?\n\nThese thoughts swirled through my head, as I rolled over on my back to the floor. I didn't know, but it seemed to not matter because once I could focus I used my Influence to heal my shoulders. I didn't have wounds but I did feel bruises on them, I rid myself of that issue. I was so focused and distraught that when someone shifted on my bed loudly, I shot up to see. Sage was still there, sleeping peacefully on my bed. I was curious how I managed to get out of bed and didn't disturb her. I slowly got to my feet as I tried to be quiet, I didn't want to wake her up now. My room was still soundproof from earlier, so I wasn't worried about my parents.\n\nI took a deep breath and thought about getting some water when I looked at my door, and I saw a jacket hanging from one of the hooks. I had never seen this one before, I approached the door to look at it. It was a leather coat, fur along the collar, on the left sleeve there were two curved goat horn studs on the cuff. A snake design was sowed on the back that coiled around the right arm, the snake's head ending near the cuff. I took it off the hook and put it on. I had a mirror on my closet door and looked at myself.\n\nI mean it was strange to wear a coat naked, but it suited me like it was made for me. It was a gift for triumphing against the Chimera. It was armor, it made me feel strong, it would give me the Chimera's abilities.\n\nThis is the coat of a God.\n\nI knew it was wrong to think that, but it was, this was made on Olympus for me. I would be the only one who could wear it or use its gifts. I could have died in that forest, but I didn't, I trusted my powers and prevailed. I took off my reward and hung it back up. I knew I would need it, but my exhaustion hit me again. I used my Influence to avoid waking Sage as I got into bed, and went right back to sleep after she cuddled up against me.\n\nI didn't dream, or whatever the hell that was, the rest of the night. I awoke early again, this time with Sage on top of me. I started to wake her by running my hand along her back, her skin was cool against my hand. She purred sweetly against me, rubbing against me as she woke up with a smile on her face.\n\n\"Morning hero,\" she whispered to me. Sage leaned up and kissed me deeply, it was a long, sweet kiss. She pulled back to rest her chin on my chest and watch me for a moment. \"Big plans today?\" Sage asked me.\n\n\"Class I'm afraid,\" I responded looking back at her.\n\n\"Well I was hoping you could show me some of the new things in the world, but exploring has always been something I've enjoyed,\" Sage admitted as she started to run her fingers over my chest. \"I guess we should figure out a way for you to contact me.\"\n\n\"You said you'd give me a phrase,\" I inquired.\n\n\"Oh, that's for emergencies, like you can't get a hold of me through normal means. Like your life is moments from being extinguished, understand?\" I nodded my head as the edge to her voice meant business. \"So do you have a phone number?\"\n\n\"Yea I have a cell phone,\" I told her.\n\n\"Oh those big block things,\" Sage asked, turning her head to the side.\n\nI chuckled remembering that cell phones were really big until the early two-thousands. \"Ah no, they've advanced a lot over the years,\" I reached over and grabbed my phone. \"They are about this big these days, and have access to the internet.\"\n\n\"The internet isn't that just for like email and games?\" she asked me surprised.\n\nI couldn't help but chuckle some more. I sat us up and gave her a tutorial about how smartphones work these days. She was facialized by it, and it was super cute to answer her questions and show her how much things had changed over the years. Sage wrote down my number on a piece of paper when I was finished.\n\n\"Alright, well I suppose I will contact you when I'm all sorted out,\" Sage stated as she put her dress on. I flexed some Influence to clean me off as I was starting to run out of time this morning, and I was hungry.\n\n\"Ok, I'll keep an eye out for your message,\" I replied as I started to get dressed with her.\n\n\"Hey,\" she stopped me from putting on a shirt, putting a hand on my chest. Leaning down she kissed it gently, leaving a magical mark on me. \"You're under my protection now,\" Sage informed me as she pulled my head down to her and we kissed again. She turned my head after the kiss and whispered words of power into my ear. I would remember those words for the rest of my life, even if I never had to use them. \"Thanks again for, well everything Jason.\"\n\n\"You're welcome,\" I responded before something hit me. \"Wait a second, how did you know my name?\"\n\nSage gave me an unimpressed look. \"I'm magic honey,\" she told me with a smirk. Giving me another kiss before she snapped her fingers and disappeared. I chuckled a bit as I finished getting dressed and made my way downstairs. Mom was cooking pancakes, nodding her head to the soft music playing.\n\n\"Morning Mom,\" I greeted her as I took a seat at the island.\n\n\"Morning dear,\" she responded as she flipped what was in the pan. \"You look well-rested,\" she stated putting a plate full of pancakes in front of me.\n\n\"Thanks, Mom, it was good to just relax last night,\" I told her as I started to work on my food. I wasn't about to tell her about Sage, the crazy sex, the dream thing, and the jacket.\n\n\"Yea we didn't hear a peep out of you once you were upstairs, did you finish your homework,\" she asked me.\n\nI didn't but that wouldn't be an issue when I got to school. \"Oh yea, I just put in my headphones and tackled it.\" I hated lying to her, but I wasn't about to confess to using my powers to cheat. I mean was it cheating, just using an advantage, I already knew all the information anyway. Godly powers or not I was always pretty good at school.\n\n\"That's good sweetie,\" Mom responded as she set up a plate for her and Dad. \"I think you'll be on your own for dinner tonight, I have a dinner meeting and your Dad has clients in from out of town.\"\n\n\"So, steaks and strippers,\" was the running joke.\n\n\"As long as he looks but doesn't touch,\" Mom joked with me.\n\n\"I never touch,\" Dad commented as he came into the room. \"I know the rules,\" he stated before coming up to Mom and kissing her.\n\n\"Good cause it's never getting any better than this,\" Mom chided him as she displayed herself for him. He growled at her before kissing her again.\n\n\"I am still in the room,\" I stated between bites. They both laughed like parents do when they embarrass their kids. We had a nice breakfast and armed with this new information I wondered what I would do with my night. I grabbed my bag and wished them all a good day as I headed to class. I rushed to campus, I had science classes with Professor Needle all day. I turned my brain over to her being my Professor and not a lover, but as I walked into class, I discovered how hard it was going to be.\n\nProfessor Needle is usually dressed in a skirt, nylons, sensible shoes, and a blouse under a lab coat. I wasn't sure what today was different, but I could feel my cock get hard when I spotted her. The skirt was shorter than normal for her, her typical nylons were silk with the seam up the back of her legs, and her blouse tighter than normal as it strained against her great breasts. It was the heels, she was wearing heels, they were short, like two-inch heels but still. I smirked at her walking into the room. Her smile was welcoming but her eyes screamed 'fuck me'.\n\n\"Morning Mr. Dodge,\" she welcomed me into class.\n\n\"Good morning Professor,\" I replied as we shared a knowing smile. \"Have a good weekend?\"\n\n\"Well Friday was exciting, but the rest was rather boring,\" she replied.\n\n\"I'm sorry to hear that, perhaps your night could get exciting,\" I told her.\n\nProfessor Needle raised an eyebrow at me. \"Perhaps, I will have a dinner companion this evening.\"\n\n\"Well, it sounds like you have a plan,\" I smirked at her before I went to sit down. I sat near the back of the class again, making sure no one came to sit next to or behind me. It helped that Monday was usually a light day for attendance since quite a few people were nursing hangovers, I mean this was college after all. Professor Needle was very lively teaching today, reaching above her to write on the chalkboard, her skirt straining against her ass. You didn't need to be a Demigod to know that more eyes were on her ass than on the board, but I knew I was the only one she was doing this for. Chemistry passed by quickly enough, there was a break before biology and I was thirsty.\n\nI ducked out of class quickly to get a drink, Professor Needle watching me as I left. I gave her a wink, flinging some Influence to make her flush for a second. Some color touched her cheeks and she licked her lips as I walked out. Damn, she was so sexy, I knew she was divorced and hadn't had many suitors before I'd had my Arousal Spike. I knew that wasn't common information, my Divinity was giving me this information. I could learn any mortal's dirty little secret if I wanted to.\n\nSuch small creatures, aren't they.\n\nI squeezed my eyes closed for a second, it was getting harder to push the Godly voice from my head. It was like there was another person up there, like a different me, and he was getting louder and louder. I needed to figure out how to balance it all out, I needed to stay grounded. Midnight warned me that people like us that got too big, got handled, forcefully. That was the last thing I wanted to happen to me. I doubt there was a lot of due process with the Counter.\n\nEven with these thoughts going through my head it still didn't stop me pressing my hand to the soda machine and making it dispense me three bottles. I put two in my backpack and cracked open one. Walking back into class while drinking it, I noticed that the room was empty, except for Professor Needle. She was bent over the teacher's desk, her ass pointing out, straight at me when I walked in. There was easily fifteen minutes before class started, I closed the door behind me. Spreading some Influence over the door so no one would come in.\n\nI walked up to her, putting my hand on her ass and squeezing it. Shirly groaned as I caressed her cheek. \"Jason, you naughty boy,\" she whispered out to me.\n\n\"Sorry I couldn't resist,\" I told her before reaching under her skirt and getting a handful of soft flesh.\n\n\"Oh it feels heavenly,\" she moaned softly. \"But we can't, not here.\"\n\n\"Doesn't that excite you?\" I asked her quietly. \"Getting caught with me, doesn't that make you wet?\"\n\n\"Oh fuck,\" she moaned at my question. \"Jason,\" she groaned again as I slid my hand down and cupped her pussy. \"Quickly then,\" she mumbled, \"play with me quickly.\" I pulled her skirt up and saw the lacy black thong she was wearing, I pushed the cloth down her ass and legs before slipping two fingers inside of her. She gasped as I did, her juices running down my hand as I quickly pumped her cunt with my fingers. I sent Influence to my fingers as I finger fucked my hot Professor. \"Oh, fuck me, god you make me feel like a horny teen again.\" Shirly hissed, her hands gripping the sides of the desk.\n\nI chuckled as I gave her intense pleasure, my thumb getting wet and I started to rub her clit. She shuddered and her legs began to shake, I wanted to prolong pleasing her but the class was going to start sooner rather than later. I pushed more Influence into her pussy, she babbled incoherently. \"Cum for me Professor, cum now,\" I whispered to her.\n\n\"Oh! Fuck!\" She cried out as her orgasm took hold of her. Her pussy walls clamped down on my fingers, I didn't need to pump her cunt but I wanted to. I let her ride the climax for a good couple of minutes. Once she was coming down, I pulled my fingers out of her as Shirly panted still bent over the desk. Recovering enough to stand, I helped pull her skirt back down, Shirly turned to me, took my hand, and sucked her juices off my fingers.\n\n\"Gods damn you're sexy,\" I whispered to her. She smirked at me after licking her lips. \"Dinner, tonight, your place. Wear something sexy,\" I told her.\n\n\"Yes sir,\" she whispered back. Stepping back she bent over and picked up her thong and handed it to me. I grinned as I took the thong, it smelled like her as I put it up to my nose. She snickered as I shoved them into my pocket, when she turned back I gave her a slap on her ass. This caused her to gasp and moan at me as I walked back to my seat. I dropped the Influence on the door before class started, used a little more to clean the remaining juices from my hand. I would have licked it clean, but we had run out of time, and it was risky enough as it was.\n\nAlthough she had just cum Professor Needle she was quite composed through the next class. I found myself bored about halfway through though, I knew all this information but I still needed attendance to get a good grade. Mercifully class ended quickly enough, but I still had a lab to go to afterward. I wasn't looking forward to it as I packed up my stuff and was going to head to it.\n\n\"Mr. Dodge, can I get a minute please?\" Professor Needle called out as I headed for the door.\n\n\"Of course Professor,\" I replied, suddenly curious. I stepped aside to let people through the door.\n\nWe waited for everyone to file out of the classroom, once they were gone she assaulted me quickly. Shirly pulled me into a rough kiss, her tongue pushing its way into my mouth. We shared the kiss for a moment before she pulled back. She quickly shoved a piece of paper into my hand.\n\n\"My address, come in through the back, seven sharp,\" she started to tell, as she reached down and gripped my cock, rubbing it softly. \"Bring your A-game,\" she told me.\n\n\"I always bring my A-game,\" I shot back before pulling her into another kiss. She moaned into the kiss and my cock started to get hard, but I had to pull away. \"I've got a lab,\" I reminded her.\n\nShe growled in frustration but rubbed my cock faster. \"You save this for me, I want you to cum inside me again.\"\n\n\"I promise,\" I groaned at the pleasure she was giving me. I let her stroke me for another moment before I had to take her hand off me. \"Save your energy, you'll be needing it tonight,\" I whispered as I kissed her hand. I turned and left the room, forcing my cock to go down, which was hard because I was tempted to just bend her over the desk and fuck her. Waiting makes it all the sweeter though, I told myself as I walked to my lab.\n\nI wanted to thank all the Gods that Professor Kem was an older professor, he had tenure and just stopped giving a fuck a decade or so ago. I finished my lab early, showed him my results, and got let go early. I was going to head home, finish up some work, and get ready for my dinner with the sexy professor.\n\nI walked to the quad. I had to cross campus to head home. A few people were milling about, either waiting for the next class or studying. I was just walking when I spotted some commotion coming my way. A group of large guys all wearing letterman jackets pointed at me and headed toward me. Part of me was scared but-\n\nPathetic, do they truly think they can contend with a God?\n\nAs much as I was beginning to hate that voice, it had a point. I knew I wasn't in any actual danger, I was more worried about causing a scene, in the middle of the campus.\n\n\"This is him,\" a rather large guy walked right up to me. \"I heard you like to pick fights with your betters,\" he told me, poking me in the shoulder, what's with 'tough guys' poking you in the shoulder all the time?\n\nI looked at my shoulder, suddenly glad I forced myself to heal. I smirked at him before turning to face him. \"Your 'friends' were bothering a girl who wanted nothing to do with them. They didn't leave, I warned them, and they got what was coming to them,\" I replied, staring him straight in the eyes. I didn't know his name offhand, but he was another linebacker, strong but a meathead.\n\n\"Well I'm about to give you what is coming to you,\" he started.\n\nI flexed my Influence to look more menacing. \"I wouldn't if I were you.\"\n\n\"Come on man,\" another football player tried to stop him.\n\n\"No way, I stick by my friends,\" he growled.\n\n\"Well that's admirable,\" I started, trying one more time. \"But if you swing at me, I'll put you in the hospital.\"\n\n\"Whatever,\" the big guy growled before winding up. He was big and strong, but slow. I easily ducked under the first swing, then the second and third. I made sure people had seen him swing at me, as several people in the quad stopped what they were doing to watch the fight. I blocked his clumsy left hook, taking hold around his wrist, and twisted, he cried out in pain until I kicked out his right knee and sent him to the ground.\n\n\"Stay down,\" I warned him. He groaned in pain but got back to his feet, I shook my head at him. \"I warned you,\" I told him as he started to come at me swinging wildly again. I continued to dodge his clumsy attacks, bobbing and weaving. He was so slow, it was too easy to dodge, but I got cocky.\n\nAnother player came up behind me, grabbing my arms and holding me suddenly. This took me off guard and the big guy managed to connect. I turned my head enough that the blow glanced against my jaw. Even with a glancing blow, it still hurt, shock running through my nerves as the pain hit me.\n\nFoolish, very foolish.\n\nI slammed against the guy holding me, dropping us to the ground. The wind was knocked out of the other guy and he let go of me. Giving me the chance to roll back to my feet and look back at my attacker. I felt blood trickle from the side of my mouth, I wiped it off with a finger and snickered.\n\n\"What's so funny,\" he asked me, satisfied that he hit me.\n\n\"You are so fucked dude,\" I told him, putting my fists up. He, of course, launched another attack my way. I blocked his arm, wrapping my arm around his, and slammed my forehead into his face. He recoiled back, blood pouring from his nose, which I had just broken.\n\n\"Oh my nose,\" he screamed in pain as he gripped his face. I swiftly kicked him in the chest, sending him back to the ground. He wheezed and coughed as he rolled to his side, he'd be fine, eventually.\n\nI cracked my neck before looking at the stunned football players, looking to see if any of them wanted to settle another score. \"Well, I warned him,\" I stated to them before walking off. No one followed me, but I heard some clapping and catcalls as I whooped another football player in front of everyone. I never understood the appeal to football players, but most of the schools tripped over themselves to please those assholes. I mean not all of them had to be dicks, but it just seemed that most of them were.",
        "Oh well, not my problem, I was on my way home. My jaw hurt as the adrenaline left my system, but only for a moment. My Divinity was already healing me, it had perks I would say. The downsides were interesting as well, I started to wonder when I would get another Arousal Spike and what I would do when it did hit.\n\nMortals will always be ready to worship you.\n\n\"Shut up,\" I growled to myself. I decided to run the rest of the way home. I knew it was flawed that I thought I could outrun my own mind, but running helped clear my mind. I walked inside and went up to my room, I was so angry with myself. I wanted to break something. I didn't want these thoughts, I wanted to be normal again. I wanted... \"Fuck,\" I whispered to myself as I dropped to the floor. I felt like shit, I felt sick to my stomach, my heart was beating faster than I think it ever had before. \"What is happening,\" I asked out loud before I dropped to the floor as I passed out.\n\nI felt my body being wracked with pain like I was on fire. I knew my body was contorting and withering on my bedroom floor. It felt like hours I laid like this, my body suffering intense pain.\n\n\"Be at peace,\" I heard a soft voice, then a wave of cooling relief hit my body. The soothing washed over me, my pain was gone in a flash and I felt myself relax. \"Are you ok Jason?\" I heard a familiar voice ask me.\n\nI opened my eyes to see Sage above me again, her face was painted with concern. \"Sage?\" I whispered out the question.\n\n\"Yes, I came to see you and found you on the floor,\" she informed me, brushing the sweaty hair from my face.\n\n\"Thank you,\" I told her as I regained my breath.\n\n\"I told you that I would protect you,\" Sage smiled down at me. \"I wonder though,\" she waved her hand in the air. The rose she left on my desk flew to her hand, it had withered and died. \"Fuck,\" she whispered.\n\n\"What does that mean,\" I asked her as I started to sit up, feeling strength returning to my limbs.\n\n\"I believe you were attacked, possibly cursed,\" Sage told me as the rose turned to dust in her hand. She looked disgusted at her hand, before bringing the dust to her face, speaking some magic incantation, and blowing the dust away. It seemed to take on a life of its own, coiling up in the air and flying to my window, slipping under the lip and out into the air. \"Well that means I have work to do,\" she told me. Rising to her feet, I noticed that her clothes had changed. She wore a white tank top under an open blouse, with jeans and ankle boots. A silver feather necklace hung around her neck.\n\n\"Do you want me to help,\" I asked her.\n\n\"No,\" Sage responded seriously. \"Witch business, I'd be worried you get in the way I'm afraid. Plus you'll find out that your tank is empty,\" she explained to me. I was puzzled for a second before I understood what she was talking about. My Influence was drained, I was completely tapped. \"That's probably the only reason you're still alive, your Influence, fought off the curse. Whoever targeted you is strong,\" Sage clenched her fist. \"I'll text you my number later, I need to check in with some people.\"\n\n\"Should I be worried,\" I asked her.\n\nSage looked me over, she twirled her wrist and another white rose appeared. \"Hold this,\" she stated as she handed me the rose. I took the flower but nothing happened, I felt power course through it. \"No, you should be ok for now,\" Sage told me. I went to hand it back to her but she stopped me. \"Hold onto it, use it as an early warning system,\" Sage explained to me. \"It will change if something happens to you.\"\n\n\"Thank you, again,\" I responded as I held the rose.\n\n\"A deal's a deal,\" she smirked at me.\n\n\"Am I just a deal,\" I asked her with my own smirk.\n\nShe gave me a look with a raised eyebrow. \"Maybe not,\" Sage told me slyly. \"I've got work to do, don't get into trouble tonight.\"\n\n\"Yes ma'am,\" I told her. Sage gave me an impish smirk before jumping up to kiss me softly.\n\nSage pulled back, giving me a lusty look, I was getting aroused but she faded into white smoke that dissipated quickly. I smiled as the smoke faded, Sage was something else.\n\nI was sticky with sweat, so I decided to shower first. My joints were still stiff but the hot water helped loosen me up. I finished up, dressing in loose clothes as I looked up Shirly's address. She wasn't too far off campus, I could avoid the college, and get there at a decent time. I set an alarm to make sure I wouldn't be late as I had homework to do. Which I dived headfirst into, getting my assignments finished just as the alarm went off. I quickly got dressed in some nicer clothes and came downstairs to the kitchen. I made a couple of sandwiches quickly, in case Shirly's diner wouldn't be as filling.\n\nI ate quickly, feeling a little of my Influence come back, but it was like a water balloon popping at the bottom of a well. I grumbled as I headed out the door, I jogged down the street, making sure I wasn't sweating. The last thing I wanted was to get sticky prematurely. I scooped out her block, with my tank on E, it was hard to get a read of anyone. I didn't see anyone from the school, which was good, I didn't want to get her in trouble. Walking through the street I found her house. It was a nice little flat, fenced-in yard with vines growing over the bars, a small garage with her car parked in front of it.\n\nI went around the block and discovered an alley that ran behind her house. I walked through the alley and came up to her back gate. It was unlocked, I double-checked to make sure no one saw me before I walked up to her house. Letting myself into a small mudroom, the door opposite of me had a note-\n\nKnock when you're here, I'll answer the door.\n\nI was curious if she was up to something, but I knocked on the door to see. I waited a moment before I heard someone coming from the other side of the door, it opened to Shirly. This was not what I was expecting when I told her to wear something sexy earlier. She was wearing a lacy dark green bra, panties, matching waist cincher with straps to hold matching dark green thigh-high nylons. Sexy black heels, her makeup was heavy, and her hair was teased.\n\n\"How do I look,\" she asked with a smirk, striking a pose.\n\n\"Fuck you're sexy,\" I groaned, pulling her to me and kissing her roughly.\n\nShirly moaned into the kiss but broke away abruptly. \"Down boy, I'm starving,\" she told me, grabbing my shirt and pulling me into her home, and closing the door behind me. She led us both to the eating area off the kitchen. It was lit with candles, two plates were set with two glasses of wine poured. \"Sit down, I'll serve,\" she told me.\n\nI took a seat at the table and smelled the wine, a nice chardonnay, I took a sip. \"You know I'm not old enough to drink this,\" I teased her, looking at her ass as she bent over.\n\n\"Well that would probably be the least of our worries if we were caught fucking,\" Shirly teased me back, pulling fresh garlic bread from the oven.\n\n\"I would take care of it,\" I told her.\n\n\"Oh,\" she looked over at me, \"you would, would you?\" Shirly loaded both plates with chicken alfredo and the garlic bread after she cut it. \"So you'd be my savior,\" she asked me with a smirk.\n\n\"Among other things,\" I replied with a grin.\n\nShe snickered as she ran her foot along my leg. \"Well I'd be eternally grateful, how would I ever repay you?\"\n\n\"I'm sure I could think of something,\" I put on an impish grin.\n\n\"Eat lover boy,\" she chuckled at me. The food was really good, paired well with the wine, the bread helped soak up the heaviness from the sauce. We didn't talk much, we weren't here to talk after all. We drank two bottles of wine with dinner, and I took the plates to the sink for her. \"Handsome and helpful, how did I get so lucky,\" she snickered.\n\nI needed to regain control, simple attraction and desire, nothing more.\n\n\"Well I find you irresistible,\" I told her, leaning against her counter. Shirly stood up and walked toward me, her hips swaying as she came up to me. Wrapping her arms around my neck and pulled me down for a sensual kiss. Our tongues wrestled with one another, my hands went to her ass which I squeezed. Shirly moaned into our kiss and shivered against me, my cock hardening in my pants.\n\nWhen I reached down between her legs, I rubbed her pussy over the lace panties, she pulled back to moan out. \"Come on,\" she grabbed me by the shirt again. \"I need that magical cock of yours.\" Shirly brought me to her room, a good-sized master, with a king bed, a full-sized mirror in the corner, and a dresser off to the side. She was furiously pulling my clothes off, my shirt pulled up and off me. She was busy getting my pants undone while I unclasped her bra. I discarded it off to the side while she shoved my pants and boxers down. I kicked off my shoes as she got to her knees, stroking my half-hard cock. \"Goddamn, I thought about this for two days,\" she confessed before taking my cock into her mouth. Shirly slowly sucked on my shaft, sliding her mouth down and up. I groaned out as she pleased me with her mouth, her one hand stroking my cock softly\n\nSuch a good worshiper.\n\nI growled in pleasure as I started to push my cock deeper into her mouth and close to piercing her throat. Shirly moaned on my cock as I felt her pull back and her tongue swirled around my cock, probably licking up the pre-cum leaking out of me. Suddenly she bobbed up and down on me quickly, gripping my thighs for leverage.\n\n\"Fuck Professor,\" I hissed at her, \"you're very good.\"\n\nShe pulled back and gasped for breath while continuing to stroke my cock. \"Lots of practice back in my school days. I was quite the slut,\" she confessed before she resumed sucking me off.\n\n\"Oh! It paid off,\" I howled in pleasure as she deep throated me. Without my Influence reserve, I couldn't hold back from her efforts. Once Shirly had me fully in her throat I started to cum, my legs spasming as I fired several ropes of my jizz down her throat. Like the good slut she was, Professor Needle swallowed my seed as it came out of my cock. I orgasmed for a solid few minutes, Shirly pulled back enough to breath through her nose as I finished cumming.\n\nI was panting heavily as I pulled Shirly to her feet. I kneeled to pull the lacey dark green panties down her legs. \"Oh baby,\" she moaned, running her hand over her freshly shaved pussy. She spread her treasure open for me, I smelled her sex, seeing her juices covering her lips.\n\nShe wants you as any mortal should.\n\nI took a long slow lick, from the bottom of her cunt up to tickle her clit gently. \"Oh shit, yes,\" Shirly cried out as I licked her. I only licked her once before I rose and pulled her to the bed, pushing her over. Facedown, ass up, I kneeled behind her and I started to run my tongue up and down her slick nether lips. Her face was in the bedspread and she moaned out, but it was muffled.\n\nI slapped her ass roughly, causing her head to shoot up as she yelped in surprise. \"I want to hear you moan,\" I told her before resuming my exploration of her cunt with my tongue. She was sweet and tangy, I loved her taste.\n\n\"Oh Jason, god, I can't remember the last time I had gotten a good tongue fucking,\" she confessed as I pleasured my sexy professor. \"Yes, keep licking me baby, I need it so bad,\" she continued to cry out. Even with everything that had happened to me, I was still surprised that I was here, licking the pussy of the Professor who I had been fantasizing about since I started school. Shirly's head dropped again while moaning and I slapped her ass again. \"So demanding,\" she giggled before moaning again as I attacked her clit. \"Oh, you're going to make me cum baby, fuck Jason. Fuck! Make me cum, I want to cum!\"\n\nHow could I say no to her? I lashed my tongue at her clit, sliding up to lick her juices, then sliding back down to continue to lick her clit. Shirly was just babbling as I continued to please her, moaning loudly. Her head would drop and I would slap her ass, this happened a few times before she began to howl. Her orgasm hit her like a truck, her legs shook, the muscles spasming, her cunt was flexing as her juices flowed down and into my mouth. I drank up her cum as she shrieked loudly. I lapped at her till I felt she couldn't take anymore.\n\n\"Damn Professor,\" I snickered as I wiped her juices from my mouth. \"You came a lot,\" I joked, giving her a playful slap on her ass.\n\n\"Fuck,\" she groaned, as she laid on the bed trying to recover. I pushed up toward the headboard and climbed on the bed to hold her. As we laid together, I stroked her back softly, my cock still at full mast between my legs. After a few minutes, Shirly had recovered enough to be aware that I was still hard. Her hand gripped my cock and started to stroke it lazily. \"God, I love this cock,\" she whispered to me, Shirly leaned over and started to suck on my neck. \"You walk around with this monster in your pants all day?\"\n\n\"For many years,\" I told her, the dual sensation was great.\n\n\"You must please a lot of ladies,\" she continued while sucking at my neck.\n\n\"Just a few recently,\" I confessed to her.\n\n\"Such a shame,\" Shirly moaned out as I reached over to grab her ass, pulling her on my leg. She began to rub her recovering pussy against my leg. \"You need to share your gift,\" she chuckled and moaned as I moved her on me.\n\n\"Well I've wanted you for years at this point,\" I told her.\n\n\"God, I've never crossed that line before, but I'm so glad I did with you,\" she explained as she climbed on top of me. My cock piercing her cunt again, I easily slid inside of her, fuck I will never get over this feeling. Shirly engulfed me completely and moaned loudly when my cock was fully inside her. \"I'm so full,\" she hissed before leaning over to kiss me passionately.\n\nHer tongue explored my mouth as my hands continued to explore her body. It was an odd sensation as her tongue ran along my teeth, but with my cock buried inside her, it was not the feeling I was focusing on. Soon enough though she started to move slowly on top of me, my hands took a hold of her magnificent breasts, squeezing the flesh globes. Shirly moaned into my mouth before leaning back to let her voice be heard aloud. She plunged my cock into her soaking pussy over and over again. Our bodies slapping together, the squishing sound from her pussy and her moans filled the room.\n\n\"Oh! Fuck! So good! Shit! You're fucking me! Oh god, Jason! Damn, I love this cock! Oh! Yes! So fucking big!\" She moaned out over time as her movements started to speed up. Shirly used my chest as leverage as she bounced on my shaft swiftly, her juices covering our upper legs.\n\n\"Fuck I want to cum again,\" I told her. I gripped her waist and helped pumped her cunt repeatedly.\n\n\"Yes! Take me, Jason! Fuck me hard! My pussy needs to feel your cum again!\" She shrieked out. I growled loudly as I flipped her on her back, slamming back into her the second her back hit the mattress. The bed was rocking violently, it creaked under the strength and fever of me fucking her. I spread her legs wide as I thrust into her, watching her breasts bounce around.\n\nProfessor Needle, Shirly, was gorgeous, beauty in motion. Sweat covered her body, her pussy juice was shinny on my cock and her lips. Red, excited nipples, large shaking tits, her hips jiggled with each thrust. I continued to fuck her as she orgasm again, crying out in ecstasy. I rammed her, over and over, she came a third time, confessing her affection for me. It filled me, more and more, but I wanted more! I needed more!\n\nA true worshiper!\n\n\"Argh!\" I cried out as I felt her pussy clamp down on me again, we had been fucking for so long now. She was a babbling mess of pleasure under me as I started to orgasm harder than I ever had before. Filling her pussy up with cum as I felt like I was pouring more and more of my seed inside her. I couldn't stop thrusting, my body needed her, needed the pleasure, I needed to orgasm and I was. My body shook with pleasure, shook with need, my muscles locked, my eyes shot open wide. It felt incredible, amazing, divine enough.\n\nAs soon as I finished, I collapsed, barely managing to roll off of Shirly. Both of us panting like dogs in heat, covered in bodily fluids. Shirly rolled over enough to rest her head on my chest and promptly passed out. My mind was in a haze of pleasure, I needed rest myself, but I needed to catch my breath first, as soon as I could breathe normally I felt my Influence refill. I put my fingers on Shirly and cool the friction burns I had to have given her. I pushed a little more so that she would remember parts of the night, as though we only made love for a bit. I was losing control of myself, my powers were getting to my head.\n\nYou're a God-.\n\nI squished those thoughts as soon as they hit my head. I needed to get a grip on my Divine side, and I would start tomorrow. Sleep had started to overcome me...\n\n* Thanks for reading my people! I worked hard on this chapter and it's the longest and currently my favorite. Please Rate and Comment, I hope you all are safe and healthy out there! Hug your loved ones, you never know when you can't anymore. Stay safe and healthy out there my people, it's a crazy world at the moment, don't let it get you down. It's not a sign of weakness to ask for help, it's a sign that you know when your limit is.*"
    ],
    "authorname": "mistermyst13",
    "tags": [
        "jason",
        "demigod",
        "influence",
        "witch",
        "midnight",
        "sage"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/divinity-ch-05"
}