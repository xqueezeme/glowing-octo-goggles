{
    "title": "Idle Hands: Finale",
    "pages": [
        "<p align=\"center\">Passion's Price<br><br>Part Eight (and last) of The Succubus<br><br>== || &lt; &gt; || ==<br><br>~~ All characters in this book are over 18. ~~<br><br>== || &lt; &gt; || ==<br></p>\n\nOur story thus far...\n\nIn \"Idle Hands,\"Althea, first among the succubi, was torn from her body by a foolish mortal. In desperation, she sought refuge in the mind of Rachel Wainwright, a successful attorney with a troubled home life. Weakened by her ordeal, Althea knows the only way to return to her own body is to restore her power, which she receives by tapping into the sexual pleasure of others.\n\n \n\nWith this in mind she begins a slow seduction of her host, nudging Rachel towards a more sexually adventurous lifestyle. At the end of \"Idle Hands\" she has seduced her office intern, Jeremy Edwards, and has also attempted a reconciliation with her former husband, Joshua. Meanwhile, her children find her attitude towards them softening, as Rachel becomes resigned to the fact that Sarah wishes to attend culinary school, while Alex wants to become an actor.\n\n \n\nThe story continues in \"The Devil's Playthings.\" In a heroic courtroom scene, Rachel makes an impassioned argument for the future of the earth in a case involving corporate pollution. In a stunning verdict, the polluters are fined an astronomical sum, one third of which will go to Rachel's law firm. She decides to use her bonus to semi-retire from her work as an attorney, instead choosing to do pro bono work as she sees fit.\n\n \n\nAt the same time, sexual urges are beginning to manifest in Rachel's home. Driven by a compulsion she can't explain, she makes a full-time job offer to her maid, Maria, with the caveat that she must dress attractively around the house. Maria, for her part, looks on the offer (with a substantial increase in salary and the prospect of a rent-free apartment above Rachel's garage) as the answer to her prayers. When Rachel's husband, Joshua, returns home, he finds his daughter, Sarah, strangely flirtatious. The only person who seems immune thus far is Alex.\n\n \n\nDuring dinner one night, Rachel and Joshua agree to let the kids pursue their career goals without interference. Sarah will attend culinary school. With the help of his parents' connections, Alex will transfer from his dead-end community college into the theater department at Northwestern University.\n\n \n\n\"The Devil's Playthings\" ends with Rachel and Joshua reconciling. Driven by admiration of Josh's artwork, which graphically depicts their love for each other, including the night Alex was conceived, Rachel performs oral sex on him. Later that night, they make love for the first time in months. At the moment of her orgasm, Rachel falls unconscious. When she wakes, she finds herself in a beautiful, pastoral scene, where she is greeted by a gorgeous woman who introduces herself as Althea, a succubus who has been sharing her mind.\n\n \n\nIn \"Dark Reflections\" we learn about Althea and her history. She is the firstborn of the succubi - a scion of Lilith, Adam's first wife, and one of the Fallen, an angel named Imriel who refused to fight for God during the War in Heaven, when angels rebelled against the Almighty. Exiled to Earth, Imriel and others like him mated with human women and men, siring the lines of the succubi and the incubi, who were charged by God to remain vigilant against the Forsaken, those demons who fought against God and were cast into Hell.\n\n \n\nRachel, now aware of the immortal being who shares her body, learns to live with the fact, and indeed, to revel in it. Her reconciliation with her husband is a joy to her. At the same time, she notices that Althea is having an effect on all the members of her household. Maria and Alex, recognizing the compatibility of their natures, make love for the first time in Maria's apartment. And Rachel learns that her husband and daughter are drawn to each other as well. Rather than being outraged, she considers how to bring two of her loved ones together without damaging either.\n\n \n\nThe story continued in \"Bright Shadows.\" At a family cookout which Jeremy attends, Sarah finds herself strongly drawn to the attractive young intern. She tries to seduce him, but her aggressive advances only succeed in driving him away in confusion. Young, hurt, and frustrated, she is consoled by her parents. Driven by love rather than lust, Sarah and Joshua make love that evening, their incestuous relationship given approval by Rachel herself.\n\n \n\nThat evening Rachel makes a frightening discovery. Her body is beginning to change in order to conform to the spirit it is hosting. The first change manifests in the appearance of a tail. Rachel is horrified at first, but is consoled by Althea, who demonstrates some of the benefits of her new appendage. The following morning Rachel confesses Althea's existence to Josh. Confronted with physical proof in the form of the tail, her husband accepts the truth, but is suspicious as to whether Althea's spirit is as benign as she claims.\n\n \n\nLater that day Rachel, Maria, and Alex go to the hospital in order to check in on Althea's body. They find her well-cared for, but her body is growing frail after weeks in a coma. Driven partly by Althea's aphrodisiacal presence, partly by their own desire, Maria, Alex, and Rachel make love in Althea's hospital room. They are interrupted in the act by Dr. Yasna Marafi, the physician who has been caring for Althea. They return home to find a strange man trying to break into their house. Rachel confronts him, and she and Althea discover he is a servant of a demon-spawn named Mortimer Kincaid, the unholy offspring of a male human and a female demon. What is worse, Kincaid knows of Althea's injuries. It is only a matter of time before he finds her body and kills her.\n\nOr, even worse, finds Rachel and her family.\n\n \n\nIn \"Sacred Sins,\" Rachel and Althea confront the consequences of their actions. Bringing everyone together, Rachel confesses to Althea's existence, and proves it by showing them her tail. With Jeremy's assistance, they concoct a plan to kidnap Rachel's body from the hospital. Later that afternoon, Jeremy and Sarah become lovers.\n\n \n\nThat evening, they drive to the hospital. But the rescue attempt goes horrifyingly awry, as Kincaid has also deduced Althea's location. In a terrifying scene, they are barely able to escape, fleeing the hospital with Althea's body while Kincaid chases them in demonic form. By the time they reach home, Josh's truck and the trailer they used to transport Althea's body are little more than shredded wreckage.\n\n \n\nLater that night, they enact a ritual designed to return Althea to her body. Giving selflessly of their sexual power, they at first think they have failed. But just when hope is lost, Althea stirs and wakes. Over a meal she confesses her love for all of them, and expresses her hope that they will not be stupidly jealous or possessive when (not if) she takes one of their lovers as hers.\n\n \n\nIn \"Forbidden Fruit,\" our story continues. Althea and Yasna both struggle to find their feet in a home which is not their own. Yasna, in a conversation with Josh, reveals details about her past. A child of immigrants, her successful professional life is weighed down by personal failures, including a broken marriage to a man she did not love. Uncertain about her sexuality, she has retreated from all intimacy.\n\n \n\nAlthea, on the other hand, revels in her new-found freedom. With her help, Alex and Rachel become lovers. Later that day, she and Josh begin work on a sword to be used against Kincaid. In the process, Althea imbues several objects belonging to the family with a small portion of her power, making them talismans which can be used to protect them from the demon-spawn.\n\n \n\nIn \"Guilty Pleasures,\" we move close to our conclusion. Althea continues work on the sword. However, she is inundated by reminders of what her very nature makes inevitable. Whether by violence or by the slow decay of time, she will lose her lovers, as she has lost all others before. And, cursed to eternal barrenness by the will of God, she cannot even bear their children of her own.\n\n \n\nThe sword completed, Althea informs Rachel and Josh that she believes she knows where and when Kincaid will strike. It will be on Friday night, at the theater, where Alex is performing as Iago in a showing of Shakespeare's \"Othello.\"\n\n \n\nWe rejoin the story on Friday afternoon...\n\n \n\n*****\n\n \n\n\"Are you sure?\" Alex asked.\n\nAlthea looked around the table, where they were all eating lunch. It was the first time the entire family had been gathered together since the evening meal on Wednesday night. Josh and Rachel had just shared with them Althea's belief that the demon-spawn Kincaid would strike at Alex during his play at the College of DuPage later that night.\n\n\"No,\" she admitted slowly. She rubbed her eyes, which were red and grainy with sleeplessness. She had tossed and turned in her lonely bed until nearly dawn. Unable to sleep, she had been tempted to go and seek one out of the family for the momentary distraction of sex. But everyone but Yasna had been happily paired, and she had no desire to impose upon a cheerfully rutting twosome, no matter how eagerly they may have welcomed her to their bed. And she would damn herself to the Pit itself before she forced herself on Yasna. The black-haired doctor was still wrestling with demons of her own. The time for them to be together had not yet come.\n\nAnd only the Almighty herself knew if it ever would.\n\nShe let her eyes drift to the lovely young Iranian. Dressed simply in a pair of tight blue jeans and a rumpled University of Chicago sweatshirt, she looked barely half her age of thirty-six. Her long-fingered, skillful hands, a marvel of dexterity, were now occupied in pushing potato chips nervously around her plate. Althea had fantasized many times about how those same hands will feel on her skin. They would be hesitant at first. But skill and desire would take away that shyness.\n\nShe shoved the thought away regretfully. \"No, I'm not sure, Alex,\" she said, working to keep her voice steady, not wanting to reveal how close to the breaking point she actually was. \"But it's what I would do if I was trying to hurt your mother as badly as possible, and to push her over the edge into madness. Remember, Kincaid thinks, or, at least, we believe he thinks, that I am still trapped in Rachel's mind.\n\n\"His nature is to thrive on pain. For the last few days he has let us twist in the wind, wondering when and where the blow will fall.\" She grimaced humorlessly. \"It probably gives him a great deal of pleasure to think I'm inside your mother's mind, driving her slowly insane. The prim, proper lawyer reduced to a babbling wreck, pushed to unwilling acts of sexual depravity by an invading being she cannot possibly understand or comprehend.\"\n\n\"Hah,\" Joshua, Alex's father, said. \"Trust me. Even when she was a lawyer, she wasn't that prim and proper. Believe me on that one.\" A low chuckle circled the table.\n\n\"Be that as it may,\" Althea continued, \"Alex's play provides him with the perfect opportunity. He's a jackal, attacking the weak and defenseless. He'll cut him down on stage, in front of the entire family, and mock your inability to do anything about it.\n\n\"So here is what I propose. That we ambush the ambusher. That we stick our neck willingly into the noose. It is the only chance I see to put an end to this once and for all.\n\n\"Right now I know next to nothing about Kincaid. Where he lives-\"\n\n\"In a condo downtown, if I remember correctly,\" Rachel put in.\n\n\"-what his resources are,\" she went on, ignoring the interruption. \"How many and what types of safeguards or bodyguards he might have around him. The security apparatus in his home. And so on. A man as rich as he is can buy as much protection as he wants. Which makes attacking him in his lair all the more dangerous. So the best way of dealing with him is to make him come to us.\n\n\"If I know anything about the demon-spawn, I know this; they are arrogant. If Kincaid sees an opportunity to hurt you while striking for maximum effect, he will. What better place to do it than on stage?\n\n\"Which leads me to this. Alex, are you willing to be the bait? It is a lot to ask of you. I might...\" her voice quavered as she looked down at her clenched fists. Her bloodless knuckles stood out white against her golden skin. She gathered herself and went on steadily. \"I might fail. I have failed before. Too many times to count. And if I do fail, if I guess wrong, you will die. There is no way you could conceivably fight off Kincaid in a one-on-one confrontation.\"\n\nAs the impact of her words sank in, the young man sitting across from her went pale, blood draining from his face. His hand went out blindly, seeking that of his girlfriend, Maria. Strange as it seemed, the reaction paradoxically cheered Althea. If he had agreed blithely, she would have been horrified, as it would have meant he had no real understanding of the stakes.\n\n\"You don't have to do it, darling.\" Rachel's voice was low as she looked at her son, who had recently become her lover. \"If it's too much for you, we can find another way, I'm sure.\"\n\nAlex shook his head. Not in negation, Althea believed, but in thought.\n\n\"If we don't try now, he'll come after us again, won't he?\"\n\nShe nodded grimly, unable to deny the truth of his words.\n\n\"And if he does, it may be in a way we can't anticipate. That's why you came to my rehearsal the other day. You were scouting out the lay of the land.\"\n\nShe nodded again.\n\n\"Well.\" He put his shoulders back, straightening in his chair. \"Better the devil you know than the devil you don't, am I right? I'll go the play with Althea, you guys can stay here, and we'll come back when it's all over.\"\n\n\"Like hell we will,\" Maria snarled. Althea's jaw dropped as the sweet-tempered Latina turned to face Alex, her eyes blazing. \"If you think for one...one chingando minuto that I'm going to stay here and wait to see if you're ever going to come back, you're the stupidest jackass I've ever laid eyes on.\"\n\n\"Besides,\" Sarah added helpfully, \"if Kincaid has people watching us, he might find out that Althea is back in her body and is at the play. What better time for him to attack the house than while she's gone? The best plan,\" she said in tones of sober reflection, \"is for us to all go together.\"\n\nMaria gave her a grateful nod, and Althea bit her lip. The two strong-willed young women had not started out on the best of terms, but they were firm friends and allies now. A low murmur went around the table as each person expressed their desire to go to the play. Rachel, Althea noticed, sat quietly, but her face was grim as death. Althea didn't think she would be able to keep her away from the theater with a team of wild horses.\n\n\"Anyway, nothing at all may happen,\" put in Jeremy. \"Which would mean we'd all wasted our chance to see Alex in his first play. We can't blow the opportunity to embarrass him in front of everyone, can we?\"\n\nAlex turned a low, fulminating look on his sister's lover. \"Thanks, man. I'd forgotten all about that.\"\n\n\"Yasna?\" The look Althea turned to the young woman was almost pleading in its intensity. \"You don't have to go.\"\n\n\"Yes. I do. Have you forgotten what I am, Althea?\" Her eyes were warm in her dark face. \"I'm a doctor. It's my duty to be there in case anyone gets hurt. Or do you intend to try to explain things to some strange physician in the emergency room?\"\n\nAlthea conceded the point grudgingly. \"Fine. But you all stay together, do you hear me?\" Her voice was low and fierce. \"I won't have you picked off one or two at a time. And bring your weapons,\" she finished, referring to the objects she had recently imbued with a portion of her own power. They couldn't truly harm Kincaid, but at least they would make him think twice before attacking them. \"If the worst comes to pass, they might serve to save one or two of you while the rest sacrifice themselves in order to allow you to escape.\"\n\nA grim silence fell over the room. \"I saw the sword you and Daddy made,\" Sarah said, changing the subject. \"It looks really nice. Have you given it a name?\"\n\nShe shook her head, concentrating on her grilled cheese sandwich.\n\n\"What?\" Sarah's voice was loud with mock outrage. \"Come on, Althea. You have to give your sword a name. All the really cool swords have them. Like Narsil.\"\n\n\"Anduril,\" put in Josh.\n\n\"Excalibur,\" countered Jeremy.\n\n\"Dyrnwyn,\" said Maria.\n\n\"You're all such nerds,\" laughed Rachel. As they looked at her expectantly, she offered, \"Sting.\"\n\n\"Minneyar,\" Alex drawled. \"Come on,\" he said as Jeremy snorted derisively. \"Tad Williams is awesome.\"\n\n\"Yeah,\" Jeremy agreed. \"if you like books so big they could break your foot if you drop them.\"\n\n\"Hrunting,\" contributed Yasna. \"Beowulf's sword,\" she clarified, her cheeks dimpling in a smile as they turned to her questioningly.\n\n\"Ooh, literary.\" Sarah's eyes twinkled.\n\n\"I took a course in Old English Literature when I was in school.\n\n\"So come on, Althea. Name your sword.\"\n\n\"Or suffer the consequences,\" Rachel teased.\n\nAlthea appreciated what they were trying to do. How like humans. They're offering themselves up as bait, forced to walk into the lion's den against an enemy they can't possibly defeat, and they're trying to cheer me up!\n\n\"'Love,'\" she said at last. \"The name of my sword is 'Love.'\"\n\nSilence fell over the table. \"Well,\" Josh put in at last. \"It's all we need.\"\n\n\"You are such a flower-child, Daddy.\" Sarah's voice was gently mocking, but also full of affection. \"If love is all we need, why do we need a sword? We'd just be able to kill the demon-spawn by throwing puppies at him so he could be licked to death.\n\n\"But we can't. Sometimes we need more than love. We need a killer.\" Her eyes were sympathetic as she looked at Althea. \"No matter how much that killer hates what she has to do.\"\n\nAlthea nodded, feeling her throat grow tight. \"Anyway, it'll all be over tonight, one way or another.\"\n\n*****\n\nTonight, Kincaid gloated, watching the sun slowly sink in the western sky. Tonight, it will finally be over.\n\nThe days had seemed to drag. Caught up with the possibility of slaying the never-to-be-sufficiently-damned Rachel Wainwright, her insufferable family, and the succubus who was occupying her mind, he had let his legal practice lapse, until the voice mail in his office was choked with messages from politely irate clients. Clients who needed his services, but were afraid to offend him. Instead, his mind had dwelt lingeringly on how to draw out their torment. Would he kill Alex, Rachel's son, quickly, drowning the stage in a welter of bloody gore? Or should he gut him slowly, until both his and his mother's mind broke under the agony of torture? Who then would he kill next? The husband, no better than a gigolo? The vapid, lazy daughter?",
        "He grinned mirthlessly. All that was certain was that Rachel and the passenger she unwillingly carried in her mind would be the last. And that he would lay their deaths at the feet of the Dark One himself in exchange for being allowed to leave Earth and to take up residence in the Pit with the rest of his lord's demons. After nearly fifty years in the mortal realm, surrounded by teeming hordes of stinking humans, he wondered how full-blooded demons managed to keep their sanity.\n\nBut is Althea truly helpless? On and off over the past several days, he had been gnawed by that crippling doubt. Rachel and her family had somehow managed to rescue her physical form from the hospital, eluding him in the process. Had Althea's perverse spirit somehow been returned to her body? If it had been, he was looking at a fair fight which he very well might lose.\n\nAnd there was nothing on earth Mortimer Kincaid despised more than a fair fight.\n\nNo, he decided. Rachel's voice on the phone a few nights before had been filled with barely-suppressed hysteria, delicious to his ears. The tree-hugging bitch had been all but incoherent. Even if Althea Carpenter knew how to get back into her own body, there is no way Wainwright could keep her mind in one piece long enough to help her do it.\n\nKincaid had done his homework. Two days of trawling through the murkier depths of the internet had told him that an unwarded succubus could indeed be torn loose from her body, though there was no mention at all about how she could be returned. In fact, legends said that a succubus could actually transfer her consciousness willingly to a receptive partner. But, he was sure, that had not been what had happened to Althea Carpenter and Rachel Wainwright. His instincts told him that by some bizarre circumstance, Althea had been unwillingly ripped away from her own body and forced to take up residence in Rachel's own. References had been few and vague to the point of gibberish, but Kincaid had seen a few dim hints toward the need for arcane rituals. Rituals Rachel would never be able to complete, considering her current mental state.\n\nNo, he decided firmly, putting aside his momentary timidity. Even if Wainwright knows what is going on, there is no way she could have planned and executed a proper ritual in the last few days. She needs access to books, grimoires, spells. Time to prepare. She knows her way around a courtroom. But here she is hopelessly out of her depth.\n\nWhat a pity. He grinned, exposing a set of viciously serrated teeth. He looked over his image one final time in the mirror, adjusting his tie so it fell properly down the front of his silk shirt. His hair was combed, his skin dabbed with just a hint of tasteful cologne. In the inside pocket of his suit was a ticket to the College of DuPage's showing of Othello. He looked the very model of a successful attorney. Only his eyes, grayish-green and utterly lacking in humanity, gave a hint as to the identity of the ravening monster within.\n\n\"It's show time,\" he whispered.\n\n*****\n\n\"Rachel?\"\n\n\"Yes, Yasna?\"\n\n\"How did you know that Josh was the right man for you?\"\n\nStartled by the question, she looked up from her laptop to the younger woman, who was framed in the doorway of her home office.\n\n\"What?\"\n\nYasna's hands were twisting together nervously. As Rachel watched, she shoved them deep into the pockets of her jeans, as if she were trying to hide them from view. \"How long did it take for you to know that Josh was going to be your husband? That you would marry him and have children and everything?\"\n\n\"Oh, that. About half an hour.\"\n\n\"So it was love at first sight?\"\n\n\"No.\" She smiled. \"It was love at first conversation. Come on, sit down. I'm not going to have this talk with you looming over me like a cop in an interrogation.\" Her smile took the sting out of her words, and Yasna sat down in the chair opposite her desk.\n\n\"Falling in love with Josh...\" she faded off wistfully. \"It was my freshman year of college. Second semester, during basketball season.\" When Yasna looked at her blankly she elaborated. \"That was when the University of Illinois was actually good at sports. Or, at least, didn't suck.\n\n\"My parents were both huge basketball fans, and I grew up watching the 'Flying Illini' back in the late eighties. Those were some great teams. So when I started school, I got season tickets for the basketball team. That night Illinois beat the ever-loving piss out of Iowa, which is always a good thing. God, we loved to beat Iowa,\" she said with cheerful malice. \"And afterward I went to a party with some friends of mine at an apartment over on Chalmers Street, rather than going back to the dorm.\n\n\"That's where we met. The stereo was blasting some of that terrible early 90's dance music. Ace of Base or someone like that.\" She made a face as Yasna laughed. \"And he said hello, and I said hello, and he asked me what my major was, and I asked him what his major was, just like a hundred different conversations I'd had with a hundred different boys since I'd started school.\n\n\"But there was something different about him. He was an artist, which I was shallow enough to be impressed with at the time. The U of I was chock-full of engineers and computer science students. Still is, I guess. An artist was a bit of a novelty. And he actually listened when I answered his questions, rather than staring at my tits, which was a welcome change.\" She made a face. \"I'm sure you know what that's like.\"\n\nYasna nodded. \"A friend of mine in college who had big boobs had a t-shirt with 'eyes up here, buddy' written across the front.\"\n\nRachel laughed. \"Well, we talked and talked and talked, until the party was over and they practically had to kick us out of the apartment and into the night. Which was no treat when it was February and five below outside and the wind whipping across campus. God, I've never been colder in my life than some of those winters down in Champaign. Brutal. Anyway, he asked me out on a date the next night, and we drove to a cheap little diner not too far from campus. Neither of us had much money in those days. All of this,\" she gestured with a wave at the house, \"came later.\n\n\"So we talked some more, through supper and then four or five cups of coffee. I can't even remember what we talked about. We don't have much in common now, and we had even less then. He was in the College of Fine and Applied Arts, and I was Pre-Law. He was from downstate, I was a suburban girl. His parents were ex-hippies, my folks were working class. He was a Democrat, I had grown up worshiping Ronald Reagan.\n\n\"But I just loved to listen to him. He was so enthusiastic about everything, and we just seemed to...to spark ideas off each other. And despite all our differences, we agreed on the big things. Values. Family.\" She grinned. \"Basketball.\"\n\n\"He was good-looking then. But I think he looks better now.\" Her smile grew wicked. \"I bet his hair will go silver in a few years. Yummy. By the time we were done with our meal I was half in love with him already. So I suggested that we skip the movie and go back to my place. Luckily my roommate was out of town. Or I would have had to kick poor Deirdre out.\n\n\"Then we made love.\" Her eyes grew hazy. \"Oh, Yasna. If I was half in love with him at the start of the night, I was gone by the end. In bed he...he worshiped me. That's the best way I can say it. He worshiped me. He treated every part of my body as if it were holy.\"\n\nShe gave a sudden, deep-throated laugh which made her jump. \"It wasn't until a long time later that I found out he came to my bed a virgin. But it explained quite a lot, actually.\n\n\"So, if you're looking for help with your love life, I'm not sure if I can give you a good answer. I knew almost from the first moment I laid eyes on him that Josh was the right man for me. But to explain how I knew? It's like describing the sound of purple.\"\n\n\"I love her,\" Yasna said softly. Rachel couldn't tell if she was talking to her, or herself.\n\n\"Then tell her,\" she replied, equally softly. Rachel didn't have to ask who.\n\n\"I'm afraid.\"\n\n\"Well, of course you are. It's always scary to tell someone you love them. What if that love isn't returned? That's a terrifying prospect.\" She made no mention of Yasna's previous marriage, or of her own trepidation where her somewhat confused sexual feelings were concerned. Best to let her deal with those things on her own, without bringing her own baggage into it.\n\n\"But look at yourself, Yasna. You're a lovely, intelligent, strong, successful woman. And Althea hasn't been able to look away from you since we put her back inside her body. I think you're a bit of a challenge for her, actually. How many people have ever told her no? All you have to do, all you have to do, is to let her know how you feel. Once you do that, everything else will happen as it should. As it did for Josh and me.\"\n\nYasna lifted a questioning eyebrow. \"But if what I've heard is true, your own marriage wasn't always a happy one. Didn't you get divorced?\"\n\n\"We did. And soon we're going to be un-divorced.\" Her voice was tart, and she forced herself not to sound defensive. \"And we did have our own troubles, no doubt. But that was never a result of us falling out of love. Never that. We always loved each other. It was more a consequence of our own pig-headed stubbornness. Especially mine. The inability to admit a mistake. Or that the person you're arguing with might be right. So we owe Althea big-time for helping us get back together. She helped me realize just what a fool I'd been, so I invited Josh back up here for a weekend. That was...about a week ago.\" She shook her head. \"Wow. It seems longer. Time flies when you're having fun, I guess.\n\n\"Anyway, I'm not sure there's anyone on the planet who knows more about love than Althea does.\"\n\nYasna blushed. \"I'm not talking about sex.\"\n\n\"Neither am I,\" she said, becoming somewhat irritated with the younger woman's thick-headedness. \"I'm talking about love. Althea is more than just a half-angelic woman who gets power from sex, Yasna. She is full of love. What do you think a succubus is, when you get down to it? She is just a great big ball of love wrapped in a sexy shell. Think about it. Her entire life has been an act of love. How incredibly easy would it be for her to just give up, say 'fuck it' and stop? But she doesn't. She keeps on. Day after day. Every day protecting people who never say 'thank you.' Hell, who don't even know she exists.\n\n\"But she also needs someone. A husband.\" Her voice grew low and gentle. \"Or a wife.\"\n\n\"She has you. And Josh and Jeremy and Maria and all the rest.\"\n\n\"Oh, Yasna.\" She kept her voice low and loving, the way she used to counsel her own children when they made a silly mistake. \"There is a great deal of difference between a lover and a mate. I love Althea to distraction, but I would never consider marrying her, even if I could get away with bigamy. You, on the other hand...\" she trailed off suggestively.\n\n\"You are perfect for her.\"\n\nYasna looked down at her feet. \"I wish I could believe that.\"\n\n\"Silly woman. It's not what you believe. It's what she believes.\"\n\n*****\n\nAlex paced back and forth in his bedroom. It was nearly five o'clock, and his stomach was swarming with butterflies.\n\nFor years, he had dreamed of this day. The day when he would finally take the first steps of a new journey. For years, he had fought against the iron will of his mother, who if not actively opposing his career, certainly didn't do anything to aid it. It was only with Althea's influence and his father's cooperation that he had won the chance to transfer to Northwestern at the beginning of the fall semester next year.\n\nAnd the beginning of that journey would not take place at Second City or Julliard or the Yale School of Drama, but at a small theater on the campus of a second-tier community college outside of Chicago.\n\nLife was funny, sometimes, but he wasn't laughing now. He stood by his bed, the tattered, dog-eared script in his hands, and ran his lines for the thousandth time. He was caught between his confidence in his own skill and the inevitable first-night jitters.\n\n\"At least it isn't Macbeth,\" came a voice from the doorway. He turned, smiling, to see Althea.\n\n\"The Scottish Play?\" he asked, using the euphemism many actors gave to a work they considered cursed.\n\nShe nodded, slipping into the room. Without her hands moving, the door swung shut behind her. The back of her white skirt twitched, and Alex caught a glimpse of her tail as it slipped back under the hem, which barely reached to mid-thigh. He swallowed. While Althea had been present a few days ago when he and his mother made love for the first time, she had not yet taken him to her bed as her lover. Alex had not suffered for lack of attention, however. Between his girlfriend, Maria, his mother, and his sister, he was getting enough female attention to sate even his enthusiastic young libido.\n\n\"Althea?\"\n\n\"Yes?\" Her voice was low and throaty. The mere sound made him surge to aching hardness in his jeans. He closed his eyes and fought the instinctive urge to throw her to the floor and take her like an animal. His mind snorted derisively at him. Any man who tried to force Althea Carpenter against her will would end up with a bloody stump where his dick used to be.\n\nIf he was lucky.\n\n\"I'm not sure this is a good idea,\" he said at last. \"Some guys have told me it's a bad idea to have sex before opening night.\"\n\nShe raised her eyebrows at him, but did not halt her slow, swaying walk. \"So how does that work, exactly? All your acting skill is stored up in your cum, and you'll suddenly turn into a pumpkin if you get laid?\"\n\n\"Well,\" he swallowed through a throat suddenly gone desert-dry. \"Not exactly.\"\n\n\"So. What? Exactly?\"\n\nHe lifted his hands helplessly, then let them fall. \"I don't know, Althea. Actors are all crazy and superstitious. You know that.\"\n\n\"I do. Edwin Booth and I were lovers for a while in the 1870s when he toured Europe. Poor man. One of the greatest actors of his generation, maybe the greatest American stage actor ever, and he lost two wives young and had to deal with the infamy of his brother being an assassin.\n\n\"I used to give him a blow job before he had a big performance. It helped him relax, he said.\"\n\n\"So....you're doing this for me?\"\n\n\"Oh, no. I'm doing it for me. I'm not worried about your performance tonight.\" She laid a hand on his cheek. \"I know you'll be fucking brilliant. I saw it the other day at your rehearsal. Someday, Alex, they are going to talk about you like they talk about Booth and Barrymore and Olivier. You're that good. All you need is time. And practice.\" As his jaw dropped in astonishment at her praise, she continued. \"But I need a couple of things. First, I need your power. The come of a virile young man.\" She closed her eyes, but her body shook in a shiver of desire, and she moved closer until their bodies were all but touching. \"If I am right, Kincaid will be the most powerful demon-spawn I have faced in generations. And warding this house is a drain on my resources. I do not dare face him unless I am at the peak of my powers. Your seed will give me that.\"\n\n\"And second?\"\n\n\"I'm afraid, Alex. Not for myself,\" she said hurriedly, as he opened his mouth in protest. \"I've lived a long life. Longer than anyone else on this planet, when you think about it. If I had to, I would change many things. But I would not change how I have spent it. When I look back, I think I have made a difference.\n\n\"But I'm afraid of failing. Of failing you and your parents and all the rest. And of failing the Almighty herself. If I don't succeed tonight, if I challenge Kincaid and he defeats me, he will engage in an orgy of destruction the likes of which this town has never seen.\"\n\nShe took a deep breath, and he was astonished to see tears glimmering in the glorious depths of her green eyes. \"Alex, I want you to make me a promise.\"\n\n\"Anything.\"\n\n\"If I fail, if I die, and you somehow escape, I want you to call this number.\" She handed him a small card. A phone number was printed on the white surface in stark black letters. No other information was to be seen. \"I've given it to your parents as well. And to the rest of the family. It will help you reach my sisters, Lucifer and Tera. They will come. And when they do, Hell will pay.\"\n\nHe nodded quietly and slipped the card into his back pocket.\n\n\"Good. That's done.\" She sighed gustily. \"I haven't been this nervous in years.\"\n\n\"You have stage fright?\"\n\nShe waved away his incredulous question. \"Not really. Some. Screw it. Yes. I'm frightened. Before, all I had to lose was my own life. Now,\" she hugged him tight, her breasts flattening against his chest. \"I have a lot more at risk.\"\n\nSuddenly he felt a small, hot hand resting on his erect cock. When he looked down, her eyes were twinkling, all sign of her prior anxiety fled. \"Which is why,\" she husked sexily, \"I need to forget about all that for a while, and concentrate on your beautiful body instead.\" With frightening ease, she had him naked from the waist down. \"Why don't you put down that silly script, and fill your hands with something else instead?\"\n\n\"All right.\" With a casual flick of his wrist, he deposited the script on his bed, then unbuttoned the front of her blouse. Her breasts all but spilled into his hands, warm golden flesh with dark bronze, tip-tilted nipples. He cupped them gently, his thumbs moving from the inner curves to the firm nipples and back again, then leaned forward to brush them with his lips.\n\n\"Lovely,\" she groaned. As her hand closed around his cock, he wasn't sure if she was talking about his caresses or his manhood. But he was too far gone to care. Her skin felt like burning silk around his rod, at once incredibly delicate, but also on fire with carnal heat. He closed his eyes, fighting for control, as her thumb swirled around his glans, coating him with his own secretions.\n\n\"Men.\" Her voice was fondly exasperated as she read his thoughts. \"Why do they always have to pretend to be supermen? I'm trying to make you cum, Alex. I'm not going to be angry if you shoot off quickly. The opposite, rather. If I can't make you cum, I'm going to start to think that there's something wrong with me.\"\n\n\"There isn't a single damn thing in the world wrong with you, and you know it,\" he replied. \"I don't know,\" he continued, answering her question while leaning in for a kiss. \"I guess its years of reading about how men are supposed to make women climax before we do. If we don't, we're failures.\"\n\n\"The only thing I need from you, gorgeous man, is enough warning to get my mouth around your beautiful prick, so I can swallow your seed. My orgasm can wait.\"\n\nHe frowned as an unpleasant thought struck him. He pulled away slightly.\n\n\"What?\" Althea asked, knowing him well enough by now that she could sense his hesitation.\n\nHe opened his mouth, then closed it, trying to pose his question in the most tactful way possible. His hands still held her breasts, the glorious dark nipples looking, in his eyes, like tight-furled rosebuds, not quite ready to flower.\n\nMaybe that's what she is. A flower, waiting for sunlight.\n\n\"Is that how you get your power?\" He made an abortive gesture, trying not to offend her. \"Does the death of sperm somehow give you what you need, like you're some kind of superhot vampire?\" He winced as the graceless words emerged, and wanted to punch himself in the mouth. Idiot.\n\n\"No.\" she shook her head, the tumbled tresses of her blond hair framing her lovely face. \"Not even a little bit. Not even close. Of course, your sperm will die inside me. They all do.\" For a moment she looked haunted by an ancient grief. \"But that's not where the power comes from. It comes from the...the spiritual part of the exchange. The greater the bond between us, the more power I gain.",
        "\"When I first entered your mother's mind, I was on the verge of dissolution,\" she continued, pumping his rod slowly. \"I took whatever I could get from her, even if it was the tiny bit of pleasure she received when she touched her breasts when she was changing clothes.\n\n\"But as we grew closer, the amount of power I could draw from her grew. When she masturbated, when she screwed Jeremy or made love with your father, I became stronger.\n\n\"But the bond is greater when I am involved personally. And when I love my partner. Think of it as a sliding scale. On one end there is the practically nonexistent bit of power I gain when I tap into a lonely man jacking off to porn on his computer. On the other end is the enormous amount I receive when I am making love to a person I hold dear.\n\n\"Like you.\"\n\nShe knelt and took him into her mouth, her golden hair falling around her face, hiding his groin from his view. He moaned aloud as he felt her tongue wrap around his length. She slowly slid down, forcing his cock deeper and deeper into her mouth, until her lips were pressed against the closely-clipped curls of his groin.\n\nRising, Althea licked her way back up, until only about half of his phallus was still in her mouth. Using her hands, she pulled her hair back from her face, then loosely knotted it at the nape of her neck. She smiled up at him, her eyes wicked, and drew her tongue up the underside of his cock. In response, his hips began to twitch helplessly, his body eager to spill his seed inside her.\n\nShe let him emerge from her mouth. Her hands cradled his groin tenderly. She looked up him, eyes bright, a glistening strand of his pre-cum connecting his tip to her lips.\n\n\"I like this,\" she purred, her fingers combing through his pubic hair. \"When did you start to manscape?\"\n\n\"A few days ago,\" he replied, resting his hands on her head. \"Maria told me we were doing oral on each other so often that we should start shaving. Otherwise we'd be getting a lot of rugburn. I'm not sure if I'm ready to let a razor down there,\" he said. \"But you can do wonders with a small pair of scissors. She likes it, which is the important thing. And I have to admit she looks even sexier with a shaved pussy.\"\n\n\"I like it, too,\" she replied, and dove back down. Less gentle, her mouth closed around him hungrily, so skillful he could do little but throw his head back and gasp.\n\nDimly, he became aware of something else. A hot, wet sensation, similar to a lover's tongue, but unmistakably different, began a slow, meandering path up the insides of his thighs. For a moment, it stroked his scrotum, leaving it with an oddly full and heavy feeling, then moved away.\n\nWith a hiss, he jumped, startled out of his sensual reverie. Althea backed away, her eyes wide with alarm. Her tail hung between them, the tip glistening with her nectar.\n\n\"Don't...\" he started, then caught himself. With an effort, he gentled his voice. \"I'd rather...you not go exploring back there, Althea.\"\n\n\"Really?\" She pouted winsomely, but her eyes looked disappointed. \"Are you sure? A lot of men like it,\" she wheedled.\n\n\"Some men, maybe. Not me.\" He paused, then taking pity on her morose expression, threw her a lifeline. \"Not yet. Give me a chance to get used to the idea. Maybe we can try it some other time.\"\n\n\"All right.\" She grabbed his hips and pulled him close, her nose buried in his crotch. Her voice came unbidden into his mind. ~But if we're going to be lovers, you're going to have to get used to things far stranger than this, beloved.~\n\nMaybe, he replied. But give a guy a chance to work his way up to it, okay? Having a succubus' tail probing my asshole is not how I expected the day to go.\n\nAlthea did not reply, which was probably a good thing. With her mouth pleasuring him, Alex was rapidly losing the capacity for rational thought. Her hands gripped his thighs firmly, holding him in place as she bobbed up and down. Perhaps punishing him for his earlier timidity, her tongue lashed his cock furiously, urgently driving him towards his orgasm. Her tail rested on his scrotum, massaging his balls like the palm of a loving hand. Her nectar seemed to seep through his skin, igniting a firestorm of lust in his loins. He placed his hands on her temples, his hips rocking back and forth, fucking her mouth with soft, sure strokes.\n\nAlthea hummed in happy satisfaction around his staff. Her blouse was draped around her waist, and as Alex watched, she hiked up the short hem of her skirt, her hands disappearing, but obviously delving deep into her womanly folds.\n\n\"Althea. I'm going to cum,\" he warned her.\n\n\"Good.\" She pulled back from his cock, her left hand pumping the red, slick flesh, the other still occupied elsewhere. She aimed the head at her plump lips, which were slightly open. \"Come on, baby. Cum for me. Give me your seed, your semen, your sperm, your power!\"\n\nHis cum boiled up the length of his shaft. With a strangled grunt, he came, the first ropy burst blasting across the gap between his cock and Althea's mouth. As if it were guided by a divine hand, it passed between her lips and into her waiting body. A low, hungry noise emerged, which was quickly muted as jolt after jolt passed through him, sending his seed into her.\n\nAs his spasms grew weaker, she leaned forward, fastening her lovely lips around his head. With subtle kisses and licks, she coaxed the last few drops from his penis, then sat back on her heels, her eyes gleaming happily.\n\n\"Oh,\" she said, laying a hand on her golden stomach. Her fingers caressed the shallow curves, and she shivered. \"That was good.\" She licked her lips lasciviously, a wicked grin flitting across her face.\n\nShe rose to her feet and Alex kissed her, unmindful of the salty tang of his semen on her tongue. When they parted, she was looking at him strangely. \"So you don't mind kissing me with your cum on my lips, but you don't want my tail up your butt?\"\n\nHe just smiled at her, then knelt at her feet. He placed his hands on the shapely curves of her rear and pulled her close, until he could nuzzle the warm skin of her belly with his cheek. He tried to tug off her clothes, but she hampered his efforts.\n\n\"What's the matter?\" he asked. \"Do you want to get on the bed, instead? I'd like to get you off before we leave.\"\n\nShe shook her head sadly, looking out the window. The light was growing golden as the sun passed west. \"We don't have time. You need to get dressed.\"\n\nShe rose to her feet and rapidly did up her blouse. \"Downstairs. Ten minutes. I'll be driving with you.\"\n\n*****\n\nThey arrived at the theater in a group, three cars carrying the eight of them. As Alex parked, Althea jumped out of the vehicle. \"Stay here,\" she said, all traces of her earlier playfulness gone. She walked around the car in a long, slow sweep, as tense as a hunting cat on the prowl. She waved Rachel and Sarah's cars in beside him, his father's truck still being at the repair shop after the mauling Kincaid had given it a few days ago. Only after she had surveyed the parking lot to her satisfaction did she give them permission to exit.\n\n\"What's the plan?\" Rachel asked quietly. As if Althea's grim mood was contagious, her voice was deadly serious. On the outskirts of the group, Josh and Jeremy watched other cars pull in, their faces wary. Their hands were at their sides, and Alex knew that hidden in their clenched fists were the weapons Althea had helped them make. His father's was a small wood-carving knife, a gift from Alex's grandparents. Jeremy's was a small but wickedly sharp set of pruning shears.\n\n\"We take Alex to the actor's entrance and send him in. After that, I'll go in the main entrance with all of you. After you're seated, I'm going to hide myself backstage and wait for Kincaid to strike.\"\n\n\"Someone will see you,\" Alex protested. \"There's not much room back there.\"\n\nAlthea shook her head. \"If I don't want someone to see me, they won't.\" She grimaced regretfully. \"Kincaid shares the same gift. I doubt any of you will notice him unless he chooses to reveal himself.\"\n\nWalking in a protective huddle, Alex led them to the back of the theater to a service door marked 'Actors and Staff Only.'\n\n\"Well,\" he said awkwardly. \"I guess this is it.\"\n\nHis mother caught him in a strong embrace. \"Good luck,\" she said. \"I love you.\" Mindful of eyes that might be watching, she kept her kiss a chaste one, the merest brush on his cheek.\n\nHis father shook his hand, as did Jeremy. Yasna gave him a careful nod. Sarah punched him on the shoulder. \"Break a leg, boyo.\"\n\nAlthea stood aside as Maria came forward. \"Te amo,\" she whispered, tears in her eyes. Then his arms were around her in an embrace which had nothing to do with passion, but everything to do with love. She kissed him; one long, deep kiss which held the promise of thousands of tomorrows to come, then stepped away.\n\n\"I love you,\" he answered. He took them all in with his eyes. Family, friends, and lovers. He opened his mouth. \"There is too much to say. And not enough time. Thank you. Thank you for everything.\" With a last look, he squared his shoulders and stepped inside.\n\n*****\n\n\"Whooo,\" Frank Pendleton whistled. \"Who was that gorgeous brunette girl I saw you making out with, Sunderman? Have you been holding out on us? I thought you were single.\"\n\nAlex looked up in the mirror, to where the man who would be playing Brabantio stood behind him. \"I was,\" he said. He let the silence drag out, then grinned lecherously, playing for the watching crowd. \"But I'm not anymore. Her name's Maria.\"\n\n\"Well, good for you,\" Frank replied, flopping down in the makeup chair next to his. He was already in costume, but had his hair tied back. \"Jen, honey, aren't you done with this guy yet? Curtain is in thirty minutes.\"\n\nJen Bosler, who served as their makeup artist, frowned at Frank. \"Almost,\" she replied, examining her work. \"Alex, what do you think?\"\n\n\"I just wish you woulld let me use a mustache,\" he said. \"How can I get into character if I can't twirl it like Snidely Whiplash?\"\n\n\"I'm sure you'll manage,\" Dartanon Burfict, who played Othello, walked into the room. \"God, what did I do to deserve such an ugly co-star? Jen, can't you saw off that nose or something? This is Shakespeare, not a fucking production of Cyrano de Bergerac.\"\n\n\"Get bent, you scene-stealing hack,\" Alex replied.\n\n\"Raving egomaniac.\"\n\n\"Do you want me to write down your lines for you? I'm sure they'll come in useful when you forget them half-way through your first scene.\"\n\n\"Just remember,\" Dartanon said with a wide, toothy grin, \"that you are a member of an inferior class. You know. White people. It's not your fault,\" he continued, shaking his head sadly. \"You're just naturally not as awesome as us.\"\n\n\"Go screw yourself, you Wesley Snipes wannabe.\"\n\n\"God, will someone shut those two up?\" said Professor Olsen, walking into the room. \"Alex, you're done. Get up and let Jen put some gray into Dartanon's beard.\"\n\n\"I don't like it,\" the soon-to-be Othello grumbled, sitting in the vacated chair. \"It makes me look like my grandfather.\"\n\n\"A sexy grandfather,\" Jen said, leaning down and kissing his cheek.\n\n\"Jesus, get a room,\" Frank said, eying Jen's lush curves admiringly. The remark won him a slap on the back of the head. Other actors and actresses drifted in, the byplay catching their attention. Professor Olsen eyed them, his habitual nervousness matching the mood of the room.\n\n\"All right,\" he said, clapping his hands twice for attention. \"I know it's our first night. And it's the first play for a lot of you.\" His voice firmed, his stance becoming, for once, commanding. \"Relax. I've been doing this for nearly forty years, off and on, and there is literally nothing I haven't seen. There is no screw-up so massive that would come as a surprise to me. I've had actors break down in hysterics on stage. I've had an entire production canceled due to an e coli outbreak after a bad trip to a taco truck in El Paso. I've had lighting fail, sets fall apart, and a theater burn down during a showing of Cat On a Hot Tin Roof.\n\n\"Now go out there and make me proud. Or I'll pull your lungs out.\"\n\n*****\n\nKincaid handed over his ticket, then walked slowly through the lobby of the theater, avoiding the clumps of stupidly chattering humans. The urge to take his true form and lay waste to the ignorant sheep milling around him was almost overwhelming.\n\nOne more night. Then this exile will be over.\n\n\"Can I help you, sir?\" The young woman at the refreshment stand looked at him with adoring, bovine eyes, no doubt impressed by his handsome face and expensive clothes.\n\nThrottling his rage, he paused, counted to ten, then ordered a soda and a pack of Twizzlers.\n\nI have to get out of here, he thought feverishly, stalking away and heading towards the restroom. I'm losing control. Becoming one of them. The lost ones. Before long I'll be nothing but an animal, killing every human I see until one of the accursed succubi put me down like a rabid dog.\n\nIt was the curse of his kind. The spawn of a human and demon mating was inherently unstable. With judicious, careful killing to slake their blood-lust, a demon-spawn could stave off the inevitable deterioration of its psyche for years. Sometimes even decades. But sooner or later they would succumb and go on a murderous rampage, fit only for destruction. And then they would be killed, unable to reason or evade the hunters of God.\n\nKeep it together. Kill the boy. Then the mother. Then the succubus. Go home. Before it's too late.\n\nPulling out his flaccid penis, he began to urinate. As he did so, he thought back to the vapidly pretty concession-girl. Would his life be different, he wondered, if he had been able to find humans attractive? To mate with them, as revolting as the thought might be?\n\nThe demon-spawn were the polar opposite of their immortal kindred. While the succubi and incubi rutted with any human that stood still (and some that didn't) the demon-spawn were, for all intents and purposes, completely sexless. Kincaid had tested this himself, over a period of several years. All sorts of pornography, both written and visual, had not brought the slightest response from him. Neither had contracted liaisons with prostitutes of either gender.\n\nTo be truthful, he was grateful. Human relationships seemed to be...untidy.\n\nBut disposing of the bodies afterward had been tiresome.\n\nExiting the bathroom, he entered the theater. Unobtrusively, he sniffed the air, hunting for his quarry's scent. He hid a grin as he slid into a seat in the fifth row, near the center aisle. There. Wainwright was above him, probably hid in the shadows of the balcony. The nature-loving bitch probably wanted the best view of her darling son she could get.\n\nEnjoy it, Rachel. It'll be your last.\n\n*****\n\nRachel sat in the balcony, her hands gripping Josh's arm on one side, and Sarah's on the other. Behind them, Jeremy, Maria, and Yasna sat in a row.\n\nHow did it come to this? If she had had the good sense to simply drive around that traffic accident a few weeks ago, none of this would have happened. Althea would have perished, trapped in the body of a dying mortal man. She would still be estranged from Josh. Her children would be on the verge of an open break with her, she would never have met Yasna, and Maria and Jeremy would never be more than what they had been at the time; a well-liked but replaceable intern and a maid who was no different than a thousand other women in the city.\n\nThus am I repaid for a momentary weakness, she thought morbidly, and had to stifle an insane giggle.\n\nIt was either that, or scream.\n\n\"How long until they start?\" she whispered, for the third time in the last four minutes.\n\n\"Any second now,\" Josh replied, his voice low and soothing. Despite herself, Rachel felt the tension at her shoulders ease the tiniest bit. \"It's-\" he broke off as the curtain rose.\n\nAlex and another young man walked onto the stage from the right. Behind them, props gave the impression they were standing on a city street at dusk. Her son was wearing a plain white shirt, a black leather vest, and dark trousers, belted at the waist. A scabbard holding a long dagger in a sheath hung from the belt, and low boots rose to mid-calf.\n\nThe other man spoke:\n\n\"Tush! Never tell me; I take it much unkindly\n\nThat thou, Iago, who hast had my purse\n\nAs if the strings were thine, shouldst know of this.\"\n\nHer son replied, in such a tone of subtle contempt that she would have slapped him had his face been within range of her hand:\n\n\"'Sblood. But you will not hear me:\n\nIf ever I did dream of such a matter, abhor me.\"\n\nA smattering of applause, quickly silenced, drifted up from the lower level. Rachel forgot everything, her eyes intent on the terribly vulnerable young man on the stage. Her blood. Her son. Her lover.\n\nBait for an immortal evil.\n\n*****\n\nAs Alex spoke his lines, the words flowing from his mouth effortlessly, he felt exalted. If he thought rehearsal was a natural high, it was nothing compared to the sensation of playing in front of a live crowd. This was what he had been born for. Even as he sank into the role, the demonic Iago playing on Othello's insecurity, stoking the fires of jealousy, he wondered whether he should choose the stage, or whether a life on the big screen as a film actor would be the better choice.\n\nHe snorted silently at his ambition and pulled his mind back to his craft, concentrating on his scene. Suddenly, a flicker of motion in his right eye caught his attention, and he stumbled over his line. Quickly he caught himself, but the motion repeated. As the focus of the scene left him and centered on Cassio and Montano, he frowned into the crowd.\n\nKincaid, grinning like a death's-head, met his horrified gaze. He was perhaps five or six rows back from the stage, just off the center aisle. The seats to either side of him were empty, as if his presence was sensed and shunned by others. With a smirk, he drew a finger across his neck in a throat-cutting motion, then vanished from his sight.\n\nWell. I guess I'm going to have to be a better actor than I thought. I have to do the play without wetting my pants. And I'm going to have to look afraid enough that Kincaid won't find it suspicious that I'm not wetting my pants out of sheer terror.\n\nHe felt sweat break out on his upper lip as the reality of the situation sank in. Althea was nearby. Of that he was certain. But he had not been sure that Kincaid would actually dare to attack them in a building full of potential witnesses. And Althea's presence, while comforting, seemed to somehow count for less when she was invisible, but Kincaid most assuredly was not.\n\nThe scene was interminable. When it finally ended he was trembling from the strain. After exiting the stage he leaned against a post, breathing deeply.\n\n\"Are you okay, man?\" asked Jack Sinclair, who was playing Roderigo, Desdemona's father. His voice was oddly young when it emerged, disguised by his beard and long gray wig.\n\nHe waved him away. \"Just nerves, man. I'll be all right.\"\n\nJack nodded. \"Well, if it's any help, you are kicking ass out there. Everyone says so. Even Olsen.\"\n\nWhen Jack left, Alex closed his eyes and whispered softly. \"Althea?\"\n\nA response, soft as a child's breath in his ear. \"I'm here.\"\n\nHe swallowed. \"Kincaid's here. He let me see him. Middle of the lower level, about five rows back.\"\n\nA long pause. \"I see him now. Thank you, Alex.\" A brush of lips on his cheek. \"Be brave.\"\n\n*****\n\nMaria watched the play in an exaltation of terror. Days as Alex's lover had given her a better understanding of the story, and her novio's role in it. She gloried at his ability as he strode about the stage, commanding the attention of all present. She smiled to herself as a low growl broke for the audience as Iago's villainous perfidy, his lies and slanders, wrapped the pitiable Othello in a net of his own weaknesses.",
        "At the same time, she knew in her heart that an attack on her lover was only a heartbeat away. She sensed Kincaid's cancerous presence like a spider on her skin, making her flesh crawl with loathing. Once, when she was a child, a large rat had died in the walls of her apartment building, filling her family's apartment with a choking stench. At times, it seemed that a matching reek wafted up from the lower level, stinking of death and rottenness.\n\nThe final scene was unfolding. Overcome by jealousy, Othello strangled his wife, Desdemona. Caught up in the action, she leaned forward in her seat as Emilia revealed Iago's treachery and was slain in turn by her panicking husband. Iago, caught as he attempted to flee, spoke his last lines, brazenly declaring that he would rather be tortured than reveal the reasons for his plots. Othello committed suicide, joining his wife and her maid on a bed piled high with death. The rest of the witnesses looked on sorrowfully.\n\nLodovico (to Iago): \"O Spartan dog,\n\nMore fell than anguish, hunger, or the sea!\n\nLook on the tragic loading of this bed;\n\nThis is thy work: the objects poison sight;\n\nLet it be hid. Gratiano, keep the house,\n\nand seize upon the fortunes of the Moor,\n\nFor they succeed upon you. To you, my lord governor,\n\nRemains the censure of this hellish villain;\n\nThe time, the place, the torture: O enforce it!\n\nMyself will straight aboard: and to the state\n\nThis heavy act with heavy heart relate.\"\n\n\"No,\" said a terrible voice, full of maggots and slithering, crawling things, found under rocks in dark caves. \"He belongs to me.\"\n\nA dark-haired man, apparently a few years younger than Josh, entered the stage from the right. The crowd, which had begun to stir in anticipation of the ending of the play, sank back into their seats with murmurs of confusion.\n\n\"Who the hell are you?\" The young man playing Lodovico didn't sound angry. Instead, his voice was full of honest confusion.\n\nKincaid casually backhanded him across the face, sending him sprawling. \"Keep your mouth shut, fool, and I might let you live,\" the demon-spawn declared cheerfully.\n\n\"The boy there knows me. The day, long-delayed, is now upon us. Pray to your gods, if indeed you have them, Iago. Your life is forfeit.\"\n\nWith astonishing aplomb, Alex drew his dagger. Maria did not miss Kincaid's wince of discomfort as it came into view. Casually, her lover began to clean his nails with the point. \"You mean nothing to me. Begone, or lose your own life in turn.\" Maria caught her breath in a half-hysterical giggle as Alex somehow managed to keep the tone and cadence of a Shakespearean play, even though she could see how his face paled in fear.\n\nFrom his waist Kincaid drew a long dagger of his own, covered in barbs and spikes, an instrument not of death, but of pain and torture. \"Your mother knows why I am here. Why not call out to her and learn the reason for your death?\"\n\nShockingly, Alex laughed. \"Althea, do you mean? I've known about her for days. Why do you think I'm here, you miserable slug? We knew you couldn't resist the bait. I came here so she could kill you.\" He raised his voice. \"Althea? There's someone here who would like to meet you.\"\n\n\"You're lying,\" Kincaid snarled, all effort at self-control gone. Maria blinked. The demon-spawn seemed to be...expanding. As she watched, the seams of his suit began to burst. Mottled, gray-green flesh emerged, covered with livid yellow spots. A pair of bat-wings erupted from his back. His head flattened, the mouth growing into a pointed muzzle, full of rending teeth. Horns grew like evil, demented flowers, sprouting from his forehead, curling around to end in wicked points along the line of his jaw. Claws protruded from the ends of his fingers. As his shoes ripped away, a matching pair gouged the wood of the stage under his feet.\n\n\"He's not,\" came a musical voice, and Maria closed her eyes in gratitude and relief.\n\n\"Holy shit,\" Jeremy swore softly\n\nMaria's eyes popped open, and she stared at the stage in astonishment. The woman slowly walking into view was Althea. But she was also...more.\n\nShe had wings of her own. They arched over her back, three feet and more higher than her own head, so beautiful they made her want to weep. Angelic feathers, each one a masterwork of beauty, reached out farther than her extended arms could stretch. White horns, delicate as crystal, curved up from her forehead. Her tail swayed back and forth in time with her steps.\n\nAnd she glowed. A pure golden light poured out of her, as if the sun was shining through thin clouds at sunrise.\n\nBelted at the side of her calf-length dress was her sword. As the crowd watched in confusion, she drew it. Traceries of reddish-bronze lightning swept up and down its length.\n\n\"You...\" Kincaid choked on the words. The tatters of his suit draped his body in ragged remnants. \"You can't be here. You're supposed to be in her head!!\" He cast a vicious, malevolent glare up at the balcony, where Rachel was watching, her face carved of stone.\n\n\"I got out. It wasn't hard.\" Her eyes gleamed with mischief. \"All it took was the power of love. But you wouldn't know about that, would you? You have no idea how great a force love is, when all you know is hatred and destruction.\n\n\"You are a monstrosity, Kincaid. But your existence is not your fault. Submit and surrender to my justice, and I will make your passing an easy one.\"\n\nKincaid laughed through a mouth like broken glass. Several members of the audience shrieked as the hideous noise smote their ears. From a sheath which had been hidden on his back he drew a sword of his own. Light seemed to fall into it, and Maria turned her eyes away in painful reflex. \"I'll see you in Hell first, bitch!\"\n\n\"Perhaps.\" The succubus' voice was faintly regretful.\n\n\"Then let it begin.\" As she spoke, her wings caught fire, burning with a pure golden light that illuminated the stage.\n\n*****\n\nFor the rest of his life, Jeremy never forgot that duel. He had seen many swordfights in the movies, from Star Wars to The Princess Bride to L\u00fathien's Tale. Most were forgettable. Some acceptable. A few were even good.\n\nNothing prepared him for the sight of Althea in battle. She flowed effortlessly from one position to the next, her sword striking golden and black sparks from Kincaid's dark blade. She kept her body between Alex and her enemy as easily as another person might draw breath. Every attack the demon-spawn made was foiled with contemptuous ease, every stroke shrugged away with a twist of her hips or a flick of her wrists.\n\nKincaid lunged forward, his sword whistling high while he jabbed at her unprotected belly with his dagger. Quicker than thought, she took a half-step backward, keeping the dagger out of reach, and parried the sword viciously, making it ring like an out-of-tune bell. As Kincaid staggered back, she pressed her advantage, her sword whirling in a series of curving cuts.\n\nAnd she was drawing blood. A myriad of small slices scored Kincaid's grotesque body, and dark ichor dripped from his body to stain the stage. Even as they watched, she landed another blow, her sword blurring upward, opening a wound that ran from his left hip to his right breast.\n\nBut she was not immune from damage herself. As their swords clashed, sparks flashing, a thin shard broke off of Kincaid's sword and slashed across her cheekbone. Althea lost the rhythm of her defense, and two more bloody cuts appeared as Kincaid pressed his advantage; a small gouge on her left arm and a deep slice on the muscle of her right thigh. Jeremy heard Rachel hiss in painful dismay as red blood dripped down Althea's face and leg, marring her golden skin. Clutching the railing at the front of the balcony, she stood up, Joshua and Sarah beside her. As their view was blocked, he, Maria, and Yasna stood up in turn. Soon, the entire balcony, then the entire theater, was on its feet, waiting as breathlessly as a baseball crowd in extra innings at a playoff game.\n\n\"Spawn of the Fallen,\" Kincaid hissed as their swords locked together. \"Unholy offspring of a cursed union. Disgusting creature, spreading your legs for any human who wants you. How can you live with what you are?\"\n\n\"I am as the Almighty made me,\" she replied serenely. The muscles of her arms bunched, keeping the jagged blade away from her vulnerable throat. With a shrug of her shoulders, she broke away, sending Kincaid staggering back.\n\nWhen the end came, it was quick. On a lunge, Kincaid overextended himself, going the slightest bit off balance. Althea's sword flashed downward, cutting his sword-hand off at the wrist. As he lurched forward, shrieking in agony, she spun, her blade cutting the tendons at the back of his thigh, hamstringing him. He crashed to the ground, and she severed his spine, her sword punching down between his vertebrae in a two-handed grip as the crowd gasped.\n\nAlthea moved around so she could kneel down and look him in the eye, avoiding his thrashing claws, which still strove to harm her, although his legs were utterly still. \"Any last words before I send you back to the Pit?\" Rather than being mocking, she sounded utterly serious. Perhaps even the slightest bit pitying.\n\n\"It's where I wanted to go anyway.\" He spat black blood onto her shoes. \"Alive or dead makes no difference to me. Do it, and get me out of this blighted world.\"\n\nShe nodded. Her sword flashed, and Kincaid's head rolled away from his body.\n\n\"Stay away!\" she called sharply, as a few of the actors moved hesitantly forward. With a stuttering hiss, green and black flames suddenly leaped up and consumed the corpse, burning blindingly bright. In a few minutes, nothing was left of the body but a small heap of oily ash.\n\nThere was a long moment of silence, as if the audience was holding its breath. Then, with a mighty roar, they voiced their approval, cheering and clapping. Smiling sardonically, Althea waved the actors forward to take their bows. Alex made his with aplomb. The other actors and actresses looked stunned, like a group of people who had been told they had won a lottery but couldn't remember buying a ticket. But eventually they regained their mental balance, and grinned as the plaudits of the crowd rolled over them.\n\nAs the family cheered, Yasna was the only one who noticed that Althea had disappeared without a trace.\n\n*****\n\nA few minutes later, Sarah burst into the dressing room with a gleeful whoop. \"Alex! Congratulations! You were fucking brilliant!\"\n\n\"Thanks, Sis,\" he said, prying her off of him, but not before she had given his cock a clandestine squeeze. \"Where's everyone else?\"\n\n\"Mom and Daddy are outside, waiting. Maria wanted to come in, but thought she would break down crying if she saw you. That thing with the demon?\" she asked. \"What the hell was that? I don't remember that being part of the play!\"\n\n\"Oh, just a bit of a last-minute surprise by our lighting and effects department, I guess,\" he said with a shrug, playing along. \"I can't wait to hear what Professor Olsen has to say when he gets back in here. He's out in the parking lot, having a bit of a breakdown, apparently.\" All around him, other members of the cast broke off their conversations and stared at him. \"What?\" he asked. \"Do any of you have a better explanation?\n\n\"Nice effects, though. I'll say that.\"\n\n*****\n\nFrom the Glen Ellyn Gazette. Saturday, June 5\n\nRidiculous, Tack-On Ending Mars Play at C.O.D.\n\nBy Allen Hummel\n\nCritics of Shakespearean theater are used to changes being done to his work. After all, the Bard of Avon lived more than four centuries ago, and his plays are not as accessible to the modern mind as they once were.\n\nHowever, no excuses can be made for what the theater department at the College of DuPage did last night in the final act of Shakespeare's Othello.\n\nUp until that moment, the production had been an unusually fine one for a community college. Dartanon Burfict did a creditable job in the title role, and Marjorie Klein was a more than competent Desdemona.\n\nHowever, it was Alex Sunderman who shone. As Iago, this young man, in his first major role as an actor, brought a commanding presence to the role and an innate ability which this reviewer has not seen since a young John Cusack haunted the stages of Chicago nearly thirty years ago. It is not too much to say that if Sunderman applies himself, he might do as well or better than any local actor has in decades.\n\nHowever, all of that was wasted at the end of Act V. When the denouement had completed and Iago was about to be led away in chains, there was an execrable postscript which had this reviewer screaming in outrage. A demon entered the fray, ready to claim Iago's soul. In a scene not to be believed, this demon was challenged by a holy angel, and they engaged in a swordfight. While the stagecraft and fighting ability was impressive, and the effects frankly superior, no one has been able to adequately explain to me the reason why an angel would have the slightest desire to try to save the soul of Iago, who is, let us be clear, a liar, slanderer, and murderer.\n\nI give this production three stars out of five.\n\nNote: Othello will be playing at the College of DuPage until June 25.\n\n*****\n\nThe house was quiet when they returned. Alex's car had been mysteriously absent when they trooped out of the theater, so they had crowded seven people into the two remaining vehicles, stopping only to grab some food on the way home.\n\nAlex flipped on the lights in the living room and jumped in surprise. Althea was sitting on the couch. Dried blood streaked her cheek and leg and spotted her dress. Her sword was laid across her lap, one hand clutching the hilt. In the other was a bottle of whiskey. As he watched, she raised it to her lips and drank deeply.\n\n\"Come on in,\" she said, her words painfully precise, despite the alcohol. \"Make yourselves at home.\"\n\nWarily he approached, worried by this strange new mood. Behind him, Sarah bounced into the room. \"Hi, Althea! That was great!\" She mimed swinging a sword. \"The way you chopped his head off at the end was wild. We got chicken from Popeye's on the way home. Mom's getting some plates from the kitchen, and we can have ourselves a nice little meal in here.\"\n\n\"Screw plates,\" Althea said. She lurched to her feet and tore open a box. Taking two pieces of chicken, she sat back on the couch and started to eat, heedless of the crumbs of batter that escaped her mouth and tumbled down to be lost in the cushions.\n\nOr maybe not. Catching Maria's wince, she scowled. \"What's the matter, cleaning girl? Afraid that something might get messy? Don't worry. In a thousand years nobody will be able to tell the difference. This house will be gone, and no one will even remember you lived here. No one will remember any of you.\" She took another slug of whiskey, her throat bobbing as she swallowed.\n\n\"Are you all right, Althea?\" Rachel's voice, coming from the doorway between the kitchen and dining room, was polite, but there was an underlying hint of concern.\n\n\"Just fine, my handmaiden.\" Now there was no mistaking the vicious undertone of angry mockery. \"Why not? I've just killed my one hundred and sixty-second demon-spawn. I expect to hit two hundred in another thousand years or so, if I'm not killed first.\" She swallowed a mouthful of chicken and tossed the bone onto the coffee table.\n\n\"And when that happens, I will be the only person who remembers you, Rachel. Your court cases will be forgotten, reduced to footnotes in the bowels of American legal history. Joshua's art will be lost or destroyed.\n\n\"Alex's films will be no more important than the scribblings of eleventh-century monks in some abbey in Italy. The great chef Sarah Sunderman's meals will be as pointless as the banquets the Chinese emperors used to hold. Maria Ochoa's mere existence will be debatable. And no one will care whether Jeremy Edwards lived or died.\n\n\"Except me. I will still be here after you all are gone.\" She staggered to her feet. \"So pardon me if for once in my life I want to be alone.\"\n\n\"Althea,\" Yasna shouldered her way through the stunned crowd. \"You're hurt. You need me to take a look at you.\"\n\n\"I heal fast, and I heal clean,\" she bit out. \"If I didn't my body would just be a mass of scars. But we can't have that, can we? Oh, no. The succubus has to be beautiful,\" she grated. \"So every single hurt I take disappears. In a few days, a week, tops, you won't even be able to tell I was in a swordfight I came within a whisper of losing. So leave me be.\"\n\nRachel's face was anguished. \"Althea. Beloved-\"\n\n\"Didn't you hear me? Or are you pathetic mortals going deaf, as well as being blind and stupid? I want to be alone,\" she snarled, sweeping them all with a burning glance. Still holding the bottle by the neck, she threw her sword into a corner, where it bounced with a muted clang. \"'Love,'\" she bit out, the word low and hating. \"What use is it when maggots have eaten the corpses of every person I have ever cared for? Or ever will?\"\n\nIn the shocked silence, she walked away. In a few seconds they could hear her uneven steps as she climbed up the back staircase.\n\nWhen she reached her bedroom, she slammed the door hard enough to splinter the frame.\n\n*****\n\nIt was always bad after she won.\n\nThis was one of the worst times.\n\nWhen she lost, when she failed, there was still the drive of the hunt to keep her busy. When a demon-spawn, through guile or skill or sheer bad fortune, managed to elude her, she had a reason to go on. It was only after killing one that the depression set in. Another execution to weigh on her soul, if she had one. The church had been remarkably reticent about whether succubi and incubi had souls and would be allowed into heaven.\n\nShe couldn't imagine why.\n\nIt was well after midnight. The house was silent around her. She stood at the window, staring out into the darkness. In the trash can in the corner, the empty whiskey bottle lay, a final few drops spilling out into the bottom. As the night passed, she had listened as the family slowly recovered from her burst of temper and drifted off to their own beds. Sitting in a chair, pouring cheap whiskey down her throat, she had waited for some well-meaning idiot to come in and try to make her feel better.\n\nThankfully, no one had. Rachel had paused outside her doorway, but had instead gone to the bedroom she shared with her husband. Now Althea closed her eyes and leaned her aching head against the cool glass, hot tears flowing down her cheeks.\n\nBlessed Almighty, mother of us all, what's the point anymore? I can kill creatures like Kincaid until my hands are coated with their blood, and there will always be more. Is there nothing else for me and my sisters and the rest of my kin? Will we kill until we die or the world ends?\n\nAnd what happens when we are all gone? When by bad luck or evil chance or sheer despair, the last of us departs this good green Earth? Will you allow the Forsaken to breed more children, until the world is full of them, and mankind itself plunged into slavery, torture, and death?\n\nThere was no answer. But then, she thought, there never was.\n\nI should go.\n\nThe thought was so clear in her mind, so compelling, that she was putting together what she needed before she had even had time to truly think about her choice. She let the bloodstained dress fall to the floor and pulled on a pair of snug jeans and a black t-shirt. Her purse was slung over her shoulder, her wallet shoved inside, her laptop in its carrying case was held under one arm.\n\nThey can keep the clothes and everything else, she thought as she crept down the front stairs. Alex's car is out front. I'll be gone before they know it. Send them a text so they know where to find it. I don't want that on my conscience. Change the cell phone number, drop off the grid for a few years, and they'll never be able to find me. I'll move away. Denver, Dallas, Des Moines. Someplace that starts with \"D.\" It's time to move on anyway. Chicago isn't so great. The winters are terrible, the roads are a mess, and the Bears never win shit.",
        "And if losing one person you love devastates you, there's no reason to stick around and wait for six to die. It would drive you mad.\n\nThe house was silent as she padded across the foyer. The only sounds came from outside, drifting through the open windows, left open in anticipation of summer days to come. The hum of crickets, the gentle rustle of leaves in the west wind.\n\nShe was halfway across when a light snapped on, blinding her. She threw an arm across her streaming eyes.\n\n\"Where the fuck do you think you're going?\"\n\nIt was Yasna.\n\n*****\n\n\"I'm leaving.\" She tried to keep her voice firm, regardless of how her heart broke when she said the words.\n\n\"Oh? Then I'm coming with you.\" Yasna was still wearing the dress she had worn to the play. Pale as green leaves, it looked wonderful against her dark skin. Althea forced herself to look away.\n\n\"Don't be ridiculous. You're not going anywhere with me.\"\n\n\"You can't stop me.\"\n\n\"I can't stop you? You, a human?\" She snapped her fingers in Yasna's face, trying to make her voice hard. \"It would take me that long to get you out of my way if I wanted.\"\n\n\"But you won't.\" Yasna crossed her arms in front of her chest, her back still firmly pressed against the door, blocking her escape.\n\n\"Why not?\"\n\n\"Because you don't really want to leave. You want someone to ask you to stay.\"\n\n\"Stay? With you?\" She laughed, though the effort tore at her throat. \"Don't flatter yourself, Yasna. You're cute, but I've slept with dozens of women more attractive than you.\"\n\n\"Maybe.\" She raised her chin bravely. \"But none of them are here right now, are they?\"\n\n\"No, they're not. They're dead. Just like you will be, in time. Like everyone else in this house.\"\n\n\"True. A doctor has to get used to the idea of death. To know that too often, we fail.\" Her lips twitched. \"My job taught me early the unpleasant truth about my own mortality.\n\nHer voice softened. \"Tell me, Althea. Has anyone ever thanked you for what you do for us? Thanked you for the centuries of service?\n\n\"I will. Thank you, Althea. Thank you for protecting us. Thank you for doing what no one else can. Thank you for standing between us and the forces of darkness. Thank you for my life. Because I know that if you had failed last night, I would have died. I looked into Kincaid's eyes and saw my own death.\n\n\"Thank you.\"\n\nCaught off guard, Althea blinked. Her mouth opened, but no words emerged. Suddenly, with an almost audible snap, her iron will broke, destroyed not by anger, but by understanding and kindness. Weeping, she fell into Yasna's arms. Terrible, shuddering sobs wracked her body, the culmination of centuries of pent-up grief. Yasna cradled her against her chest while she cried herself out. It seemed to take hours, but when she was done, she felt emptied-out and calm.\n\n\"Poor baby,\" Yasna whispered. Somehow they were both sitting on the floor. She wiped away her tears with her thumb, her fingers lingering on her cheek. \"You needed that.\"\n\n\"I did.\" She took a deep breath, then let it out in a sigh. She felt emptied-out, but her will was firm. \"It doesn't change anything, you know. I'm still leaving. I can't...I can't stay here and watch you all die. Not without something to live for.\"\n\n\"If you could have something, what would it be? What would make it worth it to stay here with us?\"\n\nBitter, hopeless longing surged up within Althea. Before she could stop herself, she blurted, \"A baby.\" She closed her eyes as she confessed her innermost desire. \"The Messenger of God declared that none of our kind would ever become pregnant. Or sire a child. That despite our passion for humans, we were cursed to eternal barrenness.\"\n\nYasna nodded, as if this came as no surprise. \"And what if I told you I could give you a baby?\"\n\nAlthea stared at her, shock warring with anger. \"You can't.\" Her voice was flat. \"Don't joke about it. It's not funny. Don't you think I've tried? Thousands of years. The Almighty only knows how many partners. I have never used birth control. And in all those years I have never missed my period by even one day.\"\n\n\"But you do ovulate? Don't you?\"\n\n\"For all the good it does me,\" she said disgustedly.\n\n\"Well, Althea, as your physician, perhaps I should share something with you.\"\n\nAlthea's head snapped up. Yasna's tone was...teasing? Mischievous? It was as if she knew a wonderful secret she couldn't wait to spill.\n\n\"When you were in that coma, I ran tests on you.\" She smiled, slow and deep. \"Of course, it might have been just an excuse to touch you. Some of those tests,\" she continued, \"were on your...your reproductive organs.\"\n\nShe rested a hand on Althea's stomach. Despite her whipsawing emotions, Althea felt herself heat under her touch, her nether lips growing slick. She closed her eyes, forcing herself to listen through the pounding of her heart.\n\n\"From what I can tell, your nectar, as you call it, is an amazingly effective natural spermicide. It's no wonder you've never become pregnant. Any sperm that enters your vaginal canal would die almost instantly. It would never have a chance to fertilize your egg.\"\n\nThis was hope. This trampled, wilted weed, that turned itself towards the sun and put forth a single, glorious blossom. Althea's breath caught in her throat, her eyes brimming with tears of joy. \"That means...\" she gasped.\n\n\"Yes, my love.\" Yasna's eyes shone. Her arms tightened around her, hugging her close. \"All we have to do is an in vitro fertilization. Harvest a few of your eggs, have one fertilized, and then implant it in your uterus. Nine months later, you'll have a baby.\"\n\n\"But the Messenger of God said-\"\n\n\"Fuck what the Messenger of God said,\" Yasna whispered fiercely. Her eyes blazed. \"You told me yourself that God is only a servant of the Almighty. Maybe he was wrong. Maybe he overstepped his authority, and She is using us to correct an injustice.\n\n\"You can bear a child if you want. Josh's. Or Alex's. Or Jeremy's. Or by a sperm donor.\"\n\n\"Screw that. I'm not having some anonymous man's kid.\"\n\nYasna nodded, then blushed, dropping her eyes to her lap. \"Or, if you want...\" She raised her eyes bravely. \"I know a woman. She is a damn genius when it comes to genetics. Her name is Jane Richardson. I think she could give you a child that had eight parents. All of us.\n\n\"Or...just mine. Our child. Our baby.\"\n\nSlowly, Althea smiled. \"Say what you said before.\"\n\n\"What? Our child?\"\n\n\"No. What you called me.\"\n\n\"My love.\" She laid a brown hand on Althea's golden cheek. Tears dripped down both their faces. \"You are my love. I love you. Stay with me. Bear my child, and I will bear yours. We will be the parents of a new generation of succubi, and the legions of Hell will tremble before us.\"\n\nAlthea caught fire with joy. With a muffled squeal, she pulled Yasna into her lap. Before she could do more than gasp, Yasna had tipped her head up for a kiss. Althea's lips covered the dark-haired doctor's, and she gave herself over to love.\n\nAnd so did Yasna. For the first time in her life, she accepted who she was, the desires which were as much a part of her as her hair or her eyes or her body. The desire to make love to both women and men, regardless of the outmoded strictures of her religion or the mores of a society she had left before she was born.\n\nOh! I never thought it could be like this!\n\n~It will be, beloved. It will always be like this between us. And soon, I will introduce you to the joys of being with a man. Would you like that?~ she teased, as her hand slipped down her chest and cupped her breast, the fingers kneading the firm flesh of her tit. ~Would you like to be in bed with me and Alex? Or perhaps me and Rachel?~\n\nAllah have mercy! Her nipples strained, tenting the cloth of her dress. With Althea's eager assistance, she slid the straps down her arms until her chest was exposed. With a hungry little growl, Althea fell on them like a starving cat, her plump lips and sharp little teeth sucking and biting the sensitive flesh until she thought she would go mad with pleasure.\n\n\"Althea?\"\n\n\"Hmmmm?\"\n\n\"Can you do...what you did the first night we met?\"\n\n\"What? Oh. That. Yes. But I have to take off my pants.\"\n\n\"Good. I wanted you to do that anyway.\"\n\nIn seconds, they were both naked. \"By the Almighty, you are beautiful,\" Althea breathed. Yasna looked down, embarrassed. \"No, look at me,\" she said, tipping her chin up. \"I don't know what that horses-ass you were married to did to make you think there was something wrong with you. But you are lovely. And loveable. I love you. And I will spend the rest of your days proving that to you, beloved.\"\n\nShe kissed her, their tongues mingling in a slow dance of passion and desire. Yasna closed her eyes as she felt the tip of Althea's tail stroking her damp folds. She shifted, opening to her, and the tail slipped into her velvety sheath.\n\nAllah! It was so wrong, but it felt so right. More intimate than she could have possibly imagined, she felt her inner walls being caressed.\n\n\"You, too,\" she said softly. Careful not to allow the tail to disengage, she slid down Althea's body until her mouth was only inches away from her pussy. \"I want to make you feel good, too.\" She dotted kisses on the rise of her pubis, feeling the golden hairs crinkle under her lips, then sank lower still. Parting Althea's thighs gently, she took her first taste of her lover's bounty.\n\n\"Urk!\" Althea grunted, and jerked under her mouth.\n\nWorried, she looked up. \"Did I do something wrong?\"\n\n\"No, love. You did something right. Just keep that up and you'll always make me happy.\" Her lips were parted in an adoring smile.\n\nHeartened, she bent down again, drawing her tongue up Althea's slit in a long, tender lick. The taste of her was like nothing she had ever imagined, an intoxicating mixture of honey, salt, and musk. She didn't think it was possible to ever get her fill of it. As Althea's tail slowly plunged in and out of her, gradually pushing her lust higher and higher, she dove ever more deeply into Althea's groin. By subtle hints and gentle guidance, the immortal succubus showed her exactly how she wanted to be pleased. Fascinated, she watched as the pink pearl of her clitoris emerged from its hood, and then did homage to it, giving it the lightest, gentlest of licks while Althea writhed under her.\n\nShe felt Althea's hands on her head, pushing her deeper, even as her hips rolled up towards her mouth, cresting like the waves of a storm-tossed sea. She reached her hands up, taking one of her breasts in each hand, massaging the firm, wonderful weight of them in her fingers. Inside her own body, Althea's tail worked its magic, and the muscles of her vagina began to ripple in a dance at once familiar and strange.\n\nTwo climaxes struck at the same moment. Two voices rose from the floor, mingling together in a musical crescendo of orgasmic harmony. Two bodies brought each other to the uttermost reaches of bliss.\n\nTwo souls became one.\n\n*****\n\n\"Dios mio,\" Maria swore reverently. \"That was one of the hottest things I've ever seen in my life.\"\n\nYasna scrambled to her knees on the cold tile floor, clutching her dress to her chest. She looked around wildly. Rachel, Joshua, Jeremy, and all the rest were standing in the foyer in various stages of undress. While they were not actively making love, it was readily apparent they had been pleasuring each other as they watched her and Althea.\n\nAllah! What did they see? What have I done?\n\n\"Gently, Maria,\" Rachel said, her voice softly scolding. \"Remember that Yasna isn't used to our ways yet.\" With a look of faint regret, she removed Joshua's hand from her breast. The uncovered nipple stood high and proud on the flushed skin of her chest. \"Congratulations,\" she continued. Her gaze took in both Althea, who was sitting up slowly, and Yasna. \"I'm very proud of you. And very happy for you both.\"\n\nHot blood heated Yasna's skin, but she kept her eyes steady. \"Thank you,\" she said. \"Though I didn't think we would have an audience. How long have you been here?\"\n\n\"Long enough,\" Sarah said cheerfully. Her hand was wrapped around Jeremy's cock, stroking the thick rod slowly. Yasna gazed at it for a moment in bright interest. \"I was sleeping. But then I started to dream about you two. We all did. And when you told Althea you loved her, it was like a bomb went off in our heads and we all woke up and came down here.\"\n\nEyes wide, she looked at Althea, who nodded regretfully. \"Get used to it, my love. Succubi tend to...broadcast...our stronger emotions. Especially to those with whom we have psychic links. And we also tend to receive those emotions in turn.\"\n\n\"You mean your lovers. Which Sarah isn't. So how did she get the signal?\"\n\nAlthea flipped a dismissive hand. \"When she is the lover of three of my lovers? Call it leakage.\"\n\n\"So now what?\"\n\n\"Now?\" Althea hugged her close. She closed her eyes and sighed ecstatically as their breasts pressed together. \"Now we get ready to share our lives with each other, my dearest love.\"\n\nYasna sniffled, overcome by happiness. \"Till death do us part. Well, I think I'm looking forward to the next thirty or forty years. Do you promise to still love me when I'm all gray and wrinkly?\"\n\n\"I do. But it's going to take a lot longer than thirty or forty years before you get gray and wrinkly, my heart.\"\n\nYasna pulled away and looked in Althea's eyes. Lurking in their depths was a massive hilarity, as if she was preparing to share with her an enormous joke. \"What are you saying?\"\n\n\"I guess your scientific research into my body's secretions didn't discover all of my secrets after all. Which is a bit of a relief. I mean, what's the point if there's never any surprises, am I right?\"\n\n\"The nectar of the succubus,\" she said to their astonished faces, \"has the ability to confer long life on those of the recipients.\"\n\n\"Wait,\" Alex said. He stumbled for a moment. \"Your other lovers. The ones you said you lost. Like the Comte and Comtesse in France. They died. You said so.\"\n\n\"Yes. They died. Mark-Pierre was one hundred and seventy-seven years old when he died, though he looked no more than a well-preserved fifty. He might have lived longer, but he was killed in World War I, in the trenches in France. Genevieve lost heart after that, and we separated. I believe she was almost two hundred when she passed beyond the walls of this world.\n\n\"You will age, yes. You will die, also. Nothing I can do will stop that. But your span in this wide green world will be far longer than that of your mortal kindred. And my grief at your passing will be no less because our time together was increased. The opposite, in fact. When the love is great, the agony of parting is greater.\n\n\"But now Yasna has given me something to live for. That I will have someone to comfort me when you pass into what lies beyond the boundaries of this world. That there is some hope for victory in our unending, eternal war. That we are not merely fighting a long defeat.\"\n\nSuddenly she blinked and pulled her phone out of her pocket. \"Damn. I nearly forgot.\" Grinning like a loon, she dialed a number.\n\n\"Come on over here,\" she said quietly, holding the phone so they could all look over her shoulder. The screen split into two halves. In one, a beautiful woman with pale skin and black hair was standing on a city street. From the bright morning sunlight, Yasna thought she might be somewhere in Europe. In the other, an equally lovely woman with red hair was lying in bed. Yasna could just make out a male body with a pair of firmly-muscled buttocks lying beside her. As she watched, the man groaned and pulled his pillow over his head.\n\n\"Hello, Allie,\" said the dark-haired woman. \"Is this an emergency? I felt you kill another demon-spawn last night. Congratulations.\"\n\n\"No, not an emergency, Tera. Though I would like you to meet my new family.\"\n\n\"At this time of night?\" the redhead grumbled. \"Come on, Allie. You know this number is only for an SOS.\"\n\n\"Sorry, Lucifer.\" Yasna didn't think she sounded sorry at all. \"I didn't think this could wait. I've got big news. Like 'Fuck you, God,' big.\"\n\nTera's eyes widened in happy speculation. \"Such as?\"\n\n\"Lucifer, Tera...\n\n\"How would you like to have a baby?\"\n\n \n\n*****\n\nFrom the Woodridge Bugle: September 26\n\nMarriage Announcements:\n\nJoshua Sunderman of Peru, Illinois to Rachel Wainwright of Woodridge, Illinois\n\nJeremy Edwards of Frankfort, Illinois to Sarah Sunderman of Woodridge, Illinois\n\nAlex Sunderman of Woodridge, Illinois, to Maria Ochoa, of Chicago, Illinois\n\nYasna Marafi, of Chicago, Illinois, to Althea Carpenter, of Chicago, Illinois\n\nThe End"
    ],
    "authorname": "Glaze72",
    "tags": [
        "erotica",
        "lesbian",
        "succubus",
        "urban fantasy"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/idle-hands-finale"
}