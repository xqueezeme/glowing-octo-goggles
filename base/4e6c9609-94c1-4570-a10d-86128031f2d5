{
    "title": "Alex & Alexa Ch. 16",
    "pages": [
        "Alex &amp; Alexa\n\nDisclaimer: Read... the... Author's... Notes. For the love of Sanguinius, PLEASE, before you comment or send hate mail. You have opposable thumbs, live up to that evolutionary gift. If characters are having sexy time, they're 18 or older. Deal with it.\n\nChapter 16- Here With You, At The End Of All Things\n\n\"To my dearest family...\n\nI am so sorry I will no longer be with you. I have caused perhaps irreparable harm and cannot continue to do so. Know that I am fine and in no danger. I love you all so much and would never want you to worry about my well-being that way, since I've caused enough turmoil already. \n\nMichael- you're a tower of strength and you inspire me. You always will. Anyone should be proud to become one tenth of the person you are, with your convictions and resolve. I will miss you so much.\n\nKaren- my only sister, an eternity of words cannot possibly suffice in apologizing for the hurt I have caused you. It breaks my heart to need to leave, so soon after getting you back in my life. Circumstances robbed us of our lives together as sisters, and now my choices have done that again. Please know and remember that I love you, even if I cannot be here. \n\n Alex- I shouldn't even bother trying to say anything, should I? I don't know if it's possible to stop loving you. I don't know I would try if I could. All I can hope is that you find a way to move on and live your life, becoming the person we both know you can be. I won't say don't worry about me or just forget me, we're both far beyond that point, aren't we? I'll always love you.\n\n I'll always love you all.\n\n Alexa.\"\n\nI slowly lowered the letter, letting the words sink in. Reading it aloud with my parents sitting on the couch nearby had been tougher than I could have imagined. I felt... heavy. My body was heavier than stone, my mind numb. When dad brought down the letter, saying that Alexa was nowhere to be found, a sense of dread had washed over me. He'd given the letter to me, clearly deeming that I should be the one to read it, even if it was addressed to all of us. I guess I should be thankful that he understood what Alexa and I meant to one another.\n\nI looked up from the letter and over at them. Dad was sitting beside my mother, his arm around her, while she had her elbows on her knees and her hands over her mouth, tears streaming down her face. My heart broke again, she looked like her whole world had ended.\n\n\"She's gone,\" she whispered, her voice barely audible. \"I just got her back, and now she's gone...\"\n\nI hung my head and squeezed my eyes shut, wrestling with my emotions. The sound of my mother trying to not break down completely was all I could hear aside from my own thumping heartbeat. I'd thought getting caught would be the worst thing to happen, but I was wrong. Even my dad seemed at a loss for what to do. That terrified me.\n\n\"I need her back,\" mom said turning to look at dad, her eyes glassy and her cheeks red. \"My God, we have to do something.\"\n\n\"I don't know what yet,\" dad said, his hand over hers now, but he kept looking at the floor, perhaps unable at that moment to cope with the anguish that was so evident in his wife's eyes. Dad tended to look at the floor while he was thinking, or he'd pace back and forth when he was really agitated. Mom used to say he'd wear a groove in the living room floor when something was bothering him. He wasn't pacing, but only because he truly didn't know what to do. \"She said not to worry about her, Karen. I think she's hoping we'll trust to that.\"\n\nI said nothing, merely looking at the letter again. The fine paper seemed marred in places and I realized they were the marks of tears. Alexa had been crying at she wrote the letter. I pressed the paper to my face as I lost myself in dark reverie, trying to imagine what she'd been feeling as she wrote this. I wouldn't have had the strength. My God, she was strong.\n\nMom was leaning against dad, sobbing now. The depth of Alexa's and my folly was becoming increasingly clear to me with each passing moment. My head spun as the magnitude of what we'd done was out for me to examine. We'd compromised and hurt my family in ways I'd never conceived of.\n\nI don't know if Alexa had always thought it may come to this moment, or it had just been an instinctual reaction on her part. We'd talked, of course, about what would happen when we were found out, but I don't think either of us had seen it playing out quite like this.\n\n\"I guess we'd better still have that talk, Alex...\" dad said heavily.\n\n***\n\nIt sounds silly, but it was hard to know where to begin. Obviously, I told them about our instant initial attraction to one another and how quickly we became comfortable in one another's presence. We'd been kissing while at the university by her second day here, and naked together in the jacuzzi by that night while they were away at the Stevenson's place. They both listened silently, but I could tell they were bewildered, even stunned by my revelations.\n\nI continued, telling them about how we became sexual by the third day, or very close to it, rubbing on one another and even climaxing together, even if we didn't have full-on sex. We knew we were going to, and neither of us were the least bit interested in curbing the urge, even if we knew how taboo it was. Part of me was so shocked I was willingly telling my parents all this, after so many weeks of keeping it a secret. Mom's hands were over her mouth as she listened.\n\n\"I don't believe this,\" she said finally. \"You knew better, and you still went with it. You both knew better. Alex, how could- what were you thinking?\"\n\n\"I don't know,\" I said in exasperation, my voice perhaps somewhat terse. \"I'm pretty sure it wasn't me who drove her to-\"\n\n\"Alex!\" my father snapped, his eyes flashing as he looked at me. \"I know you're upset, but that is no excuse to talk to your mother that way! She did not cause this problem!\"\n\nNo matter how angry I might have felt, my father's voice shocked me out of it and all defiance drained from me in a cold chill. I sagged in on myself. No matter how much I miss or loved Alexa, I couldn't defy my father.\n\n\"I'm sorry,\" I said sheepishly. \"Mom, I'm sorry I did that. I was angry, but that's no excuse for disrespecting you. And you're right, none of this is your fault.\"\n\nMom wiped at her eye and shook her head. \"Don't worry about it, Alex. I have to take your word for it than you didn't really intend for any of this to happen. Just... I guess go on. Your father and I need to know everything. So that we have a chance of understanding.\"\n\nI swallowed. \"Everything.\"\n\nDad nodded. \"That would be everything, Alex. The situation is serious enough that it warrants holding nothing back.\"\n\nI sighed. \"Y'remember that day when we went for breakfast out at the barn and then went to the provincial park? Well, we... we found an absolutely enchanting place there and we decided that would be the first place we'd make love.\"\n\n\"How?\" mom asked. \"Your father and I were right there.\"\n\n\"Well, we did split up for a bit, and Alexa told me she suspected of a place that you and she had walked by on the trek in. We got ahead of you guys and checked it out. It was incredible. We resolved to come back there the next day to... y'know.\"\n\nMom rubbed her face. \"We thought you were begrudgingly running errands with her. You always came back with the things she said she needed.\"\n\nI nodded somewhat guiltily. \"Seemed like a good idea if we didn't want to get caught.\"\n\n\"No arguing that point,\" dad agreed. \"At that time, we still had no suspicion of what was happening.\"\n\nI nodded again. \"We... we went the following day, had a picnic, but we also had sex. I took lots of pictures of her, and read a French book to her, and-\"\n\n\"You were reading French lit to your aunt?\" mom asked, looking at me. \"In a glade? While having a picnic and sex with her?\"\n\nI shrugged. \"Sounds a little strange when you say it that way. But... we were really into one another, mom. I was terrified, not just of getting caught, but how quickly my feelings for Alexa overwhelmed me. I've never known anyone like her.\"\n\n\"That's because there is no one like her, Alex,\" mom said softly. \"But she is still your aunt. Go on.\"\n\nI shut my eyes and collected my thoughts. \"I... there was no stopping after that. We made love whenever we could, and it was so intimate. The hookah party that night, we were both terrified about the shotgun thing, but...\"\n\n\"But Alexa had a workaround in case something awkward happened,\" mom mused. \"Clever girl.\"\n\n\"Yeah,\" I agreed somewhat wearily. \"But even though we didn't admit it to one another, we were falling in love. Then there was the accident.\"\n\n\"Oh, God,\" my mother said reflexively, covering her mouth and her eyes tearing over. \"I'm sorry. Please go on, Alex.\"\n\n\"Mom, I... when dad called and told me to come to the hospital, I was in a state of sickening terror the whole drive over. I'm not kidding, I was worried I might lose concentration and spin off the road or cause an accident. I didn't know what I'd do if she'd...\"\n\nI choked back something and then took a deep breath. \"It was the first time I admitted to myself that without doubt, I was in love with her. And then when I saw her charts, that she was going to be okay, I was so relieved.\"\n\n\"Then the whole amnesia prank,\" dad mused, cutting in, but his expression was neutral. \"We still suspected absolutely nothing. I think your mother and I were so focused on the two of them reconnecting that we might've been blind to anything else. That or you just were doing such a good job of snowing us that we couldn't have noticed.\"\n\nI shifted uncomfortably. Dad may generally sound more reasonable and conciliatory than mom most times, but this wasn't one of them. His tone was making it abundantly clear that he was not in my corner about this. Not that I could blame him. I forged ahead.\n\n\"I know I tried to sound put out, but that was a cover, of course. We made love in her hospital room, and-\"\n\n\"Alex,\" mom gasped, her eyes wide. \"She might have had a concussion! We weren't sure yet!\"\n\nI struggled to keep talking, not to shrink in on myself. \"I know, mom. But I can say with complete honesty that I didn't initiate those times in her hospital room.\"\n\n\"Times?\"\n\nI squeezed my eyes shut as I forced myself to keep talking. \"At least twice. I showered with her at one point, it was pretty intense. But that was also when we admitted to one another that we were in love. And also, the beginning of our first real conversations about how the two of us could never truly be together. We... didn't know what to do.\"\n\n\"You knew all along what you were doing, but when you admitted you were in love to one another, that's when you started talking about how you couldn't be together,\" mom said evenly. \"Is that right?\"\n\nI couldn't readily answer her then. Why did everything sound so stupid when it was given context?\n\n\"Alex,\" she said softly. \"My baby sister has run away because of this thing you two had. She's gone. I need you to help me understand everything.\"\n\nI could have felt a snap of irritation or anger at how she put everything squarely on Alexa's and my shoulders, but she was right. We'd broken a societal legal and moral taboo and done it willingly. This was in no way, shape or form my parents' fault. It was all on Alexa and me, choosing to not control ourselves. No anger, no irritation at her words, only... guilt, and loss.\n\n\"I'm sorry,\" I murmured. \"it's just hard to pony up to that.\"\n\n\"I know, baby,\" she said. \"Take a moment and then go on.\"\n\n\"We agreed to see other people,\" I finally continued. \"She saw Jeanie and I started seeing Heather again. It wasn't clear to either of us if this had any chance of working, and we didn't really want it to, deep down.\"\n\n\"Her date with Jeanie, when we concluded she was a lesbian,\" dad sighed. \"We were really thrown off the trail, then. Even though we hadn't been on it to begin with. So, she was having sex with Jeanie and you were back with Heather.\"\n\nI nodded. \"Sex was good, of course. I enjoyed Heather and you can't not enjoy sex with Jeanie.\"\n\n\"We know,\" mom agreed evenly. \"Go on.\"\n\n\"Well, it didn't help that we were still living together under one roof,\" I said. \"Seeing each other like that, of course we ended up in one another's arms, falling more and more in love.\"\n\nMom rubbed her face again. She'd stopped crying for now, but her eyes were still red. This had to be so hard on her. \"And we insisted she stay with us, excited that we could finally justify in expanding the house. Continue.\"\n\nMy accounting of the situation was feeling listless and even pointless to me, since they already knew that we were in love and shouldn't have been. But they had a right to know whatever they liked. Thinking back about all the times Alexa and I could have been caught at the university or other locations... how it would have reflected on my parents...\n\n\"This next part is really hard to talk about.\" I murmured.\n\n\"Oh, God,\" mom said, going pale. \"She's not... Alex, you didn't get her-\"\n\n\"No,\" I blurted, shaking my head. \"No, nothing like that, I promise you. What happened next is even weirder, or at least it will seem that way to you.\"\n\nMy parents said nothing but merely looked at me, waiting for me to get the gumption to follow up on my statement.\n\n\"Freja knew at this point,\" I forced myself to say. \"Alexa never keeps anything from her. They're soul-mates that way. So she watched us make love one night over Skype.\"\n\n\"Are you about to tell us that there's an unsecured Skype video of you making love to your aunt all over the internet?\" mom asked.\n\nI shook my head again. \"No. Pretty sure you two'd know by now if that had happened. No, Freja was a part of things now, at least indirectly. One night when we went out to run errands, Alexa and I returned to that glade I told you about. It was the most beautiful scene you could imagine. Clear sky, the moon shining in on us...\"\n\n\"Uh-oh...\" dad said quietly.\n\nI steeled myself. \"In that glade, Alexa and I married one another.\"\n\nMy parents said nothing for several seconds. Finally, my mom asked the question that was on her mind. \"Just the two of you physically present?\"\n\nI nodded, knowing what she meant. \"Didn't feel like we needed anyone else. And aside from Freja, there was no one else to tell.\"\n\n\"When two or more are gathered in My name, I am there with them,\" dad said quietly, pinching his eyes. \"You married your aunt.\"\n\nI nodded slowly, unable to verbally answer him.\n\n\"Alex,\" he said patiently. \"I'm going to ask you to do something absolutely terrifying. I want you to step back from yourself, from your perspective, and look at the big picture. And then I want you to tell me what you see.\"\n\nI knew what he meant, and I admittedly didn't want to do it, not one bit. But I couldn't defy my father. I squeezed my eyes shut again, allowing myself to look over the whole drama that had unfolded since her arrival. Even though things had happened since the point in the narrative I had reached for them, this was the crux of it, the moment where I threw always all possible logic and married my blood aunt.\n\nAnd I couldn't even begin to justify how stupid it all looked.\n\n\"It doesn't matter, dad,\" I said finally, opening my eyes. \"I love her.\"\n\n***\n\nI wasn't being defiant, and my parents knew that. I was merely stating how lost I was, how this entire mess, though it was entirely my fault, had overwhelmed me. I understood now exactly how sublimated my entire being was to the limitless reality of being in love with her. It was stupid, and maybe it was even wrong, but there was nothing I could do about it.\n\n\"At least I understand fighting a hopeless fight,\" dad offered. \"I couldn't have given other women a second thought after I knew I'd fallen for your mother. She was the most beautiful and extraordinary person I'd ever met.\"\n\nI smiled. \"Thanks.\"\n\n\"She also wasn't in any way, shape, or form related to me, Alex,\" dad continued, his voice indicating we were not in the slightest agreement about my quandary. \"This is something entirely different.\"\n\n\"I know.\" I sighed. \"And before that was the barfight where you got stabbed, and that pulled us even closer, terrified that something like that could happen to one of us.\"\n\n\"And I understand your terror in that circumstance,\" mom murmured, nodding slightly. \"I remember once being worried sick when your dad and I travelled to and attended an Antifa rally. He was tanking while I was organizing demonstrators and there ended up being some really ugly fight with the Nazis we were there to oppose. Your dad smashed a lot of them, but he ended up with a few lacerations and cracked bones himself. I was worried sick.\"\n\n\"I remember that, although I was at summer camp, so I only had to go on what you told me.\" I said. \"I was so proud, bragging to all the kids around me about how my parents would beat up Nazis. But yeah, that incident really scared Alexa a lot, and we got married soon after that in the glade.\"\n\nThey simply looked at me, listening. My hands flexed as I tried to think of things to say. \"It was about that time that we found out about you guys and Jeanie. Jeanie then caught us making love in our assigned office.\"\n\n\"Oh, Lord,\" mom said, pinching her eyes. \"Are you insane, Alex? Not only could you have been caught by absolutely anybody, but you got caught by Jeanie. You know I adore her, but she's an idiot. She'd forget not to tell anyone the moment she walked back out the door.\"\n\n\"I guess we got lucky,\" I admitted. \"She was really devoted to the idea of the two of us and she managed to keep her word.\"\n\n\"I can't believe you did that in the faculty office,\" mom sighed in exasperation. \"What if you got caught?\"\n\nI couldn't go on a counter-offensive, because I had no right to do so, but I was so desperate to take the attention off my idiocy, even for a moment, that I tried a little gambit. I needed something. \"We were pretty dumb about it. We made love in the hedge maze more than a few times late at night. One of our most terrifying moments happened in there.\"\n\n\"Someone nearly caught you?\" mom asked, her tone unimpressed.\n\n\"Yeah, you two,\" I replied. \"We were on the other side of a hedge wall when you both came in and began fooling around. We heard the whole thing, two feet away from us, and were petrified. The race to beat you back to the faculty had my heart ready to burst out of my chest.\"\n\nMy parents said nothing. Having nearly been caught themselves, by their son and sister, was giving them pause. I took advantage and drew several deep, quiet breaths, trying to compose myself. I was still wholly miserable, but at least I wasn't short of breath anymore.\n\n\"Well played, Alex,\" dad said finally. \"Needed a moment, I take it?\"\n\n\"You have no idea.\" I sighed heavily. \"And then we went to the wedding in Gatineau and things were comically awkward there.\"\n\n\"Did you and Alli find time to get it on there?\" mom asked.\n\nI nodded. \"You nearly caught us when you barged into my room naked.\"\n\nMom blinked. \"That was Alli under the bed? Alli was pretending to be a Finnish girl you just met and were having sex with?\"\n\nI nodded sheepishly. She flopped back into the couch, looking at the ceiling. \"This web is so tangled,\" she lamented. \"That incident in the jacuzzi was the first time we noticed something about Alli. She was jiggling her breasts at you a little too eagerly, I thought. Not just enjoying teasing her nerdy nephew, but almost... needing to, I guess.\"\n\n\"You have no idea how badly I wanted to look.\" I muttered.\n\n\"But you just kept staring directly ahead, looking embarrassed as Hell,\" mom continued. \"And then your wonderful performance where you got up and almost stormed out, and we sent Alli to retrieve you. I didn't think too much of it, because she was having sex that weekend with that woman. And you have a session or two with that uber-distant relative girl of ours.\"",
        "I put my face in my hands, rubbing it wearily.\n\n\"And you're sitting there trying to figure out why we have a problem with your marrying your aunt when we didn't blink about you fucking a girl who is a relative removed by a factor of twelve,\" she said dryly, not terribly impressed with my exasperation. \"Alex, she's your aunt. A very direct relation to you, and she's my baby sister. Forgetting for a moment that avunculate marriage is legal nowhere in this country, how on Earth could I possibly be tra-la and whimsical about my sister and son getting being in love and getting married?\"\n\nShe had me there. She sat back and sighed, making a motion with her hand. \"Just continue, I refuse to believe this has ended.\"\n\n\"Well, Freja visited after that, which no doubt threw you off the trail again,\" I said. \"I'll admit, they included me in their lovemaking as often as they could.\"\n\nMom raised an eye. \"So at this point you were having sex with your aunt-wife and her soul-mate?\"\n\n\"I... yeah. Freja totally approved of Alexa and I being in love. She even offered to legally marry me and carry a baby that Alexa and I would conceive, so that we were bonded.\"\n\n\"This gets more twisted-sounding with every moment,\" mom muttered. \"And then Freja met Jeanie and they fell in love. And since Alli was involved with them sexually, I can only assume that means you were too.\"\n\nI shrugged. \"We had a foursome in the gym and that was when Jeanie asked Freja to marry her.\"\n\nMom was lost in thought. Dad stayed resolutely quiet beside her, a figure of towering calm. The more I looked at the two of them, the more obvious the folly of all this became to me. What had I done?\n\n\"The Edith Piaf song,\" mom murmured. \"It was never about Freja, was it?\"\n\nI shook my head. \"It was Alexa singing to me, telling me that even if we never managed to work things out, she regretted nothing, and she would always be mine.\"\n\nMom's eyes were tearing again. \"Alex... she's your aunt. It would have been the most beautiful story in the world, except for that. I... you know, your father and I could possibly have accepted you two having casual sex, because you were physically attracted to one another. I could possibly overlook that, if you were being careful. But in love? Were you planning to run away to somewhere that allowed avunculate marriage?\"\n\n\"No,\" I said firmly, shaking my head. \"We couldn't. She just got here, mom. That was never a serious consideration. It would have broken Alexa's heart to leave you behind so quickly.\"\n\n\"Just go on, Alex,\" dad said. \"There's no doubt more.\"\n\n\"Freja had told her mother and her dad, and they approved, seemingly,\" I said. \"I guess avunculate marriage is legal in Denmark, so it wasn't a big deal to them, if somewhat uncommon. Anyway, her mother was very kind in her advice to me, telling me to spend every moment I could with Alexa if I truly loved her. I guess she knew what was coming.\"\n\n\"I remember the bouquet incident,\" mom said distantly, remembering. \"I convinced everyone to let her catch it. And her eyes shot immediately to you. You kept laughing and clapping, giving no indication of your feelings, but Alli's eyes betrayed hers. It was at that moment that your dad and I were convinced she was secretly in love with you and that we had to do something.\"\n\n\"Makes perfect sense when you put it that way,\" I sighed. \"I... that's pretty much everything unless you want lewd details. I've been as honest as I could. So... now what?\"\n\nThere was a long silence. I said nothing. Everything depended on mom now. Finally, she spoke. \"I understand why Alli ran away. But it was the wrong thing to do. I need my sister back.\"\n\nShe couldn't hold it in any more and she turned to my father, her eyes brimming with tears. \"Michael, I need my sister back...\"\n\nShe burst into sobs and dad held her, caressing the back of her head, his eyes closed. I waited, my mother's tears slicing through me like knives. I'd caused her such anguish. Getting her sister back should have been one of the happiest days of her life, and I'd become the reason Alexa ran away.\n\n\"Alex, do you have your phone?\" dad asked finally. I nodded and pulled it out. \"Give it to your mother, please.\"\n\nI unlocked it and gave it to mom, who disengaged from my dad and took the phone, sniffling as she composed herself. Her eyes were red and bleary, and I'd never seen her look so heartbroken. I felt like the worst person to ever live.\n\nMom composed herself and dialed a number in the phone and then activated the speaker function. We waited silently while it rang and finally someone picked up.\n\n\"Heya, Alex,\" Jeanie chirped cheerfully. \"How's it hangin'?\"\n\n\"Jeanie, sweetheart, it's Karen, Alex's mom.\" my mother replied.\n\nThere was a pause of confusion on the other end. I cold almost hear Jeanie looking at her phone screen to check the number, but she recovered quickly. \"Hi, Lady Prof, how's your bod?\"\n\n\"Jeanie, would you please put Freja on the phone?\" mom asked levelly. Jeanie called out for her wife and the Danish girl answered seconds later.\n\n\"Hello, Mrs De Bourne?\"\n\n\"Hello, Freja,\" mom said, trying to keep her voice from breaking. \"I know you're still on your honeymoon in Muskoka, and I'm sorry to bother you, but I was wondering if you'd heard from Alli.\"\n\n\"No, we have not, not in the last day or so,\" Freja replied. \"Is everything alright?\"\n\n\"No,\" mom almost choked. \"Michael and I told her we knew she was in love with Alex. We gave her some time alone, but then she disappeared, leaving a note saying she loved us all.\"\n\nWhat followed were several seconds of silence and then Freja spoke.\n\n\"We'll be down immediately.\"\n\n***\n\nMuskoka was normally three hours away, but there was a knock at the door within two. We'd mostly been sitting quietly, with mom crying against dad occasionally. There wasn't too much to say just yet. Dad got up and answered the door, while mom and I both stood. We heard him invite Jeanie and Freja inside.\n\nJeanie immediately rushed over to mom and hugged her, both of them bursting into tears. Freja, meanwhile, walked up to me, took me by the hand and led me out of the living room and into the kitchen. She turned around to look at me, taking my hand in hers and placing it against her heart. Her eyes were hard with fear and worry.\n\n\"What do they know, Alex?\" she asked, her voice trembling.\n\n\"Everything,\" I replied. \"Everything.\"\n\nShe thought about my response and nodded. She then led me back into the living room and went to hug my mother, starting to cry with her while Jeanie came over to me and took my hand, watching.\n\n\"I am so sorry, Karen,\" whispered Freja. \"So sorry for my part in this.\"\n\n\"You're the best friend she could ask for, Freja,\" my mom breathed, trying to control herself. \"Do not be sorry, just... help me get my baby sister back, please...\"\n\n\"I think we'd all better sit down and discuss this,\" my father said, watching us passively. He gestured for Jeanie and Freja to sit on the love seat while he and mom sat back on the large chesterfield. I took my place in the lounger. He looked at us all and sighed. \"I guess let's all get caught up so we're on the same page.\"\n\nI recounted for Jeanie and Freja everything that had happened from my point of view and then mom filled in details from her end and let them read the letter. Jeanie was mostly silent, but Freja sighed at the conclusion of my mom's story.\n\n\"I am so sorry,\" she said sadly. \"From what you have described, I have never seen her so despondent. Let me... let me call my parents.\"\n\nShe pulled out her phone and dialed a number. We could vaguely hear a woman's voice on the other end and Freja began speaking in Danish, her tone uncharacteristically serious. The voice on the other end lost its cheerful tone as Freja explained something. I heard her mention myself, my mom and dad, and of course, Alexa. The call did not seem to be an encouraging one. She finally hung up and sighed.\n\n\"My mother sends her regards and her... feelings?\"\n\nMom nodded. \"I know what you're trying to say, Freja. Thank you.\"\n\n\"Okay,\" said the Danish girl. \"They have not heard from Alexa. But that does not surprise me. I... I do not think she wants to be found.\"\n\nMom burst into sobs again and dad hugged her. Jeanie balled her fists and squeezed her eyes shut, tears trickling down her cheeks. Freja put a hand on top of hers, consoling her.\n\n\"I chased my baby sister away...\" mom choked.\n\n\"Oh, Mrs De Bourne, no!\" Freja protested, crossing the floor quickly and kneeling in front of my mother, taking her hand in hers and looking up at her with tears in her eyes. \"No, Karen, not at all. Alexa, she thinks she is protecting you all. This is not your fault.\"\n\n\"She wouldn't have left if I hadn't confronted her.\"\n\n\"But of course you had to,\" Freja insisted. \"You didn't know the whole story, how could you have? We kept it from you. What you were doing made absolute sense at the time.\"\n\nMy mom pulled Freja to her and hugged her. Freja trembled as she fought back her tears and then looked at my mother again. \"She had to go, Karen. She loved Alex too much to stay. I know her better than any of you. I've never seen her in love before, not like she was... is... with Alex.\"\n\nMy face flushed red. I found myself wishing again that the earth would swallow me.\n\n\"So, we all agree we want her back, but she doesn't want to be found,\" dad said, trying to gather our focus. \"I guess we'd better start trying to piece things together. I'll start in her room. Alex? Freja? Which of you would know her room better?\"\n\nWe looked at one another and I shrugged. \"I... I've been in there more often, but I imagine Freja would have the better intuition about things concerning Alexa. She's known her longer.\"\n\n\"Let's go, Freja,\" dad said, rising. \"Alex, you and your mom still have talking to do, I think. Jeanie, stay with them.\"\n\n\"Yessir.\" Jeanie said dutifully, nodding. They left without another word, heading upstairs to search Alexa's room. Several moments of silence passed before mom looked at me.\n\n\"I cannot believe how completely you had us fooled, Alex,\" she said quietly. \"I never even suspected. I know a lot of parents are blind to how their kids behave, but your father and I always had a good bead on you.\"\n\nI shrugged and smiled wanly. \"It's... it's not something I'm proud of, mom, but I really didn't know what to do.\"\n\nShe sighed. \"And I don't even know what to say, Alex. She's your aunt. She's my little sister. Was the sex really that good?\"\n\n\"Oh, she's a total Bene Gesserit, Mrs De Bourne.\" Jeanie piped up.\n\nWe both looked at her, rather bewildered to hear anything like that coming out of her mouth.\n\n\"What?\" she said somewhat defensively, frowning a little. \"I liked the Dune novels and things that smell like cinnamon. Gimme a break already.\"\n\nMom shook her head and turned to look at me again. \"It's just so unlike you, Alex. You've played it straight and safe most of your life. Brave, sure, but you've always been sensible. This is so out of character.\"\n\n\"You think I don't know that?\" I replied. \"I was the one living it.\"\n\nMom sighed and pinched her eyes for a moment. \"Alex, I know your father and I do some strange things, like messing around with our students on occasion...\"\n\n\"Thanks for that, beeteedubs.\" Jeanie added, smiling. Mom ignored her.\n\n\"And yes, your father and I even had a fling with some twin sisters,\" she continued. \"But there were no implications for them, and none really even for us. This is on a whole different level.\"\n\n\"I know,\" I said quietly. \"I... you have no idea how much we wanted to tell you. The stress of not saying anything got pretty immense on occasion.\"\n\n\"I can imagine,\" she agreed. \"I don't even know what to do if we somehow convince her to come back, because there's still your situation to deal with. Breaking you two up as soon as she gets back here can't possibly improve anything, and we can't pretend it isn't happening, either.\"\n\n\"I know... I know...\" I sighed, putting my face in my hands, trying to compose myself.\n\nA few moments passed and then something I didn't expect- the feel of my mother's arms around me, hugging me tight.\n\nI held her as well and we said nothing for some time. I know how hard this was on her and now we were just trying to get through it, one way or another. Jeanie sat quietly and watched us until dad and Freja returned. Mom looked up at them.\n\n\"Anything?\" she asked.\n\n\"Nothing terribly useful,\" dad replied grimly as he sat on the chesterfield and mom joined him. \"Just about everything is still here. Only things gone are her laptop and any personal identification, along with her phone. She left pretty much everything else, as far as I can tell.\"\n\n\"I tried calling her, of course,\" Freja added. \"No response.\"\n\n\"She must be hurting real bad if she's cut you out too,\" Jeanie said, caressing Freja's cheek. \"We can't get her back if we can't find her.\"\n\n\"And there's not even any guarantee she'll come back anyway,\" Freja sighed. \"I've never seen her like this.\"\n\n\"I think we've been sort of dancing around the obvious issue, too,\" dad now stated. \"Whether we like it or not, it's the reason she left.\"\n\nI looked away, which my mother saw. \"Alex, we're not going to talk about this like you're not here. It's okay to speak.\"\n\n\"I can't, mom. I'm sorry.\" I said quietly.\n\n\"Why, baby?\"\n\nI drew a deep breath. \"Because I can't talk about Alexa except... except as my wife. That's the only context I have for you. Maybe it's silly to you, maybe it's absurd. But it's the only frame of reference I can give you about any of this. And so I don't really have anything to add.\"\n\nMom and dad said nothing. Jeanie and Freja looked on quietly. Yes, they were involved, but this moment didn't concern them.\n\n\"You got married, hm?\" dad mused.\n\nI nodded. \"You guys had a kegger that night, you left us a note that we found after we got back from the glade. We had a rather pleasant honeymoon as a result.\"\n\nMom grimaced. \"Not on my bed, right?\"\n\n\"No,\" I said, trying not to chuckle while Jeanie snickered. \"I promise.\"\n\nMom sighed. \"You already know it won't stand up legally. This whole thing still overwhelms me in so many ways. The length of time it's being going on, the scope of it...\"\n\nShe looked at our guests. \"Anything you two can add to shed some light on this can of worms?\"\n\nFreja made a wry face and looked at Jeanie. \"Can of worms?\" Jeanie shrugged helplessly. Mom might as well have said antidisestablishmentarianism. Nonetheless, they both contributed what they could to the narrative. Freja related many late-night Skype conversations with Alexa where she talked endlessly about Alex, to the place where Freja was convinced her friend was in love. Since avunculate marriage was legal in Denmark (if unusual), she didn't care at all, as long as Alexa was happy. She just cautioned her about the implications here.\n\nJeanie was every bit as honest, if somewhat less insightful, for the most part. She mentioned her sex with Alexa and then teasing Alex with nude videos of her aunt, thinking she was being a silly pest by suggesting that Alexa and I having sex would be hot.\n\nThen she walked in on us making love in our office and she was struck by exactly how beautiful and perfect we were together, that she was even jealous, sad because she'd never find a love that deep and meaningful. Freja bit her lip and hugged Jeanie while she spoke. The brunette continued.\n\n\"I... I guess I never really stopped to consider how much this could fuck things up for you two,\" she murmured, looking at my parents. \"I mean, you guys've been inside me, so I guess I just figured you were sorta untouchable, y'know?\"\n\n\"Jeeeez...\" I groused, putting my hands over my ears.\n\n\"A little late for that reaction from you, Mister Lannister,\" mom said dryly. I didn't know whether the return of her sarcasm was a good thing or a bad thing in these circumstances. Although I was happy that she'd stopped crying, at least for now. \"Please continue, Jeanie.\"\n\nJeanie considered her next words. \"No word of a lie, I was so happy for them, I never really considered anything else except keeping their secret.\"\n\n\"You're a good friend, Jeanie,\" mom said. \"I'm sure Alex and Alli appreciated that.\"\n\n\"Wish we hadn't had to.\" I sighed. \"I don't even know if 'sorry' is the right thing to say, mom.\"\n\n\"I don't know either, Alex,\" she said wearily. \"I don't even know what to think. This has torn our family apart in one way, but if I'm practical, then I consider what might have happened if this thing between you two had gotten out at the university.\"\n\nI squirmed uncomfortably.\n\n\"Not everyone likes your father and I,\" she explained. \"There are lots of people who resent our influence over the departments. Something like this would give them a lot of slander material to work with. The university could reject that nonsense outright, but if a big enough stink was made, however undeserved, they could also decide it was just easier to let us go. And what legal action could we take, since the premise we're fighting to keep our jobs on, an incestuous relationship, is illegal?\"\n\nI said nothing.\n\n\"Even if we won, there would be a cloud over us for a long time to come,\" mom said quietly. \"Alex, I'm not saying that your father's and my careers take precedence over your happiness, but there are very serious considerations to be examined here. If this got out, forget the effect it would have on us, what would it do to you and Alli? If it was widely-known, who would hire you for jobs? You couldn't even attend a church in peace.\"\n\nMy face was in my hands. I couldn't say anything. I just let her talk, I owed her that. To the most dreadful depths, of every aspect I'd ever avoided, I would let her take me there. Because it had to be faced, for all of our sakes.\n\n\"I mean, you could move out of the country,\" she pointed out. \"But I can't imagine that suiting Alli, after nineteen years of desperately wanting to know her family. She just came home. She wants to be here.\"\n\n\"It's true, she does,\" Freja agreed. \"She wants to live here more than anything. It has always been her ambition, even when we first got to know one another. To come home, it was... everything to her.\"\n\nMom stopped talking and wrestled with her tears again. Dad had an arm around her. I think it killed them both to do it, but they didn't console me or put their arms around me, because I needed to feel this and face it alone, even if they were so nearby. In some ways, they might as well have been across the continent.\n\n\"I need a rest,\" mom said finally, rising and holding a hand out for dad, which he willingly took. \"Alex, we'll talk again when I get up. Ladies, I'm so sorry we had to disrupt your honeymoon.\"\n\n\"There is no honeymoon for us if Alexa and Alexa are in distress, Karen,\" Freja said readily. \"Or you and Michael. We're your friends, and we will remain here until this has seen its end, whatever that is.\"\n\nMom smiled and wiped her eye. \"Please keep Alex company, then? See if you can figure something out?\"\n\nBoth girls nodded and walked up and hugged her. Then mom came up and hugged me.\n\n\"I love you so much, Alex...\" she said in a tiny voice.\n\nThen they were gone. Freja and Jeanie took me to the chesterfield and sat me down cuddling me and whispering their condolences. There was nothing at all sexual about this, even if their hands were on me. We were all worried sick about Alexa.\n\n\"My parents will do what they can to see if she arrives in Denmark,\" Freja assured me. \"We will also try to determine if she returned to Cardiff, since that is where Miranda rests.\"\n\nJeanie was trying not to cry, caressing my cheek and kissing it gently. She had little to offer except emotional support, which she gave the only way she knew how, with affection.",
        "\"I've never lost anyone important to me, Alex,\" she murmured. \"I mean, you know I was worried about being alone my whole life, but... to lose someone who was your everything... oh, God, Alex, I'm so sorry...\"\n\nShe wept quietly on my shoulder while I caressed hers. Freja now knelt in front of me, between my legs, and gently lifted my chin, not at all bothered by my red eyes or worn expression.\n\n\"Alex,\" she said softly. \"I will be honest with you. We may never find Alexa. If she has gone away and does not wish to be found, it would be rather easy for her. She is not only a citizen of the EU, but also the Commonwealth, so she could go anywhere. And like you, she is a polyglot, she speaks many languages, so she'd be comfortable in many places.\"\n\n\"My Klingon is better than hers.\" I mumbled, smiling weakly. She smiled back, shaking her head slightly.\n\n\"You do not need to try and cheer us up, my friend. Let us be here for you. And to that end, let me promise you something, on Alexa's behalf...\"\n\nHer tone was now quiet but serious as she stared into my eyes. \"If we do not see her, ever again, then Jeanie and I will act as wives for you. We cannot replace her, we know that, but we both loved her, and we will look after you in her name. Even children. We talked about it on the way down when we suspected the worst. It's... it's what she'd want, she wouldn't want you to be alone, Alex.\"\n\nI didn't really have anything to say, but I smiled and nodded. She got back on the chesterfield and pulled a cover over us, in spite of the late summer warmth. The two of them nestled into me, caressing me slowly and whispering comforting words. In a cocoon, my weary mind drifted and I fell back asleep, wondering where my beloved wife had gone.\n\n***\n\nWe were all sitting around the coffee table, staring into our cups. Mom and dad had been gone to their bedroom for several hours and I admit I slept for most of those. Dad had made some obligatory calls to the airport, of course, but they had no information to give him. We couldn't even file a missing persons report, since Alexa was an adult and had left a perfectly cogent letter saying goodbye that indicated she was in no danger. She was just... going away.\n\nHow do you find someone who doesn't want to be found? And even if you do find them... what then?\n\nJeanie had made some sandwiches and salad, and we all picked away at them dutifully, even if none of us felt like eating. Still, protein and carbs to help us think were not a bad thing.\n\nI could tell dad was agitated- he wanted to make sure his wife wasn't in distress, and he could do nothing about it. Thankfully, he didn't blame me, because he clearly felt awful for me as well. Nothing was harder on my dad than not being able to help the people he loved. Why had I allowed this to happen?\n\n\"I still can't believe she took off and none of us noticed,\" mom said finally. \"I didn't, your father didn't, you didn't... she must have been so careful.\"\n\n\"Can't be sure, but she might have gone out her bedroom window and shimmied down that lattice,\" dad mused. \"She kept that window open a lot on pleasant nights.\"\n\nFreja nodded. \"And she is, oh, how do you say it... a real monkey. She was always climbing trees and into her bedroom when she was out past curfew. It was amazing to watch how agile she could be.\"\n\n\"Well, you said she was a good little gymnast, which accounts for her HR-inappropriate level of flexibility,\" mom sighed. \"So, when we were all asleep, she went out her window and took off to God-knows-where. I've contacted both sides of my family and told them she went AWOL, on the off-chance she shows up with any of them to learn more about herself. Obviously that won't happen, but being thorough keeps me focused.\"\n\nFreja had told mom and dad about their offer to look after me in Alexa's place. They both seemed to not really mind, but why would they? I wasn't related to either of these girls and it did little or nothing to solve the primary aspect of this crisis from their point of view. Ancillary solutions were far from their minds at the moment. Since my parents hadn't known about our relationship or that Alexa and I considered ourselves husband and wife, the offer was rather moot. I think everyone was just wanting to keep all lines of communication clear at this point, no secrets or surprises.\n\n\"You saw them marry one another, Freja?\" dad asked, looking at her.\n\nShe smiled warmly. \"Only after the fact, but they recorded it. It was the most beautiful thing I have ever seen. Even considering my wedding to Jeanie. They were so in love, Michael.\"\n\n\"Alex?\" mom intoned, looking at me. \"Would you like to take us there?\"\n\nI hadn't expected that question, but I also knew better than to say no. To be honest, I didn't really feel a reason to say no either. What was the glade to me now, except a shrine of memory? I nodded my agreement.\n\n\"Bring your laptop along,\" she said as she rose. \"We'll all go.\"\n\n\"Then we will follow you.\" Freja said, nodding. \"We will take Jeanie's car and meet-\"\n\n\"No, come in the van with us,\" dad said, his voice gentle but brooking no argument. \"The family's grown small enough recently, I see no point in anyone being separated, even for a short drive. We'll meet in the living room in five minutes.\"\n\nI went and got dressed while the girls waited patiently. Dad was getting the van ready. I don't know why, but I got into clothes one would consider a little bit dressy for a walk through a provincial park. I guess because I associated the glade with Alexa, and now it was almost a shrine to her in my mind...\n\nI took a deep breath, steeling myself.\n\n***\n\nIt was dark now as we stood in the glade. The night was clear, and the moon's silvery rays pierced the canopy to touch the emerald grass and crystalline waters of the brook. A light breeze rustling leaves overhead was the only sound we could hear.\n\n\"It's beautiful,\" mom said quietly, almost reverently as she looked around in wonder. \"I can see why you two chose it.\"\n\n\"Thanks,\" I said rather uncertainly, rubbing my neck. Jeanie and Freja were also standing nearby, holding one another's hand, having removed their shoes and enjoying the feel of their grass under their feet. \"So, uh, yeah... this is where it all happened.\"\n\n\"The first time you made love to Alli, and where you married her,\" dad mused. \"I agree with your mother, it's enchanting. Day or night, this place would be magical.\"\n\n\"It's a shame Alli's not here,\" mom said almost wistfully, although I could see her eyes were glassy with tears. It was as if she expected to never see her sister again. \"Alex, I...\"\n\n\"Yeah, mom?\" I asked, wondering what she wanted to say.\n\n\"Do you have the video you took of you marrying Alli on your laptop? If you do... could we see it?\"\n\nI was quiet for a moment but then nodded. There was no need to protect anything now, was there? \"Yeah, mom. I guess you should.\"\n\nShe smiled and covered her mouth while dad took her other hand. \"I guess I had daydreams of being at Alli's wedding, either as her Maid of Honour or giving her away, since mom and dad aren't with us anymore. And now, it turns out I... I missed the whole thing...\"\n\nDad hugged mom and she fought back her tears while I pulled out my laptop, checking the battery power when I turned it on. It would be good for at least three hours. I gave it to mom and she knelt in the grass, with my device on her lap. Dad knelt behind her while Jeanie sidled into one side with Freja behind her and me on the other. I found the folder with the clip in question and clicked Play...\n\n***\n\n\"Pourquoi sous tes cheveux me cacher ton visage? Laisse mes doigts jaloux \u00e9carter ce nuage : Rougis-tu d'\u00eatre belle, \u00f4 charme de mes yeux? L'aurore, ainsi que toi, de ses roses s'ombrage. Pudeur! honte c\u00e9leste! instinct myst\u00e9rieux, Ce qui brille le plus se voile davantage ; Comme si la beaut\u00e9, cette divine image, N'\u00e9tait faite que pour les cieux! Tes yeux sont deux sources vives O\u00f9 vient se peindre un ciel pur, Quand les rameaux de leurs rives Leur d\u00e9couvrent son azur. Dans ce miroir retrac\u00e9es, Chacune de tes pens\u00e9es Jette en passant son \u00e9clair, Comme on voit sur l'eau limpide Flotter l'image rapide Des cygnes qui fendent l'air! Ton front, que ton voile ombrage Et d\u00e9couvre tour \u00e0 tour, Est une nuit sans nuage Pr\u00eate \u00e0 recevoir le jour ; Ta bouche, qui va sourire, Est l'onde qui se retire Au souffle errant du z\u00e9phyr, Et, sur ces bords qu'elle quitte, Laisse au regard qu'elle invite, Compter les perles d'Ophyr! Ton cou, pench\u00e9 sur l'\u00e9paule, Tombe sous son doux fardeau, Comme les branches du saule Sous le poids d'un passereau ; Ton sein, que l'oeil voit \u00e0 peine Soulevant \u00e0 chaque haleine Le poids l\u00e9ger de ton coeur, Est comme deux tourterelles Qui font palpiter leurs ailes Dans la main de l'oiseleur. Tes deux mains sont deux corbeilles Qui laissent passer le jour ; Tes doigts de roses vermeilles En couronnent le contour. Sur le gazon qui l'embrasse Ton pied se pose, et la gr\u00e2ce, Comme un divin instrument, Aux sons \u00e9gaux d'une lyre Semble accorder et conduire Ton plus l\u00e9ger mouvement.\"<br ><br >Alexa's eyes shone as she listened to my recitation of Lamartine, who she had previously told me was one of her favourite chanseurs. I watched myself cough and somewhat apologetically smile.<br ><br >\"I had to get some French in there for you somehow. But you know I love you. I... have no choice, Alexa. If there is indeed such a thing as being 'fated', this is it. And I wouldn't resist it if it was true.\"<br ><br >We all watched I slipped the blue ring-pop onto her finger, still looking into her eyes. \"I wed thee now. I devote my heart and soul to you, Alexa. And you are forever mine, come what may.\"<br ><br >Her eyes were shining with tears as I spoke the words she was so desperate to hear. She nodded when I finished and drew a deep breath. <br ><br >\"Alex, I don't speak Sumerian, you're better at the ancient languages than I am. But this is the world's oldest known love poem, from Sumer, because I feel our souls have been bonded as one since before recorded history...\"<br ><br >\"Bridegroom, dear to my heart, Goodly is your beauty, honeysweet, Lion, dear to my heart, Goodly is your beauty, honeysweet. <br ><br >Bridegroom, let me caress you, My precious caress is more savory than honey, In the bedchamber, honey-filled, Let me enjoy your goodly beauty, Lion, let me caress you. <br ><br >My precious caress is more savory than honey. Bridegroom, you have taken your pleasure of me, Tell my mother, she will give you delicacies, My father, he will give you gifts. <br ><br >You, because you love me, Give me pray of your caresses, My lord god, my lord protector, My Shu-Sin, who gladdens Enlil's heart, Give me pray of your caresses.\"<br ><br >She looked into my eyes as she slipped my ring-pop onto my finger, quoting the play Much Ado About Nothing.<br ><br >\"As you are mine, so now am I yours.\"<br ><br >We all watched the screen as I pulled Alexa to me and kissed her deeply. Tears trickled down mom's face as she watched. Freja and Jeanie were both tearing up as well, even thought they'd both watched it before.\n\n\"Slick editing, Alex,\" mom said softly, putting her hand on mine. \"It was beautiful.\"\n\n\"Yeah, thanks,\" I said as I closed the laptop before Alexa and I started making love. I was determined to be honest with my parents, I wasn't sure I was ready for them to watch me make love to mom's sister, though. \"It helps when the subject matter is Alexa.\"\n\nWe'd both been recording the event with our phones, along with our laptops, meaning I had plenty of angles to choose from when making the final video of our marriage. Alexa and I had watched it countless times, falling more in love every time we did so.\n\nAnd now... nothing.\n\n***\n\nWe were all sitting around the dining table, drinking coffee. My laptop sat in front of me. No one was saying much of anything at the moment.\n\n\"You... you and dad should keep my laptop for now,\" I said finally. \"I'll give you the password. I mean, yeah, there's probably a lot of videos you won't want to watch, but there'll be a lot you do, too. If you really want to know what we meant to one another.\"\n\n\"I do, baby,\" mom said, looking at me, her eyes soft with love. \"I only want your happiness, and I don't know how to give it to you. The other complications aside, we can't even find her.\"\n\n\"Well... could we try to figure it out?\" Jeanie asked. \"I mean, she'll be somewhere in the Commonwealth or the EU, right? That's what Freja said.\"\n\n\"That's pretty much half the planet, darling,\" mom sighed. \"A little more daunting than it might seem.\"\n\n\"Yeah, but she won't go anywhere that random.\" Jeanie insisted. \"Just because she speaks Arabic doesn't mean she'll head to Iran.\"\n\n\"True, my love, but she won't go anywhere that will remind her of her pain, either.\" Freja added, ignoring her beloved's error in geography. \"Not Cardiff, and not Roskilde. She was never truly happy anywhere. She always wanted to be here.\"\n\nWe all sat silently for several seconds, unsure what to say.\n\n\"Paris.\" I said finally. Everyone looked at me.\n\n\"Remember karaoke night?\" I continued. \"Freja said that even Alexa got tired of Paris and Alexa disagreed, said... what was it... she said that if she'd been older when she lived there, with her own money, she might've stayed. But grandma's career took her elsewhere.\"\n\n\"Alex is right,\" dad said, nodding. \"You were sharp to catch that and remember it.\"\n\n\"I, I remember just about everything she says, to be honest. If I had to hazard a guess, she will go to Paris.\"\n\n\"Even if she did, it's a big city,\" Freja sighed. \"We could all go and still never find her.\"\n\nWe were all silent again before mom finally looked up at dad. \"Michael?\"\n\nI knew that tone. She was officially deferring to my dad. About this whole situation. I know it often seems like mom runs the roost, but when the chips were down, there was no question who the head of our household was.\n\nDad closed his eyes and we all waited for several minutes while he wrestled with this entire mess in his mind. All I could hear was the summer breeze outside and the sound of my heart beating.\n\nWhen he opened his eyes, he smiled at me. \"I think we'd better dig up your passport, Alex,\" he said cheerfully. \"You've got a wife to bring home...\"\n\n***\n\n\"Non, rien de rien, non, je ne regrette rien<br >Ni le bien qu`on m`a fait, ni le mal<br >Tout \u00e7a m`est bien \u00e9gal<br >Non, rien de rien, non, je ne regrette rien<br >C`est paye, balaye, oublie, je me fous do passe<br >\n\nThe haunting strains of Edith Piaf's voice reached me as I stepped through the front door of the caf\u00e9. It sent chills through me, making me tremble, as I thought of Alexa singing the song, a touching ballad of no regrets, come what may.\n\nThe Sixteenth Arrondisments, where she had lived many years ago. Simple inquiries eventually confirmed that a beautiful blonde girl had indeed been seen in the neighbourhood. She had only just arrived three days before, but people were already speaking of her, that she had apparently lived there once before. In spite of her beauty, she seemed supremely sad. My heart pounded, it could only be her.\n\nAvec mes souvenirs j`ai allume le feu<br >Mes chagrins, mes plaisirs,<br >Je n`ai plus besoin d`eux<br >Balaye les amours avec leurs tr\u00e9molos<br >Balaye pour toujours<br >Je r\u00e9paras a z\u00e9ro<br >\n\n There she is...\n\nBeautiful beyond words, even when she was wracked with grief. She sat at a small table, looking out the window to her side. Even across the room, I could see her eyes were red with grief, her fingers gently touching her lips. Surrounded by people, she still seemed so alone. That was no doubt how she wanted it.\n\nShe turned her head and our eyes met.\n\nI smiled gently and held up my hand, showing her the little plastic ring on my wedding finger.\n\nNon, rien de rien, non, je ne regrette rien<br >Ni le bien qu`on m`a fait, ni le mal<br >Tout \u00e7a m`est bien \u00e9gal<br >Non, rien de rien, non, je ne regrette rien<br >Car ma vie, car me joies<br >Aujourd'hui \u00e7a commence avec toi!\"\n\nThere were tears in her eyes as she smiled and held up her hand, showing me the little yellow ring she'd always sworn to wear.\n\n\"Because my life, because my joy, today they begin with you!\"\n\n~ fin~\n\n Author's Notes: Yes, this story about Alex and Alexa has come to an end. And yes, Alex is taking her home as his wife. Of course, there'll be things to work out, but our crew will no doubt see it through.\n\nBut having said that, this is only the first part of the story. It will be continuing in one form or another. That'll be in the new year, because I've seriously gotta catch up on other stories, but I enjoyed this one too much to let it end. I have several ideas, and many people have suggested ideas. If you have ideas, PM me and let me know.\n\nI've decided there will be a Christmas Special extra chapter. It's late summer in our storyline, but this chapter will come out around Christmas. Because fans who are evolved beyond hate mail have requested something along those lines. So, what the hey, right?\n\nAnd yes, there was no sex in this chapter. I just couldn't find a place to fit it in where it seemed appropriate. Then again, a lot of people have told me that just because this is an erotic site, not every chapter published has to be laden with sex. Sometimes, emotion and romance are what you need. Hopefully this chapter wrapped up this arc in the right vein, then.\n\nIn this final Author's Notes, I'm going to explain a few things and straighten out some others. For instance, what does our cast look like in my mind?\n\nMichael looks a lot like Dave Draper in the late 60's and early 70's, but with humour and intelligence glinting in his eyes. And his face is not all pinched together.\n\nKaren. I always pictured her looking like the French ballet star Sylvie Guillem in the 80's, only with a pronounced bust. I always loved that fashionable Dutch bob-cut.\n\nI dunno the name of the girl who I think looks like Freja, and I can't put the pic on here anyway. But her hair is honey blonde, sort of a wavy bob, as opposed to Karen's straight hair. Her eyes are a warm hazel and her smile is pleasant and friendly. Her body is slender but attractive, her boobs average in size, maybe a little pointy. Her outstanding feature is her ass and her legs.\n\nJeanie. Curvier than Freja, bigger boobs. She has lots of curly brown hair, cascading down her back. Nice girl, pretty smile, but you can see in her eyes that there's not a lot going on upstairs. I picture Carli Banks with curly brown hair.\n\nHeather. The adult movie actress Lizz Tayler is a good approximation of how I see her.\n\nAlex, well... I don't rightly know who he would look like, but he's got a strong swimmer or gymnast's build, shaggy blond hair like dad and blue eyes. A wry, mischievous smirk.\n\nAlexa. Okay, here we go...\n\nGaladriel has always been my ideal woman. With big boobs and without a big damn gap in her front teeth. Fuck you, Peter Jackson. Alexa, in my mind is beautiful and regal, like Galadriel.\n\nWhen she's being goofy, she reminds me of the cosplay goddess Jess Nigri. When she's being flirty and sexy, I think of Kate Upton or Charlotte McKinney. She's got the sensuality of Marilyn Monroe. And she's a succubus when she's being sexual. Not falling in love with her is a real challenge. Except maybe for you hate trolls out there. You're so strong, you are...\n\nA lot happened in the first week of this story, and then it sort of slowed down, while the quandary they found themselves in simmered under the surface. Hopefully the change in pace wasn't too jarring. And as an author on this site, you just have to accept that no matter which way you take a story, fast or slow, sex every chapter or not every chapter, people are going to have tantrums at you because you're not doing what they want.",
        "Which, at the end of the day, is amusing. Remember the scene in Rocky IV where Drago told off the General Secretary of the Soviet Union? Well to paraphrase Drago... \"I WRITE FOR ME!\"\n\nI guarantee you, tantrums or threats to never read my stories ever ago do absolutely nothing to change my mind about how I'm writing. Don't bother wasting electrons and neurons.\n\nIn a more positive tone, I now have nearly 2,100 followers. I'm flattered by that. People who have the kishkas to actually PM me with feedback are most welcome. So thank you for that. I very much appreciate it.\n\nGod, I want to go on and on and on, but I have other stories to get to. I just want to say thank you to people for sticking with me through this. I always knew the outcome, but fleshing things out to make it happen was occasionally a challenge. I hope you enjoyed this romp and look forward to seeing our gang again. Now to check this chapter twenty times and see if everything genuinely suits me before hitting that Submit button.\n\nKeep your stick on the ice!\n\n- Management"
    ],
    "authorname": "BiscuitHammer",
    "tags": [
        "incest romance",
        "aunt nephew",
        "sorrow",
        "mild humour"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/alex-and-alexa-ch-16"
}