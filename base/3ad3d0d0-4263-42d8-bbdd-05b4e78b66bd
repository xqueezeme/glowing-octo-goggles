{
    "title": "Silver Pt. 07",
    "pages": [
        "******************************\n\n*** If you are under the age of 18 or are not of legal age in your jurisdiction, please exit this story immediately ***\n\nThis story is for adults only and contains content that is sexual in nature.\n\nThis is part 07 in the \"Silver\" series. I urge you to please read Silver Pt. 06 first, since it is the prelude to this chapter. We continue after Michael and Misty left Marlene's mom's house after asking for her daughter's hand in marriage.\n\n*** A very special thanks to WickedInside for her editing help! ***\n\n**********\n\n**********\n\nMisty and I returned home, stopping along the way to chat with some of my neighbors who were putting up the lights on their houses. After warming up for a bit, I picked up the phone and called Marlene's firm. \"Hartgrove, Cassidy, and O'Niel; how may I direct your call?\" Margie's voice cheerfully said over the receiver.\n\n\"You can direct it to the most beautiful woman in the world!\" I answered.\n\n\"Hey Rocky, how are you?\"\n\n\"Very funny, Margie; is my baby there?\"\n\n\"Um, uh... No, she's at, um, a meeting right now, Michael.\"\n\n\"Margie, are you alright?\"\n\n\"Um, yeah, I just got distracted; can I, um, have her call you back?\"\n\n\"Yes, sure, but I need to talk to you also.\"\n\n\"You do? Is everything alright?\"\n\n\"Yes, Sweetie; I was just going to ask you if you and Dianne could help me out with some shopping for Marlene,\" I explained.\n\n\"Oh yeah, that sounds like fun, Michael; I'm sure that Dianne would certainly like to join in on the fun!\"\n\n\"Margie, call me tonight when you get a chance, but in the meantime, see if you can get some ideas from Marlene about what she wants or needs for Christmas, OK?\"\n\n\"Sure, I'll call you at home tonight, Michael; I'll talk to you then.\"\n\n\"OK Margie, I'll talk to you later,\" I replied before hanging up the receiver.\n\nI had a few things in mind that I wanted to get for Marlene, but Margie and Dianne could help me out with some other things that, well, let's say they had more experience with!\n\nAfter speaking with Margie that evening, we decided on a night when the three of us could get out to shop for Marlene without her suspecting anything. The night arrived when the girls were to pick me up to go shopping. I asked Margie to just beep the horn, and I would hurry out the door and into her car in case Marlene just happened to be driving by. It almost felt like I was breaking out of jail and running to the getaway car as I quickly made my way across the grass with Dianne grabbing ahold of me and guiding me into the back seat. I could smell the two perfumes that Dianne and Margie were wearing. I could also smell the cigarette smoke on Margie as I leaned over the seat and gave her a kiss. \"Margie, you better stop smoking those things,\" I said, chastizing her for her bad habit.\n\n\"I know, Michael; I'm going to quit for the New Year,\" she replied.\n\n\"Oh Margie, you've been promising that for the last four years, and you only make it until the middle of January,\" Dianne sighed.\n\nWe high tailed it out of town and headed for a mall that was a bit out of the way because as my luck would have it, Marlene would be shopping at one of the local malls and see us there. Besides, the girls said that they had another store in mind where I could find a gift or two.\n\nWe had a great time shopping together and the girls were a hoot, dragging me through racks of clothes, handbags, shoes, and of course, perfume. I sometimes get indecisive when I'm shopping for just the right thing, so it was good that the girls gave me the positive reinforcement that I needed to make sure that things were just right. I picked up a couple of beautiful, soft Cashmere sweaters, and two denim skirts that I knew Marlene would absolutely love. I was thinking about buying her a leather jacket, more of a casual one, but at the girls suggestion, purchased a long brown coat which she could wear to work instead. Apparently, the one that she had been wearing for the last five years just had to go! Anyway, that is what I was told by my two cohorts in crime! My head was pounding after leaving the perfume counter. Dianne and Margie had me smelling every scent that was offered, spraying it on different parts of their wrists, necks, arms, and yes, my arms too! We finally decided on a beautiful, soft, sensual, instant hard on perfume which had the girls commenting on the buldge in my pants. \"You two are killing me,\" I laughed. \"I can see that you also enjoy spending my money!\"\n\n\"Oh Michael, you can't even imagine what the two of us could do to you,\" Dianne whispered in my ear as we walked from the perfume counter.\n\n\"Dianne, stop before I pass out,\" I commented as I held onto her arm and exited the store. \"Now where?\" I asked.\n\n\"Don't worry, you'll find out when we get there,\" Margie answered as we filled her trunk with bags of Marlene's Christmas gifts.\n\nMargie drove for awhile before pulling into a parking lot and winding her way through the isles of cars before finding an empty spot to park. As the girls guided me through the lot, one on each side of me, we entered a store with the ringing of a bell as the door opened. \"Hi guys, can I help you with anything?\" a woman's voice asked.\n\n\"Maybe,\" Dianne answered, \"But for right now, I think we're alright.\"\n\n\"OK, just let me know if you need any help,\" the woman responded.\n\nI could hear other people talking in low voices, murmurs, and whispers, with an occasional giggle.\n\n\"Where the heck are we?\" I asked the girls.\n\n\"In an adult toy store, Handsome,\" Dianne giggled. \"C'mon, we're going to find you a couple of things to put in Marlene's stocking, and well, eventually somewhere else!\"\n\nMargie laughed at Dianne's comment as we walked through the store. \"You girls are seriously trying to kill me,\" I repeated for the fourth or fifth time that night.\n\n\"We aim to please,\" Margie laughed.\n\n\"Hmm, how about these? Oh, nevermind, she already has these,\" Dianne giggled.\n\n\"Has what?\" I asked.\n\n\"Restraints,\" Dianne answered.\n\n\"Jesus, you know about that too?\" I exclaimed in embarrassment.\n\n\"Yeah, we helped Marlene order them!\" Margie laughed. \"Michael, why is your face so red?\" she continued as she cupped my chin in her hand.\n\nWe walked onto another isle where Dianne stopped and said, \"Hey, how about this?\"\n\n\"How about what?\" I asked nervously, afraid of what the answer would be.\n\n\"This,\" Dianne responded as she laid a huge dildo in my hand.\n\n\"Jesus, Dianne, this isn't exactly what I want to be holding. This thing would split her in half!\"\n\n\"I'm not talking about it for her,\" Dianne purred as she ran my hand down to the other end of the massive cock. Another head was connected to the opposite end. \"What do you think, Margie?\" Dianne seductively asked.\n\n\"Dianne, stop... Michael doesn't know...\"\n\n\"Michael, sometimes Margie and I like to have fun together,\" Dianne said matter of factly. \"There, he does now!\"\n\n\"Dianne...\" Margie exclaimed.\n\n\"You mean...you...two? Oh, I'm feeling a bit light headed!\" I said as I placed my hand on my forehead. \"You're serious?\" I asked next.\n\n\"Yes, we're not real fond of men these days; well, except for you, Michael, you're different,\" Dianne explained.\n\n\"That's so fucking hot,\" I said without thinking.\n\n\"Do you think so?\" the girls said together.\n\n\"Uh, yeah, without sounding like a dick, it's really hot,\" I stammered.\n\n\"Hmm, looks like we have a winner!\" Dianne said as she took the huge cock from my hand and placed it in a small cart. \"Maybe we'll put on a show for you and Marlene one day,\" she purred as her fingernails trailed along my jawline. \"OK, well, let's get shopping for Marlene...\"\n\nTo say that my cock was raging in my pants wouldn't be fair as an accurate description. The thought of Dianne and Margie together would have me jerking myself off after I got home, and probably for the next week or two. \"Hey Slim, are you still with us?\" Dianne asked, bringing me back to reality. \"Thinking about something interesting?\" she asked with a giggle. \"Oh geez, Margie, how about this too?\"\n\n\"Oh yeah, why not?\" Margie answered in an excited voice.\n\n\"Should I even ask?\" I said.\n\n\"No reason to ask, here, what do you think of this?\" Dianne asked as she handed me another dildo, only this one was attached to a harness.\n\n\"You two are just fucking with me now, right?\" I replied in disbelief.\n\n\"No, but we would like to!\" Margie giggled.\n\nThe teasing went on as we walked around the store, stopping to look at vibrating panties, smaller dildos, butt plugs, and a variety of vibrators.\n\n\"I can't buy those things for her,\" I said in total embarrassment. \"That's something that she would have to get if she wanted them, or we would at least go together to buy.\"\n\nThe girls said that I was way off, and that it would be a great idea if I bought some of those things for Marlene. I couldn't bring myself to buy those things without Marlene knowing about it. Besides, it was Christmas and Marlene was wanting a ring, not a butt plug. We finally settled on a new vibrator, KY Jelly, and a porno for her stocking.\n\nThe girls dragged me around the store a bit longer, showing me diffeerent sexual devices that they thought would be neet to try. After an hour in the store, we decided that I had enough and we paid for our, how shall I put it, things. I somehow managed not to cum in my pants before getting back to the car. \"So, what do you think?\" Dianne asked me as we made our way out of the parking lot.\n\n\"Think about what?\" I asked.\n\n\"Everything...\" Dianne replied.\n\n\"I think that I'm dreaming and will wake up with a mess in my pants,\" I laughed.\n\n\"Mmm...\" Margie moaned from the driver's seat.\n\n\"Do you girls want to stop for a cup of coffee or a bite to eat? Maybe a donut or something?\"\n\n\"That sounds like a great idea!\" Dianne replied.\n\nSo, off we went, stopping in at the closest doughnut shop and sitting at a table with a wonderful toasted coconut doughnut, a cup of coffee, and two beautiful, very chatty women.\n\n\"Michael,\" Dianne began after sipping at her coffee, \"Marlene is so much in love with you. You have changed the empty shell of a woman that she used to be into a vibrant, glowing, beautiful woman!\"\n\n\"Thanks Dianne, I have never been more in love with a woman in my entire life,\" I replied with a smile.\n\nMargie began to talk as she chewed on her doughnut, \"Yeah, Slim, it was like night and day after she met you; you certainly did something to her that changed her outlook on life, and men.\"\n\n\"I just acted like I always have, Margie; I don't know any other way.\"\n\n\"She's a very lucky woman,\" Dianne replied with a sigh and a bit of sadness in her voice.\n\n\"You know, I have been single for a long time now. I used to go out to that club that we went to with a buddy of mine, and I would get shot down left and right. How come the women didn't think I was that great back then?\" I asked with a bit of annoyance to my voice. Dianne, what is your story? Marlene never told me.\"\n\n\"Michael, I don't want...\" she began.\n\n\"Does Margie know?\" I asked before she could finish her sentence.\n\n\"Well, yes, she knows, why?\"\n\n\"Than you can tell me right here,\" I responded, getting somewhat tired of her flirting, then saying that she didn't trust men, and then, sighing in front of me saying Marlene was lucky to be dating me.\n\n\"Michael, I'm sorry, can I tell you back at your house instead of here?\"\n\n\"Yeah, sure,\" I replied, now feeling bad at snipping at her.\n\nI changed the subject, asking the girls what they wanted from Santa this year. Of course, I received giggles and several comments from my open ended question! \"You two are impossible,\" I said, shaking my head with laughter.\n\n\"Oh Michael, you love us, just admit it!\" Margie laughed.\n\n\"OK, I admit it; I love the both of you...\"\n\nAfter returning home and carrying all of my purchases inside the house, the girls asked if I needed help wrapping them. I thanked them, saying that I thought that I would be alright. They loved the tree as we sat on the sofa together and admired it's beauty. Margie was busy rubbing Misty's belly; so what else was new! I asked the girls if they would like anything to drink and they each agreed on a glass of wine. \"Tomorrow is a work day!\" I joked, \"So it's only going to be one tonight!\"\n\nI handed the girls their glasses of wine before I sat down and said, \"OK, Dianne, let's hear it.\"\n\n\"Are you sure you want to hear it, Michael?\" Dianne questioned in a pleading voice.\n\n\"Yep, c'mon Sweetheart, let me have it,\" I responded.\n\nOf course, another volley of laughs and giggles were hurled my way. Dianne's laughter turned a bit nervous as she began to tell me her story. \"Michael...well, I don't know... Well, I don't know how...to...start.\"\n\n\"Dianne, come here, sit next to me,\" I suggested, trying my best to make her feel at ease. I felt her sit down against me, nervously ptapping her nails on the wine glass. I took her hand and held it in mine. I felt the tension in her soft hand release as I gently held it. \"OK, so,\" she nervously began. \"I was molested by my step father from the age of twelve, until I turned sixteen and ran away from home. I uh, ran away, and uh, turned to drugs and alcohol. No Michael, I wasn't...molested, I was...raped...by...my step father,\" she trembled.\n\n\"Oh my god, Dianne, I'm so sorry, I had no idea... I never would have asked you, Sweetheart,\" I said in a sorrowful and apologetic voice.\n\n\"It's OK, Michael, I want to tell you; I trust you. Your kindness and sweet nature makes me feel so comfortable. I think that is why I wish that I was Marlene.\"\n\n\"Sweetheart, you don't have to say any more,\" I replied as I rubbed her trembling hand.\n\n\"No, I want to tell you the rest, and how I came to know Marlene. So, as I said, I ran away from the hell which was my life, and found myself pregnant with a twenty-six year old man as the father. He forced me to abort the pregnancy after repeatedly beating me. I stayed with him for fifteen years because I was afraid that he would hunt me down and kill me if I left. I finally realized that he was going to kill me whether I left him or not, so I took up residence at a women's shelter. I had just turned thirty-one years old, and I had nothing but the clothes on my back. After receiving medical help and counceling in the shelter, a woman visited me one day. She was beautiful, compassionate, and soft spoken. She listened to my story before telling me that i was going to be alright and that she was going to help me. The woman was Marlene. I was her very first client for the pro bono work that she agreed to perform. She told me that if I wanted her help, she would see to it that I would get my life together and be able to support myself one day. So, I agreed; I had no other option and although I was unsure of myself, I took the offer that was presented to me. Marlene guaranteed my safety as I sat in her car and left the grounds of the shelter. She brought me to a small house and told me that the man next door would look after me and assure my safety. I panicked and screamed in fright, just knowing that a man lived next door. Marlene stayed with me that night; she sat and told me about the things that she had gone through as a young woman and how she was a victem of spousal abuse herself. Early the next morning, there was a knock at the door as Marlene and I were sitting at the kitchen table having coffee. Marlene ran to the door and returned with a very large man. I froze in place as Marlene introduced him. I couldn't move, my body wouldn't let me. As Marlene came to comfort me, my hands began to shake uncontrollably and coffee was spilling over the brim. The man was Mr. O'Neil. He remained in the room outside of the kitchen where I sat shaking and softly explained how he and Marlene were going to help me. They explained that I would interrn at the law firm while I enrolled in school to receive my high school equivlency. If I chose, they would assist me to enroll in college and receive a degree in the subject of my choice. So, that's how I became a paralegal for the firm and work for Marlene, Ed, and Janet.\"\n\n\"Dianne, I don't know what to say, Sweetheart; I'm so sorry to hear about the horrible things that you went through in order to get to this point in your life. But, it seems that you have become successful, and are one of the best paralegal's in the firm.\"\n\n\"Michael, that is the very compact version of my whole story, but it hits the major points without revisiting the nightmarish ones. So, just to further explain my distaste, well not exactly distaste, but distrust of men, I dated a guy while I was in paralegal school who ended up abusing me and threatening me. Mr. O'Neil somehow put a quick end to that situation and I never heard another word from him afterwards. I never went near another man again; well, until I met you and well, found that kindness did indeed exist in the world.\"\n\n\"What did you just say?\" I suddenly asked.\n\n\"I said that when I met you, i knew that kindness did indeed exist in the world, why?\"\n\n\"Oh, no reason; I must have heard you wrong.\"\n\nNo, I heard her right. It was the third time I heard someone say that after meeting me. I was freaking out inside, but tried to keep a calm demeaner. \"What is it, Michael?\" Margie asked, apparently seeing the look on my face.\n\nI forgot that she was even in the room as Dianne told me the story of her life. \"It's nothing, Margie; It's just that I've heard that before,\" I answered.\n\n\"So, that's why Margie and me, well, get together every once in awhile,\" Dianne continued. \"We don't have to worry about getting beaten, we are comfortable with each other, and we adore the softness of each other's body.\"\n\nOf course, more than my ears heard that last statement and my cock surged in my pants, growing painfully against my jeans. Without thinking about it, just as a baseball player would do while he was standing at home plate on national tv, I reached down and adjusted my crotch. Margie and Dianne began to laugh hysterically as my face reddened at my action. \"Michael, are you having a growth problem?\" Margie asked as her voice shook with laughter.\n\n\"Shut up, Margie, it's not funny,\" I said in an embarrassed laugh.\n\nAnd that's when the real teasing began. \"Michael, would you like to watch me fuck Margie with our new strap on?\" Dianne asked in a low sultry tone. \"How about if you help us insert that double headed dildo into each other?\" Margie suggested next in a sexy teasing voice.\n\n\"C'mon you two, stop... Please, stop,\" I begged as they continued to torture me with some more sexual positions and actions that they would like me to help them with. I came in my pants as the girls verbally described what they were going to do to each other when they got home. The cum soaked the waistband of my underwear and leaked down my pelvis to my balls. I was praying that they didn't notice anything as I made a slight adjustment on the sofa.\n\n\"We're sorry, Michael; we shouldn't do that to you when Marlene isn't here to help you,\" Margie said, still letting out a giggle now and again. \"Maybe one day you and Marlene can join us,\" she continued, almost making me pass out as I listened to her words.\n\n\"Yes, Michael, wouldn't that be wild?\" Dianne asked.\n\n\"hey,\" I began after hearing the girls bring up Marlene's name, \"Did either one of you and Marlene ever, you know?\"\n\n\"Michael, we don't kiss and tell,\" Dianne teased before getting up and placing her wine glass in the dishwasher. Margie followed with her glass as I heard her empty the remaining wine that she didn't finish into the sink before handing it to Dianne. I heard their moist lips seperate before returning to my side. \"We better get going,\" Margie said as she yawned out loud. \"Tomorrow is a work day as Michael reminded us earlier.\"\n\n\"Oh, I hate to leave you like this, Michael; I mean alone... I mean by yourself... I mean living by yourself,\" she stammered, trying to correct what she was attempting to say.",
        "\"That's OK, I'll live... hopefully anyway,\" I laughed.\n\nDianne stood in front of me and kissed me; not a sexual kiss, but a friendly, comforting one. She hugged me tightly and her lovely breasts pressed into my chest. My cock was alive once again, and making his presence well known. \"Mmm, somebody has a problem,\" Dianne whispered in my ear. \"Thank you Michael, thankyou so much for listening and making me feel so much at ease,\" Dianne continued as her hand played with my hair. \"I love you.\"\n\n\"Thanks Dianne, I love you too,\" I replied in a comforting tone. \"Thank you for bringing me out shopping tonight too,\" I exclaimed, \"You both did a great job of spending my money and teasing me beyond belief!\"\n\n\"You're welcome, Slim,\" Margie said as she walked into me with a hug and kiss. \"You truly are a wonderful man, and Marlene is so, so lucky to have you as her own. I love you too!\"\n\n\"Thank you, Margie, I love you also, and if either of you ever need anything, just let me know, OK?\"\n\nAgain, the girls broke out in laughter, \"We'll come over every day if that's the case, and you can help us with all of our needs,\" Dianne laughed. \"Good night, Michael, thanks for the laughs and for letting us torture the shit out of you!\"\n\n\"Good night, girls, be careful going home, and I'll talk to you later. Oh, and remember, don't slip in front of Marlene and mention anything that we bought tonight, OK?\"\n\n\"Mum's the word,\" Margie replied as she walked out the door.\n\n**********\n\n**********\n\nChristmas was just days away, and i needed to get out and pick up one more gift for Marlene. My sister Rose was on her way over to bring me to a jewelry store or two, so I could pick up something that would replace the ring that I felt Marlene was expecting. I showed Rose the gifts that I had purchased so far. She thought that the long brown leather coat was gorgeous and said that it fit Marlene's personality perfectly. She loved the soft sweaters and long denim skirts that the girls had helped me pick out. She said that the matching leather gloves and white scarf was an excellent idea and accented the coat perfectly. \"How about I help you wrap this stuff when we get back,\" she offered before we left for the store.\n\n\"Rose, that would be a huge help; that coat will sit in a pretty big box, and it might be a bit too much for me to wrap.\"\n\nRose and I entered the crowded jewelry store and began looking along the glass cases. I wanted to purchase a nice pair of diamond stud earrings, and a diamond encrusted cross neclace. A sales person asked us if we needed any help. I told her what we were looking for, and she directed us towards the back of the store. We looked at several pair of earrings, trying to decide the proper size to fit Marlene's delicate ears. The woman set several pairs onto the counter, making sure that there was no one close that would grab them and run. Rose was doing her best to describe them to me, when the woman picked up a pair and asked me to hold out my hand. As the card that held the earrings rested in my left palm, my right index finger shook uncontrollably as it lightly felt the diamond. \"Are they sparkly?\" I asked.\n\n\"Mike, they're beautiful; yes, they are really brilliant!\" Rose commented as my hand continued to tremble.\n\n\"After we clean them up, they will sparkle even more,\" the woman commented.\n\n\"Rose, what do you think; do you think they will look alright on Marlene? Do you think that she'll like them?\"\n\nI was so nervous; i wanted everything to be perfect for my Marlene. \"Mike, I think that she'll absolutely love them,\" Rose reassured me.\n\n\"Sir, they are indeed beautiful, and they're even forty percent off!\" the woman said in a cheerful sales voice.\n\n\"Please, call me Mike; and forty percent off of what, a million dollars?\" I replied nervously.\n\nRose and the sales woman laughed at my candor. She pulled out her calculator and tapped in a couple of numbers, giving me the price of the earrings. \"Jesus Christ!\" I said in a long groan. \"And I still need to get her the necklace.\"\n\n\"Do you have to get a necklace, Mike? Is it necessary?\" Rose asked, trying her best to find a resolution to my dilemma.\n\n\"Yes, Rose, I want this to be perfect; I want to hear Marlene's reaction, and most of all, hear the happiness in her voice.\"\n\nThe saleswoman began to tear up after listening to my words and told me that she would see if she could do anything else to help with the price. I asked her to hold onto the earrings until we picked out a necklace.\n\nAfter holding several of the delicate necklaces in my hand and touching the diamond cross', we picked out the daintiest one with the most sparkle. \"Sir...Mike,\" the saleswoman began, \" This is also on sale, and the price is going to surprise you! I can't believe that no one has purchased this one yet, it's gorgeous!\"\n\n\"Yeah, Mike, it's almost like someone purposely left it there for you,\" Rose commented.\n\n\"Wait here guys, I'm going to speak to my manager to see if we can work on the price for the both of them together,\" the woman said as she left with the two pieces of jewerly.\n\n\"Oh God, the old, I'm going to talk to my manager thing,\" I sarcastically said, \"I feel like I'm buying a fricking car.\"\n\nRose shushed me and smacked my back as she laughed at my comment. \"Keep quiet, here she comes,\" Rose warned.\n\nThe saleswoman came back with a big smile on her face and told us what the manager said he could do about the price. I was quite happy when she revealed the final price and asked her if she could wrap them for me after she cleaned them. She happily agreed and asked us to take a look around while she prepared the two pieces of jewelry.\n\n\"Rose,\" I began to ask, \"Do you think that we can take a look at engagement rings while we're waiting?\"\n\n\"Mike, you're kidding, really, really?\" she exclaimed out loud, \"You and Marlene? You're going to ask her to get married?\" Oh my god, we love Marlene, we all absolutely love her,\" she said as tears began to run down her cheek.\n\n\"Easy there, little sister; yes, I'm going to marry Marlene, but I'm going to wait until after the holidays and get these bills paid off.\"\n\nRose grabbed my hand and dragged me to the cases that held the engagement rings. As she brought me up to the case, I told her that I thought that a pear shaped diamond would be best for Marlene's long slender fingers. She agreed as she pressed her nose down to the glass and reviewed the brilliant rings. \"Oh Mike, I can't wait, this is so exciting... Oh my God, this one is gorgeous and it has Marlene written all over it,\" she gasped as she excitedly grabbed onto my arm. Rose looked up and waved our saleswoman over. The woman greeted us with the two wrapped pieces of jewelry. \"Here you go, Mike, all wrapped and ready for Santa to deliver,\" she said, taking my hand and resting it on top of the two boxes.\n\n\"What color wrapping paper?\" I asked.\n\n\"Silver,\" she answered. I looked up at her with a stunned look. \"Actually, it's silver with a blue ribbon and bow on each; is that alright, or would you prefer another color?\"\n\n\"Um, no, silver is perfect,\" I said in a trembling voice.\n\n\"Are you alright, Mike?\" Rose asked after hearing my shaky voice.\n\n\"No, yeah, I'm fine; I was just thinking of something,\" I replied.\n\n\"Are you sure?\" Rose asked again.\n\n\"Yeah, Rose, I'm fine.\"\n\n\"OK, well, can we see that ring right there?\" I heard Rose ask the saleswoman.\n\nThe woman unlocked the case and reached her hand inside to retrieve the ring that my sister was pointing to. \"This one?\" she asked.\n\n\"No, the pear shaped one next to it,\" Rose replied.\n\nThe woman picked up the velvet case and placed it on the glass counter in front of us. \"Oh my God, Mike, this is absolutely stunning!\"\n\n\"Is it alright if I feel it?\" I asked the woman.\n\n\"Sure, let me place it on this black velvet mat, and you can pick it up, Mike.\"\n\n\"Mike, you should see how brilliant it is against the black,\" Rose exclaimed.\n\nI held out my palm and asked Rose to hand it to me. My hand shook once again as I felt the weight of the ring against my skin. I picked it up by the metal ring and lightly touched the diamond.\n\n\"Mike, it's white gold, and the diamond is lying in a wishbone setting, which has tiny diamonds running along the setting and onto the ring,\" the woman explained. \"You're going to be engaged soon?\" she asked.\n\n\"Sometime after the holidays,\" I answered as my finger ran across the pear shaped diamond. \"Most likely after Valentine's Day, so I can get these Christmas bills paid off.\"\n\n\"It truly is stunning!\" the woman added.\n\n\"How stunning?\" I asked, not talking about the brilliance of the ring.\n\nThe woman looked at the tag on the case that held the ring and told me the price. I coughed and placed the ring down on the velvet matt. I paid less for my first car!\" I studdered as I held my hand to my chest.\n\n\"We could probably take twenty percent off of the price,\" the saleswoman replied, laughing at my response to the original amount.\n\n\"I don't have that kind of money right now, or ever, for that fact,\" I said.\n\n\"Mike, will you let me and Matthew help you out, and you can pay us back in monthly payments?\" Rose asked.\n\n\"Rose, that is so sweet of you and Matt, but I don't know,\" I replied.\n\nMy body began to shake and i could feel the blood draining from my face. I could feel the perspiration forming on my forehead as everything was finally sinking in. I was going to ask the most beautiful, the most precious person that I could ever dreamed up, the woman that I loved and adored, to marry me. \"Mike, are you alright? You don't look good,\" Rose said, \"Here, sit down in this chair for a minute.\"\n\nI sat down and placed my head in my hands, rubbing my temples as a feeling of uncertainty filled my brain. Was I good enough for Marlene? Would I be a good enough husband? Would she eventually get tired of my blindness like most of the other women had? Would Marlene leave me one day for someone better? In reality, I knew the answer to my questions. Marlene loved me more than words could describe; she told me. She promised that she would never leave me. She said that she fell in love with me the first time she saw me and Misty walk down her street. She was the one who came up with the plan to meet me. What was I thinking? Of course she loved me and wanted to marry me and live the rest of her life with me.\n\nI looked up at the woman who was standing silent behind the jewelry case. \"Can you hold that for me?\"\n\n\"We can hold it for thirty days, but we need to have a deposit of ten percent in order to do so,\" she softly said. I heard Rose ruffling through her pocket book and say, \"Here, put it on hold for us.\"\n\n\"Rose, no...\"\n\n\"Be quiet, Mike, I'm putting this ring on hold,\" she said in a sharp, firm tone.\n\nThe saleswoman leaned over the counter while placing the ring back into the case and whispered, \"The price will be discounted the day after Valentine's Day, so put it on hold for the first thirty days, come back in and we'll take it off hold and immediatley put it back on for another thirty days. That will get you past Valentine's Day and we can discount it then.\"\n\n\"Will you do that for me?\" I asked, staring her in the face.\n\n\"Yes, just make sure that I'm here when you come in each time,\" she whispered as she began to fill out the paperwork.\n\nRose thanked her over and over again, saying how absoolutely stunning the ring will look on Marlene's finger. After finishing up with the papers and signing my life away, we thanked the woman, took her card from her, paid for my Christmas purchases, and left the store.\n\n\"Oh my God, Oh my God, Oh my God,\" Rose rapidly said the moment that we exited the store. \"Mike, I am so happy for you! I'm ecstatic and I can't wait to tell Matthew!\"\n\n\"Rose, you can tell Matt, but promise that you won't tell anyone else. I don't want anyone to slip in front of Marlene. I want this to be a total surprise,\" I said.\n\n\"OK, Mike, I promise, I won't tell anyone, not even Matthew; he would be the one who lets the cat out of the bag. Oh, I am so excited; this is so great!\"\n\n\"Yes, it is great, isn't it?\" I replied. \"Rose, Marlene will be happy, right?\"\n\n\"Mike, of course she'll be happy; she'll be thrilled to death! You know that she's going to cry, right?\"\n\n\"Yes, I know she's going to cry. And she'll cry every time that she looks at it on her finger,\" I chuckled.\n\n\"How about some lunch?\" Rose asked.\n\n\"No thanks, I feel like I'm going to throw up!\" I said with a half smile.\n\n\"Mike, I have to tell you; that ring is absolutely stunning. It is just gorgeous.\"\n\nMy little sister and me spent the rest of the afternoon wrapping Marlene and Monica's gifts. She did a perfect job with each of Marlene's gifts, wrapping each gift with a steel blue paper and red ribbon, curling it with the scissors after tying it together in the middle of each box. It was my job to top off each one with a red bow and fill out the card. With Rose's help, I carefully wrote, To: Marlene... From: Santa, in the best print that I could manage. Rose helped me carry the gifts down to the basement and place them on my workbench in the shop. I didn't have the other gifts that the girls talked me into buying at the adult store; I would take care of them myself. I also decided that I wasn't going to give Marlene the porno movie the girls picked out. It just happened to have three women and one guy on the cover, and I wasn't going there. I would give it to my buddy Frankie. He loved that stuff and could jerk off to it after having a few drinks after his Christmas dinner!\n\n**********\n\n********\n\nChristmas Eve was finally here! I was going out of my mind, not bbeing able to wait until my beautiful Marlene walked through the door. It was going to be a wonderful night! I bought a bottle of wine, cheese and crackers, and had the nostalgic holiday songs from the past playing low on the stereo. I had placed Marlene's gifts under the tree and in her stocking. I nervously paced the house, trying to make sure that everything was in place. I had decorated the bushes in front of the house, and placed a white candle in every window. Finally, I heard it; the closing of a car door in the driveway! The familiar sound of Marlene's heels tapping on the cement walkway. Misty was waiting at the door, wildly wagging her tail in anticipation of seeing her mommy! \"My tail would be wagging like that too if I had one,\" I laughed to myself. Misty was doing her dance at the door before leaning down and letting out a long playful stretch with her butt raised in the air.\n\nThe door opened and the cold December air rushed into the room. \"Hi Handsome! Oh my God, it's beautiful in here!\" she gasped as she tried to walk past Misty. \"Hi there, Misty-girl, how are you? Are you ready for Santa to come tonight?\" she asked in a high pitched voice. Misty dropped to the floor as usual and raised her belly for Marlene to rub. \"Misty, you'll never change, will you?\" she laughed as she bent over and gave the Lab her belly rub.\n\nI walked towards Marlene; I couldn't wait any longer. \"Hi Gorgeous, Merry Christmas!\" I said with a huge smile plastered across my face.\n\n\"Hi my love, Merry Christmas to you too!\" she said as she stepped over Misty and ran into my arms.\n\nI squeezed her body into mine, harder than I had ever done in the past. \"I love you so much,\" I tearfully whispered.\n\n\"Michael, I love you so much too; what's the matter?\"\n\n\"Nothing Sweetheart, I'm just so happy... Finally, a Christmas with the woman that I absolutely adore,\" I replied as I continued to hold her tightly.\n\nI leaned my head back and kissed her passionately. Our tongues sensually danced together and our lips magically slid against each other. Marlene moaned in my mouth and took ahold of my hair, pulling me harder into her as we stood alone; the two lost souls, the two lovers who became one. Our kiss lasted for a good while before we had to come up for air. \"Wow,\" she gasped.\n\n\"Yeah, wow is right,\" I replied, breathing heavily.\n\n\"I haven't even taken my coat off yet!\" She said as I pictured her sparkling eyes staring deep into my very soul. \"I have to run out to the truck to bring some things in.\"\n\n\"Do you need any help?\" I asked.\n\n\"No, well, you can hold the door open for me, OK?\"\n\n\"Yep, I can handle that,\" I replied as I tried to grab her ass through her long coat when she walked by.\n\n\"Hey, you better be good or Santa is going to put coal in your stocking,\" she giggled.\n\nMarlene made four trips to the truck, returning three times with presents, and the last time with her overnight bag. \"Marlene, that sounds like a lot of stuff, you better not had bought too much,\" I said to her with concern.\n\n\"Hush you, some of this is for Monica,\" she giggled. \"Speaking of buying too much; it looks like Santa already came! Michael, this better not be all for me!\"\n\n\"Um, uh, no...some is, uh for...\" I stammered.\n\n\"Michael! I'm going to...\" she began.\n\n\"Now, now, you better behave yourself or Santa will come and take your gifts back,\" I replied with a grin. \"How about you get yourself settled and I'll get us a glass of wine,\" I suggested as I brushed my lips across her nose.\n\n\"You're going to have wine too?\" she asked in surprise.\n\n\"Yeah, I'll share a glass with you!\"\n\nI opened the bottle of wine and poured it into our glasses, carrying both out to Marlene who was bending over and placing her gifts under the tree. \"Here you go, Sweetheart,\" I said as I bumped into her ass. \"Oops, sorry, I didn't know you were there,\" I laughed.\n\n\"Yeah, sure you didn't; I swear, you can see, and know exactly what you're doing!\"\n\nMarlene stood up and took a glass from my hand. \"Sweetheart, can you take mine too, and put it on the end table? I cut up some pepper jack cheese that I want to bring out.\"\n\nI returned with the cheese and crackers, placing them on the table next to Marlene. I sat down close to her and she handed me a glass of wine. \"A toast?\" she asked.\n\n\"Sure, you or me?\"\n\n\"I'll do it!\" she replied with a smile in her voice. \"To the love of my life; to the man that I absolutely adore. To our very first Christmas together, and for the infinite ones that are to follow! I love you, Michael, Merry Christmas, Love,\" she whimpered.\n\n\"Merry Christmas to you too, my beautiful, beautiful baby! I love you more than life itself,\" I tearfully replied.\n\nOur glasses clinged together, as we hooked our arms around the other, and sipped our wine. We sat close, leaning into each other, sipping wine, and feeding each other cheese and crackers. The room was magically quiet with the exception of the low music from the stereo. \"Oh Holy Night\" played as I sat there in Marlene's arms, picturing the beauty of the twinkling lights on the tree along with the perfectly wrapped gifts that Santa had left.\n\n\"Michael?\"\n\n\"What Sweetheart?\"\n\n\"I have never been more happy, more relaxed, and more content in my life,\" she whispered as she traced her long nails across my cheek.\n\n\"I never thought that I would celebrate a nice Christmas again,\" I replied with my eyes closed, soaking in her touch on my face.\n\n\"What are you wearing tonight?\" I asked.\n\n\"Do you mean now, or tonight?\" she giggled.\n\n\"Now,\" I laughed.\n\n\"A white sweater, jeans, and black high heels,\" she answered, taking my hand and placing it on her breast.\n\nHer nipples were pressing through the ultra soft sweater as my hand rested over it. \"I think that this sweater is defective,\" I said with a grin.\n\n\"What do you mean?\" she asked.\n\n\"It has a bump pointing out of it! I whispered with a smile.\n\n\"Hmm, I guess I'll have to take it off and return it to the store,\" she seductively whispered against my lips.\n\n\"I think you're right,\" I replied as my smile widened against her.\n\nMarlene placed her glass on the end table, reached down and pulled the white sweater up and over her head, shaking out her hair after the piece of clothing was removed completely. She turned her back and laid into my chest. I cupped her breasts in my hands, softly trailing my fingers around the perimeter of her tender flesh. I continued circling them, closing in to her wrinkled areolas and incredibly hard nipples. \"Oh Michael, yes, that feels so good,\" she moaned as my fingers finally circled onto her nipples, taking them and squeezing them gently. Marlene stretched her arms back behind my neck and held me. Her tits pushed out proud and beautiful, waiting to be further caressed. \"Michael, yes, please squeeze them harder...please...please,\" she begged as she lifted her back and press her tits harder into my hands. I released her nipples and cupped my hands under her breasts, lifting them up and pressing them together. \"Oh God yes,\" Marlene gasped as her hands fell forward from my neck and covered mine, forcing them harder against her tits. Marlene was gasping and groaning as her hands continued guiding mine into her firm tits.",
        "I let go of her breast, taking ahold of hers and placing them onto her nipples. \"Go ahead, Sweetheart, squeeze your beautiful tits for me,\" I said as I slid my hands down her stomach and unsnapped her jeans. I slid my hand along the tender skin of her pelvis after unzipping the denim material and pushing it down over her hips. My finger began to caress the lacey material of her thong, running over the already moist lips of her pussy. Marlene jerked on top of me as I begged her to play with her beautiful tits while slipping my hand into her panties and on to her smooth pussy. \"C'mon Marlene, squeeze your nipples, tell me what you're doing; tell me while I play with your hot pussy.\"\n\nMarlene was going wild as my words encouraged her. \"Michael, my nipples are so hard, so sensitive, yes, I'm pinching and twisting them. Oh God yes, rub my pussy, please, put your finger...in...oh...yes...inside of...my...pussy.\"\n\nMy finger disappeared between Marlene's wet lips and slowly entered her, pressing against the soft walls. My palm rested against her clit as my finger slid in and out. \"Jesus, Michael, yes, fuck my pussy, please...yes...oh God...please,\" she begged as her hips bucked against my hand. \"Oh, my tits are so hard, my pussy is so hot, god, yes, I'm going...to...come...Mich...ael.\"\n\nI increased the speed of my finger as Marlene begged and pleaded for me to fuck her pussy. As her orgasm approached, I withdrew my finger and pressed it hard against her clit, sending her over the edge. \"Michael, Mich..ael, I'm...coming, yes, oh God, yes,\" she cried as her hands released her tits and pressed my hand harder against her clit, rubbing it agressively. Her back arched high off of my chest as her orgasm flooded her body. She held my hand on her pussy as it grinded against it. Her head was tossing back and forth across my chest as she spasmed on top of me. \"It won't stop... I'm coming again...again...oh...God, again,\" she wailed. She pulled my hand off of her pussy and sucked my fingers into her mouth, licking her juices as her body jerked wildly before suddenly dropping against me. Marlene was straining to breathe as her sweaty body panted and gasped for air. \"Oh...oh...my...God, Mich...ael, I can't...stop...coming...\"\n\nShe rolled onto her side on top of me, pulling her knees up into a fetal position. I held onto her so she wouldn't fall off of the sofa as she continued to gather air into her lungs. I placed my hand on her heaving back and rubbed it gently until she could finally speak again. \"Michael,\" she whimpered, \"You have to stop doing that to me; I can't believe what you do and how you make me feel.\"\n\n\"Did you say that you were going to be wearing something different later on tonight?\" I asked with a grin.\n\n\"I felt Marlene's body begin to shake as she laughed, \"You are absolutely impossible! You're insane.\"\n\nMarlene straightened her legs out and stretched her head back, reaching up and giving me a soft kiss. Her delicate hand caressed my face as her lips gently pressed into mine. As I felt her fingers on my face, I pictured the ring that would soon be gracing it. I let out a smile as the sight of the sparkling ring laid perfectly against her slender finger. \"What are you thinking about, Handsome?\" Marlene asked as her hand continued to hold my face.\n\n\"Just how beautiful you are, and how lucky I am,\" I grinned.\n\n\"Ooohhh, Michael Francis, sometimes you make me crazy... You are so...\"\n\n\"Michael Francis?\" I laughed, feelling her body rise and fall as my chest spasmed. \"I must be in big trouble, you used my middle name,\" I continued.\n\n\"You're going to be in more than trouble, buddyboy,\" she giggled in frustration.\n\nI took her tits into my hands once again and mindlessly caressed them. \"Your tits are beautiful,\" I whispered. Marlene let out a little whimper as my finger playfully circled her areola. \"You have perfect breasts, Marlene; do you know that?\" I asked while my fingers casually danced around their perimeter.\n\n\"Michael... Oh, thank you, Sweetheart... Oh, that feels so nice,\" she gasped. I pictured her with her eyes closed as her nipples raised up high and proud.\n\n\"I love to feel your nipples in between my fingers, and it is so sexy when your areolas crinkle with excitement,\" I whispered again, listening to her breathing begin to increase. \"I love when you rub the head of my cock around them and spread my cum over them,\" I continued.\n\n\"Michael, I want to feel your cum on my tits; I want to feel your cock on my nipples,\" she moaned as my hands trickled over her soft, tender flesh.\n\n\"I love when you tease me buy dragging them over my face.\"\n\nMarlene's breathing was getting rapid as my words continued. \"I'm going, I am...coming,\" she whimpered while my fingers lightly touched her nipples. \"Oh God, please...please...yes, I'm coming,\" she breathed out loud. Marlene's body quivered and her hand dropped down between her legs as her third orgasm ripped through her body. She suddenly flipped over, and agressively ground her pussy against me. She humped her entire body on me and I could feel her titss tugging against my skin. \"Michael, Michael, Michael,\" she gasped as she continued to rub against me. As the words left her mouth, her body fell limp into me and tears poured from her eyes, pooling into the valley of my chest. She wrapped her arms around me and squeezed me, telling me over and over how much she loved me. I stroked her hair, letting the soft strands run through my fingers. \"Why do you treat me so nice?\" she asked with a sniffle. \"Why are you always so thoughtful, so giving, so gentle one moment, and defending me like a lion the next?\"\n\n\"Because I love you,\" was all I said and all that I would ever need to say. And all was right on that first Christmas together.\n\n**********\n\n**********\n\nMarlene returned from the bathroom wearing her sweater. She cuddled into me and asked, \"Do you want to open presents tonight, or wait until tomorrow morning?\"\n\n\"Sweetheart, there is no stinking way that I can wait until tomorrow,\" I laughed. \"I have been waiting weeks for this night, and quite frankly, I can't take it any more!\"\n\n\"It looks like we're opening gifts then,\" she giggled as she reached up and pinched my cheek. \"C'mon, Handsome, let's sit on the floor and see what Santa Brought.\"\n\nWe sat on the floor like two small children on Christmas morning. We each handed the other the first present. Me, being the bigger child, ripped the paper from the box and lifted the lid. After unfolding the tissue paper, I pulled out a button down shirt. \"It's navy blue,\" Marlene said. \"You were born to wear navy!\"\n\n\"Thank you, Sweetheart, I need new shirts!\" I said with a smile.\n\nMarlene delicately unwrapped the paper from her box. She suddenly stopped and looked at me. I could feel her eyes staring at me in hesitation. I remembered her telling me the story about her ex-husband telling her to \"just rip the shit off\" in front of Ed, Janet, and her mom at her forty-fifth birthday celebration. She was unwrapping the box containing the brass law firm plaque that Janet and Ed had saved which contained the Cassidy name. It was the night that she became a partner in the law firm, and the night her husband would bring her home and brutally beat her.\n\nAs a tear began to roll down my face, I gently placed my hand over hers and said, \"Go ahead, Sweetheart, you're doing fine.\"\n\nMarlene wiped the tear from my face before continuing to remove the paper and lifting the lid. she pulled back the tissue paper and lifted the beautiful black Cashmere sweater from the box. \"Oh Michael, this is gorgeous; it's so soft, I love it. You shouldn't have,\" she exclaimed. After refolding the sweater, she reached in the box again and lifted out a long denim skirt. \"It's beautiful; how did you manage to do this?\"\n\n\"Elves,\" I grinned. \"You might as well open this one too,\" I said as I handed her another box which contained a hot pink version of the black sweater, and a black denim skirt. \"Michael, stop, you shouldn't have done this,\" she exclaimed as she held the soft sweater against her face.\n\n\"That will probably feel better against your tits,\" I said with a grin.\n\n\"Oh yes, I'm certainly going to find out soon,\" she laughed as she placed the sweater and skirt back in the box.\n\nI opened the next box Marlene handed me and pulled out three pair of bikini underwear. \"Oh my, these things are going to strangle the boys,\" I laughed. \"Do I get to model them later?\" I asked.\n\n\"Yes, one at a time,\" Marlene replied in a teasing voice. \"Let me describe them... OK, so the pair you have in your hand are red, and it has the word, SEXY written in black down the middle.\"\n\n\"Oh baby!\" I said before picking up the second pair.\n\n\"Those are blue and in gold print, have the words, BITE Me, written across them. The last pair are black, and have the word STUD, written in silver across them.\"\n\n\"Stud huh?\" I laughed as I kissed her.\n\n\"Yes, you're my stud,\" she giggled.\n\nMarlene opened the box of perfume that I bought, thanking me over and over, saying that she was thinking of purchasing the very same kind. \"Thank you, girls,\" I thought to myself.\n\n\"How did you know?\" she asked.\n\n\"I just really liked the sexy scent, and thought that it would smell edible on you,\" I replied in a fib.\n\nMarlene slid a box over to me. \"This is kind of heavy, so just rip off the paper here on the floor,\" she advised me.\n\nAgain, I ripped the paper from the box, not having a clue to what it was. I looked to Marlene for assistance. \"Oh Michael, I hate when you use those tools downstairs in your shop, but I bought you a combination disc, belt, drum sander. It comes with a stand.\"\n\n\"Marlene, thank you so much; where did you get this? How did you know I needed it?\"\n\n\"A little birdie told me,\" she giggled.\n\n\"Wow, this is great!\" I replied, giving her a big kiss. \"Thank you so much, Sweetheart!\"\n\n\"Just be careful with that thing; I don't want to be responsible for you getting hurt,\" she nervously said.\n\nNow it was my turn to slide a larger box over to Marlene as the floor was filling up with wrapping paper and boxes. \"Michael, what in God's name is this?\" she gasped.\n\n\"I don't know, you'll have to ask Santa! Or you could just open it and see,\" I laughed.\n\nThe box was too large for Marlene to open in her usual gentle fashion, so she stuck her long nails into the paper and tore it off in one long swoop. \"Good girl!\" I laughed.\n\n\"Michael, what is this?\" she asked as she folded back the lid from the box. \"Oh, oh...my...God,\" she gasped as she pulled the long leather coat from the box. She raised up onto her feet and held the soft brown leather coat in front of her. \"Michael, no, this is too much... Oh my god, it's beautiful, just beautiful,\" she said in a trembling voice.\n\n\"Why don't you try it on and see if it fits alright,\" I suggested. \"I have the receipt if you need to exchange it for another size or color.\"\n\nI stood up and helped Marlene into the leather coat. She slipped into it and pulled it closed in front of her. \"Michael, it fits perfectly; where did you get this?\" she asked in a shocked voice.\n\n\"Santa,\" I replied.\n\n\"No Michael, where did you get this? You went way overboard,\" she continued.\n\n\"You'll have to take it up with Santa,\" I replied.\n\n\"Oh, don't you worry; I'll be taking it up with Santa alright!\" she sighed. \"It's gorgeous, absolutely gorgeous; I can't wait to wear it to work! I've been wearing an old ratty one for years,\" she said with a big smile to her voice.\n\n\"Here, you might want to open this one too,\" I said as I handed her the box which contained the white scarf and brown leather gloves.\n\n\"You are in serious trouble, Mister,\" she warned as she opened the box. \"Gloves and a scarf! I'm going to... They're beautiful and they match the coat!\"\n\n\"You're going to look like the cat's meow when you go into work Monday!\" I said.\n\nMarlene tried on the gloves, taking my hand and rubbing them over the soft leather that tightly encased her hand. \"Marlene, that is so sexy,\" I whispered. \"I can just picture you in the coat along with your gloves. God, you are so unbelievably sexy!\"\n\n\"Maybe I'll wrap these gloves around something, and you can feel how soft they really are!\" she teased.\n\n\"OK, I have to sit down because I am about to pass out,\" I replied.\n\nMarlene laughed as she removed her gloves and coat, returning them to their respective boxes.\n\n\"OK, Handsome, there's another box here for you,\" she said with a big smile to her voice.\n\nI was sitting on the sofa when she handed me the box. It wasn't big; in fact, it was fairly small. I removed the wrapping paper and pulled out another pair of bikini underwear. \"More underwear?\" I asked, looking up at her in surprise.\n\n\"It's not underwear, it's a bathing suit silly! There's something else in there,\" she continued.\n\nI reached in the box and pulled out an envelope. Looking at Marlene, I opened it, and pulled out a couple pieces of paper. \"What?\" I asked.\n\n\"Two tickets to the French island ofSaint Barthelemy in the Caribbean,\" she excitedly said. \"It's one of the top ten sexiest beaches in the world! We're going atthe the end of February and I'll be wearing my silver string bikini!\"\n\n\"Marlene, no, you're kidding me right?\"\n\n\"No, I'm not, so you better get working on that tan because you are going to be wearing that black skimpy bathing suit, Handsome!\"\n\n\"Marlene, no, this is way too much; this is way, way too much,\" I said as I looked up at her and my hands shook.\n\n\"It's not too much; I've always wanted to visit the French island, and you're going with me! Or, should I say that I'm going with you!\"\n\nI was stunned to say the least; I had never been to the islands, yet alone the Caribbean. And I would be accompanied by a gorgeous woman, who would be wearing a silver micro-bikini which barely covered her tits or pussy.\n\n\"Marlene, I don't know what to say; this is unreal... I ...\"\n\n\"You don't have to say anything else, Handsome; the look on your face is enough!\" Marlene said as she leaned down, took the papers from my hand, and gave me a soft kiss. \"Merry Christmas my adorable, Michael,\" she whispered.\n\n\"There's, um...some...things in your, um, stocking,\" I studdered.\n\n\"Santa left me something in my stocking too?\" she asked in surprise, giggling like a child.\n\nMarlene walked over to the fireplace and retrieved her stocking before sitting down next to me on the sofa. She reached in and grabbed the first thing that she felt. \"KY jelly from Santa?\" she mused. \"I wonder what he is going to do with this?\"\n\n\"It's your present, so I wonder what you are going to do with it? And maybe include Santa?\" I replied.\n\n\"Mmm, I have some ideas that might have me getting coal in my stocking next year,\" she said in a sultry voice.\n\nMy cock grew harder in my pants as I listened to Marlene's words, dreaming what she had in mind. \"Hey, are you still with me? Or are you maybe, um, thinking of something else?\" she moaned as she raked her long nails down my arm.\n\n\"Um, probably something else,\" I replied with a red face.\n\n\"Oohhh, you're bad, little boy; Santa might have to return and take your gifts back to the North Pole,\" she purred in my ear.\n\nMarlene reached ddown and rubbed the hard on in my pants. \"Speaking of poles,\" she breathed in my ear.\n\n\"There's more in your stoccking,\" I said in a shaky voice.\n\nMarlene reached in and again pulled out the first thing that hit her hand. \"Santa, you bad, bad boy... I need one of these; my old one just isn't doing the trick anymore,\" she said in a sexy voice as she held her new vibrator in her hand. \"I might just have to use my new gift tonight to make sure it works!\" she continued to tease. \"Michael, thank you, Sweetheart; who brought you out to get this?\"\n\n\"Elves,\" I replied again with a smile.\n\n\"Wow, this is really nice... I can't wait to try it out! And maybe use it on myself too!\" she teased. Marlene knew how to drive me absolutely crazy with her verbal talents. From the very first night that I met her, she quickly learned how to use her voice to seduce me. And she was incredibly good at it!\n\n\"Marlene... There's more...\"\n\nMarlene reached in and pulled out the first wrapped box. \"Michael, this is beautifully wrapped! It's silver with a beautiful blue ribbon and bow.\"\n\nShe delicately unwrapped the box, and it seemed like she folded the paper and placed it next to her. She opened the box and gasped, \"Michael... Oh my god... They're beautiful, they're gorgeous, brilliant, and sparkly! This is too much, too, too much...\"\n\n\"What did Santa leave you there, Sweetheart?\" I asked with a smile, enjoying the surprise in her voice.\n\n\"He left me...beautiful, diamond...stud...earrings,\" she whispered in a shaky voice. \"Michael, this is so much... So, so much!\"\n\n\"Before you soak your face with tears, there's another box in there,\" I said.\n\n\"Michael, no...\" she said as she pulled the last box from her stocking. She unwrapped the box and opened it. \"This is beautiful!\" she whispered. \"Absoluttely beautiful... I've always wanted to wear a cross around my neck, but this one is gorgeous. It's laced with diamonds; do you know that?\" she asked in shock.\n\n\"Is it?\" I laughed.\n\n\"Yes, Michael, it matches my earrings! Oh wait, what am I saying? Of course you know it's a diamond cross! Can you help me put it on?\" she asked. \"I'm going to put my earrings on afterwards to see what they look like, OK?\"\n\n\"Sure Sweetheart, I think that's a great idea,\" I assured her.\n\nI don't believe Marlene ever felt safe during Christmas. I don't believe from the way she was speaking, she ever received a thoughtful gift in her adult life. It sounded to me, this was her very first Christmas. The child finally came out from her, and she knew that all was right on this Christmas Eve. She gently removed the necklace from the box and asked if I could help her. I laughed when I felt the size of the clasp that I had to connect. \"Just make pretend that it's my bra, Handsome,\" she giggled.\n\n\"Marlene, I'm only good at taking them off, not putting them on,\" I laughed\n\nMy fat shaky fingers made a couple of attempts before she asked if I would like her to give it a try. I happily agreed and on the first try, Marlene had the necklace clasped around her neck. I could picture the sparkling cross dangling down and resting on her white sweater. \"I'm going to run into the bathroom and put my earrings in, OK Handsome?\"\n\n\"Go ahead Sweetheart, take your time,\" I replied.\n\nMarlene scampered back to the bathroom. I could hear her heels tapping at a quick pace down the hallway. While she was doing her thing, I began to collect the wrapping paper that was shrewn about the room. I crumpled the paper into a ball as I gathered up each piece that I came across. \"Oh my God, they're gorgeous,\" she screamed into the mirror. In seconds, Marlene was running down the hallway in tears before jumping into me as I stood with a ball of paper in my hands. \"Michael...\" she cried uncontrollably, \"They're absolutely gorgeous; everything is just gorgeous... I've never had anything close to this,\" she tearfully cried into my shoulder. \"No one has ever treated me this way; no one cared... No one ever put as much thought into any gift,\" she cried, still shaking against my body.\n\n\"It's OK, Sweetheart, it's OK... You'll never have to worry about anything again,\" I said in a comforting voice while rubbing her back. \"You're always thought of, Marlene... Every minute of the day, every song that I hear, every thing that I do, I think of you. That will never end, Honey, it will never end...\"\n\n\"Michael... I love you so much... You are the sweetest person that was ever put on this earth... I'm not used to this; it's like my very first Christmas,\" she cried as she held onto my hair. \"My very first Christmas, very first...\"\n\n\"So tell me, what does it look like?\"",
        "\"Michael, the earrings are stunning, and sparkle against my skin! And the cross... The cross hangs down on my chest and is just as brilliant. They are just stunning, stunning. I can't wait until Monday; I'm going to wear a dress so I can show everything off! And my beautiful coat and gloves; wait until the girls see all of this!\" she excitedly said. \"You are so special, Michael, so, so special,\" she whispered as her lips grazed against mine.\n\n\"Yeah, so I hear,\" I smiled.\n\nMarlene helped me clean up the paper and place the gifts neatly under the tree before telling me that she had one more thing for me. \"How about you wait here, and I'll be back,\" she said as she bit my ear and tugged it before letting it snap back into place. She reached down and felt my straining cock. \"Don't worry Baby, that won't be lasting long,\" she purred in my ear. She asked me if I could put some batteries in her new toy before running back to the bedroom .\n\nMarlene was gone for quite a while. It was fine with me, since it took me just as long to open her new toy. I fumbled and tore at the rediculous plastic packaging which encased the vibrator. Finally, after a few dirogatory swears to the company that manufactured it, I freed it from it's confines, and inserted the required batteries. After finding the switch, I turned it on and was greeted with a low buzz. Before I could play with the other speeds, Marlene arrived from the hallway as her heels clicked slowly on the hardwood floor. I stopped what I was doing, and waited for her on the sofa. \"Ready to open your present?\" she asked as she stood in front of me.\n\n\"Uh huh,\" I replied with a hard swallow.\n\nMarlene took ahold of my hands and placed them on a big bow which was wrapped around her hips. \"It's red,\" she said as my hand felt the velvet bow. It fell from her hips and angled to her crotch. She brought them around her back where the ribbon was connected. She told me it was velcroed together and all I had to do was pull it apart. I heard the velcro tear as I tugged at the ribbon. It came loose and fell to the floor. \"Merry Christmas, Michael; I'm your present for the night! You'll find that I'm dressed in a crotchless fish net bodysuit; it's white. My areolas and nipples are very clear through the material, as is my newly trimmed landing strip. How about you bring your present to bed... You may want to bring the two other presents that were in my stocking too!\"\n\nMarlene took my hand and lifted me from the sofa. I held my arms around her beautiful body and hugged her tightly. \"This is the best present that I ever received,\" I whispered as I kissed her softly. \"Do you mind if I take a look before we head back to the bedroom?\"\n\n\"No, Handsome, I've been waiting for this all week,\" she murmured into my neck. \"Where would you like to start?\"\n\n\"I'm not sure... I'm really not sure,\" I whispered as Marlene lightly chewed on my skin. \"Beautiful, can I feel your face first?\"\n\n\"Sure Michael, but why my face?\"\n\n\"I want to relive our first night together... I want to feel how incredibly beautiful you truly are.\"\n\n\"You my love, are a sweet, sweet man,\" she whispered as she cupped my face in her soft hands. \"Do you want to sit on the sofa like we did that night?\"\n\n\"Yes, let's just sit down,\" I replied as I backed into the sofa.\n\nThe cushion next to me soon sank down and I felt the side of Marlene's hip rub up against mine. Marlene took my hands up to her face. I cupped her cheeks in my hands and told her to close her eyes as I gently lifted my thumbs up to her eyebrows. Starting from the center, above her nose, I began to slowly run them across the fine hair. Marlene let out an audible breath as her body completely relax. Reaching the end of her brows, I moved back to her ears with my thumb and pointer fingers, slowly rubbing my way around and down, and gently rubbed the softness of her earlobes. Marlene let out an appreciative moan. She sat motionless as I lightly placed my thumbs onto her cheeks. I traced lightly down, while simultaniously dragging the remaining fingers along both sides of her face.\n\n\"Very nice,\" I whispered, and felt her smile slowly grow.\n\nMy fingers touched the top of her lip and trailed down to each corner. I lightly touched the underside of her bottom lip and repeaded the trail, lightly moving to the respective corners. My right index finger ran across her bottom lip feeling it's full softness give in to my touch. She was beautiful in my eyes. Marlene once again exaggerated her pout with her bottom lip. As I had done that warm July night, I grabbed both sides of her mouth with my hand, giving her fish lips as I laughed and kissed them. I remembered the horror and embarrassment that I felt at the time as the smile grew across my face.\n\n\"What are you thinking?\" she asked with a laugh.\n\n\"I was just thinking of how mortified I was when I kissed you that first time,\" I replied with a boyish grin.\n\n\"Oh yes, I can still see your face; you were beet red! If I remember correctly, I did this...\"\n\nMarlene leaned in close, and her lips lightly touched mine. It was the lightest of kisses. She pulled back slightly, and pressed her lips onto mine once again, this time a little harder. The feeling was soft and sensual. We ever so gently continued our kiss and, as we parted, the unmistakeable juicy sound of seperating lips filled the silent room. \"Wait a minute! I also remember this...\"\n\nMarlene grabbed my lips and squeezed them together into a fish face. She planted her lips on them and made a big \"smootch\" sound. She pulled away laughing at herself. \"Paybacks, remember?\" she giggled before she sucked my lips into her mouth and passionately kissed me. She darted her tongue in my mouth while grabbing my hair, falling into me as our sensual kiss continued. Marlene moaned in my mouth as she pressed harder into me with untamed passion. \"Mmm, we need to get back to the bedroom right now,\" she groaned when our kiss ended.\n\n\"Lead the way,\" I said with a bigt grin.\n\nMarlene immediately raised up from me, taking ahold of my hands and wrapping them around her thin waist. I could feel the erotic fabric of her bodysuit as it conformed to her curves. I brought my hands up to her beautiful breast as we walked to the bedroom. \"Remember when I told you that we should always walk this way?\"\n\n\"Mmm, yes, I believe I was leading you to the basement stairs right?\" she sighed as my hands cupped her tits and pressed them together.\n\n\"I believe that you are correct,\" I whispered in her ear as I caressed her nipples through the white material.\n\nMarlene stopped and laid her head back into my shoulder. \"Mmm, Michael, we'll never get to the bedroom if you keep doing that.\"\n\n\"Do you want me to stop?\"\n\n\"No, please, no,\" she moaned as her hands reached behind me and pulled my crotch into her ass. \"I want this in me, but I can't seem to focus on walking,\" she whimpered as I felt her nails attempt to penetrate my jeans.\n\n\"Hmm, it seems that we are at an impasse,\" I said in deep thought.\n\nI released Marlene's tits and spun her around quickly. As she faced me in alarm, I dipped my shoulder down, wrapped my arms around her thighs, and lifted her over my shoulder.\n\n\"Miiii...chaeeeel...\" she sreamed in laughter, \"What are you doing, you nut! Put me down; you're going to hurt yourself... I'm too heavy for you,\" she continued to scream in laughter.\n\nMarlene's body was hanging over my shoulder with her thighs tightly gripped in my arms and the rest of her long legs draped down in front of me. The top half of her body was upside down against my back. Her arms wrapped around my waist, hanging on for dear life. I could picture her brown hair dangling to the back of my thighs as I began to walk towards our destination. \"Michael, put me down; you're going to drop me!\" she laughed.\n\nI heard her heels hit the wall and her ass soon followed. \"Oops, sorry,\" I laughed. \"My vision is a little off tonight,\" I said as Marlene laughed uncontrollably. I took a step back and made an adjustment to my direction and guided us down the hallway with my left hand using the wall as my guide while my right arm secured Marlene. I finally felt the opening to the bedroom, and told Marlene to tuck her legs in while I slipped through the doorway. My right shoulder hit the door jam and threw me a bit off balance. \"Sorry about that,\" I laughed as I steadied myself and redirected us to the bed. Marlenes heels hit the edge of the bed as she continued her high pitched laughter. I reached my left hand down to feel the mattress and deposited her onto the bed. She screamed out loud as her body flipped over, and bounced onto the mattress. She laid there laughing as I gasped for air. My breathing was heavy as I placed my hands on the edge of the bed and panted.\n\n\"Somebody is a little out of shape,\" I laughed in heavy breaths.\n\n\"Michael, you are absolutely crazy, do you know that?\" Marlene laughed as she sat up from the mattress and kneeled in front of me. \"Are you alright, old Man?\" she gigggled, running her fingers through my hair.\n\n\"I may need some mouth to mouth,\" I coughed as my breathing eased. \"Did you call me Old Man?\" I asked as I grabbed her around her body and tackled her to the bed.\n\nMarlene shreiked in delight as our bodies landed on the soft mattress. I kissed her before she could say anything and her laughter soon turned to moans as we rolled together on the bed. \"Somebody is overdressed,\" she mummbled in my mouth while attempting to unbutton my jeans. Without much success, she changed tactics and pulled my shirttail from my waist. \"Mmm,mmm, mmm, Michael...you...need to...take off...your clothes,\" she mumbled in my mouth in frustration. \"C'mon...take them...off and...do something...to...me before...I go...crazy,\" she begged.\n\nShe pushed me away, and while breathing heavily, began tearing my clothes off. After throwing my shoes, socks, shirt, and everything else in different directions, she tackled me to the mattress and straddled my body. She pinned my hands above my head and planted a long, sensual kiss on me. Our tongues tangled in a seductive dance as her hands tightly gripped my wrists. \"I need you, Michael,\" she moaned in my mouth. \"I want you; I want you in me, on me, behind me, and where ever else you can think of,\" she continued while sucking on my lips and repeatedly kissing my face. \"Michael, I can't take it any more, I need to come right now,\" she moaned as she released my wrists and straddled my face. My arms were pinned against her bent legs as she grabbed the back of my head and pulled it into her soaked pussy. My tongue darted into her hole as she dropped herself lower and humped my face. My nose ground into the trimmed hair of the landing strip above her pussy as she continued to violently grind into me. \"Oh God, Michael, fuck my pussy with your tongue,\" she pleaded. \"Fuck me...fuck...me God yes, I can ...feel...it,\" she moaned as she held my head tight into her. I could piture her fishnet covered ass sliding back and forth in quick thrusts and her long covered legs bent beneath her as her heels pressed into my side. \"Oh yes, I'm...coming...yes, God...yes Michael, I'm...coming.\"\n\nMarlene's pussy was racing over my face as she reached her peak and came on my face. Her fists held my hair as her pussy continued grinding into me. \"Oh god, oh God, oh God,\" she sreamed as the intense pleasure ripped through her body. \"I can't stop...coming... It... It...won't stop,\" she cried as she continued to spasm on top of me. \"Michael...it...won't stop, please, it...won't...\"\n\nMarlene couldn't handle any more stimulation and tossed herself onto the mattress next to me, panting and gasping for air. \"Michael...Mich...ael, I...need you...inside...me,\" she cried. \"I need...you,\" she continued. Before I could move, she rolled over on top of me while still breathing heavy, and licked her juices from my face while inserting my throbbing cock into her. \"Mmm, mmm, give me...your...cock,\" she pleaded as she continued to suck on her juices. My cock easily entered her and it wasn't long before she was rocking back and forth on it's length. She placed her hands on each side of my chest and raised herself up before dropping down and taking the full length of my cock deep into her pussy. \"Ugghhh... My God, Mic...hael, you...are so...deep,\" she moaned as she ground herself against my pelvis. I pictured her eyes rolling back in her head as the words left her mouth. \"You are...so...so...deep,\" she continued as her head fell back. Marlene suddenly began to raise and slam herself down on me. I could hear the wetness of her juices with each of her movements. The fabric covering her ass prevented the loud slapping that would usually accompany the pounding rhythm. \"Fuck...me...please, Mich...ael, please...yes...please...\" she begged. I began to thrust my hips up to meet her downward movements and felt her tighten the grip on my chest.\n\n\"C'mon, Sweetheart, come on me,\" I said, encouraging her to reach her release. \"That's it, fuck me, Sweetheart, yes, fuck me hard.\"\n\nMarlene continued her frantic pace, withdrawling my shaft to the head, and dropping down hard into my upward thrusts. She leaned forward as her breath became rapid. I felt the drops of tears on my chest as her orgasm signaled it's appearance. \"Mic...hael, I...love you, i...love...you so...much,\" she cried as she slammed down on me for the final time. Her head fell forward and her tears rained down as she ground her pussy against me in a tremendous orgasm. \"Oh GOD...oh...my...God, I...I...can feel...you; aahhh...yes...God...yes,\" she cried out loud before falling completely limp into me. Her body trembled as the tears continued from the overwhelming emotion that gripped her. I could feel her pussy contracting around my cock as it remained deep inside her.\n\nMarlene's body began to shake uncontrollably as she broke down on top of me. I held her tight to comfort her, letting her emotions release.\n\nWe laid together as she cried in my arns. I softly stroked her hair without saying a word. Her heavy sobs turned to whimpers, and her whimpers turned to sniffles as she slowly settled down. \"I'm sorry,\" she whispered in a barely audible voice.\n\n\"Are you alright, Love?\" I softly asked as my fingers continued to glide through her hair.\n\n\"Yes, I'm OK,\" she replied in a faint voice.\n\n\"Are you upset with me?\" I asked.\n\n\"No, Sweetheart, not at all; in fact quite the opposite.\"\n\n\"What?\" I asked, not knowing what she meant.\n\n\"The way I just acted...\"\n\n\"What do you mean?\"\n\n\"Michael, it's Christmas Eve, and I just acted like an insatiable... You know...\"\n\n\"Marlene, what do you mean, Sweetheart?\"\n\n\"Instead of making slow, soft, passionate love; I attacked you like a rabid animal. And even worse, after you gave me the most loving, thoughtful, beautiful gifts. You went so far out of your way to make our first Christmas a perfect one. I never experienced a Christmas like this... Never... I hated this holiday, hated it... There was a time in my life when I wish it never existed.\"\n\n\"While you were married?\" I questioned.\n\n\"No, from the day that I lost my dad and brother, up to the day when I saw you,\" she whispered. \"From the frigid night when we went to pick out the tree, to the decorating, to the shopping; you showed me a whole different world that I never knew existed. You showed me what Christmas is all about,\" she trembled. \"You showed me love, patience, trust, and how much I really mean to you. When...I began to...delicately...unwrap...my first gift before freezing...in...place, you touched me in a...way...that I never...experienced and told...me...that I was...doing...a great job,\" she cried into my chest. \"I'm just...not used...to this.\"\n\n\"My sweet, sweet Marlene,\" I said as I rocked her in my arms, \"I absolutely adore you and want you to be able to act, and react however you want. We are one, and support each other through good and not so good times,\" I softly whispered with a smile. \"You are my life and one day, if you're a good girl, you'll be my wife; if not, Santa is going to bring you back to the North Pole!\" I happily said while patting her hiney.\n\nMarlene reached up and held my hair in her hands. \"You are the sweetest person that God ever put on this earth,\" she whispered\n\n\"How about if we take a little break and go out and relax on the sofa and watch, A Christmas Story, with a cup of hot chocolate,\" I suggested.\n\n\"OK, that sounds nice,\" she sniffled. \"I'm going to get a tissue before I come out,OK?\"\n\n\"Yep, you do that, and I'll put the kettle on.\"\n\n\"Beautiful?\" I asked.\n\n\"What is it?\"\n\n\"You can take that bodysuit off if you want, and get into some comfy jammies. You might have to put it on tomorrow though!\" I laughed\n\n\"Don't you like it?\" she asked.\n\n\"No, I love it... You are the sexiest, most sensual woman that I ever met,\" I replied. \"Don't you worry, you'll be wearing it soon!\" I laughed as I continued to pat her ass.\n\n\"Michael?\"\n\n\"Yeessssessss...\" I replied in a long, exaggerated, smiling voice.\n\n\"I don't have any jammies; I didn't bring any with me.\"\n\n\"Yes you did, they're in the bottom drawer,\" I replied with a grin.\n\n\"Michael...\" she sighed.\n\nMarlene began to move off of me. \"Oohhh, geez, I forgot about you,\" she gasped as my cock began to withdraw from her pussy. \"Oh God, oh...\" she exclaimed in a shocked voice. \"I swear this thing gets bigger every time it's in me,\" she giggled.\n\n\"He's a growing boy,\" I laughed.\n\n\"If he grows any more, he'll be in my throat.\"\n\n\"Been there, done that,\" I laughed.\n\n\"Ooohhh...you...are so...bad...\" she laughed as she slapped my chest. My cock finally extracted from Marlene and slapped on my pelvis.\n\n\"Yes, I heard it,\" I said before Marlene could make a comment. \"Hey, remember, don't fold that bodysuit up because I need to do some further investigating!\"\n\nI picked up the boiling kettle and filled our mugs. After stirring the powdered mixture, I carried them out into the living room and placed them on the end table. Marlene soon made her appearance from the hallway wearing the soft, red jammies and fluffy white slippers I gbought her. Her new PJ's were decorated in white snowflakes which gave her that traditional Christmas look. I could here the oversized slippers dragging on the floor as she approached. She cuddled up into me, saying how beautiful and soft they were. \"See, you thought of everything,\" she said as she nuzzled her nose into my neck. We cuddled together on that cold Christmas Eve, drinking hot chocolate and laughing at the hysterical movie.\n\nEvery light in the house was turned off with the exception of the twinkling tree and the glare of the TV. And all was right on our first Christmas.\n\nWe fell asleep in each other's arms, lying on the sofa, our bodies snuggled comfortably together as Christmas silently arrived with Santa quickly making his rounds. Marlene woke me around one thirty, and we softly gave each other our first Christmas kiss. We made our way back to the cold covers of the bed, shivering into each other until our bodyheat warmed us under the flannel sheets. We made slow, soft passionate love, taking our time to appreciate each other and feel the intimacy between us. We were in no rush to climax as we quietly kissed, stroked, and softly caressed each other as the combination of a hard man and a soft woman meshed together. We laid together as our bodies heaved in unison, coming down from the peak of extacey. We soon fell asleep entwined in the arms of each other. Our first Christmas, the best Christmas that I had ever experienced with the love of my life lying asleep in my arms, soft, sensual, and beautiful. A true gift that no one else would ever be able to replace.\n\n**********\n\n**********\n\nWe woke to a still, silent house. There were no birds chirping outside of the windows, no sound of passing cars, only the sound of pure stillness. Does stillness have a sound, you ask? It does, close your eyes and listen to it and you'll hear it yourself.",
        "\"Merry Christmas, Handsome,\" Marlene whispered in an angelic voice.\n\n\"Merry Christmas, Beautiful,\" I whispered as I kissed her.\n\nWe made love again. Marlene straddled me and after inserting my cock, laid her body softly on my chest, and gently rocked along my shaft. She let out little whimpers as my cock softly eased in and out of her. She caressed my hair as she reached her orgasm, gasping breathlessly into my shoulder. She continued her rhythmic rocking, bringing me to climax inside of her beautiful, warm pussy.\n\n\"I love you, Michael,\" she softly whispered as she continued to caress my hair.\n\n\"I love you too, Beautiful,\" I responded, running my fingers down her back and across her lovely ass.\n\n\"I'll be your wife this time next year,\" she said with a soft smile in her voice.\n\n\"You will?\" I asked with a grin.\n\n\"Yes, I will... You're so bad,\" she giggled into my chest. \"What am I going to do wwith you?\"\n\n\"I can think of several things,\" I replied with a smile.\n\nAfter showering together and getting dressed, Marlene made us a Christmas breakfast which included bacon and eggs, hash brown potatoes, buttered toast, and of course coffee. It was a tradition that I hope would last the rest of our lives; a Christmas breakfast together.\n\nMonica and Mrs. Cassidy would be coming over later in the afternoon, so it gave Marlene and me time to look at the presents that we had given to each other the night before. We marveled at the love and thought that was given to each one as we sat together. We discussed our vacation to St. Bart's at the end of February, getting excited just by the thought. Marlene had me model my new underwear that she purchased. \"Oh Michael, wow, you really, um, fill them out well,\" she giggled as she inspected the first pair that I tried on. She liked the \"STUD\" one the best, and wanted me to wear it whenever we were to go out. My cock grew within the tight confines of the undies as Marlene continued to run her long nails along the front. \"C'mon Handsome, let me do something about that,\" she suggested as she took my hand and led me to the bedroom.\n\nShe laid me on the bed, telling me not to move before she returned. I stretched and rested on the bed rubbing my cock through the material until I heard Marlene's footsteps returning. \"Oh my, now that is fricking sexy!\" she gasped as she looked at me from the doorway. \"I'm going to use the present that was in my stocking,\" she seductively said before removing my underwear. I heard her fiddling with something, and mumbling under her breath before she finally straddled my chest with her ass pointing towards my face. I heard the snap of a cap, and a second later, the unbelievible sensation of lube surrounding my cock. I moaned out loud as Marlene proceeded to stroke my shaft in a slow, deliberate motion. \"Does this feel OK, Michael?\" she asked as her hand gracefully slid up and down the length of my cock.\n\n\"Oh God, yes, it feels incredible,\" I groaned.\n\nMarlene began to quicken her pace and I heard the combination of her hand and the lube slapping along my shaft. \"C'mon, Michael, come; come on Baby, come for me,\" she pleaded as her hand raced along my length.\n\nI could feel the surge building deep in my balls and warned Marlene of my upcoming climax. \"Yes, give me your come; I want to see it shoot from your cock, Michael, yes...\"\n\nI let out a gutteral moan as spurts of cum hurled into the air. Marlene jerked me faster as the bursts continued shooting from the head. \"God, yes, Michael, it's so much, so beautiful. I love to watch you cum, I love it,\" she moaned\n\nAs the last spurts dribbled from my cock, Marlene dropped her mouth over the head and sucked the last dribbles of cum. \"I love your cum, Michael, I love it, and I want it for the rest of my life. I want it in my mouth, in my pussy, on my tits, on my face, and...\"\n\nMarlene continued to caress my cock while licking up the cum that had landed on her arm. \"Mmm, you taste so good,\" she moaned as she swallowed the warm liquid. \"I'll be right back,\" she said as she raised off of me and went into the bathroom to retrieve a warm washcloth and dry towel. She returned and cleaned me up, giving me the guaranteed last suck on my cock before finishing up.\n\n**********\n\n**********\n\nWe drove to Marlene's mom's house late in the afternoon and lugged in her gifts while trying to control Misty's excitement. I let her off her leash after we entered and off she went, making her usual rounds through the house before dropping at Mrs. Cassidy's feet. \"Merry Christmas pretty girl!\" Mrs. Cassidy exclaimed. \"Did Santa bring you a big bone?\"\n\n\"No, he brought Marlene one though,\" I murmured under my breath to which I received an elbow to the side.\n\n\"Grandmom brought you something, baby girl,\" she said as she leaned over and picked up a wrapped present. \"Let me help you open it,\" she said in her sweet voice. Misty did her best to get her nose into the present while Mrs. Cassidy unwrapped it for her. \"Oh look, it's a pretty, stuffed doggie!\" she laughed as Misty took the squeaky toy from her and ran away.\n\n\"Thanks, Mom,\" I said, answering for Misty.\n\nWe opened more presents together before sitting ddown and eating Christmas dinner. Marlene told her mom about the gifts I had given her, saying that she couldn't wait to show them to her. \"Your first Christmas,\" Mrs. Cassidy said to us. \"You should see the look on your faces when you're together! They should bottle and sell it!\"\n\nMarlene brabbed my hand and held it tightly. \"Marlene Sweetheart,\" her mom began, \"This is the happiest I ever saw you.\"\n\nMarlene began to tear up as her mom continued to speak to us about how special we were and how love found us. \"It is so wonderful to see your child fall in love,\" she said, \"It just gives you a really good feeling to know your little girl is happy.\"\n\nMarlene got up and hugged her mom, telling her that she loved her and thanked her for being such a great mother. It was nice to hear them speak like that, although, I felt as if Marlene's mom was telling us something. It wasn't bad, but I felt that it could have been a warning. I was troubled by some of her words, but didn't mention anything to Marlene.\n\nWe cleaned up before putting a pot of coffee on. Sitting at the table, we feasted on cake, and my favorite, chocolate chip cookies. As the night came to an end, I suggested to Marlene that she might want to spend the night here with her mom. She questioned me, but I told her that I just thought it would be a nice idea to spend some time with her mom on Christmas.\n\n\"I'll call you tomorrow, when Monica gets here, OK Sweetheart?\" I said as she walked me into my house.\n\n\"Michael, are you alright?\" she asked in concern.\n\n\"Yes Beautiful, I'm fine, it just sounded like your mom was a bit lonely at the table tonight, and I thought maybe she would enjoy your company.\"\n\n\"Yes, she was a bit insightful at the table, wasn't she?\" Marlene replied. \"You're probably right, it will be good for me to spend the night with her. See, you are so aware; you see things Michael! I swear, you see things that we can't.\"\n\nMarlene kissed me passionately, thanking me over and over for the best Christmas that she ever had. \"I love you so much, Michael; you are the absolute love of my life.\"\n\nIt was hard to say good night to Marlene. It almost felt as if I were sending her away, but I knew that her mom needed her tonight. \"Good night, Beautiful; I love you, and this time next year...\" I said with a smile.\n\nMarlene jumped into my arms and rained kisses over my face. \"Yes, this time next year...\" she said with a huge smile in her voice.\n\n\"Call me when you get up tomorrow, or if you can't sleep, call me in the middle of the night,\" I said as she made her way to the door.\n\n\"Good night, Handsome, I'll talk to you soon! I love you...\" she yelled on her way to her SUV.\n\n**********\n\n**********\n\nI did receive a phone call in the middle of the night. Marlene wanted to sneak out of the house and crawl into bed with me so I could keep her warm. She sounded like a giddy high school girl making plans to sneak out of her parent's house to spend time with her boyfriend in a secret location. It would have been so nice to feel the warmth of her breast pressing into my back while her arm was draped across my stomach. I missed her and I wanted to tell her to come over as soon as she could, but I thought of her mom, and thought that it would be better to let a sleeping dog lie.\n\nMarlene phoned me around ten o'clock that morning and asked if I wanted to come over for breakfast with her and her mom. It sounded like a good idea to me; my daughter wouldn't be coming over until mid afternoon, so I told her that Misty and I would be over in a few minutes.\n\n\"Michael, it's freezing out there, I'll be right over to get you.\"\n\n\"No way, you stay there and get busy cooking, we'll be right over. You can watch for us out the front windoww if you want!\" I laughed, reliving the day that she first saw me.\n\n\"I'll be waiting at the door,\" she replied. \"Please be careful,\" she said in a concerned voice.\n\n\"Yes Dear,\" I sarcastically replied.\n\nI let Misty out to do her business before throwing on her harness and cruising to Marlene's. We made it in five minutes, a new record. The blustery wind was at our tail and the temperature was so cold, our pace was much quicker than normal. As Misty turned onto the walkway at Marlene's house, we raced inside as she held the door open.\n\n\"Did you two run over?\" Marlene asked with a laugh.\n\n\"It's stinking cold out there, Sweetheart, we might as well have run,\" I said in a shivering voice.\n\nMisty shook after I removed her harness. She let out a long stretch before running to Marlene and falling on her back.\n\n\"Michael, your dog has a one track mind.\"\n\n\"My dog?\" I asked. \"It seems that someone took the leash from me and wanted to walk her, and that particular person that I am talking about, wanted to be part of the family!\" I sarcastically replied.\n\n\"Well, I was just practicing, it's not like she's my dog,\" Marlene said in her own defense.\n\nI walked over towards her voice as I held my hand out. I felt Marlene's soft, warm hand take ahold of it and guide me into her. I leaned over and gave her a kiss before sitting down next to her. Misty heard Mrs. Cassidy call Marlene from the bedroom. She twisted up from her back, and raced down the hallway. \"Hi baby-girl!\" I heard Mrs. Cassidy exclaim as Misty found her. \"How is my beautiful grand dog?\"\n\n\"Oh my God,\" Marlene sighed, \"Her grand dog?\"\n\nShe made her way back to her mom and returned in a few minutes, telling me that she had to help her mom clasp her necklace. \"Are you ready for a cup of coffee, Handsome? Your hands are still cold, and that will help warm them up.\"\n\n\"I can think of a better hand warmer,\" I answered with a grin.\n\nA rolled up ball of wrapping paper hit the side of my leg. \"A little higher next time, Carlton, and yes, I'll have a cup please.\"\n\n\"What's Carlton?\" she asked.\n\n\"Steve Carlton, the best pitcher the Phillies ever had,\" I replied.\n\n\"Oh, OK,\" Marlene agknowledged as she returned with my piping hot coffee. \"Now, what was that you were saying about warming your hands up with something else?\" she giggled as she kissed me.\n\nI slid my hand up Marlene's sweater and onto her breast as she leaned over and placed the coffee on the end table. \"Jesus, Michael,\" she shrieked as my cold hand covered her hanging breast. \"You're going to make me spill your coffee,\" she laughed as her nipple instantly hardened under my touch.\n\n\"I could place it somewhere else if you want,\" I joked, giving her nipple a little squeeze before removing it from her sweater.\n\n\"Yeah, I bet you could,\" she giggled as she pinched my cheek and gave me a smiling kiss.\n\nIt wasn't long before we were sitting at the table and eating breakfast, chatting over the previous days events. \"Mom, Monica is coming over to my house around two o'clock; would you like to join us?\"\n\n\"Michael, I would love to, but I am going over to visit my sister to have dinner with her. Marlene is going to drop me off before she goes to your house, but thank you for the offer.\"\n\nMisty laid under the table at Mrs. Cassidy's feet as we ate. Breakfast was delicious,, and even more so, since I didn't have to make it! After our second cup of coffee, me and Marlene cleaned up the dishes and sat on the sofa while her mom sat on the floor with Misty. \"Mom, you're like a little kid with that dog,\" I said.\n\n\"Michael, she is so sweet; I just love her to death,\" she replied with a smile.\n\nMarlene squeezed my thigh as her mom spoke. She knew that Misty brought nothing but joy to her mother. It was indeed funny to listen to her mom's voice instantly change when that beautiful, lovable black Lab was near. We stayed for another hour before it was time for me to get back home. Marlene insisted on bringing me home, telling me that we weren't walking in the cold while there was a warm SUV sitting in the driveway.\n\n\"It's not warmed up, you haven't been out yet today,\" I responded; we can walk,\" I responded.\n\n\"Michael, I started it with the auto-start; it's been on for five minutes already.\"\n\nAfter kissing Marlene's mom goodbye and telling her to have a good time at her sister's, we piled into Marlene's SUV. We didn't bother removing Misty's blanket any more; it was pointless, since she was the only one who sat back there most of the time. In less than a minute, we were pulling into my driveway and running into the house.\n\n\"Michael, I'll be over after I drop off mom, OK?\" she said, shivering into my body as a chill raced through her. \"Do you need anything before I go?\"\n\nI just smiled, I didn't have to say a word as I felt Marlene's hand press her head into my chest again, shaking her head and giggling.\n\n\"I already know the answer to this, but I'm going to ask it anyway,\" she laughed into my chest. \"Will you ever stop?\"\n\n\"As I have stated on several occasions, Beautiful, I don't see that happening any time soon.\"\n\n\"What...am...I...going...to...do...with...you?\" she asked, banging her head into me with every word.\n\n\"I could think of something now!\" I replied with a grin.\n\n\"I don't know why I even try,\" she laughed into my chest. I could feel her body shaking against me as her laughs continued.\n\n\"Do you really want me to?\" she asked as she looked up at me.\n\n\"No, I was kidding, get home and get some rest before you bring mom out,\" I said, tousling her hair before lifting her chin and giving her a kiss. \"I can't believe I actually said no,\" I gasped, placing my hand on my forehead. \"I must be losing my mind.\"\n\nMarlene grabbed my cock through my pants and told me that we would revisit my needs later on that night. She gave me a wonderful, tender kiss and told me that she loved me and that she would be back around two.\n\n**********\n\n**********\n\nMy daughter, Monica, arrived a few minutes after two o'clock. \"Merry Christmas, Daddy,\" she cheerfully said as she walked through the door. Before I could respond, Misty had raced from the back bedroom. She slid past Monica on the hardwood floor before scrambling back and slamming into her. \"Misty!\" she exclaimed, \"You're going to kill me!\"\n\nMisty's tail was wildly beating against the floor as she sat at attention in front of my beautiful daughter. \"How are you, pup?\" she asked the overly excited Lab. \"Did Santa leave you anything in your stocking?\"\n\nMisty fell to the floor which was no surprise to anyone. I could hear Monica asking her if she wanted her belly rubbed as she crouched down. \"Merry Christmas, Sweetheart!\" I said as I walked toward the front door to give my baby a hug. Monica stood and gave me a kiss on the cheek as I leaned down to her four foot, ten inch frame.\n\n\"Wow! It looks like Santa made it here!\" she commented as she entered the living room. \"Is Marlene coming over?\" she asked.\n\n\"Yeah, she should be here shortly,\" I replied.\n\nI showed her some of the gifts that Marlene had given me for Christmas, saving the story about our February vacation for last. She was amazed when I told her, and responded by saying she wished that she was going too. \"We were contemplating bringing you, but geez, it's too bad that you'll be in school!\" I teased.\n\n\"That's not funny, Dad,\" was her only response.\n\nFifteen minutes later, Marlene walked through the door and ran over to hug Monica, wishing her a Merry Christmas. We, and when I say \"we,\" I mean Marlene and Monica, sat and chatted about the gifts they received. They walked over to Marlene's pile and reviewed her treasures. Monica marveled at the beauty of the long, leather coat, and even more when Marlene modeled it.\n\n\"I started to clear my throat in order for the girls to remember that I still existed. \"Monica, Santa might have left you a few things,\" I said with a cough.\n\n\"He did?\" she asked in excitement.\n\nShe sat on the loveseat as Marlene collected the gifts and laid them on the cushion next to her. \"Dad, Marlene, what is all of this?\"\n\n\"I don't know, it was under the tree Christmas morning when we woke up,\" Marlene replied as she were talking to a starry eyed child.\n\nMarlene and I had gone out shopping together. It was so nice walking through the stores as we held hands. Marlene was too funny, showing me everything that we passed, wanting to buy it all! For years, I had shopped with a family member or friend. While I greatly appreciated their assistance and kindness, it just wasn't the same. I always walked through the front door with gift filled bags, and emptiness in my heart. This year was different however, I walked with a never ending smile on my face. We lazily walked through the mall as the holiday music echoed over head. I made several attempts to convince Marlene to sit on Santa's lap and have her picture taken. She fended off my suggestions with laughter and blushing declines. She cupped her hand over my mouth when I told her that it would make Santa's night. She wrapped her arms around my neck, and as she giggled in embarrassment, told me to behave myself. My heart was filled with happiness, and when we walked through the door of my house, I let out a long sigh.\n\nMonica opened her gifts which included, sterling silver earrings, perfume with a huge gift set of makeup, facial products, and body washes. She finished up with a few matching sets of clothes, a gift certificate for a massage, and finally a two hundred dollar gift certificate to some popular shoe boutique. \"Oh my god, you guys, this is way too much! This is so nice, thank you Daddy, I love you. She hugged Marlene and thanked her over and over, because she realized that she was the driving force behind ninety-nine percent of it.\n\n\"OK, there are some things for you guys,\" Monica said as she got up and grabbed the bag she walked in with. \"Daddy, this is for you,\" she said as she handed me a wrapped box.\n\nI tore the paper from the box and removed the lid, lifting the sweatshirt,and displaying it in front of me. \"It's a Phillies sweatshirt, and there is a cap in there too!\"\n\n\"Thank you, Sweetheart, you know how much I like my Phillies!\"\n\nI did like the Phillies; I liked them since I was a small child when my dad and me would sit out on the porch on a hot July night and listen to them over the transistor radio. I could still hear the crackling sound of the game as the announcers gave the play by play. Even though they have been pretty bad, no really bad for the past couple of years, I was still a huge fan.\n\nMarlene was next, and Monica handed her her gift. Marlene as usual, delicately unwrapped the paper before lifting the lid. \"Monica, thank you, Sweetheart, this is beautiful!\"\n\n\"Anybody want to fill me in?\" I asked whith a laugh.\n\n\"Michael, it's a beautiful purple zip up with Monica's university name embroidered on it!\"\n\n\"There's one more thing in there, Marlene,\" I heard Monica say in a bit of a shaky voice.",
        "\"Michael, it's a tiny wrapped box,\" she told me.\n\nMarlene removed the paper and opened the box. \"Monica, this is beautiful,\" she said. \"Michael, it's a keychain with a dangling silver heart pendant. Monica, there is a key attached to it, what is that for?\"\n\n\"It's to my daddy's house,\" Monica cried.\n\n**********\n\n**********\n\nHoping that you enjoyed Pt. 07! Thank you for all of your votes and comments throughout the Silver series. Please take time to vote and comment on this story, it is very much appreciated.\n\nWishing all of you the happiest of holidays, and the best of New Years! Remember, be kind to others and give them a smile; you never know, it may be the only one they receive that day...\n\nUntil the final chapter, enjoy...\n\n**********\n\n**********"
    ],
    "authorname": "CantC54",
    "tags": [
        "romantic story",
        "romance",
        "love story",
        "christmas",
        "sex",
        "cunnilingus",
        "hand job"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/silver-pt-07"
}