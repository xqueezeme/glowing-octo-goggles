{
    "title": "On Patrol",
    "pages": [
        "While I was on patrol one day, I was trying to decide which particular violation level was going to be the best hunting for the speeders I loved to catch. Pulling over a 5-10 almost always meant standing there writing a ticket and getting passed by a 10-20 or even a reckless. You had to be patient and let some of the small ones go if you wanted the prize.\n\nThe occasional violation here and there such as rolling through a stop sign or changing lanes without signaling, were the equivalent of catching a very small perch on a trout fishing expedition. I didn't mind letting them go, especially since I myself was guilty of those very same sins. That day I decided that catching the speeders that use Hwy. 380 as their personal race track was the order of business. Too many kids had been lost on that road by racing or by people who just figured since there isn't much there, it is safe to ignore the limit. I decided that a high 10-20 after a long drought would do but ultimately, I was looking for a 20-30. Those take time and there is paperwork involved so they have to be worth it.\n\nWorking the evening shift was always my favorite. The rush hour was prime time for a traffic assignment and was usually followed by quiet evenings since the real nut jobs didn't come out until after midnight when my shift ended. This day was no different. Rush hour saw 3 10-20 over's, many skipped 5-10 over's and one 20-30 that was very satisfying. The guy was an asshole. He made all the usual loudmouth threats, denied he was even speeding regardless of the radar lock on the only car on the highway and made it very easy to comply with the department's no tolerance policy. He gave me reason to rough him up a little too so the shift was officially perfect in the measurement of a dedicated cop.\n\nAt about 11:30, I was basking in the glow of the last stop, savoring the first beer after the end of a long shift in my head when a Silver Taurus shot by headed west at about 85 Mph. In a 60 that counts as a 25-30 and could be a reckless depending on the guy's reactions in the stop. I looked at my watch while gearing up. \"Shit.\". My shift was over in a half hour and this stop was going to be a \"No Tolerance\" stop with about two hours of paperwork. I couldn't let it go but I was pissed that this idiot had to come by right at the end of my shift.\n\nThe Taurus must not have seen me come out of my spot because he didn't slow at all. I flipped on the lights and jammed the accelerator down. The Hwy. was dark but the road was straight. It took a few minutes to catch up but when I did, I pulled in behind the Taurus and bopped my siren; the universal signal to look behind you and see the cop pulling you over. The Taurus didn't run away but it didn't stop either. His speed slowed to the speed limit but didn't pull over. I was about to call in a \"resisting\" When the Taurus signaled a right hand turn and began to slow down. I thought he was pulling over but instead he pulled onto a dirt road and kept going slowly off the hwy.\n\nAfter about a half mile, the Taurus pulled over to the edge of the dirt lane and stopped. I felt a need to be cautious but I did not call it in. If this idiot was even half civil to me I could retain my option to let him go if his excuse was even halfway interesting or inventive.\n\nWith my hand on my weapon, I pointed my flashlight toward the driver's window and approached the driver's side door. The driver turned off the engine. I was relieved. That meant he didn't intend to run.\n\nAs I approached the driver's side window, it started to come down and I got my first look at the driver. It was not a \"He\" at all but a 30 something redhead soccer mom with an apologetic look on her face. I let a little tension leave my body as very few police officers have been shot or run over by pretty redheads. I looked in the back seat. It was empty. No passenger in the front. Just the driver who I could now see was wearing a very short skirt and a low cut top that revealed bright white skin and an ample cleavage that immediately caught my attention. The angle of the view I had allowed me to look straight down into her blouse and admire two very round C cups. That was a nice little bonus for my evening. I shined the flashlight into the driver window and all around to make it look like I was looking around the vehicle. I didn't want to get caught gawking those perfect breasts.\n\n\"Ma'am, do you know why I pulled you over?\" \n\nBefore she answered, I noticed some mascara running slightly like she was starting to cry. Great. A crier. I hate that. \n\nShe looked up at me though and smiled and sort of half laughed between a choked off sob. I got the impression those tears were not meant for me. Usually the waterworks felt like a ploy but I felt like maybe she had been crying before I stopped her. She tried to answer my question. \n\n\"Well, yes and no, I suppose...I guess I probably was breaking several laws but I really wasn't paying attention to anything... until you pulled in behind me.\" \n\nMaybe the unexpected look down her blouse had put my mind right in the gutter. The way she emphasized the last 5 words of her sentence made my cock twitch involuntarily. Was it my imagination or did she slow that part down a little? As I considered that question, the smell of alcohol drifted out the window and into my face. I sighed. A DUI was another two hours and a DWI would be until sun up. Fuck.\n\nBefore I finished calculating the lost hours, she started talking again. \n\n\"I am really sorry officer. I was just trying to get home fast. I have a babysitter and it's a school night. I wasn't in the right state of mind at all to drive. I was just on a blind date with a guy I met on Craig's List and-\" \n\nI interrupted. \"Craig's List? You went on a blind date with a guy from Craig's List? I should write you up for that all by itself miss...?\" I realized that in all my ogling of her body I hadn't asked for her license and registration. \n\n\"Terrell. Tammy Terrell. I know it was stupid but the guy was so good on paper. He wrote these E-mails that just really got into my head and I couldn't resist. The things he wrote...\" she got a dreamy sort of lost look. \"Well, he made me need something I haven't had in a long time, if you know what I mean.\" \n\nI did know what she meant. It had been a long time since I had been on a satisfying date myself. The droughts tend to have a bitter taste. You start to consider anything. I felt for her.\n\n\"Yes ma'am, I do and I can relate. I did some time on Craig's List myself. I'm guessing by the adjustments you have made to your make up on the drive home that it didn't end well?\" \n\nShe looked suddenly into the mirror on her visor and noticed her mascara running. \n\n\"No, no it didn't. It wasn't even his picture that he sent me and he was no former Marine, that's for sure!\" She said this with some venom, more to herself than to me. Being a former Marine myself, I enjoyed her observation. \"Anyway, I was mad and frustrated and I just wanted to get home to...well, real life, I guess.\" \n\nShe fiddled with a tissue and when my eyes followed that motion, they dragged once again over her bosom which was now heaving just slightly with her effort not to cry. At least she wasn't crying.\n\nI felt really bad for her and if it weren't for the smell of alcohol, I probably would have let her go but I take my job very seriously and bad boyfriend experience or not, someone can die when alcohol is involved.\n\n\"Ma'am, I am sorry that it didn't work out for you but the law has a no tolerance policy for the speed you were traveling. I am going to have to ask you for your license and registration and proof of insurance.\"\n\n\"Oh...OK. Just a moment. I know I have it here somewhere...\" \n\nShe looked through her visor pile where most find those papers. As she reached up, her breasts pressed together and jiggled to and fro with the effort. I couldn't help but hope it would take a few more seconds to find the papers. She couldn't find them. \n\nI am not a pervert and I don't seek out to ogle women but these little occurrences had their perks. I admit I enjoy the view at times.\n\nShe then leaned over to the passenger side to open the glove box and rifle through it, looking for the proper papers. As she did, the back of her skirt slid down enough that I could see the skin of the top of her buttocks, her two cheeks so soft and white with just a hint of crack showing. I swallowed hard. She was wearing a thong lace panty. Clearly, she had hoped for more than this tonight. \n\nI felt bad for her again. I started to feel bad for myself too as her skirt innocently slid up her leg as she twisted and shuffled through papers. My heart pounded. It was much easier to wrestle a guy to the ground and pummel him for being an idiot than to maintain professional composure with a woman who looked like this.\n\n\"Well, here is my license, officer but I can't seem to find my registration.\" \n\n\"Proof of Insurance?\" I asked. She sighed. \"No. Not that either.\"\n\nMy night just went straight to hell.\n\n\"Ma'am, I have to inform you that driving 25 miles over the speed limit is classified in some cases as reckless driving, which is a misdemeanor. Not having your registration on hand to prove ownership of the vehicle is a ticket-able offense all by itself and not having your insurance means I have to impound your vehicle and take you to the station.\"\n\n\"Oh, my God!\" her eyes shot open and the tears started to flow freely. She didn't sob though.\n\nThe sudden rush of adrenaline my announcements flooded her with must have gone straight to her body because her nipples sprang forth through the sheer top that stood between me and the view that would delight any man. \n\nAs she turned to face me more directly, her blouse fell open just a little more, revealing more of the round globes that had suddenly caught my attention. Now with those nipples standing straight and tall and hard as pebbles, I was suddenly at a loss. She was dressed to bring down the craftiest prey tonight. What a shame that all this was headed home in failure. \n\nMy eyes lingered a little too long on her erect nipples and my breath caught. I took a deep breath and forcibly removed my eyes from her chest. As my eyes made contact with hers, I saw that she had registered my bad male behavior. Her eyes scolded me.\n\nShe composed herself, pulling her blouse up a little. There was nothing she could do about those nipples, though. They seemed to respond to the fabric dragging over them as she attempted to conceal her breasts a little better. They got so hard I could see the goose-bumped flesh around her nipples now too. My cock started to respond.\n\nI sighed. How many times had hookers offered themselves in return for no bust. How many times had a junkie offered to suck my dick if I just let her (or him!) go just this once. Once I even got an offer of a blowjob from an ordinary looking man who didn't want his wife to find out he had been shopping hookers. All those times, I took the high road. Just once I'd like to get that offer from someone real who I could be attracted to the way I was to this woman and throw my rules to the wind. I had all the power here, I had all the control. Beautiful women like these should always have the option to fuck their way out of an arrest. It would make the low pay a cop suffers much more tolerable. \n\nHer words penetrated my internal tirade and I realized I had let my eyes linger on her breasts again and was once again busted.\n\n\"No, no I just made a mistake here. I have insurance and I never speed, I swear! I had my mind on...well, other things.\" Something crossed her mind as she said \"Other things\". I saw her eyes widen in some sort of realization, like that she had left the oven on or something.\n\nI shook myself out of my nipple trance and resumed. \"That's not all, ma'am. I also detect the smell of alcohol. I am going to have to ask you to step out of the car.\"\n\nShe seemed genuinely shocked. \n\n\"Alcohol? NO! I wasn't drinking, that was the stupid Craig's List guy! We sat in my car and he wouldn't leave! I tried to make him get out but he spilled his beer in my car!\" \n\nMy bullshit meter was not beeping. I had a sense for when people really did only have two beers and when there really was an innocent spill, or when that pot was really \"my cousin Eddy's\".\n\nStill, I had no choices. \"I get that a lot. Please step out of the car, Ma'am.\"\n\nShe complied immediately and stepped out of the car. As she did, her skirt hiked up her leg even farther and I reflexively shined my flashlight on her legs so I could catch that glimpse. Her eyes followed the flashlight and she pulled the skirt down as she stood up. Her nipples were still at full attention and her very short skirt revealed legs that just begged to be wrapped around something.\n\nI closed the driver's door. The thought of frisking this woman simultaneously shot my blood pressure through the roof with arousal (I always considered this a perk of my job) and pissed me off because it always left me worked up with nowhere to go. I couldn't even tell the woman \"Thank you\" for fear of being \"inappropriate\". \n\n\"Put your hands on the hood please Ma'am.\" I would usually wait to search a female subject but my night was already ticking away and I couldn't afford to wait another 20 minutes while the department freed up a female officer from another sector.\n\n\"What?\" She blinked. The breeze blew her blouse open for me. I sighed.\n\n\"Your hands, please, put them on the hood of the car.\"\n\n\"Why? I mean...I am not a criminal? Why?\"\n\n\"It's standard procedure, Ma'am. For my safety and yours I need to pat you down for weapons and check you for drugs before we proceed.\"\n\n\"Proceed?\" she asked as she turned away from me to put her hands on the hood.\n\n\"Yes, Ma'am. You are under arrest. It's going to be a long night. Now please spread your legs and bend over the hood.\"\n\nAs I heard the words come out of my mouth I realized how they sounded. I didn't mean them that way, but there they were anyway. I signed to myself again. This night kept getting longer. If only it were that easy.\n\nShe turned to face me again. \"Wait. Shouldn't there be another officer here if you are going to search me? I watch TV.\"\n\nI sighed. \"Yes, Ma'am, there should but there isn't another human being for 5 miles, let alone a cop or a female cop specifically. If you want to wait an additional half hour it will take you that much longer to get to your kids and for me to get home. We can do that if you like. Or, you can let me search you and we can get this done as quickly as possible.\"\n\nI waited as she considered my statement. \"You're really going to arrest me? As in handcuffs and the whole deal?\"\n\n\"Well, the handcuffs may not be necessary if you promise not to hurt me.\" My attempt to lighten things didn't register on her.\n\nShe didn't seem dangerous. She was obviously having a bad day and was certainly not the idiot that I dreamed of slapping cuffs on and ruining his whole night. When mine was ruined like this, I took a certain amount of pleasure in knowing that I had put a bad end on what was probably a good night for the arrestee.\n\nShe just stood there in disbelief. She seemed once again to be contemplating my response. Then, as if she had just gotten the joke, she laughed a small little laugh and exhaled.\n\n\"I won't hurt you, Officer...?\"\n\n\"Masters. Nick Masters.\"\n\n\"Well, officer Masters, this was certainly not what I had planned for my evening.\" Her voice was resigned, friendly even. She wasn't going to put up a fight like most soccer Moms do when they realize that their cute little flirtations were getting nowhere, not that she was flirting. \n\n\"I can see that.\" I responded, giving an appraising look to her attire. \"For what it's worth, if a woman like you responded to one of my ads on CraigsList, and you showed up dressed to kill like that, I think things may have turned out a little differently.\"\n\n\"Oh, yes.\" She laughed, more lightly this time. She looked me up and down, just as I had been doing to her. The difference was, I didn't mind. I took pride in keeping in shape, maintaining my fitness. The bad guys always seem to assume you can't run them down as fast as they can run away. The look of surprise on their face when a 50 year old white guy lands on top of them is priceless.\n\n\"Yes, I was..um...\" She lingered a little too long on my crotch. I hoped like hell that the stirrings I felt were not showing up there yet. \n\n\"Oh, hell it's just been a long time and I thought I was finally going to...\" She sighed. Her eyes locked on mine. There was indecision on her face. I knew that look. It was the look that usually signaled that the perp was going to do something stupid like try to run. She was no drug addict but that look was unmistakable. \"I was just looking forward to...well not with that guy anyway.\" She looked like she was about to say something to me.\n\nApparently she changed her mind. She started to turn and place her hands on the hood of the car. Halfway around she stopped and faced me again. She opened her mouth and raised her hand as if to ask a question but abruptly stopped and turned around again. I knew what she had in mind to ask but she couldn't do it. She was a Mom, not a hooker. She had a genuine need to feel a man, not just a need to get out of a bad situation. She didn't want to have to ask. That was too much for her. Years of police work allowed me to read people better than they even read themselves sometimes. Part of me wished she had asked.\n\n\"OK, Officer Masters, I have placed my hands on the hood of the car and I have promised not to hurt you. Please proceed.\"\n\nAs she bent over the hood of her car, the headlights from my car shone through her now hanging blouse and showed me the outline of her breasts cupped neatly in her bra. The sight sent a shiver down my spine.\n\n\"Thank You, Mrs. Terrell, I will indeed proceed.\" I let the smile on my face be heard in my voice. \"However I must point out that the command was to put your hands on the hood of the car 'and spread your legs'. Apparently you forgot that part.\"\n\n\"Oh, I didn't forget to spread them Officer Masters, I thought we covered this. I just didn't get a chance to.\" She stopped suddenly like people do when they let slip a comment that wasn't meant for external consumption. \n\nOne good Fruedian Slip deserves another, I suppose.\n\nShe sighed, realizing she had used her outside voice and her head dropped a little, resigning herself to what this night had become. \n\n\"And it's 'Ms.' Terrell.\" \n\nFor a moment I thought I saw another question coming as her eyes opened again. But it didn't come. \n\nShe pushed the small of her back down and spread her legs apart, which had the effect of pushing her ass up a little bit. I never knew if women did this on purpose or if they even knew what that sight does to a man. I could feel my heartbeat in my cock now. I desperately wished I could just let her go so I could go home and take care of this bulge that was rising rapidly in my pants.\n\nIt wasn't until I finished that thought that my mind wrapped itself around what she said. I realized that she wasn't referring to what I said but to her evening in general. I couldn't decide if I should laugh or not. She \"Didn't get a chance to spread her legs?\"\n\n\"I appreciate the second chance.\" She laughed sarcastically and with a dreamy air that took me off guard. She looked back at me and spread her legs a little further.\n\nMy breath caught in my throat. The sight of this beautiful woman spread-eagled over her car and her skirt slowly sliding up her thigh as a result of the spread-legged position made my cock jump again. Her breasts now strained against her blouse as they hung in her bent over position, over the hood. There are few things in this world more appealing and irresistible than a woman bent over with her legs spread, waiting...",
        "Did she know what she was doing or was she just having a good sense of humor? I shook it off again. A shiver ran through my body and I resisted the urge to shake myself like a wet dog. I knew an invitation when I saw one but logic and caution dictated that I assume nothing.\n\nI stepped up behind her and placed one of my feet just inside her foot and my hip against her hip to secure the situation just as I always do and was suddenly aware as I put my hands on her shoulders that I had my crotch pressed against a magnificent ass. All I had to do was pull a little as I gripped her shoulders and I could grind into her and let her feel the erection that was now at full attention.\n\nI shook it off one more time. I had to get hold of myself. This was how guys lost their entire careers. I placed my hands on her shoulders and ran my fingers up through her red hair in the standard manner to search for hidden paraphernalia. As I did, a shudder ran through her body and I heard her gasp a little.\n\nI took my time running my fingers through her hair. It was soft and warm and electric. I had a decision to make suddenly. All I had to do was close my fingers around this handful of sweet smelling red hair and she would be mine. I could sense that this was what she wanted, what she desperately needed. It was what I wanted and desperately needed. \n\nI decided to take a chance, out in the boondocks here, nobody was around. I would brush up against something sensitive, test her reaction, see if she responded. If she responded with fear, I would back off and it would be her word against mine. If she responded as I thought she would, we would both get what we wanted. \n\nIt was at this moment that I remembered that I still had not called this stop in. If I got what I wanted, I would let her go when I was finished and nobody had to know anything. Hopefully, the night would end with both of us getting what she had set out to acquire for herself earlier on tonight.\n\nI let my hands take on a more sensual attitude. I massaged her scalp in addition to searching through her hair. I ran my fingers over the tops of her ears and then squeezed them, ostensibly looking for small objects, and pulled on her earlobes. \n\nShe responded by quickening her breathing and tensing her shoulders a bit. I may have imagined it but I thought she pressed her butt back into my hips slightly, just enough to make contact. That might have been me working my way forward.\n\nI squeezed her shoulders as I ran my hands over the collar of her blouse, slowly slipped my fingers under the collar and traced it around her neck, my fingers to her skin. It was hot. Her breathing was so apparent now, rapid but controlled. That wasn't what fear sounded like. Or was it? My logical mind was much less confident in itself now.\n\nMy fingers traced a path around her neck. The tiniest moan escaped her lips. I let my hands work their way back toward her collar, patting her shoulders, feeling her back and shoulders for any objects that may be hidden there, her bra strap came under my inspecting hands. I slipped my fingers under the strap and ran it back and forth, tucking her blouse in along with it. This is where I decided to take my chance.\n\nI placed my hands flat on her back and allowed them to follow the outline of her bra around to the front where it carried it's precious cargo and my intended test area. My fingers spread, my pointer finger staying on the lower outline of her bra, tracing a path on her smooth tummy. My hands, now upturned followed the curve of her breast. Somewhat roughly I groped her breasts, ostensibly looking for anything hidden in there. My heart pounded as I measured her reaction. I let out a breath fairly loudly myself. I realized I had been holding my breath as my hands approached her breasts. When fantasy collides with reality, explosive moments are possible and as my hands made contact and closed around her full globes of breast flesh, the whole world slowed down for a half second and electricity traveled through my entire body. Blood slammed into my cock and my ears as the softest sensation God ever created overloaded all my senses. I squeezed. The world recaptured my attention in a sudden fast forward.\n\nShe let out her breath suddenly as if she had been holding it too and dropped her head. There was no protest. At the same time, I saw goose-bumps raise on her arms. I decided to be bolder. My fingers brushed over her nipples which strained up to meet my hands through two layers of fabric, her bra and her blouse. She whimpered slightly and her breathing quickened. I gave her nipples a squeeze and savored the hardness of them, my cock throbbing now. I decided to go all in now. I pressed my groin into her ass so that my erection was clearly felt, pressed hard between her ass cheeks.\n\nShe moaned.\n\nMy face was close to her ear. I breathed heavily into it, \"Ma'am, I am afraid I have detected what appears to be two hard objects under your clothing. For my protection,\" I paused, \"I am going to have to inspect further.\"\n\nMy heart pounded as I put my intentions right out there. Her exhaled breath carried with it the realization that I was going to explore her body. \n\n\"Oh thank God...\" quietly escaped her lips. Then more to me directly, \"Safety first, Officer Masters.\" Another exhale.\n\nI dropped my hands down to her hips and let them travel under her blouse, around and up the front of her, feeling the soft warmness of her tummy, up to her breasts, squeezing them this time without the blouse as a barrier to the skin I needed to feel so badly. \n\nI squeezed them, kneaded them. I let her nipples press hard into the palms of my hands through her bra and flicked them with my fingers. My mouth watered as I imagined these nipples sliding slowly in and out of my mouth, my hands cupping the rest of her breast, cradling it as my mouth suckled her nipple. But still the damn bra. I had to go the rest of the way.\n\nMy face still close to her ear, I breathed huskily into her ear, \"Ma'am, I still cannot ascertain what the two hard objects I am feeling may be. I am going to have to reach into your clothing.\"\n\nShe couldn't resist. \"Officer, if you don't know what those are, I would have to say you have spent far too much time at work.\" Her voice smiled.\n\n\"One can never be too careful, Ma'am. Do I have permission to examine the objects more closely?\" My heart pounded. An absurd question since my hands still held her breasts as if I owned them and they were only on loan to her.\n\n\"I want you to be safe, officer. I would not deny you any opportunity for greater safety.\"\n\nMy hands moved between her breasts to the front clasp and snapped it open. Her breasts immediately sprang free into my waiting hands, the cups of the bra falling to the side and out of the way. The warmth of her skin immediately assaulted the nerves of my fingers. The goose bumps on her nipples and the white skin of her perfect creamy globes combined with the softness of natural breasts almost made me cum right there. My own breath escaped me in a strong hiss.\n\nShe let herself go and moaned her pleasure at her breasts being held and squeezed. The weight of them in my hand was wonderful. I squeezed them and ran the nipples between my fingers, exploring them and making them even more rigid. She moaned and squirmed, pressing her ass hard back against my cock.\n\n\"Officer, masters?,\" She breathed heavily. \n\n\"Yes, Ma'am\", I breathed back into her ear.\n\n\"I have detected what appears to be a hard object under your clothing.\" She said as I continued my inspection of her hardened nipples and perfect globes.\n\n\"Don't be alarmed, Ma'am, that is just an inspection tool. It's perfectly safe.\" My hands still working her breasts to her distraction. She pressed her ass back hard against me once again.\n\n\"What is it for?\" She asked coyly.\n\n\"Body Cavity searches, primarily.\" I breathed into her ear as I gave her nipple a particularly aggressive pinch. \n\nShe gasped. \"oh.\"\n\n\"I use it when I find hard to reach places where criminals may hide objects they do not want me to find.\"\n\n\"I see.\" she groaned.\n\n\"Do you have any such objects that you have not yet disclosed to me?\" I began grinding her ass with my cock now so that it qualified as a dry hump, my hands still eagerly consuming her breasts.\n\nShe turned her head to look back at me, her eyes wide with her surprise that she was about to be fucked by a police officer on a traffic stop, not just lasciviously groped and left frustrated on the side of the road.\n\n\"Maybe...\" she responded, unsure of herself. \"What if I do?\"\n\n\"If you do and I find them, I will have to take you to jail.\"\n\n\"What if you don't find anything?\" She asked hopefully.\n\n\"If after a very thorough search, I find that you have not withheld anything from me, I think we can call this a learning experience.\" I promised, feeling good that she would not have to suffer what was coming to her earlier.\n\n\"You will be thorough?\" She asked.\n\n\"Yes, Ma'am. If you are hiding something, I will find it, no matter where you hid it.\"\n\n\"I see.\" She turned back forward, head down and pressed herself back into me. \"Please, proceed\" She requested breathily.\n\n\"So I have your permission to conduct a body cavity search?\" I inquired with a smile.\n\n\"Yes, Officer, please conduct a thorough and lengthy body cavity search.\" She responded heavily.\n\nI was already about to explode. My cock practically ripped through my khakis. I release one of her breasts and lifted her skirt just to the top of her hips to reveal the majority of her ass, the top of her thong still concealed under her waistband. The white of her skin glowed its invitation in the moonlight and my headlights and I let my hand trace its curves. But with discipline- I resisted the urge to grope and grind just yet. \n\nThis woman was not trying to get out of anything, she was genuinely in need. She was offering herself to me, not exactly selflessly, but not in the way that most would have. She was a real woman who needed to be fucked. Just like most of the men I knew.\n\nI was suddenly overcome by the desire to give her what she needed. To feel what she needed to feel. She didn't need to be felt up, fucked and left on the side of the road. She needed a man. I wanted to be that man.\n\nI disciplined my fingertips to press so lightly that I could feel her body heat and fine blonde hairs slipping under them. Goosebumps immediately jumped up, changing the texture of her skin immediately. I let all four fingers caress and explore, slowly down the side of her hips, around and over her buns, then as my hand began to tremble under the strain of restraint, slowly between her legs to that magically soft spot where her buns met in a cleft with her legs. I felt her shiver and heard her breath hiss as she tried to behave respectably and not like a roadside whore.\n\nI kept a firm grip on her breasts though, as if holding her in place with that hand, letting her know that firm was still a part of the deal but gentle was the tease for the moment. My fingertips traced more deeply between her buns until I felt the cloth of her thong, squeezed into such a beautiful crack, holding her buns just parted enough that I could get in for a light pass. Her back arched involuntarily as my finger passed over her rosebud, still protected by the thin strip of cloth but not so much that she couldn't tell a fingertip just dreamed of entering her asshole.\n\nI let go of her breast and stood up, gripping her hips with both hands and pulled her back to me. I couldn't take it, I had to have a moment. I pressed myself between her now exposed buns and took in the scent of her juices beginning to flow. I lifted the skirt all the way up and threw it over her back. \n\nHer hands gripped the hood and I heard a fingernail scrape as she covered her mouth on her arm, looking back some as I pulled her back to me. \"Oh God... \" I heard her whisper to herself. \n\nThe headlights of my car still illuminated her. The shadows of her breasts taunted me with a need for two more hands. I wanted my hands on her everywhere at once. I ran my hand back under her belly and between her breasts again as my hips ground into her, my cock finding a natural resting place between her buns but still so uncomfortable restrained. Pressing up under her, I raised her to standing, catching her from falling backward with the momentum as she gasped, her hands reflexively going behind her to stop the motion backward. They landed on my hips as her head rested back on my chest. I pulled down her blouse over her arms and hands trapping them there, behind her back. I hoped like hell that she would get the hint. \n\nBut before I even finished the hoping, I felt her hands struggle back to find my bulge, two hands on me as my own hands returned to her breasts, cupping and squeezing. It was my turn to moan now. I was rapidly losing my resolve to be more than just a bar fuck. Somehow she found my zipper and began to fumble for my belt. Her breath came in gulps as if she had been running now and her breasts moved in time with her attempts to unbuckle my trousers and remove my cock from its cage.\n\n\"Ma'am,\" I struggled to say with casual strength, \"That's a dangerous tool, I should probably get that out myself.\"\n\n\"But I want to help, officer. I am just being helpful...\" she responded as she continued to fumble. \n\nWith one hand I quickly undid the buckle. My pants had unbuttoned already and so suddenly her hands were on me and my cock jumped. \n\n\"Oh..\" she breathed. \"Yes, it does feel dangerous.\" But she didn't stop. She pulled my boxers down over my cock as my trousers fell to the ground and squeezed me with all the lack of restraint I had determined not to show her in myself. She stroked and moaned and her warm soft hands wrapped my cock and pulled me closer again to her ass. She pressed my cock against her warm skin and cupped my balls as my skin absorbed all the sensation of being next to hers. I felt her butt wrap me in silk.\n\nI began to plan my next move when she bent over again, placed her hands back on the hood and let her head drop to the warm metal of the car. Her hips swayed as her scent drifted up to me. I thought about saying something witty to keep our banter going and as I did I realized that I had already pressed my cock against her, found my way to her pussy and plunged in deeply as we both let out a triumphant \"Unnngghhhhhh!\"\n\nNo restraint at all. I plunged in, all the way to the hilt and withdrew all the way out and then plunged in again, starting with a finishing pace. I knew if I took too many strokes I would cum and I hadn't even asked her if she was on the pill or if I should use a condom... My hands gripped her hips as I pulled her beautiful ass back to me and plunged deep and held it there. Her eyes flew open wide and she lifted off the hood as I pressed myself so deep I felt my balls may slip inside her, trying not to move so I wouldn't cum. \n\n\"Oh God! She cried- \"Yes- God, oh God and suddenly I felt her clamp around my cock and begin to cum. I knew better than to change up at the last minute- she was cumming from the pressure- so I maintained it and she writhed around my cock and I felt her juices run down my balls and onto her legs. She stayed tense- her breath still caught and all her muscles still taut- and then she went limp as if she had fainted. Her breath let out in a rush and suddenly she was gasping as if she had run a marathon. I tightened my grip on her hips to keep myself tightly inside her as her orgasm subsided but also to hold her up. Her legs weakened. Her back and shoulders heaved. -and that beautiful ass looked back at me.\n\nI am a good guy but I couldn't wait any longer. I began to fuck in earnest once I knew she wasn't going to pass out. She relaxed and took it all in, moaning and squealing at all the right moments. There was so much more I wanted to do but I was one undisciplined moment away from exploding. \n\nI pounded and thrust, forgetting about her for a while and just enjoyed the feeling of taking what I needed- I got very close and remembered I had not asked- \n\nShe felt me tense and start to stop- \"INSIDE Me! INSIDE! CUM!!\" she demanded. I released myself and plunged in deep, exploding cum deep inside of her, rope after rope of pent up cum streamed into her as she came again with me- OOOoohhhhhhhh Goooooooood!\" she yelled as my thrusts came in time with my pulsating cumming. I thought maybe this would be the orgasm that didn't end. I kept thrusting and she kept squeezing her pussy around me and her ass kept receiving my hips.\n\nWe both breathed hard as my cock twitched inside her. Now she practically lay on the warm hood of her car, her beautiful breasts squashed unceremoniously to the side, somehow still amazing even as they were disregarded. My cock twitched and cum dripped, this time my own, down my shaft and onto my balls. Her breathing slowed.\n\nStill inside her, breathing heavily, I said to her, \"Ma'am, I have concluded that there are no contraband or weapons hidden here.\"\n\nShe responded heavily and out of breath, \"Well that is good news, Officer Masters. Good news... indeed...\"\n\nMy cock rested in her and I let my hands explore her ass as I waited to soften. I squeezed and kneaded, felt the firmness of her muscles contrasting with the softness of her skin and that womanly layer of baby fat that made women's asses so amazing.\n\nHer knees straightened and she held herself up, still weak but recovering. \n\n\"An effective tool, Officer. It didn't miss much.\" She stood slowly and I let my hands return to her breasts as my mostly hard cock was squeezed by this new position. \n\n\"My father taught my brothers that you should clean your tools before you put them away.\" Confused, I wondered why she would - then she released my cock and turned to face me with a look on her face that told me what she meant. \n\nSlowly she dropped to her knees, letting her beasts brush against my wet cock. Cupping my balls, she took my softening cock deep into her mouth and sucked slowly, meaningfully and with purpose. She squeezed my balls and let her finger run back toward my asshole as she pressed my entire cock into her mouth. My head rolled back and I moaned as she sucked every last drop of cum from my shaft, stopping to lick the base of it. \"I too must be thorough, she breathed as she went about the business of cleaning my tool.\n\nMy cock twitched as she took me in deep again. She looked up at me with eyes so satisfied and pleased. My cock twitched again and she tried to smile around my cock. \"I suppose we did fail to search this cavity, Ma'am. I appreciate your attention to detail.\" She smiled again as my cock slid out. She let it lay on her tongue as she looked at me. I twitched again. I put my hand on the back of her head and guided my cock back into her mouth, this time seeking to feel the back of her throat, as if I was looking for something there. I stopped softening. Her tongue pushed forward under my shaft and tickled the base of my cock and balls. \n\nTwo hands on her head now, I began slowly fucking her mouth, pleased that I was not going to be too soft for this particular cavity search. I pressed deep into her mouth, feeling myself harden as I did so, slow strokes, my hips joining the rhythm. She kept her eyes up and looking at me. She opened her mouth wider, inviting me to go deeper. I felt her throat begin to relax and wondered... I pressed a little more firmly than a gentleman usually would and her eyes opened even wider. Her throat resisted at first and then I felt her willfully relax it and my cock passed through, just a bit, but enough to make it amazing. The feeling was wonderful, but that look on her face, knowing she was intentionally trying to let my cock go down her throat... well that meant something. It was beautiful. \n\nI slowly repeated the stroke, passing through a little more easily this time. I felt her gag a little and I reflexively pulled back and out so she could breathe. She took a few deep breaths and looked up at me and said, \"Be thorough, Officer Masters.\" And opened her mouth to receive me again.",
        "I felt my cock slide over her tongue and to the back of her throat. I pressed again and felt her let me pass. My cock began to slowly slide down her throat and she did something that suddenly gave it the sensation of being massaged. Her hands on my ass urged me forward as I buried myself in her, \"To the hilt\" as they say. She made me feel as if my cock was indeed a sword and that I was a man wielding it well. Her throat massaged me I felt myself return to fully hard in it. \n\nI fucked her beautiful and willing face for ten more minutes, enjoying the fact that I wasn't already about to explode. Her breasts bobbed and bounced as I fucked her and she sucked me, alternating back and forth between her rhythm and mine. She gagged at first and I pulled away but she stopped me, looking at me and pulling me deeply back in. I enjoyed the sensation and the freedom of slowly fucking her mouth. Once I relaxed and stopped worrying that I was abusing her, she took me deeper with each slow stroke.\n\nShe pulled off of me and looked up, catching her breath. She licked my cock, kissed my balls and said, \"You are indeed thorough in your efforts, officer.\" A bit out of breath and in awe of her at the moment, I could not find any wit. \"Thank you.\" Was all I could muster as my cock twitched in front of her lips.\n\nShe stood again and put her arms around me, her blouse hanging loose and her breasts now pressed against my uniform. I wondered oddly if her nipples would scrape on my badge and then wondered why I would wonder such a thing.\n\nI let my hands cup her ass and lifted her up on her toes as I did so. My cock pressed against her belly.\n\nHer mouth found mine and kissed me deeply, passionately. My mind wandered to the fact that my cock had just been in her mouth...\n\nAbruptly, she turned and bent back over the hood, this time looking back at me mischievously and wagging her hips at me. I took the hint. I pressed my cock back to her pussy and let it slide in as she moaned.\n\nMy hands again pulling her hips to me but slightly less feverishly this time. \n\nAfter a few minutes she looked back and said, \"The search continues...\" as she lay her head gently back on the hood.\"\n\nI was feeling... grateful. I needed this so bad. I felt 10 feet tall. I wondered if she had had enough. If she could cum again...\n\nI pulled out and stepped to her side, letting my left hand scoop up her breasts as my right and made its way over her butt and to her pussy. I let my thumb slide in and hook down over her pelvic bone. I began to explore, looking for her buttons. Her eyes locked on mine, surprise evident on her face, along with some hope, I thought. \n\nI found the spongy spot I was looking for as her eyes flew open and her mouth opened but no sound came out. She lifted up on her elbows, much to my delight as it made her breasts swing and move for me. Her G-spot was mine. I let my thumb tap it lightly at first, just to wake it up, as I pressed my fingers over her clit and the base of my thumb deep against the back of her pussy and between her ass cheeks. \n\nI felt my wrist being let in between her cheeks as my thumb settled in to do its work. Tap tap squeeze. Wake up, I commanded. Tap tap, squeeeeeze. Her breath became gasps. It was working. I squeezed and released her pelvic bone between my thumb and fingers as I increased the rhythm and the pressure, letting my wrist press back against her beautiful little rosebud asshole as I did. Her hips began to clench over my hand and move in rhythm with me. Soon I was getting rough, the G-spot loving the much rougher treatment than the clitoris ever gets. I felt her orgasm begin to make its way forward, building. I could see it in her face, feel it in her juices. \n\nShe began making the urgent sounds of surprise that women make when they realize they are about to cum hard- breath catching squeals in the rhythm of the event. I loved the sound.\n\nI picked up the pace, letting my thumb slam on to her g-spot, practically moving her around by the pelvis. I felt water begin to flow and I knew she was getting close- her eyes glazed over and her head rolled back, making her breasts sway as she let out an animal sound that didn't subside- I let it explode, fucking her from behind with my hand, pressing and releasing her g-spot in a way no woman can do for herself. Her orgasm exploded around me and her ass thrust back and pulled in, writhing and clenching as the screamed. I laughed inside a little, realizing that anyone nearby would have reason to believe I was killing her. \n\nI kept the pace, I held her up as I battered her g-spot and let my fingers roam her clitoris and she stopped screaming- her whole body now flexed in ecstasy, squirting juices running down my hands! \"Ahhhhhhhngghhhhhhh- awhhh\" and she relaxed some, her hips still writhing and twitching reflexively. My hand still pressed between her butt cheeks, I could feel her hole puckering and relaxing.\n\n\"Oh my God.\" She whispered. \"Oh my God...\"\n\n\"Mine too.\" I replied with a smile. I felt her relax. Completely. The kind of relaxation that only comes after an orgasm like that.\n\nI was still standing beside her. My cock twitched against her side and she took it in her hand. \"You didn't even need a tool for that...\" she breathed lamely. I was glad her wit was failing too.\n\nI stepped back behind her and guided my cock back into her. Lovingly and deeply, I stroked as she relaxed.\n\nHer body did not even try to squeeze me. It just let me have my way.\n\nI fucked slowly, knowing I could have her as long as I wanted. I pressed in deeply and held it, feeling her muscles twitch but also feeling her body completely limp. I was holding her up for the most part.\n\n\"Officer...\" she managed to get out, her face pressed against the hood like a drunk. \n\n\"Yes, Ms. Terrell?\"\n\n\"You promised to be thorough.\"\n\n\"And so I have been.\"\n\n\"No, you have already searched this cavity, no need to search it again.\"\n\nI thought she was telling me to be done. \"Well, I-\"\n\n\"Please be VERY thorough, Officer.\" Her knees straightened and her hips firmed. She was readying herself. She brought herself up with great effort, back to her elbows, once again causing her ample bosom to sway magnificently. \n\nBut she just told me I didn't need to--\n\nOh my god. Her ass! She wanted me to \"search\" her ass! My heart jumped out of my chest. It was so beautiful. Her pussy dripped and her asshole pouted up to me. \n\n\"Naturally, I will be very thorough, Ms. Terrell. Safety first and all.\" My wit was still not working. But my cock was at full attention.\n\nI dropped my cock to dip it in her pussy and then let the tip slip past exquisitely soft buns until it rested against her invitation. She shuddered.\n\n\"This is for you, officer. Thank you for making me cum first. Thank you for not leaving me unsatisfied. Now fuck me any way you want. And I know what you want.\"\n\nI looked down at her ass as her arms reached back and pulled her cheeks open for me. \"I am very ready. Just do it.\"\n\nI was not gentle. I took one long slow thrust and felt my cock press against her ring until it popped and she squealed but I did not stop. I kept moving forward until the hotness of her insides wrapped my cock in bliss. \n\n\"ohhhh God- so full.. yes!\" She let go of her buns to brace herself and I felt them fall around the shaft of my cock. \n\n\"Now fuck me, Officer. Just fuck me right up my ass until you can't anymore!\" she grunted as she pressed back willfully and without regard.\n\nI could have just exploded right there. I began pumping her ass for all I was worth, fucking and grinding, letting every image of her body run though my head as I took them all in for real. Her breasts bounced and swayed and she moaned and made any sound she felt like. She was totally letting go. I took her at her word and just fucked. I fucked like every wet dream I ever had, I fucked like nothing mattered but me. My hands gripping her beautiful hips, I felt her butt against me with each stroke. It occurred to me that I had now fucked her in every hole and my cock began to swell as my own orgasm rose. I lost track of time, my shift, my location, everything but the sensation of her in my hands and me in her ass. I felt her asshole squeeze me at the end of each stroke and kiss my tip and the beginning of each new one. I was in ecstasy. No limits. No guilt. No warning. \n\nI exploded inside, filling her bowels with an even larger, impossibly long orgasm than the first. Her ass lovingly caressed me as I pounded in and out, draining me, but feeding me, keeping me going yet finishing me off. I felt like I may laugh or cry... But I kept fucking. I needed it. I thought I was close to finishing when I felt her hand reach under and squeeze my balls as if to demand more! My orgasm was renewed and I pumped and slammed a few more thrusts. \n\n\"That's right officer, -Unhh- take all you need. I am giving it all to you now. Keep going. Fuck my ass until you cannot - awhhhh- yeeessss.\n\nI kept plunging in and out. \"That's right.\" She cooed. Her voice sounding like she should be stroking my hair and shh-ing too. \"all you want is what I want.\" She enjoyed the sensation of my softening cock slipping in and out, each stroke getting harder to get back in.\n\nFinally I slipped out and I let my cock rest between her butt cheeks, wondering if I would ever see them again. \n\nAs my breathing caught up and my heart tried to regain normal pace I gazed at her beautiful body slumped exhausted over my hood, let my eyes and hands roam over her back, trace her hips... I reached down to hold her breasts as my cock twitched against her ass cheeks, held in place by her buns. I heard the contented sound of her breathing. I didn't want to be done. \n\nThen I was inspired.\n\n\"Ma'am, I think we are done here.\" I said as my cock enjoyed its resting place. \"You have definitely not withheld anything from me. My search was thorough and you have been very cooperative.\"\n\nStill bent over the hood, seemingly unable to get up. \"Thank you, officer, I was taught to respect the police.\"\n\nI let my hands caress the curves of her ass as I watched my cum drip from her.\n\n\"There is still one more small matter that is unavoidable.\"\n\nAlarmed, she stood. Her red hair disheveled and her eyes glassy with that fresh fucked look. I felt like I just knew there was cum dripping from her pussy now too. \n\n\"What? I thought-\" and I pulled her to me in a passionate kiss, wishing my shirt was off so I could feel her breasts crushed against my chest. She melted in my arms, skirt still hiked up, thong pulled aside, Her ass cheeks in my hands and her blouse hanging off of one arm...\n\nI let her face part from mine for a moment. \n\n\"I may need to take a statement later, ma'am.\" I kissed her gently as a smile crossed her face. \"More investigation may be required. I am going to need your phone number.\""
    ],
    "authorname": "massagedalot",
    "tags": [
        "anal",
        "police",
        "patrol",
        "power",
        "ticket",
        "dui",
        "dwi",
        "traffic",
        "cop",
        "mom"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/on-patrol-2"
}