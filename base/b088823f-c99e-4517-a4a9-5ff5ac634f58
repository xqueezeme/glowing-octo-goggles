{
    "title": "There and Back Again Ch. 087-088",
    "pages": [
        "Hey everyone! Thanks for the lovely reviews and scores. You guys rock! \n\nI thought I should point out that there are some 'companion pieces' to this story that I'd sort of forgotten to publish here \u2013 there's \"Strange World\", which is written from Zevran's POV about the threesome he shared with Aedan and Isabela, as well as \"Consequences\", which is written from Alistair's POV after the fight he and Sierra had \u2013 somewhere around chapter 66 or so. I hope you all enjoy! \n\nAlso, I have published a separate piece called \"I'm not here for love.\" It's not written in the \"There and Back Again\" universe, but is a stand-alone one-shot about 30 years post-Origins. It was written before DA2 or Inquisition, so it's obviously canon-divergent. Just my take on what could have happened after the Blight with a male Cousland Warden. \n\nAlright, on to the chapters! \n\n******** \n\nChapter Eighty-Seven: *Right to Assemble \n\nI went down to the dining hall, finding Solona, Leli, Duncan, and Zevran sitting around chatting. They looked up in surprise as I came through the doorway, armoured and armed. \n\n\"Duncan, is there somewhere here to spar?\" \n\nHe stood, walking up to me, a puzzled look on his face. \"There's no need to train today, Sierra. We just got back-\" \n\n\"It's not for training. I need to prove a point. Actually, I'd like to have everyone there for this, if I could. So where? Is there a training yard somewhere?\" \n\n\"We usually use the space reserved for the Royal Guard, but I don't relish the idea of going there. I think there's a practice ring at the Proving Grounds, and since there's no Proving today, we might be able to use that.\" \n\n\"Great. Can you all spread the word? I'm taking any challengers in single combat.\" I scowled at Duncan, who took a step back in surprise. \"But Alistair is first.\" \n\nI headed to the Proving Grounds and managed to find someone to give me permission and access to the practice ring. And then I took a few minutes to warm up, stretching and walking around, getting used to the space. It was in the bowels of the island the Provings sat upon, and was a dusty, echo-filled chamber with a roughly staked circle. \n\nI was nervous; I definitely was not the best fighter in the group. I was likely the worst, with the possible exception of Jowan and Anders, whose magic I could neutralise. But I needed this. I didn't need to win, but I needed to gain some respect, and stop the group from treating me like a very clever, but helpless child. I concentrated on my breathing, trying to keep the panic at bay. \n\nAedan was the first to find me there when he arrived, with Zevran in tow. \n\n\"What's this about, Sierra?\" \n\nI noticed neither man was in armour, and couldn't decide between being relieved or offended. \"Just making a point that needs to be made.\" I shrugged off further questions until everyone else arrived. They trickled in, in ones and twos, a few in armour, most not. Sereda and Gorim wore armour and full helmets, but I knew they had to whether they planned to challenge me or not, just so they could arrive unnoticed. \n\nFinally everyone seemed ready. Alistair was the last to arrive, expression adorably confused, shoulders drooping, but armour, weapon and shield ready. I cleared my throat. \n\n\"I've decided I am finally sick of being treated like a child, or worse, some fragile, breakable toy. Today is all about breaking everyone's illusions about that. To that end, I will take on any challenger who wishes to spar with me. Alistair has won the privilege of going first.\" \n\nI stepped into the ring, walking up to Anders, who, we had discovered, knew a spell to blunt weapons. He blunted my daggers, and I turned, getting into a defensive posture. I risked a glance at Aedan to see his jaw clenched, muscles twitching; Zevran just looked amused. And then I noticed Oghren taking bets, and I laughed. \n\nAlistair allowed his sword to be blunted, then reluctantly turned to face me. He held his sword up in a salute, and I grinned, rushing him before he could drop his arm. I slashed the underside of his upper arm, spinning to end up behind him, jabbing him once in the kidneys as well. He grunted, in pain and shock, I assumed, and then turned, readying his shield. \n\nI'd had problems with shields since I'd started my training with Duncan, but I'd learned, and learned well. Shields were something the darkspawn made good use of. I feinted high, then tucked low and rolled, trying to take Alistair's feet out from under him. He blocked, but it was a close thing, and I allowed myself to huff a brief laugh. Maybe I can do this. I backed off, waiting for him to make a move. \n\nHe made a weak swing at me, which I easily deflected with my crossed daggers, then jabbed at his armpit with my off-hand. He was wearing his heavy dragonbone, and just couldn't keep up with my speed in light leather. I spun away again. The next time he came after me, I leaped out of the way and clipped him in the jaw with the back of my hand, sending him reeling. I realised, to my dismay, that he was going easy on me. \n\n\"Fight me, damn you.\" \n\n\"I'm trying,\" he whined. \n\n\"No, you're not. You're a better fighter than this.\" I stopped, straightening up, walking to the centre of the ring slowly. I dropped my daggers at my feet and turned my back on him, looking at him over my shoulder. \"Maybe you can hit me now, Princess?\" I echoed his words from the last time we'd sparred while angry, and I saw his face redden as everyone around snickered. \n\nAnd then he was moving, graceful and strong, and made to strike at my unprotected back. Aedan looked furious and scared; I winked at him as I dived out of the way of Alistair's swing, grabbing my daggers as I went. \n\nThe fight was far more serious after that; we chased each other around the little arena for a half hour. He managed to nail me with a couple of solid shield bashes, which I rolled out of, winded; I made him drop his sword twice with strikes to his wrist and arm. He finally knocked me over and put his sword to my neck. \n\n\"Yield,\" he panted. \n\nI grinned. \"Never.\" I lashed out with my feet, wrapping my legs around his knees and knocking him down, batting his sword away at the same time with my dagger. He fell and landed, half on me, half off, and I shouted with pain as I felt a rib crack. He groaned and rolled off me, collapsing onto his back beside me. \n\n\"Tie?\" I offered, breathless with pain. \n\n\"Deal.\" \n\n\"And...?\" \n\nHe sighed. \"Fine. I'll stop treating you like you're fragile.\" \n\n\"And you're going to stop worrying about hurting me?\" \n\n\"No, probably not. But I'll shut up about it unless you tell me otherwise.\" \n\n\"That will do. Hey, Alistair?\" \n\n\"Yes, beautiful?\" \n\n\"Could you get Anders for me? I think I broke a rib.\" \n\nChoking on a laugh that bordered on hysteria, Alistair climbed to his feet and gestured; I felt healing magic roll over me as I laid there, and my chest slowly stopped aching. When I smiled, Alistair offered me his hand, pulling me to my feet and into a bear hug. \n\n\"I love you, Sierra.\" \n\n\"I know.\" I kissed his nose. \"Now let's see who else wants to kick my ass.\" \n\nHe laughed. \n\nThe rest of the afternoon was actually sort of fun; I sparred with Leli, Duncan, Bel, and even Sten. I didn't win any of the fights, but I made it at least a reasonable challenge, and I didn't make a fool out of myself. When there were no more takers, a few of the group went up against each other in the ring, and the betting continued. By the end, everyone was laughing and chatting, heading back to the estate in the Diamond Quarter in good spirits. \n\n\"Hey, Oghren?\" \n\n\"Yeah, Toots?\" \n\nI grimaced, but ignored the irritating nickname. At least he isn't angry anymore. \"Who won the bet? The first one, on me and Alistair?\" \n\nZevran spoke up from behind me. \"I did, bella donna. Oghren bet that Alistair wouldn't fight at all; everyone else bet against you.\" \n\n\"But you wagered on me?\" \n\n\"I've told you, cara mia \u2013 you scare me far more than any Crow. I know, or at least suspect, what you are capable of, when you put your mind to it.\" He winked and jogged ahead to catch up to Aedan. \n\nWhen we arrived at the estate, Alistair pulled me by the hand to our room, helped me out of my armour, handed me a clean dress \u2013 not one I'd seen before, and I wondered whether Leliana or Mistress Leta had been shopping \u2013 grabbed my toiletries, and dragged me to one of the bathing chambers. He picked me up and lowered me into the bath, then knelt beside the tub to gently wash me. It was sensual, not sexual, and I purred under his tender ministrations. When he washed my hair, I was so relaxed, if it hadn't been for Alistair holding my head, I'd have drowned. \n\nFinally Alistair climbed in, and I got to return the favour. His skin was smooth and slick under my hands, and I probably washed him more than necessary, but he didn't complain. His face was flushed, though, and his engorging length told me he'd noticed. \n\nWhen I was done playing, he pulled me to sit between his legs, my back against his chest, and he just held me. \n\n\"I'm sorry. I don't mean to condescend.\" \n\n\"I know. It's not just you, either. My brother needs to seriously take a breath sometimes. And I know I'm not some warrior princess \u2013 I have no illusions of becoming a wandering hero or something. But I can pull my weight, at least, and I need to be allowed to do it. I love you, and I love that you care about me, about hurting me, but I also need to live my life without someone constantly second-guessing me.\" \n\n\"It matters that much to you? That I don't hold back when we're...\" he blushed, \"together?\" \n\n\"Not only then, but yes. I love how I feel when we're together. I love the feeling of total openness, of being more than just me, but as part of us. I don't want to lose that because you're holding back. I even love the stiffness after. And just because my skin has trouble keeping up with my stamina doesn't mean we have to change \u2013 I just have to take care of it after.\" \n\nHe scoffed. \"How can you love the stiffness?\" \n\n\"Haven't you ever been a little sore or chafed after sex? Every time I move the wrong way, I get a vivid mental image of exactly what it was we did that gave me that ache. I feel deliciously naughty all day.\" \n\nHe laughed, but his erection, which had been flagging, indicated his arousal at the thought. \"I am going to make you feel deliciously naughty right now, if you'll let me.\" \n\n\"Like I'd ever say no to that?\" \n\nHe picked me up, turning me to face him, and as I straddled his legs, I sank down on his length, both of us groaning at the contact. I rode him to completion, and he didn't seem to be holding back; I flopped against his chest after in the cooling water, sated and exhausted. \n\nAfter washing up again and getting dressed, we had supper as one big group; sixteen people, a mabari, and a handful of golems take up a lot of space. We agreed to go to the Assembly in the morning, all fully armed and armoured, with full helms so Sereda and Gorim could remain incognito. Caridin was going to ask both candidates to come down to the floor, where it was Zevran's job to get close to Bhelen, preventing him from getting into a fight with a blade to the neck and paralysis poison, if necessary. Everyone else would defend against Bhelen's toadies who may or may not attack even after the Prince had been taken out of the fight. \n\n\"I want him alive, Zevran. Please, don't kill him unless absolutely necessary.\" \n\n\"It's not my usual sort of assignment,\" he drawled in his thick Antivan accent, \"but I'm sure I'll manage to contain myself somehow.\" \n\nWe all broke out laughing. Sereda blushed, muttering apologies. \n\nThat night Alistair and I slept, tangled together and peaceful, still contentedly stiff from our earlier exertions. \n\nMistress Leta had apparently had all of our armour cleaned and oiled, and our weapons sharpened, while we slept. That woman is amazing! I wondered if she ever slept. Even Oghren, short fluffy beard finally starting to grow out again, looked clean, well-dressed, and impressive. He was even sober, for a change. We formed up as Caridin's honour guard, following the enormous golem through the streets of the Diamond Quarter to the Assembly Hall. There were plenty of people out and about \u2013 rumours of the Paragon's existence had spread like wildfire, as we'd intended \u2013 and many of them pointed in shock as the armoured golem stomped along. A ripple of amazement went through the crowd, followed by cheering for their long-lost Paragon returned home at last. \n\nWe waited in the foyer as the Deshyrs were seated in the hall; several of them had tried to sidle up to Caridin, or even some of the rest of us, probing not-so-subtly to try to pry out who the golem would choose. We all just pointedly ignored them, to their obvious disappointment. Finally everyone was seated, and Steward Bandelore announced us. \n\nCaridin strode forward, the rest of us on his heels, and the Deshyrs all rose and bowed to the Paragon as he descended the steps to the central dais where invited guests were allowed to speak. \n\nWhen everyone settled again, Caridin raised one hand. \"I am Caridin, a Paragon of Orzammar. I have been alone in the Deep Roads since the Anvil of the Void was used to force me to become like this.\" He gestured at his armoured, stony arm. \"The Paragon Branka is dead, killed in the Deep Roads trying to find me. These Grey Wardens completed her task. The Anvil has been destroyed, at my request; never again shall it be used to enslave dwarven souls.\" \n\nA murmur rose in the chamber, everyone reacting with shock and surprise at the news. Caridin paused to allow it to settle again. \n\nSteward Bandelore stepped forward, bowing low to Caridin. \"Does anyone here deny that this is, indeed, the Paragon Caridin?\" \n\nNo one spoke. Bandelore bowed again and stepped back. \"Please continue, Paragon. You know what the Assembly is waiting to hear.\" \n\n\"You have proven yourselves incapable of ruling over Orzammar. This should never have been allowed to continue. I will break the impasse so Orzammar may finally move forward. Prince Bhelen, Lord Harrowmont, please step down.\" He gestured to a spot in front of him on the dais. \n\nSurprised, the two men rose uncertainly while everyone else fidgeted impatiently. Harrowmont stepped down first, followed by a rather sulky looking Bhelen. Harrowmont bowed deeply to Caridin when he arrived on the dais; Bhelen's bow was perfunctory and somehow mocking. \n\nCaridin turned to Shale, who carried a small box; at his nod, she handed the box to Bandelore, who opened it. \n\n\"I have forged a crown for the next leader of Orzammar.\" He reached out and lifted a golden hoop from the box where it sat. It was sparkling with gems, a slender golden circlet with an intricate design at the front; it looked like something a jeweler would have made, not a smith. It was beautiful, catching the light of the torches within the Assembly chamber and refracting them out to form tiny rainbows on the walls. \n\nIt looked...delicate. For one moment, my rare, well-hidden girly instincts kicked in \u2013 I wanted to try it on. Badly. I shook my head and focused on Bhelen and Harrowmont. Zev had wormed his way behind Bhelen, who was staring at the crown like it was poisonous. Harrowmont had a sardonic smile on his face; he made eye contact with Duncan, and the two exchanged barely perceptible nods. Caridin continued to hold the circlet aloft, silent. \n\nFinally Bhelen broke the silence. \"But who will wear it?\" \n\nThat was our cue. As one, we all reached up and removed our helmets. Sereda, standing directly behind Caridin, handed hers to Gorim, and then stepped around the golem, shaking out her long red hair. Several gasps could be heard from nearby Deshyrs. \n\n\"You didn't think it would be you, did you, dearest brother?\" she whispered, quietly enough that only those of us on the dais could hear. She stepped between the two contenders for the throne and turned to face Caridin. \n\n\"I have revoked the exile of Sereda Aeducan from Orzammar, on my authority as a Paragon.\" \n\nBhelen sputtered, face turning an alarming scarlet colour. \"You can't do that!\" \n\nAn old, white-haired, almost skinny dwarf in lavish noble clothing stepped out of a small alcove near Bandelore and cleared his throat. \"The Memories confirm that a Paragon may indeed revoke political exile, Prince Bhelen. From the time of Paragon Lantena-\" \n\n\"Thank you, Shaper Czibor,\" interrupted Bandelore, with a roll of the eyes that indicated he'd had to interrupt just such a diatribe many times before. I had forgotten that the Shaper attended the Assembly as well. \"Does anyone have legitimate grounds on which to appeal the revocation of Sereda Aeducan's exile?\" \n\nNo one spoke, yet again. \n\nThe Shaper glared at Bandelore, and then stepped down to the dais as well, taking the crown from Caridin and looking up at the golem expectantly. \n\n\"Then I, Paragon Caridin, to whom the task of choosing a King for Orzammar has fallen, instead choose a Queen. All hail Queen Sereda Aeducan!\" \n\nHarrowmont immediately dropped to his knees, as did many of the assembled Deshyrs. Bhelen, however, shouted out, \"No! This will not be allowed to stand.\" He drew a sword, but Zevran stepped up behind him and held a dagger to his throat from behind. \n\n\"Call off your associates, brother dearest, or I'll have my friend there kill you. Your choice.\" \n\nDwarves all around the gallery had drawn weapons, an impressive display of maces, swords, and axes; but there were nineteen of us, including two golems and a mabari, and several of the other Deshyrs were armed as well. All of them hesitated, weighing the odds, and looked to Bhelen for a response. \n\nHe tried to move, and Zevran gripped him tighter, the tip of his dagger just barely digging in. \"This dagger is coated with a powerful paralyzing agent, Your Highness,\" Zev said quietly, sneering on the title, \"so if you move any further, I will stop you. All it will take is one little cut. Already you feel weaker from just a puncture, no?\" \n\nBhelen looked around frantically, seeming to realise that no one would come to his rescue; his sword dropped to the stone with a clang, and everyone else who'd drawn weapons followed suit. \n\nBandelore called for guards, and those who had drawn weapons were bound and taken away; Bhelen remained on the dais, his hands bound behind him. Harrowmont was then asked if he would step down as a contender for the throne, and he did so with grace. \n\nSereda was crowned, and a round of cheering went up in the Chamber. When everyone had settled, Sereda took her place on the throne, leaving Bhelen still standing. Bandelore banged his staff to get everyone's attention. \n\n\"Lords of the Assembly, my friends,\" she smiled and nodded to us, \"we have much work to do. If everyone would find seats, we can continue. Unless you have other places you need to be,\" she continued, clearly aimed at us. \n\nWe quickly deliberated. Aedan, Duncan, Faren and I wanted to stay for the discussion, Leliana appeared fascinated by it all, and Alistair and Zev had no intention of leaving me or Aedan alone. Gorim wasn't going to leave Sereda there either. Caridin was given an honoured place at Sereda's side, and Shale stood with him. Everyone else was going to be bored; Duncan suggested they go shopping for new packs, clothes, runes, and other supplies, since so much of our stuff had been destroyed in the Deep Roads. They left, and the eight of us remaining found seats. Kardol, who'd been standing at the back unobtrusively, joined us. \n\n\"First, the matter of Prince Bhelen. I would like to declare a vote that he be exiled to the Deep Roads, and spend the rest of his life fighting darkspawn until his death. Unless someone would like to speak on his behalf?\" ",
        "He paled, looking around for someone to speak; no one did for an agonising moment. Sereda exchanged a barely perceptible nod with Kardol, who cleared his throat and fidgeted, drawing attention to himself but not saying anything. Bhelen looked at him, looked back at Sereda, and slumped. \n\n\"I would agree to dedicate myself to the Legion of the Dead, to commit to fighting the darkspawn, in an attempt to regain my honour and spare my child from shame by association.\" \n\nKardol stood and bowed. \"I accept, on behalf of the Legion of the Dead. We will hold your funeral tomorrow, and you will no longer be Prince Bhelen Aeducan, but just Bhelen.\" \n\nSereda gestured to the guard. \"Take him to the dungeon for the night. The Legion can collect him in the morning.\" \n\nKardol inclined his head in acceptance. Murmurs arose at the unusual arrangement; I thought it was only fitting, given how he'd had Sereda jailed before her exile. \n\nBhelen was hustled out of the Chamber by the guard. He looked back once, almost pleadingly, at Sereda, who finally nodded her head. The tension in his shoulders released, and he followed the guard willingly out. \n\n\"Next to the matter of the succession. To avoid future recurrences of the contention we've just experienced, I propose that the succession be recorded in the Memories, and that it need be changed in front of witnesses including the Shaper, the Assembly Steward, and at least three members of this Assembly.\" \n\nThey voted, and it passed unanimously. \n\n\"As such, I would like to declare my succession now, with all of you as witnesses.\" \n\nBandelore had parchment, a quill and ink, and a small table brought out for the Shaper. \n\n\"I declare the unborn child of my brother Bhelen as my heir, whether the child is male or female, until such a time as I have heirs of my own.\" Faren grinned broadly, and Sereda winked at him before continuing. \"I propose a guardianship and regency for the child in the case of my death prior to his eighteenth year comprised of three members: Warden Faren Brosca, the child's uncle, Lord Pyrral Harrowmont, and Steward Bandelore. I also propose his mother, Rica Brosca, be adopted into House Aeducan where she may raise the child with my help.\" \n\n\"You propose we raise the female child of a casteless woman to the nobility? On what precedent?\" shouted out one Deshyr. \n\n\"My Lords, change must come to Orzammar; whether we die out or progress is entirely up to us. Over the next few weeks and months, I will be bringing many proposals to this Assembly to change the culture by which we have allowed ourselves to decline. I suggest you think very carefully about what it will mean should you deny the changes. Our birth rates are dropping; too many of our warriors die in Provings, never mind those that fall to the darkspawn. Our merchant and smith castes are stifled by lack of trade. We are slowly going extinct. If we do not change, we will die. \n\n\"Allowing the child of a casted dwarf, regardless of gender, to assume the caste of either parent is the smallest of those changes that will need to be made. So yes, I propose to allow my niece, if the child is female, to follow me in succession, and her mother to be adopted to raise her properly.\" \n\nBandelore banged his staff again to restore order, as people began talking amongst themselves, or shouting out incomprehensible responses. When quiet was restored, Bandelore called for a vote on allowing Sereda's future niece (even though I knew it would be a boy) to be considered an Aeducan. \n\nThe vote passed, almost two to one for, but there was a definite hardcore group of dwarves who were against. I was surprised it passed by such a large margin, given how tradition-bound the dwarves always seemed, but Faren pointed out something I'd not considered \u2013 a good number of the nobles had children with casteless women, and their daughters were all living in Dust Town with their mothers, if there had been no male children. This would set a precedent for them to be allowed to acknowledge their daughters and mistresses. \n\nThe most surprising thing, for me, was that Harrowmont voted in favour. His expression looked like he was sucking on a lemon, but it seemed he took his vow to support Sereda seriously. His cronies looked as surprised as I, but followed his lead; I giggled, imagining that would be an interesting conversation later. \n\nSereda's succession wishes were recorded in the Memories, and the discussion turned to the Blight. Sereda confirmed Orzammar's commitment to aid against the Blight; she secured Kardol's agreement to send the vast majority of the Legion of the Dead forces, as well as agreeing to send most of the Warrior Caste. She made a motion to have any casteless who wished it to be tested for combat ability, and those who were able to fight would be outfitted and sent as a unit of their own; any who served (or the families of those who died on the surface) would be promoted to a new class Sereda proposed, essentially a lower level or subsidiary of the Warrior Caste. The motion passed easily; I guessed that the nobility were only too happy to get rid of some casteless to die on the surface, and hadn't considered what would happen to all of those people once the Blight was over. \n\nShe also easily obtained the approval necessary to commission Caridin to find golems in the Deep Roads and reactivate them, as well as research ways to remove the need for control rods. The dwarves had seemed disappointed at the loss of the Anvil of the Void \u2013 and why wouldn't they be? They hadn't seen the consequences \u2013 but that disappointment was wiped out at the prospect of finding a golem army some other way. \n\nShortly thereafter the Assembly was called to a close. I didn't think the Deshyrs could have stood any more revolutionary ideas out of Sereda, so it was probably a good thing. Sereda invited us to a gathering of the nobility at the Palace that evening, and we gratefully accepted. \n\nChapter Eighty-Eight: *Unexpected \n\nWe went back to the estate with just enough time for all us girls to get ready to go out. Gorim came with us, to my surprise; I assumed he would stay with Sereda. Leliana, Solona, and Morrigan had been shopping while the rest of us had been in the Deep Roads, and each had a beautiful silk dress of some sort or another to wear; I had my burgundy and gold one from Denerim that I'd never worn. \n\nThe guys all went and bought dressy clothes while the girls got ready. We all congregated in my room, as it was the largest. It took both Leli and Solona to get me in my gown, but I had to admit it was worth it. Once on, with the laces done up and corset in place, it looked amazing. I spun, admiring myself in the full length mirror Mistress Leta procured from somewhere. I had cleavage, a narrow waist, flaring hips...the sleeves emphasized my muscular arms (muscles! Who'd have thought the fat business consultant would ever have muscles?) and left my pale shoulders bare. \n\nSolona's dress was elegant, a green silk that looked lovely with her blonde hair and milky, freckled skin; Morrigan's was tight-fitting and black, showing a lot of cleavage, but less than her usual robes. Leliana's was a lovely royal blue, in a similar style to mine. Both the bard and I had significantly less cleavage than either Solona or Morrigan, so rather than flaunting it, we were faking it. But it worked, and there couldn't have been a more attractive group of women for miles. \n\nLeli then spent forever messing with my long, curly brown hair. She piled it on top of my head in a complicated knot, with tendrils and curls escaping to frame my face. Sitting still for long enough was driving me crazy, but again, worth it in the end. She then artfully applied some makeup \u2013 kohl around my eyes, some rouge overtop of some sort of foundation, and a light powder to hide the sheen. The other girls did their own hair and makeup, and looked beautiful. I wondered what Anders would think of the pale, ethereal Solona \u2013 I was sure they'd never dressed up like that in the tower. \n\nFinally ready, we filed out of the room and headed to the Dining Room. All the men were there waiting, as well as Caridin and Shale who had elected to stay in the Estate while they planned their foray back into the Deep Roads. I followed Leli through the doorway, and she stepped aside, revealing me to the room. Aedan smiled broadly, looking proud, and winked at me; Zev whistled, making me blush. Alistair appeared thunderstruck; he stood up, mouth agape and speechless as he stared at me. \n\nHe looked good; in a black doublet with burgundy and gold piping to match my dress over dark trousers, his muscles bulged against the fabric, and his hazel eyes shone. He'd had his hair cut, and had shaved; I noticed vaguely that all the men had, but really only had eyes for Alistair. I walked up to him, and he instinctively reached out for my hand; I laced my fingers with his and just waited for the shock to wear off. I was blushing at the attention, and could feel everyone's eyes on us, waiting to see what Alistair would do. \n\nHe tried to speak a couple of times, but eventually just leaned forward, tilted my chin up with his free hand, and kissed me. The kiss deepened as he pulled me closer, his hand slipping behind my neck to hold me in place while his tongue swept through my mouth, leaving me breathless. When he released me, I heard the cheering and catcalls I'd blocked out during the kiss, and blushed again. \n\nLeliana tapped me on the shoulder, and I turned to look at her; she examined my hair briefly, and then my face, especially my kiss-swollen lips. \"I knew you didn't need lip colour.\" \n\nI laughed nervously, while Alistair cleared his throat, blushing awkwardly. Finally he offered me his arm, and I took it gladly. When I turned, Anders was staring at Solona with an expression twisted with both disbelief and torment, while she pointedly ignored him. My heart ached for them both. \n\nEveryone finally ready, we set off to the Royal Palace. \"You look amazing,\" Alistair whispered, and I blushed again. \n\n\"You clean up pretty good yourself. Makes me want to skip the party altogether.\" \n\nHe looked down at me, eyes darkening with desire. \"I will if you will.\" \n\n\"I'm pretty sure Sereda would kill us.\" \n\nHe huffed in annoyance, and I giggled. \n\nWe arrived at the Palace and were announced; Duncan entered first, and the rest of us trailed in after. The Palace was somewhat like the rest of Orzammar \u2013 stone walls, stone floor, stone ceiling \u2013 but was considerably more ornate than the rest of the city. There were elegant tapestries decorating the walls, some depicting various scenes from dwarven history, others just beautiful abstract patterns. The floor was covered in places with mosaic tile, and the ceiling had elaborate designs in what looked like gold filigree. \n\nSereda greeted us as we entered, wearing a beautiful gold and white gown and her crown; she looked lovely, and serene. Getting things sorted out and back into the Palace obviously agreed with her. She took Duncan's arm and dragged him around to meet everyone, while the rest of us spread out into the crowd. \n\nThere were a lot of nobles present, several of which I recognised from the Assembly, and some who I didn't; many of them greeted us warmly, but a noticeable minority sniffed and turned away, rudely ignoring us. Almost all of them treated Faren as if he didn't exist; I was offended, but he seemed to find it amusing. Gorim muttered names to Aedan \u2013 I tuned them out, knowing I'd never remember later anyway. Kardol was there \u2013 Sereda had confronted the Shaperate about the temple in Bownammar, and they would apparently reinstate the Legion as a noble house. \n\nSome of the dwarven men kept shooting salacious looks at Morrigan, Leli, and Solona; those that looked too hard at me suffered Alistair's glare, and soon ceased. Leli used it, making rounds, laughing and flirting, every bit the bard; Morrigan returned every gaze with a frosty glare, while Solona just ignored it and stood aloof and alone. \n\nWine was being served on trays by servants dressed in uniform; I helped myself to a glass. It wasn't as good as the Antivan wine Zevran found for me in Denerim, but it was acceptable. Alistair grabbed himself a mug of ale from a bartender standing near a keg in one corner. It was nice \u2013 weird, but nice \u2013 to be able to just relax and enjoy ourselves for a night. There was a formal dinner for us and a few of Sereda's most noticeable supporters; she'd obviously warned the kitchens about Grey Warden appetites, and there was enough even for my ravenous group of friends. Despite being hungry, I was only able to eat a little before my dress felt too uncomfortably tight to continue. \n\nFaren introduced us to a very pregnant Rica, who wore a simple silk dress and tried to stay hidden for the most part. She appeared flustered and nervous, not used to noble company in such large numbers, and returned to her chambers after only a few minutes. Faren escorted her, taking the opportunity to catch up. \n\nAfter dinner there was a dance and more schmoozing. Alistair and I twirled inexpertly around the dance floor, laughing and giggling to ourselves, and then watched as the others took turns dancing with Solona and Leli. Sereda claimed Gorim for one dance, and it was obvious that every dwarven eye was on them the entire time. She looked blissful in his embrace; he just looked uncomfortable. The gossip around the room certainly wasn't very supportive, though there were a vocal few who didn't think it was anyone's business who the Queen danced with \u2013 or slept with, for that matter. \n\nAfter a while, the group of us found ourselves mostly alone in a side chamber where we could relax and chat, away from the music and judging eyes. There were a few chairs, claimed by Duncan and the other girls. Alistair stood with his back against the wall, his arms around my waist as I leaned back against his chest. Leli was the last to join us, trying to detach herself from a visibly drunk dwarf who was a little too handsy. Once she arrived, and our group was alone in the room, Alistair walked us over to the middle of the room before clearing his throat. Everyone stopped chatting to look at him expectantly. \n\n\"I know that you all know how I feel about Sierra,\" he began, putting his hand up to stop anyone from commenting, \"and no, Oghren, I am not going to discuss what I do with her legs, so just drop it now,\" I choked, wondering when they'd had that discussion, \"and I tell Sierra all the time how much I love her. However, I think it's maybe time that everyone knows, and I want to make it official before I mess it all up again.\" \n\nEveryone chuckled, and he blushed. \n\nHe took my hands, and knelt in front of me, leaving me suddenly breathless, unable to move or speak, completely stunned. \"Sierra, you are the best thing that has or will ever happen to me. Even with all the death, and fighting, and tragedy, you found me, and made me into a better person. You forgave me my mistakes, when I clearly didn't deserve it. I can't imagine my life without you, and I don't want to have to imagine that, not ever. So I was...I mean, I'm sort of hoping...\" \n\nHe took a deep breath and let go of one of my hands, reaching into a hidden pocket in his doublet. When he brought it back out, he held a gold ring, with a small diamond solitaire in the centre of a setting that looked like a rose. \"Sierra, will you marry me?\" \n\nI stood there for another moment, too shocked to respond. I had truly never expected to get married; growing up, all I saw were broken homes with broken children, and those who were still together were miserable. I'd never even wanted that, love, marriage, babies, the whole bit \u2013 not until I met Alistair. Since we'd gotten together, I'd allowed myself to feel hopeful for the future, but never really stopped to think about what that future would look like. Marriage? Where would we live? Would we have babies? Looking at him, gorgeous face upturned, serious expression turning nervous, biting his lip anxiously, I realised that none of that mattered. Where he was, was home, and I would gladly do anything just to have him be mine forever. \n\nWith a sob, I threw myself into his arms. He scooped me up, getting up from the floor in one smooth move; I had my arms around his neck, clinging like I'd never let go. \n\n\"I assume the lady agrees, yes?\" Zevran commented drily, and everyone chuckled. \n\nI continued to cling to Alistair's neck, but loosened my grip enough to come face-to-face. We pressed our foreheads together as tears streamed down my face; I mentally cursed the kohl-liner Leliana had applied around my eyes, as I was sure it was probably running down my face. \"Yes.\" I kissed him, feeling his arms tighten around me briefly. \"Yes, yes, yes.\" I punctuated each acceptance with a kiss. My tears stopped flowing, and he slowly lowered my feet to the floor; I still clung to him, face pressed into his chest, breathing in his scent \u2013 the scent of safety, of love, of home. Finally he took my hand, sliding the ring onto the appropriate finger on my left hand. It was a perfect fit, and looked absolutely gorgeous. \n\n\"I wanted to get a bigger diamond, but Leli talked me out of it,\" he whispered. \n\n\"It's perfect. Bigger would have been very impractical, not to mention gaudy. I should have guessed Leli was involved.\" I grinned, and Alistair returned my giddy smile. \"I love you. I can't believe you pulled this off without me knowing!\" \n\n\"It was meant to be a surprise.\" He kissed me gently. \"I love you, my future wife. Wow, that sounds sort of...Wife. Wiiife. Yeah, that's going to take some getting used to.\" \n\nI giggled and pulled him in for another kiss. When I finally looked up, everyone was smiling at us; Duncan's and Aedan's eyes were suspiciously bright, and Leliana and Solona had each shed a couple of tears. Anders' jaw was clenched, looking jealous and forlorn; I couldn't bring myself to be sorry for him at that moment. \n\nAedan pulled me away from Alistair \u2013 my betrothed, and how weird is that \u2013 to grab me in a bear hug. He then turned to Alistair, holding out his hand; the men grasped forearms. Aedan pulled him closer in an awkward man-hug, and I heard him whisper, \"You hurt her and I'll end you.\" \n\nAlistair replied, \"I know. And I'll hold you to that.\" \n\nI rolled my eyes and punched both of their shoulders in exasperation. \"I'm standing right here, you know!\" \n\nAedan grinned at me and stuck out his tongue; the three of us broke up laughing. \n\nWe were both hugged by the rest of the group \u2013 well, except Sten, of course, who just nodded his head gravely, and Morrigan, who wouldn't initiate a hug, especially with Alistair, for anything. And Oghren, who was in a drunken sleep under the table, again. \n\nWhen Anders hugged me, he apologised for his envy; I didn't hold it against him. I could understand. Poor Bel blushed so hard and stuttered so badly when he tried to congratulate us that I ended up rescuing him with a hug. \n\nSereda joined us briefly, wishing us well; she spent a couple of minutes talking quietly in the corner with Gorim. I couldn't hear what was said, but it wasn't good. He just kept shaking his head, and she got more and more agitated until she finally broke out in tears. He reached up and stroked her cheek gently, wiping away the tears, and then finally turned and walked away, hunched over like he had gained fifty years in ten minutes. \n\nMy happy night, my happy ending, wasn't going to be happy for everyone, it seemed. \n\nShortly thereafter Alistair and I excused ourselves; we got a lot of knowing glances and winks as we left, but I didn't care. Everyone knew what we were going to be doing all night, and I couldn't find it in me to be bothered by that at all. \n\nOffering me his arm, Alistair walked me back to the estate; if I hadn't been holding on, I was sure I could have floated there on my own personal cloud. Mistress Leta was waiting up in the dining room; when we walked through the door, she demanded, \"Well?\" ",
        "Alistair laughed, and I held out my hand, sparkly ring flashing; she squealed and hugged me, then with a nudge and a wink informed us there was a snack waiting for us in our room. She headed to bed. We went to our own room, and I opened the door to find a bit of a shock. We had a small table set up with two chairs, a platter of food just waiting, an open bottle of wine with two glasses, and the bed was covered in rose petals. The smell in the room was heavenly. The only light came from the hearth, which was lit and crackling merrily; the chairs that normally sat in front had been moved, and a thick blanket was laid out on the stone floor looking inviting. \n\nI gasped, and Alistair shot me an impish grin. \"Like it?\" \n\n\"You...really? You did all this?\" \n\n\"Well, technically, Mistress Leta did all this, with Leliana's help or advice at least, but yes, it was my idea.\" \n\n\"So sure I was going to say yes, were you?\" I teased, and he flushed slightly. \n\nHe rubbed the back of his neck, avoiding making eye contact. \"Well, not really, no, but Leliana was pretty sure, and I definitely hoped...\" \n\nI threw myself into his arms, pulling his head down for a kiss. \"If there was any doubt in your mind that I'd say yes, you're in so much trouble...\" \n\nHe kissed me back, and then took advantage when my mouth opened, pressing his tongue in to stroke against my own, drawing a low moan. He pulled away after a moment, taking off his doublet and hanging it carefully before turning to pour wine and gesture to the blanket by the fire. \n\n\"Have a seat?\" He reached out to hand me a glass of wine. \n\nI shook my head. \"I'd like to change first. You go ahead, and I'll be right there.\" \n\nI managed to work my way out of the dress without help \u2013 Leliana had informed me that she ordered the dress specially so that was possible, since normally a formal gown would require a lady's maid to get out of, and I was unlikely to have one of those on the road. I'm unlikely to have one of those ever, honestly. I hung the dress and then pulled one of Alistair's cotton tunics out of the armoire and slipped it over my head. \n\nI walked over to settle on the blanket beside a very smug-looking Alistair, who handed me a glass of wine after giving me a lascivious look. I felt a bit awkward about being mostly undressed, when he was still fully clothed in essentially a tuxedo; his eyes seemed drawn to my bare legs as if by magnetism. I was vaguely embarrassed, for no reason I could explain given our relationship, but \n\nit was also sort of sexy, though, and I resolved to tease the poor man for a while as we sat. \n\nI sat leaning back on one hand, legs crossed in front of me, and sipped my wine. One shoulder and the slope of my breast peeked through the wide neck of the tunic. \"So what do you think? Will Sereda work out?\" \n\n\"Hmm?\" He looked distracted, staring at my legs like that. He dragged his gaze up to my face. \"Oh, yes. She'll do fine. Certainly better than that Bhelen. I was worried for a moment that Duncan was going to recruit him into the Grey Wardens. Being technically dead will be perfect for him. And Sereda seems to have a good handle on how to manage her people, as well as some brilliant ideas. She's a better monarch than Cailan, for sure.\" \n\nThe bitterness in his voice surprised me, and I realised that we hadn't really talked much about Cailan, or rather, Theron, since he had extended the olive branch in Redcliffe. \"Do you hate him so much?\" \n\nHe sighed. \"I don't, not really. It's just...he had everything. Everything I didn't. Parents who loved him. Education, training, advisors, a wife...and he still messed it all up. How could he have been so blind? Such a glory hound? I'll never understand. I had nothing, before the Wardens, and even I could see how vain, how easily manipulated he was.\" \n\n\"He was also sheltered, though, Alistair. Something neither of us can claim, and from the outside, it seems like it would be a good thing...but it's often not. He never saw danger. Never fought anyone who would actually fight back. Never knew that life isn't idyllic and easy for most people. He has never wanted for anything, which means he values nothing. If it takes you a year to save up to buy something, you treasure it once it's finally yours. If you can just wave your hand and have it handed to you, you never understand what it's worth. \n\n\"It's not his fault that he trusted Loghain. Who wouldn't? He wasn't smart, I agree, but the fault lies with your father, with Loghain, and with Anora, who sheltered him from life and never gave him a chance to learn anything. I bet at some point he was at least vaguely interested in actually ruling Ferelden, but instead of encouraging that, I imagine Loghain and Anora brushed him off and sent him outside to play, like a child. Why would he see the world in any way other than as a child after living like that for twenty, thirty years?\" \n\n\"I suppose. It's just so...\" \n\n\"Disappointingly human?\" \n\nHe grinned at me. \"Yes, that.\" \n\n\"Don't tell him that.\" We shared a grin. \"Do you think you'll be able to put your resentment for your father aside and try to get know your brother?\" \n\nHe sighed. \"I'm going to try. It's hard though. I keep thinking...how could he not know? Why didn't anyone care? I know you say my mother and Maric both loved me...but that's hard to really accept. And it makes me resent Cailan for having what I didn't.\" \n\n\"I truly don't believe he knew, though. Honestly. When I accidentally spilled the beans...he was shocked. Apparently he went around harassing the castle staff to figure out who I was talking about. I guess he never looks in a mirror, because honestly, how anyone could miss the resemblance is beyond me.\" \n\nHe shifted closer to me on the blanket. \"Oh, I see how it is,\" he teased. \"You only love me because I look like the King.\" \n\nI giggled. \"Yes, that's right. Actually, I'm mostly hoping to cash in on it - we could go around the country doing impersonations for coin. Much more lucrative than this Grey Warden business - how much do we get paid anyway?\" \n\nHe laughed. \"Not much. Though the way Aedan does it we don't need a salary - we'll be rich just from the rewards claimed for doing everyone's dirty work.\" He shifted even closer, so his long leg laid on the blanket alongside mine; I could feel the warmth of his body through the fabric of his pants. \"But, you know, I don't really want to talk about either of our brothers right now, do you?\" \n\nI leaned against his side, resting my head on his shoulder. \"Not even a little bit.\" \n\n\"Were you truly surprised about this?\" I glanced up to see him looking insecure, biting his lip and avoiding my gaze. \n\n\"I had absolutely no idea. But it isn't because I didn't want to, I just figured that we'd wait until after the Blight to get ourselves sorted out. I just haven't let myself think that far ahead, yet. But I am incredibly,\" I got onto my knees facing him, reaching out to cup his cheek with my hand, forcing his eyes to meet mine, \"incredibly glad you did. You're perfect, you know that? And all mine. It's official, even. Too late to back out now!\" \n\nHe reached for me, and I went to him, straddling his lap, the soft fabric of his pants rubbing against my inner thighs, his arms around me, big warm hands splayed on my hip and back. \"Never. I told you. I've seen what it's like to imagine a future without you in it, and I don't want to live that way. This,\" he took my hand and held it up so my ring caught the firelight, briefly showering rainbows around the room, \"is me making sure I never have to. I love you, Sierra.\" \n\nI kissed him then, carding my hands into his thick hair, tracing his lip with my tongue. His hands roamed my body, kneading and pulling me closer to him, skimming near my breasts and gripping my ass, and I could feel the evidence that he was as desperate as I to get more intimate. I leaned back and smiled at him. \n\n\"You, love, are wearing entirely too many clothes.\" I began unbuttoning his shirt, and he just watched me with dark eyes, distracting me every now and then by stroking my bare thigh or ass. I struggled to get all the buttons undone, and then began kissing my way down his neck to his golden chest as it was bared for me. He gasped as I began licking and sucking one of his nipples, and finally managed to shrug the shirt all the way off. \n\nWhen I gently bit into the aroused little bump with my teeth, he groaned and pushed me away, grabbing the end of the tunic barely covering me and pulling it up over my head, leaving me nude in the firelight. His gaze raked over me, his breath fast, his pupils blown with desire, and I surrendered to him as he pulled me to him for a savage kiss. Then he mimicked my actions and began tracing down my neck with his lips and teeth, making me twitch and grind against the bulge in his trousers nestled between my thighs. \n\nWhen he reached my breast, instead of attacking just the nipple, he sucked as much of the flesh as he could fit into his mouth, while his tongue lashed the erect nub on the end, and I cried out, writhing in his lap while he held me relentlessly and switched sides, repeating the process. I ground against him harder, reaching for my orgasm, when he suddenly stopped, lifting me and laying me down on the blanket in front of him. I growled. \n\n\"You're right, I am wearing too many clothes.\" He grinned at my frustrated moan, climbing to his feet to unlace his trousers and toss them onto a chair. Standing naked in the firelight, his skin glowing gold, his perfect chiselled body on display, he was erect and slightly tousled and completely gorgeous. I whispered a brief prayer of thanks to whatever deity created him and then allowed me to be near him. \n\nI had the urge to taste him, to apply my lips and tongue to the parts of his body I hadn't yet, but when I sat up, he shook his head, dropping to his knees at my feet and pressing me back down. \"As much as I love your mouth, not today.\" \n\nHe leaned forward to crawl up my body, stopping only briefly to run his tongue into my wet slit, making me gasp and buck, before crawling even further. Still on hands and knees, he kissed me, and I wrapped my legs around his hips and dug my fingers into his shoulders trying to pull him closer. \n\nHe resisted, breaking the kiss to chuckle at me. \"Not yet. First, I want you to come for me.\" \n\nI moaned as I felt pressure against my slit, and then the warm, hard length of him parted my lips and slipped through my wetness without entering. I tilted my hips, trying to capture him, but he resisted and I felt the head of his cock nudge against my clit. I shuddered, unmet need now too desperate for release, and he chuckled darkly and did it again, and then again, grinding himself against my sensitive pearl. \n\n\"Come for me, Sierra. I want to see you come apart.\" And then he leaned down and bit my nipple, rubbing himself against me again, and I did. I cried out his name and spasmed, fire racing from my clit and abused nipple through my body until I couldn't breathe or think or do anything but feel and thrash. I came down from my high to find him beside me, stroking me gently, whispering sweet words of love and desire in my ear. \n\nI took a shaky, ragged breath. \"Andraste's tits, Alistair, you're going to be the death of me, one of these days.\" \n\n\"Not today,\" he whispered, and kissed me gently. \"You are so incredibly beautiful, Sierra. So gorgeous and sexy, I don't even know what to do with myself. I just want you all the time.\" \n\n\"And now you have me. Permanently.\" I waved my ring, and he caught my hand, pressing his lips to my palm. \n\n\"Permanently,\" he agreed. \n\n\"Now please, no more talking, and just...I need you. Please?\" \n\nHe kissed my lips, shuffling on top of me, and I gladly wrapped my legs around him as he pressed close. His tongue slipped into my mouth and he swallowed my gasp as he slowly worked his way inside me. And then we were moving together, each thrust and squeeze driving us higher, but he kept the pace slow so we approached our peaks gradually, hovering on the brink for long, torturous moments, before we tumbled over the edge together, our cries muffled by our entwined mouths. \n\nFinally, when the shuddering stopped, he reluctantly withdrew and flopped beside me on the floor; I rolled into his side, my head on his shoulder, and admired my ring in the firelight. I'm really engaged. I'm engaged to Alistair. I chuckled softly. \n\n\"What?\" \n\n\"I just realised. Aedan's been pushing me to embrace being a Cousland \u2013 but, I suppose, now I'll actually be a Therein.\" \n\n\"I don't expect you to change your name, Sierra.\" \n\n\"And that's why I'm going to, love.\" \n\nWe finally relocated to the bed, ate the meal laid out by Mistress Leta, then made love again; we laid in bed, entwined together, and talked about our future. We decided we both wanted children, but not for a while after the Blight - we wanted some time to settle in to our lives together outside of travelling and fighting. \n\n\"Where do you think we'll live?\" he asked. \n\n\"Amaranthine,\" I replied absentmindedly. \n\n\"You sound pretty sure of that.\" \n\nI considered. \"Actually, I guess I'm not that sure. With neither you nor Anora in charge, I don't know what will happen. But in the game, the Wardens are granted the Arling of Amaranthine, which is where the problems with the Architect and his crazy creations will happen.\" \n\n\"Huh. But Wardens aren't supposed to be political. How did that work?\" \n\n\"Well, honestly, the Wardens are as political as anyone else, they just aren't supposed to start civil wars and things. It's an illusion that the Wardens aren't political. The First Warden practically rules the Anderfels.\" I grimaced, and then smoothed out my expression before Alistair could notice. I don't want to argue about the Wardens, not tonight. \"Anyway, I guess things are just a bit...different, in Ferelden.\" \n\nHe chuckled. \"We are a different lot, I'll give you that. Wonder what Cailan will do?\" \n\n\"Guess we will have to wait and see. I'm not super thrilled at the idea of living at the Vigil, I admit.\" \n\n\"The Vigil?\" \n\n\"The name of the fortress where the Arling of Amaranthine is ruled from. Vigil's Keep. Big, ugly, and poorly maintained. And there's a Deep Roads entrance in the basement, which I'm hoping we can seal up before the darkspawn attack...yet another thing to talk to Sereda about. Because I haven't any idea how to get hold of the dwarf that sealed it after the attack in game. Can't even remember his name - though his brother's name is Dworkin.\" \n\nAlistair choked. \"Dworkin? Really?\" \n\n\"Hey, I didn't pick it. He's an explosives expert, actually. Sort of crazy, but fun all the same. His brother's a stone mason, and a good one...but if we can't find them, we need to see if some of Sereda's people can give us a hand. After we oust Rendon Howe, of course.\" \n\nAlistair sighed. \"One more thing to add to the to-do list.\" \n\nHe sounded so tired, I considered letting him sleep...but then I thought of a better idea. \n\n\"Is it still today? Or is it tomorrow yet?\" \n\n\"That doesn't even make sense. I'm pretty sure it's after midnight, if that's what you're asking.\" \n\n\"Good.\" \n\n\"Why?\" \n\nI disentangled myself and settled on my knees between his thighs. I licked my lips. \"Because you said 'not today,' but it isn't anymore.\""
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-87-88"
}