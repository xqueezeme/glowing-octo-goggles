{
    "title": "Madison's Changing Life Pt. 14",
    "pages": [
        "My eyes creeped open as the sun shone through my drapes that apparently I didn't close tight enough. It was OK though because I needed to get up to get to school anyway. Even though I took Monday off, the events of the day didn't make it feel like a day off at all. I flipped over on my bed and looked at the ceiling. Everything was so fucked up. Sitting up I grabbed my phone and read the inevitable message that was waiting for me.\n\nMessage: SORRY FOR MY TONE YESTERDAY\n\nMy eyebrow raised. The asshole was sorry? Part of me wanted to write back, \"it's OK,\" but I didn't. I couldn't. Was this part of their way to manipulate me? To make me feel bad for them? To forgive them?\n\nMessage: I LOST MY TEMPER\n\nMessage: BUT YOU HAD FUN ANYWAY DIDN'T YOU?\n\nI waited a moment before replying. What would I say? \n\nMessage: Yes...\n\nI was honest even though I hated that I was. I was struggling to understand what I was doing, feeling it was all wrong and right at the sametime.\n\nMessage: I KNEW IT\n\nMessage: DO YOU WANT TO CONTINUE?\n\nI couldn't believe what I was reading. The blackmailer was actually asking me if I wanted to continue? Wanted to be blackmailed? Of course I didn't. Right? No. Of course not.\n\nMessage: No\n\nI waited.\n\nMessage: TO BAD\n\nMessage: YOU LOVE IT\n\nMy heart sank. For a second I thought I might get out of this. That it might all be over, but who was I kidding? Why did I think that would happen? Based on everything that had happened, everything that I'd done, been told to do, was I really going to get out of it so easily?\n\nMessage: WEAR PACKAGE #2 NO BRA NO COVER\n\nMessage: THE BOTTOMS ARE UP TO YOU\n\nMessage: AND OPEN PACKAGE #7 AND TAKE IT WITH YOU\n\nMessage: CHECK YOUR MESSAGES TODAY SLUT\n\nI dropped my head into my hands as I finished reading the messages. Another day of hell, or was it heaven now? I was so screwed up I didn't even know.\n\nI got cleaned up, washed my face, brushed my teeth and brushed my hair, before opening the packages. Package two had a white turtleneck inside. Not what I expected but based on the leggings from the day before I had a good idea of what it would be like to wear. I didn't even worry about it anymore. Package seven on the other hand was not a piece of clothing. I pulled out a long pink double ended dildo from the packaging and held it in my hand. It didn't phase me anymore. A sex toy in a package that was left for me would normally be something shocking. But not now, not with how my life was.\n\nI pulled the white shirt over my head and down my body to where it ended, just above my navel, my stomach on display. I didn't realize how short it was before, but now I was worried this was too obvious for school. Surely people would notice, they would stare, they would talk, would I get in trouble? My tits weren't visible necessarily, but in the right light the material would be more see-thru for sure, there was no denying that. My nipples poked through like little stones in my shirt. I was turned on. There was no hiding it. Thoughts swirled in my head of people seeing my nipples, seeing me dressed in this shirt, and for some reason that made me even hornier. Fuck.\n\nI put on a pair of conservative panties, trying to rebel ever so slightly, and a pair of tight black jeans, a low heeled boot, and I was ready to go. If I wasn't a teacher, mother and someone with responsibilities I would have thought I looked pretty good, but for my situation, I looked completely out of place.\n\nSam and Emma had left early, some kind of project at school they needed to help on. That worked for me because it gave me a little longer without anyone seeing me dressed like this. Breakfast, coffee, my bag with my laptop and now a double ended dildo and I was ready to go. As I stepped outside I noticed it was overcast, not the nicest day, but maybe the lack of sunlight would help keep my shirt a little less see-thru.\n\nI strode confidently into the school, keeping my head up, trying to portrait an image of someone completely comfortable with what they were wearing, and not concerned at all. The opposite was actually how I felt though. Scared, worried, yet excited. Wow was I fucked.\n\nMy first class went by without many issues. Were there stares? Yes. Did I see girls chuckling to themselves as my nipples pressed against the material? Of course. Were the boys paying more attention then usual? There was no doubt. But if that was the worst that happened I couldn't complain. As the class continued and I moved around the material kept rubbing up against my exposed nipples, making them harder, more sensitive. The blackmailer was some kind of genius it seemed, everything they made me do turned me on even more. I kept playing along with the innocent teacher part, but I wanted nothing more than to sit at my desk, undo my pants and get off.\n\nThe bell rang and I planned to do just what I wanted to do. I walked over to my desk and sat down, waiting for all of my students to exit the room. As the last one left, I followed, closed and locked the door, back to my desk, sitting down and undoing the button on my jeans before lowering the zipper. As my hand began to slip into my panties a call came through to the classroom phone. \"Fuck\" I said to myself as I walked over and picked it up.\n\n\"Hello?\" I said, a little annoyed.\n\n\"Hey Madison, it's Tina, I'm just calling to remind you about your meeting with Mr. Wallace in five minutes,\" she said in a professional tone.\n\n\"Oh shit!\" I replied having completely forgotten about it. \"OK... I'll be there in a minute.\"\n\n\"OK... and maybe we can get lunch together or something?\" Tina asked.\n\n\"Sure... sounds good,\" I said before following it with \"bye.\" \n\nI let out a sigh knowing I wasn't going to get off now as I had planned, but that was quickly followed by a sense of worry. My meeting with Mr. Wallace. I had completely and utterly forgotten. What did he want to meet about? I was pretty sure I knew, I wasn't the same as I was a few weeks ago, I mean look at how I was dressing. Actually look at how I was dressed right then and there. My top, my nipples. \"I'm so getting fired,\" I said to myself as I did up my jeans and left the room.\n\nI said \"Hi\" to Tina as I walked past her desk and knocked on Mr. Wallace's door, \"Hello?\"\n\n\"Yes, come on in Madison,\" he said while raising his head from his desk, \"take a seat.\"\n\nI did as I was told and sat in front of his desk in a chair that had been there for a long time.\n\n\"So Mr. Wallace, you wanted to talk to me?\" I asked tentatively. \n\n\"Uh... yes... Madison,\" it was clear where his eyes were focused. It was the same place that everyone's eyes had been focused, \"I wanted to talk to you about your... ummmm... clothing choices.\"\n\nMy face went red. \"Oh... is there a problem with what I'm wearing?\" I tried to act surprised, I wasn't sure it worked.\n\n\"Well... no... I mean... we aren't trying, I'm not trying to limit you to only certain things... but some people, teachers mostly, have compl... no, commented on your change in outfits lately, so I wanted to talk to you about it,\" Mr Wallace stumbled.\n\nIt was obvious that the culture had changed. If I had dressed like this a few years ago I would have been sent home or fired for sure, but now there seemed to be a real fear of slut shaming and that worked out to my advantage more than Mr. Wallace could know.\n\n\"Oh... well... I'm sorry I have made some other teachers... uncomfortable,\" I was starting to feel more confident, \"but I'm still young Mr. Wallace and I think I should be able to wear what I like. It's not like I'm walking around naked or anything!\" I laughed. \n\nMr. Wallace smiled a little, his face turning red, \"no... of course not... I just wanted to bring it to your attention that others have noticed a change. But of course, you are welcome to continue to express yourself Madison.\"\n\n\"That's great Mr. Wallace... and thanks for letting me know. But it really is great I'm allowed to show who I really am while at work. You do such a great job creating a welcoming work environment,\" I was laying it on thick now.\n\n\"Well thank you Madison, it's nice to hear. Ummmm, well thank you for coming in,\" Mr. Wallace smiled more now, he had softened, given up, I'd won. The blackmailer had won? Was there any doubt?\n\nI got up from my chair, \"Thanks Mr. Wallace,\" I said as I left the room. I could feel his eyes burying through my jeans as I walked away. My pussy twitched.\n\n\"Hey Tina,\" I said as I walked up to her desk. She was bent over doing some paperwork before she looked up at me. The first thing I noticed was she was wearing a top similar to mine. Was this part of the blackmailers plan? Was this a hint? Some kind of game? Her tits stood up more than mine, everything about her was like me, but just better. God she was beautiful.\n\n\"Hey Madison,\" she said, \"do you want to go and get lunch now? It's a little early but I heard it's supposed to rain later.\"\n\n\"Sure, why not, I don't have class until after lunch anyway,\" I said with a smile and leaned against her desk.\n\n\"OK, awesome, just give me a minute to finish up!\"\n\nI walked around the school office as I waited for her. Looking at the announcements pinned to the wall, checking my mailbox, something I didn't do nearly often enough. Within a few minutes I felt a touch on my shoulder and found Tina ready to go. \n\nHer top was very similar to mine, basically the same, long sleeve, sheer, white, but no turtleneck. But instead of jeans like me she was wearing a pair of navy kahki shorts. They weren't super short, nothing that would like out of place in most locations, but at a school they weren't the norm. Of course they looked amazing on her. She pushed the office door open in front of her as she led us out to the hallway. My eyes stayed focused on her ass. I couldn't look away.\n\n\"Madison?\" I heard Tina say and my head snapped up from her ass. Tina's face was blushing. I had been caught. There was no denying it.\n\n\"Uh... ya...\" I said trying to brush it off.\n\nTina smiled, \"where do you want to go for lunch?\"\n\n\"Oh... how about that taco place around the corner? We can just walk there,\" I replied.\n\n\"Awesome, I love that place!\" Tina said excitedly. \n\nIt was obvious Tina was feeling a little better about her situation. Had the blackmailer gone easier on her? Had she just gotten used to it? Based on the top she was wearing it didn't seem like the blackmailing had stopped. Maybe she was like me? Maybe some part of her was starting to like it?\n\nWe walked out of the school and I looked up, the clouds were getting darker but Tina said it wasn't supposed to rain until later so we continued to the restaurant as planned. A few minutes into our walk I had to ask.\n\n\"Hey Tina...\"\n\n\"Ya?\" she said, turning to look at me.\n\n\"How is the... ummmm... blackmail situation?\" I didn't know how else to word it.\n\nTina's head turned and looked at the ground before speaking. \"Well, it's still going on, but I guess it's not as bad as it used to be, at least right now. I mean do you think I would normally wear this shirt?\"\n\nHer head rose and looked at me, and my shirt.\n\nI blushed immediately, did she know? Did she assume I was being blackmailed too? Nothing she had said or done had made me think she did, but our shirts were extremely similar.\n\n\"Oh, ya, I know, our shirts are so similar... that's why I wasn't sure if you were still being blackmailed, or... what...\" I'm not sure I was convincing.\n\n\"Ya, I mean, I was surprised to see your shirt... it's pretty... risky for school,\" Tina said looking honestly unsure of my clothing decision.\n\n\"Well, I just wanted to wear something different you know... actually that is why Mr. Wallace asked to meet with me, because of the way I was dressed, but he's actually OK with it, well, maybe not OK with it, but he isn't going to stop me.\"\n\n\"Really? I thought for sure you were going to get in shit,\" Tina laughed.\n\n\"Apparently not,\" I chuckled back.\n\nIt was a little of a weird moment, but lightened the mood. The rest of our walk and lunch was relaxing and didn't include any talk of our time at the club, or being blackmailed, it was like if we didn't mention it it didn't happen. It was nice to get out of that world for a while and just laugh. \n\nWith lunch done we needed to get back to school. My eyes looked at the clouds again, darker.\n\n\"We better hurry up, I think it's going to rain any second now,\" I said to Tina as I started to walk faster, my chest moving up and down as I did. I looked behind me as Tina caught up, her chest not moving nearly as much.\n\nWe continued to pick up the pace as we made our way back to the school, the dark clouds seeming to follow us as we did, stalking us. With the school in sight I felt the first drop, and then another, and another. Before we could make it to the doors the heavens opened up and it poured. I was soaked, Tina was soaked, but worse our shirts were soaked. I was sopping wet. My tits were now on display almost without any cover. I crossed my arms over my chest and looked over at Tina who was doing the same. We both mouthed the word \"fuck\" to each other before laughing. What were we supposed to do now?\n\nWe both walked into the school, our hair soaked and dripping water on the floor, our white shirts almost completely see-thru, but our arms covering our tits as best as we could. We quickly walked into the closest washroom to hide and dry off. I checked my phone, both to make sure it was still working, but also to see the time. \n\n\"Fuck, I have class in like 2 minutes,\" I said looking up at Tina, my arms moving from my chest exposing me.\n\n\"That's OK, you'll be a few minutes late, let's just get our shirts dry before anyone notices!\" there was panic in Tina's voice. She pulled her shirt over her head revealing her naked tits, my eyes staring before the loud sound of hand dryer turned on stunning me. \n\nI followed her lead, pulling my shirt over my head exposing myself even more. For the next few minutes Tina and I both ran our shirts under the dryer hoping they would dry. I checked my phone again and 3 minutes had gone by, my class had started. If I didn't get there soon someone would notify the office for sure. \n\n\"Shit, Tina, I have to go...\" I was panicking a little. The situation was causing it more than anything else, at least until I put my shirt back on. It wasn't as wet as before, but it was still damp, and my tits now were pretty clearly visible. \"Tina... does it look obvious?\" I asked turning to look at her.\n\n\"Ummmm... it's not too bad, I mean... it rained, what are you supposed to do?\" Tina said, trying to cheer me up.\n\nI knew it was going to be bad, but what was I going to do?\n\n\"Well Tina... wish me luck,\" I said as I gave her a little smile and opened the bathroom door, walking out into the hall. Luckily since classes had started the hall was empty. I walked quickly to class, not because I wanted to get there sooner, but because I didn't want to draw any unwanted attention to myself.\n\nI got to the door, I took a deep breath, and I turned the handle, walking in trying to look confident. I wasn't feeling that way. As soon as I walked inside I heard gasps from the students. Was my shirt more see-thru than I thought? I got to my desk and looked through my notes before turning around and starting the lesson. I did everything I could to ignore the stares, the glances and the almost constant murmurs about my shirt. What was I going to do about it?\n\nI felt embarrassed. How had this all come to be? I made one mistake and now I was standing in front of my students in a wet white shirt. The thing was it wasn't even the blackmailers fault completely. It was just bad luck. My luck. How could they have known it was going to rain at that exact moment? They didn't. They couldn't have. \n\nThe only saving grace was that as the class continued my shirt started to dry out, and by the end of class I was back to where I was before, a slightly see-thru shirt, but nothing too crazy, at least not crazy to me now. As the last student left I took yet another deep breath and sat down at my desk. One class left for the day. My phone buzzed. \n\nMessage: HAVING FUN TODAY?\n\nI rolled my eyes. What a fucker.\n\nMessage: PUT THE DILDO IN YOUR ASS AND PUSSY\n\nMessage: LEAVE IT THERE UNTIL YOU GET HOME\n\n\"Seriously?\" I said out loud reading the last message. I checked the clock and I have a few minutes before my next class. I didn't even try to fight it, or get angry, it was just the thing I was going to do next. \n\nMy hands undid the button on my jeans and pulled down the zipper. I stood up and pushed my jeans down. I reached into my bag pulling out the long and bendable toy. Luckily my pussy was wet like usual, I pulled my panties to the side and easily slid half of the toy into my cunt. Next I spit in my hand and used the saliva as lube for my ass, rubbing it on before pushing the other end into my ass. \"Mmmmm\" I let out. It felt amazing. I gently pulled the toy out of my two holes before pushing it back in, fucking myself slowly. I only had time for a couple of thrusts, but I loved them.\n\nPanties back in place, jeans zipped and buttoned up. Sitting down on my chair was a little delicate as it pushed the toys deeper into my holes. Unconsciously I started to move around a little, feeling the dildo touch me in deeper areas.\n\nThe door to the class room opened and Jess walked through. I had completely forgotten she was in this class and I really wished she wasn't. I watched as her little body walked over to me, a sly grin on her face, her leggings and tank top showing off her perfect body.\n\n\"Hey Ms. Edwards,\" Jess said as she walked up to me. \n\nMy nipples immediately got harder as she got closer, my pussy twitched, I wanted to kiss her and have her fuck me with this dildo in my holes, but I couldn't, not here, not now, not ever, at least that's what I told myself. \n\n\"Hi Jess...\" I trailed off. \n\nHer hands came up and grabbed my braless tits, squeezing them before pinching my nipples, I let out a moan.\n\n\"I love this shirt on you Ms. Edwards,\" Jess said as her hand came down and ran over my pussy, feeling the toys lodged in there, \"oh wow... someone's being a dirty teacher today...\"\n\nLuckily the door flung open again and other students started to walk in.\n\n\"Yes Jess... that's correct...\" I said trying to cover up what was happening. Jess smiled and walked to her desk. I let out a soft sigh, trying to get myself focused again.\n\nEvery step or movement I made during the class caused the dildo to move around in my ass and pussy. Each time it moved it turned me on more. I was dripping, I was horny beyond belief. I couldn't wait for the class to end. The clock seemed to be moving slower than usual, each second dragging on for minutes. I sat down and tried to focus on other things, tried not to move, but I couldn't help myself anymore.\n\n\"Class, I'll be right back...\" I said as I walked out of the room, catching a glimpse of a smile on Jess before I left.\n\nI walked quickly to the nearest bathroom, no one there, I opened the last stall, locked it, and pulled down my jeans and panties revealing the dildo. My hand grabbed it and started to pump it in and out of my holes as fast as I could. My other hand came down and started to play with my clit. My orgasm was building fast. My mind went through the situation, the blackmail, the toy, the location, everything was so insane and turned me on so much. I loved it, I couldn't deny it. I cummed hard and loud, yelling out as I shook from the storm. I hoped no one could hear me, but I also didn't care at that point. The toy was in my hand now, sloppy and wet from my juices. I brought it to my mouth and tasted it without thinking. This was who I was now. \n\nI cleaned myself up, slipping the toy back into my holes as I was instructed, jeans back in place, and walked back to class. I took my time wanting to let the flushness from my cheeks to fade. My nipples were still like stones poking through my shirt, but that was normal now.",
        "The rest of the class went normally, except for Jess, she knew what I had done and kept smiling at me to show me. I let it slide. Nothing could be done. She knew, I knew, it was what it was. The bell rang and everyone left. Jess stopped by to tease me before saying her mom was waiting for her. I sat at my desk for a few minutes to compose myself before getting up. I was exhausted. The toy inside me still teasing me as I moved, but less so then before, I had become used to it, I had become used to everything it seemed.\n\nAt home I took the toy out and cleaned it, putting it in my drawer with some of the other toys I had. Apparently Emma and I had the same idea of \"safe\" places. I took a shower to get the day off of me, between the rain and the dripping from my pussy I felt dirty, I needed to get cleaned up. \n\nAnother night, another dinner, another movie. Things with Emma and Sam seemed to have leveled off, at least for now. It was nice. We seemed to be like a normal family again even though I knew it couldn't have been further from the truth. Emma asked me how the blackmail situation was going from time to time, but I kept telling her I had it under control. I don't know if she believed me, but she at least left it alone.\n\nBefore going to sleep that night I checked my messages.\n\nMessage: GOOD JOB TODAY\n\nMessage: YOU ARE SUCH A SLUT\n\nMessage: TOMORROW WEAR A SKIRT NO PANTIES\n\nMessage: OPEN PACKAGE 6 IN THE MORNING\n\nMessage: MORE INSTRUCTIONS TO COME\n\nI closed my phone. I wasn't even interested in what package 6 was. There was nothing I could do about it. I fell asleep almost right away tired from another day of blackmail."
    ],
    "authorname": "heavyandhorny",
    "tags": [
        "toys",
        "public",
        "wet",
        "office",
        "school",
        "blackmail"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/madisons-changing-life-pt-14"
}