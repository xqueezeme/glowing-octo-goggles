{
    "title": "By Demon's Driven",
    "pages": [
        "Author's note: The story is part of Literotica's unofficial tag team competition. Twenty of Literotica's authors have accepted the challenge of being randomly paired with a partner to co-author a story under the pen name \"The_Odd_Couplings.\" The pairings have remained anonymous and the true authors of this story will be revealed in the comments section one week from today.\n\nDisclaimer: Because part of the fun of this challenge is the secrecy of the partners I would like to ask that readers and fellow authors alike refrain from posting their guesses in the comments section as we would like the scoring to be as fair as possible.\n\n<center>- - By Demons Driven - -</center>\n\n\"Oh, I don't think so.\" JD muttered as the light turned yellow. \n\nThe light was a five way stop and Miranda had told him to get his ass to the club and fast. He gunned the engine of the gray sixty nine Firebird and went into the oncoming lane to pass the van in front of him. Cutting back across, he flew under the light just as it turned red.\n\nA glance in the mirror showed the van driver flipping him off and JD was sure he had blasted the horn, but couldn't hear it over the sound of Hinder's 'American Nightmare' blasting through the speakers loud enough to cause the car to vibrate. Every note of the song caused a sharp pain in his already aching head, but he hadn't stopped for coffee and needed to clear last night's Tequila from his head.\n\nHe took the corner fast and hard, causing the tire's to squeal. Partway through the turn he punched the accelerator sending the car into a fishtail. Grinning, he yanked the wheel in the opposite direction, eased off the gas then floored it. The car rocked before straightening and shot down the street at over seventy. When he reached the next corner he slowed the car down to turn, then slammed on the brakes. \n\n\"Motherfuckers.\" He hissed, staring at the sign for \"The Devil's Playground.\" \n\nThe eight foot square sign featured a blond woman in a revealing Devil's costume complete with horns, tail and his favorite part, an airbrushed protruding forked tongue waving proactively. She was surrounded by flames and written across the bottom were the words, \"Hotter than Hell.\"\n\nSpray painted in thick black letters across the sign were the words, \"Salvation, not sin, is the answer!\" below that was \"Heaven rewards the saint not the sinner!\"\n\n\"Bullshit.\" He muttered, \"Most saints were murdered by the idiots they were trying to save.\"\n\nRemoving his Foster Grant sunglasses, JD looked into the mirror. His normally bright emerald green eyes were currently dull and surrounded by red. The back room of the club had been open for forty eight straight hours to entertain a group from New Orleans and he'd stayed the entire time making sure everything stayed sane and safe. Well, as sane as possible when dealing with a group of people whose capacity for perversion was matched only by the wealth able to procure that level of debauchery.\n\nJD had been requested to participate in quite a few of the weekends festivities. Between the sex, the drinking and watching a non-stop orgy that would make one of Caligula's feasts look like a square dance, he had reached the end of even his legendary endurance. He'd finally staggered home at three am and Miranda had called him less than six hours later.\n\nHe doubted she would call just for the graffiti and after rubbing his burning eyes drove down the long narrow road that led to the Playground. The club was located near the shipyard and there were no residential properties, just warehouses and businesses, making it a perfect location for a sex club. No nosy neighbors creeping around or kids that neighborhood groups could use as an excuse to close him down or get him to move. \n\nNot that the club hadn't had its share of threats, but when the backroom clientele featured a senator, several councilmen, two members of the DA's office and as extra insurance a female judge who when not in her black robe could be found in The Playground in a dog crate begging to suck cock through the bars and be fucked in the ass. \n\nBut lately another threat was rising in form of Reverend Zachary Knox a fire and brimstone preacher whose church, The Sacred Truth was currently the second largest in Boston. Knox had been even bigger down south. His ministry in Alabama had been popular enough to have a weekly television show. Five years ago Knox had stepped down as Pastor of the original Sacred Truth saying that God wanted him to spread his word to others around the country nd headed up east.\n\nOnce his church became popular Knox had started a family values kick targeting adult bookstores and the local strip clubs. Knox had forced Cheaters doors to close last year by making enough noise and gathering enough support to drive their clientele away. Not that JD cared, it was one competitor out of the way and he had hired three of their best girls and their top bouncer. \n\nBut Cheaters and the other clubs were mostly just skin factories, stripping, lap dances and that was it. A couple of clubs had backrooms where the strippers would fuck the clients, but it was quick, get them in, get them out sex and most of the money went right back into the drugs sold there. \n\nThe Devil's Playground was a strip club to the public, but behind the scenes a full out fetish club where a man or woman could find anything they desired. Group sex, hardcore BDSM, foot fetish, rape fantasies, humiliation, no matter how bizarre the kink, if it was requested and paid for, JD's staff could provide it. Unlike the other meat markets JD's girls were not just strippers, but high end prostitutes from across the country he had lured to work for him. \n\nThe Playground differed from the other clubs by having a section for the ladies and all his male dancers were former escorts and sex club workers. Three of them were bisexual which along with the women who would swing both ways gave a client every possible option to enjoy. Having started out as an escort and stripper himself years ago, JD knew how to keep the employees happy. They were well paid, had choices in what they did and if any of them had personal issues he would do what he could to help. \n\nGranted it wasn't that JD considered himself all that nice of guy, but it was smart business. He lured people from other clubs, but no one ever deserted him. The fact he retained the same people and they were professionals, not coke heads and street whores, gave his wealthy clients confidence that their secret desires would be handled with discretion in addition to getting the best of everything they wanted. Most importantly unlike the other clubs no drugs were allowed to be used or sold in the Playground.\n\nAny person found using or dealing was fired and any client would be told not to come back. If they used they could do it on their time, sex and lust were the only vices served at his club. That helped with getting the police and other authorities off his back. There was rarely any real trouble at the Playground and the occasional trouble maker could easily be handled by his bouncers or JD himself if he was in a shit mood and felt like getting out a little frustration. \n\nNo, the Devil's Playground was just that; a playground of the flesh. Straight up sexual satisfaction no matter what flavor you craved. The club had just celebrated its tenth anniversary and JD was making a killing and was not shy about doling out bonuses and gifts to again ensure the loyalty of the best sex workers on the coast. Any past threats had always been dealt with quickly, but this fruitcake was proving a problem and JD's gut, which he trusted above all else, told him Knox wasn't going to0 go away easily. \n\nThat feeling was confirmed when JD pulled into the large parking lot and saw the dozen men and women walking around the front of the club holding up signs with assorted religious propaganda scrawled across them.\n\n\"Fucking great.\" \n\nThis had started a few days ago with just a pair of the lemmings hanging around and handing flyers for Knox's church out to the customers and employees. JD hadn't cared too much, but within three days there was a half dozen and they were engaging the clients in conversation warning of sin and God's judgment. Most of the people laughed it off, but a few had commented on them and JD had gone out there and asked them to leave. \n\nThey'd done so without argument, but were back the next day and this time with a couple of guys in suits who claimed they were Deacons of The Sacred Truth. They told JD they were not going away this time and they were breaking no laws as long they were peaceful. JD had called the police which was when it was explained to him that although he owned his building and it was private property, the large parking lot was nothing more than an open area of the cities property and they were within their rights to be there. \n\nWhen he protested he was asked if he paid any rent or taxes for using the cities property? JD promptly backed down not wanting to expose the fact a local councilman had made it so he didn't have to. The Church goers were a nuisance, but not enough to stir up real shit, that was until now. Not only the sign, but this was more of them than he had seen before and the signs were something new. \n\nJD guided the car around them and pulled into his customary spot alongside the building. Shutting off the car he frowned at the sight of the channel twelve news van that had pulled up against the fence in front of the abandoned warehouse that ran along the back of the club. The owner of the warehouse let JD use it as a back entrance for the club for a thousand a month. People who didn't want to be seen parked on the other side of the warehouse and were let in by a bouncer and cut through to the other side where they would need only walk a few feet from the warehouse to the back door of the club. \n\nThe club itself didn't open until two on Monday's but the back rooms were open twenty four seven with at least a few girls and two bouncers on duty. JD hoped no one had been wandering behind the club in case someone had an appointment. As soon as he'd pulled up, the van doors opened. The man driving slid the side door open and removed his camera. The woman exiting the passenger side came quickly around to the front. JD squinted, the movement causing his swollen eyes to sting even more, to get a good look at her. When he did, his lips formed into the smirk that many thought was a permanent fixture on his face.\n\nMolly Malone who had lead Channel Twelve's attempt to expose the Playground two years ago. For her part in that embarrassing debacle, Molly was now relegated to the five am news and an occasional local interest story no one else wanted. How she would warrant coming here for this he had no idea. Then again she already had a history with him so who better to send? He assumed she hated him enough to give it a shot and the network likely saw this as a throw away story. Why risk their real talent getting burned? \n\nShe stopped several feet from the van and turned to watch the cameraman fiddling with his equipment. Her hands were on her hips and he was sure she was telling him to move his ass. Removing a pack of Camels from his pocket, JD lit one and took a long drag. He'd probably smoked five packs over the weekend marathon and the smoke seared his lungs. \n\nHe held it there, forcing his body to endure the discomfort. Most people eschewed discomfort, but JD embraced it. It was only through pain that one could truly endure pleasure and appreciate comfort. He exhaled and put the glasses in the pocket of his black t-shirt. Seeing he was going to be on camera he looked closely at his face in the rear view mirror. His eyes looked as if he had just been on a bender, which he had and maybe the glasses should go back on. Then again he did have a reputation to uphold.\n\nTaking in the rest of his face, he had no other complaints. JD was a good looking man and knew it. That wasn't just narcissism, but the fact he'd been being told that by women since he was in his teens. Good looking enough that by eighteen he was making a living by whoring himself to several older housewives with a lot of time, a lot of money and who had husbands who barely paid attention to them.\n\nJD's features were smooth and flawless including a pair of high cheekbones and eyelashes that most women had to pay for. Those eyelashes surrounded eyes, which when not burned out were his best feature. They were bright and stunning, cat's eyes many had referred to them as and they went well with his thick jet black hair. His looks had earned him the nick name pretty boy from more than one person and depending on his mood JD would play into that by styling his hair and dressing the part.\n\nAt other times he would leave his hair tousled and hanging down over his eyes and sport a five o clock shadow, that combined with the tattoos that adorned his upper body, gave him a bad boy look that definitely played better with most of the female clientele. \n\nJD was currently in the latter mode, he'd run his fingers though his wet hair before leaving his condo and hadn't shaved in two days leaving a dark scruff. He smiled in the mirror checking his teeth which were as perfect as the rest of him and after another drag on the cigarette, got out of the car. He heard someone yell and turning saw one of the God freaks pointing at him. They didn't come any closer, but they knew he would have to walk their way to enter the club. \n\nWhat JD knew was that his cooler, Jimmy would be in the doorway watching as he most likely had been since the fruits showed up. Not that JD was worried the middle aged out of shape lemmings would threaten him or that he couldn't handle them if they did, but he needed to keep the headlines that they were harassing him, not him assaulting them. \n\n<center>* * * * *</center>\n\nMolly climbed out of the van and had a quick look around. Shit, she couldn't believe she was back outside this club. She cringed remembering her old producer, who in search of some sort of expose like that of Heidi Fleiss, had dragged his crew including the fresh faced and idealistic Molly out to investigate this place. \n\nThe whole exercise had been doomed to failure. Without anyone on the inside all they had was unsubstantiated rumors to go on and when it had exploded in their faces it had ended her career as a rising new star in the Boston Media. Still she hadn't ended up like most of the team who had received their pink slips within a few days of the fiasco.\n\nShe eyed JD Walker, surreptitiously, what a fucking peacock, she thought. Checking himself out before the camera goes on. She bit back a retort that would have ended with her calling him a princess or something and turned to her camera man, Joe, who rode in the news van with her.\n\nFeeling angry about being here again and seeing JD strutting and waiting for them to roll camera she turned her sour mood on Joe. \"Geez, Joe! Can't you just for once get your shit together without screwing around? My god, you're worse than an old woman the way you fuss over that camera.\"\n\n\"This camera,\" he said hefting it into position on his shoulder, \"Will put that pretty little pixie face of yours back on the news tonight.\" He grinned. Joe had a crush on Molly and even though she yelled at him more often than not he thought he could see past the confident, no nonsense reporter to the insecure little girl she was at heart, who worried over every detail of her report before heading out in the van. \n\nJoe had tried to get her to talk about her past, where she was from, the town she grew up in but she always found an excuse to elude the questions he asked. He was convinced there was a secret there and he longed to know it, to know her, but there was little she would give away about her life before she had arrived in Boston. He didn't even know the name of the town she was from. Joe flicked on his camera and focused on Molly's face, holding up his fingers giving her a count in before she launched into her well-rehearsed opening dialogue.\n\nMolly spoke slowly and clearly outlining the crusade of Zachary Knox and his followers to clean up Boston and close down dens of inequity like The Devil's Playground. Then watched as Joe panned the camera out and turned towards the preening peacock, JD Walker. He gave her a slow laconic smile that showed his perfect teeth. It would be easier to paint JD as the villain here if he weren't so damn good looking, Molly lamented.\n\nShe reminded herself that for her, JD was not the sole target of this piece. She had her own agenda, a vendetta against the good Reverend Knox and if she had to be here and give this pretty punk some air time to achieve her own agenda, then so be it. She waited until he had finished admiring himself and closed his car door before she moved toward him.\n\n<center>* * * * *</center>\n\nAs soon as his car door closed, Molly and her cameraman were on her way over. JD made a show of stretching, letting his un-tucked black t-shirt ride up exposing his chiseled stomach and the word Dominatus tattooed across it. The sleeves slipped up his arms as well exposing his well muscled and heavily inked arms. The left arm bore a colorful naked winged succubus with the word Lust under it. The right featured The Celtic Devil, Pan, horns, hooves and red eyes glaring as he blew on his rusted horn to call the souls to him. \n\nJD lowered his arms as Molly was now only steps away and unsnapping his jeans made a show of adjusting the large bulge in his boxers, the bulge that had earned his chances with all those over sexed cougars back in the day. They loved to talk and brag and once he had one and they told their friends how hung he was they had to find out for themselves. \n\n\"Excuse me, Mr. Walker?\"\n\nIgnoring her, JD blatantly lifted his cock in his boxers to move it to the side and left his jeans open giving her a view of the top line of his pubic hair. He zipped up, snapped his jeans and looking up, gave her a practiced smile that was about as sincere as he knew the beliefs of the stiffs in front of his club were.\n\n\"Good morning Miss Malone, I have to say I'm surprised to see you.\"\n\n\"I'm sure you are.\" She returned his smile with one as phony as his own and JD had to give her a point for it.\n\n\"I am, you didn't strike me as the kind that would come back after a beating like that.\" His smile turned into his trademark smirk, \"Or are you a masochist?\"\n\nShe smiled \"You'd be surprised what a girl like me will come back for.\" If he was trying to intimidate her he definitely had the wrong girl.\n\nHe kept his expression neutral, but scored another point for her, tougher than she looked. Molly looked away from him at her camera man who was behind her adjusting something on the lens. As she watched him, trying to act as if she had no interest in him, JD gave her a quick up and down.\n\nAt a glance Molly Malone was nothing special; certainly not unattractive, but not the type to get someone to do a double take when she walked past. She was a few inches shorter than his five ten and had an average build, or at least that's how she appeared seeing she didn't wear anything that was tight or flattering enough to give a hint at what her figure was truly like. \n\nHer black skirt was knee length and if her calves were any indication she had decent legs. The white blouse beneath the business like black blazer was loose and buttoned up close to her neck. His professional opinion as a purveyor of the female form was that smaller breasted women tended to dress that way. Her strawberry blonde hair was up, but looking at the amount of it pulled back in the clip he figured it had pretty good length. \n\nMolly's eyes were dark and expressive and there was a patch of freckles around her nose that were made more prominent by her fair complexion. Overall he would classify her as cute, the girl next door type. After years of being exposed to, and enjoying, strippers and escorts of the highest quality, JD had found his taste drifting more towards cute. Something a bit different he supposed.",
        "As he had when he first met her, he wondered what the cute little freckle faced reporter would be like in bed. She could be the quiet one you had to watch out for, but her demeanor was always defensive and right now she was standing as if she had a pole up her ass. JD smiled at the thought she could probably use a good long pole up her ass.\n\nThe cameraman nodded and adjusting the camera on his shoulder pointed it at him. She turned to face him and holding the microphone up began speaking\n\n\"This is Molly Malone coming to you live from...\" she stopped when he put his hand over the microphone.\n\n\"This isn't live, it's not even eleven.\" If looks could kill he'd be six feet under, but when she spoke she sounded calm.\n\n\"You're a smart man JD, I'll give you that. But this will be on the news tonight.\" \"Course it will.\" He was still holding the mic. \"How did you get this gig? The real reporters sick? Or are you here chasing your own story?\"\n\n\"You'll find out soon enough.\" She replied remaining every inch the professional despite being in such close proximity to a man whom she could almost smell sex emanating from.\n\n\"Okay.\" He removed his hand from the mic and glancing to his side took several steps along the wall of the building so he was standing in front of the sign painted there that could be seen from the highway.\n\n\"What's the matter, Mr. Walker, you don't want to speak to me?\" she asked following him.\n\n\"Nice touch!\" he laughed, \"I like that one, good for you Molly.\" Turning to face her he smiled, \"But no, I was just trying to get out of the sight of my fan club. You know I always have time for the press.\"\n\n\"Speaking of your fan club Mr. Walker, it must concern you that Reverend Knox has turned his attention to you.\"\n\n\"His attention doesn't concern me. Having his people vandalize my billboard does.\"\n\n\"That's an assumption, Mr. Walker.\"\n\n\"JD, please, I mean we go way back right?\" he smirked, reminding her again of her past failure.\n\n\"I'd rather keep this about current events.\" She told him curtly, but with a slight toss of her head that made him want to laugh. \"You can't prove it is the reverend's followers that are responsible.\"\n\n\"No, Molly, I mean Miss Malone. I cannot prove it, which is frustrating because I know it's them, know it here.\" He tapped his chest, \"But I just can't prove it. You know how that feels, don't you?\"\n\nShe stared at him for a moment, but maintained her composure and let it go.\n\n\"Back to my initial question, Knox managed to get Cheaters shut down by calling attention to the illegal and unsavory acts that went on there. So now that he is calling out The Devil's Playground, you must be worried.\"\n\nCrossing his arms over his chest and leaning against the wall he shrugged, \"Look if using my name will get Knox in the paper and make him relevant then by all means I'm willing to help him out.\"\n\n\"The reverend is relevant enough to get people's attention Mr. Walker. He and his followers are adamant about cleaning up this city and he is starting with the sex industry, especially prostitution and...\"\n\n\"Miss Malone if you use the word prostitution again it best have the word alleged in front of it. If it doesn't, not only will this interview end, but I will contact my attorney to discuss a libel suit to be filed against you and your network. Understood?\"\n\n\"I...\" she swallowed hard, \"My apologies. But where there is smoke there is fire and...\"\n\n\"Miss Malone The Devil's Playground is an adult entertainment club. A fully legal, fully licensed, club. I am a business owner and a member of the chamber of commerce like most other businesses. I pay a lot of taxes to this state as well as donate to charitable causes.\"\n\n\"Be that s it may...\" What the hell was she doing she asked herself She no longer cared what happened in his club unless it concerned Knox. Yet his arrogance kept her here arguing points with him as if he was the sole purpose for her being there. \n\n\"There is a separation of church and state last I looked at the constitution, Miss Malone. The good Reverend has the right to his religious beliefs, but what his people are doing is harassing my clients and my employees based on religious beliefs and that's illegal. The state will not back the bible in court, it will back the law.\"\n\n\"So you feel you have nothing to hide?\"\n\n\"Nothing and the state's been involved in this witch hunt before now haven't they?\"\n\n\"Yes.\" She replied evenly. \"And perhaps they did not dig far enough or are your contributions are more political then charitable.\" She couldn't help herself, the arrogance of this man was galling to her and she continued to bait him.\n\n\"That's a strong accusation and another possible law suit.\" He pointed at the cameraman, \"Are you really filming this?\"\n\n\"I am.\" He said, \"And we're not afraid of your threats.\"\n\n\"A word of advice my friend,\" JD addressed him, \"I would watch how far you let Miss Malone lead you by your dick. She knows what can happen when you talk about things you can't back up, don't you?\" \n\n\"Reverend Knox came here to clean up this state Mr. Walker and according to many, you're club is one of the biggest blemishes in it.\"\n\n\"It is?\" he smiled, \"I see. Well I'll tell you what Miss Malone you and the good reverend are not doing your cause any justice.\"\n\n\"It's not my cause, I am just stating the facts according to Knox's latest press release, which did not come from me by the way.\" She couldn't help the sound of derision that crept into her voice as she spoke about Knox. \"How do you see another lawsuit?\"\n\n\"I see the people of god defacing my property and see them harassing paying customers trying to enter a legitimate business, but most of all what I see is publicity. The more the good people call out what a sinner I am and all the sleazy things that go on here the more men are going to look at their wives and say, \"That's disgusting\" then come down here to see what the fuss is about.\"\n\n\"No they are...\" He had cut her off again making her even more determined not to let him win this war of words.\n\n\"And your little interview which may or may not be being done with the stations approval? If it airs then all you did was give me five minutes of prime time exposure standing in front of my sign.\"\n\nShe frowned and began to speak, but once again covering the microphone JD leaned in close to her and spoke softly.\n\n\"Do yourself a favor Molly and let this go. You didn't get me the first time, you won't get me this time and no pious fraud will get me either. Just forget the past, learn your lesson and move on.\"\n\n\"You know nothing of my past,\" she mumbled under her breath, but he was standing close enough to hear her and cocked an eyebrow at her. Quickly recovering she went back to the argument at hand.\n\n\"You're too arrogant to keep dodging the truth JD.\" She pointed out towards the parking lot. I don't believe in Knox as a minister, or even that he is a man with any redeeming qualities, but he is powerful and has a lot of connections. I won't be the one to bring you down, truthfully, I don't care enough. My job is simply to report the facts, and I will be reporting the facts on both sides of this little war you and Knox have declared on each other.\"\n\n\"Hell hath no fury.\" JD sighed dramatically. \"I just hope you're ready to bury Knox when he gets caught with the skeletons that are hanging in his closet. Probably has a guy waiting for him at home right now, dressed in latex with a ball gag in his mouth. Guys like me? We are what we are? Knox? They're all liars.\"\n\n\"Oh so Saint JD now is it? You never lie? You're lying every time you say nothing goes on in that club besides lap dances. You know it, I know it, shit half the city knows it!\" She paused and looked at him. \"I would be just as satisfied to see Knox go down, but at this moment my bet would be on you.\" \n\n\"I always satisfy when I go down,\" the smirk returned, \"Do you?\"\n\n\"I won't dignify that with a comment.\" But a sparkle entered her eyes that she could not hide from the man scrutinizing her and a warm sensation flowed through her at the visual of her kneeling before him. \n\n\"Bet you've heard that one plenty. But seeing I don't hold grudges, let me give you some advice.\"\n\n\"What's that?\"\n\nHe reached out and before she could pull away ran his fingers along her hair. \"Do yourself a favor and let your hair down.\"\n\n\"That your preference in women?\" Why did she ask that, why the fuck would she care? Her mind raged at her silently.\n\n\"No, but your ears stick out a little, not a lot, but a little and you have a long neck, wearing your hair down will cover that.\" He shrugged, \"Or tape your ears back.\"\n\nShe glared at him and looked like she was going to retort, but spinning on her heel began to walk away.\n\n\"Hey, Molly!\" he called.\n\nShe stopped and looked over her shoulder.\n\n\"That was a great piece you did on the pot holes on Main Street! I found it riveting!\"\n\nHis derisive laugh followed her as she walked towards the protestors. She had wasted too much time talking to that arrogant prick instead of focusing on the man she planned to see brought to justice. Molly barged into the throng towards the good Reverend shadowed by the huge form of Joe.\n\nCurious as to what the reporer was doing, Jimmy, who was standing in a protective stance blocking the entry as JD entered, nodded to him and left his position to see what she was doing in there with the Jesus freaks. \n\n\"So Reverend Knox, don't you think being here today is a little hypocritical?\" She deliberately spoke in the accent she had worked so hard to lose the last few years. She saw Joe give her a strange look, but didn't care. She had avoided meeting Knox head on before she had the protection of the mic in her hand and the cameraman behind her. She smiled sweetly at the nervous expression on his face.\n\n\"I don't think we have ever met my child,\" Knox's voice wavered and his brain worked feverishly. This was the third time she had shown up at his protests. Could she possibly be from Alabama? Her accent was mild, but still present and he hadn't realized she was with the media. His expression turned to a thoughtful frown of non-recognition. \n\n\"How disappointing that you don't remember me, perhaps I should remind you of what happened when we last saw each other...?\" The sweet smile was still plastered on her face. \n\n\"Miss Malone I think you may have me mistaken for someone else?\" he leaned close to her ear to snarl the words in a whisper. \"You will only hurt yourself if you continue to stalk me in this manner\"\n\nMolly didn't bother to lower her voice at all, \"Whatever do you mean, reverend Knox?\" she painted a picture of pure innocence across her face making him lick his lips and fidget with his tie. Spying Jimmy hovering at the edge of the crowd Knox shifted the focus away from himself.\n\n\"There's the whore master!\" he yelled to his followers who all started yelling slogans and jeers in the direction of the club searching for JD Walker and only seeing Jimmy walking towards the entrance. As soon as attention was focused elsewhere Knox moved away from the camera and Molly, toward the waiting vehicles. He spoke briefly to his assistant who nodded and walked back toward her. \n\n\"If you keep harrassing Reverend Knox in this way he will file a restraining order against you and have you arrested the next time you try this,\" the assistant said sternly.\n\n\"I'd like to see that,\" Molly sneered, but satisfied that she had put the fear of God into the reverend she surrendered and turned back towards her van. \n\nJimmy was unable to hear any of the exchange, but had seen the look on Knox's face. She knew something and Jimmy walked back inside to find JD and tell him what he saw. \n\n<center>* * * * *</center>\n\nMolly felt she had just scored a win against Knox. Whether he had recognized her or not, she'd definitely made an impression on him. She had been there when he came to the hospital to see her father after he had tried to take his life. She hadn't truly understood why Knox would show up to see a cop who had been disgraced and discharged from the force so recently. It wasn't until she had investigated it herself that it made it any sense at all. Armed with the small scraps of information she could glean from the last case he had worked she had confronted her father and breaking down again he had told her the whole story.\n\nIt had enraged her that he blamed himself, that he should have known better than to stand up to such a powerful public organization as Knox's ministry, he kept apologizing to her for not looking after her as a father should. He was her only family, her mother having died when she was very young, and she realized at that moment she had all but lost her father as he looked for solace in the bottom of a bottle of whisky. His second attempt on his life hadn't failed and she shook herself out of her reverie and brought herself back to the present.\n\nMolly looked over at Joe as she climbed into the van beside him. \"That felt great! Did you see him run away from me? Let's go edit the hell out of this piece!\"\n\n\"Sure,\" he agreed eagerly, kicking the engine over and driving like a bat out of hell to the station.\n\nThey had been sitting in the dim editing room for some time before Molly was finished with the final product. She knew she was onto something here and was willing to put her own career on the line once again to expose Knox. She admitted the editing was creative, but hell, what news wasn't these days?\n\n\"Wish me luck!\" She said to Joe excitedly and impulsively hugged him.\n\n\"Good luck, gorgeous,\" Joe grinned widely and wrapped his arms around the small sexy woman he wished could be his. He stayed behind to clean up the room and recheck his equipment as she all but bounded out of the door to see the producer of her show who would hopefully take it to the nightly news team.\n\nMolly slowed to a walk remembering all the things that were wrong with this scenario. The past debacle when she had been in that team who had gone up against JD in the past and her now lowly and as yet largely over-looked position within the news room of the station. She took a deep breath and as each issue entered her mind she checked off the answer she had for it.\n\n\"I have that piece for you Mr. Lane,\" Molly said softly to the producer of the early morning news. Lane was an unfortunate name to have in the news room and he was subjected to a variety of Superman jokes the biggest of which was the nickname Lois, though most people said it behind the big man's back. \n\n\"Would you mind watching it with me now? I am sure you could help me polish it up further,\" she said appealing to his ego.\n\n\"Sure kid,\" he turned his large monitor toward her and typing in the location on the server where it was saved, she pressed play and sat back watching it with him in silence until the four minute piece was done.\n\n\"It was short sharp and to the point,\" Lane began, but the way his fingers drummed the desk let her know he wasn't finished thinking. Clicking on the mouse he watched it again before addressing her any further. \"Well, it's certainly a new angle making the good Reverend Knox and his flock appear to be the villains of the piece,\" the fingers still tapping the desk and he twisted his mouth in consideration. \"Tell me exactly what you're thinking,\" he invited her into the conversation he had been having with himself.\n\n\"Well sir,\" She swallowed nervously, \"JD is an ass, but just another pimp in the seedier side of the cities night life. He doesn't seem to be doing anything illegal that anyone can prove. Then we have Knox...\" she paused trying to reign in her personal feelings about the man. \"Knox may not be doing the graffiti and vandalism himself or even whipping up the crowd into a mini riot, but he is behind it. You know those girls are being harassed every day as they try to go to work and feed their families and you know they are too scared to go to the police about it themselves.\"\n\n\"I see,\" Lane said, non-committal way \"Seems you're exaggerating. The harassment so far is religious literature and trying to get them to got ot Church.\n\n\"So far is the key. Look,\" Molly tried again this time with an edge to her voice. \"Each of those men are as bad as the other. They use people to make themselves richer and better than everyone else. Truthfully, neither of them are redeemable in my eyes, but you asked me to cover the story for the five o'clock with something a bit different and this is what I got.\" Molly felt she was losing the battle, but she was trying hard anyway to get her point across. \n\n\"No need to get defensive,\" Lane held his hands up in mock surrender. \"I like it, I am just trying to see your angle fully because both of them have very long arms and if we are going to put ourselves up for a libel suit I want to be damn sure we have a reporter that has done all the leg work on it.\"\n\nMolly's mouth dropped open. Surprised didn't even half cover how she felt. She stammered several times before finally speaking clearly. \"Holy shit, you like it!\" she regained her wits. \"I did the leg work I'll do more if you let me have this one. I'll go interview the girls, I'll even go interview JD again if it will make you happy! Get more film of the graffiti. They seem to put up a new slogan every other day when Walker gets his sign cleaned up.\" She bit at her lip; she knew she was babbling excessively but she couldn't help it.\n\n\"Fine, fine, but I have to run it past the station manager. How creative was the editing? Tell me now, is this in anyway misleading?\" Lane fixed her with a steely stare.\n\n\"I never once said that Knox did anything. I pointed at the actual physical evidence, the graffiti, the extra security and the obvious ex-cons in the flock that could be used to intimidate people. I haven't said that anyone has actually done anything, just shown what is happening down there. The club is under siege and Knox and his flock are the aggressors.\"\n\n\"Alright, I'll take it to the general manager,\" he looked at his watch, \"Go home, but keep your phone close by.\"\n\n\"Yes Sir,\" her smile lit up the room and Lane shook his head and walked her out of his office.\n\nRunning into the equipment room Molly through her arms around Joe, \"We did it!\" \n\n\"He liked it?\" Joe asked. He had been worried about doing the piece she wanted to present rather than just a quick fluff piece about the protest that barely thirty seconds of would actually make the news.\n\n\"Hell yes! Let's go celebrate and I'll tell you all about it!\" She finally let go of him.\n\nIt was early, too early, Joe thought, but heck this was as close as he had ever got to a date with Molly, and he wasn't about to turn it down. \n\n\"Sure let's go, O'Riley's?\" He suggested. \n\n\"Great!\" She agreed. \n\n<center>* * * * *</center>\n\nJD looked up from the lap top at a knock. Before he could answer, the door opened and Miranda came in came in followed by Jimmy.\n\nJD raised a questioning eyebrow at him. \"I'm not really sure what happened\", Jimmy began, but that reporter, the one you spoke to outside,\" he waited for the nod of acknowledgement JD gave him. \n\n\"She just scared the hell out of Knox and he took off,\" Jimmy said with a wicked smile.\n\n\"I doubt it,\" JD shook his head, \"Molly Malone couldn't scare a two year old with a Halloween mask.\"\n\n\"Well something happened to make him leave pretty damn fast,\" Jimmy shrugged, \"Just thought you should know.\"\n\n\"Thanks, but I doubt its anything more than coincidence, Knox rarely shows up at these things himself he probably just didn't want to be recognized,\" JD waved his hand dismissively.\n\n\"Fair enough,\" Jimmy said unconvinced then went back out of the office toward the entrance. <center>* * * * *</center>\n\n\"There's more of them today.\" Miranda's voice spoke through the speakers. \"You might want to come through the back today, JD.\" ",
        "\"That'll be the day I sneak into my own club.\" He replied while taking a sharp right turn next to a bus that was making the same turn. \n\nThe Firebird flew past the nose of the bus narrowly missing the front of it and causing the startled bus driver to slam on his breaks. JD grinned at the sight of the red faced driver shaking his fist at him and put his hand up in a friendly wave. \n\n\"I know, but these newer people are different. The first ones were quiet they. Some of the new freaks are getting more aggressive, they're starting to call the girls and the customer's names. I think there's going to be trouble.\"\n\n\"Then let there be. If they start something it discredits them.\" \n\n\"But someone might get hurt.\" She sighed over the speakers and he immediately recalled how many times she'd sighed, moaned and occasionally screamed in his ear in years they'd known each other. \"The girls are getting nervous.\"\n\n\"Starting tomorrow we bring all the bouncers in every day. We'll have them walk the girls in.\"\n\n\"That's going to be a lot of overtime.\"\n\n\"I know, but it's worth it. Besides,\" he laughed, \"Those freaks from the big easy paid us more money last weekend then we usually make in a month. We have it.\"\n\n\"That was a wild weekend.\" She laughed. \"Haven't seen you pressed into service like that in a long time.\"\n\n\"Or you.\" He smiled, \"It was something seeing you getting into the mix. Hell, there was a point you had one in each end. Never thought I'd see that again.\"\n\n\"Money talks honey and that was a lot of money.\" She laughed, \"Besides they had damn near wore most of the girls out, I had to take it for the team.\"\n\n\"The team appreciates it.\"\n\n\"It was worth seeing you so tired you had to quit.\"\n\n\"Yeah well when you're pouring cold water on your cock to stop it from burning you know you're done. Have to take care of the main thing, you know?\"\n\n\"Speaking of, take care of yourself on the way in JD,\" she paused. \"I know how you feel about people like that and why, so you know, be careful and don't you give them what they want.\"\n\n\"Yes, mom.\"\n\nOver the speaker he heard a loud knock and Miranda said, \"Gotta go JD someone needs me.\"\n\n\"See you in a few, Miranda.\"\n\nThe call ended and the Firebird filled with the heavy sexy beat of Nine Inch Nails \"Closer\"\n\n\"I want to fuck you from the inside!\" he sang along as he took the corner, \"I want to...\" he stopped when he saw the billboard he had replaced three days ago was covered with the words \"Be not lead into temptation\"\n\nJD felt a hot flash of rage flow through him and slowed the car down as he drove towards the club to give himself a minute to let it fade.\n\n\"A dish best served cold.\" He whispered. \n\nWhen he reached the club he saw Miranda wasn't kidding there were at least a dozen more and several of them were younger than the original crowd. Cruising past he noticed the signs were no longer just scripture based, but featured pictures people burning in hell and one with a picture of a woman's face with cold sores and the words \"And will you bring her disease back home to your wife?\"\n\n\"Bet you would if it was free you fucking loser.\" He said, pulling his car alongside the club. \n\nA movement in the side mirror caught his eye and he saw two of them walking towards him and all of them watching. Opening the glove compartment, JD removed the skeleton .45 encased in its holster. Leaning forward in the seat he tucked it into the back of his pants and pulled his shirt over it. He exited the Firebird and looked down at his black snakeskin boots. The tips were steel that he had painted black so it wouldn't gleam and give away what they were made of. \n\n\"Don't give them what they want.\" He told himself before turning to walk around to the front of the club.\n\n\"Hey whoremaster.\" One of the men called out, \"Do you like destroying families?\"\n\nKnowing he shouldn't, but unable to help it, JD stopped and stared at the man who'd spoken. He was dressed in a stained t-shirt and worn jeans. He was on the thinner side and unshaven. JD's eyes narrowed at the sight of the letters FTW tattooed on his neck. He was an ex-con; no doubt another criminal who conveniently found God in prison to try to get early parole.\n\n\"Do you like harassing people?\" JD asked him removing a camel from the pack in his shirt pocket and lighting it. \"Specifically women?\"\n\n\"You ruin those women.\" The man said stepping closer to him. \"They...\"\n\n\"Dance and get paid well for it.\" He replied. \"Nothing wrong with working for a living, maybe you should try it sometime.\"\n\nThe man gave him a dirty look, but before he could speak another one, this one a tall black man built like an ox and also sporting gang tats up and down his arms said, \"You ruin families, how does that make you feel?\"\n\n\"No, if a married man comes that's his business. No one is forced to come here my friend.\" He shrugged \"And if there is a problem with him being here that's between him and his wife, not me or my employees.\"\n\n\"So you don't care that your filthy whores are spreading diseases? We do, we're tired of your sin and....\"\n\n\"Oh, please.\" He'd had enough of this crap, \"You're thugs, not church goers and probably paid to intimidate the people coming here so do yourselves a favor and leave or should I have the police come down here and run your names?\"\n\nThe thin guy started to step forward, but the larger man held him by his arm.\n\n\"We're here for the reverend. He helped us when we needed it, who have you ever helped whoremaster?\"\n\n\"Myself. No one else was going to do it.\"\n\nTaking a drag on the cigarette he blew a smoke ring into the face of the thinner one. \"You want to hang around here fine, I see you harass anyone coming in here I'll have you sent back to your boyfriends in the joint.\"\n\n\"You piece of...\"\n\n\"I thought you Christians were supposed to turn the other cheek?\" JD smiled, \"Or are you as phony as I think you are?\"\n\n\"I...\" Once again the thinner man looked as if he were going to take the bait, but the other one put his arm across his chest and with a phony smile said,\n\n\"God bless you Mr. Walker. There's still time to save your soul.\"\n\n\"Good boy.\" JD nodded, \"Make sure Massa Knox pays you extra for playing a good part.\"\n\nThe man glared at him and JD saw his body tense, but he relaxed and stepped back, making an 'after you' gesture towards the club.\n\nJD walked slowly past him and forced himself not to look over his shoulder. He knew he was right. Knox was bringing in trouble makers to start a fight. He would have to make sure that Jimmy told the bouncers not to swing first and under all circumstances stay within range of the parking lot cameras and get the protestors swinging first. \n\nWhen he reached the entrance several of the original crew was standing there leaning on their signs. \n\n\"You like turning young girls into whores?\"\n\n\"You corrupt the innocent!\"\n\n\"Lust is one of the seven deadly sins!\"\n\nJD stopped and closed his eyes as another voice, a drunken slurred one from long ago, bellowed in his mind, \"You're mother is a sinning whore and I'll beat her sin from you!\" He heard the distinct sound of a belt striking flesh and a child crying out in pain. Opening his eyes, JD stared at the protestors in front of him.\n\n\"John Chapter Eight verse Seven.\" He called out.\n\nWhen they looked at each other, he shook his head disgustedly and spoke in a loud voice.\n\n\"But when they persisted in asking Him, He straightened up, and said to them, He who is without sin among you let him be the first to throw a stone at her. Jesus stopped them with those words. Yet here you are doing the same thing.\" He waved his hand at them, \"No wonder they killed him, no one likes hypocrisy pointed out to them.\"\n\nNone of them said anything, but one of them picked up their sign and tucking it under their arm walked away. \n\n\"Maybe the rest of you should try reading your bible instead of just thumping it.\" He gave a mock bow and turning to the door of the club added, \"And thanks for coming, you're getting me free advertising.\"\n\nJD entered the club looking over his shoulder to make sure none of them attempted to follow them. He grunted in surprise when he walked into a wall. He staggered back and shook his head when he saw the wall was human. Grinning down at him from his six foot six height, Jim laughed, \"Watch out little man.\" \n\nJimmy was bald and wore a gold stud in each ear earning him the nickname-behind his back of course-of Mr. Clean. He was a former wrestler whose career had ended with a bad landing from a top rope that required three operations to completely repair his right knee. In spite of his appearance he was surprisingly good natured, but had love for fighting that made him perfect for his position as the Playgrounds cooler.\n\n\"I won't be so little when I cave in your knee and you're looking up at me.\"\n\n\"The fruitcakes got you riled up JD?\" \n\n\"I...yeah, they're starting to piss me off.\"\n\n\"I think we should bring everyone through the back.\"\n\n\"No.\" JD disagreed, \"If no one enters they'll know there's another way in. Only certain clients use that. All the guys are coming in everyday until this ends.\"\n\n\"Okay.\" Jim crossed his heavily tattooed arms over his barrel chest and JD swore those arms were the size of his thighs. \"And Miranda said not to do anything unless they put their hands on one of the girls.\"\n\n\"Right. I'm going to make a call to a friend. There's more of these asshats everyday, I think we should have a cop here.\"\n\n\"Miranda called, they said no.\"\n\n\"What?\"\n\n\"That's what she said.\"\n\n\"Where is Miranda?\" \n\n\"She's in the back helping two other girls verbally humiliate some rich prick while one of the guys fucks him in the ass.\"\n\n\"A day like any other.\" JD said.\n\nJimmy paused then released a loud laugh and slapped him on the arm so hard he almost knocked him over. \"Life is good, JD!\"\n\n\"Because we make it that way, those assholes?\" he pointed towards the door \"They're the ones people should feel bad for. Living by rules created by some idiot that could care less if they lived or died.\"\n\n\"Hey, man I believe in God.\"\n\n\"That's okay, Jim, everyone has their faults.\"\n\nJD winked and Jimmy laughed, then through a quick punch at his arm. This time JD blocked his arm and moving faster than Jim could react drove the fingers of his right hand at his throat. He stopped with the tips a quarter inch from his windpipe and said, \"Speed kills, big boy.\" He laughed flicking Jimmy in the neck.\n\n\"So do guns.\" Jimmy muttered behind his back as he headed into the main room.\n\nThe club was slow this time of day and the only employees were the bartenders and waitresses bustling about cleaning and setting up the tables and chairs for a large private party that would be held in the far corner stage. \n\nJD crossed the room at an angle and climbing the steps walked across one of the stages. On a whim he took several running steps, and threw himself at the pole. Catching it, he lifted his legs and spun around several times. Holding the pole tightly he grunted with effort and brought his legs up over his head. He remained there, muscles bulging while remaining upside down. Clamping his thighs around the pole he let his arms drop. \n\nHe remained hanging there for several seconds before placing his hands on the floor and flipping onto his feet. He turned at the sound of clapping to see Miranda standing in the doorway that led to the back half of the club. \n\n\"Nice job!\" she laughed, \"Hey we have a bachelorette party tomorrow night, want to perform?\"\n\n\"I'm retired.\" He said, walking towards her.\n\n\"Oh, come on, it would be like the old days! What was one of the songs you used to dance to \"Macho, Macho man! I want to be a Macho Man!\"\n\nMiranda broke into a series of old style disco moves while she sang and he couldn't help laughing at her. \n\n\"Okay, but only if you do it with me.\"\n\n\"I don't have anything those girls want to see.\"'\n\n\"Depends on the girl\" he told her as he walked up to her, \"But I can tell you there isn't a guy out there who wouldn't want what you have.\"\n\nHe wasn't blowing smoke, Miranda was one of the most beautiful women he'd ever had the pleasure of sleeping with. Her smooth mocha skin was flawless and her long black hair-that she paid to be straightened on a regular basis-fell to the small of her back. Miranda was from Cape Verde and her features, especially her dark eyes had an exotic look to them. She was petite, with a pair of perfectly perky little tits with the most delicious looking chocolate colored nipples he'd ever seen. \n\nHer legs were long and powerfully built from years of dancing and her heart shaped ass was hard enough that she could probably crack a walnut with it. Like JD, Miranda had started early, first the hard way, walking the streets for a sadistic pimp after running away from home, but eventually becoming a paid escort through an agency as well as stripping. She had moved to New Orleans where she began working in a brothel and was trained as a dominatrix. \n\nJD had met her when the two of them attended a sex party down in Jacksonville hosted by a wealthy film maker and they were picked to fuck in front of over forty people. After the party he had found her out on the patio and after talking for awhile went back to his room and fucked like animals for the rest of the weekend. JD had traveled to her brothel and watched her in action several times and when he had gotten the loan to open the playground a few years later he flew down and made her an offer that made his accountant piss his pants, but one Miranda couldn't refuse.\n\nAlthough her official title was manager, JD gave her a small percentage of the take in addition to her salary and had given her carte blanche to do whatever she wanted. It was a lot, but paid off when several clubs, including Paddles in New York had tried to woo her from him. The letting her do as she chose, more than the money, was what had kept her with him.\n\nTired of performing like a trick monkey as she put it, Miranda had gone into full control mode. These days a lot of her clients didn't even sleep with her, but rather endured her torments and settled for the honor of cumming on her feet from a hand job or sometimes having to do it themselves.\n\nThat had made it all the more hotter experience to see her toss aside her air of control last weekend and just cut loose and fuck like a wildcat. Not that he didn't get that from her on a fairly regular basis, but watching her with someone else was damn hot.\n\n\"Oh pillow talk before bed?\" She winked, \"Is that foreplay for you?\"\n\n\"I've been told I waggle my tongue pretty well.\"\n\n\"That you do.\" When he reached her, she looked around to see no one was looking and gave him a quick kiss, \"And it will have to wag this morning we have a couple of issues.\"\n\n\"Besides Jehovah's retards out there?\"\n\n\"Them too, we'll talk in your office\"\n\nThey walked the through the doorway and into the back. Miranda was wearing a simple white tank top and short white skirt that was a sexy contrast to her dark skin. As she usually was she was barefoot and JD let his eyes wander up and down her legs as he followed her to his office.\n\nThe back of the club featured a large open area that contained three small stages, two queen's chairs, a pair of stockades and several Saint Andrews crosses along the walls. The space was lined with doors leading to the dozen private rooms that consisted of a bed and a table lined with an arsenal of sex toys and devices. On a good weekend there were times people were waiting for an available room and girl or guy to please them. \n\nThe two rooms at each end of the long space contained he and Miranda's offices. As she went into his and he began to walk in after her he stopped and cocked his head. He could hear someone crying softly from the room to his right and someone else talking in a soothing tone.\n\n\"Hey, what's going on there?\"\n\n\"That's one of the problems.\"\n\nMiranda had walked over and sat in the large plush chair in front of his desk and as he sat behind the desk, she threw her legs up over the arms of the chair, exposing the fact she was wearing nothing under the skirt.\n\n\"That's little distracting.\" \n\n\"Oh,\" she laughed. \"I wasn't thinking.\" She let her leg slip from the chair and sat up.\n\n\"What's going on?\"\n\n\"Two things and....\"\n\n\"Wait.\" He raised his hand, \"Jim said you called our contact and they won't send anyone?\"\n\n\"Nope.\" She shook her head. \"Said they have to sit this one out. Knox is no joke JD, that prick has someone inside.\"\n\n\"How can that be? What's he bribe them with, communion wafers?\"\n\n\"I don't know. What I know is that it's not enough to get them after us, but enough they're hanging back.\"\n\n\"Knox is bringing in thugs. The guys out there aren't church members they're gang bangers.\"\n\n\"Knox had a big prison ministry down in Alabama. Some of his people followed him and he's been teaching Bible studies at Cedar junction for the last four years.\" Miranda explained, \"I think they're legit followers, but wolves amongst the sheep. I'm sure they'll get dirty soon.\" \n\n\"They were trying to egg me on out there.\" He leaned back in the chair. \"There's going to be a fight soon. I told the guys not to hit first.\"\n\n\"Either way that causes press and this won't be the good kind.\" She sat back and put her bare feet on his desk.\n\nJD stared at the pink soles of her feet and despite the seriousness of the situation had the desire to lean over and lick them. That must have shown on his face because Miranda pulled her feet from the desk, \"Really, JD?\"\n\n\"Sex is my vice.\" He grinned.\n\n\"Well if you want to keep that vice paying for itself, pay attention.\"\n\n\"I always pay attention. I'll make a call myself.\"\n\n\"Do it soon we had three appointments cancel this morning. People are getting nervous.\"\n\n\"Three?\"\n\n\"Yes and two already for tomorrow and the strippers take was down twenty percent the last two nights. People are backing off, even the regular crowd that just comes for the front of the club. Knox is getting what he wants.\"\n\n\"I'll put...\"\n\n\"Higgins is already on him, he's drawing blanks so far.\"\n\n\"Tell him we pay him well enough to find Jimmy fucking Hoffa he should be able to dig up some dirt on a sleazy minister.\" \n\n\"Why do you think he's dirty JD? Why don't you think he can be sincere? I'm not saying I believe in his shit, but there are people who are genuine.\"\n\n\"He's...they all are.\" He said softly, \"Everyone of those god touting bible wielding sacks of shit are into something. He's no different. We'll find something on him and back him down.\"\n\n\"And if we don't? JD if this keeps up in a month we may not have half of what we have now. You might have to cut back and if you lose money and can't pay who we pay then we might just lose that little cushion we have and...\"\n\n\"I have Senator Wilson on tape sucking off three black men. I'm sure his wife would love that.\"\n\n\"JD you expose one client they will all leave us. They won't trust us.\" She frowned \"I know you hate people like Knox, but you need to handle this the way you do everything else. Cold and calculated. Now...\"\n\n\"What's the other problems?\" he asked irritably, \"We'll come back to that.\"\n\n\"Tammy. That's who is upset in the other room, she...\"\n\n\"The boyfriend.\"\n\n\"Yeah. He did a number on her and she came here first thing this morning. He tried to follow her, but Jim told him if he set foot in the club he'd break his legs.\"\n\nJD rubbed at his eyes and nodded. \"Send her in.\"\n\n\"You want me to stay?\"\n\n\"No. I'll take care of it.\" He sighed, \"Besides you know the routine.\"\n\n\"Right, no one can know.\" she rolled her eyes. \"Don't worry JD your name is, and always will be, synonymous with asshole.\"\n\n\"Good to hear.\"\n\nMiranda got up and left the room and a moment later there was a soft knock on the door. JD took a deep breath and closing his eyes whispered, \"The past is gone, I can help the present\" opening his eyes he called out, \"Come in\"",
        "The door opened and Tammy came walking in with her head down. Tammy was one of the back room girls who because of her petite build, small tits and childlike features made a lot of money with guys who wanted to play daddy or just lusted for young girls. At twenty one, Tammy looked six years younger and more than suited their tastes without them getting in any trouble.\n\nJD noticed she was limping and saw a huge bruise on her upper thigh just under her shorts. The bruise had the distinct shape of a boot and he felt his temple begin to throb. When Tammy reached the desk she lifted her head. JD caught a glimpse of her face and turned away. But even that quick glance burned into his mind. The left eye completely swollen shut, the split lips and the purple finger marks around her neck. \n\n\"JD,...I....I need your help.\".\n\nHe looked down at his hands on the desk and saw them trembling. \n\n\"Miranda told me.\" He said and reaching into his drawer removed a bottle of Cuervo and two shot glasses.\n\nHe kept his eyes averted from her until he poured a shot and downed it. He poured a second one and held it out to her.\n\n\"No. I...I feel sick.\"\n\nJD took the second shot and felt the tequila burn a trail down his throat and into his roiling insides. Carefully putting the glass down he looked at her, his gaze meeting her open blue eye. The fact she looked so young made her visage even harder to take, but when he spoke he was calm.\n\n\"Brad?\"\n\n\"Y...yeah, he....I wouldn't give him the money I made last night and he...\"\n\n\"Tammy this isn't the first time.\"\n\n\"I know, but...\"\n\n\"I told you to get away from him, we all did.\"\n\n\"I....he promised he'd be good to me!\" She began sobbing and he went back to staring at the desk. \"And he was, but he....went out and got some coke then he wanted more, I said no and he started hitting me and wouldn't stop...I...begged and....\"\n\n\"Please!\" A woman's voice echoed in his head, \"Please stop! Please not in front of him!\"\n\n\"Stop.\" He said softly. \"I can see what he did to you.\"\n\n\"JD I...I left Colorado to come here. I...I don't have any family and nowhere to go!\"\n\n\"Tammy you make what; six, seven hundred a night here right?\"\n\n\"I...I do, but...\"\n\n\"And work four nights a week. Where the hell does your money go?\"\n\n\"He takes it! E...even if I found a place to go he'll find me! He...he's crazy JD he gets coked up and he....he'll kill me if I run.\"\n\n\"Tammy I tell you and all the people who work here that we're family.\" He forced himself to look into her ruined face. \"We're pretty dysfunctional, but what family isn't? And in this family I'm the big brother. I can make your life hell when I need to, but if I can there's nothing I won't do to help.\"\n\n\"I...have nowhere to go and I'm scared.\"\n\nSliding his drawer open, JD shuffled the contents around until he found a business card. Grabbing a pen he wrote the number and name of a friend on it and slid it over to her.\n\n\"This is a friend of mine. He owns two apartment complexes downtown he always has a few open for friends who need favors. You tell him I told you to call and that you work for me. You'll have a place by tomorrow.\"\n\n\"Those places are expensive.\"\n\n\"Without your drug addled loser boyfriend stealing from you, you can afford it.\"\n\n\"But don't they want...\"\n\n\"Rent is two grand a month and he looks for first and security. I will pay that for you to get you set up.\"\n\n\"I...I'll pay you back! I promise JD I'll...\"\n\n\"You will pay me back, but not in cash.\"\n\n\"You want me to you know,\" she grinned through her split lips, \"Take care of you?\"\n\n\"No.\" he shook his head. \"We have rules here, remember? Before we get to how you pay me back, you can't work looking like that.\"\n\n\"I could wear a mask! I could...\"\n\n\"No you'll take a couple of weeks off and get your place set up and get your shit together.\"\n\n\"I can't afford that!\"\n\n\"I'll look at what you average a week and pay you that upfront. That you'll pay me back by working an extra night for a month, fair?\"\n\n\"Yes.., thank you!\"\n\n\"Now for your repayment of the apartment and the money to get into it. I want three things from you.\"\n\n\"Name them.\"\n\n\"Putting his fist up, he extended one finger in the air. First this is a chance for a new start. I am happy to help you Tammy, if you help you. If I hear you've even been in the same room with that piece of shit, I'll get you thrown out of that apartment and fire you, understood?\"\n\n\"Yes sir.\" She nodded, \"I promise, but he...\"\n\n\"Two,\" he added a finger in the air. \"You tell no one what I did for you. This is between us. I get people coming to me with sob stories looking for loans I'll know where it came from. At that point I won't fire you, but you'll spend two weeks working for Joe in the rape fantasy room and I'll tell them you have no limits, got it.\"\n\nHer good eye widened and she nodded, \"Y...yes sir.\"\n\n\"Three, and again, between us.\" He leaned forward and taking her chin in his hand whispered, \"You call Brad and tell him that you're sorry and to come back home tonight.\"\n\n\"You want me to...\"\n\n\"You heard me; you tell him you'll be there tonight after eight.\"\n\n\"Are you...going to hurt him?\"\n\n\"He cost me four grand and one of my best girls out of commission for two weeks.\" He smiled coldly. \"That debt needs to be paid, now doesn't it?\"\n\n\"Yeah, but...\"\n\n\"Tammy you're afraid he will come after you right?\"\n\n\"Yes.\" She nodded again.\n\n\"Well then big brother will just have to persuade him otherwise, no?\"\n\nTammy stood up and leaning over the desk she hugged him, then kissing his cheek she whispered, \"Thank you so much JD! N...No one's ever stuck up for me like this before; most people don't have anyone to do that for them.\"\n\nReturning the hug, JD thought that she was right, in fact he remembered one woman in particular who had no one to protect her, although she should have.. \n\n<center>* * * * *</center>\n\n\"Tammy looked pretty relieved. \" Miranda said, \"I had Charles take her home to pack in case that piece of shit shows up, told him to snap his arm backwards if he does.\"\n\n\"It's all set.\" He told her, with a disgusted grunt he pointed to the columns of numbers on the spreadsheet before him. \"You're right, last couple of nights have been shit.\"\n\n\"And the three no shows today were five hundred a session. Not only are we out our half, but the girls aren't making anything for being here.\"\n\n\"Give them a hundred a piece anyway and ask them if they want to dance tonight to make a little extra.\"\n\n\"There's not many people coming JD, that will piss off the straight up dancers.\"\n\n\"Fine one fifty then.\"\n\n\"Don't just throw money away.\"\n\n\"I can't have them get pissed and leave.\" He pointed out. \"We've done well for years, we can survive giving them something for nothing.\"\n\n\"Thought you never did something for nothing?\"\n\n\"I'm getting something. Getting to keep the best girls in town right where they are.\"\n\n\"You know, what's funny? I checked with all the bouncers and none of them got a message to take care of Brad.\"\n\n\"Maybe I used an outside source. The dick has been here he knows all the bouncers.\"\n\n\"Maybe.\" She sat down across from him. \"JD, don't do it.\"\n\n\"What do you need Miranda?\"\n\nShe frowned at him then said, \"We have another problem with an appointment.\"\n\n\"They cancel?\"\n\n\"No, they're here, its Bill Teves.\"\n\n\"Bill.\" JD tapped the desk, \"Let's see, investor, fifties, if I recall he is a voyeur, likes to watch.\" He paused then snapped his fingers, \"He likes interracial, black girl, white guy.\"\n\n\"Right, well he's here and we have a problem.\"\n\n\"What's that?\"\n\n\"Amanda called out she...she's afraid of the goons outside\"\n\n\"Oh, come on! They haven't done anything to anyone.\"\n\n\"Amanda is young and she hasn't been doing this long. I told her for today it was okay, what am I going to say? I told her we'll let her come in through the back until this...\"\n\n\"Then every girl will want that, we can't...\"\n\n\"Forget about that for now. Problem is we have a client in the back looking for some white on black and there are no black girls here!\"\n\nJD smirked, \"Um, you look in the mirror lately?\"\n\n\"You want me to do it?\"\n\n\"I know you don't like to get involved to that degree anymore, but we can't lose him. We screw him over maybe he doesn't come back. Bill comes to the regular side of things and brings high rollers with him all the time.\"\n\n\"JD, it's not about the sex. It's about me being the manager of this club. I can't just let one of the working guys fuck me. Think about that.\"\n\nHe rolled his eyes, she was right. Any guy that got to fuck Miranda would be the envy of everyone else and it would start rumors of favorites. But they couldn't piss Bill off either. Looking at Miranda he let his eyes rest on her chest. She wasn't wearing a bra and her dark nipples were showing through the tank top. He envisioned her bare breasts and his cock began to stir. Grinning he stood up and put his hand out to her, \"Let's go.\"\n\n\"Let's go where?\" she glanced at his crotch where his rapidly stiffening cock was fighting to be released. \"You want to fuck?\"\n\n\"Yup and while we're at it, why not make a customer very happy?\"\n\n\"JD, we can't...\"\n\n\"Why not? I'm the one guy here who can get away with it and it's not like Bill will tell anyone anyway. He smiled wickedly, \"Come on Miranda, let's turn back the clock and have some fun and make some money.\"\n\n\"Okay.\" She stood up and headed for the door. Stopping with her hand on the doorknob, she looked over her shoulder. \"I'm warning you, client or no client you go near my ass with that thing and I'll kick you in the nuts.\"\n\n\"I love it when you talk dirty!\"\n\n<center>* * * * *</center>\n\nJD followed Miranda down the hall, his cock throbbing and all problems forgotten. Even after all his years fucking for both money and pleasure the thrill of exhibitionism still got him hotter than anything else. Miranda stopped at the door, waiting for him. At that moment a door opened to his right and a middle aged woman with blonde hair crawled out on her hands and knees. She was naked except for the dog collar around her neck.\n\nThe leash attached to it led back to Julie who was dressed in a gray skirt with a matching blazer and a white blouse. Her hair was up and she was wearing glasses. \n\n\"Did I tell you to stop?\" she whipped her hand around and there was a loud crack when the paddle in her hand struck the already swollen red ass of the woman.\n\n\"No ma'am!\" she cried out, \"I...I'm sorry Miss Williams!\"\n\n\"Sorry, that describes you alright; you're a fucking disgrace to this company!\" She dealt her another blow, \"Crawl!\"\n\n\"There...\" she looked up from her knees at JD and Miranda. \"There's other people...\"\n\n\"That's the point of going for a walk you stupid cunt!\" Julie snapped yanking the leash hard enough to pull the woman up on her knees. \"So other people will know how pathetic you are!\"\n\n\"Beyond pathetic.\" Miranda chimed in. \"Look at those saggy tits; you'd think she'd get a lift for them.\"\n\n\"And that's the worst die job I've ever seen.\" JD grunted, \"if you're going to be half assed about it just let the gray grow in, you have the body of a hag why does the hair matter?'\n\n\"Look at that!\" Julie sighed, \"You've disgusted two of our clients!\"\n\n\"I...I'm so sorry!\" she moaned cringing away from the paddle.\n\n\"Make it up to them!\" Julie snapped. \n\nPointing at Miranda she tugged on her skirt. With a wink, Miranda stepped up to the woman, put her foot on her shoulder and hiked up her skirt. Grabbing the woman's hair, Julie shoved her face between Miranda's thighs.\n\n\"Go ahead suck her pussy! Use that tongue for something besides making excuses!\" \n\nThe woman squealed between Miranda's legs and Julie looked at JD and smiled at him, \"Office humiliation fantasies.\" She shrugged, \"Takes all kinds.\"\n\nLooking back down she asked, \"Miss Jacobs how is she doing on your pussy.\"\n\n\"Lousy she hasn't even made me moan. I'm afraid I may take my business elsewhere after this sorry performance.\"\n\n\"You sorry slut!\" Julie yanked the leash back pulling the woman away from Miranda. \"You just cost us more business!\"\n\n\"Please....please...I promise I'll....\" \n\n\"What, do better?\" she sighed, \"You have one more chance. I'm walking you down to the conference room where the board members are and we'll see if you can make them happy.\"\n\n\"I...I will!\"\n\n\"You know what a merry go round is whore?\"\n\n\"N...No Miss Williams.\"\n\n\"Well, you're going to learn, now crawl!\"\n\nShe pushed her down to her hands and knees and dealt her several hard sharp blows. There were tears flowing down the woman's face, but her nipples were rock hard and as she began crawling on all fours JD good see how wet her pussy was.\n\nAs Julie led her down the hallway he could hear her going on, \n\n\"And if one drop of cum dribbles from your mouth you pig they'll all take you in that used asshole of yours. You're an embarrassment to this company!\"\n\n\"Office humiliation.\" JD shook his head, \"Interesting.\"\n\n\"Glad you saw that.\" Miranda smirked, \"Because you forgot the fact that Bill likes the lady of color to be the top.\"\n\n\"What?\"\n\n\"Get ready to get on your knees, bitch.\" Miranda laughed, then after a brief knock on the door, entered.\n\nJD followed her into the room which like all the rooms was lit by several electric candles, that bathed the space in a soft flickering glow. There was a large bed in the center covered only with a black sheet and sitting in a large comfortable armchair was Bill Teves. He was in his early fifties with the short gray hair of a former military man and was sitting in just his boxers. He still maintained a solid build for his age and JD wondered as he always did what the thrill was of only watching and not eventually getting any.\n\nBill looked up when they came in and putting down the glass of red wine, said, \"Is there something wrong?\"\n\n\"What could be wrong Bill?\" Miranda leaned over and kissed his cheek, then straddling his leg sat down on it.\n\nBill's eyes widened when she began rocking back and forth letting him feel her pussy against his leg.\n\n\"Where's Amanda?\"\n\n\"She's a bit under the weather today Bill.\" Miranda ran her long red nails down his chest. \"We were going to get you another girl, but JD and I were talking about how you're one of our best customers and why not give you a special treat?\"\n\n\"Treat?\" he asked, his eyes glued to her chest.\n\n\"Hmm-mm\" she purred, raising her arms over her head, she looked over her shoulder at him \"Well?\"\n\n\"Yes Mistress.\" He said, trying to keep the annoyance out of his voice. \"Allow me.\"\n\nGrabbing the bottom of her shirt he slowly lifted it. He hesitated when it reached her tits, teasing Bill, then pulled it the rest of the way off and tossed it to the side. Bill's eyes widened at the sight of Miranda's perfect tits and she asked, \"I know your pleasure is watching, but would you like to suck on them?\"\n\n\"I...I was raised to think fucking a black woman is dirty.\" He said softly.\n\n\"Really?\" she asked, \"Dog, play with my tits.\"\n\n\"Dog.\" JD repeated.\n\n\"Yes, are you hard of hearing rather than hard where you're supposed to be?\"\n\n\"I'm sorry.\" Leaning over he wrapped his arms around her and cupping her firm tits, began stroking her nipples. \"You're going to pay for this.\" He whispered.\n\n\"So Bill, would you like to be a dirty boy and play with my tits?\"\n\n\"I...I shouldn't.\" his eyes were already glazed over with lust and just seeing the effect Miranda had on him in the sixty seconds they had been in the room JD's cock was aching to break free of his jeans. \n\n\"I won't tell.\" She said, \"Come on baby, suck on my tits, be my bad boy.\"\n\nBill licked his lips and leaned forward. JD lowered his hands and watched as looking like a drowning man going down for the last time, Bill sucked Miranda's nipple into his mouth.\n\n\"Hmm, I like that.\" She sighed, \"You want me to suck on you, my dirty boy?\"\n\nBill looked up from her nipple and shook his head. \"No...I can't do that, I shouldn't do this.\" He swallowed hard and sat back, \"I want to watch JD fuck you.\" He smiled nervously, \"I want to see his cock going into your dirty holes.\"\n\n\"Yeah, you want to see his white dick pounding my black pussy?\"\n\n\"Yes.\"\n\n\"Then that's what you'll get.\"\n\nMiranda slid off his leg and turning to JD snapped, \"Strip dog.\"\n\n\"Yes Mistress.\" \n\nJD peeled his black shirt off and carefully kept the smile from his face when Miranda's eyes lit up at the sight of his powerful torso. Turning to toss the shirt onto the chair in the corner JD got a look at his back in the long mirror that covered almost the entire wall next to the bed. Taking up the center of his back was a crow with its wings wrapped around the Satanic wheel its head peering over it of it. The tattoo took up most of his back and the blue black ink seemed to glow in the candlelight,\n\nHe unsnapped his jeans and fighting the urge to slowly take his pants down and tease her, JD grabbed the sides and shoved his jeans as well as his underwear down allowing his cock to spring free.\n\nWith her back to Bill, Miranda looked down at his long thick cock and licked her lips Looking up at him she mouthed, \"Goddamn.\"\n\nJD maintained his part and asked, \"Is my mistress pleased?\"\n\n\"Just because you have a big cock doesn't mean you can use it.\" \n\n\"I hope to prove I can,\" he told her kicking his shoes off and working his feet from out of the jeans. \n\n\"Damn, JD\" Bill said, \"I guess those aren't stories.\" He looked at Miranda, \"That cock is going to look good in you.\"\n\n\"If he can keep it hard.\" She quipped. \"On your knees.\"\n\nJD obediently sank to the floor and when she put her back to him, unzipped her skirt and pulled it down, leaving her beautiful ass inches from his face. \n\n\"Kiss her ass.\" Bill said.\n\n\"Hey, I...\"\n\n\"Do as he says dog!\" Turning around, Miranda leaned over and slapped his cock hard enough to cause the breath to hiss from between his teeth. \"You're here for his pleasure; you sure as hell won't be pleasing me.\"\n\n\"Sorry Mistress.\" \n\nHe waited for her to turn around, but instead she sat on the edge of the bed and stuck her foot out, \"I think you should lick my feet like the dog you are.\" She glanced at Bill, \"What do you say, my dirty boy, you want to see this dog suck on my toes?\"\n\n\"Yes, make him humiliate himself.\" Bill smiled, \"I want to see it.\"\n\n\"He will suffer I'm sure.\" Miranda winked at JD.\n\nHe took her ankle in his hands and placing his tongue on her heel ran it up the length of her foot. When he reached the top he sucked her toes into his mouth and had to stifle a moan when she wiggled them in her mouth. \n\n\"That's it dog, clean my feet, use that tongue for something better than trying to talk.\"\n\nJD began licking her foot from heel to toe rapidly and Bill said, \"Look at him licking your dirty feet and listening to a black whore.\"\n\nMiranda stiffened and looking up at her he whispered, \"Just a game.\"\n\nMiranda relaxed, \"That's right Bill, no better way to humiliate a white man than to make him lick a black whore's feet is there?\"\n\n\"No.\" he shook his head. \"That's pretty disgusting.\"\n\n\"Want to see something more humiliating?\"\n\n\"I do.\" He nodded, \"Make him even dirtier.\"\n\nPulling her foot from him, Miranda stood up and turning so her hands were resting on the bed, she said, \"Spread my ass open.\"\n\nJD gave her a dirty look, but she raised her eyebrows at him and swearing he was going to bring her home tonight just to pay for this he slid over behind her. Spreading her cheeks wide open he ran his tongue along the inside of her cheek and felt her shudder. He repeated the motion on the other side then began running his tongue up and down the crack of her ass. He heard her catch her breath and she pushed her ass back into his face.\n\n\"Filthy.\" Bill said, \"You are a dirty boy.\"\n\n\"Yes he is, sucking my ass.\" She replied, \"Now stop stalling and shove your tongue in my asshole, dog.\"",
        "JD plunged his tongue into her pink rosebud and smiled when Miranda slipped and moaned. Keeping his tongue rigid he moved his head, fucking her with it. \n\n\"That's right lick my ass you fucking pig.\" She told him. \"Pathetic piece of shit sucking a black ass, wouldn't your daddy be proud?\"\n\n\"I like that.\" Bill clapped his hands, \"Bet his dad would be proud.\"\n\nJD swirled his tongue around her puckered hole trying to be patient and not plunge first his tongue then his cock into her hot pussy. As if reading his mind, Miranda stood up and turning sat on the bed. Putting her feet on his shoulders, Miranda spread her dark lips wide to expose the bright pink inner flesh of her pussy. \n\n\"You like that, Bill?\"\n\n\"It's...I'm not supposed to, but it's beautiful.\"\n\n\"Thank you, too beautiful for this dog to taste?\"\n\n\"No, he should lick it! He should make you come.\"\n\n\"You heard him dog, lick my pussy and try to do a better job than you did on my ass.\"\n\n\"Sorry Mistress.\" He muttered.\n\nPlacing his hands on her firm thighs, JD leaned forward and shoved his tongue deep inside her. Miranda's thighs tensed, but she didn't make a sound as he swirled his tongue inside her collecting a mouth full of her sticky juice. JD sighed into her pussy, allowing himself to enjoy her sweet taste and the scent of her desire. Miranda was breathing hard, worked up more from controlling him than his efforts at this point.\n\n\"I said lick not suck!\" she pulled his hair hard,\n\nJD removed his tongue and flicked it up and down the length of her wet lips. Miranda released a soft moan, \"The clit, dog, has no one ever shown you how to please a woman.\"\n\n\"He's not supposed to please women like you.\" Bill said, \"But he's a pig isn't he?\"\n\n\"Yes he is. One that truly is a dog judging by how he uses his tongue.\"\n\nJD rolled his eyes, but swirled his tongue around her clit before sucking it hard into his mouth. Miranda gasped and looking up he saw she was toying with her nipples. The sight of her rolling them between her fingers caused his now aching cock to twitch and he vowed that once he got inside her he was fucking her hard no matter what she said. \n\n\"Put your fingers inside.\" She demanded, \"Your tongue's not enough.\"\n\nJD roughly shoved two fingers inside her and she moaned when he thrust them in and out slamming them in fast and hard. He sucked her clit faster and when she began to moan softly he slipped a third finger inside her. Miranda lost control and whimpered as he spread her pussy open with his large fingers and sucked hard enough on her swollen button to cause his lips to smack.\n\n\"That's it dog, right there, make me cum! Show me you're worth something!\"\n\nHer hips were rocking and her breaths were ending in a high pitched sound that reminded him of a hiccup. JD was familiar with that sound from their time together and knowing she was right there decided to screw the game and jammed a finger into her ass.\n\n\"Oh fuck!\" Miranda cried out as he caught her off guard. \"I...keep licking!\"\n\nShe cried as her body exploded into orgasm. Her thighs wrapped around his head and her pussy contracted around his fingers. He continued to plunge his fingers into her convulsing pussy and suck her clit. Miranda grabbed his hair and held his head to her quivering flesh as her hips bucked wildly. Even in the throes of orgasm she kept the game up,\n\n\"Keep licking you fucking pig! Lick that pussy! Lick that hot black pussy your daddy told you to never go near! You fucking love it don't you? Look at you obeying a dirty black whore! Making her cum in your face!\"\n\nShe stopped and released her trademark high pitched wail that JD had seen cause an entire orgy to stop and listen to her. Miranda threw her head back and howled as he shoved a second finger in her ass lifting her back off the bed, cried out as her pussy convulsed. JD flinched as a wave of warm sticky fluid squirted around his fingers and into his face. \n\nHe pulled his head back and thrust his fingers inside her hard, turning his hand over, he curled his fingers and with a scream that echoed throughout the room, Miranda's hips thrust into him and another stream of cum exploded around his fingers and splattered his face.\n\n\"Holy shit!\" Bill exclaimed.\n\nMiranda's body relaxed and as she sat there trying to catch her breath, JD stood up, his cock pointing at her sopping pussy.\n\n\"Would my mistress like me to fuck her now?\"\n\n\"Suck his cock.\" Bill said, \"I want to see you take that big white dick in your face.\n\n\"You heard the... ow!\" JD cried out when Miranda grabbed his cock at the base and squeezed hard. \n\n\"Know your place dog!\"\n\nShe pumped his cock slowly and JD noticed her fingers weren't able to completely wrap around his thick shaft. Despite his girth, Miranda opened wide and took his cock more than half way down. She held him there looking up at him and began to slowly bob her head.\n\n\"That looks good.\" Bill told her, while pulling his boxers over his hips and grabbing his hard cock. \"Take him deeper.\"\n\nMiranda opened wider and shoved her mouth down his cock until she felt her lips at the base of his shaft.\n\n\"Fuck.\" JD groaned, there were only handful of women that could deep throat him and he moaned softly when she slipped her tongue out to lick his balls.\n\n\"Look at that!\" Bill was stroking his cock faster. \n\n\"Miranda shook her head back and forth, then sliding her lips up to the head of his cock paused then with a wink started sucking his cock as if it were the last one she'd ever taste. She was taking him all the way each time and was making gagging noises as she reached the base. Her eyes were starting to water and she was drooling on his cock then loudly slurping it back up.\n\n\"Damn she likes that cock and you like it don't you, JD?\"\n\n\"I do.\" He said truthfully.\n\n:\"You shouldn't be letting her blow you, but you are, aren't you?\"\n\n\"Yes.\" He nodded wondering if Bill was going to let her suck him off.\n\nThat question was answered moments later.\n\n\"Fuck her!\" he moaned his hand rapidly sliding up and down his dripping cock. \"Let him fuck you! Let him stick that big white dick in that black snatch!\"\n\nMiranda stood up and leaning forward put her hands on Bills thighs. His eyes widened as she lifted her ass in the air and getting behind her JD drove his massive cock into her in one long thrust.\n\n\"Yeah, give me that fucking cock!\" she cried out, \"Fuck me, fuck my dirty pussy!\"\n\nJD shook his head to clear the sweat from his eyes and squeezing her hips hard enough for her to cry out he stared slamming her so hard his balls were striking her pussy. Miranda was yelping in Bill's face and grabbing his head she pulled his face to her tit. This time Bill didn't fight her and sucked on her nipple while JD hammered away at her dripping pussy. She was so wet he could feel her dripping down his thighs and his cock was making a moist sucking sound each time he withdrew it and drove it back in balls deep.\n\n\"Look at him fucking you!\" Bill moaned around her nipple, \"Look at that big cock going into that nasty pussy!\"\n\n\"You better cum dog!\" she called out, \"I'm taking it away from you in two minutes and you won't get off!\"\n\n\"Please Mistress\" he begged her, \"Please let me cum!\"\n\n\"Fuck me like a man and maybe you will!\"\n\nJD shifted his hands to up her back and pushing down on her put his foot up on the arm of the chair and fucked her as hard as he could. She squealed as he relentlessly pounded her pussy and leaning back into the chair, Bill moaned, \"Oh, keep fucking her!\" his hand was blurring up and down his cock, \"You're so fucking dirty, you....oh!\"\n\nBill cried out in surprise and pleasure when lowering her head in his lap, Miranda took his cock into her mouth. She squealed around it as JD continued to pound her, but was still bobbing her head and easily deep throating him. The vision of Miranda sucking a cock while he fucked her caused him to lose control, using all the power in his hips he fucked her savagely causing her to scream around Bill's cock.\n\n\"Oh my god I...I cumming!\" Bill cried out, \"Oh...right in her dirty mouth!\"\n\nMiranda gurgled as she took Bills load in her mouth while getting pounded with JD's huge cock. Unable to hold back anymore, JD whipped his cock out. As soon as he did, Miranda straightened up, \"Hold it!\" she snapped.\n\nShe stepped back and sitting on the bed spread her legs open and opening her pussy said, \"Right there paint that black pussy!\"\n\nJD released his cock and watched as a long stream of cum splattered against the top of her pussy and oozed down through her lips. He pumped his cock furiously sending spurt after spurt of cum into her dark flesh, painting her already oozing pussy. Miranda opened her mouth and let Bill's cum drool down her chin and onto her tits. \n\n\"Goddamn.\" Bill and JD said in unison.\n\nJD sighed as he wrung the last drops from his spent cock and slowly sank to his knees. Taking Miranda's foot in his hand he kissed the top of it.\n\n\"Thank you Mistress.\"\n\n\"Don't thank me yet.\" She told him. \"We're not done.\"\n\n\"We're not?\"\n\n\"No,\" Bill said, leaning forward, \"This is my favorite part.\"\n\n\"What is?\" JD asked staring up at Miranda who was smirking.\n\nGetting up from the chair, Bill sat on the bed next to Miranda and cupping her tit licked a trail of his cum from it. \"The dirty boys always have to clean up our mess.\" He sucked another glob of cum from her nipple and looking down at him she gestured towards the white mess running from her pussy to her asshole,\n\n\"You heard the man, dog, clean up your mess.\"\n\n<center>* * * * *</center>\n\nJD made his way back to his office eventually. He knew he needed to look over the figures again and sort out how they would manage through this current campaign against his club. As his temper swelled again, the image of Tammy's face appeared in his mind. Yeah he looked forward to meeting that asshole tonight. People often under-estimated JD because he wasn't over six foot and built like a tank, but he had trained with some of the best, he was fast, mean and generally speaking he never came out second best in a fight.\n\nThe phone on his desk rang and he didn't recognize the number, so he picked it up cautiously. Very few people had his direct number all business calls came though the bar as a rule.\n\n\"JD,\" he said abruptly into the hand piece.\n\n\"It's Lois,\" a disembodied voice and it took JD a few moments to recognize the nick of the deep baritone. \"Listen it's just after six why don't you do yourself a favor and turn on news, we're running a story on you,\"\n\n\"Fuck, what now! That fucking little bitch that was back here again today, I'll bury her this time. So deep she will never dig her way out.\"\n\n\"I think you'll be pleasantly surprised,\" the deep voice chuckled and hung up.\n\n\"Fuck, that's all I need right now,\" JD raked his fingers though his disheveled hair and picking up the remote from the desk, turned the TV on and found channel Twelve.\n\nLeaning back in his chair JD sat through an interview with a local woman bitching about the poor condition Storrow Drive. \"What's this,\" he muttered, \"A segue of Molly's latest pothole extravaganza?\"\n\nThe station cut to commercial and he sat wondering if Lois yanking his chain. He was ready to shut it off, but at that moment the news came back and there was Malone standing the Playground's parking confronting Knox, who was looking around evasively as she spoke. His interest peaked; he leaned forward and listened as Malone described the scene. Knox obviously nervous, fiddling with his tie and the smile he gave Malone was an uncomfortable one. JD's eyes locked onto the image of Knox wishing he could hear what Malone had actually asked rather than just her voice over questioning whether or not Knox and his protestors tactics were just as, if not more amoral, than what was going on in the club itself.\n\nAs Malone wrapped up the segment saying that Knox had even less to say on the subject than the infamous JD Walker had. Recalling Jimmy trying to tell him Malone had looked as if she had gotten under Knox's skin he picked up the phone and dialed the extension to the bar. \n\n\"What's up, boss?\" Jimmy asked in that annoyingly chipper voice, as he had many times JD wondered how a guy that busted heads for a living could always be in such a good mood.\n\n\"Hey Jimmy, you know the first couple of days those fruits were out there?\"\n\n\"Yeah, what about it?\"\n\n\"When I blew off that bitchy reporter she looked like she was heading for Knox, you went over there didn't you? You came and told me about it?\"\n\n\"I was listening to the crap he was slinging and she came over and got right in his face.\"\n\n\"Really?\" JD leaned forward in the chair, \"What she says?\"\n\n\"Couldn't hear her, but Knox got about as white as a black man could. He walked away and one of his suits got in her way, probably threatened her.\"\n\n\"Thanks Jimmy.\" JD hung up and tapping his desk wondered if he could find out where Malone spent her time when she wasn't stalking people. His entire life had been spent on the edge of trouble and he'd danced with many devils' to stay out of it, maybe it was time he bought Molly Malone a drink and felt her out. He grinned knowing damn well she'd love him to feel her up. Probably be the thrill of her life, she looked like she wouldn't know a good time if it bit her in her proper little ass.\n\n<center>* * * * *</center>\n\nMolly had become tipsy quickly, no surprise seeing as she was drinking on an all but empty stomach. Last night had been a rough one filled with visions of a past she hoped to leave far behind her. Sadly they still haunted the only place left where they had any sort of power, her dreams. Too upset to eat she'd skipped breakfast and only nibbled at her lunch. \n\nSeeing her laughing and obviously enjoying herself had brought more than a few fellow newsies to their table and Joe felt uncomfortable watching them hit on her.\n\n\"We should really go grab something to eat,\" Joe had reached out to take her hand grabbing her attention. \"I think any more to drink after skipping lunch is probably a bad idea,\" he frowned at her. \n\nMolly's eyes seemed to focus momentarily and she looked down at her hand. She seemed to sober up and after a long moment nodded. \"You're right, nothing worse than doing something stupid or embarrassing in front of the people you have to work with. Let's go,\" she put on a bright smile, but when she got to her feet she staggered slightly.\n\nJoe offered her his arm and together they left the bar. \"Where do you want to eat?\" He asked cheerfully.\n\n\"Actually Joe, would you mind if I just grabbed a cab and went home? Those couple of glasses of wine went to my head and I just want to sleep now,\" she gave him a lop-sided smile.\n\n\"I guess,\" Joe tried to hide his disappointment.\n\n\"Thanks, you're the best,\" Molly hugged him, ignoring the tone of his voice. She could never have a fling with someone she worked with. She rarely dated at all. She knew in her heart she was damaged goods and a nice guy like Joe deserved better than her. She struggled to free herself from his strong arms when suddenly he was kissing her. In shock she pulled her head back with a gasp and saw the disappointment etched across his face.\n\n\"That was some goodnight kiss,\" she tried to laugh off the moment as he released her from his arms. \"We'll catch up in the morning. I still can't believe they are going to show our piece. If I wasn't so tired I would be dancing in joy.\" She turned quickly, hailing a passing cab and leaving Joe on the footpath looking lost and alone.\n\nWhile not drunk she had consumed enough alcohol to fill her with self-loathing, why couldn't she just be a normal girl who could fall for a nice guy like Joe. Why did she feel the need to seek out assholes that would abuse and humiliate her? She had denied herself for so long, playing the good girl and sweet na\u00efve reporter for all those men that she worked with.\n\nThe look of disappointment on Joe's face brought back all those old memories, the humiliation, the devastation of her past. She knew she had denied herself for far too long this time and the need welled up inside her slightly fogged brain. She craved sex with someone who knew how to truly take a woman and satisfy the dark side of her personality.\n\nLooking at her watch and seeing that it was still reasonably early, spoke to the driver, \"Take me to Roxbury.\" The driver frowned into the rearview mirror at her, \"It's a bit rough down there at night.\"\n\n\"I'm meeting my brother's I will be just fine,\" Molly smiled back into the mirror at him. The drive took no time at all and she pointed out a bar that looked like it had some life in it and asked him to drop her there. She pulled her hair out of the tight clip and shook her fingers through it giving it a messy tousled look with the natural waves. It helped her to hide behind it if it was left to fall over her eyes and obscure her face. \n\nShe pulled the skirt up higher rolling the top over and unbuttoned her blouse revealing the small, but adequate, cleavage that was enhanced by the push up bra she wore. Satisfied that she looked like a slut without being mistaken for a cheap whore she walked into the bar.\n\nShe took a seat at the bar with the too-loud music and colorful crowd smiling at the glances she received. She sized up some of the interested men, some she disregarded immediately, she wanted someone powerfully built and she was good at spotting those that had real muscle even when it was hidden behind a suit.\n\nMany of the men who approach her seemed to have consumed a lot of liquid courage before having the balls to do so. She laughed; none of them had the self-assuredness and that certain spark she looked for. Ordering another drink, Molly smiled as she shot down yet another guy before accepting her drink and chatting briefly with the friendly bartender.\n\nAnother man approached her and she realized after flirting lightly that her excuses not to dance or invite them to sit with her were becoming weaker as her need grew, but she was also enjoying attention she would not normally command in her regular daily life. Dressed as she was, men actually spoke to her partially revealed breasts rather than looking at her face and the small grin that curled her lips.\n\nMolly became aware of a man at the other end of the bar. He seemed quiet and sat apart from the crowd. His eyes were dark and his body language radiated anger or at the least irritation anytime she caught him glancing in her direction. She found it disconcerting that he was watching her flirt, knowing that she was getting a kick out of the sloppy compliments before turning the men away with feeble excuses. Molly kept track of the number of drinks she had, enjoying the buzz she felt, but not letting it get too much. The bartender approached to see if she wanted another drink and she turned to flirt with him again.\n\nA deep voice sounded from behind Molly as she opened her mouth to order another drink and she turned to look up at the owner as he spoke in a commanding tone, \"Don't you think you've had enough?\"\n\nMolly's jaw dropped open, she was speechless as she looked into the dark foreboding eyes of the man who had been sitting at the other end of the bar practically glaring at her all night. \"I... uh...\" she struggled to find some words, but was caught between indignation and her own desire for someone just like him. \n\nHe was standing so close she could feel the heat from his body. Not wanting to appear easy, she liked men who could command her if they had to, she turned away from him without a word to speak with the bartender, but he had gone to serve another customer leaving her a glass of chilled water.\n\nThe man growled as she sipped her water, \"I'm not one of the men you can flirt with here and then turn away when your little game gets serious.\" He seethed at her dismissal of him, \"You, little slut. Do you need to be taught a lesson for all your teasing,\" a smirk touched his lips; he was just the man to give her the lesson she needed. ",
        "\"Is that right,\" the words issued a challenge, but her voice had dropped into a husky inviting tone. The heat from his much too close body was reflected in his dark, smoldering gaze. Averting her face from that gaze, she sipped once again at the chilled water.\n\n\"You've teased the boy's long enough little girl. I have to admit you're pretty good at it, but I think it's time you were put in your place. It's time to follow through little girl, it's been interesting to watch I will admit, but now it's time to deal with someone who won't take your feeble excuses and denials.\" He moved even closer and bent to her ear. \"Admit you want it. We both know you want it, go ahead, tell me what a slut you are.\" He moved to stand beside her scowling with an intensity that made her skin flush. \n\nHe said nothing more, putting his hand on her arm and propelling her with him out of the bar down and the street away from the club. He walked so fast Molly practically had to run to keep up and any protest she had was weak and breathless. To her secret pleasure he pulled her into a dark, but relatively clean alleyway and giving him what they both wanted she played the game, attempting to pull away from him only to find his grip increase. He pushed her to the end of the alley, effectively blocking her path and unzipped his pants pulling out a rapidly hardening cock of impressive proportion.\n\n\"Now slut, let's see if you're as good as you advertise,\" he growled at her. \"You've spent all night playing with men's cocks with your flirting; I bet all you've had is little boy cocks, now let's see how you handle the real thing.\" His free hand moved to her shoulder, forcing her to her knees as he commanded, \"Suck the cock you came out tonight looking for. The cock of someone who could handle you and not put up with your bullshit. Everyone in that bar could see what you wanted they just weren't man enough to give it to you.\"\n\n\"What makes you think this is what I need,\" Molly said through gritted teeth as she glared at him, the alcohol in her system making her sound braver than she felt; she had taken his cock in her hand as she spoke. She had never been treated like this before by anyone and though she was frightened a little by this angry-seeming man she also felt a strong pull towards him and his controlling attitude, this was what she needed, this was what she secretly craved; a man who would force her until she admitted her desires.\n\nThe man wrapped his hand in her long hair and yanked her head back and she found herself looking up into his dark heated gaze unable to look away. She stifled her whimper of pain, unwilling to give him the satisfaction of subduing her just yet, she was enjoying playing this little game too much, a glare of indignation came into her eyes. She moved a little as she became more aware of the throbbing cock still held within one hand and feeling the heat within her pussy growing and making it more difficult to hold the sense of outrage she was trying to show in her face.\n\nHe smiled confidently and said slowly, \"I know this is what you want and what you need and I know what you came looking for tonight. This,\" With his hand still wrapped tightly in her hair he moved her face forcefully forward. \"Suck it,\" he growled. Molly found herself entering a whole different reality. Amazingly turned on, she didn't kiss, lick or tease his cock, instead she opened wide and took as much of his sizable cock as she could into her mouth. Holding him between her lips she fluttered her tongue up and down the underside of his shaft while her hands slowly wandered over his thighs and around to his ass.\n\nShe dug her nails into his ass and pulled him forward, swallowing hard and driving his cock past her gag reflex. Finally hearing him moan she became confident she could take back a little of the control she had allowed him to so arrogantly enforce over her. Pulling her head back slightly she brought her hands back to the front and undid the button still holding his pants in place as she moved up and down his cock, teasing with her tongue and firm, sucking lips. She ran her nails up over his torso to his chest not scratching deeply, but just enough to titillate.\n\nI'll show him how a real slut sucks, she thought, testing his cock with her tongue as she sucked for the better reactions. She swirled her tongue around the head before pushing it up into the roof of her mouth pressing it firmly before swallowing hard around him once again. She could feel his knees give slightly as another moan escaped his lips. She rolled her hips, feeling the pain of the badly maintained surface beneath her knees as she began to increase her speed. She could sense his impending orgasm and in her mind she saw the memories of a past so similar that she smiled and to remind him of just who had who by the balls, Molly bit down, not hard enough to wound, but hard enough to stop the impending orgasm and earn her his disapproval.\n\nThe man barely made a sound and yanked her upright by the hair. Roughly pulling the small straps of the dress from her shoulders and exposing her breasts, he pushed her back against the wall. Finding her nipples he pinched them hard between his fingers and began to twist cruelly as she tried to stifle her yelps of pain. \n\nHe leaned in so their faces were mere inches apart, seeing the fear re-enter her eyes briefly before the hot slut reappeared. \"Stupid little cunt. You think you're going to decide when I cum? You had your fun in the club, batting your eyes and slutting around, but out here it's my game, I can see how much of a cock whore you are\" his words rumbled from him, his breathing labored. \n\nHe let go of one breast and shoved the hand between her legs as she yelped again, \"You love this, you want this, you need a man who can see you for what you truly are!\" His voice had risen as he spoke.\n\nShe watched his lips as he spoke, wishing he would kiss her, the whole surreal scene was turning her on incredibly. The pain in her nipples along with the dark alley and strange man, all excited her in the way she craved. She knew at that moment she wanted nothing more than for him to fuck her hard right then and there. He leaned in, pinning her body with his; he moved his cheek against hers, his lips close to her ear and spoke in a low whispered growl, \"Beg me to fuck you.\"\n\nShe saw the confident smirk on his face and let out a groan of frustration while locking her eyes to his, \"Talks cheap, just fuck me.\" She knew she was baiting him, but she couldn't help it, like a masochist she pushed men like this to greater heights of debauchery on purpose.\n\nPutting his hand flat between her breasts he held her in place against the wall as his other hand still caught between her legs took hold of the lacy fabric and ripped it from her body. She let out a surprised squeal, but it died just as suddenly as she felt his fingers delve between the lips of her wet cunt, rubbing over her swollen clit giving her even more of the feelings she craved. The intense, overwhelming lust his touch invoked had Molly panting like a bitch in heat. She almost begged at that point, but instead let out a whimpering sigh of pleasure. \n\nJust as she began to relax into the feeling building in her cunt and radiating up into her body he roughly shoved two fingers into her, leaving his thumb free to continue working on her clit. She gasped and trembled, almost coming with just the penetration alone. She rocked her hips forward and drove down onto his hand. He continued to pump into her, spreading his fingers to widen the tight hole and push deeper until he finally bent his fingers seeking out her G-spot. Her legs buckled slightly and she shook with force as wave after wave of orgasm shook her body. She cried out, no longer in control, and his hand move up from where he had pinned her by the chest to cover her mouth.\n\nWatching her as she came down from her high, seeing the flush of the intense orgasm creep up over her chest and face, he held his fingers still within her and let her breathe properly. He moved his free arm around her waist supporting her shaky legs. \"What a fucking cum slut,\" he spat at her.\n\nOnly when he could see her start to fully relax did he remove his fingers and kiss her hard. \"My turn cunt,\" he sneered. Moving her a few steps back down the alley and pushing her over a crate near the fire escape he placed a hand in the middle of her back to hold her down even though he could see her legs were like jelly from the explosive orgasm.\n\nLifting her skirt, his fingers trailed between the cheeks of her ass coating the tiny dark star there with her own cum. She began to protest; weakly struggling under the hand that held her down as he continued to move his hand between her sopping wet cunt and her ass. His finger entered her, slowly testing her as she protested more. Leaning over her body his cock entered her tight cunt with one hard thrust and his hand moved to her mouth again as she cried out. Searching the alley floor around them he found her ripped panties and pulling out of her briefly, retrieved them, balled them and forced them into her mouth. \"I am in control now you fucking nasty cunt and I will give you exactly what you asked for,\" he growled ominously.\n\nHe began to fuck her slowly as his fingers once again sought out her asshole and pumped in and out to the accompaniment of her muffled cries. He was angling his cock to enter and hit her G spot making her squirm and her cunt to continue the natural lubrication his fingers continually sought out and transferred to her ass. She let the feeling of her next impending orgasm wash over her. She was so close and could feel herself tipping over the edge into oblivion again when he pulled out of her and pressed the head of his cock to her ass.\n\nPulling her head back by the hair he took the panties from her mouth, and leaned in close to her ear, \"You wouldn't beg me to fuck you properly, now I will give you another chance to beg me to fuck that pretty cunt instead of your ass. See it as a lesson in proper slut etiquette, you should never tease a prick nor bare your teeth to one or you will get punished.\" He slapped her ass hard. Though she couldn't see it, she just knew that the arrogant smirk that he favored was firmly in place.\n\n\"Fuck you!\" she snarled at him.\n\n\"Have it your way then, cunt. I saw you look down on all those guys from your lofty perch on I'm-too-good-for-you hill. You flirt and you tease, but you need to be handled by a dominant man like me to be satisfied.\" Filling her mouth again with the balled panties he gave her no further opportunity to beg him. He could have made the experience a lot worse for her, but mindful that the slut was playing her own game and so far it had fallen mostly his way he didn't want repercussions tomorrow. He entered her cunt again, before pulling out and slowly pushing his cock into her ass aided by her own natural lubrication that his experienced fingers had redistributed. \n\nShe struggled and whimpered. The feeling was intense both in pain and the pleasure it gave her. Her head whirled with conflicting thoughts as he slowly moved in and out, going deeper with each stroke. She wanted to scream at him to hurt her that she deserved it, that she was a nasty slut for wanting to be treated like this, but her cries were muffled by the panties.\n\nEvery time she tensed up he would smack her ass until a warm glow of heat enveloped it as well as her cunt, which spasmed with each of his thrusts. Once he was fully embedded in her ass and his thighs rested against hers he stopped to savor the moment and leaned over her prone body the low rumble of his voice adding to the feeling flowing into her body.\n\n\"Admit you love it. Tell me you love it in your ass better than your cunt! I know I do, at least your ass is tight! Her muffled whimpers answered him and he turned her head by yanking her hair so he could look into her eyes. Nodding with self-satisfaction at what he saw there he curled an arm around the top of her thigh and began to tease her clit as he held himself embedded deeply in her ass.\n\nHer inner muscles clenched and tightened over and over again sending delicious waves of pleasure through his cock and he felt her body tremble on the brink of another orgasm, she was making muffled noises and as his fingers stopped their work on her over sensitive clit he leaned over and rumbled, \"Are you ready to beg me now?\"\n\nHer body was trembling with need and at this point she didn't care anymore, she just wanted to cum again, knowing it would be even more explosive than the last. She looked up at him with demure eyes and nodded. He took the panties from her mouth and waited as she took a deep breath. \"Please fuck me,\" she said softly between gasping breaths.\n\nHe pulled his cock out excruciatingly slowly and just as slowly entered her again. She moaned and he leaned over her rumbling, \"Not bad, but I would hardly call that begging. Come on ass slut, beg for what you want, I know you want it, you know you want it, let's not be shy now.\"\n\nShe groaned in frustration, attempting to roll her hips to get herself off, but he held her in place with the weight of his body. \"Please fuck me harder, fuck me faster. Please let me cum again.\" She cringed as he let out a small chuckle.\n\n\"That wasn't so hard was it?\" His voice sounded less fearsome when he laughed and he pulled almost completely out of her and plunged back into her hard and deep, his fingers starting to work over her clit again. \"You need this, you need to be treated like a slut to fully enjoy the art of fucking. Those losers would have left you wanting more and you knew it. That's why you came with me. You knew I could give you what you needed. I possess you now and nothing short of a dominant man will ever satisfy you again.\" With each phrase he slammed into her making her cry out in pleasure and pain her clit sent jolts of electricity through her body. \n\nFinally he drove her to a frenzied climax both with his words as much as his body and he buried himself to the hilt within her and let himself cum as well. He collapsed over her, uncaring of his weight and her muffled protests. When he had partially recovered he got up and withdrew his softening cock from her ass, pulling her cheeks apart with force he enjoyed the sight of his violation. Cum oozed from her tight hole as it did from her cunt. Reluctantly he pulled her skirt back down and helped her stand, fixing her skirt appropriately. She seemed very subdued and he tilted her face up to his. \n\n\"What a good little slut.\" He bent his head to kiss her lightly. \"However,\" he looked at her sternly, \"should you ever bare your teeth to me again you shall be punished severely next time.\" Without thinking she apologized and basked in the first real smile she had seen from him. In her daze she told herself there would be no next time, but then again she had played this game, but as always she promised herself this would be the last time. Feeling suddenly humiliated and guilt ridden by her own actions and being a willing participant in the surreal scene she had just been through, she turned toward the entrance of the alleyway and took a step forward before realizing he was at her side and walking with her. \n\n\"Can I give you a lift home?\" he enquired as if they had just had a typical night out. She looked up at him and smiled lopsidedly.\n\n\"No. I don't think so, thank you. I am staying with a friend and...\" she let her voice trail off.\n\n\"And?\" he inquired.\n\n\"I'm not sure how I would explain you or the lift. I'm a dreadful liar. I'll head back into the bar and call a cab,\" she explained.\n\n\"Have it your way slut, I am guessing you usually do,\" he murmured, the arrogant smirk crossing his face again as they walked silently back to the bar. He waited with her until the cab came, both sitting in an awkward silence. When she rose to leave he surprised her with a quick kiss. As she got into the cab it struck Molly that she hadn't even bothered asking his name, but why would she, she had gotten all she needed from him. \n\nReturning home, Molly showered and changed. Having left work so early it was still only a little past Midnight and she was grateful for the couple of hours sleep before work. The biggest downfall of being relegated to the early morning news team was that, she had to start work at four in the morning but she also finished in the early afternoon so it evened out she guessed. She stood in front of the mirror and relived moments of the night moments of a past she kept trying to exorcise from her persona. She shivered and in a loud voice she said, \"Never again, I will never go looking for a sadistic bastard ever again.\"\n\nSetting her alarm she crawled into bed fighting the feeling of self-loathing that accompanied the delicious aches in her body from hard use.\n\n<center>* * * * *</center>\n\n\"I don't think he's coming JD.' Tammy said for the third time in the last half hour. \"It's almost nine.\"\n\nJD looked up from the chair he had dragged over to the corner of the room next to the door, \"He'll be here, the dirt bag has nowhere else to go.\"\n\n\"He...he might think the cops are watching or I have someone with me.\"\n\n\"He'll still come.\" JD picked up the pack of cigarettes then thought better of it and slipped them in his pocket. The stress of Knox's people cutting into his business had him chain smoking all week and not eating much. The cigarettes were starting to make him sick. \"He's spent what he took from you and no one else will give him anything.\"\n\nLeaning his head back against the chair, he sighed, \"He was probably worried this would be a trap, but that was hours ago when he was still feeling good and thinking. Now he's jonesing and reason is out the window.\"\n\n\"I guess.\" Tammy was sitting on the edge of the couch looking around nervously as if she thought Brad would materialize in the room. \"But if he doesn't show up I'm not coming back here.\"\n\n\"No, you're not, but he will come.\"\n\nShe nodded and crossing her legs, put her arms around them. It was a little girl pose and JD wondered if her act at the club hadn't begun affecting her real life actions. Either that or she acted like the little kid she resembled. The Hello Kitty T-shirt she was wearing along with her jeans and sneakers added to her adolescent appearance making the sight of her battered face even more disturbing. No one should look like that, let alone a child. JD recalled all too well what his own face looked like staring back at him from the mirror when he was a boy.\n\nHe clenched and unclenched his fists watching the muscles bulge in his forearms. He shouldn't be here and it wasn't like he didn't know any number of men he could have paid to do this. If he had heard about this he probably would have told Jimmy to get it taken care of, but once he'd seen Tammy's face there was no way he could let anyone else handle this.\n\nHe'd meant what he said to her; the people in his club were his family and it would be a cold day in hell when he would allow one of the women in his life to be hurt. He'd had to endure that when he was too young to do anything about it, but that was no longer the case. \n\nTammy leaned over and pulled up her jeans to scratch her leg. JD noticed she was wearing white ankle socks also sporting that annoying, poorly drawn cat.\n\n\"Tammy, do you always dress like that?\" he asked, trying to keep her occupied as her nervousness was making it hard for him to remain calm.\n\n\"Yup.\" She nodded, her pigtails bobbing.\n\n\"It's not just an act for the Playground?\"\n\n\"I'm a little.\" Tammy smiled at him through her swollen lips.\n\n\"A little what?\"\n\n\"That's a good one!\" she laughed and clapped her hands making her seem even more childlike.\n\n\"No, really.\" He put his hands out, \"What's a little?\"\n\n\"Wow you work in a fetish club and don't know what a little is?\" ",
        "\"I wouldn't be asking if I did.\" He rolled his eyes, talking to Tammy was like talking to a child as well.\n\n\"A little likes to be a little kid and we need to be taken care of.\" She thought for a minute, \"I don't think there are guys who are little's it's mostly a girl thing. We need daddy's to take care of us. Make sure we're okay, be good to us make us a feel good and punish us if we need it.\"\n\n\"Oh.\" \n\n\"Right now I'm a little without a daddy.\"\n\n\"Sorry to hear that.\" Sorry he had asked at all.\n\n\"The club is good for me, a lot of those guys are good daddy's and are nice to me.\" She sighed, \"But some want to punish me and that's okay too, sometimes I'm a bad girl.\"\n\n\"So you're like this all the time?\"\n\n\"Hmm-mm\" \n\n\"Well at least you like your work then.\" \n\nJD let it go from there thinking that even though there was something appealing about an adult woman with the appearance of jailbait dealing with that for more than an hour would drive him to...\n\nTammy emitted a startled yelp when her cell phone rang, looking at it she whispered \"Its Brad!\"\n\n\"It's okay.\" He whispered back \"He can't hear you!\"\n\nShe frowned at his mocking her, but didn't answer it.\n\n\"Say hello and sound normal.\" He smiled coldly, \"Sound scared.\"\n\n\"I am.\" Her lower lip was trembling and JD felt an icy calm flow through him. The fucker was going to come and he would get the pleasure of making this right.\n\n\"H...hi Brad.\" Tammy nodded, \"I...I'm home. You coming back, baby?\" she paused, \"Money?\"\n\nJD snapped his fingers and when she looked over he nodded.\n\n\"Yeah they let me work today, I...I wore a mask. Not much, a couple of hundred. I...I guess I can give you some.\" She looked at JD and taking a deep breath she said nervously, \"J...just be good to your little girl tonight, please, Brad?\"\n\nShe listened for a minute then said, \"I...I'll be here.\"\n\nShe put the phone back in her pocket, \"He said he'll be here in a couple of minutes. He...he's flying JD, we need to leave.\"\n\n\"Why?\"\n\n\"He's coked up he...he's crazy! You don't know what he's like he's...\"\n\n\"You don't know what I'm like.\" He narrowed his eyes at the sight of someone walking by the window. The shade was down, but because of the outside lights he could still make out a silhouette. \"He's here; he called from outside. He's waiting to see if you leave.\"\n\n\"He's here?\" her good eye widened. \"JD, we can slip out the...:\"\n\n\"I don't run.\" Standing he unbuttoned the long sleeve black Armani shirt he had worn at the club before coming here and slipped it off. Beneath he was wearing a gray muscle shirt and carefully folding the shirt and draping it over the chair said, \"When I tell you to leave, you leave. Julie and Angel came here with Robert and packed all your things. You never come back here, ever.\"\n\n\"I...I won't I...oh!\" \n\nThere was a loud knock followed by the sound of keys fumbling in the door. JD remained where he was in the corner and watched as the door pushed open. Brad came in, slamming the thin door behind him.\n\n\"Hey, slut!\" He laughed, \"I knew you'd come back!\"\n\n\"I...I missed you.\"\n\n\"You did?\" he took a couple of steps towards her, \"Guess I missed once too, you still have one eye open.\" \n\n\"Brad, you said you'd be nice.\"\n\n\"Nice? You want me to act like your daddy like those johns do at the club? Whatever, I guess you need the eye to see their cocks to suck them.\"\n\nBrad was so far gone he didn't notice JD in the corner and that gave him a moment to size up. Brad was a big guy; over six feet tall and an easy two twenty. Back when he worked it was construction and despite the roll over his jeans his arms contained little flab and his shoulders were wide and powerful. Big, strong and mean. JD felt a thrill run through him. \n\nBrad took another step towards Tammy who he knew was struggling not to look his way. She cringed back into the couch when Brad snapped, \"Money bitch, now!\"\n\nThe sight of her tiny form cowering before the hulking Brad caused a surge of rage to flow through him, but it was quickly smothered by that icy calm JD knew so well.\n\n\"I...well....\"\n\n\"Give me the money now and I'll just slap you a couple of times, you don't give it up and I'll...\"\n\n\"I have plenty of money.\" JD said softly, reaching into his pocket he pulled out a roll of hundred dollar bills.\n\nBrad spun around and JD knew Tammy was right; he was coked out of his mind. His blue eyes were not only bright, but bulging and his face was beet red.\n\n\"Who...hey!\" Brad pointed at him, \"You're that pretty boy prick that runs the club.\"\n\n\"And you're the fat coward that slaps around women.\" JD said with a sneer, \"Nice to meet you.\" He spread the hundreds out in his hands, \"You need money Brad?\"\n\n\"You going to pay me to not slap your property around\" he laughed, \"What's the matter asshole afraid she'll be too ugly for even the sick fucks at your place?\"\n\n\"No.\" he waved the money. \"Two grand, Brad. Two grand and its all yours.\" Folding the money in half he put it in his pocket, \"But you have to come get it.\"\n\n\"Fuck you.\" Brad waved his hand at him, \"Keep your fucking money, I'll put this cunt back on the street where she belongs and...\"\n\n\"What's the matter Brad, you afraid to fight someone who fights back?\"\n\n\"Get the fuck out of here, freak, there's plenty of sluts you can....\"\n\n\"Tammy go.\" JD pointed towards the hallway that led to the back door. \"Now.\"\n\n\"She stays!\" Brad took a step towards her, his arm reaching out.\n\nJD reached him in one long step and grabbing his shoulder spun him to face him. As expected Brad reacted by over reacting. He came around swinging wildly and JD easily ducked what he referred to as a redneck roundhouse, and drove a hard right into Brad's soft stomach. He heard Brad exhale loudly, but he barely bent over. JD slammed his left into the same spot and this time Brad doubled over . Dropping to his knee, JD rocked back and snapped a short kick into Brad's face, when he stood up JD came out of his crouch into a spin kick. He caught Brad in the side of the head and sent him sprawling down onto the glass coffee table that shattered beneath his weight. \n\nTammy screamed and jumping off the couch darted for the hallway. She stopped and turned to see Brad leap up from the pile of broken glass and splintered wood as if he had simply tripped.\n\n\"You little fuck!\"\n\n\"Get the fuck out!\" JD pointed at her.\n\nTammy turned and ran and reacting more by instinct then the face he saw it coming, JD jumped back, narrowly dodging another wild swing. Brad went off balance and as he staggered passed him, JD hit him in the back with his elbow sending him face first to the floor. \n\n\"Get up you fat fuck!\" he snarled. \"I have something special for you!\"\n\nBrad rolled over and sprang to his feet as if launched from a trampoline. His nose was bleeding and he was breathing like a bull, but his eyes were bright and he was smiling through the blood in his teeth.\n\n\"I know girls that hit harder than you.\" He laughed.\n\n\"Because all you fight is girls.\" JD snapped off three quick jabs, each striking home in the middle of Brad's face then jumped back avoiding a round house that would have taken his head off if it connected. \"Guess what asshole? I don't have tits and I hit back.\"\n\n\"You're her fucking pimp, you're just pissed because no one would fuck her ugly ass today!\"\n\n\"No,\" JD slapped him in the face, \"I'm here because I-hate-your-kind!\" he punctuated each word with a slap that left his palm stinging, Brad's face rocked side to side, but he stood where he was and once again swung for the fences.\n\nJD dodged to his right and was caught off guard when Brad stopped his swing and came around with his other arm, catching him in the side of the face with a sharp left hook. A flash went off behind his eyes and as he rocked to the side, Brad threw another haymaker. JD saw it coming, but was off balance and could only manage to whip his head to the side. Instead of catching his face Brad's huge fist caught the side of his head and sent him spinning to the floor.\n\nHe somehow got his hands down, stopping himself from ending up on his face, but before he could he get up, Brad caught him in the side with his booted foot. JD grunted in pain, but using the impact of the kick to help him, rolled over twice, before coming back up to his knees. Brad had stepped forward and this time kicked at his head. JD caught his foot in his hands and deflected it to the side. \n\nHolding onto to it and causing Brad to try to balance on one foot. JD kicked out, the steel tip of his boot landing a hard blow on Brad's soft upper thigh. He cried out in pain and made the mistake of leaning forward, trying to grab him. JD threw a quick kick into his stomach then one into his face. He was still holding Brad's foot and surging to his feet he shoved against it sending Brad flying several feet and crashing into the wall hard enough to crash through the cheap paneling and into the wooden studs behind it.\n\nComing to his feet, JD crossed the distance between them quickly and when Brad swung, stepped into it. He blocked it with his left arm and slammed his right elbow into the side of Brad's head. \n\n\"You like beating women you fucking coward?\" he hissed, \"What does she weigh? Ninety fucking pounds?\"\n\nBrad punched him in the stomach pushing him back and when JD bent over, caught him with an uppercut. He heard a crunch and his nose filled with blood as he staggered backwards. Fueled by coke Brad came forward as if he'd barely been hit and threw a quick right left. Both connected snapping JD;s head from side to side. He felt his legs starting to give and let his weight go. Landing on one knee, he extended his leg and spun in a circle sweeping Brad's feet out from under him. \n\nBrad hit the floor hard, his head thumping off the wood. As JD rose slowly to his feet, Brad again popped straight up, but this time once he was on his feet shook his head like a wounded dog and almost lost his balance. JD stood in front of him breathing hard through his mouth as his nose clogged with blood. \n\n\"What's the matter bitch, not used to a fight?\" he asked. \"Come on, pretend I'm half your size and hit me!\"\n\nBrad growled and threw a punch that JD easily avoided by whipping his head to the side. \n\n\"Try again,\"\n\nBrad swung with his left and JD jumped to his. This time he saw Brad's feint and when his right arm came around he grabbed his wrist and his arm under his. Their arms locked at the elbows and bracing his feet, JD used the power in his hips and shoulders to wrench upwards. There was a loud crack and Brad screamed in agony when his arm snapped backwards. \n\nJD turned to the side and swung his leg up slammed his knee into Brad's stomach. He bent over and wrapping his arm around his neck, JD held him in a head lock and began driving his knee repeatedly into Brad's ribs.\n\n\"How's that feel you fucking piece of shit!\"\n\nBrad screamed when JD chopped down, striking his dangling arm.\n\n\"I like that!\" he snarled \"Just like you liked when Tammy screamed, didn't you?\"\n\nHe was driving his knee into Brad with so much force, that his feet were leaving the ground. He retched and JD heard something wet splatter on the floor. \n\n\"You fucking bitch!\" he yelled, \"You made a fucking mess!\" stepping back, JD threw his knee up one more time, this time catching Brad in the face. It stood him up and wrapping his arm around the back of his head, JD yanked it forward and drove his forehead into Brad's face. He heard a snapping sound and Brad made a wet gurgling noise. \n\n\"This how you do it? You just keep going?\" JD pulled back and bashed his head into Brad's face three times in succession, then stepping back hauled off and hit him in the side of the head with a left cross. JD felt the vibration of the blow all the way to his shoulder and watched as Brad went down hard into the wall. He slid to the floor, his arm hanging uselessly at his side. He looked up at JD and gasped,\n\n\"P...Please...\"\n\n\"Oh, I like when they beg!\" Grabbing him by the hair, JD pulled forward then threw his head into the wall. \"You do don't you?\" stepping back he kicked him in the stomach. \"Don't you?\"\n\nBrad rolled over onto his knees and tried to drag himself forward on his good arm. Looking down JD imagined Tammy on the floor bleeding trying to crawl away, begging, crying. A hot flash of rage went through him and lifting his leg he stomped on the back of Brad's hand with the hell of his boot. Brad shrieked in pain.\n\n\"Beg!\" JD demanded, \"Beg!\"\n\n\"Pl...please I...I...I'll never go near her again! I...\" he was cut off by JD slapping him in the mouth.\n\n\"Why should I stop? You never stopped! Tell me asshole, were you hard when you beat her?\"\n\nBrad tried to speak, but all that came out was a trail of spit and blood. He was on his knees unable to use both arms.\n\n\"Helpless.\" JD whispered, \"Just like she was. Now let me show you the mercy you showed her.\"\n\nLifting his arm, JD drove his fist straight down into the side of Brad's face. Blood flew and as if in slow motion JD saw two teeth explode out of his mouth and bounce off the floor. Brad fell over sideways his shoulder against the wall and dropping to his knees. JD grabbed his hair, lifting his head and looking into his ruined face. \n\n\"You think we're done, bitch? We're not. I just wanted to show you what it's like to fight something that fights back. Now the real fun starts.\"\n\nReaching behind him, JD drew the .45 and showed it to Brad.\n\n\"I think I'll shoot your nuts off, how's that?\"\n\nHe shoved the barrel of the gun hard into Brad's balls and grunted at the sight of the large wet stain spreading across his crotch.\n\n\"You pissed yourself you pussy.\" JD hissed,\n\nRaising the gun he shoved it into Brad's swollen eye. \n\n\"You know what the best part of this is Brad? Because of what I do for work and the money I handle I have a permit granted by this state to carry a gun. That's right, this gun in my hand is totally legal meaning if I were to do the world a favor and paint the wall with what little brains you have all I have to do is tell the cops you came here strung out and looking to beat Tammy. I was here you assaulted me and I had to kill you.\" He smiled down into Brad's terrified eyes. \n\n\"I...Oh god please don't kill me!\"\n\n\"God? You think God was okay with you beating women and he'll spare you now?\" he sighed. \"You know what? Just for that I think I will kill you.\"\n\nJD shifted the gun so the muzzle was between his eyes and smiled, \"Bye Brad.\" And pulled the trigger.\n\nBrad screamed and drowning out the sound of the loud click of the unloaded gun.\n\n\"Oh...oh....God.\" Brad moaned.\n\n\"You listen to me you sack of shit. You ever go near that girl, you ever even call her I'll kill you?\"\n\n\"I...\"\n\n\"If you see her anywhere your ass better run the other way because if someone tells me you were even on the same street as her, I'll kill you.\" He whacked Brad on the head with the butt of the gun, \"See the pattern?\"\n\n\"Y....yes.\"\n\n\"Good.\" JD stood and tucking the gun back into his pants looked down at Brad, \"And one more thing.\"\n\n\"W...what?\"\n\nHe sniffed, the action causing a sharp pain in his bloody nose. \"Find someone to clean the shit out of your pants.\"\n\n<center>* * * * *</center>\n\nJD pulled over next to a stand of trees and grabbing the bottle of Cuervo from the seat next to him along with the red rose he had bought earlier tonight exited the car. He walked through the trees enjoying the night air and the silence around him. Saint Ann's closed at seven, but he'd been slipping the caretaker a hundred dollars to go in after hours since he'd come back to Boston ten years ago. \n\nJD wandered across the grass looking at the tombstones and stopping to right a couple of plants that had tipped over in front of one of them. The night was on the cool side for June and he took a deep breath, wincing at the stinging in his nose. He held the breath for few moments before exhaling then took a swig from the bottle. The tequila left a warm trail down his throat, but hit his stomach like a rock. He grimaced, but took another swig anyway. \n\nReaching a large rose colored marble tombstone, JD placed the rose in the vase built into the side. Kneeling in front of it he reached out and traced the name Emily with his finger.\n\n\"Hey ma.\" He spoke softly, \"Sorry it's been awhile, But I guess you really can't tell time anymore anyway.\" \n\nHe took another swig and frowned, \"I'd say better late than never, but that's not really true is it?\" \n\nHe traced his last name then moved down to the dates 1957-1999.\n\n\"I'd say a day late and a dollar short, but more like a month too late and a mother short.\"\n\nThis time he took several long swallows and when he lowered the bottle, clutched his twisting stomach and leaned his head against the cool marble.\n\n\"Wow.\" He closed his eyes to stop the grass he was staring at from spinning. \n\nFeeling as if he had himself back under control he sat up, \"I'm sorry mom.\" He placed his palm on the stone. \"I...shouldn't have left you alone or better yet fixed it so you could be.\"\n\nHe paused to wipe the tears from his eyes and winced at the pain that caused his swollen left cheek. \n\n\"But can't fix the past, just the present.\" Reaching into his pocket he pulled out a folding knife and with a flick of his wrist snapped it open. \"Speaking of a present, I brought you one.\"\n\nJust under the dates was a row of notches carved into the stone. JD counted them, tapping the tip of the five inch blade on each one. \"Hey, this is twelve. The next one's lucky thirteen I'll have to make it extra special.\"\n\nPressing the tip of the blade into the marble he started sliding it up and down, grunting with the effort to carve deep into the stone. \n\n\"This was a good one, ma.\" He spoke as he worked the blade. \"He hurt her a few times before she smartened up, but I made it so he won't do it again.\" He moved the blade and peering at the notch stuck it back in and returned to his carving to make it deeper. \"Should have seen it, pissed himself and...\"\n\n\"JD what are you doing?\"\n\nHe dropped the blade and looked up to see Miranda standing at the edge of the grave. She was dressed in plain jeans and an white Old Navy sweatshirt, her long hair pulled into a pony tail. \n\n\"What's it look like I'm doing.\" He pointed at the stone, \"I'm visiting my mother.\"\n\n\"And defacing a grave.\" She walked over and knelt down next to him. \n\n\"How'd you get in here?\"\n\n\"You think that kid that watches the gate only takes money from you?\" She looked closely at his face, \"You okay?\"\n\n\"Fine.\" He lifted the nearly empty bottle, \"I have something for the pain.\" He started to bring it to his mouth, but she snatched it from his hand.\n\n\"You've had enough.\" She put the bottle down behind her. \n\n\"Mom you remember Miranda, right?\"\n\n\"I'm sure she does.\" Miranda said, \"She met me a few of times when she came to see you in Jacksonville,\" she grinned, \"Thought we were a couple.\"\n\n\"Yeah.\" He folded the knife and slipped it into his pocket. \"It's only eleven, shouldn't you be at the club?\"\n\n\"Tammy called me and said she was worried about you and I knew where you'd be.\" She sighed, \"And honestly JD the club was so slow it, well you don't want to know how slow it is. I sent three girls home and Melanie said she's going to take a shift at Red's until she can start making some money with us again.\"\n\n\"Great,\" that fat slob over there must be in his glory.\"\n\n\"Yeah and no. He knows Knox will be onto him soon enough. Bill Teves called tonight and said there's too many of those freaks out there and he's afraid to come back until this blows over.\"\n\n\"Fuck.\" JD rubbed at his eyes. \"We'll....\"\n\n\"Talk tomorrow.\" Miranda tapped the bottle, \"You're tired, you're drunk and you look pretty rough. The Playground can wait. So...\"\n\n\"So...\"\n\n\"How bad did you hurt Brad?\"\n\n\"Pretty fucking bad.\" He grinned, \"Did my mother proud.\"",
        "\"JD...\" she put her arm around his shoulders, \"You're not making sense, let's go.\"\n\n\"I'm making sense.\" He pulled away from her, \"You know what happened. You know I...I wasn't there when I should have been.\"\n\n\"JD, you're mother chose to stay with him. She could have left. You offered to have her come and stay with you. She chose to stay with that asshole.\"\n\n\"I knew what he was doing and I should have taken care of him, should have...hurt him so he would leave.\"\n\n\"It wasn't your place.\"\n\n\"I was her son who else should have done it?\" he snapped.\n\n\"She was also a mother who let her son get beaten so badly he ran away from home.\" She pointed out. \"I'm sorry, no woman deserves what happened to her, but she didn't try. A real mother would have taken her son and...\"\n\n\"You don't fucking know what it was like!\" He shouted at her, \"She stayed because he would have found us anyway and she...she took....she took it for me! She tried to protect me and I fucking ran and left her there!\"\n\n\"Calm down, JD.\" Miranda said softly. \"I didn't mean to upset you. You're right I don't understand. But we should...\"\n\n\"I...I called her and she didn't sound right; sounded scared. She asked when I was coming up next and I told her that weekend. She said he was drinking worse than ever and was using coke he was getting worse. I told her I would take care of it. Planned on it. Was going to take that pious sack of shit out in the woods and he was never coming back.\"\n\n\"JD I know what happened I was there at the...\"\n\n\"When that rich snot Deborah called and said she would pay me a thousand dollars to fuck her and her girlfriend. I...I figured why not? Lot of money, two hot women.\" He shrugged, \"My mother had dealt with that animal for years what was two more days?\" He lowered his head, \"While I was in the middle of a three way he beat her to death. I was still in Deborah's fucking bed when the cops called me the next morning.\"\n\n\"JD how about we get out of here and go back to your place?\"\n\n\"I don't want to go home. Th...there's no one there. There's nothing there.\"\n\n\"Come over my place. Spend the night.\"\n\n\"Yeah?\" he narrowed his eyes, \"You don't like anyone sleeping in your bed with you.\"\n\n\"Tonight I would like the company.\" She reached out and touched his cheek, \"Come on JD let's go. We'll take a hot shower, maybe have a little fun and get some sleep.\"\n\n\"I ever tell you what these notches are?\"\n\n\"No.\"\n\n\"Since I couldn't....wouldn't help my mother I swore if I ever saw a woman being hurt like that and could do something about it, I would stop them. I'd hurt them the way they hurt their women. Whenever I get a chance like I did tonight I come here and tell mom and add a notch to the score.\"\n\nMiranda looked at the notches, counting, \"That's....not good JD.\"\n\n\"They deserve it.\"\n\n\"They do, but you have a good life JD and the Playground, you have a lot to lose, you can't pull this shit.\"\n\n\"I'm a.....whoremaster.\" he told her, \"No one would miss me.\"\n\n\"JD I've worked in bad places. Places where the owners rape and beat the girls, hook them on drugs and bring them to houses to leave them there to be gangbanged all weekend. The Playground isn't like that. I came to work with you because you take care of the girls. They make money and they do it on their terms, its safe JD that's why they stay. They stay because of how you helped Tammy. You can do more good like that then beating up some punks.\"\n\n\"I owe her.\"\n\n\"Then do it a better way.\" She looked up and turning to follow her gaze they saw the caretaker coming down the path his flashlight waving back and forth. \"Come on JD, let's leave.\"\n\n\"Okay, I'll follow you.\"\n\n\"I took a taxi because I knew you'd be drunk, give me your keys.\"\n\n\"You're good Miranda.\" He stood up and she caught his arm as he swayed and almost fell.\n\n\"At many things.\" She winked as she dug in his pocket and pulled the keys out. \n\nTaking his hand she led him away from the grave and towards the car. \"JD can I ask you something?\"\n\n\"Sure, why not?\"\n\n\"I know you're father ran after he...killed your mother and the cops never found him. Any idea where he went?\"\n\n\"Went?\" JD looked at her and grinned, \"He went south where he belonged.\"\n\n\"South? Where south?\"\n\n\"Not far, maybe a few feet south.\" JD laughed.\n\nThey'd reached the car and he leaned against it waiting for her to unlock it.\n\nMiranda stood there her dark eyes wide, \"A few feet? JD, what did you...\"\n\n\"Who do you think the first notch was?\" \n\n<center>* * * * *</center>\n\nJD took the corner and tried not to look at the empty where the billboard used to be. In the past two months he had paid to have graffiti removed a dozen times and replaced it completely when they had chopped the wooden supports down to knock it over then hacked the sign itself into pieces. Three nights ago it had been set on fire and he told Miranda he would leave it for now. He had spent upwards of ten grand repairing it and it was getting to the point he had to watch what he spent, something he hadn't worried about since the first year he was open.\n\nHe pulled into the parking lot and curled his fingers tightly around the leather steering wheel. They were there just as they had been every day since this started. On some days there were maybe a dozen or so, but on other days as many as thirty of the cockroaches showed up. JD frowned when he noticed the private security detail they'd hired to sit outside during the day wasn't there. Who was there, however, was channel twelve again. \n\nHe didn't have to look into the van to know it was Molly and her puppy dog cameraman. She'd been showing up a couple of times a week since this mess had started. Sometimes they would stay a half hour and never get out of her van. Other days she would walk around talking to the protestors. Whether she had moved up in the stations ranks or they were just giving her something to bat around, Molly had appeared on the news over this, albeit for a little more than a quick sound bite.\n\nJD looked around the parking lot, spotting Miranda's black BMW convertible and Jimmy's massive custom Chevy pickup. There were another seven or eight cars that belonged to the girls and a couple of the other bouncers. Three weeks ago there was twice that many people working the club at two in the afternoon, but as much as he hated to do it, he had to cut back. The protestors used to drift off by late afternoon and some still did, but the last two weeks they had been hanging around at night as well and really spooking the customers.\n\nJD had some success with getting the police to come chase them off because there were a lot more people around and the customers were drinking and they were afraid of a fight. One thing JD knew was that some of Knox's supporters wouldn't mind a fight. Cruising slowly past the crowd and ignoring the protestors calling out to him JD scanned the mob. He found who he was looking for in their usual spot closest to the club.\n\nIt was the two thugs he'd spoken to back in the beginning. They were here every day and were always with several more men who looked as if they'd served time or should have. The large powerfully built black man, Reggie was the ring leader and the scrawny little dirt bag was Greg his little toady who was always right next to him. They were the most vocal, especially when the girls came in, slinging not just bible crap, but insulting them and making lewd remarks.\n\nWhen they did this they came up close to the girls so the rest of the people, whom JD assumed were actual church goers, couldn't hear them. Credit where it was due several times when the Jehovah's Jail Birds were starting to get too belligerent some of the older protestors would come over and talk to them. More than anything else that told JD there were two factions at work here. The lemmings who really thought Knox was legit and his little gang of allegedly born again riff raff that were looking for things to go to the next level. \n\nJD had brought Higgins in through the back and had him take some pictures of God's chosen delinquents and see what he could find. Jake Higgins was one JD's more valuable aces up his sleeve. Higgins worked as a detective in the vice squad, but had enough sexual vices of his own that JD had easily been able to recruit him to help him with not just money, but freebies whenever he wanted them. Higgins was a major part of why The Playground had never been raided and also served him well by digging up dirt on anyone JD needed to hold something over. But so far even Higgins was drawing blanks on Knox to the point he had echoed Miranda saying that maybe Knox was genuine.\n\nJD knew better. Whether it was drugs, whores, gambling, impregnating the women in his church, Knox had something to hide and he'd find it and use it to back him off. Shutting his car off and staring at the few cars in the section the customers parked, JD knew he better strike oil fast or there wouldn't be much to save. He exited the car and removing his sunglasses turned to see most of the protestors looking his way.\n\nKeeping his head up and staring at the group of thugs who were lined up along the wall leading to the entrance, JD approached them walking at a normal pace with his hands in his pockets, strolling along as if nothing was amiss.\n\n\"Hey whoremaster, you putting those girls out on the street now to make up the money you're losing here?\" \n\n\"Hey pretty boy, do you have to fuck the queers now that you can't afford to pay your faggots?\" \n\nJD turned to see that had come from Greg who was standing right next to Reggie as usual.\n\n\"Don't hate them because they get paid and you gave it away for free in the joint.\" JD replied calmly as he approached the door, but stopped when two of the goons wouldn't step aside.\n\n\"Move.\"\n\n\"What if we don't whoremaster?\"\n\nJD looked past him and saw Molly and Joe were out of the van and the camera was trained on them. Smirking he replied.\n\n\"Then I'll call the cops and you can go to jail and find out what a Boston cream pie really is.\"\n\nThe man's eyes darkened and JD saw his shoulder start to dip. Go on, he thought, take the swing, prove me right.\n\n\"Oscar!\" A woman's voice exclaimed. \"Stop that crude language and let the man in.\"\n\nJD saw an older woman with a gray bun on the top of her head and wearing a shapeless sweater and ankle length skirt, push between Oscar and the guy next to him.\n\n\"This isn't our message here, now go back and stand by the cars. You're not representing the reverend like this.\"\n\n\"Yeah Oscar, not very Christian of you.\" JD winked at him.\n\nOscar glared at him, but turned with the other man and walked away.\n\n\"There is no need to mock us, Mr. Walker,\" The woman said, facing him, \"We're here to help people.\"\n\n\"So am I.\" he gave her a practiced lady killer smile. \"The Playground helps many people.\"\n\n\"That's the pleasure of the flesh, Mr. Walker and it is fleeting.\"\n\n\"They make pills that can help with that.\"\n\nThe woman shook her head sadly at him, \"Mr. Walker you're a beautiful man.\"\n\n\"Why thank you.\" He winked at her, \"Are you a cougar looking for a cub?\"\n\n\"I don't know what that means, but I assume it's a lewd remark. You may have your looks and money now Mr. Walker, but you won't always and when your looks fade and the money runs out all those pretty ladies will no longer be around you. What will you have then?\"\n\n\"That's...a good point.\" He tapped his head as if thinking, \"What will I have, oh!\" he showed her his palm. \"I'll always have my hand! It will never leave me and will always love me no matter what.\"\n\nShe stared into his eyes and with a shrug said, \"God loves you to Mr. Walker, you're one of his children.\"\n\n\"Then someone should call DCYF on him then.\" JD told her, \"Have a good day ma'am.\"\n\n\"I will Mr. Walker a better one than you I'm sure.\"\n\nPassing her and entering the club, JD was pretty sure that at this point she might be right. Two was never a busy time of day, but there would usually still be a twenty or so people watching the dancers and some action in the back, but JD only saw a half dozen and all were currently watching Maria working the pole while Mandy, the only waitress on right now served them drinks wearing only a red thong and a pair of knee high stiletto boots.\n\nJimmy was behind the bar, inventorying the liquor and Roger, the other bouncer was talking to two of the other girls who hadn't bothered changing out of their street clothes. JD started to walk into the back area when he saw Miranda sitting at a small table in the far corner of the club behind one of the stages.\n\n\"Shouldn't you be in the back?\" he asked, dropping into the chair across from her.\n\n\"If there was anyone back there I would be.\"\n\n\"No one?\" \n\n\"A couple was here earlier, you know them, she gets fucked by a couple of the guys while he watches and she tells him what a needle dicked loser he is.\"\n\n\"I know them.\"\n\n\"Just them and a couple of straight up johns looking for a piece.\" she looked up from the lap top. \"We're hurting JD. That's why security's not out there, I can't keep paying them and the fruits haven't gotten out of hand.\"\n\n\"There should be more girls here.\"\n\n\"I kept them home and some of the guys.\"\n\n\"Yeah, but...\"\n\n\"JD you mean well. But when you sat there two weeks ago and told everyone you'd pay them whatever their average weekly draw was as long as they stuck this out with us, it ate up a lot of money that didn't get put back. I had a meeting and told them that as no longer the case.\"\n\n\"Without asking me?\" \n\n\"You pay me to run this place.\" She reminded him. \"You're the face of this JD. You bring in the talent, you bring in the clients, you have the connections. But you don't have any sense with your dollars and cents. It had to be done.\"\n\n\"I....I guess you're right.\"\n\n\"Two more regulars called and cancelled. They said to call them when this is done. They're not coming anymore while the holy rollers are here.\"\n\n\"Who?\"\n\n\"It doesn't matter. The senator said to cancel his...\n\n\"We'll send the girls to him, we'll set something up discreet for him.\"\n\n\"House calls?\" she raised her eyebrows.\n\n\"It can work!\" he snapped his fingers, \"Call all the regulars and tell them we'll do that, we'll book motel rooms and send the girls, no extra charge.\"\n\n\"It's worth a try.\"\n\n\"Judge Lindsey says she won't be coming anytime soon either, she is not going to take a house call.\"\n\n\"Tell her I'll take care of her personally.\"\n\n\"Really?\" Miranda sighed, \"Well maybe you could get her to agree to that, but she also said she may not be able to look the other way if this gets any bigger and...\"\n\n\"What?\"\n\n\"JD....\"\n\n\"With what we have her doing on tape?\"\n\n\"Betray a confidence we lose all trust.\"\n\n\"I can't fucking believe this!\" he slapped the table hard enough to cause Miranda to flinch. \"Two months, two fucking months of a bunch of morons in front of the club and we're getting down to this?\"\n\n\"I know it seems quick.\" She replied softly, \"JD, Knox is getting bigger and bigger. He's mixing with the politicians, uniting with the family values crowd. It's been a long time since they had anyone they could look to push their beliefs outside of politics. They're helping him.\"\n\n\"But we have...\"\n\n\"I know who we have, but...Look JD let's face it the Playground is a running joke in the eyes of the law. Everyone and their mother knows or suspects what goes on here, but they look the other way because the a club like this draws people here and caters to half of them. But now the goodie-goodies have their crusader and they are making enough noise behind the scenes to make our allies nervous. We're losing our support.\"\n\n\"Then maybe we make an example.\" He said quietly.\n\n\"What do you mean?\"\n\nWe can't show anything that happened here, but we send for someone out of state, send them as candy to one of our turncoat protectors. Get them on tape, then send the tape. They won't know it came from me, it won't be one of our girls or guys.\"\n\n\"They'll know and they won't. It's too much of a dangerous game.\"\n\n\"We have to...\"\n\n\"Wait a minute,\" He snapped his fingers, \"I might have another card we can play.\"\n\n\"Are you sure?\" Miranda waved her hand dismissively, \"It's not like you've been playing with a full deck lately.\"\n\n\"Funny.\"\n\nGrabbing the phone he dialed the bar.\n\n\"Hey, JD,\" Tammy answered, \"Jimmy went around the back to...\"\n\n\"I don't need him. Ask Roger if that damn reporter is out there.\"\n\n\"Hey Rog!\" she yelled causing him to move the phone from his ear, \"Those meanies from Channel Twelve out there?\" There was a slight pause.\n\n\"He said they are, but they're in the van.\"\n\n\"Thanks.\"\n\nHanging up he rose from the chair. \"I'll be right back.\"\n\n\"Where you going?\" \n\n\"To pump a reporter,\" He smirked, \"Just not in the way she'd like.\"\n\n\"There's conceited and there's convinced.\" Miranda sighed. \n\nIgnoring her, JD quickly cut through the club and exiting into the parking lot spied the van in its usual spot along the fence. Seeing him approach, Joe pointed at him and he saw Molly peer around him. Walking around to her side, he gestured for her to roll down the window. \n\nHer eyes narrowed, but she did as he asked, \n\n\"Good morning Miss Malone,\" he flashed a practiced smile.\n\n\"What can I do for you Mr. Walker?\"\n\n\"I think it's more a question of what we can do for each other.\"\n\n\"Hey, man, get lost.\" Joe hit the button to put the window back up.\n\n\"Funny, I didn't hear her say that.\" JD caught the window and pushed hard on it, causing it to stop.\"How much you think it would cost to replace this glass?\"\n\n\"Joe, stop.\" Malone said softly, her eyes still fixed on JD, \"Let's be polite. After all Mr. Walker could use all the friends he can get these days.\" She gave him a nasty smile, \"I've heard you've lost some recently.\"\n\n\"Molly, don't waste your time talking to this asshole.\"\n\n\"Hey, Joe, chill out\" JD said, putting his hands up in an innocent gesture, \"I only want to talk to her for a minute. You'll still have time to catch your daily quickie in the back of the van.\"\n\n\"Mr. Walker must you...\" Malone began, but turning his gaze back to her he continued,\n\n\"And just think after a few minutes alone with me, she'll really be worked up. Save you the time it takes her to get wet.\"\n\n\"You fucking...\"\n\n\"Joe stop!\" she put her hand up and he immediately fell silent.\n\n\"Well trained.\" JD laughed and snapping his wrist made the sound of a whip cracking.\n\n\"Move.\" Molly said, opening the door she swung it wide quickly causing him to jump back.\n\n\"Yes, ma'am.\"\n\nShe walked a few feet from the van and JD followed, his eyes automatically gravitating to the backs of her legs. Again with the loose knee length skirt, he shook his head; the woman had no fashion sense at all. She turned to face him, but he kept his gaze on her legs.\n\n\"You have decent legs,\" he pointed at the skirt, \"You should show them off more.\"\n\n\"Hair down, skirt up, that how you picture me?\"\n\nNah, skirt down, but panties off.\" He winked, \"You do wear panties right? Can't see you as a thong type of girl.\"\n\n\"Enough, Mr. Walker, I'm not one of your whores\" She kept her voice even despite the vivid image of him pushing her face first against the van then pulling her skirt up, shoving her thong, the lace red one that slut Molly so loved to wear, to the side and fucking her in a standing position.\n\n\"Fine,\" He gave her a mock bow, \"My apologies.\n\n\"Why are you out here, Mr. Walker?\"\n\nHe let the smile fade and glancing over his shoulder to make sure Joe was out of earshot, said in a quiet voice, \"Okay, no more bullshit.\"\n\n\"Stop the presses.\" She quipped.\n\n\"Good one.\" He told her, \"I caught the news the other day and seems to me that fraud Knox wasn't too thrilled about whatever you were saying to him.\"\n\n\"He wasn't.\" She forced herself not to smile in satisfaction at the thought that he was following her story.",
        "\"What do you have on him?\"\n\n\"Have?\" she shrugged casually.\"I have what you have; vandalism to your property, harassment of your customers, lewd comments to some of your girls. Very Un-Christian like behavior.\" She gave JD a mocking smile.\n\n\"You have more than that. All he did when that jackass from Fox asked him that question was smile and say his people would never stoop to my level,\" he pointed at her, \"You said something that caught him off guard.\"\n\n\"Maybe.\" She allowed herself a real smile this time, enjoying being in control of the conversation with this arrogant jerk.\n\n\"Well maybe you could tell me.\"\n\n\"Now why would I want to do that Mr. Walker?\"\n\n\"So there is something.\" He put his hands up, \"Come on Molly, spill it. Knox is a bigger fish than me and whatever you have I have people who could....\"\n\n\"Oh, Molly now is it? Have we suddenly become friends?\" She shook her head, \"Sorry JD, you can try to be nice and you can give me that pretty smile and flash those eyes at me, but I'm not that easy\" Oh, yeah you are you slut the little voice in her brain reminded her.\n\n\"Easy? No. Smart? Yes.\" He told her. \"Smart, savvy and ambitious, The Playground isn't the story here, Knox is. Who gives a fuck if I eventually go down? I'm a pariah to most people anyway, it would just be an about time reaction.\"\n\n\"It would be more than that.\" At least for me, she added to herself. This Playground made dark perversions, like those of her own, seem almost normal, but she knew they were anything but normal. His club needed to go.\n\n\"But Knox? Its big news when one of these frauds go down. A huge story, the kind of story that makes, or in your case, reestablishes a career. He'd be a big feather in your cap.\"\n\n\"He would and one I can pluck on my own, thank you very much.\"\n\n\"Then why haven't you?\" He asked, \"Look, you have something against him. I could see it in your face on TV and Jimmy said you were acting like the cat that ate the canary when Knox ran from you. But it's not concrete evidence is it?\" He pointed at her, \"If it was you'd have nailed him. You have a scent, but you let me help you out with my sources we can...\"\n\n\"No thank Mr. Walker, we will not be doing anything. I can do this on my own and....\" She spread her arms out, \"Why decide between you and Knox, right now I'm watching the show and when it's over I'm sure I can nail both of you.\"\n\n\"No you can't. You missed me once already and if you have old dirt on him then maybe you missed him too. You know I'm right, he's the bigger better deal. You've seen first-hand what my connections can do, if you give me something to run with, it's...\"\n\n\"Sorry, Mr. Walker,\" She stressed his name. \"But I'm going to have to decline. I might be missing out, on a chance of becoming a big name,\" she started to walk past him back to the van, \"But in the meantime I'll just enjoy being something else.\"\n\n\"What's that?\" He remained where he was as she sauntered by him.\n\n\"A woman that can say no to you.\"\n\nJD gave Molly points, that parting shot had caught him off guard long enough for her to get into the van and drive of with that dumbass cameraman. \"Good for you Molly, he muttered to himself as he turned and walked back into the club. She really was cute when she tried to act all superior. He had enjoyed that little war of words despite the outcome not being in his favor. If she thought he could be put off that easily however, she was sadly mistaken.\n\n<center>* * * * *</center>\n\nJD sat in his Firebird watching the Channel Twelve headquarters. It was late afternoon when he finally saw Molly exit the building and hail a passing cab. As she climbed in, from his vantage point she looked slightly different, but he couldn't put his finger on exactly why, from the fleeting glance he had gotten of her.\n\nGunning the engine he followed at a discrete distance, becoming surprised as the cab entered Chelsea. This was a pretty seedy part of town for the prissy Miss Molly Malone ace reporter to be seen in. He chuckled once again, her name and persona reminded him of the old Dick Tracey series and he found himself getting into the character himself, \"What a ditzy dame,\" he muttered aloud with a gravelly voice.\n\nHe watched as she got out of the cab and went towards a dingy looking bar. JD smiled, he was right to follow her, she had to be meeting a source, why else would someone like her be seen in this fucking hell hole?\n\nGetting out of the car, he crossed the street ignoring the blaring horn of a cab that had to slam on his breaks to avoid hitting him. Gaining the sidewalk JD slowed down when he saw Malone still in the doorway talking to the bouncer. As he drifted towards the wall in case she glanced his way, he walked up behind two grungy looking guys leaning against the wall smoking.\n\n\"Hey check out that pretty little piece, she looks lost,\" the taller of the men spoke.\n\n\"Yeah,\" his friend agreed, maybe when she leaves we should watch out for her, you know\" he laughed, \"Make sure she get where she needs to go.\"\n\nThe first man paused then grinned, \"We can always offer her a ride and get her in that alley behind the.... \"\n\n\"Hey thanks.\" JD said \"I'd love a ride.\"\n\n\"What?\" They turned to look at him, \"That's my girl and like I said, a ride would be great.\" letting them get a good look at him he added, \"I'll be looking for you when we leave.\" As they glared at him he saw Molly had entered the bar and walking past the guy at the door, he looked around for her. She wasn't at the bar, but as he walked further into the dive, he saw her sitting by herself at a small table off in the corner by the two pool tables\n\nThe clothes Molly had worn to work had not really leant themselves to coming to this side of town. With her appearances on the news she had been recently upgrading her wardrobe and the bouncer seeing her in the red silk blouse and tailored skirt had stopped her to ensure she wasn't some high class hooker meeting a john. She had laughed and reassured him, exuding a confidence she didn't feel, but he had let her pass.\n\nShe took a stool at a table scanning the small crowd and looking for just the right sort of mark. She knew she couldn't go back to the bar at Roxbury that she preferred in case the guy from the other night was there, she didn't normally do this again so soon, but Walker had got under her skin today and her baser needs had surfaced strongly. \n\nWhat the hell am I doing, she asked herself, but her eyes continued to size up the men who filled the small bar.\n\nJD slowly approached her and as he got closer his eyes widened. Malone's hair was not just down, but teased out in a messy style, her red blouse was unbuttoned far enough to expose a red lace bra that showed a decent amount of cleavage. As he got closer he also noticed her lips were now painted in a deep shade of slut red giving her a wanton appearance.\n\nMalone wasn't looking his way, but was watching the bar where several guys were checking her out. One of them gave her a wave and was rewarded with a sexy little smile and a toss of her hair. Leaning back, her gaze still fixed on the men at the bar, Molly crossed her legs and JD saw her skirt was now well above her knee close to her mid thigh and she had changed her shoes to a pair of red stilettoes with straps that wound up her leg and tied behind her knees\n\n\"Holy shit!\" He whispered, she wasn't here to meet a contact she was fucking slumming!\n\nShe continued to flirt with a tall mean looking blue collar worker who appeared as if he had not been home to shower after work. He bought a couple of shots and took them to her table. She smiled prettily, inviting him to sit. She was playing her game getting caught up in the fantasy when she saw movement from the corner of her eye. Molly froze, recognition dawning on her, \"Fuck!\" she hissed and cowered, hiding behind her hair hoping JD hadn't seen her though she was sure he was headed straight toward her.\n\nJD watched the loser from the bar approach holding two shots glasses. Molly was smiling away at him, her hand twirling her hair, her big brown eyes staring up at him. He realized he had wasted too much time watching her and now had to make a move. Once that asshole sat down it would be a lot harder to get rid of him. He walked up to the table just as the guy handed Molly her shot and started to edge over to the other stool.\n\nQuickly sliding into the seat before the guy could, JD deftly plucked the glass from his hand, downed the shot of Jack Daniels and looking up into the man's surprised face said, \"Hey thanks, man next ones on me!\n\nThe guy bristled and JD could see him gearing up for a fight, but he ignored him turning to Molly and saying, \"Thanks for grabbing a table I found a spot just across the street. Who's ya new friend?\" \n\nThe guy who had thought Molly looked like an easy conquest, took the hint and looked at her for confirmation as Molly peeked up through the wild tangle of her messy hair. \n\n\"Yeah no worries,\" she said in response to JD and gave the man a look of regret. \"I'm not sure, we just met. The man grunted and moved back to the bar without pursuing it further.\n\nOnce the man moved away Molly hissed, \"What the hell are you doing here, Walker!\n\n\"What's the matter, Molly, didn't you come here to meet a man?\" It's none of your business why I am here, but I am following a story if you must know. The whole world doesn't revolve around you and your perverted little club,\" she lied glibly\n\n\"A story?\" He smirked, \"One with a happy ending I'll bet.\"\n\n\"Why are you here?\" She asked again, the frustration evident in her voice. She hated that he had chased away the only real prospect this bar had to offer and ruined her night\n\n\"I came to talk.\" He gave her a long up and down look, his eyes making their way up her exposed legs and lingering on her chest. \"You on the other hand look like you came to...\" he winked, \"Make a new friend.\"\n\n\"Oh stop being an ass, just tell me what you want or leave me alone.\" She made as if to gather her bag and leave.\n\n\"I'd sit if I were you. Got yourself a couple of fans out there.\" he shrugged \"Unless you're into being tag teamed.\" he cocked his head, \"Are you?\"\n\nShe shook her head and gave him a disgusted look, \"Not everyone is as depraved as you are JD, and I can look after myself.\n\n\"Not everyone, but I think you might be.\" folding his arms on the table he leaned forward.\"You like it rough, Molly? You like coming to these places dressed in your best business slut style and going home and being treated like a whore?\" He smiled as she began to blush, \"Hey it's okay, lot of women are into that. I have to admit you had me fooled, I figured you might be a dyke the way you act around guys\"\n\nShe spluttered and flushed as he hit too close to the mark, but the righteous indignation of years of denial rose up in her and she said through gritted teeth. \"Well my source won't be coming near me tonight so if all you have to talk about are insulting slurs on my character, I will be going...\"\n\n\"Source? Is that what you call them? Do you pay them on your knees in the alley?\" When she made to rise again he put his hand out and catching her arm kept her from getting up, \"Okay, fine. I'll stop, but we need to talk.\"\n\n\"I don't have anything further to say to you, you make me sick with your innuendo and bullshit.\" In truth it turned her on more than she wanted to admit, this was JD Walker after all.\n\n\"Do I?\" He asked, and waving his hand to indicate the bar said, \"If this is where you find your fun I would think I'm just your style. Listen Molly, I don't care what you do for kicks. I came here because I want to talk.\"\n\n\"I am here to meet a source for God's sake,\" she said louder than she meant to, realizing that her clothes and look said otherwise.\n\n\"Okay fine.\" he sighed and sat back, resting his back against the stool. \"You're here for work.\"\n\n\"Yes I am,\" she said with satisfaction.\n\n\"Well seeing as how I doubt your source is coming anytime soon, how about we have a little chat? After all a girl like you shouldn't be sitting here all alone.\"\n\n\"It's none of your business Walker. I didn't ask you to come and babysit me,\" she was still angry. \"I'm fine on my own, but say what you have to say already or I am going\"\n\n\"You're the one with the story to tell, Molly.\" He told her as he raised his hand to signal the bartender, \"You know my deal, what's yours? What's up between you and Knox?\" before she could reply he asked, \"What are you drinking?\"\n\n\"I don't want a drink, and I am not going to tell you my life story so just get over it,\" she sighed dramatically, rolling her eyes. \"Knox is just an evil prick who spins his shtick into a form of religion. I don't like it or him. End of story.\"\n\nJD didn't reply right away, instead as the bartender looked his way he called out, \"Two shots of Jack and two buds!\" Turning back to her he said, \"Well we have something in common because I can't stand that phony bullshit either.\"\n\nMolly downed the shot and glared him, \"Trying to manufacture common ground?\"\n\n\"Molly simply put, the enemy of my enemy is my friend.\" JD responded. \"I would think being a reporter you would know that.\"\n\n\"I have no enemies JD, unless you feel that way, but to be honest I am fairly ambivalent about you, the only reason we have to talk is because you're news and I am covering it,\" she said with a tone of finality.\n\n\"If your job is news then try doing it. Knox is the prize Molly, and you know it. Whatever you have I can make it work.\"\n\n\"What is it you think I have JD, please tell me, because it's all news to me.\"\n\n\"If I knew I wouldn't have to ask.\" He downed his shot, followed it with a long swig of the beer and releasing a long breath asked, \"Molly what do you want out of this?\"\n\n\"I am just reporting the news, you're the one who came in here scaring my source away and making no sense at all. Why would you even think I had anything over Knox?\"\n\n\"You had no source, Molly, we both know it. I know why you came here, and you know I know, so stop lying to me. If it's one thing I know it's a liar. Knox is one of them. He's dirty. Everyone says no, but I know it and I think you do to.\" He pause for a moment, \"I'm not blind, I saw the look on his face when you were in front of him., he looked like he was going to piss himself. This guy is like ice any time anyone else asks him asks him a question, so you have to know something.\"\n\n\"What could I possibly know? I don't subscribe to organized religion. Without religion there would be no wars in the world,\" she finished lamely.\n\n\"Where are you from, originally?\" he asked, \"Molly I've been all over the country and if I am not mistaken I hear more than a little southern drawl in your voice. Sounds a little like Knox's mush mouth accent.\"\n\nMolly grimaced she had worked hard to disguise her accent over the years \"I don't see how that matters, the south is a big place.\"\n\nJD caught it and pressed her. \"So where'd you meet him before? His church? A seminar, one of those big ass bible camps?\"\n\nAt the words bible camp, Molly felt the color drain from her face. JD was getting way to close. In a panic she grabbed her bag and left the table heading toward the door.\n\nAs Molly bolted, JD stood up and tossing a twenty on the table, quickly caught up to Malone catching her by the arm just as she made it out into the street.\n\n\"Whoa slow down, a girl like you shouldn't walk around in this neighborhood by yourself.\"\n\n\"Leave me alone JD. I don't have what you are looking for, I can't help you.\" she flagged down a passing cab and ripped her arm from his hold and all but jumped into it.\n\nGrabbing the door before she could close it, JD said softly, \"No, Molly, I think you being here proves I have exactly what you're looking for, and you running like this means you do have what I want. You can run now, but won't be able to hide for long.\"\n\nJD wandered down the hallway his head down trying not to focus on all the green lights over the doors declaring them available. At least there were a couple of red ones, but nowhere near enough to compensate for what they'd been losing. Miranda had left him a voicemail asking him to look her up as soon as he got there. He knew what she wanted; it was time to let a few of the girls go, they couldn't keep paying them something to hang around and they couldn't keep losing money. \n\nThe other clubs in town were making them offers and at this point he couldn't match them, nor could he blame them if they left. Still once they did leave he doubted he would get them back. Miranda had been hinting at this and he was sure she had compiled a list and put it in the order of who was most expendable. Girls who had the least limits and served the most fetishes would be safe for now. \n\nIt would be the few girls who only came there to dance who would be first. Julie, Tammy and Jimmy were the three who would be there until the very end, but anyone else could be on borrowed time if things didn't get better. Right now he had a hard time seeing that happening. He had to admit things had gotten bad when Malone was looking like his best option. Last night proved to him there was something there, but she sure as hell didn't seem as if she were about to talk about it.\n\nJD was going to have to have someone follow her, get some pictures of her acting like the slut she seemed to be looking to be last night and send them her way letting her know he wasn't playing. It was all he had left right now and even then who knew what she really had? If it was something that good Knox would be gone, but something was better than nothing.\n\nHe saw Miranda's office was empty and thought about heading into his, but what was the point? He'd just sit there and get depressed. He continued past his office and out into the club where Miranda was sitting at the bar, sipping a Bloody Mary while looking at the notebook in front of her.\n\n\"Morning,\" He said leaning against the bar next to her.\n\n\"Early afternoon,\" She said without looking up, \"What's the matter, run out of places to go so you could duck this conversation?\"\n\nHe glanced down at the notebook and sure enough there in her perfect penmanship was the name of every man and woman who worked at the club. Some had numbers next to them, some were blank. \n\n\"You want to help me rank everyone or are you just going to leave it to me?\"\n\n\"You want to do this here?\"\n\n\"No, we'll go in the back.\" she waved disgustedly at the few patrons who were over near the stage Mandy was working. \"I just came out here for a drink and figured what the hell, its quiet enough to work.\"\n\n\"Do we really need to do this, Miranda?\"\n\n\"Yeah, JD we do. At least five people and if things don't get better we'll have to...\"\n\n\"JD!\" \n\nHe snapped his head around to see Debbie one of the dancers who wasn't on yet, looking through the one way glass that faced the parking lot. \n\n\"Julie's on her way in and those guys are all around her. One of them just grabbed her arm!\"\n\n\"Where's Jimmy?\"\n\n\"He's out behind the club smoking, I think.\" Miranda said, rising from her stool.\n\n\"You stay here!\" he snapped at here. Running across the floor, he pointed at Debbie, \"Go get Jimmy!\"\n\nJD burst out of the club to see Julie halfway across the lot surrounded by several of the thugs. JD began striding over to them and heard one yell, \"Where you going whore?\"\n\n\"Get out of my way!\" Julie snapped and reaching into her shirt pulled out a can of pepper spray.\n\n\"Oh, we're scared. Just put it down and let's go behind the building. You can get on your knees and repent for us.\"\n\nThat was very Christian, JD thought dryly as he approached. Julie lifted the can pointed it at Greg who was right in front of her. She cried out when one of the others lashed out and slapped it from her hand. Grabbing the collar of her shirt he yanked hard, tearing it half off of her."
    ],
    "authorname": "xelliebabex",
    "tags": [
        "prostituion",
        "whore",
        "club",
        "sin",
        "demons",
        "non-consent",
        "fights",
        "bdsm",
        "hellfire",
        "playground"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/by-demons-driven"
}