{
    "title": "Hurrah for the Pirate King",
    "pages": [
        "\"You need to get more aerobic exercise,\" said Dr. Smith, studying the printout that integrated the stress test, lung capacity test and blood oxygen levels from the torture device on which I'd just spent 15 minutes. \"Your muscle tone and body fat percentages aren't bad, and neither is your cholesterol level, but your oxygen delivery stinks. How much exercise do you get a week?\"\n\n\"I do three hours a week in the gym instead of eating lunch,\" I said.\n\n\"Lifting weights, I bet. Presses, clean-and-jerks, leg presses, curls?\"\n\n\"And inclined sit-ups, twisters and crunches,\" I agreed. \"What's wrong with that?\"\n\n\"What's wrong with it is that it's doing damn-all for your endurance. You need to add a good aerobic workout to your routine.\"\n\nI snorted. \"Yeah, right. Step up and down off a little bench, clapping my hands while some skinny, spandexed woman with buns of steel urges me and fifty fat, fatuous females to 'go for the burn?' No thanks.\"\n\n\"There are other forms of aerobic exercise.\" Doc scribbled on a prescription pad, tore the sheet off and handed it to me. \"I want you to start taking iron supplements and folic acid tablets to build up your red blood cells, and I want you to follow this prescription for at least six months. Now stop cluttering up my office, I have sick people waiting.\" A smile took the sting out of his last words as I put my shirt and tie back on. Given a choice, Doc would much rather prescribe exercise and healthy eating than pills or shots.\n\nOn my way back to work, I took the prescription slip out of my pocket and read it. It was cryptic, to say the least:\n\n\"Go to 114 East Dyer Street, 2nd floor and talk to Sandi. Tell her I sent you. Listen to what she has to say and follow the regimen for six months. Then visit me again. Dr. Smith.\"\n\nI found it hard to keep my mind on the server I was debugging that afternoon. Granted that like most computer jocks I live mostly inside my head and do much of my socializing over the Web, I do know the value of regular exercise and getting out of the house. I also know that Dyer Street is in a mixed-use part of town. There are trendy boutiques, clubs, bars, a couple of decent restaurants, bookstores, and apartments mostly populated by college students and singles working in offices. What the devil would Doc be sending me there for?\n\nWhen I finally got the server back up at 6:30 that night, I put on my hat (everyone from the receptionist to the CEO teases me about my fondness for wide brim fedoras right out of a film noir gumshoe's wardrobe), hopped on a bus and got off at Dyer Street. 114 East Dyer turned out to be a clothing store catering to the college crowd, its windows decorated with Halloween pumpkins, witch's hats, brooms and cornstalks. The stairway next to it led to the upper floors. The door on the second floor landing had \"Cappellini School of Dance\" neatly lettered on its glass window. I cautiously pushed it open and entered the lobby.\n\nIt wasn't much of a lobby as such things went; just a couple of tired couches and chairs and a sliding window that looked into an empty office. Posters of ballet dancers, a belly dance troupe, ballroom dancers in evening wear, and a blowup of Donald O'Connor, Gene Kelly and Debbie Reynolds from Singin' in the Rain decorated the walls. The inner door was open. I slowly walked down the corridor.\n\nI passed more posters, these overwritten with competition information, and the men's and women's locker rooms before coming to two doors that would have done credit to a vault. The one on the right, marked \"Studio B,\" was closed. I could faintly hear Middle Eastern drumming through it. From the hallway, I peered into Studio A. \n\nA dozen couples were scattered around the room. As I watched, the opening notes of the \"Blue Danube\" came out of hidden speakers and they began to gracefully waltz around the floor. At least to my eyes they looked graceful. To the instructor at the far end of the room in unitard and short skirt they apparently looked like cows on ice.\n\n\"Left arm higher, Petie! Lead firmly, don't hesitate! Elyse! Eyes on your partner, not on your feet! You ought to know your steps by now! Maria, what are you doing? Don't hang on his neck! This isn't a sock hop, you know! David, stop counting and take your cues from the music!\" The commentary continued until the waltz ended. At a gesture from the instructor, the dancers gathered around her for the verdict.\n\n\"You've been studying and practicing for six months now. Some of you might actually be mistaken for ballroom dancers if the hall is badly lit. You have made progress and I'm pleased.\"\n\n\" 'She may very well pass for forty-three, in the dark with the light behind her,' \" I muttered to myself. I hadn't reckoned on the acoustics. The black-haired teacher looked past her pupils with a laser glare that fixed me where I stood. She went on, \"I'll be in touch to inform those of you who are ready to move up to intermediate classes. The rest will continue in the next novice class. That's all.\" The students gathered up their sweatshirts, towels and water bottles and streamed past me into the corridor. Following them, their teacher stopped in front of me. Petite, small-busted and well muscled, with her hair cut to shoulder length and a clear olive complexion, there was no doubt she was in charge.\n\n\"Comments from the peanut gallery aren't appreciated. What do you want?\"\n\n\"I was referred to you by my doctor,\" I said, handing her the prescription form. She read it, chuckled and extended a hand.\n\n\"I'm Sandi Cappellini. You're not the first patient Doc Smith has referred to me,\" she said, starting down the corridor and waving at me to follow. \"He believes in killing two birds with one stone, and he's right that dancing is much more fun than aerobics. What sort of dance do you have in mind?\"\n\n\"What are my choices?\" I asked, taking a seat opposite her in the office.\n\n\"We teach ballroom, folk, tap, Middle Eastern, medieval and Renaissance, 20th Century Popular and, heaven help us, club dancing.\" Sandi eyed me speculatively. \"Have you any experience, any preference?\"\n\n\"Well, I can waltz a little. When the Gower Street Savoyards staged The Pirates of Penzance, we all had to dance in the finale. I won't say I was good, but at least I didn't trip over myself or step on my partner's feet.\" (\"Not in performance, anyway,\" I silently amended. Learning that waltz had been the hardest part of the production for me.)\n\n\"Perfect. At your age, ballroom will be an asset to your career. The novice class cycle will be starting next Tuesday. It meets Tuesdays, Wednesdays and Fridays at 7:00 PM and runs for 90 minutes. What's your shoe size?\" I told her. \"I'll order a pair of dancing shoes for you. Dress is casual until we're much farther along, at which time women dress for the ball and the men all turn into penguins. Here's a registration form. Fill it out and give me your credit card, and you'll be all set.\"\n\nSomewhat bemused by her take-charge attitude, I filled out the form and handed over my card. A minute later, she gave it back, stood and shook hands as she escorted me to the door.\n\n\"I'll see you on Tuesday,\" Sandi said. As I turned to leave, I noticed a woman watching me by the door to the women's locker room. She was worth a second look. She stood about five foot seven with a substantial bosom, a nipped-in waist over flaring hips, long dancer's legs and straight black hair pulled back into a ponytail. Sweat gleamed on her umber skin. Her nose was straight and her lips were narrow, which led me to speculate about ancestors from the Indian Subcontinent. She looked like the Punjabi answer to June Wilkinson, the legendary Playboy model and actress of the 1960s. The skintight leotard left nothing to the imagination yet at the same time stimulated fresh imaginings. The look on her face was easily interpreted, the veteran cynically eying the inexperienced newbie: \"F-r-e-s-h meat!\" Something to dream about until my first lesson.\n\nAfter work the next Tuesday, I walked into the dance school office 15 minutes early, picked up my new dancing shoes, changed into them and left my sport coat and tie in the locker room. I joined the crowd of milling novices in Studio A. Sandi walked into the room and called for quiet.\n\n\"Welcome to Introductory Ballroom Dance. My name is Sandi, and I will be your instructor. This course meets three times a week unless I tell you otherwise. If you have to miss a class, call or see me in advance. Spread out and let's warm up.\"\n\nThe warm-up that followed left me dripping in sweat. Pli\u00e9s, body twists, slow dips and bows, sit-ups, leg lifts; just getting ready to dance was a workout in itself. When Sandi was done torturing us (she wasn't even breathing hard), she gathered us around and paired us off by height, always with the woman at least four inches shorter than her partner.\n\n\"Meharani, you'll be partnered with Harry.\" I looked at the woman Sandi motioned forward. It was the gorgeous girl I'd seen in the corridor when I'd registered the week before! \n\n\"Harry, you must have done something very good in a previous life to be this lucky,\" I thought to myself. I walked over to her and offered my hand, a touch theatrically I admit, intending to move a couple of steps away so we would have dancing room. Meharani smiled as she took it.\n\nWhat felt like a blue-white spark of electricity raced up my arm and exploded in my head like a sun going nova. The casual attraction any pretty woman holds for a man was replaced by raging lust for this particular female. My hindbrain screamed that I had to have her and devil take the consequences. From the look of shock in Meharani's eyes, the same thing had just happened to her. The two of us fought to get our equilibrium back as the universe roiled around us, unnoticed by the others in the rehearsal hall. I finally managed to tear my eyes away from hers and pay attention to Sandi's instructions on how to do the basic steps of the waltz. However, I did not let go of Meharani's hand, and she made no effort to pull free. Nothing like this had ever happened to me before.\n\nWhen Sandi told us to take the starting position and switched on the stereo, we began to dance. My partner was graceful, an inherent quality I suspected. I was much less assured than she despite my prior experience with the Gower Street Savoyards, but at least I didn't step on her toes. To be honest, I was far more concerned with concealing the raging erection in my boxers than dancing like Fred Astaire. If she was aware of my condition Meharani took no notice of it. Compared to her I felt like a dancing bear; yet for all of that we fitted together.\n\nThe music ended. Sandi, who seemed to have cameras for eyes, automatic holographic playback in her brain and a tongue honed to razor sharpness, was much gentler with us than with the other couples.\n\n\"Rani, you looked pretty good, even if you were subtly pushing your partner the way he is supposed to go. And Harry, here's a clue: a good male ballroom dancer is ramrod straight yet supple at the same time. When you figure how to be that, you'll be getting somewhere.\n\n\"Okay, everyone, that's it for today. Be sure to practice at home, ideally in front of a full length mirror. I'll see you tomorrow, same time, same studio. Good night!\"\n\nThe sweating crowd moved toward the studio doors. I held Meharani back by the arm. She looked at me.\n\n\"Uh, would you like to go grab a cup of coffee or something?\" I stammered. Smooth, Harry, real smooth. No wonder all the girls fall at your feet!\n\n\"I can't tonight, Harry,\" said Meharani. \"Here it comes, the kiss-off,\" I thought. Then she continued, \"I have to dash because I'm on in an hour. But you might ask me nicely again tomorrow.\" She dimpled as she smiled. \"I'm curious to see what I'll say!\" Then she was gone. I walked to the men's locker room, unaware of the bemused expression on my face.\n\nI quickly changed and hustled downstairs, taking a position across the street where I could see the doorway, smiling at the mental picture of myself as Sam Spade complete with hat and trench coat. When Meharani emerged, she turned right and I tailed her, unobserved I hoped.\n\nThe trail ended at Caf\u00e9 Morocco, a restaurant that looks as if it had been transplanted from French North Africa before the Second World War, all stucco, onion archways, brass pierced-work and leather cushioned chairs around tables dripping white linen. It rates high in the restaurant guides for its food, entertainment and atmosphere. The waitstaff all dress in ethnic Moroccan, the menu is printed in English, French and Arabic, and it doesn't take much to imagine Sydney Greenstreet, Claude Rains and Humphrey Bogart having a drink together in the dimness of the back corners. There is a bandstand - Caf\u00e9 Morocco is one of the last restaurants in the city with a dance floor that has music you can dance to that doesn't involve jumping around like a spastic kangaroo - and a large dance floor of real parquet. I ordered a coffee and a couple of beef kebabs and settled down to wait.\n\nThe Caf\u00e9 features belly dancers from 8 to midnight on the nights when there isn't live music for its patrons. I recalled an article in a magazine that listed the best places to find belly dance in the state, and it had been in the top five. The article had indicated the Caf\u00e9 was a regular stop on the circuit for well known professionals, but also provided a venue for talented amateurs and pros just starting out. My food arrived. I ate slowly; I hadn't come here with dinner in mind. I watched the dancers moving on the floor in the age-old steps and hand motions of good Middle Eastern dance, waiting.\n\nAt 9:30, a spotlight lit the doorway to the right of the stage and a gong sounded. An unseen emcee intoned, \"For your enjoyment, the Caf\u00e9 Morocco is proud to present - Meharani.\"\n\nMy erstwhile waltzing partner flowed out through the beaded curtains in the doorway. An oud wailed and tambours thrummed with the beat. The zills on her fingers chimed an intricate pattern and Meharani began her routine.\n\nThe hum of conversation that had overlaid the other dancers' performance died away as she whirled around the floor in her outfit of translucent harem pants, belt of chiming bells that tinkled as she moved, striped top that showed off her bust and a token face veil thin as winter breath. The men in the room were busy ogling; the women alternated between jealously watching her and glaring daggers at their dates.\n\nThe dance steps and body motions spoke of a simpler time. A time when a man's worth was judged by his skill with horses and swords, by his ability to pull off raids, by his valor and courage. A time when women were valued not only for fairness of face but for grace and skill as well. Meharani danced a twenty minute set and was rewarded by applause, whistles and the shrill ululations used to show approval by North Africans before she disappeared back through the beaded curtain. I finished my dinner and left. That night, for the first time in a long while I had a vivid dream. \n\nShe and I were in a tent in the desert. I was dressed as an Arab sheik. She was wearing the same outfit she had danced in, but it was made of transparent silk that hid nothing. She was dancing for me, holding a silk scarf, using it to tease me, flicking it toward me but pulling it back before I could grab it, laughing each time I tried to catch it. She flaunted her firm, cantaloupe sized breasts, the nipples hard and long, ready for a man to suck and fondle. She drew the scarf between her legs, sawing it back and forth, rocking her hips to meet it. The junction of her shintiyan darkened from the moisture dripping from her slit. She flickered her tongue at me, dancing almost close enough to touch before spinning away to the far side of the Persian carpet she danced upon.\n\nShe danced a step too close and flipped the scarf she had used to masturbate herself at me. My hand flashed out and caught it, pulling her into my arms, grabbing her roughly by the hair and crushing her mouth beneath mine. Our clothes vanished and as my hands sought her proud breasts, hers grabbed my rigid cock, swollen to twice its normal length and girth, stroking it to even greater size. She moaned soundlessly against my mouth, wanting and wanton.\n\nWith no warning she was on the carpet, laying back, her arms reaching out to me, her mouth open, her pussy gaping wet and hot between her spread legs. I mounted her like a stud servicing a mare in heat and my steel hard cock sank home. Our pubic bones met. We began to fuck, my hands squeezing her boobs, pinching and pulling her nipples as my cock slammed in and out of her. She threw her head back, her hair wild on the carpet as her nails gouged divots out of my back, urgent, demanding, her hips rising to me meet mine as I hammered her velvet pussy, her mouth open to suck in the air she needed as we screwed without letup. Her eyes were flame as she pulled my head down and locked her mouth to mine and we climaxed as one, her juices spurting and drenching us both as my sperm shot deep into her to drip out of her cunt.\n\nI awoke with a start. I was soaked and the tangled sheets were dripping with sweat and spunk. For the first time since I was a teenager I'd had a nocturnal emission. I got up, changed the bed and took a shower, but sleep was a long time coming.\n\nOur next dance practice continued with the waltz. Remembering what Sandi had said, I took a firmer lead. Meharani let me, though she was not above subtle guiding pressure if I faltered or started to drift off beat. Afterwards, she walked off the floor without giving me a chance to ask her to grab a bite. When I came out of the locker room she was waiting in the lobby.\n\n\"How about that coffee?\" she asked, taking my arm. I smiled and we walked together to the nearest coffee shop. We took our coffees and sat down at a table for two. We looked at each other across the table, suddenly shy and unsure how to proceed now that we were off the dance floor. Meharani broke the ice.\n\n\"What did you think of my set last night?\"\n\nI had just taken a sip of my Kenya AA and nearly choked on it. Her eyes laughed as I struggled for air and words.\n\n\"I though you were marvelous. But how did you know I was there?\"\n\n\"I saw you in the second row of tables while I was waiting to come on. I don't know how you found out where I was performing, but I'm flattered that you cared enough to come and watch. Most of the guys I've dated see dance only as an excuse to get their arms around the girl and shift to bone-dancing in the bedroom. They don't appreciate the art. You do; I can tell.\"\n\nI made a mental note not to tell her about that wet dream. At least, not right away.\n\nRani and I talked for what seemed like only a few minutes, but the waitress's discreet cough that brought us back into the real world also brought the knowledge that it was one o'clock in the morning and a workday at that. I hailed a cab for her, since we'd established we lived in opposite directions. She kissed me on the cheek and said, \"See you on Friday,\" before climbing into the cab. I watched it leave and hailed one for myself. With luck, I could catch the train, get home and still grab a couple of hours of sleep before going in to work.\n\nFor the next couple of weeks, life proceeded apace. We would meet at dance class, and afterwards, our schedules permitting, have coffee or something to eat. We achieved a comfort level with each other. Me, I wanted to kick things up a notch. Over coffee on Wednesday, I proposed that we take in a movie; go on a real date. She hesitated for a second, then agreed.\n\nAfter Friday's dance class, Rani and I walked to Caf\u00e9 Morocco, where she performed her regular set. When she had changed back into street clothes, we cabbed it to the local multiplex. It's the only independent movie house in the city, and its owner is an astute judge of filmmakers. For example, in 1976 he booked the then-unfinished movie of a little known director for the whole next summer when few others were willing to take a chance on him. Because of that, he gets every movie George Lucas directs or produces a week before it officially opens. He took similar chances on the Coen brothers, Kenneth Branaugh, Joss Whedon and Gurinder Chadha back before they became household names. As a result, he has a mix of cult classics, Hollywood blockbusters, art pieces, independents, English-dubbed Bollywoods and subtitled foreign flicks even when he's not running a film festival for the local university. You can always find a good movie to watch there.",
        "We bought our tickets and agreed on a movie, a revival of Casablanca. Rani led the way to the Screening Room, an intimate little theater of only 100 seats the owner uses for films played for the benefit of students taking The Art of the Film and old movie aficionados. It has settees, couches, club chairs and end tables in addition to the usual theater seats. To my surprise she selected a leather loveseat in the back. We sat. The Screening Room was almost deserted; we shared it with half a dozen students taking a film course and they were down front.\n\nAs the great love story unfolded, Rani sat close, caught up in the movie. She didn't think it at all unusual when La Marsellaise was played by the onscreen orchestra in reply to the Nazi marching song the Germans were hammering out on Sam's piano and the caf\u00e9 patrons stood and sang, for me to stand and sing too; she stood with me. (So, I noticed, did most of the film students. I guess there's a little romantic in all of us.) When we sat again, she snuggled in close and I put an arm around her. She laid her head on my shoulder.\n\nAs Ilsa confronted Rick after hours in his office, Rani turned her face up to mine, eyes shining. We kissed, gently at first. Her lips opened under mine and I felt her tongue probing as my lips relaxed. Our tongue-tips touched. Lightly at first, our tongues caressed each other; then with increasing urgency thrust against each other as cocks thrust into pussies. Her mouth opened wide and my tongue invaded it in response to that invitation. She sighed and pressed closer. My hand rose to her breast, stroking the soft firmness through her blouse. My fingers found her nipple and lightly pinched it through its silk covering. She moaned, not resisting my attentions. I felt the nipple harden under my fingers and continued to caress her, enjoying the rising heat in her. However, when I shifted my hand to the buttons of her blouse, she broke the kiss and took my hand away.\n\n\"No,\" she whispered. \"Not now. Not here. It's too soon. It's got to be right.\" She kissed me again, lifting my hand back to her breast and dropping hers into my lap, stroking the lump she found waiting there. For the rest of the movie, we tormented ourselves, pleasing each other but within the limits we had tacitly agreed to. I loved the feel of her hand on my cock. From the way she purred, she was enjoying what I was doing to her tits. I could understand her point, though: we needed to know each other more outside the bed before we climbed into it.\n\nWhen the movie let out, we walked slowly down the sidewalk, arm in arm, just enjoying each other's company. We didn't feel the need to talk, but the dynamic was peculiar. Neither of us wanted the evening to end, but it wasn't yet time in our relationship for bed. At last Rani waved down a cab. I walked her to it and opened the door.\n\n\"Harry, do you drive?\" she asked as I opened the door.\n\n\"Yes, I have a car if that's what you're asking. Why?\"\n\n\"There's an estate auction tomorrow not too far from here. Would you like to go?\"\n\n\"With you? Of course!\"\n\nShe leaned forward and gave me a quick kiss, handing me a card. \"There's my address. Pick me up at 8:00 so we can get there for the preview at 9:00. The auction starts at 10:00. Call me when you get close and I'll meet you at the front door.\" She ducked inside and the cab pulled away. I carefully tucked the card into my wallet and set about finding a cab of my own.\n\nRani was waiting outside a granite-faced apartment building with stores flanking the glass entrance doors when I pulled up at 7:55 on Saturday morning. I saw her eyes widen with delight as she looked at my car, a black Mercedes 350 SDL. I looked at her outfit of high-heeled boots, flowing skirt just long enough to brush the boot-tops and tight-fitting leather jacket, thinking sensuous thoughts as she opened the door and got in.\n\n\"Good morning,\" I said, offering her a cup of steaming coffee I had made myself. She inhaled the steam appreciatively and planted a tender kiss on my lips as she took it.\n\n\"You darling man. Are you always this considerate?\"\n\n\"Only most of the time,\" I replied as I pulled out into traffic and turned onto an avenue that led south out of town. She marveled at the quiet power and sure handling of my faithful steed as we drove.\n\n\"I didn't know computer pros made enough to afford to buy yachts,\" she teased. \"Or did you inherit this?\"\n\n\"No, this is last year's bonus. I had to fly to Dallas to oversee the replacement of an entire office network back in April. I was driving back to my hotel and this was sitting on the local Mercedes dealer's lot. So I pulled in, strictly on impulse \u00be I'd driven my boss's 350 once, when I had to go on a call and my car was in the shop, and I'd liked it \u00be and checked it out. The dealer had just taken it in as part of an estate settlement and was planning to list it on eBay because most of his customers want newer Mercedes and prefer gasoline to diesel. One thing led to another and we worked out a deal for him to put on new tires, do a complete inspection and overhaul and fix everything wrong with it, in return for me upgrading his dealership and his house to wi-fi standard plus some cash.\n\n\"When I called to ask for a few days off so I could drive her home, the Skipper laughed and told me to take my time. When I got back to work there was a check for the Blue Book value of the Q-Ship waiting on my desk with a note from him telling me to enjoy my bonus. Everyone in the company has been teasing me about driving The Big Black Boat ever since. For my birthday this year they clubbed together and gave me a scale model of the German raider Atlantis and a U-Boat captain's cap with the eagle replaced by a Mercedes-Benz blue and white badge. I don't mind. If they didn't like me, they wouldn't bother.\"\n\nRani sipped her coffee. \"It actually is a sensible car, given what fuel prices are doing. Daddy has the same model, a '91 like this, and he swears it will outlive him.\" She fished in her shoulder bag for a minute and came out with directions to the auction. With her at the conn, we arrived there about half an hour later.\n\nGoing to an auction might seem a strange date to some, but I was happy for any excuse to spend time with Rani. We moved companionably through the old stone barn that was the auction hall after we bought a bid paddle and picked up two copies of the auction listing, examining things we were interested in, discussing what bids should be, and sometimes snickering at some of the offerings. Shortly before bidding was to start, she sat down on a couch in the third row and patted the place next to her. The barn wasn't heated every well and I could feel her thigh warm against mine as we adjusted ourselves for maximum physical contact.\n\nThe auction rules were simple. High bidder got the item; multiple items like dining room chairs were priced by the each and multiplied to obtain the final number; smalls would be brought directly to the winner while large items would be picked up after the auction; nothing to be removed from the hall until it was paid for. No buyer's premium this time. As this was an estate liquidation the auction house would take its cut off the top, 25 or 30 percent of the gross.\n\nThe first item I bid on was a king-sized down quilt. I got it for the starting bid, and as it was carried to us Rani asked, \"Why a quilt, darling?\"\n\n\"I don't know about you, but I don't plan to freeze to death while we wait for the stuff we want to come up!\" The people around us chuckled as we got up and I arranged the quilt around us. The next item either of us was interested in was forty-plus numbers away. Even at a rate of one lot per minute, we'd be waiting awhile before making another bid. Seeing my point, Rani snuggled close and I heard the sound of a zipper as she opened her jacket. \n\nShe shifted position slightly. She took my hand and placed it on her bare thigh while keeping an innocent expression on her face. I obediently began to caress her, stroking her silken skin and massaging gently, moving closer to her sweet spot. As the auctioneer kept up his amplified patter, my belt was undone and my dungarees opened. I felt Rani's manicured hand slip into my boxers to find my cock. Clasping me, she began to stroke my hardening prick, all without her face giving an inkling of her forward behavior.\n\nI tried to match her casual expression, hoping I was not giving any visible sign of the pleasure I was feeling at my beauty's daring public masturbation. I moved my hand to her mound and she parted her legs to grant me access. I expected to find my way barred by panties. To my delight, I discovered that while she was wearing panties all right, they were crotchless silk that barred my way not at all. \n\nI ran a finger up and down her labia, hearing a small intake of breath and feeling her grip on my rod tighten. I moved farther up, locating her clit by feel, brushing it gently before sliding back down and slipping my finger between her pussy lips. They were moist with her secretions. Lubricating my index finger, I returned to her pleasure center and ran my finger the length of her clitoral shaft, feeling it harden and swell from my feather touches as she closed her eyes slightly and a little smile quirked the corners of her mouth upward. Her hand never stopped moving on my manhood as we indulged each other in mutual passion in this very public place.\n\nAn oak and enamel Hoosier cabinet in perfect condition had ignited a bidding war and all attention was on the four bidders across the aisle as they fought over it, goaded on by the auctioneer. Rani whispered in my ear, \"Harry, you devil, what you're doing to me! It feels so good! I'm so close!\"\n\n\"Cum for me, then!\" I whispered back.\n\n\"Here? Now?\"\n\n\"Yes, here and now! Cum for me, Rani!\"\n\nAs I ordered my girl to climax, I pushed two fingers into her. She gasped in my ear and squirmed under the quilt, her pussy grabbing onto my fingers. I felt her wetness soak my hand as she moaned very softly, her thumb and index finger grabbing my prick just behind the head in an odd grip. I felt my cock explode but to my astonishment nothing escaped from it, although the pleasure was as sharp as though I'd shot my wad into the air \u00be or into her. She collapsed against me under the quilt and I withdrew my hand to put my arm around her shoulders. When she'd recovered her composure, she deftly tucked me back in and hooked up my pants. She dipped her head to her shoulder and kissed my fingers before unbuttoning a couple of buttons on her blouse and pulling my hand to her tits.\n\n\"We'd better be a bit more discreet, darling man, but thank you for my climax,\" she breathed into my ear. I said nothing but gave her breast a soft squeeze and tickled a nipple in reply. Her fingers slipped inside my shirt and she used her nails to torment me, an enigmatic smile on her face.\n\nThe day went on. We bid on a number of lots and won most of them, including a room-sized Persian carpet Rani wanted that went for almost a thousand dollars. When the auction was over and we had cashed out, I brought my car around to the loading area. I'd bought mostly smalls as had she; but there was the matter of the huge Persian carpet. She frowned at it, neatly bundled into a long roll and tied with binder twine.\n\n\"Getting that home is going to be a problem,\" she said.\n\nI opened the trunk. \"Fortunately, I come prepared for such little emergencies.\" I extracted a set of clip-on roof racks and set about securing them to the roof. When I was satisfied, the two of us muscled the long rug-sausage onto them and I tied it down. It wasn't long before we were on the road.\n\n\"Where are you planning to put that rug, anyway?\"\n\n\"In the lobby.\" she said, with a smile for my consternation.\n\n\"In the lobby? Won't the landlord have something to say about your redecorating the place without as much as a by-your-leave?\"\n\nRani chuckled and leaned against me. \"Harry, darling, my family owns the building. I manage it. I take care of everything; hire superintendents, collect the rent, handle trash-disposal contracts, see to cleaning and upgrading when tenants move out; all that kind of thing. I live on the top floor rent-free and collect a salary for doing this. It leaves me with time for business consultation, dancing and... pursuing other interests.\"\n\n\"Hmm.\" If the car had been parked, we'd have been kissing. We didn't say much more until we were parked behind her building.\n\nShe fetched a dolly from the utility room by the back door and ferried her small purchases upstairs while I unlashed the rug. When she returned, we manhandled it through the back corridor into the lobby. The two stores set into the ground floor formed a corridor that opened into the elevator lobby, black and white tiles and marble columns, rubber plants and gilded tables and mirrors, candle sconces as wall-washers and subdued overhead lights. There was a bronze postal box wall on the right side that looked as if it had come out of a WPA-era post office. On the left side was a fireplace with a conversation pit set up in front of it, couches and chairs around a marble coffee table with end tables and lamps by the chairs. Very homey.\n\n\"A number of tenants read their mail and the papers here every day. When we have tenant meetings, this is where we have them. There's a little kitchen area by the elevators with a coffeepot, hot water tap for making tea, a refrigerator for coffee and tea fixings and a microwave. It's kind of an extension of our apartments. I'm always looking for ways to make it nicer. Come on, let's move the furniture and get the carpet down.\"\n\nObediently, I helped Rani break the conversation pit down and move it out of the way. She positioned the carpet and we moved everything back. I was sweating before we were done. While I flopped onto the couch, Rani went to the fireplace and fiddled with something. Flames came on behind the glass screen; a gas fireplace. She settled against me and we watched the fire for awhile, the sounds of the city faint beyond two sets of plate glass doors.\n\nI felt her fingers stroke my hair. We turned to each other. She kissed me, gently at first, then hotter. I gathered her in, my hands moving up and down her back, caressing. I wanted to loose her tits from their confinement and suckle them; but when I moved my hand to her blouse, she stopped me.\n\n\"Please don't, Harry.\"\n\nHurt, I pulled back and looked at her. \"I don't understand, Rani. We've been dancing and dating for what, a month now? You certainly seem to enjoy it when I pleasure you, and you know damned well I love what you do to me. I think we're ready to take things to the next level. Don't you want to?\"\n\nShe slid away from me and caught my hands. \"Darling, I want to, but \u00be \"\n\n\"Why not, then? Heaven knows I like you well enough and you seem fond of me. Is it because I'm white and you're Indian? Is it a religious thing? Are you scared of what your folks will think? Something like that?\"\n\n\"No, darling, nothing like that. It's me.\" She paused. \"I was dating somebody. You don't need to know who. Somebody my parents approved of, until they met him. There was a fight and I sided with him and we walked out. I sided with him instead of them and then he dumped me, just like that, just like throwing away a pair of old shoes. It hurt. A lot.\n\n\"You're the first guy I've dated since then. I just \u00be Harry, I just don't want to hurt like that ever again. I opened up all the way to him and he trampled me.\n\n\"Can you wait for me to feel as confident of us as you do, darling? Please? I'm afraid of what I feel and I'm not sure yet, and I can't open up until I'm sure. Can you wait for me to be sure of myself? Will you?\"\n\nShe looked ready to cry. I studied her face. My feelings were churning inside me, the ocean of comfort and mutual compatibility mixing with undercurrents of impatience and horniness and bits of bachelor-rule flotsam like, 'If You Don't Get Any By The Fifth Date, Ditch The Bitch' and 'If She Compares Her Parents' Relationship To Yours, Cut Your Losses.' I knew I had to say something, but chances were whatever I said would be the wrong thing.\n\n\"Life is all about taking chances. It doesn't come with a guarantee. Getting hurt is the risk you take when you dare to open up to somebody. You just have to hope he won't abuse your trust when you put your heart in his hands.\n\n\"I can't say I'd never hurt you. No one can. What I can say is I would never set out to hurt you with malice aforethought. I think we have something here. I think I know what it is, but until you're willing to play the game and see what happens we won't know for sure. We both need to think on this and figure out what we are to each other and where we want us to go. Until we do, there's no point in torturing ourselves.\"\n\nI pulled on her hands and she came to me. We just held each other for awhile, our faces on each other's shoulders. At last I kissed her cheek and said, \"I'd better go.\" I walked out without looking back. However, my ears detected no sounds of sniffling or crying, so perhaps there was hope.\n\nA message from the CEO was waiting for me when I walked into my office Monday morning. There had been a fire in the building that housed our Phoenix office Sunday afternoon. It was unclear just how badly the office was damaged, but damage there surely was. He was sending me to Phoenix immediately.\n\nMy orders were right to the point, if not simple in practice. First, get a new office network up, running and connected to the national network in the temporary quarters that the vice president in charge was setting up. Second, inspect the fire-damaged office and see if any of the equipment could be salvaged. Finally, set up the new office as soon as we had space, and don't come back until it's done. I telephoned Rani and left a message on her machine.\n\n\"An emergency has come up. I have to fly out of town on business. I don't know how long I'll be gone. I will call you when I know more. I'll be back as soon as I can.\" I paused, and then added, \"I miss you.\"\n\nIn the time I had before I had to leave for the airport, I hardly had the phone out of my ear. By the time I got to the conference hotel where the veep that ran Phoenix had set up shop, I could see it had paid off. Trucks were unloading laptops and docking stations, printers, cabling and all the impedimenta required to turn the floor of a hotel into a temporary office. The vice president met me in the lobby and took me to my room, and I set to work.\n\nIt was a 24 hour day before I had all the computers dialed in, a replacement server set up, and the wireless network functioning to my satisfaction. Feeling worn out but not being so foolish as to try and drive while exhausted, I had one of the admins take me to inspect the fire damage. \n\nThe place reeked of smoke and the power was off as she cautiously guided me through the layout. I could see at once that the rented computers I had ordered as a temporary expedient was about to become permanent additions to the company's hardware inventory. The fire had started on the floor below and spread upward, scorching the walls and burning through in several places. The sprinklers had gone off, and between them and the water used to fight the fire the office was a soggy mess. The workstations were a total loss, though some of the hard drives might be salvaged if we were lucky. The small utility copiers were history. The server room had survived, though, and so had the big production copier in its outer office. This was the machine Phoenix used for large runs and big printing jobs, and thanks to the inert-gas fire suppressing system I had insisted be installed to protect the two rooms instead of merely extending the sprinkler coverage, we weren't out the better part of a million bucks.",
        "Back at the hotel, I briefed the head of the Phoenix office and we got our boss, the CEO, on the phone.\n\n\"Skipper, it's not as bad as you feared. The office is uninhabitable and water fried most of the electronics and PCs, but the servers and the big copier came through okay. Since the fire started after the daily and weekly backups were completed we only have lost whatever the staff didn't back to the servers in the individual workstations. I'll strip the hard drives and see if any of them still work. The paper files are wet around the edges but mostly we should be able to save them.\" I yawned. \"Bottom line: Mr. Johnson will need to arrange for new offices, but three days from the time we have new space we'll be at 90% or better. The setup here in the hotel will do until then.\"\n\nThe CEO, whose nickname was a result of his passion for his sportfishing boat, was pleased. Johnson prodded me awake and I realized I'd fallen asleep in the middle of the call.\n\n\"What was that again, Skipper?\"\n\n\"I asked you when was the last time you slept, Harry.\"\n\n\"Uhh....\"\n\n\"If you have to stop and think about it, it's been too long. Put him to bed, Johnny, and let him sleep himself out. He's got you up and running, and that's the important thing. Get some rest, Herr Kapitan, that's an order.\"\n\n\"Aye aye, sir.\" Brilliant repartee. I was barely aware of Johnson guiding me back to my room, which doubled as the server room for the temporary office. I was asleep before he got out the door.\n\nWhen I woke, it was dark outside. I felt alert but stiff. I turned on the television and discovered I had slept the clock around. After a shower, a shave and a change of clothes I felt much better and wandered down to the restaurant for dinner. On returning to my room I checked the server, corrected two minor faults that had come up, fired up my laptop, logged on and checked my emails. \n\nMr. Johnson had left me one telling me he'd signed on new office space and he'd take me to see it in the morning. He'd signed it 'Bill,' a tacit invitation to stop being so formal with him. There was one from his executive assistant, requesting a formal write-up on my inspection of the old offices for insurance purposes and inviting me to lunch. She was cute; this could be interesting. There was one from my supplier thanking me for the equipment rental order and offering any help they could. I sent off a quick reply stating that we'd be buying what we had rented and more from them, so start working up some figures we could argue about.\n\nThere was one from Rani.\n\n\"Darling, when you get this please call me. Any hour, day or night. If you get my machine I'll call you back as soon as I can. I miss you too.\"\n\nI looked at my watch. She wasn't working at the Caf\u00e9 tonight; she could be in. I picked up my cellphone and dialed. She picked up on the fourth ring.\n\n\"Harry!\" she squealed. \"How are you? Why haven't you called?\"\n\n\"First free moment I've had.\" I brought her up to date. \"The head of the Phoenix office has signed a lease on new office space and after I see it tomorrow I can start setting it up. I might be home by the weekend but more likely the beginning of next week.\" I paused. \"Would you like to see me when I get back?\"\n\n\"I wish you were here right now. I've been thinking a lot about what you said. I can't go on being afraid of being hurt forever but I'm still scared now. I wish you were here to hold me... to caress me... to tease and pleasure me, darling.\"\n\n\"Where are you, exactly?\" I asked.\n\n\"I'm in my bedroom, lying on the bed.\"\n\n\"What are you wearing?\"\n\n\"A silk bathrobe, with nothing on under it,\" she breathed. My cock sprang to attention and I kicked off my shoes and lay back on the bed.\n\n\"Would you like to play a game?\" I asked.\n\n\"What kind of game?\"\n\n\"A pleasure game, baby. You might enjoy it.\"\n\n\"All right.\"\n\n\"Open your robe,\" I ordered. I could hear the sounds of slithering fabric as Rani complied.\n\n\"Using just your nails, stroke your breasts. Circle the nipples very slowly and trace your nails across them. Then feather-touch them and watch them erect for me.\"\n\nHer breathing deepened in my ear. My cock got harder as I imagined her hands stroking her boobs, teasing her nipples, seeing them engorge and erect as she played with them.\n\n\"That's right. Now, pinch them gently. Give them a little pull. Make them stand up.\"\n\nThere was a faint \"Ahh...\" in my ear as she obeyed me. I could see her proud bosom, the skin taut as she pulled on her nipples, her eyes closed as she yielded to the sensations.\n\n\"Cup your left breast and tease the nipple with your thumb. Trail your right hand down, across your belly and down to your pussy. Don't touch the clitoris yet. Now spread your legs for me. I want your to use your nails and trace the outline of your labia with them. Go slowly and feel them start to swell for me. Feel the blood filling the veins, engorging them, darkening them, readying them to be parted.\"\n\n\"Mmmm...ahhh...yes...oh, good, that's good...\"\n\n\"Lift your tit to your mouth and suck on the nipple,\" I ordered. \"Like that. Nibble on it. Don't stop teasing your pussy, baby. Take your fingers and slip them between your pussy lips. Feel how wet you are. Feel how hot this is making you.\"\n\nI could hear squishing noises as she moved her hand in and out of her twat and the wet sounds as she suckled her own breast, biting her own nipple, imagining it hot in my mouth as she surrendered herself to the pleasure. My hand was on my cock now, slowly stroking it as I visualized Rani masturbating for me.\n\n\"Now let go of your tit and use your nails on your clit. Carefully now, you don't want to scratch it. Feel it. Do you like that, baby?\"\n\n\"Oh yes!\" she panted. \"Oh yes, oh yes, oh yes! Oh! Ahh! Oh! More! Please! Harder!\"\n\n\"Rub your clit now, fast as you want. Get some of your juices onto it, it'll feel even better. Are you close, baby?\"\n\n\"Yes! It's so good! So good! I'm close! Make me cum!\"\n\n\"Say it, Rani!\"\n\n\"I want to cum! I want you to make me cum! Please, make me cum!\"\n\nMy hand was moving as fast as hers must be. \"Press down hard and rub the clitoral shaft, honey, and let go! Surrender to the feeling! Cum for me! Cum! Now!\"\n\n\"YESSS!\" she shrieked as she reached her peak and her orgasm erupted. I could see her lying on the bed, her hair spread across the pillow, her back arching to push herself onto her hand as she came in my ear. I listened to her moan as she slid into afterglow and I heard her fumble the phone as she picked it up from where it had fallen onto the bed.\n\n\"That was marvelous,\" she breathed. I could see her eyes, half-lidded in drowsy sensuality, her mouth slightly open with puffy lips. \"What you do to me, you darling man! Oh, I wish you were here beside me.\"\n\n\"Sleep well, my sweet. Good night.\"\n\n\"Good night, Harry.\" I hoped she would sleep well, but for me a cold shower was going to be a necessity if I was to get any sleep at all.\n\nThis set the pattern for the week I was out of town. Every evening I would call Rani at home at a time when I thought she'd be in and if she was, we'd have phone sex. At my direction, she acquired a couple of stiff feathers; a rabbit skin that she sewed into a crude mitten, fur side out; and a selection of erotic oils to use on her nipples and her pussy to heighten sensitivity. The time it took for her to orgasm shortened, and I had hopes that one day she might be able to cum on command. At last I was able to return home, my work in Phoenix completed.\n\nI hadn't told Rani I was back, wanting to surprise her at dance class. I spotted her standing by the studio door, her back to me, in one of the few spots in the room where your reflection won't give you away if you are trying to sneak up on someone. I withdrew a short feather from my pocket and gently drew it along her neck over the pulse point. She spun around and saw me, here eyes lighting with delight.\n\n\"Harry!\" She threw her arms around me and locked her mouth to mine, pressing hard against me, her tongue reaching into my mouth with an eager urgency that I reciprocated. Time stopped as we lost ourselves in each other...\n\n\"Ahem.\"\n\nWe broke the kiss. Sandi was looking at us, hands clasped behind her back, rocking on the balls of her feet, her sarcastic face on. The rest of the class was in ranks for warm-up, expressions ranging from speculation to barely concealed mirth on their faces.\n\n\"I know you haven't seen each other in a whole week, but if it wouldn't be inconvenient, would you mind joining the rest of the class so we can get started? FALL IN, YOU TWO!\"\n\nThere were chuckles as we took our places at the back of the class. The guys gave me you-sly-dog looks and I heard somebody mutter, \"Wink-wink-nudge-nudge-say-no-more, squire!\" while the women smiled at Rani with knowing glances, raised eyebrows and subtle hand gestures that meant \"So how long has this been going on?\" and \"So how is he?\" Sandi's starting the exercises came as a relief. Not that I was ashamed of what we'd done, but it's really not a spectator sport. Still, it felt good to be with her even at the expense of a grilling in the locker room.\n\nWe got back into our regular groove of movies, dancing and exploring the city together, work permitting. Stopping for a cup of good gourmet coffee was our post-practice ritual on the nights Rani wasn't performing. The Tuesday before Thanksgiving, she looked up from her cappuccino after we'd gone to a John Ford revival featuring The Quiet Man. She seemed nervous, although I couldn't imagine why.\n\n\"Can I ask you something, Harry?\" she asked.\n\n'Would you please rip my clothes off, spread me on this table and fuck me, fuck me, fuck me until the cum pours out of my ears?' I thought to myself. Aloud, I said, \"Of course, honey. What's on your mind?\"\n\n\"Mother and Father know we've been dating, and they want to meet you. I've told them all about you, but they want to look you over... to see if you're suitable,\" she finished in a rush.\n\n\" 'Suitable?' \" I quoted. \"What century are they living in? And what country? Maybe I should have Michaeleen O'Flynn come from Innishfree to negotiate for me as th' Party o' th' First Part. Or should I have my teeth cleaned, the better for your folks to examine them?\" I was working up a good case of indignation.\n\nRani laid a hand on my forearm. \"It won't be as bad as that, darling. Now if we were dealing with Great-Grandmother in Amritsar this would be a trip to frozen hell, but my family has been in America for three generations. Mother and Father were born here. They just want to meet you.\n\n\"Could you \u2013 would you come for Thanksgiving?\" She looked at me with imploring eyes.\n\nI sighed. \"I had hoped you'd come to my place for Thanksgiving dinner,\" I said, adding \"and that you'd stay for breakfast,\" to myself, \"but if you would like me to come to your parents' house for Thanksgiving, I'll be honored.\"\n\n'It won't be as bad as all that, I promise,\" she said.\n\n\"Can I bring anything?\" I asked, visualizing a table laid with turkey tandoori, cranberry chutney and the East Indian version of succotash.\n\n\"Mother cannot bake fruit pies to save her life. If you'd bring a couple or three big ones, that would solve the dessert problem gracefully.\"\n\n\"I'll do that, and the whipped cream too,\" I said, adding mentally, \"which I would much rather spread all over your tits and pussy and lick off before I filled your honeypie with sausage stuffing and cock-cream!\"\n\nRani gave me a little kiss and leaned her head on my shoulder. \"Thank you, darling man. I'll email you directions.\"\n\nTwo days later after a two-plus hour drive beneath lowering clouds that promised snow, I knocked at the door of an old Edwardian manor house, the kind you read about in Evelyn Waugh or Agatha Christie. At one time it must have been some stockbroker's country place. Equally obviously, the land that comprised the estate had mostly been sold off to a developer at some point in the late 1950s. The big stone pile sat incongruously atop a small hill with landscaped grounds, a remnant of a more elegant time surrounded below its hill by one of those suburban housing developments where the Owners Association makes sure all the houses look alike and you're lucky if you can find your own without a GPS tracker. Before I could ring the doorbell, the door swung open to reveal Rani in a simple red dress but wearing enough gold jewelry to choke a horse.\n\n\"You found it!\" she cried happily, hugging me from the side so as not to squash the three large pies I had baked, nor bump the plastic bag depending from my wrist. \"I've been waiting for you to get here. What's in the bag?\"\n\n\"Two large cans of double-heavy whipped cream. It's the next step above heavy cream,\" I explained. \"Sikhs do eat cream, don't they?\" I asked, belatedly realizing that it might be a dietary taboo.\n\n\"Of course!\" she laughed, leading me into the front hall.\n\n\"Let me take those pies off your hands,\" said another female voice, this one with a faint French accent. I looked past Rani to see a slender woman nearly six feet tall, with classic facial features of the sort that don't change from age 20 to 60. I realized I was seeing my girl's face some years older and that this picture of her future self was something to look forward to, as I handed the pies over.\n\n\"Auntie Dariah, this is Harry, \"said Rani. \"My boyfriend. Harry, this is my Aunt Dariah, my mother's sister.\"\n\n\"I'll be happy to shake your hand, just as soon as I can free mine up,\" I said, smiling at her. To my surprise, Dariah leaned forward and kissed me on the cheek and said something in a foreign tongue while giving me a sidelong look. Rani's eyes sparkled and she laughed, relieving me of the plastic bag and leading me by the hand through the central hallway and into the kitchen.\n\nAn Indian lady perhaps two inches shorter than Rani and about 15 pounds heavier, but with that additional weight nicely distributed, was in the act of taking a huge turkey out of the oven, supervised by a silver-haired woman in her late sixties in a sari. Across the room, a tall, dark-skinned black-bearded gent in a turban was struggling with a carton of champagne, muttering imprecations as he tried to peel back the lid. Looking at the three of them, it was clear where the genes that had combined so fortuitously to produce Rani had come from.\n\n\"Mother, Father, Grandmother, I would like you to meet Harry,\" said Rani, still holding my hand. Whether she was apprehensive about their reaction or simply declaring her relationship to me, I wasn't sure.\n\nGrandmother put her hands together under her chin and bowed to me. I let go of Rani's hand, put my hands together under my chin and returned the bow, making mine deeper than hers. \n\n\"A pleasure to meet you,\" I said. \n\nGrandmother raised her eyebrows but smiled approval at her granddaughter, saying, \"If you must bring home gora-log, at least you've picked a well-mannered one, which puts you ahead of your sister Sushila. Fie! What an ox that one is seeing!\"\n\nRani's mother laughed. \"Hush, Mother! Harry does not need to hear how scandalous you think Sushila's beau is.\" She offered me her hand. On impulse, I brought it to my lips and kissed it; it seemed appropriate to her dignity. She looked at me with amusement and smiled.\n\n\"Oh, I think I'm going to like this one, Meharani.\" She gave my hand a squeeze before I relinquished it, which I took as a vote of confidence. Looking over her shoulder, she called, \"Suji! Forget about that carton for a minute and come meet our guest!\"\n\nRani's father ignored her and continued his struggle with the champagne. I walked over.\n\n\"Would you like some help?\" I asked. He stepped away from the box and waved a hand, inviting me to have a go at it. I reached into my pocket and took out the lockback knife that I am never without. Honed to a razor edge, its two-inch blade has done everything from stripping wire to opening cans of coffee. Not bothering with the heavy staples that secured the flaps, I stuck it into the bend in the cardboard and rapidly sawed my way around the lid. The carton gave up the fight and surrendered its bottles of bubbly. Rani's dad looked at me.\n\n\"May I see that?\" I handed him the knife. He looked at it, noting its well-worn appearance. He folded it and handed it back to me.\n\n\"How long have you had that beard?\" he asked abruptly. I involuntarily fingered my goatee.\n\n\"As a Vandyke, a little over a year. Before that I wore it full but cropped short, ever since college.\" Curious questions, even from a father who obviously doted on his daughters.\n\n\"What do you think of kosher hot dogs?\" he asked. At last the questions started to make sense.\n\n\"Don't like 'em,\" I said shortly. \"And while we're on the subject, sir, I think halal rules are just as foolish as kasruth dietary laws, at least in this day and age and in this country.\"\n\nRani's father smiled for the first time and offered his hand. \"Call me Suji. Be welcome in my home.\" To the womenfolk who had followed me over he added, \"Harry is half a Sikh already even if he doesn't know it, and half a loaf is better than none, isn't it?\" The four of them laughed and I smiled. I wasn't being mocked, but rather accepted to some degree.\n\nPicking up two champagne bottles, Suji motioned to the back hall with a jerk of his head. I picked up the case and followed him. He led me onto the back porch and set the bottles down, and I helped him take the rest out of the case to cool. It made sense; why take up refrigerator space when Mother Nature has turned the outdoors into one big freezer? He pulled a pack of cigarettes from a pocket and offered it to me. I shook my head no and he lit one for himself.\n\n\"I can't even smoke in the house anymore,\" he grumbled, \"and Lakshi is always after me to quit. Make no mistake, Harry; men may run the world but women run the household!\" We laughed companionably and chatted about inconsequential things like the football season, the current crop of movies and the idiots in Washington mismanaging the country. Suji stubbed out his cigarette and as we turned to reenter the house, he laid a hand on my arm, stopping me.\n\n\"Just one thing, Harry. Meharani has been moping for most of the past year. When she started going out with you, her calls home perked up. Today, when she sees you, she is happy the way she ought to be. The way I like to see her. I don't like it when she is unhappy.\n\n\"She is my favorite daughter. If you do anything to hurt her, I will track you down and cut your heart out. Do you understand me?\"\n\n\"I can assure you that hurting Rani is the farthest thing from my mind,\" I replied. He looked intently at my faced and nodded, satisfied. We went back into the house. The turkey was just being carried into the dining room. Suji motioned me to sit at his right hand, with Rani next to me and Dariah and Rani's kid brother Mehki across from us. \n\nDinner was a typical Thanksgiving Day affair, with conversation and questions interrupted by lots of good food. I learned that Dariah was a mannequin, a runway model based in Paris who worked the big shows in London, Paris, Milan, Rome, Prague and New York, with seasonal trips to Bombay and Tokyo plus layouts in the high fashion magazines. Mekhi, a 14 year old 2/3rds scale copy of his father with his mother's paler skin, proceeded to bombard me with technical questions on learning I was a computer jock. Afflicted with a serious case of digital addiction, he was only momentarily stopped by rebukes from his father about monopolizing a guest. Rani and Dariah watched us with tolerant amusement as we lapsed into computer dialect understood by no one else at the table. Talking shop with a teenager was a day at the races compared to the grilling Sushila's hulking boyfriend Bobby was enduring at the hands of her mother and grandmother. I'd have bet money he wished he was somewhere far, far away instead of under their gimlet eyes and whetted tongues that wagged constantly despite Sushila's dirty looks and remonstrations.",
        "After dessert, the males retired to the living room to watch the football game while the women cleared the table and did the dishes. I'm not a big sports fan, but I went with the flow. The others were glued to the screen, but when I heard hesitant chording I recognized as being the overture to The Pirates of Penzance coming from the parlor across the hall, I felt no compunction about abandoning the Bears to their fate and investigating.\n\nDariah was seated at a baby grand, the score open in front of her. She peered at it and struck a wrong note.\n\n\"E flat,\" I said, coming to the piano. She tried again and I frowned as she mischorded. Dariah looked at me and got up. I sat down and began to play the right hand part without looking at the music.\n\n\"At least I use both hands,\" she said.\n\nWithout replying, I brought the bass line in with my left and began to sing.\n\n\"Drink, oh drink the pirate sherry, Fill, oh fill the pirate glass...\"\n\nI hadn't finished the first stanza when Suji, Lakshi and Rani came into the room and gathered behind me with Dariah. As I began the second stanza, they began to sing. We barreled through the number and when it was over, Suji looked at me with the delight of a fellow fan.\n\n\"You like Gilbert & Sullivan, do you?\"\n\n\"Yes. I'm a member of the Gower Street Savoyards company,\" I replied. \"I know most of the D'Oyly Carte scores. Did you ever perform?\"\n\n\"When I was in college,\" Suji said with quiet pride, \"I played Major General Stanley.\"\n\n\"Really?\" Without further ado, I played the opening of \"I Am the Very Model of a Modern Major General.\" Suji took a deep breath and picked up the musical gauntlet, unconsciously taking the pose he'd doubtless used onstage as he launched into one of the most challenging patter songs in the Gilbert & Sullivan repertoire. The three women took on the chorus roles so naturally, I wondered if at one time family sing-songs had been a staple of household life. When it ended, I led the applause. Rani glowed with pride at the accomplishments of her father and her boyfriend.\n\nHauling out bound scores, we happily worked our way through selections from Trial by Jury, HMS Pinafore and Ruddigore before Grandmother came into the parlor. She looked worried.\n\n\"You'd better look at the forecast,\" she said. We trooped into the living room and changed to the Weather Channel. It wasn't good news. The storm front threatening the region had picked up speed and was bearing down on us. Predictions were for anything from 30 to 48 inches of snow in the next 12 hours. I looked out the window. The occasional fat flakes that had been falling as I drove out had changed to much smaller ones coming down and accumulating on the ground. I recalled the old Cree axiom, \"Snow like meal, snow a great deal.\" I looked at the weather map again. If I didn't leave right away, I wouldn't have a hope of making it back home before the storm hit.\n\nRani's father was thinking much the same thing. \"Dariah, your flight leaves at midnight? If we leave now, I think I can get you to the airport and make it back home before the storm front arrives.\"\n\n\"No need for that,\" I said. \"I have to pass the airport on my way home anyway. I'd be happy to drop Dariah off if she's willing to ride with me. There's no point risking two cars in the snow.\" Dariah and Rani looked at me and then at Suji. He nodded.\n\n\"I accept,\" said Dariah. \"Just give me a minute to get my bags.\" The party broke up as Bobby grabbed his coat and escaped to his car without even saying goodbye to Sushila, who glowered after him. I shrugged into my overcoat and Rani joined me as I brushed the snow off The Big Black Boat, letting the engine warm up and the defrosters do their work.\n\n\"You will be careful, Harry, won't you?\" she asked, taking my arm. I turned to her and gathered her into a hug, looking over her shoulder at the sky and at her parents watching from the front porch. Dariah joined them with a carry-on and a large suitcase and hugged them goodbye.\n\n\"We'll be okay,\" I said. \"If it gets no worse than this, I can make this trip with no trouble. Don't worry about me.\" Rani pulled herself closer and kissed me, a soft kiss that quickly turned rugged as our tongues dueled. She laid her head on my shoulder. Dariah was walking toward us with her two bags. I stroked Rani's hair and released her.\n\n\"I'll call and let you know when I'm safe,\" I promised. I loaded the bags while she and Dariah exchanged hugs, a few sentences in the same language they had used when I arrived at the house, and a serious look. Dariah and I climbed into the car, and with a toot-toot at the three figures standing on the porch, we set out for the airport.\n\nBy the time I got onto the interstate 25 minutes later, the snow was coming down hard enough to require intermittent windshield wipers. It was impossible to run at the posted speed limit of 65 mph. Dariah and I had been chatting companionably, but as the snowfall increased and my speed decreased our conversation trailed off. I looked sideways at my passenger. Dariah was looking at her watch, a worried expression on her face as she ran speed and distance calculations in her head. I reached into my coat and handed her my cellphone.\n\n\"You'd better call the airline,\" I suggested. As she dialed the number, I sped up the wipers. My speedometer was down to 45 and snow was starting to drift across the road in humps that would only get bigger as the wind speed increased. I could tell a plow had been over the road sometime in the last hour, but its good work was being rapidly undone by wind-driven snow and new stuff falling from the gunmetal-gray clouds. My own mental figuring indicated that making the airport with enough time for my passenger to check in, get through security and board the plane to Paris was problematic at best.\n\nDariah cursed and closed the cellphone. \"All the lines are busy, and the wait to speak to an agent is more than 30 minutes,\" she said angrily.\n\nI saw the blue sign that marked a rest area ahead. \"We aren't licked yet,\" I said. \"Let me just get off the road here and we'll try the Internet.\"\n\nEasing into the rest area, Dariah hopped out and ran to the rest room while I got out my laptop and tied my cellphone into it. Two minutes later, I was online and searching for the airline's flight information. I read the report with a frown. Just then, Dariah returned to the car.\n\n\"Are you up?\" she asked.\n\n\"Yes, but you're not going to like it,\" I said, turning the laptop so she could read the screen. The line on the page with her flight information was blinking yellow with one word in capital letters in the 'Status' column standing out: \"DELAYED.\"\n\n\"That's good,\" she said with relief. \"It means I can still make the flight.\"\n\n\"No, it isn't,\" I replied. \"It means at the very least the airport is limiting takeoffs, with de-icing required before an airliner can even join the queue. I've flown out of there before in winter.\" I changed to the National Weather Service website and looked at the regional weather map. I'd been fascinated with weather systems as a kid before I discovered Gilbert & Sullivan, computers and girls; and had learned how to read the symbols not just for the highs, lows and fronts but also for the reporting stations. What I was seeing now translated to big trouble. Dariah could see it in my face.\n\n\"What is it?\" she asked.\n\n\"This isn't a localized storm. It's a full-fledged blizzard moving east at 30 miles an hour, dropping at least eight inches per hour with increasing precipitation plus drifting snow on the ground. That isn't good.\" I handed her the computer. \"You'd better see about making reservations at one of the airport hotels, just in case. I'll give you 5 to 1 your flight is canceled before we get there.\" Dariah set to work as I pulled out of the rest area back onto the highway, switching the radio to an all-news station to monitor the weather reports.\n\nWe hadn't been back on the road for ten minutes with my speed down to 40, as fast as I dared run in the slop and slush, when I saw flashing amber lights ahead in the distance. We were catching up to the plows, I supposed, but if that was the case why was I driving in loose snow and compacted guck instead of on at least halfway-clear pavement?\n\nThe answer to my mental question became apparent as we reached the lights and I slowed down even more. There was a plow there, all right. The trouble was, it was in the ditch and two big wreckers were trying to pull it back out. As we passed the accident, the Mercedes rocked and a gust of snow blew past the windshield, momentarily whiting out the world. The terrain here was flat, open farmland with nothing to slow the wind. Thinking of the force it took to push a snowplow off the road, I reached a decision.\n\n\"Dariah,\" I said, looking at her for a moment, \"you'd better reschedule your flight and cancel your airport hotel reservations. We aren't going to make it. In fact, we're going to have to hole up and wait this storm out.\"\n\nDariah could tell I was not joking. \"Are you sure?\"\n\nBefore I could answer her, the news cut off in mid-word. The radio emitted a nasty-two-toned squeal I'd only heard in tests before. The squeal ended and a new announcer came on, with the tinniness that means the signal is coming in over a phone line.\n\n\"This is the Emergency Alert System. The Governor has activated the Weather Emergency Plan due to current and projected blizzard conditions. A state of martial law is hereby declared and the National Guard is hereby activated for emergency service. The following steps are being taken.\n\n\"All National Guardsmen are to report to their armories and commence operations to assist the Department of Transportation, the State Police and local authorities.\n\n\"All interstate highways are closed, effective immediately. All motorists are to exit the highway at the next exit and seek shelter.\n\n\"All police, fire and emergency medical personnel \u2014 \" I switched the radio off. A blue sign on the right indicated that the exit ahead boasted an independent motel called Jack's Truck Stop & Motor Lodge. I just hoped they still had rooms as I guided the Mercedes gingerly down the off-ramp and turned west toward the big sign I could barely see through the driving snow. \n\nJack's was an early 1950s setup from the days before the interstate highways had been built. What might have started as a roadside bar had been expanded into a restaurant, followed by the addition of three wings of rooms meant to service tourists in for fishing and hunting and truckers who wanted a good meal and a decent night's sleep. The steakhouse and the motel formed a hollow square with automobile parking for diners in the middle and nose-in parking for the motel rooms along the inner edge of the square. The garage adjoining the complex had islands for four trucks and a dozen cars to fuel at once, and bays for three big rigs and four automobiles to be worked on at the same time. The parking area behind the service station-cum-convenience store held at least two dozen idling 18-wheelers. I pulled up in front of the office and Dariah and I went inside.\n\nThe key board behind the registration desk did not encourage me. Almost all the hooks were empty despite the 'Vacancy' sign burning below the main sign by the road. An old gent who might be the owner got up from his easy chair in the inner office and ambled out to greet us.\n\n\"Two more fish caught by the storm?\" he greeted us with a smile. He had reason to smile. The governor's proclamation translated to good business for people like him, effectively trapping people just passing through. \"All I have left is an efficiency. Queen bed, stove, refrigerator \u2014 \"\n\n\"We'll take it,\" said Dariah before I could open my mouth, cutting him off in mid-description and putting a credit card down on the counter. \"May we have the keys, please?\"\n\nThe innkeeper/clerk/whatever he was handed her a registration form to fill out as he went inside to process the card. He came back a minute later and returned it, exchanging the form for two tagged keys.\n\n\"Number 30, all the way down in the far corner. Parking space is in front of the apartment. Enjoy your stay.\"\n\n\"Ha, ha, ha,\" I muttered to Dariah as we returned to the car. \"I suppose we'll be lucky if the place doesn't smell of mold and the sheets have been changed sometime in the last year.\"\n\nThe reality was nowhere near as bad as I'd feared. Number 30 was a snug little bed-sitter decorated in Sportsman's Den with a small kitchen attached, including a complete set of pots, pans, utensils and dishes. A back door opened onto a tiny fenced patio that had a charming view of the 18-wheeler lot, but did offer access to the convenience store. While Dariah carried in her bags and the small suitcase that lives in my trunk with clothes for those short unplanned trips I have to make when a branch office's network goes down, I braved the elements to get some supplies. When I returned, covered in snow and shivering despite my coat, hat and gloves, she was watching the news.\n\n\"We may be here for a day or two,\" she said. \"I just got off the phone with Lakshi and Rani at the house. They say it will be that long before the storm blows over and the highways and airports are reopened.\" She looked at me in the kitchen, shaking off the wet and setting down the groceries, and came over to feel my face.\n\n\"You need to warm up, she said firmly. \"Rani said she would not forgive me if I did not take proper care of you. You get to the bathroom. You'll find your toilet kit on the shelf by the sink. I'll put the food away. Go!\"\n\nI obediently went. Dariah had even hung the cotton yukata I use in place of a bathrobe from the hook behind the door. The bathroom was nothing fancy; a long tub that might be big enough for two if they were friendly with a shower head, a pedestal sink and an infrared light to warm the bath separately from the main heater in the outside room. Flipping this on, I stripped and climbed under the hot water, groaning as it warmed me. I spent a long while simply luxuriating in the steam and hot water before taking facecloth and soap to wash myself.\n\nWhen I returned to the main room dressed in the yukata, Dariah was waiting with a mug of hot instant chicken noodle soup. She pointed at the bed, which she had turned down.\n\n\"Under the covers with you, Harry. Hot shower or not, there is still cold blood out in your limbs. You need to conserve your body heat until you are fully thawed out.\" She disappeared into the bathroom and I heard the shower resume its drumming against the porcelain. I obediently climbed under the covers, wondering what we were going to do about sleeping arrangements. I was willing to take the couch but if Dariah was agreeable, the bed was big enough for two to sleep in it without touching.\n\nThe shower's splashing ceased. The bathroom door opened, releasing a cloud of fragrant steam. Dariah walked out of the bathroom. She had no clothes on.\n\nSome women when undressed are naked. This sort are ashamed of their bodies or terrified at been caught without their armor. Others are stripped; ready for action and either aggressively defiant or provocative. Still others are nude, casual about their absence f clothing but not unaware of the effect of their condition on the human male. Dariah was different. She was simply unclothed and it was of no consequence to her. There was no change in her demeanor at all. She walked over to the bed and climbed in, snuggling close to me as if it was the most natural thing in the world for her to do. She drew me close and her hands began to untie the yukata's sash. My penis went from flaccid to rigid in about six seconds flat. Her intentions certainly seemed straightforward!\n\n\"Dariah, what are you doing?\" She laid a manicured finger on my lips to hush me and lifted my hand to her breast as she looked intently into my eyes. The effect was hypnotic.\n\n\"Shhh. I promised I would take care of you. To me that means not just keeping you in good health, but keeping you contented as well. You don't have to worry about me. I'm not in the least domestic and I'm not husband-hunting. I had my tubes tied ages ago, so you don't have to worry about knocking me up; and I've never had VD in my life because I'm choosy about the men I bed. I must respect a man before I'll even think about him that way, and I respect you, Harry. I just want to make you happy, and I think you can please me as well. Shall we see?\" She lowered her face to mine and we kissed.\n\nMy eyes closed as I gave in to her wishes. It's a gentleman's duty to try and please the lady, as I see it. Besides being not prone to argue I was not inclined to, given my current position.\n\nShe sighed against my mouth as my hand explored her breasts. They were tiny, barely more than slight mounds above her pectoral muscles. After all, a mannequin is meant to be a walking display rack for the designers' creations, an imaginary creation herself, not a real woman. But this woman was certainly real enough.\n\nSmall though her boobs were, her nipples were hard points the size of the first joint of my little finger. Rubbing them with my palm, I felt them tighten and lengthen as the stimulus of my -cold-roughened hand worked on them. Dariah moaned again and thrust her tongue into my mouth, throwing one leg over me and slowly rubbing her mound against me. I pulled her closer, cupping her ass-cheeks as I pinched a nipple and gave it a little tug. She groaned and broke the kiss, throwing her head back.\n\n\"Ohhh, that's good. Yes! I like that! I love it when a man plays with my nipples! Don't stop!\"\n\nI shifted my hand to her other breast and took the nipple I'd been toying with into my mouth, licking it like a candy cane and catching it between my teeth to pull it taut as I twisted the other one as if I was rolling a pencil between my fingers. Dariah gasped with pleasure and threw her head forward, her hair lashing me like a million silken threads.\n\n\"Yes! That's good! More! Ohhh...\"\n\nI could feel the wet friction of her labia against me as her pussy leaked its wetness and left a glistening trail along my leg. I had no doubt Dariah was ready to receive me. Twisting to meet her, I lifted her buttocks and lined her up with my cock. She gasped as my cockhead brushed along her slit, seeking the entrance to her tunnel of love. Her hand dropped to my groin to guide me, rubbing herself against the rigid pole that sought to impale her. The pieces meshed and my prick slipped into her. Dariah sighed as she felt her pussy lips part and my hard cock fill her soaking wet crevice. She began to move on me.\n\n\"Yes! Oh, how good you feel in me! Fill me up! Fuck my pussy!\" she panted.\n\nI was more than willing. After the adjustments two lovers must make to each other, we found a rhythm, my hips pushing up to her as she corkscrewed down onto my seven inches of hard male flesh, twisting to bring her clitoris into contact with me as she bottomed out at the end of each thrust. She moaned and I felt her pussy muscles ripple as she climaxed.\n\n\"Ohhh! Ohh! Ahhh! Ahhh! Yes! Yes! Yes! Cumming!\"\n\nShe did not stop moving on my cock but instead spread her legs wider and reached down, bringing my hands to her nips and closing them on her breasts. Taking the hint, I squeezed the flat mounds, rubbing the nipples with my palm while I tried to pull her head down to mine. She locked lips with me and firmly pressed the hand I'd removed from her tit back where she wanted it. The sounds coming from her throat as our tongues wrestled were incredibly erotic and I felt my cock harden and lengthen even more. Objectively, I knew this wasn't possible but subjectively it certainly felt as if my seven inches had become eight, or even ten. Dariah was a marvelous lover.\n\nKnowing that she liked having her nipples mauled, I didn't hesitate to pinch, twist and pull them. Dariah responded by grabbing my shoulders and digging her nails into them as she posted on my rigid pole, breaking our kiss to gasp joyously as her eyelids fluttered shut.",
        "\"Yes! Yes! Give it to me! Fuck my pussy! I'm close! So close! Cumming... cumming... cumming... ahhhh! Ohhh! Yes! Yes! Yes! Ohhh...\"\n\nI felt her tighten spasmodically on my cock as she came. I was close to my own climax and continued to drive my cock into her. I was almost there, the cum boiling in my balls, ready to blast out and soak her sopping cooze, when Dariah opened her eyes and smiled knowingly at me, feeling my readiness to show her how much she was pleasuring me.\n\nShe bottomed out on my ramrod and held herself there while she did something with her pussy muscles. Suddenly, although my cock was hard as a rock and I was as ready as I'd ever been to shoot my spunk into a woman, I couldn't cum! Dariah saw the surprise on my face and chuckled gently, not laughing at me but rather understanding my disconcerted expression and agreeing with me.\n\n\"It's so much better when two people cum together, don't you think?\" she asked. \"Just lie still, darling Harry. I'll do it all.\"\n\nStill keeping that grip on my rod, Dariah began to squeeze me with her cunt muscles. Not a ripple, exactly; more of a vibration, cycling up and down my cock from the head to the root and back. The feeling was of exquisite pleasure bordering on pain. I felt my body suddenly go sweat-slick, though I wasn't moving at all. Unbidden, my hands rose again to Dariah's boobies and she leaned into my caress, sighing with enjoyment as she rubbed into my palms with those lustful nips of hers. She gradually added hip motion to whatever it was she was doing to me, rocking back and forth on my iron-hard pole. I could hear my blood pounding in my ears as she rode me and my breathing became ragged.\n\n\"What are you doing to me?\" I groaned as she increased the tempo and the sensations set off tiny fireworks on my retinas. Dariah was moaning too as she used my cock and my hands to seek her own pleasure peak.\n\n\"Not long now, ma chere, not long.... I'm getting close. Closer... ohh, yes, soon... ahhh, ahhh, ahhh, so near! Now! Fuck me hard! Fuck me!\"\n\nShe released that peculiar pussy-grip on my cock and I responded by grabbing her hips and jamming as far into her as I could, again and again. We weren't two people fucking any more; we were one being with four limbs seeking its release and I couldn't tell where her vagina ended and my penis began. As my cum shot through us I felt her orgasm shuddering through us, an ecstatic release the like of which I had never known before. I fainted dead away for the first time in my sexual experience, never realizing that Dariah had fallen on top of me, eyes rolled backwards in her head.\n\nWhen I came to, Dariah was curled up next to me, watching. I got up on one elbow and looked at her.\n\n\"That was one helluva powerful experience,\" I said. \"Dariah, you're marvelous.\" She smiled at me and moved closer, inviting me to cuddle her.\n\n\"Dear Harry, my hobby is sex. Not fucking, anyone can do that; but learning how to give and receive sexual pleasure. Learning how to prolong the act for as long as I and my partner wish. I've been studying the art for going on 25 years, gathering the bits and pieces of sexual knowledge various cultures of this planet have discovered into one place and assimilating them. I think I can safely say that I'm one of the best partners you will ever enjoy.\" She kissed me gently and I stroked her tangled hair.\n\n\"What did you do to me,\" I began hesitantly, \"when you felt I was about to climax and you weren't ready?\"\n\n\"I learned that trick from one of Japan's Living National Treasures, the last Oiran of the First Rank. It's really curious,\" she added parenthetically, \"how a nation as sexually open as Japan can simultaneously be so puritanical when they consider sex as a business. The oiran were prostitutes in the legal sense, but they were as skilled in their field of pleasing men as the geisha are in theirs. \n\n\"Her granddaughter is a model on the Far East circuit and introduced us. She is trying to persuade her grandmother to write down all her learning for me because the Japanese government will not permit her to take apprentices. I stay with her and she teaches me what she can when I do shows in Tokyo.\"\n\nDariah paused and looked at me, considering. At last she said, \"Harry, you know we are going to be stranded here for a couple of days. If you are willing, I can help you make Rani a present she will appreciate.\n\n\"Will you let me train you in the art of making love to a woman?\"\n\n\"I haven't taken her to bed yet, Dariah,\" I said. \"Not that I don't want to, it's just that the time has never been right for it.\"\n\n\"So much the better. If you permit me to teach you, when you bed each other \u00be and you will, if I know my niece \u00be it will be an experience neither of you will ever forget. Are you willing to try, Harry?\"\n\nI considered for a minute. \"This is knowledge to kill for. I'd be a fool not to take your offer.\"\n\nDariah laughed and nibbled my nipple. \"You're not a fool, Harry. Let's get cleaned up and eat dinner, then come back and begin, shall we?\"\n\nThe blizzard kept us at Jack's Truck Stop and Motor Lodge for three full days before the highways were open again. During that time, Dariah and I left the apartment only to eat. Those were also the only times we put clothes on. \n\nDariah was an able teacher and I was her awed pupil. She gave me the full benefit of her years of study in the field of sex, and was a demanding taskmaster. By the time we were ready to get back on the road I was worn to a shadow of my former self; but the learning she had imparted was beyond price. She had taught me how to satiate a woman in the bedroom.\n\nI bade Dariah a tender farewell at the airport and headed for home. I was tired yet elated by what I had learned, and felt somewhat disconnected from my own body. It felt as though my Mercedes was driving herself rather than being guided by me. My euphoria lasted until I pulled up in front of my house and fell back to earth with a thud. The snowplows had pushed a mountain of ice and frozen slush taller than I was into the end of my driveway, and I was on the wrong side of it. Cursing, I floundered through multiple feet of snow to the back hall where my cold weather snow suit and heavy duty field boots hung ready for use. I thanked my lucky stars for the powerful snowblower waiting in the garage, and congratulated myself for having ordered it with an electric starter.\n\nHours later, the Q-Ship was safe in her berth and the snowblower was cleaned and back in its slot. I had started a fire in the woodstove in the living room, taken a hot shower and settled into my easy chair with a mug of hot chocolate when it dawned on me that I hadn't called Rani to let her know I had finally made it home safely. I crossed the room and dialed her cellphone.\n\n\"Harry! I'm glad you called. Dariah called and let us know she was about to board her flight hours ago. I was starting to worry, darling.\"\n\n\"It does help if you don't have to move Mount Everest out of the driveway before you can put your car in the garage. I only finished a little while ago. I'm sitting by a nice warm fire sipping hot cocoa. Where are you, baby?\"\n\n\"I'm still at stately Wayne Manor.\" I'd just taken a sip of my chocolate and blew it out my nose as Rani's wry comment hit me. Her parents' house had struck me exactly the same way. \"Daddy is going to put me on the bus in the morning; they are still running a reduced schedule due to the storm. I won't be back until late tomorrow.\" She paused. \"I wish I was there with you, darling man, sharing your chocolate and the fireside.\"\n\n\"I take it you are not alone.\"\n\n\"I'm in the kitchen helping Mother get dinner ready.\"\n\n\"So you can't take a minute to imagine my hands fondling your breasts, feeling the weight of them, watching your nipples stiffen up as the cold air hits them and I tickle them with a fingertip.\"\n\n\"Oh, Harry, you bastard,\" she breathed softly into my ear.\n\n\"And you can't relax against something while you feel my fingers feather-tracing their way down to your mound, leaving a trail of sensation behind them as they find your outer lips and slip between them to brush against your clit, feeling the wetness seeping out of your pussy.\"\n\n\"Harry, please stop... I can't do anything here -\"\n\n\"And your can't dream that my fingers are wet with your womanly oils as they press into your vagina, moving ever so slowly in and out of you, feeling the slickness of your inner walls, feeling the heat and weight of you as your nether lips swell, waiting for your lover to slide into you and make you cum on his swollen purple cock, waiting to feel him fill the aching gap between your legs and flood you with pleasure...\"\n\nHer breathing told me she was fighting to preserve her demeanor in front of her mother as I tortured her with erotic speech and visions. I could sense her frustration, her need to cum, and her embarrassment were she to do so in front of her mother.\n\n\"Oh Harry, what you are doing to me!\" she whispered \"I wish I had you here right now!\"\n\n\"Well, my darling, hurry back to the city and perhaps we can do something about that. And in the meantime, maybe you'd better tell your mother you need the bathroom. You don't have to tell her what you need it for.\"\n\n\"Oh, you are a devil!\" she said \"I'll hurry home as soon as I can. You are so unfair to leave me in this state. Goodbye, my love.\"\n\n\"Bye, darling.\" I hung up the phone and contemplated my own erection, pleased at what I'd done to her. A hand crept to my root before it dawned on me what her last words had been. Damn. It surely looked as if things were getting serious.\n\nI didn't see nearly as much of Rani outside our ballroom classes as I wanted to in December. 'Twas the season for office parties. Many of them provide entertainment; and for a surprising number that entertainment is belly-dance. Between her regular gigs at Caf\u00e9 Morocco, the private parties thrown there, and holiday parties at hotels six nights a week she was booked solid. The only day of the week we could get together was Sunday, and I missed one Sunday due to a hacker penetration in the Boston office that kept me out of town over the weekend. Though we spoke on the phone every day, I was frustrated at not being able to be with her. I knew personal scheduling is a hazard of the game when you date a dancer, but that didn't make it any easier to take. She didn't like it much either, but she assured me once the holidays were over things would go back to normal and we'd have time for each other.\n\nFive days before New Year's, I found an email from her in my inbox.\n\n\"I just got an evite from a company I consult with. Their New Year's Eve party is going to be held at the Carleton Hotel, 8 PM to whenever. It's a costume ball. It's all you can eat and drink, and they're talking about a live band. Would you care to be my escort? Do you have a costume?\"\n\nI emailed back:\n\n\"Costume is not a problem, and I would be delighted to be your escort. Where/when should we meet?\"\n\n\"Pick me up at my place at 7 PM. And could you PLEASE bring your kit? My PC has gotten so balky I can barely use it. TX! xoxo, darling man.\"\n\nThat evening, I dug into the back of my closet and pulled out a garment bag and two boxes. I opened them up. The garment bag yielded up a silk shirt with ruffles at throat and cuffs, a pair of flowing black pantaloons, a red skirted broadcloth coat with foldback cuffs trimmed with black braid and gold buttons, a wide gold sash, and a pair of knee-high boots that looked heavier than they were, being made of coat-weight leather - dancing shoes in disguise. The first box held a cavalier's black hat, one edge pinned up Aussie-style with a white ostrich plume. The second, made of wood, held a guilty secret of mine: a black leather baldric and a replica Model 1860 US Navy cutlass mounted in a swiveling scabbard so it always hangs straight down.\n\nThe Model 1860 has the brass cup handguard that identifies a cutlass as a cutlass in the minds of the public. This one was balanced to my hand but was not sharpened, for onstage safety. I was exceedingly fond of it but apart from playing a jolly jack tar in the chorus of HMS Pinafore and my turn as the Pirate King the last time the Savoyards had staged Penzance, I almost never had an excuse to take it out, much less wear it. There were times when I thought I was born into the wrong era. \n\nBe that as it may, I set up the ironing board, ironed the wrinkles out of the clothing, and broke out saddle soap and carefully cleaned and polished the leather of the boots, the baldric and the scabbard. I wanted to do justice to whatever costume Rani might be wearing. \n\nOn New Year's Eve Day as I was getting ready for work, I realized I had a slight problem. The cutlass would fit sideways into the garment bag, the scabbard stuck into one of the boots, but what could I do about the hat? Garment bag plus computer-repair kit left me one hand short. There was no help for it. I opened the hatbox, put the plumed hat on and headed out the door.\n\nThe howls of laughter that greeted me when I walked into the office were memorable indeed. My explanation fell on deaf ears, and my coworkers needled me about it until we knocked off for the day at two for our in-house New Year's Eve buffet and party. I had to make an appearance and to my surprise found myself the center of attention of a group of women. I suspected the hat had more than a little to do with that. It hinted, I suppose, that there were hidden depths to the mild-mannered computer jock. After being cornered under the mistletoe a couple of times and with three business cards slipped into my pocket, I was finally able to break away, gather up my bags and cab it downtown to Rani's building. We'd necked in the lobby, but this would be my first visit to her apartment.\n\nI pressed the intercom switch by her nameplate. \"Rani, it's me,\" I said.\n\n\"Hi, Harry!\" she replied, her voice tinny through the tiny speaker. \"Take the right-hand elevator to the penthouse. Punch 60521 before you hit the button.\" The lobby door buzzed and let me in. Mulling the strange instructions, I went to the elevator on the far side of the lobby past the couches and chairs on the Persian carpet I remembered so well and pressed the call button. After a minute, the elevator doors opened. I looked at the floor selector panel.\n\nThe instructions now made sense. There were six floors plus a penthouse in the building, four apartments per floor. All the buttons except P for Penthouse glowed. Above the floor buttons was a security keypad. I punched in 60521 and the P button lit. I pressed it, the doors closed, and the elevator rose to the top floor without stopping. I got out. What I saw was not what I expected.\n\nThe elevator opened into a foyer floored in white marble with black accents. Ornamental pierced screens and wall hangings created the flavor of an Indian palace. An alabaster fountain tinkled in the center. I walked past it into the central corridor, following the sound of Middle Eastern dance music to the living room, done again in Indian fashion with brass hanging lamps, low tables and divans, and incredibly large pillows piled around the perimeter on oriental carpets. Rani, her shapely ass sticking high in the air in a pair of skintight jeans, was half in and half out of a closet, swearing softly as she searched for something.\n\n\"Is there somewhere I can change?\" I asked, setting down my two cases. Rani looked behind her, saw me standing there and bounded theatrically across the room, a grand j\u00e9t\u00e8 ending with my catching her around the waist and spinning her to shed velocity, and her pulling me into a hug. I was painfully aware of her luscious boobs flattening against my chest and resisted the urge to cup her buttocks. She gave me a quick peck on the lips and took me by the hand, picking up my computer doctor kit in her right hand as I lifted the bag with my costume in it in my left.\n\n\"You can change in my bedroom,\" she said, leading me down the corridor to the right, past the entrance to the foyer, all the way to the room at the end of the passageway. \"I'll be a little while, so if you finish early maybe you could start on the computer, please? It's in there as well. I can change in the living room and I'll come get you when I'm ready. Would you like something to drink?\" she asked, flirting from beneath her eyelashes.\n\n\"Never when I'm working,\" I said firmly, setting my costume on the bed and motioning her to set my professional bag of tricks down by the computer. \"Not only do I need a clear head, but I could tell you horror stories about what happens when liquid and computers mix.\"\n\n\"I'll leave you to it, then,\" she said, kissing me en passant as she walked to the bedroom door. I admired the view and the bounce of her breasts, and when she had gone closed the door and changed into my pirate outfit, leaving the hat, baldric and cutlass on Rani's king-sized bed as I opened my other bag and fired up her PC.\n\nThe machine booted up so slowly I began to wonder if there was an ancient 386 CPU inside. When the desktop finally opened, the first thing I did was to run a search for temporary files. Bingo! The temporary memory and Internet caches hadn't been properly set. The computer memory was clogged. After resetting the caches and dumping the temp files I inserted my 'quick-fix disk' and copied it onto Rani's hard drive. Setting to work with the new icons, I swept through the machine and deleted an astonishing amount of spyware and garbage. The next disk to go in was my integrated protection disk. I initiated a tedious but absolutely necessary system tune-up which, when completed a couple of hours hence, would leave Rani with a virus-free PC functioning at peak efficiency. I didn't hear the bedroom door open.\n\n\"Well, Harry? What do you think?\"\n\nI swiveled around and my eyes popped out on stalks. She was dressed in a transparent short-waisted white silk blouse cut indecently low, with a short silver brocade vest fastened over it that struggled to contain her stupendous tits. I had no doubt the vest was secure, but Rani's boobs bulged over it just enough to make you hope it wasn't up to its task. Her midriff was bare save for a small silver pendant hanging from her pierced belly button. Transparent white silk harem pants were caught at her hips by a belt of sterling bells. Silver bracelets, anklets and a choker-style necklace gleamed at neck, wrists and ankles. White dancing slippers covered her feet. Exotic sterling earrings hung from her lobes, and a small white conic hat trimmed in silver braid with her lustrous black hair pulled through it in a ponytail atop her head completed the outfit. I reeled my eyes back in and found my voice.\n\n\"Absolutely incredible! You look like a genie, Rani.\"\n\nShe walked over to me, one hand behind her back. She brought it out and handed me a 1964 Jim Beam bottle, carefully painted with glass paints to match the one used on I Dream of Jeannie as Jeannie's genie bottle.\n\n\"That was the idea, master.\"\n\nI stood, gathered her unresisting into my arms and just held her for a long time. Her perfume was intoxicating. I very much wanted to fuck her on the spot, but there was the matter of that damned party. I wondered if this was a promise for later. At last I said, \"You'd better get a coat. We have to get going. Just let me don my baldric and hat, and I'll be ready.\"\n\nShe reluctantly broke the embrace. \"I'll get my cloak. Don't forget the bottle. Remember, he who controls the bottle commands the genie, or so the legends say.\" My cock ached to invade her. Definitely a promise for later.\n\nAfter I slipped the baldric over my head and adjusted it so the cutlass hung at my left hip to my satisfaction, I wondered what to do with the bottle. It was obviously part of Rani's shtick for the evening, part of a costume competition perhaps? I finally tucked it into the sash in the small of my back, where it would ride unobtrusively, at least as long as I was standing. Pulling on a pair of thin black leather gloves against the cold, I donned my pirate captain's hat, gave one last brush to my Vandyke in the mirror and walked out of the room. Rani was waiting by the archway to the foyer, a full length, full circle black velvet opera cloak with hood completely covering her and giving no hint of the glories that waited beneath. I offered her my arm; she took it. As a couple, we walked to the elevator.",
        "The New Year's Eve Ball was indeed a first class bash. A live 12 piece orchestra provided the music, and they appeared to know everything from the latest hits to music from the movies to all the old standards. We settled in at a table with some of Rani's business buddies dressed as everything from gypsies to Mounties to cats, and danced every number that wasn't club music for the up-to-the-instant. In between dances, Rani steered us from table to table, making her manners with the powers-that-be. The men checked her out carefully, to the annoyance of wives and/or dates. A couple of the younger executives were just barely not drooling. After making our excuses to one such couple and returning to our own table, Rani leaned close to me and whispered, \"I'm jealous.\"\n\n\"Of what?\" I asked. \"Of Joe What's-His-Name ravishing you with his eyes?\"\n\n\"No. But did you see his girlfriend? She couldn't take her eyes off you! She had you stripped naked and was measuring your package. Be careful if she asks you to dance. If the lights go out, she'll trip you and beat you to the floor, legs spread and waiting. She's the type!\"\n\n\"And you wouldn't?\" I teased. \"Every man in this ballroom thinks you're shameless.\"\n\nA roll of drums and a trumpet fanfare interrupted our t\u00eate-\u00e0-t\u00eate. A spotlight picked out the company CEO on the bandstand. He was holding a trophy.\n\n\"Ladies and gentlemen, may I have your attention, please. The judges have reached a decision concerning the award for Best Costume as a Couple. And the winners are... The Pirate and the Genie! Come on up here!\"\n\nThere was great applause, no doubt due to Rani's state of almost-dress, as we walked across the dance floor to accept our trophy. We shook the CEO's hand, and with a hand over the mike he informed us, \"It is customary for the winners to do a spotlight dance. Do you have a number in mind?\"\n\nRani looked at me. I spoke to the keyboardist, who seemed to be the leader of the group. \n\n\"Does your knowledge of Hollywood movie music extend to \"Around the World in Eighty Days?\"\n\nThe conductor conferred with his group for a moment and nodded to me. After dropping off the loving cup at our table, I led Rani out to the center of the floor. The lights dimmed and a spotlight illuminated us. Taking Rani by the waist and the right hand, I looked at the conductor and nodded. The keyboard defined the melody with a long introductory phrase. We began to waltz as the other instruments came in, swooping gracefully around the floor, the spotlight tracking us as we danced. For a minute or so we had the floor to ourselves; then as the lights came back up, other couples came onto the floor to join us. We were among the few pairs confident enough to really step out. I could almost hear the others counting one-two-three, one-two-three as they gave us plenty of room to show off.\n\nThe dance ended. As the watchers applauded, I 'made a leg,' bowed in perfect 18th Century fashion and kissed Rani's hand. She pulled me erect and returned the kiss, her pointed tongue momentarily invading my mouth, her eyes aglow. Inspired by my suggestion, the orchestra began a set of numbers from the movies, a mix of foxtrots, rumbas, waltzes and tangos. At the end of it, having danced with women whose skills ranged from better than mine (a rumba with the CEO's wife, who not only danced beautifully but easily carried on a conversation while doing so) to barely passable (the tango from Scent of a Woman with the horny girlfriend of Joe What's-His-Name), I finally managed to recapture my genie. The witching hour was upon us. \n\nThe drums rolled, the crowd counted down the last seconds of the old year, and as we all shouted, \"Happy New Year!\" a shower of confetti and streamers rained down from overhead while the band played \"Auld Lang Syne.\" Rani embraced me, her hands slipping beneath my red coat to dig into my buttocks, grinding against me and kissing me hotly while I ran my hands over her bare back, my tongue questing for her tonsils. She cuddled into my chest and looked up at me.\n\n\"I've had enough of this party,\" she whispered throatily. \"Let's make our excuses and go back to my place to welcome the New Year as it should be, master. I want you. Oh, how I want you!\"\n\n\"You get the trophy and say your goodbyes; I'll get your cloak,\" I said. \"Don't take long.\"\n\n'Long' is a relative term. It took her 20 minutes to extricate herself from the party gracefully. It took nearly as long to get a cab and what with the holiday and people running about in the streets, half an hour more to get near her place. Fed up with crawling in traffic, I paid off the driver and we started to walk, hand in hand, Rani carrying a handle bag with the genie bottle and the silver loving cup trophy in it.\n\nMaybe if we hadn't been kissing and playing touchy-feely in the taxi, I'd have been more aware of our immediate surroundings. If it hadn't been New Year's, maybe I'd have been less amiable. When the little head starts thinking for the big head, there is a certain lack of awareness of anything not concerned with the business to hand.\n\nTwo guys in their early twenties were leaning against the wall at the corner of an alley between two buildings, nipping from a brown paper bag. They looked vaguely street gang-ish but I didn't pay much attention, occupied as I was with thoughts of what awaited back at the penthouse. They pushed off from the wall and moved toward us, stumbling a bit as if slightly drunk.\n\n\"'Scuse me,\" the smaller one slurred, \"but what time is it?\"\n\nI pushed back my sleeve to look at my watch. \"It's about \u2013\" Coldness under my chin interrupted me.\n\n\"We know what time it is,\" said the taller, skinny, greasy black-haired kid. \"Into the alley, you. Her too.\" Compelled by the revolver under my chin and the knife threatening Rani, we had no choice but to obey. When we were inside the alley between the avenues, the pistol-wielding thug stepped back just out of my reach and motioned with his revolver.\n\n\"Okay, Captain Morgan. Gimme yer watch an' yer wallet. Charlie, get th' bitch's goods.\"\n\n\"Okay, Joey,\" said the smaller hood. He smiled evilly.\n\nCharlie moved toward Rani. Disdainfully, she took a step back and reached up as if to take off her earrings. Out of the corner of my eye, I saw her nod toward the kid with the pistol. With no warning, she whipped the cloak back over her shoulders, giving the two robbers a good look at her. They goggled.\n\nYou can't blame them for looking. Our backseat foreplay had popped her boobs out of her costume. The chilly night air hardened her nipples, enhancing an already remarkable sight. She'd given me an opening. Time slowed as adrenalin flowed. My brain went into overdrive.\n\nI lunged forward, my right leg leading, my left arm lifting out from my side as my right hand flashed to the hilt of my cutlass. The thug started to raise his weapon but found his hand trapped as my left arm clamped it to my side, taking the gun out of the equation for the moment.\n\nDrawing with all the force I could muster, I rammed the pommel into Joey's mouth. He fell back toward the alley wall. I could sense rather than feel the pistol fall out of his hand as he instinctively started to raise his hands to his injured mouth.\n\nThe point cleared the pivoting scabbard. The blade flipped to the vertical as it passed in front of my face. My weight shifted back to my left leg as my right hand pulled back to somewhere near my right ear.\n\nI advanced with my right leg leading again. As I lunged, my fist inside the brass cutlass guard whistled forward in a right cross with all my weight behind it. Joey's chin was the target. Heeding the little voice reminding me of how Travis McGee had always said to hit, I tried to drive the handguard through his chin. \n\nThe punch traveled no more than 18 inches, but its force knocked Joey's jaw open, spraying teeth onto the uneven pavement. He hit the ground, limbs gone slack, stunned.\n\nI pivoted away from him, located the gun lying on the ground and scooped it up with my left hand. I looked for Rani.\n\nCharlie had her by the hair, her head yanked cruelly back, his switchblade across her throat.\n\n\"Don't do nuttin' or I'll cut her,\" he warned, his voice quavering.\n\nI brought the revolver up and stopped five feet away from them, sighting down the barrel at Charlie. The click as I thumbed back the hammer sounded unnaturally loud in my ears.\n\nRani told me much later that the muzzle of the pistol was big as a railroad tunnel, my eyes giving me the look of Shiva, Destroyer of Worlds. When I spoke, my words were icy as an arctic wind and implacable as the wheels of Juggernaut.\n\n\"At this range I won't miss. Drop that knife and let her go.\"\n\nThe switchblade clattered to the ground and Rani stepped out of my line of fire. I looked at Charlie, his face white with terror.\n\n\"Now get the hell out of here!\" I snarled.\n\nCharlie eased backwards a step, then another, and then two more. He turned and ran for his life, looking back over his shoulder to see if I was going to shoot him. He stumbled over a bag of trash and almost fell, caromed off a dumpster and was lost to sight as he disappeared into the darkness.\n\nI looked to my right. Joey moaned, his arms and legs moving feebly. I scabbarded my cutlass and uncocked the pistol. Slipping it into the sash at the small of my back where earlier I'd carried the genie bottle, I grabbed Rani by the hand and pulled her out onto the sidewalk, putting distance between us and the alley. Neither of us said a word until we were safe in the penthouse.\n\nRani clung to me, her cloak falling open. My eyes did not see nor my mind register her. I was reliving those intense seconds in the alley, visualizing all the things that could have gone wrong and realizing how lucky we had been, my body trembling with fear reaction and shock. Guessing what was going on behind my empty eyes and blank face, my girl took me by the hand and led me into her bedroom. She took off my hat, coat, baldric and cutlass, setting them on a chest under the windows. She gently pushed me into the armless swivel chair in front of her computer so she could take off my boots and socks and loosen the ties on my shirt. She stroked my face gently. \n\n\"I'll be back in a minute with something for you to drink,\" she said. She left the room.\n\nA heavy object digging into my kidneys helped bring me back to reality. I reached behind me and pulled out the source of the discomfort. Mechanically, I unloaded the .44 Magnum and set it into my bag of computer tricks, swiveling the chair back to watch the door. I was starting to remember where I was, and with whom.\n\nRani reappeared, still in her cloak, carrying two mugs. A musky, bittersweet aroma wafted its way to my nostrils as she handed me the larger mug. She brought her cup to her lips and motioned me to do likewise. Obediently, I drank. It was some sort of herbal tea, I supposed. I took a second mouthful. Whatever was in it seemed to be exactly what I needed. I could feel life flowing back into my limbs and the world came back into focus. Rani was watching me. I sighed with satisfaction and smiled.\n\n\"That hits the spot,\" I said. She smiled mysteriously.\n\n\"Drink up,\" she said, clinking her mug on mine. I lifted the brew and drank it off in three long swallows, setting the mug on the floor, enjoying the lift the tea brought me. Rani set hers beside mine and moved behind the chair.\n\n\"A good genie always knows what her master needs,\" she said. \"Take off your shirt and close your eyes. I can see the tension in you from here.\"\n\nThe silk shirt came off over my head. Rani took it and I heard it land somewhere in the vicinity of the trunk. Her hands began to massage my scalp; I closed my eyes and gave myself up to the feeling of mellow goodness her fingers were creating in me.\n\nShe worked her way from my head down my neck to my shoulders, pausing to turn on a CD player that played gentle New Age music just at the level of audibility. Rani massaged her way down my arms and chest, lingering at certain spots and using her nails adroitly, her hands never stopping, occasionally trailing their way back to my neck to touch areas at the junction of shoulder and neck with sharp little nips of her nails that were not meant to relax, exactly. I could feel my cock starting to harden as those not unpleasant pinches urged the blood to flow into my penis. She continued to stroke my chest with her talented hands, working down to my abdomen, tracing the muscles, sometimes using one nail to circle my nipples and follow the curves of my pecs. She reached down, unfastened my pantaloons, and drew them off so I was naked in the chair. Ordinarily, I'd have done something, but here and now I simply accepted it, eyes still shut.\n\nShe moved closer. I felt her body rubbing the length of mine, her nipples hard little pebbles moving down my torso, her pussy leaving a moist trail along my thighs. The aroma of an aroused woman overwhelmed me. I opened my eyes.\n\nRani stood in front of me no more than a foot away, her boobs level with my mouth, so close I could feel the heat radiating from her. I realized that she wore nothing except the genie hat on her head, the silver choker at her throat, and the sterling bracelets at wrists and ankles. One hand brushed sensuously back over her hair as she arched her back, while the other disappeared between her legs, her nails slowly moving along her clitoris and labia, glistening with female wetness. Her eyes were hot, her lips puffy with desire. There was a sheen to her body. I didn't know if it was oil, sweat or a hallucination and I didn't care. I found my voice.\n\n\"What do you want, baby?\" I asked.\n\n\"I want my master to fuck me,\" she whispered hoarsely, her voice thickened by lust. My cock, already hard, sprang up and began to swell even more.\n\n\"Tell me what you want,\" I ordered.\n\n\"I want my master to fuck me,\" she repeated, bringing her hands under her breasts, lifting and offering them to me. \"I need my master to take me like an animal, to quench the fire in me. Take me, master! Ram your cock into my pussy! Make me yours!\"\n\nWith an animal growl, I pulled her to me as I stood, crushing her mouth as I grabbed her ass with one hand and twisted a breast with the other as my tongue invaded her mouth. She clung to me, her dripping pussy rubbing against my penis, making it grow harder and longer than I had ever known, until it felt like I had a salami between my legs. Her moans stripped the last veneer of civilization from me. Suddenly I didn't care about the cunt's pleasure or what she needed. All that mattered was what I wanted. This little whore had it and I was going to take it!\n\nI swept the split-tail off her feet, carrying her the four steps to her playing field of a bed. I held her in the curve of my left arm while my right hand swept the covers off before I tossed her onto the mattress. She landed with her legs splayed, her shaven pussy winking moistly at me as she arched up, presenting her tits and her twat. \n\n\"Fuck me!\" she begged. I pinned her arms to the bed and with no pretense at foreplay forced my pulsing cock into her.\n\nThe slut screamed as my first stroke bottomed out, painfully stretching her cooze around my impossibly huge rod despite the wetness that betrayed her total arousal. My cockhead hammered her cervix again and again, the shaft pistoning in and out of her mercilessly. The cunt wrapped her legs around me, her slit distended, pussy juice flowing like a river as her body accommodated itself to me. The bitch's screams gave way to deep, heartfelt moans and gasps of pleasure as I used her the way hot-blooded vixens are meant to be used.\n\n\"Ohhh... aaahhh... oh yes, oh yes, oh yes....ohhhh... yesss... like that..... oh yes... more... deeper... fuck me, fuck me, fuck me... harder... yessss... hurt me.... fuck me... don't stop... don't stop...don't \u2013 stop... yes, yes, Yes, YES! AIIIEEHH!\"\n\nI felt the whore cum under me, her pussy rippling and her heels hammering at my back as I continued to stroke in and out of her, not letting her up, nor letting her come down. Ignoring the bitch's pleading, I pulled out of her, flipped her over onto hands and knees and took her doggy-style, pulling her head back by the ponytail and slapping her buttocks sharply.\n\n\"You don't get off that easy, slut,\" I warned. \"You wanted a fucking, and that's what you'll get! Now swing that ass or I'll whip you 'til you bleed!\"\n\nPanting, the cunt tightened up and screwed for all she was worth, pressing back onto my erection, gasping for air, loving every minute of it. I seized her hanging tits and twisted the nipples roughly. She cried out.\n\n\"Yes! Yes! That's what I need, master! Fuck me! I want it! I want it soooo much! Rape me! Give me your big, beautiful cock! Make me cum! I want to! Make me cum on your cock, master! I love it!\"\n\nI rammed her hard, my glistening flesh-sword sliding in and out of her hot wet velvet scabbard, withdrawing as she moved forward, driving deep as her hips moved back into me. Each of my thrusts drew a grunt of pleasure from her, the pitch climbing as she neared climax, impaled on my massive cock-stake.\n\n\"Ohh... ohhh... oh yesss... ohhh... oh yes, oh yes, oh yesss... ahhh... ahhh... cum... cumm... cumming... OH YES!! AHH! AHHH! YES! YES! YES!\"\n\nHer gorgeous body convulsed under me with the intensity of her orgasm, her eyes rolling back into her head as she collapsed gasping onto the bed. Her glowing body was limp except for the exhalation of deep, sensuous groans, but I wasn't done with her. This bitch owed me a climax and I meant to collect it.\n\nI flipped her onto her back, spread her legs and slowly pushed my swollen fuckstick between her nether lips, gathering pussy-juice on it. Moving up her body, I slid it between her tits, pressing them together to form a fleshy valley around my prick, sliding it slowly in and out, in and out. Her hands dreamily came up to cover mine, her nails digging into her mounds. She moaned.\n\n\"Oh, master... so big. So wet. So hard. Let me suck it. Let me take it down my throat,\" she begged. \"Fuck my mouth with your hard cock \u2013 \"\n\nHer voice was cut off as I pulled her around so her head hung over the edge of the bed at hip level. Without subtlety, I pushed into her face, marveling that she could get my engorged member past her lips.\n\nShe took it like a pro, sucking me into her mouth. She gagged a little as I continued to thrust into her throat, but she gamely sucked my dick and licked with her tongue, cleaning her own juices off the prick that was ravaging her. The suction of her mouth on my cock built on top of the pleasure I had taken from fucking her cunt, and of their own volition my hips thrust harder and faster into her waiting mouth. She lowered her hands to her crotch and masturbated herself, wetting her fingers with cunt oil as I fucked her face. She brought one hand up to curve around the shaft of my penis, making sure her oral heat wouldn't dissipate as I drove in and out of her. Her nails just barely touched the shaft as I moved, and that was the final straw. \n\n\"AARGH!\" I groaned. I grabbed both sides of her head and drove deep into her throat as my cock erupted, the cum boiling out of my balls, blasting up the shaft and spurting with what felt like rocket velocity into her as she deep-throated me. She sucked it down eagerly, drinking like a woman dying of thirst until my cock had pumped out every drop. I withdrew from her and fell onto the bed. She twisted around and crawled up into my arms, a contented smile on her beautiful face as she laid her head on my chest and my arms enfolded her. Intertwined with my slut lover, all was right with the world as it faded to black.\n\nWhen I awakened, sunlight was gilding the room. At some point during the night, Rani must have gotten up because a silk coverlet lay over us. My lovely Sikh wench lay on her side next to me, a hand on my chest and a leg thrown over mine maintaining contact between us. She felt me stir and opened her eyes.",
        "\"Good morning, master. Did you sleep well?\"\n\n\"Very well. And you, Rani?\"\n\n\"VERY well,\" she purred. \"A well-fucked woman sleeps soundly and with only beautiful dreams, and you fucked me very well, master.\"\n\n\"Why do you keep calling me that?\" I asked, sitting up in the bed. Rani pulled herself half-erect, looking me in the eye, her breasts touching my chest. I instinctively reached to cup one of them and caress it.\n\n\"Because you are my master,\" she said softly, \"and I've been waiting for you to discover it. I wanted you, but you are such a perfect gentleman that you wouldn't make the first move. So I made it for us, the way Auntie Dariah said I should. We talked, she and I, about you and us; about what you like in a woman, about what you prefer in bed and how to get you there. She told what I should do if you couldn't bring yourself to make the big move.\n\n\"And there is more. You saved me from those robbers. That means I am yours. And that is how I want it. Is it so bad a fate, my love?\"\n\n\"No,\" I said, speaking from the heart. \"I wasn't sure where I stood with you. I've wanted to fuck you from the time I first saw you, but what we have is much more than that.\"\n\nShe kissed me slowly and lingeringly. When we broke the kiss and she settled on me again, I asked, \"Tell me. What was that drink you made for us last night?\"\n\nRani smiled mysteriously. \"An ancient family recipe, passed from mother to daughter. It restores you after stress and lowers inhibitions. It does other things, too. Very useful things, master. Shall I mix us some more?\"\n\nI rolled her onto her back and slid down next to her. \"No, let's see if the ancient magic that exists between lovers will suffice for me to prove I am thy true master, my genie.\"\n\nWe kissed, her lips opening under mine to accept my tongue as our hands ran over each other's bodies. I took my time with that sensuous mouth, tickling and probing its recesses and sensitive surfaces before I kissed my way down to her marvelous tits, the dark cherries that topped them hard and waiting for me. Rani's breathing deepened and she moaned low in her throat as I laved them with my tongue and suckled them, loving the way she gasped and squirmed under me, her hands urging me to do whatever I wanted.\n\nI gloried in her breasts, squeezing them like ripe fruit, nibbling on the turgid nipples, pinching them and pulling them to the greatest length before latching on and sucking them like a man with a glass of soda and a straw and a powerful thirst. I could feel her honey pot leaking against my stomach and chest as I slid down her body to her divine fulcrum, her musky sex-oils marking me with her arousal. Parting the outer lips, I began to torment her with my tongue, licking and penetrating her, teasing her clitoris, making her even hotter as her pussy readied itself for action.\n\n\"Oh, master, yes! Please! Use me! Make me ready for your cock! Let me please you! Let me fuck you! Please!\"\n\nI paid scant attention to her begging, heeding rather the color and wetness of her labia as I continued eating her, licking the sweet nectar out of her slit, teasing, tormenting and tempting her toward climax. As she writhed under me, I slipped two fingers into her and added this additional stimulation as I shifted my attention to her clit. I could feel her muscles squeezing my fingers, using them as a substitute for the cock she craved. She was flowing now, wet and eager, fully aroused and oh so ready. I raised my head up and caught her eyes.\n\n\"Cum, Rani!\" I ordered. \"Cum for your master! Now!\"\n\nShe arched off the bed, greedily trying to pull my whole hand into her as she climaxed. I got my mouth over her clitoral shaft and sucked hard with no attempt at gentleness and she screamed with the pleasure I gave her.\n\n\"YES! Yes! Yes! Yes! Aaaah! Ohhh! Ohhh! Ooooh, yes! Yes! Oh, please, master, take me! Give me your beautiful cock! Fuck me! Please, take me now!\"\n\nHer hands pulled her knees up and out, spreading her thighs, completely opening herself to me, begging to be taken and fucked like a rag doll. I reared over her and rubbed my rampant cock up and down her slit, tormenting her before I finally slid into her waiting pussy, hearing her moan in satisfaction as I invaded her innermost depths with my fuckstick.\n\nShe lay splayed and motionless on the bed at first, savoring the feeling as I sank into her, loving the pressure of my rock-hard cock against the seeping walls of her cunt, her very position proof of her absolute surrender to me, a statement of ownership more explicit than any legal document. As I moved within her, her arms came around me and she wrapped her legs around my hips, seeking to keep me deep inside as I rode her. Her eyes closed and her mouth sought mine, our tongues intertwining as our genitals did, always seeking to pleasure each other. We found a rhythm as I fucked her, not worrying about anything except bringing her to the peak of orgasm again, this time on my penis. She moaned against my mouth, the wordless sounds urging me to screw her thoroughly. I needed no goading. This was my woman and her body was mine to do with as I wished; and it pleased me to use her for our mutual enjoyment.\n\nTime had no relevance in that bed. I felt her cum under me twice, then a third time, and a fourth before her orgasms ceased to be discrete occurrences and became a rolling, continuous flood of sexual pleasure. Rani mewled beneath me, her nails digging into my back and buttocks as she encouraged me to use her. I pistoned in and out of her hot, wet gash, thoroughly pleased with her reactions and with myself for giving them to her, but at last my own climax would not wait any longer.\n\n\"AAAHH!\" I shouted as my cum boiled from the pit of my stomach, up through my balls, down the distended, engorged shaft of my prick and finally jetting into her waiting cunt. I felt like I was emptying a gallon of spunk into her and she responded by clasping me tight, her legs wrapped around my hips, holding me deep in her womb as we came together, our bodies rippling and squeezing as the two of us became one in that timeless moment, her orgasm zapping me like an electric current as my climax shattered the walls of her inner self and carried the day. Totally spent, we fell asleep in each other's arms. We had each found our home in the other.\n\nOur lovemaking set the tone for the rest of the day. We left the bed only to eat and for unavoidable calls of nature. Most of the time we just cuddled, savoring an intimacy that was more than simple physical contact. Between bouts in the lists of Eros we talked about everything that defines a relationship, discovered and worked through potential problems and reached understandings about each other and the agreements between us, leaving nothing unspoken. The two of us cemented our bond as a couple.\n\nAs we began the adjustment period inevitable when a relationship goes from courting to life-sharing, over the next couple of weeks I moved into Rani's penthouse. It surprised me that many of its rooms were empty. While she was a woman who appreciated the finer things in life, she would not settle for anything less than the best; a standard which when applied to me I found both flattering and daunting. Until now, she hadn't needed the space, and she gave me free rein to make use of it. My copper pots and pans and vintage Sabatier knives displaced her battered aluminum cookware and cheap plastic-handled cutlery to the basement storeroom and the kitchen became part of my domain. We both knew how to cook but it was not long before she conceded my skills were better than hers with most cuisines.\n\nAbout half my furniture went into storage. She set about finding a tenant to take over my suburban house for the time being, commenting only, \"After we have kids they'll need a back yard to play in.\" This statement did not fill me with the dread my buddies had reported when discussing relationships.\n\nWe kept up our dancing and steadily improved. It amused us both that Sandi instantly spotted our changed relationship when we walked into the studio, commenting wryly that couples made the best dance partners. We threw a housewarming party for our friends and to our relief discovered that the two groups were mostly compatible. Relationships have withered and died because one set of friends or the other could not get along.\n\nWe visited her folks out at 'stately Wayne Manor' one weekend a month. While Rani nominally slept in her childhood bedroom and I slept in the guestroom, from the faintly disapproving looks we received over the breakfast table from Suji and the amusement with which Lakshi and Grandmother eyed us, I doubt we were fooling anyone except maybe Mehki. We slept together every night and even made love in that guestroom, though it was a hardship for Rani to stifle her exuberant cries when we had each other there. \n\nOn our sixth such visit I took the bull by the horns and confronted the situation. I gathered the family in the living room and Rani and I stood in front of her seated parents.\n\n\"I have something to say. Lakshi, Suji, please do me the honor of listening.\n\n\"You know we have been living together since New Year's. Rani is happy with this. I am not. I would like your permission to marry her \u00be if she'll have me, that is.\" Rani's eyes lit up and her hand tightly squeezed mine. She, at least, was willing.\n\nSuji wouldn't look at me. Like all fathers, he had known this day would come. Even though his little girl had been out on her own for years, my announcement made official the fact that she was a woman grown and leaving him for another man. I could see his conflicting emotions. It wasn't difficult to guess what he was thinking.\n\nHe liked me and so did his wife and his mother, but I was gora-log, not one of them. Rani wanted me, but he didn't want to let go of her. I was good to his precious daughter, but we lived hours away. I wasn't a Sikh; but she plainly loved me. At last he stood up and placed his hands on our shoulders.\n\n\"If it is a father's blessing you want, you have it, both of you. Be good to each other.\" He embraced his daughter and shook my hand as Rani hung on his neck and kissed him. As the rest of the family came to us, he looked me in the eye and said, \"Now, about the dowry...\" The room filled with laughter, breaking the tension.\n\nWe left the women talking about wedding preparations and crossed the hall to the music room. I sat at the piano and began to play while Suji disappeared and returned with two tumblers dark with whisky. I took one with my right while my left continued to draw melody from the keyboard and we drank a silent toast, each to the other. Setting my glass down, I said, \"This song is dear to me and I think you'll say it's appropriate to the occasion.\"\n\nThe piano drew the ladies as I began to sing. They gathered around and joined in as I got to the chorus:\n\n\"For I am the Pirate King; (You are! Hurrah for the Pirate King!) And it is, it is a glorious thing To be the Pirate King. Yes, I am the Pirate King; (You are! Hurrah for the Pirate King!) And it is, it is a glorious thing To be the Pirate King. It is! Hurrah for the Pirate King, Hurrah for the Pirate King!\""
    ],
    "authorname": "Sir Galahad",
    "tags": [],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/hurrah-for-the-pirate-king"
}