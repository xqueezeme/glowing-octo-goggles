{
    "title": "Midsummer Legacy - Roleplay",
    "pages": [
        "Note: This story is a sequel to the Midsummer and Midwinter story series. More precisely, it's a bonus story for my followers who have read those two series a while ago. It can also be read as a stand-alone, with a few paragraphs explaining some of the background. \n\nEdited by: Pope1944. Thanks!\n\n***\n\nWell, it looked like three months wasn't enough time for me to get used to this. These days, from time to time, I wake up with a wonderfully beautiful woman named Eleanor. She's a woman I love and who loves me back, and I was now spooned behind her. We're both naked, with my nose buried against her nape, her golden hair all over my face, and, of course, my hand lazily fondling her breast. \n\nAll the while my wife, Nella, was asleep in another room, with another man. That man happened to be the husband of the wonderful woman whose body I was now enjoying. As I squeezed Eleanor's breasts a bit more, I felt her waking up, then pushing back against my body. My cock, which had been half-asleep against her asscheeks, began to wake up as well. \n\nI still couldn't believe the turn of events that had followed the last Midwinter. In fact it began about a year ago, during Midsummer. My wife Nella and I, with Eleanor and her husband Tim as well as six of our friends, all met in a cabin for our traditional Midsummer weekend. Those Midsummer weekends had always been quite sensual, even overtly sexy with some surprising bits of unexpected nudity. Last year though, something special happened. \n\nNella swears that it was because the moon had been full. In any case, we soon found out that all that latent sexual energy had been set to explode. We all ended up fucking someone else than our lovers. At least once. Then six months later, in Iceland for Midwinter, it all transformed again and the weekend ended up as a full blown orgy. \n\nYet as crazy as it may sound, that orgy wasn't the most mind-blowing part of the weekend. Just before that orgy, in the quiet morning before the storm, Eleanor and Tim invited us to come and live with them. Not in a bi-generational house, not renting a room in their home. No, really live with them; two couples, yet a very explicit foursome as well. \n\nSo here we were today. Nella and I moved in about three months ago and we were all still adjusting. Not everything went as smoothly as planned, but never being sure next to which women I was going to wake up with more than made up for the little annoyances. One of those annoyances was the bathroom. It was clear, had been since the first week, that we would have to build a second one. I was the only one of the four that didn't seem to require a very long time in there in the morning. \n\nIn her bed, I slipped my hand from Eleanor's breast to her hip, then ass, cupping it's nice fullness in my hand. When I pulled it upwards, opening her crack and letting my hardening cock slip deeper, Eleanor moaned. She opened her thighs just a bit, but it was enough. My cock suddenly twitched and ended up directly against her pussy. As she pushed against me, Eleanor groaned, \"Hmmm... I'm pretty sure we're still covered with your sperm from a few hours ago.\" \n\nSmiling, I remembered that we had fucked during the night, half-asleep and groggy. \"Yes, my cum and your juices.\" I murmured into her ear. \"I seem to remember that I slipped inside you with barely any resistance...\"\n\nShe laughed lazily, still woozy from the sleep. \"And you're probably going to slip in just as easily... once I take my shower.\"\n\n\"Ah...\" I groaned, not wanting to wait. \n\n\"You're insatiable!\" she said, pushing herself up.\n\n\"Look who's talking!\" I said, laughing and pulling her back against me. \"Ok, I have an idea. Wanna do a bit of roleplay?\" I asked, both her breasts in my hands now. \n\n\"You want me to dress up as a nurse?\" Eleanor asked playfully. \n\n\"Well yes, but not this morning. Go to the bathroom and throw me a cloth with warm water and I'll clean myself up. Then, while you're in the shower we'll pretend that it's a year ago. Before Midsummer.\"\n\n\"You wanna pretend we're just ordinary friends?\"\n\n\"Yep. And that I'm staying here with Nella. And, of course, that everybody's asleep while you're taking a shower, with, maybe, the door not fully closed...\"\n\n\"Hahaha... Got it!\" Eleanor said, turning her head towards me for a quick kiss. \n\n\"Remember,\" I said, \"I'm not supposed to see you naked, and you're not supposed to let me...\"\n\n\"Really Will?\" she said, a strange expression on her face. \"You think that if I had caught you spying on me a year ago, I would have screamed in panic?\"\n\n\"Er, a year ago, we hadn't, er...\"\n\n\"Hahaha! Guess we'll never know!\" she said, this time succeeding in getting up. \n\nGetting into my role, I pulled the blanket over my head as she got up, to not see her naked body. I heard her take something from the drawer, but I didn't know what it was. After a pause, she stopped walking and said, \"Hey, what's up with you and spying on me in the shower? First in Midsummer, now this...\" \n\nI was lying on my back, completely covered with the thin sheet. Instead of replying I squeezed the muscles in my cock and felt it twitch up. Eleanor saw it move and laughed. A few moments later I heard her walking back towards her room and felt the damp cloth falling on the bed. \n\nSoon I was all cleaned up, my cock hard and glistening with a thin coat of warm water. When I hear the shower turning on I walked down the corridor in silence, making sure that everybody was asleep downstairs. Last night Tim and Nella had taken what was officially Nella and my room, what used to be the guest room. But since Eleanor and I were early risers and our spouses were not, we often switched partners during the weekends. I couldn't hear a thing from below, so I kept on walking towards the bathroom. As I approached, I could see that Eleanor had indeed left the door open, but not by much. In fact, as I peered inside, I couldn't really see anything. The little minx was playing her role pretty seriously. Kneeling down, I pushed the door about an inch. \n\nDespite what had happened since last year's Midsummer, despite the fact that I've had sex and made love to that woman very often, despite the fact that I had just woken up with her warm body in my arms... despite everything I still felt that spasm of pleasure in my belly as I looked at her. Fully dressed, Eleanor was pretty enough, but with nothing more than hints of her stunning beauty. Unless her clothing was very tight, the softness of her curves made it hard to distinguish anything. She wasn't fat, not at all, but she was certainly well rounded, with soft curves all around. \n\nYet she wasn't as powerfully feminine as Nella. My wife was undeniably female, regardless of how she was clothed. Very large breasts both in width and thrust, hanging many inches in front of her as she walked. Her hips, thighs and ass were equally powerful, all in overflowing curves that couldn't be hidden. Eleanor, on the other hand, could tame her femininity... or, of course, decide to unleash it. Now, fully naked behind clear glass, I was stunned again by how beautiful and sexy she was. \n\nTen feet away from my hungry eyes, I first saw her ass and their creamy curves. Nobody could say that Eleanor's ass was lacking. It was all there, curved and rounded. Full was the perfect word. Even though she was supposed to be roleplaying the innocent, it was clear that she was instead playing me. Playing cock, to be precise. As she was lathering herself up, sliding her soapy hands all over her hips, ass and thighs, she was also dancing. Subtly, I'll give it to her, but still noticeable. Her pale white thighs were slowly slipping against each other, moving back and forth, forcing her hips and ass to rock from left to right. She seemed to be dancing to a slow rock song I couldn't hear, and it was a wonderful sight. \n\nKneeling in the corridor, my hard cock in hand, I smiled as I noticed that I was breathing harder, my heart pounding faster. I guess roleplaying was working for me! I remembered that it had been quite fun with Nella, the few times we had tried. It was now pretty clear that I was going to have to do it more often. \n\nMovement from the shower brought me back to the present and I saw Eleanor beginning to turn around. Her round breasts, large by any standards except maybe for someone whose wife is blessed with truly large breasts, Eleanor's creamy breasts ensnared my eyes. Most of her bras were 34C, which she filled very nicely. But that fact far from exhausted what someone could learn from Eleanor's breasts. \n\nI never quite found the exact words that could describe them, something I hold against the entire English language. The one word that stands out if \"soft\", but it also conjures up images of sagging or flopping breasts. Her breasts were soft like a cat, purring, curled in front of the fire, was soft. On another type of body, they would look like fakes, as they were too round. But on her, with all those curves, they simply fit perfectly. \n\nEleanor broke me out of my reverie again by pinching her nipples, pulling them upwards and letting her breasts bounce back down. Her aureolas and nipples were pale pink, like a puff of strawberry cream on top of her vanilla breasts. Even before she began playing with them, they were puffy and prominent. Not large, just prone to engorge with blood and stand out proudly. After repeating that pulling up and releasing act a few times, she caressed them gently again, washing them innocently, as if nothing had happened. Looking up, expecting to see her smiling, I saw her look like she was completely unaware of my presence. Yet, right then, her hands slipped all the way down to her pussy and she opened her mouth silently. She pressed her body right against the glass, turning her head sideways. \n\nBefore I could stop myself, because of the roleplaying, I pushed the door open quite a few inches more. And the door creaked. As I quickly moved away from the door and leaned against the wall, I heard her sharp intake of breath. After a long and, funnily enough, stressful minute, I heard her moving about in the shower, making the water splash normally. When I came back to the door, opened now about 7 or 8 inches, I paused. Looking down at my hard cock, pointing directly into the bathroom, I smiled at the coincidence. \n\nEleanor had her back turned to the door again, and I decided to up the ante. Slowly I opened the door completely and walked in. Definitely, roleplaying was great; my heart was beating hard and I was grinning like a fool! When she turned around once more and saw me, Eleanor actually jumped in surprise. Playing her role perfectly, she whispered, \"What the fuck are you doing here?\" while trying to hide her body. She then registered that I was naked and looked at my cock. There was a long pause during which we both stared openly at each other. Then, the obvious question, \"What if Tim comes up?\" \n\nBefore answering I put my finger on my lips, with a smile, and whispered, \"Gods you're beautiful...\"\n\nEleanor grinned, half in the role, half in honest pleasure, and let her arms drop to her sides, completely revealing her nude body. Her golden bush, hard to see when it was all wet like this, barely covered her pussy lips. She doesn't trim it; it's just sparse like this. Looking at it, I felt my cock spasming, precum oozing from the tip. In Eleanor's full view I took a step forward. Her smile faded, replaced by an expression so full of lust and anticipated pleasure that my eyes opened wide; she was very good at this roleplaying! Another step towards the shower, and she pushed the door open. \n\nAnd then, as if on perfect cue, we both heard the stairs' first step creaking loudly. Tim! We knew it had to be him as it was way too early for Nella. We both froze like deer in headlights, but only for a fraction of a second. In a small burst of genuine fear I race back to the corridor as silently as I can and hide in their room. If Tim was planning on coming to their room, the game would be up, but he probably wouldn't notice anything special going on. I was ready to dive on the bed, face down to hide my erection, but he never came. I heard him going in the bathroom. I couldn't hear them talking over the sound of the shower, especially since he closed the door behind him. \n\nI had no idea what he was going to do, but when I heard him walking back down the stairs, I looked and made sure the way was clear. I was still rock hard and in desperate need of fucking Eleanor. Tim had left the door opened when he left, so I entered the bathroom expecting to see Eleanor still in the shower. She was. She was also still naked. But, quite unexpectedly, she was also fucking a dildo. She had stuck the dildo I had given her, a clone of my cock, on the shower glass and was now fucking it, almost fully bent forward. \n\nFrom my vantage point, perfectly from behind her, I could see everything. My mouth fell open at the sight of her ass pushing hard against the glass, my cock opening her pussy wide. Feeling my cock twitch upwards, I grinned and walked in, closing the door behind me. \"So,\" I say, as casually as I can, \"this is what would have happened if I had sneaked in here a year ago?\"\n\n\"If you had given me this dildo a few months before? Probably!\" Eleanor moaned, not even bothering to turn around. Or stopping. \n\n\"Look who's insatiable now!\" I replied, walking into the large shower right next to her. \n\nLaughing, Eleanor pulled herself off of the dildo and moved it to the far side of the shower. I looked in wonder as she impaled herself upon it again, bending forward just like earlier. The only difference was that I was now right in front of her, and her head was inches away from my very real cock. The shower was still on, spraying hot water all over her back. \"Now just keep quiet, we don't want your wife to wake up and find you here, don't we?\"\n\nAs she took me into her mouth, I closed my eyes and grabbed her head. Even if this hadn't been roleplaying, I don't think I could have even been thinking about Nella. Looking down, Eleanor's golden hair on my thighs and her rounded ass and hips slowly fucking my other cock, I was enjoying myself way too much. After a while she pushed my cock all the way to the back of her mouth and hummed, something she knew I really liked. \n\nEleanor remained in this wonderful position for a long while, giving me one hell of a blowjob. In addition, as she pleasured herself upon my dildo, she offered me the amazing sight of her hips and ass rotating and dancing as she fucked herself. Her small waist seemed like the focal point of her motions, letting her flaring hips move all over the place. A few times, she grabbed me firmly and rocked herself backwards and forwards, letting my real cock fuck her mouth and my dildo cock fuck her pussy. Then she resumed her sensual rotating motions on both the cocks. Eventually, to my chagrin, she stopped and pulled away, freeing herself from both of my cocks. \"Hmmm,\" I groaned, \"I cold have stayed right here until the water ran cold...\"\n\nStanding up and reaching for the bottle of lube, Eleanor looked at me with a smile: \"I know my love... But there's something I've always wanted to try with you and your cock. Couldn't think of a better time to do it.\" After she lubed my cock, she put some on her pussy, then her inner thighs. As I looked and wondered what she had in mind, she pushed me against the wall and turned her back to me. Whispering, she said, \"Slip your cock between my thighs.\"\n\nWhen I pushed my cock downward, grazing her asshole and pussy on the way, I found her thighs tightly closed. Smiling, I pushed in, parting her soft flesh and poking out on the other side. The feeling of her pussy against the top of my cock was nice, but her thighs... This wonderful thigh penetration felt good, and distinctly different from a pussy, a nice pair of tits or even an anus. \"Bend your knees a bit...\" Eleanor said. When I did, allowing her more control, she began dancing again. I couldn't find a better word. Moving to a tune I couldn't hear, Eleanor rotated her hips, twisted from left to right, slid up and down, pulled off only to come back... All the while my cock was getting overwhelmed by all those different sensations. \n\nAt first I had taken hold of her hips, but soon I let her fully in control and grabbed both her breasts. Eleanor wasn't going especially hard or fast. Instead, it felt as if she was pulling me into a very lascivious dance, a latin number all over my cock. At one point she stood on the tips of her toes, then opened her thighs just a bit before going back down. I felt the heat of her pussy against my cock as I was pushed downwards, and Eleanor didn't stop before her lips rubbed against my glans, almost pulling completely off. Pushing herself back up, my cock followed her until I felt her bush rubbing against the very tip of my cock. She was pushing my cock up and down, sliding it all over her pussy in the process. \n\nIntoxicated as I was with this dance and the new feelings I was savouring, I wanted more. When I groaned and squeezed her breasts harder, Eleanor barely had time to turn her head around. Sliding my hands back down to her hips, I pushed her just far enough away so that my cock dug between her lips. When I pushed my hips forward I finally slipped inside her. Her dancing motions continued just long enough so that my penetration was paused a brief moment before we aligned for the first full penetration of the day. She barely contained her moan, and I knew I didn't contain mine very well either. Bending forward, allowing me even deeper entry, Eleanor shushed me. \"Tim could come up any minute... keep your mouth shut!\"\n\nShe was still playing, and I had to grin. \"Well if he comes you'll just have to tell him that you needed a proper fucking while he was asleep.\"\n\n\"Ha! You pretentious bastard!\" she replied, laughing softly. \"What if it's your wife that we wake up?\"\n\n\"Well, I'll just ask her to wait for her turn!\"\n\nWith that Eleanor laughed again and pushed herself off of me. She was laughing as she turned around, wrapping her arms around me. \"If we had really done this a year ago, what would you have really said?\" \n\n\"I have no idea Eleanor...\" I said as she placed her smile on my neck time after time, holding me tight. \n\n\"Well, I know that if you had found me while masturbating, I couldn't have refused you... That's why I was so hesitant at Midsummer. Feeling lust for someone, knowing that the merest fantasy with him made your pussy wet, that's one thing. But now you know that I wasn't simply lusting after you.\" She paused, looking at me, \"I love you Will.\" \n\nAfter a grin and a small paused, she said in a lighter tone, \"In any case I've already felt your cock inside my pussy this morning...\" she said, glancing at the dildo. Then, reaching for the lube again, she added, \"forget about the roleplay for a second and answer me this...\" she paused with a lump of lube on her hand before reaching backwards and placing it between her asscheeks. \"What would she say if Nella did come up, right now in the real world, and saw you fucking my ass? If she saw me on all four, with your long big cock pounding away between my buttocks, hilting itself completely?\" \n\nI was too surprised and thrilled to react, much less form a witty reply. I startled when she grabbed my cock, relubing it thoroughly. Eleanor, once again in control of the situation, asked a new question: \"Would she be jealous? Would she be ready to lube her own ass and join me on all four in front of you, giving you her anal cherry?\" She turned around, sliding her ass against my well lubed cock, and added: \"You must know that we do talk about it... I know you haven't done it with her, and haven't done it with anyone else since Iceland. As for me, I confess I was thinking about your cock the last time Tim fucked my ass...\" As she finished, she lowered herself down on the floor, pushing her ass upwards at me. \"Now, promise me this; let me adjust to your size for a while, then fuck my ass like you've been wanting to do for months now...\"",
        "Looking down at her, all wet and lubed up for me, I shivered in anticipation. \"What do you mean months? I've been wanting to fuck your ass for years...\" I knelt behind her and pushed my cock down. It was a bit painful; I was hard as a fucking telephone pole. When the tip of my cock touched her anus and nestled between the soft flesh of her buttocks, I forgot about the roleplay, my wife or her husband. With my free hand I caressed one of her buttocks, using my fingers and thumb to squeeze it hard. Her soft flesh gave way and I felt her anus opening up. Reaching around I did the same to her other buttock, keeping a firm pressure on my cock at the same time. Now, taking my time and trying to become conscious of all the intoxicating feelings I was experiencing, I reached for her hip and pushed. \n\nMy first time had been with our friend Rinette during Midwinter, and it had also been her first time. As delightful as that moment had been, seeing my cock disappearing smoothly inside Eleanor's ass was mind boggling. I could see her skin stretching around me, spasming softly a few times before cinching itself around the base of my glans. Eleanor didn't cry out. All I heard was a long moan. Staring down at the glorious sight, I pushed in deeper. \n\nEleanor's ass was soft and pliable, letting me in easily. As I pushed in gently she moaned faster and faster until I was all the way inside. And I mean all the way. I don't think I was able to do that in Rinette, and the feeling was just amazing. \"Pull back a bit and add some lube, will you?\" I reached up and grabbed the bottle. Looking back down at the sight of my cock sliding out of her ass, I knew I was grinning like a deranged person. I let a long line of lube fall on my cock, and pushed back inside.  \n\nI don't know how long I stood there, transfixed, not moving an inch, just staring at her beautiful ass, and her stretched anus around the very base of my cock. Slowly, imperceptibly at first, Eleanor began to clench her muscles around me. Part of me wanted to ravage her, to take her ass like a beast. And another part of me wanted to savour this feeling as long as I could. \n\nI could feel her muscles contracting, squeezing my hardness. Figuring out that I was not about to fuck her immediately, Eleanor resumed her hip dancing once again. Notwithstanding the fact that she was kneeling on the floor, her face against the wet tiles with a very hard cock all the way inside her ass, she nevertheless managed to twist and turn around me like a belly dancer. Looking down at this spectacle, I had trouble breathing normally. \n\nI felt as if I could die this way and be happy. Yet when she pulled away and back, no more than an inch, the flood of sensations took me by surprise. My instincts took over for a brief moment, just long enough to make me realize that both my hands were on her hips, ready to push and pull. When my hands squeezed her flesh, Eleanor moaned and whispered, \"Let yourself go, lover... My ass is all yours.\" \n\nThe next few minutes were a blur of raw pleasure, unrestrained passion and sheer craziness as I abandoned myself to the will of my body. Up to this point Rinette's had been the first ass I'd taken, slowly in our afternoon together, then faster during the orgy. It had been amazing, most of all because Rinette had been an anal virgin, and that she had the most wonderful ass I'd ever seen. Yet this moment with Eleanor was both very similar and quite different at the same time. The fact that Eleanor's creamy white buttocks were lovely was beside the point. She wasn't giving me her virginity either. Instead I was overwhelmed by a woman who not only was used to this, but absolutely loved it. She was allowing me to share into her fetish, a fetish she had obviously been cultivating and exploring for years...\n\nI knew I was fucking her harder and harder, expecting her to ask me to slow down any second. She didn't. I knew I had a big cock, and that I was riding her hard. She was only groaning and crying out in what was obvious and utter pleasure. When I reached my perfect rhythm and intensity, I completely lost sense of all time and space. I was simply lost in the unadulterated pleasures, both physically and emotionally. \n\nI was awakened from that trance by her moans, which suddenly stopped. For a brief moment I opened my eyes in panic; had I gone too far, too deep, too hard? Nope. Eleanor's mouth was wide opened in a silent scream, and her body began to tremble all over. Lengthening my strokes and enjoying every damn last inch of her ass I knew I was also very close to my climax. When she whispered and long, drawled out \"Gods...\" I felt my pleasure going over the edge.\n\nMy orgasm took me by storm, shaking me like a leaf in the wind. I didn't want to stop but soon had too, my cock screaming in lingering pleasure and pain. I had been fucking her as hard as I could. When Eleanor heard me take a deep breath, she shushed me, \"Shhh... you wouldn't want our spouses to hear you...\" She was breathing hard herself, slowly rising from her prone position to her hands and knees. I looked at her, stunned by her comment, and began laughing. \n\nA few moments later I pulled myself slowly out of her ass, stunned that she had taken me fully inside her. When she sat on her hip, looking at me with a remarkable grin, I leaned forward and kissed her. \"So, that is what would have happened if I come to peep on you in the shower?\" I asked.\n\n\"Why not?\"\n\n\"Er, because we were married to other people?\"\n\n\"Aren't we married to other people now?\" she asked, still grinning like a cat. When I simply shook my head, smiling, she added, \"Now that I know that you enjoy roleplaying that much, I have another idea in mind.\"\n\nAs I watched her get up and wash herself again under the hot water, completely at ease with my shameless gawking of her naked body, I realized again that shy and reserved Eleanor was anything but. Learning about her fetish for anal sex had been a first shock, and this morning's fun was nothing more than extra confirmation. Under that modest, introverted facade, Eleanor was a sexually confident woman that knew what she wanted completely, and was in full control of her sexuality. She was now, obviously, also quite in control of my own sexuality. \n\nWe spent the rest of the day in the spirit of our roleplay, stealing hidden caresses and kisses when the others were nearby, acting as if they'd be shocked by them. This morning, more than anything else, confirmed that the choice Nella and I had made was the right one. I loved Eleanor and she loved me back, just as I knew that Tim and Nella shared something precious as well. How long our foursome would last, I had no idea, but I dearly hoped that it would never end. \n\n***\n\nP.S. I've had a few other ideas about the characters form the Midsummer and Midwinter series. I've you've read this far and want more, let me know in the comments or in email feedbacks!"
    ],
    "authorname": "MrIllusion",
    "tags": [
        "anal",
        "blonde",
        "roleplay",
        "shower",
        "secrecy",
        "hidden",
        "morning"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/midsummer-legacy-roleplay"
}