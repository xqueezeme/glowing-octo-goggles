{
    "title": "Lilith Shorts - Cat Scratch",
    "pages": [
        "Zoey opened the door to this little shop she had passed on her way from work. For some reason, she wanted to stop in and look around even though the fact that it was called an \"Erotic Emporium,\" didn't seem to sway her.\n\nZoey was a petite blonde who many had referred to as cute but never really hot. Her boyfriend Neil never had anything bad to say about her looks, but despite his constant compliments, confidence was always an issue for her. Her body was nothing to brag about and she had to wear glasses to see which didn't help her a lot growing up.\n\nShe was thinking of finding something that could spice things up in the bedroom. Again even though Neil had no complaints she still wanted to keep things interesting but what she found in this little store was nothing like what she was expecting. Instead of sex toys and videos, she was seeing statues and strange jewelry.\n\nNobody seemed to be around so she just continued to look around. There was a perfume called \"Essence of Succubus\" and also a strange incense that claimed to have Fairy Dust that was supposed to get people aroused which she thought was odd.\n\nShe was about to leave when she came across the statue of what looked like a cat but in human form. It was very beautiful and had a look that made her think of ancient Egypt. The cat was solid black and had green gems for the eye's as she examined it more closely.\n\n\"Wow, this thing is beautiful,\" she said reaching out to pick it up and examine it more closely when she heard the door open. As she looked over real quick, being a little surprised by the chime in the silence she felt a sharp pain on her hand. \"Ouch!\" She said as she looked down and saw a small scratch mark on her palm that almost looked like a cat did it.\n\n\"Hello, Nessira,\" the blonde woman who had just walked in said as she walked towards the counter greeting a red-haired woman who smiled and kissed her.\n\nZoey felt a little lightheaded and her hand hurt a lot so she decided it was time to head home. She quickly headed for the door and got into her car without anyone noticing her before she headed off home.\n\n----------------\n\nLater that night, Zoey was getting dinner ready as Neil was coming over to watch a movie. She had cleaned up her hand when she got home and put a small bandage on it but had mostly forgotten about it as it didn't hurt anymore.\n\nShe had pasta boiling as she was making spaghetti which was Neil's favorite. They had been dating for over a year now and she was pretty sure he was the one she was going to settle down with, so perfecting one of his favorite dinners seemed like a good idea. He had been the cook in the relationship and he was very good at it, but that didn't stop her from wanting to get better.\n\nShe looked down at her hand noticing that the steam from the pot had made it start to fall off. She decided to head into the bathroom and remove it before losing it in their dinner. She didn't want to ruin his appetite because he found a bandaid in his pasta.\n\nWhen she removed the bandage she noticed that the skin was smooth. There was no sign of the scratch or any broken skin which she thought was very strange as she looked closer at her hand.\n\n\"The Hell?\" She said to herself before she looked up at the mirror. For a second her eyes looked like a shiny green color and her pupils seemed like they weren't right either. \"What the fuck!\" She yelled as she rubbed her eyes and looked again seeing her normal brown eye's but now she was having a new problem.\n\nShe was having a hard time seeing with her glasses on. She had worn them her entire life but for some reason, there were hurting her eyes today so she took them off and placed them down on the counter.\n\n\"What is going on?\" She said when she suddenly noticed her vision was perfect without her glasses. She looked at her reflection and she could see every little detail that she never could before. \"This is, crazy, how the hell is this possible?\" She said getting another close look at herself.\n\n\"Knock knock!\" She heard at her front door.\n\n\"Oh uh, be right there Neil,\" she said before heading to let her boyfriend in. As she approached the door she suddenly smelled something floral, and it was very strong. \"What is that?\" She said looking around to see if she had lit a candle or something.\n\n\"Hey beautiful,\" Neil said as she opened the door and he handed her a bouquet.\n\n\"Awe, you didn't have to do that,\" she said realizing that was what she was smelling a moment ago. \"How did I smell these through the door?\" She mumbled under her breath.\n\n\"Huh, you say something?\" Neil asked as he took his coat off.\n\n\"Oh, nothing,\" she said getting a vase to put them in.\n\n\"Hey Zoey, where are your glasses?\"\n\n\"Huh? Oh, trying contacts,\" she said lying to him.\n\n\"Oh, okay?\" He said confused by the way she was acting until he noticed something else. \"Wow, you look amazing today,\" he said noticing a few curves in her body that he never had before.\n\n\"Awe, thanks Babe,\" she said with a smile as she turned and noticed in the reflection of the chrome refrigerator that she did seem more shapely than she remembered. \"What the Hell is happening to me?\" She mumbled to herself again.\n\n\"So, what's for supper?\"\n\n\"Oh, I made your favorite, Spaghetti and meatballs.\"\n\n\"Wow, it smells great, I love you,\" he said as he suddenly paused and turned white as a sheet. \"Uh, I mean......\"\n\n\"Did you just say........ you love me?\"\n\n\"I, I guess I did, I mean, I....\" he stopped as she suddenly threw her arms around him and kissed him passionately for a moment. \"Oh, okay, so I guess?\"\n\n\"Of course I do, I've just been waiting for.....\"\n\n\"The right time?\" He said as he held her in his arms. She pulled him closer kissing him again as she slid her hands behind his neck. \"Ouch!\" He said pulling away for a moment. \"Gotta trim those nails, Babe,\" he said feeling a little blood on the back of his neck.\n\n\"I'm so sorry,\" she said feeling embarrassed and also wondering how her fingernails got so sharp. \"Let me uh, here,\" she said handing him a napkin. \"I'll finish making dinner, and we can watch that movie,\" she said as she went back over to the stove.\n\nNext hour or so everything seemed normal. They ate the meal she prepared and cuddled up on the couch starting the film they wanted to watch. She was so happy that he had finally said how much he loved her that she had almost forgotten about the strange thing happening to her since she got home.\n\nZoey was resting her head against Neil's chest as she started to feel strange again. She wasn't sure what it was but she found herself squeezing her legs together as she felt this heat between them. She was becoming very aroused all of a sudden and wasn't even sure why, she assumed that perhaps she was becoming bored with the film.\n\n\"Hey, you feeling okay?\" Neil asked breaking the silence.\n\n\"Huh, yeah, why?\"\n\n\"Well, you feel warm, and your breathing sounds off.\"\n\n\"What do you mean?\"\n\n\"Well, if I didn't know any better, I'd say you were purring. Are you congested or something?\"\n\nZoey did feel off but wasn't sure why. She was sweating through her shirt and she did notice that her breathing did seem strange. She sat up pulling away from Neil for a moment as she looked herself over, wondering what was wrong with her.\n\n\"Zoey, what's wrong?\" Neil asked concerned for his girlfriend.\n\n\"I...... I don't........\" she said as she could hear her heartbeat in her chest. Her vision seemed weird as if she could see things differently than before as she could focus on the slightest detail but soon her focus was back on Neil. She pushed him against the arm of the couch and climbed into his lap pressing her lips to his.\n\n\"Woah...... what........ what are you......\" he tried to say when his mouth was free but she was ignoring him as she unbuckled his belt and unzipped his pants.\n\n\"I need you,\" she whispered in his ear as she began rubbing her crotch against his underwear.\n\nNeil was so confused but also extremely turned on by the way she was acting. He watched her pull off her shirt followed quickly by her bra throwing them on the floor behind the couch. Her skin glistened with sweat but also he noticed that her breasts seemed much more plump as if they had grown at least a cup size since he last saw them which didn't make any sense.\n\nBefore he could admire them further she began kissing him again before she slid down to the floor. She pulled off his jeans leaving him there in his underwear which had a huge wet spot on the front from her grinding against him moments ago. Her hand rubbed the front of his crotch feeling his erect member through the wet cloth before sliding them off.\n\nHer eye's widened seeing his erect member in front of her before she began to paw at it. It was very strange as Neil watched her touch his cock making it bob back and forth a little like a cat playing with a toy but it wasn't an unpleasant feeling at all. Her hair was soaking wet as she continued to sweat profusely before she stuck out her tongue and licked his cock from base to tip.\n\n\"Holy shit,\" he said squirming in his seat as Zoey continued to lick and stroke his cock.\n\nShe wrapped her lips around his member and began sucking him off as Neil bucked his hips. Her hands ran up under his shirt gently scratching his skin as she worked on his cock. It felt amazing but after a moment or two, she was sucking so hard that it started to hurt a little.\n\n\"Zoey, shit, could you...... ouch!\" He said as she released his cock and looked up at him.\n\nHer eyes were an emerald green color and didn't look human as she smiled up at him. Neil was a bit freaked out by what was going on but soon she began to crawl up towards him pressing her lips to his again. He could feel what seemed to be fangs in her mouth with his tongue as she kissed him and he was now really worried about her.\n\n\"Zoey, what's happening to you?\" He asked as she pulled away and was standing in front of him. She slid off her pants and her underwear before leaning closer to him again.\n\n\"I need to fuck!\" She said grabbing his shirt and ripping it off of him with ease as she climbed on top of him.\n\nBefore he could protest his cock was already inside her as she seemed to almost growl at him. It sounded like an angry cat but her pussy felt amazing as it squeezed his member gently. He let out a moan as despite what was happening it was still the best sex he had ever had but soon things seemed to become even stranger.\n\nShe glared down at him with those bright green feline eyes as she moved her hips milking him unmercifully. As she smiled he saw what he had felt earlier with his tongue, her teeth were different as she seemed to have fangs on the top and bottom teeth. His hands slid up her legs which were still covered with sweat until he felt what he could only describe as fur on her lower back.\n\nHe felt something soft brush against his thigh before he saw a tiger-striped tail curl around from behind her. The stripe pattern seemed to be spreading as it appeared on the side of her legs, along with her waist and up the sides of her chest as her skin became more orange. It was on her the outer sides of her breast's, and along her arms as well as she became more feline every moment. Her nose began to change a little too thinning out as the tip took on a more pink color, while her ears became more pointed.\n\n\"Oh God, Zoey.... what.....\" he said as this unsettling and yet sexy tiger-striped cat woman milked his cock even harder.\n\nHe was frightened and also worried about his girlfriend but at the same time, she had become so sexy and beautiful. Her growls grew louder as she ran her claws down his chest cutting him just enough so there was a little blood. That furry tail had curled under and had begun stroking his balls a little as hit grit his teeth at the sensation.\n\n\"Oh.......FUCK!\" he yelled out as his cock began to twitch and he wasn't sure how much longer he was going to last. \"Zoey, shit, I'm gonna......... oh God!\n\nZoey slammed her hands into the couch behind his head as she let out a roar that sounded like a lion. She dug her claws into the leather on either side of Neil's head as she felt his cock swell before spraying his warm seed all over her insides which made her cum as well. They both shared an amazing sensation for many moments before she finally collapsed against her boyfriend.\n\nShe was purring again as Neil didn't have the strength to get up and decided to just hold her in his arms. He wasn't sure what had happened to the woman he loved but he was going to figure it out one way or another, but before he could give it much thought he closed his eyes and passed out from exhaustion.\n\n--------------------\n\nNeil wasn't sure what time it was or how long he was asleep. He was very uncomfortable as he soon realized he was lying on the wood floor in front of the couch. He went to get up when he noticed something.\n\nZoey was asleep with her head against his chest. He was relieved to see her but he also began to notice that she looked human again. The stripe pattern was gone, the tail was no longer there and her face seemed normal again as she slept against him.\n\n\"Oh thank God, Zoey, Babe, you awake?\" He asked as she moaned and moved a little.\n\n\"I am now you jerk,\" she said as she opened her eyes and looked up at him. She suddenly sat up quickly and began examining herself. \"What the, what happened to me?\" She said in a panic.\n\n\"Hey hey, calm down Babe, you're okay,\" he said sitting up with her and taking her hand to calm her down. \"See, back to normal.\"\n\n\"No, I'm not, I turned into a...... I don't know what it was,\" she said before she noticed the scratches and dried blood on his chest. \"Oh my God, are you okay?\"\n\n\"I'm fine, really, just a scratch,\" he said with a slight laugh.\n\n\"This isn't funny, I turned into some sort of, cat creature, and fucked you like a wild animal, I could have killed you,\" she said standing up and wrapping herself in a blanket she pulled off the recliner.\n\n\"Zoey, I'm okay, everything is okay, look, you're back to normal, everything is fine,\" he said hugging her to calm her down. \"I love you, remember, even as a cat.\"\n\n\"Shut up,\" she said laughing a little as she felt comfort in his arms. \"I don't know what happened, I was scratched by a statue at this little Erotic shop, and I......\"\n\n\"Wait, Lilith's?\" He asked.\n\n\"Yeah, why?\"\n\n\"I've heard weird shit about that place, but hey, if you are worried then we can take a ride over there and find out what's going on, okay?\"\n\n\"Okay, I feel better, maybe wait and see if it happens again, I guess.\"\n\n-------------\n\nIt had been a week and Zoey had not had any more strange feelings or transformations. She was starting to feel like it was a one-time event and had even started to relax a little. She had been talking to Neil all week who was fine and wasn't at all freaked out or distant because of what happened which made Zoey feel good and more in love than she was before.\n\nHer body still seemed more fit than before, and more shapely. Her breast's still seemed bigger than before and she often found herself admiring her body in the mirror after a shower. She also still didn't need her glasses either which was kind of nice but she had purchased a pair with no magnification so her friends and family wouldn't ask questions.\n\nShe was heading over to Neil's place that Saturday for date night. They hadn't decided what they were going to do yet so she was meeting him there and they were going to figure it out after.\n\n\"Hey Babe,\" Neil said opening the door and letting her in before pulling her close and kissing her passionately.\n\n\"Oh, well I missed you too,\" she said with a smile before he gave her another quick peck and went to grab his coat off the back of his chair.\n\n\"I was thinking we could hit that new Tai food place for dinner and then go to a movie, I know you're wanting to see that new......... Zoey?\" He asked as her eyes suddenly looked emerald green again. \"Your eyes?\"\n\n\"Shit, I think I know what triggers it now,\" she said as she began to sweat before taking off her coat and walking towards him.\n\n\"Oh, uh, well,\" he said as he suddenly was backed against the counter.\n\n\"I'm sorry about this,\" she said as she could hardly control herself as she reached for his pants and began rubbing the front of them.\n\n\"Shit,\" he said as he quickly became erect at her touch as he couldn't deny how excited he was to do this again.\n\nZoey was shocked as he suddenly scooped her up in his arms. \"What are you doing?\" She asked throwing her arms around his neck to hold on.\n\n\"I was thinking the bedroom this time,\" he said carrying down the hall.\n\n\"Wait this isn't a problem for you?\"\n\n\"Zoey, it was the best sex I ever had,\" he said laying her gently down on the bed and pulling his shirt off. \"Now, show me what you got,\" he said as he kissed her, feeling her wrap her legs around him as she began to purr again."
    ],
    "authorname": "maestro84",
    "tags": [
        "cat",
        "female transformation",
        "female corruption",
        "girlfriend",
        "curse",
        "furry",
        "feline transformation"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/lilith-shorts-cat-scratch"
}