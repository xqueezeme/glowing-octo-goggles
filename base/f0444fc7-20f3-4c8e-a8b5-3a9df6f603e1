{
    "title": "I Read A Lot Ch. 04",
    "pages": [
        "**Tom**\n\nI didn't want to admit that Sandra had done me any favors by interrupting Gabe and I on the couch, but really she had. If she hadn't charged in, I don't think we would have stopped until we were both naked and sated. And while I would have cheered for that kind of release, I don't think I was ready for the fallout that comes with impulsive actions. \n\nSomeone in college had once joked that I would have to plan ahead before I spontaneously combusted. \n\nIf that person had seen me on the couch with Gabe, half-crazed with pent-up frustration, ready to chew his clothes off to get to him, they would have laughed themselves silly. Gabe just did that to me, every time I saw him, wherever we were. In a way, I felt drawn to him like a planet orbiting the sun. And in a completely different way, I also felt like I was stalking my prey. The contradictions that didn't really seem at adds in my head made me feel a little dizzy.\n\nUntil now, I had never even considered a serious relationship. My past experiences had definitely been casual in nature. I know that a few of the guys I'd been with wanted more from me, and one of them had been pretty determined to start something lasting. But it hadn't really worked out. One former -- whatever-you-would-call-him, Chad figured that if I wanted to be with him, and I could just change parts of my personality to suit him, we could build a life together. I realized that if I had to morph into someone different, then it wasn't really me that Chad wanted. It wasn't that I thought there was anything wrong with long-term partners, or that I didn't want one, I just hadn't met anyone that triggered those kinds of feelings in me. Now that I had, I knew that casual was not going to be enough.\n\nFrom our conversations, I knew Gabe experiences were at least a little different from mine. He called them 'flings' which sounds so carefree, but baffled me. He had been friends with his previous lovers first and then they seemed to just evolve into more than friends. After they split, he seemed to go back to being friends with them. (I could never seem to do that.) When we talked, he never seemed to regret his relationships and he never seemed to have wanted anything else than what he'd had. What I didn't know was what he wanted now, with me.\n\nThe more time I spent with Gabe, the more time I wanted to spend with him. And this was the most unusual and totally unique part of our friendship, as far as I was concerned. Usually I needed to escape from people after a while and find a quiet corner and a good book. Now I didn't feel right unless I knew Gabe was nearby. I liked to hear him mumble to himself while he worked and moved from room to room Hell, I hardly minded when he interrupted me and just started talking about whatever was rolling through his mind. \n\nIf he didn't want to sleep with me, fine. (It wasn't fine at all, but I would accept it for argument's sake.) If he did, but he didn't want to stay with me and at least try to make a long-term relationship work, well I could live with that too. Either way, I would have to stop seeing him, since I was sure that I couldn't be 'just friends' with him anymore. It would be awful and I could hardly imagine cutting off contact with him, even after knowing him only a little over three weeks. But if I slept with him first, and then found out that an LTR wasn't going to happen, it would just hurt a lot worse. That fear was what had kept me from trying to go further with him already.\n\nIn the end, Sandra probably did me a favor, though of course I'll never tell her that! Hopefully I could get this resolved with Gabe on Thursday. God did I despise anything that even resembled 'a talk'. Any time someone said the words: 'we have to talk,' I would rather eat glass. But I had to do something, I had to know what would happen. Otherwise, I would have to be locked into the loony bin. The next few days might just drive me completely around the bend. I thought about him all the time, fantasized about being with him, imagined what his body looked like, felt like and tasted like. No wonder I avoided this sort of attachment; I was seriously losing my mind.\n\nWork had been my only respite from all of this maudlin brain work. The company I worked for, and my work-group especially had landed a huge project. Since a lot of the initial planning had been my idea, my boss had decided to see if I could head up the group and manage the whole thing. It was a big step, one that took me away from purely technical tasks and would force me to spend more time and energy managing people and the project. While people-skills aren't always my strength, my boss thought it was time to see what I could do. The last week or so at work had been intense as I planned for our launch meeting and the entire project. When I immersed myself in this new challenge, I could escape some of the uncertainties and fluttering butterflies of my feelings for Gabe.\n\nIf I had to be in touch with all my feelings, all of the time, I would go wacko-bananas.\n\n**Gabe**\n\nOn Thursday I parked Tom's car at Tonio's and walked over to the Frisbee Park around 6pm. Since I had tons of stuff to schlep around and only a bike to do it with, Tom had generously offered to lend me his car. It was thoughtful of him to offer his car, given that I had tons of stuff to get over to Isabelle's in order to hang my pieces for the art show. When I tried to thank him, though, he just waved it aside, as if it was totally normal that he would inconvenience himself for me.\n\nSince the night that Sandra interrupted us, Tom and I hadn't spent much time together, and I was trying hard not to read too much into it. All of his words sounded right: he was crazy busy at work with a big meeting coming up, and I should focus on finishing up for the show at Isabelle's. It wasn't that he was wrong, or even inconsiderate. Rather it was my fear eating away at me. What if I had finally found a man that could be more than *just for fun* and he was already tired of me? In a twisted way, it would serve me right. I had certainly walked away from a few nice guys in the past. It probably was my cosmic turn to have someone walk away from me.\n\nOnce I got to the Park, I looked around and found Amy hanging out with a few of the other wives/husbands/partners/whatevers of the players. It had taken me a while to remember the names of the core players and even longer figure out all their attachments. According to Amy, I was still doing better than Tom, who had stop trying to remember a long time ago. Amy was wearing a pretty, flowy kind of dress that looked very nice in the warmer weather we'd been having. She waved at me when she saw me walking and motioned that I should join her.\n\n\"Gabe,\" Amy crooned as she held up her arms to give me a hug. \"How's the favorite man in my life?\" The delivery of this greeting was a little dramatic and I knew she was doing to help include me in a conversation already under way.\n\n\"Uh oh,\" I replied and I wrinkled my brow. \"What did Henry do now? If I'm your favorite, then he must be in some serious trouble.\" The rest of the group laughed and welcomed me. I continued, \"Okay, spill. What's he done?\" I'll admit I was expecting some minor but annoying infraction like leaving the seat up or forgetting their anniversary.\n\nMaria from the other side of the group spoke up, \"He's going to England for two weeks.\"\n\n\"Without her,\" someone else added.\n\nWith a swivel, I turned a looked straight at Amy, trying to see just what her true feelings might be. This might be a public chat, but I was sure that her mood was a little more serious than she was letting on.\n\nAmy waved a hand and dismissed it all. \"It's a great opportunity for a couple for conferences. He's presenting something or other and it will look perfect on his resume. Besides,\" Amy said, laying a soothing hand on my arm. \"I told him to bring me back a fabulous present and I would be fine.\"\n\nI stared at Amy hard and I decided to save my 'liar liar, pants on fire' for a more private time when I could find out the whole story.\n\nJust then, Tom jogged over to my side, a little out of breath. \"Hey, why don't we go over and grab a table, since we have to leave early?\" He greeted everyone quickly and explained that we would go ahead to the restaurant and save a table. Tom and I had to get over to the caf\u00e9 in order to paint the wall and hang my work tonight. If we spent all evening with the Frisbee folks, we would never get it all done.\n\nAmy decided to come with us since she was feeling a little tired and wanted to sit down.\n\nThe three of us began walking to Tonio's, Tom and I on either side of Amy. Once we were well out of earshot everyone else, Tom took her hand and said, \"Amy-honey, it's not four months in Africa and he's not Scott.\"\n\n\"Yeah?\" she asked in a plaintive voice. Amy turned her head to look at Tom and I could see him smile kindly at her, then touch her nose lightly.\n\n\"Besides,\" Tom added. \"If Henry tried anything, Gabe and I would break his pointy little head.\"\n\nAt this Amy giggled a little and turned her head to look up at me. \"Would you really do that for me?\"\n\n\"Absolutely,\" I agreed. \"Then he would have to admit that two guy men opened a can of whoop-ass on him.\" And finally, Amy really smiled.\n\nBy now, Amy was starting to feel a little better and we had arrived at the back entrance of Tonio's. It was a good thing that we had come early, because the place was starting to get really busy. The bar was jammed with singles and the waitresses were weaving through the crowded floor with trays of pizzas held high and pitchers of beer.\n\nThe three of us found a couple of tables in the back that we could push together and be able to fit most of the regular crowd. Tom and Amy positioned themselves to see the front door in order to wave folks down when they arrived and I faced the other way, towards the back door. Kind of like a stake out, we had the place covered. \n\nEven more than usual, I was looking forward to a very cold beer and some ridiculously cheesy pizza, since I had spent much of the day hauling canvas and hardware. I knew that somewhere a waitress was just dying to take my order. Scanning the restaurant, I was just about to wave my hand in the air to get some attention when Amy grabbed me and hissed.\n\n\"Gabe, NO.\" Amy's hand clutched my arm hard enough to make me a little alarmed. She turned to Tom and said in a hoarse whisper, \"Do you think it's him?\"\n\nTom seemed as clueless as I felt. \"Who? What are you talking about?\"\n\n\"Over there at the end of the bar, it's Scott.\" Amy turned her head in a way that made it obvious that she wasn't looking in the direction she'd mentioned.\n\n\"Shit!\" Tom swore heavily. \"And I'm guessing the blonde isn't his sister or cousin, right?\"\n\nAmy's pained voice followed, \"You so know it isn't.\"\n\n\"Yeah, but a guy can hope, right?\" \n\n\"Tom, tell me when I can look, okay?\" I'd figured out that they had spotted the husband of Amy's best friend at the bar with someone definitely not his wife. Amy had been fretting over Jen's crumbling relationship while her friend was doing a semester of research in Africa. Now mere feet away, was the reason and proof of that disintegration. \n\n\"Go ahead Gabe, it can't get any worse,\" Tom met my eyes and looked suddenly sad. He put an arm around Amy and lightly stroked her back.\n\nSince Scott didn't know me from a manhole cover, I thought this was a great opportunity to flag down a waitress and get an eyeful at the same time.\n\nCraning my neck and half turning in my chair, I quickly spotted the man-who-must-be-Scott and his blonde squeeze. At that moment, squeeze was pretty literal as Scott had his hand on her ass. The couple was having a good time, drinking cocktails and laughing like there wasn't a woman halfway across the world wondering why her husband seemed distant lately. Scott looked like a smooth charmer, an operator. Finally I found a waitress to signal and I turned back around in my seat. Amy and Tom were deep in conversation.\n\n\"How could he bring her here, especially in Thursdays?\" Amy said. \"He knows we all come here.\"\n\nTom shook his head. \"Maybe he wants to get caught.\"\n\nThis made sense to me and I think I understood where Tom was going with this reasoning. He confirmed my thoughts with his next words.\n\n\"Amy, I we see here with another woman, what would he expect us to do about it?\" Tom leveled his gaze at Amy.\n\n\"I'll have to tell Jen,\" Amy said flatly.\n\n\"Yup,\" Tom nodded. \"And what easier way to break the news than have you do it for him?\"\n\nAmy sat there for a minute, staring off into nothing while she contemplated this strategy. \"Then he's a bigger bastard than I thought.\"\n\n\"A rat-bastard,\" Tom agreed.\n\n\"But we can't just ignore it, can we? There's no way in hell I can talk to Jen and pretend that this isn't happening.\" Amy looked lost and confused. Her normally take-charge attitude had completely flown.\n\nAt this, Tom looked at me. An idea sprang into my head. Granted it was an awful idea, but at least I'd thought of something. Before I had a chance to talk myself out of it and definitely before Tom could put me in a headlock, I stood up and walked towards the end of the bar.\n\nScott was turned slightly away from me and his woman was more in line with my line of sight. Once I'd gone a bit away from our table, I added a little swish to my walk. Nothing obvious, not 'Queer Eye' or anything, just enough to make it clear that she and I did not go to the same church. As I approached, I made sure not to make eye contact with her, especially since none of this was really her fault. \n\n\"Hey Scott,\" I crooned. \"I thought that was you. Who's your friend?\" I placed my hand on his shoulder and ran it down the length of his arm. Instantly, Scott turned his head and looked straight at me. Obviously he'd already had a couple of drinks because he was a little slow in reacting. \n\n\"Do we know each other?\" Scott asked this in a calm enough way, but his posture had become defensive. Still, he didn't shake off my touch.\n\n\"Very well,\" I said and I put a little edge in my voice. I turned and looked at the woman. \"Scott seems to be having some monogamy issues. Or is this just a little drink after work?\"\n\nThe woman just looked like a fish out of water, mouthing little silent \"o's\". I turned back to Scott. \"Come on, let's go home and we can make up, hmm?\"\n\nAt this point, Scott's face was turning red and he couldn't decide what to do next. Here I was, massaging his upper arm and his date looked at him like he ate small children for lunch. She decided to get the hell out of Dodge and quickly gathered her purse and moved toward the door.\n\nAs she left the scene, she said \"Don't ever call me again.\" \n\nScott just watched her leave, but then turned a fury-filled glare on me. Since this was the end of even the shred of script I had in mind, I had no idea what was going to happen next. I had just wanted the whole thing to end, and now that Scott's date had left, I figured my job here was done. Scott seemed to have other ideas.\n\n\"Just who in the hell are you and what was that all about?\" Scott's voice was cold with anger and menace. I had already removed my hand, and now he moved to stand opposite me, but still very close. I figured he wasn't getting in my personal space to get friendly. About the time I decided I really should have taken some self defense classes, I heard a loud chair-scraping sound and I swiveled to find the source. \n\nTom stood half the restaurant away, but he loomed larger than life in my eyes. Suddenly, Tom looked double his normal size and ready to beat the shit out someone. He focused not on me, but on Scott, who had also noticed the source of the noise. Threat and warning arced between the two men and I just stood there wondering what to do now. \n\nScott blinked first. \"Fuck,\" he swore. Then he pulled his wallet out of his pants, flung some bills on the bar and stalked to the exit. Since he couldn't really have the last word in a silent test of wills, he settled for flipping Tom off as he stomped out.\n\n**Tom**\n\n\"Oh shit,\" Amy gasped. \"What is he doing?\"\n\nI couldn't really guess what Gabe was planning, but after years of knowing Scott, I pretty much knew what the end result would be. Even though I had been around Scott since college, we would never have considered ourselves friends. He tolerated my presence with barely veiled contempt and never hesitated to take a cheap shot or tell an off-color gay-joke when he thought he could get away with it. So far, I had restrained myself from breaking his nose because I liked Jen and loved Amy too much to cause a rift like that in our group. But all deals were off if he laid one smarmy hand on Gabe. \n\nGabe did this little saunter walk as he approached Scott that I found to be completely sexy and infuriating. Only on a stage with a pole had I ever seen someone walk like that. And the thought that he was aiming that at someone as homophobic as Scott just made me a little crazy. Rationally I knew that Gabe was just trying to get a reaction from Scott, and not actually coming on to him, but reason had flown my mind the second I figured out where Gabe was going. By the time Gabe put his hand on Scott's arm, I was past any sort of thought. The only thing that kept me from jumping up was Amy's fingers digging into my arm.\n\nFinally Gabe's drama had played itself out: the blonde had walked away and Scott's plan had completely backfired. I had just started to breathe again when Scott looked like he was about to throw a punch at Gabe. I don't even remember moving, but in an instant I was on my feet and staring at Scott, just daring him to make a move. For years, I had been waiting to tear his ass to shreds and this seemed like a prime opportunity. He only had to sneeze in Gabe's general direction and I would be on him in a second. Scott caught my eye, held my stare and tried to hurl red daggers of hate at me through the air. It was over, any pretense of friendship between us over the years was completely dead. Scott turned and stormed off, tossing some bills on the bar and tossing me a bone in the process.\n\nAfter the door slammed shut, Gabe stood looking a little stunned until a female bartender came over and handed him a couple of bottles of beer and gave him a bright smile. Gabe rewarded her with a laugh and a hand shake and started to make his way back to our table. As he walked casually across the restaurant, I met him halfway.\n\n\"What in the hell is your problem,\" I hissed at Gabe. \"Scott can be a mean bastard and I know he is stronger than he looks.\"\n\n\"Yeah,\" Gabe agreed. \"I think I figured that out a little too late.\"\n\nConcerned by the slight tremble in his voice, I put my hand on his arm. It was almost the same way Gabe had touched Scott, intimate but not overt. He was shivering, kind of quaking like aspen leaves in a breeze. Feeling this I wanted to wrap my arms around him and held him close, protect him from monsters under the bed and assholes in a bar. I also wanted to shake him until his head began to wobble and he promised never to pull another dumbass stunt like that again. Anger, confusion and need chased around inside of me but found nowhere to settle down.\n\nGabe shrugged and he handed me a beer. He clinked the neck of his bottle with mine and we both swallowed the cold, amber deeply. With a sigh he said, \"How about we fight about this later, okay? Folks are starting to come in and I don't want Amy to freak out.\"\n\n\"All right,\" I replied and I tried not to sound too pissed, but probably failed. As Gabe stepped past me, I rested my hand lightly on the small of his back and hoped I had the right to this gesture. At the moment, all I knew is that I wasn't going to let Gabe out of my sight.\n\nBy the time we got back to the table, a couple of Frisbee folks had already come in through the back door and found seats at the long table we had claimed. Our chairs next to Amy were still vacant and we slid into those. I wanted to pull mine closer to Gabe's, but thought that was being ridiculous, so I settled for angling my body a little towards him. ",
        "Amy's eyes were sparkling with interest and amazement. \"Oh my God, Gabe\" she bubbled. \"That was amazing. Scott practically ran out of here. Thank you so much.\" \n\nA waitress came over and placed a glass in front of Amy. \"Mineral water with lime?\" she said. After she took our order for pizza, the waitress left and Amy looked like she wanted to get back to the whole Scott-incident. It was obvious to me that Gabe wanted to put the whole thing behind him so Gabe put a stop to that.\n\n\"Amy?\" Gabe asked in a sweet voice. \"When are you due?\" And with that, he completely switched the focus onto Amy and away from him. It was masterful. While Amy just goggled at him and made these funny fish-without-air faces, Gabe leaned back in his chair a little and put a hand on my knee. I covered his hand with mine and squeezed. \n\n\"How did you know?\" Amy gasped. \"We haven't told anyone yet.\" She placed a hand flat and low and on her belly.\n\n\"Hmmm, let's see,\" Gabe said with a mischievous smile. \"You've been crying, tired, and emotional. You won't play Frisbee and even though you're tiny, you keep wearing baggy clothes. Oh, and you've been trying to mother Tom and I for the last couple of weeks.\"\n\nI laughed at that last one. \"She does that anyway.\"\n\n\"Enough out of you,\" Amy glared. Then she looked at Gabe and said, \"I'm eleven weeks and we went to our first doctor's appointment two days ago. Everything looks really good and the doctor thinks we can probably start telling people if we want to.\"\n\n\"So what? Is that November?\" I asked. Amy was going to be the first of my close friends to be pregnant and the whole idea was really taking me by surprise. \n\n\"Is what November?\" Henry asked as he came up behind me. He walked around the table and took a chair next to Amy, throwing his arm protectively about Amy's shoulders. I knew just what he felt like that moment. \n\n\"Well,\" Gabe said gleefully. \"What do you think is happening in November, Dad?\"\n\nHenry blushed and kissed Amy's cheek. \"So does that mean she told you without me?\"\n\n\"Gabe guessed.\"\n\n\"And I'm thrilled. You two will be excellent parents.\"\n\n\"What do you think, Uncle Tom?\" Henry grinned at me. \n\nIt was now my turn to be speechless. I tried to formulate the right response and it wasn't that I wasn't happy for them, I just had no idea what to say. But 'thrilled'? I guess, since it wouldn't be my child. It just hadn't occurred to me that my peers were really ready old enough to have kids yet. Weren't we all still too young for that kind of responsibility?\n\nThe other three finally cracked up and started laughing. Gabe put an arm around my shoulders and said, \"Don't hurt yourself thinking too hard, babe\"\n\n\"Sorry,\" I mumbled. \"I'm surprised and happy. It's just huge though. It'll take a while to sink in and seem real.\"\n\nAmy nodded and agreed. \"It's been eleven weeks and I can hardly believe it's real. If it weren't for morning sickness and the fact that my waist is disappearing, I might still think it is just a mistake.\"\n\nBefore I knew what was happening, a flurry of baby-talk surrounded the group. Gender, due dates, doctors' names, birthing methods, epidurals and all sorts of things I didn't want to understand any better than I already did. I assured Henry that I would support him in any way I possibly could, as long as it didn't include any bodily fluids. He gave me a knowing smile and clapped me on the back. God, what a fate.\n\nGabe, on the other hand seemed to be loving every moment. He seemed to revel, not so much in the discussion, but in the joy and happiness around him. I drank more beer and shoved the pizza in front of him, reminding him that we needed to leave soon.\n\nAmidst the baby-frenzy, I finally dragged Gabe away as he shouted that he wanted to see the something-grams. \"When did you turn into . . .\" I paused since I had nothing to say that wouldn't offend most of the human population. Cynical I might be, but I wasn't a total ass. I usually left that to Scott.\n\n\"A nurturing and kind friend?\" Gabe supplied.\n\n\"Um yeah, okay.\"\n\n\"My sister had a baby a couple of years ago. I listened to her go through the whole thing and it was cooler than I thought it would be. Before she moved, I got to spend a lot of time with my nephew, too. He's a fun little guy, you know?\" Gabe said all this as we walked to my car.\n\n\"He was fun as long as he wasn't puking and pooping?\" I asked.\n\nWell yeah,\" Gabe admitted a little sheepishly.\n\nInside the car, I was left to my own thoughts, which I had been ignoring for a while. All day long, I had been looking forward to seeing Gabe and spending time alone with him. Somehow, I had created this little fantasy where we would work serenely side-by-side and share our evening in silence and peace. Now I had an inner orchestra of conflicting emotions tuning up in my mind. I didn't really feel ready to confront my protective and possessive feelings towards Gabe or the idea that my best friends were about to become real grown-ups.\n\nLife suddenly seemed a lot more serious than it did just one hour before.\n\nI had no idea if Gabe understood how I was feeling or if he was in his own little world. Whatever it was, he respected my need to be quiet and didn't try to get me to talk about might be bothering me. \n\nWe got to the caf\u00e9, figured out what had to be done first and started work. While the caf\u00e9 was still open and pretty busy, we were able to get the one wall painted (that was my job) and hang some sort of mobiles from the ceiling (definitely Gabe, there). Until the place cleared out though, we wouldn't really be able to wield hammers and pull tables away from the rest of the walls. All this time, Gabe thankfully left me mostly alone to work and think.\n\nThe only problem with this situation was that I wasn't as happy being alone as I thought I would be. I mean, Gabe was only half a room away, and I had created this huge space between us. I became crankier and crankier as time went on. I had the feeling that I needed to talk to him, but I couldn't understand how that would help. Why couldn't I just figure stuff out on my own. Like: why was I so completely pissed off at him about the whole incident with Scott? And why did it make me sad that Amy and Henry were going to have a baby when I was supposed to be happy? And why did I keep looking over at Gabe every two minutes to make sure that some idiot didn't start flirting with him? Whatever was going on, I didn't like feeling this unsettled.\n\n**Gabe**\n\nI wanted to ask him what was wrong, why he was acting like a sulking kid with his bottom lip pouting out. I also wanted to smack him in the back of the head and tell him to get the hell over it, whatever his problem was. But, either approach would have Tom sinking further into his own mind, making up conversations that would be worse than anything we could say to one another. God, he could be morose sometimes.\n\nIn the end, I just started talking, without thinking about it much first, which is sort of a 'me' thing to do. But first I quietly walked up behind him while he was washing brushes in the utility room, with the water running. The room was tiny and bright with a bare bulb hanging from the ceiling.\n\nHe knew I was there though; I saw his shoulders straighten as I moved closer. When I was right behind him I lowered my mouth to his ear and said, \"I think we have some unfinished business from the other night.\"\n\nOnly when he was done with the brush did he turn around. He was still tense, but I couldn't tell if it was from anger, fear or nerves. His shoulders were square and he jutted his chin out a little defiantly, like he was ready to face the principal in elementary school. But he met my eyes and said, \"How do people do this, Gabe? We're not even together and I'm a wreck?\"\n\nWow, Tom just does not know how to beat around the bush at all. Either it's a total silent treatment or he just lays his heart open. His plaintive honesty took my breath away.\n\n\"I don't know, babe. I haven't figured it all out yet.\" Then I took one off his broad hands and laced his fingers with mine, like he did after that first Frisbee game. The tight band of worry around my chest loosened a little as he tightened his grasp and rubbed the soft pad of flesh under my thumb. \"Talk to me.\" \n\nWith that soft request and demand, Tom closed his eyes and breathed deeply a few times. \"I'm scared shitless most of the time. I'm afraid that I'll disappoint you, that you don't care about me as much as I care about you, that you'll leave.\" Then he opened his eyes and pierced my heart with his stare. \"Gabe, I do not want to mess this up.\"\n\nHis words rang true and honest. I could feel how hard it was for him to admit so many weaknesses to me. Could I be even half as honest with him as he was with me? I never had before. My usual modus operandi was to be with someone as long as it was easy, then take off before being in a relationship became work. Maybe it was time I tried something different. \n\n\"So far,\" I said. \"You've done almost everything right. And I haven't made it especially easy on you either.\"\n\nI leaned in, kissed his lips softly and continued, \"When I'm at the bookstore, I look at books and wonder 'has Tom read this one?'. On Thursdays for Frisbee, I make sure that that I look at least a little bit good, because I like to see you smile when you first see me. And before you leave my place, I always want to know when the next time will be that I see you. But I've never told you any of that. Does it make any sense?\"\n\nAfter a moment, Tom nodded thoughtfully and quirked a half-smile. \"I thought I might have to tear Scott's head off tonight. When you went over to bust his chops, and you did your flirting routine, I got so jealous; Amy had to talk me off the ledge. But when he looked like he might take a swing at you, I just could take it anymore.\"\n\n\"Yeah, I noticed.\" I beamed at him. \"It was quite the display of testosterone.\"\n\nTom laughed, \"That figures. I turn into a Neanderthal and you get a kick out of it.\"\n\n\"Are you kidding? It was totally hot. I've never had a guy fight for me before.\" And this was the truth. I don't think I had ever meant so much to anyone before, because I hadn't ever let anyone care about me that much.\n\nI put my hand on Tom's chest. His heart was racing under my touch. He kept staring into my eyes, but it seemed that his vision got a little glazed at this point. Between my words and the contact of our bodies, I wasn't really surprised when his free hand reached around my waist and pulled me to him. He covered my mouth with his and there was nothing civilized in his kiss. His fear, desire, need and possessiveness drove him to claim my mouth and to hell with me if I didn't want him. Lucky for both of us I did. I didn't try to take control because he needed to feel that right now, but I did match him with my own hunger. Our tongues darted and danced as we sucked and nipped at one another. For long minutes, he explored my mouth thoroughly and held my body immobile against him, pressing his need into me as he plundered.\n\nFinally I had to push him away in order to breathe. \"Okay,\" I said, trying to get my breath. \"I get it. You kind of like me a little bit.\"\n\nTom just chuckled and loosened his grip a tiny bit so I could breathe. \"Yeah, just a little bit. Of course, this might not be the most romantic place to tell you,\" Tom said and he waved his hand to indicate the mop room. \n\nWe headed out to the main room and decided to relax a little with some coffee until the place cleared out a little. I was hugely relieved when Tom took a seat close to me like usual instead of across the table. It was a habit he had started from the very first and I always enjoyed that sense of proximity, the feeling that our closeness had meaning and importance.\n\n\"You know,\" Tom said quietly after he set his coffee cup down. \"I don't really dislike babies.\"\n\nWhere had this come from? Back at the restaurant he had been making jokes, but I didn't take any of that seriously and I told him that. \"You were just kidding; I think Henry and Amy know that.\"\n\n\"Good,\" he sighed. \"But I'm still having a hard time with the whole idea. I've known them for a long time and you'd think I wouldn't be surprised by this, but I am. I guess it never occurred to me that they would start a family of their own?\"\n\nI tilted my head and looked at his three-quarter profile: straight long nose, the hard line of his determined jaw, a day's growth of whiskers casting shadows in the hollows of his cheeks. \"What's bothering you?\" Hopefully he caught my interested tone, my curiosity. \n\nHis eye flicked to me, but he kept his head turned that little bit away. \"I'm not quite sure, I don't have it all figured out yet.\"\n\n\"You could just talk to me anyway, you know. I'd like to listen\"\n\nTom tilted his head down and stared at our hands that were twined in his lap. I doubted that either of us noticed when that had happened, but it felt good and solid. \"Would it make any sense if I told you that I felt a little jealous and angry when Amy said they were going to have a baby? At first I just tried to tell myself that it was leftover emotion from the thing with Scott, but I think it's more than that.\"\n\nI nodded, but I doubted he could see my action so I spoke the next word softly, \"How long have you three been friends?\"\n\n\"Since second year of college. Henry and I knew each other from the dorms in our first year. We never lived with each other, exactly, but usually really close by. Then for the last six years Amy has been there, too.\"\n\n\"What was that like, when you met Amy and introduced her to Henry?\" I felt a little like a hawk or eagle, circling overhead. I had spied my prey, getting closer and closer to what was really bothering Tom. He'd been cactus-prickly at least since the restaurant, but before that too, I thought. Though we hadn't known each other that long, I did know enough to realize that I could never pry anything out of him. He would only talk when he was good and ready. My job was to listen . . . carefully.\n\nTom turned his head and his smile flashed as our eyes met. \"When those two got together, it was like music. They fit so well. I think they had a few ups and downs, but really, there was never any question that they were meant to build a life together. They are more than the sum of their parts, if that makes any sense.\"\n\nI nodded, and then I waited. The silence stretched a bit, but before it became taut or brittle, Tom continued.\n\n\"I'm remembering now that I was a little worried that I had possibly done myself out of two friends by introducing them. But that never happened. I mean, we've stayed friends, the three of us, maybe even better friends than we would have otherwise\"\n\n\"And now?\" I prompted softy.\n\n\"A baby? I know it is completely selfish of me to focus on how their having a baby is going to change my life, but at least part of me can't seem to help it. Amy and Henry have been the only things keeping me going sometimes. If it weren't for Amy, I would never have left my work cubicle and tried propose a project, let alone lead a team. And Henry's had my back for so long.\" Tom's eyes pleaded with me to understand, not to judge him too harshly for his admission. \"I am completely happy for them, 'cause no baby could ask for better parents.\"\n\nMy hand rubbed his and I tried to show him my acceptance of his fears. \"I think your being reasonable, Tom. They're a big part of your life, I get that.\"\n\n\"There's something else, too.\"\n\n\"What?\"\n\nSucking in a huge, bracing lungful of air, Tom said in one breath, \"The other day you said you wanted to take things one step at a time, but I'm not sure I can do that.\" The he just stared at me, and waited for my reaction.\n\n\"Oh,\" I said softly and I probably blinked a lot. Tom's hand tightened on mine, but I pulled and pulled until I had it back and he was no longer touching me in any way. In the middle of a quiet, public place, I promised myself not to make a scene. Besides, I told myself, we hadn't been going out that long and we hadn't (thank God) slept together yet. So Tom breaking up with me shouldn't be a big deal. I would think it to death and make myself a million promises not to do whatever it was that caused him to leave, even if I couldn't actually think of a single thing I would have done differently. \"Um, let me just get the rest of my stuff out of your car and you can get out of here.\"\n\nWith that, I made to stand up. I had to lock my knees in order not to fall over though, since I felt suddenly a little shaky. But if he said \"it's me, it's nothing about you,\" I might just freaking scream.\n\n\"What, where are you . . . wait just sit down a second.\" Tom sounded urgent.\n\nWhile I wanted nothing more than to leave the room, I sat stiffly and placed my hands over my knees. In my head, I had a picture of my great-grandmother sitting like that: sort of prim. Tom tried to pry my hands off my knees, but I wouldn't budge, so he settled for circling my wrists with his fingers.\n\nTom hung his head and mumbled, \"Christ, this is why I'm an engineer, Gabe. I never get this right.\"\n\n\"It's okay, just say it,\" I ground out. \"I'm sure I've heard it before.\"\n\n\"Gabe, I don't want to take this one step at a time. I want every step right now, the whole, damned marathon.\"\n\n\"What?\" Okay, now I was totally confused. \n\nFingers grazed my cheek and feathered down my jaw. \"I don't think I could stand to have you in my life and then have you leave. And I'm terrified that I'll scare you away because I want more than you do. I don't think I could really handle a casual relationship when what I really want is so much more than that.\" \n\n\"You do? With me?\"\n\n\"Yeah, of course.\" Tom chuckled a little and I wondered why. \"You say that like I must be crazy or something.\"\n\n\"It's just that no one I've ever felt strongly about has wanted a real relationship before. At some point, I stopped thinking it would ever happen. Instead, I just got used not getting involved. It might take me a little time to get used to the idea.\" I think I was smiling by now, and I know Tom was grinning like an idiot. \n\n\"So does that mean I can go back to holding your hand and you're not going to try escaping on me again?\"\n\nI nodded.\n\n\"Good,\" Tom said and he exhaled a breath he had been holding for a long time. \"Now I think I can try to get my heart started again.\"\n\nFor the longest time we just sat in our chairs, knees touching, holding hands as we tried to wrap our minds around what we had just figured out. \n\n\"Boyfriend?\" I said\n\n\"At least that,\" Tom replied. \"Do you have anything better?\"\n\nI snorted a laugh, \"Nothing that can be said out loud.\" And I nudged myself closer until one of my legs was in between his. \n\n\"So how long before we can get out of here, do you think?\" Tom asked and he practically leered at me.\n\nThe caf\u00e9 was pretty empty by then, and it was a testament to how oblivious we had been that we hadn't noticed. \"Well, if get started now and stay focused, we might finish in about an hour and a half. Is that fast enough?\" I asked.\n\n\"Nope,\" Tom growled. \"But it won't get done just talking about it.\"\n\nAnd with that, we both got to our feet and went over to the tools I had gathered. After hours spent measuring and figuring, I had decided on the placement of eleven small frames and one bigger one. The one was covered with paper, and I wasn't ready to reveal it until tomorrow. Other than that, the rest of the pictures were ready to hang. Along with the plans, I handed Tom a level, a measuring tape, a hammer and some nails.\n\n\"Get to work, handyman,\" I said and I smacked his butt for emphasis.\n\nWatching Tom focus on a task in front of him was an awesome sight. It was like he actually submerged himself in his work, and I suspected this is what had made him so successful in his career. With a pencil behind his ear, he rechecked all my measurements, made adjustments to my plan as he went around the room and then double checked all this against the dimensions of the pictures. Except for the last picture, he was done in only half the time I had expected. ",
        "Once all the nails were in place, I started hanging each frame and checking it with a level. Just to make things a little extra secure, I affixed blobs of gallery wax to the bottom corners under each frame. Pretty soon, all I had to do was hang the last picture. As I turned around and looked toward the wall that would display the larger work, I saw Tom about to pull away the paper covering it.\n\n\"Stop,\" I said. I didn't want to shout, but there was no way I wanted him to see the painting yet, not until tomorrow night.\n\n\"What's wrong?\" he asked innocently.\n\n\"Umm, not dry.\" I just hoped he bought that. Lucky for me, he did.\n\nWith a shrug, he stepped over to the freshly painted wall and double checked the measurements. \"Do you know how heavy it is? Should we use one of the heavy, picture-hangers?\"\n\n\"Yeah, that would be good. But I'll hang it, all right?\"\n\n\"Sure, it's your show, you're the boss,\" he grabbed the hook and banged it into the wall. If he was curious about hat picture, he didn't let on and I was relieved. It wasn't a huge deal, but I had worked hard on that one and hoped he liked it once he saw.\n\nIn the corner, against the wall was the last picture. I hefted it up, checked the wire in the back and placed it onto the hook. After a few final adjustments, it was done. \"Tom,\" I called. \"Why don't you gather up the tools and I'll write a note to Isabelle.\" Tom was nowhere to be seen.\n\nWith a big tool box hanging from his hand and a step and a step ladder over his shoulder, Tom walked past me and towards the door. \"I think I have one more trip and then we're ready to go,\" he said as he kicked the door open with his foot.\n\n'I love a man with a mission,' I said to myself and shook my head. Tom walked back through the door and smiled at me as he went to get the drop sheet and painting stuff. I swear, if he were any more excited about getting me alone, he would start whistling. Lucky for him, I felt the same.\n\nOnce we were in the car, Tom ran his hand up my arm and curled it around my neck and as I leaned into him, he kissed me. It was like the last two hours hadn't happened and we were right back in the utility room, desperate for each other and not really caring where we were. I sucked at his invading tongue and caressed it with my own. At some point, I fisted his shirtfront and tried to pull him into me. I wanted Tom so much, so deeply, my need scared me a little bit.\n\nTom lowered his head to break the kiss, \"I've never done it in a car before, but if we don't get home, I might.\" His breath was as ragged as mine, and I thrilled at the idea that his desire for me was as strong as mine for him.\n\n\"I don't think Sandra can really handle us being together, Tom. She is still getting over us making out on the couch last week.\" My roommate and I had argued as politely as we could while neither had admitted fault. No matter that she could have her boyfriend stay the night, it seemed that I could not.\n\n\"Hmmm, if it's my turn to be alpha-male, then we'll go get your stuff. I'm taking you to my place.\"\n\n\"That's fine, cave man. Just don't go slapping my butt to make your point. And besides, my bag is in the trunk.\" I'm sure I blushed, but luckily, Tom couldn't see it.\n\n\"Pretty sure of yourself, huh?\" And he turned the car in the direction of his place.\n\nThe drive to Tom's was quiet, but peaceful. I didn't yet have a word for why, but I felt at ease in Tom's presence. It didn't totally make sense to me, but I had to admit that it was true. Whatever I was doing, wherever I was, I felt sure that I would have more fun, be happier if Tom were there as well. In the past, I had experienced strong feelings for some of my flings, and I had felt a deep kinship with some of my friends. But not even with my first boyfriend, Mark had I felt those feelings for the same person. As we drove Tom would put his hand o n my knee after he shifted gears. Like it was the most natural place in the world for his hand to be, my knee became a sort of 'home base'. I was thinking that just maybe, Tom was feeling some of the same things I was, too.\n\nFinally we arrived at Tom's place. It was an older, stone apartment building with probably more character than modern amenities. The windows were big and some of them had ari-conditioners mounted. Inside, we climbed the stairs to his floor. I was curious what his space could tell me about the man I was just starting to know. Once inside, my expectations were mostly confirmed. Rarely have I seen a place that so clearly reflects the person, I thought. The living room was lined with book cases from floor to ceiling and those were completely jammed with books. There were no little niches with decorations, like in a Pottery Barn catalog, here. The room looked more like a library than a place where one might entertain. He had a big chair and ottoman with a light behind it and a massive couch under the windows. Next to the couch were an empty plate and a book. Strewn on the back couch was an ancient afghan that looked like something my grandmother would have crocheted.\n\nI heard Tom's footsteps behind me, and then a tentative touch low on my back. He rumbled, \"Are you sorry you got yourself into this? It isn't as pretty as your place?\"\n\nI turned to look at Tom's face and could see the apprehension in his eyes. He was worried that I would reject him. I wanted to reassure him and put his mind at ease.\n\n\"That's Sandra's place, not really mine. You're right though and she would have a fit if she saw your apartment.\" I could see Tom wince a little. \"As far as I'm concerned, this is perfect: warm, comfortable and very you.\" \n\n\"Good enough,\" Tom said as he heaved a sigh of relief. \n\nIt was then that I heard the chirp of Tom's phone go off. \n\n**Tom**\n\n\"Hey Mom,\" I tried to answer the phone casually. How is it that mothers know just when the worst possible time to call is? It could be dinnertime, the moment before you step out of the door, or just after a shower and you're standing there naked. Or now, when I was just about to wrap my arms around Gabe and kiss him all night long. I wondered how long this would take and if she would figure out what I was up to if I tried to get off the phone.\n\nAfter a couple of minutes of listening to my mother and tracing circles on Gabe's lower back, I realized two things: one was that I couldn't concentrate with Gabe so close to me and the second was that my Mom needed more attention than I was giving her.\n\n\"Mom,\" I halted her mid-stream. \"Hang on a second, okay?\"\n\n\"Should I go?\" Gabe turned and looked at me with those huge lion-eyes.\n\nI shook my head, \"No, never. Just go take your shower while I do this. There're towels and stuff in the cabinet. If you try to leave, I'll steal your clothes.\"\n\nGabe grinned a little wickedly and waggled his eyebrows at me. \"Sounds good to me.\" And damned if he didn't swat my butt as he walked away. God, what a view.\n\n\"Yeah Mom, I'm here.\" And there I was for the next fifteen minutes. A long time ago, I had realized that mostly what my mother needed was someone to listen to her. \n\nBefore she hung up the phone she landed her parting, omniscient shot, \"Why don't you bring your friend with you the next time you come?\"\n\nI cringed even though she couldn't see it. \"Mom, were not there yet.\"\n\n\"Oh well,\" she sighed a huge, mother's sigh. \"No harm in trying.\"\n\nAs I snapped my phone closed, I turned around just in time to see Gabe in my bedroom as he took off his damp towel and bent over to grab a pair of shorts. Holy God, how was it possible that this man was naked and in my apartment. Fantasy fiction is one thing, but this was a living, breathing apparition of everything I've wanted for so long, I had been convinced it didn't exist. \n\nSoon, I was going to wake up and find out that that last month was a huge, elaborate dream. Gabe winked at me and pulled the shorts up his long, lean legs and over his very fine ass. I was hoping I didn't wake up for a little while yet.\n\nHis wink at me said he knew exactly the effect he had on me, though my open mouth probably made it pretty obvious. We won't even go into the erection that was pushing against the front of my pants. Gabe walked over to me, placed his hand on my shoulder and whispered in my ear, \"Why don't you take that shower, baby? I'll fix us a snack.\"\n\nOnce inside the bathroom, I was torn between taking the world's fastest shower and trying to get actually clean. I opted for something in between. As I began to soap my body, I found myself thinking about Gabe and what it would be like to be in there with him, sliding my hands down his chest, toying with his nipples, running my hands between. . . Since I didn't want the party to end before it even began, I turned off the hot water and did my level best to calm down and stop fantasizing. For once, my reality was better than my imagination and I wasn't going to waste my em, energy daydreaming.\n\nIn the kitchen, I found Gabe puttering around at the counter. He had found cheese and fruit and was putting a few crackers on a plate, too. The radio was on and he had it tuned to the late night jazz show I sometimes liked. In all, it felt very relaxed. \n\n\"Want a beer?\" I asked as I went to the fridge and pulled two out. Without really waiting for an answer, I twisted off both tops and handed one to Gabe. \"That looks great, thanks.\" And I snagged some cheese and a slice of apple.\n\nWe settled on the bar stools and munched for a minute in silence.\n\n\"How was your shower?\" Gabe asked.\n\nI glared at him a little, \"Cold.\"\n\nHe laughed through his nose and looked away. \"Oops,\" he mumbled.\n\nReaching towards the counter, I took his hand in mine and placed it on my cheek. It felt weird at first, like I was scripting the motion, but I still liked the way his hand touched me. In a second, he turned back to me and began stroking my face a little and I closed my eyes and just enjoyed the moment. We had been busy since the moment we had seen each other that day. There hadn't been a single moment, except in the utility room, when we just stopped what we were doing to be together. I leaned into his hand just that little bit and felt the pressure returned. He held me firmly in the palm of his hand.\n\nGabe's lips touched mine and I'm pretty sure I groaned. How a kiss could be soft and firm at the same time, I still hadn't figured out, but I definitely loved it. He moved over my mouth with sureness and deliberation, not rushing. Somehow we were standing now and I was able to pull him closer to me as I moved a hand around his waist and tugged him to me. His fingers strayed into my hair and I wanted nothing more than to breathe him in and capture this moment in my memory forever. Our mouths opened and moved and I tried to tease his tongue into mine, but we met halfway, curling and nipping.\n\nI was reminded by my again-straining erection that there might be a better location for this kind of fun. With this in my I broke the kiss, but barely separated our mouths. \"Come with me?\" I whispered to his lips. Gabe's forehead touched mine and he only whispered, \"Yes.\"\n\nOnce on the bed, our actions became a lot less tentative. Our hands touched, roamed and traced the lines of each other's body. My undershirt came off, partly with my help and partly Gabe's. Since we had so far always been at his place with his roommate around, Gabe and I had not actually seen much of each other and I found myself desperate and greedy to feel every square inch of him. \n\nSwiftly, I moved down to his neck and nuzzled the line of his collar bone and down to one pinky-little nipple I had been dreaming about. His chest was nearly hairless, with flat planes of muscle begged me to massage and feel them. I circled a nipple with my tongue and then sucked it into my mouth. Gabe's response was sharp and instantaneous; he drew in a quick breath, pushed his cock against me and groaned low and long. Liking that response, I caressed the nipple and pushed it against my teeth just a little to heighten the sensation. Gabe rewarded me with a stronger thrust of his hips and some garbled words I couldn't understand. \n\nWhile I moved over to his other side to repeat the experiment, I moved my hands down and under him to cup his ass. The next time I nipped him and he thrust against me, I cupped a globe of his ass and squeezed to feel the flex of muscle in my hand. Gabe had a leg between mine and I was soon humping against that, mimicking the same action.\n\nDuring the past month, I had dreamed of being with Gabe while I was awake and asleep. Images of what we had done and I wanted to do with him would flash through my mind. But now that I had the real thing in my arms, I couldn't deny that reality was better than any fantasy. My senses were overcome with so much smell and touch of this amazing man, and other than that, my brain was fried.\n\n\"Want to feel you inside of me,\" Gabe's voice penetrated my hazed mind. \n\n\"You sure?\" I asked as I smoothed the hair from his face. \"I'm not a total alpha-male, you know.\"\n\n\"Yeah, I know. We'll get to the other, but I want feel you all around me,\" Gabe said this and massaged my shoulders.\n\nMy brain re-engaged and I was able to function enough to remember where I stashed the fresh bottle of lube and condoms. Once I had these at hand, I moved back down Gabe's body and traced the lined of hair that shadowed his sternum down to his navel. The skin on his belly was so incredibly soft, like nothing I had ever felt and I couldn't seem to resist rubbing my face over and over it. The smell of him entered my nostrils and I finally had to satisfy my curiosity to see and feel and taste him. I nudged lower and let my mouth have the first taste of Gabe's cock. The tip was hot and wet and I brushed my lips over the surface eagerly to coat my mouth with him. Vaguely, I heard Gabe moan and could feel a shudder before I opened my lips and took him into me. \n\nMy eyes were closed and I reached out with my senses to feel him. The heat between our bodies shimmered, like a desert road on a hot day. My dick nudged under his balls and I wanted to be inside of him so badly, I thought I would fly apart otherwise. It was all I could do to roll on the condom and find the lube. I pressed a finger into him and heard twin moans fill the room. With my forehead pressed to his, we began to move together, matching out rhythm.\n\n\"Now, please,\" Gabe mumbled into my mouth as I rose over him and caressed his thighs. \n\nOne minute Gabe was with me and then the next, he wasn't. All while I held him in my mouth, I had still felt connected. I mean it isn't as if he had slipped into some magical realm and he had disappeared, rather it was like his body was there, but his will had eased away. Now, I had just entered him, pushed past his initial resistance and I felt enclosed in that amazing tightness and heat that made me dizzy and lightheaded. As I began to thrust into him, feeling him around me, I realized that I couldn't feel that connection between us. His hands on my back had gone still, his thighs gripped me more loosely. \n\nGod, what if I'd hurt him? Or scared him? Or just been too damned self-centered to notice his needs? \n\n\"Hey,\" I whispered to him, and I brushed my lips against his. \"Where'd you go?\" Gabe had his eyes closed, his neck craned away from me a bit. \"Are you hurting?\" He just shook his head a fraction. Whatever was happening, I needed to concentrate on Gabe and not on my dick. I started to pull out.\n\nIn a flash Gabe moved his hands down to my ass and pulled me into him as he opened his eyes. \"Don't leave,\" he said and he stared at me with those lion eyes, glowing and a little wild in the dim light. \"You feel right, you fit.\"\n\n\"Tell me what's wrong,\" I said as I traced the line of his jaw with my fingertips. \n\nGabe just shook his head. \"Nothing really. I just can't seem to stop thinking.\"\n\nYeah, I could totally relate to thoughts spinning out of control with no sense to them and nowhere to land. Sometimes I felt like I was flying to bits. But not right now, not with Gabe's presence anchoring me. \"So let's just slow down until your brain can catch up, hmm? We could switch, if you want.\" Gabe shook his head a little. I went on, wanting to fix the situation, wanting a solution. \"We don't have to do this tonight. I'm not in any hurry.\"\n\nA strangled moan of frustration came from Gabe's throat and he said, \"You wouldn't be mad about waiting?\"\n\nInto the space under his Adam's apple I mumbled, \"We have years to make love.\" The skin on Gabe's neck was driving me crazy and I ran by nose up and down feeling the softness and the curve and the scent. He had missed a little spot shaving and reached out to touch it with the tip of my tongue. I darted my tongue out to taste the delicate skin at that little juncture between Gabe's collarbones and I felt him shudder.\n\n\"Years?\" \n\n\"Mmmhmm.\" I answered, but I was a little too busy to form a coherent word. It was as if I had been in Kansas and now in Oz, I could experience all the colors I had only heard of. The skin on Gabe's chest, with his smattering of golden hair had a totally different texture than the skin behind his ear. Experimenting a little, I rubbed the bristles of my chin down the centerline of his chest and then swept over towards a nipple. Distantly I registered that I could feel the rise and fall of Gabe's breathing under my chest. Gabe's nipples were especially sensitive and I played until I began to understand just how much attention he liked and when I had begun to cross the line into too much. Soon, I could feel his erection hardening stiff under my belly and his moans of pleasure reached my ears. At some point, my hands had wandered and I found I had been stroking his hips, sides and ass. \n\nI could talk about before: what I had felt with other lovers and try to compare how this felt different, but that wouldn't really be fair to what I experienced that night with Gabe. In some way, I finally felt that I was actually inside another person. This wasn't the usual experience of feeling that wonderful engulfment, that surrounding heat and tightness on my dick. It was more as if I was reaching out with every sense I had and was travelling through Gabe's veins, running along his nerves and beating with his heart. If it were possible, I wanted to make love to him from the inside out in every way. And the most amazing part was that Gabe let me into his mind, and heart and body; he trusted me completely. It was a gift so precious, it would have brought me to my knees.\n\n\"Tom,\" Gabe gasped. \"Do that. . . aghh. . . again.\" I guessed we didn't need to wait, after all.\n\nWhatever it was, I must have done it right, so I did it again. Later we would have time to analyze and figure it out. Right at that moment, I just loved everything we were both doing to each other. Gabe had his hands firmly on my ass and he was gripping and moving his hands in a way that made no sense, but felt great.\n\n\"Yeah?\"\n\n\"Mmm hmm,\" Gabe managed through clenched teeth.\n\nThe wetness on my belly was becoming harder to ignore and I realized that it wasn't all our combined sweat. Something down there needed more attention than it was getting. I reached and ran my hand down the length of Gabe's cock. He was hard, nearly rigid with need. I used opened palm to feel the strength in him before I wrapped my fingers around it and set a tempo that mostly matched the one of our combined bodies. Gabe's reaction, a low, low groan made it obvious that I had really done something right. Our rhythm felt like the rocking of the sea, gentle, inexorable and totally out of our control. \n\nBetween the motion, the smells and sounds, every sense I had was close to being overloaded. Like seeing a wave crest coming, I was sure that I couldn't last much longer. But there was no way I was leaving Gabe behind, wanting. I hunched over his stretched out body to find his incredibly sensitive hot spot. Taking a sweet nipple into my mouth, I gently circled it with my tongue. This new attack must have changed my angle just enough too, because he set up a little shout and bucked up into me. His whole body vibrated with a tight sense of nearing climax. I continued to assault one nipple then another, stroked him firmly, and met his increased rhythm.",
        "\"Rightyeah howcanyoumore, ahhh.\"\n\nGabe kept up a steady stream of nonsense words, but I got the general idea that I should keep going if I valued my life. With a final \"Unhh, Tom\" and a deep groan of effort I felt the warm liquid of him spill into my hand and his tight muscles constricting around me. He bowed forward with the force of his orgasm and tried to pull me even harder into himself. With a few last deep thrusts, I was there with him, my face pressed into his neck while he held my head and rocked with me to my completion.\n\nEvery single muscle in my body was trembling from exertion and satisfaction. For a long time, neither of us moved or talked and we just tried to catch our breath. Personally, I had no idea what to say. I had never felt so completely part of another person in my entire life. For some reason I can't quite understand, I mostly felt embarrassed. As soon as I gathered the energy, my instinct was to get away, even if it was just to the bathroom to clean up. Maybe I was having a hard time fitting back inside my own skin? I don't know.\n\nLucky for me, Gabe was a lot more lucid than I was and said just the right thing. \"Baby, I don't know how you did that, or even what exactly you did, but you can do it again anytime you want,\" he said in a low, groan-husked voice. Then he added, \"As long as it's with me.\"\n\nI pushed up on my elbows, needing to see those eyes. \"It wasn't just me,\" I said as I looked from eye to eye, trying to memorize them. \"I'm not like that; it's never that easy. It was definitely a team effort. And I don't want to be like that with anyone else.\"\n\nThe kiss we shared then was effortless and filled with kindness and promises. If my arms hadn't threatened to completely give way, I might have been able to keep on like that all night long. Embarrassment and my need to escape had faded and I was able to get a clean washcloth to wipe Gabe. I don't think he would have been able to move if a tornado was coming, he was so totally blown. After I tossed the washcloth in the hamper I chuckled a little bit and crawled into bed, next to him. \n\n\"What's funny?\" Gabe asked groggily.\n\n\"Nothing, angel. I just like to see you happy and relaxed,\" I said and then leaned over and pecked him on the lips. He was slipping into sleep and I knew I was right behind him.\n\n\"Hmmm. I like that. You can call me angel. Never been an angel,\" Gabe babbled. \n\nI hadn't realized that I had called him that. Ever since I noticed that Gabe sometimes called me baby, a pet name I never thought I would be able to tolerate but somehow adored when he said it, I had been trying to think up an endearment for him. \n\nOne day, I was so desperate for inspiration, I even did a google search on pet names for men. The lists were mostly pathetic, unimaginative or silly. There was no way I would ever be able to call Gabe 'studmuffin' with a straight face. I guess some part of my brain had already recognized the angelic in Gabe and was just now communicating to the news to me. I just hope I remembered in the morning.\n\n**Gabe**\n\nWhen I finally woke up for good the next morning and stretched, I think every muscle in my body ached. I had toted painting, painted walls hung pictures and made love within an inch of my life. Funny, I had thought it was Tom who could never do things by halves, but now I was beginning to think that maybe he wasn't alone. The day before was kind of a haze of frantic and frenetic action. I had been driven to finish everything, as if it were my last day on earth. The show was up and Tom was most definitely my lover. A more cynical man might have been waiting for the other shoe to drop, for the tragic event that made all the happiness evaporate. Not me. I felt like I had scaled some huge mountain and now I could enjoy the view. \n\nThe hot shower loosened a few strained muscles and the hotter coffee Tom had left in a thermos shooed away the mental cobwebs. Before I got started for the day, I had a couple of phone calls to make. When I looked at my phone, I appeared that one of my calls had read my mind and called me first. After punching some buttons, the voice of a dynamo filled my ear.\n\n\"Sweetie, I love the colors you picked,\" Isabelle crooned in my ear. \"But why does the big one look like a UPS box?\"\n\n\"Ugh,\" I moaned. The paper covering the biggest canvas totally slipped my mind. \"I meant to leave you a note about that, but I guess I was a little distracted.\"\n\nChuckling over the phone, \"That's what I figured. After I peeked at it, I decided that it would be okay to disrobe. Was I right?\" The warmth and teasing in Isabelle's voice told me I was forgiven for my oversight.\n\n\"Yes, thank you. Has anyone noticed yet? I know it's early, but I was just wondering?\" The caf\u00e9's morning crowd would have already been through the place, and it was possible that Isabelle had been able to gauge the reaction.\n\n\"Gabriel,\" she soothed. \"I don't think a single person left my doors without raving about your work. Really, this is one of the better shows I've had up on the walls in a very long time. The response has been overwhelmingly positive.\"\n\nOne of the things I liked about Isabelle was her honesty. If my work had stunk, she never would have asked to have me show in her place. If the work hadn't gone over well with her customers, she wouldn't have flinched to tell me so. When we first met, she had told me that 'no one ever achieved excellence by being lied to'. At the time, it seemed a little bit harsh, but in hindsight, I realized that she was absolutely right.\n\n\"Thank you for everything Isabelle. You have no idea how much your opinion means to me.\"\n\n\"Just come tonight at six so we can have a little toast, okay? And bring that man with you, I think I need to have a better look at him,\" Isabelle said with a chuckle in her voice.\n\n\"We'll be there,\" I agreed. \"I invited a few more friends, if that's okay? That way if Tom explodes, I'll have some help calming him down.\"\n\nIsabelle rang off then and got back to her endless work. And I filled my mug with coffee before calling Tom.\n\n\"Hey,\" Tom said in a low voice that made my insides flip with joy. \n\n\"You better have known it was me calling,\" I said mock-sternly. \"Because if you answer the phone in that sexy voice for someone else, I'm going to get super jealous.\"\n\n\"Just you, angel,\" Tom husked into the phone. \"Besides, I'm in my cube and I don't really want to have everyone listening in.\"\n\n\"Good, just making sure,\" I replied. \"How are you doing today?\" Tom had gone into work with Amy at some ridiculous hour to get ready for his project-launch meeting.\n\n\"Funny you should ask,\" Tom said. I could almost hear the smile in his voice. \"I seem very relaxed, which is strange. The meeting starts at three, and I'm feeling pretty good about it.\"\n\n\"I'll pick you up at five, if that's still okay?\"\n\n\"It's only okay since it can't be any sooner, but I can live with it. Are you busy this weekend?\" Tom asked.\n\n\"Hmm,\" I considered. \"I have to work a shift on Saturday, but otherwise I'll be with my extremely demanding and possessive boyfriend.\"\n\n\"Good, as long as we have that straight.\"\n\nSince I had Tom's car (again, I know) I had a little extra time before I had to get to the bookstore. One more call and some breakfast later, and I was winging my way to my day job. A great part about working where I do is that it rarely takes up my whole brain to do it right. That's not to say that I'm a slacker, I am pretty conscientious at work. It's just that I am able to let my mind wander and float from topic to topic. Sometimes I'm working on new drawings in my head, or figuring out how to get my work out into the world where more people will see it. Today though, I had a one track mind and his name was Tom.\n\nAccording to my past experiences, I was expecting to feel some sense of panic or regret at having sex with Tom last night. This was the part where I would have to start looking for and exit strategy before the other guy got too attached to me. Or right about now, I would be depressed because I had probably ruined a great friendship with mediocre sex. As I went through my workday, I kept waiting for these emotions to bubble up through my mind, but they never did.\n\nFairy tales are a section in the Childrens' Books and 'happily ever after' is simply a literary device for ending a story quickly. I know these things, and have tried to live my life only expecting from life what I could reasonably expect. True love was not in the cards, but if I were lucky, I would be able to find kind and generous lovers to share some time with me.\n\nMy rational brain kept repeating all these truths to me, but it seemed the rest of me had no time to listen. Tom was not anyone else I had ever met and I couldn't expect him to fall in line with all the rules I had made up to rule my life. The rules had kept me safe and unhurt ever since my first boyfriend dumped me. I was pretty sure it was time to revise the rules of engagement this time and maybe give Tom a little credit. I wasn't quite at a place where I could just let go and accept the future without any anxiety at all. But I thought I could at least put off listening to the niggling voices that tried to convince me that this relationship with Tom was bound to fail.\n\n\"Earth to Gabe,\" Rob's voice came over my shoulder. \n\nI turned and saw one of the world's cutest and most obnoxious guys smirking at me. \"Hey yourself,\" I responded. \"What's up?\"\n\nRob continued the smirk and added a knowing stare. \"Nothing much except that you are totally distracted today and I have been calling your name for like, three minutes. You a little pre-occupied?\"\n\nI schooled my features and tried not to blush since I kept having these little flashbacks to Tom touching me. Rob is a huge gossip and if he found out about my recent activities, he would broadcast it all over the store. \"Mostly I'm just tired. I was hanging a show last night and it took longer than I thought.\" I shrugged, hoping that this made my quasi-lie believable.\n\n\"Who's show? Yours?\" Rob's voice was a little excited. \"No wonder you haven't been going out with us after work lately.\"\n\n\"Yeah, it's been a ton of work, but totally worth it. It opens tonight at that caf\u00e9' in Old Town, Bella's. It's not the Met, but I think it's pretty cool.\"\n\nRob practically started bouncing on the balls of his feet. \"Ooooh,\" he crooned. (I mean really, who croons but Rob?) \"What time tonight?\"\n\n\"I think we'll do the opening toast around seven tonight,\" I answered without thinking at all. Had I half a brain, I would have known the next words out of his mouth. \n\n\"Perfect, I'll let everyone know. If we drive together, a bunch of us can probably get there after the closers come in.\" Rob's smile was broad and excited as he bounded off to inform the staff of the evening's activity. It was like working with Julie-the-Cruise-Director.\n\nInternally I groaned and kicked myself for my own stupidity for opening my mouth. Maybe I should be a little more gracious and be excited that a few people would want to come tonight. But there was still a big question in my mind and that was Tom. Truthfully, I had no idea how he would react to the big painting when he saw it. If he hated it and got storming-angry, then I'd rather not have a ton of witnesses around when he blew a gasket.\n\nAt this point I figured that if I could completely distract Tom, he wouldn't care if I had painted him stark naked for all the world to see. After checking with my boss to see if I could get out a little early and telling way to many folks that I would see them later, I headed out to the parking lot to go pick up Tom.\n\nThe couple of times I had picked Tom up from work, he had been waiting outside, so I had never actually seen where he worked. Since Tom liked to read in the evenings yet still work tons of hours, he often went to work super early in the morning. Lots of times, he and Amy shared rides to the office, like this morning. The building where he worked was nice, a little sterile and frigidly air-conditioned. Once inside, I had to check the directory to see which floor Tom's company was on. Three floors, the company took up three whole floors. Okay, how did I not know this? Inside the elevator, I poked the button the first of the three floors and hoped for the best.\n\n\"Mr. Middleton is still in a meeting in the second floor conference room,\" said the nice receptionist, who reminded me a little bit of my mom. \n\nI was a little stunned, only because I had thought Tom's company was kind of casual and I had never thought of him as 'Mr.' anybody. Trying to look like I belonged in corporate America, I followed the lady whose nametag said she was Carol. I hoped I didn't look like a gosling following the mother-duck. As we passed areas, Carol pointed out things I would never remember, and I just mumbled. Finally we came to the conference room, and she peeked in a little window in the door.\n\n\"It looks like they're finishing up in there, it shouldn't be too much longer,\" Carol said kindly. \"You can wait in Mr. Middleton's work area, if you'd like. Do you remember where that is?\"\n\nI lied to Carol and told her I did and she made her way back down one floor and back to her post. If the meeting were almost over, then I could just hang out and hold the wall up until it was over. I knew I was a little early, and I started to think that maybe this wasn't my most brilliant impulse ever. Just as I was scanning the hallway for an escape route, the door opened and Tom came out with a huge smile on his face and walked right to me.\n\n\"I take it that the meeting went well?\" I asked in a low voice. This whole 'office environment' thing was intimidating me a little and I didn't quite know how to act. Even though I knew that Tom was mostly out at work, I opted to be as professional as possible and not touch him. Tom obviously had other ideas and he kissed me lightly in the cheek and took my hand.\n\n\"The meeting was great and seeing you is even better,\" Tom practically purred in that way that drove me a little crazy. \"Here comes my boss, I want you to meet him.\"\n\nA tall, nearly middle aged man with bright eyes and a loose-limbed walk came towards us. As soon as he stood in front of us, he stuck out his hand. \"Tom, great job. You have everything completely under control. Work with Carol to set-up a weekly meeting with my schedule, okay?\"\n\n\"Thank you, Steve,\" Tom released the man's hand and turned to introduced me. I would have felt a lot less nervous if he had let go of my hand. \"I'd like you to meet my boyfriend, Gabriel Hayes.\" \n\nI think Tom said a few other nice things, but my brain got a little fuzzy when he said the boyfriend part. I could feel myself go all soft inside. Then the man was shaking my hand. I heard my self say, \"It's a pleasure to meet you Mr. Wright.\" \n\n\"Well Gabe,\" Steve Wright said, meeting my eyes. \"I should thank you for your patience lately. Tom's been putting in a lot of extra hours. I hope that hasn't been too hard on you.\"\n\n\"Umm, no,\" I replied. And in truth, Tom hadn't allowed his work to intrude into our time together at all. He could have, and I wouldn't have minded. At least that is what I told myself. But Tom had made such an effort to support me and encourage me that I often forgot how hard he worked. \"Tom has been the model boyfriend. I'm incredibly fortunate.\" And as I said this, I squeezed his hand to let him know I meant it. He squeezed back.\n\n\"Gabe has a show of his artwork opening tonight, and we're headed over there in a little while to celebrate.\" Tom said with obvious pride in his voice. \n\n\"Excellent, you too deserve to have a little fun,\" Steve Wright said. \n\nAs we finished with the obligatory small talk, I saw Amy in the conference room talking with a few colleagues. She gave me a little wave when she looked up and noticed me in the hall. Soon, Steve walked away and Amy bounded out and practically tackled me with a hug. \n\n\"Gabe sweetie,\" Amy cried. \"Tom was fantastic -- he convinced everyone that we can handle this project in our sleep.\"\n\nI beamed at Tom. He would never brag on himself, so I was glad he had Amy to do it for him. \"It's just one of his amazing super powers.\"\n\nAmy stood and just smiled at us a little too long and finally said, \"I don't think I want to know the others are.\" \n\nAnd with that, Tom coughed and started to blush bright red. \"Amy, shut up please or I will tell Henry to take away your chocolate ice cream,\" Tom growled.\n\nAmy winked and then said, \"Speaking of Henry and chocolate, what time at Bella's?\"\n\n\"Seven o'clock,\" Tom responded.\n\n\"Goody,\" Amy beamed. \"I'll call Henry and we can all grab some dinner and then head over. What do you say?\"\n\nDamn, I didn't want to give too much away, but I had to do something to get Tom to myself. Before Tom could say 'sure, sounds great', I took control of the conversation. \"Sorry Amy, I made some plans already for Mr. Middleton, here.\" I emphasized his last name with grin. \"I think we need to celebrate his victory first.\"\n\nInstead of being put off or pouty, Amy seemed genuinely pleased that I said this. \"Good,\" she said. \"I'll get Henry to order in and give me a foot massage. Then we'll head to the caf\u00e9 for dessert. Sound good?\"\n\nAs we headed towards the car and I was positive that Amy was nowhere around I said, \"Do you think Henry ever gets a say in what he does?\"\n\nTom laughed and bumped into me genially. \"Yeah, I think so. Mostly I think he doesn't really care much, as long as Amy is happy. That and he picks his battles carefully. If Henry stands up for himself, and really takes a stand, Amy almost always gives way. I'm not really sure how, but they seemed to have their relationship worked out.\"\n\n\"Maybe I should get some lessons.\"\n\nTom stopped and looked at me quizzically. \"You? No way, you don't need to change a single thing. Me on the other hand, I'm not so sure about.\"\n\n\"Well I am,\" I said feigning confidence. \"Then again, if we both admit total ignorance and just promise to try, we'll probably do okay.\" I was getting uncomfortable and pulled on Tom's hand to keep walking put he had turned into the immovable hulk. He stood his ground and tugged my hand until we were nose to nose. The kiss he gave me then was warm and assured and wiped all the temporary doubts I had about my capacity to love this man as he deserved.\n\nBefore I could take another breath, Tom's lips were pressed on mine again. His possessiveness and desire made me a little dizzy, though that could have been the oxygen deprivation. He sucked the tip of my tongue into his mouth and played with it a little before he nipped me lightly. Coming up for air, he said, \"I was so nervous about the meeting today, I skipped lunch. Where are we going to dinner?\"\n\nI grinned at him and told him. \"But we have a little stop to make first.\"\n\n\"It better be fast, or I'll start eating the dashboard.\"\n\nI glanced sideways at Tom as I navigated through the city streets. He looked a little curious, apprehensive. \"I can't promise it'll be fast, but I think you'll agree it was worth it.\"\n\nAfter a few minutes, I pulled into a parking lot at the back of a nondescript building not far from the University. \"Okay babe, we're here. Let's do this and then we can go eat. There's a great Thai place nearby I've wanted you to try.\" Suddenly nervous that this was not a good idea at all, I was ready to launch into a full-blown babble. The look of sheer surprise on Tom's face wasn't giving me any confidence either.\n\n**Tom**\n\n\"Gabe, why did you drive us to the clinic?\" My brain was going in too many directions to have any clear idea as to Gabe's plans. And Gabe looked a little guilty and nervous, so I was pretty sure he didn't mean what I hoped he did by this gesture. \n\nWhen he replied, Gabe couldn't quite meet my eyes. \"Jeez Tom, maybe this was a bad idea.\" He looked like he wanted to grab my hand but then pulled back at the last second. He looked at the sky, the building, even the car, but not at me. \"It's kind of spontaneous and all, and maybe things aren't. . . I mean, maybe we're not ready for this step. If you don't want. . . I guess I understand.\"",
        "God, and I thought I had been nervous. I grabbed his hand and it was slick with his panicky sweat. I whispered, \"Gabe, are we here to get tested? So we can have sex without condoms?\" I figured it was time to talk straight and leave off any misunderstandings.\n\n\"Yeah.\" Gabe's eyes looked pleadingly at me when he met my gaze.\n\n\"Are you telling me that you want to be monogamous, that you aren't interested in sleeping with anyone else while we're together?\" Just how much could I possibly hope for, right? I needed to understand what Gabe was offering, in terms of this relationship. This time, I figured that if I knew the ground rules going in, I knew what to expect, maybe I wouldn't be disappointed (crushed, humiliated and ashamed) when it ended.\n\nHis eyebrows pulled together but he still nodded. \"More Tom. I want to be with you, but not just while we're together. I want to be with you from now on. No expiration dates, no maybe's, no halfways.\" He breathed out a huge breath. Gabe stared at me with trepidation in his eyes, waiting for. . . something. \n\nOverwhelmed. I was completely inundated with emotion and at the same time immensely relieved. Gabe has Stepping closer to Gabe, I wrapped my arms around him and kissed his lips lightly. \"Love you,\" I whispered as I ended the kiss and brushed my nose with his.\n\n\"Thanks for being the first to say it,\" Gabe whispered back. \"I was too chickenshit.\"\n\n\"You're welcome,\" I replied and pulled back just far enough to look into his eyes. \"Now if you don't say it back, I'll think I was an idiot, get really embarrassed and want to run and hide.\"\n\nGabe raised his hand and rubbed my fingertips along my jaw. \"I so love you. At first I just thought you were the cutest guy I had ever seen. Then, when you asked me for that book, I knew I was a goner.\"\n\n\"Damn angel,\" I said. \"You make me feel so good. I don't know if I deserve you, but I don't think I care anymore. You are the best thing in my life and I want you a part of it for as long as possible. And I think getting stuck with a needle is a small price to pay.\" And I grinned, trying to lighten the mood a little.\n\nGabe grinned back and we continued to hold hands as we made our way into the clinic. When we got closer, he started swinging his arm and bouncing like a little kid that has to go to the bathroom. I can't say that the clinic really lived up to the excitement that Gabe anticipated, but it was over quickly and we had matching band-aids to show for. In only one week, we would have our reports and even I started bouncing at that thought.\n\nTo any outside observer, it might have seemed as if two deaf mutes were having dinner together that night. We could hardly talk and we just sat there and smiled like dazed idiots most of the time. To me, I felt like a magical spell had been cast over us and I was just really enjoying the time we spent being in one another's company. I'm pretty sure there was food on the table and we probably ate it, but I was hardly aware of anything other than Gabe and his crazy amber eyes. The idea of having to go to Bella's for the opening toast before we could go home was making me a little nuts. But since I felt that Gabe had done so much for me, for us, I decided not to be a crank about it.\n\nBy the time we got to the caf\u00e9, we were a few minutes late and the place was already filled with the regular crowd and lots of people we both knew from work. I had been a little worried that the show wouldn't attract much attention, so I had sent around a couple of emails at work, asking people to come and see his work. Gabe must have done a similar thing. When we got there, we were greeted by lots of friendly faces.\n\nGabe squeezed my hand and tried to sound casual when he said, \"You didn't threaten them into coming, did you? You know 'show up to my boyfriend's thing or I'll make sure you get the crap assignments'?\"\n\nI laughed and replied. \"No, of course not.\" When Gabe gave a little sigh of relief, I said, \"They know me well enough that I don't have to threaten anymore.\"\n\n\"Beast.\"\n\n\"You know it.\" I made little circles on the inside of his wrist until he started to look like he would melt.\n\nFrom behind us I heard Isabelle's voice. \"Gabe, you're here. And Tom, I'd know that back anywhere.\" I had no idea what she meant, but before I had much time to wonder, I found the little dynamo hugging me and pushing me towards the serving area. She told me to get us each some champagne for toasting and that she needed a moment to speak to Gabe alone. Whatever.\n\nAmy was at the counter discussing her options for baby-friendly drinks with the staff and I eyed some chocolate.\n\n\"You know Tom,\" Amy said quietly to me. \"He's really good.\"\n\nI laughed and raised an eyebrow when I met her eyes. \"Yeah, but how do you know that.\"\n\n\"God, you can be such a pig,\" she rolled her eyes at me. \"Why I expect you to be more romantic or civilized just because you're gay, I have no idea.\"\n\nI decided to let that go since I'd rather talk about my favorite subject. \"Do you think so? I mean, is he talented? I think so, but then I'm not really objective, you know?\"\n\nAmy nodded, \"Yeah, he is. His work is traditional and meticulous and incredibly well done. It's possible that if he didn't bring such emotion to his paintings and sketches, it might look a little cold. But somehow, even in the sketches, he seems to bring out feelings and provoke thought.\"\n\n\"Damn Amy, you sound like an art critic.\" This was a side to my friend I hadn't known. \"Where do you learn to talk like that?\"\n\nShe slugged my arm for that. \"Sometimes, when I'm not working for you or watching Frisbee, I read and go to museums, you idiot.\"\n\nWe got our tray of decadence from the server and found a back table when I noticed that Gabe was trying to get my attention. He was standing with a group of people, in front of the biggest canvas and it looked like they were getting ready to toast. I excused myself to Amy and made my way over to Gabe. Once I had a glass of champagne in my hand the toasting started.\n\nAs Isabelle started talking about the wonderfulness that is Gabe, I let my eyes wander to the painting behind me. It wasn't huge, maybe three feet by four feet and hanging portrait-wise down the wall. This had been the one painting Gabe had been a little secretive about, not wanting me to see, which of course made me completely curious. But I had been able to resist the temptation and had stolen a peek. Now, as everyone talked, I looked behind me and saw what I thought was my ass.\n\nThank God, it wasn't just my ass, but also my hand, back and shoulders, too. In the painting, a man (me, I think) was turned to face a bookcase and he was reaching for a book just above eye-level, but within reach. Now that I was this close, I could see what Amy had been saying about meticulous detail. The hand was flexed to touch, but didn't quite. The shoulders, under the obviously soft material were stretched just a bit. The jeans were baggy, like the man had been sitting down for a long time. The detail was crazy. It was like I could almost watch my hand touch the book, feel the texture of the spine. \n\nIn the corner, front of the painting was the reading chair, and I recognized it as the one in Gabe's old apartment. When we were first together, I used to sit in it, before I realized that Sandra's couch was more comfortable. A little calendar popped up behind my eyes and I started to count the days and weeks backwards. Gabe had been working on this a long time. It was proof, of a sort. He had cared for me almost from the beginning of our friendship. He had felt strongly enough about me to think about me, draw me, paint me. Maybe I wasn't the only one who was serious about us. A lump I couldn't swallow began to form in my throat and I drank some hard swallows of champagne to make it go away.\n\nAll this time, I had been nervous that I was the only one of us who really wanted us to be together. I thought I had been the one reaching and stretching for something I wasn't sure I could have. This painting told me that not only did Gabe see that, but he could feel our connection and felt the same. And he had felt that a long time before last night. \n\nAt that moment a cheer went up in the caf\u00e9 and the final toast had been drunk. The whole toasting thing had completely passed me by and I found myself staring into Gabe's eyes. Those amazing amber eyes held fear, expectation, hope and love and he was looking straight at me.\n\n\"What do you think,\" Gabe leaned into me and whispered.\n\nI pulled back and tried to breathe. \"I'm overwhelmed.\" And all could do as wrap my arms around Gabe, bury my face in his neck and breathe him into me, more elemental than air. Somewhere off at a very great distance, I could hear another cheer go up.\n\nGabe murmured in my hair, \"Shhh. I've got you, I've got you now.\" Over and over, he crooned as if I were a child, or someone precious, or his lover. I knew I would never be able to forget the feeling of his arms holding me, just like I would never forget the sensation of my arms holding him, waking with him curled into my body.\n\nWhen we finally entered the real world again, I was able to see a whole room full of people who cared about us, not just one or the other, but us. If I had really thought about it, I probably would have been embarrassed to have had such an intimate moment in a public place like that. But somehow, it didn't really matter. I didn't feel alone in the world anymore, with a boyfriend like Gabe and a crowd of friends. \n\n\"You never were alone, you big ape,\" Henry said later when I told him how I felt. \"Maybe with Gabe, you'll be able to see that better.\"\n\nLeave it to Henry to tell me the truth and forget to be gentle about it. \n\nThe evening went on a bit longer and I ended up talking to tons of people. That part was tons easier than I usually think it will be. My boss was there and I totally forgot to be nervous. Parties and events like this usually made me want to sit in a corner and read until it was time to go home. This time at least, I felt okay, even happy to spend time with actual people instead of fictional characters. \n\nFinally though, I was ready to be done with crowds and I wanted to be with only one person, and I didn't feel like sharing. As we climbed the stairs to my apartment with Gabe following me, I heard his voice.\n\n\"Did you notice the title?\"\n\n\"Nope, what was it? 'The guy who ignored the world around him'?\" I snarked.\n\n\"Ouch. No, it wasn't that bad. Part of me wanted to mention your name, but instead I called it 'I Read a Lot.' Not very original or inspired, but it was what occurred to me.\" I could hear Gabe's shoulders shrug.\n\nHaving reached the top of the stairs, I turned and faced Gabe as he stepped up to face me. \"Thank God I have a little bit more going on in my life now,\" I said as I tugged him to me by pulling on his shirt front. Before I started kissing him, I decided I should probably get the door unlocked get inside the apartment.\n\nGabe had no restraint and nibbled my neck as I concentrated on the lock. He chewed up to my ear and husked, \"I hope it's a little more than just a little more, especially after last night.\"\n\n\"Cut it out or we'll be out here all night,\" I growled back and pushed him back a little to make my point. \n\nGabe let me finish with the locks and then he pushed me into the apartment and practically attacked me. In those porn stories I hadn't needed to read for a while, some guy would often muscle the other against a door, kissing him senseless and generally dominating him in an incredibly sexy way. All I can say is that it looked to me like Gabe had read a few of those stories, too. And I kind of liked it.\n\nWords trickled into my brain as Gabe chewed on my ear and worked the belt of pants loose. I vaguely heard things like, 'mine now,' 'kissed me in front of your boss,' 'want every bit of you,'. \n\nIt was driving me a little frantic; the groping, the kissing and talking. Never had anyone wanted me this much, I had never been this important to another person, and it was the one man I realized I loved. Finally, my head began to spin and I was dizzy with the need to be closer to Gabe, as close as I possibly could be.\n\n\"Not yet,\" Gabe whispered. He had felt my need yet he still held the reins tonight. \"I want to look at you, I want to undress you and see all of you.\"\n\nA groan of desire and frustration left my throat. Screw that. 'Look later, fuck me now,' I thought with mounting impatience. Instead, I followed Gabe into my bedroom, lit only by the lambent rays of the streetlights and the full moon. By now I was half dressed fighting for a deep breath of air. Ultra-sensitive to his every touch, my skin begged to be caressed and caressed.\n\nGabe took a step to me and seemed to glow in my eyes, catching and bending the moonlight until he was luminous. He caught my eyes and held them, his irises cat-like and shining in the near-dark, as he slowly slipped the buttons of my shirt free and then slid it from my shoulders. Off came the pants and the rest until I stood before him completely naked, exposed and wholly at ease with everything that lay between us. \n\n\"You're magnificent, you know,\" Gabe husked in a needy whisper as he trailed fingers over my shoulders. Behind me now, he allowed his fingers to caress the muscles of my back, the globes of ass, the length of my legs. \"I could draw you only you and never get bored.\"\n\nWhen Gabe rose to his feet behind me, I only had a moment to register that somehow he had undressed too before I felt overwhelmed by him. He was pressed to my back, from calf to earlobe and every inch in between. His height advantage allowed me to lean back into him, tilt my head to rest on his shoulder and let him take the lead. His hands roamed over my chest, nipple by nipple, and he explored the little places that made me groan and whimper. With my mouth close to his ear, he heard each little gasp and moan. And all the while, his incredibly exquisite erection pressed into my lower back, a promise of more pleasure to come.\n\n\"Hmm, not the nipples much?\" Gabe joked as he fondled my chest.\n\n\"Not as much as you,\" I managed to reply as he found just the right squeezing pressure and I hissed with arousal. \"Maybe.\" He chuckled in my ear.\n\n\"What about lower?\" Gabe soothed and moved a hand lower, tracing the whorls of my chest and belly hair, following it lower. \"Anything down there need some attention?\" By now he was teasing me by grinding his cock into my back, holding one hip to give himself better friction. We rocked back and forth achingly slow to some unheard rhythm in the dark of my room, as he explored every inch of me and I fought my instincts to let him.\n\nWhen Gabe finally reached my aching dick, he grazed my neck with his teeth and I nearly came in the spot. The simultaneous sensations brought up to and nearly over the edge of ecstasy so fast, little spots of bright light flashed before my closed eyes.\n\n\"Shhh,\" Gabe cooed behind me. \"Not quite yet, baby. I want more than that.\" And he soothed me with his sweet, calming words, and brought me back from the verge of completion, but not very far back. All the while, he mumbled his endearments and told me how much he wanted me. \n\n\"Yesyesyesyesyes,\" I answered him back. It was a mantra, a demand, a plea. I needed the end to come before I exploded in the night and shattered so completely I wasn't sure I would ever find the pieces again. Gabe had to set me free from feeling so much.\n\nThe bed was a few feet away and we moved to it as one, united person, one body joined with sweat and longing. Behind me still, Gabe lay me on my side and resumed the rhythmic undulating of his body against mine, only now the goal was becoming (thankfully) more evident. I brought Gabe's top leg between mine and pushed my ass towards him, hoping he got the idea that I was more than okay with him topping. I'd done it before, but never had I wanted it so badly that I thought I might go crazy without it.\n\nGabe rumbled behind me, words and sounds melding, \"Won't want to leave you if I do, Tom. No one else, no one else, just you. Inside you, all around me.\" \n\nHis noises, like a personal soundtrack, went on, winding me tighter and tighter. \"Under the pillow,\" I groaned as I leaned back, reached behind me and grabbed his dick, feeling the silky, juicy tip and rubbing the slickness around the crown with my thumb. \"Before I scream.\"\n\n\"Hmm, scream, shout,\" Gabe mused and could feel him fumbling for the lube and condoms. He shoved one into my hand and I sensed the splash of cold lubed on my fingers. \"Roll it on baby, all the way down.\" As I did, I felt his slippery fingers slide down the cleft between my cheeks and then tease the sensitive skin around my tight hole. Circles and rubs and prods and then his finger inside as I groaned at the awareness. \n\n\"Yes,\" I whimpered with momentary relief. I curled my body forward, pushing my ass towards Gabe's touch. Pretty soon though, it wasn't enough. My hands grabbed blankets and pillows, looking for some leverage, some way to push back into Gabe, to deepen the invasion. I pushed and writhed, helpless and unable to get enough of him. I was beginning to feel a little frantic and desperate. Finally, when I thought I might become dizzy, he was there. The length of Gabe's body was pressed into me, from foot to forehead, hot and taut and he was at least as desperate as I was. \n\n\"I'm here now,\" Gabe whispered into my ear. \"I'm right here with you.\" And with a push and a thrust we were joined. No huge, stabbing pain just pressure and stretching of opening my body to accept him into me. The pain of being alone and feeling like I would always be that way had been agony. This minor discomfort was a celebration, proof that were together.\n\nI groaned and grabbed his hip to bring him as close to me as possible. \"Oh yeah, that's good,\" I groaned. Then I leaned forward and opened up more to him, letting him have as much room to move as we both needed. \n\nGabe's words washed over me as I tried to hang on. He had shifted over me and started moving in this completely erotic writhing motion that was driving me crazy. His dick must have had some sort of homing device that targeted my prostate because it every thrust pushed, rubbed and stroked it until I thought the top of my head was going to melt and my brain would explode.\n\n\"Can't hold it back, hurry, oh fuck, yeah,\" I was babbling. By now Gabe was pounding into me with a series of noises that had no relation to words anymore. He pushed into me over and over and all I knew was that I never wanted it to be over. I never wanted this feeling of giving myself to Gabe and taking him into me to over. \n\nEvery muscle I had screamed in defiance. This couldn't go on forever, even if I wanted it to. Pushing my head back toward his, I heard him whisper \"Now. It's my turn to feel it.\" Damn, that did it. Cum gushed out of me as Gabe gave one almighty last thrust into my sensitive ass.\n\nIs falling asleep really that different from passing out? High emotions, stress, exhaustion and sex all combined together in that one climax and I don't think either of us regained consciousness until the next morning. We woke, blessed out and half strangled by the bed sheets. It was quite a way to start our life together.\n\n** Epilogue**\n\nI still read a lot. The books have changed and my apartment is crammed full of canvases and all of Gabe's other stuff, but I wouldn't have it any other way. Lately, I have been reading \"What to Expect When You're Expecting\" and every book about travelling in France I can find. \n\nAfter we moved the last of Gabe's things out of Sandra's apartment, I decided that it was ridiculous that he had never been to Europe to see some of the artists he had studied in school. I mean, I know he has that whole starving artist thing going on, but I figured that I could be his Sugar Daddy, at least this time. ",
        "Work for me has been crazy, what with the whole project going online soon and Amy about to explode into two people. She is convinced that nothing can happen without her involvement and is trying to hold off on delivery until the project is over, even if the baby has to wait until the tenth month to be born. Gabe has been completely understanding of our craziness and sometimes he even brings in dinner for both of us, just to make sure we eat.\n\nThat's the real reason to take him on a trip, of course: the amazing part. A year ago, I never would have thought that I would get to share my life with someone. Now I have Gabe and I want to share the whole world with him. We have memories to make."
    ],
    "authorname": "lill_street_writer",
    "tags": [
        "gay romance",
        "gay drama",
        "drama",
        "romance novella"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/i-read-a-lot-ch-04"
}