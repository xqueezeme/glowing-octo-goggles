{
    "title": "Three Square Meals Ch. 068",
    "pages": [
        "*John! What happened?!* Edraele cried out to him, sounding frantic with worry. *I heard everything until you fell asleep, but then I could feel our connection being blocked!*\n\nJohn had lurched upright in bed, and he took a deep shuddering breath to calm his frantic heart rate. Sakura was clinging to him and quaking like a leaf, and while Alyssa was more composed than the terrified Asian girl, she was still badly shaken. She gave him a fierce hug before turning to Calara who was trembling with fright, and attempted to console her.\n\n*We're okay, Edraele. Just give me a moment...* John replied, trying to soothe the Maliri Matriarch's fears. Looking around at the girls in bed with him, he asked, \"Is everyone alright?\"\n\nDana had been desperately hugging Rachel as the two panted for breath, but she sat up and yelped, \"I'm pretty fucking far from alright! That was the most terrifying goddamn thing I've ever seen in my life!\" She waved her hands in the air, while shaking her head and said, \"Wait, scratch that! I've never even had nightmares that fucking scary before!\"\n\nJade drew all their attention with a shocked gasp, and a moment later she cried out, \"Irillith's been hurt!\"\n\nJohn guided Sakura over to Alyssa and Calara, and the Latina took a big breath to steady her nerves, before joining her blonde lover in hugging the whimpering Asian girl between them. He then clambered over the bed to join the Nymph, who was looking at Irillith's leg in horror. There was a jagged gash across her blue calf, in the same place where the barbed tendril had flayed her during the nightmare. The wound was bubbling with a black ooze, and the Maliri girl was looking deathly pale as she lay there unresponsive. \n\nRachel quelled her fears upon hearing that one of her friends was injured, and she scrambled to attend Irillith. However, she was brought up short when she reached John's side, and got her first look at the festering wound. A gangrene-like infection, consisting of spidery black webs was slowly spreading out from the ragged cut on Irillith's calf. Thinking quickly, she grabbed John's arm, and said, \"We need to clean that out right now!\"\n\n\"Oh, Fuck!\" Dana blurted out, as she flanked the brunette and saw the state of Irillith's leg.\n\nJohn glanced at the shimmering white bedpost, then raised his right hand towards it and focused his willpower outwards. A section of the post streamed away in a long viscous line, before gathering in a rotating orb. He fixed the shape of a knife into his mind, then imposed his will on the psychically responsive material. It rushed to obey him, smoothly forming into a razor-sharp blade about a foot long, and he snatched it out of the air as soon as it had solidified.\n\n\"Try and remove all that black pus-like substance, I'll go and get my treatment kit!\" she urged him, her eyes wide now with worry as she leapt off the bed.\n\nHe brought the knife to the toxic looking substance, intending to scrape it from the wound, but a blood-curdling shriek pierced the air as the blade touched the hideous liquid. Jerking his hand back in shock, John gave Irillith a worried glance, but she was still unconscious.\n\n\"The scream didn't come from her!\" Jade warned him, gaping in revulsion at the putrid wound in Irillith's calf. \"It came from that liquid!\"\n\nGritting his teeth in anger, John used the knife again, and smoke poured off every area the gleaming white blade touched, the black ooze burning away to the sound of more tortured wails. It took less than thirty seconds to clean the ragged laceration in Irillith's leg, the malignant substance howling in torment at the touch of the Crystal Alyssium blade.\n\nJohn sat back on his haunches when he was done, and shaking his head, he muttered, \"What the fuck was that?!\"\n\n\"I've got no fucking idea!\" Dana gasped, hugging his arm. \"I didn't think tonight could get any scarier!\"\n\nRachel rushed into the room, the spare treatment kit she kept in her quarters held in her hands. She knelt down beside Irillith, and began cleaning and treating the wound with an antiseptic spray, before applying a skin-regenerating gel.\n\nJade looked at the doctor with worried eyes, and asked, \"Is she going to be alright?\"\n\nThe tawny-haired girl nodded, all calm professionalism now, and without taking her eyes off Irillith, she replied, \"Whatever that substance was, John's efficiently cleansed it from her wound. The laceration to her leg appears to be a conventional injury now, and under my care she'll be fully recovered in less than a week.\" She looked at John pointedly, and added, \"I imagine you'll be able to heal her on a considerably faster timescale?\"\n\nHe took a deep breath, then closed his eyes, and looked at the mental compartment containing a depiction of Irillith in his mind. She was still actively linked to him, her stomach still full of the catalyst for his psychic ministrations. Concentrating on her intently, he began knitting flesh together, mending the damage to her lithe limb. He heard gasps around him, and he smiled before he opened his eyes again, knowing that his impromptu psychic surgery had been a success.\n\n\"You're getting stronger,\" Rachel observed, sounding impressed as she ran her hands over Irillith's blue flesh. \"You healed that even faster than Sakura's surgical wounds.\"\n\n\"That's not all,\" Alyssa murmured, taking the glistening white dagger from his hands, and looking at it with interest. \"I quad-shaped the bed frame just to make sure it was nice and robust. You just quint-shaped that blade without any real effort.\" \n\nJohn was surprised at that, and looked at her with a startled expression on his face. He was about to respond, when Irillith let out a low groan.\n\n\"What happened?\" she asked, sounding disorientated. Irillith suddenly seemed to remember without prompting, and she bolted upright, looking wildly around her then clutching at her leg in horror. Locking eyes on John, she flung herself into his arms, panting with fear.\n\n\"You're okay now. I've got you, don't worry,\" he told her in a comforting tone, wrapping her in his arms and stroking her back.\n\nThe others leaned in for a group hug, stroking her arms and legs as well, to help soothe her shivering. After spending five minutes holding each other, the close physical contact helped calm everyone down. Irillith peeled herself off him, and then gave him a tender kiss and a grateful smile\n\n\"Thank you for saving me from whatever -that- was,\" she said, her angular violet eyes gazing at him intently.\n\n\"You're welcome, honey. It's what I'm here for, to look after beautiful girls,\" he replied with a self-deprecating smile.\n\nShe laughed at that, sounding immensely relieved, and then moved back on the bed to free his legs. \n\nAlyssa came over to join them, and looking down at Irillith's healed calf, she said, \"We were right to be scared out of our minds. That just proved it can hurt us in the real world, not just in our dreams.\"\n\nHe nodded, his mouth set in a grim line, and said, \"Yeah, pretty dramatic proof alright.\"\n\nDana rubbed John's shoulder, and said sympathetically, \"I remember when you woke up after that nightmare months ago. I can't believe you've been suffering through shit like that for so long.\"\n\nHe turned to look at her, and seeing her concerned expression, smiled in reassurance as he said, \"They weren't ever quite that bad. I'm just sorry you girls all got dragged into it this time.\"\n\nLooking thoughtful, Alyssa then gave him a chilling smile as she said, \"Another thing was different too. We know we can hurt that fucker.\"\n\nJohn laughed at that and shaking his head in wonder, he said, \"No beautiful, I hurt it, you blasted that bastard into next week!\"\n\nDana nodded eagerly and gasped, \"I was so shit-scared, I forgot all about that! You Nova Lanced that fucker! Using your fists!\"\n\nRachel smiled too, and sharing a mischievous look with the redhead, she said, \"It was one hell of a fisting!\"\n\nThere was a bout of giggling and laughter from everyone on the bed, and despite chuckling along with them, John shared a meaningful look with Alyssa saying, *We shouldn't really be laughing about this, that thing is still a deadly threat.*\n\nShe stroked his arm, and replied, *I know, and we'll have to deal with it eventually. Laughing about it feels good though, doesn't it?*\n\nHe gave her a brief nod, then looking sombre, he added, *We'll have to come up with a better plan next time. We'll be heading back to Maliri Space soon...*\n\nAlyssa grinned at him, and said with delight, *You bad boy! We all nearly died, and you're thinking about Maliri girls blowing you!* She shifted where she was kneeling, biting her lip as she added, *Luna, Ilyana, and Almari are going to look so hot with big round blue tummies. Are you going to fuck them all too? Really break them in?*\n\n*I can see you're feeling alright again,* he replied with a grin. He knew she was right before though, laughing about their near-death-encounter was what everyone needed right now. He'd experienced more than his fair share of these terrifying nightmares, but he wasn't sure he'd be able to get any more sleep that night.\n\nShe leaned in for a kiss, and said, *I probably shouldn't bring it up, as everyone's feeling much better now, but you were the real hero tonight, not me. It was you who shored up the wards in the shield, then started protecting us while I was still petrified. I just followed your plan at the end and provided a distraction, but you pulled us out of the Astral Plane, and saved all our lives.*\n\n*Just trying to keep my girls safe,* he replied as he kissed her back, while gazing into her adoring eyes.\n\nWhen he pulled away from her, and looked around self-consciously after their passionate kiss, he was startled to see all the girls staring at him with expressions of heartfelt gratitude on their faces. He glanced back at Alyssa with a questioning frown, wondering what was going on.\n\n*Yeah, I told them everything I said, and your response too,* Alyssa admitted with a smug grin, as he was buried under an avalanche of grateful girls, and smothered with loving kisses. He could hear her amusement as she added, *They were so scared during all that, they didn't know what was going on, so I thought I'd clarify what happened for everybody.*\n\n\"Okay, okay!\" he eventually cried out, \"I love you all, too!\"\n\nThey helped him up with more giggling, and he couldn't help but notice that they all seemed much more relaxed now, thoroughly distracted from their dreadful experience. He looked at Alyssa with newfound respect in his eyes. Her ability to read the girls' emotions, and carefully tend to their needs seemed to be growing on a daily basis. She gave him a gentle smile in return, compassion for the girls she'd adopted as her sisters shining in her eyes.\n\nHe looked around him, and announced, \"We should probably get some sleep. We'll be hitting the Dragon March soon, and we need to be well-rested just in case there's trouble.\" He added some conviction to his voice as he continued, \"You're all safe now. There's no chance we'll have a second nightmare again tonight, they just don't work that way.\"\n\nLooking immensely relieved, the girls settled back in bed around him. John was at the centre with Sakura and Alyssa in his arms, while Calara cuddled up behind the blonde. Alyssa gave him a quick kiss, then swapped places with the Latina, so Calara could be surrounded by both her lovers. That left Dana and Rachel pairing off as usual, while Jade hugged Irillith protectively. \n\n\"Good night girls, sleep well,\" John said quietly, and one by one they started dropping off. \n\nTired as he was, there was no rest for the wicked, so he reached out to Edraele, and said, *I'm really sorry for leaving you hanging like that when you were scared. I'm sure you were reading my thoughts, so you probably figured out what happened for yourself.*\n\n*There's no need to apologise. What you've just been through must have been dreadful,* Edraele replied, her voice throbbing with sympathy. She sounded emotional as she added, *Thank you for saving my little girl. I owe you so much...*\n\n*You don't owe me anything, Edraele,* he replied in a comforting voice. *I love Irillith, and I'm never going to let anything bad happen to her if I can help it.*\n\n*Thank you,* she replied simply, and he could feel the earnest gratitude in her voice.\n\nGlancing at the ship's chronometer, he saw that it was now one in the morning, and he frowned as he asked, *Isn't this incredibly late for you at the moment? I thought Valaden was on a different time pattern to standard Terran time?*\n\nShe hesitated a moment before replying, *Actually, I've adjusted my hours to fit standard Terran time. I wanted to make sure I was awake if you ever needed me for anything.*\n\nJohn was impressed by her dedication, and said, *You didn't have to do that, Edraele, I feel like I inconvenience you enough as it is!*\n\n*I wanted to be there for you, it's never an inconvenience,* she countered, sending him a telepathic smile.\n\nHe sent her a kiss in return, and said, *You're a good girl, and I'll show you how much I appreciate your support when I see you. I'm going to sleep soon, so I want you to get some rest now, okay?*\n\nEdraele sounded delighted by his reply, amused and happy whenever he called her \"girl\", considering the huge age gap between them. She immediately promised, *I'll go to sleep right now.*\n\nThe telepathic connection to her went quiet seconds later, and he knew she'd dropped off straight away. The compulsion to obey him was incredibly useful, but it also filled him with guilt every time the girls were forced to follow his commands, intentional or not. He was adamant that he was going to resolve that situation the first chance he got.\n\nWith Edraele now reassured, there was still one other person he needed to speak to until he could get some sleep. He closed his eyes and concentrated on pulling his mind from his body, peeling away his spirit form like a second skin. It was hard with the anvil-like presence dragging him back, but he managed it, tired as he was. As he sat up, he heard a cry of relief and a shining girl threw herself into his arms, knocking him off balance.\n\n\"I'm so sorry!\" Athena cried out as she hugged him fiercely. \n\nJohn rolled them away to the foot of the bed, as floating through everyone's bodies like some incorporeal ghost felt far too surreal. He wondered if his astral cord would get tangled with hers, but they seemed to pass through each other as if insubstantial, still linking him with his body, and Athena to Alyssa. He held her in his arms, and looked down at her scared face, then brushed his hand against her radiant cheek.\n\n\"We're all safe, everything's fine,\" he told her, in an attempt to calm the stricken psychic guide. \n\nShe shook her head, and gasped \"It all went so wrong! When you were pulled into the Astral Plane, I tried to intervene, but the leviathan cut me off. I was trapped here within Alyssa's mind!\"\n\n\"You know what happened while we were there? You heard us discussing it just now?\" he asked her, simply to check that he wouldn't have to repeat himself. He knew time was short, and he didn't want to waste it talking about the same things again.\n\nShe nodded, and her face crumpled as she replied, \"Adding Sakura was another near-fatal mistake! I've let you down so badly.\"\n\nRather than arguing with her to try and calm her down, John simply leaned in and gave her a gentle kiss. Her eyes flew open in surprise, the electricity tingling between them, and she responded slowly at first and then with more passion. When he was certain she wasn't torturing herself any longer, he pulled back so that he could look at her face more clearly. She stared back at him looking flushed, or at least it appeared that way, as difficult as it was to tell with her glowing ethereal face.\n\n\"You weren't to know,\" he told her firmly. \"Despite what you said to Rachel, you hadn't done anything like that before. How could you have known what was going to happen?\"\n\n\"But, I still cou-,\" Athena started to object again, so he leaned in and continued kissing her, silencing her self-recriminations. \n\nWhen he pulled back again, he smiled and said, \"I haven't got much time here. I'm exhausted and I can't resist the astral cord's pull for long. I'll happily spend it kissing you, though, if you keep blaming yourself.\"\n\nShe smiled at him affectionately and said, \"Alright, what do you want to talk about?\"\n\n\"When I tried to return to the Material Plane, that creature blocked me from returning, and I could feel how staggeringly powerful it was. What the hell is it? And can you tell me precisely what went wrong with the ward idea?\" he asked her, staring into her eyes.\n\nAthena was remorseful as she replied, \"I'm sorry, but I don't know what it is, exactly. I could feel its malevolent presence from this side too, so I spent some time studying it, looking for breaks in the barrier that would allow me to reach you. There was a certain familiarity to it, in a warped and terrifying way.\" Looking thoughtful now, she paused as she pondered his other question, then replied, \"I think the ward partially worked. Its existence prevented the creature from pulling you into its own Planar Domain, where you've experienced the worst parts of these nightmares before.\"\n\nJohn frowned in confusion, struggling to understand those strange concepts, and said, \"Sorry, I'm not following you. What's a 'Planar Domain'?\"\n\nShe smiled at him as she explained patiently, \"You were trapped in the raw Astral Plane, which can be formed into Planar Domains by powerful psychic entities. Think of it as a personalised ethereal home that someone with enough psychic strength can shape with their mind. As you were warded, it wasn't able to pull you into its Domain.\"\n\nHe nodded, and said, \"The ward did a hell of a job of protecting us. That monster gave up in the end and tried burrowing under it.\"\n\n\"That was down to the protective wards you built into the lattice, which was your improvement if you rememb-,\" she suddenly trailed off, and blinked in surprise. She stared at him intently, and asked, \"Did you say it tried to burrow -under- the shield?!\"\n\n\"That's right. The dome was impregnable, but it ended at the floor, so it used tentacles to drill-,\" he paused as her peals of laughter echoed around him, and Athena started shaking her head in disbelief. Feeling a little self-conscious he asked, \"What's so funny?\"\n\nShe rolled her eyes, and sounding immensely relieved she replied, \"I was such a fool...\" He leaned in to give her another kiss, assuming she was going to start blaming herself, but this set her off laughing again and she pushed him away. With a beaming grin, she added, \"I know why the ward failed.\"\n\n\"Really? Why was that?\" he asked her.\n\n\"We forgot to put in the floor,\" she said, still grinning at him.\n\nHe suddenly realised what she meant, and he joined her in her laughter, feeling an overwhelming surge of relief. Letting out a sigh, he asked, \"So if I make another ward, but make sure it has no holes this time, we won't get pulled into the Astral Plane again, right?\"\n\n\"Yes, exactly,\" she agreed, nodding with enthusiasm. \"That huge dome was overkill, we won't even need the others next time. We'll make a tightly-warded cocoon to protect you, and we won't even need to put them at risk.\"\n\n\"Good girl, well done figuring that out,\" he said, as equally impressed as he was relieved.\n\nShe smiled at him, and said, \"I'm just sorry we had to work it out the hard way. Poor Irillith keeps having to pay for my mistakes.\"\n\n\"I'll tell her you're sorry,\" he said playfully, then leaned in to give her another energy-charged kiss. \n\n\"I really am,\" she agreed when their lips parted, a flash of regret passing over her face. \n\nNow he had the answer he needed, it was getting harder to fight the relentless tug of his astral cord, and he gave her a resigned smile as he said, \"I need to return to my body, I can't fight it much longer.\"",
        "It was her turn to kiss him this time, and she said earnestly, \"Thank you for coming to speak to me, I really appreciate it. I feel so much better now that I know how to protect you properly.\"\n\nJohn wanted to reply, but the strength of the cord pulling at him was irresistible, and he was too tired to fight it any longer. She waved him goodbye as he was yanked backwards and forcibly reunited with his physical form. He wasn't fighting it this time, and the transition back to the Material Plane was much smoother, sufficiently so, that he didn't jolt Sakura or Calara awake on his return. Their soft warm bodies felt lovely against him, and he pulled them in closer as he glanced down at their serene faces. With his entire harem settled at last, he felt that he could relax into sleep, but a quiet voice disturbed the night.\n\n\"Goodnight John, sleep well. I'll let you know when we're approaching the Dragon March,\" Faye murmured, sitting across from him on the other side of the room in the big leather chair. \n\nHe craned his neck so he could look down the bed at her, feeling guilty for having forgotten her in the fear and shock of the evening's events. He smiled at the naked purple beauty, and made a beckoning motion with his head.\n\n\"Come up here, but keep quiet, okay?\" he asked her in a hushed voice.\n\nShe did as he asked, her gossamer wings lifting her over to the bed, where she landed, then dropped to her knees. She crawled towards him, while staring at him with her bewitching luminous eyes, and she looked so convincingly real, he was worried she might bump into the girls cuddled up against him, until he remembered she was a hologram. \n\nFaye spotted that flicker of concern, and she beamed at him in delight as she realised he'd been thoroughly fooled by her incredibly realistic avatar. \"Did you really forget I was a hologram?\" she asked him in a breathless whisper.\n\nHe nodded, and whispered back, \"If I didn't know, I'd swear you were a stunningly beautiful flesh-and-blood girl. You even look like you're breathing!\"\n\nShe knelt astride him, then made a show of inhaling and exhaling deeply, which did intriguing things to her mouth-watering breasts. \"I've been watching the girls to copy their mannerisms!\" she said in delight, forgetting to keep the noise down in her excitement. There were some sleepy murmurs from either side of them, and she looked guilty as she flashed him an apologetic smile.\n\nHe smiled at her, and whispered, \"We'll talk more soon, I promise. Everything's so crazy at the moment, but I want to help you adjust to your new form.\" His eyes glanced at the corridor outside the bedroom, and he added, \"I meant to ask you before, but I forgot. Would you like your own room like the rest of the girls? They don't really use them, but I think it's important they have their own private space if they need it.\"\n\nFaye gazed at him in surprise, deeply touched by the thoughtful gesture. She felt a shocking surge of emotions flood through her central processor, her greatly-enhanced system providing her with a riot of new sensory data to process, and she felt her holographic eyes welling with tears. Reaching up to touch them, she caught one, then brought it before her astonished eyes.\n\nJohn watched her in fascination, amazed by the level of detail in the Artificial Intelligence's projected image. A huge yawn caught him by surprise, and he did his best to stifle it, smiling at Faye in apology.\n\n\"I'll let you sleep, but I'd love to talk to you later,\" she whispered, brushing the tears away, and giving him a happy grin.\n\nHe nodded, then smiled as he watched her flutter away, and settle down in the chair again to watch over them. She gave him a cheeky wave, then mimed going to sleep by tilting her head to one side, and pressing two of her slender hands together as a pillow.\n\nTrying not to laugh, he whispered, \"Goodnight, Faye. Thanks for watching over us.\" He closed his eyes, and feeling strangely comforted by her omnipresent vigilance, dropped off to sleep within moments.\n\nFaye's Primary Avatar was there in the bedroom, savouring the chance to speak with John, and she smiled at him fondly as she settled in for the night, watching over him and the girls while they slept. Her Secondary Avatar was currently up on the Bridge, carefully monitoring the long-range sensors for any sign of hostile Kintark forces, in case any attempted to intercept them on their return to Terran Space. Tertiary was forecasting potential improvements to her Raptor flight program for high velocity flight, while Quaternary had started learning the flight characteristics of the Invictus, just in case they might need her to assist in an emergency.\n\nQuinary had begun a review of Faye's performance with the Pulse Cannons in the fight against the Kintark, and once that was complete, she intended to compare the results against Calara's infallible marksmanship to look for ways to improve her own gunnery skills. She had set Senary with the task of reviewing their Cyber Security, and had already identified the potential for radical new architectural enhancements, utilising the Progenitor tech from Nexus' server. Faye recalled that Sakura was eventually planning to improve the Invictus' physical security, so Septenary was trying to identify any weaknesses she could think of to run by their new expert. \n\nOctonary was reviewing the phonetics of Progenitor speech from Irillith's translation program, in an attempt to further understand the language. Then, if they should uncover any more files, she'd be able to better assist her wonderful Maliri Creator with analysing Progenitor data. Avatar Nonary was overseeing the maintenance robots, and constantly upgrading their programming to enhance their functionality for the new role they'd been assigned. Her 'boys' were caring for over six-hundred entranced Terran personnel they'd rescued from the Xen-Nuchek mine, and the robots were keeping them comfortable in their temporary accommodation in the Cargo Bay.\n\nAvatars ten through to twelve, or Denary through to Duodenary to use her names for each processing stream, were currently researching more eclectic subjects. Faye was currently exploring historical records about first contact with known alien species, and she was curious if any bio-mechanical species had been discovered. She let out a sigh of delight as she listened to Beethoven's Ninth Symphony, while settling in to reread an intriguing story by a man named Carlo Collodi.\n\n\"Goodnight, John,\" Faye whispered to him, her luminescent eyes brimming with gratitude.\n\n***\n\nHigh Prelate Zorlin was staring out of the reinforced glass-steel windows surrounding the Command Platform, lost amongst the spectacular vista before him. He was a legend amongst the Kintark, a veteran of dozens of intense battles, having personally snatched victory from the jaws of defeat on numerous occasions. However, just like the rest of his crew, he'd been badly shaken by the destruction of the battleship Merlan'tok, and the assassination of his close colleague, High Prelate Vraktrin. \n\nTo think that the Terran Federation possessed the capability to sneak a vessel this far into Kintark territory was frightening enough, but for that ship to possess enough firepower to obliterate a battlegroup of capital ships without taking any appreciable damage was a terrifying thought. \n\n\"The sssavage innovationsss of war; a truly terrible phenomenon to behold,\" he mused to himself. His expression turned grim as he added, \"Essspecially when you're on the receiving end.\"\n\nHis dark introspection was interrupted by one of his officers calling up to him from the sweeping Bridge Pit of the battlecarrier Breklan'tohok. The room was huge, with over two dozen Kintark officers manning stations in the recessed area, overlooked by the Command Platform that loomed above them.\n\n\"We're receiving word from the Leenar'tohok, High Prelate. Do you wisssh to take the call persssonally?\" the communications Sub-prelate asked, looking up at his commander with trepidation. The last thing the Comms Officer wanted to do was disturb their revered leader when he was preparing himself for the upcoming battle with the accursed Terrans.\n\nTurning towards him, Zorlin gave him an encouraging smile, revealing rows of sharp teeth, and replied, \"Of courssse, comrade, put them through.\" \n\nTapping a button on his command table, the High Prelate activated a suite of sound dampeners, which were designed to prevent the conversation from passing beyond the confines of the command platform. The holographic image of a female Kintark officer coalesced before him above the command table, and he immediately recognised High Prelate Grakira. \n\nGrakira was somewhat of a zealot, which Zorlin found slightly off-putting, but she was a ferocious ally in a fight; a quality sorely needed in this war. With a reputation for bold leadership, she had risen swiftly through the ranks to her current lofty heights. She had also been assigned one of the 'Tohok class battlecarriers, the biggest and mightiest vessels in the Kintark military, possessing swarms of strikecraft, and vastly more firepower than a battleship.\n\n\"Zorlin, my forcesss are approaching our ssstaging point, and will be in posssition in ssseventeen minutesss,\" Grakira announced, foregoing any preamble.\n\n\"Very good, Grakira,\" he replied, glancing back at the sector map. The Alpha Leonis system hung at its centre, four burning suns rotating around a deadly arena which would see the might of the Kintark Empire pitted against the Terran Federation in a climactic confrontation. Noting the position of his own forces on the huge holographic display, he continued, \"My flotilla hasss made good time. All isss proceeding according to plan.\"\n\nShe nodded, her scaled muzzle bobbing as she stared at him. Her black eyes met his own, and in a low hiss, she said, \"I've heard disssturbing rumoursss, Zorlin. There isss talk that the Terran Federation posssesss radically advanced technology, and that an experimental vesssel equipped with thisss tech isss roaming freely around our territory! Sssurely sssuch galling liesss must be Terran Federation black propaganda?\"\n\nZorlin stayed quiet for a moment, unsure how to respond to his colleague. He finally met her worried stare, and replied carefully, \"I've ssseen footage taken by vessselsss that sssurvived the catassstrophe in the Mar'Katrach nebula. The rumoursss are true, Grakira. Beware the vesssel known as the Invictusss. I recognised the configuration, and it'sss the very same cruissser resssponsssible for thossse dreadful eventsss in Iota-Leonisss. If anything, it isss far more potent a threat now.\"\n\nHe remembered watching the video footage from the nebula, beamed over to his ship by the fearful Prelate in command of the Invasion Fleet. The unerring precision with which scores of invasion craft had been neatly crippled, using only short bursts from ferociously powerful Beam Lasers, had been truly shocking to see. Even more perplexing had been why a Terran like the Lion, would choose to disable rather than destroy those ships and the many thousands of soldiers within. Zorlin didn't doubt for a moment that such a course of action was entirely within the Terran's means, but for someone who the Imperial Information Bureau had declared an evil war criminal, it was startling behaviour to observe. \n\n\"The Lion!\" Grakira gasped, sucking in her breath in alarm. \"I sssaw the Terran broadcassst celebrating that monster, but I asssumed they were exaggerated beyond all reassson.\"\n\n\"Talesss of hisss exploitsss are very much grounded in fact, comrade,\" Zorlin informed her confidently. He'd personally accompanied Grand Prelate Melkadian in reviewing highly classified Terran battle reports, which had been leaked after the Iota-Leonis debacle, by a spy placed within Federation High Command itself. \n\nGrakira looked deeply troubled as he validated the foulest of rumours, and she finally declared, \"We mussst ssstrike down the Lion, and sssnatch the sssecretsss from hisss ssship for the glory of the Empire!\"\n\nZorlin slowly shook his head, and replied, \"We musst tread carefully, Grakira. There isss too much at ssstake for recklesss actionsss.\"\n\nShe was about to object, but High Prelate Zorlin's calm demeanour born of decades of combat experience made her bite back her retort. Grakira bowed to him then, and said, \"I will heed your wissse counsssel, Zorlin. You are an inssspiration in thessse dark timesss.\"\n\n\"Asss isss your dedication to the Empire, Grakira,\" he replied, bowing to her in turn. \n\nShe bared her teeth, looking pleased by his compliment, and said to him, \"Let usss hope that Tamalaz the Fortunate isss sssmiling on usss thisss day.\"\n\n\"Indeed, comrade, let usss pray that isss the cassse,\" High Prelate Zorlin replied, his tone sombre. \n\n***\n\n\"Are you sure about this, Gabrielle?\" Commodore Eriko Sasaki's holographic image asked, her face etched with fear. \"You've seen the declaration from the Fleet Admiral for our entire Battlegroup; Clemency in exchange for immediate surrender... Maybe we should consider it? Buckingham seems to know all about our plans, and it's an incredible offer considering the penalty for treason!\"\n\nAdmiral Gabrielle Lynton gave her fellow conspirator a reassuring smile, and said, \"It's a bluff, Eriko. Buckingham knows we're about to spring our trap; the man's desperate, he knows he's doomed!\"\n\nHer words did little to mollify Sasaki though, and the older woman shook her head as she replied, \"I don't know, Gabrielle, we're taking a big risk trusting the Kintark. Are you sure they're going to show?\"\n\n\"There's no doubt in my mind,\" Lynton replied, her voice firm and full of confidence. \"Trust me, our allies will be there for this showdown. Crushing Buckingham's forces will be a crippling blow that the Terran Federation won't be able to recover from. The New Republic will be established within weeks!\"\n\nSasaki nodded half-heartedly, and she fixed Lynton with her dark-brown eyes as she asked quietly, \"What about everything else you promised? Are you certain he'll agree to go through with it?\"\n\nLynton gave the older Asian woman a sly smile, and replied, \"Eriko, once this is over, you'll have the body of a girl half your age.\" Her eyes sparkled, and she laughed as she added, \"You won't believe the -appetites- that have been awakened. Youth really is wasted on the young.\"\n\nSasaki squared her shoulders, and returned the smile with a hungry look in her eyes as she asked, \"What are your orders, Admiral?\"\n\nLynton smiled at her, and replied, \"We'll be holding position inside Terran Space to blockade the retreat from the invasion corridor. We'll prevent Buckingham from escaping, while the Kintark annihilate his forces!\"\n\nThere was a flicker of doubt in Sasaki's eyes as she replied, \"We'll be massively outgunned. There's no way we can hold off Buckingham's forces alone, if they ignore the Kintark, and focus on us.\"\n\nWith a wicked grin, Lynton said, \"Don't worry, we won't be alone. I've chosen the Alpha Leonis system to strike at Buckingham, and all our allies are converging on that location for this battle.\"\n\nSasaki nodded, looking reassured once more, and said, \"As you command, Admiral.\"\n\nLynton ended the call, and she slumped back in her chair, alone in her Ready Room. She rubbed her hand over her tired eyes, and let out a weary sigh. Her call with Sasaki was the eighth such conversation she'd had at this ungodly hour in the morning, cajoling the commanding officers in her fleet to further acts of treachery against the Terran Federation. She'd seduced all of them by a variety of means, from lofty talk of a New Republic for the idealistic, to baser pleasures for the more hedonistic amongst them, and she knew she could rely on all of them for their unbridled support.\n\nWhile she was in no doubt that they all were loyal to her, it was incredibly frustrating having to take time to convince them to go along with her plans, when there was a much easier way available. Not for the first time, she sorely wished her Master had simply enthralled all the female officers in her battlegroup. She'd offered to arrange for transfers so that every Captain in the fleet was a woman, with exactly that purpose in mind, so she'd been surprised when he'd refused her suggestion. \n\nHer mind wandered to her time aboard his ship, seeing those beautiful alien women obeying his every whim without a moment's hesitation. Gabrielle was unquestioningly obedient to him too, but the thought of having total control over the personnel under her Command was an intoxicating one, and she let out a wistful sigh as she imagined it. Thoughts of her Master made her think back to those blissful weeks they'd spent together, and she longed for the day when she could be reunited with him.\n\nIt had been only a chance encounter on shore leave that had brought them together. She was vacationing alone at one of the terraformed beach resorts in the Epsilon Canis Majoris system when she first set eyes on the incredible man who had radically changed the course of her life. She'd been sunning herself at an open air restaurant by one of the pristine beaches on Adhara Prime, savouring a fruity cocktail in the glorious sunshine, and enjoying the sights and sounds around her. Gabrielle had watched enviously as slender young women in bikinis cavorted in the crystal-clear sea, chased by their wonderfully muscular boyfriends, to the accompaniment of peals of laughter. \n\nIn her mid-fifties now, she had reached heady heights with her military career, becoming an Admiral at the young age of fifty-one. Gabrielle Lynton had thrown herself fully into her career, having little time or inclination towards romance, and had thus forgone the chance for a family. It was a decision she had been starting to regret, and having let herself go over the decades, she knew there was no chance of ever being with one of those bronzed hunks she'd seen chasing nubile girls through the waves.\n\nWhen this handsome, exotic man had suddenly introduced himself to her, she'd been captivated by him immediately. He seemed to exude an aura of otherworldly confidence that she found extraordinarily compelling, and when he sat at her table uninvited, the thought of objecting never even entered her mind. He'd given her his undivided attention from the start, and despite her attraction to him, she'd been more than a little wary of his avid interest. Her first thought was that he might be some kind of honey-trap by an ambitious corporation, who were looking to gain influence with a high-ranking military officer. \n\nSuch suspicions had faded away as she spoke to him at length, and she soon found herself hanging on his every word, the rest of the morning passing by in a blur. By some miracle he'd asked if he could return to her hotel suite with her, and she couldn't believe her luck when he'd turned out to be wonderfully dominant in the bedroom, ordering her to her knees to service his massive cock. Her days normally consisted of barking orders at servile junior officers, so to be able to relinquish all control like that was a delicious thrill, and she'd practically tripped over herself in her hurry to obey him.\n\nShe remembered wistfully how she'd extended her vacation, delaying her posting to the Dragon March so she could spend another week on her knees, receiving one bellyful of cum after another. Day after day, her weight had dropped off, her skin growing taut, young and firm, just like the giggling beauties she'd envied at the beach. She slipped her hand under her shirt, and ran it over her trim, toned abdomen, her fingers tracing the lean definition of her muscles. It had been several months since her Master had packed her stomach full with his seed, and every fibre of her being ached to be on her knees before him, worshipping his cock with her hungry mouth.",
        "Still, now wasn't the time to get despondent, not when a chance to be reunited with her Master was so close. In her last fleeting communication with him, he'd promised her a place at his side once her task was complete, and an opportunity to crush the bulk of the Terran fleet was so tantalisingly close. Gabrielle longed to speak to him again, to confirm that everything was proceeding according to plan, but she had to wait for him to contact her, and had no way of reaching out to him in return. \n\nPressing a button on the console built into her desk, the local Sector Map was projected in front of her, showing the dozens of stars that formed the broad stretch of territory known as the Dragon March. She had chosen the Regulus system for her ambush of the retreating Terran ships, feeling absolutely certain that Fleet Admiral Buckingham would be returning to Terran Space on the most direct route possible. Alpha Leonis lay directly along that path, and she'd primed the system in readiness to spring her trap.\n\nThe one truly unfortunate disruption to her plans, was the forced defection of Admiral Leonard Norwood and his Battlegroup of ships. If he had still been in place, the devastating blow of his forces defecting mid-battle would have guaranteed them victory. Gabrielle had done a thorough job of corrupting the obnoxious man, and while seducing him hadn't been entirely repellent, her tastes now ran to younger, more virile men. Her Master had ordered her to push Norwood along this defection route, although for the life of her, she hadn't been able to figure out precisely why. She knew better than to question her enigmatic Lord however, even over his extremely specific orders that a man named John Blake was not to be harmed in any way. \n\nShe hadn't paid this obscure order any real attention, until Admiral Lynette Devereux had started crowing about milking a John Blake for maximum PR value, after his shocking intervention in the Iota-Leonis system. Gabrielle had been fuming about the disruption of her plans to cripple Port Medea, which had taken weeks of careful planning with Norwood to arrange, but hearing that it was John Blake responsible had been like having a cold bucket of water dumped over her head. She'd watched the video footage of Devereux's award ceremony, her curiosity piqued, and she was astonished to note the similarities in appearance between John Blake and her Master. \n\nWith their pointed ears the two men were obviously of the same species, but what that was exactly, she had no idea. Her eyes had been riveted to the screen as she watched the TFNN interview with the \"The Lion of the Federation\", but it hadn't just been John she'd been fascinated to see. His crew of four \"jailbait cheerleaders\" as Leonard Norwood had described them, looked very familiar indeed, sharing the identical spectacular athletic figure she now enjoyed. Not only that, seeing them lined up together strongly reminded her of her Master's crew of alien girls, and she realised in a sudden moment of epiphany, she must be staring at none other than her Master's rival.\n\nWhen John Blake had appeared in the Dragon March a few days ago, she'd had to think quickly to try and avert his suspicions. She knew that one look at her would give the game away in an instant, so she'd exploited some battle damage to her ship, to concoct a story about damage to her video comms. Fortunately he'd bought her story, which meant that she'd been able to send him away on a mission that would lead to a hefty body count for the Kintark. She'd been particularly proud of that one, making her Master's enemy dance like a puppet as she pulled his strings. However his refusal to massacre the Kintark invasion troops had been puzzling and frustrating, thwarting her plan to further escalate tensions with a merciless bloodbath.\n\nIt seemed John Blake was just as unpredictable as her Master, and she was still amazed that he'd been able to avert the Nexus catastrophe. That was another of her plans that she'd put into motion months ago, subverting the Artificial Intelligence project for her own ends, as she followed her Master's meticulous instructions. Her natural reaction to that bit of news would have been fury at the wasted effort, but the fact that it was John Blake picking apart her Master's plans yet again, left her more than a little alarmed. \n\nHer Master had contacted her only a few hours after John Blake had departed for Kintark Space, and she'd dutifully reported the news about the Nexus disaster. She'd expected anger or at least irritation, but he just seemed... curious... about the whole affair. His unperturbed reaction was even more unsettling than the raging outburst that she'd been bracing herself for, and it disquieted her to realise she didn't know the man she'd dedicated her life to quite as well as she had originally thought.\n\nShe stared out of the window of her dreadnought, the \"Thor's Hammer\", and watched the stars drift by as they made their steady progress towards the Regulus system. They'd be arriving at Alpha Leonis in a couple of hours, Just as her Master had commanded, which would give her more than enough time to finalise preparations. Still, she couldn't help but feel a shiver of fear at the thought that the wild card, John Blake, was out there somewhere, seemingly intent on ruining all her carefully laid plans. \n\n***\n\n\"Good morning, John,\" a female voice whispered to him softly.\n\nHis eyes slowly drifted open, and he was vaguely aware of a pair of distinctly kissable lips above his, and a pair of big eyes gazing down at him. Sakura and Calara were still cuddled up next to him, his arms currently trapped by their welcome weight resting against him. The girl above him was quite delectable, and in his half-awake state he went with his default response, which was to kiss a lovely girl in bed with him. It therefore came as quite a shock when his lips felt no resistance at all, and he passed straight through the girl giving him his morning wake up call.\n\nFaye stared at him in shock, letting out a squeak of surprise as John leaned in for a kiss. His head drifted through her holographic image, her amazement leaving her paralysed until it was too late. It didn't hurt of course, but she still reeled from the knowledge that he'd just tried to kiss her, the corresponding data overload almost off the charts.\n\nFor his part, John's eyes went wide as he realised who it was floating above him, and he flushed with embarrassment as he blurted, \"Sorry, Faye! Looks like you caught me in a deep sleep. You know how I can't resist a beautiful girl.\"\n\nHis explanation did nothing to alleviate the data streams paralysing her system. In fact her bespoke programs were working at a frantic pace, archiving video feed and image playback for intensive scrutiny later. This was the first time a living creature had passed through her holographic form, so such an event would obviously need to be closely examined in slow motion, pausing at the point of contact. \n\nFaye could hardly wait!\n\n\"Morning,\" Alyssa murmured, sitting up and stretching. Her luscious mouth opened in a delicate yawn before she covered it politely with her hand, and asked, \"Is it time to get up already?\"\n\nThis snapped Faye out of her cognitive feedback loop, and she sat up in a purple flash, and replied, \"It's six-thirty, Alyssa. We'll be arriving at the border to Terran Space in twenty-nine minutes.\"\n\n\"Thanks, cutie pie,\" Alyssa said while grinning at her. She leaned over Calara, mashing her breasts against the Latina's shoulder as she planted a big kiss on John's lips. Her grin didn't fade for a moment as she teased him, *We must be neglecting you if you're turning to a hologram for kisses, no matter how adorable Faye is.*\n\nHe realised she'd started reading his thoughts the moment she awoke, and Alyssa obviously knew full-well what had just happened. Thinking that she was getting far too cheeky for her own good, he grabbed her on a whim, catching her entirely by surprise, and pulled her over Calara's coffee-coloured body into his arms. Alyssa let out a shriek of laughter as he started tickling her, and the raucous giggling soon had everyone wide awake.\n\n\"Your Progenitor Master orders you to tickle Alyssa!\" he announced imperiously to the girls, as his questing fingers found intriguing new ticklish spots. \n\n\"Fuck that! I'm your Matriarch, tickle him instead!\" she gasped, before doubling over with laughter again. \n\nUnder no compulsion to obey either of them, the girls sat there for a moment, grinning at each other, but unsure what to do. Then they joined in the boisterous melee, tickling fingers finding sensitive places on both John and Alyssa. The pair fought back, and accompanied by riotous laughter, the tickling went on for several minutes. Faye watched their fun from her chair, feeling a heady mix of joy and longing, before an amnesty was reached and everyone begged each other for mercy.\n\nAlyssa took the opportunity of a lull in hostilities to dart for safety at the foot of the bed, and she gracefully vaulted off the end, while panting for breath. Giving John a wild grin, her eyes darted to Sakura as she said, \"Come on girls, time for a shower. Our handsome Progenitor has important business to attend to.\"\n\nWith knowing smiles, the rest of the crew drifted into the bathroom after the playful blonde, blowing the couple kisses, and giving them friendly waves as they departed. Soon it was just John and Sakura left in bed, and they smiled at each other a little self-consciously. To ease the slightly awkward moment, John lay back on the bed, and opened his arms for her in invitation, one she wasted no time accepting.\n\n\"Did you sleep alright in the end?\" he asked her, brushing the silky black hair from her beautiful face.\n\nSakura turned to look at him incredulously, memories of unspeakable horrors flooding back to her, and she shivered as she replied, \"You mean after finding out that mind-numbing terrors like that actually exist? Not only that, but they can attack you in your sleep? Of course, I slept like a baby!\" \n\nSurprised by her outburst, he wasn't sure how to reply at first, and just gave her an apologetic frown as he said, \"I'm sorry. You never should have been exposed to that.\"\n\nAfter taking a deep breath and letting it out slowly, she paused for a moment before she continued, \"I'm sorry I snapped at you. But no, I didn't sleep well. I had more awful nightmares afterwards, but I guess they made a change from the ones about Shinatobe.\"\n\nHe pulled her close again, and said, \"I've burdened you with even more to deal with. If you want, I cou-...\" He let himself trail off then, and looked at her sheepishly.\n\n\"What were you going to say?\" she asked him, her expression curious.\n\n\"I was going to offer to mute the memories for you, to help deaden the fear,\" he replied, giving her a guilty smile. \"You probably think I'm obsessed with scrubbing away parts of your mind.\"\n\nSakura smiled at him, and brushed her hand through his hair as she said, \"No, I don't think that at all. I know you're just trying to help.\" She nodded then, making up her mind, as she added, \"I'll take you up on that offer, thank you.\"\n\nHe returned her smile, then arched an eyebrow at her as he glanced downwards. She followed his glance, and she blushed when she realised what he was hinting at. \n\n\"It's the way my powers work,\" he said with a helpless shrug.\n\nSakura's smile was bolder now, more confidence in her than he'd seen before as she said, \"It's alright, I don't mind that one bit!\"\n\nShe sat up and moved between his legs, while he raised himself up, and leaned back against the headboard. The hungry gleam in her eyes had his cock thickening at the thought of being surrounded by her flushed lips, and they both shared an eager grin. Sakura leaned in, her lips pursed as she planted a kiss on his throbbing crown. Her lips parted then, spreading wide to take him, and he slid deeper into her hot mouth with a sigh of contentment.\n\n\"You look gorgeous,\" he complimented her, as he brushed a stray lock of hair from her enchanting face.\n\nShe gave him a smouldering look with her smoky eyes, and pulled back slightly, taking his cock from her hot little mouth with a wet slurping sound. It looked she was going to say something in reply, and by the sudden blush, he was sure it was definitely going to be something worth hearing. She engulfed him again though, and eased him down her throat, inching forward until he was fully sheathed inside her. He felt a delicious thrill as she swallowed quite deliberately, muscles rippling along his length as she massaged him. \n\n\"There's no need to be shy with me. You can do, or say, anything you like,\" he told her with an encouraging smile. He chuckled as he added, \"You should hear the expletives that come out of Dana and Alyssa's mouths when they're turned on. Trust me, nothing you say is going to offend me.\"\n\nHe could see her lips turn up into a smile, difficult though it was with her lips stretched so wide around his girth. She stared into his eyes, and nodded slightly, letting him know that she'd heard him.\n\n\"Let me talk, your mouth's full anyway,\" he told her with an amused grin, enjoying the flare of arousal he saw in the look she shared with him. \"I want you to stroke your clit while you listen, though. I'm not going to fill your belly until you cum for me first, alright?\"\n\nSakura let out a low moan, which sent delightful vibrations along the length of his cock, and he grinned as he watched one of her hands snake underneath her. She shifted on the bed, spreading her thighs apart to make room for her nimble fingers. \n\n\"You're a good girl, aren't you?\" he muttered, as she bobbed her head in his lap. \"Wonderfully obedient, and eager to please.\"\n\nShe moaned a little louder this time, then pulled back a little so that she could work his shaft with smooth, sensuous strokes. \n\n\"God, that feels good,\" he sighed with delight, his fingers moving behind her head, until he was cradling her with both hands.\n\nHer fingers started moving faster now, working in time with the quickening rhythm of her sucking mouth, and using the moisture from her sopping pussy to glide over her clit. She began to whimper with arousal, her eager fingers, John's voice, and her stuffed throat all working together to heighten her pleasure.\n\n\"You're such a beautiful girl. You look perfect kneeling for me like this,\" he said, staring into her frantic almond eyes.\n\nSakura groaned with lust, a fierce hunger burning in the look she gave him. She seemed to be naturally submissive, but her confidence was building too, and the mix was a potent aphrodisiac. \n\nGiving her a knowing smile, he said confidently, \"It's alright to be hungry for my cum, all the other girls love it too. You do, don't you?\"\n\nShe nodded as best as she could, whimpering as she slid up and down his saliva-drenched cock, with only one thing on her mind. Her fingers were moving in a blur over her clit now, and her thighs shook as she teetered on the edge of release.\n\nJohn was getting close now himself, and he hissed, \"I can't wait to unload my balls down your throat. You looked so fucking hot yesterday, carrying a tummy-full of my sperm.\"\n\nSakura snorted through her nose and scrunched her eyes tightly closed, cumming hard as his voice tipped her over the edge into an incredible climax. He sank his cock right down her throat, and the thought that this stunning young woman craved nothing more than a full belly, was enough stimulation for him too. His shaft throbbed, while his quad flexed, sending long spurts of cum up his length and into the compliant girl waiting below him. His four balls had refilled overnight, so he had a nice healthy load to pump down her throat, and round out her waistline. \n\nHer rapidly-filling stomach expanded outwards, parting her thighs further as she provided a welcoming home for the hefty weight of his cum. Her almond eyes flashed open, and they were unable to blink as they stared at each other. John could almost feel the symbiotic relationship that Athena described to him earlier, and he knew his abilities had begun working on her to enhance and strengthen her mind and body the moment he'd started filling her belly.\n\nIt took some time to pump four pints of cum down her throat, and when he was finally done, he let out a happy sigh while stroking her silky raven hair. \"That was amazing,\" he said with a smile. \"I hope you didn't mind what I said to you?\"\n\nSakura let him ease out of her throat, cradling his softening length with her hand as he slipped from her lips. She ran her hand over her cum-stuffed abdomen, and gave him a sultry smile as she replied, \"I loved it. It was very exciting to hear your voice, I could hear you getting more turned on.\"\n\nThey lay down together again, with John spooned up behind her. He ran his fingers over the taut, golden-brown skin where she carried his load, and leaned in to kiss her shoulder. \"I want you to get some sleep while your body grows,\" he told her firmly. \"You won't be bothered by nightmares, I'll keep you safe from them.\"\n\nShe let out a gentle sigh, looking relaxed and happy, and said, \"Thank you for looking after me.\"\n\n\"Sleep well, beautiful,\" he whispered in her ear, then held her in his arms as she drifted off to sleep.\n\n*That was lovely,* Alyssa said to him, the moment Sakura had fallen asleep. Her voice was soft and inviting as she added, *Now get your ass in here, before we turn into prunes. We all want a cuddle while we soap you down.*\n\nHe grinned as he climbed out of bed, and went to join his nubile lovers in the shower.\n\n***\n\n\"There you go, Admiral,\" Lieutenant Scott said, as he handed over the steaming mug of coffee to his Commander. \"Just as you like it, black with two sugars.\"\n\n\"Good man, thank you,\" Admiral Edwin Caldwell replied, before taking a tentative sip from the piping-hot drink as he relaxed in his Command Chair.\n\nHe'd been expecting trouble from the Kintark as they'd raced headlong back towards the Dragon March, and he'd grown increasingly suspicious by the total lack of opposition as they retreated. Caldwell strongly suspected the Kintark would attempt to cut off the invasion corridor, but they'd been able to withdraw into Terran territory unopposed. Now they were safely back in the Dragon March, they were on a course for Port Medea in the Iota-Leonis system, where Fleet Admiral Buckingham had ordered that they consolidate their position. \n\nDespite Buckingham's astonishing offer of clemency, none of the traitor forces led by Admiral Lynton had accepted. Caldwell was amazed at their stubborn refusal, as the commuting of a death sentence to ten years hard labour was overwhelmingly generous given the circumstances. Treason headed the list of crimes demanding the death penalty, and in all his years of service, he'd never heard of exceptions granted for those found guilty.\n\nHe could understand why Buckingham had made that offer though, as the invasion armada had found itself in an incredibly precarious situation deep within Kintark territory. Neutralising a hostile enemy at your rear was of critical strategic importance, and Caldwell was sure that the clemency declaration would have achieved exactly that objective.\n\nStill, that moment of vulnerability had passed, and the Kintark would be hard-pressed to mount an invasion, once the Terran forces had settled in. Caldwell knew that reserve forces were awaiting them in the Dragon March, and the Kintark would never be able to mount an assault large enough to seriously threaten the Terran Federation. With that danger in the past, Buckingham could focus on hunting down the traitor forces, and once Lynton's battle group had been mopped up, they'd be able to focus their full attention on the troublesome Kintark Empire.\n\nCaldwell glanced at the Sector Map, and saw they were fast approaching Alpha Leonis, or at least as quickly as they could, with the slow-moving support vessels in tow. They had gathered up the logistics vessels from the Invasion Corridor, as they'd withdrawn from Kintark space, and they were now escorting an impressive fleet of munitions freighters and refuelling tankers. Caldwell felt a tremendous sense of relief to be back in Terran Space, the invasion aborted after that astonishing meeting with John Blake. He gazed off into the distance as he thought back on his dealings with the man.",
        "It had started months ago, when he'd been informed about Admiral Lynette Devereux's PR stunt with that award ceremony. He had initially assumed this was one of her manufactured schemes, with Lynette attempting to improve her position within the Admiralty. However, the resulting improvements to morale amongst the troops, and the bounce in High Command's approval ratings, were certainly not something to be sniffed at. The surge in public support had been of particular importance at the time, considering the relentless disasters and setbacks the Dragon March conflict had encountered up until then, offering scant opportunity for celebration. \n\nHearing plenty of talk about \"The Lion\" after the award ceremony, had made him curious about John Blake, and Edwin fully reviewed the Iota-Leonis battle reports. The reports were impressive to say the least. Apparently John had intervened to save invaluable Terran Federation assets in the system, while destroying significant numbers of Kintark forces, and even going so far as to capture an enemy carrier. It seemed that Commodore John Blake had fully earned his promotion, but other than be amazed at just how much a supposedly retired Marine Commander had been able to accomplish, Edwin had paid him no more mind, putting his success down to incredible luck.\n\nMonths later, war against the Kintark Empire had been declared, and Buckingham's invasion force had pushed deep into Kintark territory. Word had then reached them of a rogue AI fleet laying waste to the Sol system, while they were nearly a week away from being able to intervene. The Fleet Admiral had called in Edwin to discuss this shocking development, and then only half-an-hour later, a bewildering follow-up report by Admiral Lynette Devereux had announced the AI fleet had been smashed. She'd declared that John Blake had saved the day once again, and that she was promoting him to Rear Admiral.\n\nAfter that, Caldwell couldn't wait to meet John in person, and was delighted when just such an opportunity presented itself, right there on the Zeus. Upon meeting him, Edwin been tremendously impressed by the man, finding him unassuming and likeable, while possessing an air of confidence and authority that he found himself responding to instinctively. John's unpretentious manner had felt like a breath of fresh air, especially for someone who'd grown jaded with the blatant politicking amongst the senior officers. \n\nEdwin knew that John Blake deserved his promotion to Rear Admiral after everything he'd done to save Terra, but he could see why Lynette had leapt at the chance to use him in her inexhaustible quest for self-aggrandisement. Handsome and amiable, John was a PR dream, the kind of clean-cut hero who looked like he'd walked straight out of a holo-movie.\n\nThen of course there was the meeting with the Admiralty, where John dropped a number of incredible bombshells. The fact that Lynton was a traitor turned out to be practically an afterthought, compared to the revelation that followed shortly thereafter. \n\nHostile contact by a radically advanced alien species...\n\nIt was something that Terran Federation High Command had dreaded for centuries, with numerous contingency plans drawn up over the years, in case of just such an eventuality. To have a trusted source announce that not only did such a civilisation exist, but that it was actively working against the Terran Federation, was an utterly terrifying thought.\n\nWhen John had left the Zeus to return to his ship, senior Admiralty present in the invasion fleet had reconvened for an emergency meeting to discuss these shocking developments. Opinions varied radically in the approach they should take towards this potential threat, as well as how to handle John, now that he had revealed his true nature. After lengthy discussions, they'd finally made a decision, and had chosen to-.\n\n\"BWOOOP!\" \"BWOOOP!\" \"BWOOOP!\"\n\nThe klaxon warning them of an interdiction blared around the Bridge, jarring Admiral Caldwell from his introspection. The Retribution of Zeus began to tremble, the colossal fleet carrier shaking more violently by the second, as they were pulled out of hyper-warp. He didn't think there was a vessel capable of interdicting the fleet carrier, as gigantic as it was, and he stared at the Tactical Map searching frantically for the ship responsible.\n\nThe entire fleet had been pulled from hyper-warp, and hundreds of ships were neatly arrayed by battlegroup as they reeled from being dumped into Alpha Leonis, commonly known as the Regulus system. Buckingham's armada was made up of four separate task forces, each group led by one of the three dreadnoughts, with the massive fleet carrier at the centre of the formation. Fleet Admiral Vincent Buckingham had overall command of the Terran Forces, but Admiral Edwin Caldwell had operational command of the Zeus, the Terran Federation flagship, and its accompanying task force. Admirals Ricardo Santini, Carl Weber, and Jayanti Mishra, commanded the other three task forces from their dreadnoughts: The Sword of Sif, Odin's Thunderbolt, and Shiva the Destroyer respectively.\n\nThere was no sign of enemy ships, only the four suns of Regulus, dominated by the blue-white primary, which orbited a central point in the system. Whatever planets that might have attempted to form here, had been ripped asunder by the tremendous gravitational forces at work, and the system was awash with asteroid belts. \n\n\"What happened, Commander Garfield? I'm not seeing any hostile ships,\" Caldwell called out calmly to his Engineering Officer. \n\nThe swarthy, bearded engineer had narrowed his eyes, staring at the System Map as he tried to understand exactly why they had just been yanked from hyper-warp. His eyes went wide, and he looked up at the Command Podium in alarm as he gasped, \"Interdiction beacons! It's the only answer that makes any sense. They must be concealed in the asteroid belts!\"\n\n\"Kintark forces!\" the Zeus' Pilot yelped in alarm, staring at the vast number of ships appearing on the Tactical Map. \"They must have powered down and hid in the asteroids!\"\n\n\"There's scores more of them, Sir!\" Commander Milton, his XO, cried out while pointing to the opposite side of the system.\n\n\"How in the hell?\" Caldwell muttered under his breath, startled to see such a huge Kintark force inside Terran territory. \n\nThe answer came to him a moment later, as he saw more ships appearing on the Tactical Map, but these ones were Terran Federation spacecraft by their transponder codes. At their centre was a vessel he never for one moment thought he'd be facing, until that fateful meeting with John Blake days ago. It was the Thor's Hammer, the massive three-kilometre-long dreadnought commanded by the despicable traitor, Gabrielle Lynton.\n\n\"Fucking bitch!\" Caldwell swore vehemently, an uncharacteristic outburst from the normally calm and reserved man. He stabbed his finger down on the comm button on his console, opening an internal channel to Vincent Buckingham. The Fleet Admiral answered a couple of seconds later, the image of his startled face forming in front of Edwin in a swirl of pixels. \n\nBefore Buckingham could say a word, Edwin snapped, \"Lynton and the Kintark... it's a trap!\"\n\n***\n\nGabrielle Lynton had a smug smile on her face as she watched Buckingham's forces fall headlong into her ambush. \"I've got you now!\" she gloated, as the hidden Interdiction Beacons snared the vast Terran Fleet, and she turned to share a broad grin with her Executive Officer.\n\nShe'd waited with bated breath as the Terran Federation armada had cruised through the Regulus system, just as she'd predicted. Knowing Terran protocols as intimately as she did, Lynton knew that their navigators would travel close to the strong gravity wells in the system. As long as they plotted their course carefully, they could coast around the edges to create a slingshot effect, which would significantly increase their hyper-warp speed.\n\n\"That was amazing, Admiral!\" Commander Stephan Nichols said, shaking his head in admiration.\n\nLynton's eyes twinkled with excitement as she replied, \"Now, to close the jaws on our trap...\" \n\nShe pressed a button on her console, and the image of a composed-looking Kintark officer appeared in front of her. \"The Terran invasion force, delivered to you on a platter, High Prelate Zorlin,\" she said, bowing her head respectfully.\n\n\"My thanksss, Admiral Lynton,\" he replied, acknowledging her gesture with a slight incline of his blunt muzzle. \"We ssshall begin our attack immediately.\"\n\nHe ended the call, his scaled face disappearing from sight in a flash of green pixels. \n\n\"Shall I give the order for the battle group to engage?\" Commander Nichols asked her, turning in his seat and waiting expectantly for her reply.\n\n\"All in good time, Commander,\" Lynton replied as she settled back in her chair, a wicked smile twisting her sensuous mouth. \"All in good time...\"\n\n***\n\nJohn stepped out onto the Bridge of the Invictus, and the girls accompanying him fanned out to take their posts at their Stations. He walked up the steps to the Command Podium with Alyssa at his side, and she gave him a loving smile as she sat down in the Executive Officer's chair. John was going to sit down as well, but he found Faye waiting for him, lithe purple legs crossed demurely as she perched on his Command Console. \n\nHe reflexively found himself admiring her svelte, naked form before blinking and forcing himself to look into her eyes, where he found her watching him with fascination. \"Sorry, Faye,\" he said with a wry smile. \"You're a little distracting completely nude like that.\"\n\n\"You don't like looking at my new avatar?\" she asked him then, looking alarmed.\n\nAlyssa laughed, and replied, \"He likes it too much, gorgeous. Put on some clothes for the moment, so he can concentrate.\"\n\nFaye giggled then, fluttering her eyelashes at John coyly, and she paused to give her outfit some consideration. The luscious purple sprite reappeared in a diaphanous, figure-hugging dress that made a valiant attempt at covering her curves, while still revealing plenty of her shapely legs. \"Is that better?\" she asked, gazing at him with big luminous eyes.\n\nHe nodded, and gave her a smile as he replied, \"You still look delicious, but that's probably a more sensible ensemble while we're up on the Bridge.\" He raised an eyebrow as he added, \"What's our current status, Watch Commander?\"\n\nHer cute face looked adorable as she adopted a more serious expression, and replied earnestly, \"We just crossed over into Terran Space two minutes ago! There were no signs of Kintark forces on the final section of our journey.\"\n\n\"Excellent work, Faye. Thanks for seeing us safely home,\" he said, with an appreciative nod. \n\n\"Happy to help!\" she exclaimed, her face lighting up with a sparkling smile. \n\nLooking down at the Tactical Station next, he asked, \"Calara, which way would Buckingham's armada be headed?\"\n\nThe Latina had called up a video feed of Mateo, and was watching her brother as he slept down in the Cargo Bay. She tore her eyes away from the screen, then pondered John's question for a few seconds, before she replied, \"Port Medea in the Iota-Leonis system would be the most logical destination. There are extensive support facilities there: fuel, ordnance, maintenance, and medical, so it would make sense to use that as the staging ground for further operations in the Dragon March.\"\n\nHe nodded to her in gratitude, then smiled at the Nymph piloting the Invictus as he said, \"Jade, set a new course for Iota-Leonis, please.\"\n\n\"Sure thing, John,\" the green-skinned alien girl replied over her shoulder, her slender hands dancing over the console as she plotted out a new course.\n\nHe turned to look at Alyssa next, and she smiled at him as she responded to his question before he could ask it.\n\n\"Assuming that Buckingham's forces took the most direct route back to Terran Space, they still have a slight lead on us,\" she informed him helpfully. Alyssa had already calculated the optimal hyper-warp velocities and travel times for the Terran Forces, and she continued, \"We went on quite a diversion rescuing the prisoners from Xen-Nuchek, so we won't catch up to Buckingham's Fleet for at least another twenty-seven minutes.\" \n\nPrompted by mention of the hundreds of rescued Terran personnel being housed in their Cargo Bay, John turned to look at Faye again as he asked, \"Everything alright with our guests?\"\n\nThe AI nodded, and replied, \"They slept peacefully in the makeshift cots we set up for them. My boys are waiting for them to start waking up, then they'll serve breakfast.\" Smiling at their tawny-haired doctor, she added, \"They're responding well to your treatment, Rachel. I've observed a seventeen-percent reduction in breathing irregularities amongst the most badly affected.\"\n\nRachel was delighted with the status of her patients, and she replied, \"That's wonderful news! The rates of cellular regeneration have slightly exceeded my projections!\"\n\nCalara turned in her chair and asked, \"Will they be back to normal now?\" She looked worried as she added, \"Mateo barely recognised me yesterday.\"\n\n\"Tamolith's pheromones should wear off by about midday,\" Rachel replied, her tone soothing. She smiled as she continued, \"His memory of events might be a bit blurry, but other than that, he'll be fine. There won't be any long-term side-effects.\"\n\nJohn nodded thoughtfully, and said, \"It might be easier for us to ferry these people directly to Port Medea. I'm sure the Terran Federation doctors will want to give them a check-up.\"\n\n\"That makes sense,\" Rachel agreed, recalling her previous post at the starbase. \"The medical facilities will be on a much larger scale than anything Buckingham's fleet has available. They'll be able to accommodate over six-hundred patients without being overwhelmed.\"\n\nHe smiled at her as he said, \"It sounds like you've already done the hard work for them.\"\n\n\"John, I'm picking something up on the long range sensors,\" Jade called out to him, sounding worried. \"It doesn't feel right...\"\n\nHe turned to look quizzically at the Nymph who was staring at the Sector Map, and asked, \"What's the problem? Aren't we just picking up Buckingham's forces?\"\n\n\"Oh my God!\" Calara gasped in shock, as hundreds of sensor contacts began rapidly flooding the Sector Map.\n\nRachel interjected, \"I'm picking up a massive amount of Terran comms.\" \n\n\"What's going on?\" Dana asked, feeling a rising sense of dread as she stared at the holographic map.\n\n\"Those ships aren't travelling in hyper-warp! The Kintark have ambushed Buckingham!\" Calara explained, having immediately recognised the subtle distinctions in the sensor signals that identified Kintark vessels. The Latina turned in her seat, and added, \"It's a full scale battle, and my dad's caught up in it!\"\n\nJohn met her worried gaze, and said in an authoritative voice, \"I need objective analysis, Commander. Give me the full picture so we know what we're up against.\"\n\nCalara realised immediately that he was trying to calm her down by appealing to her military professionalism, but she had no intention of succumbing to panic. Those months spent training with John in their dojo had helped give her a keen sense of focus, and she sprang into action with a determined look in her eyes. The view from her Tactical Chair wasn't good enough, so she leapt from her seat and dashed to the centre of the Bridge. \n\nGlancing at the redhead sitting at the Engineering Station, she ordered, \"Dana, increase magnification, I need to see all contacts in the system.\" Turning to their Maliri IntOps Officer next, she continued, \"Irillith, patch us into the Terran Federation secure Tactical Network. We'll be able to share sensor data with all Terran vessels in the system.\"\n\nIrillith gave her a brief nod, and her fingers began tapping out line after line of commands as she followed Calara's instructions. Using the powerful comms array on the Invictus, she used John's Admiralty level access to blaze her way into the highly secure data streams. Her violet eyes flickered through the categories, and she said, \"There's huge amounts of data here... Do you just want the ships?\"\n\n\"Start with the ships, then layer it all on,\" Calara replied, clearing her mind and breathing deeply. \"I want to see everything.\"\n\nWhile Dana and Irillith rushed to comply with Calara's orders, Rachel said, \"I'm confirming one active fleet-level command net, and four battlegroup command nets. It's the same comm channel structure Buckingham had in the Delta-Draconis system.\"\n\nJohn leaned forward in his chair to watch the Tactical Map for the Regulus System, desperate for any new information about exactly what they were facing. While Irillith was working to access the secure Tactical Network, the system was initially populated with a bewildering number of sensor contacts, as Dana displayed all the large objects they were detecting with their long-range sensors. There were too many to really tell what was happening, other than that there seemed to be several distinct battle groups of ships converging on one another.\n\nWhen Irillith started populating the Tactical Map with detailed ship transponder data, the indistinct sensor contacts were replaced with Terran and Kintark ships by the hundreds. He nodded as he recognised the grey titanium hulls of Terran ships, and the shimmering green of Kintark armour plating on the opposing forces, then tried to figure out exactly what was happening in the Alpha-Leonis system. Irillith began layering on more data, showing missile trails, then debris fields, lurid green plasma salvos and throbbing orange laser beams. \n\nSoon the Tactical Map was a riot of colour and movement, with a surging mass of ships locked in a savage battle for survival. Even though he knew the stakes involved, and the vast numbers of personnel manning those vessels, the battle looked more like a swarm of angry grey hornets fighting a plague of seething green locusts. He gave up trying to make sense of it, and then watched Calara instead.\n\nShe had her head tilted back and was staring intently at the tangled weave of visual data. Her eyes flickered from side to side, tracking data with movements so fast, John had no idea what she was staring at. He had the distinct impression she seemed to be -absorbing- the entire sprawling battle at once, and he shook his head in wonder as he watched the remarkable girl. Glancing to his side at Alyssa, he found her staring at her lover with fascination, enraptured by the Latina who went about her work with supernatural intensity. Calara turned to him then, and her voice was strong and unwavering as she said, \"Let me summarise the battle for you.\"\n\n***\n\nAdmiral Caldwell grimaced as he saw the Helios, a Distinction class battleship, on the receiving end of a volley of plasma missiles launched by a brace of Kintark cruisers. The Lizardmen had been focusing fire on the bigger Terran capital ships, and the Helios had been the first of the ships in his task force to lose its shields. The armour held strong, but the starboard side of the huge vessel was swathed in unnatural green flames, which left ugly blackened scars on the grey Titanium hull.\n\nWith a touch of his finger over the representation of the Helios in his holographic battle group interface, he was put in instant contact with the damaged ship. \"Commodore Obeng, pull back behind your cruiser screen. Try to draw them after you,\" he ordered, in a calm but firm voice.\n\n\"Acknowledged, Admiral,\" the steadfast officer replied, and immediately began to execute Caldwell's orders.\n\nConfident that the immediate threat to his forces had been mitigated, Caldwell glanced at the images of his fellow Admirals in his Command Overview. Santini, Mishra, and Weber had just received their orders from Fleet Admiral Buckingham, but the temperamental Ricardo Santini had not been impressed by his assignment.",
        "\"Let me go after Lynton!\" he urged the Fleet Admiral. \"If my forces get bogged down with the Kintark, she'll slip away before we can neutralise the interdiction beacons!\"\n\nBuckingham shook his head, his face stern as he said, \"Lynton's traitors haven't engaged yet. We need to address the immediate threat posed by the Kintark forces.\"\n\n\"As you command, Sir,\" Santini replied, somewhat petulantly.\n\nRelative to the orbital plane of the Regulus system's largest sun, the Kintark were hitting the Terran fleet from both above and below. There were at least a hundred major vessels per Kintark attack group, and that didn't include their picket screen of destroyers, or the waves of strike craft. The Lizardmen's cruisers and battleships were striking at multiple locations along the Terran lines, but seemed to be holding back from a close range engagement. Caldwell knew instinctively that they were probing for weaknesses, and the Terran ships had responded to Buckingham's clear and decisive directions, forming battle formations to exchange barrages at extreme range.\n\nFollowing Buckingham's orders, Admiral Weber and Admiral Mishra were positioning their forces to launch a counter strike to overwhelm and crush the lower Kintark group. Once those assailants had been smashed, they'd regroup and then converge on the second of the Kintark positions. Caldwell's force, spearheaded by \"The Retribution of Zeus\", was going to weather the storm from the upper Kintark group, while Santini was tasked with protecting the fleet of support ships.\n\nCaldwell tapped out a long series of commands on his battle group interface, assigning new positions to each squadron of his ships. There was no hesitation from the Terran ships as they manoeuvred into their formations, his elite forces gliding smoothly through space as they responded to his orders. \n\nBuckingham's plan was good, and with a little luck, they'd be able to turn this ambush back against their attackers. Edwin walked the Bridge in a self-assured manner, talking calmly to individual officers, and allowing himself a small, confident smile during those exchanges. He understood that the boost to morale this generated would filter across the fleet, his Bridge Crew providing a fine example of calm professionalism to any personnel that interacted with them. He turned to look at the Tactical Map once again, and it appeared that Lynton might have inadvertently gifted them with an opportunity for a devastating victory over the Kintark Empire.\n\n***\n\nWalking around his Command Platform at a slow pace, High Prelate Zorlin studied the unfolding battle with unblinking eyes. So far, the Terrans had not made any glaring errors that he could capitalise on, and he waited patiently, knowing just such an eventuality would soon present itself.\n\n\"High Prelate, we're being hailed by the Leenar'tohok again,\" his communications Sub-Prelate called to him, a slight note of exasperation appearing in his raised voice.\n\n\"Thank you, comrade. Pleassse put her through,\" Zorlin replied, glancing at the lower formation of Kintark ships in the Tactical hologram.\n\nGrakira's forces were comfortably holding their own in the current stalemate, the plasma fire from her ships giving as good as they were receiving from the Terran beam attacks. He suspected he knew the purpose of her call, guessing that the female Kintark leader's patience was running out.\n\n\"My forcesss are eager to take the fight to the Terransss!\" she blurted out as soon as her image appeared. \"Are you ready yet, Zorlin?\"\n\nHe shook his head firmly, and replied, \"Not yet, Grakira. I would ssstrongly advissse caution until we can exploit a vulnerability in their linesss. The Terran forcesss ssshould not be underessstimated.\"\n\nShe ground her sharp teeth together in frustration, but Grakira was sensible enough to defer to his greater experience. Visibly calming herself, she replied, \"It would be foolisssh to ignore your counsssel, Zorlin. I'd advissse hassste though, we're ssstill in Terran territory, and the longer the battle, the more chance ressserve forcesss will be able to intervene.\"\n\n\"Wissse wordsss indeed, Grakira. Fear not, we ssshall find our moment sssoon enough,\" he replied, meeting her questioning gaze.\n\nThey bowed to each other, and Grakira ended the call, pacified once more.\n\n***\n\n\"So they're looking to destroy the Kintark piecemeal?\" John asked the Latina, darting a glance at the Tactical Map, amazed that she was able to ascertain fleet strategy amongst that riot of shapes and colours.\n\nShe nodded, quite certain of herself as she replied, \"Definitely. Buckingham's positioned two battle groups to hit the lower force of Kintark. They'll begin their counter-offensive shortly.\"\n\nJohn leaned back in his Command Chair as he mulled over the best course of action. He was strongly conflicted in his choice, feeling an obligation towards the Terran Federation, but having no desire to recklessly charge into the middle of a major battle. The Invictus was a tremendously powerful ship, but even she wouldn't last long against that terrifying concentration of Kintark firepower, and he wasn't willing to put the girls at risk if he could help it.\n\nLooking into Calara's brown eyes, he asked, \"Where's your father's ship? Is he in any immediate danger?\"\n\nShe shook her head, and pointed towards a large cluster of ships as she replied, \"The Damocles is with what appears to be a reserve force, and they're protecting support vessels in the centre of the flotilla.\" The Latina's relieved smile ended her dispassionate composure as she added, \"His ship hasn't taken any damage. He's safe.\"\n\n\"OK, that's great news,\" he noted, sharing her smile while staring at the Tactical Map again. Glancing at Alyssa, he asked, \"How far out are we?\" \n\n\"Thirteen minutes. We'll catch up much faster, now that Buckingham isn't going anywhere,\" she replied, bringing up the Sector Map above her console, displaying the glowing blue line that mapped their path through the stars. Pointing out their approach vector, she continued, \"On our current course, we'll arrive at the rear of the Terran forces.\"\n\n\"Alright, we'll maintain our existing heading for the moment,\" John stated, turning to look at the Tactical Map again. A task force of Terran Federation ships some distance from the battle caught his eye, and he frowned as he added, \"Those Terran vessels seem to be hanging back and waiting for something. Are they the traitor forces?\"\n\n\"Yes, that's right,\" Calara replied, confirming his suspicions. She looked grim as she continued, \"That massive ship is Lynton's dreadnought, the 'Thor's Hammer'.\"\n\nAlyssa shot him a meaningful glance as she said, \"The Tyrenium we sold to Charles helped build that ship.\" \n\nDana shared her concern, as she added in a hushed voice, \"Yeah, they used it to make the Singularity Drivers...\"\n\n***\n\nGabrielle Lynton watched the repositioning of the Terran fleets, as the capital ships on both sides exchanged withering broadsides. She was a skilled strategist in her own right, and it didn't take her long to realise exactly what Fleet Admiral Buckingham was planning.\n\n\"Buckingham's repositioning his forces for a counterassault,\" she observed, speaking to the man seated beside her in his Executive Officer's chair.\n\nCommander Nichols nodded, and his eyes darted to her console as he asked, \"Are you going to warn the Kintark? Their second flotilla will get mauled if they aren't prepared for it.\"\n\nHer hand flicked over to the comm interface, and she swiped through the list of contacts until she found the one she was looking for. \"No, our allies can take care of themselves,\" she replied with an enigmatic smile. \"There's someone else I need to speak with.\"\n\nAs she initiated the call, a message appeared on her communications panel, displaying \"Secure Transmission,\" in bold red lettering. It took a few seconds to connect, and when it did, the startled face of Admiral Ricardo Santini appeared on the screen.\n\n\"Hello, Ricardo. You're looking well,\" she said to him, her tone playful.\n\nHis face flushed with anger as he snarled, \"You two-faced, lying bitch! How dare you show your face after what you've done!\"\n\nShe laughed at him dismissively, and said, \"Ah Ricky, you always were a bit slow on the uptake. You never suspected for a moment, did you?\" \n\nRicardo got redder as his temper flared, and he growled, \"You're a deceitful snake. You fooled everyone.\"\n\nGiving him a knowing grin, she trailed her fingers over her mouth watering cleavage as she teased him, \"Or maybe you were always thinking with your little head? Perhaps that's why you were so easy to dupe. You never could take your eyes off my body...\"\n\nHe flushed scarlet now, but it was with embarrassment this time. He protested a little too much as he snapped, \"You think I'd be interested in you?! Don't flatter yourself, you fucking traitor!\"\n\nGabrielle leaned forward, giving him a tantalising view down her low-cut blouse, and she purred, \"It's alright, Ricky, I know why you're so angry. You're just jealous I seduced Leonard instead of you...\" She made eye contact with him, and added, \"Do you know why I chose him?\"\n\nSantini didn't reply, as he did his best to keep his eyes from straying from her face. Although he didn't admit it, why she'd chosen that stuffy bore, Leonard Norwood, was something he'd been curious about.\n\nHer lip curled up into a satisfied smile when she saw his gaze flicker to her chest, and she said airily, \"I did some asking around; spoke to that hot little Lieutenant Commander you had that affair with.\" She sneered then, crooking her little finger and wiggling it at him as she mocked him, \"She said you weren't really up to the job!\"\n\n\"Fuck you! You fucking whore!\" Santini blazed, furious now. \"You're fucking dead!\"\n\n\"You haven't got the balls either!\" she replied, laughing contemptuously. \"Be a good dog and watch over the gas tankers. Buckingham knew you were too much of an imbecile to handle anything trickier than that!\"\n\nSantini screamed with rage, but before he could yell any more profanities at her, Gabrielle blew him a kiss, and cut off the comm channel abruptly. \n\n\"He's not going to fall for that, surely?\" Commander Nichols asked her, shaking his head in disbelief.\n\nShe turned to glance at her second-in-command, and said calmly, \"He's got a hell of a temper. You'd be amazed how irrational he gets if you wind him up enough.\"\n\n***\n\n\"There it isss,\" High Prelate Zorlin said in a hushed voice, allowing himself a small smile of satisfaction as the opportunity he'd been waiting for presented itself. \n\nHe moved quickly now, striding over to the edge of the Command Platform, and grasped the surrounding balcony with both scaled hands. Staring at his communications Sub-Prelate, he announced, \"Contact the Leenar'tohok, comrade, tell them it isss time.\"\n\n\"I will do ssso immediately, High Prelate,\" the comms officer replied, turning to contact the command vessel for the second Kintark fleet.\n\nZorlin could well imagine the overjoyed reaction that message would receive from High Prelate Grakira, knowing that she was eager to sink her talons into the Terrans. Leaning forward and gazing around the Bridge Pit, he began to snap off a series of sharp orders.\n\n\"Order the fleet to clossse to medium range while maintaining formation, and inform them to watch for my target desssignationsss.\"\n\n\"Launch our firssst wave of fightersss, and prep the sssecond wave for immediate launch.\"\n\n\"Contact the ressservesss, and order them to prepare for an imminent ssstrike on my command.\"\n\nStanding upright once more, he surveyed his crew who moved in a flurry of activity as they rushed to obey his orders. \n\n***\n\nEdwin Caldwell was staring intently at his battle group interface as he rotated out ships from the front lines, allowing them time to recover their shields. Duelling at extreme range like this reduced the accuracy of incoming fire, greatly extending the durability of the vessels exchanging barrages. He'd lost one cruiser and three destroyers so far, in exchange for destroying one Kintark cruiser, and savaging a second. As his intention was to hold out for as long as possible, until Weber and Mishra had made their move, this low-impact sniping was playing directly into Terran hands.\n\n\"Admiral! Something's happening with Task Force four!\" Commander Milton blurted out in shock.\n\nEdwin glanced across at the Tactical Map, surprised by how unsettled his XO's sounded. One look at the holographic display told him exactly why.\n\n\"That fucking idiot!\" he gasped, appalled by Admiral Santini's blatant insubordination.\n\nSantini's dreadnought, The Sword of Sif, had peeled away from the defensive positions around the support fleet, taking two-thirds of that task force with it. The errant Admiral was leading his battleships, half his cruisers and his picket screen of destroyers and corvettes, on a beeline towards Lynton's group of traitors. All that was left was just over a dozen cruisers, along with the light and medium carriers, which left a gaping hole in their defensive lines.\n\n\"Kintark are launching strike craft!\" his Pilot warned him, his voice trembling slightly.\n\nEdwin's gaze shifted to the two Kintark attack groups, and saw swarms of new contacts pouring from their carriers. These much smaller vessels formed up into attack wings, then raced towards the Terran lines.\n\nGlancing at his XO, Caldwell said, \"Get us ready, they'll be attacking in moments. I need to warn Buckingham.\"\n\nGiving him a curt nod, Commander Milton began barking orders, \"Bring the Gauss Cannons, and Laser Cannons online, and launch all fighters! Bring the Zeus about to heading one-nine-five, we need to help cover the support vessels...\"\n\nTuning him out, along with the frenzied activity on the Bridge, Caldwell contacted Buckingham, who answered him a second later, saying, \"What is it Edwin?\"\n\n\"We have a problem. It's Santini...\" he replied, his voice taut with anxiety.\n\nThe Fleet Admiral glanced away for a second, then his features contorted in anger as he snapped, \"What's that fool think he's doing?!\"\n\n***\n\nLieutenant Ryan Murphy grinned at his Commander as his flight group sprinted to their Rapier-class fighters. \"Woohoo!\" the young man yelled, cheering exuberantly. \"It's time to kick some dragon ass!\"\n\n\"Rein it in, Leprechaun,\" Commander Angela Summers replied, her voice stern and disapproving as she ran to her own fighter, but her answering grin was nearly as wide as his.\n\nMurphy laughed as he climbed up the steps to his fighter, and pressed two fingers from his left hand to his lips, before placing them on the picture of a naked woman daubed on the side of his ship. The voluptuous redhead was using an oversized shamrock to protect her modesty, with \"Luck o' the Irish,\" emblazoned in emerald text beneath her. \n\nGlancing to his right, he saw his Commanding Officer climb into her fighter, the cockpit swinging closed behind her. Painted on the side of her ship was a pious winged woman dressed in white robes, and as the cockpit lowered into place, the halo painted on the rim completed the angel. All around him the rest of Squadron Two-Hundred-and-Sixty were prepping for launch, and he sank into his seat and pressed the button to close the reinforced canopy.\n\n\"We have clearance for immediate launch,\" Angel's voice sounded out over the comm. \"Go Two-Sixty!\"\n\nThe engines had already been warmed up by the Hangar crew, and Murphy had a wild grin on his face as he stabbed his thumb down on the release button. The launch runway thrummed to life, and the magnetic rails grasped his fighter in an invisible grip, then flung him down the brightly illuminated tunnel. \n\n\"Fuck yeah!\" Murphy exclaimed as the massive acceleration sank him deeply into his seat, and then moments later, he was blasting clear of the fleet carrier.\n\nWith a glance over his right shoulder, he watched the colossal grey hull of the Zeus silhouetted against one of the Regulus suns, until it disappeared behind him as he scrambled to the rally point.\n\n\"All right gentlemen, form up into our attack wing,\" Angel said, drawing his attention back to the task at hand. \n\n\"Affirmative, Commander,\" Binary answered, his monotonous robotic delivery having earned him his callsign.\n\n\"You got it, Angel,\" Snakebite called in.\n\n\"I'm there, baby,\" Romeo crooned in his smooth baritone.\n\nMurphy grinned, and said in a fake lilting brogue, \"I'm on me way darlin'.\"\n\nHis Tactical View showed the nearby fighters as green gems, their IFF transponder codes tagging them as friendlies. The fighters in his wing were highlighted with an orange border, making it easy to pick them out amongst the scores of fighter groups. He rolled his ship, then pulled back on the flightstick, bringing him around to flank Angel's fighter before falling back into his position on her left wing. Murphy occupied the middle slot on the left of the five-ship v-formation, and he focused on maintaining his spacing with his Commander, knowing that Snakebite would adjust to his manoeuvres on the outer edge of the left wing.\n\nThe Rapiers synced up with each other as their battle computers established group cohesion. To Murphy's right, four images appeared, showing the faces of the pilots in his fighter wing. He knew that his smiling face would now appear in their cockpits too, and he gave the cockpit-cam a playful wink.\n\nAngel guided them to their designated position, weaving around friendly vessels as they raced through the Terran Federation battle group. They pulled up to clear the long hull of a Terran destroyer, then swept around behind a corvette group, while carefully avoiding their engine wash. The huge attack group of fighters that had swarmed out of the fleet carrier were being repositioned by flight control to engage the Kintark fighters, which were racing towards the Terran battle lines.\n\nMurphy's heart hammered in his chest, the rush of pre-battle adrenaline making him feel gloriously alive. He tried to stifle the wild grin on his face, but failed completely; this was his first major battle, and he couldn't wait to go up against the Kintark!\n\n***\n\n\"Eight minutes until we hit the Regulus system,\" Alyssa warned everyone on the Bridge.\n\nJohn nodded, and replied, \"Everyone clear on the plan? We defend the Damocles, and we'll hunt down Lynton when the dust settles.\"\n\nCalara shot him a look brimming with gratitude, and simply said, \"Thank you, John.\"\n\nHe smiled at her, and replied, \"I made you a promise, and it's one I intend to keep.\"\n\nTurning to look at the Tactical Map, he still couldn't help wondering if he was making a dreadful mistake in bringing them anywhere near this battlefield. As he'd said though, he'd made a promise to Calara, to help keep her family safe. Jack Fernandez was the Captain of the Damocles, and commanding a Terran cruiser with hundreds of hostile Kintark vessels bearing down on them, was about as far from safe as her father could get.\n\nNow that Calara had formed a precise picture of the forces arrayed in the system, she'd started removing overlays from the Tactical Map, making it much clearer to see the ships fighting on either side. She highlighted opposing forces in bands of colour, which made it far easier for John to follow exactly what was happening. She was back in her Tactical Chair now, hands on the gunnery controls, as she powered up the Invictus' weapons.\n\n\"I thought two of the Terran battle groups were going to attack the lower Kintark force?\" Jade asked, sounding puzzled.\n\nCalara nodded, and replied, \"Yes, I'm sure of it. Fleet Admiral Buckingham was carefully preparing a Huang riposte.\" She looked thoughtful as she added, \"Although luring the Kintark in with bait, then hitting them with a counterstroke would yield better results against these odds.\"\n\nThe Nymph frowned, then glanced at the brunette as she said hesitantly, \"It looks like he changed his mind.\"",
        "The Latina's head whirled around to take another look at the Tactical Map, while muttering, \"That's impossible, changing formations at the last moment would be-.\" She suddenly looked aghast, as she cried out, \"No! That's insane!\"\n\n\"What is it?!\" John asked her, alarmed by her look of stunned disbelief.\n\n\"They just sent a battlegroup after Lynton! If they continue their counterassault against the Kintark now, the remaining battlegroup will get slaughtered,\" she gasped, staring at John in dumbfounded horror. \"They've just thrown away their best chance at victory!\"\n\n***\n\nHigh Prelate Zorlin nodded with satisfaction as the Kintark capital ships under his command increased their speed, closing the distance with the enemy. The first wave of fighters had cleared his battlecarrier, the Breklan'tohok, and after assembling into their formations, they began their attack run on the Terran's protective screen of fighters. His decision to bring most of the Empire's carrier fleet to this engagement should prove decisive, giving his forces overwhelming numerical superiority. Eliminating the Terran fighter screen and establishing strike craft supremacy was the first, and most critical step, in his plan to bring an end to the Terran menace. \n\nThe Kintark heavy fighters favoured a staggered four-ship attack wing, resembling the clawed hands of their elite pilots. They were using the latest design of heavy fighters, with two pairs of Heavy Plasma Guns built into each wing of the ferocious-looking strike craft. The asymmetrical clusters of ships raced away, their shimmering green armour looking resplendent as they reflected the shining light from Regulus' four suns.\n\nThe fighters on both sides were much faster than the bigger ships following in their wake, and the seething swarms of strike craft raced headlong towards each other in the centre of the map. Those carefully structured formations broke apart as the two forces crashed into each other, attack wings breaking away as they fought a deadly battle for dominance in the cold arena of the Alpha-Leonis system.\n\nHe found it fascinating to study the Tactical Map, watching as hundreds of individual battles played out before his eyes, lives hanging by a thread before being cut brutally short. He knew that while icons simply blinked out of existence on the map before him, out in space, the reality of that battle was far more terrifying.\n\nTearing his eyes from the intense dogfight, he watched the ships in Grakira's group close from below the Terran capital ships. They were like the jaws of a vice being clamped closed, with the Terrans about to be crushed within.\n\nAs the two forces closed the distance, the plasma fire from the Kintark Cannons struck harder, the glowing green bolts having less time to lose cohesion. Unfortunately, the Terran ships were more accurate with their answering barrages, and many more of the orange laser beams were slashing into his ships. Red icons began to flash against the holographic icons representing the lead cruiser group, depicting the damage the ships were taking. He saw the Genash'tor, the Barrack'tor and the Aranan'tor flash red as their shields were overwhelmed. \n\nThis allowed the mass of Terran Heavy Cannons to be brought to bear, and they took a terrible toll on the three unfortunate cruisers. He watched as the computer dispassionately displayed chunks of armour being blasted away from their hulls, explosions ripping through armour and causing catastrophic damage to the doomed vessels. Each one was crewed by over two-hundred Kintark personnel, and the loss of so many valiant comrades dug at his heart.\n\n\"The consssequencesss of the politiciansss' failure,\" he muttered under his breath. \"Ever paid, in the blood of good sssoldiersss...\"\n\nZorlin let out a sigh of regret, resigning himself to the terrible slaughter he was about to unleash. \"Launch the bombersss,\" he ordered Merklan, the Prelate coordinating strike craft operations from down in the Bridge Pit.\n\n***\n\nGabrielle Lynton watched gleefully as Santini's battlegroup approached, his ships bearing down on her position with engines set to full power. This was turning out even better than she'd hoped, and she could barely restrain herself from clapping her hands in delight. The Kintark forces were embroiled in a bloody clash with the Terran ships under Buckingham, and she knew the death toll from such a cataclysmic battle would be horrific for both sides.\n\n\"Admiral...\" Commander Nichols said cautiously, drawing her attention from the Tactical Map.\n\n\"What is it, Stephan?\" she asked him, reluctantly pulling her eyes away from Santini's dreadnought.\n\nHe sounded worried as he replied, \"Our dreadnought is a match for Santini's, but his battlegroup outnumbers our forces. Are we going to withdraw? Lead him away from the battlezone?\"\n\nGabrielle laughed, feeling giddy with excitement as she replied, \"Oh no, Commander. I have a little surprise for the short-tempered Admiral Santini.\"\n\n\"A surprise?\" he asked her, sounding hopeful and anxious in equal measure.\n\nTurning away from her XO, she enjoyed the look of confusion on his face as she declined to elaborate. Looking at her Gunnery Chief instead, she said, \"Power up the Singularity Drivers, Commander Geroux, and prepare to fire on my mark.\"\n\nThe sombre looking officer frowned, and replied, \"But Admiral, the Sword of Sif is still fully shielded, we can't-.\"\n\nGabrielle waved a hand sharply, cutting him off, and said, \"Prepare the main guns, Gunnery Chief.\"\n\nHe nodded obediently, turning to the weapon controls arrayed around him at his position, and began feeding power into the massive weapons. Geroux only glanced back at Admiral Lynton once, before her disapproving frown made him concentrate fully on his orders. \n\nDeep within the upper deck of the colossal intergalactic titan, twin reactors thrummed with power as they were engaged in anger for the first time. Huge amounts of power were fed into the chamber at the rear of the singularity drivers, flooding the system with the energy to perform its deadly function. An intricate sphere twenty-metres-wide began to rotate, spinning faster as the Tyrenium lattice focused the enormous surge of power towards its centre. A black speck appeared, growing larger as the Singularity Generator went to work.\n\nIt had taken just over four months for the Karron miners to carefully excavate the Tyrenium from Seb Mortimer's mine. It was an exceedingly rare and unstable ore, and they'd had to forego the bore-hole machines and explosives they normally used, slowing down extraction considerably. John had bought ten tonnes of ore for a ludicrously cheap price, taking full advantage of Seb Mortimer's ignorance, the man having little idea of its true worth. \n\nFrom there, it had taken another month for John to haul the priceless cargo back to the Olympus Shipyard in his freighter, the Fool's Gold. The ore had been eagerly purchased by Vice-Admiral Charles Harris on the orders of Admiral Cartwright, as they tried to fulfil the requirements of the massive shipbuilding program ordered by Terran Federation High Command.\n\nWhile John had sailed away in an old, decommissioned assault cruiser, which he'd purchased for a bargain price, the Terran Federation engineers had immediately gone to work. The Tyrenium ore was shipped to a special secured refinery at the shipyard, where it had been meticulously processed to remove impurities. The metal was then forged into the globe in the centre of the Singularity Generator, which was now spinning faster than the eye could see. At its heart, a black void had formed and stabilised, barely held in check by the mighty gravitic forces harnessed in that ominous chamber.\n\n\"We have achieved a stable singularity, Admiral,\" Commander Geroux stated, his eyes darting to several monitors and checking energy readings and gravity flows.\n\n\"Get ready to fire on my command,\" Gabrielle said, holding her breath now as she stared at the unsuspecting dreadnought steaming directly towards her.\n\n*We shall intervene momentarily. Prepare yourself, Gabrielle,* a firm female voice commanded, echoing eerily as it reverberated through her mind. The voice belonged to Ailanthia, her Master's Matriarch.\n\nHigh above Lynton's dreadnought, a vast black shape loomed. Haunting the Regulus system like an ominous spectre, the enormous vessel seemed to observe the petty struggles of the mortals below with disdain. It was just possible to make out its sinister profile by looking directly at it, and noting an absence of flickering stars, as its form blended in with the pitiless darkness of space.\n\nAs if summoned from the ether, a purple maelstrom of immense power began to coalesce off the starboard bow, growing in strength by the second. Flickering violet lightning surged around that terrifying, otherworldly vortex, until it reached the apex of its strength, and was blasted outwards. The purple beam throbbed as its terrible power was unleashed, the column of seething energies striking the unknowing dreadnought amidships.\n\nThe shields on the dreadnought flexed inwards, their Terran creators never imagining in their worst nightmare that they'd have to withstand firepower of this blazing intensity. Sickly purple rings pulsed out from that point of impact, and then the shield was gone, obliterated in seconds by technology far beyond their ken. The beam plunged down, shearing through the vast armoured barrels of the dreadnought's Singularity drivers, and neatly dismembering its most potent weapons of war. The resulting explosions knocked the dreadnought sideways, sending it veering off to starboard.\n\n\"OPEN FIRE!\" Gabrielle screamed, revelling in her moment of triumph.\n\n***\n\n\"Oh my God...\" Commander Garfield whispered, his eyes widening as he stared at the critically vulnerable dreadnought. Turning to face his Commanding Officer, his face was ghostly pale as he gasped, \"Admiral, it's the Sword of Sif... They just lost all shields!\"\n\nAdmiral Caldwell turned to glance at his Chief Engineer, and frowned as he replied, \"That's not possible. They haven't even engaged Lynton's forces yet.\"\n\n\"Look for yourself!\" the shocked engineer cried, pointing frantically at the holographic Tactical Map. \"Something just knocked out all their shields in one goddamn hit! The energy spike was off the scale!\"\n\nEdwin was about to chastise his Chief Engineer for abandoning all sense of decorum, but Commander Garfield was a grounded officer, sensible and dependable. It was massively out of character for the man to be so distraught, so he held his tongue instead and stared at the Tactical Map. His jaw dropped as he stared at Santini's flagship. The dreadnought had not only lost all its shields, but its primary guns had been disabled too.\n\n\"What the hell?!\" he murmured, gaping at the stricken vessel in disbelief. Santini's ship was grievously wounded, and he hadn't actually engaged any enemies yet.\n\nSuddenly a savage explosion lit up the map, and the dreadnought appeared to tremble from the impact. Armour plating thicker than a full-grown man was blasted clear, titanium shards flung wide in a scintillating metallic shower of debris. Edwin barely had a chance to register the impact before it was followed up a second later by another massive hit, and then yet another in a remorseless rhythm.\n\n\"Santini's fucked!\" Commander Milton blurted out, shaking his head in horror. \"Lynton's tearing that poor bastard apart...\"\n\nEdwin couldn't disagree, as the twin Singularity Drivers built into the spine of the traitor's dreadnought unleashed their monstrous firepower. Solid projectiles no bigger than a man's head, were hyper-accelerated by the singularity powering the dreaded weapon. The incalculable energy contained within was unleashed with every impact, wreaking utter devastation on the exposed vessel.\n\nThe Thor's Hammer was firing at extreme range, but the titanic three-kilometre length of Santini's dreadnought made it an easy target. Lynton's ship strafed slugs along the flank of the dreadnought, setting loose a rippling cascade of gigantic explosions at every point of impact. A round smashed into a Heavy Cannon mount, vaporising the weapon and the armour around it in an instant, before the following shot punched deeper, the detonations internal now.\n\nThe mauled dreadnought tried to pull away, but Lynton's Gunnery Chief was an expert marksman, and he followed the slow moving vessel as it turned. The hits were striking the same location now, ripping through the gaping hole in the armour plating, and blasting through the superstructure exposed beneath. One slug drove in deep, touching off a magazine explosion. \n\nEdwin watched in shock as a blinding eruption blasted out of the starboard side of the Terran ship, leaving a hundred-metre chasm gouged out of the hull. More internal detonations were wracking the Sif, and one of the five power cores ruptured, vaporising a section of the topdeck near the rear of the capital ship. The Bridge was ripped away in that tremendous explosion, slaying the command crew in one appalling moment of destruction. The dreadnought trembled in its death throes now, as if terrified by the grim fate that had befallen it.\n\n\"You reckless fool...\" Edwin cursed Santini under his breath. It was poor form to speak ill of the dead, but the hot-tempered man might have doomed them all.\n\n***\n\n\"I've been hit!\" Snakebite screamed, letting go of his flight controls as he flung his hands over his eyes to protect them from searing plasma. His voice raised several octaves as he shrieked, \"Oh God, no!\"\n\nLieutenant Murphy's heart was still racing, but not with the thrill of battle, not any more. The deadly hail of green plasma bolts from the Kintark fighters had quickly disabused him of that notion. Snakebite's image winked out from Murphy's battle computer as his wingman's fighter broke up in a verdant conflagration. While the picture of the Terran pilot had gone, the man's shrill screams echoed without end through Murphy's head.\n\nCommander Summers banked hard to starboard, and Murphy yanked his flightstick to the right to stay on her wing. They rolled as they looped over the burning tomb of a Terran cruiser, the ship consumed by spectral green plasma fires. Angel brought them in behind a wing of Kintark heavy fighters, catching the slower ships by surprise. The four remaining Terran Rapiers opened fire, their four Gatling Lasers whirring as they sent a cascade of orange laser bolts into the rear of the Lizardmen. \n\n\"This one's for Snakebite, you scaly son-of-a-bitch,\" he snarled, gritting his teeth in fury.\n\nMurphy narrowed his eyes in concentration as he strafed his shots over the engines at the back of the green heavy fighter. The emerald Kintark armour was mildly reflective, muting the damage slightly, but his accurate shooting paid off. The salvo of orange bolts melted through armour, liquefying the shimmering plating as he lit up the rear of the heavy fighter. \n\nHe ignored the spiking heat levels on his lasers, maintaining the withering hail as the Kintark jinked to try and shake him off its tail. His Rapier was faster and more nimble though, and Murphy had no intention of letting the bastard run. There was an explosion as one of Kintark engines blew, and the heavy fighter lurched wildly to starboard, spinning out of control. The fighter slammed into the side of a Kintark destroyer, exploding on impact.\n\n\"Got you, you fucker,\" he said with grim satisfaction, looking around him for the rest of his squadron.\n\nHe'd got pulled out of formation as he hunted down the Kintark fighter, and he saw that the rest of his squadron were embroiled in a vicious brawl with another Kintark fighter wing. It looked like his wingmates had been ambushed by a fresh Kintark squadron, and the Terran fighters were diving and rolling around a Terran light carrier. The defence grid on the carrier had opened up on the Kintark ships, but the crew of the Horkos had to be careful firing into the close quarters dogfight, for fear of hitting a friendly ship. \n\n\"Murphy! Get back here!\" Angel cried out, and he saw her Rapier execute a hard banking turn to try and shake the fighter off her tail.\n\nShoving his throttle forward, Murphy's agile fighter leapt towards her, rapidly closing the distance. \"Be right there!\" he replied, desperate to save the kind officer who'd taken him under her wing.\n\nAngel snapped a quick glance at her cockpit cam, seemingly staring right at him as she said, \"I'll line him up, get ready to take the shot.\"\n\nAnother strangled scream reached his ears, and he watched in horror as Romeo's handsome face was contorted with fear. \"I've lost my left wing!\" he cried out, his image crackling as he was thrown around the cockpit. \"Help me, someone!\"\n\nHis terrified expression was frozen in the battle computer, before cutting out a second later as the Kintark pilot finished off Romeo's crippled Rapier. Murphy forced himself to focus on the fighter chasing after Angel, his shaking hand gripping the flightstick fearfully. He watched the distance between them closing at a blistering pace, as Angel ducked and weaved to avoid the plasma bolts sailing around her ship. \n\nSettling his crosshairs on the Kintark fighter, he squeezed the trigger, his Gatling Lasers opening fire a second after the barrels spun up to speed again. The Kintark's armour seemed weaker on the front, and scared as he was, he managed to shower the Lizardman's cockpit with laser bolts. The blistering amber hail did its work, and one of the fist-sized holes he punched in the canopy caused an explosive decompression. The Kintark was sucked from his seat and forcibly ejected from the fighter, which then sailed harmlessly by.\n\nAngel breathed a sigh of relief, and said, \"I owe you one, Leprechaun. Now get on my six, and we'll rescue Binary!\"\n\nMurphy watched her pull an Immelmann to reverse direction, so he lowered his speed so that Angel could catch up with him and take point. Her fighter roared past, so he opened up the throttle again, tagging onto her wing as they chased after the three remaining Kintark fighters. The Horkos' gunners intensified their fire on the pursuing Kintark, as Binary wove a desperate path around the light carrier. \n\nOne of the green Kintark fighters was hit in a crossfire from fore and aft Gatling Laser batteries, exploding as the laser bolts struck the power core. Another was hit in the engine, and the heavy fighter slowed dramatically, a long plume of debris trailing after it. The Kintark pilot tried to break clear, but this just exposed his fighter to more laser fire, and the ship was literally cut to pieces, the wings shorn off, and the fuselage sliced open.\n\nBinary narrowly avoided another salvo from the Kintark's Heavy Plasma Guns, just as the remaining pilots from Squadron Two-Sixty reached the duelling ships. The last Lizardman didn't last long under their concentrated firepower, and his ship broke apart in a shower of green plating.\n\n\"I think you owe those boys on the Horkos a drink!\" Murphy panted, crooking a relieved smile at Binary.\n\nBinary ignored him however, and there was a flicker of fear in Binary's voice as he blurted out a warning, \"Commander, we have incoming! Kintark wings coming in around the wreck of that heavy cruiser at two o'clock!\" \n\nMurphy's eyes darted to his Tactical Map, and they widened in alarm at the dozen contacts rushing towards them, breaking away from the clutter of ships centred on the scanner.\n\n\"I'm hit!\" Angel gasped as she tried to turn her mauled Rapier, but the flight controls were unresponsive.\n\nStaring out his starboard cockpit window, Murphy could see the half dozen holes punched through the wing of her fighter, as the Kintark attack group showered them with plasma bolts.\n\n\"Angel!\" he cried out, but just like that she was gone, her fighter enveloped in a blazing explosion as shots from a Kintark fighter hit her power core. "
    ],
    "authorname": "Tefler",
    "tags": [
        "sci-fi",
        "fantasy"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/three-square-meals-ch-68"
}