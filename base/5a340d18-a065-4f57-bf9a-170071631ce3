{
    "title": "Under Mr. Nolan's Bed Ch. 02",
    "pages": [
        "I took a shower before the sun even came up, intent on going home as soon as possible, preferably before anyone woke up. I couldn't face them, I decided, as I got dressed in the bathroom. I had to wear my uniform, since I hadn't walked home to get a change of clothes the night before, but my panties were still damp, so I just shoved them into my skirt pocket and went without. I could have borrowed some of Erica's but I didn't want to wake her up.\n\nI crept downstairs, going into the kitchen to get my backpack, and noticed the light over the stove was on. There was my backpack, on the floor by the door, right next to Mr. Nolan's briefcase.\n\n\"Where are you going, Leah?\" \n\nI jumped and squealed, my heart racing as I turned to find Mr. Nolan sitting at the kitchen table. He was in shadow, but his face appeared in the light as he leaned forward and smiled at me. \n\n\"I... couldn't sleep,\" I said, putting my backpack down and feeling the burn in my cheeks. He knew what I looked like naked\u2014and I'd seen him masturbating. Could it get any more embarrassing than this moment?\n\n\"Want some breakfast?\" he asked, waving me toward a chair. \"We've got lots of cereal. Just don't eat the last of the Cocoa Puffs, or Erica will have your head.\"\n\nPulling a chair out, I sat, looking at him in the dimness. He was acting like nothing had happened, but I could feel something between us that hadn't been there before.\n\nI noticed he was dressed in a suit and tie. \"Where are you going so early?\"\n\n\"Work, unfortunately,\" he replied, taking a bite of a bagel and cream cheese that I hadn't noticed until that moment. \"I'd rather not, but duty calls.\"\n\n\"That looks good,\" I remarked, and my stomach growled. I wasn't used to being up so early. \"Work on a Saturday?\"\n\n\"Tax season,\" he explained. \"Accountants always work weekends in April.\"\n\n\"Well, that sucks,\" I replied, watching him take another bite of bagel.\n\nHe chuckled, wiping cream cheese off the corner of his mouth with a napkin. \"Yes. It sucks. To say the least. Do you want some of this?\"\n\nI shrugged, my stomach growling again. \"Maybe just a bite? I don't have cooties.\"\n\n\"Here.\" He held it out to me, watching as I tore off a piece with my teeth and licked cream cheese off my lips. I felt self-conscious around him, like I wanted to check my hair or smooth my skirt, and I had never felt that way around Mr. Nolan before. His smile was warm and he took another bite, saying through a mouthful, \"I'm not worried about catching cooties.\"\n\n\"So how'd your project go last night?\" he asked. I flushed at the mention of the night before and was glad that the kitchen wasn't well-lit.\n\n\"Okay.\" I shrugged, and took another bite of the bagel when he offered it to me and hugged my knee up to rest my chin on it. I did it without even thinking, before I remembered that I wasn't wearing panties. When I saw where his eyes were, my face filled immediately with heat.\n\n\"You were up late,\" he said, his voice a little lower, his eyes not moving. I was paralyzed, frozen in place, and the look on his face, caught somewhere between uneasiness and lust, made it even worse. \n\n\"So were you,\" I replied softly and I didn't look away when his eyes lifted to meet mine. \n\nHe cleared his throat and reached over and touched the corner of my mouth with a napkin, where I was stretching to reach with my tongue, to get a bit of cream cheese. \"Sounded like a lot of giggling going on in there and not a lot of working.\"\n\nI smiled, slowly lowering my leg and smoothing my green and blue plaid skirt. Out of the corner of my eye, I could see that he was watching me. \"Yeah, well... you know how we are.\"\n\n\"Yep,\" he nodded, popping the last of the bagel into his mouth. \"As a matter of fact, I do.\"\n\nThe kitchen was lighter now\u2014the sun was coming up. Behind us, Erica stumbled in, her short blonde hair a frazzled cloud around her face as she rubbed at her eyes and frowned.\n\n\"What are you two doing up at this ungodly hour?\" she mumbled, groping along the counter toward the coffeemaker and flipping it on. My mother would have killed me before letting me drink coffee, but Mr. Nolan wasn't like that.\n\n\"I'm going to work, darlin'.\" He stood, taking his plate to the sink and kissing her cheek on the way by. \"You two be good. Don't trash the house. And no boys.\" \n\nHe said this last in a mock-stern voice, only he wasn't really kidding. \n\n\"We'll be good,\" I piped up, seeing Erica roll her eyes and stick her tongue out at his back. He smiled at me and his eyes smiled, too. For a moment, just a brief second, they flickered down to the hem of my skirt and my whole body felt filled with heat.\n\n\"Bye, Mr. Nolan!\" I called as he grabbed his briefcase. \n\nErica made a face at me as she heard the door close behind him. \"Be good?!\"\n\n\"We're always good,\" I replied with a smile, watching her pour Cocoa Puffs. \n\nShe snorted, grabbing the milk out of the fridge. \"Well, then, let's go upstairs and get up to some good.\" \n\n\"Erica!\" I said with a laugh. \"More like 'no good.'\"\n\nShe took a bite of cereal and crunched noisily. \"Don't you want to see the videos?\"\n\nI blushed, remembering catching Mr. Nolan watching one of those videos last night, but of course, I couldn't tell her that. \n\n\"Ahhhh sugar and caffeine,\" she said, pulling a mug out of the cupboard. \"Breakfast of champions\u2014are you hungry?\"\n\n\"No,\" I replied, not telling her about the bagel I'd shared with her father, either. \n\n\"Well, let's go then.\" She grabbed her Cocoa Puffs and her coffee and headed out of the kitchen. \"I want to show you something.\"\n\n\"Another something?\" I asked, following her up the stairs to her room. \n\nShe put her coffee on the night table and curled up on the bed, finishing her cereal as she directed me. \"Open my underwear drawer.\"\n\nI opened the top drawer of her dresser, and it reminded me that I wasn't wearing any panties. I grabbed a plain white pair. \"Hey, can I borrow these?\"\n\n\"Sure,\" she replied, drinking the now-chocolate milk out of her bowl. \"Look at the back of the drawer for a leopard print.\"\n\nI tugged the panties on and then straightened my skirt, looking at the back of her drawer for something that looked like a leopard print, finding it under a bunch of her bras. I grabbed it, surprised by the sudden weight in my hand\u2014this wasn't underwear!\n\n\n\"What in the heck?\" I asked, feeling something long and hard under the material. \n\n\"My vibrator.\" She grinned, drinking her coffee in huge gulps. \"Ahhhh god, I love caffeine.\"\n\n\"Should I even ask where you got it?\" I asked, sitting on the bed and handing it over to her. \n\n\"Present from Bobby,\" she said, opening the pouch and pulling out a bright pink phallic-shaped thing. \"Feel.\" She pressed it to the inside of my elbow. It was cold, but made of some soft, gel-like material. \n\n\"Now... imagine this...\" Her eyes met mine as she turned a knob on the bottom, bringing the whole thing to life and it began to vibrate. \"Right against your clit...\"\n\nI pulled my arm away like I'd been burned, still looking at it. \"What... what does it feel like?\"\n\n\"Wanna go find out?\" She grinned, turning it off and hopping off the bed. \"Come on, let's go check out those videos.\"\n\nWe went through the bathroom into Mr. Nolan's room, and it reminded me of the night before. I stood in the doorway, my whole body tingling with the memory, staring at the bed where I'd watched him stroke his cock. Erica was pulling another box out from under the bed that resided next to the one full of magazines that we had sifted through the day before. \n\n\"This one's my favorite,\" she said, going over to the VCR. \"Hey, there's something in here...\"\n\nI edged toward the bed where she had tossed the hot pink vibrator, watching her eject the tape. I knew what was in there\u2014I'd seen part of it the night before. \n\n\"Looks like Daddy was getting busy last night,\" she said with a snort, putting the tape aside and sliding the other one in. \"Remind me to put that back when we're done.\"\n\n\"Done...?\" I inquired, sitting on the edge of the bed. I was in the very spot that Mr. Nolan had been last night. \n\n\"Don't you want to play?\" Erica pouted at me as the FBI warning flashed on the TV screen. The movie was starting. \n\nI shrugged, swallowing and glancing at the television. There was a girl lying on a bed reading a magazine as a young man came into her bedroom and started talking to her. \n\n\"Ugh, I hate the dialogue,\" Erica groaned, grabbing the remote and fast forwarding. \"Let's get to the good stuff.\" \n\nShe sat on the bed next to me, pulling her t-shirt over her knees. \"Here we go...\"\n\nI felt shy and embarrassed, watching the couple kiss and take each other's clothes off on the screen. Still, I couldn't stop watching. The girl was tiny and dark-haired, like me, slim hips and long legs, but full-breasted, her nipples the same light brown as mine. She was shaved between her legs, though, like the other girl in the movie.\n\n\"Mmmmmm isn't that hot?\" Erica murmured, watching as the dark-haired girl knelt in front of the guy and took his cock into her mouth. \"I love doing that.\"\n\nI tore my eyes away from the screen to look at her. \"You do that?\"\n\nShe nodded. \"Bobby absolutely loves it\u2014he begs me to do it!\"\n\nI watched, fascinated, as the girl took more and more of his thick length into her mouth, her eyes turned up to him. She really looked like she was enjoying it. \n\n\"Don't you choke?\" I asked, feeling that gentle pulse beginning between my legs. \n\nErica smiled. \"Guys kind of like that. Makes them believe their cocks are huge. Here, let me show you.\"\n\nShe grabbed the vibrator, holding it up in front of her. \"Like this... see how she played with it first... ran her tongue around the head...\" I watched her demonstration, her tongue flicking around the pink tip. \"Then you take it into your mouth...\" Half of the shaft disappeared between her lips and I gasped. \n\n\"Well, you can't do that your first try,\" she admitted, wiping it off on her shirt and giving me a glimpse of her panties. \"Here, you do it...\"\n\n\"No,\" I said, embarrassed, putting it back on the bed. \n\nShe sighed. \"You don't have to be shy. We're both girls.\"\n\nThe girl on the screen was still working the guy's cock between her lips, but now she was cupping his balls, rolling them in her hands, and he was moaning like he really liked it a lot. The sound of his pleasure made my pussy throb with a sweet, dull ache. \n\n\"Tell you what,\" Erica said, hopping off the bed. \"I'm going to take a shower. You stay here and... do whatever you want.\"\n\nI ignored her wink, but as soon as the bathroom door closed, I settled back onto the pillow to watch. The girl still had the guy's cock in her mouth, but he was sitting now, reaching down to cup her breast and pull at her nipple. She was using her hand, I noticed, at the base, so her mouth only went down on him about halfway.\n\nReaching for the vibrator, I held it up, tilting it back and forth. It was bigger than Mr. Nolan's cock, I decided, and I found myself wondering how much of it I could take into my mouth. I touched it to my lips, making my mouth an \"O\" like the girl on the screen and sliding it slowly in. The gel it was made of tasted funny, but I pushed it as far in as I could before I felt like I was going to gag, marking the spot with my finger and pulling it back out. Halfway. Not too bad.\n\nOn the tape, the girl was on the bed now, her knees spread wide and pulled back so he could lay between them and lick her. Now I knew why it was Erica's favorite. He was pushing his fingers deep inside of her while he licked, the camera getting a close-up view of his tongue moving back and forth over her clit. My pussy ached as I listened to her moan and I wanted to touch myself.\n\nI could hear the shower still running and I pulled my skirt up and my panties aside, heading straight for my clit. I was surprised at how wet I was already\u2014I had felt more apprehensive than aroused with Erica here, or at least, I thought I had. My body had different ideas. My pussy was swollen and slick and my fingers moved in easy circles around my clit. \n\n\"Lick it, yeah, faster!\" the girl on screen moaned, playing with her own nipples as his tongue moved back and forth between her lips. I wondered again what that would feel like, someone's mouth between my legs. The girl panted and moaned and rocked and really made it look like it felt incredible and I found myself imagining Mr. Nolan down there between my legs and flushed at the thought.\n\nI couldn't help remembering him laying right here, in this very spot, doing this very thing\u2014masturbating while he watched those girls being fucked on TV. The memory of him rewinding to just the right spot and timing his cumming with the guy on the screen made me feel warm and tingly all over, and I found myself wanting to see that scene again. That's the scene I wanted to cum to.\n\nI hopped off the bed, stopping the tape and putting in the one Mr. Nolan had been watching last night. It was cued up to right after that scene, and I realized he must have turned it off at that point. Using the remote, I rewound it, finding that scene again\u2014the two women lying on their backs, stacked one on top of the other, the guy between their legs like a kid in a candy store, trying to decide which pussy to fuck first.\n\nIt wasn't really the scene\u2014although it was exciting, seeing the girls spread open for him, watching his slick cock pull out and press in again\u2014it was knowing that, for some reason, this was the scene that Mr. Nolan found exciting, this was the scene that pushed him over that edge. Knowing that was what pushed me over. I wanted to cum at that same point, to some way relive the night before. \n\nI could hear the shower still running, but I knew she wouldn't be much longer. My fingers rubbed faster, watching the guy on the screen, his cock slipping up and down between their lips, first one, then the other. They were begging him again, \"Fuck me... no, me!\" fighting over that hard cock. \n\nThe vibrator was resting against my hip and I glanced down at it, curious. Would it get me there faster? I wondered. Already the guy on screen was pumping hard into the blonde on the bottom and the girls were kissing, sucking each other's tongues. I heard the shower go off and I grabbed the vibrator, turning the knob on the bottom and making it hum.\n\nPulling my panties aside, I pressed the head of it against my clit. It was so intense that I pulled it away immediately, gasping out loud. My whole body buzzed with the sensation and, unable to resist, I nudged my panties aside again and found my clit with the vibrating pink head. \n\n\"Oh god,\" I whispered, watching the scene on the TV through half-closed eyes, being carried away by the glorious sensation between my thighs. I'd never felt anything so good. My nipples hardened the minute I touched the vibrator to my pussy and I used my other hand to rub them through my blouse, moaning softly as the feeling between my legs increased even more. \n\nOn the screen, the guy was thrusting hard into the blonde, grunting and straining with the effort, and all I could think about was Mr. Nolan stroking his cock right here in this very spot, his body wracked with pleasure as he rewound this scene, right to this very moment. There it was\u2014the guy pulled his cock out, groaning, \"I'm gonna cum!\" and aimed it right for the dark-haired girl's smooth lips. \n\n\"Oh me, too,\" I moaned, the tingle between my legs full to bursting as I watched him shoot his cum between her spread-open lips. I closed my eyes, then, the image of Mr. Nolan shooting his cum filling my head, and then changing, morphing into the fantasy of him kneeling between my legs, pressing the head of his cock to my clit, just where I was rubbing the vibrator. \n\n\"Cum all over me, Mr. Nolan,\" I whispered, imagining his cum, thick and creamy, streaming hot, rhythmic blasts right against my pussy. I couldn't hold back anymore, and the vibrator buzzing between my legs pressed me over the edge. Moaning and rocking, my whole body went with the sensation, the delicious tightening and release happening again and again as I rubbed myself with the head of the cock.\n\n\"Mmmmm, I bet that felt good.\" Erica's voice was right next to my ear and I gasped, flinging the vibrator onto the bed and pulling my skirt down. She was kneeling next to me, wrapped in a towel, her hair wet.\n\nHow long had she been there? I wondered. Had she heard what I said!? I couldn't tell\u2014her eyes were veiled, but she looked different, somehow, and was definitely looking at me in a way I'd never seen before.\n\n\"You changed the tape, huh?\" she remarked, walking over and ejecting it, putting the other one back in. \n\n\"I... just...\" Still breathless, I struggled to find words, feeling hot and flushed with both excitement and embarrassment. \"Didn't want you to forget to put that one... back in...\"\n\n\"Ohhhhh yeah,\" Erica breathed as she hit 'play' and moved toward the bed. It was still at the scene where the guy was licking the little dark-haired girl's pussy. \"This is my favorite part.\" \n\nShe picked up the vibrator, still buzzing and wet with my juices, and lifted it to her mouth. I stared as she licked the head that had been pressed against my clit just moments ago.\n\n\"Have you ever tasted your own pussy?\" she asked, crawling up next to me on the bed. \n\nI shook my head as she stretched out next to me on a pillow and opened her legs, the towel parting to reveal the soft blonde fuzz there. \n\n\"You should try it,\" she whispered, moaning as she slid the head of the vibrator up and down between her lips. \"God, look at how good he does that... watch his tongue... back and forth like that... right on her clit...\"\n\nI nodded, but I wasn't looking at the screen, I was watching her, the toy moving up and down her slit and then focusing right on her clit as she rubbed it, like his tongue, back and forth. Her eyes were on the TV and I could watch her without her really paying attention. She spread her legs wider, the towel opening up to her navel, and I could see her working the buzzing vibrator between her legs. \n\n\"Did you put it inside?\" Erica asked, not looking towards me as she licked her lips, her eyes glued to the screen. I didn't answer her, but I watched as she slid the pink head down between her lips and my whole body flushed as it started to disappear between them. She was putting it inside of her!\n\n\"I bet a real cock would feel even better,\" she whispered as she moved the shaft in and out of her pussy. I could see it pressing past the pink folds of her flesh and coming out wet with every stroke. \"God, I want to be fucked.\"\n\nOn the screen, the girl was up on her knees, reaching around to open herself up, waiting to be filled. The guy's cock was straight-up hard as he rubbed it up and down her slit. \n\n\"Yeah, fuck me,\" Erica murmured, and she was fucking herself deep and hard, the pink shaft disappearing almost to the hilt. I was fascinated, watching it disappear into her pussy, remembering how good that humming felt between my legs. My own pussy was responding again, tingling with feeling, and I slipped my hand under my skirt as I watched her, shoving my panties aside to get to my clit.\n\n\"Oh that's so good,\" she whispered, her hips rocking on the bed, the towel parting as she twisted and rolled, falling off completely. I'd seen Erica naked a hundred times, but not like this, never like this. Her pink nipples were pursed and hard, her breasts swaying as she thrust the dildo deep inside of her. She reached up to play with one, pinching and tugging and biting her lip, her eyes half-closing in her pleasure.\n\nMy pussy was swollen and the pair of Erica's panties that I had put on was soaked, and still I couldn't stop touching myself, rubbing faster and faster as my eyes flicked from the screen to her, watching her fucking herself and imagining how good it must feel. She moaned louder, her hand moving between her legs, and she grabbed the remote off the bed, hitting the 'fast forward' button.",
        "\"Watch this part,\" she whispered to me, not looking away from the TV as she hit the 'play' button a moment later. I glanced at the screen, where the guy was pounding the dark-haired girl from behind. The girl was moaning, matching Erica's noises, and the guy was groaning, too, as he slammed into her again and again. I could hear a tightness in his voice, something tense and waiting to be let go.\n\nErica had slipped the wet shaft out of her pussy and was rubbing the pink head over her clit, whimpering and moaning as she played with her nipples. I had an urge to lick one, and the thought made me feel faint, but I rubbed myself faster, my breath matching hers, both of us gasping and panting. The guy on the screen pulled out of the pussy that he was fucking so hard, grunting and groaning with pleasure as he started to cum.\n\n\"Ohhhhhh I'm cumming,\" Erica cried, the bed shaking with her orgasm, her body trembling as she rubbed herself with the vibrator, her eyes never leaving the screen where the guy was pumping his cock in his fist, shooting his cum in long, hot jets up over the raised ass of the girl. It fell in thick strands, some pooling in her lower back, most of it beginning to drip down the crack of her ass toward her pussy.\n\nSeeing it dribble down her asshole, a slow river of cum beginning to part the pink folds of her pussy, was too much for me. I came, too, biting my lip to keep from crying out as my body trembled with my climax, jerking and bucking with it, my thigh brushing against the soft skin of Erica's leg, the sensation making my orgasm even more intense. \n\nErica had turned off the vibrator and was stroking her belly and thighs with her hands, her eyes still-half closed. I grabbed the remote and stopped the movie, the sight now almost a visual assault, too intense in the wake of my climax. \n\n\"You were right,\" Erica murmured, looking at me. \"You told my dad we'd be good\u2014but that wasn't just good... it was fucking fantastic.\"\n\nI stood up, pulling my skirt down. \"Listen, I should get home and change.\"\n\nShe frowned, leaning up on her elbows. \"You wanna hang out later?\"\n\n\"Call me,\" I said, turning so she didn't see how red my face was getting as I headed toward the door. \n\nThe images I'd seen over the last twenty-four hours\u2014the magazines, the movies, Mr. Nolan masturbating, Erica playing with her vibrator\u2014flashed through my head as I walked home. I knew that I could never unimagine them\u2014and the scariest thing was that I found that I didn't really want to. \n"
    ],
    "authorname": "Selena_Kitt",
    "tags": [
        "18-year-old",
        "eighteen-year-old",
        "school girl",
        "mutual masturbation",
        "vibrator",
        "porn",
        "catholic school girl",
        "plaid skirt",
        "masturbation",
        "toys"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/under-mr-nolans-bed-ch-02"
}