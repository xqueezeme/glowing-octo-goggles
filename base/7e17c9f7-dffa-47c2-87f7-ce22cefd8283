{
    "title": "Catering Girl Ch. 03",
    "pages": [
        "Thank you to my intrepid crew of beta readers and editors, AwkwardMD, Bramblethorn, and BrokenSpokes, who all provided some critical suggestions and hopefully made this a smoother read.\n\nThere is an important character under the age of eighteen in this story. It's sort of hard to write a story about a young single mom and not have her munchkin in it. But don't worry, when we get to the adult playtime parts, the little one will be safely tucked in her own bed and sleeping while the grownups play. These are responsible adults after all.\n\nIf you have not read the first two chapters, please do so now. Chapter Three is not going to vanish from the pages of Literotica anytime soon, so it will be here and waiting for you when you're ready.\n\nChapter Three\n\nWhitney\n\nThe pitter patter of little feet in the guest room woke me up. Realizing that we were soon to be invaded by an overly excited munchkin, I slipped on a tank top and a pair of shorts. Just in time, too, as a moment later Madison stormed in, as excited as, well, a kid on Christmas Day.\n\n\"He came, Mommy! Santa found us here and he came!\" \n\nA barely awake Jenn half sat up, covered by a sheet, and sleepily replied. \"I told you he would. Now go and make sure Skipper doesn't get into any of the packages. Whitney and I will be down in a few minutes, okay? Can you do that for Mommy? Please?\" \n\nMadison nodded her head and practically floated out of the room. \n\nThose slate-blue eyes made contact with mine, then they were chased by a simple good morning kiss.\n\n\"She's so cute. Almost as cute as her mommy.\" \n\n\"It's okay, you can say it, she's cuter than me.\" She gave me a peck on the cheek and headed for the bathroom. \n\nThe morning was filled with giggles and squeals of a little girl opening presents. What she got from Jenn was practical stuff, new (to her) clothes for a growing girl. There were a couple coloring books and some new crayons from Jenn's mom, a few books and a stuffie from her other grandparents and, surprising to me, a box from Hawaii. The return address was from Petty Officer D. Olinski so I figured it was from Madi's father. Inside was a plush doll in traditional Hawaiian dress. \n\n\"Mommy, there's an envelope here with your name on it from Daddy.\" Madi grasped the envelope, holding it with the hands of her new doll, and brought it to her mom. Inside was a simple Christmas card with a note and a copy of some official-looking paperwork. \n\n\"Oh my,\" Jenn muttered as she read the card. \"Looks like Dallas is getting transferred to Coast Guard Air Station Port Angeles. He is wondering if it would be possible to get visitation privileges then. Just a few hours, one day a month to start with.\"\n\n\"Is that a good thing?\" I asked.\n\n\"Not sure. I think so, but I'll need to think about that.\" \n\nI noticed a card sitting next to an empty box, picked it up, and scanned it. \"Oh, Madi, there's a note in here to you from your daddy. It says that your doll's name is Nani, which means 'beautiful or pretty' and she was handmade near his station by a local artisan.\" \n\nMadison hugged Nani and repeated her name multiple times. \n\nMadi opened her last present. \"To Miss Madison from Miss Whitney,\" she read, with a little assistance from Jenn. As soon as she glimpsed the colors within the wrapping, she got even more excited than she had been all morning. \n\n\"Mommy, an Elsa dress!\"\n\nI helped her open the package and put on her new costume over her pajamas, then she put on the matching tiara, picked up the wand, and began to prance around the house with Nani in her other hand. \n\n\"Well, that's a hit.\" Jenn mumbled. She had a mix of emotions on her face. \n\n\"What's wrong?\" I asked. \n\n\"Nothing... nothing. I'm happy to see her happy.\" But she didn't look at me, nor was she watching her daughter when she said it. I think I knew what it was, but kept my mouth shut.\n\nJenn began to pick up all the wrapping paper and boxes to put them in the recycling and garbage. I grabbed a few more and followed her. She held the lids open when I put the last few items in the cans. \n\n\"It's not fair, Whitney.\" \n\nI put my arms around her as she buried her face in my embrace.\n\n\"I'm a terrible mother. I can't afford to get anything fun for my daughter. All I could do was get her some clothes she needed, and that took me months to save up for.\"\n\nI thought about trying to tell her how awesome she was to provide for Madison, but I didn't think she would have listened to me right then. Instead, I just held her.\n\nWe returned upstairs to the middle floor of the townhouse to watch Madison play with her new doll. I got out a few teacups, and we all had \"tea.\"\n\nEventually it was time for us to head over to my parents' house for Christmas dinner. As we got ready, I could tell that Jenn was getting nervous. It was the little things, how she fidgeted putting on her ankle boots or picking at her finger. \n\nAs we climbed into my Jeep, I heard a big exhale. \"Why did I wear this skirt? I hate skirts.\" \n\n\"You look great in a skirt, babe,\" I said, trying to boost her self-confidence. It was obvious to me anyway: she looked good. Black skirt and tights, and a dark gray sweater. Then she did her killer move, tucking her hair behind her ear. If there was something sexier on the planet, you'd be hard pressed to prove it to me. The sight of her little hoop earrings at the bottom of her lobe and the couple of studs above always made me swoon. Looking for more support, I turned to Madison, still in her Elsa dress, over her little jeans now. \"Isn't your Mommy pretty?\"\n\n\"Yeah, Mommy, you look pretty!\"\n\n\"Thanks, sweetie.\" Jenn reached her hand behind her and gave Madison a pat on the leg. But I could tell by her voice she wasn't swayed by my attempt to give her a vote of confidence. \n\nWe drove across the city, barely making it across the Ballard Bridge before it went up to allow a sailboat to pass through its opening span. As we drove through the residential neighborhood, Jenn was rather silent. As we approached the gate, I clicked the opener and the wrought-iron gates opened to allow us in. \n\n\"You didn't tell me your parents live in a mansion. This yard alone is almost as big as the park Madison plays in.\" Jenn's eyes were wide, and the look on her face... It hadn't crossed my mind how intimidating the place might be. To me, it was simply home. \n\nJennifer\n\nWhitney parked her Jeep in the large circular drive by the front door. I could see a large Christmas tree in a two-story bay window from the driveway. Madison already had her seatbelt off and climbed into my arms, clutching her new doll. \n\nWhitney unlocked the front door and ushered us in. \n\n\"Merry Christmas, Sweet Pea!\" \n\nI could see Whit blush a little at the term of endearment directed her way. A pleasant looking older gentleman, Mr. Mitchell I assumed, came around the corner, his arms outstretched to greet his daughter. White hair, slightly thinning on top, dark trousers and blue dress shirt. The accountant look was completed with a pair of round wire-rimmed glasses. \n\n\"You must be Jennifer, it's a pleasure to meet you. Whitney can barely stop talking about you. And this must be Miss Madison.\" He reached out and patted Madi's back, who had suddenly gone very shy in my arms. \n\n\"That is a pretty dress you have on, Madison.\" I heard an older woman's voice coming down the hall.\n\n\"Merry Christmas, Mother.\" Whit gave her a hug. Mrs. Mitchell turned to Madison and me. \"It's nice to meet you, Jennifer. Please come in, make yourself at home.\"\n\n\"Nice to meet you, Mr. and Mrs. Mitchell.\" Mr. Mitchell led us to the living room where the Christmas tree I'd seen from outside filled the alcove in front of the bay window. \n\n\"That's a big tree, mommy!\" Madi exclaimed, her head moving up and down to take it all in. \n\n\"It's a little smaller this year than in years past, a tad over fourteen feet tall. In some years past we had a tree that went up the whole twenty feet to the ceiling,\" Mr. Mitchell proudly told us.\n\nI looked at the tree and wondered how much it cost. He reached out a hand to Madison. \"You know, Miss Madison, Santa came to our house last night and left something for you here. Would you like to check it out?\" He gave me a wink. \n\n\"Go on, honey. See what Santa left you.\" I set her down. She looked at me a little scared and clutched her doll tightly. \n\nMr. Mitchell got down on his knee and looked at Madison. A gentle smile was on his face. \"I see you have a friend with you. What's her name?\"\n\n\"Nani.\"\n\n\"That is a pretty name. Did Santa bring her to you?\" \n\n\"No, she's from my Daddy. He sent it from...\" She wrinkled her nose trying to remember. She looked at me, \"Where is Daddy, Mommy?\" \n\n\"Hawaii,\" I said, distractedly.\n\nMadison turned and looked back at the white-haired gentleman. \"He is in Ha-wai-e,\" she answered, carefully saying each syllable. \"He jumps out of helicopters to save people who can't swim.\" \n\n\"Wow, your daddy must be very brave. It takes a special person to do a job like that.\" It was clear to me from the gravity in his voice and the expression on his face that he understood the risky nature of Dallas' job, yet at the same time was not trying to scare Madison with all the what if's which might be going through his mind. Over the years I'd driven myself crazy thinking about all the things that might happen to my daughter's father and what that would mean to her. But like all the other times, I pushed those thoughts into the recess of my mind and focused on the present and what I could control. \n\nMr. Mitchell smiled at Madison and offered his hand to her. She took it, and they walked over to the tree. There was a lone present, carefully wrapped in green paper with snowmen on it.\n\nAll her fear vanished when it came to ripping wrapping paper off. \"E-e-e-e-e-e-!\" Little arms waved back and forth with glee. \"Mommy, it's Anna.\" She hugged the doll of Elsa's sister and immediately introduced Anna to Nani, then promptly began to ignore the adults in the room as she played with her new dolls.\n\n\"Thank you, Mr. Mitchell. It was very kind of you to think of her.\"\n\n\"Well, thanks for coming. And please call me Ben. When Whitney said you two were coming over, I stopped by the store on my way home from work. Been many years since I was lucky enough to buy a doll for someone.\" He put his arms around Whit. \n\nHis affection for his daughter was the total opposite of every interaction I'd had with my own father. I barely remember him being around. He left when I was about Madison's age. In fact, I'd only seen him twice since, and both of those times were awkward visits that were mercifully short. Mrs. Mitchell pulled Whitney towards the kitchen to help with dinner, leaving me alone with her husband. \n\n\"Nice place you have here.\" The living room was massive, I could only imagine what the rest of the mansion was like. \n\n\"Thanks. It was built by Whitney's great-grandfather. Someday, it will be hers. This place needs children running around in it. Not a couple of old people.\" \n\nI replied with a weak laugh. \n\n\"Try not to be overwhelmed by the place. I know I was when I first came calling on Edith years ago,\" Ben said as he gestured over to the sofa for me to sit. He sat across from me in a stately wingback chair. \"So, Jennifer, Whitney says she met you at our company holiday party. I don't recall seeing you there.\" \n\nI sheepishly grinned. \"Well, um, I was part of the catering staff. I was picking up some extra work that night. Hopefully, I won't need to do that much anymore. I started a new job right after that. I think you might have heard of the company I now work for.\"\n\n\"Indeed, Whitney told us. So how do you like working there?\" \n\nI was about to answer when Whitney called us to the table. There was quite a spread laid out. There were two large platters, one with a stuffed lamb crown roast and the other with a large fillet of Chinook Salmon. Additionally, there were three types of salad and four other side dishes. More food than Madison and I could eat in a couple of weeks. \n\nMy little girl leaned over to me as I sat down. \"Do I have to eat the broccoli salad, Mommy?\" She was trying to be polite and whisper, but like most four-year-old little girls she hadn't really mastered the skill yet. \n\n\"Yes, we talked about this the other day, you need to try a bite of everything. It's the polite thing to do.\"\n\n\"But Mommy, it's broccoli. All green and icky.\" The little pout on her face was so cute. \n\n\"You need to have just a little.\"\n\n\"No!\" she squinted her eyes, crossed her arms, and scowled at me. \n\n\"Madison Grace!\" As I gave her the look, I was cringing inside. This is not how I wanted to appear before Whit's parents. But being a mom was job number one, and I will not be sassed like this.\n\nLittle arms fell to her lap and her head bowed. \"Okay Mommy,\" she mumbled.\n\nI used my finger to lift her head back up. Making eye contact and smiling, I softly said, \"Thank you sweet girl. I love you.\" And gave her a peck on the forehead. \n\nBen leaned over to Madi, smiling, \"You don't like broccoli either?\"\n\n\"Broccoli is yucky.\" Her little frown was so cute.\n\n\"I agree,\" he said, and he gave me another wink and sat next to Madison.\n\nThe food was fabulous. I had never had lamb before, and if I ever get a chance to have it again, I will. Unfortunately, I was the topic of conversation over dinner. Mrs. Mitchell asked me a lot of questions about how I liked working at Maritime so far. I think she already knew how I was doing, and she was well versed in how I had gotten the job. I wouldn't be surprised if she had pulled a copy of my resume and the interview notes from my employee file. She was always polite, but there was a formality to her that I never quite grasped. Almost a sternness to her speaking. \n\nNear the end of the meal, she asked, \"Whitney said you were in a homeless shelter for a while when you came here from Montana?\"\n\n\"MOTHER!\" Whit slammed her glass on the table.\n\nI reached over and put my hand on hers. \"Yes, Mrs. Mitchell, we were in a shelter for a while. I'm from Idaho, not Montana, though there's not much difference once you cross the state line. Just a small town in the middle of nowhere.\"\n\n\"How did you end up in the shelter, if I might ask?\" \n\nMaybe it was my nerves, but I felt rather put on the spot. It took me a moment to think of how I wanted to phrase my response. \n\n\"I came out for a job that turned out to be a scam. And shortly after that the friend Madison and I were staying with decided to move to greener pastures in California. So we were out on the street with little money and no job. Not at all what I had thought I was getting myself into when we came. Shortly after that my old car broke. No way did I have $2,500 for a new transmission. That made getting a job even harder. Plus trying to find one that I could also balance with having Madison in daycare. It's not easy.\" \n\n\"I can only imagine. What are your goals now?\"\n\nI gulped, looking over at Whitney for support. I got a smile and felt her comforting hand on my thigh under the table, an unspoken signal trying to tell me I was doing fine. I think.\n\n\"I'm not sure at the moment. I guess you could say I've met the ones I had. Get out of the shelter, get a job in something other than food service, and complete my associate's degree.\" I ticked each of my goals off on my fingers. \"Now... give my daughter a better shot at life than I got.\" The look I got back from Mrs. Mitchell told me she wasn't impressed.\n\n\"Well, I think you're doing that fine, Jennifer.\" Mr. Mitchell's voice was the opposite of his wife's. So gentle and caring. It made me smile. \n\n\"Thanks. I think my other goal is to continue my education. Get my bachelor's.\" There, maybe that would satisfy her.\n\n\"Good for you. What field of study?\" Mrs. Mitchell actually perked up at this. \n\n\"That I'm not sure about yet. Marketing, maybe, or maybe HR. But,\" I looked at Whit, \"definitely not accounting. I took one course, and that was enough for me.\" Both Whit and Mr. Mitchell laughed at that one.\n\n\"Well, I guess that is better than no plan.\" She dabbed the corners of her mouth with her napkin. Ugh, I don't think anything I could say would impress this lady. \"Whitney, dear, can you please help me clear the table?\"\n\n\"Yes, mother.\" She looked at me and gave me a small eye roll. \n\n\"Here, let me help.\" I started to pick up several of the dishes. One thing I know how to do from working in restaurants and in catering is how to carry many plates and serving items in my arms and not drop them. I followed Whit into the kitchen and set them all on the counter with nary a clink, and couldn't help but notice I brought in more items than Whit and her mom combined. \n\n\"Thank you, Jennifer. Whitney, you should take Madison and Jennifer upstairs and show Madison your doll house. I am sure she would like that.\"\n\nWhit led the way upstairs to what she called the playroom. Like so much of this place, the room was huge. My whole apartment could fit in here. There were signs this had been where Whit played as a little girl, bookshelves with children's books on them, a bench with many well-loved stuffies and, in the corner, a large dollhouse. It was clearly made to look like their home, complete with a large bay window, like the one the Christmas tree was in. Next to it was a bin full of Barbies and accessories. Whitney showed Madi, and it didn't take long for her to be totally immersed in a world of make believe. \n\nWhile Whit and Madi played with dolls, I looked around the room. There was a glass cabinet filled with mementos of Whitney's childhood. A second-place figure skating trophy, a trophy with a skier on top, a picture of people rowing with their arms raised in victory, and a number of other trophies and ribbons. There were also a few playbills from school plays. One even had her name on the cover, she must have been a lead in that one.\n\n\"Looks like you were a busy girl growing up.\"\n\n\"Yeah, Mom would have put me in even more activities if she could have. She always wanted me to be involved in a lot of things.\"\n\n\"Hmmpf, not surprised. I don't think she likes me. Not ambitious enough for her tastes, or something. And here I was proud to make sure my baby was housed, clothed, and fed.\"\n\n\"Don't let her get to you. You're an amazing woman. She just doesn't see it yet, but she will. It often takes her time to warm up to someone. You should be proud of what you've done. I am, my dad is, and she will be, eventually. I think he's talking to her right now about it.\" \n\nWhit wrapped her arm around me, and her embrace began to put me at ease. She held me while we watched Madison play. We were probably there for ten minutes when Mr. Mitchell came into the room, waved at us, then proceeded to ignore us and sit down next to Madison. Next thing I knew he was right there with her, playing with the dolls. \n\nAfter a bit, he looked up and winked at us. \"Been a long time since we did this, huh Sweet Pea. Kinda miss it.\"\n\nWe both came over to join in. \"I can't remember the last time I've played with a dollhouse,\" I mused. For sure, it was at a friend's house, since I never had one of my own. The four of us played for probably an hour before calling it quits. \n\nWhen we reconvened in the living room, Mrs. Mitchell must have taken a happy pill or something. She even smiled at me. Whit put her arm around me as we sat down on a sofa. I couldn't tell if the conversation was more pleasant, or maybe that I just felt less under attack. \n\nMadison told Mrs. Mitchell how she sang Gloria in the Christmas pageant and that yes, Miss Whitney was there to see it. Now it was Whit's turn to get a little from her Mom about not being a stranger in church. I don't think it had much effect, though. ",
        "The conversation continued for quite a while longer until Madison let out a big yawn and crawled into Whit's lap.\n\n\"What? No mommy snuggles?\" I made a fake pout. \n\n\"Nope, I want a Miss Whitney snuggle.\" \n\nWhit looked at me and stuck her tongue out at me, followed by a wry smile.\n\n\"See honey, you look good with a little one in your lap. You know, there are ways to get one of your own.\" Mrs. Mitchell was now snickering at her daughter.\n\n\"Mother! Ugh, you're incorrigible.\" Whit looked over at me and smiled. \"Although, I think I will keep these two cuties around me, if that's okay with them.\"\n\nMadi, still in her lap clutching to both Nani and Anna, nodded her head in agreement. \n\n\"Well,\" I said, \"I think we'd best get going. Otherwise, this one is going to have a meltdown soon.\" With that, we started to make our way towards the door. As we were putting our coats on, Mrs. Mitchell touched my arm. \n\n\"Thanks for coming tonight, Jennifer, and for bringing Madison. She's a great young lady. I had forgotten what Christmas is like here with children around. This place is meant to have children running all over the place this time of year. It brings back so many memories from when I was a little girl. And Madison, take good care of those dolls ok?\" Her smile this time was friendlier. \"Whitney, the Island house is still available to you and your friends on New Year's. We're not going up.\"\n\n\"Thanks, I'll let you know if we want to use it.\" Giving her a bit of a side eye, I got a little head nod back, and she mouthed \"okay\" to me. \n\n\"So, what's the deal with the islands?\" I said, as we pulled out of the driveway.\n\n\"Mom and Dad have a place up on Friday Harbor and we can use it if we like. I had planned on going up with Molly, but that was before I met you. We can go up if you like. Maybe get the boat out and take a little cruise.\"\n\n\"I don't want to impinge on your time with your friend, Whit.\"\n\n\"Well, I think things are going well with her and Dylan, so I think she'd be fine not coming. Then again, maybe both of them would like to come up. The place is big enough.\"\n\n\"Sounds like a fun idea.\" \n\nWe got back to Whit's place, and as I expected, Madison didn't last long. We actually had to work to keep her awake until her normal bedtime. When that time came, she was out quick. \n\n\"And now the Mommy can relax!\" exclaimed Whit as I came downstairs from tucking her in. A glass of wine was waiting for me, as was a comfy spot on the couch next to my sexy brunette. \n\nCurling up next to her, I got a big whiff of lavender, which was quickly becoming a passport to my happy place. I closed my eyes as a finger began to trace over my body. The light touch through my shirt, that contrast of pressure in a tight defined space and then nothingness, was simply amazing. If she kept this up, I was going to drag her to the bedroom.\n\nI set my wine glass on the coffee table and looked at her with the most expectant eyes I could. Those big brown eyes locked on mine, holding me motionless. I was about to take charge when she caved in first. \n\n\"Fuck, Jenn, I have to get you upstairs, now!\"\n\n\"'Fuck Jenn', I like the sounds of that.\" I snickered as I followed her sashaying hips up the stairs.\n\nShucking our clothes as fast as we could, we slid under the covers and snuggled up to each other. Now there was nothing between her hands and my skin, and the sensations were amazing. Soon it was not just her hands roaming my body, but lips as well.\n\nI closed my eyes and let Whitney have her way with me. My legs were parted, and hands began to caress my inner thighs. Periodically, a finger would graze the hair on my pussy. My arousal began to become more noticeable, and this seemed to spur her on. \n\nNow her hand was gently pressing against my mound, and the pleasure radiated from it. \n\n\"Whitney, this feels so good.\" \n\n\"Relax, enjoy, and let it wash over you, babe,\" she whispered in my ear. A finger slipped inside me and began to explore. I could tell she was looking for my mythical, sensitive spot. I shook my head from side to side.\n\n\"No, you want me to stop?\" \n\n\"No, keep going. I'm sorry but you're not hitting anything special... But don't take that the wrong way, as I've never found it either. Maybe your and my fingers are not quite long enough?\"\n\nWhit gave me a demon possessed look and slid herself fully between my legs. The feel of her hair brushing my thighs as her lips danced on my nub heightened the sensations she was giving me. I felt wonderful, loved, and cherished. But it was just a long tease, nothing more was coming. She kept trying, to no avail. Dejected, she stopped after a while, frustration plastered on her face. \n\n\"Well, this is disappointing, I've never not been able to give a woman an orgasm before.\"\n\nI didn't mean to, but I started to giggle. She sounded like a man. I thought about how she was brought up, her competitiveness and her being so goal oriented, her reaction wasn't surprising. \n\n\"It's okay, I appreciate your effort. But I do enjoy what you do to me. I feel so relaxed? No, that is not the right word, connected maybe? Close? Whatever it is, I like it. It's special, 'cos I'm with you. And I know that you care for me.\"\n\nI pulled Whit close, kissed her, holding her in my arms. The feel of her bare skin against mine sent tingles throughout my body. I felt so close to her. However, at the same time, doubts began to creep into my mind. Doubts about my orientation. Was that what the problem was? Was it me? Was I not like her and needed a dick? \n\nI also recalled reading somewhere that after giving birth, some women are not able to, or at least were severely limited in their ability to, have an orgasm. Realizing I could obsess about this all night, I pushed it into the corner of my brain and returned my focus to Whitney.\n\nIt was now my turn to run my hands over her body. They found their way to her ample hips and ass. Subconsciously, my hands began to control her hips, and she began to grind on me. Realizing I could help her more, I raised my knee and bent my leg to provide her with better contact. Soon she was bucking against my thigh, and I could hear a change in her breathing. \n\n\"Yes!\" Whit sure was vocal, and it made me feel good as I continued to help her reach her bliss. When she was done, quite a bit later, Whit rolled off and began to catch her breath. \"That was m-m-m m-m-m good.\" \n\nI stroked her hair and took her in. It felt good to make her happy. Her hand reached up to my face and tucked some of my hair behind my ear. \n\n\"We'll get you there Jenn, and when we do, you're going to love it.\"\n\nI debated saying that it would be okay if I never did, but I held my tongue. Instead, the last thing I remember before falling asleep was her warm breasts pressed into my back while she spooned me, and the feelings of love washing away any doubts about us, about me.\n\n<center>_\\|/_</center>\n\nWhitney\n\nI texted Jenn that I was on my way to pick her and Madi up. It was Friday, New Year's Eve, and we were headed to the islands. Molly and Dylan had agreed to join us and would meet us at the ferry terminal. We loaded Jenn and Madi's bags in the back of the Jeep, including one filled with books and stuff to keep Madi occupied.\n\nAll three of us bipped and bopped to some tunes on the two-hour drive north to Anacortes. We were listening to a playlist I had found on Spotify of a cover band from Virginia. They were tight, and I especially liked it when a couple of the female vocalists sang I'm Feeling You to each other. Jenn and I looked at each other and the both of us could feel the connection between us. I reached over and grabbed her hand and held it all the way to the ferry dock.\n\nMolly texted that they had parked their car in a lot and were in the terminal. They would walk on, and meet us by the ferry snack bar. Since getting one of the limited car slots on the ferry is difficult, we had previously agreed that we would all pack into my Jeep for the couple mile drive from the ferry terminal on the island to my parents' place. My parents had built a nice place, almost 5,000 square feet, overlooking Haro Strait and across the border into Victoria British Columbia. \n\nFinally, we maneuvered ourselves onto the ferry and parked my Jeep. Molls and Dylan were waiting for us, and we found a window booth to enjoy the ride. Madison was excited about her first trip on a boat. She was plastered to the window, watching the ferry navigate through the small islands on their way to Friday Harbor.\n\n\"Mommy, look!\" She pointed out the window as the ferry passed a pod of orcas. We could see a handful of fins breaking the surface as the whales came up for air. \n\nI held Jenn's hand and realized that I was growing rather attached to this woman and her little girl. I hadn't said it yet, but the thought of telling her that I loved her was moving out from the periphery and looking to take center stage. \n\nFeeling as complete as I did in this moment, I dreaded that if something were to happen between us now to break us apart, I'd be twice the wreck I'd been after my big breakup. For as long as I'd been with Heather, I don't think I'd ever felt as connected to her as I did with Jennifer now. Maybe it was my biological clock ticking, or the fact that I was going to turn thirty this year, but my mind kept wandering over to the idea of making Jenn and Madi my family. \n\nOf course, I had no idea if that was something Jenn was interested in. So far, it was an unspoken desire on my part. I noticed that Dylan was crouched next to Madi, pointing out something to her, when I heard a voice snapping my attention back.\n\n\"Earth to Whit, come in Whit. Hello, is space cadet Whitney Mitchell there?\" I glanced over to Molls, who was smiling at me.\n\n\"Oh hi, sorry, kinda got lost in thought there.\"\n\n\"He he, I can see that. Did those thoughts have something to do with that blonde in your arms?\" \n\nJenn picked up on Molls' playful tone and stuck her tongue out at her. \"She'd better be thinking about me, if she knows what's good for her.\" \n\nThere were those slate-blue eyes looking at me and I could feel the floodgates start to open down below. I might have to change my panties when we got to the house. \n\n\"Well Jennifer,\" my bestie said, \"when she gets lost in thought like that, it's often a good sign.\"\n\nI was about to come up with a witty retort when the ferry captain came on the PA and said it was time for us to get to our vehicles and prepare to disembark. Good thing it was a short drive to the house, as it was a very cozy ride the couple of miles there in the Jeep with the extra adults and baggage. \n\nPulling up to the house a short while later, we were greeted by the delivery guy from the local market, dropping off a box of groceries I had ordered before we left. \n\n\"Dang, I always forget this place is bigger than it looks,\" exclaimed Molly as we entered. From the driveway it appears to be a single-story ranch house, but since the ground slopes away, there's a whole second floor underneath that walks out onto the ground and all of it overlooks the water. \n\n\"Molly, you and Dylan can have the master suite down the hall that way, we'll take a couple rooms downstairs.\" Dylan had a mischievous grin on his face as the two of them headed down the hall. \n\nThe three of us headed downstairs, and while I put a few of Jenn and my things away in the junior suite Jenn got the munchkin all squared away in her room. \n\n\"Miss Whitney, I just saw orcas out my window.\" Madi came bounding in, closely followed by Jenn. \n\n\"Cool Madi, later we can look for them with the telescope in the great room upstairs. There are also a bunch of my old games you can play up there.\" I walked behind Jenn and began to give her a shoulder rub. \"You okay? You look a little tense?\"\n\n\"Yeah, I'm fine. Just trying to adjust.\"\n\n\"Overwhelmed?\" \n\n\"No... well, maybe, a little.\" I could feel her shoulder droop a bit as she let out a sigh. \"Back home, you were doing well if you had a doublewide that was less than ten years old. This\"\u2014she waved out the window as we could see a cargo ship sailing off in the distance\u2014\"is on a whole different level. I feel like a fish out of water.\"\n\n\"Are you going to be okay? This is sort of who I am.\"\n\n\"As long as you're here, I'll be okay.\" Arms wrapped around my neck and she pulled me down for a kiss. I pulled her close and was starting a little tongue action when I heard something else.\n\n\"Mommy, now you're kissing Miss Whitney.\" I let Jenn go and looked at the munchkin. \n\n\"Yes, she did, and now I'm going to tickle you!\" I started to wiggle my fingers at her.\n\n\"EEK!\" And she took off running up the stairs. I sprinted after her, kicking off my heels so I could run barefoot through the house. She sprinted around the sofa a few times as we played a game of chase until I finally caught her. \n\n\"Got ya munchkin.\" Madi giggled as I scooped her up and gave her a hug. Out of the corner of my eye I could see a big smile on Jenn's face, watching us. Holding my little friend in my arms, I brushed a wisp of hair from her eyes. \"You know kiddo, I really like your mommy. Like I like her a lot. And if it is okay with you, I want to keep kissing her. Is that okay?\"\n\n\"Yeah, you make my mommy happy. And I like a happy mommy.\"\n\n\"Good, 'cos I plan on keeping her happy.\"\n\nWe went over to the big picture window and I showed her how to use the telescope. Jenn brought a chair over for her to stand on and look out. I pointed out where Canada was and some of the different types of ships. \n\n\"Oh Whitney, there's a tugboat out there, is that one of yours?\" \n\n\"Is it blue with green letters?\"\n\n\"Yes.\"\n\n\"Then yup.\" I grabbed a pair of binoculars and looked at it. \"It's the Whitney Endeavor.\"\n\n\"Did they name it after you?\" a little voice squeaked.\n\n\"No, my uncle's last name is Whitney. It's the family name.\"\n\nI left Jenn and Madi to watch the boats while I went to the kitchen to put the food away. My head was in the fridge when I heard footsteps coming in. Popping my head up, I started to laugh at Molls.\n\n\"Walking a little bowlegged I see. Is he that good?\"\n\n\"The best. I owe you one. These last couple of weeks with Dylan have been great.\"\n\n\"I thought the two of you would do well together.\"\n\n\"How are things with Jennifer?\"\n\n\"Good, we got past that rough spot, and my mom was a bit rough on her at first, but I think we are through that.\"\n\n\"How is it working dating a single mom?\"\n\n\"Well, we try to be mindful of little eyes and keep the PDA down around her. She's caught us kissing a few times. But either they come over to my place, or I've gone to their place, every night for dinner. Most nights it's like we're an old married couple and simply hang out. Read, snuggle, watch some Netflix. We really only get to adult time when they spend a weekend over. It's hard, but it's what you got to do. I need to take her on a proper date, though. But if you had told me, a month ago, I'd need to find a sitter so I could go on a date, I would have looked at you funny.\"\n\n\"Sitter?\" Jenn walked in with a funny look on her face. Standing next to me, she leaned against the island, and did that hair tuck behind her ear thingy again.\n\n\"Fuck, do you know how hot that little move is, babe?\"\n\n\"Huh? Move? What move?\"\n\n\"She means how you tuck your hair behind your ear,\" Molls chimed in. \"Crap, I'm straight and I noticed it, girl.\"\n\n\"Is that all it takes to turn you on, Whit?\" Jenn looked at me with a twinkle in her eye. This time she exaggerated the move.\n\n\"Not when you do it like that, silly. It has to be the subconscious version. First time I saw you do it, it gave me butterflies.\" I reached over and tucked a wisp of hair behind her ear and then let my finger trail down her back. I could see her arch her back a bit at the sensation, so I continued down and then gave her tight ass a squeeze. \n\n\"Whitney!\"\n\n\"You liked that, didn't you?\" I teased. \n\nMolly snickered.\n\n\"Don't do that with other people around,\" she hissed. \"You embarrass me, even if it is your best friend. I'm not used to being on the receiving end of PDA. So just don't do it, please?\" \n\n\"Don't do what?\" Dylan asked, entering the room. He put his arm around Molls and kissed her.\n\n\"Whit copped a feel and embarrassed Jenn.\"\n\n\"Oh, like this?\" He reached over and squeezed my bestie's tush. Molls gave him a playful slap.\n\n\"Yeah, like that, you turkey. Careful, there's a wee one in the room next door Mister.\"\n\n\"Yeah, she is showing her dolls how to look through the telescope. You got a cute kid there, Jennifer.\"\n\n\"Thanks, I think I'll keep her.\" She smiled. \"So Whit, what's the plan?\"\n\n\"I figure we'll lounge around, maybe play some games. I got burgers for dinner tonight that we can grill up.\" She pointed to the indoor grill built into the large stove. \"And then after Madi goes down we can hit the hot tub. I'll open up the liquor cabinet and we can enjoy ourselves. It will be fun. Many of the neighbors will light off fireworks and you can see them all around the water.\"\n\n\"Three women in a hot tub.\" Dylan gave Molls a wink.\n\n\"And you're only going to get lucky with one of them, Mister. The other two are off limits. You're mine. Did I tell you I'm possessive? Mine, mine, and mine.\" The last one in the sequence, she reached between his legs and gave a bit of a squeeze. \n\n\"Yup,\" he said in a slightly fake, slightly real, high squeaky voice. \"All yours!\" We all had a good laugh at his expense and headed out to the great room. Jenn started to show Madi the various games and soon Dylan joined in, and the three of them started to play Chutes and Ladders. Molls and I watched from the sofa on the far side of the room.\n\n\"Well, someone is trying to show he plays well with small children.\"\n\n\"He didn't need to show me, but it's a nice confirmation.\"\n\n\"Sounds like someone else is smitten.\"\n\n\"Well beyond that. It's too early yet, but I have a feeling that someday he is going to put a ring on my finger.\"\n\n\"You want that?\"\n\n\"Yes.\"\n\nI think it was the dreamy look in her eyes, one that I had never seen before in the years that I had known her, that told me her single days were about over. \n\n\"What about you, Whit? I see how you look at her.\"\n\n\"Too early, but I could see it happening. Someday.\"\n\nWe all hung out for the afternoon. I broke out a bottle of wine and the ladies (the adult ones, that is) kicked back while Dylan cracked a beer open. Good thing Molls told me what he likes, so I had a suitcase of Molson for him. I even made Madi feel like a big girl with some cranberry juice in a plastic wine glass.\n\nDinner time rolled around and as I let Dylan work the grill (got to feed that male ego, I know how this works) I pulled out a big bag of baby carrots and a bottle of ranch. Madi started to do a little Snoopy dance.\n\n\"Auurgh! Whit, you're corrupting my daughter again.\" She groaned as Madi popped a carrot covered with the creamy white goodness into her mouth. \n\n\"Nothing but the best, my friend.\"\n\nAfter dinner, we all played a game of Apples to Apples. Of course, the one who is just learning to read, and doesn't know what most of the words mean, beat us all. We decided to call it quits when, near her bedtime, she let out a big yawn and crawled into my lap. \n\n\"Awe Whit, you look so motherly,\" Molls teased. I gave her the look to shut her up, but I secretly liked that she said it. I think I saw a smile on Jenn's face. She asked if Madi was ready to get her jammies on and to my surprise she requested that I help her tonight. I got her all ready and tucked in with Anna and Nani, and we read The Very Hungry Caterpillar together. It was one of my favs as a little girl and one of Madi's as well. I think she was asleep before I closed her door. \n\nStanding just outside the door was a sexy blonde mommy who planted a big kiss on my lips. \"You're going to be a great mommy someday yourself. If you want to be, that is.\" I could see her mentally backpedaling, worried that she might have gone too far. ",
        "\"It's okay. Yeah, someday I do. And yes, the thought of becoming her second mama has crossed my mind. And so has having more, with you. Maybe. I don't think we're ready for that now but, yeah, my mind has gone there.\"\n\n\"Good, so have I. I'm glad to know I'm not the only one. And yes, that's a conversation for later.\"\n\n\"Well, until then, I want to see you in a bikini.\"\n\n\"Um, I only have a one-piece.\" Jenn said shyly.\n\n\"No, I think there are two bikinis on the bed.\" I had snuck a few peaks at her bralettes and picked her up one this week while she worked. She looked at me, surprised. It was a modest one, and one I had been dying all week to see her in. \n\nShe picked up the black top and then looked at the red top next to it. \"Well, the red one ain't for me, that is for sure. And you didn't need to get me anything, Whit.\"\n\n\"Who says that black one is for you? Yes, it is for you to wear, but sometimes the bikini is not for the one wearing it but for the one looking at the wearer. Just like this red one is really for you.\"\n\n\"Well, if you put it that way, I like what you got for me.\"\n\n\"That is not all I got for you. Look in the drawer next to the bed.\"\n\nShe went and opened the drawer by the nightstand. \"Whitney Mitchell! What the hell is this?\" She was holding up the red phallus and harness I had ordered. \n\n\"I thought we could try this tonight to ring in the new year.\"\n\nJenn held it up and inspected it.\n\nI wrapped my arms around her, and the whiff of cucumber settled my nerves some. I had found it difficult to look at the various dildos when I was shopping for them, and even now it was a bit of a challenge for me to look at it, though the abstract color made it a bit more palatable. I had sworn off anything like this years ago, but I was trying to overcome that fear for my girl. I spun her around in my arms so we were face to face.\n\n\"Babe.\" My voice was soft and tender. \"I want you to enjoy what I enjoy. You give me such great pleasure that it is important to me to give it back to you. I thought, maybe we could try this, to see if you need penetration and not just stimulation.\"\n\nShe gave me a small kiss and caressed my face with her free hand. \"Thank you, you're amazing. Yes, we can give this a try, but I'm happy just being with you. It's not about the destination but the journey.\"\n\nWe stared into each other's eyes for a moment, then I couldn't take it any longer and pressed my lips to hers. I could feel the floodgates open between my legs. Eventually, we broke our embrace and got changed. It took a lot of willpower on my part not to tackle her right then and there and have my way with her. \n\nMolly and Dylan were already in the hot tub, and the lights on the deck were lit. We could see out into the water and watch the lights of the ships pass. Occasionally, an early firework would go off. It was cold on the deck, but I fired up a couple of propane patio heaters to help out. \n\nI was about to climb in when Molls caught my attention.\n\n\"Ahem, you promised you would open the liquor cabinet. Aren't you going to take orders first?\"\n\n\"Fine, I'll get them this time, but next round you're getting out and playing fetch.\" \n\n\"Well, you know how I like my Cosmo.\"\n\n\"Wine for you, Jenn?\" \n\nShe nodded. \n\n\"And for you, hockey boy?\"\n\n\"Well, since that IS Canada over there, gimme a Molson, eh?\"\n\n\"Hoser.\" Except that wasn't me spouting off but the girl in the cute black bikini. Everyone looked at her.\n\n\"Take off, eh! I grew up a few miles from the Canadian border. We got better reception from CBC than CBS.\" \n\nThe three of them were still cracking up when I returned with the drinks. For the next few hours, we all laughed and drank and had a rockin fun time. We would slip out and sit on the edge for a bit when one of us got too hot, but the cold of the evening kept pushing us back into the tub. Dylan got into storytelling mode and it was fun watching Molly totally captivated by him. I nudged Jenn, and we both had a little giggle. \n\n\"What are you two laughing at?\" \n\n\"You Molly. I've never seen you this taken with a man before.\" \n\nThe look on my best friend's face was priceless. \"Well, look at this fine hunk of manliness. What is there not to love?\"\n\n\"Well, he is cute Molly, but some of us prefer the softer side of life.\" Listening to Jenn say that made me happy. I still wasn't sure if she considered herself a lesbian yet. For me, this had been crystal clear since I was a teen when it clicked in my brain who I was, but for Jenn it was still new. \n\nFireworks started to go off, and I glanced inside the house in time to hear the tall case clock begin to chime midnight. Jenn and I made eye contact quickly, followed by lip contact. \n\n\"Happy New Year, babe,\" I softly spoke to her. At that moment, my world consisted of her and me. Everything else was blocked out. I leaned back in for another kiss. \n\n\"Don't you two think you should get a room?\" Molly quipped.\n\n\"Yeah, Whit, don't you think you should take me to our room?\" Those slate-blues were looking expectantly at me and, although I think she did it on purpose this time, she did that hair tuck thing again while climbing out of the tub. I was right behind her. \n\n\"You two can shut things down, right? I've got to take this woman to bed, now!\" I barely let her towel off when I was pulling her down to our room. But I didn't have to try hard, Jenn was eager as well. \n\nWe were both naked seconds after the door closed. I feasted my eyes on her naked form. Jenn's nipples were fully erect, they stood tall and proud. Her wet pubic hair made cute little curls covering her pussy. Collapsing onto the bed, I pulled the covers over us to let our naked bodies warm us.\n\nI ran my fingers through her hair. No words were spoken, but our eyes were communicating our intense passion for each other. Our hands were all over each other, and it felt glorious. Soon we were both playing with each other's pussy. Jenn was getting to know my body and what spots she needed to hit to satisfy me. And she did, twice. \n\nWanting to make her feel as good as I did, I reached into the drawer and began to put on the harness. My hands started to shake as I looked at the red phallus. I was well beyond my comfort zone. You can do this, girl, I thought to myself. A pair of slate-blue eyes followed my every move. \n\nIt was weird for me to have a cock sticking out from me. Years ago, Heather and I tried one of these, but the sight of one, let alone the thought of it going on or in me, gave me the heebie jeebies. However, tonight was not about me but about making my lover feel good. I did, though, turn on the bullet hiding in a pouch of the harness so I would feel something as well. I swallowed my anxiety as I poured some lube on it and rubbed it around. \n\nJenn had positioned herself on her back with a pillow underneath her bum. Her inner lips were fully engorged and opened a bit, inviting me in. She looked at me and must have seen the hesitation on my face.\n\n\"Is this okay with you? You seem as nervous as I feel.\"\n\nI swallowed. \"Yeah, it's weird. But I want to try this with you. I hope it will make you feel good all over. Like you make me feel.\" \n\n\"Ok, ready when you are. Just go slow please.\"\n\nI could see the nervous anticipation on her face. \"Of course. If it is too much, let me know and we can stop or change positions.\"\n\nI got a nod back.\n\nRubbing the tip around her lips, I gently pushed about an inch in. Jenn arched her back and then relaxed as she grew accustomed to the penetration. I was going to hold it there longer when hands grasped my hips and attempted to pull me in. \n\nI resisted the urge to plunge the whole thing in quickly. Instead, I went slow and continued to let her adjust to the feeling of having something inside her. She didn't have me stop and kept pulling me until the whole thing was in her, which was different for me as well.\n\n\"Fuck! Oh wow!\" Jenn moaned.\n\nOur eyes locked, and the depth of passion I saw was enormous. Her hands held me in place for a moment as she took me in. Our naked bodies were fully intertwined now. Face to face and breast to breast. The only thing between us was the harness holding our new red friend to me. \n\n\"Fuck me.\" \n\nSlowly I began to thrust my hips and I could feel the bullet begin to tickle my clit. To keep myself from coming too quickly, I focused my attention on Jenn. She had closed her eyes, soaking in the experience. \n\nSlipping my hand under her neck and cradling her as I pumped my hips, the connection of our naked bodies together was the most intense feeling I had ever had. Our breasts pressed together, sliding around between us as I thrust the dildo into her. \n\nWe were one, completely connected to each other. Jenn would close her eyes and feed off the connection for a moment and then open them again and smile at me. Her hands roamed all over me and numerous times I felt shivers down to my toes as her nails gently scratched me. Her hand, the connection we had going, and the gentle vibrations of the bullet in my harness overcame my ability to focus on her.\n\n\"Y-E-S! JENN!\" I think Skipper might have heard me back at my house.\n\nMy body collapsed on top of hers, and she held me as we both recovered. \n\n\"Thank you.\" Jenn smiled at me. There were those dimples again, I don't think I will ever get enough of them. \n\n\"That was way more intense than I ever imagined.\"\n\n\"I think that was the best sex I've ever had,\" I replied.\n\n\"I'm glad you enjoyed it.\"\n\n\"Do you want me to keep going? Change things up a bit?\"\n\n\"No, I'm getting a bit sore. Not used to this. But this was... special.\" I felt her finger trace idly around my chest. \"I definitely want to do this again with you.\"\n\n<center>_\\|/_</center>\n\nThe first rays of sun poured through the window of our room. I had slept the sleep of the satiated lover. I stretched out and realized I was alone in the bed. After taking care of the morning necessities, I slipped into some comfy flannel pants and a tank top and made my way upstairs. Jenn was snuggled on the couch with a pint-sized mop of blond hair sticking out of the blanket, covering them both. I think she had fallen back asleep while Madi was watching Elmo and Big Bird. \n\nThe smell of coffee from the kitchen pulled me in that direction.\n\n\"Well, good morning. Did you get enough sleep last night?\" Molls had quite a grin on her face.\n\n\"Oh, it was good,\" I said demurely. \n\n\"That is the understatement of the new year. Shit Whit, I knew you were vocal, I've heard you before. But last night, wow! And clear across the house.\"\n\n\"Um....\" I held my fingers over my lips with a pursed smile.\n\n\"Well, I'm glad you and Jennifer had a good time.\"\n\nI just smiled and giggled a bit. Then I began to formulate thoughts that have been swirling around in my head but had not yet been vocalized.\n\n\"Molly, I've fallen for her hard. And not because that was the best sex of my life. That was probably what caused it to be the best sex of my life. I can't describe it. I just want to be with her. Care for her, love her. And the munchkin too.\"\n\n\"Have you told her?\"\n\n\"Not in so many words.\"\n\n\"You should. Have you used the 'L' word yet?\"\n\n\"No, but I think that is coming soon. Have you and Dylan said that yet?\"\n\n\"Yeah, he told me on Christmas. We were at his parents' place.\" She sighed and got a dreamy look on her face. \"Yeah, it was good.\"\n\n\"What was good?\" Dylan asked, walking into the room. \n\n\"Christmas with you?\" Molls patted his cheek. \n\n\"Yeah, that was good. Somehow I thought you were going to say something else.\"\n\nJust then, Jenn walked in. \n\n\"Nah, I wouldn't embarrass my new friend here with how jealous I was of her getting banged into the wee hours of the morning.\" \n\nJenn's face went a deep shade of red. I put my arms around her and gave her a kiss. And not just some peck on the cheek type of kiss, but a sweep-her-off-her-feet-and-take-her-breath-away type of kiss.\n\n\"Well now,\" Dylan said. \"I guess you two really did have a good time last night.\"\n\n\"Um, someone introduced me to a friend last night.\" She gave me a small peck on the cheek. When we both looked back at Molly she had a confused look on her face. In response, Jenn held her hands up indicating the size of Red, then made a finger going into a hole gesture.\n\nThe expression on Molly's face was priceless. She regained her composure and began to look around. \n\n\"Don't worry, she is glued to Big Bird right now,\" Jenn said, shaking her thumb at the other room.\n\n\"Whew, and your wee one never woke up?\"\n\n\"Madison will sleep through just about anything. When we were in the shelter, it was next door to a fire station. Not once did the sirens ever wake her up.\" \n\nAs Dylan walked across the kitchen to refill his coffee, Molls leaned into Jenn and whispered, \"So, er, you actually got her to use a toy with you?\"\n\n\"Her idea. And it was great.\"\n\n\"Whitney, you amaze me girl. I thought you had sworn off anything like that.\"\n\n\"Well, anything for my special girl,\" I said, giving her a squeeze. \"But thank goodness for online ordering and overnight delivery. I don't think I could have gone into a store and gotten something.\"\n\nJenn turned beet red again, her eyes darting around the room. She looked back at me and asked, \"So what is the plan today?\" \n\n\"Well, we could go out on the boat. It's sunny and we can stay in the main cabin area so we wouldn't be cold. Maybe we could see some whales or just go for a ride. I called the marina earlier this week to make sure she was out of storage and in the water and ready for us if we wanted it.\"\n\nEveryone liked the idea, and we all got ready. It didn't take long at the marina to get in and cast off. We made Dylan carry the cooler with drinks and snacks and show us all his He-Man muscles. I navigated the fifty-foot trawler out of the marina and into the channel. It was second nature to me. I had learned my seaman's skills as a little girl with my Grandpa Whitney and spent many a summer with either my parents or grandparents on the water. Not surprising, really, for a maritime family like ours. \n\n\"Miss Whitney?\" A cute little munchkin was looking at me as I took us around a buoy and into the main sea lane. \n\n\"What is it, sweetie?\"\n\n\"I saw this boat is the Miss Whitney. Is this one named for you?\"\n\n\"Yes, Madi. My dad named this boat after me.\"\n\n\"See Mommy, I told you.\" \n\nI looked at Jenn. Fuck, she did that hair tuck again. Was she trying to get me going again? Probably not, but it had that effect. I looked at her. \"Grab your coat and hat. Let's go topside for a bit.\" We went up the ladder and I switched the navigation controls to the flybridge.\n\n\"Nice view, Whit.\"\n\n\"Yeah, are you having fun? Not too overwhelming?\"\n\n\"I'm trying. Being with you here makes me feel all warm inside.\"\n\n\"Good. So, um, I wanted to let you know something.\" I took her and looked her in the eyes. \"You know you mean a lot to me, right?\" \n\nShe nodded. \n\n\"And that I enjoy being with you, and Miss Madison. But especially you, Jenn. I can't imagine life without you now.\"\n\n\"Me either.\"\n\nUgh, why is this so hard to say? There was an expectant look on her face. Okay Whit, time to go all in. \"Jenn, Jennifer, what I mean to say is that I love you.\" There, I said it. Now it was my turn to look at her. \n\nBlank, that was the look on her face. Oh shit, had I gone too far? I began to gird myself for rejection. Then she smiled.\n\n\"Wow, no one's said that to me before. Well, no one who wasn't family let's put it that way. Whitney Mitchell, you just made me one happy woman. I've been feeling the same way for a while now. I didn't know how to say it. I love you too.\" \n\nJenn embraced me, and the world faded away. That is until I heard my name on the radio. Like all good sailors, channel sixteen was always on and in the background. With a little experience, you get to know when you can let it fade into your mental background and when you should pay attention. \n\n\"Whitney Constellation hailing the Miss Whitney on sixteen, over.\"\n\nI grabbed the mic. \"Miss Whitney on sixteen go ahead Constellation.\"\n\n\"Switch to channel twenty-eight Miss Whitney, Whitney Constellation switching to twenty-eight, over.\"\n\n\"Miss Whitney switching to twenty-eight, over.\" I turned the dial on the radio as directed.\n\n\"Miss Whitney now on twenty-eight. How are you, Constellation?\" We could see the tug behind us. A hand waved from the bridge of the tug.\n\n\"Miss Whitney, please, if you don't mind, quit snogging the help and pay attention to your boating?\"\n\n\"But she is so cute, Captain Eriksen, I can't help myself. And she is more than the hired help, thank you very much.\"\n\n\"I can see that. Nice to see you out here, Whitney and Jennifer. Enjoy the nice day. And Whitney, be nice to her. Otherwise Mrs. E. is not going to be happy with you.\"\n\n\"Hah! Thanks, hope you all are doing well.\"\n\n\"You do the same. Whitney Constellation switching to sixteen, over.\"\n\n\"Miss Whitney back to sixteen, out.\"\n\nI looked back at Jenn and bit my lip. We both looked like little schoolgirls caught by the principal. I started to pay a bit more attention. We were fine, but yeah, drifting a bit out of the channel. \n\nWe motored around for a while until we both got cold and headed back down to the main cabin. We walked in and Molly gave me a look. \n\n\"You're so busted, Whit. 'Snogging the help' huh?\"\n\n\"You heard that?\"\n\n\"Oh yeah.\" Both Molly and Dylan were snickering at me.\n\n\"What's snogging, Mommy?\"\n\nJenn was about to respond when I lifted the munchkin into my arms. \"Kissing, little one. I got caught kissing your mommy. Again. And do you know why? Cause I love her, that's why.\" \n\nMadi gave me a big smile. \n\n\"And you know what else, munchkin? I love you too. Is that okay with you?\" \n\nShe nodded her head quite enthusiastically, and her toothy grin covered her face. \n\nWe continued our sail for a few more hours. We never did see any orcas, but we still had fun just puttering around. That evening, instead of cooking, we went to the yacht club for dinner. Madison looked at my plate and frowned in disgust at the steamed broccoli I was served with my meal. I assured her it was ok, and she returned to her chicken strips and fries with a large side of ranch dressing. \n\nAt the end of the meal, I ordered a bottle of Champagne for us. Madi was feeling left out until she saw the flute of sparkling apple juice just for her. We toasted to new love and had a lovely evening. As the adults retired that evening (long after the munchkin did, of course) I flipped Molly a couple packets of ear plugs. \"Just in case you need them,\" I joked. I hope they used them. \n\n<center>_\\|/_</center>\n\nI was determined to establish some good habits as I started my new job. My alarm went off way too early, and after splashing a little water on my face, I laced up my runners and hit the pavement. Running had started out for me as a way to spend more time with my ex. She had been on the Track and Cross-Country teams in college and was one of those psychos who even ran in the snow. I was a little more of a fair-weather runner now. Maybe that was why I failed to complete the Seattle Marathon last year, collapsing at mile nineteen. Then again, I didn't have any purpose for my running last fall. \n\nThe January morning was cold, wet, and still dark, so I had my reflective running coat on. The streets were starting the Monday morning hustle and bustle. The last time I hit the pavement, I had spotted Jenn in the park. \n\nSo much has happened since then. I've fallen hard for her; it is rare that my thoughts don't wander in her direction. Jennifer is so different from Heather. It took her leaving me for me to see how selfish Heather was. Not that I don't have my moments. That is what happens when you're an only child in a well-off family, I guess. ",
        "On my way back home, I decided to alter my normal route and come down a different street. It was just a couple of blocks before where I normally turned. Coming up on a familiar apartment building, I glanced to my right and saw Madison sitting by the window, probably eating her breakfast. I waved and got a wave back. I just might have to keep this schedule in the mornings, just to see my little buddy and maybe her mom from time to time. Maybe those two could be my motivation to try the marathon again. \n\nJenn had suggested that we have lunch together on my first day, but my Uncles Ruben and Silas wanted to take me out. \n\n\"Whitney, so what's the deal with you and our new receptionist?\" Ruben asked coyly. \n\n\"Doesn't the employee handbook I was handed this morning say that I have a right to my personal life?\" I retorted.\n\nMy uncles laughed at me. \"Didn't you see the exemption in there that all bets are off if you're part of the Whitney clan?\" \n\n\"Besides,\" Silas joined in, \"you were barely with the family on Christmas Eve, and ditched us on New Year's. The whole family was talking about you.\"\n\n\"Well, hopefully my mother had nice things to say. She was a little harsh on Jennifer at Christmas. And she was just meeting her to boot. At one point I was afraid Jenn was going to take off running.\"\n\n\"Your mother didn't like Kathleen or Helen either when she first met them. She didn't think they were good enough for her brothers. She'll come around. We both have made excuses to head over to Maritime, in reality, just to meet Jennifer,\" Silas said. \"We both like her.\"\n\n\"I think your mom does like Jennifer. She only spoke highly of her to us, and couldn't stop talking about Madison,\" Ruben chimed in.\n\n\"Well, she could have been a bit nicer to her in person.\"\n\nSilas stared me in the eyes, his gaze was rather intense. \"Whitney, you do understand what your mother is concerned with, right?\"\n\n\"Yeah, she wants grandbabies. She can wait.\"\n\n\"Well, she does want that, but first and foremost, she is trying to look out for you. You know, there are some crazy people out there, and I think your mom is trying to make sure you're not some girl's meal ticket.\"\n\n\"From what your dad was saying, that doesn't seem to be the case.\"\n\n\"That's crazy. She's not that way at all.\"\n\n\"Your dad can see it. I think your mom does too. I'm just trying to help you understand what they are thinking. Okay?\"\n\n\"Fine, I get what you're saying. Don't worry. Jenn's not interested in me for my money.\"\n\n<center>_\\|/_</center>\n\nMy phone rang after what I figured was Madison's bedtime. \n\n\"How was your first day?\" she asked \n\n\"Good. Sorry, I couldn't see you today. Just got a lot to figure out. I spent most of the day pouring over spreadsheets with Ruben. I didn't leave the office until seven. My brain is jelly right now.\" The gears were turning in my head, trying to decide if I should let her know about the conversation I had with my uncles. Maybe better if we talked about that in person. \n\n\"I bet.\"\n\n\"Glad I went for a run before work today. Don't think I would have had the emotional energy to get out there tonight.\"\n\n\"Do you run most days? I don't think I have ever seen you get out there before. Although Madi thought it was great to see you and that you waved.\"\n\n\"I did until I met this girl a few weeks ago. I'm trying to get back into the groove. I've done a couple of half marathons in the last few years, and I want to see if I can do a whole. I tried last year and didn't make it. Dropped out at the two-thirds point. Promised myself I would train more this year for it and try again.\"\n\n\"Well, maybe I can motivate you. Just think about this. After a long run, just imagine my hands giving you an all over massage.\"\n\n\"All over?\"\n\n\"All over, Every. Last. Spot.\" Jenn's voice was low and husky.\n\n\"I could use one now, I went for a run this morning.\"\n\n\"Sorry, girl, someone just fell asleep. And my bed is not big enough for the two of us. And if I give you one of those, you're not leaving for the night.\"\n\n\"Boo. Well, sometime soon?\"\n\n\"Sometime soon, I promise.\"\n\nTo be continued...\n\n<center>_\\|/_</center>\n\nAuthor's note: Thank you for sticking around to the end of this chapter. I hope you enjoyed it. If so, please consider providing some feedback. Votes, comments, or PMs are all welcome. I have more chapters of this story in the works, so follow me to be notified when the next part is published. \n\nIf you are looking for something more to read, check out the authors I follow. Maybe you'll find something there that you like.\n\nMuch of Catering Girl was written while listening to the music playlists that my friend BrokenSpokes has put together. If you're not listening to them, what's wrong with you? Go check them out. She has links to them on her profile page."
    ],
    "authorname": "GinnyPPC",
    "tags": [
        "lesbian first time",
        "lesbian romance",
        "romance",
        "single mom",
        "christmas",
        "ranch dressing",
        "drama",
        "lesbian drama",
        "love story",
        "romantic"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/catering-girl-ch-03"
}