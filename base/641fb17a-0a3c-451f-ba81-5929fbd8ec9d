{
    "title": "Little Things Ch. 05",
    "pages": [
        "This chapter wasn't supposed to exist, which is why it messes up the neat and tidy \"of 04\" I had in my previous submissions. But even I knew how abrupt my original ending was...and some quite insightful suggestions from klaxx allowed me to realize how I might create a better sense of finality. Hence, this chapter.\n\nAs with the rest, I would suggest it be read only in the proper order, lest nothing make sense.\n\n---\n\nThe remainder of the break passes with such swiftness that it feels positively unfair, as though time itself now conspires against us, hours spent in each other's company seeming hardly more than moments. After that one glorious morning, we don't dare too far inside the house - not with our creaky metal bedframe, and mom never gone for long. We have to steal interludes elsewhere, hidden away in the barn, or in the truck on a deserted stretch of road, or deep in the woods. Not sex - at least, not always. Just bathing in this new depth to our relationship, in love now blooming bright and verdant. Laying beside him in the snow, staring into his eyes...I'd seen couples do that kind of thing before, just stand together for long spans of time, arms entwined as they gazed at one another, and I'd never quite bought it. Never saw the appeal, thought maybe they were faking it, forcing it...pretending, to fool themselves into thinking they had some kind of fairy-tale romance. Now, suddenly, I understand. I could stare forever into those soft sapphire eyes, bask an eternity in the warmth of his embrace. If we had an eternity to spend...\n\nBut we don't. Reality calls, grey and dismal, and so after a heartfelt parting with my parents, we're driving back up to the college. Glad, at least, for the accident of logistics that requires David to take the trip twice, to bring back the truck. One more day with him. Maybe two. After that...well.\n\nI glance over, smile softly at David in the driver's seat. Let my hand snake over to ruffle gently in golden hair kissed with pink, stroking idly at the back of his neck. The muscles there loose now, relaxed, as he looks over and grins goofily back at me. The winter sun shining brightly down on us, gleaming in off the hood of the truck. We don't need to talk. Not right now. Silence can be its own language, carry its own melody - a song of tender togetherness, laid atop the rambling guitar that plays from the truck's speakers. I've half a mind to unbuckle myself, to crawl over and squeeze into his lap...but a lurking police car we pass on the side of the highway puts the kibosh on the idea. Wouldn't want to get pulled over for something like that. Especially now that we're nearly there.\n\nIt's about seven o'clock when we finally pull into the apartment parking lot and stumble up the concrete stairway to the second floor. Dinnertime - even before I get the door open, my nose picks up the spicy scent of some choice new dish, and once I do, there's two familiar faces looking in my direction all the way over from the kitchen table.\n\n\"Well, look who made it.\" April speaks first, blandly amused, a glass of wine carelessly tilted in her hand. \"Guess I owe you five bucks, Mare.\"\n\n\"Welcome back!\" Marie's reaction is the stronger, rising from the table and rushing over in greeting. Apology falling into her expression when she's only halfway to me, weakly smiling as she pushes in for a friendly hug. \"God, Sam, I'm sorry. You told me you were coming back today, and then when I was preparing dinner I quite forgot.\" She bites at her lip, looking as though she's telling me about a death in the family. \"I'm afraid there isn't any left.\"\n\nI have to laugh. \"Don't worry about it, Mare. I mean, it smells delicious, but David and me filled up on drive-through burgers on the way over.\" Glancing up at April, a bit of affably disparaging humor curling my lip. \"I see the place didn't burn down after all. Good.\"\n\nShe laughs at that, cheerfully enough - but there's a new spark of interest in her eye at the mention of my brother, and it grows only brighter as he steps into the living room after me, toting my largest piece of luggage. A familiar slink in her step as she, too, rises to her feet and joins the gathering just inside the door, her gaze on David at least as much as on me. \"It was close. We have some pretty wild parties here, while you were gone.\" Her tone, at least, keeps to its abstracted, superior amusement, not yet dropping to the low croon of seduction.\n\n\"Oh, we did not.\" Marie rolls her eyes in tolerant exasperation.\n\n\"...some pretty wild parties...\" April just repeats softly, enamored of her own joke. A little pause, smirking, as she eyes David and me. \"How about you two? Bring back any corn for us?\" She ends with a vague gesture with her free hand at the living room furniture, taking another sip from her wine. \"Sit down, sit down.\"\n\nIt takes me a moment, settling down on the couch next to David, to decide that she's being genuinely friendly. Or at least, mostly genuine. It can be hard to tell with April, sometimes. \"Afraid not. Not exactly the season for it, you know.\"\n\nHer tongue clucks quietly in faux disappointment. \"Too bad.\" A moment's pause, glancing over. \"You know, I didn't realize you'd be coming back with her, David. How long are you staying this time?\"\n\nHe shrugs, smiles small and wry. \"Probably just tonight. My school starts up again, day after tomorrow.\"\n\nApril's lips push outward in a pillowy little pout. \"A shame.\" Her gaze flits back over to me - but I'm pretty sure it isn't for my benefit that she slowly crosses her legs, her skirt lifting up above the knee. \"Mind if I borrow him tonight, Sam?\" Laughter still in her eyes, though her voice carries a challenge slightly slurred with alcohol. \"I mean, I was all set to have a boring night in...but if he's here, I'd hate for him to go to waste.\"\n\nI bristle inside, unable to immediately think how to respond, my hand clutching tight and possessive at David's - but to my relief, he answers for me. \"Sorry, April.\" Firm and confident, with just a hint of humor. \"Not gonna happen.\"\n\nAn exaggerated sigh. \"Fine, fine.\" Affable enough. But her eyes are curious and enterprising on the two of us, looking at how our fingers lace together, how I sit on the couch leaning comfortably on David's side. For a moment, she opens her mouth to say something more - then shuts it again, shakes her head as she grabs for the remote and flips on the TV. My heart fluttering with an ambiguity of tension and relief. A secret half-kept.\n\nFor perhaps an hour the four of us sit there, chatting lightly as we alternate between watching the big-budget drama on the television and the often more engaging antics of Marie's kitten chasing down imaginary prey. And for all the conflict I've had over the last year with April, all the awkwardness now of this secret David and I share...I feel comfortable. Calm. Cheerful, despite the appraising glances April keeps shooting in our direction. Indeed, almost mischievous, snuggling in closer against his side to watch her eyebrow lift. Teasing her with the idea, the truth she must suspect.\n\nI guess I can't be too surprised when this eventually drives her to the breaking point. Really, she showed admirable restraint. \"Okay, Sam,\" muting the volume as she shifts in her seat to face us directly. \"I have to ask. That thing we talked about, just before you took off...\" She hesitates, and I feel a certain gratitude that she's still being circumspect. Just in case it weren't true. \"Did anything happen with that?\" Her brown eyes sparkling, engaged and hungry.\n\nA pause, silent. David, warm and solid and reassuring beside me; Marie, looking on in uncertain curiosity, sensing the significance of the question without knowing its implication. Even her kitten seems to be watching, waiting for my answer. I'm not sure what to say. I mean...god, I didn't plan to actually tell her. Didn't think I'd tell anyone. This isn't exactly the kind of thing you spread around. Hell, I think it's even illegal, some places.\n\nBut these are some of my closest friends. Even if it has been a rather rocky friendship, with some of them. If I can't tell them...besides, I don't even want to keep it a secret, really, don't want it to be something shameful and wrong. I want to climb up on the rooftop, scream out how I love him, how my body tingles as his touch. I want to yell it at the top of my lungs and let all the world look on in jealousy of what we have together. I mean, I won't. Probably. But right here, right now, with just these two confidantes...\n\nJust a little squeeze at David's hand, and he turns to face me as though he already knows what I intend, as though we had it all planned and rehearsed. His face hovering before me, strong and handsome, happiness softly curved on firm pink lips. That familiar hunger, need warming in my belly...to taste his tongue, to breathe his breath...nothing to hide, no reason to hold back. It feels the most natural thing in the world as I lean into him, touch together our lips in a kiss first slow and gentle, but soon surging forth with ardent desire. Mouths opening to one another, sliding breathlessly on hot and slippery skin as my free arm sneak around his back, pulling me tighter against him. Wanting to feel his body all the way along my own.\n\n\"What are you doing?\" I scarcely hear Marie's shocked exclamation. A giggle bubbling somewhere inside - isn't it obvious? And April's rejoinder, quick and scolding, \"God, Marie, shut up!\" Then nothing. Quiet, as David's tongue caresses my consciousness, as I nibble teasingly on his lower lip, diving with eyes closed into the heady abandon of his embrace, of tasting, touching, kissing this beautiful boy, with a tiny extra thrill in the faint awareness of our audience.\n\nFinally - thirty seconds later? A minute? - I pull away to glance with a bit of a smirk over at my wide-eyed roommates. Marie's mouth hanging half open, scandalized; April as flushed as I feel, grinning madly, the first to speak. \"Oh. my. god.\" An almost manic delight in her eyes. \"That is...just about the hottest thing I've ever seen.\"\n\n\"Are you crazy?\" Horrified disbelief. Marie's gaze darts back and forth between April and me; it's not even clear whom she's addressing. \"He's your - they're brother and sister!\"\n\n\"Uh, yeah, I know.\" April manages somehow to sound thoroughly condescending without losing her rabid glee. Her attention turning back to us, teeth shining brightly through her grin. \"Please tell me you've gone all the way.\"\n\nAnother secret. Another potential confession. I glance over at David, at his quirked eyebrow and faint, sardonic smile. If he doesn't mind telling... \"Yeah.\" My lips tugging upward, a thrill to this revelation. Resting my head lovingly on his shoulder, as he holds me close. There's no fear with him beside me, no shame or worry; I feel invincible, like I could stand naked in a stadium announcing all we've done.\n\n\"Samantha, you can't be serious.\" Marie sounds downright stricken, staring at us in shock and quiet horror. \"What are you thinking? You can't - I mean, what if you get pregnant? With someone that close...you'd be looking at fifty times the chance of some kind of genetic disease.\"\n\nDespite my sense of indestructibility a moment ago, this strikes home. My heart falling a fraction of an inch. A brief hesitation. I'm sure she's right; Marie knows that kind of thing. And the idea of it...of trying to have a life like this and facing a diseased child, some sad, deformed wretch...\n\nIt takes the gentle strength of David's arm around my waist to bring me back to reality. That's getting way too far ahead of things. \"I'm not worried about that.\" My voice coming firm enough, sincere. \"I'm on the pill, and...maybe it's something we'll have to think about, talk about, but for right now it doesn't matter.\" A quiet moment, looking back at Marie, at her head slowly shaking in something not far from disgust. A trace of disappointment in my tone. \"I was hoping you'd be happy for me.\"\n\n\"Happy?\" Incredulous. \"About you sleeping with your brother?\"\n\n\"Well...\" I laugh, brief and cheerless. \"Maybe not that part specifically, but...\" Silence. Emotion lumping in my throat. I have to swallow it before I can continue, squeezing at David's hand. \"I love him. I love him like I've never loved anyone, and I didn't even realize it until just recently. I feel like...like I'm meant to be with him.\" Stumbling into clich\u00e9, as I struggle to express the feeling that pounds in my heart.\n\n\"Sam, you're not supposed to feel that way about your brother.\" Marie's voice slow and urgent, as if warning a child the dangers of a hot stove. Glancing over to David, her eyes a mix of worry and apology. \"Or your sister. It's not how things are supposed to work.\"\n\nMy head shakes quick and forceful. \"I don't care what I'm supposed to feel, Marie. I love him. And I hoped that, as my friend, you would...support me.\"\n\n\"I'm sorry.\" Quiet. Almost a touch of pleading - I don't think I've ever seen her look so uncomfortable. \"I'm sorry. I wish I could, but this is just...it isn't right, Sam. It's not healthy. Genetically, or psychologically, or...or anything.\" Distress forcing her to her feet, heavy on her brow as she begs herself away. \"Look, I'm going to go to my room, and you three can do whatever you like, okay? Just...I don't think I want to know about it.\" And with nothing further said, she turns to make a quick exit, disappearing down the hallway with a tight, unhappy gait.\n\nSilence for some moments. Awkward, despite David's thumb stroking comfortingly at the back of my hand, despite April's reassuring half-smile, sitting now curled up Indian-style in her chair. I'm the one at the center of this. I have to speak. \"She seems pretty freaked out.\" A low muttering. I don't know why it surprises me.\n\n\"Oh, she's just being finicky.\" April answers quick and eager. \"Deep down, she's probably totally turned on by the idea. And listen, you two-\" She points us out dramatically with her index fingers, and I can't help feeling a little better, cheered by her high spirits. \"-are seriously my personal heroes right now. I mean, god, I didn't think you were really going to do it! Thought you were too high up on your horse for that.\" Her grin sparkling over to my brother. \"David, you totally made the right choice. I told Sam, you two make an incredibly cute couple.\"\n\n\"Well, um.\" He smiles back with wry humility. \"Thanks, April.\"\n\nA snort of laughter as her head shakes giddily, and I can recognize the faint flush of arousal on her cheeks. \"God, I can't stop thinking about it! I wish I could just, um...\" Delighted inspiration flashes in her eyes, and she lets out a little gasp. \"You know what would really be something, if the three of us-\"\n\n\"No.\" Quick and firm, cutting her off before she can finish the suggestion she so obviously intends. I like April well enough, but the idea of doing anything sexual with her is no more appealing than the thought of sharing David. \"Absolutely not.\"\n\n\"Oh, don't be so quick to turn it down,\" she laughs slyly. \"Why don't we see what your brother has to say, hm?\" And hopping to her feet, she scampers over to the couch to plop with curled-up legs down on the opposite side of David, putting on one of her pouty, seductive faces. Stroking softly at his bicep, through his shirt. \"I'm guessing you haven't been with two girls at once before, right?\" Her voice high and sweet now, like a little girl's. \"Be a pretty fun way to spend your last night here, I bet. Sleeping with your sexy sister and her hot roommate. The two of us fighting over who gets your cock...\" Her hand slips down, gripping gently at his thigh as her eyes flash beguilingly. \"What do you think?\"\n\nI just look away, biting my tongue. Frustrated. Wishing again that she were just a little more restrained, that she didn't pursue her desires quite so vigorously. But - damn it. If David wants to, if it'll make him happy...I'll do it. For him. No question that he's worth it. Just...\n\n\"Sorry.\" He scarcely even looks at her. Just a little glance from the corner of his eye as his arm squeezes tight around my waist, his cheek touching warm and loving at my forehead. \"I've already got everything I need, right here.\" His fingers entwining reassuring with mine as brief laughter bubbles from my throat, happy and relieved, and I snuggled in closer against him. Crane up my neck for a tiny kiss on the side of his jaw.\n\n\"Hmph.\" April's pout a bit more genuine now. \"Fine. If you want to be all 'my fair lady' about it.\" Still sitting there, leaning half against him as she thinks for a moment. \"What if I just watched?\"\n\n\"Jesus, Ape.\" A wince spreading on my face. Somehow this suggestion feels even dirtier than the threesome.\n\n\"What? Come on!\" Faint, plaintive aggravation. \"This is like one of my biggest fantasies. Every time you hear about it in real life, it's always some gross couple in their fifties who didn't even know they were related. Or it's like a stepbrother or whatever, and who the hell cares. You two - you're damn sexy together, and it's the real deal. Watching the two of you go at it would be about the hottest thing in the universe.\" She bites softly at her lower lip, a faraway look in her eye. \"Fuck, I can just see it...spread wide and screaming as he pumps you full of hot brothercum...\"\n\n\"Okaaaay.\" Awkward, bemused laughter, as I try not to think too much about that, try to pre-empt any other fantasies. \"I get the idea.\" She certainly has a way of forcing forward the comfort level of a conversation; I can scarcely believe what I'm saying as I turn my attention back to David, a light blush tinting my cheeks. \"What do you think? Does she deserve to see us together?\"\n\n\"Hmm.\" Half a smile curves his lips, warm and thoughtful as he glances again over at April, back to me. A touch of humor in his tone. \"Maybe next time.\"\n\n\"Next time?\" Her voice shoots high in shallow outrage, pulling away. \"Fuck, now you're just teasing me.\"\n\n\"Sorry, Ape.\" A bit of a giggle at my throat. \"You heard the man. Next time.\" I rub gently at his chest, treasuring the feel of his body. Drinking greedily his scent. All for me... \"Maybe.\"\n\nApril rises sharply to her feet with an exasperated groan. Glares back at us. \"Fine. Jerks.\" Not entirely serious, by the tiny upward quirk I still see at the corner of her ruby-red lips. \"I gotta go make some calls, see if I can find a guy willing to call me 'sis' in bed. You two, you can just...\" She tries to scowl, but as she looks at us clasped and cuddling together on the couch, her expression dissolves again to giddy, exuberant delight. \"You can just fuck like crazy people. Won't be getting any complaints from me about noise, trust me.\" A little huff of joyous laughter, and then she, too, scampers down the hallway and into her room.\n\nFinally alone together. A beat passes, near quiet; I can feel David's low, amused chuckle vibrating against me through his chest. His lips touching my scalp in something like a kiss before he speaks. \"Good thing we have her permission.\"\n\nI have to giggle as well. \"She's certainly a character. Knows what she wants. Usually gets it, too.\" But not this time. A bit of uncharitable smugness as I push myself up onto David's lap, throw my legs across his. Squeezing close, cheek to cheek, murmuring in his ear. \"Were you being serious? About maybe doing it in front of her?\"\n\n\"More or less. Yeah.\" I can feel his hand, strong at the small of my back. Each of his spread fingers a distinct presence in my mind. \"I mean, it sounds like she really wants it, and it wouldn't really cost us anything.\"\n\n\"Guess that's one way of looking at it.\" I pull back a bit to look him in the eye, one brow lifted curiously. \"Still. Wouldn't you be embarrassed?\"\n\n\"Kinda seems like I would be, doesn't it?\" His baritone laugh sounds again, honest and gentle. \"I mean, I think about it, and it sounds like something I'd be terrified to do. In front of someone else...\" His head shakes, loose golden locks briefly waving. \"But...I don't know. I'm not afraid of it. I don't care who sees how much I love you. In front of your roommate, or on live TV with a million people watching.\"",
        "Laughter of my own, soft against him. \"You're not turning into an exhibitionist on me, are you?\"\n\n\"Don't think so.\" His smile wry and adorable. \"It just doesn't bother me. As long as I have you...there's nothing for me to be afraid of.\" His hand strokes affectionately up my side, brushing on my breast, and I have to lightly bite my lip for the delight that flows up from his fingers. \"I want you just the same, if we're surrounded by strangers or just by ourselves.\"\n\n\"Mmm.\" A pleasant sigh...and a gasp, as I pretend at realization. \"You know, we're by ourselves right now...\" My heart beating in a quick, flirtatious patter.\n\n\"Yeah.\" He chuckles again, and god I love his laugh, the thick and vibrant depth of it, the simple honesty and joy. \"Yeah, we are.\" His voice dropping to a husky rumble as he presses forward, our mouths coming together in a hungry kiss, an urgent clutching of desire. My hands sliding around behind his neck, holding myself close against him as our lips slip and worry in a slow, ageless rhythm. His arms strong at my back, beneath my rear, and I'm scarcely surprised when I'm suddenly lifted into the air, carried aloft so effortlessly it doesn't even interrupt our kiss. My legs moving instinctively to lock behind his waist, holding us tightly together. I barely pay attention to where we're going, focused on the feeling of his firm lips on mine, of our noses brushing, rubbing gently together like an eskimo kiss as I lose myself in the moment. His breath hot and moist, taken gladly into my lungs, his gently questing tongue welcomed like an esteemed visitor to my mouth.\n\nDim awareness pulses. We've stopped moving - we're in my room, beside my bed. It's with some reluctance that I release my legs from his waist and drop down to the floor, feeling a trace of loss in standing again on my own two feet. Assuaged, in part, by the look of rapt adoration in his eyes, staring down with sapphire sincerity. Emotion bittersweet on my lips, in my throat. \"It's our last night.\"\n\n\"Just for now.\" His voice soft and comforting, hands at rest now on my hips.\n\n\"For a while,\" I counter. \"For months, at least.\" It's a painful thought. I feel as though I just found him. I don't want to give him up.\n\nNo help for it, though. No other way. We both know that; it's in the tenderness of his fingers curled at my waist, the note of sorrow in his expression, pushed away to give me one of his beautiful smiles. \"Let me take care of you tonight.\" A murmur just above my ear, as I rest my forehead gently on his cheek.\n\n\"Like always, you mean?\" My lips curving in a faint, amused smirk. When doesn't he?\n\n\"No, not 'like always.'\" His chuckle rumbles softly against me. \"No, I mean...you always do so much. This time, tonight...I'd like to let you just relax. Let me take care of everything.\"\n\nA little moue. \"You mean I don't get to ride you off?\"\n\nI intend it as a joke, but it comes out with a trace of genuine regret, one that David hesitates on hearing. Ever solicitous. A faint chagrin in his voice, as he tries to backtrack. \"Well, that's...obviously, if you don't want-\"\n\n\"Oh, no.\" I stop him firmly. A sparkle in my eye, tilting my head to plant a tiny kiss on his chin. Hungry to experience whatever he might fantasize. \"I want, I want.\" Humor whispered in the words as I step away, reaching up to the top button of my blouse. \"Let me just strip down, slip into bed...\"\n\n\"No,\" quickly, as his hand lifts up to catch mine. His thumb rubbing urgent in my palm, and my spine tingles to the note of strength, to the desire printed on his face. \"I mean...I want to take care of that, too.\" Bringing my hand to his lips, a soft kiss upon the knuckle as his eyes stay locked with mine.\n\n\"Well.\" Faint amusement blends with the thrill that beats in my heart. \"Okay then.\" And I let my hand drop back down to my side as his thick fingers fumble softly at the tiny buttons of my blouse, beginning from the top and slowly working his way down. The shirt falling gradually open beneath his manipulations, revealing a narrow path of flesh down from my neck, between my breasts, the thin connecting band between the cups of my bra sitting above paler, hidden skin. His gaze on me heavy, intense...as though to soak me up, to memorize every inch of my body, and I murmur up, \"I love the way you look at me.\" A smile for an answer, his eyes flickering back to mine. Enough.\n\nMy blouse lays loose now, half-open; he moves around behind me to take it off, lifting the clean white fabric to slide breathily from my skin, my arms shifting obligingly under his guidance. It's taken away, tossed somewhere out of sight. A delay - he's still back there, his broad chest against my back, his face in my hair, breathing deep. Big hands laid loosely at my inner shoulder, fingers spread and trailing across my shoulder's edge, upper arm, elbow, gliding down gentle and symmetric. A whisper sounding in my ears, melodic counterpoint; \"I love the way you feel,\" and I welcome eagerly the little shiver I feel in the words, the spark, the beginning burn of excitement down at my center.\n\nFurther. His hands moving inward, coming together on my back, working still inexpert at the clasp of my bra. It's not too long of a struggle before it comes free, pulled away, and I can feel the cool air of the room blowing lazily on nipples starting to peak, proud and impatient. Palms roughened by hard toil sliding down my back, around my waist, forging ahead to clasp briefly at my abdomen, and I lay my own hands there lightly atop his.\n\nHigher now - he cups my bare breasts, my heart beating faster as his hands close around nearly big enough to cover them completely. As he squeezes slow and stimulating at sensitive flesh, so strong and solid behind me, his lips at the back of my scalp, and god, I can feel his hardness through our jeans, pressed into my rear as my hips push back fiercely against him. I want it. Want him...liquid desire trickling slow between my thighs.\n\nNot yet - I have to scold myself a little. Not time yet, he has to finish...his hands drift down again, calloused fingers gently scraping across my stomach. An exquisite, wavering pressure on my pussy as he works at the button fly of my jeans, a feeling expectant, teasing, stitched denim rubbing firmly inward upon me as each fastener is forced free.\n\nLoose, then, slack around my hips, and I can only cross my arms lightly at my abdomen as his thumbs hook into the waistband...wriggling just so slightly to help him slip them off, kneeling down behind me, and as he does I can feel his lips caressing down the curve of my spine, leaving a faint trail damp with his saliva on my scorching body. Dampness of my own, itching, aching - my legs weak and unsteady beneath me. Not being able to see him, just feeling, knowing...it's driving me crazy. A madness of lust smouldering just beneath the skin.\n\nMy jeans crumpled around my ankles. David on his knees behind me, hands loosely clasped at my calves. A moment's delay - uncertain? teasing? - before he takes hold of my right leg, bending the knee to lift it from the jeans while I wobble on one foot above. Then the left, and I stand there in just shin-high socks and baby blue panties, shivering from the heat that burns inside me, wanting, waiting for him to touch me, to grab and to squeeze. Wanting to feel his hands on every inch of my body at once, to have him force his fingers inside me, to be possessed, filled everywhere forever. To be taken like Troy in flame and glory, to scream and spasm on his manhood, to expire so perfectly in the rapture only he can give. God...\n\nNot yet. Aggravated, petulant warning in my head, struggling to cool the heat of my ardor. Not much success. I have to shut my eyes, take refuge in a melange of memory and anticipation. Remember what it feels like to have him push so deep inside me, what it will feel like. Soon. So soon...I scarcely even notice him moving around again to my front, kneeling before my trembling legs, until I feel his warm fingertips touch to the top of my thighs, above and below the elastic band of my panties. Staring at them, when I again open my eyes. Rapt. Hooking in with four fingers on each end, and I can feel his fingernails abrade softly at my skin as he begins to pull them downwards. A patchy spot of darkness at their center, proof of my arousal.\n\nSlow. So damned slow, compared to the mad flutter of my heart, the pace of my shallow breath. An eternity before my panties are bunched around my ankles, before I can step eagerly out, nearly naked and flush with desire. Barely holding back the urge to touch myself, my pussy crying out for attention...but I want it to be David, need it to be his fingers, his cock, his tongue, god his anything inside me.\n\nInstead, he gathers up my panties in his hands, still kneeling at my feet as he brings them to his face and slowly, deeply inhales. His demeanor like that of a Delphic oracle, ecstatic and divine, eyes closed in exaltation. It's a few moments before they open again, flit up to mine in shimmering blue as he quirks a little smile. \"I love the way you smell.\"\n\nAt another time, in another circumstance, I might have laughed at the sight of him there, kneeling down with his nose buried in my underwear. Right now, right here...it's all I can do to meet his gaze, to look him in the eye through the haze of lust that clouds my vision. My hands pushing down to his shoulders, squeezing tight and imploring as I almost gasp out a plea. \"I'm ready, Davey.\" Short and shallow breath. \"I need you.\"\n\nA little laugh. Loving. Teasing. Minor outrage bristling in my skull - he's teasing me. How dare he? I should kill him. Later. Once he's given me what I need...for now, I can only bite my lip, struggling to contain myself. My head lolling back, thin tendrils of pleasure crackling in my mind as his hand grasps gently at my ankle with a careful force, firm and strong at the rounded joint. As it begins to slide upward on my leg, fingers curling back around to the muscle of my calf, trailing unhurriedly on skin shaven bare and silky, and I have to shut my eyes again, try to calm my breathing, steady myself with my hands still on his shoulders just to keep standing as my flesh thrills beneath his fingers.\n\nPast my knee now, trembling and unsteady. He begins to stand again, his palm rising on my inner thigh, squeezing with his tender strength. Feeling it compress slightly, yielding in his grasp. Closer to my hungry slit, inch by inch, moment by moment; all my consciousness stays fixated on those advancing fingers, dreaming urgently of what he'll do, of just his thick middle finger slipping inside, of him pumping it so hard and delicious into me while his arm clutches me tight...I'm so close, so damn hot I could probably cum from the barest contact on my clit...\n\nOh, god, he's there, at the top of my legs, at my very center. My breath held tight as rough fingertips brush into contact with the bottom of my pussy. Waiting. Aching. Wanting, so deep and all-consuming, thought discarded for sensation, my throat tight and straining as his fingers move, rise up along my mound...trace along in the lightest contact with lips pink and puffy with desire, collecting the faint beading of my wetness that seeped there. Almost pushed over the edge just from this, the gentlest scrape feeling as fireworks in my mind, the animal inside screaming for him to take me. And then...he lifts his hand away. Up before him, standing now his full height before me, and I can only look on in stunned silence as he takes his index finger just into his mouth, licking clean the tip. Speaking again, satisfied and confident. Soft. \"I love the way you taste...\" The sexy sparkle in his eye seeming hardly more than taunting - need shrieking in my head, anticipation cruelly denied.\n\n\"David...\" I manage to find a breath, manage to speak, though faint laughter bubbles out near hysterical with the words. \"Davey, if you don't fuck me right now I think I might die...\" Gasping, my pulse pounding dizzy in my ears.\n\nHalf a smile sits curved on his lips, coyly audacious as he looks back at me. One hand slips strong around my bare waist, pulling us together; the other to my face, laying softly possessive at my cheek, and I'm trembling in his arms, so near release, feeling his singular presence down the length of my body. Resting myself urgently against him, my pussy pushing hopeful at the top of his leg, straining, shivering...he speaks, his husky voice a caress upon my mind. \"Soon.\"\n\n\"David-\" My mouth opens for another remonstration, another plea, but before I can speak more than just his name his lips are pressed to mine. Demanding. Divine...a tremor descending my spine as my neck cranes back instinctively to meet him, as the kiss explodes into my consciousness, emotion and sensation sparking against one another, entwined like lovers at the center of a storm. feeling beyond words, beyond thought, the taste of his lips and the loving strength of his arm around my waist pushing me over the edge. My eyes glazing over as rapture rises up inside me, and somewhere in the distance an astonished reflection - impossible. That I could cum from a kiss...\n\nBut it's real. So pure, perfect, delicious; my legs twitching beneath me as my body shudders in ecstasy, and I'm held up only by my arms clutched desperately around his neck, by his around me, and we stumble backwards together as I kiss him madly, ravenously, possessed again by this insane thirst for his lips in the midst of my rapture. Forcing my uncooperative legs around his waist, climbing up higher on his body, my limbs possessed by a chaotic, frenzied power. God, this moment, the feeling of him, of us...I want to lick him up, to drink his sweat, to share his skin. I want him inside of me - the thought a sudden reminder, arcing through me like an electric shock, and I pant almost unintelligible against his mouth, \"Dammit, fuck me!\"\n\nStumbling still further - my back up against the wall, and I'm sandwiched against him. Happily so, tremors of ecstasy still thrilling through my body as I bite with some force at his lower lip. Distantly aware, below me, of his hand working desperately at his fly, pulling his pants open to free the hardness trapped within. Working to unite us. A little slip; I descend an inch on him, and I can feel the outer curve of his cock sliding between my labia, sizzling with pleasure as it rubs hot against me, rasping almost unbearable on my clit. Sheer animal instinct pushing me to grind against him, rolling my hips in quick, delicious spurts upon his rigidity. An aching emptiness still inside, begging to be filled. \"David...\" It's a moan, a gasp into his skin, hardly comprehensible. A plea. Take care of me. Give me what I need.\n\nPerhaps he understands. I can feel myself rising again, lifted by his strong forearm beneath me. His cockhead slipping in amongst my folds, slippery with his pre-cum and with my own wetness, not quite catching - I have to try to help, arcing back my hips to give him a better angle, before finally...there. The tip bulging just inside, caught, captured. Ready.\n\nA moment's pause. Then all at once his arm under me disappears, and I drop down instantly impaled on his cock, all the air forced from my lungs in a single, choking gasp as I'm filled to my utmost in a single moment. Pain and pleasure ringing in harmony at his size, gravity forcing him into me so deep, his hips kissed to mine, and my spine arches upon the wall as ecstatic arousal begins puddling together inside me once again.\n\nDavid's breath comes shallow now, as my hips gyrate in slow circles upon him. His eyes half-open, blue diamonds lidded and glowing. His big hands sliding on my back, damp with my sweat, his burning manhood buried within me, locked together by my weight upon him, and my legs struggling vainly to pull us tighter still. Filled so wonderfully with him, squeezing out sensation in slow, circular motions, like the juice from some delectable fruit. He shifts, pulling my back briefly from the wall; I can feel his arms cross behind me, his hands grabbing hold of my shoulders, and a yowl escapes my throat - scarcely human, agonized with pleasure - as his strong arms pull me downward, deeper, his pubic hair scratching at my bare pussy as I'm all but sealed at the base of his cock. My nails biting forcefully into his skin, the waters of rapture sweeping again through my mind in glorious destruction, bright and sweet and savage. I can only cling desperately to David as it washes through me, my eyes shut, shivering as though from the cold as I moan senselessly against him. My lips sliding chaotically on his neck, drinking in the faint sheen there of his sweat. Primal satisfaction pulsing down inside of me, a sphere of shimmering sensation.\n\nMoments pass, and slowly the force of my feeling again recedes, retreating just enough for thought to limp along in the background of my mind. Faint amusement mingling in with my deep, bodily bliss. David maybe didn't think this out too well; though he tries his best to thrust inside me, our pose rather prevents it - gravity pulling me down upon him, forbidding any real withdrawal. There's pleasure for me, oozing slow and luscious in the slight grind and squeeze of it, the delicious compression of my body between the warmth of his form and the unforgiving hardness of the wall behind. But I don't think he's getting as much out of it, and I kiss gently at his jaw before whispering, \"You should take me to the bed.\" My hand gliding on his back, tracing out the scratches I left on his skin.\n\nA moment more of trying before he seems to accept this, a note near disappointment flashing adorable in his expression. I kiss it away as his hands lock supportive beneath me, as he lifts me up again away from the wall, lumbering still buried inside me to drop down upon my queen-sizes bed, and a little squeal looses from my lips at the weight of him briefly crushing as he collapses on top of me. His manhood, partially withdrawn in the fall, slams back in to the hilt; I swear I can see stars spinning in the air around me. His hands at my face, fingertips brushing at limp locks of hair sodden with sweat, his eyes and his touch adoring as a man grasping some holy relic.\n\nThat's the sweetest pleasure. The finest feeling. His body is magnificent, his cock superbly stimulating as it begins to slide and thrust within me in the familiar, imperative rhythms of sex...but it's his love that really drives me wild, the emotion overpowering that echoes so beautifully in my soul when I stare into his eyes and see him looking back at me with such devotion, such fervent, adoring desire. That's the feeling that fills my consciousness as he builds up to speed, the cream sitting pert and delicious atop the milky joy he wrings from my body. The greedily possessive delight that grabs hold of my trembling tongue as be begins to grunt his way to his own release. \"You like this, Davey?\" Murmuring, excited and insistent.\n\nHe can only nod dumbly for a moment or two, panting with his exertions. Finally, a groan of \"Yes...\" Thick, strained, hungry. \"God, yes, it's...\" Wordless feeling, and my body quivers with his accelerating thrusts, pushing back to meet him.\n\n\"Good.\" There's a little rasp in my voice, falling towards the edge. My right hand clutching madly at the back of his neck. \"'Cause I'm not going to let you go.\" A dangerous thrill in the words - and in his response, pushing a little faster, a little harder. The bed shuddering beneath us with the force of his assault, restraint shattering as he nears crescendo. Awareness in my head, on my lips, sweet and thick as honey: he's going to cum. He's going to cum because of me, his cock so hot and hard inside me, spilling out its precious payload. My baby brother's seed...all mine, all for me, because he wants me, only me, and my body flushed with raw joy at the thought. My pussy clenching tight around him, as though to hold him inside. \"I'm not going to let anyone else have you, Davey.\" A whisper, a murmur, a scream; I don't even know. A frenzy of sex and power and desire here beneath him, my legs bent back almost double as he pounds into me, pleasure battering along my nerves with every thrust, and I have to gasp the final words, \"You're mine.\"",
        "Crystal perfection, sharp and shining. I can feel in my own skin the shiver of ecstasy that arcs through him, that jumps through to me like an electric shock, and the world around me falls into the beautiful chaos of rapture. Babbling senselessly, pointlessly, urgently into his neck, \"cum for me, god cum inside me,\" as he thrusts in one last time, as I imagine I can feel his cock expand that tiny extra fraction before it finally explodes, pulsing white-hot as his essence shoots deep inside me, painting my insides. Filling me. God, the thought of it, the feeling, hot and thick and gooey along my channel, in the depths of my womb...my arms clutch tight and shaking around his neck, my lips press madly, ferociously to his, and I don't think anymore, don't speak, just writhe in rapture, pressing myself against him, devouring every last sensation I can find of being with this beautiful, wonderful, perfect boy.\n\nReason drifts back to me, eventually; a feeling like awakening, finding myself softly giggling, cooing as I plant slow kisses on David's lips, on his chin, on the tip of his nose. His weight heavy and satisfying on top of me, his manhood still half turgid inside, slick with our mingled juices. My limbs tingle faintly with pleased exhaustion, no longer possessed by the frenzy of lust. A trace of embarrassment in my head at my aggression, my possessiveness of moments prior...but mostly I just feel good. Warm, safe, wonderful here beneath him, protected from...from everything. Nothing to fear. No pain, no sorrow. Just love, carried in his soft blue eyes, in his gentle caress, in his arms at my back. In the smile that curves small and earnest on his lips, before he speaks. \"Did you mean it?\" A murmur, inches from my face, as he props himself half up on his elbows.\n\n\"Mean what?\" I whisper back, my mind lazy and idle, careless in the summer warmth of his embrace. My gaze drifting adoring in his features.\n\nThere's a note of humor from the top of his throat, giddy and hopeful. \"About not giving me up.\" Just a trace of his familiar shyness, flickering in his eyes.\n\nAh. An affectionate smile grabs my lips as my hand slides up to his face, strokes softly at his cheek. \"I absolutely did.\" My voice a soft murmur, like I'm sharing a secret. And oh, the grin the blooms in his expression with this answer, the sweet laughter of delight that sounds so beautifully from deep in his being. Like I've just given him a gift he's been dreaming of for years.\n\n\"I love you, Sam.\" Sudden, earnest, true. His hand drifts over, thumb stroking gently at my cheek, and I smile at the familiarity, the warmth of it.\n\n\"I love you, too, Davey.\" A tingle of simple bliss at the center of my heart, as I lift my head briefly upwards to plant a tiny kiss right on his smiling lips. Staring into eyes sparkling with adoration, just faintly shadowed with fatigue.\n\nIt's another few moments like that before he speaks again. \"Guess I should probably move over, before I crush you to death.\" A little snicker of humor in his words. He shifts, starts to pull away - but despite that his weight had indeed been growing heavy on me, there's a pang of unendurable loss as I feel him start to withdraw from within, and my hand quickly clasps arresting at the back of his neck.\n\n\"Wait.\" Breathing slow and deep in the glow of our togetherness. \"Wait, don't. I want, um...\" Pink on my cheeks. I feel silly saying it, absurd, but... \"I want to sleep like this, tonight. With you still inside me.\"\n\nA brief hesitation, before he softly chuckles. \"Well. Don't see how I can say no to that.\" And a shivering squirm of pleasure inside as he pushes back awkwardly deeper, his manhood no longer rigid but still swollen, pushing gingerly within me. He swallows quietly, faintly uncertain. \"How do we, um...\"\n\n\"Let's try this.\" It's a delicate maneuver, but with careful movements we manage to turn over together, so that I'm laying on top of him, my legs astride his. His hands clasped loosely at the small of my back, holding me against him. Still united, my head resting half on his shoulders, close enough that I needn't even move to kiss gently at the base of his neck. \"Think you can get to sleep like this?\" A little teasing in my voice, mixed with my own growing fatigue. My body exhausted by our escapades, demanding now its rest.\n\n\"Maybe.\" His tones smiling, hands stroking ever so faintly at my back. \"Even if I can't...it's worth it.\"\n\n\"Mmm.\" Almost a giggle, pressing in for another little kiss. Pleasant lethargy rising up through me. The smell of his body, of his exertions, filling my nostrils. His warmth beneath me, inside me. I can feel his heartbeat against mine, a calming euphony to their divergent rhythm. There aren't words enough to describe the feeling here. Safety. Love. Belonging. They're all just shadows, pale suggestions of the perfect rightness of the moment. The reality is...David. His name the last thought I possess, a shining icon in my mind as sleep crowds in to claim me.\n\n---\n\nMorning. A song in my heart and a smile on my lips as I stand over our electric range, scrambling a few eggs. The crackle of sausages frying in the pan beside, counterpoint to the quiet melody I scarcely realize I'm humming. I was first awake, the dawn finding us still gently entangled with one another. Thought about waking him up, or about just lying there beside him, basking in the cozy ambience of our lover's nest...but when the idea of making him breakfast in bed occurred to me, it was too perfect for me to pass up.\n\nA sound from the hall distracts me from my labor. The quiet creak of a door opening. David? I dash over, stick my head around the corner...but there's only Marie, dressed already for the day, clothes neat and hair carefully combed.\n\n\"Sorry. Just me.\" Softly spoken, a wan, flickering smile on her lips. The disappointment must be plainly visible in my expression.\n\nA little laugh, as I quirk a smile brightly back at her. \"Aw, come on now. You're not 'just' anything.\" Maybe I should be mad...hurt, bothered, whatever, about how she reacted last night. But honestly, I don't mind. Right now, I don't think anything could get me down. \"Want some eggs and sausage?\" Her eyebrow lifts a trifle, and I laugh again, correct myself. \"Or just eggs, I guess?\"\n\nHer head shakes minutely. Glances around the kitchen and living room, as though checking for who might be there. \"I was planning on eating at the mess hall. I thought it might be best to try to stay out of the way.\" Her gaze not quite meeting mine.\n\n\"Oh, don't be like that.\" My voice dropping in good-natured rebuke. \"Look, I've got it all made already. I can stick some toast in for you, too, if you want.\"\n\nA pause. Then, \"Aren't you going to eat it yourself?\"\n\nI shrug casually. \"Only if you don't.\" Briefly distracted by a drip from the coffee maker, finally hot enough to start percolating. \"Ah, was gonna be for David and me, but he's not up yet, so I've got time to make more.\"\n\nAnother beat of quiet, regarding me carefully. Finally she nods, meek and mild. \"All right. If you're certain.\"\n\n\"Attagirl.\" A quick grin, scraping off a good helping of eggs to a waiting plate. Two slices of sourdough, tossed with a flourish into the toaster. Marie likes it light; it won't take long.\n\nWe don't talk as she eats, as I crack a few more eggs to scramble. Just a little \"Thank you\" when I pass along her toast, as carefully pronounced as always. But she watches me. Looks me over, quiet and appraising between bites of egg and buttered bread. And once she's done, when there's a lull in my cooking and our eyes cross over her empty plate, she speaks. \"You seem happy.\"\n\n\"I am happy.\" I can't help laughing gently, a bright snicker of amusement. Leaning back against the counter, feeling utterly at ease.\n\n\"What, just because of...\" Trailing off. Rare for her, to be at a loss for words. \"Because of your brother?\"\n\n\"He's amazing.\" The answer rushes out quick, irrepressible, with another little burst of joyous laughter. \"He's just...maybe it's crazy, maybe it's wrong, whatever, and I know you probably don't want to hear it, but...he just makes me feel so good.\" A soft misting of sentiment in my eyes, just saying the words. \"Emotionally, and - you know, the other way. I love him. I really, really do.\"\n\nMarie's gaze sits heavy a few seconds on the counter, her thumb trailing uncertainly over the rim of her plate. \"Well...look, Samantha. I don't know how you got into this with him, if it was some kind of emotional trauma that you're dealing with this way, or perhaps a shared psychological disturbance that's manifested itself similarly in the two of you, but...\"\n\n\"Getting a little insulted here.\" I smirk slightly, only half meaning it.\n\n\"Right.\" She swallows. \"Right, I'm getting sidetracked. What I wanted to say was just - I can't exactly approve of what you're doing with him. But if it's helping you, if it makes you happy...then I am at least glad for that. And I - I support you. As far as that part of it goes.\" Apologetic earnesty, half-hearted on her lips.\n\n\"Aww.\" A huff of laughter, appreciation blooming warm in my soul. I press around the counter, slide in to give her a quick and friendly hug. \"Thanks, Mare. Maybe it's silly, but...that really means a lot to me.\"\n\n\"Well, you know.\" There's a quirk of humor in her expression as I pull away. \"I suppose if April's taught me anything, it's that friendship means overlooking a few sexual peccadilloes.\"\n\nEven if I weren't in such a good mood, that'd earn my affably self-effacing giggle. \"Guess so. You've certainly earned yours, if you ever decide to burst out with whips and chains.\"\n\nA sliver of a smile. \"Not exactly my style, I don't think.\" Silence for a moment. \"I do feel like I should say, though - if you're planning to continue this for any length of time, you should really use two forms of contraception. At least until such time as the two of you have had a genetic screening, to ensure that you're not carriers of any serious heritable diseases.\"\n\nThat's Marie, all right. \"Seems like that'd take some of the fun out of it.\" I laugh affectionately...but clamp it down after a moment, seeing her expression of concern. \"But I'm sure you're right. I'll try to find the best options for us. Promise.\"\n\n\"Good.\" The flicker of worry isn't entirely extinguished from her gaze, but she still puts on a friendly smile as she rises to her feet, glances down the empty hallway. \"I've got a project with some of the other pre-med students today, so I'm afraid I'll be gone for most of it. Would you say goodbye to your brother for me? And convey him my...\" A moment's hesitation. \"...my well-wishes?\"\n\n\"Of course.\" I give her a grin as she departs, sticking her plate in the sink to clean later. Chipper gladness buoyant in my soul as I attend again to the cooking, sticking in a bit more toast for David and me. Minutes passing as the meal shapes up again...maybe making a little more than we need, but what the hell. It's a special occasion. I can afford to pig out.\n\nEverything's just about ready when April surprises me, popping casually around the corner without a sound of warning. Stretching wide, in her inimitable way; even when she doesn't have any targets around, she still tends to show of her assets just from force of habit. \"Well, look who's a busy beaver this morning.\" No delay, no greeting before she begins, her yawn segueing smoothly to amused observation. \"I'd have thought you'd be too exhausted to be up and about. Weren't you at it all night with 'brother dear?'\"\n\nMy head shakes with tolerant disapproval, but I keep my cheerful smile as she wanders up close. \"We were 'at it' long enough.\"\n\n\"Impossible,\" she scoffs. \"No such thing.\" Careless ease, snatching up Marie's dirty fork to spear one of the sizzling sausages straight from the pan. Ignoring my incredulous eyebrow as she takes a bite. \"Ow, hot. He get you off?\"\n\nI don't intend to dignify that with a response - but I guess the little jet of joy that rushes up to tug brightly on my lips gives her all the answer she needs. \"Hah, what am I saying? Of course he did. How many times?\"\n\nI roll my eyes, but I'm more amused than irritated. \"I'll never tell.\" A faintly lilting melody to my answer, grinning wide.\n\n\"You are such teases,\" she complains with an exaggerated sigh. \"You and him both. Absolutely unbearable.\"\n\n\"I had a nice night,\" I confess brightly. \"Let's leave it at that.\" A moment's snickering laughter. \"How about you? Find that stand-in you were looking for?\"\n\n\"God, don't remind me,\" she groans, stealing a bit of egg. \"I kicked him out, sent him home. He was totally unconvincing...tell me, how many damn brain cells does it take to figure out that if somebody pretending to be your sister tells you to 'keep quiet or mom will hear,' it's probably part of the act? That you should ad-lib something back, not get this stupid look on your face and ask why she's sharing an apartment with her mom?\" The disgust in April's expression is almost palpable. \"Seriously.\"\n\nI shake my head, sardonically amused. \"That's just tragic.\"\n\n\"I know, right?\" She returns earnestly, as though I were being deadly serious. Just a faint sparkle in her eye giving voice to her humor. \"Hope he feels awful for it, because he damn well ought to. Pathetic. Crossed him right out of my book.\" Suddenly matter-of-fact, as she steals another bite. \"Need some more salt on your eggs, here.\" Straight-faced, like she's genuinely helping out.\n\nGod. It's a slow laughter that bubbles out of me, reminded again of how we became friends in the first place. Her bizarre, quirky charm, ignoring all the normal rules of society and tact. The comfort of knowing, too, that there's somebody crazier than me out there. It's a warm, platonic affection in my chest as I flip her a smile, a genuine feeling of indebtedness. \"You know, Ape,\" words ringing with cheerful sincerity. \"I probably should have said this a while ago, but...thanks.\"\n\n\"Hm?\" Her brow lifts up, a sudden, uncertain honesty in her expression. Kicked briefly from her usual layered irony. \"What for?\"\n\n\"For a lot of things.\" I gesture vaguely. \"I mean, I don't really give you enough credit, usually. But especially for this. With David. If you hadn't done what you did, if you haven't told me...I might never have found out how he really felt. If you hadn't pushed me, I might not have gone for it. And I'm really, really glad I did.\" Laughter, brief and soft. \"So...thanks.\"\n\nIt's oddly humanizing, the awkward half-smile on her face. I suppose she doesn't really experience gratitude very often. Doesn't know quite how to deal with it. But after a moment, she nods sheepishly. \"Well, I can't really say I was looking out for you with most of that, but...you're welcome. I'm glad I could help put the two of you together.\" A smirk curls, wry and self-effacing. \"Honestly, I'm kinda jealous of you.\"\n\n\"I know, I know.\" Grinning, brightly dismissive. \"It's the hottest thing in the universe.\"\n\n\"No, no,\" she shakes her head, before abruptly reconsidering. \"Or, well, yes, but..what I meant was, he seems like he really cares about you. Loves you, whatever. It's...\" Hesitation, picking her words carefully. \"...it's sweet.\"\n\n\"It is.\" I can only agree. A touch of surprise ringing in my voice. \"Didn't think you really went in for that, though.\"\n\n\"No, I know.\" She shrugs minutely. \"I mean, I don't usually. Can't be bothered, right?\" A smirk, twinged with faint vulnerability. \"Just...I don't know. Seems like there's something kinda nice in it, when I look at the two of you. Makes me wonder if I'm missing out.\" Snickering slightly, self-effacing, almost embarrassed at the confession. \"Don't know where I'd go to find a guy like him, though.\"\n\n\"David's special,\" I agree quietly. A beat. \"But still. No reason you can't find someone who'd be just as special to you.\"\n\n\"No reason?\" Her eyebrow raises, lightly sarcastic. \"Not sure if you heard, but I've earned myself a bit of a reputation around campus. And don't get me wrong, I'm proud of it...but it's not for lovey loving love.\" She shakes her head, mild and dismissive. \"Silly idea, anyway. I wouldn't even know what to do with a guy if I had to deal with him longer than a week.\"\n\n\"Come on,\" I shake my head, affably disparaging. \"You've gone straight with guys longer than that. Tom, Derek, that one swimmer dude...\"\n\n\"Okay, okay,\" she grants grudgingly. \"Still, like a month, at most. You just get tired of them, bored, y'know?\" Glancing away. \"Haven't done the long-term thing since I was fourteen years old.\"\n\nCuriosity lifts my brow. \"Why, what happened when you were fourteen?\" I don't think I've heard this story.\n\n\"Nothing happened,\" she laughs, easily enough. \"Just the last time. Had a boyfriend, same age as me. We were dumb kids, thought we were in love. Said we were going to marry each other.\" Her lips curving in a self-conscious smirk, rolled eyes broadcasting emphatic disdain of the idea.\n\n\"And?\" I press on, intrigued at the idea of April in love. \"I mean, you didn't, I take it.\"\n\n\"Obviously.\" She snickers...but there's a shadow of disquiet in the sound, a tracery of regret not quite hidden. \"No, we were like seven months in when his family moved out to Vermont. And that was that.\" Shrugging again, the smile weak on her lips. \"Not usually worth it, I figure. Getting too close.\"\n\nGod. A quiet moment, looking at her perhaps the first time with pity in my heart. Never seen, never heard this side of her...April's always casual and careless, nothing more than amused by anything. Basically unflappable. I guess everyone carries a few sorrows, somewhere inside. \"Maybe you could look him up.\" I offer it suddenly, half-considered. \"See if he's on facebook, or whatever.\"\n\n\"Hah,\" she mutters, low and derisive. \"Yeah, that wouldn't be weird as all hell. 'Hey, remember me? We used to say we were gonna get married, seven years ago. Wanna drive out two thousand miles to hook up?'\"\n\n\"Not 'hook up.'\" I roll my eyes at her a little, smirking with tolerant amusement. \"Not even 'drive out,' probably. Just talk to him. See if he remembers you, how he makes you feel. Hell,\" a shrug, \"Odds are it won't come to anything even if you can track him down. But who knows? Stranger things, right?\" A bit of self-indulgence in my smile. Guess I'm living proof of that, now.\n\nApril shakes her head, with a little huff of bemused laughter. But when she speaks, I can hear a sliver of interest shining in her voice. \"Sounds like you're turning into a romantic.\" Smugness flashing in her eyes, before she continues on, softer. \"I don't know. Maybe. I'll think about it. If you're-\"\n\nBoth of us hear the sound, a door from the hall clicking open - April's aspect sparks again with energetic delight. \"Sounds like loverboy's up. I'd better skedaddle, give you guys some privacy.\"\n\n\"You don't really have to.\" Faint surprise. \"Not like we're going to be messing around out here.\"\n\n\"Shh!\" Her index finger touches to her lips, brown eyes wide with intensity. \"Don't tell me that! I want to be able to imagine you two screwing like crazy all over the place.\" Her face brightening with a manic grin, just as David comes around the corner.\n\nGod, he looks handsome this morning. The thought overpowering in my mind as I look at him standing there tall and straight in jeans and socks and undershirt, his golden locks messy with sleep. An honest smile on his lips, an upwelling of happiness from deep inside. His adorable blue eyes finding mine, resting on me so loving and warm I could just melt into a little puddle, forget the world and collapse from the sheer joy of it.\n\n\"Morning,\" He speaks first, his voice confident and shining, waking me from my staring admiration. His gaze flickering over to April for a brief nod of acknowledgement as he inhales deeply through his nose. \"Something sure smells nice.\"",
        "\"Yeah, I quickly flick off the simmering burners, faint embarrassment touched to my cheek. \"I wanted to make you breakfast in bed. Got a bit distracted talking to April, though.\" At least the food doesn't look burned.\n\n\"And I was just leaving,\" she jumps in, still irrepressibly smirking as her eyes roam enthusiastically across his body. \"Guess you're taking off today?\"\n\n\"Yeah. Looks like it.\" A bittersweet curl to his lips, still looking at me over April's shoulder as I scrape the eggs and sausage onto a plate for us.\n\n\"Well, that's a shame.\" She flashes a little moue, about a quarter serious, before grinning widely again. \"But it was totally wonderful having you out here. Let me give you a hug goodbye.\"\n\n\"Um,\" he tries half-heartedly to object, but she's already throwing her arms tight across his broad chest. His own still properly limp at his sides, shrugging helplessly - a sop to the spark of protective jealousy that flashes in my eyes.\n\nTo my relief, she doesn't push it past a couple seconds...though she does press herself rather irritatingly tight against him. Letting her hands rest casually at his sides as she pulls away again. A firmly encouraging lilt to her voice. \"Now, you come back just as soon as you can, okay? We're all like a family here. In fact,\" her tones sliding toward flirtatious amusement, \"I hope you'll think of me as just another of your sisters.\"\n\n\"Oh my god,\" I groan. \"Okay, Ape. Time's up. Let go of him.\"\n\nPlayful disappointment flits in her expression...but she obeys, taking her hands from his sides as she steps away. A gleeful whisper over to me, more than loud enough for him to hear - \"He smells like you.\" I have to cross my arms and glare like an aggravated parent until she finally scampers impishly off, snatching up one of her discarded overcoats on her way out the front door. Leaving David to look at me with an expression bemused and faintly apologetic.\n\n\"Don't worry about it,\" I excuse him with a little wave, ushering him over. \"She's nuts. Let's eat.\"\n\n---\n\nThe food is fine enough, seasoned with hunger after our energetic antics of last night. Once sated, despite what I said to April, I'm rather tempted to repeat them - to spend these last hours locked with him in lust, to let my body ring again with sensation beneath his hand. But as I stand before him, as I press up close and snake my hands around his waist to rest in his back pockets...I know that's not really what I want. Not right now. It's a gentler affection, a peaceful love that possesses me, staring into his steel-blue eyes. I just want to be with him, to bathe in his presence. To feel him in my heart, not my...well.\n\nSo our clothes stay on as we embrace sprawled out on the couch, as I lay against him, in the close radiance of his arms. Holding. Squeezing. Kissing, feeling his heart beating beneath me, a slow pulse that seems to echo in my soul, and I can't imagine any better place to be than here beside him. Nowhere safer, nowhere more alive and thick with meaning...we talk about everything, in rambling half-sentences, about nothing, about the past and the future. Time still taunting us, great chunks of it stealing away between glances at the clock, until the last reasonable deadline for his departure is already past us, and still we lay clinging tight to one another, vainly pretending we don't realize the lateness of the hour. Neither of us wanting to be the first to pull away, to surrender to necessity.\n\nIt has to be me. Bittersweet awareness - he looks so much to my lead. He'd probably stay overnight again, if I let him. Maybe indefinitely, just never making mention of going home, of the farm, of school. I almost want to do it. Say to hell with everything, turn off our cell phones so no one can call, let him move into my bed. Have him, keep him here as long as I want. It's no solution, of course, no real possibility. But it's nice to pretend for a few moments, before you do what you have to.\n\n\"I'm going to miss you so terribly.\" The words kissed into his ear, my lips moving on him in a slow whisper. A tiny slackening of sorrow in his body beneath me as I finally make mention of the separation that looms upon us. \"I swear, I'm probably going to go crazy.\"\n\nIt takes him a few moments to respond, his voice coming low and mournful. \"Yeah. I think I know what you mean.\" His hand stroking softly at my back, along my spine, with a feeling of anxious yearning. \"After the last few weeks...don't even know if I'm gonna be able to sleep anymore, without you there next to me.\"\n\n\"Well,\" half a smile, gently reassuring. \"I'll just have to call you up every night. Hear your voice...\" Sliding down on him a trifle, kissing him on the cheek, on the side of his jaw. And a bit of mischief entering my voice, as something else occurs. \"Any chance I'm going to be able to make you talk dirty to me, over the phone?\"\n\nI can feel him blush, his cheek warming lightly against my lips. But he smiles bravely, shrugs with unconcern so plainly forced that I have to giggle. \"If you want...I'll give it a shot.\"\n\n\"Mmm.\" Conflicted emotion humming in my throat, love and loss. I stretch out, pushing against him, luxuriating one last time in the feeling of him beneath me, strong and solid, for just these last few moments before the inevitable. Trying to capture it, to take a picture in my mind that I'll be able to turn to in the coming months, to relive the subtle, shining joy of his embrace when I'm lonely on my bed.\n\nEnough. Enough, he has to go, to get back to his own life. I slither slowly off of him, drop my feet to rest again on the coldly apathetic carpet. My hand drifting over to his, linking in my withdrawal so that I can offer a trivial help in tugging him upward from the couch...and embracing again immediately on standing, our bodies like magnets to one another. His arm close around my waist, his chin pressed in my hair as we sway slow and instinctive, and I almost feel like crying. God, how can I give him up? I've only just found him...\n\n\"I have something.\" He speaks soft into my scalp, a touch of tension familiar in his voice. \"Um, something I want to give you.\"\n\n\"Yeah?\" A sniffle, a catch in my throat. Closer to tears than I thought. Pulling my head barely away, to look up into blue eyes burdened with a quiet worry. \"What's that?\"\n\n\"It's...\" There's a faint sense of loss as he pulls his hand from my back, sending it to search in his pocket. \"It's, you know, it's nothing really. I got it a while ago, even before you headed off to college. Just never got together the nerve to give it to you at the time, so I kinda held on to it.\" His lips flicker wryly, his hand returning with a tiny object wrapped in tissue. \"I mean...I don't even know if it'll fit.\"\n\nMy eyebrows lift with curiousity, staring at the ambiguous, wadded bundle. \"What is it?\" Something that sits easily in the palm of his hand. That frightens him to give. That has to fit...I grab for the packet, fingernails tearing quickly through layers of thin tissue. Tugging it gently open, apart, to find inside a simple burnished band, orange-brown in color and quietly lustrous. Bronze? Copper? I don't really know my metals...its surface covered with a thin, patterned etching, vaguely reminiscent of autumn leaves.\n\n\"I found it at the thrift store.\" His voice soft and honest. \"For some reason, it just made me think of you. After you left, I used to carry it around with me, sometimes. When I was really missing you.\" A raw note briefly aching in his tone. \"Um, figure I should finally give it to you, now.\"\n\n\"It's a ring.\" I state the stupidly obvious, vision blurring as my eyes tear up from the sudden trembling of powerful emotion in my heart. \"You're giving me a ring.\"\n\n\"Yeah, um,\" his eyes dart nervously away, fleeing to the floor beside my feet. A struggle in his expression, anxious and adorable. The feeling of what this gift, this moment could mean flowing between us, and his desire and his fear both plainly written in the lines of his face. Afraid to ask too much, to say too much. Almost stuttering. \"It's...I mean, it's just jewelry, y'know. Nothing, I'm...I just thought maybe you'd - you'd like it.\" Swallowing uncomfortably, his stance tight and anguished.\n\n\"Of course it is.\" Soft. Reassuring. The thought, the wish beneath can stay silent, hidden for now. There's time. The future has room enough. I slide the ring to the base of my finger. A trifle tight, but...it's beautiful. Perfect. Honest - no gaudy band of gold and diamond could be finer than this, joy thrilling a gentle melody in my heart as I look upon it. As I look upon him, at the yearning in his eyes, the want and the worship.\n\n\"I love it.\" The truth is simple on my smiling lips, a trace of wetness yet shimmering in my eyes as I step forward again into his arms, my mouth finding his for one last kiss, long and slow and urgent. Not bothering to breathe, our arms wrapping round each other so tight, so close, so true. Lips sliding, clutching against one another with such passion, such sweet intensity that I can swear I feel his soul there rubbing with mine, groaning with emotion deep and indescribable. It's an eon before I pull back, gasping for breath. Tears welling up helplessly again in my eyes, and I don't even know if they're of joy or sorrow, if I'm weeping for what I have or for how long I'll have to wait before he's mine again.\n\nAn echo. \"I love you.\" Force and feeling in the words, so great that they catch in my throat, wobble out weak and trembling. I have to wipe my eyes on his shirt as shaky laughter shudders through me - god, I can't believe I'm crying like this. Pushing, striving for humor. \"You'd better stay away as long as you can, Davey. Because when you come back, I swear to god I'm never letting go of you again.\"\n\nHe huffs softly, a low and momentary chuckle, and I feel oddly heartened at the mirrored flash of moisture in his own eyes. His voice rough with emotion. \"Promise?\"\n\n\"I promise.\" The ring tingles cool at the base of my finger as I rest my head briefly on his shoulder. Have to set a countdown again in my mind before I can finally make myself pull away, let go of him. Stepping backwards to regard him in all his glory, the boy I so adore. Oh, that gorgeous, messy mop of golden hair, the body tall and strong before me, those eyes so beautifully blue above his bittersweet smile...I need to cross my arms at my chest to keep myself from dashing back to embrace him once again. \"Go on, now. Get out of here. You've got a long drive ahead.\"\n\nIt's with some reluctance still that he picks up his stuffed little travel bag, slings it over his shoulder. His feet slow and heavy as he walks to the front door...hesitates, turns half around to look at me, his lips parting to speak. \"Sam, I...\"\n\nHe trails off as our eyes meet, gazing enraptured. Our connection does the work of words. An ocean of feeling flowing from the hopeful height of his brow, urgent emotion carried in the curl of his smile. We don't have to speak; I can feel his soul here before me, warm and glowing, whispering truths deeper than his tongue could ever hope to shape. His dreams, a balm upon my heart.\n\nEnough. He has to go. I give him a little nod, my lips quirking upwards - and just for a moment, his smile deepens to that familiar, goofy grin I so adore. His eyes flashing with sapphire affection, one last goodbye as he opens the door and steps out into the cold.\n\nI'm alone. Moving to the window, to watch him depart. God, it'll be hard. Months before the semester ends. A few more before the next starts up, before he'll finally be joining me here. The wait ahead looms dark and oppressive, almost unbearable...but there's a shining light at the end of it, blinding with promise. I don't know what shape our lives are going to take, if we'll keep this a secret or live open and honest. Don't know what we'll do for the day-to-day, if we'll get a place of our own together or just muddle through with him in the dorms. And three more years for him, after I graduate...challenges ahead. But there's time and room to figure them out. A smile on my face, looking down on his truck pulling out of the parking lot, a final wave goodbye from the figure within. I should have known it from the very start. We belong to one another. Nothing's going to stand between us.\n\nTHE END (for real) "
    ],
    "authorname": "nomennescio",
    "tags": [
        "brother sister incest",
        "angst",
        "romance"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/little-things-ch-05"
}