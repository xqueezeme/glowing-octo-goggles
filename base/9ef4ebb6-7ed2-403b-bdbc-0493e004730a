{
    "title": "Deal with a Horny Devil - A Halloween Tale",
    "pages": [
        "Impersonating a Devil can be dangerous, but it has its rewards. Especially if you are a horny Devil.\n\n= = = = = = = = = = = = = = = = = = = =\n\nWARNING! This warning is possibly not needed for this particular story, but I am including it because it is needed for most of my stories. If you decide to read other of my stories make sure that you read the disclosures and warnings at the beginning of each story.\n\nAll of my writing is intended for adults over the age of 18 ONLY. Stories may contain strong or even extreme sexual content. All people and events depicted are fictional and any resemblance to persons living or dead is purely coincidental. Actions, situations, and responses are fictional ONLY and should not be attempted in real life.\n\nIf you are under the age or 18 or do not understand the difference between fantasy and reality or if you reside in any state, province, nation, or tribal territory that prohibits the reading of acts depicted in these stories, please stop reading immediately and move to somewhere that exists in the twenty-first century.\n\nArchiving and reposting of this story is permitted, but only if acknowledgment of copyright and statement of limitation of use is included with the article. This story is copyright (c) 2018 by The Technician.\n\nIndividual readers may archive and/or print single copies of this story for personal, non-commercial use. Production of multiple copies of this story on paper, disk, or other fixed format is expressly forbidden.\n\n= = = = = = = = = = = = = = = = = = = =\n\n* * * * * * * * * * * * \n\nStan Satanowski stepped out of the state of the art spray tanning booth in his basement. It was a computer-controlled, fully-automatic model and should have cost much more than he could possibly afford, but he had gotten it basically for free.\n\nFree is a relative term. In this case, it meant that when he accepted a contract to clean up and remodel a space in a local strip mall, he agreed to store any and all equipment currently in the store for a period of two years.\n\nThe previous tenant ran a beauty shop called \"Momma Ling's\" that offered everything from hair styling to nail treatments to spray tans to drugs-- yes, drugs. Evidently the beauty business wasn't paying enough so Momma Ling-- real name Cynthia Davidson-- branched out into various prescribed and non-prescribed opioids. \n\nUnfortunately, Cynthia hadn't done sufficient research on possible competition and one of the local neighborhood suppliers expressed their displeasure at her intrusion into their sales territory by shooting up the place and the people inside. In an amazing display of accuracy for street gangs, there was one and only one fatality, Cynthia \"Momma Ling\" Davidson. Two customers were injured by flying glass and one received a minor bullet wound in the leg, but Momma Ling's Beauty Shop and Drug Emporium was permanently closed.\n\nEvidently, Cynthia Davidson wasn't her real name either because officials could discover no valid driver's license... or next of kin... or place of birth... or anything else. All of the equipment was evidently paid for, so once the police released the crime scene, the lease was voided out by the owners of the strip mall and it was just a matter of Stan cleaning everything out and making it look like Momma Ling's had never existed.\n\nThe one problem was that all of the equipment had to be stored for at least two years in case some creditor-- or relative-- stepped forward to claim it. So, one of the terms of the remodeling contract was that Stan had to store the furnishings, for a monthly fee of course, for 24 months. Then it was his to dispose of in whatever way he saw fit.\n\nAlmost everything was taken apart and stored in the back of his garage at home. But the technical aspects of a self-applying spray tanning booth fascinated him. So did the possible selling price. Stan figured if he kept the booth in working order, then at the end of the two years he could sell it for at least five or six grand.\n\nThe problem was that it had to be used regularly to prevent the pumps, seals, and nozzles from drying out. He thought he could just cycle it every so often, but except for the cleaning cycle, the booth was programed not to run unless a person was inside it. And whatever you put in the tubes for the tanning agent had to be just the right consistency or the program would error out. That meant using real fake tan stuff when you ran it.\n\nSo, once every two months, Stan would mix up a batch of faux tan and step into the machine. The first couple times he did that, the results were, at best, mixed. Fortunately, there was also a removal cycle that sprayed a solution that would take off anything that had been applied, even days or weeks later.\n\nAfter one of his worst initial attempts where he made a major mistake mixing the tan colors he stepped out of the booth a deep, all-over red. \"I know what I am wearing next Halloween,\" he said to himself in the mirror. He carefully wrote down exactly what he had done before resetting the booth to a removal cycle.\n\nWith his skin dyed a deep red, Stan figured he could wear anything... or nothing... to the next Halloween party. But he still needed a gimmick that would put it over the top. So he turned to his cousin, Mark, who worked supplying special props to the movie industry.\n\n\"What you need is horns,\" Mark said. \"But they have to appear only when you want to show that you are horny.\" He then laughed at his own joke.\n\nStan just scowled at him, but Mark said, \"No, seriously. I've got these horns that glue to your hair and scalp. You just comb the rest of your hair over the little nubs. When you want them, just press on either one of them and they pop up slowly. You can make it look like you are just pulling your hair out of the way. Then when you want the horns to disappear again, just push on both of them slowly and the special springs push back down until the catch engages again.\"\n\n\"How much?\" Stan asked.\n\n\"I sold the final versions for three grand apiece,\" Mark answered, grinning at the shocked look on Stan's face. Then he added, \"But I've still got the prototypes. I can let you have them at five hundred for the pair. They aren't quite as flashy, but people will be seeing them actual size. You aren't going to be up on a big screen.\"\n\nAll that was needed after that was for Stan to wangle an invitation to a friend's Halloween party. His friend lived near the college and Stan knew that there would be a significant number of college students there. Free booze at a party near campus will do that. Stan thought he might have to do some real convincing, but his friend agreed because he was Stan's friend... and because it never hurts to have a hunky construction worker at a party as an additional attraction for coeds.\n\nThat night, Stan wore a rather interesting costume of black leather pants, a black vest, and black leather sandals. His red chest, red arms, red hands, and red feet added a surreal effect hinting at the possibility that his total body was all that same shade of red.\n\nHis pickup line wasn't very original. In fact it was terrible, but it fit his costume. He would walk up to a young woman and say, \"Does a horny devil like me have a chance with a beautiful angel like you?\"\n\nStan knew that nine times out of ten, the girl would just laugh at him, but he was confident that there were more than ten beautiful women at the party.\n\nWhen it came time for introductions, he would say, \"I'm Stan Satanowski.\" After a pause he added, \"Satanowski means Son of the Devil.\" \n\nHe would wait for a reaction from the girl and then say, \"I'm named after my great-grandfather. He always said the immigration clerks messed up an 'A' in his name... but he never said whether they left one out to create Stan or added one to create Son of Satan.\"\n\nFor the first girl, that also led to laughter as she walked away. But the second girl asked, \"Does that costume cover your whole body?\"\n\nStan laughed the deepest laugh he could muster and said, \"This isn't a costume. Halloween is the one time of the year I can go around as myself.\"\n\nHe then reached up and brushed his hair away from his horns. The prosthetic devices worked exactly as his cousin said they would. They popped up as his hands brushed over them. There were now two, black, shiny horns sprouting from his head.\n\nHe then said in a deep whisper, \"If you give yourself to me tonight... for just the night... I will grant you one wish.\"\n\n\"Just for the night?\" the girl asked quietly.\n\n\"Just for tonight,\" Stan assured her as he led her out to his car.\n\nOnce they got to his bedroom, she was surprised to find that Stan truly was red all over. She was even more surprised when he insisted on using a condom. \"We have enough horny little devils running around,\" he said with a laugh. \"And besides, I've been told that my cum can burn a little.\"\n\nIn reality, he was worried that the red might be washed off by her vaginal secretions. He also used a condom when he took her ass about an hour later. She caught him by surprise by waking him with a blowjob in the morning. He considered trying for a morning fuck, but she slid out of bed and into the bathroom as soon as he had spurted in her mouth.\n\nWhen she came back into the bedroom she was already fully dressed. \"I need a ride back to the college,\" she said softly. Then she added, \"My wish is that I pass all my mid-terms.\"\n\n\"You still have to study,\" Stan replied as he slid on a pair of jeans. \"But you will do much better that you had hoped for on all of them.\"\n\nThat was five years ago. Stan's friend now asks him to please come to the party. Evidently word of the Horny Devil got around and a lot of the students-- especially coeds-- wanted to see him for themselves.\n\nThe girls no longer laugh at his pickup line. Most just smile and say, \"No, not tonight.\" A few-- perhaps horny little angels themselves-- even try to pick up him. He could have had several girls at each party, but decided to stick with one who was willing to go home with him for the night. That way he could keep the 'granting-a-wish' deception going. If they stayed overnight, it was much easier to mold that wish so that it was something that could be made to happen, like giving them enough confidence to actually do well on their midterms or finals.\n\nThis year was different. As soon as he arrived at the party, he knew who he was going to try to take home with him. She was tall... and blond... and wearing a very short angel costume with a halo that was somehow held a few inches above her shining blond hair.\n\nStan grabbed a drink and poured out half of it so it would look like he had been there for a while. It also gave him something to hold in his hand as he walked up to the girl and said, \"Does a horny devil like me have a chance with a beautiful angel like you?\"\n\nThat line, as well as his signature costume, had become something of a legend on campus. Several partygoers stopped to watch as he stood smiling at the beautiful angel.\n\n\"Yes,\" she replied as she matched his smile, \"but I really would like to enjoy this party for a little while first.\"\n\n\"My name is Stan Satanowski,\" he said quickly.\n\n\"You can call me Angel,\" she replied before he had a chance to give his whole name spiel.\n\n\"So, Angel,\" he said, trying to recover control, \"will it be drink, dance, or conversation as we enjoy this party?\"\n\nShe smiled and answered \"Let's begin with dance.\"\n\nStan set his drink down on the counter and moved over into a slightly open area where a few couples were dancing to the loud music. As they danced, it was as if a bubble formed around them keeping all of the other couples a slight distance away.\n\nStan had never before seen a woman who appeared to exude so much sexuality. She was a teenager's wet dream brought to life. Stan was no teenager, but this woman was definitely having an effect on his manhood. It was even getting just a little uncomfortable to dance.\n\nBefore things got too obvious or uncomfortable, he stopped and grabbed her lightly by the arm. \"Why don't we move on to conversation,\" he said with a smile.\n\nA couple of the nearby girls snapped images with their phones of his smile. His very white teeth accented against his deep red face was an image any girl would love to have on her phone-- especially around Halloween.\n\nStan maneuvered his angel to an open table and they sat down. Someone gave him the drink he had left on the counter. \"Sorry,\" he said with a smile, \"once it's left the hand it's in the can.\"\n\nHe looked over at Angel, gave one of his deep rumbling laughs and said with a smile, \"I'm sure I'm not the only devil here tonight. Who knows what might be in that drink?\"\n\n\"You are extremely careful,\" his beautiful angel said.\n\n\"I have to be,\" Stan answered.\n\nThen she smiled at him. He didn't know why, but suddenly he decided that he had to be totally honest with this woman. \n\n\"Angel,\" he said softly. \"I need to tell you something. This,\" pointing to his red face, \"is all a gimmick to get naive college girls into bed. They all know the story about my name. My name really is Stan Satanowski, which does mean Son of Satan, but my grandfather's real name was Stanowski. The man at immigration added an 'a' to the name and that made it his legal name. Gramps figured it wasn't worth the time and money to get it straightened out, so the family is stuck with Satanowski.\"\n\nHe grinned rather sheepishly as he admitted, \"I'm not a son of Satan. I'm just a horny guy with a tanning booth in my basement that I can use to make my skin red for Halloween parties.\" \n\nHe brushed his hair carefully aside so she could see the nubs of the prosthetic horns.\n\n\"I even have fake horns from Hollywood,\" he continued. After another sheepish smile, he said, \"I've got a cousin in the industry.\"\n\nThey looked at each other in silence for several minutes, then Stan finally said, \"I would love to take you to my house for the night, but I can't do it under false pretenses. If you want to come, fine, we will go to my house. If you don't, then we can stay here and dance.\"\n\nAngel set down her drink and looked Stan directly in the eyes. \"I've had enough dancing for one evening,\" she said very quietly. Then a little more loudly she added, \"Let's go to your house.\"\n\nWith that she stood up and waited for Stan to join her. They walked quickly to his car. Once they were at his house, Angel nearly ran to the door.\n\nInside, she pulled him down the hallway toward his bedroom. And once within the bedroom, Stan stood dumbfounded as Angel whisked the vest off his shoulders. He didn't even see her grab it, and yet she pulled it off him in less than a second. She shoved him backwards onto the bed and whipped off his sandals in two quick motions. Then she undid his belt and opened his pants.\n\nStan thought she had moved up alongside him to do that, but somehow she was still able to pull his pants off in one quick motion. As usual, he was commando, so the quick motion of the leather being pulled off his ass was almost painful.\n\n\"You really are red ALLLLL over,\" Angel squealed. \"And you have a real, red, six-pack. You make a perfect Devil.\"\n\nShe jumped up on the bed and straddled Stan.\n\n\"Let me see your horns,\" she said excitedly.\n\nStan reached up and triggered both horns. As they slowly appeared through his hair, Angel continued to squeal with delight.\n\nShe slid down so that she was kneeling straddling Stan's legs. She bent her head lower and her tongue flicked the end of Stan's prick.\n\n\"Even your prick is red,\" she said, and then pulled the whole thing into her mouth.\n\nStan was thrashing around and slapping the bed with his hands. This was the first time that he had ever lost control during sex. Angel was absolutely in control and was taking him higher and higher and higher and higher.\n\nFinally, he felt that familiar boiling in his balls which soon erupted into Angel's mouth. She sucked greedily at his seed until he had completely quit pumping. She sucked and slurped for a few moments more and then said, \"That's France.\"\n\nShe then pulled herself upright and shuffled on her knees up until she was straddling Stan's now flaccid prick.\n\n\"Aw, it fell asleep,\" she said with a fake pout. \"I think I'll wake it up.\"\n\nShe then lowered herself down and began grinding on his limp member. It didn't take much to \"wake it up,\" and soon Stan's manhood was again standing tall and proud.\n\n\"You just lie there and let this cowgirl ride,\" Angel said with a big smile. As she was talking, she slowly lowered herself down on Stan's prick.\n\nAngel started off very slow. Stan was still partially high from before so he soon reached that peak where his mind was not really controlling his body. Angel was bouncing down on his hips and he was thrusting up to meet her bounce.\n\nHe was almost to that point when she dropped totally down on him and began grinding her hips in a small circle. From her gasps and groans, it was obvious this was really stimulating her, but there was no real motion inside her and Stan was held at the point just before release.\n\nThis had never happened before. He was always the one who drove women crazy. This wasn't right, but he was so close. He had to cum... he needed to cum.\n\n\"Let me cum,\" he shouted, almost not believing his own voice as he heard himself.\n\n\"Do I own you?\" Angel asked sweetly.\n\n\"Yes!\" Stan shouted back, \"Just make me cum!\"\n\n\"Good boy,\" Angel said softly and changed the way she was grinding her hips so that she was now pulling on Stan's engorged member almost as if she were milking it.\n\nWithin seconds, Stan erupted into her with a loud groan. He again was slapping the sheets with his hands. \n\n\"My God!\" he screamed out.\n\n\"Not exactly,\" Angel said with a smile, \"but close.\"\n\nOnce Stan had regained control of himself, Angel said cheerfully, \"That's England... or wherever. Let's see if you are up to visiting Greece.\"\n\nStan had done around the worlds before and he knew what Angel was saying. It was just the first time that a girl had initiated the full sequence.\n\nAngel lifted herself up and Stan's prick pulled out of her with a slight pop. He was no longer fully erect, but he wasn't totally limp.\n\n\"Looks like little Stan is getting tired again,\" Angel said, again faking a pout. \"I'll just have to wake him up for our trip to Greece.\"\n\nShe then turned herself around so that she was facing away from Stan and lifted herself up into a squat so that all that was touching Stan was her asscheeks. She then began rocking her hips so that her ass was basically twerking Stan's prick.\n\n\"Oh, God,\" Stan moaned softly. \"Oh, God,\" he moaned again as Angel lowered herself so that his prick was tightly squeezed deep within her asscheeks.\n\n\"I can feel something waking up,\" she said in a false, child-like voice.\n\nStan could feel his prick again becoming erect.\n\n\"Is it still called a cowgirl when I'm facing this way?\" Angel asked, \"... and you're going in the back door?\" She then started moving her ass in a circle so that Stan's prick was rubbing against her sphincter and slowly starting to push its way in.\n\n\"Maybe they ride horses backwards in Greece,\" she said with a light laugh and then pushed herself down on Stan's prick. \n\nThis time, she didn't bother with teasing Stan, but instead bobbed her ass up and down on his prick with a regular rhythm.\n\nStan, meanwhile, was thrashing and yelling, \"Why can't I cum?! Why can't I cum?! Why can't I cum?!\"\n\n\"Because I haven't asked the question yet,\" Angel said, reverting back to her little girl voice.\n\n\"What question?\" Stan panted.\n\n\"Do I own you?\" Angel said.\n\n\"Yes!\" Stan almost yelled. \"Yes! Just let me cum!\"\n\nWith the word cum, it felt to Stan almost as if his balls had exploded. He couldn't remember ever having cum so violently and ejaculating so hard for so long.",
        "\"That's a good boy,\" Angel said as she continued to sit on Stan's prick while it deflated for a third time.\n\nAfter a while, she pulled herself off Stan's now totally flaccid prick and snuggled up next to him.\n\n\"It look's like some of my red fake tan has rubbed off on you,\" he said, stroking a red smudge on her ass.\n\n\"It's nothing,\" she said. \"I can take care of it later.\"\n\n\"No,\" Stan replied, \"I've got a machine downstairs that will clean us both up in a snap. Since it's a removal and the positioning of the nozzles isn't as important, we could even do it together.\"\n\n\"I don't think that's a good idea,\" Angel said. For some reason, she looked anxious.\n\n\"There's nothing to worry about,\" Stan said. \"I have it all figured out now. I can put this red on and take it off with no problems.\"\n\nAngel started to say something else, but Stan held up his hand, \"And besides,\" he said in his best sultry voice, \"we can pretend we are showering together.\"\n\nHe was now leading her down toward his basement. \"Stan,\" she said, trying to pull back towards the stairs, \"I think it's time for me to be truthful, too.\"\n\n\"What great secret are you hiding?\" he asked with a laugh as he started the timers on the machine.\n\n\"My real name is Lucy,\" she said as they both stepped into the booth.\n\nShe started to say something else, but it wasn't really possible to talk as the tan removal sprays moved up and down on their bodies. When the final timer finally rang and they could once again open their eyes, Stan exclaimed, \"Holy Shit. I really screwed up! We're both red!\"\n\nLucy laughed. \"No, Stan,\" she said calmly. \"You didn't screw up. I did. I should never have let you get me into the machine.\"\n\nShe ran her hand down his slightly quivering stomach and said, \"The machine did what it was supposed to do. It removed all of the fake tan... from both of us.\"\n\nShe paused and then said slowly, \"I was trying to tell you before you pulled me into the booth, but you wouldn't listen. My name is Lucy and this is my natural skin color.\"\n\nStan's eyes were wide open. \"You're supposed to be red and the pale skin was fake?!!\"\n\n\"Yes,\" she said with a grin. \"All my fake paleness was washed off to reveal my normal, red skin. ... And your fake red was washed off to reveal your new, truly red skin.\"\n\nStan just continued to stare at her.\n\n\"You left your horns up on your dresser, didn't you?\" Lucy asked grinning mischievously.\n\n\"Yes, why?\" Stan replied.\n\nShe pointed at the top of his forehead and he immediately raised his hand to feel... horns.\n\nAs he brought his arm back down alongside his body, his right hand brushed against his tail, which was curling around his body.\n\n\"Ah, yes,\" Lucy said with a smile and a laugh, \"and then there is that.\"\n\n\"Who are you?!!\" Stan said loudly.\n\n\"I told you,\" she said slyly, \"my name is Lucy. That's short for Lucifer.\"\n\n\"Lucifer isn't a woman!\" Stan shouted.\n\n\"That's what they all say,\" she answered flatly. \"That's why I have always had to use a front man.\"\n\nShe ran her hands over Stan's muscular chest and then added, \"... a strong and sexy front man.\"\n\n\"You turned me into a devil!\" Stan shouted.\n\n\"No, no, no,\" Lucy replied. \"All I did was make your costume a little more authentic.\"\n\n\"So I'm stuck looking like this as an ad for you?\" Stan asked, looking down at his red arms and hands. His tail had now curled up between his legs and looked like an extremely oversized prick with a mind of its own.\n\n\"Wasn't my costume good enough for you?!\" he nearly yelled.\n\n\"Again, no,\" Lucy answered. \"Though I was amused that your cousin used the same switch that I have always used.\"\n\nStan continued to look at her in shock.\n\n\"Press down slowly on your horns,\" she said firmly.\n\nStan again raised his hands to his forehead and began to press slowly on his horns. As they slowly receded into his head, his skin turned back to its normal color. An odd sensation at the top of his ass crack told him that his tail had also somehow retreated into his body.\n\nHe stood there for several minutes examining his arms and legs and as much of his body as he could see. Finally he said, \"So what do you want of me?\"\n\n\"What did Phillip Morris want with the Marlboro Man?\" Lucy said with a laugh.\n\n\"You want me to do commercials?!\" Stan cried out, almost hysterical.\n\n\"Not exactly,\" Lucy replied. \"When we have a good prospect, I want you to do the negotiating. Sometimes there will be fringe benefits similar to what you have been getting as you bilked these naive college coeds, but usually it is a straight business negotiation.\"\n\n\"So I promise them something,\" Stan said, now sounding much more in control of himself, \"and they sign over their souls.\"\n\n\"That's the basic idea,\" Lucy said with a smile, \"but you will need some training.\"\n\n\"What do I get out of this?\" Stan asked, cocking his head and sounding more than a little suspicious of the deal. After all, this was Lucifer, himself... or herself... or whatever.\n\n\"Eternal youth, a body better even than what you have now, and...\" Lucy paused, \"when you get tired of all this, you become a part of my staff.\"\n\n\"And if I refuse?\" Stan asked firmly.\n\n\"Do I need to play the videos for you?\" Lucy asked with a trace of anger in her voice. \"I believe the question was, 'Do I own you?' Do you remember your answer... both times I asked it?\"\n\nStan hung his head and said sadly, \"Yes.\"\n\n\"But I only asked it twice,\" Lucy said with a shrug. \"The red prick got me so excited I forgot to stop when I got you on the edge.\"\n\nStan was now looking very confused.\n\n\"I didn't get you to say it three times,\" Lucy explained, \"so I can't really claim you as my own. That means this is strictly a business offer. If you want the job, you've heard the terms. If you don't, then I leave you to your own ways. You can wash off the red, along with the horns and the tail, in the next removal cycle.\"\n\nHer voice hardened slightly, \"But when the time comes,\" she said slowly and distinctly, \"you will still be coming to my abode... only it won't be as a member of the staff.\"\n\n\"I could always change my ways,\" Stan said.\n\n\"I've heard that many times before,\" Lucy replied, \"but I still see ninety-nine percent of them in the end.\"\n\n\"I could always be part of the one percent,\" Stan said, drawing himself up straight and crossing his arms.\n\n\"Really?\" Lucy replied, reaching out and stroking Stan's cock. It immediately sprang to life.\n\n\"OK,\" Stan said as he dropped his arms to his side. \"You're right. I could never change my ways. When do you want me to start?\"\n\n = = = = = = = = = = = = = = = = = = = = \n\nEND OF STORY\n\nPlease remember to vote \n\nby clicking on one of the stars at the end of the story. \n\nIf you really liked it, click 5. \n\nIf you really hated it, click 1, but please click something.\n\n= = = = = = = = = = = = = = = = = = = ="
    ],
    "authorname": "The_Technician",
    "tags": [
        "halloween",
        "oral",
        "anal",
        "devil"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/deal-with-a-horny-devil-a-halloween-tale"
}