{
    "title": "Pea Pod - The Return",
    "pages": [
        "DECLARATION: This story is an original literary work. I wrote a story just to stretch my creative muscles. All scientists and Wizards in this work are fictional. Any resemblance to anyone living, dead, or born in the future, is purely coincidental.\n\nWARNINGS: Contains transgender themes, Sci-Fi, explicit sex, mild violence, swearing, and strange ideas. It has only the strange things that dribble from my head. If you are not old enough, mature enough, open minded enough, and especially not smart enough to stop reading should you find yourself becoming offended viewing such a story, don't!\n\nI hereby grant permission to post this story, make it available for download, or send it to one or more of your kinky friends, as long as I am given credit for it and no monetary profit is made from it without sharing it with me. (I'm not greedy, but I did write it.)\n\n**********\n\nRecap\n\nFor those of you who didn't read \"Pea Pod\" before this story, you should.\n\nHowever, I will sum up what happened to me one stormy night over the Amazon jungle, when a bolt of lightning fried my pilot and blew the wing off the plane, I was in.\n\nI awoke to find a beautiful native girl was nursing me back to health. At least I thought she was a native of the Amazon Jungles...\n\nLater I found out that I had been transported off-world by my nurse! They lived very primitively, in huts and I assumed that she and her were people simple natives of the jungle over which we had been flying.\n\nThey wouldn't let me leave the village, saying the jungle was too dangerous for men. I wasn't about to spend the rest of my days trapped in a primitive village. I had a good job as a geologist, and a girlfriend waiting for me back home!  \n\nTherefore, I made plans, bided my time, and finally made my escape into the jungle! I was free! That is until I found out why the jungle was so dangerous!\n\nWhile walking through the jungle, one of the local plants attacked me, and turned me into a short little woman with big boobs!\n\nMy nurse, (I found out later, also my wife) found me afterwards. She was not upset that I was now a woman, and she even offered to take me home and to go there with me! Damn I was confused! She took me into what looked like an old Mayan Temple and teleported us both into my apartment! That proved to be too much for me and I fainted dead away!\n\nMy nurse and wife, Meka, had my girlfriend come over and married us. Now I had two wives, and a vagina! Meka also explained that I had several other wives back at the village, which I had been servicing when I was male. I found that having my gender changed didn't matter to them in their society.\n\nI was also to learn that the portal is open and locked onto my guest room, and my wives were coming and going between the plants. They needed men, sperm donors, or a chance to go out among our citizens and be... ah, knocked up.\n\nIn trade, they had gold, exotic products, and women who wanted sex so badly they were practically nymphomaniacs!\n\nA side benefit, which I had not been aware of, was this new world and its plants were a gift from heaven to the transgendered community.\n\nIt didn't take us long to buy the entire apartment complex, with the careful importing of selected items. However, and here's where the new story begins, our quick rise to economic prosperity had sent up red flags with the government!\n\nBUSTED!\n\nThe feds quickly pounced upon us, but we had a secret weapon! By the time the government caught on, we had and army of professional women who, had been once been professional men.\n\nTherefore, when the government tried to arrest us and take over, Meka, my wives, and I all wound up with diplomatic immunity! The government recognized us as ambassadors. The U.S. Government recognizes Meka as the ruler of her world! That means that I am the damn Queen!\n\nThe apartment building is an embassy, and we are hammering together some foreign trade agreements and arranging for an American embassy on our world.\n\nThey can't seem to get it through their heads that they can't send men though!\n\nIf they do, they get back women, unless they want to stay in the village under the guard of women at all times!\n\nThere is going to be another meeting tonight with the government folks and that's when things should get interesting!\n\nOh, shoot! I haven't introduced myself. My name is Dolly Gordon. Well actually, my full legal name is Her Royal Highness, Queen Dolly Gift-from-God Gordon! Can you believe that? I was, conspired against by my wives! My many wives off-planet had wanted to honor me, since they felt that I must be a gift from god! The problem seems to be that \"Dolly,\" is the name that translates to. They modified my name to make me sound more regal by adding the translation as a \"middle name.\"\n\nI feel certain that my once-girlfriend, now-wife, Gwen, was behind it all! My only consolation is that she is now Her Royal Highness Gwendolyn Goddess-of-the-Moon Gordon!\n\nYou should be up to speed, so I'll be seeing you at the meeting!\n\nPreparations\n\nWe turned the cabana into our meeting room, big table, nice comfortable chairs, and a big white board behind doors with the same wallpaper covering them as the rest of the room, at one end. They furnished the rest of the room with items my wives and others of the ladies from the village had brought over from Meka's world, well... my world. The whole room looked very Mayan, with masks and pottery here and there, and a few small statuaries, but with modern comfortable seats and workspaces.\n\n\"Frances tells me that there are to be many very important people of this world coming to meet with us this evening. Are you as nervous as I am?\" Meka asked me as she came up to me and gave me a hug.\n\n\"More so, I think!\" I answered, \"At least women's business suits are more comfortable than men's. Of course for events like tonight, I have to wear an evening gown, and the underwear I have on is so sexy, it makes me smile every time I think of what those guys would do if they had the chance to see me in them...\" &lt;Giggle&gt;\n\n\"Damn! Why do I keep doing that? I never giggled when I was a man! Why can't I keep from doing it now?\" I asked Meka, still holding her tightly.\n\n\"It is just part of the make-up of the girl you fantasized about, and a touch of your own bubbly upbeat personality, sweetheart,\" she assured me, giving my big bottom a light pat, and then releasing me. Meka stood back and scanned me up and down. She then said, \"Turn around slowly for me, please Dolly.\"\n\nI did as she asked, but when I was facing away from her she stopped me saying, \"Dolly if you insist on wearing these stockings with the seams down the backs, I am just going to have to check to make sure they are straight. Now hold still while I straighten these for you.\"\n\nShe held my big bottom by the outsides of my cheeks to indicate she wanted me to stop, and then I felt her fiddling around under my skirt. I haven't been a woman very long, so when she was playing around with my stockings at the upper part of my thighs, sometimes very near my bottom, I started to get very turned on! I moaned, and very loudly, to my embarrassment!\n\nThree of my other wives were in the room with us, so Meka and all three others busted up laughing!\n\n\"Dolly, ever since you were changed, your sex drive is twice as much as when you were a man and, you can ask any of your wives, that was nothing short of amazing!\" Meka teased me by slipping her hand between my thighs, barely brushing against my labia.\n\nI couldn't help myself, I swear! &lt;Blush&gt; I moaned again, even louder!\n\n\"Sorry, Dolly, no time for fun right now! The Ambassador and his party will be here soon,\" she informed me, but at least she did it while hugging me tightly.\n\n'I love it when our boobs squish together! It makes me so wet! Damn, I guess they are right! I'm kind of a nymphomaniac!' I thought\n\n\"If you keep this up, they will just have to wait!\" I proclaimed. That saved me. Meka let go of me and backed off, giggling of course!\n\nI wasn't out of the woods yet though, the other three decided they needed hugs too, so by the time they were through with me, I was damn glad that I had the foresight to wear a panty shield!\n\nFrances, the man we first transgendered on purpose, now a beautiful redhead with about a D cup bust, standing around five-foot-two, walked in and asked, \"Dolly, you looked flushed. Are you nervous, honey?\"\n\nShe rushed up to me and hugged me tightly, her D-cups against my, ah... much larger breasts, which is exactly what I didn't need at that particular moment!\n\n\"I'm not nervous, Frances, but I am about to orgasm and ruin my panties, if you keep this up!\" I gently informed her, while panting like a bitch in heat!\n\nFrances giggled and replied, \"If this wasn't so important a meeting, I would grab a couple of your wives and make damn certain of it, sweetheart!\" as she released me. \"You will be just fine tonight. The Ambassador is the one who should be worried. I don't envy you having to deal with him though, he seems kind of dense.\"\n\n\"Thank you Frances,\" I replied trying to get my pulse back to normal. \"I know. He keeps insisting on wanting to set up an Embassy on Ka'an. He just doesn't want to get it through his thick head, that is not such a good idea!\" (Author's Note: Meka's world is Ka'an. In the Mayan language, Ka'an means 'Heaven'. More about that later.)\n\n\"I am certainly glad to have an attorney with your experience on our side, Frances. Without you and some of your friends' quick thinking, I don't know where we would be! Most likely, we would be, left out in the cold while the government planned military forays on Ka'an. If I know them, they would get a whole bunch of real cute girls back though...\" I smiled, visualizing a platoon of naked beautiful women returning from Ka'an, completely freaked, and greeted by a regiment of horny soldiers! That would be something to see!\n\n\"Well then, let's go over the agenda for tonight. As you know, there will be a short reception with appetizers and drinks, then we will move on to a state dinner, which Amelia is catering, using some of Ka'an's delicacies and a few of your wives to cook and help arrange their presentation. We don't want to frighten them by having them meet all of your wives at once!\" &lt;giggle&gt; \"Therefore, Gwen and Beth will be the only other wives present at dinner. Meka is seated at the head of the table as High Priestess of Ka'an you will take the position of hostess at the other end of the table. Ambassador Blatherwick will be seated to your right, with Charg\u00e9 d' Affaires Bartholomew on your left, and on Meka's right is Mrs. Marilynn Blatherwick. To Meka's left will be Mrs. Ginger Gaines and on her left will be Gwen, and again to her left will be the Ambassador's secretary and across from her will be Beth, placing First Secretary Gaines to her left and I will sit next to him on his left. You, have all of that?\"\n\n\"Don't worry, Frances, I just look like a bimbo, I have it,\" I replied, giggling and squeezing her elbow, so she would know I was jesting.\n\n\"I didn't me...\" she started.\n\n\"Hold up, I just wanted to inject a little levity. I am not offended, if anything, I am sorry for making you uncomfortable...\" I interrupted, before she could apologize, when none was necessary. I knew what was coming next though...\n\nFrances hugged me saying, \"You're so silly!\"\n\nEven prepared for it, she had me panting!\n\n\"Oh my, Dolly, you have one hell of a case of the hornies! However are you going to be able to hold off until this is all done with?\" Frances asked, holding me at arms length and staring deeply and concernedly into my eyes.\n\n\"Well... if I can keep the hugging to a minimum, and concentrate on the meeting, I should be okay,\" I answered breathily, my knees weak and shaking.\n\n\"Well, you get your cute butt over here and sit down for now,\" she told me as she ushered me to one of the sofas at the side of the room.\n\n\"I'm fine, my legs never used to do that...\" I complained as I forced my breathing to slow back down to normal, \"I thought that by now I would be used to being a woman...\"\n\nFrances let out a huge giggle and clutched my hands tightly in both of hers saying, \"I think you are doing wonderfully, Dolly!\"\n\n\"I'm not doing wonderfully compared to you, Frances! You act so naturally. You don't have to have the other women help you pick out what to wear. You do your own makeup, and beautifully I might add. Compared to you, I'm a total washout as a woman!\" I groused, giving Frances an exaggerated pout.\n\n\"Now you listen here, sweetie, you can't be comparing yourself with me! I was wearing women's clothes, putting on make-up, and learning anything I could about what women do and how they do it for most of my adult life! Until you came along and made all of my dreams come true! Now I finally have the equipment to use all of that knowledge properly. So don't you go putting yourself down sweetie, you are one of the hottest women I know, and are more woman than many I have known that were born to it! Just give yourself some time, hon.. You have only been female for five months, for gods sake!\" she reached out and cupped my little face under the jaw with her oh so-soft and feminine hand.\n\nI grinned back at her and squeezed her other hand, which I still held. \"Thanks, Frances, I needed a boost in my self-confidence. You have been such a dear friend to me since we met. I am now ashamed to remember how I saw you when we first met. I'm sorry for that,\" I admitted\n\n\"Oh, how did you think of me?\" she asked.\n\nI looked down, unwilling to meet her eyes, not saying anything, as I tried to formulate my answer in the best possible way.\n\n\"Don't worry, Dolly, I won't take offence, I think I have a good idea what you are going to say, so go ahead and get it off your... ah, chest,\" she giggled and squeezed my hands again.\n\n\"I thought you looked like a man in a dress...\" I admitted, really wanting to hug her to take the sting of my words away, but not daring to.\n\nShe almost fell off the couch laughing.\n\nWhen she had wiped the tears from her eyes and caught her breath, she said, \"That's what was bothering you? You were right! I did look like a man in a dress. I was a man in a dress, silly!\"\n\n\"Oh, I figured that you thought that you were sexy looking...\" I replied softly.\n\n\"Tell you what, did you think Dr. X was sexy looking?\" she asked stooping her head down into my line of vision so that I would have to look her in the eye.\n\nI raised my vision, so that she wouldn't have to stoop down, and replied, \"She was sexy when I met her, but not nearly as sexy as she is now!\" It was my turn to giggle.\n\n\"Well, Dolly, she had been on hormones for many years, and had gone through many surgeries to look like she did. That was what was ahead of me, years of painful and expensive surgery, and in the end, I would only appear to be a girl, just as Dr. X did. God, I wish I could hug you again! You saved me all of that! Not to mention, now I'm a real girl! I'm even a real girl with a family!\" she squealed the last, at frequencies high enough to shatter crystal!\n\nIt looked to me like she was going to burst if she didn't hug someone, so I motioned Gwen over as a surrogate hugee, unbeknownst to her. Frances engulfed her in a hug the instant she was in range!\n\nIt was my turn to giggle. Frances likes to squirm against you when she hugs, and it was even turning Gwen on!\n\n\"God, I love having my own breasts!\" Frances exclaimed, still interlocked with Gwen.\n\n\"So do I, hon.,\" Gwen admitted, \"But I have developed a taste for really big ones, not that yours aren't wonderful, Frances! Oh, my God, I sound like a titty-obsessed man!\"\n\n\"Don't fret it, Gwen! Big boobs never did much for me either, that is not until I started playing with Dolly's boobies! I'm as addicted to her hooters as you are!\" she assured Gwen, squirming some more.\n\n\"Stop that, you nasty girl,\" Gwen told her sternly, but grinning up a storm, \"I think we are just going to have to invite you to the 'after summit orgy'!\"\n\n\"You'd better, you sexy babe, you!\" Frances had finally released Gwen, \"Gwen, you aren't ever going to believe what this dear little person was agonizing about!\"\n\n\"What is it this time?\" Gwen shot me an amused look, then back to Frances.\n\n\"She was upset with herself for thinking I looked like a man in a dress when we first met,\" Frances broke into an extended giggle.\n\n\"You were a man in a dress!\" Gwen gave me a puzzled look.\n\n\"I know!\"\n\nNow they were both giggling at me! I blushed beet red. I know because my face felt as if, I had a sunburn.\n\nMeka was instantly at my side, \"Will you two, stop teasing my husband?\"\n\n\"It's all right, Meka, they were just clearing my conscious for me, by trying to make me feel foolish for my angst,\" I reigned in Meka before she could become annoyed.\n\n\"Dolly, my love, why are you sitting here? We have things to do, have these reprobates been trying to get you horny?\" Meka reached her hand out to me and pulled me to my feet, which was fairly easy to do since I was the shortest of the wives. That is so weird to say for someone who used to be an above average tall man, but was now a below average short woman, barely standing five foot tall! If it weren't for a set of boobs that would make a six-foot tall woman a shoe-in for 'big busted stripper of the year', I would weigh less than 90 lbs. It took us weeks to get bras in my size! I had to wear bras for much larger women, which we modified for my smaller rib cage. (That means we diaper-pinned out several inches in on the band.) They were better than nothing, but I really love my new custom made bras! They even made them so that when my nipples are hard (which is most of the time) it isn't so obvious through my clothes.\n\n\"What do you want me to do, Meka? I think Frances was finished briefing me on the agenda,\" I asked her, with my sex drive motor starting to wind up once again.\n\n\"Do you have the demonstrations prepared already, Meka?\" I checked with her, to be certain that we could make our point with this ambassador.\n\n\"He hasn't got a prayer! If he refuses to believe what we tell him, he is going to be one surprised ambassador!\" Meka snickered, and then went on with, \"I hope his wife is understanding! But with what we have planned, I think she will be,\" Meka had a look of pure devious delight on her face.\n\nI knew the plan and it brought a smile to my face as well. Even if he doesn't catch a clue, his wife will thank us... &lt;giggle&gt;\n\nCatering\n\nMeka and I went to where we had set up a bar and reception area, where she picked up some fruit juice for herself, Frances, and I.\n\nWe wandered into the kitchen and approached the whirlwind that was Amelia Ready, a tallish 5' 10\" beauty, with long strawberry-blonde hair, and piercing green eyes. She is slender and graceful, very narrow waisted but with large visibly pointy DD boobies that you can even see through her bra and blouse! Amelia is also one of our happy new women, courtesy of the Pea Pods.\n\n\"How is everything going, Amelia?\" I asked to get her attention, since she hadn't noticed us yet.\n\n\"Wha...? Oh, Dolly!\" she squealed and, you guessed it, I was hugged again! It was a real nice squirmy long hug!\n\n\"If this keeps happening, I will never make it through the evening without screwing someone's brains out!\" I mumbled as we released each other.\n\n\"Ooooh! Count me in!\" she enthused, bent over, and kissed me on the lips!\n\nMy knees turned to jelly and Amelia had to steady me, \"Whoa girl! You are the hottest little thing! Out of all the transformed girls I know, Dolly, you are the horniest one of us all! Meka, why do you think that the Pea Pod plant made her this way?\"\n\nMeka went to Amelia and whispered in her ear, causing Amelia to let out a dirty snicker.\n\n\"Okay, what did you tell her?\" I demanded, giving Meka a reproachful look.",
        "\"I will tell you later, dear Dolly, I promise, but I do not wish to embarrass you in front of everyone. I promise that it is not bad, dear one, it is one of the things I love most about you!\" Meka informed me, as she steadied me. \"Now steady up girl we don't want the ambassador's supervising chef to get the wrong impression,\" Meka said, pointing to the Chef with her chin.\n\n\"You had better tell me later!\" I warned.\n\n\"I need to visit the ladies room. I'll be right back,\" I called back to them, making my escape.\n\nI walked as quickly as my five-inch heels would allow me, while keeping my boobs from bouncing up into my face. Gwen had taught me how to swivel my hips to smooth out my walk. One of those things I never had to worry about as a man. I was used to a long stride and a bounce to my step, much to the amusement of my wives. I had begun to hold my breasts down when walking around in private and just letting them take wind when we were in public. Gwen finally took me aside and coached me for hour after hour on how to walk like a lady.\n\nThen there had been the shoes. When I had returned from Ka'an with Meka, I discovered that flat shoes and flat tennis shoes made my legs ache. That damn plant had altered my little feet so that I am most comfortable in high heels. Not only that, but I seem to prefer wearing dresses and skirts rather than pants these days. Gwen was the first to notice that my choices in clothing had become almost overly feminine.\n\nI tried to blame it on the fact that most pants had a tendency to ride up into my labia, which would then make me have a wet spot in my crotch all of the time with the seam rubbing on my oversensitive clit. Well, they did! Really, they did!\n\nOkay, I like dresses and skirts better now too! I love the way my big butt looks in a skirt, and the feel of silk nylons on my legs. Not excluding the excitement and danger of the possibility that my bottom would be exposed, either by a gust of wind or my forgetting to keep my knees together (which I have to admit happens more frequently than I would like to admit.), possibly, even by my falling on my sexy derri\u00e8re, with my lacy silk panties exposed for the entire world to see. (I admit that I wear the laciest, sexiest panties I can find, but a girl deserves to pamper herself!) All of my wives have discovered this fact, and have been presenting me with panty presents, sometimes twice a day!\n\nAlong the way I seemed to catch the attention of the few Secret Service agents that we had in the building, carefully making sure that the Ambassador Extraordinary, would be safe during his visit. I felt like a succulent piece of meat under their gaze, just as many women claim, but I also felt the power of having nearly made them loose control and start drooling on their own ties!\n\nWhen I arrived at the ladies' room, I discovered that I was not alone. Two of my wives were in escort. They had caught up to me easily, since I am the shortest of the wives, along with my other two problems.\n\n\"Isn't it strange how we all have to use the ladies' room at the same time?\" I asked my escorts, as one of them passed me by, so that she could hold the door open for me. I have no idea why they protect me as if I were made of fine crystal, but I try my hardest to live up to their expectations.\n\nWe all entered together, me as the cream center. I headed to the dispenser on the wall and retrieved a panty liner before trying to enter a stall. Before I could attain my goal, both wives snagged me. Hugged the living heck out of me, and, while one of them gently held me, the other stripped my panties from me and slipped a brand new pair of Victoria's Secret lace panties on me with the liner in place.\n\nI would have protested, but the one holding me was groping my breasts. Not to mention, it meant so much to them to do little things like this for me. At first, I had protested, until Meka took me aside and scolded me for making my wives unhappy. Therefore, in the interest of domestic harmony, I sacrifice my dignity from time to time.\n\nI did put my foot down when it comes to wiping my own bottom!\n\nWith all the hugging and groping, this panty liner wasn't going to last long either, but I have to admit, it was one heck of a way to change your panties!\n\nWe all washed up and freshened our makeup. My wives escorted me back to the lounge once we were presentable again.\n\nIt finally dawned on me that there were more of the Ka'anian women present than I had seen in a long time.\n\nTherefore I asked Meka what it was all about, \"Meka? Why so many of our sisters here tonight?\"\n\n\"We thought it wise to provide our own security forces, Dolly. You might have noticed that the largest, most skilled hunters of our wives are here tonight, along with many betrothed to the other males in the village. We do not expect trouble, although we plan to be prepared for it, should the need arise,\" she answered while she straightened my skirt and blouse.\n\n\"What would I do without you, Meka? Never mind, I never want to find out! God, I sound so, mushy! It must be all of the estrogen,\" I surmised as I straightened Meka's bra for her, even though it didn't need it!\n\nReception\n\n\"I think I hear a limousine driving up outside, so you had better calm yourself, my queen!\" &lt;Giggling&gt; \"Let's take up our positions for the reception,\" she finished as she led me by the hand to where we had set up our meet and greet, where Gwen and Beth were already waiting for us.\n\nFrances met the ambassador and his entourage at the door and led them in to the reception, \"Mr. Ambassador, I would like you to meet Ka'anian Head of State, High Priestess Meka Gordon and her husband, Her Royal Highness, Queen Dolly Gift-from-God Gordon. Your Wisdom, this is Ambassador Theobald Heywood Blatherwick of the United States of America, Earth, and his wife Marilynn,\" Frances was enjoying herself immensely introducing me with my 'full name'.\n\n\"A true honor, High Priestess and Your Royal Highness,\" the ambassador told us while shaking Meka's hand.\n\nI figured that it was a good time to establish pecking orders, and put this ambassador on the defensive, by chiming in with, \"Excuse me, Ambassador, the proper form of address for the High Priestess is, Your Wisdom, not High Priestess.\"\n\n\"I beg your pardon, Your Wisdom, I was unable to obtain any information on protocol, prior to our meeting,\" he replied, with a slight bow towards Meka.\n\nHe turned towards me. \"A pleasure to make your acquaintance, Your Royal Highness,\" he intoned, and then the fink actually had the audacity to kiss my hand!\n\n\"The High Priestess needs to keep her formal title, but I don't. Please Mr. Ambassador, call me Dolly,\" I offered, trying to cut through some of the quagmire. I felt that Meka is the important person here, and therefore I could be less formal.\n\n\"Very kind of you Dolly, but only if you will call me Theo,\" he returned, once again with the slight bow he had affected towards Meka.\n\n\"Deal!\" I agreed, with more force than a lady probably should.\n\n\"Your Royal Highness, I am Mrs. Marilynn Blatherwick. It is so nice to meet you,\" she gave me the woman handshake, the one where you just open-handedly clasp fingers limply. \"It is so exciting to actually meet people from another world!\"\n\nI giggled, \"That is one way to put it. I fainted dead away when I realized that I was living on another world. I am the only one in the reception line who was born on earth, as a man.\"\n\nHer hand shot up to cover her mouth, \"You mean you are him... err, her?\"\n\n\"I'm afraid so Mrs. Blatherwick,\" I admitted, blushing up a storm.\n\n\"I want to talk with you at length when we have an opportunity! This is a great honor! I have wanted to meet you ever since I heard about you!\" Mrs. Blatherwick gushed.\n\n\"I look forward to it, Mrs. Blatherwick, there are some things I want to discuss with you as well, woman to woman, so to speak,\" I replied warmly, \"Please, call me Dolly. Your Highness makes me sound like the Queen of England.\"\n\n\"Oh yes, Dolly, and please call me Marilynn,\" she replied, looking exactly like Frances, just before she hugged the stuffing out of me. I could see her visibly fight off the urge, as she and the Ambassador stepped on to be introduced to Gwen.  \n\nFrances delighted in presenting Gwen, nearly as much as she had me, \"Ambassador Blatherwick, may I present, Her Royal Highness Gwendolyn Goddess of the Moon Gordon.\"\n\n\"Delighted to meet you, Your Royal Highness,\" he replied to her as he kissed her hand as well.\n\nGwen must have been feeling her oats, because she replied with, \"Yes, you are!\" What a stinker!\n\nI have to give him credit though he knew when to cut his losses and just moved on to Beth, while Gwen and Marilynn were talking.\n\n\"Are you the wife who was Doug's girl friend before his ah... transformation?\" Marilynn asked her.\n\nGwen giggled and answered, \"Yes, I am the other earthling here.\"\n\n\"I am so curious about you two, I could bust!\" she admitted in a low whisper.\n\n\"Well I will be more than happy to tell you anything you want to know. I hope to talk with you at length when we have a minute to ourselves,\" Gwen told her in a conspiratorial voice.\n\nMarilynn looked over to her husband to see if he was paying attention to her. Since he was involved talking to Beth, she said, \"I will break away and we can talk in private later, okay?\"\n\n\"Deal,\" Gwen whispered back.\n\n\"If nothing else, we can meet up in the ladies room!\" they both giggled together.\n\nMeeting the Charg\u00e9 d' Affaires, Davon Jethro Bartholomew, drew my attention back to my own sphere of influence.\n\nDavon was a big man, 6' 2\" and 210#! He looked more like a Marine than a Charg\u00e9 d' Affaires. He has piercing Hazel eyes, wide shoulders, a trim waist, and a chest carved out of marble! I could guess that he had a hell of a six-pack! Since he was introduced solo, I guessed that he was single.\n\n\"Your wisdom and your Royal Highness, a delight to meet you both,\" Davon Bartholomew stated, \"Please call me, Davon.\"\n\nThis man was so intense he reminded me of Colonel Oliver North!\n\n\"Charmed,\" stated Meka.\n\nI could feel her eyes on me as I said, \"Nice to meet you Davon.\"\n\nHe moved on to Gwen, but not before Meka pinched my bottom to tease me! This darned body was yanking my hormones in so many directions that I hadn't realized that Davon turned me on! I was so glad that Meka had broken my concentration! (Of course, that's not saying much with me... carrots can even turn me on.)\n\nNext, the introductions of First Secretary Maurice Braden Gaines, and his wife Ginger Pandora Gaines came. The First Secretary was every bit as impressive as Davon Bartholomew was. Maurice is about 6' 1\" tall and 205 lbs. compared to Davon's 6' 2\" and 210 lbs. Both men seemed out of place for a diplomatic mission. To me they seemed more suited to a Seal Team incursion. I became suspicious of them immediately.\n\nLucky for me this was a very small meeting, the only other person we met briefly was the girl that was brought along to record the session and take notes, Hilda Jocelyn Putman, a thin 96 lb. girl with honey blonde hair who had been passed over by the boob fairy entirely. She kept staring at my boobs, almost as if she had never seen a pair before! I was polite and didn't call attention to it. What is she going to think when she realizes that I used to be a man?\n\nWe broke up the reception line and joined our guests in the reception area.\n\nConspiracy\n\nI snagged a couple of brandy glasses off one of the wives' serving tray on her way by me and handed one to Marilynn, the ambassador's wife. I figured that now was, as good a time as any, to start working on my mission for this evening.\n\n\"Thank you, Dolly,\" she said as she accepted the brandy.\n\n\"I think you will like it, that is assuming that you like Cognac?\" I queried.\n\n\"Oh yes, then this is Cognac?\" she said raising her snifter and inhaling the bouquet of the brandy.\n\n\"No, it's from Ka'an. It reminds me of fine Cognac, but it is made by my wives back on Ka'an,\" I answered as I slowly strolled away from the others so that our conversation wouldn't be easily overheard by the others. She seemed to be anxious for privacy as well, since I soon found myself hurried to keep up with her.\n\nShe grasped my elbow and near whispered, \"Dolly, you are a wish come true! I have always wanted to know what it would do to a man, to really, really become a woman! You are a real woman now aren't you?\"\n\nI giggled and answered, \"Right down to the monthly curse! Why so curious?\"\n\n\"I just always thought that it would serve some men right to have to see what women go through! Especially some of the more macho ones, you know that kinds of men who like to intimidate women?\" she replied with a little more vehemence than I had expected.\n\n\"Well, I might have known some of those when I was a man, but I can't say I have had to interact with any since my change,\" I replied to her trying to feel out where this was coming from, as we seated ourselves on a sofa across the room from the others.\n\n\"At least you know what I am talking about. Isn't there some men in this world that you would like to see what happened to you, happen to them?\" she asked looking deeply into my eyes.\n\n\"There may be a few of those out there, I never really thought about it,\" I answered truthfully.\n\n\"I have thought about it and there are a few that I would like to see go through it!\" she stated quite earnestly.\n\n\"I would like to talk with you in depth about that sometime in the near future, but I think that will have to wait for another time. I do promise to talk to you more and do whatever I can to tell you what you want to know,\" I told her, holding her hand as I said it.\n\n\"This sounds like you have something you want to discuss that might be a little more immediate?\" she offered.\n\n\"I wanted to talk with you about this evening. The US Government is pressing us about establishing a mission on Ka'an, with your husband as Ambassador. We keep telling them it is too dangerous, but they will not listen,\" I took a deep breath and then continued, \"In order to make a point, we have set up a demonstration to show how dangerous it would be. I will need your cooperation and your permission before we can do it,\" I informed her.\n\n\"I will have to be fully informed as to what you have planned before I could even think about it! Have you talked to the Secret Service about this?\" he asked worriedly.\n\n\"Nope, they won't have to know about it, however you will. You see you will... um... You will probably take notice that something is amiss, when your husband screws your brains out tonight...\" I admitted, blushing up a storm.\n\n\"You mean you are going to slip him some Viagra?\" she almost squealed, holding her hand over her mouth in shock.\n\n\"No, we would never do that! Anyway, Viagra isn't as strong as this stuff! We just want to give you a corsage, but if we do, we have to make sure that you know that you must stay clear of all of the other males at the conference. The other thing you will have to know is that you won't be going home tonight. He would never make it! Don't you worry we have a nice room all set up for you two, with some complimentary chocolate truffles. When you are satisfied, don't let him have anymore of them. If you agree to this, you will have better sex than you two have ever had!\" I was searching her face and she didn't seem to be onboard so I went on, \"The Corsage you will have is a piece of a flower that grows on the plant that transformed me. It uses this flower to lure men into its trap, and believe me, it is completely irresistible!\"\n\nShe got a wry smile on her face, and said, \"If I agree to this, will you promise to try to do me a favor in the future. I promise that it won't be anything illegal, and that you will have the option to refuse if you don't think it is warranted. It won't be anything that would go against your morals, and you might do it even if I didn't ask for this.\"\n\n\"Wow,\" I exclaimed, \"that is mysterious. We are trying to save those men over there, their penis', but if it is that important to you, I suppose for a friend I would do whatever I could to help her, even if I hadn't promised to, ahead of time.\"\n\n\"God you really are a woman now aren't you?\" she looked at me wide eyed.\n\n\"Damn, did I sit here with my legs spread again?\" I exclaimed, as I peered over my chest to verify my knees were together as they should be.\n\n\"You know darn well that they are!\" she tapped my wrist playfully.\n\n\"You should have seen me last month though! Meka had to remind me twice a day!\" I giggled, remembering how I was, not so long ago.\n\n\"It's so hard to believe you were male! That giggle just wouldn't come from a man!\" she enthused, \"What does it feel like? I mean, compared to being a man, what are the things that you notice the most?\" she pried, finally letting her fixation overcome her.\n\n\"It is so hard to relate it to someone who hasn't gone through it. I can tell you about the woman body things that are the hardest to get used to, and the cultural things and even the feelings that are so alien for me, but without you having a frame of reference to compare it to it loses some of its meaning. It's like trying to tell you about having a tail, how can you imagine what it feels like without having a tail?\" I explained trying to make her see that no matter how well I could describe it, it would never be close enough.\n\nShe gave me one of those 'oh sure' looks so I acquiesced a bit and told her, \"Peeing is one of them. It is so weird to sit and pee like this. I can't tell you how many times I've peed down my legs when I forgot! The softness of the world is another one. That is to say, now I am allowed nay even expected, to experience everything soft and feminine and it's okay for me to do that. If I wore the kind of undies, I have on now before, even Gwen would have tossed me out on my ear!\"\n\n\"This is exactly what I want to know!\" Marilynn said, her eyes almost glowing, \"Tell me more. Please?\"\n\n\"Alright, well there is the fact that I cry at the drop of the hat sometimes, and here's the rub, I like to? That's not even mentioning the monthly curse. I hear I have exceptionally mild menses so I won't go there. However, my head tells me one thing and my body takes me elsewhere all of the time! Of course, now I know why women always proclaim to want sensitive guys, but always go off and screw the rebels!\" I admitted, \"Sensitive guys are real nice, but they don't make a girl wet like the other ones do!\"\n\n\"Oh you poor thing!\" she didn't stop herself this time. She hugged the stuffing out of me!\n\n\"I feel so much for what you are going through! I have the feeling that you were a really nice man, and didn't deserve to have something this hard to deal with happen to you!\" she was nearly in tears.\n\n\"It's all right Marilynn. There are upsides to it too! Well at least for me there are! My steady girl is now my wife, and I met a wonderful woman on another planet who loves me, and whom I love dearly. I have more of a family than anyone I have ever known and for some reason, they love me like they had all given birth to me!\" I hugged her back savoring the warm sentiments we were sharing.\n\nI think that she has some real issues and we will have to talk much more than we have time to tonight. I noticed across the room that her husband was giving us the evil eye, so I said, \"As much as I am enjoying this hug Marilynn, I think it best if we break it off for now, your husband is giving us a disapproving glare.\"\n\nShe let go of me, but added by saying, \"He won't dare say a word tonight!\" Then she whispered, \"I'm just making diplomatic inroads that he will be able to use to get his embassy!\" she laughed at her own silliness \n\n\"Even so I think we should make our way back to the others before he becomes brave enough to chance a diplomatic incident!\" I told her as I stood, quite gracefully I might add.",
        "\"Wow, can I send my daughter over for lessons in grace?\" Marilynn asked as she followed suit.\n\n\"No problem Marilynn. I have twenty two wives who would be more than happy to take her under their collective wings!\" I teased, as we strolled at my mincing pace back towards the others.\n\nShe stopped dead in her tracks, \"Twenty two? Wha... wha... how is that?\"\n\n\"In Ka'anian culture, once the high priestess marries you to someone, you stay married. Since there is a shortage of men there, and I was the finest stud to come along in a long time, Meka decided to share me with as many wives as I could be stud for. With a little bit of biochemistry, I was like the Energizer Bunny. I didn't find out until later that all the women that Meka was sharing me with, were there consummating our marriages, at least not until I was back on earth, I wasn't. I thought that after my transformation that would nullify the marriage but it doesn't work that way on Ka'an. I did find out that I fathered ten babies. The ultrasounds seem to indicate nine of them are male and my wives are overjoyed!\" I blathered away and she seemed to hang on every word.\n\n\"Oh my! How will you provide for such a big family now that you are a woman?\" she was thinking like an average citizen, but then I could almost see the wheels turning in the mere instant that it took her to rethink her statement. She shaded her eyes and continued with, \"Oh, what a goofy thing to say! You have the resources of an entire world. However, with the embargo those things will be hard to market, at least that's what Theo says. He figures that pressure can be used to negotiate a mission on Ka'an. Is the embargo making things difficult for you and the Ka'anians?\"\n\n\"I shouldn't admit this to you Marilynn, but since we are friends, can I trust you to keep a secret?\" I whispered. I figured that it would be a good time to give her a minor 'secret' to test her trustworthiness for future reference. \"We aren't hurting too badly, there are a few things that we have that can be made available for a price, which benefit us and the local populous. As long as things take place here at the embassy, on Ka'anian soil, Ka'anian law applies. We own the entire area around the embassy, so it is Ka'an too. Did you notice the sign for a bordello just before you turned in here?\" I giggled.\n\n\"Oh my! You mean that the women of Ka'an are selling their bodies?\" she placed her hand to her chest in shock.\n\n\"Well, they don't look at it that way. They think that they are being paid for raping those poor horny men they are stealing seed from to become pregnant and thereby repopulate our world. They would pay those men for their seed, whatever they asked! So the fact that those men are paying them and giving them exactly what they want confuses the heck out of them. The ones that we have procured visas for go out and work for a living, then they hand their paychecks to Meka, who pools all of the money they bring in. Then there are the men who pay to visit Ka'an. We had to start charging for the privilege of visiting, as well as requiring sperm donations from the men, to cover our operating expenses here on earth. The embargo just makes it inconvenient for us but it doesn't cripple us. You won't tell Theo, will you?\" I asked her, giving her my most innocent, and pleading look. (Meka had me practice for hours on facial expressions. She told me the little girl innocent ones were my best!)\n\n\"I would never tell that... Um, I won't give away your secrets, ever!\" she started with a biting reply, but her party face covered it up.\n\nI could tell that this woman had some real issues and that future conferences with her might be more important than this big hullabaloo!\n\n\"Thank you Marilynn. I want to talk to you in private and in depth. Here is my card,\" I handed her one of my business cards that I keep stuffed in my bra, amongst other things. \"That has my private cell phone number on it and it has our message phone on it. One of the wives is always on duty to answer it. They have instructions on how to find me at all times. The other thing you should know is that my wives have their own version of the Navy Seals. Should you ever be in trouble and need help, these secret service bozos running around here don't have a chance! Believe me, they can disappear and show up at your elbow at the drop of a hat. How they do it, I haven't been told yet,\" I informed her, if she was in the circumstances I believed her to be in, she might need the help.\n\n\"You have to be joking!\" she started to say, \"Better than the Navy Seals? Girls? That is hard to swallow. What, do you have Amazon warriors or something?\"\n\n\"Where do you think the legends came from? The Ka'anians have been visiting the Americas for centuries and there has been a long-standing tradition of Ka'anian women warriors. Do you see Windy over there serving drinks?\" I asked pointing to her.\n\n\"Yes. You aren't trying to tell me she is one of these 'Amazons' are you? She is only 5' 7\" tall! She looks like she is fairly buff for a woman, but an Amazon?\" she trailed off, still staring at Windy.\n\n\"The myth made them tall, only because male egos had to make them bigger than normal women, so that they wouldn't loose face. They practice a martial art peculiar to Ka'an. They say that they can teach me, but the training takes a long time and involves some kind of telekinesis to enhance the physical strength. That little girl there can punch through a stone block wall!\" I squeezed her arm to reassure her.\n\n\"Windy is one of my wives. She is also head of security for the embassy. She will not let anything happen to anyone who is within the confines of Ka'anian domain. She has twenty others under her command here tonight. Normally there are only ten, but we were concerned that the Secret Service might try something tonight. They are under orders to let any man through the portal who wants to go, although they will make sure that he is naked when he passes through it,\" I had to giggle at that. I knew what would happen to him on the other side.\n\n\"You mean that he will become...\" she said with an evil grin on her face.\n\n\"Whatever his fantasy woman is, he will become. The plants have a way of invading the mind of their victim and drawing out that piece of information, then it uses that as a template for the transformation,\" I told her, as we stood chatting.\n\n\"So if say a person was a pedophile he would become a little girl?\" she asked incredulously, nearly drooling as she said it.\n\n\"I never thought of it, but I suppose so. He would have the emotional make up of his dream girl as well. If he likes submissive girls, he will become a submissive girl. If he likes busty girls, he will become a busty girl. I suppose if he likes nymphomaniacs he will become a nympho as well,\" I finally figured out why I was such a horny girl as I spoke to her.\n\n\"What's the matter Dolly? Your face just went pale!\" Marilynn asked, as she shook my arm to get my attention.\n\n\"Um, I just figured out why I'm such a horny lesbian. I suppose I knew all along though. I always was turned on by horny lesbians as a guy, now I am one!\" I told her my voice shaking a little.\n\nShe hugged me and said, \"At least you are a very sweet horny lesbian! Does it bother you to find out that you are a horny lesbian dear?\"\n\nI thought about it for a moment. Then I realized that I loved being a horny lesbian!\n\n\"Marilynn, that was the perfect thing to say! I was feeling sorry for myself for a moment there, then you said that and I realize I love being a horny lesbian! Thank you!\" I was enthusiastically hugging her back, and then I realized that she might think it was a sexual advance so I released her.\n\n\"Relax Dolly, I don't think you are trying to bed me. I'm not sure I would object even if you were,\" she laughed, \"Somehow I think you have plenty of volunteers as it is though.\"\n\n\"You have no idea! There is an orgy planned for after the meeting. However you will be busy in your own orgy I do believe!\" I told her reiterating the proposed plan.\n\n\"Did I hear you correctly? Did you say that I would be invited if I didn't have my marital baggage along?\" she had eyes as big around as Eisenhower Silver dollars!\n\n\"We are a very loving group Marilynn. Tonight there will be three women in our bed that are not wives of ours. All three of them used to be men!\" I informed her as I let go of her.\n\n\"We really will have to talk!\" she exclaimed, but then she whispered, \"Dolly, the Secret Service Agent named Eric will try to pass through the portal tonight. Please don't hurt him. However, do as you have said you plan to do with him. I told that fool husband of mine it was a stupid idea! Uh... do you think that you can arrange for me to be there when he, I mean she, returns?\"\n\nI nodded my assent.\n\nShe immediately started to act as if she had said nothing to me at all.\n\n\"Well you go ahead and check on how well the preparations for dinner are going Dolly, and I will chat with Meka over here until you return,\" she took my hands in hers and I saw only for an instant her eyes flick over toward Windy.\n\n\"I will Marilynn! I so enjoyed talking to you and look forward to a long time relationship with you. And with your husband,\" I purposely split the two statements, so she would know that it wasn't commensurate upon his being ambassador.\n\nDetails\n\nI gave Windy a signal to meet me outside the room, unbeknownst to the others.\n\nWe meet up in the hallway and I told her of the impending attempt to invade Ka'an, in the language of Ka'an which I was finally beginning to learn. (I think that damn plant made me smarter!)\n\nShe took off at a slow lope, well for her a slow lope, headed for my old apartment, and the gate to Ka'an.\n\nI decided to check on Amelia just to fulfill my cover story.\n\n\"Amelia, my darling! Is everything going well?\" I asked as I walked up to her.\n\n\"Dolly! No it's not!\" she complained as I approached.\n\n\"Oh my, is there anything I can do?\" I asked shocked that we could actually be having difficulty supporting Amelia's efforts.\n\n\"Yes! Go away Dearie. I don't have anything to do myself and it's driving me crazy!\" she said with a grin, followed by a big hug.\n\n\"If I had your wives as a support crew all the time I could nearly take over the catering market!\" she bragged, patting me on the back as we hugged. \"They do everything! I'm just standing around getting in the way! I show them one time what I want and bam they do it exactly as I did it, maybe even better! I'm staring to feel like a third wheel. Do you have anything I can do?\"\n\n\"Are you board?\" I asked, incredulous that she should be standing about with nothing to do.\n\n\"You've got it sexy,\" she replied while groping my bottom, \"Your wives have everything in hand. You wouldn't have a spare half hour for a quickie would you?\"\n\n\"You keep that up and it won't take half an hour, I'll orgasm right here,\" I panted, my head against her breasts, \"Unfortunately I have to get back to our guests, without overflowing my panty liner. Would you like to go with me and tend bar maybe?\"\n\n\"That might be fun for a while. At least I'll get a gander at the guests. Lead on my dear,\" she beckoned me to, precede her.\n\n\"You just want to watch my ass you stinker!\" I accused, but allowed her to follow me anyway.\n\n\"Whoa! Back field in motion! Where did you get that dead sexy walk?\" Amelia asked as she stared at my butt.\n\n\"Gwen taught me. It's the only way I can walk, without getting black eyes from my boobs bouncing up into my face, and for some reason that means I walk sexy now,\" I told her with a shrug.\n\n\"No wonder Windy has to keep giving those Secret Service guys menacing looks!\" Amelia laughed, and then walked up abreast of me to walk side by side, \"Do you think if I walk around with you, I can have your leftovers?\"\n\n\"Any particular guys that you have in mind?\" I replied continuing my mincing walk back towards the reception.\n\n\"Guys, my ass! I want all of the girls that chase your sexy ass around this place!\" she patted my soft and wide bottom, which caused me to moan uncontrollably.\n\n\"Stop it you minx! I have to appear calm and collected! If I show up panting in a sexual frenzy, how do you think that will look to the ambassador?\" I admonished her, trying to think about the Dali Lama to calm myself.\n\n\"I imagine that he would throw you to the floor and start humping you, wife or no wife!\" she giggled up a storm imagining me being boffed by the ambassador. At least while she was giggling she wasn't finding ways to make me wet my panties.\n\n\"When we get there you are going to be asked how soon dinner will be served, you do have an answer I hope,\" I stated the obvious to keep her focused on the job at hand and not on my horny little body.\n\n\"To tell you the truth, it's been ready to go on the table for ten minutes. We were waiting until we had the word that you all had competed your missions. Did you?\" she asked, looking me in the eyes for confirmation, \"It went that well did it?\"\n\n\"Better than we could have ever asked for. She has some serious issues with her husband,\" I replied. The trepidation in my voice must have been obvious. She stopped, turned to me, and gave me a noticeably quizzical look.\n\n\"I wish I had more to tell you, but we only talked for fifteen minutes. It was a quick evaluation. The only thing I know is that she doesn't object to having her husband screw the living hell out of her tonight,\" I told her what little I had gleaned in my short conversation.\n\n\"Do you think that she might be a battered woman?\" she asked, now deadly serious.\n\n\"I am hoping that is not the case. Although I did tell her that we would support her and could protect her, hopefully in a way that if she doesn't have those kind of issues, she wouldn't be offended,\" I bit my lover lip in consternation. \"I intend to put a bug in Windy's ear to keep an eye on her. If she sees anything that is suspicious she is to report it to me, unless she thinks that Marilynn is in immediate danger.\"\n\n\"I don't think you have to add that last, she would jump in to protect anyone from harm, male or female,\" she stated emphatically, taking my arm, and continuing toward the reception.\n\n\"Of course. You are right. I have been thinking of protecting Ka'an and all of the women so much, sometimes I forget about the men. Is that sexist? If it is, is it against men, or women?\" damn I confuse myself sometimes!\n\n\"That hurts my head even thinking about it! Forget about it and go back to your important guests. Tell them dinner is ready and to get their collective butts to the table or I'll feed it to the Secret Service Agents!\" she giggled as she opened the door and propelled me through it with a swat on my ample derri\u00e8re.\n\nI didn't let the fact that I was swatted show on my face as I sashayed into the room, \"Attention everyone?\" I waited until the room quieted. \"Dinner is ready. Please follow me to the dining room.\"\n\nDinner\n\nI wasn't certain that I should do the announcing, but I kind of felt like the hostess of this shindig, so I did it anyway. The only mistake I made was to have them all following me. I was so grateful when Meka quick stepped to my side so that mine wasn't the only bottom for the guests to watch on the way. She slipped her arm in mine and escorted me as we went.\n\nOur wives escorted everyone to their proper place.\n\nWe had consulted, 'PROTOCOL FOR THE MODERN DIPLOMAT', Prepared by the Overseas Briefing Center, Foreign Service Institute, US Department of State, Washington, DC; 1998. Well, at least as close as we could get with eight women and three men at the table. We tried to at least, put non-Genetic Girls in between the Genetic Girls.\n\nIt indicated that Meka was to be at the end of the table and I was to be at the other end. Well you heard all that before. Let's just say everyone took his or her seats.\n\nEven though on Ka'an I am the husband, I am taking the Hostess roll for this occasion. We weren't sure what the protocol for the head of mission being female, so we just considered who was the most important for the meeting as the Host.\n\nThe first strange thing I experienced was that Ambassador Blatherwick held my chair for me as I sat down to the table. It shouldn't have taken me by surprise, but I covered my surprise by giggling, which brought a smile from everyone then said, \"Thank you Theo.\"\n\n\"Quite welcome Dolly,\" he expertly guided my chair in to the table, but misjudged my boobs, and my plate was pushed into my water glass causing a minor flood.\n\n\"I am terribly sorry Dolly!\" he quickly apologized.\n\n\"Don't worry about it Theo. I crash them into things all of the time myself! Excuse me while I slip into something dryer,\" I went to stand and Theo took my chair again. He was however unable to keep his eyes off my nipples which were evident through my wet dress and bra.\n\nI saw that Marilynn noticed his eyes bulge out at the same time I did. She was looking daggers at him as I left.\n\nChanging\n\nTwo of my wives were waiting for me at the door, they bustled me into the nearest ladies room where they were all ready with a dress for me. I had to ask! \"All right ladies, how is it that you have a new dress waiting for me? Do you have a change of clothes for the others as well?\" I interrogated the suspects while giving then my 'harsh' gaze, which is about as terrifying as Smurfette could produce.\n\nMy wives could tell though, so Itzel answered, \"No, we do not have a change for any of the others, just for you Dolly. We discussed what would happen at the table tonight and it was unanimous that the likelihood that you would be needing a change was almost certain.\" At least she had the good taste to blush and then continued with, \"We felt that you are still becoming used to your body, like a teenager who is growing, so you can still be a little clumsy. We don't mean it to be cruel or anything, and it wasn't your fault the ambassador knocked over your water glass. We all think that you are doing a marvelous job. When it happened to me I was clumsy, bitchy, and a total wreck for nearly a year!\"\n\n\"Thanks to you both. I am glad that you told me the way you did. I feel silly now for feeling picked on,\" I admitted. By this time, I was nearly in a new dress and Ysalane was touching up my makeup.\n\nYsalane said, as she spread lipstick on my lips, \"There you are sweetie, all ready to go back to dinner!\"\n\n\"Those pit crews at Indianapolis have nothing on you two!\" I praised them, while wiggling back into my high heals.\n\nI started clacking my way back to the dining room with my two escorts. We passed by a pair of the Secret Service agents roaming around our halls and one's eyes locked onto my chest as if his weapons radar had homed in on them. His partner sharply elbowed him in the ribs to break his stare. It made me giggle to think that would have been me just a few months ago.\n\nI overheard them as we passed by them. One said, \"You are damn lucky she giggled bonehead!\"\n\n\"I couldn't help it! Did you see 'them'!\" the other replied in disbelief.\n\n\"Shut up Eric, you fool! She'll hear you!\" the first one said in a low menacing tone.\n\nI walked out of earshot after that.\n\nYsalane asked me in a whisper, \"Do you want us to speak to that one after we drop you off?\"\n\n\"Nah, I would have done the same thing myself at one time. You can go back and jump his bones though if you want to,\" I teased.\n\n\"I'll think about it. You can have the other one if you want, I bring him by for you later,\" she teased back.\n\n\"Better yet, take him back to Ka'an and introduce him to the local flora,\" I laughed, \"He can get his own set of missiles!\"\n\n\"As you wish my queen!\" she replied sharply.\n\n\"No, no, no, I was joking! Don't go and really do it!\" I couldn't take the chance that she would take me seriously and deprive him of his manhood.\n\n\"Got you!\" she laughed, \"The only way he goes to Ka'an is under his own steam. We heard of maybe an attempt to sneak through to Ka'an tonight. If he is the one, I would laugh my ass off!\"",
        "Back to Dinner\n\nShe opened the door to the dining room for me, followed me to my chair, held it while I sat down, and carefully pushed me forward to the table.\n\nWhile I was seated the men all stood, then they joined me at the table.\n\nYou could hear a pin drop, so I looked around and exclaimed, \"You didn't all wait for me did you?\"\n\nMeka answered from across the table, \"Marilynn insisted that we wait. I can't believe that you are back so quickly. Did you change in the hallway?\"\n\nThat brought a smile from everyone.\n\n\"I have my own personal pit crew. For some reason they felt that I might need a change of clothing tonight and were prepared,\" I blushed as I told them.\n\nMeka covered with, \"Our ladies are always prepared. Most likely there are full changes of clothes for all of us at the ready.\"\n\nI didn't bother to correct her, I would have bet money that she was in on the planning of my reserve clothes, including the fact that this dress revealed a whole lot of cleavage! A fact that didn't go unobserved by the men in attendance.\n\nWe were all served fruit dishes to start the meal. Slices of the huge grapes of which I had grown fond named T' Gap, and a blood red heart shaped fruit with a pear like consistency and a honey like taste known to the people of Ka'an as Ixhata. Amelia had mixed in some earth fruits, pears, apples, and grapes, for the less adventurous.\n\nMarilynn wasn't so sure of the Ka'anian fruits in her bowl so I speared a T' Gap slice and as I was stuffing it in my mouth, winked at her. I made appropriate yummy noises to indicate that it would be tasty to earth palates.\n\nGwen followed my lead just in case anyone thought that my tastes had changed after my transformation.\n\nI was more interested in Marilynn's reaction to the new tastes than those seated closer to me so I was slightly startled when Theo exclaimed, \"These are wonderful! What are they called?\"\n\nI turned to see he was looking for me to answer so I told him the names, and as I did, I saw Marilynn smile her enjoyment at me. I looked around and was pleased to see that all, in seeming preference over their earth cousins, were enjoying the Ka'anian fruits.\n\nI wanted to get conversation moving a little so I looked to Davon and asked, \"How is the fruit Davon?\"\n\n\"Very nice,\" he replied simply and briefly.\n\nHe appeared as though he were sitting at attention while eating, so I asked, \"Were you in the military Davon?\"\n\n\"Yes,\" he answered.\n\nIt was obvious that Davon wasn't going to be very chatty so I moved on to more, fertile fields, I hoped, \"Ginger, have you been in Nevada long?\"\n\n\"We flew in last week, from Washington. Nevada is lovely though. I really like the bright lights of Reno and all of the friendly people here!\" she responded exuberantly.\n\n\"Well as a former native of Nevada, may I extend my welcome to you and your family,\" I smiled, happy to have someone who would respond in more that two word sentences.\n\n\"Why thank you Dolly. I'm looking forward to seeing more of the area. Perhaps you can suggest some places we should visit while we're in Nevada.\"\n\n\"Certainly, what kinds of things do you like to do?\" I asked her and looked to her husband as well inviting his input.\n\n\"Well Dolly, I'm a country girl at heart. We like to camp, fish, ride horses, and hike. Some of the wilderness areas here look very inviting,\" Ginger enthused. \"Don't we honey?\" she asked Maurice.\n\n\"Yes, we do like all of that, and in different environments, rainforests, high plains, deserts, and jungles,\" he added.\n\n\"I used to work in places like you describe all of the time. In fact I was flying over the jungle when Meka saved me,\" I informed them. They all probably knew that already, but I was just trying to keep the conversation going.\n\n\"I see. I've read the official report of your crash. What I don't understand is how you survived the wreck! What was left of the plane was a total. They had to pick the pilot up in pieces!\" he asked now quite interested in the conversation.\n\n\"I think you need to get that information from Meka. I was unconscious at the time,\" I answered, looking to Meka for her to explain.\n\n\"That is easy to explain Maurice. Daily I would search the heavens trying to establish a link to this or another world in order to try to save our world. The lightning strike on his plane must have provided me with a good energy pattern to latch onto. My instruments told me that there was a person within its beam so I pulled him through to our world. He injured his leg when the lightning struck the plane, but other than that, he was in good shape. Had I waited until the plane struck the ground before pulling him through, he would have died in the jungle,\" she answered Maurice between bites.\n\n\"Wow, that was a mighty close call! What were you doing flying over the Jungle Dolly?\" Maurice asked me.\n\n\"At the time I was on my way to do a geological survey for a mine,\" I told him, \"That's what I did for a living, geological surveys for a variety of reasons, and often times in very remote places.\"\n\n\"Now you have been in the remotest place that I have ever heard of!\" Ginger exclaimed, \"It's all so very exciting! What does it feel like to travel to another world?\"\n\nI giggled, \"I was unconscious the first time and the second time, when I realized what we had just done I fainted for three days!\"\n\nMeka chimed in with, \"That is not entirely true. She was weak from the transformation and fainted due to the shock of being back home, but she would have only been out for a short time if I hadn't given her a sedative. She needed to rest up and replenish her strength, so I kept her asleep in bed for three days so she would not try to do something that might hurt her.\"\n\n\"So, travel to Ka'an is stressful?\" Ginger wrongfully concluded.\n\n\"No, the travel itself isn't, it's having your genes rewritten that is the most stressful,\" Meka told her.\n\nAmelia and the wives started serving the main course, slices of a condor-like bird, corn, and a blue colored sweet potato, which tasted like they were covered in brown sugar.\n\nGwen spoke up at this point to add, \"The first time I did it I passed out too! I woke up in the middle of a lay down group hug!\" she laughed.\n\n\"Old jungle cure for fainting!\" I laughed, \"Not to mention a heck of a way to wake up!\"\n\n\"I'll say,\" Gwen agreed, \"but I didn't believe them when they told me I would be going to another planet. When I realized they were telling me the truth it was just too much!\"\n\n\"What does it feel like?\" Ginger insisted.\n\n\"Exactly like walking from one room into another!\" I admitted, \"You wouldn't feel a thing.\"\n\n\"That is wonderful! When will you be issuing visas?\" she asked half jokingly.\n\n\"That will be one of the discussions we plan after dinner. We will have no qualms issuing visas to women, however we will not allow men to visit Ka'an except under very special circumstances,\" Meka answered, \"Our world is just too dangerous for men to visit.\"\n\n\"Have any men visited your world since you made the link?\" Ginger asked naively.\n\n\"No men have ever returned to earth from our world,\" Meka answered trying to derail her question without having to give away what we have been doing for transgendered men.\n\nI decided to help by saying, \"If you sent a platoon of men to Ka'an, not one man would return to earth.\"\n\n\"You mean that any man who goes to Ka'an comes back like you?\" she asked round-eyed and astonished.\n\n\"Pretty much,\" I told her with a big grin.\n\n\"I find that hard to believe,\" Davon put in.\n\n\"Why is that, Davon?\" I asked.\n\n\"Do these plants, you are talking about, walk around? Do they move from place to place? How is it that a stationary plant can attack a platoon of men and turn them all into women?\" he taunted, \"It doesn't make sense.\"\n\n\"It will. I promise,\" I told him, with a broad smile on my face.\n\nMeka, Gwen, Marilynn, Ginger, and I all looked at each other and exchanged secret knowing glances.\n\nWe all finished eating, the wives removed our dinner plates, and they replaced them with slices of chocolate truffle mouse, and snifters of brandy.\n\n(No, the truffle in the mouse was not laden with aphrodisiac.)\n\nWe ate the deserts and enjoyed the brandy with little more conversation. When it was gone I suggested, \"Why don't we adjourn to the reception area while the table is cleared for our meeting. If anyone has a need for the restroom, Ysalane will be happy to show them the way.\"\n\nIntermission\n\nWe all took our brandy to the reception area for a while, where I had another opportunity to talk with Marilynn again, \"How was dinner Marilynn? Did you enjoy the condor?\"\n\n\"It was tasty, different, but it tasted like chicken,\" she giggled, and then more seriously, \"So does Ginger know about the corsage?\"\n\n\"Yes, she will have one too, and so will Ysalane, she wishes to conceive and has volunteered to bed Davon. The point will be that they will not be able to resist the attraction to the flower, which is what the plant uses to attract its victims. I know, it was used on me,\" I admitted, \"We also plan to tell them we are doing it, so they may do their best to resist it, if they can!\"\n\n\"You are going to give them a chance not to bed us?\" she said, as if she didn't think it was a good idea.\n\n\"Have no fear, they will have no choice. This stuff is so powerful it makes Viagra look like an after dinner mint!\" I told her, \"It will however have no effect on you.\"\n\n\"So no matter how willful he is, he will want me?\" she asked, verifying she understood what I had said.\n\n\"Yes, and have no fear, I will make my excuses and beat feet in a hurry before the fun begins!\" I assured her.\n\n\"Oh that's right that asshole took mental pictures of your boobs! I could have shot him for that! He did it even after it was his fault you were all wet!\" she complained, \"He always did have a thing for huge busts!\"\n\nNegotiations\n\n\"It looks like the ladies have the conference room ready for us,\" I told her having gotten a signal from Ysalane. \"Everyone? May I have your attention? The conference room is ready, so will all of those who must attend please return with me, everyone else, please enjoy yourselves here until the meeting adjourns.\"\n\nEveryone quickly assembled at the conference table. The seating arrangements were changed to suit negotiations, Meka, Gwen, Frances, and I all sat on one side of the table and Ambassador Blatherwick, Charg\u00e9 d' Affaires Bartholomew, First Secretary Gaines, and their secretary Hilda Putman were on the other side.\n\nI opened things by introducing the topics under discussion, \"You will all find an agenda which was mutually agreed upon prior to this meeting. First under discussion is the embassy on Ka'an. Mr. Ambassador, you have the floor.\"\n\n\"I need to make the United States' position clear, and I am afraid that we are inflexible on this point. For normal relations to be finalized between the United States, and Ka'an we will insist on having an Embassy on the world of Ka'an. We feel that this is only fair, due to the existence of your embassy on U. S. Soil,\" Ambassador Blatherwick began. \"The United States feels that whatever hazards exist on the world of Ka'an, a way to make the U.S. Embassy there safe can be engineered. We can if absolutely necessary, man... uh, excuse the euphemism, populate the Embassy with women, or at least primarily with women, and males could be kept safe inside the Embassy.\"\n\nMeka had been listening intently to what the Ambassador had to say and answered, \"Mr. Ambassador, I cannot emphasize the hazards that my world will present to the people of earth, although admittedly, it is much safer for females that it is for males. If your proposal, to people the Embassy with women, is accepted, and if you do wish to risk men by placing them there, would they be available to the women of Ka'an, for ah... shall we say, stud service?\"\n\nEvery mouth across the table from us dropped open.\n\nI cleared my throat and gently said, \"Don't look so shocked gentlemen. The world of Ka'an needs men desperately. Their population has dwindled at an alarming rate, with so few males left there. The one thing that they need most is, to put it bluntly, sperm donors.\"\n\n\"B... b... but... ah... How... Ah, I can't think of a way to write that into a treaty that the government can... Um, I will have to check with the state department on how that can be arranged. I feel certain that, ah men who would be posted to the embassy can be convinced to, shall we say, donate their time to such a needy cause...\" the Ambassador stammered.\n\nI could see the wheels in his head moving, figuring out how he would pull it of without his wife knowing.\n\nThat is just the time that Windy slipped into the room and whispered into Meka's and my ears. Meka and I then exchanges glances, in which I let her know that it should be her who broke the news to the other side of the table.\n\nTrouble\n\nMeka, stood and informed the Ambassador and his aides, \"Gentlemen, I have been informed that there has been a development. It seems that one of the Secret Service agent foolishly has traveled to Ka'an on his own. I have the unpleasant task of informing you that the agent who did this foolish thing, my security staff believes to be an agent named Eric, was taken by a pea pod before our guards could rescue him. As we have stated before, once the process has begun, the captive will die along with the plant should any attempt be made to forcefully extract him from the pod. We have located him, but it will be five days before we will be able to return her.\"\n\nEvery face across the table went pale.\n\nWhen he could finally compose himself, the Ambassador spoke up, \"Your Wisdom, I am shocked and appalled at the actions of this agent! I assure you that he will be punished for this transgression! I had no idea that any of our people would be so foolhardy even to try such a thing! I promise you that he in no way acted under the orders or knowledge of the U.S. government!\"\n\nI saved the Ambassador from further lies, and embarrassment, \"Mr. Ambassador, gentlemen, we will need to see to things for a short while, so if you will excuse us, Windy will escort you to the lounge, where your wives are. We will resume discussions shortly.\"\n\nThe men filed out with Windy, and then Meka and I went to the video surveillance booth to watch the fun.\n\nThe wives were in separate corners with their corsages on and Ysalane cut Charg\u00e9 d' Affaires Bartholomew away from the other men and dragged him to where she had her corsage waiting for her. Ysalane even had him pin it to her. After that you couldn't have dragged him away from her if you tied him to the bumper of a truck.\n\nYou could tell even on the monitor that all three of them had raging hard-ons and couldn't take their eyes off of the woman in front of him...\n\nWe watched as the ladies told each man what was happening and dared them to resist, but one by one, the ladies slipped out of separate doors, males in tow. Walking as if dragged along by their cocks, making them follow the women.\n\nI chuckled to myself, remembering when I was in the same situation...\n\nAbduction\n\n\"Well, Dolly, whatever shall we do with the rest of our evening?\" Meka asked me.\n\nI heard a guffaw from behind me and saw Frances, just as she reached around me to caress my huge breasts, \"I have a suggestion... if you are open to it...\"\n\n\"God, if someone doesn't drag me off and fuck me silly, I'm going to drop to the carpet right here and do it myself!\" I whined, reaching up under my boobies to caress Frances's hands, and those incredibly sensitive breasts along with those hands.\n\n\"Come on Amelia, you had better get her other leg before her knees buckle and poor Frances has to hold her up by herself. We can take her to the rumpus room and gang fuck her! I love to watch the total look of ecstasy she gets, when she abandons her orgasmically sensitive body to her fate! She is the most fun to make orgasm of anyone I have ever known!\" Meka enthused as she grabbed one of my nylon clad, high-heeled legs in her hand and big soft ass with her other hand.\n\nAmelia followed suit, while I protested, \"Hey! Wait a minute! Come on... you can't do this to me!\"\n\n\"Oh, yes we can your highness and we intend to! You just relax because your poor once male brain is going to be overloaded for quite some time, and the only thing you can do about it is enjoy it!\" Frances whispered into my ear, holding my top half up and still groping my girls!\n\n\"Ooooooh! You better hurry then, I think I'm going to orgasm!\" I squealed in and ever higher voice, shuddering through my first, tiny orgasm. I knew that this was only a baby orgasm, and if they had their way with me, I would orgasm myself into unconsciousness several times before we were through.\n\nI soaked my pretty panties even through the pad I had been wearing!\n\n\"Oh my! Dolly wasn't exaggerating! She is so hot for it, I am creaming my panties watching her!\" Amelia stated, slipping one hand up my skirt, towards my yearning pussy.\n\nAbout this time we were passing a pair of Secret Service agents, who stared wide-eyed at me on my way by, \"Haven't you guys ever seen a lesbian on her way to get wildly fucked?\" I called back at them, knowing that both men were sporting rock hard woodies!\n\n\"Ooooh, you are a mean little hottie aren't you! We ought to drag you back to those guys and let them have turns fucking you!\" Meka threatened, and began disrobing me in the hallway!\n\n\"This should be good enough! I'll leave them a trail like that story you told me, Hansel and Gretel I believe it was! They can follow the lingerie to where we have you secluded, and if nothing else, one of our wives can take their donations,\" Meka giggled and tweaked my now naked and rock-hard nipple.\n\nThe only reply I could formulate was a gurgle of pure ecstasy. I have to tell you, being a girl ain't all that bad! Well, at least for me it's not. I suppose I am kind of lucky with my family and friends, even if they have a twisted sense of humor. At least I get the benefits of their attentions! God I love to orgasm in my new body! I just wish that I wasn't so damn easy!\n\nWhen we made it to the rumpus room we discovered that we weren't the first to arrive, there were a dozen women waiting for us.\n\nDr. X, now one of our closest friends, came up to our procession and used her stethoscope on me.\n\nMy little heart is beating like a humming bird's.\n\n\"Oh, my! Ladies, I'm avraid zis is zerious. Our pazient here neezs plenty auf bed, alzough I cannot recomment restingk! A thorough boning with a strap-on ist in order. I need vour or vive wolunteers. Can I hafe a zhow of hunds pleaze?\" Dr. X asked in her best Dr. Ruth impersonation.\n\nI whimpered to show my fear of what was to come, and at this point, what was to cum looked at though, was me!\n\nIt didn't take long to get her volunteers, \"Zee line schtartz here!\" she indicated behind her, since she too was wearing an elaborate strap-on, which was designed to fit into her own vagina, providing her as much pleasure as it would me.\n\nDr. X lifted my big bottom off the bed and while on her knees, drew me slowly onto the big dildo she was wearing. \"Oh, my Dolly, you do appear to have excessive vasocongestion! Your pussy is positively drooling!\" Dr. X exclaimed as she boned me, causing a loud sploosh squishing noise.\n\n\"Ahhhh! Ohhhhh! Uhhhhh!\" I replied, as someone attacked my clit with a vibrator. My hands started for my big sensitive nipples, but before they reached them, two wives started in pulling, twisting and stimulating them. My hands were brought to someone else's boobies, which I promptly began playing with. I felt my little anus stuffed full of vibrator, the kind that fits in and won't pop out again. It was shaking, vibrating, and I could feel the Doctors dildo rub against it as she screwed me.",
        "\"Oh GOD,\" I screamed and orgasmed, shuddering, and convulsing all over my body. This however didn't stop anyone, the doctor swapped places and then someone else started in on fucking me. The vibrator kept going and more hands went after my boobies.\n\nMeka leaned over my face, smiled then French kissed me until I had orgasmed a couple more times. She stopped when Gwen tagged her, but before kissing me she said, \"Dolly, I love you more all of the time! I can't believe that I love you so much! Even if you are prettier than I am!\"\n\nI tried to protest that she was prettier, but all I could muster was a gurgling sound.\n\nI heard Gwen let out a little shriek into my mouth, and then she began to frantically kiss me. I could feel her body rock back and forth as someone banged her form behind. I loved feeling her little shrieks and moans as she was pleasured.\n\nI felt one of my booby groping hands gently removed and slid down to a lovely soft shaved pussy, and then my fingers slid into her. I started teasing the pussy and was rewarded with a soft moan from its owner.\n\nMy senses were reeling with pleasure. My attention was wrestled from one hyper pleasurable experience to the next. I overloaded on pleasure and passed out after an amazing orgasm, only to be brought back around by the ladies continued ministrations. I lost track of how may time I orgasmed and how many different positions I was in. All I remember was that I was so very content when I passed out the third time.\n\nMorning\n\nWhen I awoke I found myself to be the cream filling in the center of a Meka and Gwen, Oreo cookie. I was all warm, snuggly, and content. I roused a bit and the two ladies clutched at me instinctively.\n\n\"Good morning ladies,\" I hugged each one in turn, only then did I realize that someone had dressed me in a pink baby doll.\n\n\"Mmmm, so did our little Dolly get enough sex last night,\" Gwen giggled and hugged me tight.\n\n\"Now Gwen, you know that you are not supposed to ask that,\" Meka admonished, as she hugged me tightly too.\n\n\"Oops, sorry, I'm not quite awake yet...\"\n\nI immediately decided that this conspiracy of silence had gone on long enough, \"Meka, you promised to tell me what the giggling was about, and I think it is high time you did!\"\n\n\"Do you really want me to tell you right here in the middle of all these women?\"\n\n\"Somehow I think they all already know, so yes I do want you to tell me, right here, right now.\"\n\n\"I was hoping I could put you off for a couple more days. Well if you insist, I guess I had better. You asked why you were horny all of the time. The explanation is simple, it's my fault,\" Meka began.\n\nI interrupted with, \"Your fault? How can it be your fault?\"\n\n\"I'm getting to that. You remember when you first began to get well, I and your other wives were screwing you almost nonstop?\"\n\nI nodded my shaggy strawberry blonde head.\n\nYou told me that you figured that we were the horniest women on the planet? Well it is my belief that you really liked women who are extremely horny, so when you were transformed, that is what you became. You didn't know at the time that we were merely desperately trying to become pregnant. You only found that out after the transformation. To you it was a normal condition for Ka'anian women to be sexually insatiable, so that is what you became. You loved how Gwen looked in high-heels, so you made yourself into a woman who can easily wear high-heels. Unfortunately, feet made to wear high heels are not at ease in flats. Everything that you loved the most about women, is what you are,\" Meka hugged me extra tight at this point and continued, \"Don't worry though Dolly, we all really love you and promise to fulfill your needs.\"\n\nI started to cloud over, \"You mean I turned myself into a female freak?\"\n\n\"No, Dolly! Don't you ever think that! You are just slightly hornier than normal girl! You are no more a freak than any of us. Everyone loves to have sex with you because you are so enthusiastic about it. I think we all enjoy sex more because you are having so much fun! Am I right Gwen?\" Meka asked, hoping to affirm her assertions.\n\n\"Oh my, yes! I think I'm turning into a nymphomaniac! I almost never thought about sex during a normal day. Now I find myself daydreaming about what we will be doing in bed that evening. Even now I'm getting horny snuggled up to you like this,\" Gwen admitted, rubbing her boobs on mine.\n\n\"Damn! I'm already puddling! Gwen, you better stop that or you are going to have to finish what you began! You just heard Meka, so you have no excuse!\" no sooner had I said that and she placed a lip-lock on me that Houdini couldn't break out of.\n\nSo I started the day an hour late, after some light lesbian sex. I enjoyed myself immensely, even if I was a little sore down there.\n\nI was dragged into a huge bubble bath by two of my wives, where I found Meka and Gwen already being bathed.\n\n\"I guess the ladies think we are taking too long to get up today, so they took things into their own hands,\" Gwen surmised.\n\n\"Windy told us that the Ambassadors party has begun to stir and that you will be needed soon for breakfast with them,\" Ixchel told us, as she continued to help us bathe.\n\nWe were helped from the tub, and speedily dressed for action. It is amazingly stimulating to be clothed by so many beautiful women.\n\nBreakfast\n\nWe met the others at breakfast, seated as we had been during the negotiations. The Ambassador and his aides were eerily silent during the first few minutes of the meal.\n\nYsalane was elsewhere but all of the others involved in our little demonstration were present.\n\nI started by saying, \"Good morning Ambassador, ladies, and gentlemen. I trust you all slept well?\"\n\nThere were mumbled replies to the affirmative.\n\n\"Don't feel bad gentlemen. I know exactly what you have experienced, although not at the hands of these lovely ladies. The Corsage that each of the women wore last night was but a small cutting from the Ka'anian Pea Pod. It is the irresistible lure that it uses to draw males to it, so that it may nourish itself on their maleness.\"\n\n\"I apologize that we felt it necessary to demonstrate the incredible power of the attraction in this manner, but this is the only way to truly know how dangerous it is. Believe me, a 5 foot tall blossom is even more irresistible. One whiff and the next thing you know, you are sitting down to pee for the rest of your life...\" I paused to let this information soak in, while digging into an omelet of Ka'anian Condor eggs and sausage made from an animal, the name of which I wasn't told of, but was very tasty and lean.\n\n\"Dolly tells the absolute truth, the only way my people have survived this long has been to restrict our men to a secure village, which the ladies patrol all of the time to eradicate all signs of the Pea Pod before they can take root and lure our few remaining men to their femininity,\" Meka added to my explanation, locking eyes with each man in turn.\n\n\"So how is it that you allowed Doug to escape this village and fall victim to one of these Pea Pods?\" the Ambassador replied in an almost accusatorial tone.\n\nMeka blushed crimson at that, \"Doug, is a very, very resourceful person. He planned his escape very thoroughly. He escaped even though we frantically searched for him. I never found the pod that changed him until after she had emerged. We had expected that the Pea Pods had gotten him earlier than they had. When she finally emerged I was frantic with worry that something worse had happened. You see, suicide is not unknown after a transformation.\" A tear fell from Meka's eye as she recalled the incident. \"It was my fault that he ran away. I should have known that he wanted to return to Gwen, I was just too afraid to loose him.\"\n\nMarilynn Blatherwick got up and rounded the table to comfort Meka.\n\nGwen was already there comforting her, but the combination of the two was helping.\n\nI minced over and held her too, \"Meka, you know that I didn't want to leave you, and that I love you dearly.\"\n\n\"Theo that was very harsh and insensitive!\" Marilynn accused, as she hugged Meka.\n\n\"Marilynn, please remember you are an ambassador's wife. We are here on a critically important negotiation with the high Priestess and her wife!\" began Ambassador Blatherwick.\n\n\"Your Worship, I meant no disrespect in the question. I was merely trying to determine the extent of your commitment,\" Theo answered, \"If, as you say, Doug meant so much to you, I had to know how it was that you allowed him to become as she is. It is apparent that you are not pleased with the outcome. That seems to reinforce the fact that Ka'an is a dangerous place for men.\"\n\n\"To put it bluntly Ambassador, you bet your cock it is! If you don't believe me, ask your Secret Service agent when she returns in four days,\" I told him, slightly vexed that he had made Meka cry.\n\nHis face paled.\n\n\"Yes Ambassador, your agent is at this very moment most of the way to becoming a woman,\" I told him as bluntly as I dared.\n\n\"That agent took it upon himself to violate the sanctity of Ka'an. It was never our intention that he should violate your sovereign soil,\" Ambassador Blatherwick lied.\n\n\"I can see that you are going to have a lot to learn about the Ka'anians Ambassador,\" I left it at that, since to press him further would be futile. The Amazon warriors were easily able to tell when someone was lying. I am not sure how yet, since I have only started my training, but I am quite certain that they can.\n\nThe Ambassador looked only slightly perplexed.\n\nMarilynn had returned to his side by now, to his annoyance. He looked at her as though she were an anchor tied to his neck.\n\n\"Thank you for your compassion Marilynn,\" I told her, covering her butt. The Ambassador wouldn't be wise to admonish her further after that.\n\n\"My pleasure Dolly,\" she answered with a little wink, from her husband's side at the table.\n\n\"Be that as it may Ambassador, we are sorry that our demonstration may have been, shall we say, disconcerting,\" I apologized, \"If you have time today we can continue the negotiations, now that you have a better understanding of the dangers ever-present on Ka'an.\"\n\n\"I am afraid that we have a previous engagement, so we will be leaving shortly. Mr. Bartholomew will make arrangements for us to meet at a later date,\" the Ambassador assured us.\n\nMarilynn Blatherwick looked surprised at the news they had a 'previous engagement,' but made no comment.\n\nThe Ambassador Leaves\n\nIt only took a few more minutes to finish with breakfast, and then we all said our good byes. To my surprise every one of the women in the Ambassador's party gave me a big hug! Even Hilda Putman hugged me! It was weird. Why do all of these women want to hug me? They didn't hug Meka goodbye, or Gwen, all they got were handshakes, it was just me who got all of the hugging.\n\nI asked Meka if it had something to do with the Pea Pod, she answered with, \"I don't think so sweetie. I think all of the women feel compassion for you, and they want to show you their support.\"\n\n\"Therefore, if they didn't know that I was once a man, they wouldn't have hugged me?\"\n\n\"That is what I believe. Why, don't you like being hugged?\" she asked while putting me in a bear hug.\n\n\"You are going to have my love juices drooling down my stocking clad legs if you keep that up!\" I promised.\n\n\"Enjoy it sweetie. We do have things to do though,\" she released me before my knees went weak.\n\n\"What is on the agenda for today?\" I asked, straightening my skirt and catching my breath.\n\n\"We are meeting with a couple of engineers and architects, chosen from among our transgendered and grateful ladies, to get proposals for the kind of compound that can be erected on Ka'an to protect any males that the Ambassador insist on bringing to Ka'an. We have some ideas being proposed to secure the other end of the portal in such a way that any males who wander through, won't have easy access to areas where they can become food for the plants,\" Meka announced as she dragged me along to where the meeting was. Well, not exactly dragged, she held my hand while I minced along at my normal speed.\n\nThat meeting was where the corridor and cipher-locked doors were designed and construction was approved. We instituted the security to keep uninvited government types off Ka'an.\n\nThe next few days were somewhat less eventful. We established an agreement with the Ambassador, that we would build the Embassy for the US, at standard construction rates. We designed it with a fully contiguous cement floor, to keep plants from cropping up in the compound. The central air system was designed to filter out pheromones. None of the windows in the whole building could be opened, and the only door leading outside was double cipher-locked. The Ambassador had one combination, and we had the other.\n\nThe Ambassador wasn't crazy about the last part, but we were adamant, no excursions on the planet without supervision.\n\nSpy\n\nThe one fun thing though was five days after our meeting when this beautiful 5' 5\" buff looking Blonde woman, with DD size boobies came stumbling back through the portal.\n\nWindy met her and spirited her away to a room before the Secret service agents waiting for her could grab her. They were told that they would have to wait. Erica would be sleeping for a couple days and that when she was stronger, she would be delivered into their hands.\n\nWhen she came around, Meka and I were sandwiching her between us.\n\n\"Good morning Erica, I am Dolly, but I'm sure you remember me. How are you feeling?\" I asked her, lying close on the bed.\n\nShe looked around, saw Meka and I, and then burst into tears. We consoled her as best we could, and then had several of our transgendered ladies help her dress and taught her some of the bare necessities of survival as a woman.\n\nCharg\u00e9 d' Affaires Davon Bartholomew came to our embassy to debrief her. She was in a room with five Amazon warriors, Meka, and I, when he met with her. (Although we didn't announce the fact that the five other women were Amazons.)\n\n\"Agent Honeycutt, I am here to debrief you on your unauthorized incursion to the world know as Ka'an. I have been informed that I may not escort you from the premises to the local headquarters of the Secret Service. Are you being detained against your will, or being mistreated in any way?\" Davon Bartholomew started.\n\n\"I have been treated extremely well Mr. Bartholomew. Concerning being held against my will, I have been informed that since my offence is against the people of Ka'an that I am to be held over for trial by the High Priestess. Since I am not an official member of an out of country ambassadorial mission, I do not have Diplomatic Immunity,\" Erica replied in her new, sweet, higher voice.\n\n\"Um, yes, so we have been told. We have arranged to handle your defense at the trial. You should know that once your trial and punishment have concluded here you will then, be remanded to our custody for determining what additional punishments if any the US Government intends to prefer,\" Davon announced, \"This debriefing however is so that we may evaluate your conduct on Ka'an\"\n\n\"There isn't much to tell Mr. Bartholomew, I went through the portal, started up a stone trail when I saw this woman all dressed in white gossamer in the jungle. I couldn't resist the allure of the woman and found myself walking towards her. I noticed that it wasn't a woman. It was just a huge flower. I turned to run away and the plant tripped me and swallowed me whole. When I came too... when I... I... Oh God! I'm a girl now!\" Erica burst into tears and was comforted by one of the Amazons.\n\n\"You were wandering around on Ka'an for how long before you were... ah, trapped?\" Davon prompted.\n\n\"Ten, maybe fifteen minutes...\" she supplied between sobs.\n\n\"That should be all for now Agent,\" Davon dismissed her, as he stood and headed for the exit.\n\nI went to her and said, \"Don't worry Erica, the only reason you are being detained is to help you to deal with what happened to you. We can arrange any sentence you would like after a week or so. Meka wants to offer you citizenship on Ka'an if you would like. You can leave almost anytime you want, but I urge you to stay a while at least, there is a hell of a lot to learn about being a woman that I had no idea about until it happened to me.\"\n\n\"Will... will you help me? I... I... I'm so frightened! This is almost too much!\" she started to cloud up again.\n\nI hugged her and told her, \"Don't worry Erica, Gwen and Windy have volunteered to be your mentors. You can ask any of the ladies here for help, if you don't want Windy or Gwen, most all of the ladies will be more than willing to help you. Oh, and if anyone treats you badly, be careful how you tell anyone. The Ka'anian women will beat the crap out of anyone who is mean to one of the newly transformed ladies.\"\n\nShe giggled at that last statement and almost smiled at me, it was then that I knew she would be okay. I also suspected that Ka'an had a new security officer.\n\n\"I hate to admit this, but you are the only other male around here that was transformed against his will, since I came back from Ka'an. It's kind of nice to have someone else to confide in. That is if you want to...\" I told Erica, holding her hand and looking deep into her eyes.\n\n\"I... I never thought of that. You are the only other like me? There are so many I have met that I was told used to be men. They weren't changed by accident?\" she seemed shocked\n\n\"Nope, just you and I. All of the others wanted the change. You and I are the only ones that have been transformed against our will in the last couple of years at least,\" I assured him, \"But if I know my former government, I doubt that we will be the only ones for long.\"\n\n\"They told me that I was to go through the portal and do recon. I was warned to stay away from the Pea Pod plants, but they didn't really know how impossible it is to resist! I... I... didn't even know it was happening until... it was too late!\"\n\n\"Believe me I know what you mean,\" I told her and then in a conspiratorial tone of voice, \"Um, did you... ah... well, was your transformation as... I guess the only way to say it is to say it, did your enjoy the transformation as much as I did?\"\n\nShe blushed beet-red, \"I loathe to admit it, but it was the most orgasmically delicious experience of my life. If it wouldn't have done this,\" she indicated her body, \"to me, I would have gone right back in for seconds...\"\n\nI giggled, (So? Sue me.) \"I know what you mean! The damn plant can give one hell of a blow job!\"\n\nShe started to tear up, \"I'm sorry. Every time I think about loosing my manhood...\"\n\nI hugged her tight, \"No, I'm sorry! I shouldn't have brought it up. It was insensitive of me.\"\n\n\"That's okay, you are right though, it felt soooo good! I... I... have to stop hugging now... God! Why is this girly body so horny all of the time?\" Erica complained as she released me.\n\n\"You too? Damn, maybe it isn't just the way I wanted to be, maybe it happens to those who are forcibly changed?\" I wondered. \"Well at least I am not the only nymphomaniac around here anymore,\" I giggled causing an enormous boob quake that had Erica's eyes riveted to my chest. \"Yah, they turn me on even more that they turn you on!\" I giggled again, but this time I tried to keep them from bouncing by grabbing them and holding them steady.\n\n\"Oh, my god! I'll be back in...\" I heard as she scurried away.\n\n'Shoot!' I thought, 'I have to start acting more lady-like or I am going to get screwed a lot!' I felt myself dampen significantly.\n\nWhen Erica returned we chatted a bit more. Erica told me that she was fairly certain that she would be staying with us indefinitely.\n\nI informed Gwen and Windy that Erica had the screaming hornies and they might want to help her out with them. They both agreed with my diagnosis, little did I know but they set me up. Later as I was walking by the rumpus room, I was captured, and thrown into the middle of an orgy with sexy little Erica as one of the main dishes.",
        "It seems that we were to be pleasured side by side. Erica scream out several orgasms before she passed out. I didn't last much longer than she did. We woke up side by side in bed each dressed in frilly pink baby dolls. I could see Gwen's hand in that, big time. I have to admit that we looked damn pretty though!\n\n\"We were roused and bathed together. The wives were treating us like sisters, and I have to admit that we got pretty giggly and silly playing in the bathtub together, playing with all the bubbles and splashing each other.\n\nThe ladies helped us out of the Tub and dressed us. I took notice that Erica had chosen to wear a dress the same as I had. I asked Erica about it and she replied, \"For some reason I can't stand to wear any clothes that are remotely male.\"\n\n\"Same with me. Strange why that is...\" I filed the information in one corner of my brain for future study.\n\n\"Ah do me a favor Erica?\" I whispered to her, \"See if you notice that you are hugged more than anyone around you, with me being the only other exception. Will you do that for me?\"\n\n\"Sure Dolly, I'll do anything you ask me too. I really care a lot about you. That sounds silly after only knowing you for a couple days, but I do, nonetheless,\" Erica whispered back, kissing me on the cheek. She blushed and scurried away, leaving me slightly stunned.\n\nSettling In\n\nIt didn't take long for the first parts of the American Embassy to be built. Mostly they built a secure hallway to a neighboring temple like structure, which was made entirely of huge stone blocks, which our crew chinked tightly with mortar. Additionally none of the window could be opened. There were emergency releases, which would allow for egress in case of emergency, but they were set up so that alarms would sound and alert the Ka'anians.\n\nThere were generators and HVAC units brought through the portal and installed, as well as specific furnishings specified by the Ambassador.\n\nLiving quarters for the Ambassador and his party were completed, including standard indoor plumbing, complete with chlorinated water supply. Unfortunately cooking facilities consisted of microwave ovens or coal fired stove. Wood fired would be too dangerous due to the remote possibility off Pea Pod spoors traveling in with the wood.\n\nBasically they were given a hermetically sealed environment.\n\n**********\n\nThe day the ambassador and his party moved into their new embassy was an incredibly busy one. Everything had to be brought through the portal by hand. The whole operation was like loading provisions onto a submarine. We made a line of people, handing things through person-to-person right into the middle of the embassy.\n\nMeka and I met with the same group we negotiated with, prior to their debarkation to Ka'an.\n\n\"Well Ambassador, your embassy is finally ready for you to occupy. We just wanted to reiterate that you cannot go outside the embassy with out escort, but any of the females may. We do ask that even the women be escorted until they learn their way around,\" I started the final proceedings before we all adjourned to my old spare room. (Which has been modified extensively since that time.)\n\n\"I want to formally welcome you ambassador to Ka'an. Once through the portal we have a small celebration planned in the great room of your new embassy. We hope that you will enjoy the feast and your stay on Ka'an,\" Meka announced, \"Now if you will follow me, we go to Ka'an.\"\n\nI looped my arm into Meka's and we lead the way into the Portal room.\n\n\"I have to warn you folks. It looks like you are walking right into a solid wall, but trust me you will pass right through it. Meka and I will go first, so just follow along behind us.\"\n\nWe sauntered through the wall and onto Ka'an. When all had come through we nodded to the amazons who guarded the portal and lead our charges toward the exit that Gwen, Meka and I had used when I had first come to this world.\n\nJust outside the original door is where the corridor started off to the right and downhill. Had we continued straight we would have bumped into a rather sturdy metal door with a cipher lock on it.\n\n\"This is one of the exit doors to the outside world, to which only the females of your party will be given the combination. They are not to give it to the males, under any circumstances. It is one order that you cannot issue to your female marines. It would be a violation of the treaty and every female who journeys here must be told of these requirements. If a male is discovered outside these walls unescorted, he will be returned to earth, persona-non-grate,\" Meka informed our little troop as she paused momentarily by the door.\n\nShe continued down the concrete corridor, which had windows to the outside every ten feet or so. \n\nAbout half way down the hall Meka stopped and pointed out one of the windows to a shimmering white visage of a woman standing in the jungle a hundred or so feet from the corridor, \"That is one of the Pea Pod plants you are seeing, not a beautiful woman standing in the jungle. If you men were outside the purified air in this corridor, that would be an irresistible siren calling you to your end.\" She then turned and continued with me closely at her side.\n\nI whispered, \"That wasn't there yesterday...\"\n\nMeka leaned close and whispered back, \"I had the ladies transplant that one this morning. It will be removed in about twenty minutes.\"\n\nI giggled, \"You are wicked!\"\n\n\"On the contrary, I felt that the Earthers should see the dangers firsthand, so that the women would be able to recognize the Pea Pods when they come across them.\"\n\n\"Good plan!\" I told her, but I wished she had let me in on it ahead of time. Those things still dredge up mixed feelings in me. I hate them for turning me into a girl, but I loved the time I spent in one...\n\nOnce we had reached the end of the corridor we made another 90-degree angle, through another cipher lock door, and entered the building that was to become the American Embassy.\n\nThe building centered on a courtyard with a structure directly in front of the entrance across the courtyard with a set of columns over a porch with a door recessed inside of it. To the left and right of the central entryway were along both walls were smaller versions of the main entryway.\n\nMeka pointed to the entryways to the left and right and stated, \"These along the wall are the individual quarters for the Ambassador's staff. Inside the central entry way is the Ambassador's quarters and the barracks for the marines, as well as the offices and facilities that you requested.\"\n\nThere were tables, setup along both sides of the central aisle way covered with food and drink. There was an army of ladies standing ready to join in on the festivities.\n\n\"The ladies will help everyone to their quarters, so that the party may begin when you return,\" I announced.\n\nEveryone settled in quickly and the party was grand.\n\nDisturbing Information\n\nTowards the end of it I had a long talk to Mrs. Blatherwick.\n\n\"Dolly, can we talk?\"\n\n\"Sure Marilynn, what would you like to talk to me about?\"\n\n\"I want to know what kind of medicines you have on Ka'an? Do they have anything for, say bruises?\" Marilynn asked quietly.\n\n\"I don't know, but I will ask. Do you have any that need looking to?\" I asked carefully, trying not to scare her off.\n\n\"Oh, well, I am terribly clumsy and easily bruised. I ah... I just want to know for future reference,\" she stammered, as her eyes flicked this way and that, as if to check to see if someone was watching her.\n\n\"If this clumsiness gets out of hand, I will have to have one of the Amazons give you lessons in grace,\" I tried to make it sound like ballet lessons, but I knew that my wives would be teaching her more on the lines of martial arts.\n\n\"I shouldn't have said anything. Um, could we meet next week, just you and I? I want to talk about your, um... change. Unless you don't want to talk about it,\" she sounded less confident that she had when we had talked at the party before our negotiations.\n\n\"I insist on it in fact. Where would you like to meet? Earth or Ka'an?\"\n\n\"Oh, I must stay on Ka'an. Theo insists that all of the Ambassadorial staff remain on Ka'an,\" she informed me, looking towards the floor, rather than at my face.\n\n\"No problem then. I will arrange for a lovely lunch outside in the jungle for us. Will that be satisfactory?\"\n\n\"Oh most certainly! Theo can't follow us can he?\"\n\n\"If he does, I guarantee that he will spend the rest of his life urinating while sitting down!\" I assured her.\n\n\"What would be wrong with that?\" was her answer, which shocked me almost to the core.\n\n\"Uh, I guess nothing... I have to, and you have to, but would you wish for him to loose his manhood for a picnic?\" I asked, trying to catch her eyes with mine.\n\n\"Well not for that reason, but we really need to talk, in private,\" she admitted.\n\n\"How does Monday sound?\" I asked, resisting an urge to hug her, and not knowing that our plans would be changed by circumstances.\n\n\"Fine, I'll be there. Um, I shouldn't tell you this, but Theo brought environment suits with us. I don't think he is going to try anything without you coming along, I just thought that you might want to watch in case they get stupid.\"\n\n\"Already are hon., but thanks for the warning. If I weren't already a split tail, I wouldn't want to be anywhere near the forest on Ka'an. God, it is so strange being a woman now! It just jumps out at me once in a while, that I am a woman, not a man anymore,\" I admitted blushing madly.\n\nShe didn't hesitate. She hugged the stuffing out of me right then, \"I feel for you. It must be very hard for you. I mean, I have always been a girl, but you have to become a girl without all of the training and background, all of us who were born to it, have. You do make a terrific woman if that helps any?\"\n\n\"Thanks, I appreciate that. I sometimes wonder why I am not hysterical, babbling wildly, or at least more freaked out than I have been. I have been really lucky though, having so many wives who love me so much. I think that has helped a lot, that and the fact that they keep me so busy all of the time,\" I admitted, realizing it myself for the first time.\n\n\"I Better get back now, I'll see you Dolly,\" she waved and headed back to the enclave.\n\nI mulled over what to do about Marilynn's situation, but couldn't come up with anything. All of the political ramifications as well as the legal ones would make it quite risky to intervene. There would come a time...\n\nExplorers\n\nThe Ambassador contacted us, arranging for escort on an expedition to explore the surrounding area.\n\nWe agreed and prepared to go on an extended camping trip.\n\nI met with our ladies, amazons, wives, and humans alike, and we discussed the best way to travel on Ka'an, and it was determined that we would acquire some six wheel ATVs for personnel and equipment transport, since they could be brought through the portal intact and were fairly fuel efficient, as well as being amphibious. There were a few different models so we discussed the merits of each and finally came up with 'The Extreme Machine 2000' as what would fit the bill for our purposes.\n\nThese six or eight wheel vehicles were designed by an aerospace engineer, and can go 500 miles on 5 gallons of fuel. The vehicle is designed to travel at a speed of over 25 miles per hour. (Plenty fast when cruising through a jungle.) Some of the unique things were that it can raise up to have a 26\" ground clearance, provides 120 VAC anywhere, fully enclosed cab, winch, sleeps two, and has a jet powered drive for when it is in the water. There are many more things available for this little vehicle, most of which we didn't need for our trip, (Like outriggers for ocean travel,) we did however decide to get some trailers for them to carry supplies and have the fuel for extended range available outside of personnel areas. Oh and these little beauties could be set to 'stealth mode', so that the generator would no come on when you don't want to frighten animals or make a lot of noise, not that the generators were noisy, overall the vehicles were quite noise pollution friendly.\n\nI also found it fitting that their slogan was, \"Boldly Go Where No Man Has Gone Before.\" (I giggle every time I think of that.) They claim these vehicles are, and I quote, \"The most fun you can have with your clothes on!\"\n\nWell if we have to go camping with those government types, we might as well have some fun too. Set up the way we wanted them they were about fifteen grand each, and a few grand for the trailers.\n\nThe other expedition members, rather the Earthlings, would bring their own gear. Meka had her Amazons make selections of equipment that they would want to bring from earth, as well.\n\nThe topic of firearms came up, and a heated discussion ensued, should we bring firearms, if so, what kind of firearms. I tried to stay out of it, but was drawn into it as an, 'expert' on my fellow earthlings. We sent for Erica, whom I suggested would be helpful to have along as well, (Not to mention we were fast becoming good friends.) and who would know better what kind of things that the Ambassador and his party would be bringing.\n\n\"You sent for me Dolly?\" Erica asked nervously, glancing back and forth at the other ladies present.\n\n\"Yes, Erica, please take a seat,\" I indicated an empty one close to me, hoping she would be more relaxed close to me. \"We are discussing our up coming expedition. The question of whether to bring firearms with us came up and I felt that you would be better suited to answer the questions about the Ambassador's party. For instance, do you believe that even if we forbid them to bring firearms, will they?\"\n\n\"Um... well Dolly, you know how trustworthy the Ambassador is, if by nothing else, by the way he treated me. I worked for him for only about a year prior to being ordered to violate Ka'an, but I can tell you this, the Ambassador is not a nice person,\" she told us, and was especially careful to get eye contact with me. \"I believe that he has his own agenda and would not hesitate to break any agreements to get what he wants.\"\n\n\"What do you think that the Ambassador wants?\" Meka made the obvious follow up question.\n\n\"It was said that Ka'an is, or was, much more technologically advanced than Earth. The rumor was that the Ambassador wants to set himself up with some of that technology and either sell it or use it to advance him in the government. Either way it would mean that the US government would greatly benefit, unless he were to sell it to a foreign power. I think that he might be tempted to do that last, but only if he were able to blame it on someone, should he be caught,\" Erica filled us in, \"If the Ambassador were even slightly a standup guy, I wouldn't be so likely to have joined with the Ka'anians. I considered myself a patriot, and still would never do anything that I thought would harm America. I love my new planet and my new sisters dearly as well, and will not allow them to come to harm either. I really hope and believe that the two thing are the same, what is good for Ka'an, is good for the Earth, and for America.\"\n\nThere was a moment of silence after her short speech, which she punctuated with, \"I'm sorry, I didn't mean to go on like that, but I wanted everyone to know that what I say can be relied on. I know how someone might think, she changed sides once, and can we rely on her? Oh, god... it's still weird to refer to myself with she and her...\"\n\nWindy got up and gave her a reassuring hug, \"Don't you worry Erica. We know when anyone lies to us. We have known since you came to us what kind of a lady you are.\"\n\nErica added, \"Tell them not to bring firearms, but bring your own, and assume they have some hidden. That is the best advice I can give you.\"\n\n\"I think that answers everyone's question Erica. Would you mind staying for the rest of the meeting? I would like your input and since you will be going with us, you might want to help us make this a successful mission,\" I told Erica and squeezed her hand gently.\n\n\"You... you want me to go back to... to... gha... Ka'an?\" she stammered wide-eyed and frightened looking.\n\n\"Why not hon.?\" Windy asked her, pushing back slightly from her hug, \"There isn't anything there now that can harm a pretty girl like you!\"\n\nErica giggled, \"I guess you're right! Those Pea Pods can't make me anymore of a woman than I already am.\"\n\n\"That a girl!\"\n\n\"Meka, who is the most widely traveled of the Ka'anian women?\" I asked, knowing that Meka would have already planned to bring whoever that was along with us. I just wanted to know.\n\n\"Dolly, that is an easy question to answer, our own little Windy is. She had only returned to us a week before you joined us Dolly,\" Meka told me, \"She sometimes would go in search of other women and bring them to us if they wished to become part of our little community. Once she told them we had men, it wouldn't take them long to decide, even the ones who were once male themselves knew that if our race were to survive, we would need as many women pregnant as our men could manage.\"\n\n\"That brings to mind the question, what are we going to do if we find any others while we explore?\" I chirped. (God, did I really chirp?)\n\n\"We should free up space in the vehicles as we progress, that should be no problem. We might plan for more supplies than we might otherwise, just to be on the safe side. Although the Amazons can hunt and forage plenty along the way,\" Meka added, \"to make up for any depletion of supplies.\"\n\n\"I love going camping with professional guides! Tee he!\" yes, I said it, and I tittered. (I guess it's the hormones. I hope it's the hormones.)\n\n\"Erica and I are going to have to buy some clothes for the outdoors. Meka are you and the others going to wear native garb, or do you want us to pick something up for you? Some boots, or skirts?\" I offered.\n\n\"Well, I'm sure to need some things, but mostly I'll use my native clothes. Don't take this wrong Dolly, but we have very different tastes in clothes. I think we should all take care of what personal items we bring. But we will have to set up some of the wives to help expedite things. Both you and Erica should take Gwen with you when you go shopping though. She knows which of your earthly clothes will serve best on this trip,\" Meka suggested giving Gwen a wink unbeknownst to me.\n\nI don't need to bore the reader with any more of the specifics, but we spent quite a bit of time and mental power determining what we would bring with us.\n\nThat and I had to arrange with Marilynn to meet with me sometime during the trip, since the government people were hurrying us into this trip.\n\nThe Expedition\n\nWe had all of our gear prepared and a small convoy waiting for us to finish the final organization and hop aboard our vehicles.\n\nThere was a slight problem when the Ambassador and his people wanted to bring Hummers through the portal, they were very disappointed to find out they wouldn't fit through. There was some talk of disassembling them and then reassembling them on the other side, until they figured out that they would need a tanker to fuel them all. Disassembling that and reassembly would be way too difficult. They finally settled on Supacat six wheeled vehicles with full cabs. Turbo diesel Volkswagen engines were used for the drive trains with trailers just like our vehicles.\n\nThe Ambassador had wanted to bring Quads, or motorcycles but Meka vetoed that saying they would tend to tear up the terrain. Meka, being High Priestess, was serious about protecting the environment of Ka'an. Her other argument was that they wouldn't be able to cross deep water like the amphibious vehicles we had selected. 55-gallon drums were enough to supply our fuel needs for quite a distance. We carried ours in a trailer, as did they.",
        "Our vehicles had full canopies and were equipped for two people, each with intercom radios between our vehicles and a separate channel to talk to the Ambassador's party. We were two to a vehicle with six vehicles and four trailers. The Ambassador's party was five vehicles with five trailers.\n\nOne of the Ambassador's vehicles was equipped with an elaborate filtration unit and carried the three men with a female Marine driving it. That way they couldn't be lured off should their purification system fail. They each had environmental suits in their vehicle to allow them to leave the vehicle and explore with the women.\n\nThe other vehicles were equipped with canvas like ours, which I appreciated right now since it was drizzling out at the moment.\n\nErica and I were wearing very practical knee high hiking boots... well sort of, they only had two inch heals on them. The kaki skirts and light cotton blouses with a coordinated jacket, and a bush hat, (mine was the one with the green scarf around the crown and hers was the one with the blue scarf) completed the ensemble.\n\nMeka took one look at us and stifled herself before she could make a comment that would get her beaten up by our other wives. Windy saved the day by showing up dressed the same as we were, except her scarf was pink. My big tough Amazon protector was dressed as girly as I was. (Most likely to ward off any ridicule we might be subject to.)\n\nThe other Ka'anians were dressed in a mixture of native garb and Earth clothes. (Brassieres, panties, and shoes were incredibly popular on Ka'an.)\n\nMeka was wearing the above-mentioned items, a loincloth and a t-shirt that said 'GRRRRRRLLL'. (I bought it for her &lt;Grin&gt;)\n\n\"Well ladies are we ready to be on our way yet?\" came over the intercom, spoken by the Ambassador.\n\nMeka glanced at me and I could see the annoyance in her eyes, \"I could go tell him that the trip is called off due to rain...\"\n\nShe smiled at my threat and silently indicated to the Amazons to mount up.\n\nMeka and Windy were in the lead, Gwen and Ysalane, Erica and I, Ixchel and Itzel, and then two of the other Amazons followed along behind us, which gave us seven Amazons for the Ambassador's party to deal with.\n\nThey had the three men, the Ambassador's wife and five female Marines. Most of their ladies were almost six feet tall, and one was at least 6' 2\".\n\nWe started off down the trail running nearly silently, until the Ambassador's rigs fired up and then there was quite a racket behind us. Once in a while our quiet little generators would come on to charge the batteries. Our heaters kept us warm and comfy, while the rain kept the outside world damp, and the windshield wipers kept our windshield clear.\n\nIt was exciting to be off on this trip and I have to admit that I had wanted to do this for a couple months. Ka'an now had the help it would need to pull itself back from the brink and become a thriving civilization once again.\n\n\"Erica, are you as excited as I am to be going?\" I asked trying to strike up a chat with my immediate companion.\n\n\"I think so, but I am not sure how much help I will be.\"\n\n\"Oh, didn't you know? You were brought along because you are the only one who is as horny as I am...\" I tried not to giggle, I really did, but it just slipped out.\n\n\"Dolly, you are a terrible liar. You really have to learn to keep a straight face when you try to put someone on,\" she smiled broadly.\n\n\"Oh, and I have been dying to ask this question, Erica, does this skirt make my butt look big?\"\n\n\"You feel it too? Like your ass is almost the biggest part of you?\"\n\n\"Well, yes, at least when I'm not thinking my boobs are the biggest part of me.\"\n\n\"They are a hell of a lot bigger from this side of the boobs, aren't they?\" Erica admitted.\n\n\"I know, but every time I think they might be too big, somebody starts to caress them and I find myself wishing they were bigger,\" I told her, with my free hand hefting one of the girls.\n\n\"If you don't stop that this is going to be one of the shortest expeditions in history,\" Erica threatened, with her face flushing so I knew she wasn't kidding.\n\n\"You think those guys in the fish bowl following us would break out of there if they saw two hotties lezing each other? It would give us three more for our marathon lesbian sex sessions. We would have to wait the required five days though,\" I mused.\n\n\"I think Marilynn would be eternally grateful if we did. It might get us in trouble with the State Department though,\" she answered as though she were seriously considering it.\n\n\"I know you don't want to compromise your oath to our former country, but is there anything you can tell me about that situation, which can help Marilynn?\" she had broached a subject which I was seriously interested in.\n\n\"Well, technically, I wouldn't be breaking confidentiality rules, since it does not concern National Security,\" she started, \"I have to admit that I feel very differently about it now. The Ambassador has a history of beating his wife. I don't know why she stays with him.\"\n\n\"If he tries anything on this trip, he will find that our ladies do not react like his normal security forces. He will be deported Persona-non-grate and his wife will be offered citizenship. That is if he makes it off planet with his manhood in tact,\" I threatened.\n\n\"Those Marines he brought with him are huge, and his staff and he, are all former Special Forces. They might not be so easy to handle without weapons,\" Erica admitted.\n\n\"Now that I am a member of the 'weaker' sex, I often feel the same way. That is until I saw what an Amazon warrior can actually do,\" I grinned broadly as I told her this.\n\n\"You said something about this before. These ladies don't look all that deadly.\"\n\n\"Erica, I watched little Windy up ahead there, punch her fist through a foot thick cement wall.\"\n\n\"No WAY!\" she exclaimed, \"She can't weigh more that 120lbs!\"\n\n\"I watched her do it! My Amazons use a type of telekinesis to increase their strength and agility. The reason the myth about Amazon warriors made them look like that Marine back there, is that the men here who had the opportunity to run afoul of them, told stories about giant women kicking their asses so they wouldn't look weak. Windy told me that she could punch through much harder things than that concrete. The really scary thing is, she told me that now you and I are Ka'anian at a genetic level, so we could do it too!\"\n\n\"You're trying to tell me that I'm not an earthling anymore?\" Erica was wide eyed.\n\n\"They didn't tell you that yet?\" I was kind of shocked. Of course I had figured it out on my own and had asked Meka straight up if it were so.\n\n\"No, no one told me. It stands to reason though. If it changed me from one gender to the other, why not use the genetic pattern it had been designed for.\"\n\n\"Are you upset to find out that you are smarter, stronger and more evolved than when you left Earth?\" I offered, thinking that the perks would out weigh the realization.\n\nErica was quiet a moment and finally answered, \"I think it's alright. If I can't change being made a woman, I might as well be a more evolved woman.\"\n\n\"That's the spirit!\" I told her.\n\nRight about then we heard over the intercom, \"Downed tree up here you will want to raise your clearance to get over it.\"\n\nI hit the switches to raise the six-wheeler up to its maximum height to walk our ATV over the log.\n\nWhen it came to the Ambassador's party, they had to stop and take a chainsaw to the log and shove it out of their way.\n\nI watched the Ambassador shouting orders and saw his displeasure about being held up. That man was a royal pain in the... Never mind, you get the idea.\n\nThe Marines were exchanging looks like, 'If we kill this moron, is it still a capitol offense?'\n\nI could see even though we had carefully selected our vehicles, the Ambassador and his party would be holding us back from traveling at a speed we could sustain but they couldn't.\n\nAn hour later we came to a small lake and rather than skirt it, we dove in and fired up our jet drive. It took the Ambassador's party twenty minutes to catch up. Erica and I started up our laptop computer and played video games until they made it across the lake.\n\nThis sucker was set up for DVD playing, video games, and darned near anything you would want to do.\n\nAround noon we circled the wagons for a lunch break. We micro waved some frozen dinners and had a lovely lunch, while the Ambassador started a fire and cooked up some canned goods. We were done in plenty of time to watch part of a movie before they were ready to move on.\n\nI really began to appreciate our choice in vehicles. I couldn't wait till we set up for evening camp.\n\nAfter our evening meal, this time we had a fire and the Amazons disappeared for twenty minutes. When they returned we had fresh meat and fruit, which we offered to share with the Ambassador's party.\n\nThey shared their freeze-dried ice cream with us.\n\nWhen it was time to bed down, we closed the curtains on our ATV and set up the beds. They were perfectly level, since we could adjust our suspension's height at will. We rolled out or sleeping bags on the cots, set the temperature inside the canvas and quickly fell asleep, but not before listening to the hullabaloo going on in the camp next to ours, while they struggled to set up an environmental chamber for the men who would not be able to sleep in their environmental chamber built on the six wheeler, which meant that two men would sleep off the rig while Mrs. and Mr. Blatherwick would sleep in the vehicle.\n\nI had advised the Amazon on watch to keep a look out for the Ambassador. I sure hope that fool could control himself, cause if the Amazons got their Ire up, I'm not sure I could stop them from doing something unfortunate to him.\n\nErica and I, each spent a little personal time on our selves, while pretending not to hear each other masturbating our brains out.\n\nA New Day Dawning\n\nWhen the sun rose, there was a polite rousing from Windy, namely she tried to perform a tonsillectomy on me with her tongue. Now that is the way to start the day! She left me to rouse Erica the same way.\n\nErica wasn't as nonchalant about it as I had been, she wanted sex and she wasn't about to take no for an answer, so we sucked face for a while and diddled each other to a couple of quick orgasms before dressing and joining the others for breakfast.  \n\nNo one said anything about our tardiness. We were still finished well ahead of the Ambassador's party, long enough for us to watch the rest of the movie we had stared the day before.\n\nEveryone mounted up and we continued following Windy down a path none of us but her knew.\n\nWe all ran right over the top of a Pea Pod, crushing it under our pagan wheels. It was a damn good thing those guys were in the chamber, cause if they weren't that lady Marine would be in a struggle to keep her pants on, that is for sure. The amount of attractant that was released by our crushing it would be nearly a thousand times what they had received when the ladies used their flowers.\n\nBy the time they saw it, the flower and plant were just a mushy mess on the trail.\n\n\"Take that you cock thief!\" Erica taunted shaking her little fist at the plant.\n\nI giggled at the attempted fury in her sweet voice.\n\n\"You tell em, hon.,\" came from Windy in the lead ATV over the intercom.\n\nI was really glad that we had separate channels than the Ambassador's party, so we could talk amongst ourselves without their overhearing.\n\nWe continued our trek through the jungle, seldom coming upon game due to the racket that the other party kicked up behind us. There were some birds occasionally, and we could see some of the larger ones circling high in the air above us, when it wasn't raining of course.\n\nWe continued in a generally downhill direction, and then crossed a valley floor. We forded a small river with the ATVs and then started up the other side, through a low pass. Once we had gotten over the crest of the pass, everyone but Windy was overwhelmed by the beautiful scene of an ocean in the near distance, the jungle covered foothills, and the large modern looking city along the shore.\n\n\"Whoa! Would you look at, that!\" I exclaimed, my cute little jaw hanging open.\n\n\"The Ambassador must be drowning in his own saliva!\" Erica surmised loudly.\n\n\"Why is that Erica?\" Meka asked over the intercom.\n\n\"Um, sorry I shouldn't have broadcast that. The Ambassador is looking for advanced technology to bring back to Earth, and if I am not mistaken, that remarkable city down there is rife with it,\" Erica explained.\n\n\"Yes, compared to your Earth technology, there will be many advanced pieces of equipment, metallurgy, chemicals, and Medical technology. He will be disappointed though, since number one: we will not allow him to have anything, which will do him any good. Number two: our equipment runs on different energy sources than your people are aware of. As Ka'anians, you new ladies will be educated in the sciences when the time becomes appropriate. We have fears that your previous fellow citizens would misuse our technology and destroy themselves as we have nearly done to ourselves,\" Meka's voice emotionally replied over the comm.\n\n\"Why don't you live in this huge city Meka? It has to be more comfortable to be housed in the luxury of this city than to live in the jungle under the primitive conditions I found you in,\" I stupidly asked.\n\n\"Dolly, what makes it possible for people to live together in a huge city like that? How do the citizens get food and drink? How is it that they can have the power systems to work and the wastes disposed of?\" Meka asked me in return.\n\n\"Sometimes I can be so dumb! Of course, without the whole infrastructure supporting a large city, it becomes a barren hollow thing.\"\n\n\"Yes, as our population dwindled without men to provide the necessary seed for new life, the basic services began to shut down. We had to move out of the city to support ourselves and to keep what few men that remained protected from desperate females. They would have been screwed to death, like so many of the men who weren't intelligently managed and cared for.\"\n\n\"Damn! I am glad I ran into you Meka, instead of having been brought here by some sex-crazed women, bent on screwing me to death!\" I replied shocked at the knowledge of how desperate the remaining women of this world had become.\n\n\"Dolly, you were in male pig heaven and you wanted to run away?\" Gwen piped in with mock astonishment.\n\n\"That's a poor attitude from the woman I was longing to be with!\"\n\n\"Well that must mean that you turned in your male pig union card!\" Gwen told me and then sniggered.\n\n\"Oww! You hit me!\" Gwen exclaimed indignantly.\n\nI quickly recalled that Gwen was riding with Windy and that Amazon did not allow those kinds of teasing of the recently changed.\n\n\"I only administered a warning my loving wife. You know the rules about the newly changed. Please do not do it any more, I love you to much to have to administer a greater punishment,\" Windy told her. The intercom was silent for a while.\n\n\"Please don't hurt my Gwen, I know she didn't mean anything by it,\" I asked over the comm.\n\n\"Dolly, I do not enjoy punishing anyone. I was very measured. I reminded myself that she is new to the ways of Ka'an, and I only used a slight tap, honest.\"\n\n\"Slight tap? I hope the feeling come back to that hand before we stop to camp!\"\n\n\"It will be fine in ten minutes, and you won't even have a bruise,\" assured Windy. \"You may strike me back if it will make you feel better.\"\n\n\"No way! I'd rather punch the ATV! I'm not pissing off the leader of the Amazons!\"\n\n\"I would not use my talents, and it would not make me feel like revenging. I am very sorry for having to punish you,\" Windy was choked up, which is unusual for her. \"Hey! I can't steer if you hug me like that!\"\n\nThe lead ATV swerved all over for a moment or two.\n\nThe Ambassadors comm. came on and asked, \"Is everything alright with the lead ATV?\"\n\n\"Everything is alright up there, Gwen is just trying to have sex with Windy while Windy drives,\" I replied to him giggling all the while.\n\n\"I think in that case we should stop and have our midday meal, so the two lovebirds can safely fulfill their needs and the rest of us may fill our stomachs,\" the Ambassador replied, sounding perturbed that there were sexual hijinks going on, which he was not a part of.\n\n\"Good idea Ambassador. Ladies let's circle the wagons and do lunch!\"\n\nWhen we stopped, Gwen groused to Windy, \"How come she doesn't get hit for teasing you and me?\"\n\n\"You have been a girl for your entire life Gwen my love. Dolly is very new to this. We know how difficult it is to make the transition from male to female for those who it has been forced upon. You would not believe how many ended their own existence after only a short time as women,\" Windy informed Gwen.\n\n\"I'm not trying to be cruel to Dolly. We used to kid each other like this all of the time! Why should I change how we relate to each other?\" Gwen complained, trying to logically win her argument.\n\n\"Gwen, things have changed. You may be able to kid around like you used to, but Dolly will at times be overly sensitive for quite some time. You wouldn't want to loose her, would you?\" Windy asked Gwen, as though dealing with a teenager.\n\n\"No, God no! Doug... err... Dolly would never take her own life!\" Gwen assured.\n\n\"After you have seen hundreds of the newly changed take their own lives, you might not be so certain Gwen,\" Windy held her hands and looked deeply into her eyes.\n\n\"Hu... Hu... Hundreds? You have seen hundreds of the newly changed take their own lives?\"\n\n\"More! I... I... don't wish to recall these things, may we please talk of other things?\" Windy begged.\n\nGwen threw her arms around Windy and hugged her tightly, \"I'm so sorry Windy! I will be more careful in the future!\"\n\n\"Would you two ladies take your love making somewhere private please?\" the Ambassador asked, his annoyance clear in his voice.\n\n\"Ambassador, I was only joking. They were not trying to lez each other!\" I informed the Ambassador in my sweet little voice, \"There was a knock down drag out cat fight going on, so the ATV swerved a little. You didn't miss out on anything!\"\n\nErica giggled loudly.\n\nThe Ambassador harrumphed and left to help out his staff by shouting orders at them, which made little if any sense.\n\nI wiggled my way over to Gwen and Windy whereupon I commenced hugging both of the women trying to show that we all loved each other very much and shouldn't be fighting.\n\nWe did the quick microwave lunch thing again, while the other party did things the hard way.\n\nWhen lunch was finished I decided that we needed to reorganize the seating arrangements for a change and had Gwen sit with me and shipped Erica up with Windy for a while. I didn't want Gwen to feel estranged from me.\n\n\"Hi Gwen, we haven't had a chance to sit together in a while. Have I been neglecting you?\"\n\n\"You have been pretty busy lately. I didn't mind... much. Anyway I know you wanted to help Erica be more comfortable with who she is now...\" Gwen sort of ran down.\n\n\"Darn! You should slap me, or something and get my attention. I'm sorry I haven't been there for you these past few days,\" I apologized\n\n\"No, it's okay, really. We better turn the comm. back on or the others will get worried,\" Gwen hesitantly reminded me.\n\n\"Before you do, I just need you to know how much I love you Gwen. You were my first love and you saved all of us by teaching us the feminine arts of Earth. I know I should tell you more often, but the ladies seem to like keeping me busy,\" I added.\n\n\"I love you so much Dolly. I am sorry if I hurt your feelings when I was kidding around before lunch.\"\n\n\"I was more worried for you than my feelings. Did she hit you really hard?\"",
        "Gwen got a puzzled look on her face, \"Um, it hurt like the devil when she did it, but she didn't even leave a mark. I'm not completely certain that she actually touched me now.\"\n\n\"More of that Amazon magic stuff? I wonder if she can just make you think you were hit...\" I surmised. \"I think I will ask her when we stop for the night.\"\n\nGwen reached over and clicked on the comm.\n\n\"Are you two done whispering secrets to each other?\" Erica asked when she heard us come on.\n\n\"Yes, our plans for world domination are completed and ready to set into motion,\" I lied.\n\n\"You are already Queen, how much more dominant do you want?\"\n\n\"Darn it Gwen, she found us out!\"\n\n\"You are going to have trouble pulling the wool over the eyes of that spy Dolly, she's too quick for us!\"\n\nEveryone got a chuckle over that and we drove down the side of the mountain toward the low hills above the city, where we were to make our evening camp. Everything went pretty much as usual.\n\nNow was the time I wanted to try and get away with Marilynn for a few moments. I waited for a good opportunity to present itself, but finally had to resort to feminine trickery. \"Erica, I need to get Marilynn away for a few minutes, and I hate to ask you this, but could you divert the Ambassador's attention for a little while? I will have Windy go with you, but you look more like the sort of woman that would have his attention riveted to her than Windy. Don't do it if it makes you feel too uncomfortable. Know this though, you give Windy a sign you want to leave, and you will be away from him before he can wipe off his own drool!\"\n\n\"Do you think I can? I am a man in here you know?\" she paused a moment, \"Damn I would love to pull one over on that Hemorrhoid of an Ambassador! How would I do it?\"\n\nI motioned Gwen over, \"Lover, this is more in you department than mine, could you help Erica here to turn the Ambassador's head long enough for me to sneak off with Marilynn?\"\n\n\"Ha! Child's play! Dolly you start looking Marilynn up and by the time you find her, the ambassador will be nearly drowning in his own drool!\" Gwen pulled off Erica's light jacket, pulled out her shirt tails unbuttoned the top 3 buttons, and the bottom two, tied the tails underneath Erica's breasts. Gwen then took her canteen and dowsed Erica down the front and back of her top. She then took a little water in her hand and sprinkled Erica's face lightly with it, and then she hiked Erica's skirt up another inch\n\nGwen noticed that I hadn't left yet, \"What are you waiting for? We aren't going to be having any sex if that is what you are hoping for, so skedaddle!\"\n\n\"Okay, but you owe me some when I get back for making Erica look so hot!\" I teased back, spun on my sexy high heel and perambulated towards where I expected to find Marilynn.\n\nI looked back to see Gwen hand Erica a camp shovel and take her in tow.\n\n'The Ambassador is toast!' I thought as I searched around just a bit for where Marilynn was. I spotted her right next to the Ambassador, who was wearing his environment suit. Damn! They were seated in lounge chairs off to my right, with Marilynn on my side of the pair. They were angled towards my far right, so I was nearly on the pair's side.\n\nSuddenly I saw Erica with a camp shovel in her hands walk up in front of the pair, towards the Ambassador's left side and start to dig a hole with her shovel. I could see the Ambassador's breathing quicken as he began to watch Erica dig a small hole in the dirt.\n\nThe Ambassador got to his feet and walked slowly towards Erica.\n\nI waved my hand towards Marilynn to get her attention, once I knew that the Ambassador couldn't see me anymore.\n\nMarilynn saw me and slowly got to her feet and nonchalantly walked towards me as the Ambassador approached Erica. I noted that Windy was slowly walking towards Erica at a pace to approximate that of the Ambassador's but off to the side where he was unlikely to see her approach.\n\nMarilynn made it to where I was standing and I asked, \"Can we talk, or do you think he will miss you?\"\n\n\"That pig will be mesmerized by the hottie digging the hole for half an hour! Unless he spunks his pants before then!\" Marilynn assured me. I received a quick hug and we slipped out of sight into my ATV.\n\n\"Marilynn, Erica, the hottie keeping the Ambassador busy out there, told me that Theo is a wife beater, is that true?\" I didn't have a whole lot of time so I got right to the point.\n\nMarilynn paled perceptibly, \"Um, I... I... Oh Dolly! I don't know what to do... Theo says that if I tell anyone, or try to get him back in any way, he'll have the Secret Service hunt me down and terminate me with 'extreme prejudice'. He swears that he will have anyone involved taken out with me too. I don't want you or your wives to get hurt. He beat me so bad after the negotiations that I couldn't walk for two days... So, don't get involved, it's my problem and I'll deal with it.\"\n\nI took a deep breath, \"I was just waiting to be completely sure Marilynn. Now that you have confirmed my suspicions, you can put your mind at ease. Theo Blatherwick will be taken care of. As for his connections in the Secret Service, Erica has many more than Theo does! That and the fact that this is Ka'an, the only Secret Service agents on this planet, are under careful watch, just as you have been on this entire trip. If the Ambassador had so much as slapped you on the bottom, he would have found himself looking up from the dirt into the eyes of an enraged Amazon!\"\n\n\"Those Marines would have been all over the Amazon in a heartbeat Dolly! They would have hurt her worse than Theo. Don't let them do something that foolish!\" Marilynn was white as a sheet and visibly shaken.\n\n\"Marilynn, tonight I will arrange a little contests between that behemoth Marine, and my little Windy. It will just be a little friendly sparing, so don't worry, no one will get hurt. After that, I think you will agree you are as safe from harm on this trip as you would be sitting inside of an Abrams tank. Is that okay? Afterwards you and I can meet again and we can put together a plan for you to escape your predicament, but only if you think it is safe. Can we try that?\" I had hold of her hands and was trying to look up reassuringly into her face.\n\n\"Just don't let Windy get hurt, please? I couldn't handle that!\" she agreed.\n\n\"Honey, is it alright if the Marine gets a little bruised?\" I figured I better check because with what Windy can do... well let's just say that Marine better not pull a weapon on her!\n\n\"I better get back before one of the Marines decides that I have been gone too long and brings it to Theo's attention,\" she said worriedly already moving to exit the ATV.\n\n\"By the way Marilynn, you were here checking out our wonderful ATVs so you could tell Theo all about them,\" I coached her, whereupon I quickly launched into rapid fire explanation of some of the niftier features to give her a little ammo to prove what she said. We hugged each other and she scurried on back to the Ambassador's side of the camp, only to discover that Theo was still watching Erica dig a small hole in the ground.\n\nWhen everything was all clear, Gwen went to Erica, dropped a few twigs in the hole, and had Erica shove the dirt back over them. The two conspirators scurried back to where I was and fell down laughing themselves into a bad case of the hiccups.\n\n\"I can't believe I just did that! &lt;hic&gt; He couldn't take his eyes off of me! &lt;hic&gt;,\" Erica said as she hugged me.\n\nGwen came over giggling, \"So Erica, how did you like your first taste of girl power?\"\n\n\"I'm just glad you didn't tell me about the twigs ahead of time! &lt;hic&gt; I would never have been able to keep a straight face! He was so easy! It was like dealing with a little kid!\"\n\n\"Exactly! Dangle candy in front of him and you can keep his attention for quite a while and you are a heck of a piece of candy, sweetie!\" Gwen hugged Erica, \"Now let's do something about those hiccups!\" &lt;giggle&gt;\n\n\"That was great! &lt;hic&gt;\" Erica followed Gwen to find a drink of water.\n\nI headed off to set things up with Windy for later.\n\nBattle\n\nLatter that afternoon when dinner was all put away everyone was relaxing around the camp in a more integrated assembly than earlier, (Since we shared our native fare with the Ambassador's party.) and I struck up a conversation with the men in their ATV. (The only place they could eat anything other than the nutrients and fluids stored in their environment suits.) \"You gentlemen ever hear the myths of Amazons handed down from Pre-European culture arriving in the Americas?\"\n\nDavon spoke up first, \"Huge muscular women warriors who could defeat the strongest male warriors? Women who could perform impossible feats of strength and who ruled the tribes? Those types of myths, yes I have heard of them. I also understand that you call your security forces Amazons as well, even though they are not the impressively muscled women in the myths.\"\n\nI have to give him credit, he didn't sneer or speak in a mocking tone as I had expected.\n\nI smiled brightly, \"Yes, those tales. I have always thought that in most myths there may be a grain of truth. Meka tells me that the legend of the Amazon warriors was about the Ka'anian women warriors, everything except the hugely muscled giant part that is. She said that was probably thrown in by the men telling the stories so they wouldn't look weak. The Amazons of Ka'an have practiced a type of martial arts for over a thousand years. From what I have been shown they can be quite impressive. I have been wondering though, how well they could fare against highly trained United States Marines. What do you gentlemen think?\"\n\nThe Ambassador immediately broke in with, \"Women trained in martial arts might have been able to throw about untrained tribesman, but I'll wager my Marines here could clean up any of the 'security forces' you have with you!\" He emphasized his disdain for the Amazons who were small delicate looking girls, compared to the Marines he had brought.\n\nDavon raised his eyebrows at the Ambassador's remark, not as quick to discount the Amazons.\n\n\"Well, do you think Tess would be up for a little sparing with an Amazon?\" I goaded.\n\n\"Hah, just as long as you don't hold us responsible for your Amazon getting hurt!\" the confidence of the Ambassador was apparent.\n\n\"My little Windy promises not to hurt her,\" I assured, \"You set it up with Tess, and I'll go and get Windy.\" The fight was on.\n\nTess was in her combat boots wearing a t-shirt with a sports bra underneath and her regulation jungle camouflage trousers, standing loosely at one side of the clearing. Windy wearing her traditional soft leather loincloth and a sort of leather peasant blouse standing at the other side.\n\nMeka was playing ringmaster, \"Ladies this is just a little light workout for entertainment and exorcise. Normally Ka'anians would approach in the center and hug each other prior to a match, but we will defer to the Earth tradition of shaking hands, since your people find hugging a little too familiar.\"\n\nThe ladies approached and shook hands.\n\n\"Combat will conclude when one combatant says 'Yield', do we understand ladies?\"\n\nBoth women nodded their understanding.\n\n\"When Dolly drops her hankie combat begins, may the most skilled warrior win,\" with that Meka joined me on the side of the clearing.\n\nI dropped my hankie and the match began. (Damn, 'hankie' is so... so... feminine!)\n\nTess squared off hunched over and waded in towards Windy.\n\nIt looked like one hell of a lopsided match, at least to anyone not familiar with the combatants.\n\nTess got close enough to try for a roundhouse punch, and was yanked into a roll from which she recovered onto her feet quickly, springing at Windy, who with blinding speed came up under her with a rabbit punch to her middle and Tess fell in a heap gasping for breath.\n\nWindy calmly stood ten feet away waiting for Tess to catch her wind.\n\nTess came up with dark fury in her face, but circled a little more warily this time.\n\nWindy jumped up in a summersault and opened it up with her feet hammering into Tess's hipbones, both sides at the same time.\n\nTess flew backwards as if a bomb had gone off in front of her, landing on her butt some fifteen feet backwards. Her enraged expression deepened as she sprang to her feet, blood in her eye.\n\nI heard Davon exclaim under his breath, \"Holy shit!\"\n\nThis time she came at Windy like a charging Rhino!\n\nWindy side stepped and brought her dainty little hand down on the back of Tess's shoulder blades driving her into the ground and a skidding halt. Tess ducked a shoulder and rolled up onto her feet. She came back in swinging punch after punch at Windy, who just seemed not to be where the punch should have landed when it got there.\n\nAfter several swipes Tess roared her rage and tried to wrap her arms around little Windy. When her arms had nearly closed Windy let loose a quick punch to the solar plexus, which sent Tess reeling backwards without her prey.\n\nTess reached back around her own back and came up with a small knife and charged back at Windy!\n\n\"No!\" seemed to be the common exclamation from the sidelines as she was almost on top of Windy.\n\nWindy seemed to blur momentarily and the knife disappeared from Tess's hand. Then a blur behind Tess's right ear and the big woman slapped down on the grass like someone had let the air out of her. Tess didn't move after that and everyone outside the chamber went running out to see if Windy and Tess were all right.\n\nHigh heel boots weren't the easiest things to run in, so I pretty much arrived last. (Erica is taller than I.)\n\n\"She is not injured and neither am I, but I am afraid she will waken with a terrible headache and a nasty bruise on the back of her head,\" Windy announced.\n\n\"Where is the knife?\" I asked.\n\n\"What knife?\" Windy replied, \"This was unarmed combat, so knives are not allowed. You will not find either of us to have such a weapon.\"\n\nNo one else argued the point so I went along, \"I must have been mistaken.\"\n\nThere was a moan from the pile of Camouflage on the grass near us and two of the other Marines groaned loudly as they hefted Tess and dragged her back to lie down in one of their tents.\n\nWe meandered back to the ATV which held the men, \"Tess and Windy are both fine, but I think we have to call it a draw since no one said, 'Yield'.\"\n\n\"Yah, right!\" said Davon shaking his head. \"That is one damn fast woman you have there, Dolly!\"\n\n\"She's cute too!\" I giggled.\n\nI glanced around at Marilynn whose saucer sized eyes told me everything I needed to know.\n\nOnce the Ka'anians cleared the ATV the Marines were over talking to the Ambassador and his staff. Boy how I wished I could hear what was said.\n\nWindy came up to me and whispered, \"Yes sir, I did see a knife drawn. No sir, no knife could be found on either woman. No sir, I would not want to challenge that Windy woman. I have sparred with Tess on a number of occasions and have never bested her. No sir, I did not see Tess land a single blow on Windy.\"\n\n\"Does that answer the questioning look on your face Dolly?\" sweet Windy asked.\n\n\"I just love how you do that!\" I hugged her.\n\n\"Oh, and Davon just said, 'I wouldn't mess with her either!'\" Windy giggled.\n\n\"I think we should park the ATVs together and open up the canvases between them. We could have a really nice slumber party together!\"\n\n\"My, you are horny tonight!\"\n\n\"What is unusual about that?\"\n\n\"Cause I'm just as horny...\" she cleaned my tonsils and left me panting while she arranged the ATVs.\n\nErica came over and said, \"I hope they are getting the ATVs ready for bed, I'm so horny I could almost screw the Ambassador!\" she sucked on my face and gave me a quick grope for good measure. \"What's wrong with you?\"\n\nMy knees were starting to turn to Jell-O and I was about to start sinking to my knees when Gwen came and slipped her hand between my legs to support me... or drive me crazy... either way it worked!\n\nMeka saw the congregation and rescued me... or maybe absconded with me, anyway the next thing I knew I was flat on my back with half a dozen women administering to different areas of my soft yielding body! When I wasn't screaming in orgasm, I was licking the air like a puppy that wants to show you she loves you. Luckily once in a while some lover would position herself so that I could.\n\nI heard Erica making mewing and moaning sounds too, so I knew she was having her needs attended to. I worry about my little sister.\n\nThe Suburbs\n\nI knew it was morning, due to the warm, wet, wiggly tongue in my mouth, and the soft little hand playing with my nipple.\n\n\"Meka made everyone let us sleep in, and they said I could wake you up this morning!\" Erica told me with almost the perkiness of a cheerleader, \"It was so nice when you woke me up like this, I wanted to return the favor!\"\n\n\"Ooh, ooh, ooh,\" I cooed, \"Nipples... orgasm... ooh, ooh...\"\n\n\"Are you trying to tell me if I don't stop this, you will cream your panties?\" she cooed in my ear.\n\n\"Ungh! Ghah!\" my little girly body was just too easily excited!\n\n\"Does this mean you are helpless? That I can do what I want to you and all you can do is enjoy it?\" she reached down and played with my clit.\n\nMy legs went stiff and started to quiver, so what does that minx do? She sucks a nipple into her mouth and tries to get me to provide breakfast! I orgasmed like gangbusters and she said, \"I love doing that! You are so helpless and so easily satisfied! It's almost like the power I had over the Ambassador yesterday! But I like this, a whole lot better!\" She kissed me with an almost urgency in her manor, \"You are the most important person in my life, and I love being able to make you feel so good!\"\n\n\"You do that every time I see you smile hon.. Thanks for the wonderful wake up! I love starting the day with an mind blowing orgasm!\" I cupped her sweet face in my hand.\n\n&lt;Tee he&gt; she giggled and helped me out of my bed as we started getting ready for the day. (She had warm soapy water for us to use giving each other sponge baths and some fresh to rinse with. We didn't want to go around smelling like a lesbian love fest.)\n\nOnce dressed and out of the ATV, I looked around and noted a very tall Marine walking around like she was hung over, and wincing occasionally when she turned her head too quickly.\n\nThat was an opportunity, which I resolved to deal with soon, before it could fester and turn against us.\n\nI made my way over too her and started with, \"Um, hi Tess. I'm real sorry! It's my fault you have a bruise and headache today. I wish it could have come out better though.\"\n\nTess looked at me with the kind of gaze that said, 'What are you talking about, and why is this flea bothering me?'\n\n\"Oops, sorry! Hi, my name is Dolly Gordon. I'm the Queen here,\" and stuck out my hand.\n\nShe reluctantly took it but still looked confused.\n\n\"Yah, I can hardly believe it myself. I was a guy six months or so ago, and now I'm the queen, strange universe isn't it?\"\n\n\"You were a man?\"\n\n\"Yup, didn't they tell you?\"\n\n\"They said that a couple of the Ka'anians were once men, but... but... you are so... so...\"\n\n\"Feminine?\" I provided.\n\n\"I figured it was the girl who kicked my ass, not you!\"\n\nI giggled, \"No, the girl who kicked your ass is the leader of the Amazons of Ka'an. You never had a chance. That is why I'm here apologizing to you. The Ambassador and his staff needed to know that on this world, the Amazons are strong, and not to be taken lightly. You just happened to be the biggest and toughest person who could get out of an ATV. So, I'm sorry for having to put you through that.\"\n\n\"That little thing is an Amazon?\" you could see the wheels turning in her head, \"I thought Amazons were huge!\"\n\n\"Leave it to men to exaggerate the size of the girls that handed them their asses!\" I laughed at my own joke.",
        "\"Hell, I'm not a man, and I wish I could tell people a giant Amazon warrior kicked my butt, not a skinny blonde! Is that why she was so god awful fast?\"\n\n\"Little Windy is the culmination of a thousand years of martial arts training. She could have stomped Andre the Giant! I personally, have seen her put her delicate little fist through twelve inches of solid concrete!\"\n\nTess paled significantly, \"You mean when I... she could have...?\"\n\n\"Yup, but I made her promise not to hurt you!\"\n\n\"Shit! Would you tell her I'm sorry? I shouldn't have tried to...\"\n\n\"Yes. Don't worry Windy is a sweet girl and doesn't hold a grudge. She is one hell of a great friend to have! I would say that, even if she wasn't my wife!\"\n\n\"My head really hurts. I thought you just said she is your wife,\" Tess was rubbing her aching head.\n\n\"It is a long story, and the next time we have time I'll tell you, but I did say Windy is one of my twenty two wives,\" I added, \"The real reason I'm here is to apologize and to warn you about the Ambassador. I have it on good authority that he beats Marilynn. He better not, while on Ka'an. Windy has her Amazons watching him, and even though I am her husband/wife and Queen, I might not be able to keep something unfortunate from happening to him. You need to know that if the Amazons start to move on him, don't get in the way! I will be his only hope at that point. If you think fighting one Amazon it tough, know this, there are only three non-Amazons in our party, and one of those is an ex-Secret Service Agent.\"\n\nHer eyes widened again.\n\n\"Just so you don't have to guess, Erica is the Secret Service Agent. The other very feminine one in our party.\"\n\n\"Duty or no Duty, if he raises his hand to Marilynn, you can have him!\" she assured me, \"It's not as if I could stop a bunch of giant Amazons all by myself anyway!\" she chuckled and then grabbed her hurting head.\n\n\"Here, take this and drink it. It is safe, and will make your head feel better. Windy made it special for you,\" I handed her a little bottle with a cork stopper in it.\n\n\"I won't get stoned or anything will I?\"\n\n\"Nah, the girls don't have hardly any good drugs, darn it!\" I grinned broadly.\n\n\"You know, you are a real nice lady, Dolly. Thanks for coming over. I thought today was the worst day of my life up until now. Now I think it is looking like it might be one of the best! I made friends with a Queen, had my ass kicked by an Amazon, and I think we might become good friends too! You are right, it is a mighty strange universe!\"\n\n\"You wouldn't hit me if I hug you, would you?\"\n\n\"What? And get all busted up when Windy found out? NEVER!\" she laughed.\n\nShe grabbed me and hugged me good, \"Damn Dolly, pardon me for noticing, but I think I like to hug girls with big boobs... Damn! I sound like the Ambassador!\"\n\n\"It's okay Tess, my wives have learned to appreciate them too!\" I giggled and hugged her back.\n\nI wiggled my way back to our side of the camp and Erica asked, \"Consorting with the enemy?\"\n\n\"I destroy my enemy, when I make her my friend,\" I quoted.\n\nErica looked blankly back.\n\n\"Abraham Lincoln said that, I was just borrowing it.\"\n\nShe still looked puzzled.\n\n\"I just went over and made nice with Tess. She says that if the Ambassador touches Marilynn, she won't see a thing that happens to him.\"\n\n\"Really? Wow, you are good girl!\" she smiled and patted me on the back.\n\n\"That and she thinks you're cute...\"\n\n\"She said that? Are you pulling my leg? She thinks I'm pretty?\"\n\n\"I told her you were already taken...\"\n\n\"You little...\" she said and chased me all the way back to the ATV, the two of us laughing the whole time.\n\n\"Nice work Dolly! I was kind of concerned that Tess might hold a grudge after our training session,\" Windy told me during a warm hug. \"By the way, what was in the bottle?\"\n\n\"Children's Liquid Motrin. There was enough for about three doses for me, so if she drinks it all, her headache will go away in about twenty minutes.\"\n\n\"Well thank you for making her think it was me who gave it to her. I do have something that would make her head feel better, but she would probably feel a little goofy for a while too.\"\n\n\"Could you get some for me?\"\n\n\"No time for fun, we have business to attend to,\" she escorted me to my ATV, Erica and I climbed aboard, and we were on our way.\n\nWe wound our way down the foothills to the outskirts of the city, where we camped for lunch.\n\nTess meandered over with one of the other Marines, \"Hi Dolly! I want you to meet Glenda. She doesn't believe you are a Queen, amongst other things I told her.\" Tess moved to me and held out those long arms of hers, so I slipped in for a hug.\n\nI moved to Glenda and hugged her too, to her shock and amazement, \"Nice to meet you Glenda! I have a hard time believing I'm a Queen too, so don't feel bad!\"\n\n\"Who doesn't believe that Dolly Gift From God Gordon, is Queen of all Ka'an?\" Meka asked, walking up to the small group assembling.\n\n\"Tess, I want you to meet, High Priestess Meka Gordon, my wife. Meka, this is Sergeant Dix, and Corporal Glenda...\" I introduced the two ladies.\n\n\"Cosgrove ma'am. Glenda Lynn Cosgrove, I am thrilled to death to meet you ladies! Oh, god! I know a Queen and a High Priestess! My mother is going to faint dead away!\" Glenda had her hand over her upper chest like she was trying to keep it from bursting out.\n\n\"Wait till I tell my cousins I know a real Marine too!\" I giggled.\n\n\"Dolly!\" Gwen, Meka, and Erica admonished.\n\n\"I'm sorry, it is hard for a guy to realize he is a queen!\"\n\nGlenda nearly fainted, \"There is no way any guy has hooters that big!\"\n\n\"Well, I wouldn't if I was still a guy!\" I teased her.\n\n\"You! You are the one they told us about in the briefing! The guy who had his... ah... well... the guy that got turned into a woman!\" her hand flew to hide her open mouth.\n\n\"Damn! I knew this skirt didn't fit like it used to!\"\n\n\"Wait a minute, are you sure she is talking about you? You aren't the only guy around here that happened to you know!\" Erica piped in.\n\n\"Whoops! Somebody catch her!\" I warned.\n\nTess was doubled over laughing at Glenda, so she couldn't do it. It was a good thing Windy was there!\n\nWe all looked at each other, so I said, \"Old jungle cure?\"\n\nTess wasn't in on it but when we all lay down around Glenda, Tess took off at a fast trot, \"I have to get a picture of this!\"\n\nShe made it back in time to snap off two pictures before Glenda started to come around, \"Weird dream... Two hotties claiming to be men...\"\n\n\"Oh, we may be really pretty, but we aren't a dream Glenda. So don't you go and faint again!\" I whispered to her.\n\n\"Bobby? You smell like a Girl! What the hell are you wearing, man?\" Glenda groggily asked.\n\n\"Just a touch of Channel, do you like it?\" I whispered.\n\n\"Dolly? Wha... How did I get here?\" she stammered.\n\n\"You fainted and we were keeping you warm and helping you to wake up slowly. Do you feel better now?\"\n\n\"The two hottest looking girls, are actually men!\" she tried to get a look at Dolly's crotch to verify that statement.\n\n\"Close, but no cigar! The two hottest looking girls are actually girls, who used to be men. Does that make sense?\"\n\n\"Girls who used to be men. The briefing! They said we were the only one's allowed to go to Ka'an because men would be turned into women if they came here. They said it was a plant that does it but I didn't really believe it. The Lieutenant that briefed us didn't sound like he believed it either,\" she mumbled coming around slowly.\n\n\"Glenda, my name was Eric, I was a Secret Service Agent before I was ordered to sneak onto Ka'an and reconnoiter. I go by Erica now. Believe me Glenda, there is a Pea Pod, it does make men into women, and they become the kind of women that they desire. It takes five days and when it spits you out... well Dolly and I are what walks out of one,\" Erica explained carefully, but gently and with a smile.\n\n\"Damn! Do you think one of them would take a girl...?\" she asked ogling Erica.\n\nEveryone laughed.\n\n\"Sorry, they want the Y chromosome and you don't have one. But that is a really sweet compliment Glenda,\" I told her with a hug.\n\n\"Men get all the luck! I always wished to be smaller and prettier with bigger boobs and you just get eaten by a Pea Pod and it is handed to you on a platter!\" her lower lip stuck out far enough you could sit on it.\n\n\"Look at it this way Glenda, at least you don't have to look in a mirror all of the time and want to do yourself with what you don't have anymore!\" I told her seriously.\n\n\"Darn, like if I was turned into a well hung stud... I would want to have myself screwed by me, but I couldn't... well at least not where I would want to be,\" she rationalized, \"Oh, you poor thing!\"\n\nShe had me in a bear hug that had me quivering up and down my body like little electric shocks were going through me. My knees went weak and I started to pant like a puppy in the family car.\n\n\"Careful there Glenda, you have a stick of dynamite in your arms and if you keep that up she just might go off!\" Meka cautioned her. \"Oops, I better help her down.\"\n\nMeka took me from the shocked Glenda's arms.\n\n\"Whew! Just in time Meka! She wiggles when she hugs!\" I complained.\n\n\"You loved every second of it!\" Meka correctly stated, \"But I'm not jealous, you can invite her to our next orgy if you care to dear wife.\" Meka was grinning like the cat that ate the canary.\n\n\"You trying to get her in trouble, Meka? She would get discharged if they found out that she likes girls, as stupid as that sounds. Unless you plan to recruit her from the Marines that is...\" I giggled and squirmed in her arms.\n\n\"Darn, is she serious?\" Glenda asked me.\n\n\"Sure, Meka loves to share! She knows that our souls are bound together, so she does not get jealous. The thing she loves to see the most is her loved ones happy, so if a little romp in the hay makes me happy, she will even set it up! She will ask to play too, or at least to watch, I think she gets almost as much out of watching me orgasm as I do when I orgasm.\"\n\n\"Well honey, if I were to swing in that direction, you would be the one to turn my head. You're sweeter than most girls I have ever met, and you seem to like being sexy!\" Glenda enthused.\n\n\"My that is flattering! Well if either of you lovely ladies wants help dealing with Ka'an, or something on this trek, don't hesitate to call. I mean anything too, if you just want to talk, my wives and I are pretty good listeners,\" I offered. Having the marines as friends on this journey could ward off some of the potential confrontations later.\n\n\"Before you ladies head back to your duties,\" Meka stopped them, \"I want you to know that as far as the people of Ka'an are concerned, Dolly is our most valued treasure! If anything should threaten her, do not stand between the Amazons and her, they will not hesitate to go right through you, should she be threatened. I felt you should know how we feel about Dolly, for your own safety and that of your Ambassador's.\"\n\nBoth Tess and Glenda's eyes grew wide as they looked from Meka down to little me.\n\n\"I think I agree Meka,\" was Tess's reply, as she and her companion returned to their duties.\n\nWe traveled a little farther along the trail until the sun neared the horizon and then we made camp once again.\n\nWe invited Tess and Glenda back to watch a movie with us on the DVD player in my ATV. We watched Miss Congeniality, for some reason I can relate to what that girl went through. (That and I happen to know from a friend on San Juan Island who has seen her in person, she is short like I am.)\n\nWe even had microwave popcorn, and cold sodas. The Ambassador and his men weren't invited, cause they couldn't partake of the goodies anyway... stuck in that ATV of theirs.\n\nI did get Marilynn away from Theo for a brief respite and she seemed a lot more at ease than when last I talked to her.\n\n\"Dolly, those Amazons of yours are amazing! They even freaked Theo out! Your little Windy is a lean mean fighting machine!\" she enthused.\n\n\"Naw! Windy is a sweet loving girl, who wouldn't hurt a fly! She just has a maternal instinct that is very dangerous when aroused...\" I giggled.\n\n\"Anyway, thank her for me please, she made me feel safe for the first time in months,\" she squeezed my elbow to indicate how much it meant to her.\n\n\"You are most welcome Marilynn Blatherwick, it was my pleasure,\" Windy told her from ten feet away.\n\n\"Wow, Windy has great hearing!\" Marilynn exclaimed!\n\n\"Amazons are spooky sometimes. Windy is the best of them, so I have come to expect, nothing escapes her notice. It's like having Wonder Woman around.\"\n\n\"If she steps into an invisible airplane, I am going to faint dead away!\" Marilynn exclaimed.\n\n\"You and me both sister!\"\n\n\"God! I love it when you call me sister! I don't know why but from you it is special, like you mean it more than any other girl I have ever known!\"\n\n\"I'm really nobody special Marilynn, I am just a guy who was thrust into these circumstances. I am just doing what is best for the ones I love and the people who are special to me. What else would anyone do?\"\n\n\"My ass! You are too humble hon.. Nobody here thinks that way except you! You are special, just because you give theses women hope. You know what they need and you see that they get it. There is nothing more that anyone could require from their queen,\" she stated, \"So if they want to revile you for it, you should let them!\"\n\n\"I realize that they need a heroine, but I have a hard time seeing myself in that role.\"\n\n\"No one else does, so you are the hope of an entire planet! Talk about pressure!\" she giggled at my predicament.\n\n\"Thanks, I'm glad you defined it so well for me! Now would you like to stick bamboo under my fingernails too?\" I replied sarcastically.\n\n\"Sorry Dolly, but I do tend to ramble sometimes, a trait that has not endeared me to Theo in the least!\" Marilynn replied sadly.\n\n\"You are dear to me Marilynn, so who cares what Theo thinks? I want to make sure that those who I love are safe from harm, and that includes you. At this time you are totally safe from any kind of harm, should Theo loose his cool, he would find himself badly beaten by an Amazon,\" I told her.\n\n\"That would destroy his self esteem. I can't think of anything better than that happening to him either!\" she stated with obvious venom.\n\n\"Do you want Theo to succumb to an accident during this expedition Marilynn?\" I asked, know full well what the answer would be.\n\n\"If he comes home peeing sitting down, I would be the happiest woman in both worlds!\" she stated.\n\n\"Done and done,\" I told her, \"What will the state department have to say when they get back a girl instead of a macho pig?\"\n\n\"I think they will figure that Ka'an is a very dangerous place for anyone with a cock! Maybe they will catch on and assign a woman to be Ambassador to Ka'an!\" she surmised.\n\n\"You believe in the Easter Bunny too don't you?\" I asked her while giggling.\n\n\"Don't you?\" she asked.\n\n\"Of course I do! I believe in everything! I have proof that whatever you think is impossible may not be!\" I told her not believing totally what I said, but having sufficient reason for saying it.\n\n\"I can believe that! In your place I think I would be very open-minded as well! Who would believe that a man could be made... well you know what I mean...\"\n\n\"Well not that it means anything, but I have always tried to think outside of the box. I don't want to have paradigms restrict my creativity!\" I stated emphatically!\n\n\"Well, as far as I can see your paradigms are as open as the sky! Your horizons are so vast that no one on Earth could envision them! There isn't anything that could be said to be a certainty on this world! I only hope that the advances available on this world will not destroy ours!\" Marilynn surmised.\n\n\"That has been a concern of mine. Meka says though that we have nothing to worry about, anything that is so advanced that it could harm Earth, is too advanced for us to figure out! Oops, for them to figure out! I keep forgetting now, that I am Ka'anian, not of Earth!\" I stated, almost shocked at the statement myself.\n\n\"Does that mean I can understand it now Meka, but before I wouldn't have been able to?\" I puzzled.\n\n\"Yes sweetheart, you are now easily twice as smart as you were when you arrived here,\" she admitted, \"Does that trouble you?\"\n\n\"Kind of, I had a genius IQ before the change. I don't feel all that much smarter. If I'm smarter, how come I giggle so much?\" I reasoned.\n\n\"Being giggly does not preclude being smart dear one. You are smarter and gigglier, sexier, sweeter, prettier, shorter, bustier, and your vision has improved. Need I go on?\" Meka patted my bottom, \"I love all of what you are now and all of what you were before!\" Then she kissed me and it made my day.\n\n\"So we are in no danger of harming ourselves with advanced technology here?\" Marilynn stated, trying to confirm what she thought she heard.\n\n\"Well, I wouldn't say that. You are in no danger of understanding our technology, however you can harm yourself by attempting to use what you do not understand,\" Meka explained, \"So I would not recommend that you toy with things you do not understand.\"\n\n\"Maybe I can convince Theo to play with some of it,\" Marilynn giggled.\n\n\"I doubt we can stop him, but we will warn him, so our consciences are clear!\" Meka informed her, with a wink.\n\nAfter the movie we went our separate ways, Ka'anians to our grouped ATVs and Earthers to theirs.\n\nGwen let me spell out the alphabet with my tongue on her pussy for over half and hour before I was attacked by some of the others and screaming out my own orgasms.\n\nShopping\n\nWe decided to leave the camp set up and just advance with some of the ATVs into the beginnings of the City.\n\nWe passed by several small dwellings, which looked like a cross between stucco and stone blocks. There were stylings of a distinct southwest flavor overlaid with a Mayan motif.\n\nThere were occasionally large long buildings with slanted sides and flat tops, which had my curiosity piqued, \"Meka, what are those buildings? Should we check them out?\"\n\n\"They will be mostly market places Dolly, but just for curiosities sake, we will stop and investigate one. It should be very educational if nothing else,\" she began steering the ATV towards the nearest one.\n\nEveryone else followed along. I had informed the Ambassador's party what we were doing.\n\nThe Ambassador was more than happy to visit a store. I bet he was looking for the sporting goods, or the electronic equipment sections!\n\nWe all slipped through the door that Windy had forced open for us, (After Tess and one of her Marines tried to force it open.) and started down the aisle. The men were all wearing their Environment suits and sounding like walking Iron lungs.\n\nWe were searching around the mostly empty aisles, I expect that as the cities services shut down, most of the useful items were scavenged from the stores, so there wasn't much to find.\n\nI ran across a little box with slips of paper that could be slid in a slot, \"Meka, what is this little gizmo?\"\n\n\"Educational videos I believe. They are slipped in like this and the unit is turned on here. If the energy cell has retained its charge, we should see...\"\n\nSuddenly there was a small three-dimensional girl standing on the box speaking the native Ka'anian language. (I have learned quite a lot of it now.) Translated it was a cooking demonstration, so when she turned to the counter that her ingredients were on, they appeared just as she had.\n\n\"Oh my! That is wonderful! Can we take it with us?\"\n\n\"Wait, I'll go get my credit card...\" Meka teased.\n\n\"Okay, okay, so I have moral compunctions against taking things that do not belong to me... sue me!\" I groused.\n\n\"I am glad you are that way, Dolly, but you are the Queen of Ka'an, everything belongs to you, your subjects would be delighted to give it to you were they alive to do so,\" Meka assured me."
    ],
    "authorname": "Wholemanz",
    "tags": [
        "newly transformed",
        "access codes",
        "giggled hugged",
        "talk wives",
        "ambassador wife",
        "told meka",
        "tess fell",
        "meka still",
        "gwen hugged",
        "wheels turning"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/pea-pod-the-return"
}