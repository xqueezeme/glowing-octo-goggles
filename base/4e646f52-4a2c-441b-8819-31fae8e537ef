{
    "title": "Secret Smiles and Three Little Words Pt. 40",
    "pages": [
        "Chapter 56 \n\n\"Hey Trouble and Trouble Jr,\" Al smiled at the two girls as they entered the hospital room. \n\n\"Just remember, there are two of us and only one of you!\" Alex warned him with a smile. Nora climbed up on the bed and kissed him. \n\n\"How are you feeling today Grandpa?\" she asked him as she pushed her hair back with her fingers and a slight tilt of her head. \n\nThe simple gesture made Al blink his eyes quickly to keep the tears back. How many times had he seen Livy do that same gesture over the years? Hundreds? Thousands? It was so subtle, so quick, but the soft gentle way she pushed her hair back reminded him instantly of Livy. \n\n\"I'm good,\" he said, recouping his voice after a few moments of it being stuck uneasily in his throat like a kernel of popcorn. \"I feel like I could wrestle an alligator!\" he teased her. \n\n\"Grandpa, you are so silly! An alligator would eat you!\" she said laughing. \n\nHer laughter carried and Al looked to Alex who seemed to be seeing the same things. Little mannerisms that Nora picked up from her mother that no one noticed until recently. Now they were on display for all to see. At least those who were still coming to grips with the fact Livy was gone. \n\n\"Hey!\" Trevor announced as he came in. \n\n\"Hey,\" they called back as a collective. Alex steeled herself and waited for his mother, Krista, to come in, but she didn't so she looked to Trevor. \n\n\"I had a friend from school drop me off,\" he explained her questioning eyes. \n\n\"Ah,\" Alex nodded, thankful that Krista didn't come. She didn't want to argue today, she didn't want her father to become aggravated either. So having just Trevor was good for keeping things light. \n\n\"I do have some things to tell you,\" Trevor said with a mischievous flick of his eyebrows. Alex cocked her head. Obviously it was going to be good but he wouldn't say in front of Nora. \n\n\"Where is Gavin?\" Al asked. \n\n\"Back in Chicago,\" Alex frowned. \n\n\"That makes sense,\" Al nodded. \"You guys have a lot of wedding stuff to put together, or is mean old Queen Madelyn handling all the details now?\" He teased tickling Nora. \n\n\"The wedding,\" Alex frowned. Al snapped his eyes to her. \"It's been postponed.\" She said carefully. \n\n\"What?\" Trevor and Al said at once, shocked that the one happy thing they had going in the family right now was now cooling off. \n\n\"Well,\" Alex shrugged. \"We thought it was best, so you can concentrate on getting better and I can concentrate on Nora a little. You know, new school and things like that.\" \n\n\"Oh my God! I'm so sorry I have wrecked everything!\" Al groused, his anger weaving into the words. \n\n\"You haven't wrecked anything,\" she assured him. \"We just need to take care of some priorities.\" \n\n\"Your wedding should be a priority!\" Al told her. She shrugged. \n\n\"It's not off, just pushed back,\" she told him. \"Don't go getting up panties in a bunch!\" She smiled at him, using one of his favorite sayings to her when she was growing up. She didn't know how many times he had thrown that statement at her, but she was sure she heard it at least once a week. \n\nWalking down to the cafeteria with Trevor for coffee she was dying to hear what he had to tell her. As soon as the elevator doors closed he turned to her. \n\n\"You ready for this?\" Trevor asked with a broad smile. \n\n\"Yes,\" she smiled, smiling because he was. \n\n\"Mom, Aunt Brandy and Grandma had back pew designation Wednesday night!\" Trevor announced happily. \n\n\"No shit,\" Alex gasped. \n\n\"You know what that means?\" Trevor asked her. \n\n\"I grew up in that church, I know that is not a good thing!\" Alex nodded. \n\n\"I know I shouldn't be happy about it,\" Trevor frowned. \n\n\"I know the feeling,\" Alex agreed. \"Aren't you relegated to the back as well?\" \n\n\"No,\" Trevor grinned. \"I usually sit with my friends elsewhere...we are counting the days until we pull our Alexandria.\" \n\n\"Your what?\" Alex asked. \n\n\"Our Alexandria,\" he smiled sheepishly. \n\n\"Explain,\" she demanded. \n\n\"You are a legend in our church,\" Trevor shrugged. \n\n\"What?\" she scoffed. \n\n\"Yeah,\" he nodded. \"Our parents have told the cautionary tale of how you went to Chicago and fell in bed with the devil!\" Trevor waved his hands in showmanship fashion. \"The only problem with that is, I've been bragging on the fact you found a great guy, have made tons of money selling your art and did a mural that the entire world was blown away by!\" \n\n\"Ginny,\" he smiled. \"That's my girl, she even went online and printed out pictures of you standing by your mural from an online paper...we then stuck them in every hymnal!\" \n\n\"Oh man you should have seen all the faces on everybody when they opened their hymnals to sing and found you staring back at them! The so called devil's puppet from Chicago!\" Trevor laughed. \"Worth every minute of punishment they hit us with when they found out we were involved.\" \n\n\"What happened?\" Alex asked, shocked that her nephew had gone through with the practical joke. Not so shocked they were punished for it. \n\n\"We had to clean the church for like two weeks,\" he shrugged. \"Just gave us more time to plot our next act of rebellion!\" \n\n\"Oh man,\" she shook her head. \"I've inspired monsters! Funny as hell monsters, but monsters nonetheless.\" \n\n\"We like to be called your minions,\" he corrected. \n\n\"My minions!\" she laughed. \"How did your mom respond to being banished to the back row?\" \n\n\"Oh man,\" he shook his head. \"She was humiliated! Ducked out of church right after service, ranted and raved like a clucking chicken at home! I bet she starts to shun grandma next!\" \n\nAlex looked to the floor. She thought of how her mother must feel. To have her idea of what was her rock crumble under her like sand in an on rushing tidal wave. What would her mother do now? How would she handle the new banishment to the back? A small part of her felt sorry for her mother. To have something you believed in ripped from you was a hard thing to handle. She knew this because she had her mother ripped from her by Rev. Sellers' beliefs. \n\n*** \n\n\"Good morning Jack,\" the priest called out to him. \n\n\"Morning Sy,\" Jack said not taking his eyes off the pond. \n\n\"Nice out here this morning,\" Sybian said to him. \n\n\"It is,\" Jack agreed with a nod, but still not looking at the psychiatrist. \n\n\"How did you sleep?\" Sy asked him. \n\nJack shrugged and shook his head. Sleep? He wasn't sleeping, if he slept he had dreams about her. Dreams no priest should have. At least if he was awake she would keep her clothes on. \n\n\"You know, you are only hurting yourself here, I could prescribe something,\" Sy offered. \n\n\"No, no pills,\" Jack said firmly. \n\n\"Alright,\" Sy shrugged. \"So, are your dreams still sexual in nature?\" Jack nodded. It took a few therapy sessions before he finally admitted to Sy the nature of his dreams. It took a few sessions more to reveal his feelings for Livy. \n\n\"I should just drop the collar,\" Jack told him. \n\n\"Let's not go there just yet,\" Sy suggested softly. \n\n\"Sy,\" Jack said gasping in disbelief. \"I'm having dreams of a woman that...I shouldn't be thinking of her that way!\" \n\n\"Love is a curious thing,\" Sy shrugged. \n\n\"Love?\" Jack asked. \n\n\"Jack,\" Sy exhaled deeply. \"You fell in love, that is not a crime...its most definitely not a sin!\" \n\n\"I'm a priest...I'm her...I was her priest,\" he pointed out sharply, correcting himself in mid-sentence. \"I made a promise to God!\" \n\n\"A promise you could have kept,\" Sy suggested with an upward shrug of his shoulders. \n\n\"How do you figure that?\" Jack snapped, his lack of sleep making him edgy and irritable. \"I took a vow of celibacy!\" \n\n\"Jack, you were called to God, but that doesn't mean you have to serve him in a priestly capacity! You could have stayed with the church, married Livy and still maintained your calling,\" the man told him. \"Our Father called you to do His work, He didn't say 'Jack become a priest!'\" Sy smiled as he dropped his voice to a deep baritone for the last part. Jack shook his head. He wished he could smile. \n\n\"How do you figure?\" \n\n\"You could have done marriage counseling, it would have been beneficial to you to have a priest background but be able relate to them as a married man,\" Sy pointed out. \n\nJack sat back and thought hard on that. \n\n\"You received a call to serve God,\" Sy said standing up. \"How you serve Him, is what you have to work out. That may mean giving up the collar, it may not. But one way or another, God will tell you what He wants you to do.\" \n\n\"What if He isn't listening to me anymore?\" Jack asked him. \n\n\"He listens to all the prayers,\" Sy said calmly. \"But you know, as well as I do, sometimes the answer is no.\" \n\nJack leaned forward and put his face in his hands. That's the problem, He said 'no' to the one prayer he wanted more than anything. The prayer to save her life. To keep her in this world. Not only for Nora, but for him as well. \n\nThe soft scent of her perfume wafted around him and he looked up to see her by the pond, squatting to look at the baby ducks there. She looked over at him and gave him a half smile. He smiled back at her and she blew him a kiss from the ends of her fingers. \n\n\"Livy,\" he said to her as she walked away. \"I miss you so much!\" She looked over her shoulder at him but continued walking until she was nothing more than the soft wisp of the morning fog. \n\n*** \n\n\"Hello you evil Bitch,\" Gavin said lovingly as he kissed her temple. He made his way to the seat next to her at the table. \n\n\"How is Alex doing?\" she asked him immediately pulling her glasses down and setting the newspaper to the side. \n\n\"About like you would expect,\" he told her pouring himself a glass of wine. \n\n\"What kind of answer is that?\" she barked testily. Gavin sighed, he should have known that Madelyn wasn't going to except anything less than a complete answer. \n\n\"She puts on a great front,\" Gavin told her. \"She appears so strong on the outside...but at night, I hear her crying.\" \n\n\"So what are you doing about it?\" she asked. \n\n\"There is no medical cure for a broken heart,\" he told her. \"All I can do is hold her when she lets me, take care of Nora when Alex is crying and keep my shit together.\" \n\n\"I'm so proud of you,\" she smiled taking his hand. \n\n\"Why?\" he asked incredulously. \n\n\"Do you realize how far you have come?\" she asked. He looked at her blankly. \"Sweetheart, you have changed dramatically since the beautiful Miss Alexandria came into our lives!\" \n\n\"How do you figure?\" he asked smiling. \n\n\"For one thing, you're smiling,\" Madelyn pointed out. \n\n\"I smiled before,\" \n\n\"No,\" she disagreed. \"This smile is happiness, the other was a mask to cover your loneliness.\" \n\n\"Get a grip,\" he laughed. \"I've had very little time in between subs to be lonely.\" \n\n\"I don't care if you had a hundred women at the same time,\" she said sharply, showing this wasn't up for debate. \"You were alone until Alexandria.\" \n\nGavin shrugged as he took a sip of his wine. He felt different now, that was for certain. This relationship was different. Not only in the fact he was getting married, but it was the fact he didn't like being away from her. \n\nIt wasn't a possessive need, but one of feeling out of place when he wasn't by her side. If felt like a major piece of him was gone. Like a recent amputee, you feel the appendage there, but it's not. Your eyes look, but can't come to grips with the fact it's not there and you feel a little lost and dismayed. \n\n\"When are you going back?\" she asked him. \n\n\"Not soon enough!\" he lamented. \"I have a couple appointments in the morning, then I will head back after that.\" \n\n\"Do you want the jet?\" she asked. \n\n\"No,\" he told her. \"I'm taking the Aston back, that way I can stop flying back and forth.\" \n\n\"You could use the jet, then you wouldn't have to fly into Pittsburgh all the time, you could fly into Averin, it's closer and Alex won't have to drive as far,\" Madelyn suggested. \n\n\"It's an idea,\" he said with furrowed brow. He rubbed his face with a tired hand. \n\n\"Looks like you could use a good night's sleep,\" Madelyn pointed out. \n\n\"Sleep? What's that?\" Gavin teased. \"I'm fine.\" \n\n\"Still thinking you are Superman?\" Madelyn asked with a shake of her head. \n\n\"No, I'm SuperDom!\" Gavin joked. \n\nThey began eating and Madelyn watched him, his whole demeanor was exhausted. His eyes heavy, his body not a sharp, his shoulders slightly slouched forward. His forearms resting on the edge of the table. Everything about him screamed exhaustion. \n\n\"Charles?\" Madelyn said when he came in. \"Make sure Gavin's room is ready, he will be staying here tonight.\" \n\n\"I will?\" Gavin asked with a slight uptick smile. \n\n\"This way I can have you for breakfast too,\" she smiled. \"No sense in wasting time driving into town.\" \n\nGavin knew better than to argue with her. Not with the tone she was using. It was demanding and forceful, something he had grown accustomed to over the years. The motherly way she doted on him, always watching out for him. \n\n\"How are you adjusting to the idea of having a child in your condo?\" she asked him. \n\n\"Again, I know nothing of kids,\" Gavin prefaced. \"So I don't know what to expect. I'd like to prepare...but I don't have the first damn clue.\" \n\n\"And seeing how you are a man that likes to have everything planned out, how are you handling that?\" she laughed. \n\n\"Not well,\" he admitted. \"Still wondering how we handle our lifestyle with a child.\" \n\n\"I don't think it will interfere that much,\" Madelyn told him. \n\n\"Yeah?\" Gavin coughed out. \"She was at our place over the holidays...it was hard to do anything. She interrupted an extremely passionate moment at least once. It was hard to keep things on the down low.\" \n\n\"How?\" \n\n\"We thought she was going to walk in on us,\" Gavin explained. \n\n\"That is why they make locks!\" Madelyn laughed. \n\n\"I know,\" he laughed with her. \"But sessions take time, you know that.\" \n\n\"During the day?\" Madelyn half suggested. \"While she is at school?\" \n\n\"Sure,\" he agreed sitting back and crossing his arms across his chest. \"Let's have a schedule for it, hey Beautiful, I have time between 9:15 and 10:45...,\" Gavin shook his head as he mocked talking to Alex to the side. \n\n\"It doesn't have to be like that!\" Madelyn told him with a laugh. \n\n\"No...but it does kind of kill some of the spontaneity. It means that I can't have her when the mood strikes. I will have to factor Nora in everything now,\" Gavin shrugged. \"Again, I don't like to share...and I'm going to have to share.\" \n\n\"I like the fact that Alex and I can just go when the mood strikes us,\" Gavin sighed. \"I like the idea of not having plan out babysitters and Nora if I want to take Alex on an island getaway again,\" Gavin told her. \"I know its selfish...but our life is going to change...maybe for the better but it's still change and you know how well I like that!\" \n\n\"So what are you going to do?\" she asked him. \n\n\"What choice do I have?\" Gavin fired back. \"I have to adapt.\" \n\n\"You don't have to,\" Madelyn smiled knowing better. \n\n\"The other choice is losing Alex,\" Gavin replied anyway. \"And that is completely unacceptable.\" \n\n\"The father?\" \n\n\"Unacceptable,\" Gavin told her firmly. \n\n\"Why don't you just admit it,\" Madelyn told him. She knew what was really bothering him, but she had to pull it out of him. If he didn't admit it to himself, it would fester and not be addressed. \n\n\"Ok,\" he griped dropping his fork. \"I know I'm a selfish prick for saying this but, I know deep down, if she had to choose...she would choose Nora over me.\" \n\n\"What?\" \n\n\"If I would have said, I don't want Nora or even if I suggested we think about not taking Nora...I would lose Alex,\" Gavin told her. \"As a Dom I have been accustomed to having been the one in control...with Nora, I lost some.\" \n\nMadelyn sat there looking over her glass at him. \n\n\"I know, I'm a fucking selfish prick,\" he admitted aloud. \n\n\"No,\" she disagreed. \"Just interesting. I've not seen you out of your element before. Never seen you uncomfortable.\" \n\n\"Not very flattering is it?\" Gavin admonished himself. \n\n\"I don't now...I'm not in your shoes, I don't know how I would react to being pushed to the back a little with a child,\" she told him. \"As women we have a biological and a psychological need for children.\" She went back to her dinner. \n\n\"I've just never had to look at it from a man's point of view,\" she admitted. \"How does a husband, who is used to having his wife all to himself, handle the fact her attention is now going to be split in between them and probably, whether she wants to or not, it will not be split evenly but favor the child?\" \n\n\"And rightfully so,\" Gavin admitted. \n\n\"I imagine it's also tougher with the fact that the child isn't yours,\" Madelyn shrugged. \"I mean Alex has a biological link...even though it's as an aunt. You have no vested interest.\" \n\n\"I have Alex, which means I'm fully vested,\" Gavin corrected not liking the tone of the conversation anymore. \n\n\"Not the same,\" she told him. \"Have you mentioned any of this to Alexandria?\" \n\n\"Not the time for that,\" Gavin told her. \"First I have to decide if it is going to be a problem. If I can't adjust.\" \n\n\"Time is a luxury a parent doesn't have,\" Madelyn pointed out. \"Time to leap.\" \n\n\"Fuck,\" Gavin growled as he returned to eating. \n\n*** \n\nSunday came, Marylyn was anxious as to how this day was going to go. She walked up the steps nervously and pulled open the door. Rev. Sellers was talking to a just arrived group of parishioners. She waited in line, when one of them turned and saw her behind them they tilted their head for the other's to go. It was as if she was a leper now, people uncomfortable just being in her vicinity. \n\n\"Good morning Marylyn,\" Sellers said with a smile as she moved up. \n\n\"Rev. Sellers,\" she smiled her best smile trying to hide the pain she was feeling. \n\nShe looked into the sanctuary and saw Krista and Brandy back in their normal seats near the front. She smiled. She was right, it was just a one-time thing. She then saw the group that was standing in front of her sit down in the same pew as her daughters, taking up her spot. \n\n\"I'm glad I have a moment to talk to you!\" Sellers smiled taking her hand in his and leading her into the sanctuary. \"Oh my, it looks like your pew is full! Oh well, this is open,\" he said as he sat with her. In the back pew. Her heart was crushed by this. \n\n\"Any seat in the House of God is a good seat,\" he winked at her. \n\nShe knew this to be a downright lie! He had once given sermon deriding those who sat in the back of church as 'hiding from God'. So she knew that was a line to make her feel better. A mask of the true intention of this spot...banishment. What hurt the most was that her daughters didn't protest that she needed a spot in which to sit. They allowed the group to take her spot without so much as a whisper of a protest. \n\n\"I was wondering if you had a chance to think about what we talked about on Wednesday?\" he asked her. She knew he was talking about the money. This smacked her across the face harder than physical slap Alex had done in the hospital. \n\nHe didn't ask her about how she was doing. He didn't ask her about Al, or how they were doing with their sorrow of losing Livy. He didn't ask if she was needing anything! The only thing he brought up, was the money. \n\n\"I really haven't had the chance,\" Marylyn lied, trying to keep her tears at bay. \"With Al's surgery and extended hospital stay...I'm sure money will be tight.\" \n\n\"Don't you have insurance for that?\" Sellers asked her. \n\n\"Yes,\" she told him. \"But it doesn't cover everything. Let me talk to Al, I'm sure I can do something that will make amends.\" \n\n\"Good, good, good!\" Sellers smiled. \n\nHe got up and left her in the back pew. She looked around the church and saw everybody was looking straight ahead, none looking around. Her eyes landed on Trevor and he looked to her. She smiled at him, a mask against the tears. Trevor looked away and she looked down. ",
        "Trevor scanned the church, he saw his mother and father in their normal spot, but now his grandmother's spot was occupied by other people. The shunning begins, he thought to himself. This angered him, his parents hadn't learned a damn thing he barked inwardly. He dropped his head and shook it angrily. \n\nMarylyn sat there, silently clutching her bible. The one time salvation held within the church now lay beyond her reach. Now she felt what Livy had felt. The isolation, the desolation of solitude. She remembered Al's harsh words about how the church shunned Livy, but what was worse was the people she absolutely should have been able to count on, her family, shunned her as well. She felt her heart break with the knowledge that was now happening to her. \n\nNow she began to fathom what Livy had felt. Now she felt what drove her to her end. It was that empty feeling she now had in her stomach. Utter loneliness. Standing alone in a crowd of uncaring, unfeeling, self-righteousness. The tears were unstoppable. \n\nA strong hand softly picked hers up and held it. She looked up and found Trevor sitting next to her, a young girl next to him. Marylyn blinked back her tears as she looked to him. He winked at her as the sermon began. Marylyn felt the warmth of salvation, she was saved at the last minute by love. The tears flowed and Trevor wrapped his arm around her and pulled her in to hide the tears from the rest of the church. He felt they didn't deserve to see her at her lowest moment. \n\nShe did not hear a word of the sermon, the voice of Rev. Sellers she listened to so intently for a near lifetime of Sundays now a soft drone. A fly buzzing in her ear. She didn't realize the sermon was over until Trevor stood, then the sounds came back. \n\n\"You ok Grandma?\" Trevor asked her. She took him in an embrace and held him tightly and he reciprocated. \n\n\"Thank you Trevor,\" she whispered in his ear. \n\n\"For what?\" \n\n\"A lesson I needed to be taught!\" she smiled as she leaned back and smiled at him, softly touching his face. \"Now, who is this very pretty girl you have?\" Trevor looked at her for a second processing what she just said. He smiled. \n\n\"This is Ginny,\" he smiled. \"My girlfriend.\" \n\nGinny looked to him surprised he said it to his grandmother who everyone knew was against young people dating. She had heard the woman rant and belittle those who allowed their children to date without the parent's direct approval. She also knew this woman set up her daughters with their husbands. All but the 'Legend' anyway. \n\n\"Hello Ginny,\" she smiled as a tear came down her face. Her body warming. \"You have picked a good one! Not many men in this building are as good a man as my grandson.\" \n\n\"I know,\" Ginny agreed apprehensively. Waiting for the reprimand, the fire to explode from the holier than thou Marylyn Lasko. \n\n\"Well,\" Marylyn smiled touching Trevor's cheek again. \"I should go.\" She turned to leave. \n\n\"Grandma?\" Trevor stopped her. She smiled. \n\n\"It's really quite exceptional,\" she interrupted him causing him to tilt his head at her. \n\n\"What is?\" he asked her. \n\n\"Love, you two treasure it,\" Marylyn nodded. \"I love you Trevor.\" \n\n\"I love you too Grandma,\" he choked out. Ginny put her hand in his and squeezed. \n\n\"You take care of my grandson, he is precious,\" she said to Ginny. \"And worthy of a great girl...I can see great things in him. Things I need to learn.\" With that she spun away to hide the tears from the rest of the church. Tears they didn't deserve. \n\n*** \n\nAlex carried Nora up from the car, the small girl snoring softly against her, her gentle breath warming the side of her neck. She laid her new charge gently in the bed and carefully took her shoes off of her. Alex then sat on the edge of the bed and watched the young girl sleep, it seemed to relax Alex watching the girl. \n\nSlight movement from the corner of her eye caused her to turn quickly towards the door. The smile broadened on her face as she saw him there. \n\n\"I thought you were coming up tomorrow?\" she said softly. \n\n\"I know,\" he replied. \"I couldn't stand the idea of going to bed alone again. I guess you have spoiled me.\" \n\nShe got up and made her way to him and gently kissed his lips. Softly at first, then harder as the sudden passion exploded within them. She pushed him from the room and he spun her and pinned her against the wall. He took hold of her hands and slid them up until they were above her head as he began a long, slow nibbling of her. Starting with her lips, moving down from there. \n\nDown her cheek to her jaw line, his teeth gently nipping her flesh. Her eyes fluttered closed as he did this, the embers that she had forgotten about in all this sadness erupted like a fading fire that someone threw gasoline on. \n\nShe tried to drop her hands to him but his grip tightened when she tried to free herself from his hands that held hers above them. She smiled, the Dom she so needed was here. Lost was the helpless feelings she had been enduring. Livy's death, her father's heart attack, her mother's shunning, all moved to the background. Now that she was within the safety of her Dom's vicinity, she was free. Free to be without decision. Free to respond with whatever he evoked from her. \n\nNo more worry, now only response. Response to his lips on her mouth, her tongue dancing and twirling without confinement of heartache. Response to his hands, the one that pinned her to the wall, the other that was softly running his fingers across her body causing it to ripple with pleasure. \n\nGently he slid into the top of her panties, pulling her underwear gently from her body as he slid beneath them like they were a hot sheet. His fingers going maddeningly slow across the soft flesh of her Venus. His fingers gently finding her heat and rubbing the outside. But what she wanted was him on the inside. She hadn't realized how neglected they had been, but now, with his hands on her, she realized just how much she was missing. \n\nGavin dropped down suddenly, releasing her hands but she held them there knowing that's exactly where he wanted them! He yanked suddenly on her panties ripping them from her body causing her to yelp as the flash of pain ripped through her as easily as her panties were ripped from her. He tossed them aside, and she realized, the wolf had come from Chicago. \n\nHe wasn't gentle. His mouth devoured her like he hadn't eaten in days. His mouth everywhere at once. His tongue pushing and prodding. Forcing little gasps of pleasure with each jab of his tongue. He let one hand climb up her body to squeeze her mound of flesh, he held one and it served a dual purpose, the first was the pleasure it evoked as he held her firm breast within its grasp while his thumb and forefinger pinched her nipple through the thin lace of her bra. \n\nThe second was the control he had over her with it. He had her pressed against the wall with his grip, her mouth opening slightly as he continued his assault on her sex with his mouth. His talented tongue working her as only he could. Her mouth opening wider and wider as her body responded to him. \n\nHe stood up suddenly and covered her widening mouth with his, before she even realized he had left her dripping sex. Her hands dropped to the back of his head as he kissed her so hard she thought they would meld into one. \n\nHis hands wrapped into her hair and snapped her head back with a sudden yank. \n\n\"No,\" he commanded, his eyes flashing at her. \n\nShe instantly put her hands back up above her head, her hands now bound by invisible rope. Her smile faded into a passionate gasp when his teeth began to bite and suckle her neck. Causing her flesh to redden under the semi-hard biting. \n\nHe pulled off of her and looked her in the eye before drifting over her face and down to her neck to see the effects he was having on her. Her rapid breath, her hardening nipples. The red marks from his mouth. The lips of her mouth slightly puffed from his hunger. His hand came up and took her gently by the throat, what was once a menacing gesture to her, was now a cocoon of safety. Like a wolf pup safely within the sharp jaws of its mother. Fierce and protective when they had to be, soft and loving when needed. \n\nHe pulled her gently from the wall, her hands moved behind her without being told, either by him...or her. He led her to the bedroom, pushing her backward as he followed her. Their eyes never leaving each other. Her eyes finding what she so wanted...no what she needed she decided. \n\nThe back of her legs hit the edge of the bed and they both stopped. Still staring at each other she never felt so desirable. It was the way his eyes took her in, like looking at her was a command he couldn't resist. \n\nWith one hand still around her throat, his other hand came up and cupped her face, his thumb resting on her lips, dragging across them as she parted them slightly. His thumb dipped into her open mouth and she nipped it gently. Pulling a smile from his concentration. She couldn't stop her own wicked little smile from coming out. \n\nHe ran his index finger down her chin and his hand on her throat moved to the side as they began to work in a concerted effort of immense pleasure. His thumbs joined as he ran them down and carefully gripped her around the center of her throat. Her eyes told him all he wanted to know, no fear in them. Trust built on love. \n\nHis hands moved from their hostile position, down they went, his thumbs breaking at the notch at the base of her throat. His fingers touching her molten skin covering her heart that was beating like a jackhammer in her chest. His eyes left hers as he watched his hands touch the most beautiful thing they have ever had the honor to feel. \n\nAround the edges of her dress lapels that folded over one another forming a \"V\" that connected to a row of buttons that went all the way down to her belt line. The left side of his smile ticked up sinisterly and she smiled when she recognized it. Oh yes, the wolf was here! \n\nWith a sudden show of strength and speed that surprised her, the buttons of her dress exploded off their threaded binds as he ripped them apart with his hands. The shiny bits of plastic showering into the darkness of her old room, the only remnants of them was the sound of them hitting the wood of the floor with a rattle. \n\nHis eyes lifted from his destruction of her dress to her eyes and found her biting her lip. \n\n\"That's mine,\" he reminded her in a near snarl, she released her lip just in time for him to crush them with his mouth. With a gentle suckle he pulled the lip from its position against her teeth. His eyes never broke from hers. He let it go and it snapped back into place. \n\nHis hands began to rub her newly available flesh, running his fingers up to her shoulders pushing the destroyed front of her dress off her so that the tattered material hung just above her elbows. Now she could only watch, now she was no longer a participant in this sexual conquest, but a voyeur in the scene. Unable to stop him, not that she wanted to. \n\nShe watched his eyes inspect her flesh, the uptick at the corners of his lips told her all she needed to know. He was pleased. His hand went flat against her hot skin in an attempt to touch more of her, his fingers sliding gently under her shoulder strap of her bra, he pushed it off her shoulder. First one, then the other, until they too were draped around her elbows. His hand slid under her breasts and pulled them from her lacy enclosure. \n\nHe was on it instantly, like a cat pouncing on a mouse. The suddenness causing her to gasp audibly. His teeth snapping on her passion hardened nipple. As he pressed into her she dropped her head back and her back began to arch, leaning back as he marked her sensitive flesh with his suckling. A good girl mark before they even got going! \n\nHer hands came up to help her balance as the pressure he was placing on her had her bent backwards enough she felt like she was going to fall away from him, and away from him was the last thing she wanted right now. \n\nHe eased back slightly pulling her nipple with him causing her to clamp her lips shut to keep from yelping. He released the swollen nipple at the apex of her elasticity. \n\n\"No,\" he said firmly, his voice borderline harsh. \n\nHis hands pushed hers from his body and behind her where they were locked in a steely grip. He easily held her wrists within one of his strong hands. His other came up and continued to explore her. Pinching one nipple, twisting it clockwise until she could stand the sharp pain no longer and right before she cried out he released it, flooding the sensitive piece of pleasured skin with blood once again. \n\nHe repeated the procedure with the other nipple, his wolfish smile out for her to see his pleasure. Enjoying the torment of her delicious flesh, her passion. Enjoying his passion on her. With a subtle growl he devoured her nipple again, sucking it forcefully as his free hand squeezed the soft mound around it, holding her firm breast tightly and squeezing so hard the pain brought her pleasure. \n\nSuddenly he was fully on her, she hadn't even realized she had flopped onto the bed, her head spinning in the heat of the moment, her hands pinned beneath her. Now the wolf of her love had both hands free to play with her. She arched her head back as he began to devour her other breast. One hand squeezing it as the other had done before. \n\nNow his free hand plunged without notice or concern for her comfort into her sex, causing the sudden flush of heat to explode within her body as his fingers ripped into her deeply. His strong hand gripping her sex as he plunged his long fingers into her repeatedly. With his weight on her she couldn't arch but that didn't stop her body from trying, pressing tightly into the heat of his body. \n\nHis fingers continued plunging into her like a piston on a race car engine, fast and hard. His palm slapping her clit with such a force that the sound filled the room. Her body responded quickly, a clear sign they had neglected one another. Her rapid response had her holding her breath. \n\n\"May I cum Sir?\" she asked, remembering at the last minute. \n\n\"Absolutely not!\" he growled while her flesh was still in his mouth. \n\nThe vibrations of his voice rippling across her nipple. Whimpering escaped from her as he not only continued his rapid plunging into her soft wet sex, he increased his speed and his depth, daring her to disobey. She twisted her head to the side and bit into the covers there, her teeth gnashing on the soft comforter. \n\n\"Please sir?\" she begged. She was met with silence. Not the answer she was looking for. Her teeth grinded on each other, the comforter trapped in between. \n\n\"Please?\" \n\n\"No,\" his voice was shaking. Very unusual she knew. The calm gone, now it was replaced by the shaking passion of the moment. \n\nHe slid from the bed, and stood between her legs, slowly pulling his soaking fingers from deep within her. She was finally able to release the soaked comforter from her mouth. He slid his arms under her thighs, his fingers hooking the top of her hips as he yanked her closer to the edge of the bed. \n\nLifting her legs up and over his shoulders he wasted no time in burying his face into her, tasting the sweet nectar only Alexandria could produce. He lifted her bottom half off the bed, leaving only her shoulders and head on it, her neck bent forward forcing her chin into her chest as her breasts followed gravity and dropped towards her face. \n\nHe pulled her body to him, like he was holding her tightly within a passionate kiss, only this kiss was inverted. Her ass against his chest, her legs around his head, his face and talented tongue deep within her egresses. Her face reddening as he attacked her with a ferocity he only allowed himself on rare occasion. \n\nSoon she was cresting again, his arms tightening around her like a python around its prey, squeezing her tightly to him so he could devour her from the inside out. \n\n\"Please Sir?\" she pleaded. She felt like she was the only one stopping a cattle stampede. Her orgasm was coming and she was doing her damndest to keep it from happening but she knew that the neglect, coupled with the passion meant that stopping it was going to be an impossibility. \n\nAgain he said nothing, instead growling as he continued to rip her sex apart with his tongue. Pulling her hard into his mouth with his lips and suction. His arms adjusting but pulling her back tightly to him. \n\n\"OH MY GOD! PLEASE SIR?\" She begged. \n\n\"Don't you fucking do it,\" he commanded, making her cry out into the comforter. His assault on her tasty hot lips never wavering. Her body shaking as she found the euphoria of her orgasm. It started in her toes, moving to her calves, causing them to tighten around his back. Her thighs were next, squeezing around his head until her thighs muffled the sounds around him. \n\nHe felt her stomach harden to a rock as she fought her orgasm, causing him to snicker within her. He watched her hands twist into the covers as she wrapped them over and over trying to keep the inevitable from exploding without permission. \n\n\"Fuck, fuck, FUUUCCCKKK!\" She gritted though her stuffed mouth. \n\n\"NO,\" he growled. \n\nThe next sound was a soft scream into the covers, one of blissful frustration. His sinister side enjoying the torment. Her mind was splitting, part of her was screaming to continue to fight it off, the other screaming to fucking forget it and turn it loose. Consequences be damned! \n\n\"Now,\" he barked. \"Cum for me!\" Within seconds she filled his mouth and coated his face with a powerful orgasm that had her reeling to catch up with it. The trickle of the massive orgasm remnants dribbled down her pelvis to her stomach in a warm sticky stream. \n\nAll of her muscles released at once, making her body jelly like. She could no longer feel her legs, but Gavin didn't slow his assault on her. Once she released the chewing of the comforter he dropped her legs from him and flipped her over causing her to grunt at the force. \n\nHe yanked her back to where he wanted her positioned, her hips bending at the edge of the bed. Her legs dangling helplessly. She was too exhausted to look back, but she heard his clothing quickly being ripped from his body. The buttons from his shirt joining hers in the darkness. It caused her to smile wickedly herself. The controlled, so out of control. \n\nHer hands slid back over the bed and back over her ass, pulling herself open, inviting him to choose his destination. She hoped for the taboo, and only fleetingly worried about their lack of lube. At this point she didn't care, she wanted his release to equal hers and the one place she knew that would happen for sure, was deep within her ass. \n\nShe chanced a look back at him and found he had gripped his rock hard shaft in his hand and was staring at her. His eyes one of debate. She silently pulled for the wolf. \n\nShe was only minutely disappointed when his cock plowed into her pussy causing her to scream out into the bed. The massive steely feel of him deep within her caused her body to respond with a sudden burgeoning of another powerful wave of an orgasm. This one a Poseidon sinker, daring to flip her orgasm over and over. Releasing it, never to be reined in again. \n\nHis hands gripped her hair as he twisted it within his fingers, pulling her head to the side but he couldn't kiss her lips because they were still holding the comforter tightly between them to keep from letting the passion she was feeling fill her childhood bedroom with the sounds of her pleasure. \n\nSo he bit and suckled her available flesh, reveling in the soft salty taste of her skin. The force of his thrust causing them both to grunt at the power. His hips unmercifully pounding her ass cheeks, the grinding of his cock deep within her brought a sharp pain momentarily at the depth in which he was reaching. ",
        "It left as quickly as it came, only to return when he buried his cock head deep within her. She couldn't remember the last time she had felt him this deep...was it that night in the Drake Hotel? Not since then had he been this out of control. She reveled in it. \n\nWith a sudden fury of driving hips she rocket to her next orgasm, her hips lifting when they could to grind up into him. With a sharp quick painful thrust he buried deep within her as his teeth marked her again on her back as she felt his cock erupt within her depths. The soft jerk of his cock not waning after three or four shots, but continuing, flooding her with his seed. The hot liquid filling her with a feeling of elation and satisfaction as he collapsed on top of her. His full weight on her. \n\nShe released the bedspread from her teeth. \n\n\"Thank you, Sir,\" she whispered. \"I needed that.\" \n\n\"All I needed and all I will ever need...is you,\" he whispered in her ear. \n\n***"
    ],
    "authorname": "CJT",
    "tags": [
        "oral",
        "edging",
        "rough",
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/secret-smiles-and-three-little-words-pt-40"
}