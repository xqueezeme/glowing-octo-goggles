{
    "title": "The Torch Singer Ch. 03",
    "pages": [
        "Thanks for all the nice comments, my lovelies. It warms my heart (and other things, if I'm being honest).\n\nOn with the show...\n\n*** **\n\n\"THE CLIMAX CYCLE\"\n\n[The delivery of an emphatic point \u2013 the emotional pinnacle of a musical phrase. Some say it is what transforms mechanical performance into art.]\n\nFrankie and Jake waited (impatient though they were on the inside) for a few passengers to clear the elevator before stepping in. Several hipsters who appeared to be together crowded in with them. They were rather intoxicated, talking to each other loudly and taking up more space than needed. \n\nJake swiped his card key and pressed the Penthouse button, and then moved to the back wall and yanked Frankie with him. One arm coiled around her waist to press her against him. She felt his growing erection pressing into her ass, and then stifled a gasp as his other hand slipped up under her dress from behind to play with the edge of her panties, his fingertips moving underneath the fabric.\n\nFrankie's face was flushed scarlet, and she was having trouble breathing normally. If the people around them hadn't been so drunk, they'd have definitely seen what was going on. \n\nMercifully, the noisy crowd arrived at their floor and exited, calling out a friendly goodnight as they stumbled to the left. \n\nAs the doors glided closed, Jake spun Frankie around and pressed her to the wall, his mouth coming down hard on hers. Frankie made a moaning sound as she submitted completely, winding her arms around his neck. His hips ground into hers, his cock spearing her through their clothes. Jake growled as Frankie surged toward him and sank her teeth hard into his bottom lip. He snarled and pushed her, slamming her back against the wall. Her chest was heaving as she glared heatedly up at him, desire burning in her eyes. He wrapped a hand around her neck \u2013 and though it could have been an aggressive move, his touch was light. Instead of being intimidating, it was wholly erotic. \n\nBreathing heavily, they looked at one another. Frankie's head was tipped back, her lips were moist and parted. This was the Jake she'd always dreamed about, and yet he was somehow more so. She had no idea what he was thinking or what he was going to do \u2013 unlike with her fantasies. The lack of control was deeply thrilling. She wondered if he was experiencing anything like this, too. \n\nSlowly, he brought his face down closer and brushed his lips across hers. The tension in both of them was palpable \u2013 they were barely containing a violent passion. \n\nThe elevator chimed, indicating they'd reached the Penthouse. Jake released her neck and stepped back, waiting for Frankie to exit the elevator first. The sound of percussion from the rooftop nightclub could be heard faintly as Jake tugged her by the hand down the corridor to his room. \n\nHe released her as they reached his room. Looking at her in an outright challenge, he used the keycard to open the door. He pushed the door inward, indicating she should enter. Frankie could see how fragile a hold he had on himself. She bit her lip and gave him a beguiling smile, then suddenly dashed by him and into the room before he could catch her. Jake swore violently as he entered, stopping to lock and secure the door's \"do not disturb\" notice. \n\nShe ran into the living room of the suite, and stopped in awe at the view. None of the lights were on, so the floor-to-ceiling windows showed the black mirror of the Hudson River and the twinkling lights of New Jersey on the other side. The moon was full and the stars glittered in a navy blue sky. She felt, rather than heard him come up behind her. Not actually touching her, his body \u2013 his presence \u2013 surrounded her. He was barely an inch away. Frankie forced herself to stay still, even though the need to rock backwards into him was like a physical ache. \n\n\"Frankie.\" His voice was low and sexual. Downright dangerous. \"Do you want to know what I'm going to do to you?\" His lips were so close to her ear, his breath made the fine down of her skin flutter. She shivered, her heart pounding.\n\n\"Tell me.\" She whispered. Goosebumps rose, the tiny hairs standing up on end electrically. She could barely take in enough air.\n\n\"I'm going to take you to my bed, remove that delicious little dress, those soaking wet panties, and I'm going to taste every square inch of you.\" She shivered, and in her belly she felt as if she'd just accelerated down a roller coaster. \n\n\"What else?\" She asked, tremulously.\n\n\"Then, I'm going to feast on your luscious, hot little pussy. I'm going to make you cum with my mouth, and these two fingers...\" He lightly teased her lips with the index and middle finger of his right hand. Frankie didn't resist him when he slipped them into her mouth. Instead, she closed her lips and sucked them in further, playing her tongue over the tips. He breathed in through his teeth, his other hand flattening against her abdomen as he gently pulled her back against him. His mouth lightly caressed the side of her neck.\n\nFrankie took the hand on her belly and coaxed it up her body until he was cupping one taught breast. He made a growling noise that caused a vibration in her skin. She sighed excitedly when he began to tweak and pinch her straining nipple. Before she even realized he was moving, the fingers that had been in her mouth were now inside her panties, drawing little circles around her hard little bud. She cried out at the sudden, shocking pleasure of it. His mouth was back at her ear, making a tiny bit of suction that caused her knees to weaken. He began to speak again:\n\n\"After I've made you cum \u2013 made you scream as you orgasm \u2013 then I'm going to fuck you, Frankie. I'm going to put my hard cock inside you again and again, my Angel. We're going to fuck in as many positions as I can think of until I feel you clamp down on me and cum again.\"\n\nA tiny sob escaped her. She was now grinding back into his rock-hard shaft. She was pressing his hand even harder into her wet sex. \"Please, Jake...\" she moaned. She had no idea what she was begging for, all she knew was that she was wracked with need.\n\nIn one swift movement, Jake scooped her into his arms and swept her off into the bedroom. Being carried by him was an exhilarating rush \u2013 it made her dizzy. It made her feel safe and in danger at the same time. The moonlight gave Frankie a glimpse of a big white bed and an obscenely large soaking tub by another wall of windows. He threw her on the bed none too gently. She cried out in arousal. He was on her in a second, straddling her legs, holding her down, as he impatiently began to remove her dress. \n\n\"Help me Frankie or I swear to god I'll rip it off.\" She made a noise that was part laugh, part moan. Her shaking hands fumbled as she worked open the tiny buttons. Jake helped her pull the dress up and over her head. He froze for a moment as he looked down at her, the white glow of her hair looking like a halo in the moonlight. Her pale, smooth skin looked like satin. Her bra and panties were not much more than a few triangles of pale lace \u2013 he couldn't really tell what color they were in the darkness. He was almost overcome at the sight of her beneath him. How many times had he envisioned this moment? Jake had to keep telling himself that this was real \u2013 that the girl of his dreams was actually here and wanted him as much as he'd always wanted her. \n\nHe leaned down and caught her mouth in slow, sensual kiss. Stretching on his side on the bed next to her, he wrapped her in his arms and made her wild with his kisses. Frankie was frustrated that so much clothing still separated them, and was desperately trying to unbutton his shirt. She fleetingly wondered when he'd removed his jacket, but then immediately forgot it as his bare chest came into contact. She gasped in excitement.\n\nParting his shirt and urgently pushing it off of his body, she ran her hands up his hard muscled arms, over his broad shoulders and down the front of his ripped chest lightly dusted with dark hair. Trailing kisses down his chin, over the front of his throat, she nipped his Adam's apple with her teeth, eliciting a deep groan from Jake. \n\nHer hands moved down along the vee of wiry hair to his belt buckle, deftly unfastening it, then working through the button fly of his jeans. All the while, she was kissing her way down his chest, at last catching one nipple between her lips and sucking it into her hot, moist mouth. He whispered her name over and over as he clasped her against his body. She was driving him mad. His cock was so hard it was almost painful. The fact that she was practically assaulting him in her desire was turning him on beyond every wet dream he'd ever had, and she was much stronger than he expected. The real Frankie was far sexier than he'd ever imagined. \n\nShe kissed her way down his abdomen, teasing his navel with the tip of her tongue. Her hair, soft as corn silk, tickled his skin. Jake laughed, arching his back, and reached for her. She caught his hands and pressed them down on the mattress as she pushed him fully onto his back. She rose up and swung one leg over his body, straddling his thighs. His erection was pushing upward, covered only by his boxer briefs, as Frankie began to tug his jeans down his hips. He felt strangely vulnerable as she looked down at him. Almost as if he'd never had sex before in his life. The desire to please her \u2013 to make this an experience worthy of the years of waiting \u2013 was consuming him. \n\n\"Let's get these things off, shall we?\" Frankie's deep voice was shaky as she shimmied down his body, dragging his jeans along. \n\nHis feet were dangling off the edge of the bed, so she jumped down and yanked off his boots, throwing them behind her with a flourish. She laughed delighted as they landed on the floor with successive thuds. Then she finished removing his jeans and socks. She stopped, standing at the edge of the bed, and her eyes swept over Jake's body \u2013 the glow of the moon and stars outside illuminating his lean, muscled physique. He raised himself up, resting on his elbows. His now large erection was pointing straight up at his navel. He was silent as he watched Frankie's face. His heart thudded in his chest. He'd never felt more naked in his life. The combined look of love, lust and tenderness on her face was something he never wanted to forget.\n\n\"Fuck, Jake. You are a work of art.\" Her melodious voice was low and matter-of-fact. He exhaled impatiently.\n\n\"Come here.\" He commanded, and he lay back down.\n\nFrankie climbed back on the bed and crawled over him. Her lace covered crotch came to rest on top of his hard cock. Her mouth came down on his, and they devoured each other, their tongues doing battle inside her mouth. She ground herself against him and they both groaned in unison. His arms curved up around her and he suddenly rolled them over, his body crushing hers into the soft mattress. \n\nGently, he moved her hair out of the way so he wouldn't pull it. \n\n\"You cut your hair.\" He commented, as he kissed his way along her jawline.\n\n\"Mmm. Years ago.\" She laughed huskily as she murmured her answer, her hands moving up and across his sculpted back muscles. \n\nHe leaned up, looking down at her, smoothing a hand along the side of her face. \n\n\"You have always been the most beautiful thing I've ever seen. And you still are. You take my breath away.\" She closed her eyes for a moment, and then smiled up at him, pulling his head back down to kiss him again. \n\n\"Make love to me, Jake.\" She whispered against his lips. He laughed against her and kissed her more deeply.\n\n\"When do you have to work again?\" He asked. She looked up at him in surprised confusion. \n\nSearching for her wits, she numbly answered. \"Uh... Not until Saturday night.\" A tiny amused frown creased her brow. \"Why?\" She asked bemusedly.\n\n\"Because I don't intend to let you leave this room for the next thirty-six hours, at least.\" He licked and bit his way down her neck as she groaned in pleasure. \n\n\"That's okay by me.\" She sighed as his mouth found one pert nipple through the fabric of her bra. His hands moved under her and deftly unhooked it. Leaning up, he looked down at her as he pulled the garment off her pliant body. Frankie closed her eyes, draping her arm across her face in an unconsciously insecure gesture. Jake was still for a few long moments. She was unaware that she was holding her breath. It was her turn to be vulnerable. \n\nThere was no way she could know this, but Jake's heart nearly burst from his chest with love at this display of genuine humility. 'How can this woman not know how magically beautiful she is?' he wondered. \n\nGazing down at her, he was moved almost to tears at how perfect she appeared to him. Her rose-red nipples were fully erect, and sat high on her small, classically formed breasts. Jake realized with a small epiphany that the real woman far surpassed his imagination.\n\nFinally, he pulled her arm away from her face, pinning it to the bed over her head. Frankie's face was turned toward the windows; she opened her eyes but stared unseeingly toward the night sky.\n\n\"Look at me, Angel.\" He quietly commanded.\n\nFrankie expelled a quivering breath, and very slowly turned to look up at him. A tear glistened in the corner of her eye, and slid down to her temple. He leaned down and kissed it away, and then leaned back up to look down at her, endeavoring to find the right words.\n\n\"Do you understand how perfect you are?\" He asked, his voice was hoarse from passion. She took in a breath that sounded like a tiny sob. Her chest was heaving and her eyes shined with unshed tears. \n\n\"Do\u2014\" her voice broke, she cleared her throat a little. He brushed her hair back, trying to soothe her. \"Do you really think that?\" She asked, her voice barely audible as she fought back the tears threatening to spill over. \n\nHe gave voice to his true thoughts: \"You \u2013 the reality of you \u2013 well, you're far more beautiful than all my fantasies have ever been.\" \n\n\"You've dated super models, prima ballerinas \u2013\" she began. A tiny frown formed between her brows as she spoke the words. Jake began to laugh, and her frown deepened even as the corners of her mouth tugged wide, since his laughter was rather infectious.\n\n\"How is that funny?!\" She demanded, but a touch of laughter was creeping into her voice.\n\nIt took Jake a minute to compose himself, he pressed his face between those perfect breasts as he calmed. She stroked his hair as he lay against her \u2013 loving the feeling of his face against her bare skin. He finally leaned back up, shaking his head at her.\n\n\"Don't you know? Don't you understand what you are \u2013 how staggeringly gorgeous you are?\" Frankie laughed nervously, shaking her head in denial. He cupped her face with one hand to stop the negating gesture and made her look at him. His eyes were intense.\n\n\"Staggeringly, heart-stoppingly beautiful, Frankie. Yes, you are. Inside and out. Why do you think I call you 'Angel'? Because you are the closest thing to a perfect being I've ever seen. It takes my breath away.\"\n\nShe stared up at him, now serious. \"You almost make me believe it.\" She whispered.\n\n\"Believe it.\" He growled, and then reclaimed her mouth in a fierce kiss. She drank him in, winding her arms around his neck, clinging to him for dear life. \n\nAfter kissing her until she was panting for breath, he moved his mouth down her throat, collarbone, the tender space between her breasts, and then at long last, his mouth clamped down on one of her ripe nipples. Frankie cried out, her voice like dark honey. At some corner of Jake's brain, he registered that she sang out a D note. \n\nWhen he moved over to the other one, she cried out an A. He moaned against her, the vibration teasing her nipple so much that Frankie arched her back up, digging her fingers through his hair. He thought she tasted like strawberries. Leaving her breasts with great reluctance, he travelled down her taut stomach, noting as he did that her abs were beautifully defined without seeming hard. As his lips approached her delightful little navel, Frankie's body jerked upward. \n\nJake grinned wickedly, looking up at her. \"Ticklish?\" he asked with a mischievous growl. \n\n\"No \u2013 don't \u2013 Ahh!\" She squealed charmingly as he gently dragged his fingertips across the hypersensitive area. They tangled for a bit as Frankie tried unsuccessfully to pull his hands away from her midsection. Both of them laughing, their legs intertwined. \n\nHe moved back up and as their laughter turned into something else, he kissed her again, grinding himself against her supple thighs. She could feel slick moisture from his precum on her skin. They were again clinging to each other as Frankie pushed her hips up into his. \n\nJake moved down her body with deliberateness now. He needed to taste her precious pussy. As his face drew even with her panties, he locked eyes with Frankie and hooked his fingers in the fabric and slowly pulled them down. She obligingly lifted her ass to make it easier for him. She was worrying her lower lip with her fingers again \u2013 a habit Jake found adorable. \n\nHe rolled to the side as he slipped her knickers down her thighs. She helped by bending her knees. Carelessly tossing the panties aside, he ran a hand lovingly down her long slim legs. Catching hold of one pretty foot, he first kissed her polished toes, and then pressed his lips to the sole. She jerked her leg and giggled. \n\n\"Mmm. Another ticklish spot, eh?\" He asked. But he was in more of a hurry now. His lips moved up the inside of her ankle, calf, the smooth skin of her kneecap, and on up her lean muscular thighs. He positioned his body between her legs, his broad shoulders forcing them further apart. Gentle fingers probed the flesh between her thighs as Frankie's breath hitched. He could see her belly undulating, and goosebumps rose on her skin. Her scent wafted up to him \u2013 he found it intoxicating. \n\nJake stared, rapt, at her pussy. He wanted to savor this moment, despite the violent urges he was feeling to plunder it without mercy. He could see she was glistening with arousal, and her velvety nether lips were full and puffy. Frankie's mound was mostly bare, with just a small tuft of pale blond hair at the top of her cleft. He could feel her trembling under his hands. \n\nHe looked into her eyes again, and they seemed dark \u2013 her pupils dilated, her eyelids slightly heavy. Parting her labia with his fingers, he groaned as he saw her sweet, dark pink center. Her clitoris was swollen at the top, and he saw another tiny trickle of wetness appear while he watched. His mouth descended upon her suddenly, brusquely. He needed to taste that nectar \u2013 to drink her in. \n\nFrankie virtually screamed out. 'High D sharp', Jake thought. His tongue plunged inside her tight, hot core. He loved the sweet and salty taste of her. He pushed her thighs wider and began to run his tongue up to her clit. When the pointed tip of his tongue made contact with her hard little bud, she flung both arms over her head and groaned, her body rising up to his eager mouth. He loved watching her, lips parted, eyes closed, neck muscles tensed. \n\nHe gently sucked her clit into his mouth, flicking his tongue over it repeatedly. Frankie cried out his name and her hands came down to press the back of his head even closer. He felt drunk with lust and erotic power. He relented for a moment, allowing her to catch her breath, silently positioning his hand in place for the next onslaught. As Frankie opened her eyes to look down at him, he smiled darkly at her and thrust his long index inside her dripping folds. \n\nHe was rewarded by the keening sound she made, and her vaginal muscles squeezed him tight. \n\n\"God, you're so tight, baby.\" He growled, then went back to flicking his tongue against her. His hand began to move, finger fucking her. Frankie began to buck under him so hard that he had to bring his other hand down hard over her abdomen to hold her down. Her fists were pulling the sheets toward her body and she was making a primal noise in the back of her throat. Jake was so turned on by her raw sexuality that he worried he might cum from the sight alone.",
        "He sucked her clit back into his mouth and simultaneously thrust a second finger inside her. To his immense excitement, Frankie came undone. She convulsed, screaming (Jake noted it was a high G this time) a gush of wetness shot from her, coating his hand with her honey. She was breathing so raggedly that he stopped suckling her for fear she'd hyperventilate, but left his fingers inside her until the muscle contractions began to subside. \n\nAs Frankie came down from this incredible orgasm, she burst into tears. Her body was wracked with sobs. Jake flew up to her side and gathered her against him. She clung to him and cried against his chest for a few moments, finally quieting, but taking in several shuddering breaths. His own eyes stung with unshed tears, and his throat was tight. She was right \u2013 it was almost too much. Almost.\n\nHe felt her slender frame shaking, and at first thought she was crying again, only to realize that she was quaking with laughter. She rolled back onto the mattress, laughing up at him even as a few errant tears continued to fall. He was gobsmacked. 'Incredible!' was all he could think as he looked down at her radiant face. \n\nFinally trying to catch her breath, Frankie's voice hoarse from screaming, she pronounced \"FUCK, baby! You are a sharknado in bed.\" She wiped at her eyes, smiling up at him. \"I never knew it could be like that. Did I scare you? Sorry. But I swear you almost killed me.\"\n\nJake was speechless for a moment. His heart was racing and his mind was numb. Just about the only part of him that was still in top working condition was his cock, which was so hard it hurt. He leaned down and kissed her bee stung lips. He heard her make a sound that was half moan, half 'mmmm'. Understanding that she could taste herself on his mouth, and obviously liked it, Jake snapped and moved like lightning. His higher brain function had now officially shut off. \n\nMoving her and himself into position without a word, Jake looked fiercely into her eyes for a brief second before unceremoniously slamming his large, aching cock all the way inside her still quivering pussy. \n\nAs he bottomed out inside her, they both groaned in unison. He paused for a moment, wanting to enjoy the sensation of being inside her for the first time. Jake also needed to slow down, because he was in grave danger of shooting his load right then and there. Frankie was gasping, grateful that he paused, because it gave her time to adjust to his size. Though she was sopping wet, his was by far the biggest cock she'd ever had. He filled her completely, and seemed to touch every part of her. \n\nThis was what he'd been missing his whole life, he thought. Frankie was floating on a cloud of endorphins, as if high. A melody was reverberating inside her brain. She knew she recognized it, but couldn't place it. Then all thought flew out of her head as Jake began to move.\n\nHe slid one hand beneath her head, holding her still as he recaptured her mouth. His other hand moved beneath her, cupping her firm round ass, so he could manage the movements of her lower body. Pulling out of her about sixty percent of the way, he slammed back in hard. She moaned into his mouth. He began to move more rhythmically, out slow, in fast and hard, out a little and back in slow, grinding against her as he hit her cervix. Frankie was dragging her nails lightly down his back, which caused that strange tingling sensation across his scalp and down his neck. 'Euphoria' he thought, 'yes, euphoria'. Jake felt that he was living through one of the most incredible moments of his entire life. The fact that he was conscious of its importance was thrilling to him. \n\nLifting his head, he looked down at Frankie. Her head was tilted back and her eyes were closed in ecstasy, but sensing his gaze she relaxed her neck and opened her eyes. They were glazed in pleasure, and her expression conveyed a wondrous passion. \n\nStilling for a moment, Jake took her face in his hands, his cock buried deep inside her. He searched her face, brushing a stray lock of hair away.\n\n\"I love you, Frankie Rose.\" Her eyes widened and seemed to become more alert. A beatific smile lit her lovely, flushed face. Her hand moved down the side of Jake's handsome, chiseled jawline.\n\n\"I love you, Jake. So very much.\" She brought her lips up to his. This kiss was gentle and earnest at first \u2013 like the kiss at the close of marriage vows. Then it began to deepen, and Jake began to move inside her again. \n\nSuddenly, they could not get close enough or fuck hard enough. Their bodies strained into each other, their hands and mouths desperately moving over one another. A fine sheen of sweat broke out on both of them from the intensity. Skin moved slickly against skin. \n\nThey made a variety of noises that they no longer noted or catalogued. Sounds of runaway lust. Sounds formed by years of longing, finally answered. Sounds formed by two people who discovered that their fantasies could not only come true, but exceed all expectations. Sounds formed by two people who were connected physically and spiritually, as if by some higher cosmic plan.\n\nFrankie delighted in how Jake took whatever he needed from her, moving her thighs, her arms where he wanted them to be. They lost track of all time and space. There was only the deep pleasure of this coupling, of this communion. \n\nThey fluidly moved together from one position to another, like dancers \u2013 turning to face each other on their sides, her thigh wrapped high around his waist. Then he rolled her to face away from him, holding the other leg aloft and fucked her that way. He turned her onto her stomach and rolled on top, and was slamming into her from behind, trapping her thighs between his. Then for a while he thrust inside her in true doggy-style \u2013 after pulling them both up to their knees. Frankie liked this position a lot, as Jake reached around her to tease her sensitive clit with his fingers. Finally, he dropped onto his back and pulled her on top of him, allowing her to control her own pleasure for a while. \n\nHe watched her, captivated, as she gracefully rode him, her well-defined tummy moving like a belly dancer's. Their hands were joined, her eyes closed, her head thrown back. Each time Frankie brought her body down onto Jake's cock, she expelled a breath that was part sigh, part moan. Her hair was wild, and tumbled about her shoulders. Opening her eyes, she looked down at him with intensity before leaning forward to kiss him, her hands pressing his into the mattress over his head. Jake was rarely passive in bed, but the way she'd taken charge was beyond exciting to him. As she pulled pleasure from him with her lithe little frame, he was fully her slave and was loving it. \n\nShe found herself memorizing the map of his beautiful body. She realized if she moved her hips forward the right way as he thrust inside her, she could grind her clit deliciously against his pubic hair. An electrical knot was building inside her, and she knew she would cum again very soon. \n\n\"Please...\" was all she could whisper as her body began to tense. Jake seemed to know what that meant and what she needed. He flipped her over onto her back and began to fuck her harder, and more relentlessly, with a steady percussion. He watched her face and saw that her climax was imminent, and he focused on holding off his own in order to wait for it. He'd promised her, after all, that he'd fuck her until she came again.\n\nAll at once, Frankie clamped down on his cock and her body seemed to clench. This time, no sound emerged from her open mouth \u2013 the silent scream went on for several moments. She took in a deep breath, finally, moaning against his mouth. Jake roared back into hers as his cock finally exploded inside her. Rope after rope of cum shot deep inside her. He reveled in the thought that he was filling her up \u2013 that he was claiming her beautiful body. He shook as he finished. She was moving her hands over his neck, shoulders, and strong back as he collapsed against her. \n\nHe turned them to the side so he could fall onto the bed, and not crush her with his weight. Frankie moved with him so she could keep him inside her a little longer. Little aftershocks made her tremble from time to time, as they rested, now utterly spent. \n\nWithout meaning to, their breathing became synchronized, their bodies paired together. They drifted off to sleep in perfect harmony.\n\n**\n\n\"FINALE\"\n\n[The closing section of a composition \u2013 the last segment of the performance.]\n\nFrankie stirred, half awake, moving softly against something very solid and warm. The melody had returned and was teasing her brain. \n\nLa, la la la, so this is love, la la, la la... \n\n\"Hey, Sleeping Beauty.\" She heard Jake's dark chocolate voice. It was like a caress.\n\nShe smiled, still resisting the pull to exit the wonderful dream she'd been having. \"That's it exactly...\" she mumbled. \"Aurora...\" \n\nA rumble shook her, the deep sexy sound of his laugh. Frankie suddenly, happily, remembered that this had been no dream. She was lying next to the very real, very incredible, Jake Garner. And they had just made love until they both passed out. And he had furnished her with two \u2013 no, three \u2013 of the most intense orgasms she'd ever had. And they were in love... again... or rather, still. \n\nOpening her eyes shyly, she looked into his. He looked younger, more relaxed than he had when she first saw him last night. His hair was tousled, and the shadow of his beard was visible in the pale morning light that surrounded them. He looked to her like some movie star or rugged male model. His light blue eyes shone vividly and were full of emotion. \n\n\"Hey, Jake.\" She said softly. It didn't occur to her at that moment to be self-conscious, because she was so focused on him and felt so replete. Frankie couldn't see what Jake saw \u2013 the natural beauty that she had, even upon waking. Her platinum hair was wild, framing her face like beams of sunlight. Her rosy lips were full and plump, and her enormous eyes looked turquoise \u2013 like the Caribbean.\n\nHe smiled, brushing her hair out of her face, and tilted her chin up. His lips came down to hers in a sweet, lingering, sensual kiss.\n\n\"Were you dreaming?\" He asked tenderly. \n\n\"I think I'm still dreaming, handsome.\" Her voice was husky. She moved closer and rested her head in the crook of his arm, reaching up to run her fingers through his luxuriant hair. \n\n\"Is this real enough for you?\" He asked, and leaned down to kiss her with more passion. He shifted to move over her, an erection already jutting proudly from his body. She gasped against his mouth, her body tingling back to life. \n\nShe slipped her hands between their bodies and took hold of his hard shaft. He made an \"mmm\" sound in his throat. Frankie began to stroke upward, loving the feel of his arousal.\n\n\"This thing is SO big, Jake.\" She murmured against his lips. He chuckled, moving sensually against her. \n\n\"Thanks \u2013 but I'm tall, so...\" He jokingly demurred. \n\n\"Mmmm. Thank god.\" She giggled back up at him. Tugging harder until he groaned. She opened her thighs shifting her position to align his cock with her now weeping pussy. Breaking the kiss, she looked up at him and tried to put him inside her. \n\n\"Help me, Jake.\" She whispered, then quickly gasped as he slowly pushed himself inside her. \n\n\"Am I hurting you?\" He paused, looking at her strained expression with concern. Frankie put her hands on his sculpted ass and pulled him further in, shaking her head.\n\n\"No no no... I want you inside me.\" She breathed into his mouth. \"We were just a little 'energetic' last night.\" She laughed in a low, melodious way. \n\n\"Mmm. The best night of my life.\" He pronounced, returning her kiss.\n\n\"To paraphrase the great Homer Simpson: 'the best night of your life SO FAR...\" She said, succumbing to giggles at the absurd reference. Jake laughed but then quickly groaned, since her laughter made her muscles contract around his cock and it felt heavenly.\n\nTheir lovemaking was slower and more sensual as the dawn's golds and pinks softly illuminated the bedroom. The intimacy was intense as they stared into each other's eyes. Frankie threaded her fingers through his dark hair, and Jake wound his arms around her, cradling her to him as he moved inside her. She emitted tiny little sighs each time the head of his penis touched her cervix. Frankie clamped down on him as he pulled back, increasing his pleasure with every stroke.\n\nFinally, pressing his face into her graceful neck, he urgently whispered \"I adore you.\" His pace quickened as he felt her tightening around him. Frankie was bearing down each time he thrust into her, forcing his erection to drag across the nerve bundle at the top of her hypersensitive folds. Her breathing escalated as the climax began to gather inside her womb. \n\n\"Tell me when you're going to cum.\" He breathed into her ear. \n\nThe word \"yes\" was torn from her over and over as her body approached the peak. She cried out his name as the orgasm swamped her senses. Jake shouted into her neck as he joined her, his climax was so intense that he shouted a few more times as he continued to shoot inside her. \n\nTheir heavy breathing turned into tired laughter as they regarded one another. Frankie felt a tear roll down to her hairline. Her entire body felt electrified \u2013 her senses sharp.\n\n\"Am I smothering you?\" Jake asked, his deep voice almost sleepy.\n\n\"No \u2013 don't move, stay inside me for a while.\" She begged, winding her arms around his neck, pulling his mouth down for a long, satisfying kiss.\n\n***\n\nThe suite's bathtub was more than large enough for two. Frankie sat between Jake's muscular thighs, leaning back into his chest. His arms surrounded her as he gently soaped her with a washcloth. The bubbles rose just above her breasts and the water temperature was perfect \u2013 hot enough to be steamy, but not burn. Frankie played with the cute little rubber ducky furnished by the hotel, her hair pulled up into a messy bun. It was blissful. Through the wall of windows, they could see a cruise ship moving up the Hudson River. It blasted its horn \u2013 a sound that was strangely comforting in the stillness of the morning.\n\n\"Can people see us?\" She asked suddenly, looking at the glass beside them.\n\n\"Yup \u2013 if they're looking.\" Jake's voice sounded amused. \n\n\"Good thing New Yorkers tend to sleep late.\" Frankie drawled, letting her head drop back against him.\n\n\"How do you feel?\" His hand was moving across her tummy. She squirmed a little, giggling. \n\n\"Argh!! Ticklish \u2013 remember?!\" She exclaimed. \n\n\"How could I forget?\" He pulled her face up and leaned down to kiss her. A playful smile on his lips. As she reciprocated, an audible rumble could be heard from her belly.\n\nFrankie gasped \u2013 embarrassed \u2013 then laughed, covering her stomach with her hands. Jake laughed delightedly and wrapped his arms around her tightly.\n\n\"You poor thing! I guess I should feed you at some point, right?! You're going to need your strength. I'm happy to know you actually eat.\"\n\n\"Believe me, I've never missed a meal in my life.\" She said, self-deprecatingly. \n\n\"You're clearly not from LA.\" He quipped. \n\n\"Is that a good thing?\" She asked, turning her body toward him gently to avoid splashing water out of the tub. He pulled her against him, nuzzling her temple.\n\n\"That's a very good thing.\" He kissed her decisively. \"Let's dry off and order some room service.\"\n\n***\n\nThe sun had now fully risen and shined brightly on them as they sat across from one another at the table set up in the suite's living room by the hotel waiter. It was laden with more food than two people could possibly eat. Jake grinned at how the hotel bathrobe seemed to swallow Frankie up. Her hair was still up, but several wispy tendrils escaped and framed her delicate features. He thought she looked completely adorable as she excitedly surveyed what waited under each of the covered dishes, and piled selections onto her plate. \n\nFrankie took up her coffee cup with both hands, gratefully sipping the rich, potent brew. She liked the way Jake was looking at her, but didn't know what he thought was so funny.\n\n\"What?\" she demanded, taking another sip.\n\n\"I just like looking at you.\" She knew it was an incomplete answer, but she liked it anyway. \n\nFrankie pursed her lips at him, but refrained from saying the words \"right back 'atcha\", which were on the tip of her tongue. His jeans hung low on his slim hips and his shirt had been hastily buttoned, so now was gapping open. He was so gorgeous. It almost hurt to look at him.\n\nShe watched his white teeth as he bit into a piece of buttered toast. He raised an eyebrow at her, and reached the rest of the toast toward her, offering it up. Frankie leaned across the table and bit into it fast, narrowly missing his fingers on purpose. \n\n\"Hey!\" he laughed as he jerked his hand back. \"I need those digits, if you don't mind.\"\n\n\"I'd never hurt those talented fingers, baby. I like what they do far too much.\" She purred, clearly intending the double entendre.\n\n\"Mmm. You should hurry up and eat while you still have the chance.\" He warned, his voice dropping a register. She lifted her chin defiantly as she bit a slice of bacon.\n\n\"We should probably talk about the film project at some point.\" He began. Her expression of surprise momentarily stopped him.\n\n\"Oh my god.\" She murmured, covering her mouth with one hand. \"I'd almost forgotten about that.\" She laughed, shaking her head.\n\n\"You are SO not from LA.\" He repeated, leaning back in his chair.\n\n\"Thank you.\" She grinned back at him.\n\nJake felt a tiny bit of reticence that he didn't quite understand, but pushed through it to talk with Frankie more about what they'd need to do next. He discussed planning a trip to California, the nature of a screen test \u2013 at least as much as he could describe, based on what Danny had explained. \n\nFrankie was quiet, eating her breakfast and watching him with her wide, open gaze. \n\nFinally, she interrupted. \"Sorry \u2013 but let me ask you this: Do you really want me to do this?\"\n\nJake was taken aback, because the question was very blunt, yet insightful. It made him realize that he was, at some level, torn. He wanted her to have this more than anything \u2013 and he knew that Frankie was the perfect person for this role. Hell, he'd basically helped Danny create the role based on Frankie herself, he now realized. \n\nBut a tiny part of him wanted to keep her to himself, now that he'd finally had her back in his life for real. A part of him worried that Hollywood might ruin her, and that making the film would steal yet more time from them. \n\nHe flushed with embarrassment. Of all the selfish things. How could he make this about himself?!\n\nShe had to have this. It was what she was born to do. How could he interfere with this just out of possessiveness? They could \u2013 they must \u2013 find a way to have this and their life together. He'd gotten his shot, and taken it. Frankie deserved the exact same thing. More, really. The world needed to hear her, to see her, to know her. \n\nShe waited patiently for his answer. She also feared it. What if he said no? And perhaps worse, what if he said yes? Frankie saw a myriad of emotions fly across his face, and then she saw color suffuse his cheeks.\n\nJake began to speak. Words spilled out of him. He talked about being jealous, and wanting to keep her to himself. Her heart warmed at this \u2013 but precisely because he immediately continued on to say that she needed to go for it. That she needed to take this shot and he had every confidence that she'd be wonderful. He went on to say that he wanted this for her. Jake also said that he would be there for her \u2013 to help her, support her and look out for her.\n\nThen he asked Frankie: \"What do you want, Angel?\" \n\n\"Ah. That is the key question.\" She took another sip of coffee, a tiny frown on her face as she considered how to answer.",
        "\"I used to think that the universe of things I could wish for was more finite.\" She began. Jake looked like he wasn't quite following her. She smiled at him.\n\n\"Then we found each other again.\" She said simply. \"My deepest, most impossible \u2013 most improbable wish was suddenly fulfilled. Dude, that is a pretty big mind fuck.\"\n\nShe rose from her chair and walked around the table, climbing up on his lap. \"Suddenly, the universe of things I could possibly have feels a lot bigger.\" She kissed him. He waited for her to finish, gently taking hold of one stray lock of her silky hair.\n\n\"The most important thing to me is this \u2013 us.\" She kissed him again, this time more thoroughly. He sighed with happiness, touching his forehead to hers. \"And because I believe that, I can say this: Let's go for it. I'd like to undertake this... adventure, I guess... with you. But only if we do it together. Who knows? It could be fun.\" \n\nJake kissed her, his hand cupping her chin. \"I want to say something to you \u2013 I may not do it very well, but I feel the need to say it...\" He began.\n\nFrankie leaned away from him a bit to watch his face. He seemed to be struggling for words.\n\n\"I've loved you most of my life. I wanted you for so long. And then yesterday happened.\" He stroked her face tenderly for a moment, and seemed to have trouble swallowing. Frankie was stunned to see his eyes shining with what looked like unshed tears. \n\n\"What I'm trying to say is this: If we'd met for the first time yesterday, I'd be just as wildly in love with you as I am now. Do you see what I'm saying? I love you \u2013 I love THIS Frankie \u2013 every bit as much as I loved the girl I knew back then. More, maybe.\"\n\nShe exhaled. Tears slid down her cheeks. \"Wow. For the record, you said that pretty well.\" She laughed gently as she leaned forward to press her lips to his. \n\nShe slipped off his lap and took him by the hand, drawing him out of his chair and back to the bedroom. She was humming a little melody that Jake thought sounded vaguely familiar.\n\n\"How much time do we have left to be alone in this suite?\" she asked and then answered: \"Twenty-four more hours?\"\n\nShe turned toward him, a wicked little smile on her face. \"Hollywood and the rest of the world can wait. We can do a hell of a lot of damage in twenty-four hours...\" She untied and dropped the bathrobe, then fell back on the bed, pulling him down with her.\n\n***"
    ],
    "authorname": "lamoureuse",
    "tags": [
        "romance",
        "cunnilingus",
        "passion"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/the-torch-singer-ch-03"
}