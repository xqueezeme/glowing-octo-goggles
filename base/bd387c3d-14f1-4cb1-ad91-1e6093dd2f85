{
    "title": "Unleashed Ch. 10",
    "pages": [
        "When morning finally came, Zoe rose early to slip away and quietly shower, careful not to wake him. And when she came back into the bedroom to pack, Tate's eyes opened and he watched her silently preparing to leave him -- quite possibly forever. Watching her zip up her suitcase, his heart having risen in his chest to his throat, felt like it was choking him. \n\nTurning to find him awake, Zoe dropped onto the bed beside him, brushing back an errant strand of sandy-brown hair from his eyes. Heaving a resigned sigh she said, \"So, I guess I should be going.\" \n\nTaking her hand in his, Tate pressed her fingers to his lips. \"But you don't have to go today. You know they won't be back until tomorrow.\" \n\nShe shook her head. \"No, I think I should really head back home and find out what's going on with my job.\" Plus, it would hurt too much to drag it out any longer. \n\nSeeing she'd her mind made up, Tate knew he had no choice but to let her go, though he hated the thought of it. \"Well I hope it's still there for you, providing that's what you want.\" \n\nStudying his handsome features, perhaps for the very last time, she nodded. \"I hope so, too.\" Aware that if she stayed another minute, she wouldn't be able to resist crawling back in bed with him and wrapping herself around him, she forced herself to say, \"Why don't you walk me to the door?\" \n\nThrowing back the covers, as Tate's lean form sprang from the bed, Zoe had to bite back a moan at the sight of him. His penis standing proudly erect, lean hips, flat toned abs, and that nicely muscled chest, was all so breathtakingly male. She hungrily looked her fill, aware she wasn't ever likely to see a more perfect specimen, no matter how long she lived. When she looked up at his face, the shadowy beard on his cheeks and those blue-green eyes that seemed to look right through her were so captivating, just the sight of him nearly had her weeping. Steeling her resolve, she picked up her purse, and he followed close behind carrying her bags to the door. \n\nStanding at the front door with her, Tate touched his hand to her cheek and told her, \"Just let me get dressed and at least take you to the bus depot, so I can see you off.\" \n\nZoe shook her head, already dreading the inevitable. Leaving him would be hard enough without prolonging it. If only he wasn't moving across the world, they might have had something, but since he was, she couldn't see any hope of a future for them. Their memories would be all they'd have now, wonderful, heart-wrenching memories that she knew she'd carry with her forever. \n\nHaving thrown on his jeans and T-shirt, and shoved his feet into his canvas shoes, grabbing the keys, Tate insisted on at least walking her down to wait for a taxi. Outside on the sidewalk, his gaze locked on hers, Tate cupped her face in his hands, lowered his head and kissed her so tenderly, that Zoe nearly broke down and cried. It was all too much. \n\nShe wondered why it had to end like this, or even why it ever had to end at all. It just seemed so unfair. Meeting him like this, enjoying her time with him like no other time in her life, only to be pulled away by circumstances that neither of them had any control over. The pain in her heart was crushing, and she knew she had to go. \n\nWhen a taxi pulled up at the curb, Zoe reached up and touched her hand to his cheek one last time. \"Thank you for everything you've done for me, Tate. I know I'll never forget you or what we've shared.\" Her eyes shimmering with unshed tears, she slipped into the yellow cab. Part of her already kicking herself for not telling him how she really felt, but she knew it would only hurt more if she said the words, especially if he didn't share her feelings. And since he'd never said anything about how he felt about her, she had to assume what she was feeling for him was totally one sided. \n\n\"God, I'll miss you, Zoe,\" he murmured hoarsely as he closed the door behind her. \n\nTate had to swallow hard as they waved each other off, watching the cab pull away and gradually blend into traffic. Damn this sucked. He'd fallen for her so hard that losing her was tearing his heart out. And if this was the last time he'd ever see her, he wondered if he'd ever be whole again, or if she was leaving and taking a part of him with her. \n\nEven as he walked back upstairs to the empty apartment, he began to feel antsy, and could hardly wait to leave. Though Zoe had barely left, being on his own already felt unbearable. But he knew one of them had to stay to care for the cat and to be here when Becky and Robert got back, so it would have to be him. Glancing around the empty apartment, memories of her began to fill his head. And he shut his eyes, doing his damndest to try to push them away, his chest aching at the thought of finding the perfect woman and then losing her, all within a matter of weeks. \n\nJust then the cat came out of hiding, and Tate bent to stroke its head, murmuring, \"You know, Pussy, I can't believe she's really gone.\" \n\nTate awoke in the morning after a fitful night's sleep to the sound of the apartment door being unlocked. His heart anxiously pounding in his chest, he was quick to throw on his jeans and a T-shirt, before he ran into the living room, desperately praying that Zoe had changed her mind and come back. But it was his brother Robert's smile that greeted him, with his pretty new bride Becky being ushered in ahead of him. \n\nTate only hoped the disappointment he felt at seeing them instead of Zoe wasn't showing on his face. Plastering on the best smile he could muster, he tried to force some enthusiasm into his voice as he said, \"Hey, you two, welcome home. So, how was your trip?\" \n\nRobert closed the space between them in two quick strides, taking his brother's hand he pulled him into a fierce hug. Slapping him on the back Tate could see how happy he was by his great big smile. \"It was fantastic,\" Robert told him, \"Best time I've ever had.\" \n\nBecky just blushed and gave him a timid little wave from the door. Her own smile was far more coy as she said, \"Hi, Tate.\" \n\nSeeing her looking so embarrassed had Tate chuckling. Of course they'd enjoyed themselves. They were young newlyweds in love, still on their honeymoon, and acting like it, too. \n\nAnd suddenly in that moment, looking at the two of them so happy, he knew. He blinked his eyes as it struck him like a flash of lightning what should have occurred to him long before now. \n\nHe realized then, what he wanted more than anything was what they had - wanted it so much with Zoe he could actually taste it. Annoyed with himself, he slammed his eyes shut and shook his head. Now why couldn't he have told her that? But then part of him wondered if it would even have made a difference if she knew how he felt, or if she'd left him no matter what. \n\nHis brother Robert looked curious as he craned his neck looking for signs of Zoe. Quietly, he said out of the side of his mouth, \"So, how did you two make out?\" \n\nRefusing to let Becky know what he and her sister had been up to, Tate played dumb and asked, \"Who me and the cat?\" \n\n\"Yeah, you and Pussy,\" Robert said with a smirk. \"So, is she okay?\" \n\n\"Of course, she's fine. I saw her before I went to bed last night, when I gave some treats, so I'm sure she's got to be around here somewhere.\" At least he hoped she was, and she hadn't snuck out again. \n\nBecky started down the hallway calling out, \"Pussy, come out, pet. Mommy and daddy are back.\" \n\nTate chuckled. \"She sure loves that cat, huh?\" \n\n\"Yeah, she's crazy about it.\" Then with a crook of his finger, Robert gestured Tate to come closer, saying so only he could hear, \"But never mind the cat, what happened with you and Zoe?\" \n\nNot really much to tell, Tate shrugged. \"She went home.\" \n\nRobert glanced around the little living room. \"You know when I walked in here, I was expecting to see the air mattress you told us about.\" Tate's eyes met his brother's and they both began to smile. \"So I take it there was never an extra bed?\" \n\nTate shook his head and decided to be honest with him. \"No, no extra bed.\" \n\n\"So, what happened with you two?\" \n\nHeaving a sigh, Tate said, \"I asked her to come to Brisbane with me, and she told me she couldn't. And yesterday she left and went home.\" \n\nRobert shook his head. \"Must be something in our Caldwell DNA; I know I took one look at Becky, and just knew. First time I saw her in a food court near our work she stood up, our eyes met, and bam, that was it. And the moment we got together it was like spontaneous combustion. I'd never experienced anything like it my life. So, no surprise, I asked her to move in with me that same week and I was gutted when she told me she couldn't. Seems their folks are really old-school when it comes to premarital sex, and they've raised their daughters pretty strict. So, when she turned me down, I did the only thing I could do.\" \n\nTate was staring at him curiously as he asked, \"So, what did you do?\" \n\nRolling his eyes, Robert gave him a look like he hadn't been paying attention. \"What do you think I did? I asked her to marry me. I knew I couldn't live without her, so I told her how I felt and asked if she'd consider spending the rest of her life with me. And thank god she agreed.\" He started to smile. \"Otherwise, I sure as hell I wouldn't be walking around right now with this big dumb grin on my face.\" \n\nBlowing out an exasperated breath, Tate slowly began to shake his head. Right then he knew he'd screwed up. Having heard Zoe tell him how restrictive her life had been, and seeing the proof when he'd met her overprotective parents, he knew he should have, at the very least, been honest about how he felt about her. He should have told her that he loved her before he let her walk out. And considering all the time they'd spent together he'd had plenty of opportunity. Now, he just hoped he hadn't screwed up what they had for good. \n\nThe more he thought about it, he wondered how he could possibly have expected her to go clear across the world to do nothing more than live with him, when she didn't even know how he felt about her. Never mind without a promise of anything more on the table. He'd really messed things up with her. No wonder she went home before she had to. \n\nRobert couldn't miss the tormented look on his brother's face. \"So, you're saying you care for her?\" \n\nAt this point, Tate couldn't see any point in lying. \"Yeah, I'm crazy about her.\" \n\n\"And have you told her?\" \n\nShaking his head, he felt like a fool admitting the truth. \"No, but I know I should have.\" Instead, he'd just let her walk out thinking that all they'd shared was insanely hot sex. And because of that, he'd left her assuming he wanted her to take a chance on crossing the world with him for no other reason than to remain in his bed. He closed his eyes wondering how he could have been so stupid and utterly thoughtless. \n\nStartling him, Robert slapped a hand on his brother's shoulder, telling him, \"Then I think you're really going to have to do something to get her attention to you let her know how you feel.\" \n\nOf course he was right. And Tate slowly began to smile, because he had an idea. \n\nOnce Zoe got home and turned the key to her little apartment, dragging her bags in behind her, she frowned as she walked inside. Glancing around, her face fell as she surveyed her neat little living room and tidy kitchen beyond, wondering with a sinking feeling why it didn't feel like home anymore. Obviously nothing had changed. Everything looked exactly as she'd left it. But it didn't take her long to figure out why -- because there was no Tate. Thanks to him, she knew it was her that had changed, and in so many ways. \n\nAnd then it struck her, she'd lived in this familiar little apartment for close to five years, and after just two glorious weeks with him, she felt like she didn't belong anymore, not only here, but even in her own home town. \n\nWandering into her bedroom, shoulders sagging, she tossed one of her suitcases onto her bed and began to unpack. Hanging up a dress in her closet, she decided she'd just have to get used to the idea that their time together was over. Like it or not, her life would be here in sleepy little Martindale, and Tate's would be in across the world enjoying exciting new adventures in Brisbane -- and probably with some other woman. Dropping down on the bed beside her open suitcase, she wondered when he was planning to leave. \n\nWhen her gaze landed on the sexy pink panties that he'd playfully removed with his teeth, she picked them up and held them to her chest, and every last wonderful thing they'd done together began to replay in her head. \n\nHer mind wandering back to the last full day they'd spent in the city, she'd suggested they clean up the apartment and wash the sheets and towels -- as well as scrub the counter with bleach, after their kinky little kitchen sexcapade. But Tate promised he'd take care of all that before Robert and Becky got back. \n\nSo, instead, he'd surprised her with a perfect lunch in a beautiful restaurant in the heart of Central Park and then an afternoon at the movies, where they spent more time stealing kisses in the dark than watching the screen. \n\nEverything they'd done together felt like a dream now. She already missed him like crazy, and no small wonder, since she knew no one could ever compare -- there was simply no one quite like Tate, at least for her. But now she knew she had no choice but to carry on with her life -- a life without him. \n\nEarly Monday morning there was a teacher's meeting at Zoe's school. And all eyes were on Principal Pritchard as he walked to the front of the room looking nervous with his head down, avoiding everyone's gaze, and filling the assembly with a terrible sense of unease. \n\nHer girlfriend, and fellow teacher Kimmy, leaned close and whispered cryptically, \"This does not look good.\" \n\nZoe nodded in agreement, trying to swallow over the tight knot in her throat. Cleary jobs were going to be lost and she could only hope that one of them wouldn't be hers. Then biting into her lip, she began think. Looking on the bright side, if she did have to leave her job, that would be one less reason to stay here Martindale, wouldn't it? \n\nAs it turned out, Principal Pritchard didn't exactly know what was going to happen himself, only that enrollment was down, and that their school was going to be even emptier than it had been the year before. He mentioned that one option the school board was looking into was shuttering their school and bussing the remaining students to Springville, a larger town some twenty miles away. But he did tell them if it happened, that would mean most, if not all the teachers, would be looking for new jobs, since Springville was also facing declining enrollment, and already had too many teachers. It seemed the bottom line was people weren't reproducing much these days, so there simply weren't enough kids to fill the schools. \n\nIt didn't look good for any of them. Still, since there was little she could do, a vision of Tate flashed before her eyes, and Zoe wondered if he'd left yet, or if he was still in New York. And she considered calling him, just to say hello. But she blew out a breath, knowing that if she did, it would hurt so much to have to say goodbye to him all over again. So, deciding against it, she tried to force herself to pay attention to what was being said. \n\nAfter they were dismissed, her mind made up that her job was probably gone no matter what the school board decided, Zoe was walking out of the meeting with the rest of the teachers looking resigned when Brian Langston a fellow teacher who'd asked her out a few times over the years, approached her. Although not a bad looking guy, with short dark hair and big brown eyes, Zoe had so far never agreed to see him outside of work. \n\nWalking along beside her, wearing a tentative smile, he said, \"Not the best of news, huh?\" Zoe agreed, beginning to wonder if she should at least give him a chance. Not that she'd ever sleep with him, he just wasn't someone she could imagine being with like that, but surely going for coffee or dinner with him wouldn't hurt. And she reasoned that maybe being out with Brian would help take her mind off Tate, at least for a few hours, since he was all she could think of. \n\nHaving walked together back to the staff parking lot, Brian leaned against her car as she took out her keys, and said to her, \"I was wondering if maybe you'd like to go out for some dinner one night. You know, just to talk over how these changes are going to affect everyone, and see if there's anything we can do about it.\" \n\nThe way he asked, it sounded pretty innocent, definitely more like school business than any kind of date. \"Sure,\" she agreed, \"how about we meet tomorrow night?\" \n\nBrian straightened, looking surprised. \"Really, I thought you'd never agree.\" \n\n\"Well as long as this is just a dinner to strategize our next move, then I'd be okay with it.\" \n\nAwkwardly patting her arm he nodded, and said, \"Of course. How about I pick you up about seven?\" \n\n\"Make it five,\" she said, trying to keep it from sounding like anything even close to an actual date. \n\n\"Okay, sounds good. See you then, Zoe.\" \n\nShaking her head, Zoe frowned, wondering what she was thinking agreeing to see him, even as he walked away smiling. \n\nLate the next afternoon, Tate was chuckling at himself as he made his way into town, wondering if he was crazy as he glanced around the quaint little hamlet. \n\nSo, this was Martindale. Clearly Zoe had not been exaggerating, the place was tiny, and from what he could tell nothing much ever happened here. Just a hand full of stores, a church, town hall and a school -- yep, it was pretty small, alright, one blink and he'd probably miss it. \n\nPulling the note with Zoe's address from his shirt pocket, Tate looked up and read the sign for Main Street and kept on heading north, deciding Elm should appear soon, since it was supposed to cross the main drag. At least according to her sister Becky, who'd been kind enough to explain the layout of the town once he'd told her about his grand plan to win over her younger sister. \n\nWhen he spied the only three storey structure he could see on the corner of Main and Elm, he knew it had to be the apartment building where Zoe lived. And noticing that the second floor windows were open, he smiled. \n\nPulling to a stop, he cupped his hands around his mouth and called out, \"Zoe McKay.\" \n\nZoe, busy applying mascara at the bathroom mirror, frowned, turned her head, and said to herself, \"Did someone just call my name?\" \n\nPushing the mascara wand back into the tube, she set it on the vanity top, and walked out to her living room. Pulling back the curtains, she gasped, her heart racing at the sight that greeted her -- Tate sitting tall and hot as ever, on an incredibly beautiful white horse. She called out the window, \"Oh my God, Tate, what are doing out there on that horse?\" \n\nHe smiled up at her. \"Why don't you come down and find out?\" \n\nHer heart in her mouth, Zoe ran for the door, threw it open and dashed down the stairs to the street as fast as her legs would take her. And the moment she got outside, her gaze landing on the incredible sight of the man she loved, her breath caught in her throat. Sitting in the saddle, handsome as sin, clad in jeans, cowboy boots, and a fitted dove gray western-style shirt, complete with a white Stetson, Zoe could hardly believe her eyes. Blinking hard, she took in the sight of the gorgeous pure white palomino then back up to Tate, asking him again, \"What on earth are you doing here, Tate?\" \n\nJust then she heard a timid male voice behind her on the sidewalk, as Brian Langston stopped and cautiously said, \"Zoe?\" \n\nWhen she turned and saw him, she let out an agonized groan. Oh, perfect, the man of her dreams was about to meet her dinner date -- Brian. ",
        "Tate frowned, looking from Brian to Zoe, and asked her, \"Who's this guy?\" \n\nLooking up at him, wincing, she said sheepishly, \"My date?\" \n\nShaking his head, Tate told him, \"Sorry pal, but I'm not into sharing, so there's no way you're dating my wife.\" \n\nLooking shocked, Zoe and Brian's eyes both went big at once and they stared up at him and said in unison, \"Your wife?\" \n\n\"I think I'd better get off this horse,\" Tate told them, and smoothly dismounted, before tying the palomino to a lamp post. And then dropping to one knee at Zoe's feet, right out on the sidewalk in the middle of Main Street, he looked up at her. Smiling into her eyes, he told her, \"You know I've been kicking myself ever since you left for not telling you how I feel about you. But I think it's high time I said the words and told you that I love you, Zoe. And I'd love it if you'd agree to marry me.\" He reached into his shirt pocket and pulled out a blue velvet ring box and popped it open, flashing the most perfect diamond ring at her that she'd ever seen. \"So, will you say yes, will you marry me, Zoe?\" \n\nAs shocked as she was elated, Zoe stood stock still staring wide-eyed from the ring to Tate's face. \"You want to marry me?\" Her heart was pounding so hard, she wondered if she'd heard him right. \n\nHe smiled at her shocked expression and told her, \"More than anything.\" \n\nForgotten, Brian cleared his throat and muttered, \"I, uh, think I should probably be going then. So uh... good luck and congratulations, I guess.\" And he quickly turned and headed back in the direction he'd come from. \n\nTate saw that Zoe's eyes were beginning to mist, so he got to his feet and pulled her into a hug, kissing the top of her head, he whispered, \"Why are you crying?\" \n\nGiving him a watery smile, she sniffled and told him, \"Because I love you too, and I've missed you so much. And I thought I'd never see you again.\" Still feeling as shocked as she was overwhelmed, she waved her arm around at the horse and ring he was holding. \"And now you show up with all this.\" \n\nTate reached for her hand, and pulled the ring from the box and held it poised to slide over her finger, and asked her, \"So, is that a yes?\" \n\nSmiling into his eyes, blinking back tears, she nodded her head, and said, \"Yes, I'd love to marry you, Tate. And I wish that I'd been brave enough before I left, to tell you that I love you, too.\" \n\nFinally, slipping the ring on her finger, he dropped his head and claimed her mouth with enough passion to literally curl her toes in her sandals. After they'd shared a long, hot, lingering kiss, he took her by the hand, and helped her onto the horse, before hopping up behind her. \n\nTurning her face to look at him over shoulder, Zoe said, \"But I still don't understand why you've come here on a horse.\" \n\nTate grinned, pulling her closer. \"I guess to prove you wrong.\" \n\nHer delicate brow furrowing, she asked, \"About what?\" \n\n\"I remember you told me that day we were in Chinatown, that no man was ever going to ride into town on a white horse and rescue you from this place. So here I am, on a white horse, and I've come to not only rescue you, but to promise you the rest of my life.\" \n\nHer lip beginning to quiver, and her eyes misting again, twisting round in the saddle, she wrapped her arm around his neck and just had to kiss him, murmuring against his lips, \"Oh, my goodness, Tate, this has to be the most romantic thing I've ever heard of.\" \n\nAnd he was just glad it worked and she said yes. \n\nZoe's mother just happened to be looking out the front window of her house, when her eyes flew open wide. And she hollered over her shoulder to her husband, \"Jim you'd better come and see this. Zoe's riding up on a horse with what looks like some kind of cowboy.\" \n\nHer father strode in from the kitchen, muttering, \"What the heck is she doing?\" \n\nPulling back the front window drapes, so he they could get a better look, she said, \"I don't know, but I've got a feeling we're about to find out.\" \n\nAfter dismounting, both of them grinning as he helped her off the horse, Tate tied the filly to the front porch and followed his new fianc\u00e9e inside. \n\nHer mother was already waiting at the door with her father standing right behind her, looking none too happy. And the moment they stepped inside, her mother instantly asked, \"Zoe, what on earth were you doing on that horse?\" \n\nSmiling back at Tate, she said, \"I'm sure you remember Tate, Robert's brother?\" \n\nHer mother smiled warmly and said, \"Of course, nice to see you again, Tate.\" But no surprise, her father's only reaction was to narrow his eyes on him suspiciously. \n\nZoe instinctively reached for her brand new fianc\u00e9's hand for moral support, before she took a deep breath and explained. \"Well, Tate just asked me to marry him, and I said yes.\" \n\n\"Awful sudden, isn't it?\" he father piped up, still looking less than delighted. \n\nBut her mother let out a startled gasp, flew into her daughter's arms and hugged her tight, instantly breaking into a sob, telling her, \"Well, isn't this wonderful.\" Then she pushed up on her toes and gave Tate a kiss on the cheek, too. \"What marvelous news, welcoming another fine son into the family.\" \n\nHer father though, was busy glaring outside at the white horse standing on his well-manicured patch of grass, muttering under his breath, \"All I know is that thing better not mess up my lawn.\" \n\nTate was quick to reassure him. \"No worries, sir, I'll be sure to clean up after, if it does.\" \n\nJust then the phone rang and Zoe's mother rushed to answer it, quickly explaining to the inquisitive caller, \"Don't worry, Mrs. Cooper, it's just my daughter Zoe and her new fianc\u00e9, Tate. He decided to ride into town on a white horse to ask her to marry him. And isn't that the most romantic thing you've ever heard?\" \n\nZoe looked up at Tate and grinned, since it surely was. And in short succession, the phone had rung three more times. News, it seemed, travelled lightning fast in a little town like Martindale. And now Tate fully understood why Zoe felt she couldn't be free to be herself here. Gazing into his fianc\u00e9e pretty blue eyes, he smiled, glad to have had the good fortune to be in the right place at exactly the right time to help her let loose and discover herself -- with him, and only him. \n\nOnce the phone calls finally stopped, Zoe bit into her lip and looked up at Tate nervously. \"Oh, and I should probably also tell you that Tate has just accepted a new position lecturing in Australia. And I'll be moving there with him.\" \n\n\"But not until you're married,\" her father told her, before her mother could even get a word out. \n\n\"Of course,\" Tate assured him, quick to put her parent's minds at ease. \n\nNarrowing his gaze and studying Tate uncertainly, her father asked, \"So, what exactly is it you teach, Tate?\" \n\nDeciding a little glossing over of the truth wouldn't hurt with an old-fashioned man like her father, he said, \"I have master's degree in biology and doctorate in anthropology.\" Which was true, and though technically he didn't teacher either subject, he knew if he'd told him his area of expertise was human sexuality, it probably would have gone over like a lead balloon. \n\nStill, her father just snorted. \"So with all that education you couldn't get a job teaching in this country and you have to go overseas?\" \n\nZoe quickly jumped in to defend him. \"But this is an excellent opportunity for Tate, and I'm really looking forward to exploring the other side of the world with him, too.\" She smiled at Tate as she said it, with him smiling right back relieved to hear her say she was happy to be joining him. \n\nHer father's expression was still cool. Obviously, from the way his gaze was narrowed on Tate, he must have decided they'd gotten pretty friendly in New York for him to be showing up here and asking for her hand. \n\nWrapping his arm around her and pulling Zoe protectively to his side, Tate told them, \"Well, we should probably be going. I've still got to get the horse back tonight.\" \n\nZoe's mother kissed them both again, and after narrowing her eyes pointedly at her husband, her father reluctantly made his way over to the door to kiss his daughter and shake Tate's hand. But as he did, he leaned in and said to his future son-in-law in a voice shaking with emotion, \"Wherever you're taking her, you just be damned sure to take care of my little girl, mister.\" \n\nGiving her dad an affectionate pat on the back, Tate was beginning to understand where he was coming from. The man simply loved his family, and didn't want any harm to come to them, and he could hardly fault him for that. He might be gruff, but clearly he loved his daughters. Keeping a firm hold on his hand, he said unflinchingly, \"I swear, you have my promise on that, sir. I plan to take very good care of her.\" \n\nJust as Tate had promised, though time was tight before he had to leave for his new assignment, a simple, romantic candlelit wedding ceremony was arranged in the little white church on Main Street in Zoe's home town. And all the townsfolk assembled to see the pretty local school teacher marry the handsome professor who'd rode in on a white horse to ask for her hand. The entire town was still talking about what a romantic gesture it was, already very impressed with Zoe's beau. \n\nTate's first sight of his bride, in a perfect white knee length satin and lace dress, carrying a bouquet of pale pink roses, with her long, dark lustrous hair curled so beautifully around her face, literally took his breath away, and he couldn't take his eyes off her. And smiling into her eyes, he decided on the spot, she had to be the prettiest bride there ever was. As Tate stood at the altar in perfectly fitted charcoal grey tux, watching her walk down the aisle on her father's arm, he could feel a knot of emotion tightening his throat as he realized that the woman of his dreams was about to promise herself to him for the rest of her life. \n\nSurprisingly, her father even managed to offer him a slight smile, after pressing a tender kiss to her forehead, before handing his precious daughter into his care. \n\nThe ceremony was short, but heartfelt, with Zoe's parents both tearing up as Zoe and Tate held each other's gaze and lovingly whispered their 'I do's'. And afterwards there were tears of joy and laughter when everyone saw that, keeping true to form, Tate had arranged a pair of white horses and a carriage to take his new bride to the reception at the town hall, that most everyone in town attended. Pulling her close to his side, he gave her a kiss and a wink before grabbing hold of the reins and driving the team himself, with both of them laughing, and him feeling relieved as hell that he'd managed pull it off and actually marry the woman he loved. \n\nHis brother Robert and her sister Becky stood outside the church, smiling from ear to ear looking overjoyed for them. And then they coyly grinned at each other, considering the way things had turned out. Then they happily waved them off, before getting into their car to follow them to the reception. \n\nOf course their wedding day would have been even more perfect if they hadn't been so aware that after their single amazing honeymoon night, at the nicest inn in the area that Tate would have to leave to fly to Brisbane the next afternoon for his new posting. And since Zoe was waiting on her passport and visa, and a few other last minute details she had to attend to, like arranging to sublet her apartment, she had to wait to join her new husband later, which neither of them liked. \n\nThey made sure though that their wedding night would be something neither of them would ever forget. Once they got in the floral patterned white and pink room, kissing each other nearly senseless, they took their time savoring the sensation of stripping each other bare, Zoe delighting in unbuttoning her new husband's shirt and skimming her hands over his firm flesh. \n\nAs she playfully tugged at his bottom lip with her teeth, getting him hard as granite, Tate could hardly wait to consummate their marriage. Now that he'd got his bride, all he could think of was making love to her non-stop till the moment he had to leave. Even if they'd only have one night together, he was determined to make it good for her. \n\nHolding her naked in his arms, he could feel her shivering. Confused, he tipped up her chin, and murmured, \"Hey, why are you trembling?\" \n\nFeeling her cheeks hearting, Zoe lifted her gaze to meet his. \"It's just that I can hardly believe we're married. And I can't even describe why, but feels different somehow knowing that this is for real.\" \n\nFlashing a devilish grin, running his down over her back and squeezing her tight little butt, Tate murmured, \"This is as real as it gets. And you're mine now and I'm yours, and we can finally have the life we've always wanted.\" \n\nHappily smiling into his eyes, Zoe reached between them and stroked him in her hand. \"Hmm, I do like the sounds of that.\" \n\nTate chuckled. \"And I love the sounds you make when I get you off.\" And before she even knew what he was up to, he'd dropped to his knees, parted her with his thumbs and slid his tongue deep into her pussy, getting her shivering all over again as he made crazy hot love to her with his mouth, nearly eating her alive. \n\nRunning her hands through his hair, as he got every inch of her quivering, Zoe's eyes fell shut as he worked her into one hell of a mind-numbing climax with nothing but his amazing tongue, and curious hands. \"Oh, god, Tate,\" she murmured, \"I just love what you do to me.\" And truth was he loved everything about her. \n\nOnce he'd made sure she'd come good and hard, shivering right to her toes, hard enough he could feel it on his tongue, Tate picked her up and carried her to the big white linen-covered bed, kissing her the whole way. And looking down at the sight of her on her back waiting for him to join her, he shook his head. Dark curling hair spread around her, full breasts heaving and her pussy so wet he could see it glinting in the moonlight filtering into the room. Damn, what a lucky guy he turned out to be. And he was glad now that Robert and Becky's had asked them to take care of their cat, or he knew they wouldn't be here like this now. \n\nTate got onto his knees, straddling her hips and slid over his new bride, parting her thighs with his knee, preparing her for what was to come. With his cock rock hard and twitching like a bastard to get at her, though he wanted to go slow, he knew he wouldn't last long, not once he was buried in her deep, lost in the feel of her. And the moment he pushed inside her, both of them let out a moan, rolling their eyes at just how good it felt to be connected like this again, especially seeing as they hadn't been together since their time together in New York with Zoe living under the watchful eye of the whole busy-body town. \n\nAnd as he leisurely slid in and out of his new bride, never more conscious of the slick, tight feel of their bodies coming together, smiling into her eyes and dusting her face with kisses, it occurred to Tate, the more he had her, the more he wanted her. But luckily for them, they'd have a lifetime together now to explore and enjoy every last inch of each other. \n\nNow that they were together again, Zoe just couldn't get enough of him, digging her heels into his thighs she tugged down his head and slid her tongue into his mouth, losing herself in the incredible taste and feel of her man. She smiled against his lips, loving the idea that she really did have him all to herself now, and for just as long as they both shall live. Ooh, as pressed into her nice and deep, deliciously stretching her inside, she knew she was going to enjoy being married to a husband as hot as Tate. \n\nAnd when Tate lifted her tight little butt into his hands and really began to give it to her, pounding into her deep and hard, the love he saw shining from her eyes, slayed him. Never in his wildest dreams did he ever imagine he'd find a woman as perfect for him as she was; so sexy and adventurous, and yet still so sweet, when he finally came he just hoped she could feel how deeply he loved her, since he'd never felt as overwhelmed. \n\nThrowing back his head, he growled as felt the most incredible eruption he'd ever experienced overtaking him. Filling her till up with everything he had, still pulsing deep inside her, he hugged her to his chest, pressing kiss after grateful kiss over every inch of her face. \n\nFinally, looking into her eyes, he murmured, \"I just wish you could come with me. It's going to be a long lonely flight without you.\" \n\nHer chest still heaving and her pussy tingling like crazy after experiencing something as wild as that, she grinned. \"Yeah, no mile high club for us this time, I guess.\" Tate just laughed, rolled onto his back and took her with him, squeezing her tight in his arms, he let out a contented sigh. \n\nLucky for them, their room had an ensuite bath with a big old claw foot bathtub, roomier enough for two. And once Tate had the water just the way he wanted it, he got in and Zoe slid in on top of him, which had her delectable breasts in perfect kissing distance of his mouth. After suckling at each rosy peak, he got her to spread her legs and straddle his thighs. And watching the look of awe on her face as he slid up inside her, filling her right up, had him grinning right back, loving the warm, wet feel of her wrapped in his arms. Now, if only he didn't have to leave her behind and fly across the world, their wedding day would be perfect. \n\nThey slept together curled up tight. And surprisingly by morning Zoe was still cuddled in close with the warmth of her lips pressed to his neck, like she never wanted to let go. \n\nSo, the next day, after another difficult parting, they reluctantly kissed goodbye, eager to reunite as soon as her paperwork was in order. Tate gently brushed back her hair, kissed her one last time, and murmured, \"Just remember I love you, Zoe, and can't wait for you to join me.\" \n\n\"And I'll be there just soon as I can,\" she promised. Standing on tiptoe, she pressed her lips to his and whispered, \"And I love you, too, so much.\" \n\nZoe watched Tate drive away with her heart in her throat, praying they'd be back together soon. \n\nAs Tate strode into the lobby of the regal Brisbane Marriott, his mind was going in what felt like a million different directions. Of course foremost his thoughts were of his new bride and how soon she could join him, his longing for Zoe consuming his every waking hour. Then there was his new school, and the challenges of teaching in another country. And of course, the new faculty members, who thankfully he'd found, for the most part, to be friendly and welcoming. \n\nThe city itself, from what he'd seen, was great. But he could hardly wait to explore it all with Zoe. He was already planning trips for them to the Botanic Gardens, and the city's bustling Chinatown, along with all the other exciting sights there were to discover in such a fascinating country, like the Great Barrier Reef, the massive Outback and Ayers Rock. \n\nAnd of course, he had to think of finding them someplace to live. That he knew he'd have to look into sooner than later. Hotels had their place -- no upkeep, a bed to drop into every night, meals readily available, but he knew he couldn't live here in limbo forever, especially once his new bride arrived. He shook his head smiling, still unable to believe that Zoe was actually his wife, lucky man that he was. \n\nHe'd been holding back looking at places, hoping that when she finally got here, they could take a little time to choose the perfect place to call home, especially knowing how good their time had been together even in the tiny apartment they'd shared in New York. \n\n\"Mr. Caldwell?\" Deep in thought, Tate turned his head, as he was passing the reception desk, realizing his name had been called out. ",
        "He stopped in mid-stride to face the her. \"Yes?\" \n\nThe pretty fair-haired woman at the concierge held up a small white envelope. \"This is for you, sir.\" \n\nBrow furrowed, he approached the desk, took the envelope and absently said, \"Thank you,\" as he read his name, Tate, written in a bold feminine script across the front. No idea what it could be, he slipped his thumb under the flap and opened it, and looking inside he saw a key -- an oddly familiar tiny silver key winking back at him, with no note or explanation accompanying it. \n\nLooking up at the clerk, he asked, \"How did you get this?\" \n\nA smile tugging at her lips, she gestured with her head toward a grouping of high-backed chairs near the massive wall of windows fronting the elegant hotel. Tate turned his head, searching for some clue, until he spotted a familiar face peeking around a chair that nearly stopped his heart in his chest. \n\nLaughing, he closed the distance between them in a few quick strides, the envelope clutched in his hand, he found himself blissfully face to face with the woman who'd been tormenting his thoughts for the last two weeks. As he reached for her, he told her, \"God, Zoe, I can't believe it's you!\" \n\nWrapping his arms around her, overjoyed at being reunited, he lifted her up and swung her in a wide circling around and around while claiming her mouth in a crushing kiss, not really giving a damn who saw them. \n\nThe front desk clerk wiped away a tear as she watched them reunite, motioning with her head to the young woman manning the desk beside her. \"Now that's what I call love,\" she whispered. \n\nFinally releasing her mouth, Tate pulled back, scanning her face, his voice husky with emotion. \"I can't believe you're finally here.\" Damn, he'd missed her something awful. \n\nZoe's eyes bright with unshed tears, stroking his cheek, she told him, \"Neither can I, but I'm just glad I am.\" \n\nFinally Tate looked down at his hand and held up the envelope and asked, \"But the key -- what's it for?\" \n\nHolding his gaze, she said with a little grin, \"Whatever you want it to be -- new adventures, my heart, our future, or all three. The choice is yours.\" \n\nHe smiled at his sexy adventurous little bride and said, \"Then I guess it's all three. And I can hardly wait to start my life with you, Zoe.\" Sighing, she slipped her arms around his waist, hugging him tight, unbelievably happy to finally be back together with her brand new husband. \n\nTate said over her head, \"This is such a nice surprise, but I wish I knew you were coming then I could have planned something.\" \n\n\"It's okay, believe me, you're all I need,\" she told him, pulling back to gaze up into the joy clearly visible in his incredible blue-green eyes. \n\nHe cupped her face in his hands, and shook his head. \"You have any idea how much I've missed you?\" \n\nShe bit her lip, flashing a naughty grin. \"Well, then maybe you should take me upstairs to your room and show me just how much.\" \n\nSmiling right back, he thought that was an excellent idea. \n\nTate's pretty new bride didn't have to tell him twice. Wrapping his arm around her waist, he led her to the bank of elevators barely able to wait until one arrived so they could get inside and be alone together. The moment the doors closed behind them, Tate took her mouth in a desperately hungry kiss, lifting her right off her feet and into his arms, crushing her to his chest, he smiled as she eagerly kissed him back, wrapping her legs around him. \n\nHis chest heaving, finally lifting his head, searching her face, he said, \"Have I told you how much I love you?\" \n\n\"No, not lately,\" she said happily smiling into his eyes. \n\nThe door slid open on his floor just then and he set her on her feet. Pulling off his neck tie, playfully winking at her, he swung it in the air, and teasingly tugged it between his hands as though to test its strength as they made their way to his room. \"Well, then I guess I'd better show you just how much...\" Zoe giggled, her heart already beating hard with anticipation, wondering what he had in mind. \n\nOnce inside his room, Tate couldn't wait to be with her again. Tossing the tie aside, his hands surprisingly shaky, he reached for the buttons on her blouse and began to slip each one free, finally unclasping the front of her bra, pushing aside the silky fabric, he stood back in awe. Like the first night he'd laid eyes on her, her beautiful breasts bared, long dark hair framing those perfect pale orbs along with her gorgeous face, he could barely believe she was really his. \n\nHer eyes dark with arousal, he pushed her blouse off her shoulders, and began to unfasten her short little skirt, letting it drop to the floor. \"Wow,\" he murmured, blown away by the sight of her in just those pink strappy panties he loved so much, along with her incredibly sexy heels, that made her legs look like they went on for miles. And he knew he was one lucky bastard to have married such a gorgeous woman. \n\nAs he carried her to the king size bed, her eager fingers made quick work of his shirt, pushing it off his shoulders, she licked a path along his neck to his ear. And within seconds, Tate was crawling over her naked, achingly hard unable to wait another second to get inside her. Tugging at her sexy panties with his teeth, he smiled up at his gorgeous wife. \"Thought tonight we'd try experimenting with tantric sex, guaranteed to give us even longer orgasms.\" \n\nZoe's eyes rolled back in her head. Her heart already pounding out of control, breasts heaving, blood racing wildly through her veins like liquid fire as her husband licked and savored her lips, her tingling breasts, and then slowly traced his tongue down over her tummy. As he moved lower, her hands twisted frantically in his hair, knowing where he was headed. \n\nClosing her eyes and beginning to quiver, it seemed her sensual education was going to continue with her incredibly sexy husband, slowly making his way to her very own land down under. \n\n\"Oh, Tate...\" she murmured breathlessly as a shockingly powerful orgasm began to race through her, sending her into a full body shudder. Overcome, she gasped. \"I have a feeling I'm going to love it here.\" \n\nLater hugging him close, she happily sighed as he held her gaze, sure that he was going to love it, too, especially now that he finally had the woman of his dreams to share it with. \n\n------------------------------------------------------------------------------------------------------------ \n\nIn New York, tidying up the bedroom in their little apartment, Becky noticed some spare change on her husband's nightstand and absently pulled open the drawer to drop it inside. But when her gaze landed on something shiny and round she let out a gasp. Turning her head, she called out so he could hear her from the kitchen. \"Robert, you want to come in here for a minute?\" \n\nA moment later her handsome husband popped his dark head into the bedroom. \"I was just making us some coffee, what's up?\" \n\nDangling the handcuffs from one finger and the black velvet blindfold from another she looked up at him standing in the doorway and asked, \"You know anything about these?\" \n\nHis eyes popping, he muttered under his breath, \"Holy shit, Tate.\" \n\nBlinking, she said, \"What did you say?\" \n\nWinging it, Robert lied smoothly, \"I uh, picked those up the other day, 'cause I thought we might have some fun with them.\" \n\nBecky sank her teeth into her bottom lip, and said with a sultry grin, \"Really?\" \n\nHe nodded, his steely erection already pressing hard against the fly of his jeans, as he eyed his lovely bride in her sexy little denim shorts and crop top. \"Yeah, so you think you'd be up for it?\" \n\nGrinning at him, playfully waggling her eye brows, she said teasingly, \"You know I think I just might be.\" And Robert visibly swallowed at the thought of his wife naked and bound to the headboard. \n\nGlancing back into the drawer, Becky said, \"But where's the key?\" \n\nCrossing the room in a few quick strides, he took a look inside. \"It's got to be in there, let me take a look.\" \n\nBecky got up off the bed and out of his way, allowing him to get a better look. \"You go ahead and look then, while I finish the coffee.\" \n\nRifling through the stuff in his drawer, Robert muttered under his breath, \"Gee, Tate, I never knew you were such a naughty boy.\" \n\nPoking her head back around the corner, Becky said, \"You keep mumbling, but I can't make out what you're saying.\" \n\nWith a devilish grin, Robert said, \"Yeah, I said, feel free to strip out of your clothes before you come back in here, while I look for the key.\" \n\nSmiling as his pretty wife disappeared around the corner again, Robert muttered under his breath, \"And thanks to you, my naughty little brother, I think we're going to have one hell of a night to remember. And who knows, maybe even a whole new crazy love life.\" He chuckled, shaking his head. \"It's got to be something in the Caldwell genes.\" Pausing, he frowned, glancing back toward the kitchen, looking puzzled. \"Or maybe it's these sexy McKay women we've married who've done this to us, making us crazy.\" \n\nTugging his shirt over his head, and unzipping his straining fly, Robert didn't seem to care what caused the insane sexual attraction between the pair of siblings, especially when his wife slid her bare leg enticingly around the doorway, instantly capturing his attention. Getting up and reaching for her, he pulled his naked bride into a lingering kiss, murmuring over her lips, \"You sure you want to be cuffed?\" \n\nLaughing, Becky pushed playfully on his chest. \"Funny, I was just going to ask you that.\" \n\nShaking his head, Robert groaned, picked her up and carried her to the bed, muttering, \"Just promise to be gentle with me, okay?\" \n\nEagerly licking her lips, Becky nodded. \"You know I've always fantasized about trying something this kinky, and now maybe you could teach me a thing or two about bondage.\" \n\nEyes rolling back in his head, Robert tugged his gorgeous wife down on the bed, and said to himself, \"Tate, I just hope you realize what you've started here...\" \n\n--------------------------- \n\nHolding his new bride Zoe close to his chest, running a finger over every delicate line of her perfect features, their breathing slowly settling after hours of mind-blowing tantric sex, Tate heard his phone ping on the night stand. Picking up his cell, he read the text from his brother and started to chuckle. \n\nCurling close to his side trying to get a peek at his phone, Zoe asked, \"What's so funny?\" Tate turned it to show her the text, and she laughed, too, once she'd read it: \n\nHey Zoe and Tate \n\nHope all is well with you two, and you're finally together over there enjoying married life. \n\nJust so you know you're not getting the handcuffs back. But we just wondered where the hell you put the key? \n\nOh, and now that you two really are together, it's probably as a good time as any to let you know that that little couch in our living room actually does fold out to a bed for one. Now aren't you glad you never knew that? \n\nOur Love and best wishes to you both, \n\nXOX \n\nRobert and Becky"
    ],
    "authorname": "Smuttyandfun",
    "tags": [
        "erotic coupling"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/unleashed-ch-10-1"
}