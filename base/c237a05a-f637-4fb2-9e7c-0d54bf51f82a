{
    "title": "Mine...Yours Pt. 07",
    "pages": [
        "Author's Note: To End of Story, who makes my work readable...even if he doesn't like mountain dew you are awesome. To the usual people who help me in little ways, you know what you do and I thank you so much. Too the fans as well. I would write without you but your comments and hate mail are wonderful to read! Keep it coming.\n\nAlso a thank you to MarieLyne. You may not know it but by writing back and forth with you it helped me turn a hard nut into an onion. I very much appreciate our fun but infrequent conversations. I dedicate this Part 7 of my story to you. You have a gift.\n\n*****\n\nChapter 21: Scent\n\nWe all piled into my little white truck, Lucretia put her seat belt on without a hint of discomfort this time. Her hoody was half way unzipped since it wasn't that cold out. Still, I noticed her nipples poking through the shirt and sighed.\n\n\"Why do I have to remind you to wear a bra?\" I asked.\n\n\"Why do I need to wear one?\" she asked back.\n\n\"You are exposing yourself too much.\" I said\n\n\"My breasts are covered by cloth, nothing is able to be seen...\" she responded.\n\nI was about to make a sharp retort, but her tone sounded...huh...she actually didn't know it seems. Nancy crawled from my coat pocket onto the armrest between us and watched as I pulled open Lucretia's hoody. My succubus arched her back a little, seeming to preen under my attention. I admit, it did make me smile a little. It was nice to have someone who wanted to display herself for me! I remembered Dawn would...\n\nI felt a tremendous weight fill my stomach, and I crammed that feeling away hard behind the Door! I almost snarled as I remembered my dream. Well, going to have to take all these situations that keep cropping up and handle them one at a time. First answer Lucretia's question, second, find home for Nancy, third...third...why is Lucretia drawing away from me? Oh, that's right...she can feel what I am feeling.\n\nI took a deep breath and let my tension fade, Lucretia looked worried, but not scared or anything...that was good. I gently parted her hoody again, and directed her attention to her chest.\n\n\"So, see how your nipples are pressed against the fabric? They are making dents in the cloth of the tank top?\" I pointed out.\n\n\"Yes, I see them.\" She said.\n\n\"Well when guys see a girl with erect nipples, to them it is a sign that she is aroused. It makes them take notice of her and imagine her in ways that...how do I explain this...\" My voice had trailed off to a contemplative mutter. Nancy took up the explanation in a crisp \"nanny\" tone.\n\n\"Dear, to flaunt yourself in front of other men when you have a Master is scandalous. It shows that he is not enough for you so you must attract others. That is not to say that you can't wear anything that is revealing, that would just be silly. But basic decorum dictates that you should at least wear undergarments when out in public. Unless you are on a beach wearing a bathing suit, but even those usually have liners in them.\" \n\nI nodded my head at the rat, \"Basically what she said.\" \n\nLucretia looked back and forth between us then frowned. I saw her close her eyes in concentration, then the fabric of her tank top shifted and I saw two cups of a bra appear under the fabric. She glanced down and saw the outline.\n\n\"Does that work Master?\" She questioned.\n\n\"Don't know, does it feel comfortable?\" I asked.\n\nShe shifted a little, and then reached a hand around to the small of her back.\n\n\"There's this little thing on one of the straps that's kind of itching!\" She complained. She brought her hand forward again and then used her hands to shift her boobs around. \"It also feels constraining. Do you really want me to wear one of these?\"\n\nI thought about it. I know that if I had a girlfriend I wouldn't want her to go around braless with her knockers swaying around for all the guys to ogle at. I wouldn't want them to think less of her, or have to worry about them trying to hit on her. Then again I am trying to teach her how to SEDUCE people. Hmmm...\n\n\"Here's the deal...for now wear a bra, but one that is comfortable. When you are on your own you can choose how to dress, but with me, please wear what I ask you to wear.\" I thought that was fair, and I could see Nancy nodding in agreement.\n\nLucretia shot the rat a dark look, then closed her eyes and concentrated. I could see through her tank top different cuts, colors and styles of bras rapidly shifting as she tried out the feel of each one. Finally it stopped on one that she smiled at and gave a little wiggle to test it. I had her lean forward so I could run my hand over her back.\n\n\"Which one is this?\" I asked. Not like I know a lot about women's undergarments, but I was curious.\n\n\"It's a thin...umm...what do you call it? Ah! A sports bra! It doesn't have any of those scratchy things and hooks.\" She told me.\n\nI did a quick nipple check and saw she was covered, as I moved away I saw her looking at me. She appeared to almost hesitate, like she was shy. I was worried about what she was going to ask now. She had no problems with nudity, so whatever was making her blush now must be one heck of a...\n\n\"I haven't kissed you in this form Master, may I?\" she asked quietly.\n\nA kiss? She was embarrassed about asking me for a kiss? Hmmm...\n\nI looked at her, here she was looking so human, and sweet. A lie. Straight up lie! It was easier to kiss her in her true form because then she was being what she was, a succubus. There was nothing hidden from me. The horns, tail, wings, teeth and her other alien features were all on display. Like this, she looked like any other 25 year-old woman. She looked like what I wanted. I wanted a woman like this to kiss and cuddle with. A woman I could watch late night movies and share a tub of popcorn while we make fun of the film. Instead I am stuck with...wait...something she said to me earlier jumped out in my mind.\n\n\"Doesn't matter what I call you. Greg...Master...any of it. You are what you are to me, what I call you doesn't change that.\" \n\nLucretia is smarter than I thought!\n\nNo matter what form she takes, Lucretia is still MY Lucretia. When she is six feet tall and ready to fight, she is still Lucretia. If I am willing to kiss her when she has a mouth of razor tipped teeth, then why do I hesitate to kiss her when she looks like a human?\n\nI leaned back a little taking a closer look at her. Her brow furrowed, I guess I was taking too long to answer.\n\n\"Master...?\" she began. I held up a hand.\n\n\"Give me a moment...thinking.\" I told her.\n\nWhy did I respond the way I did to her when she is human looking and wants a kiss? Because I felt that when she looked this way it was a lie. That can't be right, now that I have figured out in my own head that no matter what she looks like she is still who she is. Then why hesitate to give her a kiss? Is it because I feel like she is trying to entrap me with her feminine wiles? Nope...her wiles aren't what was attracting me to her in the first place...it was her honesty. Her honesty...wait...I am the one who is screwed up! She has been honest with me so far, I am interpreting her being like this as being a lie. Oh, well done Greg...your supposed to be teaching her and you're the one getting lessons here!\n\nI laughed, had to. At least my mixed up head gave me an answer! I draped my right arm over Lucretia's shoulders and pulled her to me. The position was a little awkward with the armrest between us so I lifted it up out of the way. I heard the click of her seatbelt disengaging so she could come closer still. I could feel her firm body under the hoody as I settled her in next to me. Her brown eyes looked up into mine, and her lips parted in a soft smile. I gently kissed the tip of her nose making her giggle, and kissed the small scar at the corner of her eye.\n\n\"I like that you left the scar.\" I told her.\n\n\"It seemed like a good suggestion, even though at the time I didn't want to hear what you had to tell me.\" Lucretia said.\n\n\"I would like to kiss you now, okay?\" I asked. Lucretia nodded, but didn't wait for me to kiss her. She threw her arms around my neck and lunged the short distance between us planting her lips on mine. She was almost ferocious in how she kissed.\n\nOh my! I found out that her tongue somehow stays the same even in her human form! It was rather uncomfortable to French kiss her, but I tried my best to keep up. Something strange began to happen though. My lips started to feel a little cool, not because her body was cool...this was different.\n\nYou ever go swimming in a swimming pool, one that has a deep end? When I was younger I would go all the time. I loved to challenge myself and swim all the way to the bottom. I liked to go down to the deep part and touch the drain at the bottom. My dad and mom told me to stop doing that. They were afraid I would stick my finger in the grate and then get my finger stuck in it. I thought they were being a little too over protective until I read about it happening to another kid. Then I just thought my parents were really smart and stopped doing it. \n\nAnyway, sometimes I would go down too often and when I came up for air I would be panting hard and my lips were tingling like crazy. This was just like those times. \n\nI pulled back from Lucretia and she gave a needy whine. I found her hands suddenly gripping my jacket and she pulled me back to herself hard! I tasted her lips again as she began to kiss me with a passion that I had only seen in really cheesy black and white movies! The tingle was getting stronger and suddenly it felt like something...like...I don't know...was...really hard to describe.\n\nIt felt like my mouth was full of ice water and I was letting it slowly dribble out of my mouth over my lips. I don't know why anyone would do that, but it you are curious as to how it felt then do that and it's a pretty close approximation. The moment I felt that feeling I could hear Lucretia moan like she had just tasted the finest chocolate liquor and was rolling the flavor around in her mouth. The flow grew stronger still and suddenly I realized what was happening.\n\n\"...ucresha...sop!\" I tried to say as her lips slid over mine again and again. I pulled my head back from her to pant out again. \n\n\"Lucretia sto...\" She ravenously pressed her mouth to mine! \n\nI grabbed her shoulders and pushed hard against her, she pushed right back! I growled in frustration, and an answering growl came from low in her throat. Suddenly I heard a sharp squeak and Lucretia yelped in surprise. I saw Nancy scurry up to my dashboard away from the direction of Lucretia's seat.\n\nLucretia looked down to where there was now a small hole in the thigh of her cargo pants. She looked back at me, her eyes black all the way through. First time I noticed they had changed color, maybe it was because she had been feeding on me. Wait...she had been starting to feed on me! Lucretia's eyes widened as she suddenly realized what she had been doing and her hands covered her mouth. Nancy was looking back and forth between us, her body tense as if she didn't know which way to move yet.\n\n\"Greg I didn't mean to...\" Her voice trailed off as I covered her mouth with my left hand. I didn't trust myself to speak just yet, but also...I didn't want to hear her apologize either. I could feel her fingers trembling under my palm as I took deep steadying breaths. My heart was racing a mile a minute! I could feel my pulse beating in my ears. I was scared to death and felt so alive at the same time. I felt an insane amount of pressure building deep in my soul and a roar from a far of voice was echoing in my mind. I figured I must truly be insane. Why do I think that?\n\nI wanted to kiss her again!\n\nWhen my heart slowed and my body felt...well, as peaceful as it was going to get under the circumstances. I took my hand away from her mouth, and she lowered her hands as well. Her fingers weren't trembling anymore, but her lips were. She started to speak, but I shook my head at her.\n\n\"Don't apologize Lucretia. I know you are sorry. We...we will talk about this later, alright?\" I told her. She nodded her head.\n\n\"Thank you Nancy...\" I said to the rat who tilted her head at me. \n\n\"No need to thank me Gregory. I should have known this would happen...\" She said. \"Your Lady was just reasserting her claim on you.\" Nancy paused a moment, her rear leg coming up to scratch behind her ear.\n\nI glanced over at Lucretia who was blushing furiously. Maybe I should have her stay in her human form more? She was adorable when she blushed like that!\n\n\"So this is how you react when I hold someone who you're jealous of?\" I chided her.\n\n\"Only when you're holding a thief who is rubbing her scent all over you!\" Lucretia growled. \n\nHer eyes were beginning to turn black again. I saw Nancy out of the corner of my eye carefully putting more distance between her self and me. It was putting her closer to Lucretia, which seemed a bad idea, but then I got it. It was almost funny!\n\nMy succubus thought that I would want a talking rat over her! Where in the world would she get that idea? Oh...hmmm, let's look at this from her perspective. She has only been with me a couple of days, and sure we made great strides in our relationship, and last night was, well that was fun. Then this morning she sees another woman, sort of...not going to think to hard about that. She sees another \"woman\" in my arms and we are sleeping together! \n\nI sighed. This is one of the reasons I try not to get into relationships. How do I show my succubus that she is the one I want, not a talking Furby?\n\nI knew one way.\n\nI grabbed Lucretia and yanked her to me roughly pulling her into my lap with her back to the driver's side window. Good thing she had taken off her seat belt when she was kissing me, would have wrenched her neck! She gave a cry of surprise which I silenced by giving her a slow deep kiss. I could feel the tingles in my lips and quickly pulled back. I laid my cheek along side hers and rubbed it against her.\n\n\"There, am I getting enough of your scent on me?\" I asked as I nibbled her ear lobe. \"Do you need to be jealous of a little lonely rat? She is a nice rat I have to admit, but I have you...why would I need more than you?\" \n\nLucretia's teeth were biting my neck suddenly and I stroked her hair with my fingertips pulling her closer. She let go with her mouth, presumably to say something. She did, and it surprised me what she had to say.\n\n\"Mine! You are MINE!\" she growled fiercely. I blinked at her.\n\n\"I thought that it went the other way around?\" I asked with a raised eyebrow. She shook her head.\n\n\"Doesn't matter! Yours, mine, mine, yours...you belong to ME! Just like I belong to YOU!\" \n\nShe was breathing hard, prepared to fight it seemed. Actually, in her mind maybe it was a fight. In my mind, there never was a fight, not for my affection. I traced my finger along her lips. So I belonged to her, as much as she belonged to me... hmm?\n\nWhat strange belongings we were!\n\nI gave her another quick kiss making her blink, and then settled her back into her seat. I got her buckled in and asked her to set Nancy in her lap. I wasn't about to take the chance of getting Nancy's scent on me. Not with Lucretia being as possessive as she was. For some reason I liked her being that way with me. Maybe I am a masochist, but it was nice to be that valued!\n\n\"You kissed me again Greg. After what I...why?\" Lucretia asked out of the blue. Nancy chattered. Sounded like she was laughing\n\n\"Something you want to say thief?\" Lucretia asked the rat. \n\nNancy looked over at me, and I gave her the nod to go ahead as I started the truck. \n\n\"It's simple, you scared him by starting to feed on him. For humans, that's like falling off of a horse. You need to get back on or you'll be too scared to try again. You scared him with your kiss, he kissed you to get over that fear, to show he still could. I am guessing it's a control thing.\" Both Lucretia and Nancy looked over to see my reaction. I gave a half shrug and put the truck in gear.\n\n\"You're almost right Nancy...you forgot one important part though.\" I said as I started driving.\n\n\"What did I forget?\" Nancy asked curiously.\n\n\"I just really like kissing Lucretia!\"\n\nWhen I said that, my succubus began to blush again, and tried to hide her grin. Her eyes grew bright and it seemed as if the stress of her earlier feeding mishap fell away. I smiled listening to Lucretia's delighted laughter as I turned onto the highway. \n\nChapter 22: Vampyre\n\nI had thought about who we should go to see to help Nancy. My initial reaction to talk to the Gatewatch, namely Gwen, had been kind of shot down when Nancy explained she was a wizard's familiar. Not to mention, emotions still might be running high after our meeting yesterday. That meant there was only one person I could think of that was knowledgeable about all this magical gobbledy-gook. \n\nWilliam Henry Abernathy the Ninth!\n\nBesides, he hadn't met my new roommate yet...he was sure to deal with all this better than the Gatewatch had. Will was one of the most low-key people I had ever met. Except when it came to furniture. I was fortunate to have a mother who made me take my shoes off before I ever entered the house. For some reason, Will likes to have neat, tidy and clean furniture. I am sure he is one of those guys who, when he gets a couch he leaves that hard plastic covering on it to protect the fabric! It's probably why he let me put my own dumpster loveseat in his living room. So I could lay on it however I wanted to. \n\nDriving into Portland, Lucretia was acting like a tourist, her face pressed against the widow, looking at the buildings, trees and the funny fashions people wear. To me it all looks the same, but every beatnik, hipster, hippie or grunge lover out there all says they have to have a particular look. I could care less, though some of the hats those hipsters wear don't look too bad. I hate driving in cities, and Lucretia kept trying to ask me questions about what she was seeing. I finally told her to ask Nancy since I was driving and had to pay attention. From what little I could hear Nancy seemed to be doing a good job of answering all the tiny little questions and the bigger ones.\n\nWe passed by a small store with a sign proclaiming \"Voodoo Doughnuts\" Specials on Bacon Maple bars...Mmmmm! Note to self, pick up a dozen on the way home. I can afford it now! Of course it also caught Lucretia's eye and she had to ask Nancy about it.\n\n\"What's a Voodoo? It's a doughnut?\" Lucretia asked with her eyebrows drawn together.\n\n\"Voodoo is a form of magic/religion. They just use it as marketing to sell doughnuts.\" Nancy replied.\n\n\"What is marketing?\" Lucretia asked, now watching the trolley on the light rail transit tracks.\n\n\"Marketing is convincing someone you have something they want.\" Nancy said finally. She looked over at me, and I gave a half shrug and a nod to confirm it.\n\nLucretia chewed her lower lips as she thought about this. Then she unzipped her hoody and looked at her chest.\n\n\"So when I wasn't wearing a bra, and you said it would attract men...that is a form of Marketing?\" she asked Nancy.\n\nI snorted and almost swerved the truck into another lane! Nancy clung with her claws to Lucretia's pant leg so she didn't fall over. When I had my chuckling under control I said, \"That is a new way to put it, but yes...you definitely could call that a part of marketing.\" \n\nThe questions kept on coming, Lucretia seeing something she didn't understand and Nancy resting her forepaws on the edge of the passenger window to peer out at what was being asked. Most of it was standard stuff about fashion, buildings, bicycles and animals. One really stood out when we were passing Skidmore fountain.\n\n\"Why is that man painted like metal and holding still?\" Lucretia asked.\n",
        "\"That is a statue dear.\" Nancy said.\n\n\"Oh...is that also a statue?\" Lucretia asked, pointing in another direction.\n\n\"No, that is a man painted like metal who is holding still.\" Nancy said patiently.\n\nI was so happy when the light changed to green and I could keep driving!\n\nFinally made it to the Pearl district and pulled into Will's garage. I wondered how to get Nancy in the house, sure she could have scurried along with us, but that seemed kind of rude. With Lucretia being all jealous, I wondered how to go about carrying her in. Nancy solved the problem by hopping into Lucretia's hood as it hung down her back. \n\nWe walked up to the front door and I took a moment to brush Lucretia's hair out of her face, adjust her hoody a little, zip it up a touch more. This was her first time meeting my best friend and for some reason I wanted her to look good. First impressions and all that kind of stuff. Lucretia was smiling at me the entire time.\n\n\"What?\" I asked, while straightening her hood, making it even on both sides, Nancy looking at me with twitching whiskers as if she knew something I didn't. I swear, women all over, even animal type women. They all know the \"I know something and I am not telling you what it is!\" look down cold!\n\n\"Nothing!\" Lucretia smiled at me.\n\n\"Tell me, what's up?\" I asked again.\n\nLucretia looked down at her boots before glancing at me shyly. \"I like you fussing over me Master.\" \n\nOh for heaven's sake! I am turning into such girl. Guys don't care about stuff like that! Yeesh!\n\nI put one hand on top of her head and mussed her hair up! Felt better immediately.\n\nShe grimaced and stepped a little behind me to pull her hair straight as I pressed the doorbell. Don't know why I did that, always just walked in before...it just felt right this time.\n\nI heard footsteps and Will opened the door. He was wearing a nice red polo shirt and dark blue jeans with what looked to be square toed loafers. \n\nHe smiled as he saw me and opened his mouth to say something when Lucretia gasped in shock.\n\n\"Vampyre!\" \n\nWill's jaw snapped shut as he rounded on my succubus, then he gasped and then growled.\n\n\"Outsider!\"\n\nI wanted to say something but Will snagged my coat with one hand and I was flying into his house head first! I hit his carpeted floor and rolled several times before I ended up sideways against the baseboard of a wall. I groaned as I started to rise, I heard Lucretia give a screech of rage as William slammed the front door and hit the lock!\n\n\"Will...?\" I asked, well...maybe I just said it, didn't ask...Or did I think it? Not sure...head fuzzy. I'm certain I said it out loud...I think. \n\nI guess I was feeling a little loopy from my earlier flight and subsequent crash landing. \n\n\"Don't worry Greg, I will protect you.\" Will said, walking briskly away from the front door. \n\nHis eyes were bright, and had settled on a deep red color instead of his usual color-changing pattern. I shook my head and groaned. There was a pounding noise and I thought it was coming from between my ears but it was actually coming from the front door. Will looked in that direction and gave a satisfied grin.\n\n\"I built my whole house to be strong enough to prevent any attacks from Outsiders. Not one of them have the strength to breach these walls!\" He said to me confidently. I finally got my brain in gear and said the first thing that came to my mind.\n\n\"Does that include a Lady Outsider who is bound to me?\" \n\nWilliam's grin slipped a little. \"A Lady you say...bound to you?\" I nodded. Will drew a deep breath and then let it out in a sigh.\n\n\"Oh...bugger!\" he groaned. Just then the ceiling caved in!\n\nLucretia came sailing down to the floor amidst a ruin of wood, tar paper and composite shingles, the moment her clawed feet touched the carpet she launched herself right at William! She moved so fast I didn't even see her move. \n\nOne moment I saw her falling, the debris hitting around the area where she would be landing, the next she was gone. Where she should have been standing were four deep gouges in the carpet.\n\nWill must have the reflexes of well...something that has really good reflexes! Somehow he dodged Lucretia's attack and as she went by him his eyes seemed to boil a deep red. She tumbled over a couch and then I saw William do something I never thought he would ever do. \n\nHe roared! \n\nCalm, reserved William who had a dry wit, and a penchant for good food roared a challenging battle cry that made my legs go weak! An answering shriek came from behind the couch before it sailed through the air at William's face. He made a motion with one hand and what looked like a stream of red liquid shot from his fingers and sliced the couch to ribbons and it fell apart in midair to pepper his body harmlessly. \n\nHe snapped his fingers once and the liquid came sailing back to him and floated over his hand looking for all the world like a teardrop.\n\n\"Did you say her name again after I told you not to?\" Will said to me quietly. His eyes were unnervingly intense, and his skin was as white as bleached bone. His fangs were very pronounced as they stretched his upper lip. His nostrils flared and I saw Lucretia charging him again. At which point I did something stupid. \n\nI know...me? Do something stupid? Shocking huh?\n\nI stepped between them, my hands raised palm out in either direction. I wasn't sure what was going to happen...I just knew I couldn't have my best friend and my roommate do this. I heard a gasp of surprise from Lucretia as her chest slammed into one hand. I heard Will's roar die out as his own attack, not sure what it was, splashed red all over me, it made a sizzling noise and steam rose from it. I felt a weakening on that side of my body, but no real pain. He quickly called the liquid back.\n\n\"Greg! Are you all right? I didn't mean to hurt...hurt...you?\" I looked down and a translucent blue film seemed to be slowly undulating around my body. I mean, my entire body! I looked down and could see that it was even under the soles of my shoes! I looked over at Lucretia and I could see her looking closely at my eyes again. It made me wonder, when I had hurt her in my sleep last night, had I looked different?\n\n\"Lucretia, did he hurt you?\" I asked.\n\n\"No Master.\" She responded. I could hear a startled gasp come from William.\n\nI turned to look at him, and my voice came out eerily calm, \"Lucretia is mine. Please...don't attack her again.\"\n\nWilliam dismissed whatever that red glob was in his hand with a shake of his wrist. He peered closely at my face then dropped his head to look at the floor. \n\n\"Well...this should be an interesting story. If I am to hear it I bloody well need a drink!\" He walked right past me and past Lucretia who was still in her battle form and disappeared down the hall.\n\nMy succubus began running long fingered clawed hands all over me as if to reassure herself that I was okay and I was actually there.\n\n\"I got so scared when that vampyre grabbed you and took you away from me!\" She murmured. Her hands were sliding over my face and around my neck. I beckoned to her with a finger and she leaned in a little closer. I gave her a quick peck on the lips making her blink in surprise.\n\n\"Now I have kissed you in all three forms!\" I grinned up at her. She smiled, but it was a nervous one as she glanced in the direction William had walked.\n\n\"Don't worry he's my friend. It will be fine.\" I assured her. She appeared unconvinced.\n\n\"Is this another one of those misunderstandings?\" she asked me. I nodded.\n\n\"Then by the Void he better apologize...that chjorzit!\" she growled.\n\n\"What does that even mean?\" I asked. \n\nShe opened her mouth to answer, then stopped and appeared to reconsider. Finally, after a couple of false starts she explained it.\n\n\"It's something I shouldn't have said...it's very bad.\" She responded.\n\n\"Would you say it to his face?\" I asked. \n\nShe thought about it. A couple of times she opened her mouth to speak and thought better of it. \n\n\"Maybe if I hated him, but no. It might anger him and then he would destroy me.\" She finally stated.\n\nWill, destroy her? Huh, that told me something about Will then, he wasn't an ordinary...wait. Lucretia called him a Vampyre. That difference in names again. Well, time to get some answers from my friend.\n\nI heard a squeaking noise and went back to the front door. I opened it and Nancy hesitantly came inside.\n\n\"Are you all right Gregory?\" she asked while surveying the ruin in the room. \n\n\"Just fine, come on in and meet my friend.\" I said. She scampered next to me until she caught up with Lucretia who had changed into her human form. My succubus put Nancy back into her hood and followed me into the main living area of William's home. \n\nHe was standing in front of his blood dispenser and was currently mixing a drink that seemed rather heavy on aardvark. He slammed it down and then began mixing another.\n\n\"Will...?\" I began.\n\n\"Wait dear boy...\" William said, after he polished off his glass again. He filled it a third time now, seeming to make it heavy on the platypus. He took a careful sniff, made a face at the drink and added a single drop from his hummingbird vial he kept next to the brass taps. Another test sip and he gave a grunt of satisfaction. He set his glass down, and closed his cabinet locking it tight. Then picked up his glass to lean against the wall while watching me closely. \n\n\"Well, I believe I am suitably inebriated to hear how my good friend is now MASTER to one of the most deceitful beings in existence!\" He took another swallow from his glass, grimaced, and eyed his drink like it had betrayed him somehow. \n\nLucretia glanced at me nervously and unconsciously her hand found mine. I gave it a light squeeze to reassure her. William noticed this with widened eyes, and shook his head sadly.\n\n\"You made a blood compact to boot! Really Greg? When you step into it you don't do things by halves do you dear boy?\"\n\n\"Maybe if you had explained a way to protect myself I could have avoided all this?\" I ventured. I had never seen William like this, normally he was serious or he was funny or...not like this. His eyes stayed red the entire time he watched us.\n\n\"What are you drinking Will?\"\n\n\"Blood, obviously...what were you thinking Gregory?\" He indicated Lucretia, not his drink.\n\n\"I was thinking of how to save my own ass when Lucretia and Moth...\" My voice trailed off as his eyes seemed to boil and his hand clenched tight around the glass he was holding. It shattered and I saw something that almost made me recoil back a step. \n\nThe falling blood slowed and stopped, then it reversed its fall to coat his fist. A moment later it seemed to seep in through his pores into his body! What the heck was going on? I engaged my Sight to view my friend to get any idea I could about what he was feeling. I got another surprise...there was no specter...it was all him.\n\n\"Do you mean to tell me that Mother came here, to this Plane?\" he said softly. I nodded. \n\nHis sharp eyes landed on Lucretia and he asked. \"This is her daughter?\"\n\nLucretia spoke then, \"I am her youngest.\" William's eyebrows raised in surprise.\n\n\"I thought Astar was the youngest?\" \n\n\"No. I was born shortly after the last time Mother came to this Plane.\"\n\nWilliam appeared to do some quick math in his head, \"How long ago were you born?\" he asked suddenly.\n\n\"What does that have to do with anything?\" I asked. He ignored me and glared at my succubus. She appeared to be thinking, then turned to me.\n\n\"A year has four seasons? Spring, summer, fall, and winter?\" she asked.\n\n\"Yes.\" I said.\n\nShe appeared to think some more and was ticking off numbers quietly on her free hand. William was starting to get more and more agitated. Finally she put him out of his misery.\n\n\"I was born 220 years ago by this Planes definition of passing time.\"\n\nWill let out a huge sigh of relief and slid down to sit on the floor. \"Thank all the gods of my forefathers and all the angels that blew their trumpets!\"\n\nLucretia put two and two together and got four. \"You thought that you had seeded me?\"\n\nWilliam gave a tired smile, \"That's one way to state it, but it sounds so...clinical when you put it like that!\"\n\nNow I got it, boy my brain is such a slow turtle! \n\n\"You got busy...with Mother?\" I asked incredulously. He grimaced at that. \n\n\"She makes it sound clinical, you make it sound tawdry...like...like I bent her over a basin or something! Is it so hard to believe that I wanted to know the pleasures of a woman? Is that not what you do with a succubus, enjoy their delights?\"\n\nI thought about it, and it made sense. From everything I knew a vampire couldn't have sex in the regular way folks do. A succubus, based on the little info I have could...I pushed that picture from my mind! Mother and William doing the naughty wasn't something I wanted in my...Oh! I thought of it again! Blech!\n\n\"Isn't that what you have done Gregory? I can imagine that if you had the chance to taste Lucretia's skills that it would help you with your reticence around the fairer sex?\" William asked.\n\nI wanted to smack him upside the head for saying that! How dare he make such statements about my Lucretia? She wasn't just some sex object to me! She was my student, my roommate, my friend! I L...!\n\nMy heart was pounding as I slowly breathed in. Thank goodness for deep breathing relaxation techniques. They came in so handy, better than aspirin for taking care of headaches and better than a slap in the face to wake you up. William was standing now, and he glanced between the two of us there in front of him.\n\n\"There is more going on here than I realize...\" he began, and rolled his eyes at me as I gave him a short nod. \"Then I think you better tell me the whole story before I...What in the world is that?\" \n\nNancy poked her nose out from behind Lucretia's head and climbed onto her shoulder.\n\n\"Really Gregory, I have enough blood in the house. I appreciate the sentiment, but, I have no need for you to bring me a snack.\" Will said.\n\n\"A SNACK?\" Nancy huffed in anger. She raced down Lucretia's clothing and skittered across the hardwood floor of William's living room right towards his foot! He blinked in surprised and backed up against his couch. Quickly Nancy scaled the couch and climbed onto the arm of it so she could better chew him out.\n\n\"How dare you sir! Gregory had invited me to come here to speak to someone who was a friend to help me in my situation! Then you throw Gregory around, someone who has been nothing but kind to me, and then lock him away from his Lady! Then you fight each other and make horrid accusations about them both! I for one will not stand for it! I would rather be HOMELESS than accept any help from an uncouth lout such as yourself! If you ever had any upbringing I suggest you apologize to my two friends right this instant!\"\n\nIt took a real force of will, not to laugh!\n\nI wish I had a camera to take a picture of William with an awestruck look on his face getting a stern lecture on etiquette from a...a talking RAT! Oh it was priceless. \n\nWilliam recovered quickly though. He immediately nodded to Nancy and turned his attention back to us. His face was serene, but I knew him. His eyes were flabbergasted!\n\n\"Miss Lucretia, I humbly apologize for any discomfort I gave you on arriving here at my home. I can only plead ignorance of all the facts of the situation, and a desire to protect my friend.\" He gave a small bow, and held it. I gave Lucretia's hand a quick squeeze, she looked to me and I motioned with my eyes in William's direction. She seemed to finally get it.\n\n\"I thank you for your apology and I accept. You may rise.\" I hadn't expected that last part. I gave her a questioning look and she gave me that predatory smile again.\n\nOh yeah...she's royalty!\n\nI went through the same thing with him apologizing, but I brushed it off. I'm a guy, no need to forgive each other for something like this! Guys just forget about stuff, women...different story. Men forget, never forgive...Women forgive but never forget. \n\nNancy was tapping her foot while watching William. He crouched down, resting his elbows on his knees to get a better look at his accuser. He smiled at her, showing just a hint of fang.\n\n\"Now, Gregory, please introduce me to this charming creature!\"\n\n\"Of course. This is my good friend William Henry Abernathy the Ninth. William, this...\" I was interrupted by Nancy clearing her throat. \n\n\"Thank you Gregory, but I would prefer to introduce myself.\" She said not unkindly. I shrugged and waved her to continue.\n\nNancy faced my friend and bowed her head once and then raised it up half way. In a soft, but carrying voice she began to speak.\n\n\"Mr. Abernathy, my name is Nancy Drew Dickson. I was so named by my former Master Allan Wade Dickson. I ask that you please call me Nancy as those other names have little meaning for me anymore. Other than the rough beginning on our meeting...I am very pleased to make your acquaintance.\"\n\nWilliam looked even more dumbfounded, yet very gratified at the same time.\n\n\"Forgive me...Nancy...I must ask. What has become of your former Master?\"\n\n\"He cast me aside in favor of a familiar more suited to his needs...I...\" Nancy's voice hitched for a moment and a soft squeak come out. She cleared her throat and continued. \n\n\"I don't know anything about him now. I haven't spoken to anyone until I met Greg and his Lady.\"\n\nWilliam rubbed his chin and looked off to the side for a moment. He nodded his head once then held out his hands together, palm up in front of Nancy.\n\n\"If you will allow me, I was about to prepare a luncheon, may I have the privilege of your company in the kitchen?\"\n\nNancy's whiskers twitched and then she slowly stepped into his palms and he carried her to the center island in his kitchen. He looked around for a moment and then set a large towel on the counter. \n\n\"For your feet.\" He explained to Nancy. \"I am sure a lady such as yourself has clean paws, but my counter is cold and I would like you to be comfortable.\"\n\nNancy preened a little at the praise, and Lucretia and I joined them as we set about preparing to cook.\n\nThe best way to get to know William is through food, and talking and preparing items to eat in the kitchen is a sure fire way to get him to relax...as long as you don't get in his way. Being what he is I have almost been trampled before when a timer went off and William rushed to get his souffl\u00e9' out of the oven in time! \n\nSoon we were seated around the dining table. William seemed to almost be his usual self. It was if he could sense something different about Lucretia, and me for that matter. That being said he seemed very alert, noticing my roommate's movements and mannerisms as she told her side of how we met. We finished up with her starting to draw energy from me in the cab of my truck and how I handled it in turn. The part where we came to his doorstep he already knew of course.\n\nWilliam wasn't going to pass up this chance to try out his cooking on fresh new food tasters! While he was serving food he excused himself when the doorbell rang. The insurance adjuster had come and gone with a shake of his head about how unlucky it was to have a meteorite strike the house. I have no idea how Will had managed to convince the poor fellow of that happening, but he managed it!\n\n\"So, what is it you needed me for? I assume it wasn't just the story of how you and your darling succubus came to live together?\" William asked while he finished serving us our meal. It was breaded razor clams and poached halibut with a weird sauce that smelled great and looked terrible!\n\n\"There are a number of reasons actually...\" I told him. \"First up, Nancy needs a home. Secondly, I got a bunch of gold that I need to turn into cash, and thirdly...thirdly? Is that even a word?\"",
        "\"Finally?\" Will offered.\n\n\"Finally...yeah, that works. Finally...I need your help with figuring out if I am a mage or not.\" I finished.\n\nWill nodded his head and poured me a glass of white wine. I promptly picked it up and set it in front of Nancy who looked around in surprise. She stood up on her hind legs to take a sniff of the drink, and a tentative lap with her tongue.\n\nWill laughed. \"I'm sorry I wasn't thinking!\" He stepped back into the kitchen and returned with a nice crystal cut decanter filled with a green liquid. I nodded my thanks and poured myself a small flute of mountain dew. He shuddered as he saw me take a sip.\n\n\"I work my fingers to the bone and you can't even drink a good wine with your meal.\" He muttered half in jest.\n\n\"You know why. I don't drink alcohol.\" I returned.\n\n\"Why not Master?\" Lucretia asked.\n\nI waited for William to take the first bite of his meal, then took a bite of my own...I had to admit it. The vampire really was getting good at cooking. Actually no, not a vampire...vampyre is what Lucretia called him.\n\n\"Lucretia, I turn into a real fool when I drink.\" I told her.\n\n\"That's not what I would call it!\" Will smirked. I glowered at him.\n\n\"What would you call it?\" Nancy asked.\n\n\"I turn into an outrageous flirt...let's leave it at that!\" I stated.\n\n\"What?\" Will asked. \"You're not going to tell them of last year's New Years Eve party debacle? That wonderful soiree at my office?\"\n\n\"Nope, and it would be very...VERY good for you not to do so either!\" I retorted.\n\nWilliam dissolved into a fit of chuckles while Nancy pressed him for more information. \n\n\"I will tell you later after he has gone!\" I heard William say to Nancy in a stage whisper.\n\nNancy seemed surprised by William saying that. \"After they're...? Why would I...?\" She held still and scampered across the table to stand on her rear paws to get a good look at William.\n\n\"Sir, are you offering to let me stay with you?\" Nancy asked in surprise.\n\n\"Why not? No one else lives with me! I even offered Greg one of my rooms and he turned up his nose like he was too good to live with me. Outrageous!\" He leaned closer to the table so his eyes were only a few inches from Nancy's.\n\n\"Wouldn't you like to live with me? Hmmm? I am just a lonely single vampire, living alone, having too much time on my hands to think about...being alone. I would love to have such an adorable and conscientious companion stay with me. Please accept my offer?\"\n\nPoor Nancy didn't know which way to turn or what to say. She just sat their quivering her whiskers and sputtering! \n\n\"My! Oh My! I...I...Uh! Mr. Abernathy I don't know what to...Oh my!\" \n\n\"Please, my dear. Call me...William. I insist!\" He said in his deep baritone voice.\n\nNancy now looked like she was going to swoon!\n\n\"Hey Will?\" I interrupted with a lazy smirk. I had my chin propped up in my hand as I stared in fascination at this master charmer at work. He glanced over and grinned at my expression.\n\n\"If you lay it on any thicker buddy, I'm going to need a mop and bucket to clean it up.\" I drawled.\n\nNancy seemed to break out of whatever trance Will had put her under. \n\n\"Mr. Abernathy...William! You are incorrigible!\" She stated in a mildly shocked tone. I couldn't help but notice she was still preening a little and giving him sidelong glances. \n\nWill laughed. \"See? This is what I need. A caretaker to help keep me on the straight and narrow! Pinocchio had his cricket conscience, I shall have a reproachful rat!\"\n\n\"I am not sure I like being classified as reproachful!\" Nancy said with a little heat.\n\n\"Were you or were you not full of reproach when lecturing me on manners not a half-hour past?\" Will returned.\n\n\"Well, there is that.\" Nancy acquiesced. She looked over at me. \"What do you think Gregory?\"\n\nI shrugged, \"Honestly, William is probably the safest place in the entire city that you could stay. You certainly won't lack for food.\"\n\nI turned my attention back to Will, \"Before we get too far into this subject, I need to ask you something.\" I wasn't actually sure how to ask. I didn't know if this was a taboo subject, or if it was too personal...like when you go to a public bathroom. You always leave at least one urinal space between you and the other guy when you go to take a leak if you can. I figured I would just ask it then, hopefully William knew me well enough by now to not be offended.\n\n\"Vampyre? Or Vampire?\" I asked.\n\nHe waggled his hand back and forth in the air. \n\n\"Alchemist.\" He responded.\n\n\"You're a scientist?\" I clarified.\n\n\"Remember how I told you that I began to mix animal blood? Well...I tried mixing other things as well. You see, vampires are...\" His voice trailed off and he sighed.\n\nLucretia spoke up then, \"You smell like one of the Old Ones. One of those before the Ice covered this Plane.\" He glanced at her and nodded. I did some quick math.\n\n\"You're older than 700 years?\" I asked.\n\n\"A little. I will be 723 in a few more weeks. That was one of the reasons I was glad to see you. I wanted to have a little party on my birthday.\"\n\nLucretia looked confused, \"You have to be older than that! My nose does not lie.\"\n\n\"It could be broken? Or are there other scents that are confusing it?\" I asked. She shook her head.\n\n\"No, he smells like one of the Old Ones...sometimes they come to our Plane. Vampires, being dead can cross the Veil fairly easily. That is why there always is one as a member of the Gatewatch.\" \n\nWilliam was nodding in agreement. \"Let me explain Gregory, understand I am not too proud of what I have done to get this way...\" He rubbed his hands together slowly, then steepled his fingers.\n\n\"The human mind is not equipped to handle long life. Whatever we are now, we once were human. I have learned over the course of time to compartmentalize my own mind into life spans as it were. I have lived seven different lifetimes, eight actually to be honest. In my first life, shortly after I was turned I was filled with diablerie. I reveled in the occult aspect of being a vampire. I rebelled against many of the traditions and teachings of my Master and the other Elders. For example, mixing and consuming animal blood.\" \n\nHe stood and began to pace back and forth in the dining area, he didn't appear nervous as much as he just seemed to be reluctant to talk.\n\n\"Will, if this bothers you we can do it another time if you want, or never...\" I said. Will interrupted me with a small smile and a wave of his hand.\n\n\"No...no, it's quite all right. You asked a fair question and I am sure Lucretia's curious nature would keep poking until she found a suitable explanation.\" \n\nHe slicked back his hair with one hand, and then continued his story. \"Vampires do not turn to ash as Bram Stoker wrote it. Our flesh disintegrates yes, but our bones are left behind. I went in search of these remains, always trying to find older and older remains. The reason for this...is rather embarrassing actually. I wanted to liquefy these remnants and make, well, a potion.\"\n\n\"You mean like those mixed drinks you make with animal blood?\" I guessed.\n\n\"Precisely. I had tried it on some other bones of freshly killed vampires, a few feral ones that I helped my master hunt down. Using a basic base of...well, doesn't matter. I succeeded in turning the bones to jelly and then mixed it with a base concoction of mine.\" He shrugged. \n\n\"I drank it, and felt...different. Some how I had taken the knowledge and skill sets of that being into myself.\" His fingers caressed his lips and he gave a small shudder.\n\nI already could tell where this was going and I wasn't sure if I was horrified or happy. I mean, think about it. Those dead vampires didn't need their bones anymore. If there was a way to get something cool to happen out of it, it was like the ultimate recycling job! William began to talk again, so I paid attention.\n\n\"I went in search of older and older remains, obviously. I found a full skeleton of one of my predecessors, he had been alive for a little over two millennia, and passed away in a forest fire 500 years before I was born. I quickly began the alchemical process and soon had three potions ready for consumption.\"\n\nHe stopped talking to open his blood cabinet back up, I thought he was going to get another drink...I was half right. He pulled out what looked to be a glazed clay jug that looked to be about two gallons in size. It was sealed with a thick white wax and had paper wrapped around the bottleneck.\n\n\"I drank the first two but saved this one.\" He said softly, running his fingers up and down the earthenware container almost reverently. \n\n\"After consuming the first potion I was astounded at how I could view the world...I had the insight of one who was far wiser than I, and the fortitude to investigate the questions that I had. After drinking the second I had memories and thoughts that were from a different time and place. I understood what a Vampyre was...how different a vampire is by comparison.\" He appeared lost in his thoughts as he gently placed the container back in his cabinet and locked it again.\n\n\"What is the difference?\" I asked. Almost instantly I felt sorry to say it, to interrupt his thoughts, but he seemed so melancholy.\n\n\"Put simply, it is power. Vampyres generally are older, and being older they have grown stronger and faster and more durable. By drinking the first two potions and, I assume, the third I will be almost as strong as my predecessor. But it is more than that. The true Vampyres walked among humans, they were teachers, historians, architects. They passed on the knowledge that came from their longevity to others. They were great men and women.\" He sighed and sat back down.\n\n\"Even if I was to drink that last potion I would not be a Vampyre...I would be a hollow imitation of what they were. That is why I do not drink it. I would be more powerful...oh yes! Each time I looked in a mirror though it would be a reminder, that try as I might, I could never reach that level of nobility. I just don't have it in me to do so.\"\n\nI was stunned! William was one of the nicest and most honorable vampires, no...vampyres...no...DANG IT! Men...William was one of the best men I knew. He looked past my labels at who I was as a person. He used his discernment on me, not his judgment...\n\n\"Oh please!\" I snorted. Will jerked up at the noise and glared at me.\n\n\"I share my deepest secret with you and you mock me?\" He said, raising his voice.\n\n\"All I have heard so far is that you were able to capture a little bit of what those old vamps had from way back when...I have heard nothing for you to be upset about. So you drank a blood and bone smoothie and it woke you up more to the whole wide world? Good!\" I said and stood up to walk over to him. I could see Lucretia and Nancy exchange nervous glances. Not sure what they had to be nervous about. I was the one poking a stick at sad sack of a vampire...vampyre...whatever!\n\nI looked down at my friend and crossed my arms giving him that half smile he found so annoying.\n\n\"From my perspective everything you have received from doing this...this thing has been a benefit. So what really has your knickers in a twist?\" I asked. He slowly began to stand up, keeping his eyes on mine. He was doing that thing I hate. Direct eye contact with a little snarl thrown in for good measure. I personally couldn't care less.\n\nI was having that same adrenaline rush I got when I was confronting Jemima at work...I almost felt drunk!\n\n\"You don't know what you're talking about...boy!\" he hissed.\n\n\"Enlighten me then...geezer!\" I said with a smile.\n\n\"I took power from another, I didn't earn it!\" he snarled.\n\n\"So...who gives a shit? Did your master, or any of your other friends say anything?\" His expression gave him away. \"Yeah, I didn't think they would. You didn't tell them...probably kept it a secret because you found a way to gain more power.\" I tapped my lips in thought.\n\n\"So besides you, who else knows about vampyres and how snazzy cool they were?\" I asked. He thought about it.\n\n\"Less than a handful. Mostly passed on through stories by word of mouth.\" \n\nI chuckled, \"Let me get this straight...you are all upset, and have been kicking yourself for a long time because you \"took\" power that you didn't earn?\" He nodded once and I could see the slight flush of shame rise in his cheeks.\n\n\"Will, I really do like you man, you are a good friend but sometimes you are an idiot!\" I put a hand on his shoulder, which made him stiffen.\n\n\"You earned the right to this \"power\" as you call it by coming up with your blood concoctions in the first place! Who else would have thought of it hmmm? Oh, and lets not forget that you have actual MEMORIES of these vampyres floating around in your brain while your old vampire buddies only have STORIES.\" I smiled at my friend.\n\n\"Whether you call yourself a vampire, vampire, man or mortality challenged...don't ever let me hear you talk down about yourself again. You hear me? If you do I will take strap you to a chair and force you to watch the Pirates of Penzance with Kevin Kline!\"\n\nWill made a face of disgust and looked like he needed to spit.\n\n\"I feel like I have some of those leaves in my mouth that you put in yours willingly!\"\n\n\"Oh, you mean wintergreen chew? Would you like some?\"\n\n\"Good gracious NO!\" Will actually recoiled away from me. Then he smiled.\n\n\"Thank you Gregory...it helps to see things from a different perspective sometimes.\" He admitted.\n\n\"I like to think of it as a better perspective myself.\" I said airily.\n\n\"This coming from someone who thinks Mt. Dew is an appropriate drink selection for a fish dinner?\" He returned dryly.\n\nWell, I am certainly glad to have this whole vampire/vampire thing sorted out. Telling him about the gold coins I realized something...this man is a genius. First off he got some of the people he works with to begin investing the gold quietly. Investing is a multi-faceted word I found out. I thought it meant something like stocks and bonds and so forth. William was quick to assure me that those words were applicable, but there were many more words as well. \n\nSo I sat back and let William do what he did best...direct, balance and supervise. He saw the amount of gold I had, did a double take and after a doing some quick math he got to work. He asked me if I trusted him, I told him I did.\n\n\"Wise decision my dear boy...welcome to being wealthy!\"\n\nSeveral phone calls later at least 14 different faxes that I had to sign and a couple hundred copied emails later we had a notary at the door who left after I signed documents that gave William power of attorney for me. I was in a whirlwind that left me with several thousand dollars in my pocket and a new preloaded credit card in my wallet. Lucretia had her own wallet which she made as a copy of Williams since she liked the tri-fold look better. She even nicely made him another copy of his original wallet since his was getting a little worn around the edges.\n\nThen I was talking with some general contractors that came over shortly after William dismissed the notary and I found the other aspect of investing. Maintaining what you already have. Found out with the housing market picking up my foreclosure house was actually worth a lot more than my dad had originally paid for it! After discussing repairs and finishing the rooms I signed yet another document that hired them to begin work on finishing my house.\n\nI honestly didn't care that much. As long as I had a mattress to sleep on, a place to cook and a place to get clean I was happy. Lucretia though seemed to be learning a lot as she paid attention to all that was going on. I caught some of the people coming through, especially the men, giving her sidelong appreciative glances. I made sure to stand near her and make a little bit of physical contact each time they did. I wasn't sure if it was to protect them from the danger they were in, or if I was being a little bit possessive.\n\nLet's just say I was confused and leave it at that shall we?\n\nWhen the last person left, Will stretched with his arms over his head making his back pop in several places.\n\n\"Well, that's two down on the list Gregory...what was the third thing?\" William asked.\n\nI looked at Nancy who was using Lucretia's advantage of having thumbs to look through the linen closet for appropriate bedding and so forth. Yep, problem one was taken care of it seemed. Nancy seemed excited to live with the older vampire. I had watched, as between phone calls Nancy fetched paper and pad as Will worked at his computer. They discussed the merits of different food, authors and classical music between emails and phone calls. She even got a pot of tea boiling! I wished I could have seen how she did that! It looked like they actually would be a good match as roommates. Almost as good as the one I have.\n\nLucretia came over to me and said, \"Nancy has finally decided on a place to sleep.\"\n\n\"Really? Where?\" I asked. William chortled. \n\n\"I have three bedrooms, two and a half bathrooms, plenty of storage space, a garage, basement and an attic! The young lady can sleep where she wishes.\" He said grandly.\n\nLucretia frowned in thought and then said, \"She said that she found a nice pair of...saddle-tip shoes? I think that is what she called them. They were very old and have...\" she trailed off as William tore out of the room!\n\n\"That cheeky trollop! NANCY! Stay out of my closet!\" He thundered as he marched down the hallway to his bedroom!\n\nI started laughing! William is at his best when he starts calling people those odd British curse words like trollop and bollock and nutter. I don't know what they mean, but they are funny to listen to!\n\nI could hear them arguing, well, I could hear her high-pitched voice compared to William's baritone going back and forth in the other room. It sounded like he was having the time of his life!\n\n\"Gregory?\" Lucretia said, stepping front of me to get my attention.\n\n\"Yes?\" I answered. She fixed me with a frank gaze, and almost looked a little upset with me.\n\n\"Why did you need to ask William about your magic?\" she asked. I wondered what she was getting at.\n\n\"He's the only one I know who uses magic besides Gwen. I thought he would be good to ask.\" I replied.\n\nLucretia now did look upset. She even put her hands on her hips to glare at me!\n\n\"Master!\" she said hotly, \"...did it ever occur to you to ask me if you were a mage, or how to use your abilities? Or did you think that since you are my teacher that I wasn't worth asking a question like that?\"\n\nMy mouth dropped open and I was rendered speechless! Of course! Mother had told me Lucretia used magic. I saw her use magic on a number of occasions, why didn't I think...? Crap, she was right. I never thought to ask her about it. I just assumed that since she was so innocent of our world and the things in it that she was just that, an innocent and naive person.\n\nI needed to remember that she is basically royalty. Her world may be alien to me, and everything is different here for her...but she is 220 years old! She has survived much and has years of experience over me in a lot of areas in all probability. \n\nI am a fool.\n\n\"Lucretia? I am sorry...\" I said contritely.\n\n\"For what?\" she asked, crossing her arms and tapping a booted foot on the floor.\n\n\"I am sorry for not treating you like an equal. I apologize.\" I said.\n\n\"Oh...I see...\" she said. Her tone of voice was still frosty enough to chill beer. \"So how do we fix this situation...Maybe some bowing and scraping would be in...\" she stopped talking as I glared at her.\n\n\"I bow to no one!\" I muttered darkly. Lucretia smiled at that. \n\n\"Looks like we found out one way to call up your power Greg!\" She told me with a bright smile. I looked down to see that odd flowing blue color on my chest and hands. Why that sneaky little succubus! She planned to get a rise out of me to see what it took to wake up my abilities!",
        "\"Well, looks like you got a reaction out of me, so what do we do now?\" I asked.\n\nShe looked me up and down, came closer to flick her finger at varying places to test that blue barrier. She suddenly switched to her full combat form.\n\n\"Now we test it.\" She said simply, and punched me hard in the chest!\n\nTo be continued..."
    ],
    "authorname": "payenbrant",
    "tags": [
        "succubus",
        "rat",
        "vampire",
        "sex offender",
        "mage",
        "romance"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/mine-yours-pt-07"
}