{
    "title": "To Walk a Mile",
    "pages": [
        "Author's Notes:\n\n'To Walk a Mile' is the third book of a one off story that inexplicably became a trilogy. \n\nMinimal effort is made in the following pages to explain the backstory so it is highly recommended you read the first two stories.\n\nThe trilogy follows this order:\n\n\u2022 One Who Understands\n\n\u2022 The Most Valuable Gift\n\n\u2022 To Walk a Mile\n\nAll characters engaging in sexual relationships or activities are 18 years old or older.\n\n********\n\nTo Walk a Mile\n\n********\n\nChapter 1\n\nEd liked his new truck. It was shiny and big and had a heater that worked. It had lots of other toys too but he hadn't really played with them yet. He'd discovered the air conditioner though.\n\nThe truck was a present from some of the ladies he loved. When his previous F-150 was destroyed in an accident he'd insisted that he could take the bus to work but they wouldn't have it. Rachel, Angie, and Zoe had all pitched in to buy him a brand new Ford F-150 XLT. It was black with chrome accents in a sports package look, whatever that was. All he knew was that it drove really well and he liked it.\n\nWhile the heater worked and he'd made good use of it over the winter months, he certainly didn't need it these days. Spring had arrived early and it seemed like summer was in an even bigger hurry. Even though in two days it would only be the first of May the temperatures were higher than normal and he'd been able to go without a jacket for the past week. His work coverall was plenty warm enough on its own.\n\nHe rolled his shoulders, enjoying the lack of tightness the new coverall he'd just been given this morning now afforded him. Over the winter months he'd gotten back into his workout routine and discovered he'd increased his muscle mass to the point where his already form fitting coverall had become constrictive. Gwyneth was the new office's dispatch / receptionist / human resources officer at Drakos Heating and Cooling. She'd ordered the new coverall to give his new larger, harder muscles some space to breathe.\n\nWhile Gwyneth was a bubbly, smart, and plump bundle of energy who was fun to talk to, he missed Lydia. After a whirlwind romance she'd married a lawyer named Julian and no longer worked for her Dad. Ed had attended the wedding and Julian seemed like a really nice guy. Ed wished them both a long and happy marriage.\n\nEd pulled his mind back to the task at hand. Gwyneth had dispatched him to a job in his own neighborhood. Zoe's new construction in fact. Her new house was coming along nicely. It was unlike any house Ed had ever seen before and had some rather challenging heating and cooling requirements. Ed enjoyed the challenge and had offered some innovated solutions for the unique build. Zoe had sworn him to secrecy so he couldn't reveal any of the details to his family and friends. She wanted it to be a surprise when it was ready for 'the big reveal' as Zoe called it.\n\nHe pulled up to the gate and pressed the buzzer.\n\n\"Hi Ed, come on in!\"\n\nThat was Zoe's voice so she must be in the construction office trailer. The gate opened and Ed drove in and parked next to it. He walked inside and she rushed over to get a hug and a kiss.\n\nAt 5' 3\", Zoe Sandoval may have been petite in stature but her curves were breathtaking. More the result of medical science than nature perhaps but eye catching in the extreme. Her breasts were large and round, larger than her small frame normally supported. She was diligent with her exercises to maintain the muscles required to prevent excess strain on her back so her core was hard and tight. He'd experienced first-hand how strong the petite powerhouse was.\n\nHer ass was also plump and round though Ed was sure that was more nature than anything else. With her caramel skin, abundance of gold bangles, earrings, and necklaces, some of which were disappearing into her deep cleavage, she was pure sexiness in a compact package. It was all Ed could do to keep his hands out of her long ebony locks and off those curves as he greeted her with a kiss on her sensual mouth.\n\nShe purred as she pulled her lips back from his and took in his new coverall. \"Dios! You're looking good in that new uniform! I could eat you up!\" Ed's face blushed as they weren't alone.\n\n\"Isn't that sexual harassment?\" came a voice from behind them.\n\nEd looked over Zoe's head at the grinning man leaning back in his chair. Clint Masterson was the site foreman and had been difficult for Ed to deal with since day one. \"I don't think so. She's my girlfriend so I think it's... legal,\" Ed replied with a note of concern in his voice. Clint's grin got wider seeing Ed's worry.\n\nZoe spun to glare at the man. \"That's right! He's mine so I can say all kinds of nice things about him!\" she growled. She didn't like how the man was always picking on Ed's naivet\u00e9. Ed was an innocent and didn't understand when someone was just teasing or being sarcastic or worse, lying.\n\nShe looked back at Ed. \"Why are you here today?\"\n\n\"Final inspections of the systems we installed,\" Ed replied.\n\n\"Well, get to it boy! Don't waste my time standing around here all day swapping spit with your girlfriend!\" Clint barked.\n\nEd jumped and quickly made his way out of the trailer. He heard Zoe's raised voice as the door closed behind him. He put on his hard hat as he entered the construction zone and got to it as Clint had requested.\n\nSeveral hours later Ed exited from the site. His new coverall was now covered in drywall dust, sawdust, mud, and he had a few grease smears on a sleeve from accidentally brushing it against... something, he couldn't recall specifically when it happened. He'd been all over the building from the roof to the cellar and everything had passed his inspection with flying colors. Considering how meticulous he was during the installation and how critical he was of the work done during his inspections he was pleased with the result. He took a deep breath and entered the trailer one last time.\n\nHe was surprised to see Mr. Drakos leaning across Clint's desk barking at the man. Clint did not look happy.\n\n\"Oh, sorry! Should I wait outside?\" Ed said with a surprised expression.\n\n\"No Ed, why don't you stay and see what crying to your boss resulted in,\" Clint growled.\n\n\"Clint, you're an idiot. Do you know that? He didn't call in the complaint.\" Mr. Drakos growled and turned. \"Ed, what did you come in here to say?\"\n\n\"Uh... I came in to say I finished the inspection. It took a long time as it's such a complex installation but everything passed. I- I came in to do the sign off.\" Ed said blinking at the two men. He had no idea why they were so angry with each other.\n\nDrakos locked his eyes on Clint's. \"Ed was working since he arrived today because he's a professional. He does his work and it's second to none. Ed doesn't call in complaints. The client did.\"\n\nClint stood facing Mr. Drakos with a clenched jaw.\n\nMr. Drakos looked at the foreman and sighed. He'd never hire or recommend the man again. He was a bully and had a cruel streak. Ed wasn't the only one Clint had given a hard time. \"Sign the paperwork Ed. Then you're done here.\"\n\nEd moved forward and Clint stiffly slid the paperwork across the desk at him. Ed added his signature to the appropriate places and stood back. Clint picked up the document and added it to the docket.\n\n\"Bye Mr. Masterson,\" Ed said with a cautious nod. The man nodded stiffly in return and turned away.\n\nMr. Drakos followed Ed out of the trailer. \"Sorry you had to deal with that jerk,\" the older man said.\n\nEd shrugged. \"He wasn't too bad. I know some of the other guys didn't like him but I didn't have to like him to work with him. I just ignored the other stuff.\"\n\nDrakos smiled self-consciously. \"I guess I've just become a little over protective of you.\"\n\nEd smiled at the man. \"Then I should thank you for looking out for me.\"\n\n\"You going back to the office now?\" the older man asked.\n\nEd looked at the time. \"I should check on Victoria's place while I'm here, then I'll head back.\"\n\n\"You're still doing that?\" the man asked.\n\n\"Yes. She's still away. I'm still not sure when she'll be back. Or if she'll be back at all,\" Ed replied with a little shrug but his face looked sad.\n\nMr. Drakos just patted his shoulder and made his way to his car to drive back to the office.\n\nEd drove his truck up the hill to the top, not much of a distance from Zoe's really, and let himself into the mansion with the key Victoria left him with. The large house was silent, accentuating its museum like ambiance. Ed made his way through his routine of inspecting the home for any sign of damage from water damage to broken glass. Once he was done he was in the master bedroom and his mind returned to the last time he'd been with the woman. He remembered her lovely blonde hair spread out over the mattress under her, the flush in her cheeks from their lovema- he struggled to push the memories away as he began to stiffen in his tight clothes. The coverall could use just a little more room in the groin region he realized.\n\nVictoria Rutledge was the widow of Judge Nelson Rutledge, who Ed discovered was an evil little troll of a man. While Victoria was tall, svelte, and with her allure and class reminded Ed of a Hollywood actress of the 1940's like Veronica Lake, the judge was small in stature and low in character. He was both physically and mentally abusive, controlling, and deeply corrupt. He'd killed a man Victoria had had an affair with and was going to kill Ed when he believed she'd bedded him as well. Ultimately Victoria had killed the judge with his own gun and spent some time in prison before her lawyer found evidence to prove her battered wife syndrome.\n\nNow she was in England with her parents but more importantly with her two girls, reunited after their tumultuously emotional separation. Victoria was getting the psychiatric treatment she needed from years of abuse from her husband. The girls were seeing a counsellor. They were learning the truth about their family and how much they needed each other after the ordeal.\n\nEd recalled how desperate Victoria had been when he came to visit her two weeks after the Christmas Party. His leg had taken longer to heal than expected and she was upset that he'd postponed the previous week's appointment. She'd had some harsh words for him.\n\n\"Is that the kind of man you are? Lead a woman on and leave her hanging?\" she gasped, tears beginning to pool in her thick lashes.\n\n\"What? No! My leg hadn't healed and I was restricted to office work. I did try calling you but you didn't answer.\n\n\"I was angry!\"\n\nEd blinked at her. He wasn't following this conversation at all. \"I'm sorry. How could I know if you wouldn't speak with me?\"\n\nSuddenly she was crushed up against his chest, clinging to him with all her strength. Her hair was under his nose and the scent of melon and something tropical tickled his sense of smell. He felt her trembling so he wrapped his arms around her. He felt her relaxing within his embrace.\n\n\"I'm sorry,\" she whispered.\n\n\"For what?\" he asked.\n\nShe pressed her face against his neck under his chin, taking comfort from his solidity. \"For being so emotional. So... needy. The others... they don't behave this way, do they?\"\n\nEd tilted his head back and she looked up at him timidly.\n\n\"One of the things you can depend on me to be is discreet. This means I won't tell anyone about our time together. That also means I won't speak about theirs with you,\" he said gently.\n\nShe searched his eyes but saw only honesty. She nodded and smiled faintly.\n\nEd was delighted she'd relaxed her need to have her make-up airbrushed on to perfection. She really was beautiful but now she looked human, not like a perfect porcelain doll. Lovely hazel eyes, a strong but slim nose above eminently kissable lips with her trademark bold red lipstick. Her yellow gold hair fell in relaxed waves around her face and over her shoulders. He couldn't resist the impulse to finally slide his fingers into her hair. Victoria's eyes closed in happiness at the feel of his touch and her gently smiling lips parted. Ed found his mouth on hers and he was kissing her deeply and sensually. She gasped and clung tighter as her tongue plunged into his mouth. He sucked on her tongue aggressively and moved one of his hands down her back to her ass as the other gripped her hair.\n\nVictoria was gasping for breath as Ed's hands and kiss made her so excited. She hadn't felt this way since she'd taken a secret lover. Miguel. A pain went through her heart as she remembered how Nelson had him killed and disposed of. Then Ed's hand squeezed her ass and she forgot all about Miguel and Nelson.\n\nShe pushed at Ed's chest to break the kiss and he blinked at her in a lustful daze. She smiled at his need for her. \"Could- could we go upstairs?\" she asked. He was only able to nod. She took his hand and led him up the long curved staircase to the second floor and down the hall to the master bedroom. The huge bed, cold every night now that she was alone, stood waiting for them. She walked them over to the end of the bed and turned to face him.\n\nEd caressed her lips with his and she felt tingles rush down her spine. When his large hands slid under her sweater over her stomach she gasped aloud and her eyes flew open. He smiled at her as he gently moved his fingertips over her blouse from front to back gradually working her sweater up her torso. When his fingers passed over her breasts she moaned with need and looked deeply into his eyes. Before she could surge forward he lifted her sweater up and pulled her arms above her head.\n\nHe got the sweater off but held her wrists together above her head with one hand while his other hand explored her breasts through her blouse and bra. She squirmed, cooed, and panted as his touch triggered wave after wave of pleasure to course through her body. She felt helpless in his grip yet safe as well for he was only doing what she'd wanted him to do all along.\n\nEd's clever fingers found the buttons on her blouse and quickly popped them open one at a time from the top. She was seriously aching for his touch against her bare skin. Once he had the top open his hand slid inside and caressed her stomach, her side and moved around to her back. Her breath was coming in gulps now and she pressed her knees together to calm the maddening tingle between her thighs as her juices ran down the tender skin there.\n\nA quick flick of his fingers and the clasp on her bra parted. She squeaked in surprise then cooed as his large hand slid under the lace to cup a breast.\n\n\"Oh my god! Oooohh!\" she breathed as his fingers found her stiff nipple and gently squeezed and tugged on it. Her knees wobbled and she might have fallen except for Ed's undeniable grip on her wrists. His hand left her breast and moved to the zipper on her slacks. His fingers were just too nimble as he had the pants sliding down her legs in seconds and his hand sliding over the thin panties on her ass before she was aware he had her undressed.\n\nEd released her wrists and used both hands to push her blouse back over her shoulders. Before she could work her arms free he laid her back on the bed, effectively trapping her arms at her sides. He moved over her and kissed her hard. She mewled into his mouth as she couldn't get enough of his kiss. While she was distracted he pushed her loose bra upwards and took her tits in his hands. He gave them both a firm squeeze.\n\n\"MMMMMmmmnnn!\" she gasped into his kiss.\n\nHe moved his mouth to her neck and ran his lips down the creamy skin of her throat.\n\n\"Edward! Oh yes!\"\n\nWhen his lips met her nipples she cried out in bliss. He circled the stiff peak with the tip of his tongue making her arch her back then he sucked it into his mouth and strummed it with his tongue. He repeated the treatment to her other nipple and she cried out with the intensity of the pleasure.\n\nEd continued to kiss and caress his way down her torso and he felt her stomach muscles jump and twitch as he passed her belly button. He dipped his tongue into the small indent and she burst into giggles. He smiled up at her as she raised her head to look down her body at him.\n\nWhen the tip of his tongue left her belly to draw a straight line downwards her eyes grew large as she realized what he was about to do. No one had ever done this for her, not her Latin lover Miguel and certainly Nelson hadn't. But Ed was looking up at her with hunger in his eyes and her body shook with the surprise of her realization of what was about to happen. That's when she noticed he'd tugged her slacks the rest of the way off her legs and was now sliding her panties past her knees. How? She'd been so dazed she hadn't noticed his hands at work.\n\nVictoria took a sudden deep breath as she'd been holding it. Ed began to press his lips against the tender flesh of her lower abdomen in slow sensual kisses.\n\n\"Oh Edward! Oh! Oh! Oh my god! I've never- OH!\"\n\nEd ran his tongue over her glistening pussy lips and her body went into convulsions. She dropped her head back on the bed and made cute little mewling sounds as her body went through a gentle orgasm as he licked and sucked at her tender flesh.\n\nShe became too sensitive to touch so he stood up at the end of the bed and began to take his coverall off. He was stepping out of it when Victoria's eyes focused once more. She looked down the bed towards him and watched him slowly lifting his white undershirt up his hard, muscular torso. As the muscles were exposed to her eyes she bit her lip and felt a throbbing begin between her legs. The shirt lifted up and over his head and she sighed as she saw his powerful pectoral muscles and thick arms hanging from his broad shoulders. Miguel had been slim and graceful like a heron. Nelson was thick and short like a fireplug. She pushed herself up on her elbows to be able to see him better and tugged herself free of the blouse and bra.\n\nTo Victoria, Ed was built like a god from Olympus!\n\nShe watched him run his hands down over his tight stomach muscles to hook his thumbs into the waistband of his boxers. The black silky material hid his dimensions from her eyes but she never looked away as he slowly worked the underwear down his hips. She realized he was teasing her and growled in frustration making him smile.\n\nEd wasn't delaying just to tease her. He was genuinely nervous of her reaction to seeing him naked. He took a deep breath and pushed his boxers down as he watched her cautiously. He hoped she wouldn't scream.\n\nVictoria's eyes got bigger and bigger as she watched Ed's thick and long cock emerge from his boxers. When it finally bounced free from its confinement she sucked in her breath. She'd never seen one so... dauntingly big! She looked up at Ed with an expression that warred between nervous and awestruck.\n\nHe relaxed a little when she didn't shriek in fear but he noticed she wasn't looking exactly pleased with the result of his unveiling.\n\n\"Should- should I get dressed again?\" he asked carefully.\n\n\"NO! I- I mean, no. I'm just... surprised. I wasn't expecting... so much... of you,\" Victoria stumbled through her words.\n\nEd smiled. \"Yeah. I've heard that before and I've certainly heard worse.\"\n\n\"Worse?\" Victoria asked looking at him curiously.\n\nEd nodded and a pained look passed over his face. \"I've been called monstrous. A freak. Mutant... and some other bad words.\"\n\n\"No... how could they say that about you?!? They didn't know you!\" she gasped in shock as she looked in his eyes with compassion in hers. As if drawn there her eyes moved back to the thick appendage hanging down between his legs. She realized it wasn't erect yet and her eyes widened once more with the shock.\n\n\"May- may I touch it?\" she asked, her eyes never leaving the gently swaying flesh.",
        "\"Yes.\"\n\nVictoria pushed herself up onto her knees and made her way to the end of the bed. She sat on the end of the mattress and felt a tingle shoot through her pussy which was still coming down from her previous fun.\n\nShe was closer to Ed's cock now and it looked even more intimidating. She reached out slowly and touched it with the fingertips of her right hand. She couldn't stop herself from moaning as she felt the hot skin's silky smooth texture. For just a second her mind flashed to an image of a powerful, dangerous snake and shivers ran down her spine. She wrapped her graceful fingers around his girth and was shocked to discover her fingers barely met. She felt him throbbing in her hand and soon she realized she couldn't close her hand around it.\n\n\"Oh god Edward! You're so big! How? How could this possibly fit?\" she said breathlessly as she brought her left hand into play and stroked his length. She was mesmerized by what she was holding and fondling in her hands.\n\n\"Victoria, that feels very nice!\" he sighed.\n\nShe looked up at his face in surprise and saw he really seemed to be enjoying her touch. Emboldened by his obvious approval she stroked him from the head to his heavy balls which she cupped in the fingers of her left hand.\n\n\"Oh, that's good!\" Ed groaned.\n\nVictoria was beginning to tingle in her special place once more and feeling his heavy cock in her hands was making her feel so very wicked! She'd never handled a man like this before! She suddenly needed to have him inside her, but his size!\n\n\"Edward... I- I want you to make love to me... but I'm afraid.\"\n\n\"We don't have to do anything you don't want to do. We can stop at any time,\" Ed assured her. She nodded. \"Do you have any personal lube?\" he asked.\n\nFrom the shocked look on her face Ed saw the answer was no.\n\n\"What- why would I need that?\" she gasped then looked once more at what she was still holding. \"Oh!\"\n\n\"We'll take it really slow. You can say stop at any time and I will,\" he said gently and she smiled at him. He took her hands which released his member reluctantly and he pulled her to her feet.\n\nThey were standing before each other, naked. Ed pulled Victoria's body against his and his cock slid between her thighs, pressing hard against her wet pussy. He felt her heat against him and from her gasp she felt his. He kneaded her ass in his hands and she moaned as she clung to him and shivered from the sparks shooting through her.\n\nEd moved his mouth to hers and she kissed him hungrily, her arms wrapping around his neck as she rubbed her pussy up and down his hard shaft.\n\nVictoria's mind felt like it was whirling away as she acted on instinct. She'd never been so bold before but Edward's strength and calm freed her from her inhibitions. His hunger for her matched hers and she knew she had to have him, he would be hers and hers alone! She knew it would be difficult to separate him from the other women but she couldn't share him! She needed him to be hers. She would find a way!\n\nPassions overwhelming her, she thrust her tongue into his mouth and he sucked on it strongly.\n\nHe suddenly pulled back and laid her back against the mattress and knelt on the bed to pull her further up. Then he pushed her knees up to her chest which raised her ass off of the bed. She gasped as he ran his hot flesh up and down across her wetness.\n\n\"Oh! Oh! Edward! Yes! Take me! Oh yes!\" she gasped.\n\nThen she felt it.\n\nThe thick head pushed into her body and she stopped breathing. He was- he was so- big. He seemed to be waiting then he pushed in another inch. The breath she'd been holding rushed out and the intruder slid in another two. She bit her lip to keep from crying out. She was coming apart. She was turning inside out. She wanted to scream and push him away as he'd promised to take it slow. Then she needed him deep now as he was going too slow!\n\nWhen he pulled his fat cock from her body she could no longer contain her cries.\n\n\"NO! NO! IN! DON'T TAKE IT OUT!\" she wailed and wrapped her legs around him to pull him deeper.\n\nShe was able to get half of his cock buried inside her before he managed to grab her hips to stop himself from driving in deeper. Her legs tugged but his strength would not be denied. She shook and trembled under him as he struggled to keep from crushing her under his large body.\n\nEd gasped for breath as he balanced on his head and knees arching his body over hers. When Victoria had yanked him deeper with her legs he felt himself going too deep too fast and knew she'd be hurt so he had to quickly move his hands from bracing himself against the mattress to her hips to stop his descent. This meant balancing on his head next to her neck.\n\nHe pulled his hips back against her straining legs and she began to whine with need. He eased his pushing against her hips and his cock sunk an inch further inside. He stopped her once more.\n\n\"Edward! So big! You're splitting me apart! Too full!\" she muttered even as she tried to pull him deeper.\n\nHe pushed and drew himself out to the head.\n\n\"NO! NO! FUCK ME!\" Victoria howled as she strained to pull him deeper. He drove forward once more and went an additional two inches deep as she wiggled her hips roughly and one of his hands slipped.\n\nVictoria's eyes flew wide as the sensation of fullness and the ache of him spreading her walls wide overwhelmed her. She knew she still didn't have it all yet but she was sure she would tear in two if she tried to take more. She was panting shallowly as that seemed to ease the deep ache she was beginning to feel.\n\nHow did the other women take him? It wasn't fair! She wanted him! She needed him! She would have all of him! She felt him bracing his hands on her hips to push himself free once more and she relaxed her legs to let him do it. God! The emptiness of her body when he pulled himself out made her want to cry but she bit her tongue to distract herself.\n\nOnce he was out to the head once more she trembled as it felt like such a tease. The vacuum he'd left behind needed to be filled and this time he was going all the way inside. She slid her hands down his powerful arms and caressed his hands. The skin on her hips was slick with a thin layer of perspiration. She waited until he relaxed then she tugged his hands outwards as she squeezed her heels against his ass with all her might.\n\nEd was caught off guard by her move and his pelvis dropped to slam against her rising one.\n\n\"AAAAAAAAAAAAIIIEEEEEEE!\" Victoria screamed and clung to Ed to keep him from moving. It was too much! She was in heaven! His body was rocking against her clit as the head of his cock was pushing against her cervix. That wasn't the most comfortable of sensations but her clit was doing its own screams of joy. She felt her body flush with heat and tremors began rushing through her. Something was building very rapidly and it was all she could do to hold still as her hips automatically began to roll and rock against Ed's body, grinding her clit against him.\n\nEd was surprised by her move but there was little he could do as she held on to him so tight. He moved his hands up to lift himself up a bit to reduce the pressure on her chest. She clung tighter and rubbed her tits against his chest as her pelvis ground against his. Ed was getting close and the velvety smooth heat gripping his entire cock felt too good! Her gyrations were adding to his pleasure and he took her mouth in a fierce kiss.\n\n\"MMMMMmmmfffff!\" she moaned into his mouth as her pleasure spiked.\n\nHis hips began to rock as well and soon he had a shallow thrust happening with a bump against her clit with every down stroke.\n\n\"Uhhh! Oh! Uhhh! Fahhh! Oh! Guhh!\" She blurted sounds with every impact and her trembling grew stronger.\n\nEd's hips sped up as his release reached the apex and the sound of wet skin slapping together filled the room.\n\n\"There! I'm there! Oh! EEEEEEEEEDDDDDDDDDD!!!\" Victoria squealed as her body spasmed and shook through an almost violent orgasm.\n\nEd slammed his hips home one final time and he fired his cum deep inside in surge after surge.\n\nThe heat filling her up made her eyes roll back as her body was wracked with too much sensation.\n\nThe waves of bliss washed over her for what seemed like an eternity. When Victoria's mind drifted back to her body she felt such a glow of inner peace tears came to her eyes and rolled slowly down her cheeks. A large finger gently caught one of the tears.\n\n\"Hey? Why are you crying? Did I make you unhappy? Did I hurt you?\" Ed asked with concern.\n\nShe turned her face to look at him. Her beautiful yellow hair spread out in a halo around her head and her cheeks were pink with a flush. She smiled and shook her head.\n\n\"No Edward. I'm... so very happy! I can't contain it so it leaks out. You've made me so happy,\" she sighed and a smile came to his face. This was quickly replaced with another concerned look.\n\n\"You went too quickly. I'm too big to take that fast. You need to work your way up slowly. I didn't want to hurt you!\"\n\nBeneath the incredible tingles she was floating in she noticed a deep, deep ache and realized this would probably be very uncomfortable later. So be it. She wouldn't have changed anything. \"I know. It was my fault, Edward. I was too impatient to have it all. It was... amazing!\"\n\n\"It was pretty amazing for me too!\" he said, his smile returning. \"I-\"\n\nThe phone next to the bed began to ring. Ed looked at the surprised look on Victoria's blissed out face. He reached over and picked up the handset for her and she moved it to her ear. Ed was too close not to hear both sides of the conversation.\n\n\"Hello?\"\n\n\"Victoria?\" It was a man's voice with a British accent.\n\n\"Daddy?\" she gasped in surprise, reverting to her childhood responses instantly.\n\n\"Yes, darling. We- we spoke with your barrister today. She informed us of what that man did to you. Is it- is it true?\"\n\nA sob leaked out and Victoria held her hand over her mouth. When she could she spoke again. \"Yes.\"\n\nThere was a muffled gasp at the other end as emotions overflowed. Ed picked up the sound of a woman crying in the background. He was embarrassed to be listening in on this very personal call so he made to leave. Victoria quickly reached out and grabbed his arm to stop him.\n\n\"Daddy?\"\n\nThe man's voice came back but it was deeper now and trembling. \"Darling, I'm booking a flight for you. It leaves at 9PM your time tonight. Pack your things and be on that flight. You're coming home. We'll take care of this. We'll take care of you. Your daughters need their mother. We're so sorry we treated you that way. We were bloody idiots! Please forgive us and come home!\"\n\nVictoria burst into tears and clung to Ed as her emotions imploded. It was all too much. She dropped the handset.\n\n\"Hello? Victoria dear?\" came from the speaker.\n\nEd picked up the phone and held it to his ear as he looked at the weeping woman. She nodded to him and put her hands over her face as she cried.\n\n\"Hello?\" he said.\n\n\"Who is this?\" was the terse reply.\n\n\"My name is Ed Walters, sir. I'm a friend of Victoria's. She's crying too hard to speak right now but I'll make sure she's on that plane tonight.\"\n\n\"You were listening?\" the voice sounded indignant.\n\n\"Yes, I'm terribly sorry for my intrusion but Victoria went through some pretty awful treatment from Judge Rutledge. He hurt her pretty bad. She needs her mom and dad and she needs her daughters so I'll get her packed and on that plane.\"\n\n\"You- you know what that man did to her?\" the voice was calmer now but shaky.\n\n\"Not the details, but I saw some pictures and I can see how hurt she is inside. It must have been awful for her,\" Ed replied and Victoria clung to him tighter as her gasps got louder.\n\n\"Thank you for looking out for her. I- we were under the impression that she was alone,\" the man said, his voice continuing to wobble.\n\n\"Yes, everyone she knew here abandoned her but the ladies in this neighborhood and I welcomed her into our family. Victoria's good people. She didn't deserve that,\" Ed said with a frown.\n\nHe heard a choking sound from the other end of the phone and the sound was muffled. Ed looked at Victoria whose tears were finally slowing.\n\nThe speaker cleared and a woman's voice came on. \"Hello?\"\n\n\"Hello. Is this Victoria's mom?\"\n\n\"Yes, who are you?\" she returned.\n\n\"Ed Walters. A friend of Victoria.\"\n\n\"Thank you for being there for our little girl. You will send her home to us?\"\n\n\"Yes, ma'am.\"\n\nVictoria desperately pulled the phone from Ed's hand and held it to her ear. \"Mommy?\"\n\nThe two women burst into tears again and tried to speak but it was no good. Ed heard her father get back on the phone. \"Edward?\"\n\nHe took the phone from Victoria's limp fingers. \"Yes, sir.\"\n\n\"Flight BA #356 departing at 9PM. Please make sure she's on that flight.\"\n\n\"I will, sir.\"\n\n\"Good lad. Goodbye.\"\n\n\"Goodbye.\"\n\nEd's cell buzzed, yanking him back from his memories of that day. He glanced at the screen and saw a text from Gwyneth asking him to get back to the office ASAP. He frowned. It was Friday afternoon. He was worried that she might tell him he had a big job to do which would threaten his weekend off. He tapped out he was on his way.\n\nEd looked at the tidy room. Like all of the other rooms in the house it was too neat. You'd never know someone actually lived in the house. But then, these days no one did.\n\nOnce he'd taken Victoria to the airport that night she'd left him with a key to her house and he promised to watch over the place until her return. That had been months ago and when last they'd spoken on the phone she'd told him that she was seeing a psychiatrist to get over her trauma. The family was knitting back together and she was healing. She had no idea when she would return but at least she sounded happy. The tension and desperation in her voice was fading.\n\nEd locked up the house and made his way back to the office. He sighed. Life goes on it seems.\n\nChapter 2\n\nSunday night found Ed at the top of a short ladder with the sound of laughing kids playing in the backyard behind him. He'd enjoyed his two days off, there hadn't been a crisis at the office after all, and this was the only work he'd been faced with. He was at Stephanie's home installing a new motion sensor spot light by the rear patio door. The old one had given up the ghost and installing a new one was a job of only a few minutes. With dusk approaching Ed just had enough light to get the job done without having to wear a headlight.\n\nWhen Stephanie called to ask him if he could help her with it he'd gladly agreed. He'd picked up two of the units as Carolyn's home was built at the same time Stephanie's was and the two buildings were identical in all aspects, aside from d\u00e9cor.\n\nBoth homes were a reflection of the women who lived in them. Stephanie's choice in furnishings was clean lines and contemporary design with playful accents. Delightful on the eyes, soothing to the soul plus the gift of laughter. Much like the woman, Ed thought.\n\nCarolyn's anthropologist background made her choice of d\u00e9cor lean towards a more Bohemian style. The artifacts and textiles she'd collected in her field days accented her more traditional and maybe a little ornate furniture. Always something interesting to look at to stimulate your mind no matter where you cast your eyes in her home. Which made sense to Ed because the woman was so smart!\n\nEd heard a loud crashing noise in the kitchen and he leapt down from the ladder to rush inside. He found Stephanie sitting on the floor of the kitchen with her back against the island and her face in her hands. She was crying hard in deep sobs. Scattered next to her on the floor was a tray and the sandwiches and salad she'd prepared for a light dinner on a hot night. The handset for the kitchen phone was also on the floor.\n\nHe knelt beside her as the kids gathered in the doorway.\n\n\"Stephanie? What happened? What's wrong?\" he asked with concern.\n\n\"They're dead!\" she managed to gasp through her tears.\n\nEd's eyes widened. \"Who's dead?\"\n\n\"M-m-momma and P-p-papa.\" Her cries got louder. He glanced at the phone handset. She must have taken the call while preparing dinner.\n\nEd turned his face to her kids but they weren't crying. Did they not know their grandparents? \"Could you guys clean this up? I'll order pizza in a minute,\" he said to them. William, her oldest, nodded and got the three others to help him collect the spilled food and put it in the trash. They glanced at their mother as they worked.\n\nWhile they took care of the mess, Ed lifted Stephanie in his arms and carried her to the living room. He set her down on the sofa and sat next to her. Her second oldest child brought her a box of tissues.\n\n\"Thank you Katey. Could you give us a minute alone?\" Ed asked gently and the girl nodded. She collected her siblings and led them back into the kitchen.\n\nEd took Stephanie's hands and gently pulled them away from her face leaving them clasped in her lap. He wasn't able to read all the expressions on her face but sadness was definitely involved. He dabbed away her tears with a tissue as she looked at him. She had the loveliest blue eyes which were now glassy with tears.\n\n\"Can you tell me what happened?\"\n\nShe nodded and took his hands in hers.\n\n\"I- I got a call. M-muh-my parent's lawyer. He found me... to tell me they died. House fire,\" she gasped out.\n\nEd looked into her eyes with compassion. \"I'm so sorry for your loss.\"\n\nShe nodded jerkily and clung tighter to his hands. \"He- he said I needed to come back. To hear the will. The reading of the will.\" Her sniffles were starting up again.\n\n\"What do you need Stephanie? Tell me,\" he said.\n\n\"Could- could you go with me?\" she asked in a little girl voice as she looked at him, her eyes pleading.\n\n\"Of course,\" he said without hesitation. He would speak with Mr. Drakos and arrange a few days off. \"When do we leave? How much time will you need?\"\n\n\"T-tomorrow.\" She struggled to swallow. \"No more than three, four days,\" she sighed and he could see she was already beginning to relax, now that she knew she wouldn't have to face this alone.\n\n\"Where are we going?\" he asked.\n\n\"Kansas.\"\n\n-=-\n\nEd sat back in the passenger seat of the rental car and tried to distract himself from the seemingly endless flat expanse surrounding him.\n\n\"Are you ok Ed?\" Stephanie asked as she drove. She'd insisted on driving as it calmed her nerves.\n\nHis head jerked over to look at her and he realized how wound up he was becoming.\n\n\"Sorry. It's just... so empty,\" he smiled weakly.\n\n\"Your stomach?\" she asked misinterpreting him.\n\n\"No, out there. The land... it's so empty and flat!\" Ed struggled to keep his eyes off the window. He'd tried focusing on the horizon, the lines on the road ahead, and the surprisingly few other cars but the landscape changed so slowly he was finding it disorientating. He knew they were driving fast but the scenery seemed to be moving by in slow motion. It hadn't been bad at all when they'd driven out of Kansas City then through Topeka and Junction City but with over two hours into the drive Ed's hungry mind was starving for input.\n\nStephanie grinned at her passenger but her smile faded as she finally picked up on his distress. She'd heard of people with a phobia of open spaces and Kansas was certainly a good example of that. She looked at him again. He didn't seem frightened.\n\n\"What is it? What can I do?\" she asked. She had no idea what was wrong with the big man.\n\n\"I need something to distract me.\"\n\nShe thought for a moment and squeaked when she got an idea. \"OH! In the backseat, the bag. There's a jumbo book of word puzzles. Word search, word jumbles, crosswords. I got it for the flight here but I fell asleep against your arm instead.\" Stephanie explained and recalled how warm and comforting he'd felt as she leaned against him.",
        "Ed leaned over the seat and grabbed the thick book of puzzles. He flipped through the pages and saw a series of different games.\n\n\"There's a pencil in the bag as well,\" she said.\n\nEd got the pencil and looked at the first page. It was a square box containing rows of letters. Next to this was a list of words. \"It's a search word. I've never done one of these. What do I do?\"\n\nStephanie glanced at him. He'd never done a word search puzzle? \"Inside the grid of letters are all of the words in the list. You have to circle them.\"\n\n\"Oh! That's it?\" he asked, surprised.\n\nShe smiled. \"Yes, that's the challenge.\"\n\nEd looked at the list of words to be found then looked at the rows. In a moment the words rose from the grid and he saw some of them were diagonal and some were backwards. He quickly circled all of the matches.\n\n\"What do you do with the leftover letters?\" he asked.\n\nStephanie looked over and saw he'd finished the first one already. She glanced in surprise at his curious expression and shook her head. Those damned puzzles took her forever. \"Uh, sometimes the letters are used to answer a question. The puzzle will tell you if that's the case.\"\n\nEd looked and this one didn't have a question. He moved on to the next page.\n\nIt took another hour and a bit to finally reach the exit for her home town. Stephanie had a sudden desperate thought. Keep driving. Don't stop until you reach the ocean. She gripped the wheel and gave her head a shake. No. She had to face this. She'd already run once. It was time to stop running.\n\nShe glanced at Ed and saw the look of concentration on his face as he worked on one of the crossword puzzles. He only had four of the words in place. She smiled. He found them a struggle too.\n\nShe set the turn signal and moved onto the exit ramp and Ed looked up with interest to see where they were.\n\n\"Are we here?\"\n\n\"Yup. We are nowhere.\"\n\nEd looked at her in confusion. She caught the expression and sighed.\n\n\"Sorry Ed. I used to think of this place as nowhere. As in there was nothing to do, no future for me here, no reason to stay, and plenty of reason to leave. Nowhere. I couldn't escape fast enough.\"\n\nEd looked back out the window at the inevitable signs of civilization you find at every interstate offramp. Gas station, a cluster of fast food restaurants, and maybe if you were lucky a local restaurant trying to squeeze in as well. A gift shop or two and a row of motels for weary travellers. This interchange was no different.\n\n\"What do we do first?\" Ed asked.\n\n\"We get a room for the night. If you don't mind Ed, we'll share one. I don't think I'm going to sleep well here otherwise,\" she said, pleading with her eyes.\n\n\"Oh, sure that's fine,\" he said with a nod.\n\nHe looked up the road. \"Which one?\"\n\nStephanie's expression was bleak as she took in their choices. She'd worked in a number of these motels as a chambermaid, changing sheets, cleaning other people's messes, envious of those who were just passing through. She spotted a newer building, a two story motel which looked relatively... well cared for. It hadn't existed when she was here so she aimed the car in that direction.\n\nThey parked, Ed collected their bags from the trunk, and he followed her inside. The lobby was clean and had a nice display of flowers on a table across from the reception desk by the window. Ed stopped to smell one of the orchids and smiled at Stephanie as she watched him.\n\nShe walked up to the counter and a young woman approached her with a smile.\n\n\"Welcome to Daystar Motel. How may I help you?\" the girl said with a practiced smile.\n\nStephanie smiled at her recalling her own limited experience working the reception desk. \"Hello, we'd like a room for the next two nights. Do you have a room with a king size bed?\"\n\nThe girl nodded, her eyes going wide as she glanced between Stephanie and Ed, and handed her a form to fill in. Stephanie gave her a credit card and began filling out the form. The girl was repeatedly glancing at Ed from the corner of her eye.\n\nHe finally noticed her eyes on him and smiled at her. \"I like your flowers! They're very pretty and they smell lovely!\" Ed said with a smile. Now the girl turned to him and her face lit up with a smile.\n\n\"Thank you!\" she replied and there was definitely some pride involved.\n\n\"I've heard orchids are difficult to grow. These are really beautiful!\" Ed remarked gesturing back towards the table.\n\n\"Thank you very much! Yes, they do require a delicate touch and a lot of care,\" she said, glowing under his praise and appreciation.\n\nStephanie handed her the complete form and she jumped as she was drawn back to her job. The girl blushed at Ed and moved to program two keys for the room.\n\n\"Room 212. Second floor, North side of the building. Enjoy your stay,\" she said but she was looking at Ed.\n\nStephanie smiled and headed outside and up the stairs, Ed following.\n\nThe room was pretty standard fare but it looked clean and better yet, smelled clean. Stephanie did a walk through. The shower was in a smallish tub so no shower play for them on this trip! The bed wasn't too firm and the sheets were clean so she looked around and pronounced it acceptable.\n\nIt was almost dinner hour and Stephanie couldn't stomach the idea of fast food. There was a Chinese food place in town or the local restaurant just across the street. She looked at Ed who was sitting in the room's chair working on the crossword puzzle.\n\n\"Hungry?\" she asked.\n\nHe grimaced and dropped the book on the table with a smack. \"I don't like crossword puzzles.\"\n\nShe smiled at his frustration. \"When we get back you can do another word search.\"\n\nHe looked at her. \"I did them all. The word jumbles too.\"\n\nStephanie blinked at him. The book had one hundred and fifty pages. Three kinds of puzzles with two puzzles per page. Even if he didn't do the crosswords that was, what, two hundred puzzles? \"You did them all?\"\n\nHe looked concerned. \"I'm sorry. I should have left some for you! It just occupied my mind so well I got on a roll and we were here before I knew it.\"\n\n\"No, it's ok Ed. I- I'm just amazed you did so many so quickly,\" she explained.\n\n\"Oh! Well the word search wasn't hard at all. The jumbles were a little trickier but there are only so many combinations for the letters shown. Crosswords though, I don't get some of these clues at all! Do you think there's a place in town where I could pick up another book of puzzles for the drive back?\"\n\nShe nodded and smiled at Ed. \"We'll keep our eyes open for one. For now though why don't we go get some dinner.\"\n\nHe nodded so they went back to the car and Stephanie drove them across the four lane road to the parking lot on the other side.\n\nAs they got out of the car Ed looked back across the street at their motel. \"Couldn't we have walked?\"\n\nShe grinned as she saw his flustered look. \"We'll drive in town after dinner to look for the puzzle book. This will save us a little time.\"\n\nHe held the door for her and she walked in. This restaurant was 'new' as well. It was by no means a new building but it wasn't part of her memories so she felt safe for the moment. As they looked for a table she saw no familiar faces and allowed herself to relax. A harried waitress pointed them to the back and they made their way to the last empty table in the back corner. They took their seats and Ed looked around.\n\nThere was a long bar along the south wall with tall chairs arranged before the brass foot rail running along its length. The chairs were currently occupied by older men wearing denim, leather riding chaps, and worn black t-shirts advertising their favorite brand of motorcycle. Leather jackets hanging from the backs of their chairs had some kind of riding club emblem on them. These must be the gents who owned the choppers Ed spotted in the parking lot.\n\nFive booths were arranged along the north wall across from the bar and were occupied by families and couples. Between booths and bar was a scattering of tables for four all occupied by people enjoying their meals and talking. There were just two tables for two on the back wall. Up front by the window there was a small stage for live entertainment. There was a dart board and a community bulletin board by the door. There was no cohesive design to the place but it looked comfortable enough and from the capacity crowd it was obviously popular.\n\nThe busy waitress dropped off menus, glasses of water and cutlery on her way to the kitchen. Ed had spotted someone eating a big steak so he was going to have one of those.\n\nA group of three people entered the restaurant carrying large cases and immediately went to the small stage. The night's live entertainment had arrived. They began to set up.\n\n\"What can I getcha?\" the waitress said as she stopped by the table on her whirlwind tour of the place.\n\nStephanie glanced up then put her nose in the menu. \"The quarter chicken dinner please with salad,\" she said stiffly.\n\nThe woman nodded and looked to Ed. \"The t-bone please. Medium with a baked potato. Just butter.\"\n\nWith another nod the woman collected the menus and scurried on her way.\n\n\"What's wrong?\" Ed asked as Stephanie's face was a little red.\n\nShe shook her head as the waitress was only one table away. Ed looked to see who Stephanie was discreetly watching.\n\n\"Do you know her?\" Ed asked quietly and Stephanie nodded.\n\nTwo pretty young women rushed into the restaurant and apologized to the waitress who stared daggers at them. They rushed into the back looking very contrite. Moments later they came out wearing aprons identical to the waitress and delivered food to a couple of the tables.\n\nStephanie's eyes were wide as she noted how similar the young ladies looked to the older waitress. Her kids? She'd had them young then.\n\n\"Do you want to say hello?\" Ed asked.\n\nStephanie's eyes shot to Ed's and she shook her head. She wouldn't know what to say to her friend from so long ago.\n\nEd saw the headshake and nodded in return. He wasn't going to push. \"What's the plan for tomorrow?\" he asked instead.\n\n\"We go to the lawyer's office tomorrow at 11AM to hear the reading.\" She frowned staring at the table surface. \"I should let you know, I have a brother. He's going to be there and it may get ugly. He- he didn't like me very much before I left and his opinion has probably just gotten worse.\"\n\n\"Younger or older brother?\" Ed asked.\n\n\"Older. Two years older. Always the dependable one. Always pointing out my failings and ready to give me a good wallop when my parents weren't looking. Beating some sense into me, he'd say.\" Her eyes focused on nothing as her mind took her back.\n\nEd's big hand enveloped her smaller one and she looked up into his compassionate eyes. \"No one will be beating you on this visit,\" he said firmly.\n\nStephanie flashed a brilliant smile at Ed.\n\nThere was a sudden clatter of dishes and the older waitress rushed into the kitchen clutching the tub of dirty dishes.\n\nEd noticed a nervous look on Stephanie's face. \"Do you want to make a break for it?\" he said in his best gangster impression which, honestly, was poor at best. It was enough however to break through Stephanie's flee response and she shook her head with a grin.\n\n\"Oh that was terrible!\" she grinned across the table at him. He sat there smiling back at her. Solid, dependable Ed, who never ran from anything. She steeled herself and pulled her shoulders back. \"No. I'm done running from this place and my past.\"\n\nOne of the young waitresses arrived with their meals and set the plates down on the table in front of them. Ed smiled at her but she was staring at Stephanie. Finally she left and they began to eat.\n\n\"This is very good!\" Ed gushed as he chewed the piece of steak.\n\nStephanie did her best to enjoy her meal as well. They ate and watched the band set up.\n\nThey were pushing back from their plates and the band had just begun to play their first tune when the second young waitress approached them tentatively. \"Excuse me?\"\n\nStephanie looked up into a face she hadn't seen in twenty years. The girl bore a striking resemblance to someone she once called her best friend.\n\n\"Are you by any chance Stephanie Norris?\" she asked quietly.\n\n\"This is Stephanie Matthews,\" Ed offered helpfully before he felt a hand on his.\n\nStephanie nodded to the young woman. \"I was Stephanie Norris a long time ago.\" Ed blinked at her. \"Norris is my maiden name.\"\n\n\"I- I think you know my mama-\"\n\n\"Nancy Dulane.\"\n\n\"She's Nancy McAllister now.\" She looked over her shoulder at her sister who nodded. \"Could you come talk to mama? She's pretty shook up from seeing you.\"\n\n\"Where is she?\" Stephanie asked.\n\n\"Out back at the picnic table,\" she replied then left to serve another customer.\n\n\"Ed, give me a minute?\"\n\n\"Sure. I'll be here,\" he said and gave her hand a quick squeeze.\n\nStephanie left Ed listening to the band and followed one of Nancy's daughters through the kitchen to the back door. She went through and walked across a gravel parking lot to a small grassy area with a picnic table on it. She could see Nancy sitting at the table smoking with her back to the restaurant. The woman's head twitched as she heard Stephanie get closer.\n\n\"You promised me.\"\n\nStephanie stopped walking and looked at the woman's back.\n\n\"You promised me if you ever made it out you'd never come back.\" There was a tremor in Nancy's voice.\n\n\"They died. I had to come back-\"\n\n\"YOU PROMISED!\" Nancy yelled.\n\n\"It wasn't a promise I could keep. I'm sorry.\" Stephanie said quietly.\n\n\"Fuck.\" As fast as it spiked the rage was gone. Stephanie felt it was safe to approach the table. That said, she moved to the other side and didn't tuck her legs under the table when she sat down upwind from the cigarette smoke. She knew Nancy was a woman of strong emotions.\n\nNancy Dulane, now McAllister, was the same age as Stephanie but on her being close to forty looked more like being close to fifty. She was carrying an extra twenty pounds and her skin showed a weathering Stephanie's had avoided. Aside from the defeated look in her eye she was a nice enough looking woman. Sandy blonde hair to her shoulders, now tied up in a loose bun, pale green eyes, freckles across a small nose with just a hint of an upturn. Naturally smiling lips with just a slight overbite on her otherwise healthy looking teeth. Some of that extra weight was being stored in her tits and ass so her figure definitely had curves under that apron.\n\nShe noticed Stephanie avoiding her cigarette smoke so with a scowl she stubbed it out.\n\n\"I heard about the fire. Hell of a thing. I'm sorry they went that way,\" Nancy said gruffly.\n\nStephanie couldn't put words to the emotions she was feeling yet so she just nodded.\n\n\"Did you- did you keep in touch with anyone?\" the woman asked cautiously.\n\n\"No, I completely broke away. Began a fresh new life.\" Stephanie said with a small smile as she remembered the fear and thrill she'd held in her heart as she boarded that Greyhound bus twenty years ago.\n\n\"Then how did-\"\n\n\"My parent's lawyer found me when he ran a search for references to 'Stephanie Norris' and found it on my divorce papers that went through the system recently. He tracked me down from that.\"\n\n\"Huh. Fucking lawyers. So you were married?\"\n\n\"Yes. Stephanie Matthews. He cheated on me. Multiple times so I divorced him. I have four kids. William's eleven, Katie's ten, and eight year old twins, Franklin and Gina.\"\n\n\"Fuck off you have four kids! No one who looks as good as you has four kids!\" Nancy growled.\n\n\"I have pictures,\" she said and flashed a brilliant smile.\n\nNancy closed her eyes and turned away as she shivered. \"Geezus.\"\n\nStephanie looked at her friend from the past in concern. \"How- how did you recognize me?\"\n\n\"It was that smile.\" She shook her head. \"You were smiling at the big fella in the restaurant and it went through me like a knife. You used to smile at me that way,\" Nancy said with pain in her eyes. \"I'd finally forgotten it. Put all of that life behind me and built a new life for myself. Found a man from town I could tolerate. Got married. Had two kids. I'm still carrying the weight from that, damn your skinny bones. Kenneth is handy in the kitchen. We started up this restaurant and it's a family affair. We do well enough. I thought I was happy enough.\" She bounced the pack of smokes against her hand thinking about giving in but held firm and put the pack down.\n\n\"Then you come back with that smile of yours and I realize enough isn't enough.\"\n\nStephanie stared at Nancy in dismay. \"What- what are you talking about? It sounds like you have a great life here!\"\n\n\"Yes, from outside it does sound like that doesn't it? The only ingredient that's missing is love! I mean I love my daughters but my relationship with Kenneth? He's a friend with benefits. I don't love Kenneth. There's no spark or passion. Deep down, he knows. He's willing to settle as it's enough for him.\" She frowned at her cigarettes and pitched them across the parking lot. She turned that glare at Stephanie. \"I want more.\"\n\n\"Don't throw away-\"\n\n\"NO! You don't get to tell me that! You followed your dream! You didn't settle! Why should I?\"\n\n\"Your kids-\"\n\n\"Are adults now. It's time their mother was honest with them. I'm gay. There I said it. It's time they knew it as well.\"\n\n\"You know I'm straight. We had our time when we were young and lonely but even then you knew I wasn't gay. We talked about it. I thought you were just experimenting and searching for a little human compassion like I was. You never told me otherwise!\" Stephanie said desperately.\n\n\"I knew you were straight the first night we were together. I also knew that maybe I wasn't but I didn't understand what that meant. It wasn't until I heard you'd left on that bus that it hit me that I'd fallen in love with you and what it meant to be in love. Those were hard times for me. NO! I don't hold you responsible for that. Like you said, you were honest with me. Just bad timing is all.\"\n\nNancy took in the distraught look on Stephanie's face and her expression softened. \"Aww honey, please don't look like that. This isn't your doing. I've been restless for as long as I can remember. Seeing you again... it was just the wakeup call I needed. The kick in the ass to finally realize I've been denying who I really am for too long. I'm grateful, I really am. I should have been honest with myself a long time ago. I don't think it's too late to start. This may be the best time to do it.\"\n\n\"What- what are you going to do?\" Stephanie asked nervously.\n\n\"I'm going to go visit my cousin who lives in New York City. She's been after me to visit for a long time. I'm going to go see what it means to live as a gay woman.\"\n\n\"Mama?\"\n\nNancy looked over her shoulder and saw her daughters standing by the back door. The big man stepped out the door and began walking towards them with a pleasant smile on his face.\n\n\"What's his story?\" Nancy asked.\n\n\"Ed? He's a wonderful, gentle soul who loves me,\" Stephanie said quietly with a smile. Nancy looked at her closely. \"Yes, I love him too.\"\n\n\"He's young... not that I'm judging,\" Nancy said with a twisted smile.\n\nEd walked up to them. \"Sorry to intrude but your daughters are worried about you and asked me to see if everything was alright,\" he finished looking at Nancy. \"Ed Walters.\" He held out his hand and Nancy shook it.\n\n\"Nancy McAllister. Take good care of this one. She's very special to me.\"\n\n\"I will,\" Ed assured the woman.\n\nNancy and Stephanie stood and once she came around the table Stephanie gave Nancy a tight hug.\n\n\"Good luck Nancy.\" She pulled a card and a pen from her purse and jotted down her phone number and address. \"Please keep in touch.\"\n\n\"I can't make any promises,\" Nancy said tucking the paper into her apron. \"After all it's my turn to begin a fresh new life.\" She gave Stephanie a crooked grin and headed for the back door of the restaurant to presumably speak with her daughters.",
        "\"I settled the bill.\" Ed said.\n\n\"Thanks. If you don't mind I'd like to just go back to our room and relax,\" she asked.\n\n\"Oh, sure,\" Ed said seeing the troubled look on Stephanie's face. He walked with her around the building back to their car. She drove them back across the road to the motel and they parked outside their room. They made their way upstairs and inside and Stephanie just stood in the middle of the room not looking at anything in particular.\n\n\"Is everything alright?\" Ed asked.\n\n\"Maybe it was a mistake to come back. Maybe I just ruined the lives of four people.\" She was trembling so Ed pulled her against his chest and she clung to him.\n\n\"Nancy didn't look like you'd ruined her life. She seemed pretty happy.\" Ed responded as he rubbed Stephanie's back, feeling her begin to relax in his arms.\n\n\"Her husband and daughter's lives then. Nancy is going to tell them she's gay and she's leaving.\"\n\nEd didn't know how to respond to that. \"I... I'm not an expert but I'm pretty certain you can't make someone gay. How is this supposed to be your fault?\" he asked in confusion.\n\nStephanie chuckled against his warm chest and felt herself relaxing further. She really loved being in his arms.\n\n\"You're right, of course. It isn't my fault. Just bad timing is all,\" she said using her friend's words. She suddenly felt exhausted by the stresses of the day, the long drive and the brief reunion with Nancy. \"Could we just go to bed and snuggle?\"\n\n\"Sure!\"\n\nThey got ready and slipped under the covers of the big bed. Stephanie cuddled up against Ed and purred at the feel of his thicker muscles. But before she could act on her impulse to jump his bones she nodded off.\n\nChapter 3\n\nEd sat next to Stephanie in the law office conference room listening to the ticking clock on the wall. There was no other sound in the room even though Stephanie's brother Jeff, his wife Jenny and their five kids were sitting in the room with them.\n\nHe and Stephanie had arrived first and were brought to the room to wait on the arrival of the lawyer. Maybe ten minutes passed before the door opened and a tall older man walked in with a sturdy and pretty blond woman at his heel. The big man froze two steps into the room when he saw his sister.\n\n\"Hello Jeff,\" Stephanie said with a quiet voice.\n\n\"What- what are you doing here?\" he replied with incredulity.\n\n\"Mr. Carson found me and told me I needed to be here,\" she replied.\n\nEd looked closer at Jeff and saw some family resemblance to Stephanie. They had the same eyes and chin but Jeff's face was deeply tanned and weathered from working outside. He was almost as tall as Ed though his body seemed to be lean and hard, especially his hands which looked rough and scarred. The only softness seemed to be the small bulge at his tummy.\n\nThe woman behind him was only a few inches shorter though she was carrying more weight than her husband. She had sunny yellow hair going grey and a naturally open and friendly expression which contrasted with her husband's more closed off glare.\n\nEd saw the curious faces of his kids peer into the room around their mother's back. He smiled at them and the tallest, a blonde girl who was probably eighteen, smiled in return.\n\n\"Well, he didn't tell me you were going to be here!\" Jeff barked.\n\n\"Jeff, who are they?\" the woman at his elbow asked.\n\n\"I don't know who the kid is but this is Steph,\" he grunted angrily.\n\n\"Stephanie? Your sister?\" the woman asked with wide eyes.\n\n\"Yes, I'm his sister.\"\n\n\"You've got no right to use that term since you abandoned your family!\" Jeff growled.\n\nStephanie's temper flashed as memories of how he treated her resurfaced. \"Abandoned? Jeff, you did your best to drive me out! Every day you found an excuse to hit me! You made my life at home a living hell and did your best to destroy any life I had away from home! Then I heard you plotting with Mama and Papa to marry me off to one of your buddies! Don't talk to me about family as if you cared for me at all!\" Ed had his arm around her stomach to keep her from rounding the table to tear into her brother. He was wide eyed himself at the words coming out of Stephanie's mouth.\n\nJeff scowled at his sister but he didn't deny her words. The woman at his elbow looked between the siblings in surprise. \"Jeff? Is what she said true?\"\n\nThe big man came back to the moment and realized his wife was there and heard his sister's words. His face scrunched up in distaste. \"You have to realize how tough times were for the family back then and how disruptive she was. A regular trouble maker taking our parents through one crisis after another. Mama and Papa were too busy to keep her in check so I had to. Besides Duncan would have made a fine husband and we could have merged the two farms into one-\"\n\n\"Duncan?\" the woman gasped. \"Duncan Nettleson? You were going to marry your sister to that creep?!? As a business deal?!?\"\n\nJeff's scowl got deeper. \"Duncan wasn't always like he is today. Maybe with the right woman he wouldn't have done... those things he did.\"\n\nThe woman shook her head angrily and walked around the table to Stephanie. She held out her hand. \"I'm Jenny Norris. I married your brother about six months after you left and we had our first child, Jillian, a year and a bit later.\" She gestured for the tall blond to come meet her aunt. The other kids scurried after her. Jillian shook Stephanie's hand with a big smile on her face. The young woman was taller than her mom, almost as tall as her dad and had her mother's long blond hair and curves though her younger body was carrying much less weight.\n\nEd saw the next tallest was a boy who was probably sixteen or seventeen. He had his father's build and the lean muscles hard work had earned him.\n\n\"Jack is our second child who arrived a year later. He's almost all grown up now. Getting big and strong like his Papa.\" Stephanie smiled and shook the boy's hand as he smiled at her shyly.\n\n\"Jamie was next to arrive just eleven months later. She's becoming quite the beauty,\" Jenny said drawing an embarrassed groan from the girl.\n\n\"This is Josie. She's two years younger than Jamie, such a sweetie! And finally we have our youngest, Joseph, who is two years younger than Josie. That's the brood.\" Jenny smiled happily at her kids then she looked to Ed.\n\nHe was looking at the family in surprise. He'd never met a family whose initials all matched. So many 'J' names! He wondered what that would be like. He looked over at Stephanie but she appeared to be a little shell shocked from meeting so many new nieces and nephews. Ed took it upon himself to make his own introduction.\n\n\"Hi, I'm Ed Walters. Stephanie's boyfriend.\"\n\nJenny's face froze as she looked up at the young man she'd assumed to be Stephanie's son. She turned her eyes to the woman and saw the blush on her cheeks and the smile on her lips. \"Boyfriend?\" Jenny managed to squeak out.\n\nJeff made a loud snort of disgust and walked over to a chair in the corner of the room to wait.\n\nEd blinked at Jeff's response and took in Jenny's unease. He opened his mouth to ask what was wrong but stopped when Stephanie placed her hand on his arm.\n\n\"Yes, Ed is my boyfriend. I got married a few years after I left home and had four beautiful children. William, who's eleven, Katey who's ten, and the twins, Franklin and Gina, both eight. When I discovered my husband had multiple affairs and wouldn't stop I divorced him. The paperwork went through not too long ago. It was how Mr. Carson found me. I met Ed around the time the divorce was finalizing.\"\n\nJenny nodded and smiled weakly then made her way to sit down next to her husband. She gestured for the kids to take the remaining chairs next to her. Jillian was looking at Ed with an expression he couldn't identify so he just allowed Stephanie to guide him down into the chair next to her.\n\nSo here they sat, in silence, waiting for the lawyer.\n\nEd needed to use the washroom so he whispered to Stephanie to let her know. He might as well have shouted as the silence made his words sound too loud anyway. She nodded and he made his way into the hall. He spotted the room in question down the hall and made quick use of the facilities. He washed and dried his hands and stepped out to come to an abrupt halt as Jillian was standing just outside the door.\n\n\"You're my aunt's boyfriend?\" the young woman blurted.\n\nEd blinked at her. \"Yes. I think we were both pretty clear on that point.\"\n\n\"What do you want from her? Is she paying you?\" Jillian pushed as she scowled at him.\n\nEd was struggling to understand where her animosity was coming from. He didn't even know her and until a few minutes ago she didn't know Stephanie.\n\n\"I don't want anything from Stephanie. She doesn't pay me. I have my own job.\"\n\n\"Let me guess, as a gigolo?\"\n\n\"No, I work for Drakos Heating and Cooling. I'm certified to do installations, inspections and maintenance on all sizes of heating and cooling system. What's a gigolo?\" Ed asked curiously.\n\nJillian was looking at him funny again and Ed didn't know what to do.\n\n\"Jilly! Mom wants you back in the room.\" Jack called out from down the hall as he approached.\n\nThe young woman gave him a frustrated look. \"Don't you hurt Stephanie!\" she growled quietly then turned and rushed back to the conference room.\n\nJack continued to approach and stopped at the washroom. He turned to look at Ed. \"I think you'd better go back too.\" He stepped inside the washroom.\n\nNervous, Ed hustled back to the conference room and when he opened the door he heard shouting.\n\nStephanie was standing toe to toe with Jeff who was red faced. The man's hand was up and he looked like he was going to hit Stephanie. Jillian was screaming at her father and Jenny was calling out to him as well.\n\n\"STOP!\" Ed roared and everyone froze. \"Mr. Norris, please sit down before you do something you will regret very much.\"\n\nJeff lowered his hand and glared at Ed but the big man didn't blink. With a final snort he returned to his chair. Ed made his way around the table to Stephanie's side and saw she was trembling with unspent adrenalin. She'd been very brave to face her tormentor from all those years ago.\n\n\"I'm very proud of you,\" he said quietly.\n\nHer eyes shot to his and a rush of love spread through her body as she saw he understood. She nodded, unable to speak at the moment.\n\nJack returned to the conference room but this time Mr. Carson's secretary was with him. She addressed the group.\n\n\"I'm terribly sorry for the delay but Mr. Carson was called to the bedside of an old friend and client. Mr. Patterson is dying, probably won't see sunset the poor dear. He's called on Mr. Carson to do some last minute adjustments to his will so Mr. Carson will not be able to do the will reading today. He's asked if you could come back tomorrow at 4PM?\" the older woman asked.\n\n\"This is bullshit! Jerking us around and ambushing me with her!\" Jeff bellowed.\n\n\"Mr. Norris, no one is being 'jerked around' and I know nothing about any ambush. The situation is not in my control. Are you available to come back tomorrow or not?\" the secretary said calmly.\n\nJeff just scowled then nodded reluctantly. The woman turned to Stephanie who just nodded.\n\n\"Again, my apologies for the delay. Thank you for your patience and we will see you tomorrow at 4PM,\" the woman said and left the room.\n\nJeff turned his scowl on his sister then stormed out of the room with his youngest kids following. Jack looked back at his mother.\n\n\"We'll be right out,\" she said to him and he rushed out after his father.\n\nJenny turned her face towards Stephanie and her conflict was plain to see. She wanted to follow her husband but his behavior had left her confused.\n\n\"It's ok.\" Stephanie said to her. \"What Jeff put me through is between him and I... unless he's been abusive to you as well?\"\n\nShe shook her head vehemently and Stephanie visibly relaxed. \"Good.\"\n\n\"We're so sorry! I've never seen him behave this way!\" Jenny said.\n\n\"See you tomorrow,\" Stephanie said sinking back into her chair as her adrenalin ran out.\n\nJenny gathered her daughter who looked like she wanted to protest and moved them out the door.\n\n\"I'm so sorry I left the room. I didn't think he'd do that with his whole family watching!\" Ed apologized.\n\n\"It's fine Ed. You're not responsible for his behavior. That's my parent's doing. They pit us against each other. Made it impossible for us to behave as brother and sister. Always competing for their love.\" Stephanie shuddered as she remembered. \"I finally clued in when I reached my teens and hung out with a few of my friends at their houses. I saw how normal families interacted and realized how broken our home life was. I tried to convince Jeff we didn't have to compete but he was too far gone. That's when he increased his hitting. I took years of that abuse. I think Jenny is keeping that from happening in their home. Maybe the cycle ends with Jeff.\"\n\nEd took her hand and gently kissed her knuckles in sympathy. Stephanie smiled at him. \"What do we do now?\" he asked.\n\nShe looked out the window and contemplated the endless blue sky of the hot spring morning for a moment. A mischievous smile appeared on her face. \"Did you bring a swim suit?\"\n\nEd blinked in surprise. \"Uh, no.\"\n\n\"That's ok. We'll pick one up at the dollar store.\" She stood up and pulled on Ed's hand. \"Let's go swimmin' in the ol' swimmin' hole,\" she said with a grin.\n\nEd was glad to see her spirit bounce back but her grin made him a little nervous.\n\nThey stepped out of the building and spotted Jenny and Jillian standing in the shade next to the parking lot. They walked over to the two women. There was no sign of Jeff or the kids. Jenny's face was red with suppressed anger.\n\n\"What happened?\" Stephanie asked.\n\n\"He left without us!\" Jenny snipped. Jillian looked at Stephanie with an embarrassed expression.\n\n\"We'll give you a lift home.\" Stephanie said.\n\n\"No, it's fine. He'll come around-\" she began.\n\n\"That would be very kind of you. Thank you!\" Jillian interrupted and glared at her mother.\n\nJenny looked at her daughter sharply then seemed to collapse a little. \"I'm sorry. I'm just upset. It's been a trying day.\"\n\n\"Not a problem. Let's go.\" Stephanie led them to the rental car and they piled in. She was driving once more and Jillian sat behind her with her mother behind Ed. Stephanie got directions from Jenny and they made their way out of town along a back road. Jenny continued to explain that Jeff got a deal on a house a few miles out of town in the direction of his parent's farm.\n\n\"What are your plans today now that the reading was postponed?\" Jillian asked and received another sharp look from her mother.\n\n\"I'm taking Ed to the lake I used to swim in when I was just a little younger than you.\" Stephanie said glancing in the rear view mirror with a smile.\n\n\"That sounds wonderful!\" Jillian said wistfully.\n\n\"If it's ok with your mother, you could join us.\"\n\n\"I don't know-\" Jenny began.\n\n\"Please mama!\" Jillian begged.\n\nJenny pointed to the next lane and Stephanie pulled into the driveway of a large two story farmhouse.\n\n\"Please!\"\n\nThe mother saw her son waiting on the front steps and saw his relief as he spotted her. Such a dependable young man. She turned to Stephanie. \"Would it be ok if you took Jack as well?\"\n\n\"Sure,\" Stephanie agreed.\n\nJillian glanced at her mother to protest but held her tongue and hopped out of the car. She leaned against the driver door. \"I'll get my swimming stuff and be right out. Don't leave without me!\" She received a nod and dashed back to the house collecting her brother on the way.\n\n\"I'm sorry it turned out like this.\" Jenny said as she reached Stephanie's door.\n\n\"It's not your fault. This was a long time coming. Jeff is right about one thing. I ran away. What he refuses to acknowledge is his part in the reason I did.\" Stephanie said sadly.\n\nJillian rushed back out of the house carrying a small backpack and a beach towel. She was also crying.\n\n\"Where's Jack? What happened?\" Jenny asked as Jillian just stormed past to get into the back seat of the car.\n\nThe front door of the house opened and Jeff walked out to glare down on them.\n\nAs Jillian wasn't talking, Jenny looked up at her husband. \"Where's Jack?\"\n\n\"He's not going but the bitch can leave if she wants. She can stay away for all I care. Now tell that whore and her boy toy to get off my property,\" Jeff yelled back.\n\nJenny looked at Stephanie. \"Maybe you should go.\" She looked in the window at her daughter. \"Call the house later and I'll let you know when he's calmed down.\"\n\nStephanie nodded grimly and backed out of the driveway. They got maybe fifty yards down the road when Jillian spun in her seat.\n\n\"STOP THE CAR!\" she cried.\n\nStephanie pulled over and they looked back to see Jack climb up out of the field behind them to run after the car. He was carrying a backpack and a towel as well and was breathing hard by the time he reached them. He got in and rested back against the seat as his sister smiled at him. Jillian gave his shoulder a little punch as Jack smiled back at her.\n\nThey got back underway and Stephanie glanced in the mirror. \"Where is the best spot we can go to pick up swimsuits, towels, and lotion?\"\n\nJillian looked at Stephanie in surprise. \"Oh, well, there's a department store in town that has that stuff but they don't have a very good selection.\"\n\n\"We're not picky. Just something to wear when we swim and lie out in the sun. Right, Ed?\"\n\n\"Sure,\" he replied, worried that they wouldn't have his size.\n\nThey followed Jillian's directions and made their way into the department store. The young woman was right. The selection was terrible but Ed was delighted to find a suit that looked like it had plenty of room in the areas he wished to hide. Stephanie pouted at the apparent looseness of the suit but couldn't argue with him. She found a bikini that wasn't too bad even if it was kind of plain.\n\nThe towels and lotion were easier finds. Ed picked up an insulated duffle bag cooler, a twelve pack of spring water, a six pack of cola, and three bags of ice. Jillian and Jack were in charge of getting the snacks. Stephanie paid for the swimsuits, snacks, towels, and lotion and Ed paid for the cooler, ice and the drinks.\n\nThey got back in the car after Ed arranged the drinks in the cooler with the ice poured on top.\n\nThe lake was about a twenty five minute drive away.\n\nAfter they'd traveled half the distance Ed turned to look at Stephanie. \"How did you get to this swimming hole when you were a kid?\" Ed asked her and she smiled at the memory.\n\n\"We rode our bicycles. It's only twenty miles from town. I went everywhere on that bicycle.\" She glanced over the seat at Jillian and grinned. \"I used to get home late and catch hell from your dad. I had to hide the bicycle but he eventually found it and drove over it with the tractor. He told our parents it was because I'd left it behind the wheels. Do you guys cycle?\"\n\n\"No. Papa won't let us have bicycles,\" Jack said.\n\n\"Aww, I'm sorry. That's probably because of me. He saw how much freedom it gave me and he didn't like it. How do you get around then?\" Stephanie asked.\n\n\"School bus during the week. On the weekends I walk into town if Mama isn't driving in.\" Jillian answered and Jack nodded.\n\n\"I'm getting a driver's license but we only have one car so I don't know when I'll get to drive,\" Jack explained.\n\n\"What about you Jillian? Are you getting your license too?\" Stephanie asked.\n\n\"He won't let me take the test.\"\n\nStephanie glanced in the mirror once more. The young woman was scowling out the side window and just for a second Stephanie saw herself.\n\nThey drove on in silence until they reached the park. As they were just using the beach they paid a small fee and parked near the boat launch. There was a relatively sandy beach running beside the launch area.",
        "Grabbing the cooler from the trunk Ed followed the group down to the sand. He looked around and realized they had the place to themselves. The only sign of other people was a sail boat quite a distance across the lake.\n\nHe laid out his towel and headed over to the washroom facilities with his new swimsuit in hand to get changed. Jillian walked with him carrying her bikini. He glanced at her uneasily as the bikini looked too small to contain her... gifts.\n\nThey ducked into their respective washrooms and emerged shortly afterwards dressed to swim. Ed tried not to stare but Jillian's bikini was struggling to contain her bounty, upstairs and down. Ed thought perhaps the suit was a few sizes too small. His face flushed and he looked away but not before he saw the smile on her face.\n\nAs they walked back to the towels he thought back on their first interrupted conversation. \"You never did tell me what a gigolo is.\"\n\n\"It's a male prostitute.\"\n\nEd's head whipped around to face Jillian. \"NO! I'm NOT one of those!\"\n\n\"A gold digger then?\" she asked tilting her head to look at him quizzically.\n\nEd blinked at her again. \"What's a gold digger? I assume it's not someone who digs for gold in a mine.\"\n\nShe smiled and shook her head. \"It's someone who pretends to care about someone else to be rewarded with money and gifts.\"\n\n\"No! I could never do that!\" Ed said in shock.\n\n\"Well, you're awfully young to be having an affair with my aunt,\" Jillian said with a frown.\n\nEd smiled as he finally understood her confusion. \"Ah, I'm not having an affair. I love Stephanie and she loves me!\"\n\nShe looked at Ed in confusion as Jack approached on his way to the washroom to get changed.\n\n\"Jilly! What are you doing wearing Jamie's swimsuit! It's too small for you! You're gonna wreck it!\" Jack complained.\n\n\"Hush you! I- I couldn't find mine,\" Jillian said as her face flushed a little.\n\nJack shook his head and rushed off to get his swimsuit on.\n\nWhen they got back to the towels they saw Stephanie was finishing tying her bikini straps.\n\n\"You got changed out in the open?\" Jillian gasped and Stephanie snorted.\n\nThe lovely brunette gestured to the wide open spaces around them. \"Do you see anyone who could be spying on us? When Jack headed off I had enough time to change with all the privacy I needed. Besides, that's how we did it when I was here the last time.\" She smiled at Ed's blush. \"That's quite the revealing swimsuit you have on there.\"\n\n\"It's her sisters. She couldn't find her own,\" Ed provided helpfully and it was Jillian's turn to blush at Stephanie's knowing smile.\n\nEd pulled his shirt up and off and Stephanie's smile turned into a grin as Jillian's eyes widened in awe when she saw his muscular torso.\n\n\"I think I'd better help you with your lotion Ed.\" Stephanie said and he smiled happily and nodded to her.\n\nEd started with his face and ears as Stephanie worked on his back starting at his neck and moving over his broad shoulders. She worked the lotion into his thick muscles and felt herself begin to tingle in an intimate place. When she glanced over at her niece the young woman jumped as she'd been a little mesmerized. Jillian moved to put her own lotion on but Stephanie saw she couldn't stop herself from looking over at Ed from time to time.\n\nWhile Ed moved to putting lotion on his arms Stephanie finished his back so she ran her hands around his torso to rub the lotion over his hard stomach muscles. A tremor went through her body and she pulled her hands back reluctantly. She added more lotion to her hands and ran them down his legs as she knelt on the towel behind him. She bit her lips as his ass looked good, even in the relatively loose swim trunks. She pulled her hands back and began adding lotion to her own body.\n\n\"Can I return the favor?\" Ed asked with a smile as he finished rubbing the lotion into his lower abdomen.\n\nStephanie nodded and stretched out on her towel on her stomach. Ed knelt on his towel at her feet and began rubbing the lotion in deeply as he made his way up her legs. She was biting her tongue to keep from moaning as his hands felt so good on her body. So strong! He spent much too little time rubbing lotion on her ass but Stephanie forgave him because of their audience.\n\nShe spared another glance over at Jillian who was struggling to put on her own lotion with the distraction of Ed's muscles flexing and bunching only a few feet away. Stephanie turned her face away as she smiled in amusement. Her smile turned into a yelp as she felt Ed tug loose the knot in her bikini top.\n\n\"Ed! What are you doing?\" she gasped, looking over her shoulder as she pressed herself flat against the towel.\n\n\"You don't want tan lines do you?\" he asked with a cheeky smile as he plucked the knot loose at the back of her neck, evoking another squeak. Before she could protest he began kneading her back muscles, working the lotion into her skin.\n\n\"Oh god Ed, that's goooood,\" she groaned as she felt her body relaxing under his ministrations.\n\nJack returned and watched Ed massaging the lotion into Stephanie's back. He saw the blissful smile on her face and shared a smile with Ed. He was beginning to like the big man.\n\n\"How did you get so big?\" Jack asked.\n\n\"I started to grow fast when I hit puberty and the gym teacher and my football coach pushed me toward body building to get bigger.\"\n\n\"You played football? What position?\" Jack asked curiously.\n\n\"Guard. I protected the quarterback,\" Ed replied as he worked the knots out of Stephanie's shoulder and neck muscles. He leaned down and kissed her cheek as she purred into a doze. He took another look and saw he hadn't missed any spots. He looked back at Jack.\n\n\"Do you play football?\" Ed asked him.\n\n\"Before you answer that, Ed could you put lotion on my back too?\" Jillian asked timidly.\n\n\"Uh, sure,\" he said and accepted the bottle from her.\n\nJillian laid down on her towel and reached back to undo her own ties. \"I don't want the tan lines either.\"\n\nJack rolled his eyes and looked to Ed who was beginning at her feet. He looked like he was just doing a massage and not groping his sister so Jack felt a little more comfortable about it. \"I'm a wide receiver.\"\n\nEd grinned at him. \"Considering how quickly you caught up to the car I can see how that position would work well for you.\" Jack smiled in return.\n\nJillian was in heaven. Ed's big hands were touching her all over and her body was tingling like mad! This was the first time a man had touched her so intimately. If she could just ignore the sound of her brother's voice she could really begin to enjoy herself.\n\n\"Don't forget to put on lotion,\" Ed reminded Jack who picked up the bottle and began to apply it.\n\nEd concentrated on rubbing the lotion over Jillian's body and did his best to not think about how nice her body felt under his hands. It helped that he remembered the therapeutic massage techniques he'd learned for Shirley.\n\nHe was rubbing the lotion along the sides of her torso when his fingertips stroked across the sides of her rather squished yet exposed breasts.\n\nHe yanked his hands back as she moaned aloud. \"Oh! I'm terribly sorry!\"\n\nShe shook her head as she couldn't speak. She'd felt that touch in every cell of her body! \"It's ok!\" she finally managed to say with a tight smile.\n\nStephanie cracked her eyes open to look over at Jillian who caught her gaze. A worried expression passed over the young woman's face but Stephanie just smiled gently at her.\n\nEd finished up quickly and decided he'd go for a swim. It was easier to hide his erection under water. His discount bathing suit was turning out to be less baggy than he'd hoped. He stood and walked towards the shore. \"I've never swum in a lake before. Just municipal pools when I was younger and recently in the ocean in Barbados,\" he remarked to Jack who had joined him at the edge of the lake. Ed looked at the sandy bottom and the lack of waves. \"It's like a mix of both. The stillness of a pool but the sandy bottom of the ocean.\"\n\n\"I've never been anywhere other than here. No one I know has a pool,\" Jack remarked.\n\nEd nodded knowing that feeling. \"It's only recently that I've gone anywhere. I've now been to Barbados which is a beautiful island and New York City which is...\" Ed was momentarily at a loss for words. \"...huge!\" he finally blurted.\n\nJack grinned at Ed's expression of wonder. \"Maybe one day I'll visit those places too.\"\n\nEd waded in and noticed another difference. The water was cold. He pushed himself to go further in and dove forward to get under the water in one sudden move. When he came up he was gasping and wide eyed. He looked at Jack who'd matched his moves and was wiping the water from his eyes with a smile.\n\n\"It's COLD!\" Ed gasped in shock.\n\n\"Yes it is,\" Jack agreed with a nod.\n\nThey swam for a bit just trying to get used to the water temperature. Then Ed got curious about what Jack intended to do once he graduated in such a small town. There didn't appear to be many places to find work. Maybe on a farm?\n\n\"You graduate next year?\" he asked and Jack nodded. \"What then?\"\n\nJack frowned as he thought about it. \"Papa wants me to work with him on the farm but... I don't see myself being a farmer. I- I have something else I'm interested in doing.\" He looked cautiously at Ed but the big man just looked back at him with an open expression.\n\nEd waited for Jack to continue as the young man seemed to be struggling with something.\n\nBack on the sand Jillian was having no trouble expressing herself.\n\n\"I'm not allowed to date. I'm not allowed to get a driver's license. I have to come home directly after school so I can't join any clubs or hang with my friends. He has so many rules and most of them only apply to me! He's a tyrant!\" she growled.\n\nStephanie watched the young woman and realized how much they were alike. It was obvious Jeff was repeating how he treated his sister with his oldest child. She jolted. \"He hasn't hit you, has he?\"\n\nJillian scowled and shook her head. \"If he lays a hand on me he's going to prison. I told him as much the one time he raised his hand to me.\"\n\n\"You've talked with Jenny about this?\"\n\n\"Yes, Mom knows and she tries to get him to be more flexible but the older and more independent I get the harsher he becomes. You heard him, he called me a bitch!\" Jillian exclaimed and tears were coming to her eyes.\n\nStephanie saw the young woman's lower lip was trembling. She hated her brother at that moment. She reigned in that rage and gave Jillian a sympathetic smile. \"Your grandparents did a real number on us when we were growing up. They pitted us against each other. As a young teen I rebelled from their treatment but Jeff went the other way. It sounds like he's treating you like he treated me.\"\n\nJillian struggled to keep her tears at bay. It was such a relief to speak with someone who understood. \"I can't take much more! I have to get away from him! How did you do it?\"\n\n\"I got a job in town. Then I got a second one and a third. I worked as much as I could to stay away from the house and to earn enough money to buy a ticket out and to get myself established someplace else. When he began his campaign to get me married off I knew I couldn't wait any longer. I took all my money, packed the few things I had, hitched a ride in town and bought a ticket for the first bus to New York City.\" Stephanie shook her head with a smile. \"Thinking back on it now I realize how incredibly reckless my gamble was. The money I had was nowhere near what was needed to survive in that city. It was only by the sheerest luck I met someone I could rely on in those early years. If I hadn't met Victor on that bus I would have ended up homeless and starving within the first few weeks. We were both surprised by how expensive it was compared to our hometowns and he was going there for a new job and had income. I had no job and little training for anything that paid well. Without Victor's help I would have failed and probably would have returned home to suffer whatever fate Jeff had in mind. It's sad my husband became so unreliable at the end of our marriage. I love him for those early days.\"\n\nJillian was listening intently and her face was red with frustration.\n\n\"There are no jobs in town. I have no money. If it wasn't for Mom I wouldn't be able to afford clothes. She's not going to pay for a ticket to New York and I'm sure it's even more expensive to live there now.\"\n\n\"Heading to such an expensive place the live isn't the best option when you're just starting off. You should target someplace smaller but large enough to actually have available jobs. You should be going to college and taking a part time job or two to pay your own way. Take courses to learn some skills you can put towards a higher paying job. How good are your grades?\" she asked.\n\n\"Mostly A's. Two B's,\" Jillian replied.\n\nSighing with relief Stephanie nodded. \"Do you know what you'd want to do?\"\n\nJillian sniffed as she considered her aunt's words. \"I wanted to get into nursing.\"\n\n\"Have you spoken with your mother about this?\" Stephanie asked.\n\nThe young woman shook her head.\n\n\"You should. Find a moment to speak to her alone. Let her know you need to take control of your life. Tell her you have a goal and you need their help to get it started.\" Stephanie reached out and took the young woman's hand and gave it a squeeze.\n\nJillian seemed to be pulling herself together as she contemplated her next moves. She looked out at her brother and Ed who were making their way back to shore. When Ed's broad shoulders and big arms emerged from the water a tremble went through her body. She looked back at her aunt who was watching Ed with a satisfied smile.\n\nStephanie caught her niece's look and shared her smile with her. \"Yes, he's easy on the eyes, isn't he?\"\n\nJillian blushed but nodded.\n\n\"He's very strong but he has a gentle heart and his kisses...\" Stephanie trailed off with a dreamy smile as she watched Ed approach.\n\n\"I've never been kissed,\" the young woman sighed quietly as she looked at Ed's mouth.\n\nStephanie's eyes snapped back to the sad face of her niece. Once more her rage against her brother almost got the better of her. She realized she was holding onto the past too hard. She forced herself to breathe slowly. She watched Ed leave the water to distract herself from her angry thoughts.\n\nJack was smiling at Ed. \"Thanks!\"\n\n\"For what?\" Ed asked in surprise.\n\n\"For being so easy to talk to. For not judging me or freaking out,\" Jack replied.\n\nEd shook his head. \"I wouldn't do that. I had a hard time in school. I wasn't school smart. I struggled with almost every class and the teachers didn't like me much. The other kids weren't much better. If I hadn't been so big I think it would have been much worse for me. If I learned anything from that experience it's to be true to yourself. Live to your own expectations. If you don't want to work on the farm then don't. If you want to be a fashion designer, if that's what makes you truly happy, then put all your energy into that and don't give up on your dream.\"\n\nJack's smile brought one to Jillian's face as her brother dropped down on his towel. When he shook the water from his head she squawked as the chilly drops splashed her. \"You little twerp!\"\n\nHe grinned back at her then flopped back to warm his chilled body in the sun.\n\nJillian hadn't seen her brother so happy and at ease for... a long time, she realized. She looked curiously at Ed but he just smiled back at her. He sat down on his own towel and laid back to bask in the hot sun. She looked more closely at his features. While they were closed now, he had beautiful pale blue eyes. His nose had a bump on it. Had it been broken? His mouth was what drew her attention the most. She imagined what it might be like being kissed by them like Stephanie hinted at. She wanted to experience that. Very badly. She rested back on her own towel and let her mind wander.\n\nEd woke some time later with the feeling of lips on his. His eyes opened to see Stephanie's smiling eyes looking lovingly into his. She pulled back from the kiss to grin down at him.\n\n\"Your stomach's groaning woke me up!\" Stephanie said, poking him in the tummy.\n\nHis offended stomach took that opportunity to grumble in response. The rest of the group chuckled and Jack lifted the bag of snacks over to the towels. He looked inside.\n\n\"We have some small assorted subs and some chips.\" He handed out the food and soon they all agreed the subs were inedible. They finished off the chips and opened the drinks.\n\n\"Is there still a Chinese food place in town?\" Stephanie asked.\n\nJillian's eyes lit up as she nodded.\n\n\"Why don't we go there for dinner tonight? My treat!\"\n\n\"Yes, please!\" Jillian and Jack said in unison.\n\nStephanie laughed and basked in the happy smiles from her niece and nephew. Family she didn't even know she had. If it hadn't been for Jeff she would love to get to know them better. As it was she and Jeff couldn't be in the same room together without heated words at the very least.\n\nSpeaking of heat Stephanie needed to cool off from the intense sun. She climbed to her feet and Ed followed her up. They walked to the edge of the water and she dipped her toe in.\n\n\"Oh my god! That's cold!\" she gasped.\n\n\"It's not too bad once you're in. You get used to it fast,\" Ed replied.\n\n\"I'll take too long to get in! It's too cold,\" she moaned.\n\n\"There's no help for it then,\" Ed sighed before he scooped Stephanie into his arms and began walking into the water. She shrieked and clung to him as he strode out into the lake.\n\nJillian and Jack grinned at each other as they watched Ed carry their aunt into the cold water. She looked over at her brother.\n\n\"You seem happier, more relaxed today. Since you talked with Ed specifically,\" she probed.\n\nHe looked over at her suspiciously.\n\n\"I'm happy to see it. You're too serious all the time,\" Jillian said with a compassionate look.\n\n\"You're not the only one Papa has expectations for.\" He held up his hands to hold off her outburst. \"I know he's way harder on you. I don't understand why he's like that. It's not fair. I keep trying to talk to him about it but he shuts me down every time.\"\n\nJillian didn't know Jack had been doing that. She looked at him in surprise and tears came to her eyes. Her brother was on her side!\n\nJack continued, oblivious to her tears as he was looking down at the sand. \"He wants me to work on the farm after I graduate. I don't want to be a farmer.\"\n\n\"What- what do you want to be?\" Jillian said, trying to get control over her emotions.\n\nJack heard the wobble in her voice and looked over, noticing the pooling tears at last. \"Why are you crying?\"\n\nShe shook her head but at his insistent look she sighed. \"I'm just so happy you're on my side.\"\n\n\"Of course I am! You're my sister! I love you!\" he said sternly and her happy tears could no longer be denied.\n\nJillian threw her arms around her brother and hugged him.\n\nHe hugged her in return then gently pushed her back. When she looked at him curiously she saw his face was red with embarrassment and he was looking away. \"What's wrong?\"\n\n\"I told you that swim suit was too small for you!\" he said, his eyes locked on the horizon.\n\nShe looked down and one of her large breasts was no longer covered by the small triangle of fabric.\n\n\"Sorry Jack!\" she said with a smile as she adjusted the fabric and he just nodded stiffly. She wiped her eyes and tried her question again. \"What do you want to be?\"\n\n\"I want to be a fashion designer!\" he blurted.\n\nHer eyebrows rose up and she stared at her brother. \"You're-\"\n\nHe looked back with annoyance. \"No, I'm not gay. I just like drawing designs for women's clothes!\"\n\n\"When did this start?\" she asked in surprise.\n\n\"Last year. I was doing homework and I heard you talking with Mom about how there was nothing pretty to wear in the shops in town. I started doodling and I found myself drawing some dresses I thought would look nice on you. I really enjoyed it.\"",
        "\"Do you still have the drawings?\" she asked.\n\nHe looked a little defensive but at his sister's eager look he just nodded.\n\n\"I want to see them!\" she gushed.\n\n\"The early ones were very rough! I've done better work since those,\" he insisted.\n\n\"I want to see them all!\" Jillian said with glee.\n\nJack couldn't stop a smile from slipping onto his lips. He felt elated to have someone at home who was supportive of his passion.\n\n\"You need to sign up for a course on making clothes! They do that in Home Ec don't they?\" she gasped.\n\n\"I can't sign up for Home Ec!\" he exclaimed.\n\n\"Why not?\"\n\n\"I'm on the football team! They'd eat me alive!\" Jack barked.\n\nThey heard a shriek and turned to see the huge splash as Stephanie went under. They watched Ed dive under the surface and come back up with her in his arms again. He turned and carried her back to the beach.\n\nJillian turned to her brother. Her mind made the intuitive leap. \"You've spoken to Ed about what you want to do?\" He nodded.\n\nEd was setting Stephanie down on her feet and she swatted him but she didn't look too upset.\n\n\"Ed, don't you think Jack should take Home Ec to learn how to make the clothes he designs?\" Jillian blurted and heard Jack's protest die on his lips as the young man watched his aunt's delighted smile.\n\n\"His team mates would eat him alive,\" Ed replied. \"That shouldn't stop you if you want to do it. You can always tell them it's just to get closer to the ladies.\"\n\nJack's expression turned thoughtful as he considered that ploy.\n\n\"They'll still give you a hard time but if you treat their teasing as a joke you can survive it.\" Ed suggested.\n\n\"They do things other than sewing. You'll learn how to cook as well,\" Stephanie said. She saw Jack's expression twist into distaste. \"Ed is an amazing chef! He makes the most delicious marinade for steaks! A friend of ours has a restaurant which specializes in steak and she now uses his marinade exclusively and is working on getting it sold commercially!\"\n\nJillian and Jack were looking at Ed with wide eyes. \"Did you take Home Ec?\" Jack asked.\n\n\"No, I learned how to cook by watching my adoptive mom Shirley. She was an amazing cook! Then I just experimented on my own. We didn't have much money so I learned how to make cheaper cuts of meat tenderer and tastier by marinating them,\" he said with a shrug. He always felt a little sad when he talked about Shirley.\n\nStephanie saw the look in his eye and gave him a hug to pull him back from the funk. She tilted her face up and he kissed her tenderly. She felt something waking up and press against her before he pulled away with a nervous glance at the others. She sat back on her towel with a smile and watched Ed stretch out on his towel on his stomach to hide the beginnings of the bulge. She rested back and let the soft breeze dry her skin as she soaked in the sun.\n\nThey spent the afternoon alternating between baking in the sun and jumping in the frigid water. They also talked and got to know each other.\n\nIt was late afternoon when they'd finally had enough of the beach and packed up. They were ready for an early dinner.\n\nThey used the washrooms to change back into their clothes then made their way back to the car. This time Ed drove and got directions from Jillian to the Chinese food restaurant. They got a table for four.\n\nJack made a quick call home and got the all clear from his mom. Jeff had taken some headache medication and went to bed early. He informed his sister when he got back to the table.\n\nJillian and Jack ordered their favorites and Ed added to that as he was really hungry. The food arrived quickly and they dug in. Jillian mentioned the kids in the family all loved the chicken balls with sweet and sour sauce and the chicken fried rice. Stephanie flagged down the waitress and ordered two containers of each to go for Jillian to take home.\n\n\"If he asks tell your Dad you two paid for it,\" Stephanie suggested as she placed the bag on the edge of the table beside Jillian.\n\nJack nodded.\n\nFeeling pleasantly full Ed drove them back to the farmhouse but stopped at the end of the driveway as he remembered the lack of welcome the last time they were there. Jillian and Jack slid out carrying their backpacks, towels, and the take-out food.\n\n\"Thank you so much for taking us to the beach and out to dinner tonight!\" Jillian said at Stephanie's window.\n\n\"You're most welcome!\" Stephanie replied. \"We'll see you tomorrow at 4PM?\"\n\n\"Yes!\"\n\n\"Don't forget what I said about talking to your Mom. Maybe tonight would be a good opportunity since Jeff went to bed.\n\nJillian smiled and nodded.\n\nEd leaned over to look at the two through the window. \"Have a good night!\"\n\n\"You too Ed!\" they called. They stood back as he backed out onto the road and headed back to town.\n\n\"It's still early. Would you like to go bowling?\" Stephanie asked Ed with a grin.\n\nHe looked at her with a smile. \"I've never bowled before.\"\n\n\"I worked at the alley when I was younger. It's probably a lot different from when I was last there.\"\n\nThey drove to the bowling alley and went inside. The lighting was subdued and colorful. \"I was right, it looks nothing like it did when I worked here,\" Stephanie said with a smile. She was actually pretty happy about that as she hated the florescent lighting they used back then.\n\nThe far six lanes appeared to be busy with some kind of tournament. Teams wearing colorful shirts commanded those lanes and had a large audience behind them. There was a fair amount of noise coming from the group who were cheering and jeering in equal amounts.\n\nStephanie led them to the shoe rental desk and smiled at the young man behind the counter.\n\n\"Can I help you?\" the man asked.\n\n\"We'd like a lane and to rent some shoes, please.\"\n\nHe looked over and saw most of the lanes on the left side were empty. \"I'll put you in lane three. What size shoes?\"\n\nStephanie looked back at Ed. \"Size twelve,\" he said.\n\n\"Size twelve for him and seven and a half for me.\"\n\nEd looked at the odd red and blue shoes and tried one on but it was too tight.\n\n\"Uh, it doesn't fit.\"\n\nHe gave the shoes back and the clerk brought him a pair of thirteens. He slipped one on and nodded. \"Are bowling shoes normally one size larger than regular shoes?\" he asked.\n\nThe clerk stared at Ed. \"No, they use the same sizes.\"\n\nEd looked at his boots and sure they were looking pretty rough but they didn't pinch.\n\n\"Maybe your feet got bigger too,\" Stephanie smiled poking him in the chest.\n\nHis eyebrows went up. \"I thought I was finished growing!\" he replied.\n\n\"I think feet continue to grow as needed to support the rest,\" she said with a smile, continuing to run her fingers over his muscular chest before pulling them away and biting her lower lip.\n\nThey made their way over to the lane and stood before a rack of bowling balls. \"You'll need to find one that fits your fingers. The holes are drilled in different sizes. Find one that your fingers fit into easily when you hold it like this.\" Stephanie picked up a sparkling purple ball with her thumb and two middle fingers, showing Ed where her hand gripped the ball. He nodded and made his way down the rack trying ball after ball. He finally found one at the end of the rack. It had bright orange stripes like a tiger and Stephanie grinned with delight thinking the tiger theme suited him as he returned with it.\n\n\"You've never bowled before?\" she asked and he shook his head. \"Ok, I've only done this casually with the kids but here is how you play in its simplest terms. You roll the ball down the lane to knock down all the pins. You get two tries unless you knock them all down on your first roll. Try not to put your ball in the gutters which run along beside the lane. I'll bowl first so you can watch how I move and release the ball. Alright?\" He nodded once more.\n\nStephanie entered her name then Ed's in the computer on the little desk and her name popped up on the TV screen above the lane. She got up and Ed followed her. \"See how I'm holding it? I'm going to take three steps, not going past the line drawn on the floor there, swinging the ball back then forward, releasing it only when it's moving towards the pins. I'm aiming just to the right side of the first pin. Got it? OK, here I go.\"\n\nEd watched Stephanie's moves and saw the smooth release. The ball rushed down the lane to crash through the pins but two were left standing.\n\n\"I get one more try to knock these two down. If I do it's called a spare and I get extra points with my first bowl in my next turn. If I don't I only get the points for the pins I did knock down.\" She looked at Ed and saw he was beginning to look confused. \"You know what? Let's leave the scoring to the machines and just have fun.\"\n\nEd sighed with relief and smiled at her.\n\nStephanie managed to get the remaining pins and squeaked with glee as she danced back to the desk. He clapped for her and watched the pins being reset.\n\nThe TV showed Ed's name and he positioned himself as he'd seen Stephanie do and he took the steps and released the ball on the forward swing. The ball sailed down the lane and didn't land for eight feet. It hit with a heavy thump and Ed knew he'd done something wrong. The ball was moving towards the right side gutter but he did get the ten pin at least. He walked back with an embarrassed look on his face. He looked over at the scowling clerk and pantomimed an apology. The man turned away.\n\n\"That's ok Ed. You just released the ball a little late. You get another try.\"\n\nEd's ball popped up in the ball return and he positioned himself again. As his throw went right last time he angled his body a little to the left. He made his approach and release and this time the ball landed just two feet out and rolled quickly down the lane to pick off the seven pin. He got two pins. He turned back to Stephanie and shrugged with a smile.\n\nStephanie was left with a split on the next frame with just the seven and ten pins left.\n\n\"Hey! Those are the pins I can hit! I can get them for you if you like,\" Ed joked then raised his hands in defeat as the machine reset the pins.\n\nHis next attempt was better and he thought he might be getting the hang of it. Stephanie was still beating him but he gradually started to catch up.\n\nAside from the tournament at the other end of the building their lane was the only one in use. Stephanie noticed they'd drawn some attention as she saw heads turned in their direction when she looked in theirs. She put it down to small town curiosity and concentrated on her own game.\n\nThen she got a strike followed by a second one while Ed got five pins then seven. She was all grins as she returned to the chairs to give Ed a kiss. When she pulled back he smiled at her and saw her expression stiffen as she looked over his head. He turned and saw a group of people walking by. The tournament was obviously over. Then he noticed they were frowning in their direction.\n\n\"Do you know these people?\" Ed asked as he watched them leave.\n\n\"No, I don't recognize any of them.\"\n\nTwo men in bowling shirts were following the others past their lane. They also had scowls on their faces. One worked up the nerve to speak. \"Isn't it bad enough you broke up Kenneth's marriage, now you're going after kids?\"\n\nEd stood up to face the man. \"Excuse me, what are you talking about?\"\n\n\"She made Nancy go queer and leave her husband!\" the man barked.\n\nEd blinked at the man's statement. \"It doesn't work that way sir. People can't make other people become gay. Either you're gay or you're not. Stephanie's friend Nancy is gay but was trying to live like she wasn't. She wasn't happy so she decided to stop lying to herself.\"\n\nThe man was pouting belligerently. \"Nancy didn't decide to do it until she showed up!\"\n\nEd looked at him with wide eyes. \"I'm sorry, I don't understand why you're mad. Stephanie had nothing to do with Nancy's being gay or her decision to leave. Nancy could have made the decision tomorrow or the day after that for any number of reasons. I think the fact that she made it so quickly meant it was just a matter of time. The why of it doesn't matter.\"\n\n\"It does matter because Kenneth's now on his own with the restaurant and two daughters to raise!\" the second man growled.\n\nStephanie had had enough. \"We're both sad Kenneth and Nancy's marriage failed but it's sadder that Nancy married him in the first place for the wrong reasons. It's too bad she couldn't have been honest with herself from the beginning.\" Both of the men looked uncomfortable about that. \"We met their daughters last night. Lovely young women. They're both adults. The raising part of their lives is done. Now it's their turn to help their dad until he can hire someone to help out in the restaurant.\"\n\nUnhappy about how they seemed to be losing the argument, the first man focused a sneer on Stephanie. \"That doesn't excuse you from robbing the cradle!\"\n\nEd felt Stephanie bristling so he put his arm around her shoulders and addressed the men once more.\n\n\"I don't understand why you're angry about something that can't affect you in any way,\" he said.\n\n\"Come on, Burt. It's clear they have no sense of propriety.\"\n\n\"Oh, but judging us makes you morally superior somehow?\" Stephanie barked.\n\nThe two men frowned and left. Stephanie was breathing hard and trembling.\n\nFeeling her tremble he gave her a hug and decided they'd probably had enough bowling for the night. He kicked off the funny shoes and put on his boots once more. Stephanie saw what he was doing and nodded as she struggled to compose herself. She changed her own shoes, dropped off the rentals with the clerk, and headed outside.\n\nEd drove them back to the motel. Stephanie stopped by reception to arrange for an extra night. When they got back to the room she used her tablet to connect to the airline and adjusted their flight home as well.\n\nEd called home to let them know he would be away an extra day. When he hung up he turned and saw Stephanie sitting on the edge of the bed with a sad expression on her face.\n\n\"Hey, what's wrong?\" he asked.\n\nBlue eyes looked up at him and he saw her lower lip begin to tremble. He sat on the bed next to her and put his arm around her, resting her head against him. \"Please talk to me,\" he asked gently.\n\n\"Are they right?\" she asked faintly.\n\nEd didn't follow. \"Are who right?\"\n\n\"Those men at the bowling alley. Am I being ridiculous for trying to have a relationship with a man so much younger than me?\"\n\n\"Hey! We're in a relationship! There is no try!\" he teased but he saw from her frown she was really upset. He took her chin in his fingers and tilted her face up so he could look into her beautiful eyes.\n\n\"In my heart I have so much love for you. You are my Stephanie. The woman who is mischievous, playful, and makes me happy. You are beautiful and dazzle me with your smile. You are unique and it may be completely selfish of me but I want you in my life. Grace and the others have welcomed you so as long as you will have me I'm yours as well. I seriously don't care what some ignorant strangers think. Yours is the only opinion that matters... on that... matter,\" he finished awkwardly but it didn't seem to matter as Stephanie no longer looked sad.\n\nShe pushed him back onto the bed and climbed on top. Then her lips were on his, hungry for his kiss and he gave himself over to her passion. Their tongues stroked across each other and Ed's hands slid down her back to squeeze her ass.\n\nStephanie moaned into Ed's mouth as the feel of his big hands on her ass sent waves of pleasure through her. She kissed him more aggressively and began frantically pulling at his clothes to get him naked.\n\nEd moved his hands up and pulled her top up and over her head. He looked at her sexy black bra and the delightfully perky tits it contained. She reached back and undid the clasp, yanking the garment off and tossing it aside. His hands went immediately to her breasts and held the modest orbs in his palms.\n\nStephanie sighed in bliss as he gently squeezed her tits and felt the tingles rush from her nipples to between her legs.\n\n\"I need you naked!\" she gasped and he smiled. As she was on top of him getting undressed would be a challenge.\n\nHe released her tits and arched his back with his head pressing back against the mattress so he could pull his shirt up. He got his arms free and relaxed his back so he could get the shirt up and over his head. He felt Stephanie's hands on his chest caressing, squeezing, and kneading his thick chest muscles. When the shirt came free of his head he looked at the lovely brunette and saw the joy and lust in her eyes. He reached up and pulled her face to his so he could caress her lower lip with his and feel the softness of her mouth. They both felt the charge from that and soon they were kissing deeply, her tongue in his mouth as he sucked on it.\n\nHe loved the feel of her stiff nipples rubbing across his chest and he pulled her tighter against his body, feeling her breasts squeeze flat against his chest.\n\nStephanie cooed, enjoying the power of his arms around her. Her coo turned into a squeak as he suddenly rolled over putting her beneath his large body. Her pelvis was trapped beneath his, pressed down into the mattress and she felt his cock becoming harder against her. She moaned in primal bliss feeling it pulse and move against her.\n\n\"I want you Stephanie,\" he growled quietly against her cheek as he rocked his pelvis side to side. She moaned and shook as her body spasmed with the strong sensations.\n\n\"Oh fuck! That feels so good! Take me Ed! Take me... like you take Zoe!\" Ed pulled his face back to look at Stephanie in surprise. She was looking up at him timidly.\n\n\"Are you sure?\" he asked hesitantly. He wasn't sure if he could... do that with Stephanie as she was so different from Zoe.\n\n\"I- I just want to know what it feels like. Just this once.\"\n\n\"It... can get rough,\" he warned her.\n\nShe bit her lip nervously but didn't give in. \"Please,\" she begged, her blue eyes looking deeply into his pale ones.\n\nHe couldn't speak so he just nodded. He slid the fingers of his left hand into the hair on the back of her head. Her pixie cut hair was so much shorter than Zoe's long locks but he was still able to get a grip. Her eyes widened and she gasped before he kissed her hard. She squeaked then moaned into the kiss as he sucked on her tongue and caressed her mouth with his. He controlled the kiss with his grip and she began to pant.\n\nHe released her, pushing himself up to stand at the end of the bed. He shoved his pants and boxers down and kicked them off. Stephanie lifted her head and her eyes widened as she saw his thickness bobbing between his legs. He undid her pants and lifted her legs to pull them off. Off came her panties as well as she gasped at his rough tugs.\n\nEd flipped Stephanie over onto her stomach and ran his hands up the back of her legs until he reached her ass.\n\n\"Oh yes!\" Stephanie gasped as she looked over her shoulder at him.\n\nHe squeezed her cheeks and parted them with his thumbs as he lifted her hips. He dipped his face down to stroke his tongue strongly across her pussy.\n\n\"AAAAAAHHHH! FUCK! OH GOD!\" she cried.\n\nEd fucked her with his tongue and sucked on her pussy as she clung to the sheets and thrashed from the strong sensations.\n\nStephanie was dazed by how fierce Ed was being with her. When his tongue stroked across her puckered ass she squealed and jolted. He returned to tease it and she tried twisting out of his grip but his hands were too strong.\n\n\"WHAT! WHA- ED! MMMMFUCK! MMMMMNNAAHHH! NONONONO!\" Her cries took on a desperate tone but her juices were running down her legs.\n\nWith a final flick of the tip of his tongue across her rosebud he knelt behind her and rubbed his hard shaft against her slick pussy then pushed the fat head of his cock between the swollen lips.",
        "\"OH ED! FUCK!\"\n\nHe dipped the head in a few inches and pumped himself rapidly but shallowly in and out until the head of his cock was well lubricated.\n\nThen he drove himself deep.\n\n\"AAAAAAAAAAAAAHHHHHHNNNNN!\" Stephanie howled as she felt his cock stretch her wide open, so deep. Ed pulled out slowly the drove himself in again, slapping her ass with his pelvis. He set up a steady rhythm of thrusting.\n\n\"UUUHHHH! UUUHHHH! UUUHHHH!\" Stephanie grunted with each thrust as her ass took slap after slap. She felt like some wild animal rutting with her mate. His need driving him to take her hard and fast. She accepted his thrusts and even forced herself back to meet them. He filled her so deliciously. Her ass was on fire from the spanking his hips were giving it. His heavy balls were swinging up to slap against her clit and these impacts were causing her to lose her mind. The explosions of sparks that arrived with each strike destroyed her ability to think. She was racing up on her release and it was going to be huge.\n\nEd suddenly pulled her upright on her knees in front of himself and wrapped his right arm around her, his hand moving to her pussy. His left arm went around her chest taking one tit into his big hand and pressing the other under a thick forearm. Her arms were pinned to her sides and he tilted back slightly forcing his cock deeper into her and slightly lifting her from her knees.\n\nNow she was completely at his mercy. He growled quietly into her ear and felt her tremble. \"You're mine Stephanie. Body and soul. Say it.\"\n\nShe felt herself whiting out from the incredible heat of his cock buried so deep and the glow of her ass cheeks pressed so hard against his body. Her head was thrown back, resting against his chest. She was on the precipice of her orgasm, balancing on the razor's edge of bliss. \"I'm- I'm yours. Body... and soul.\"\n\n\"That's my girl.\"\n\nShe felt herself tipping over into heaven when he began bouncing her up and down against his body, his fingers rubbing against her clit and her nipple.\n\n\"FFFFFFAAAAAAAAAAHHHHHHHHHH!!!\"Stephanie wailed as she went into convulsions when her orgasm exploded. The bouncing became more and more rapid as his cock made quick but shallow thrusts deep inside. Suddenly he was growling and shaking as well as his cock fired his hot cum up inside her body. She was dimly aware of this additional blissful feeling as she rode the waves of pleasure. Peak after peak rolled over her in a seemingly endless series. Ed's jolts and trembles kept her own release rolling along. It was a feedback loop between them.\n\nWhen she became too sensitive she whimpered and he gently lowered them to the bed. He slipped his semi-rigid cock from her tingling and aching pussy and she whimpered once more. She felt empty without him inside her forcing her open. She knew the sensation would subside but for now she wanted him back. He lowered himself the rest of the way down to the mattress behind her and kissed her ear.\n\nShivers shot through her body from his gentle kiss and she gasped.\n\n\"GOD! Stop! I'm too sensitive!\" she pleaded.\n\n\"Your ears?\" he said with a smile.\n\n\"My whole body,\" she gasped.\n\n\"I didn't hurt you, did I?\" he asked.\n\n\"No... well, I'm a little sore but I'm glad we did it. I can definitely see the thrill. It's a little too much for me but I'm so glad we did it!\" She gave him a brilliant smile which made her eyes sparkle.\n\nEd saw she was truly happy which made him happy. He didn't tell her that for him it had felt different than when he was with Zoe. Not worse or less in any way, just different. He... really couldn't explain it.\n\nSo he didn't.\n\nShe purred as she rolled over and tucked herself against his chest. He kissed the top of her head and she tilted her face back for a real kiss. He caressed her mouth with his and she sighed. Then yawned. He grinned at her.\n\n\"Ok, maybe I'm a little wiped out after that,\" she said with a blush.\n\n\"I'm going to get ready for bed,\" Ed said and climbed out of bed.\n\n\"Ed?\"\n\n\"Yes,\" he said looking back.\n\n\"Could... could you help me get to the washroom? I'm in a little more pain than I thought,\" she asked with an embarrassed smile.\n\n\"Oh Stephanie! I'm so sorry!\" he gushed but she held up her hand.\n\n\"No, you don't have to apologize. You warned me and I was aware there were risks. It's just a small cramp. It will go away. But I really need to use the washroom.\"\n\nEd scooped her up and carried her into the bathroom. He set her gently on the toilet and stepped outside for her to do her thing.\n\nWhen she called him back in he helped her stand and they brushed their teeth together. He quickly cleaned himself off then he carried her to the bed and got her under the covers to snuggle in behind her.\n\nStephanie could feel his flaccid but still dauntingly heavy cock resting against her ass cheek and she flashed back to the moment when he was teasing her bum with his tongue. She was convinced he was preparing her ass for his cock and the thought terrified her. She was confused by how wet he'd made her when he'd done that. A shiver went through her body as she recalled the illicit thrill. She gasped when Ed wrapped an arm around her to pull her closer, his cock now resting between her cheeks. She held her breath but soon she heard Ed's soft breathing as he slipped into sleep.\n\nIt took Stephanie much longer to find relief from her spinning thoughts.\n\nChapter 4\n\nFor the second time in two days Ed found himself sitting next to Stephanie in the law office conference room listening to the ticking clock on the wall. Once more Jeff and his family were sitting in the room with them but this time Jillian and Jack were sharing smiles with their aunt and her boyfriend. Jenny also looked happier than the day before.\n\nEd noticed the three younger kids were also smiling at their aunt. He wondered where that was coming from not that it was unwelcome. The only one who wasn't smiling was Jeff and to Ed he looked even angrier than the day before.\n\nHe glanced over at Stephanie who was smiling back at the kids and he sighed with relief. He'd had to drive in town earlier that day to pick up some pain killers as she'd woken in some discomfort from their 'playtime' the evening before. She seemed to be fine now though she'd walked slower than normal on their way in, taking careful steps. Luckily they'd been first to arrive so that spared Stephanie from having to explain.\n\nThey'd spent the first part of the day in the room so she could recuperate before the meeting at 4PM. She'd told Ed not to feel bad but he couldn't stop himself from fretting over her until she sent him on an excursion to locate another puzzle book. He'd found two which would occupy him on the drive back to Kansas City.\n\nHe was interrupted from his thoughts by the arrival of the lawyer who rushed into the room to sit at the head of the table. Ed took in the shock of white hair brushed back over his head and the thick white eyebrows and horse shoe mustache. The man was probably in his sixties, maybe 5' 8\" and carrying some extra weight but his eyes were sharp and smiling as he took in the occupants of the room. He saw Ed and Stephanie sitting on one side of the table but Jeff and his family were in the chairs along the far wall of the room.\n\n\"Mr. Norris, would you be so kind as to join us at the table and bring your family along?\" he said.\n\nJeff grimaced and moved to the chair across from Stephanie. His family members found chairs around the table. Jillian chose the one next to Ed which earned her a scowl from her father but she ignored him.\n\n\"I'm Daniel Carson, the legal representative of Oliver and Kathleen Norris. First off I'd like to apologize for the delay incurred by yesterday's events. Second, my condolences for your loss.\"\n\n\"Could we get on with it?\" Jeff said curtly.\n\nAngry eyes turned in Jeff's direction from Jenny, Jillian, and Stephanie. The lawyer simply sighed and moved on.\n\n\"It is my understanding that Ms. Matthews has been estranged from the family for the better part of two decades. You've had no contact with your brother or your parents in that time?\" he said looking at Stephanie.\n\nShe cleared her throat then answered. \"Yes, that's right.\"\n\nThe man nodded ignoring the quiet snort from Jeff. \"I was contacted by Oliver and Kathleen two years ago to prepare a will for them. They wished to keep it simple but left me instructions to locate their daughter upon their death if she hadn't reached out to them in the interim.\" He glanced at Stephanie and saw her eyes were beginning to look a little glassy. A glance over at her brother saw a look of contempt on the man's face. The lawyer knew what was coming so he took a deep breath.\n\nHe opened the docket and pulled out the single sheet of paper the Norris' had written as their will. It was simple and straight to the point but legally binding for all its brevity. He read the brief paragraph of legalese he managed to convince them to allow him to prefix the document with and saw the he had his audience's attention. Now for the hard part.\n\n\"Normally I just send copies of the will to the people named in it but your parents left explicit instructions due to the circumstances that led to the estrangement. They asked that we follow the outdated method of a reading.\" He nodded to Jeff and Stephanie who were looking back at him in confusion. \"The assets Oliver and Kathleen accumulated in their years include the home they lived in and the farm they worked with their son Jeff Norris, their life savings in the form of various investments listed in the addendum and a bank account also listed in the addendum, and the life and home insurance policy they dutifully maintained payments for.\" He looked up from the document at Jeff and Stephanie and saw they were still watching him closely. \"The family home is too badly burned to salvage but I understand the insurance company has agreed to a full payment of the policy as the cause of the fire was determined by the Fire Marshal to be a faulty electrical outlet.\" Jeff nodded stiffly and Stephanie's eyelashes pooled with unshed tears. She dabbed at them absently with a tissue Ed handed to her.\n\n\"The will stipulates that all of the assets listed above be divided equally between the two heirs, Jeff and Steph-\"\n\n\"WHAT?\" Jeff bellowed as he surged to his feet. \"THAT'S NOT WHAT THEY PROMISED! THIS IS BULLSHIT! THIS BITCH GAVE UP ANY GOD DAMNED CLAIM SHE HAD TO ANYTHING FROM THIS FAMILY THE DAY SHE ABANDONED IT!\" he yelled as he jabbed his finger at Stephanie who stared back in surprise at his violent reaction.\n\nEd took Stephanie's hand in his and gave it a gentle squeeze to let her know he was there for her. She shot him a brief but grateful smile.\n\n\"Mr. Norris! Lower your voice and sit down please. Screaming will not change the fact that the wishes of your parents were recorded in a legal will to be enacted upon their passing.\"\n\n\"I'll contest the will!\" Jeff barked as he allowed himself to be pulled back into his chair by Jenny.\n\nMr. Carson looked at Jeff with a tired expression. \"The will was witnessed by your parent's family doctor who vouched for their mental state at the time of its creation. They created the will at their own request without outside influence or duress. Additionally, there is no vague wording in it. What I read to you was the wording they used. Furthermore, your parents had the forethought to include a no-contest provision which I was about to read. I suspect they were aware of your feelings in this matter and included the clause to negate the option. If you proceed with contesting the will let me assure you that you will lose. You cannot prove you have grounds for contesting it and in doing so you will lose your share.\"\n\nJeff leaned back and stared at the lawyer in stunned silence. Then he looked at Stephanie and his expression darkened. \"After everything I did for them they fucked me over for you,\" he growled quietly.\n\nStephanie scowled at her brother. \"What are you talking about? They didn't cut you from the will!\"\n\n\"But they should have cut you from the will! I told them to! They told me they had!\" Jeff snarled.\n\n\"And in their original will they did. The new will they created two years ago altered that key clause. I suppose they had a change of heart and chose not to tell you.\" Mr. Carson said.\n\nStephanie was doubtful her parents were capable of having a change of heart. This ambush felt much closer to one final attempt to pit the siblings against each other. But unlike Jeff she kept her opinion to herself. She couldn't fathom her parent's thought process. She never could. She'd just promised herself she would be vigilant to watch for the same behavior from herself towards her own children. So far so good.\n\n\"What does it mean that ownership of the farm is split between Jeff and Stephanie?\" Jenny asked and the lawyer smiled at her.\n\n\"It simply means the deed for the property transfers to their names. The estate is in probate so there will be no actual transference of ownership of the assets until the court has approved. This doesn't change the day to day activities until then and it would only change afterwards if one of the heirs wishes to liquidate their share,\" the lawyer explained.\n\n\"How long will this probate period be,\" Jeff said tersely.\n\nMr. Carson looked to Jeff. \"The estate is relatively simple. They had no significant debts so there won't be any challenges from creditors. The insurance claim will come through in a few months. If all goes well the probate period could be over in six to eight months, twelve at most.\"\n\nJeff's expression soured considerably hearing how long it would take. \"God damn it! A year of waiting for the bitch to cut our throats. We're done here.\" He stood and looked at his wife.\n\n\"I'm not done. I still have questions,\" Jenny said.\n\n\"Fine, give me the keys to the van,\" he said with his hand out.\n\n\"So you can strand me in town again? I don't think so,\" she replied with a scowl. He scowled back then just walked out, slamming the door behind himself.\n\nJenny looked to Stephanie and the lawyer with an apologetic look. \"He's being uncharacteristically rude and pigheaded about this. My apologies.\"\n\n\"No need for you to apologize to me Jenny. I've been dealing with his abuse for years. As I've said, it was one of the main reasons I fled when I did,\" Stephanie said with a weary voice.\n\n\"Are you going to sell your half of the farm?\" Jamie asked.\n\nStephanie looked at the concerned expression on the face of the young teenager. She looked seriously worried.\n\n\"No dear. I have no intention of doing anything that might jeopardize your family.\" She turned to face Mr. Carson. \"Could I sign my fifty percent of the farm over to Jenny?\" The man smiled and nodded to her.\n\nThe woman in question's eyes widened in surprise so Stephanie addressed her. \"You are an equal partner in Jeff's life. You should be an equal partner in the future of the farm as well.\" She looked to Jamie who was smiling broadly at her aunt.\n\n\"When it becomes available I'll gladly accept my fifty percent share of the remaining liquid assets meaning the insurance money, the investment income and the bank account assets. I have four children of my own to ensure the future for and my parent's contribution to that would be welcome,\" Stephanie explained to the lawyer who gave her another nod.\n\n\"I'll have the document for the farm ownership transfer prepared by my assistant. It won't take long. Could you both come by in the morning to sign it?\" he asked.\n\n\"We're driving back to Kansas City first thing tomorrow morning to catch our flight home. We could stop by on the way out if the document could be ready by no later than 9am?\"\n\n\"That's fine,\" he indicated.\n\n\"I can come by in the afternoon.\" Jenny said, slightly dazed. Her remaining questions were moot with the transfer of Stephanie's share of the farm to her.\n\nHe nodded to Jenny then smiled at the remaining people in the room. \"Having met the requirement of a 'reading' I'll proceed with the process following more current practices. You'll receive a copy of the will and any other documentation regarding the progress of the probate and final distribution of the estate. Feel free to contact the office if you have questions or concerns. It was nice meeting you.\" The man shook their hands and left the room.\n\n\"You're leaving tomorrow morning? We didn't get time to get to know you better!\" Jenny lamented.\n\n\"Do you hate Papa?\" Jamie asked, causing her mother to look crossly at her.\n\n\"No it's alright. I'll answer that. It's an honest question,\" Stephanie said to stop Jenny from chastising her daughter. She looked at the girl and saw she had the attention of all of the kids.\n\n\"For years I tried to love Jeff as a sister should love her brother but he's pushed me from his heart. My parents made us compete for their love and attention. I don't know why they did that but it ruined my relationship with them and my brother. I don't hate Jeff. I do hate how he treated me during our childhood. He was really mean to me and I had to leave to survive. We'll never be friends and I've learned to accept that. It still makes me sad though.\" She looked at Jenny. She was going to keep it to herself but the woman deserved to know as she'd have to deal with Jeff. \"I think changing the will was my parent's last attempt to pit us against each other. I don't believe they had a change of heart at all.\"\n\n\"That's awful!\" Jenny said, wide eyed.\n\n\"Yes, it is and it was like that my entire life until I left home.\"\n\nThere didn't seem to be anything else to say.\n\nJillian caught Stephanie's attention. \"I took your advice last night and I had a long talk with Mama. I'm going to get a job in town for the next year. I called my friend Diane McAllister and she said with her mama gone she said I could get a job at the restaurant. When Jack graduates next year he and I are going to sign up for college and find a place we can share the rent on while we study.\"\n\n\"That's wonderful!\" Stephanie said and Ed nodded with a smile of his own.\n\nJenny stood up and her kids stood with her. Stephanie and Ed got up and walked around the table.\n\nJillian immediately went to her aunt and gave her a warm hug which Stephanie returned. They kissed cheeks as well. Jack was next as Jillian moved to Ed. The young woman thrilled to feel Ed's strong arms wrapped around her. He made to kiss her cheek but Jillian turned her face boldly and his lips landed on hers. He blinked in surprise as she seemed to melt in his arms. He finally pulled back and she came back to herself, dazzled by the sensations flooding through her. When her eyes opened she smiled up at him impishly and Ed couldn't help but return the smile as she looked so much like her aunt at that moment.\n\nUnaware of Jenny's cheeky move, Jenny was giving Stephanie a hug. \"I'm sorry Jeff treats you so poorly and I'm sorry your parent's did this to you both.\"\n\n\"Thank you. Take care and if you ever need to talk please feel free to give me a call at this number,\" Stephanie replied as she handed the woman her number on a slip of paper.\n\nJamie hugged her aunt and shook Ed's hand giving him a shy smile.\n\nThen the family headed out. Stephanie sat once more and Ed massaged her shoulders as she seemed tense.\n\n\"Oooh Ed, that hits the spot,\" she sighed.\n\n\"What would you like to do now?\" Ed asked.\n\nLovely blue eyes looked up at him. \"Have I told you how much I love you for coming here with me? You've been so supportive. I don't think I could have faced Jeff without you by my side.\"\n\nEd smiled and dipped down to kiss her sweet lips tenderly.\n\n\"I think you've been very strong and very brave in a very difficult time. You didn't need me to face him. I'm so proud of you!\" he replied.\n\nShe stood and hugged him for a time then they made their way outside. \"Could we just go back to the room and cuddle. I'm still a little emotionally drained.\"",
        "\"Sure.\"\n\nEd got her into the car and drove them back to the motel. They rested for a couple of hours then grumbling stomachs demanded to be fed. They decided to drive to the next town to a restaurant Stephanie knew of and was delighted to find still existed. They had a lovely dinner then made their way back. As they passed through the town Stephanie spotted a bar that also had line dancing. She looked at Ed and pointed.\n\n\"Line dancing? What's that?\" he said hesitantly.\n\n\"It's a lot of fun and it's our last night here!\" she gushed.\n\nHe just looked at her and saw she needed to unwind so he turned into the parking lot as she squealed with glee. They parked and made their way inside. There was a long bar and lots of tables and a huge dance floor which was currently occupied by a large number of people all dancing in synchronized step in rows. Stephanie clapped her hands together happily and pulled Ed out onto the floor. He grinned at her as the playful Stephanie he knew and loved was resurfacing.\n\nThey watched the other dancers and did their best to follow the steps. Stephanie quickly mastered the sequence but Ed was having trouble getting his muscles to follow the pattern he'd observed. He knew the order and timing of each step but putting it into practice with his body was where his difficulty was. The closest he could get was one or two beats off the mark. This clumsiness made the other dancers around him grin as his look of concentration was fierce.\n\nFinally the line dance ended and they made their way to the bar. They ordered some drinks, Ed opting to stick with water while Stephanie had a beer. The atmosphere in the bar was lively and the crowd was friendly. Ed nodded to a few people he'd been dancing next to and they grinned and nodded back to him.\n\nOnce they finished their drinks Stephanie pulled Ed out onto the floor as a slow tune was starting and he was much happier dancing to this song. They swayed in each other's arms as they moved along with the other dancers. A few people gave them odd looks but at least there wasn't any open hostility as there had been at the bowling alley.\n\nThey danced to a few more slow songs interspersed with faster numbers and Stephanie's smile was wide and relaxed. They returned to the bar for another drink. Before they reached it their way was blocked by a grim looking drunk.\n\n\"If it isn't the bitch and her boy toy,\" he slurred.\n\n\"You're drunk Jeff. Go home.\" Stephanie said loudly and heads turned in their direction. The bartender took notice as well. That man gestured to a big guy standing by the front door. The bouncer was incoming.\n\n\"Why does he keep calling me a 'boy toy'?\" Ed asked Stephanie.\n\n\"Christ! Izzhe kidding?\" Jeff barked in laughter. \"What a retard!\"\n\nEd scowled at the rude names he and Stephanie were being called. He didn't like Jeff very much. He wondered how such a bad man could be father to such nice kids. Could it have been all Jenny's doing? With his own pending fatherhood he really wanted to know. Ed needed to observe some examples of how to be a good father but all Jeff seemed to be was a great example of the opposite.\n\nThe bouncer arrived and saw one man with bleary eyes and a flushed face. The couple on the other hand just looked offended by the drunk. So the drunk had to go. He reached out and took the drunk's arm.\n\nJeff suddenly spun and flailed one of his arms back, catching the bouncer across the face with a clumsy but heavy slap. The man staggered back and bumped into a waitress who shrieked. Trying not to fall on her the bouncer twisted and slammed his temple into one of the wooden posts next to the bar. The thock noise was clearly heard above the music and the big man went down hard. While Ed was distracted watching the bouncer fall Jeff swung his fist back and connected with Ed's chin.\n\nEd's head snapped back and he fell down between the tables. Stephanie screamed.\n\nThen Jeff turned his rage on his sister.\n\n\"You stupid bitch! Why didn't you stay away? Didn't you get that we didn't want you back? They didn't try to find you all those years. I didn't either!\" he bellowed in her face.\n\n\"I didn't want to come back but they were my parents and they died. I needed to say one final goodbye,\" Stephanie raged back.\n\nJeff blinked at her. \"Goodbye? You didn't say goodbye twenty years ago! Why the fuck would you say it now?\" His confusion turned into rage once more.\n\nStephanie's eyes widened as his right hand pulled back to hit her. Her breath caught painfully in her chest as she stood frozen. All her childhood memories flashed through her mind, all the terrifying and painful moments when Jeff had beaten her, driving her to the ground again and again.\n\nBut this time the blow never arrived.\n\nHer own rage from all those years of abuse suddenly exploded and she screamed as she drove her foot up into his testicles lifting him up onto his toes.\n\nJeff squealed and his eyes rolled back as he slowly collapsed with his right hand in the air, still poised to punish his little sister. Stephanie watched the hand slowly drop and saw Ed was holding the wrist tight in his big fist. She took in his surprised expression as he lowered the whimpering man to the floor.\n\n\"What happened?\" he asked. \"I just grabbed his wrist and he fell down!\" He released the wrist and Jeff slumped to the floor to curl into a fetal position as he moaned.\n\nStephanie stepped over her brother to take Ed into her arms. She felt like an enormous weight had been lifted from her chest.\n\nThey looked down and the bouncer was sitting on the ground holding his head.\n\nA tall state trooper with broad shoulders made his way over to them, likely called in by the bartender. He looked at the big man with the bruised chin and the two men on the floor. \"Did you do this?\" he asked tersely.\n\n\"No sir. Jeff there is drunk and hit this man who accidentally bumped his head and fell down. Then Jeff punched me in the chin and I fell down. He was going to hit Stephanie so I grabbed his wrist. Then he fell down!\" he said with surprise.\n\nThe skeptical trooper looked at Stephanie. \"I kicked him in the groin because he was going to hit me.\" That got a nod from the officer.\n\nEd grimaced as he looked at Jeff and nodded as he now understood why Jeff fell down.\n\nThe trooper suddenly froze as he stared wide eyed. \"Stephanie?\"\n\nShe paused to look back at him. Then recognition flared in her eyes. \"Gary Barnes?\"\n\nThe man nodded with a smile as he bent down to cuff Jeff who was just beginning to uncurl on the floor. That done he stood and faced her with a broader smile.\n\n\"Ed, this is Gary Barnes. I attended high school with him. Gary, this is Ed Walters, my boyfriend,\" she said in introduction.\n\nGary considered the younger man and smiled as they shook hands. \"Boyfriend? You're a lucky man!\"\n\n\"Yes sir, I am,\" Ed responded with a smile.\n\n\"I mooned over Stephanie all through high school and through elementary school as well, though she probably never knew. I'd finally worked up the nerve to ask her out when she disappeared.\" Gary explained.\n\n\"That's sad!\" Ed exclaimed and Gary saw he was being genuine. The man sighed and faced Stephanie once more.\n\n\"Yes it was but I see life has treated you very well! You're as stunningly beautiful as you were the day you left.\" Gary said.\n\n\"If you'd been this charming back then I might not have left.\" Stephanie replied with a grin.\n\n\"Could have, should have. It's all in the past now. No sense in moping about what might have been.\" Gary said with a sigh. \"So your brother here got drunk and started swinging?\"\n\n\"He's had a bad few days. He wasn't happy that I came back and we were at the lawyer's office hearing our parent's will read to us today. Jeff got an unpleasant surprise and this is how he responded. The bouncer there tried to intervene but Jeff hit him then Ed got a punch for no reason other than just being here. He was going to hit me as well but Ed stopped him and I... put him down,\" she explained.\n\n\"Why was he going to hit you?\" Gary asked.\n\nStephanie looked down at her brother who was on his stomach and... had thrown up. His face was now resting in his sick. She took a step away, wrinkling her nose in disgust.\n\n\"Jeff used to hit me. Every day when we grew up. He never broke himself of the habit though he doesn't do it to his wife and kids which is a relief to know.\"\n\n\"Well, he can spend the night in the drunk tank tonight. He's still in the bar so I can't charge him with public drunkenness. If you want to charge him with assault I could do that,\" he said looking at Ed whose chin was now a lovely shade of purple.\n\n\"No, we are leaving for home tomorrow. If we charge him we'd have to stick around, right?\" Ed asked.\n\n\"That's right. That would give me a chance to woo Stephanie away from you!\" Gary said, bouncing his eyebrows at Stephanie.\n\nShe caught the wedding band on his finger. \"Gary, what would your wife say?\"\n\nHe glanced at his hand and winced. \"Yeah, I should probably stop wearing this.\" At Stephanie's shocked look he continued. \"I'm a widower. We had fifteen good years but... cancer.\"\n\nStephanie felt awful. \"Oh, I'm so sorry.\"\n\n\"No! It's my fault for giving the wrong impression. I just haven't been able to break the habit of wearing the ring.\"\n\n\"It's a sweet gesture.\" Stephanie said and patted his arm.\n\nGary smiled awkwardly. \"I'd better take him in. I'll call his wife to let her know she can pick him up in the morning. It was really nice seeing you again!\" he said to Stephanie and she blushed with a nod.\n\nThe bouncer finally managed to get to his feet. \"How about you fella? You want to press assault charges against this man?\" Gary asked pointing to Jeff. The bouncer shook his head, but gently. \"You should probably go to the hospital to confirm you don't have a concussion.\" Gary suggested which got him a slow nod in response. Gary looked closely at Ed's chin and smiled. \"You'll live.\"\n\nHe hoisted Jeff to his feet and, with a final lingering look at Stephanie, led him from the building.\n\nEd was looking at Stephanie who was still watching the door.\n\n\"Do- do you want to be with him?\" Ed asked tentatively.\n\nHer head snapped around to stare at Ed who was watching her nervously. \"What?!? No! Oh Ed, no! I was just lost in the 'what might have been' memories. I do remember Gary and he didn't catch my eye back then. Now? I can't see myself being involved with someone in his dangerous line of work. It takes a much stronger person than me to survive that.\"\n\n\"I think you're amazingly strong!\" Ed replied.\n\nShe smiled at his honest appreciation. Just then she heard one of her favorite songs begin. She clapped her hands together in excitement. \"Ooo! Can we dance?\"\n\nHe just grinned at her happiness. \"Of course we can.\"\n\nChapter 5\n\nTheir flight was beginning its decent and Ed was looking forward to getting home to Grace and the others. He'd learned a lot about Stephanie on his visit to Kansas and he felt even closer to her now as a result. Feeling a little warm and fuzzy he smiled over at her and she returned it. She tipped her chin up and he leaned in for a tender kiss. Then they relaxed back against their seats.\n\nEd thought she looked calmer than he'd ever seen her. There had always been a little hint of hesitance or nervousness to her behavior but since this morning when she woke him with some delightful oral play, the timid Stephanie was gone. She was every bit as playful as she'd always been but now she was more willing to leap in with both feet.\n\nShe hadn't let him do anything but lie back and enjoy himself and as he'd sprawled out on the bed enjoying the afterglow Stephanie said that she'd slept better that night than she could ever remember. He smiled at the memory.\n\nAfter they'd checked out of the motel they'd visited the lawyer's office and signed the papers on the way out of town. They'd made a quick stop at Stephanie's parent's farm first. She'd wanted to say goodbye. They parked on the shoulder of the road in front of the property and looked at what was left of the home which wasn't much. The fire damage was extensive and her parents had pretty much been cremated in their own home due to the intensity of the blaze. Ed and Stephanie had a moment of silence while they stood looking at the cold charred remains of what had once been her home.\n\nEd was never very good at reading expressions but Stephanie's face seemed to be swinging between grief and anger. She finally sighed and settled on just looking sad. He recognized that one.\n\nHaving resolved her inner turmoil she turned back to the car and Ed followed. They got in and headed for Kansas City. Ed once more occupied his mind with the word puzzles until they reached some of the larger cities along the way.\n\nThe flight home was uneventful and as the plane touched down smoothly Ed released the breath he'd been holding. They shuffled off the plane, got their bags and headed for the exit to catch a cab home.\n\nEd blinked when he saw the smiling faces of Rachel and Angie waiting for them. Their expressions went from delight to dismay when they saw the bruise on his chin.\n\n\"What happened to you?\" Rachel gasped. Angie gingerly turned his face so she could get a better look.\n\n\"Ed's chin met my stupid drunk brother's fist last night,\" Stephanie said contritely.\n\n\"It's ok though because Jeff's balls met Stephanie's foot then practically met his own chin.\" Ed teased.\n\nAngie gave Stephanie a high five as Rachel fretted over Ed.\n\n\"Enough about my little bruise, what are you two doing here?\" he said with a smile as he pulled Rachel in for a hug and kissed her. He hugged and kissed Angie next and they were back to smiling.\n\nRachel patted his arm to get his full attention. \"As you know Carolyn is beginning a world tour of museums with her exhibition on the lost tribe of New Guinea and their language. She was called by the Director of the Louvre in Paris, France who informed her of a special presentation for her on Saturday evening. She was told she could bring a date. She came by the house yesterday as she thought you'd be home by then. She was going to ask you to join her in Paris as many of her peers are going to be there and she really wanted to share the moment with you. She flew to France last night.\"\n\n\"I'm sorry I missed her. It would have been nice to see Paris with her,\" Ed said with a frown.\n\nRachel and Angie just grinned at him and Stephanie began to smile as well as she saw what was happening.\n\nEd cautiously looked at the three smiling faces. \"What?\"\n\n-=-\n\nFriday morning found Ed blinking the sleep from his eyes as the flight attendants came through the cabin waking the sleeping passengers and getting them to raise their seatbacks in preparation for landing in Paris.\n\nHe was still stunned by how quickly he'd been turned around and sent back into the airport for his flight to France. The ladies got him a first class ticket on a red eye flight and they'd even brought him a suitcase of clean clothes for the trip. He just transferred his toiletry kit from one suitcase to the other and he already had his passport. Angie stuffed some Euros into his wallet for incidentals she said. They had enough time to grab a quick bite at a restaurant in the airport then he was sent on his way through security to his gate.\n\nDuring dinner he heard from Rachel that Grace was well and would have liked to join them at the airport but carrying the triplets was wearing her out. She was looking forward to seeing him when he got back on Monday.\n\nRachel also told him that she'd spoken with Mr. Drakos to let him know he'd be back to work on Tuesday. Ed fretted a bit about that but Rachel assured him the man understood the reason and was onboard with the plan.\n\nHe also learned that Isabelle was watching Stephanie's and Carolyn's kids at Angie's place which had become something of a summer camp for them. Apparently they were in the pool all day. Ed grinned thinking about that. He'd never been to camp when he was a kid but it sounded like fun.\n\n\"Monsieur Ed, is there anything I can get you before we land?\"\n\nHe sighed hearing that name again and looked up into the smiling brown eyes of the first class flight attendant. She'd made it her personal goal to see to his every need during the flight. While getting him a blanket at the beginning of the flight she'd gotten a little 'handsy' when she'd insisted on tucking his blanket in. She'd copped a feel and had been overly attentive ever since. He didn't want to make a scene in the tight quarters of the cabin so he'd played it cool. This just seemed to make her try harder.\n\n\"No, thank you. I'm good.\"\n\nShe nodded and slipped away to speak with her fellow attendant up by the front of the plane. The two ladies glanced back at him as they spoke quietly to each other with mischievous smiles. Ed turned his face away to look out the window at the countryside below. He couldn't get over the fact that he was in France! Or would be when they landed.\n\nIt wasn't long before they were on the ground and preparing to exit the plane. He stood in the aisle waiting to leave the plane when the brown eyed flight attendant squeezed herself between him and the seat and reached up to open the overhead compartment across from him. While she did this her ass was grinding against Ed's pelvis. As he was pinned against the seat Ed couldn't move away. Ed looked to his immediate right and saw an older man staring wide eyed at the action happening right in front of him. He blurted something in a sharp tone but Ed had no idea what he said. The attendant stopped grinding against Ed to face the older man. She barked something back at the man who just frowned and looked away. She turned to look up at Ed and pressed herself against his chest briefly before she moved back to the front of the plane to join her grinning co-worker.\n\nEd looked in the overhead compartment to see what she was looking for but it was empty and she'd carried nothing away with her. Unfortunately her grinding had left him in a state of full erection. His pants were exceptionally tight and he felt too exposed to adjust himself.\n\nThe doors opened and he moved forward to leave. The flight attendants moved closer as he passed and the co-worker copped a feel of his erection as he passed. Ed was blushing as he practically leapt off the plane and quick walked away, leaving behind the excited giggles.\n\nHe went through customs then found his suitcase. He was supposed to look for Carolyn who would meet him here.\n\nHis erection was slowly subsiding in his tight jeans. He'd tried to convince Rachel and Grace that loose pants would let him relax down there more quickly but they insisted loose pants were ugly. Finally he couldn't take the discomfort any longer. He saw there were people rushing here and there and no one appeared to be paying attention so he discreetly made an adjustment through the front of his pants.\n\nOf course that was the moment Carolyn stepped out of the crowd to call out his name happily. She got an eyeful and grinned widely. The man standing at her elbow was also staring at Ed but his expression looked closer to... dismay? Ed wasn't sure.\n\n\"ED!\" Carolyn cried happily and leapt into his arms.\n\nHe hugged her tight and kissed her deeply. She'd wrapped her legs around him and did her own rubbing against him but Ed had no problem with that. Finally he lowered her to her feet and she smiled up at him.\n\n\"I'm so happy you could join me in France on such short notice!\" she gushed.\n\n\"I'm glad I could make it,\" he responded.\n\n\"What happened to your chin?\" she gasped suddenly seeing the lurid colors on his jawline. The bruise was migrating.\n\n\"Oh, Stephanie's brother was drunk and punched me. She kicked him in the balls and put him on the ground so it evened out,\" he explained with a smile. \"It doesn't really hurt.\"",
        "There was a noise behind them and Carolyn jumped. \"Oh! I'm sorry Clark! Ed, this is Clark Reddington, a world renowned anthropologist and an ex-boyfriend from my University years. Clark, this is Ed Walters, my boyfriend.\"\n\nEd smiled at Clark and enveloped the man's hand in his larger one to give it a shake. \"You're an anthropologist too? Cool!\"\n\nClark was probably an inch taller than Carolyn so 5' 9\" and had a reasonably fit body with just a hint of softness at his tummy. His thick black hair was sprinkled with grey with silver patches at his temples. He wore a circle beard which he kept trimmed. The beard had a silver streak down the center of his chin. He also had a scar across his left cheekbone which looked like it must have been a close call for his left eye. There was a lot of character on his face so with his anthropologist background Ed was sure he must have some interesting stories! He gave the man a broad smile.\n\nCarolyn was beaming at Ed, enjoying his excitement. She had an arm around his back and her other hand on his hard stomach so she felt it rumble with hunger. She looked up at him in surprise. \"Didn't you eat breakfast on the plane?\"\n\nHe winced and shrugged. \"I slept through the service.\"\n\n\"Let's get him back to the hotel and get him some breakfast!\" Carolyn said smiling at Clark who was looking a little stiff.\n\nClark was scrambling to think of a way to salvage his plan to get Carolyn back. They'd been a fairly serious couple in their last year of University but had broken up just after graduation because they chose assignments in different countries. He went off to central Africa while she'd headed off to Indonesia and New Guinea. He'd made a few important discoveries and was able to turn that into a lucrative touring circuit. It also solidified his tenure at a University here in France but he'd always wanted Carolyn back.\n\nHe'd been outraged when that imbecile Rick had the audacity to marry her. When news of Rick's demise spread through the community he was first to send his condolences to Carolyn but secretly he was delighted by the news. Carolyn was truly brilliant, maybe as brilliant as he considered himself. They would make a formidable team. Now that she had her own discovery he wanted her twice as much.\n\nShe'd mentioned having a boyfriend the night before after he picked her up at the airport and they'd spent a few hours reminiscing at a romantic bar he'd selected. To see the boyfriend in question seriously knocked him from his game. He was a huge brute and what was he hiding in his pants? A kielbasa? Clark had to get back on track. He'd prepared for this.\n\n\"Actually I have an alternate plan you might really like. I have a very good friend who has offered to host us and a few friends at her chateau overnight. The place is very posh and there is a huge pool. Her kitchen staff are amazing so the meals will be second to none and the grounds are beautiful!\"\n\nCarolyn smiled excitedly. \"That sounds wonderful!\"\n\nEd nodded happily and Clark smiled. \"We'll swing by the hotel to collect your suitcase,\" he said and they headed out.\n\nAs they drove back to the hotel in Clark's big Range Rover Carolyn asked who would be coming. He rattled off a few names of his friends and glanced over to see an odd look on her face. Thinking he was losing her interest in going he scrambled once more. \"Of course we could invite some others if you like!\" He smiled in relief as her face brightened.\n\n\"Could we ask Aisha Zelalem, Rana Kassar, and Meara Keating? They are all staying at the same hotel. I met them in the bar when you dropped me off last night.\"\n\nClark looked at Carolyn in surprise. She'd gone for a drink after he'd taken her out to a bar? He pushed that aside and quickly examined what ramifications inviting these ladies might have on his plan. They were fellow anthropologists and none were men so no competition for him. As they were all women a big jock like Ed wouldn't be able to resist showing off to them and that would make Carolyn jealous. He smiled and nodded to Carolyn. \"Sure!\"\n\n\"Excellent! I'll contact them when we get there!\" She grinned at Clark and touched his arm in thanks.\n\nClark drove on feeling pretty clever and tingling from her touch.\n\nThey pulled up on a side street beside the hotel and Carolyn said she'd be right back. She slipped out of the truck and dashed for the side door.\n\nClark turned in his seat and smiled at Ed who smiled happily back. \"First trip to France?\" he asked.\n\n\"It's only my second time out of the states! I've been to Barbados and now France! It's so beautiful here!\" he gushed.\n\nClark made a show of glancing out the window and looking at their scenery, all the while smiling and nodding like he agreed. Inside he was giggling with glee. Ed sounded like a bumpkin. From the bruise on his chin Clark assumed he was more at ease using his fists than his brain. He was just a simple minded... meat stick. He snorted in surprise at his own joke and saw Ed looking at him curiously.\n\n\"Sorry, something funny Carolyn said last night just popped into my head just now.\"\n\nEd nodded. \"How long have you lived in France?\"\n\nClark thought about that. \"Almost ten years now. Before that I was in Africa.\"\n\nEd's eyes went wide as he imagined the stories Clark had about Africa.\n\nClark felt himself relax. It was almost a struggle to keep from laughing out loud. Taking Carolyn from Ed would be a piece of cake.\n\n\"When did you go to Africa?\" Ed said with anticipation.\n\n\"Right out of University. I couldn't have been more than a year or two older than you. Completely wet behind the ears, unprepared for what lay before me...\" He watched Ed lean forward and smiled. So easy.\n\n-=-\n\nCarolyn got her suitcase and threw some items she'd need for the overnight into it and rushed back to the reception desk. She had them call each of her friend's rooms and she told each to pack a swimsuit, a nice dress for a fancy dinner and their PJ's as they were overnighting in a fancy chateau. She also told them to hurry as their ride was parked illegally.\n\nFive minutes later Rana arrived looking a little disheveled, her long black hair loose and catching on the strap of her duffle. The dark skinned woman was originally from Pakistan but her parents moved to the states and she'd attended University there, meeting Carolyn in her last year. She was as tall as Carolyn, a little plump and had a permanent smile on her face. Prone to giggling, Carolyn found her a delight to hang out with.\n\nAisha was next to arrive. She looked neat and tidy as she always did. Standing at a mere 4' 10\" she was often mistaken for a young teenager much to her irritation. She was 38 years old but often found herself talked down to or dismissed. Petite with smooth, unblemished ebony skin and hair cut tight against her scalp, she was proud of her Ethiopian heritage and treated her tiny body as a temple, keeping it fit and healthy. She overcompensated for her youthful appearance by being overly flirtatious and bold to the point of embarrassing her friends. She was also a scream at parties as the woman had no shame.\n\nMeara stumbled out of the elevator and dropped her suitcase. She was 6' 1\", long limbed and slim with a huge head of long red hair which was currently hanging down over her face as she tried to get her suitcase in order. Carolyn rushed over and picked it up for her. Meara pushed her hair back and grinned at the group. Her lovely, large blue eyes twinkled at them playfully from behind the black rimmed glasses perched on her prominent nose. \"What? Not enough fun last night you have to drag us out of bed at this ungodly hour to whisk us away on some adventure?\" the woman scolded Carolyn in her lovely Irish accent.\n\n\"Come on! We've made them wait long enough as it is!\" Carolyn chastised her friends as she dragged her suitcase towards the side door. They rushed to catch up and Meara was first to ask.\n\n\"What do you mean them?\"\n\nCarolyn flashed a smile over her shoulder. \"Ed made it!\"\n\nSuddenly Rana and Meara froze and took in each other's disheveled state. They quickly diverted and rushed off to the washroom as Carolyn gasped in exasperation. Aisha grinned at her. Five minutes later they rushed back out and Carolyn noted the brushed hair, eye makeup, and that lipstick had been applied. She snorted and the two friends scowled at her. Then she noticed Aisha applying a coat of shiny black lipstick to her full lips.\n\n\"What? You spend the night telling us about this beautiful man we were never going to meet then spring him on us like a Christmas morning surprise when the two of us looked as appealing as cold porridge? Shame! Shame on you!\" Meara growled.\n\nThey stepped outside and made their way towards the big SUV.\n\n\"Is that Clark Reddington behind the wheel?\" Aisha asked.\n\n\"Yes, it's his friend who owns the chateau,\" Carolyn explained.\n\nMeara was trying to see in the tinted windows to see the mystery man they'd heard so much about. As they got closer Clark got out and walked around to the sidewalk. The three women greeted him with the traditional cheek kisses and he said his good morning's to them as well.\n\nThe rear door opened and Ed stepped outside. Aisha grinned as she saw the tight t-shirt stretching across his big chest. Rana began to giggle as she was trapped by his light blue eyes.\n\nMeara's jaw dropped. \"I thought you were exaggerating. Having a wee bit of fun. He is a big fella! Pretty too!\" she whispered to Carolyn then saw the bruise on his chin. \"Oh. Is he a scrapper?\" Carolyn shook her head with an amused snort.\n\n\"Ed, this is Aisha Zelalem, Rana Kassar, and Meara Keating. They're all colleagues of mine, working in the anthropology field. This is Ed Walters.\"\n\nEd smiled and nodded shyly at the three women who were drinking him in with their eyes. Each of them stepped forward and Ed was treated to a double cheek kiss though for Aisha he had to bend down quite a bit. He was blushing fiercely afterwards and this just made their smiles grow wider.\n\nClark was beginning to get a little impatient with their fawning over the 'meat stick' as he'd taken to calling Ed. \"We'd better get on our way. Let's get the luggage in the back.\"\n\nStepping forward Ed collected the luggage from the four women and Clark got the back door open where all the bags went. Ed got back into the truck but moved to the back seat. He filled the whole area.\n\nThe middle row sat three so Aisha took the first seat behind the driver, Rana got in next with Meara in the third seat. Carolyn sat in the passenger seat next to Clark who was delighted to have her there and to have Ed so far away from her. He got them underway.\n\nClark opened his window and the gust of wind caught Rana's hair and blew it back into Ed's face.\n\nAisha looked over the seat and laughed at Ed's look of surprise. Rana apologized for her flyaway hair.\n\n\"It's fine. May I braid it for you?\" Ed asked as he brushed the strands from his face.\n\n\"Oh! Uh, okay!\" Rana said and tried to control her giggles.\n\nHe reached over the seat and gathered her hair in his hands, pulling it over the seat. Rana's eyes fluttered as she tingled from his strong grip. There was something primal about a man running his fingers through her hair and taking a grip that made her nipple stiffen. She bit her lip and tried to keep her moan to herself.\n\nEd remembered all the times he braided Grace's hair which was also straight and black. As he went through the patterns and designs in his mind he ran his fingers through the hair seeing the length of the strands in different zones until he determined the braid that best suited the cut.\n\nRana would have sagged in her chair from the pure hedonistic bliss of the scalp massage but Aisha and Meara were pinning her in place on both sides. There was a brief tug which made her open her eyes and Ed began to braid. His hands moved quickly and efficiently and she felt his deft touch over her scalp as the braiding made its way back. Too soon it was over.\n\n\"Does anyone have an elastic band?\" he asked as he held the end of the braid.\n\nAfter a minute of the ladies doing some purse spelunking Clark came to the rescue. \"Check the glovebox.\"\n\n\"Clark, should I ask what you are doing with such a girlie hair tie in your glovebox?\" Carolyn said with a smirk and a raised eyebrow. The hair tie in question was pink with a sparkly pink and white bow on it. Carolyn handed it back to Rana who passed it to Ed. He smiled and tied up the braid nice and tight.\n\n\"I think it belongs to the daughter of a friend of mine. I found it the last time I cleaned out the car. You're welcome to it,\" Clark said, just a little stiffly.\n\n\"My, you do lovely braid work Edward.\" Meara said in surprise.\n\n\"Let me see!\" Aisha chirped and gasped when Rana turned her head and she saw the intricate weave Ed had added. She pouted over the chair at Ed. \"Now I wish I had long hair!\" Ed smiled and shrugged. \"I'll settle with a scalp massage.\"\n\n\"That I can do,\" Ed said and put his hands to work over the seat.\n\nAisha's face muscles immediately relaxed as Ed's strong fingers kneaded her scalp and moved down the sides of her head. She moaned. \"Oh god, Carolyn! I'm going to steal your man away! If he can make me feel this good with just his fingertips on my scalp I can only imagine what-\"\n\n\"If you want him to keep massaging you'll stop right there,\" Carolyn warned as she looked back at Ed with a smile. He nodded his thanks to her as his cheeks heated up.\n\nAisha tried to pout but her face was too relaxed.\n\nRana was admiring her braid and looked at Meara. \"Can you imagine what he could do with your hair?\" she sighed looking at the red mane of relaxed curls cascading down Meara's shoulders.\n\n\"Ed, do you think you could braid my hair when we get to the chateau?\" Meara asked.\n\nEd looked at the vast amount of hair and tried to think of a style that might suit it best. He could certainly do a simple straight braid but her hair needed more control. It might need several separate braids in each section to maintain some control over it. His brain was overlaying different patterns and he thought he saw an intricate weave that would look very nice. He inventoried the pins and ties he would need.\n\n\"Ed?\" Meara asked again as she saw his look of intense concentration. He blinked and his expression cleared. \"Hmmm? Uh, yes. I could. I'd need six hair pins and two hair ties but I could do it.\"\n\n\"Does he do this professionally?\" Clark asked Carolyn quietly when he couldn't contain his curiosity any longer.\n\n\"No. Ed, tell them what you do,\" she called out.\n\n\"I work at Drakos Heating and Cooling. I'm certified to install, inspect, and maintain all levels of heating and cooling systems,\" he said proudly as he pulled his hands back from Aisha's head. She was sound asleep.\n\nRana grinned at her sleeping friend and poked Meara to get her to look as well. Meara shared a smile with Rana.\n\n\"So he's an air conditioning repair man?\" Clark asked quietly.\n\n\"As much as you're a man who talks to people,\" she replied with a challenging smile.\n\nHe knew when to back off so he nodded, conceding the point to her.\n\nPretty soon they were driving through the country side between tall groves of trees. They spent another twenty minutes on the rolling roads before they rounded a bend and Clark pulled into a driveway between two large stone gate supports. The gate was long gone but the walls remained.\n\nThey drove down a long tree lined lane before emerging from the forest to see a huge four story chateau in the distance surrounded by gardens, fountains, and ponds.\n\nEd's eyes were wide with wonder. He'd never seen such a beautiful home. He couldn't get over the fact that it wasn't a hotel or palace for royalty.\n\nRana nudged Aisha to wake her as they'd arrived. Clark parked the car next to three sedans and got out, the rest following him. Aisha blinked her sleepy eyes as she took in their surroundings.\n\nEd unfolded himself from the back seat and stretched the creaks out of his spine. Clark was taking the bags out of the back when a woman stepped out of the large front door of the building and began to stride towards them. She was dressed with a casual elegance that spoke highly of her wealth as well as her taste.\n\nShe might have been in her mid-fifties but it was difficult for Ed to tell as she looked so fit and vibrant. Her gauzy white blouse hinted at her modest breasts while her khaki shorts showed off her long legs. She carried herself with an almost regal bearing and she had a confidence about her that immediately put Ed at ease. Her wide brimmed white hat hid most of her hair but the strands which did show were a lovely auburn color and seemed to reach mid-neck. High cheekbones and dark eyes quickly assessed the group as she approached. She finally locked her gaze on their driver.\n\n\"Clark, darling! I wasn't expecting you this soon! The staff are still preparing the rooms!\" she said with a lovely French accent Ed could have listened to all day. Especially if it was a conversation between her, Aisha, Meara, and Rana. He loved their accents!\n\n\"I've brought three more guests, I hope you don't mind.\" Clark said as he kissed the woman's cheeks. Ed was coming to the realization that the double cheek kiss was a France thing.\n\n\"Not at all! Now introduce me, you beastly man!\" she said with a smile.\n\nClark smiled and turned to Carolyn. \"Karina Gauthier, may I introduce Carolyn Patterson.\"\n\n\"Ah! You are our special guest for the presentation tomorrow night!\" the woman said in delight and gave her the double cheek kiss as well.\n\n\"Yes, it's very nice to meet you Ms. Gauthier! I've heard wonderful things about you and your support of the programs running at the Louvre!\"\n\n\"Please, call me Karina!\" She made a slight hand waving gesture. \"I do my little part to try to expand the minds of those that visit the museum. It's the work of you and your colleagues that make the biggest difference.\" She'd included Carolyn's friends in her 'colleague' gesture.\n\n\"Then allow me to introduce you to Meara Keating, Aisha Zelalem, and Rana Kassar.\" Karina pressed cheeks with the ladies then turned to the big man standing behind them.\n\n\"And this is Ed Walters,\" Carolyn said proudly.\n\nKarina held out her hand but she was a little dazed to see someone this big.\n\nWith the mansion behind her and the woman's regal bearing, the moment took on a surreal quality for Ed and a memory kicked in to guide him through it. Ed took her hand gently in his and leaned over it. He caressed her knuckles briefly with his lips, looking over his sunglasses to hold her eyes with his. \"Enchant\u00e9,\" he said in a deep rumble.\n\nKarina's breath caught in her chest as she looked into his icy blue eyes. Sparks leapt from her hand to special places as her face flushed and her heart sped up. \"Oh my.\"\n\nEd finally broke the moment when he gave Carolyn a concerned look. \"I saw that in a movie. Did I do it right? Was it too much? It seemed appropriate.\"\n\nCarolyn closed her mouth and swallowed before she patted Ed's arm to assure him.\n\nKarina seemed to snap out of her daze. She smiled at Ed. \"You did that very well!\n\n\"You have a lovely home and your garden is breathtaking!\" he gushed.\n\nKarina's smile grew wider as she saw his honest delight. \"Thank you very much Edward!\" she replied. \"Maybe I could give you a tour of the grounds.\"\n\nHe smiled and looked to Carolyn and she just nodded with a smile. \"That would be lovely,\" he said.\n\nKarina smiled at Clark who grinned back at her. \"You know the way around. Please bring our guests inside and speak to Philip regarding their accommodations. We won't be too long,\" she said with a sly smile.\n\nEd grinned happily at Carolyn who couldn't really protest at this point considering Karina was hosting them at her beautiful chateau. She watched the woman take Ed's arm and walk with him towards the stairs leading to the garden."
    ],
    "authorname": "BurntRedstone",
    "tags": [
        "harem",
        "romance",
        "mature",
        "lactation",
        "group"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/to-walk-a-mile"
}