{
    "title": "Blow Your Mind Pt. 13",
    "pages": [
        "Thanks for the feedback so far. I hope I can keep this story quality up. I have run into some major creative issues on how this should go. I know HOW I want it to end, but getting there is some trouble. So there may be some delays on this as I work through it and write up something good.\n\nPART XIII\n\nBrandi took the coffee cup from Cindy's hand and looked over her report one last time. She sipped it and nodded. \"Perfect Cindy, you have it down perfectly.\"\n\nCindy beamed. \"Thank you, Ms. Brandi.\"\n\nBrandi looked at the report and nodded. \"My report to Mr. Case is complete. Get me a sealable envelop while I print.\"\n\n\"Of course. I will get your bag ready and let the office know you will be leaving shortly.\"\n\nBrandi nodded and hit print. \"Well, Private Secretary Cindy has turned out quite well.\" Kory said.\n\nBrandi smiled as Cindy walked to the door. Cindy had the sexy librarian look going, slightly above the knee black skirt, white sleeveless blouse, black stockings and heels, and glasses with her hair done up in a bun.\n\n\"Yes, she had turned out perfectly. Once we adjusted her memories she slid right into her new life with no issues.\"\n\n\"And she is quick on the uptake as well. Your instructions on personal protection and counter-surveillance seem to be taking hold.\" Kory said with the feelings of satisfaction. \"She will soon be a perfect loyal agent for us.\"\n\nBrandi let the \"us\" pass even though she still had some issues with Kory thinking like that. It was still her body, even if she did have to share right now.\n\nBut Kory was right. It was Friday morning, and Brandi had been working with Cindy over the last three days, molding her mind with some scissoring, ripping out some memories, and adjusting others, until Cindy had been completely remade.\n\nShe was 100% loyal to Brandi, to the point that Brandi had been able to have her put a gun loaded with dummy rounds to her head and pull the trigger with no hesitation. Brandi had removed that memory shortly afterwards just to make sure there was no baggage from the event. Her entire outlook had been reshaped to think that her whole life revolved around serving Brandi as her personal secretary and assistant. Her drive had been refocused to be the best assistant to Brandi that she could be, and she had dove into her new reality quickly.\n\nBrandi had let Mr. Case know she was hiring her on as her assistant. She had informed him about how she had found the coke and how she had then \"adjusted her mind\" a bit while high. She left out the how much adjustment had been done, but she had simply said she wanted to keep Cindy close to keep tabs on her and see how her messing in her head worked out over time and Mr. Case had agreed. While Cindy was technically on Mr. Case's payroll now (on paper, she was a lower-level project manager), Brandi was the one paying her salary and benefits out of her own pocket, and Brandi had made sure she was well compensated.\n\n\"I want her level of loyalty to seem well paid for. It will help ensure that if someone starts getting suspicious we have an easy explanation. Good money is always a good reason.\" Brandi had told Kory and Kory couldn't argue that.\n\nAnd Brandi was enjoying having an \"assistant\". Cindy proved to be well organized, and she was able to run Brandi's home office quite well, taking care of all the little tasks, and then moving on to cleaning and other chores during the day. As well as provide sexual enjoyment when needed.\n\nBrandi smiled at that thought. Cindy was quite the little submissive slut now, and Brandi enjoyed her attentions at least once a day.\n\nBrandi sighed. \"I do enjoy having my own assistant, but I think we can both agree we are suffering from a full-on case of nymphomania. Cripes Kory, couldn't you have picked a secretary or a taxi driver or something other than a stripper for your cover?\"\n\nKory giggled and Brandi got the impression of her licking her lips hungrily. \"Oh you are so full of shit Brandi! You LOVE it!\"\n\nBrandi giggled. \"I do, but we still need to be careful. We start going crazy and my boss will know, and that means questions.\"\n\n\"Yeah, true that. But he is pretty happy about you taking care of Steve.\"\n\nSteve had been true to his word. The phone calls had stopped aside from one last one where Steve apologized for being unprofessional and stated that he would not ever call them again. Brandi had told Mr. Case that she had a talk with him and he was fully committed to NOT asking about what she did.\n\nBrandi suspected Mr. Case was checking out Steve and she suspected that he had noted Steve dropping his curiosity right after her \"talk\" with him.\n\nBrandi was glad for that. But she was a bit nervous about her upcoming talk with her boss. After letting him know about her adjustments to Cindy, she was expecting more questions.\n\nBrandi stood up and put on her blazer. She was working the professional business-woman look today and she headed towards the door. She shifted a bit and frowned.\n\n\"Odd, my bra seems tight.\" Brandi thought.\n\n\"I was feeling that too. You're a 36 DD right? It feels like we need a bigger cup size.\"\n\n\"But why? I guess this bra shrunk in the wash or something.\"\n\nBrandi checked her makeup in a mirror and smiled. \"Lovely.\" She frowned a bit again at her eye color. \"Still has that blue tint to it. Weird. And blue eyes don't run in my family.\" She said.\n\n\"You have been saying that for the last three days, so yeah I know. We will figure it out, come on, we gotta go.\" Kory said.\n\nBrandi got her bag, keys and sunglasses from Cindy. Brandi showed her out (she still wasn't quite ready to trust her with full access yet) and locked up. \"Cindy, take the rest of the day off with pay. I won't be needing you until Monday.\"\n\n\"Yes Ms. Brandi, thank you. I will see you then.\" She said with a smile and headed off.\n\nBrandi got into her car and drove to the office. She swiped in and went into one of the back offices. After a bit a man came in and swept it for bugs, including her, and then Mr. Case came in.\n\n\"Here's my report, paper only as requested.\"\n\n\"Good. Brandi, you have caused quite a stir in Chicago. The underworld there has broken into several fractions and there is currently an underground war going on. The main mob family has split into two groups, and lots of corrupt officials are either getting sold down the river or ending up dead. Your DA has turned state's evidence and he and his wife are in witness protection.\"\n\n\"Well shit, so much for all my hard work.\" Kory said with some disgust. \"Fucking figures, I'm gone for a week and they all go back to fighting for power. Fucking idiots.\"\n\nBrandi shrugged. \"Oh well. Not to sound indifferent, but not my problem so long as the client is happy.\"\n\nMr. Case smiled. \"A good mindset to have, but in this case you need to be aware of a couple of things. Kory's dead, but the word is that some of her close friends might have access to some information that would be very dangerous or helpful to the new power brokers and they are looking for it. The name Emerald has been thrown around and there is a $1 million reward out for her alive.\"\n\nBrandi let out a low whistle. \"Good to know boss. I won't be using that shape for a while then.\"\n\nMr. Case gave her a level look. \"Smart. But one other thing, Lucinda, the woman you copied this form initially? She's dead.\"\n\nBrandi kept her face straight. She could feel Kory's emotions and they were along the lines of \"Oh well, shit happens.\" Brandi felt her own and discovered she felt pretty much the same way.\n\n\"I am guessing someone from the Chicago underworld looked her up and \"talked\" to her?\"\n\n\"It appears so. She of course knew nothing about anything going on, and the people asking asked a bit too hard. No leads in her death at this time.\"\n\nMr. Case looked at Brandi and Brandi could tell he was checking out her reactions. \"Mr. Case, if you want to know what I am feeling, just ask.\"\n\nMr. Case smiled and then motioned for her to continue.\n\n\"I feel that shit happens. Not to be cold about it, but better her than me. And since I have a large range of shapes to assume, I can file hers away and make this a dead end for anyone looking. I'm a bit sorry she got caught up in this, but oh well.\"\n\nMr. Case regarded her a bit and then nodded. \"Good. I don't like it when innocents get hurt either, but in this job you have to be able to accept that and drive on. If you have any issues with it, let me know. I can recommend some people who can help on that part anyway.\"\n\n\"Can he recommend someone to help with voices in your head? Asking for a friend.\" Kory said with a giggle. Brandi nearly laughed but kept in it. \"Quiet you.\" She replied.\n\n\"Mr. Case, about my request to analyze the coke. I'd like to start as soon as possible.\"\n\nMr. Case handed her an address. \"This is a small private lab, fully stocked and at your disposal. Security is so-so, keep that in mind. It will show up rented to a front company, and you are trouble shooting some things for them as the front story.\"\n\nBrandi nodded. \"Good. I want to get into this as soon as possible.\"\n\n\"Yeah, this will be cool.\" Kory said with an internal grin.\n\nMr. Case regarded her with that deep thought look. Brandi looked at him and then sighed. \"Okay boss, what is up? I can tell something is on your mind.\"\n\n\"Brandi, have you been completely honest with me on your boosted and new abilities?\"\n\n\"Uh oh, play it cool.\" Kory said.\n\n\"Zip it, I got this.\" Brandi replied.\n\n\"Not fully because I wanted to see if what I thought I did actually ended up that way. Mr. Case, remember how you told me about one of the original goals of a certain project was mind control? Well, when I take the synthetic coke I gain that ability. I wasn't sure if it was permanent or just a short duration effect, but it appears to be permanent.\"\n\nMr. Case was paying close attention. Brandi could tell he was very carefully listening, even more than normal, and his normally hard to read (even for her) expressions were showing he was excited.\n\n\"Be careful. This is a really dangerous time.\" Kory said. Brandi could feel her. Kory was fully alert and afraid but she had her fear under control.\n\n\"I got this, don't worry.\" Brandi said.\n\n\"I've told you about the \"desks\" right, with this coke I can dive into something else, something inside the desk if you will. The mark's \"self\" or \"core\" persona, I hate to say soul, but maybe that it is. It's not a memory or skill, it's their core being. And while in there, it's like wet clay. I can't explain what I can do, but I can reshape it, remold it, change it. I can make a whole new persona.\"\n\n\"This is what you did to this Cynthia.\" Mr. Case said and it was not a question.\n\n\"Yes. I didn't mean to, but the situation arose and she ended up being the lab rat. You were keeping tabs on her?\"\n\n\"I was. She had called here a couple times trying to get ahold of you. We did some research on her, nothing crazy was found other than it appears she was trying to make a play for your boyfriend.\"\n\n\"She was. I would have just ignored her but she did find a small bag of coke I had dropped when I was unpacking. She did the whole \"Oh, of course this isn't yours, your secret is safe with me, etc.\" and considering that I just escaped from a mob safe house and near death less than 3 days prior I was really pissed off. So I blasted her mind. While she was out of it, I decided to try a boost via the coke and see what I could do. Turns out I could do quite a bit.\"\n\nBrandi leaned forward. \"I was able to remake her whole self. I'm not sure if you would call it \"Mind Control\", more like reprogramming. I am watching her and I have dove into her mind several times and so far the changes have not reverted. It appears to be permanent.\"\n\nMr. Case was very still. \"Fuck this one is ice at the North Pole, Brandi. I don't like this.\" Kory whispered.\n\nMr. Case tapped his finger and nodded. \"Thank you for telling me this. I knew you were holding something back but wanted to see how you played it. I suspected you were waiting to verify something and that appears to be the case. You did this to your boyfriend as well?\"\n\n\"No. He and I have a deal in place, and he is doing his best to honor it.\"\n\nMr. Case looked at her a bit more and she sighed. \"If you want to know more, here is the bottom line. He has some underworld connections, nothing nefarious, just people that he knows. He asked about your company, turns out one of them knew some about it. Steve knows you are in the information business, and that you are not so particular as to how you get it. He knows I work for you in some way and likely know you do some less than legal things. And he has sworn that he won't ask anymore and won't ever bring it up provided we stay together.\"\n\nMr. Case's face was neutral. He was silent for a moment and then said \"I see. Do you trust him to keep his word?\"\n\n\"I do. And I am planning on making sure he does once I have studied the coke more. I really like him as he is, so I don't want to remake him entirely. But I can and will make a slight adjustment so he forgets a little bit and won't feel the need to question my work ever again. But I am confident we can trust him until then.\"\n\nMr. Case arched an eyebrow at that. And Kory piped up with a \"Wow, not taking any chances at all are you?\"\n\nBrandi could tell Kory was surprised but also approved of her actions. Mr. Case appeared to have the same feelings as well.\n\n\"I am a bit surprised that you are willing to do that to him. I may be old, and you may be the world's greatest spy, but I can tell when a lovely young woman has a man she really likes.\"\n\n\"You're not wrong, I really do like him. That's why I want to do this right. I am going to figure out how to get the boost and then very carefully make sure that we can be a wonderful couple without having to worry about him prying into places he must not go.\"\n\n\"I see. Very well, begin your work on the coke and keep me in the loop on it.\"\n\n\"I trust you will be keeping tabs on him, if you find something off let me know right away. If he can't keep his word just for a little bit then maybe he isn't the guy I thought he was.\"\n\nMr. Case chuckled. \"Me, keep tabs on your boyfriend? Oh perish the thought! What kind of man would I be if I did that?\"\n\n\"My boss.\"\n\nThey both laughed as did Kory.\n\n\"Before I go, one last thing. How has the coke affected you other than boosting your ability? Do you have any signs of addiction? Any side effects?\"\n\nBrandi kept very still. \"I have noticed an occasional craving, but I have not done any since I messed with Cindy's head. I have discovered it's a lot like my mind's craving for information. Reading, doing things, concentrating, it focused me and I don't notice it. Physically nothing other than the boosting. I've never done coke until now so I'm not sure how I should feel, but I'm not laying in bed twitching thinking about my next fix.\"\n\n\"Nice delivery.\" Kory said. Her link pulsed with need though. And Brandi felt the urge as well. It had not gotten any smaller the last three days at all. But she would control it.\n\n\"Very good. Brandi, I know I'm your boss, and I know you know I would cut you loose or give you up if I had to protect my business and myself, but I do consider you to be someone I can trust more than most and someone who is worthy of respecting, both as a person and as a fellow spy. I do want you to be successful in this career and your life and I have seen how drugs can wreck it. Please be fully honest with me about this, if you need help let me know and I can help you. If it comes to that, you can approach me.\"\n\n\"Wow, I think he is telling the truth.\" Kory said.\n\n\"Me too.\" Brandi thought. To her boss she smiled and said \"Deal boss.\"\n\n\"Now then, I'm off to another meeting and you have a month off. So get out of here and don't come back until 30 days from now.\"\n\nBrandi giggled and replied \"I'm outta here. I'll drop you a postcard!\"\n\n\"Oh, one last thing. On paper, you are getting a promotion, you are now a junior VP with a raise and large bonus. I have been thinking you deserve to enjoy some of your money and you have mostly been smart about showing it off.\"\n\n\"Except when her boyfriend caught her.\" Kory snickered in her head.\n\n\"So go ahead and live a little. But remember not to go too far overboard.\" Mr. Case said as he headed out.\n\nBrandi headed out the door with a big smile. \"That went well.\" She said to Kory.\n\n\"Yeah, I think he still doesn't know about me, or suspect anything. If he does it's the drug angle.\"\n\n\"Yes. And speaking of which, we can now get down to researching it.\" Kory said with some excitement. Brandi felt her own excitement as spy or not, she still loved chemistry and this was a perfect way to enjoy it.\n\n\"Hmmm, there is Kory matching my emotions again. Odd.\"\n\n\"Hey Kory, why are you so excited about studying the coke?\"\n\nKory paused a moment. \"You know, I honestly am not sure. For some reason it just seems really interesting. Not sure why that would be, I never really liked chemistry in high school.\"\n\nBrandi got to her car and heard a honking. She turned to see Steve driving up in a very nice and very new light blue Porsche convertible. He grinned at her and said \"Hey there beautiful. Can a guy give a lovely lady a ride?\"\n\n\"Well, that depends. I just might, but what do you expect from me afterwards?\"\n\n\"Oh, nothing much. I'm a gentleman after all.\"\n\nBrandi sniffed and turned back to her car. \"Well, that's no fun. Pity.\"\n\nShe heard Steve make a confused croak and Kory burst into laughter. \"You play with his head WAY to much girl.\"\n\nBrandi snickered out loud and turned around. \"Gotcha. Again.\"\n\nSteve shook his head. \"I quit. You win. I'm never going to say anything clever again. It never works with you.\"\n\nBrandi leaned over the passenger's seat and kissed him gently. \"Don't worry about it. I can be clever enough for both of us. As for a ride? Why not?\"\n\nShe hopped over the door and landed lightly in the seat and Steve was off.\n\nThey made small talk as Steve zipped around the downtown and Brandi felt the sun on her face and the wind in her hair and life was so wonderful. Even Kory was feeling happy and pleasant.\n\n\"So aside from a month off, I got a promotion. Say hi to the newest Junior Vice President of Case Consulting.\" Brandi said.\n\n\"Really? That is great! Congratulations! I know you deserved that. Now we need to celebrate and I know exactly how.\"\n\n\"Dinner and a show? I hear Netflix has some new releases.\" Brandi teased.\n\n\"Oh no, I have something else in mind my little VP.\"\n\nSteve throttled his car and they zipped down towards the marina. He drove right up to a very big yacht and smiled evilly at Brandi. \"Remember when I said I could help you with a month off? Well, I can't quite do a month, but how does a three-week cruise in our own private yacht sound?\"\n\nBrandi looked at the yacht and then Steve and leaned over and gave him a mind-melter kiss. Steve's eyes rolled up and he slumped back in his seat with a smile.\n\n\"Why did you do that?\"\n\n\"I wanted him to know he's awesome. He'll be back shortly.\" Brandi got out of the car and looked over the yacht. It was nice. Three decks, a pool, all the cool trimmings.\n\n\"Oh, this will be just fine.\" Brandi whispered.\n\n\"Hey there, um, shall we board?\" Steve slowly walked up behind her with a bit of a stagger to his step.\n\n\"Of course, this is going to be so much fun. Oh! I didn't pack anything! I need to...\"\n\n\"Took care of it Brandi.\" Steve gave her a dopey grin. \"You've got a whole wardrobe in there.\"\n\nSteve led Brandi aboard, or more like Brandi helped Steve aboard as he was still dopey from the kiss. Steve told the Captain to get underway towards Nassau and then led Brandi down to the main cabin. It was amazing, with a king-sized bed, thick carpets, and huge bathroom. Brandi opened the closet and saw it was stuffed with clothing of all kinds. Dresses, blouses, skirts and shorts, easily as many clothes as she owned herself. She looked at the labels and gasped.",
        "\"Holy cow! Brandi, this stuff is all designer! France, Italy, England, shit! This closet has to be worth ten of thousands of dollars!\"\n\nBrandi was pretty stunned herself. \"Jesus, I knew he was into me, but damn! That jewelry and now this?\"\n\n\"You like? I have had my personal shopper working overtime to pull this together.\" Steve said as he came in the closet.\n\n\"Steve, baby, I LOVE it! But, the cost...I mean, I'm just your girlfriend after all.\"\n\n\"No, you are not. Yeah, I guess officially you are, but we made an agreement. As far as I am concerned you are my other half and I'm going to spoil you rotten. Wait until you see the jewelry.\"\n\n\"More jewelry? Oooooh, bring it on.\" Kory piped up.\n\nBrandi kissed Steve gently and then a bit more. And then a bit more. She felt the boat begin to move and she giggled.\n\n\"You can show me more jewelry later, right now, I'm thinking I'd like to see the bed...\"\n\nA WEEK LATER\n\nBrandi laid back with a contented sigh. The warm sun played on her now nicely tanned skin as she rolled over on her beach towel. She looked around the private beach and saw Steve next to her slowly sipping a beer.\n\n\"How's it going lover?\"\n\n\"It's going so well it's gone. God, I could get used to this life.\"\n\n\"Me too.\" Kory said with a very relaxed voice.\n\n\"Great minds think alike.\" Brandi said out loud and she kissed Steve lightly. She then sat up and ran her fingers through her bathing suit straps. She pulled one out and let it snap back into place.\n\nEven though Steve's eyes were covered by sunglasses Brandi could tell his eyes had jerked to her body. She had been conditioning him over the last week. When she snapped her strap, it meant playtime.\n\n\"So, do you like my choice?\"\n\nSteve swallowed. \"Yes baby, I do. It's an eyecatcher for sure.\"\n\n\"Everyone's eye. Right?\"\n\nSteve nodded and licked his lips. Brandi could see he was getting turned on. Brandi could feel her own excitement build and Kory's as well.\n\n\"Mmmm, that's it Brandi. Let's be sleazy.\"\n\n\"Yessss, I like the sound of that.\" Brandi replied.\n\nBrandi and Steve had fucked all the way out of the port of Miami. They had slept in, swam in the pool, ate lunch, and then fucked again. They had a lovely candlelit supper, had watched the stars, and then fucked by the pool and then again in bed.\n\nAfter a couple of days sailing they arrived in Nassau, and Brandi had gone shopping. Steve had done a wonderful job buying her clothing. Top of the line, designer, she felt and looked like a model when she walked down the street on his arm. But she had wanted a couple of other items. She had slipped off and found what she was looking for in an adult store off the main drag.\n\nBrandi was discovering that she was having an urge to be a bit more daring and a bit more showy. She killed her clothing, but she was discovering she liked to show a bit more cleavage than before, wear a bit higher skirt, put a bit more sway into her walk. She knew she was sexy, and while the professional spy part of her wanted to blend in, her non-professional self wanted to show off the goods.\n\nShe had purchased some leopard print micro-dresses, strapless and high cut, some platform heels, and a wet-look black rubber mini, but the ones that really got Steve's attention were the bathing suits. Brandi's suits back in her closet were more of the workout style, so Steve's buyer had brought her some of the same. She had gone out and purchased some metallic gold and silver monokini pieces that barely covered anything. Steve had nearly hyperventilated when she had come out on deck with one on. She had then had him put suntan lotion on her body parts that were not tan yet, and then had him sit back while she tanned. She had made him wait nearly a whole hour before she had snapped her strap and he had just jumped her bones right there on deck.\n\nWhen they had come to this resort, she had to wear something over it because it was considered indecent. She had heard one of the other women behind whispering about how slutty she looked in it but had ignored it because Steve proceeded to throw a wrap around her shoulders and nuzzled her neck. She had grinned at the woman as she strutted past her in her top-runway model mode that locked every eye on her and Steve.\n\nSteve had moved her out quickly because he was sporting a raging hard on by the time they had gone ten feet from Brandi nuzzling him and nibbling his ear. They had barely made it to the cabana before Brandi had thrown Steve down on the divan and rode him like a cowboy.\n\nBrandi snapped her strap again and Steve moved over behind her. He nuzzled her neck and his hands began to roam over her body, gently cupping her tits and brushing her barely covered pussy.\n\n\"MMmmmm, so nice. Feeling my man's hands caress my body like this.\" Brandi purred in his ears as he kissed her shoulder.\n\n\"I love doing this baby. Your body is so soft and wonderful. Your scent makes me light-headed, your kisses melt my mind.\"\n\n\"MMmmmmm.\" Brandi gave Steve a kiss and let her will flow into his head. After doing this several times a day, Steve seemed to be programed or conditioned to respond to her. His mind simply went blank, and Brandi could easily slide any thought she wanted to into his head. Brandi had been doing this for a couple of reasons. The main one was fun of course, but the other was to see how well her instructions took and how well he remembered what happened.\n\nSteve remembered everything that happened, so Brandi had to be careful otherwise she would have to dive into him. While she could do so, she much preferred having him a willing participant in sex and pleasure than as an unconscious zombie. The instructions however were only of a short duration, a couple of hours at most. She had discovered this by having him think he really enjoyed spooning, to the point of it being his favorite position, and he had for a while and then had after several hours started to revert.\n\nBrandi had not had to dive into his mind to allay suspicions because he had been drinking a lot when they had been out dancing and he put it off to alcohol. But a couple of hours was more than enough for some fun.\n\n\"Mmmm, yeah...love this. Oooooooo, right there lover.\" Kory moaned in her head. Brandi bit her lip and moaned. It was so good, but having two voices whispering in her ears was so FUCKING hot it nearly drove her crazy. She had barely stopped herself from shouting at Kory to shut up once out loud, and Kory had laughed and laughed and she had been rather put out.\n\nBut Steve had quickly cheered her up so it was all good.\n\nSteve's fingers eased under her ting thong bottom part and teased her clitty. Brandi moaned and kissed Steve again, programming him to lay down and 69 her. Steve broke the kiss and skinned off his trucks while Brandi eased off her suit.\n\nSteve lay down and Brandi mounted him. She licked his cock and felt him start up on her and then she sucked him down and felt the connection. The wave of pleasure coursed through her and she teased Steve's cock with her tongue and swirled it around. Steve responding by showing how well she had trained him in pussy eating and Brandi moaned and groaned as they worked each other.\n\nBrandi could feel Steve tense and then he came and she came hard as well. She rode the rush down and felt Steve go limp. She rolled off and snickered as he began to snore.\n\nShe soaked up the rays a bit and then Kory said \"Why did you just go for a quickie? I felt you reach through the connection and speed him up. What's the rush?\"\n\nBrandi sat up. \"I wanted some time to talk to you without worrying about being rushed. Kory, I think we have a problem.\"\n\n\"Aside from me being inside you?\"\n\n\"Not trying for funny here Kory. I've been making some notes and watching some things. I think we may be melding or at least influencing each other's persona.\"\n\n\"Huh? You mean like I'm turning into you?\"\n\n\"Yes.\"\n\nKory was silent a bit. \"The coke. I'm excited to get back to the lab to study the coke.\"\n\n\"Yep. Care to explain why? You are not a chemist, you were never into it, you don't care how it's made so long as it met your standard for distribution.\"\n\n\"And now I can't stop thinking about it, as in digging into how it works.\" Kory said.\n\n\"Yep. Noticed how much you are paying attention while I read?\"\n\n\"Well, nothing else to do.\"\n\n\"Bullshit, I know you are finding it all fascinating. And I know you are surprised by that.\"\n\nKory was silent for a bit. \"What about you?\"\n\n\"Notice my change in fashion taste?\"\n\n\"Hey, you ROCK this monokini.\"\n\n\"I know I do, but I wouldn't have worn this prior to meeting you. I can kill a regular two-piece, why would I go for this? This wasn't made to swim in, it was made to show off in, and in a sleazy way. No offense Kory, but this is a lot more YOUR taste than mine. Along with some of the sex. Noticed how my language has gotten sometimes? Notice how I love getting it from the rear now? I never liked it that way before, now I can't get enough of it.\"\n\nBrandi looked over the ocean and pulled up her knees. She put her chin down on them and sighed. \"The nymphomania is pretty much out of control now Kory, how many times a day are we doing it with Steve? Three or four, at least? And it's not just you anymore, I am getting turned on when someone openly checks me out. I can't tell whose link pulses horniness anymore when we get turned on.\"\n\nKory was silent. \"Shit.\"\n\n\"Yeah.\"\n\n\"So what does this mean? Are we melding out minds? Or just influencing each other? Or are we switching up things, like I am getting your interest in reading and you are getting my taste in bathing suits?\"\n\n\"Not sure. I don't think we are swapping things, I still like reading as much as I did and you still love monokinis so I don't think that is it. I am thinking more influencing, but I'm worried it's a bit more.\"\n\n\"Like how?\"\n\nBrandi thought for a bit. \"Kory, I think my body is changing to mirror parts of yours. My eyes, my tits, my body shape, and my hair.\"\n\nKory's link radiated concern but also some disbelief. \"Hold on. We know about the eyes, but that could be any number of reasons.\"\n\n\"No it couldn't, genetically speaking this shouldn't happen. I am pretty sure Steve has noticed too. He got me that jewelry to match my eyes. Grey eyes, that are now greyish blue. They are smoking hot, but NOT what my eye color was.\"\n\nBrandi pressed on. \"And my chest. I'm a 36 DD, have been since I was 19. Now, what was the measurement in the store the other day?\"\n\n\"38 DDD.\" Kory said quietly.\n\n\"Yes. YOUR bust size. My hips have changed shape a bit to be more rounded, and I've noticed that my reddish-brown hair is now strawberry blonde.\"\n\nThey were both silent a bit. Brandi could feel Kory's link pulsing with concern, fear, excitement, and wariness.\n\n\"Brandi, what are you planning to do?\"\n\n\"What am I planning? I think it's both of us having to plan.\"\n\n\"You mean it? I'm just in here for a ride until you can get me out. I'm not trying to do this to you!\"\n\n\"Calm down, I know that. I'm sure you are not trying to do it. But we may be doing it regardless. We need to cut this short and get back to Miami so we can start looking into this. It's going to be a sure thing Mr. Case will notice the changes. The hair, maybe the eyes I can cover for, but the body shape? He will notice that for sure. The good news is that we don't need any outside help on this. I can cover that angle entirely. I'm a chemist, and I absorbed a full mind's worth of medical and genetic knowledge from someone who was tops in the field.\"\n\nBrandi felt Kory thinking it through. \"Okay, that's all good, but we may have one issue. Mental.\"\n\n\"You mean get a headshrinker? I am not sure we need one.\"\n\n\"Maybe not yet, but let's say we are melding. Now if we do it all at once, which I think would be the best case here, then the new \"me\" will be just one personality. Probably. But what happens if we only go part of the way? What if you and I are partially melded and we end up having mixed memories and personalities and are fighting for control? We may need some help in this.\"\n\nBrandi thought a bit. \"You have a point. But who can we trust on this?\"\n\n\"Fuck trust. We do some coke and we make a loyal servant who won't nark on us.\"\n\nBrandi shuddered a bit when Kory said coke. \"Shit. Maybe she can help us on this too.\"\n\nBrandi could feel Kory's mind shifting around nervously. Brandi felt that when she was fighting the urge, and she knew she did it too.\n\n\"Maybe Brandi. But we've been clean since we left on the cruise. Maybe we are near to licking it.\"\n\n\"Only because of the sex Kory. You and I both know that we jump Steve's bod every time the craving gets too bad to control. And now that has caused the nymphomania to spike out of our control. If I'm not getting at least one massive fuck a day I can't think anymore and neither can you because we are so linked that when one of us gets turned on we turn the other on.\"\n\nThey were both silent a bit. Brandi nodded and looked over at Steve who was starting to stir. \"We need to head back Kory, we need to get to work on this.\"\n\nKory signed and then giggled. \"Well, I have to say this has been the BEST vacation I have ever had. This was what I had in mind when I was taking over Chicago, and now I have it. Life is good.\"\n\nBrandi giggled and nodded and rousted Steve. The kissed a bit and cuddled and then went back to the yacht. That night a dinner Brandi told Steve that she needed to get back to Miami right away. She had expected a fight or disappointment.\n\nBut Steve had just looked at her and said \"Work related?\"\n\n\"Yes.\" She replied.\n\n\"Well then, we will leave tomorrow morning. I'll let the captain know and have him get things set up for our departure.\" Steve looked at her and smiled. \"We have a deal remember? I full intend to keep my end up, and I intend to hold you to yours.\"\n\nBrandi smiled at Steve. \"You are so good to me. Thank you.\"\n\nSteve came around the table and rubbed her bare shoulders. She sighed and let his strong hands work. \"Mmmmm, that's nice.\" Steve leaned down and nuzzled her neck a bit. \"Oh, there is a lot more nice where that came from, why don't you go to the bedroom and I'll join you after I talk to the Captain?\"\n\n\"Sounds like a lovely plan lover, see you there.\"\n\nBrandi swayed to the master suite and stripped slowly. She lay down naked on the bed and waited for her lover to join her.\n\nFor a few moments it was so lovely and peaceful. Brandi felt just herself, beautiful, desired, rich, spoiled, and having a wonderful rich lover at her beck and call. Everything she had ever dreamed of.\n\nSteve opened the door and Brandi felt her body amp up. She didn't speak and neither did Steve. He slowly stripped and laid down next to her. They kissed and Brandi let her mind flow over Steve's and implant visions of slow, tender lovemaking, kissing, caressing, fondling, and enjoying each other's bodies. Steve responded just as she desired.\n\nBrandi didn't sleep a wink that entire night. She watched the sun rise in the arms of her lover and then finally slept. Kory hadn't said a word the entire time and Brandi had felt that during that night, she was herself and only herself.\n\nNot a bad way to end the trip, she reflected as Steve dropped her off the next day late in the afternoon."
    ],
    "authorname": "Moosetales",
    "tags": [
        "mind control",
        "spying",
        "oral sex",
        "man on girl",
        "multiple personalities",
        "brain-washing"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/blow-your-mind-pt-13"
}