{
    "title": "A New Way of Seeing Things Pt. 04 Ch. 05",
    "pages": [
        "Standard disclaimers.\n\nThis is a story about sexual exploration and, open relationships. Open relationships can and do happily exist; but they are not for everyone. If you do not believe it is at all possible for open relationships to exist without damage to any and all involved parties, please do yourself a favor and don't waste your time reading this.\n\nAlso, this story takes place in a world where STDs don't exist and only babies planned for and wanted do\u2014in other words, a fantasy world. Any resemblance to real-life people is purely coincidental. \n\n*****\n\nTim and Gwen slept in the next morning, until nearly 7, sharing a quiet breakfast after she had collected the clothes that had been left in the truck the night before. Tim stood on the deck and watched her pick her way across the yard in bare feet, appreciative that she had left the rest of her bare as well. He never tired of watching her move, the same mixture of grace, poise and confidence whether she was dressed for work or not dressed at all. \n\nTheir plans for a quiet day together changed mid-morning when Ali called to ask if she and Jason could come over for an impromptu Sunday dinner. Of course a ride would be in order, and perhaps a swim too, leaving Gwen with quite a bit to think about. \n\nShe had been debating what to do with the gift saddle. She was keeping it, of course; she knew it would be used again. Better hiding places were considered, but lugging that thing around, as light as it was, every time barn visitors were expected would soon become tiresome and still would not account for the unexpected visits Ali was known for, and KD was due home for a short stay any time now...in the end she left it where it was under the blankets and hoped it would not be noticed. \n\nThe swim after the ride was another area of concern. Both she and her daughter had become quite comfortable with their shared dislike of swimwear; how would Tim and Jason react if Ali decided suits weren't necessary in front of them, either? Would she have the courage to join her in a show of solidarity? \n\nThey arrived just before noon, bringing the ingredients for the meal they had promised to help cook. Mother and daughter were in the barn moments later, Ali simpering over her horse while Gwen got the things necessary for a ride. \n\n\"I'll get your saddle,\" she called out while carrying her own past Ali. \n\n\"No, I got it,\" she replied, and was already in the tack room before Gwen could put hers down. \n\n\"What the heck is this?\" The young woman asked as Gwen hurried back, the blanket covering her secret pulled away.\n\n\"It's, umm, a saddle,\" the older woman explained weakly. \n\n\"You sure?\" Ali laughed, pulling the blanket all the way off. \"I've never seen a saddle made of mesh.\"\n\n\"The frame is leather,\" Gwen pointed out. \"The fabric is for, umm, to keep you from getting sweaty.\"\n\n\"Doesn't look very sturdy. That mesh is gonna come apart in no time after it starts rubbing up against a pair of jeans. Even riding breeches will probably wear this thing out in no time.\"\n\n\"It's not meant for riding with jeans or breeches, and it's not meant to be ridden for long distances,\" Gwen nervously replied, resisting the urge to pull the blanket back over it. \n\n\"So what is it for, exactly?\"\n\n\"It's designed for bare skin,\" she answered simply, avoiding eye contact\n\n\"Like shorts?\"\n\n\"Probably not...\"\n\n\"Less than shorts?\" \n\n\"I guess, yes, if you wanted.\"\n\nIt took a second for the young woman to solve the puzzle, her eyes widening. \"Mother! You have a saddle that you're supposed to ride without pants?!\" OHMYGOD! Where in the heck did you get this, and why?\" \n\nGwen hurried to quiet her daughter. \"Shhhh! Please lower your voice. Jason doesn't need to know.\"\n\nAlison's shocked expression relaxed enough to allow her to raise one eyebrow more than the other. \"Does Daddy?\" \n\n\"Yes, of course he does. Look you have to promise not to tell anyone about this\u2014not Jason, not KD, no one, alright? Just our secret?\" \n\n\"I don't even know what I would even tell them, but yes, I promise. So, where did you get it, and why?\" \n\n\"Remember, you promised not to tell anyone\u2014and I mean anyone, right?\"\n\n\"Yes, I said I promise,\" the young woman said excitedly, in a hurry to get some answers.\n\n\"Okay...remember a few weekends ago when I said I was going to ride with a friend\u2014when you and Jason and his friend stayed here?\" \n\nThe memory seemed to bring Alison up short for a moment, but she let it pass with a sly smile. \"Yeah...\"\n\n\"I was riding, but not with a friend, at least not exactly. There's this woman who wanted some pictures of Dart and I...together...working.\" \n\n\"Who is she? Somebody from when you were competing?\"\n\n\"You wouldn't know her, Gwen half-lied. \"And I don't think she ever saw me ride competitively. But she knows my old boss from the stable where I was at before I married your father, and we became acquainted and for some reason she wanted Dart and I to pose for a photography project she had in mind.\" \n\n\"Like what kind of photography project?\"\n\n\"Just me riding Dart. It was all artistic, I swear!\" \n\nAlison noted the urgency of her mother's insistence on that fact. \"Mom, exactly what kind of riding did you do?\"\n\n\"I told you, it was all very artistic. Some dressage, some free riding...\" \n\n\"Okayyyyy...so where's the saddle come into all this?\" \n\nGwen hesitated. \"She gave it to me as a gift for posing.\" \n\n\"An interesting gift, and an expensive one, I'll bet,\" Ali mused. She broke into a mischievous grin as she guessed at two pieces of the puzzle. \"Did your posing have anything to do with that saddle?\" \n\n\"Not that saddle, but one like it,\" Gwen admitted, blushing furiously. \"Not Saturday, though-just Sunday!\"\n\n\"Mom! What were you wearing, exactly?!\"\n\n\"If you must know, I posed nude, alright?\" Gwen blurted, deciding leather straps could not be counted as clothes. \"But just Sunday.\" The first day was almost as obscene, the Lady intoned. \n\nOhmygod!\" Ali repeated, this time softer. \"My mother posed nude!\"\n\n\"I'm so sorry! I'm sure that's the last thing a daughter wants to hear about her own mother, but you didn't want to lie to you...\"\n\nAlison grinned in amazement. \"Are you kidding me? I think it's so cool you did that! I'm truly impressed\n\nA flicker of pride flared in Gwen at her daughter's approval. \"Thank you. I'm glad you're not upset,\" she replied with forced calm, flashing a sardonic smile of her own. \"Can we just go for a ride now?\"\n\nShe managed to avoid answering any more questions until they were on the trail, Alison finally wearing her down after convincing her mother she was truly interested rather than horrified. Neither woman paid their mounts much attention as Gwen did her best to deflect the persistent interrogation, careful to keep the description of the weekend's events general and not reveal the secrets of her benefactor's identity, Cricket's presence or the extracurricular activities. \n\n\"So when did you get it?\" Alison asked, only temporarily satisfied with the details she had gotten.\n\n\"The saddle?\"\n\n\"Of course the saddle!\" \n\n\"A couple of days ago...\"\n\n\"Going to use it? This trail's perfect for it.\" \n\nThe Lady urged a lie, that it had never been used and never would be. \"I tried it out when I got it,\" Gwen confessed. \n\n\"Oh-my-God,\" her daughter repeated yet again. \"So cool. Where?\"\n\n\"Up here.\"\n\n\"No clothes?\" Alison asked, her voice hopeful.\n\n\"No.\"\n\n\"None at all?\"\n\n\"No.\"\n\n\"Wow! Okay, two questions. First of all, is the saddle comfortable, and second question, how did it feel to ride bareback? And by bareback, I mean you, not Dart,\" she added with a smirk. \n\n\"The saddle isn't too bad, really,\" Gwen allowed, if you don't mind being teased to orgasm, the Slut added. \"And as for the second question, I was really nervous about it when I posed, and, and a little less so the other day. Not bad nervous, though, if that makes sense. How does it feel for you?\" she asked, trying to turn the focus back on her daughter. \"You must have done that before. You're much more daring than me.\"\n\nAlison laughed, a small part of her wondering just how much her mother really knew about her. \"Well...since we're telling secrets, maybe once or twice, when you weren't here. I always got sweaty and stuck to the leather, though...\"\n\n\"I thought I told you girls no unsupervised riding,\" Gwen said, her stern mother voice breaking through. In truth, she knew when they had been riding without her\u2014a piece of tack out of place or unwashed riding gear were usually giveaways. \"Does KD know?\"\n\n\"We were riding together,\" Alison laughed nervously, \"we kinda dared each other. She was the daring one\u2014no saddle, just a blanket. I was supposed to help her if she fell off!\" \n\nAlison skillfully returned the attention to her mother's weekend, the questions and carefully scrubbed answers continuing until they returned to the barn. Tim and Jason had done a good job getting dinner started, and mother and daughter were not overly taxed to complete it. The swim after was anti-climactic\u2014Alison had packed a two-piece suit; Jason, a pair of swim shorts. Gwen was relieved, although no small part of her wished they weren't necessary\u2014wearing her own had become an annoyance. \n\n\"Jason's an ass man,\" Tim casually announced as they got ready for bed that evening. \n\nGwen turned from where she had just dropped her shirt in the hamper. \"And how do you know that?\" He certainly had been in that video, the Slut mused.\n\n\"He was checking yours out pretty good up at the pool this afternoon-every chance he got. Can't blame him.\" \n\n\"Me? Are you sure?\"\n\nHe laughed. \"Uh-huh. He was really good about making sure you or Ali didn't catch him doin' it, but I think he forgot to check on me.\" Gwen panicked briefly, wondering if she had been caught making furtive glances at her son-in-law's bulge under the wet fabric of his shorts. \n\n\"And you're alright with...that?\"\n\nGwen's tone made him believe he could be and shrugged. \"What can I say? He's a guy and you do have a nice ass. I'll bet it put some ideas in his head, though...wouldn't surprise me if Ali's is gettin' a workout tonight.\"\n\n\"Tim!\" she shrieked, an incredulous smile on her face. \"You do remember that's your daughter's rear end you're talking about!\" The Slut dismissed the fact that she had happily watched Jason do that very thing. \"I thought most fathers are on a mission to preserve their daughter's purity?\" \n\nHe laughed self-consciously and shrugged again. \"She'll always be my little girl, but I also got used to the idea pretty quick once she hit puberty that's she's a woman with the female version of the hormones I had when I was her age. Most of the fathers I know who have sons are kinda proud to think their boys are studs when they're getting' some, why shouldn't I be happy for my daughters if that's what they want? I always thought it was bullshit that there's a double standard. Boys are encouraged to go out there and get as much as they can, girls are told to keep it locked away. Why do the boys get away with not being able to control themselves? Shouldn't they both have the same rules\u2014no means no, be respectful, that sort of shit?\"\n\n\"I suppose,\" Gwen answered softly. \"But my parents definitely didn't see it that way. I always felt like my brothers got a free pass from them because they were guys and like you said, couldn't control themselves and as long as they didn't get anyone pregnant it was just boys being boys. But my mother made it very, very clear that it was a young woman's most important task in life to remain pure until marriage.\" She laughed and shook her head. \"But, I also think she believes virginity isn't a moral quality as much as something you can trade for the right marriage. She said, 'a girl can only giver herself to a man for the first time once', and that it was something men would gladly wait until their wedding night for because they put such a value on it. I think she also figured they would satisfy their lust until then with women who didn't wait, like she had assumed Steven and Adam had. Of course, she also told me that I couldn't be surprised if my husband went back to sleeping around after that, but at least by then I'd have a husband to support me.\" \n\nTim laughed, \"I'm sure your mother thought you made a bad trade to get me.\" \n\n\"To tell the truth,\" she replied thoughtfully, \"I'm pretty sure she thinks I gave it away to you before we even got married. In her mind, working class men don't respect the rules of proper society. I think she believes proper young men respect the sanctity of virginity and just satisfied their urges with girls who gave theirs away before instead. But working-class men, well, they wouldn't play by the rules and wait, they'd just sweet-talk the girl out of it as soon as they could. I think you impressed her by still marrying me even though she was sure you got mine before. I'd love to tell her she was wrong about the status of my purity, too.\"\n\nHe laughed again. \"Now THAT would be an interesting conversation.\" They grew quiet. \"Were there any contestants for the prize before you met me?\" he finally asked. \n\nGwen laughed and laid her head on his shoulder. \"Only in my imagination. I really didn't find any of the boys from my parents' circle of friends attractive, even though there were a couple from really good families they would have been very happy to marry me off to. At least some of the boys at the stable were handsome...\"\n\n\"What'd you like about them?\"\n\n\"Oh, you know, I've thought they were real men, doing physical things, swearing...you know being men. I used to try and sneak a peek when they'd get all hot and sweaty and take their shirts off, but I'd never let them catch me looking\u2014I didn't want them to think I was interested. I liked seeing their muscles...but they were too rough around the edges attitude-wise for me to be seriously interested in, if you know what I mean.\n\n\"Like Charlie rough?\"\n\n\"Like that. Definitely not the kind of boy my parents wanted as a son-in-law. But still, sometimes I'd think about what it would be like for one of them to umm, do what my mother said they would, try and talk me into bed with them. I thought they'd have no problem taking charge and getting whatever they wanted and it wouldn't be really my fault if they did. But then I'd worry that they'd be like that all the time and I'd have to keep putting out for a guy I didn't like and why did I want to even be around guys like that, anyways? Miss Ritter was teaching me so much, getting me ready for a career...\"\n\n\"And I came along and ruined it.\"\n\n\"You came along and gave me the best of all possibilities\u2014a real man I could have a conversation with. And you were so handsome...\"\n\nTim hugged her to him. \"Thanks. So why me? What made me different from the guys at the stable? I was kinda rough around the edges too...\" \n\nGwen laughed. \"Oh no you weren't, not like them! That first day you came to talk to me, you made me feel like I never had before. My heart felt like it was fluttering the entire time...\"\n\n\"You were probably still trying to calm yourself down after corralling that horse...\" \n\n\"That? That was nothing. I could tell he was just a little upset and trying to make his point. I was calm until you found me,\" she replied, running her hand across his stomach. \"You were really good-looking, like some of the guys in the stable, but you were also so polite, not like them at all. And I thought it was so nice that you cared enough to make sure that I was alright. \n\n\"Huh. Tell the truth, I didn't think I had made that good an impression.\"\n\n\"Oh, you did,\" Gwen assured him, \"and I'm really sorry that's what you thought. But that's how my mother taught me I should be around boys, to act hard to get and make them work for it. And Miss Ritter taught me to be that way around everyone because she was training me to be better than them. I was so mad with myself after because I thought I had scared you away, but I was so glad when you came back to talk to me again. And the more you came to talk to me,\" she continued, \"the more that I knew you were the real thing, that you were smart and funny and had plans for your life...I thought you were the perfect man. I still do.\" \n\n\"Awww, shucks...\" \n\n\"Can I tell you a secret?\"\n\n\"Sure.\"\n\n\"I used to imagine what you looked like without your shirt on.\"\n\n\"Really? Just no shirt? I still had pants on?\"\n\n\"Uh-huh. I didn't really have good idea what boys looked like below the waist, and I didn't have much of an imagination, so that was enough...\"\n\n\"How did I look?\"\n\n\"Incredible.\"\n\n\"Well, that's good. I thought about you a lot, too, and I had no problems with my imagination.\" \n\n\"Really? And what did you think about?\"\n\n\"Oh, you know, you taking your clothes off\u2014all of them, not just your shirt, me doing incredibly nasty things to you, you doing incredibly nasty things to me...that kind of thing.\"\n\n\"I might have, if you had asked...\" Gwen murmured. \n\nTim laughed. \"Your mother and your boss had taught you too well. I never once thought I could have gotten away with that. I was positive you would have swatted me down and dumped me on the spot, and I had way too much respect for you to try and force you into it. On the other hand,\" he said, gently slipping out from underneath her and getting off the bed, \"it might have been interesting if one of those stable hands had shown more guts than me and sweet-talked you out of those tight riding breeches of yours, gotten your purity instead of me.\" He shuffled to the nightstand and retrieved the big black cock Natalie had gifted her with. The dildo had not been in Gwen's regular rotation recently, supplanted by Nearly Neal and Tim's replica. He casually tossed the cudgel onto the blankets by her hip and moved to the foot of the bed. \"Anybody at the stable that might've fit?\"\n\nShe thought for a moment, a shy smile on her face. \"Maybe one or two...\" There had been one man in particular, the Assistant Stable Manager, a very large and imposing black man\u2014what was his name?- easily twenty years her senior. Miss Ritter had hinted darkly that he had been rutting with several of the female stable employees, including one of her riding instructors. Gwen could never tell whether Miss Ritter objected because he was a black man preying on white women, or just because he was a man. He had always been polite to Gwen in a resigned it's-my-job sort of way...at least she had never heard him call her 'Ritter's little rugmuncher', or 'stuck-up dyke-bitch' when he thought her out of earshot, like many of the others had...\"I think back then all I knew about sex was the girl opened her legs and the guy got on top of her,\" Gwen answered, eying the cock lying next to her. \"But if I saw something that size for my first time I would have said no right then and there,\" she laughed nervously. \"I wasn't sure it was going to fit when Natalie gave it to me!\" \n\n\"Maybe one of them would have convinced you to give it a try...do you remember their names?\"\n\n\"Not really...one started with W, I think.\"\n\n\"Okay, then we'll call him 'the Stud' for now, and maybe he would have done this first to help convince you to put it in.\" Tim knelt on the bed, firmly grasping her calves and spreading her legs before burying his face in her pussy.\" She was already easily wet enough to welcome the massive shaft, but Tim stuck to his task. \n\nWhat was I saying about my lack of imagination? Gwen laughed to herself as a story began to form in her head. Old fears formed the basis for a new tale, one where Whatever-his-name-was, the Stud, had found out about Gwen's private lessons and had come to her room demanding her body in return for his silence. Her fear of his size wouldn't have mattered in the least to him. \"Are all men as good as you at that?\" she gasped.\n\n\"Like Charlie says, you have to practice. Not a lot of chances to practice when you're younger.\"",
        "\"Well, this was an older man...\"\n\n\"A-ha. Do you think he'd do it to make you feel good?\"\n\nGwen thought about his imaginary demand. \"Probably not...probably just to show me he could.\"\n\n\"Yeah, he's probably down here to get you wet enough to take all of him without screaming,\" Tim announced as he withdrew and stood. \"And you are, and he's ready, so show me how you think he would have fucked you.\" \n\nIn her mind she could see herself lying on her back on the little single bed that seemed to occupy much of the floor in her studio apartment, naked and spread, this huge man hovering over her on all fours with that thing dangling beneath him, waving back and forth as he positioned himself to line it up with her most private part. She reached for the length lying beside her and touched it to her opening. The Stud would have known she was inexperienced; he would have been in no hurry, willing to take his time with his prize, knowing he had all the time in the world, right? Gwen took a deep breath and pushed the head between her lips, lodging it in her opening. \"He'd probably smother me,\" she laughed. \"I barely came up to his chest, as I recall.\" She looked down past where her hand was poised at the junction of her legs, to where her husband stood watching intently, his own hand wrapped around his own shaft. \"Do you think he would have wanted to play with my breasts?\" \n\nTim looked up. \"Can't see how he could've resisted.\" She could imagine the Stud bent over her, his tongue busy on her nipple. \"Ohhh,\" she groaned, her eyes closing and the shaft finally beginning its slow journey into her, \"he'd be so heavy.\"\n\n\"It looks like he's stretching your pussy out,\" Tim groaned. \"It's gotta feel different than mine, right?\" \n\n\"A little,\" Gwen admitted, pulling it back out until only her lips surrounded the head before plunging it back in again, \"but it's what it's attached to that really makes the difference for me. It feels so good to have you on top of me...you next to me.\" \n\n\"Huh. Good to know.\" Gwen fucked herself in long, slow strokes, her finger finding its way to her clit and relentlessly circling. She could feel her orgasm building, the thought of that massive body crushing her into the thin mattress, strong hips repeatedly driving his cock deep up inside until it could go no further. She continued to deliberately withdraw and insert the invader, applied with a little more force each time. \"You like it hard, don't you,\" Tim asked, more of a statement than a question.\n\n\"Oh, yes,\" she panted. \"Especially when you're doing the pushing...you're so strong!\" The cock continued its cadence, slow withdrawals followed by a firm thrust. \n\n\"Is he going to come in you?\" \n\n\"I think he would want to, right? And I definitely wouldn't be able to stop him once he started.\"\n\nProbably not.\" He smiled, slowing his stroking, delaying...\"tell me when you start to come.\"\n\n\"Uh-huh...\" Gwen's eyes were closed tight, her head turned to the side as her finger circled her button and the dildo plowed into her sex. \"Uh-huh-uh-\" Tim could see the muscles in her jaw tensing. \"Nowwww...\" She slammed the massive length into herself and held it there as it filled her with imaginary white ropes of seed, her finger furiously rubbing her clit. \n\nThe waves passed and her muscles relaxed, her eyes opening dreamily, an embarrassed smile curling her lips. Tim smiled back. \"Good?\"\n\n\"Very, thank you.\"\n\n\"Good.\" Tim climbed on to the bed and quickly straddled her chest, an angry-looking cock just inches from her face. \"Now that's he done, I'm going to make sure you know who you really belong to.\" \n\nGwen's first thought was he wanted it sucked, but Tim had others idea. His hand wrapped around the girth and he began to stroke. \"Are you going to mark me?\" she asked, looking up at him, eyes wide. \n\n\"You want me to?\"\n\nGwen gave what she hoped was her best post-orgasmic seductive smile. \"I couldn't stop you...I'd want him to watch you do it.\"\n\n\"Yeah?\"\n\n\"It's such a nasty thing to do...\"\n\nTim chuckled despite his impending orgasm. \"Hell, yeah it is...\" With a soft grunt, he launched the first blast. Gwen saw the hole in the tip change shape, forming a perfect 'o' as he squeezed a split-second before the opening turned milky white. Her eyelids snapped shut just before the first streak landed across her forehead and left eye with a wet slap, making her recoil a bit. I guess my reflexes are still okay, she thought bemusedly. It was hot in the cool air, as were the others that coated her nose, cheeks and chin. She felt the tip of his cock rub insistently against her lips soon after the last droplets had landed, and she took it in, bathing the head with her tongue before the sensations became too intense for him and he withdrew. Gwen risked a look through the unstriped eye and laughed. \"Wayne.\"\n\nTim looked down at her, his expression a mixture of bliss and confusion. \"Wayne?\"\n\n\"I remember now! Wayne-his name was Wayne!\" she exclaimed with a giggle, gesturing to the discarded dildo. \n\nHe laughed. \"What do you think Wayne the Stud would think of the masterpiece I just painted?\"\n\n\"I think he would be very impressed...\" He hurried off her, quickly returning with a washcloth to clear her other eye, Gwen began to collect his spend on his fingers before he could continue, spreading it on her breasts and returning for more. \"You really like doing that, don't you?\" she asked with a smile once they were confident it all had been collected.\n\n\"Yeah, sorry, I do...you don't mind, do you?\"\n\nShe laughed. \"There's nobody I'd rather be owned by.\" She playfully swatted at his still tumescent member. \"Just don't get cocky.\"\n\n***\n\nWork the next morning was an interesting exercise, the younger employees moving cautiously, unsure how to react to the new management structure and Eric in particular, Eric unsure how to treat them. They seemed to work it out when neither side appeared to be any different, and the young man trudged up the stairs before leaving. \"I, uhh, asked Tim if there's anything I need to clear with you before I go,\" he stammered, his cheeks red. \"I know he comes up sometimes before he leaves.\" \n\n\"Oh\u2014he comes up to make sure there's no last-minute changes to the schedules, or anything he has to sign, anything like that.\" And for a kiss and an occasional grope, she added silently, but I'm sure he didn't send you up for that. \"I think it's probably a good idea to check in with me before you head out, but I don't have anything for you today...\"\n\n\"Oh\u2014okay then, guess I'll be heading out.\" \n\n\"Call with any delays or problems,\" she reminded him, \"and work safe.\"\n\nHe smiled. \"Yes, ma'am.\"\n\n\"Gwen.\"\n\n\"Huh?\"\n\n\"Remember? Call me Gwen?\"\n\n\"Oh yeah\u2014yes, Gwen!\"\n\nIt was more of the same that afternoon and the next morning, but everyone was beginning to realize the old routine had not changed much at all, at least not yet. \n\nGwen had just finished lunch in the house and returned to the office when she heard tires crunching in the driveway. Alison, she thought, looking out the window, and went down to meet her. \"Hi honey, this is a surprise!\" \n\n\"Yeah, I took the afternoon off and thought I'd come over, maybe help with some chores in the barn...I've been neglecting those and I feel bad.\"\n\n\"Well, I don't think there's too much to do right now unless you wanted to polish your tack, or something like that.\"\n\n\"Yeah, I could do that...\"\n\n\"Or you can take Dancer out for a ride and do it after. I can go with you, if you want.\"\n\n\"Oh, no, I know you've got a lot to do with the change to the business...\"\n\n\"I always make time for you and KD.\"\n\n\"I know...listen, Mom, I was wondering...\" the young woman's cheeks turned crimson and she looked down at her hands. \"I didn't want to take it without your permission or anything, but I was wondering...could I borrow your saddle?\" \n\n\"You mean the one I showed you the other day?\" \n\n\"Yeah, that one...\"\n\n\"Why?\"\n\n\"Well, it's probably safer than just a blanket, right?\" She looked up with an embarrassed grin before looking down again. \n\nGwen smiled, a little embarrassed herself for her daughter's discomfort. \"I see. Honey, I'm not sure\u2014\"\n\n\"I'll wash it down after, I promise. You don't have to worry about me getting it sweaty or...anything else. It is washable, right?\" \n\n\"Yes, it's washable and I'm not worried about that, honey, it's just that it's umm, a very special saddle...\"\n\nAlison's reply carried some disappointment. \"I understand.\" \n\n\"No, I don't think you do. See, it's umm, designed specifically for a woman...\"\n\n\"How?\" \n\n\"The design is different, it's...Gwen sighed in defeat. \"I think it would just be easier to show you than explain.\"\n\nThey climbed the hillock, the young woman calling out a quick greeting to her horse before joining her mother in the tack room. \n\nGwen pointed to a spot towards the front of the uncovered saddle. \"Put your hand there and push down.\"\n\n\"Here?\" Ali's eyes widened slightly as her hand continued to move up towards the saddle horn, pressing as it went. \"Oh.\"\n\n\"It's fitted specifically for a woman's...private parts. If you maintain proper form, it's not unpleasant, but if you don't, it, ummm...\"\n\n\"Hurts?\"\n\n\"Actually, the opposite.\"\n\nHer daughter's mouth was now slightly open as well. \"As in, feels good?\"\n\n\"Yes, as in, feels good.\"\n\n\"As in feels good enough to...you know, really, really good?\"\n\n\"Like that, if you're not careful...\"\n\nOhmygod,\" she breathed. \"Mom, did you get photographed doing that?\" \n\n\"Of course not. I maintained proper form the entire photo shoot. I'm pretty sure that's what they wanted from me.\"\n\n\"So why did they have you use this saddle?\"\n\n\"I don't know, Alison,\" Gwen countered with a touch of desperate annoyance. \"Maybe to remind me to stay in proper form all day?\" \n\nAlison broke into a knowing grin. \"And how was your form when you used it the other day?\" \n\nGwen returned a weak smile. \"I might have slouched some.\" \n\n\"I cannot believe what I'm hearing! Please, you have to let me try it! I mean, uhh, if you're okay with that...knowing, I mean, I might...see how it feels, if you don't think it's too weird.\"\n\n\"I think the only thing that's weird is I admitted I know from experience what it does.\"\n\n\"I think it's cool,\" the young woman murmured, her focus on the saddle.\n\n\"We're both adults,\" Gwen announced, trying for an air of confident casualness. \"If you're alright knowing I did that then I'm alright knowing you want to...we all have needs. Are you sure?\"\n\n\"I have never heard of anything like this before! I've got to try it! Please?\"\n\nGwen pondered the situation. Her daughter was standing in front of her, openly pleading to be allowed to pleasure herself. \"Well, I would rather you try it when I'm here so it's me who finds you if you fall off...\"\n\n\"So, can I?\" the young woman asked, pressing for an answer. \n\n\"Fall off?\" Gwen teased before switching to a tone of mock exasperation. \"Go ahead,\" she said with a wave of her hand. \"You're probably going to try it the next time I'm not here anyways.\" \n\nAlison's eyes took on an apologetic look. \"Not if you didn't want me to...\"\n\n\"Rather than put you in that situation, go ahead. I would take Dart if I were you, though. It fits him well and he's, uhh, used to it.\" \n\n\"Got it! So, what do I do?\"\n\n\"Well, first you saddle him up...\" Mother and daughter worked together to prepare the horse. \n\nDart stood ready a short time later. \"Now what?\" Alison asked, trying to mask her excitement. No jeans, right? Do I take them off now?\"\n\n\"I walked him up into the woods,\" Gwen offered, \"and then undressed there. That way I didn't have to worry about coming back to the barn like that if anybody was here. The trees make good clothes hangers.\"\n\n\"Oh-yeah\u2014good idea. Everything?\" She asked doubtfully, tugging at her shirt. \n\n\"That's up to you. Leave your boots on, though\u2014they'll give you more stability in the stirrup. You'll probably need that.\"\n\n\"And how long did it take\u2014I mean, how far did you go?\"\n\n\"I made it up to the picnic clearing,\" Gwen said with a half-smile. \"But I took it easy and took a couple of breaks along the way. All depends on how...aggressively...you ride, I guess.\" \n\n\"Oh, okay.\"\n\n\"And Alison? Be very careful. It's very easy to fall off if you're...distracted. Make sure you let Dart's leads go slack\u2014you don't want to pull on them and spook him.\" \n\n\"Oh, yeah\u2014really?\" \n\n\"Really.\" \n\nThe young woman's eyes were wide, her mouth slightly open. \"Alright. I'll remember, I promise.\"\n\n\"If you're not back in an hour I'm going to come looking for you, do you understand?\" The young woman nodded uncertainly. \"Good. Have a nice ride.\" She watched her daughter lead the horse up the hill into the woods, the Lady loudly questioning her sanity. She returned to the office but was back in the barn a half hour later. There was still no sign of horse and rider twenty minutes after that, and Gwen began to climb the hill for a look, determined to return and saddle one of the other horses for a search if no trace of them was found. Alison's clothes were hanging from a tree not far from where she had hung hers, jeans, panties, shirt and bra. Gwen was about to turn and hurry back to the stable when she heard the unmistakable soft thud of Dart's hooves on packed dirt, a slow cadence as he descended the switchback above her. Saddled horse and naked rider appeared from around the corner, Alison alternating between bringing herself off the saddle and sagging heavily into it until the sensation apparently became too much. She reined the horse in a few feet short of Gwen, the older woman gently holding Dart's bridle while her daughter tiredly dismounted. The fact she was nude, and the reason for it, was not lost on either woman. \n\n\"I was getting worried,\" Gwen said, watching her daughter shuffle over to her clothes. \n\n\"Sorry,\" Alison called out, reaching for her underwear. \"I can't believe I'm telling my own mother this. You were right\u2014I was really, really close to falling off the second time.\"\n\n\"Second time?\"\n\n\"Yeah, the first time was pretty quick, so I decided to keep going. I guess I didn't know how much the first time took out of me...\"\n\nGwen smiled. \"Good to know. Take your time getting dressed, I'll uhh, take Dart down.\" \n\nShe had him unsaddled by the time Alison joined her, and the two woman made quick work of finishing the job of grooming and turning him out. \"I, uhh, need to clean your saddle,\" the younger woman said. \"It got a little, umm, wet...\"\n\n\"A lot wet,\" her mother laughed, remembering the darker blotch on the black mesh. \"Don't worry, it dries fast, and from what I can tell the fabric doesn't stain. A little soap and water and it'll be good as new. I'll take care of it later.\"\n\n\"Really? I don't\u2014\"\n\n\"It's fine, I'll take care of it. I was thinking you could use a swim before the trucks start coming back.\"\n\n\"Yeah, that might help. Are you joining me?\"\n\n\"I think so, yes.\"\n\nAlison was undressed yet again a few moments later, Gwen's clothes joining hers over the backs of the pool deck chairs. \"I have got to get me one of those!\" the young woman exclaimed with a broad smile as the two woman floated comfortably in the cool water. \n\n\"I'm not sure they're for sale...\"\n\n\"Whoever's making them should. They'd make millions.\"\n\nSylvia Danning is probably more concerned with making billions, Gwen thought. \"So, twice?\" she asked before the Lady could stop her.\n\nAlison blushed and giggled. \"Okay, first of all, I can't believe you have a saddle like that. Second of all, I can't believe I asked you to borrow it. Third of all, I can't believe you said yes. Last of all, I can't believe I'm having this conversation with my own mother! Yeah, 'fraid so. Twice.\"\n\n\"I'm glad you enjoyed it,\" Gwen said with an apologetic shrug. \"I'm also glad you trust me enough to talk about things like that. I know it's strange...mothers and daughters aren't supposed to talk about things like this...but I'm glad you feel safe enough to.\"\n\n\"Are you kidding? I'll admit it's a little strange but I love it! This\u2014you\u2014are awesome! I always figured I got my, umm, urges from Daddy, but maybe it was you all along, although neither one of you really showed any sign of it when I was growing up. I love seeing you like this now. It makes me, I don't know, more like you, normal, I guess? I like that\u2014a lot.\"\n\n\"Maybe you got it from both of us. It took me a long time to get to this point, I'm afraid.\"\n\nAlison grinned. \"Better late than never. Mom, you went a whole day on one of those and you didn't, you know, get all happy? You sure?\"\n\n\"I'm sure. I was there to do a job, not make myself happy, as you call it.\"\n\n\"You must've been pretty wound up after you finished posing...\"\n\nGwen couldn't resist. \"I was and your father helped me with that.\"\n\n\"Woohoo! Way to go, Mom! Does he know about its magical properties?\" \n\n\"I told him about it the first time I used it.\"\n\n\"Oh. You gonna tell him I used it?\"\n\n\"Do you want me to?\"\n\nAlison hesitated. \"You don't have to bring it up or anything, but if he finds out, that's okay, too, I guess...he won't be mad or anything, right?\"\n\n\"I'm sure he won't. Whatever makes you happy makes him happy. He knows even his daughters have those needs, too.\"\n\n\"Happy is an understatement...\"\n\n\"But you absolutely may not tell Jason anything about this, are we clear? I still can't believe I'm sitting here without a stitch of clothing talking to my own daughter talking about...being happy!\"\n\n\"Yeah, it's so cool!\" Alison said with a smile before lowering her voice. \"Yes, ma'am, I understand. So, are you going to hide it someplace, or are you gonna tell KD? She'll see it next time she comes home if you don't.\" \n\n\"I hadn't really thought about it yet,\" Gwen lied. \"All I ask is that you don't tell her, alright?\" \n\n\"Promise is a promise,\" Alison replied with a laugh. \"I think you can tell her though. She'll think it's cool, too. How about Cricket?\"\n\n\"How about her?\"\n\n\"You gonna tell her? I think you could. She seems pretty open about stuff, she probably wouldn't freak out knowing you have something like that. You might even let her borrow it until she finds a man to ride,\" Ali added with a sly smile. \"And Aunt Natalie, she'd understand. She's pretty knowledgeable about sex stuff, you know.\" \n\nIf you only knew, Gwen thought. \"I'll have to think about it.\"\n\nThe conversation lulled for a moment. \"So I guess you thought a suit wasn't necessary today?\" the older woman asked, raising an eyebrow.\n\n\"Huh? Oh, you mean when we were here the other day? I'm still not sure if what Daddy would think...\"\n\n\"He knows what women look like. I think he'd be okay with it, but only if you are.\" \n\nWell,\" Alison began, \"if I went that way, Jason probably would want to, too...he's not shy about that kind of stuff,\" she smiled. \"Would you and Daddy have been alright with him going nekkid?\" \n\n\"Do you really think he would do that in front of his in-laws?\"\n\nAlison flashed a shy smile. \"Well, he's kind of a show off...\"\n\n\"Would he have been alright with your father and I skinny dipping?\"\n\nThe question seemed to throw her daughter for a bit of a loop. \"Oh-uh, yeah, I think he would, esp\u2014\" Alison stopped there. Her husband had made no secret of the fact he thought his mother-in-law was a MILF.\n\n\"Well, I guess we'll have to remember that for next time, then.\"\n\n\"Yeah, I guess we will.\"\n\n***\n\nThe next morning was hectic, the afternoon made more hectic by a phone call. \"Nelson Plumbing, Hi, Tim.\"\n\n\"Hey Gwen, uhh, yeah, hey, it's me. Hey, uh, can you see if one of the other guys can cover my appointments this afternoon?\"\n\n\"I'll take a look to see what we can do,\" Gwen replied, already switching to the on-screen scheduler. \"Running into problems?\" \n\n\"Sort of. I'm down at the Emergency Room.\""
    ],
    "authorname": "BusyBadger",
    "tags": [
        "dirty talk",
        "facial",
        "husband",
        "interracial",
        "masturbation",
        "wife"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/a-new-way-of-seeing-things-pt-04-ch-05"
}