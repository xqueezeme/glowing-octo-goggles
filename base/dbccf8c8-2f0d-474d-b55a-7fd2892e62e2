{
    "title": "Environmental Hazards Ch. 04",
    "pages": [
        "This story is part of an ongoing series. The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 17 - Retaliatory Response Redux\n\nThe man's trigger finger itched; it seemed to call out to him. He eased the safety off, reset the crosshairs on the little girl's head---\n\n*WHAM!!*\n\nThe vicious. powerful kick to the front of the scope drove the back of it into the skin around the man's eye, creating a perfectly round wound. As he screamed in pain, he rolled onto his back and looked up. He saw the shadow of the woman above him silhouetted by the blinding sun, then saw her arm thrusting the large knife at his throat. He reached up to stop her...\n\nHe was too late. The knife plunged into his throat, slicing through his larynx. The woman slashed viciously left and right, cutting his windpipe and carotid artery, and he was done...\n\n\"Good job!\" called out the other woman. \"Now let's get the hell out of here before we're spotted.\" The killer grabbed the rifle the now-dead man had intended to use to kill the Iron Crowbar's firstborn child, and the two women began walking south, away from the Mountain Nest and towards the curve around the end of the mountain.\n\n* * * * * * * * * * * * * * * *\n\nLaura had tried to keep Carole in the house when she let out the dogs, but her daughter simply was not listening nor obeying today. Then Laura had tried to keep Carole shielded between her and the house, again to no effect. Daddy was going to be talking to Carole in time-out about doing what Mommy told her to do, Laura silently promised herself.\n\nShe was filled with foreboding as she took Carole back inside, Bowser and Buddy leading the way. As she looked back over the yard, she thought she saw two figures to the south, but when she peered closer they were no longer there. Laura hurried back into the house with a protesting Carole in her arms. Time-out was going to commence immediately...\n\n* * * * * * * * * * * * * * * *\n\n4:00pm, Tuesday, March 28th. I was halfway through a small mountain of paperwork when Teresa Croyle came in with Detective Joanne Warner. \"Commander,\" Teresa said, \"we got a call to 9-1-1 that Rudistan and Morton checked out. They've found a dead body on the hillside above the University and below The Cabin.\"\n\n\"Eight feet tall, suit and tie, faceless?\" I asked.\n\n\"No sir.\" said Teresa. \"Slender Man is immortal. This guy obviously is not...\"\n\n* * * * * * * * * * * * * * * *\n\nThe Crime Lab techs were on the scene, as was Martha the M.E. when we arrived. Sergeant Rudistan said \"Sir, the number calling to 9-1-1 was a burner. Someone wanted us to find this. He was lying like this on his back when we came onto the scene.\"\n\n\"Any tracks to or from the body?\" I asked.\n\n\"Some faint ones, going south through the tall grass.\" said Morton. \"They end on the trail that goes from the dorms and apartments south of the Main Quad around the hill and towards Lake Reservoir.\"\n\n\"What the hell?\" I gasped as I saw the man's face. \"What is that around his eye?\"\n\n\"Something round really dug into his face, sir.\" said Martha. \"But the cause of death is someone taking a knife to his throat and cutting it to ribbons.\"\n\n\"Detective Warner!\" I said. \"What do you make of that round mark around his right eye?\"\n\n\"Oh my goodness!\" said Joanne as she observed it. \"Sir, it looks like a hunting rifle scope bit into him when he fired his rifle. But I've never seen one that bad. Usually it's just a cut on the nose.\" \n\nJoanne was a hunter, and a very good one. So I was not surprised she recognized the nature of that wound.\n\n\"I agree.\" I said, \"It would take a frickin' howitzer to recoil that hard. Looks like someone kicked the rifle into his face, then stabbed him from above. Anyway, anyone find a rifle anywhere around here?\"\n\n\"No sir.\" said Rudistan. He got on the radio and told Uniformed Officers in the area to look for a scoped rifle.\n\n\"He had a rifle, but let someone sneak up on him?\" Teresa Croyle asked derisively.\n\n\"He must've been looking through the scope, and concentrating really hard.\" said Joanne. \"And then, like the Commander said, someone kicked the rifle, driving the scope back into his face, then killed him.\"\n\n\"So what was our victim here doing?\" Teresa asked. We began looking around. As Teresa and I looked north, we saw it at the same time.\n\n\"Ohhhh, shit!\" I gasped. \"Anyone got binoculars?\"\n\n\"Oh my God.\" Teresa said at the same time as Rudistan handed me a small pair of binoculars. I looked through them... right at the back door of my home!\n\n\"What is it, sir?\" asked Joanne Warner, seeing my neck and face flush red.\n\n\"Hold on.\" I said, fishing out my personal cellphone. I called Laura.\n\n\"Hi dear.\" I said. \"Where are you?\"\n\n\"Home, at the Mountain Nest.\" Laura said.\n\n\"Have you been outside today?\" I asked.\n\n\"We took the dogs out.\" Laura said.\n\n\"Who is 'we'? Carole?\" I asked.\n\n\"Uh, yes. Is everything all right?\"\n\n\"Er, look out the back door.\" I said. Laura appeared in the doorway and I began waving. \"Do you see a group of people, and one of them waving?\" I asked.\n\n\"Yes, I see... is that you, darling?\" my wife asked, concern creeping into her voice.\n\n\"Yes.\" I said. \"Do me a favor, and keep our children in the house. I'll explain later.\"\n\nAs I hung up, I noticed that the Crime Lab people and Officers were working with a bit more energy as they realized what I did... that my home and family had been the target of an aborted murderous attack.\n\n* * * * * * * * * * * * * * * *\n\nAfter making calls to Molly and Paulina and telling them to be on high alert for their (and my) children's safety, I went into a meeting in the Chief's Conference Room. Present were the Chief, Cmdr. Harlow, Cpt. Croyle, and Sheriff Allgood.\n\n\"Lt. Masters has Vice working the grapevines to see if there's any Underground chatter about all this.\" I said. \"He called Midtown, too, and talked to Chief Soltis. Chief Soltis is not going to say anything to anyone else, but will tell Detectives Ruger and Wesson to watch their backs.\"\n\n\"What do we know about this guy?\" asked Chief Moynahan.\n\n\"His fingerprints came up as a 'Charlie Thomas', a.k.a. 'Good Time Charlie'.\" I said. \" Believed to be about 29 or 30 years old now, at the time of this death. He's known for frequenting resorts with an adult flavor about them, like the old Club Meds. He also was a Live Sex Show performer in the City in some of their less reputable clubs.\"\n\n\"Maybe your friend Rita can help find some stuff about him.\" said Sheriff Allgood.\n\n\"Noooo... \"I said, \"because all that was cover. He's actually a Mob operative. He'd go into a club, perform live sex with a woman, a man, or sometimes both, then when the next show was going on, he was in the back room with the manager, collecting protection money for his Mob superiors. He is not known to have run drugs himself, but may have been a go-between, and set up meetings between suppliers and buyers.\"\n\n\"How do you find this stuff out so quickly?\" asked Sheriff Allgood.\n\n\"I have a good team.\" I said. \"And this is all pretty common stuff. Charlie was well known to the FBI, DEA, and SBI-NTF. However, about a year to 18 months ago, people started realizing that Charlie had not shown up at any of his usual clubs. Some thought he'd been busted. Others thought he'd been killed by a rival Mob family or possibly by his own, for some reason. Turns out it was neither: he became a Made Man in the City's Mob, and an assassin-for-hire. When JACKAL was coming for me, I though he might enlist Charlie's help, but JACKAL hired Raoul instead.\"\n\n\"And Charlie is working for Organized Crime in the City?\" Chief Moynahan asked.\n\n\"That's the official story.\" I said. \"But I have a Confidential Informant that assures me that's just a story. Charlie was working for Jerry Morelli in Southport and Midtown.\"\n\n\"So let's just cut to the chase and ask the $64,000 question.\" said Moynahan. \"Who killed him?\"\n\n\"And if you or someone you know is behind it, Commander,\" said Sheriff Allgood, \"then it's self-defense of your family, understandable... but we have to know.\"\n\n\"Twasn't me.\" I said. \"I'd never let it get that close and let a loaded rifle be pointed anywhere near my child. I did not know the man was there.\"\n\nMoynahan nodded. Sheriff Allgood still looked skeptical.\n\n\"No,\" I said, \"I think this one was the Mob. Now who killed Good Time Charlie? That... is a more interesting question. And one for which I don't have an answer right now.\"\n\nPart 18 - Persuasion\n\nWith SBI Agent Norm Chow and FBI Special Agent Martin Nash waiting in the Black Beauty, Cindy Ross entered the bar on the northeastern side of the City. She was dressed in a clingy black pullover shirt, khaki pants, military-style boots, and her SBI badge and gun on her belt. She also had the Green Crowbar in her hand, and was ready to use it.\n\nAlmost all conversation ceased and all eyes were on the platinum blonde as she walked through the bar. She went near a table in the back left and pointed at the older man with hair on the sides of his head, then crooked her finger in the universal 'come here' sign. The man got up to follow her and she turned and led the way out.\n\n\"That was a very dangerous thing you just did.\" said Robert Ferris as they got outside. Cindy had Ferris get in the shotgun seat of the Black Beauty, and she took the wheel.\n\n\"Not all that dangerous.\" she said. \"They didn't know whether or not the Iron Crowbar was right behind me outside.\"\n\n\"Remind me not to play poker with you, Detective Ross.\" said Ferris.\n\n\"It's Captain now.\" Cindy said. \"Someone played poker with me, and lost.\"\n\n* * * * * * * * * * * * * * * *\n\n\"How did you find me?\" asked Robert Ferris, Chief Chemist of Forbes Environmental National Laboratories as he and Cindy sat down on the outside deck of the bar called 'The Place'.\n\n\"I'm a Detective, remember?\" Cindy said. \"I helped solve your wife's murder. And that's what I'm here about, Robert. This meeting is unofficial; I'll deny ever talking to you, and anything you say is privileged and can't be used in Court.\" Needless to say, Cindy had her bug-killer on.\n\n\"You know what's happening at FENL, and you know your own life is in great danger.\" Cindy continued. \"And while I didn't exactly approve of her methods, I know Linda died trying to help the environment, and she was cut down in cold blood by a bastard that betrayed the PCGW.\" That was a lie, but Cindy was trying to get Robert Ferris broken to her fist, to use falconry lingo. \n\n\"I want to ask you to do something.\" Cindy said. \"Cut a deal for immunity, tell us all you know, and help us put Paul Brandon away for good for the murder of Jimmy Shell.\"\n\nFerris's face fell. \"As much as I'd like to, I'd end up dead. You have no idea of the hold Brandon has on me.\"\n\n\"Try me.\" Cindy said.\n\nFerris nodded, then started: \"Several years ago, Linda and I started our own environmental lab. We needed to make money, but we thought we could use it to help the PCGW with their battle against the Corporatists. The lab didn't do well, though, and by the time the Crown Chemicals protests happened, and Linda was then killed, we were just about broke.\"\n\n\"We had a mutual insurance policy on each other.\" Robert continued. \"So when she died I had a little money to keep going. But after the PCGW incident, I became persona non grata, and I lost most of my clients.\"\n\n\"That's when Brandon came in.\" said Ferris. \"He and I had known each other before. He said he'd give me a loan to help pay off my debts, and to start a new but smaller lab. I was desperate, so I took the offer. And he got me the Chief Chemist job at FENL so I'd have income... to pay the loan back, with interest.\"\n\n\"Well, since that day, my life has been a total living hell.\" Ferris said. \"My lab's bankruptcy was handled improperly, and I had to go back to Court to get all that resolved. That's still going on to this day. But the worst of it was the trap Brandon put me in.\"\n\nFerris went on: \"We set up a little lab, the one you visited me in when you were solving Linda's death. But what I was really doing was sending most of the samples to FENL and getting a discount on the price of running the tests. I would charge the client full price, and Brandon would get the difference as part of the debt payoff.\"\n\n\"The problem was,\" Ferris said, \"FENL never got paid. I found out that Brandon had pocketed all of the money himself, and set it up to look like I was having the samples run for free. Brandon then lowered the bomb, and with that fucking sneering grin of his, said that it'd be a shame if my 'scheme' were found out, and FENL would have me put in jail.\"\n\n\"The price of Brandon's silence, he himself said,\" said Ferris, \"was for me to look the other way at when several projects turned up contaminated, but our tests showed they were clean. Pine Valley was the latest, and the biggest of these.\"\n\n\"Now you may ask,\" said Ferris, \"why I didn't go to the State EPA or SBI about this, get Brandon arrested, and be free of him. Well, first of all he said that the money that was loaned to me was Mob money, and that if it didn't get repaid, the Mob would come for me, not him. And second... well, Jimmy Shell did go to the State EPA, and he didn't live to see the next sunrise. I knew how well FENL, and Forbes & Sehgal, were connected to the Mob but they also have a ton of politicians in their pockets. Sehgal is 'friendly' with a number of State Legislators on both sides of the aisle, and he's an ally of U.S. Senator Samuel Russell.\"\n\n\"So you went and hid among your old PCGW friends.\" Cindy said.\n\n\"Yeah.\" said Ferris. \"They've just about taken over that bar as a meeting place. They've been planning demonstrations against the Pine Valley project and Forbes & Sehgal for weeks. I wouldn't call them 'friends', but they hate the Police and they hate A.U. Sehgal, who's a phony Environmentalist.\"\n\n\"Well,\" Cindy said, \"you can give them something to demonstrate about. Give us Brandon, and Pine Valley will become a someone's long, national nightmare. We can give you Witness Protection, and you'll be free of Brandon.\"\n\n\"I don't know.\" said Ferris. \"You might be shocked just how well-connected Forbes & Sehgal is. Legislators in the U.S. Congress, the U.S. EPA, the State Legislature, and on down the line. Besides...\" he finished, \"I'm not sure the Engineers are guilty. They were given the bad data.\"\n\n\"Steinhart must've known.\" Cindy said. \"I don't believe in coincidences like him dying in a plane crash at such a critical moment in time.\"\n\n\"They may have done to him what they want to do to me and Cliff Ewing, and just eliminated him as a precaution.\" said Ferris. \"But I think my best chances would be to let the PCGW help me vanish.\"\n\n\"Mr. Ferris,\" Cindy said, \"you know the Detective I worked with, the one that truly solved your wife's murder?\"\n\n\"Yeah, Detective Troy.\" said Ferris. \"Not Commander Troy, though. The PCGW hates him.\"\n\n\"No, not the Iron Crowbar.\" Cindy said. \"But Detective Troy got Justice for Linda. And if you don't consider being in her debt for that, then maybe it'll help when I tell you that Brandon tried to have Detective Troy's granddaughter murdered today. He'll stop at nothing, including killing children... and letting other children be be exposed to the contaminated water of Pine Valley. Only you can stop him, Mr. Ferris. Only you, right now.\"\n\nFerris thought about it a long time. Then he said \"What are you offering, and what do you need?\"\n\nPart 19 - Crack In The Armor\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the lovely redheaded reporterette at 7:00am, Wednesday, March 29th, from in front of the State Office Building. \"Channel Two News has learned that Forbes Environmental National Laboratories Manager Paul Brandon will be charged with conspiracy to commit murder in the case of Jimmy Shell, who was shot and killed in his Midtown apartment!\"\n\nBettina went on: \"Channel Two News has learned that Robert Ferris, Chief Chemist of Forbes Environmental National Laboratories, has turned State's evidence in exchange for witness protection and immunity from prosecution. Robert Ferris is also the husband of the late Linda Ferris, who was murdered by Gordon Snow shortly after the PCGW demonstrations against Crown Chemicals several years ago.\"\n\n\"Mr. Ferris turned over documentation that Brandon conspired to hide contamination at the Pine Valley development project.\" Bettina went on. \"Thomas P. Cook, Town & County Councilman and a partner in the development firm, says that M&C Development Corp. was unaware of any contamination, and have filed suit against Forbes & Sehgal Engineering for the devastating misreporting of contamination on the Pine Valley site.\"\n\n\"In the case of Jimmy Shell,\" said Bettina, \"Robert Ferris also provided recordings of Paul Brandon making phone calls to hire a professional killer to murder Shell. This killer, known as 'Good Time Charlie', was himself found murdered in our County yesterday. Sources tell Channel Two News that the killer may have been targeting the family of Commander Donald Troy, who led the investigation of Shell's murder, and also ran the samples that showed the Pine Valley contamination, despite death threats. The TCPD does not know who killed 'Good Time Charlie' as of this time.\"\n\n\"And finally,\" Bettina said, \"Governor Val Jared, after signing the Budget bill into law, ordered a full investigation into the State EPA after it was revealed that one SEPA officer took bribes from Paul Brandon and FENL, and reported Jimmy Shell's whistleblowing actions to the company. The SEPA official has accepted a plea bargain in exchange for information and testimony in the Brandon case. Democrats are accusing Governor Jared of outrageously using this unfortunate incident to destroy the credibility of the State EPA; and Jared is already firing back, saying the State EPA has already lost its credibility...\"\n\n* * * * * * * * * * * * * * * *\n\nA very tired Cindy Ross was in my office after the coffee klatch. She'd been up all night helping the FBI and SBI process Robert Ferris in the City, and drove back home in the Black Beauty at speeds upon which even the German Autobahn would frown. It was most very good that her sister was a Nextdoor County Police Lieutenant.\n\n\"It occurred to me on the way home,\" Cindy said, \"that Robert Ferris had this trump card all along, and only pretended to be persuaded to turn State's evidence. He'd bugged Paul Brandon's phone for at least a couple of years, and had some good tapes of Brandon assuring various people of results they wanted to see. He just happened to get Brandon's call to arrange Jimmy Shell's murder. The FBI then got the bank records showing where Brandon paid for the hit. A hundred thousand dollars from a secret bank account. Damn.\"\n\n\"You did a wonderful job getting Ferris to turn.\" I said. \"Truly outstanding.\"\n\n\"It's funny...\" Cindy said, musing, \"when I was recovering and you had grounded me, I was more than a little ticked at you, even though you meant well. And that led to your mother and I solving Linda Ferris's murder, and that has now led to her husband paying it forward and giving us Paul Brandon on a spit. Funny how that works.\"\n\n\"Yep. Karma is a mighty thing.\" I said. \"And speaking of karma, it will be interesting to see what Forbes & Sehgal Engineering do. They're saying they were duped by Brandon. Their lawyers are pinning it all on him. Me, I'm not so sure...\"",
        "\"You know something? They may be right.\" Cindy replied. \"Robert Ferris said several times that he had no idea if anyone outside FENL really knew what was going on. He didn't know if Steinhart had his plane crashed on him because he knew something, or out of fear he might've been a whistleblower, or just as a distraction... what?\" She asked upon seeing me shake my head vigorously.\n\n\"We'll probably never prove it,\" I said, \"but causing a plane crash is a big-time operation. Westboro could've done it. Laura did do it, with dead bodies on the plane, to smoke out Wargrave, which coincidentally led to me discovering who Westboro was. But my point is that it takes serious power to make that happen... Government power.\"\n\n\"You mean... U.S. Senator Russell?\" asked Cindy, catching on.\n\n\"That's my guess.\" I said. \"Steinhart was Russell's marked card in the company. When Shell was murdered and the links of the chain began forging, Russell or one or more of his people panicked, and they took the precaution of wiping out Steinhart.\"\n\n\"Wow, this is deep.\" said Cindy. \"That reminds me of the scene in The Godfather, when Kate said that Senators don't kill people, and Michael Corleone just looks at her and says 'Now who's being naive?'.\"\n\nI chuckled as Cindy continued: \"This makes Superior Bloodlines look tame by comparison. By the way, any idea who murdered Good Time Charlie?\"\n\nI stared at my cousin. \"Isn't it obvious? Am I really the only one seeing it?\" Cindy just looked back at me, total confusion on her ruggedly pretty features.\n\n\"Okay,\" I said, \"you're excused from the Chief's big Wednesday meeting. Get a few hours of sleep in your locked office.\"\n\n* * * * * * * * * * * * * * * *\n\n12:00noon, Wednesday, March 29th. At the luxurious home of Paul Brandon, the Lab Manager of Forbes Environmental National Laboratories was getting bad news from his lawyer.\n\n\"As of now,\" said the lawyer, handing Brandon his card, \"Forbes & Sehgal is no longer furnishing your attorneys, including me. Out of a sense of honesty and fairness, I will turn over all I have on your case to your personal attorney once you've hired one; give him or her that card to contact me.\"\n\n\"What's this about?\" asked Brandon. The lawyer gave him a look that connoted watching a condemned person finally die.\n\n\"You'll be finding out shortly.\" said the lawyer. \"Good day, Mr. Brandon... and good luck.\"\n\nFive minutes after the attorney left, I entered the house with Detective Sapper Warren of the City Police and SBI Agent Norm Chow. \"Mr. Brandon,\" I said, handing him a piece of folded paper, \"this is a warrant for your arrest, for conspiracy to commit murder, that being the murder of Jimmy Shell, a human being. Your bail is revoked. Stand up.\"\n\nFinally, that perma-grin was wiped off Brandon's face. He stood up and I stepped behind him to affix handcuffs. \"You have the right to remain silent...\" I said, beginning the ritual.\n\nA moment later, Brandon was walked through a crush of reporters and their cameras, with me guiding him. People who knew me well said that there was a hint of a smile on Your Iron Crowbar's face as I led the bastard on his well-publicized perp walk which would be televised into the homes of the People of the State...\n\nPart 20 - Solution\n\nFriday, March 31st. The back room of the Midtown Luigi's Restaurant was reserved by me for the victory dinner. From the TCPD, I invited Cindy, Joanne Warner, Theo Washington, and Chief Moynahan. I also invited Chief Griswold. From Midtown PD came Chief Frank Soltis and Detectives Steve Ruger and Kimberly Wesson. David Krueger had been invited, but had sent regrets. I also invited City Detective Sapper Warren, but he could not come down.\n\nFrom the SBI came Norm Chow and Ted Orosco, and SBI Director Conlan came and offered to split the entire bill with me, which I accepted. From the FBI came Jack Muscone and Martin Nash, though I'd invited his entire team and also Julius Jefferson. Tanya Perlman came with Jack, as well.\n\nAs we ate, we had our first surprise guest. The owner of Luigi's, State Senator Jimmy 'Coffin' Cerone, came in, congratulated us on a successful case, and asked how the food and service were. Everyone told him that the lasagna was every bit as good as the Iron Crowbar had promised them it would be, which pleased Cerone greatly.\n\n\"There was once a time,\" Cerone said, \"when this many police officers in my restaurant would worry me very much.\" We all laughed. \"Now... I just worry about other politicians. Please do enjoy the food, and the dessert is on the house.\"\n\nAfter Cerone left, Cindy executed her part of the tradition by tapping spoon to glass. \"It is time now,\" she said, \"for the Iron Crowbar to explain the links in the chain that have now imprisoned Paul Brandon, and may yet wrap around others.\" There was general acclaim as I stood up.\n\n\"First of all,\" I said, \"I feel very fortunate and grateful to have had the opportunity to work with the finest law enforcement officers in this State, from Detectives Ruger and Wesson in Midtown, and their Chief of Police, Frank Soltis; their mentor and now our Police Chief, Sean Moynahan; to our City Police friends such as Detective Warren; to some very good SBI Agents in Norm Chow and Ted Orosco; our great Crime Lab Director, Lieutenant Perlman; and of course to our friends in the FBI, led by Special Agent in Charge Jack Muscone. And saving the best for last, I could have no better partner than Captain Cindy Ross, and no better mentor than Chief Griswold.\" \n\nEveryone cheered, then Chief Griswold growled: \"And all of them now know what I've known all along... that the Iron Crowbar is the very best there is.\" There was applause, which I accepted for a moment before moving along.\n\n\"I could not have succeeded in this case without all of you.\" I said. \"So, about this case... I do think it was pretty straightforward, and we simply followed the clues as they came to us. The Midtown PD did a great job processing the crime scene of Jimmy Shell's murder. We naturally followed the path to his place of work, where we confiscated a lot of lab data. A few small points did stand out, and Paul Brandon immediately made himself a suspect in my eyes by repeated lies when he didn't need to lie.\" \n\n\"But only the Chemistry major among us, that being you, sir, saw those things.\" said Joanne Warner.\n\n\"True,\" I said, \"but I think you guys would've started seeing the patterns. I just saved us a little bit of time. Anyway, our actions were helped by Forbes Environmental National Laboratories packing up and leaving in the middle of the night like the Baltimore Colts when moving to Indianapolis. And then the hostile reception at Pine Valley.\"\n\n\"We also got Jimmy Shell's phone records,\" I continued, \"which pointed us to the State EPA and to his attorney. This got us some evidence against Brandon, and also provided some motive to the murder of Shell.\"\n\n\"We followed up by going the City labs of FENL, where we found some anomalies in their finances as well as some selectively spotty record-keeping.\" I said. \"And at this point we had some huge neon signs pointing right at Paul Brandon.\"\n\n\"Either Brandon or people around him panicked.\" I continued. \"They tried to 'drain the swamp', so to speak, the swamp being the Bexall Chemicals plant that was contaminating the Pine Valley land and water. They tried not giving us all the phone records, records that would show ties between the dirty State EPA official and Paul Brandon... and folks, that bespeaks some serious power behind the throne to be able to do that.\"\n\nI drove on: \"So after taking down the tanker trucks before they could pour the chemicals into the State Line river and possibly kill all the inhabitants of Columbus, we got warrants to re-test the Pine Valley soil and water. The Mob backers of the project knew the game was up, and tried very desperate measures to stop the re-testing. Their efforts have failed, including an attempt to murder my child and/or my wife, and there will be payback for that one. Okay, what are your questions?\"\n\n\"Mai Ling and Chris Maple.\" said Kimberly Wesson. \"They're still missing?\"\n\n\"Mai Ling and her husband packed up and left in a big-time hurry.\" I said. \"I believe they fled the State, if not the country. I would not be surprised if Mai Ling had knowledge of what was going on, whether as part of the scheme or figuring it out on her own. She obviously had a plan for her and her husband to get out in case something went wrong. After Jimmy Shell came up dead and the call came to shut down the annex, Mai Ling decided to do her own thing for her and her family's survival.\"\n\n\"Chris Maple... \"I said. \"Well, his bank accounts showed some additional monies coming in. I believe he not only knew, he was part of the scheme. His apartment was left virtually untouched; in other words, I fear that he did not just vanish on his own but was 'disappeared' by criminal elements.\"\n\nJack Muscone asked \"Was this just Paul Brandon? Or were higher-ups involved?\"\n\n\"That's a good question.\" I said. \"Forbes & Sehgal are saying they were duped by Brandon, and are working hard to pin it all on him... and they may succeed. The main link between them and the Pine Valley project was Fred Steinhart, may he rest in peace. With him dead, we're hard pressed to find any solid proof that the engineering company had knowledge.\"\n\n\"M&C Developers have already sued Forbes & Sehgal.\" I said. \"Probably M&C will at least be made whole by Forbes & Sehgal's liability insurance, which they'll have to pay regardless of whether F&S is at fault. Then it'll get hashed out over years in the Courts.\"\n\n\"My own personal theory, based upon my own observations and deductions but currently lacking proof, is that Jeremy Forbes did not know, and that for the most part the Engineering company did not know. But I have some suspicions about A.U. Sehgal himself.\"\n\nCindy Ross spoke up, and I noticed a wee tad of enthusiasm in her voice as she asked \"What about the attack on Keith Rollins? Any idea what happened there, and if those perps will ever be caught?\"\n\n\"Looks to me like the attempt to kill Rollins was aborted.\" I replied. \"Maybe someone came up on the scene before the perp or perps could finish the job. Most very lucky for Mr. Rollins... and lucky for us, as Rollins came correct and made a plea deal with the State. His testimony is devastating to Paul Brandon. Might even get Brandon a syringe at Jacksonville, though I won't hold my breath on that.\"\n\n\"Last, but not least,\" I said, \"Captain Ross showed her sterling abilities in crime solving by getting Robert Ferris to turn State's Evidence against Brandon. That was the final nail in Brandon's coffin when it came to Forbes & Sehgal backing him. Okay, any other questions?\"\n\n\"I have one question.\" said a voice at the doorway. We all turned and were shocked to see Val Jared, Governor of the State, standing there. He came in, followed by a couple of aids and security people. \"And that question is: may I join your party for just a moment?\"\n\n\"About time you had a little fun outside that Governor's Mansion, Val!\" said Chief Griswold, his mustaches twitching merrily. \"Get on in here!\"\n\n\"Thanks, Grizz.\" said Jared. \"I just came by to express my appreciation to all of you for an outstanding job in rooting out some serious corruption in our State offices, as well as preventing a lot of people from possibly being harmed by the environmental hazardous waste infesting the Pine Valley project. You all deserve recognition, but there are two people I especially want to honor tonight.\"\n\nWith that, the Governor read two proclamations, one for me and one for Cindy. Along with the proclamations went Citations of Merit, State-level awards issued by the Chief Executive of the State. Those came with ribbons that we could wear on our uniforms with our other ribbons. Everyone applauded as the photographer got pictures of the Governor giving us the Citations and ribbons.\n\nAnd it was no great feat of observation and deduction to see the face of a certain retired-Chief-turned-fisherman and know that he was behind the actions of his good friend, the Governor of Our Great State. \n\n\"So, Chief,\" I said to Chief Griswold as I brought him a drink after eating dessert, \"I get the feeling that some strings were pulled to get the Governor to give us those awards. And I don't mean fishing line.\"\n\n\"Har!\" barked the Chief merrily. \"Yes, I might've made a suggestion or two, but the Governor was really happy in his own right when you busted Forbes & Sehgal and the State EPA like you did. Those are really huge wins for the Governor against his political enemies. Val and A.U. Sehgal hate each other with a deep and abiding passion, so don't be surprised if the SBI is asked to continue to pursue Sehgal...\"\n\n* * * * * * * * * * * * * * * *\n\nAfter the Governor left and the free desserts were brought in, we were seated in clumps and talking amongst ourselves.\n\n\"One thing that bothers me about all this.\" said Jack Muscone, who was sitting by me. \"Why didn't they just move on once they found the contamination? Why try to hide it and build that site? They'd be found out, eventually.\"\n\n\"Like Don was saying earlier,\" Cindy said, \"perhaps they didn't know.\"\n\n\"Well, let me try the question from another angle.\" said Muscone. \"If Brandon acted alone, why do this? Where is his real profit in hiding the truth? Why not just tell the truth, and be the lab for the developers somewhere else? Ditto that for the Engineering Company if theyknew.\"\n\n\"I get where you're coming from.\" I said. \"Once they started building and the money committed, the motive is clear. But why jump into that briar patch in the first place? you are asking.\"\n\n\"You're reading my mind again.\" quipped Muscone, which made Tanya grin her beautiful, cherubic grin.\n\n\"They had to have not known.\" said Frank Soltis. \"Because you're right: why take the risk of getting caught if you know? Not to mention the possibility of children dying or becoming very sick.\"\n\n\"Well,\" I said, \"from what I gather, this was mainly to be a retirement village. Old people getting sick and dying off wouldn't be as quickly noticed. But you're right... any children that did live there and were affected... wow, that'd be ugly...\"\n\n\"All the more reason the Governor was right to reward you for solving this.\" said Tanya. But I was already in a reverie...\n\n\"I dunno.\" said Muscone. \"I don't have proof, but my instincts are that someone knew and went ahead with this, anyway. They didn't care about the contamination; they had Brandon go through the cover-up. My guess is the Mob... they invest their money, pull their money out when the homes are being sold, and they're running away while that community sits on a contaminated wasteland. And that's what it was becoming... Martin and I visited the land on our way down here, and you can already see some of the pine trees are getting sickly and dying.\"\n\n\"That's why they build golf courses on landfills and other properties like that.\" I said. \"They can put down plants that absorb the bad chemicals, even thrive off them. They can use the water for irrigation, and those plants suck out the bad stuff. But that still would not clean the place up enough to be safe.\"\n\n\"So, Jack,\" I said, \"to answer your question... I'm not sure why they chose to go ahead with Pine Valley if they knew. As to Brandon, he's a filthy slug, and I cannot tell you how happy I was to wipe that grin off that arrogant bastard's face when I put the cuffs on him...\"\n\nPart 21 - Epilogue\n\nIt was very late, after midnight, when we arrived home and went to The Cabin, where Callie, Molly, Laura and the kids and dogs were all staying for the weekend. I asked Cindy if she wanted a drink before bed, and she surprised me by saying to bring the drinks out to the deck.\n\nIt was still cold this time of year at night, and Cindy had a blanket which she wrapped around us as she sat next to me on the metal mesh loveseat. As we toasted our case success and sipped our drinks, I noticed the headlight of a train coming out of the western horizon towards the twinkling lights of the Town.\n\n\"There was one other thing I wanted to ask you about.\" said Cindy. \"After talking with Theo, I went to the site where Keith Rollins's apartment was attacked. Very interesting... verrrry interesting.\"\n\n\u2028\"What's that?\" I asked, my face totally passive.\n\n\"Well,\" Cindy said, \"the Midtown Police reported that no one in the apartments on the other side of the creek heard a gunshot or loud noise around their buildings. Some did say they thought they heard a door slam or a backfire around Rollins's apartment complex.\"\n\n\"In his backyard?\" I asked.\n\n\"It'd have to be.\" said Cindy. \"So the window was shot out, then another shot fired. Now one would think the perp would fire the shot to break the window, then go up to the window and fire inside and kill Rollins.\"\n\n\"Yes, one would think.\" I said.\n\n\"But that didn't happen.\" said Cindy. \"Just a second shot... from the backyard, and immediately, almost as if...\" She paused, letting her words hang in the air.\n\n\"As if?\" I asked, not playing.\n\n\"As if the shooter wasn't even trying.\" Cindy said. \"I know this world is going to hell in a handbasket, but it's really bad when the Mobsters start doing things that half-assed.\"\n\n\"They should go into the restaurant business and make great lasagna.\" I said.\n\n\"No doubt.\" Cindy said, then peered at me as she said \"Oh, I also forgot to ask... that same night, after Eddy the Bounty Hunter told us the trucks were at Bexall, he didn't just hang around. Where do you think he might have gone?\"\n\n\"Why... I'm sure he found something exciting to do.\" I replied. \"He's in good with all the hot ladies... just ask Callie.\"\n\n\"Mmm hmm.\" said Cindy. \"Mighty lucky for Rollins that he was not killed, wouldn't you say?\"\n\n\"Even luckier for us, in that Rollins turned himself in, and made a plea deal and handed us Brandon on a platter.\" I replied.\n\nCindy just stared at me for a second, then turned to look at the Town and snuggled into me for warmth against the chill of the night air. I kept my face passive, but was inwardly elated that she was seeing what Theo hadn't. If something ever did happen to me, I was confident that Cindy could lead the Detectives in defeating criminals in our fair Town & County.\n\nAnd that's also why I took Theo down to Midtown that day instead of Cindy. Sometimes she gets a righteous streak up her back, which I respect. In this case, she had 'concerns' about me not coloring within the lines. I could see that she could see that I was 'into' it and really wanted to bust Brandon's balls.\n\nYes, I thought to myself, that bastard Brandon's perma-sneer really, really ticked me off. And yes, in the spirit of 'Blood Orange', I am a very, very tricky Iron Crowbar. Very tricky, indeed... \n\nFinis."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama",
        "iron crowbar"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/environmental-hazards-ch-04"
}