{
    "title": "Thorne Ch. 07",
    "pages": [
        "\"You want to do what?\" Thorne asked not sure if he had heard Ethan right.\n\n\"Think about it,\" Ethan said. \"You said it yourself. Olivia Saunders may not like us, but she doesn't want to kill anyone either. What if we were to make that work to our advantage? We could with her help make an agreement with the hunters. We have a common enemy-the rogues. Between us and the hunters we could get the problem under control.\"\n\n\"Do you realize what you're saying?\" Thorne asked. \"Not only are you talking about trusting our enemies, you're talking about assassinating the head of the hunter organization in order to put Olivia into place.\"\n\n\"I understand that,\" Ethan replied. \"But I've been thinking about trying to make peace with them for a while. I never acted on it because Rufus would never go for it. He's crazy enough to sacrifice his entire organization in order to try to kill us off.\"\n\n\"I see another issue,\" Thorne said after a few minutes. \"Not everyone on either side is going to go for this. The hunters will split ranks as will we. Both sides have lost friends and loved ones over the centuries and memories on both sides are long. The other issue is Olivia. What if she doesn't want to do this? She may be afraid of her father and she may even hate him, but does she hate him enough to help us kill him?\"\n\n\"You haven't said no,\" Ethan remarked.\n\n\"I never said that it wasn't a valid idea,\" Thorne replied. \"I just don't know if it's possible. We've been after each other for centuries and to suggest that we work together?\"\n\n\"That sounds kind of familiar doesn't it?\" Ethan asked. \"We're proof that it can be done.\"\n\n\"We're a completely different situation,\" Thorne replied. \"Our families started out as friends and allies.\"\n\n\"True, but Thorne; we aren't without our allies in the hunter ranks. I expect that there will be some dissension. I also expect that those vampires and other species who don't agree will go off and form their own group just as the hunters will. But let me ask you this, isn't it worth a shot? We could potentially save hundreds if not thousands of lives.\"\n\n\"There's still the issue of Olivia,\" Thorne said. \"If she refuses, then what? And by the way, what in the hell are we going to do with her?\"\n\n\"I suggest that we see what we can find out about her,\" Ethan said. \"Who do you have watching her?\"\n\n\"One of my female guards,\" Thorne replied. \"No harm will come to her as long as she doesn't do anything stupid. I would like to suggest that we don't say anything about this until we've discussed it some more and talked to Olivia.\"\n\n\"I agree... Thorne, I know that this isn't the time to bring this up; but I want you to know that my family didn't betray yours.\"\n\n\"You're right,\" Thorne said. \"This isn't the time to talk about that. How many teams are we going to have?\"\n\n****\n\n\"William,\" Rufus said calmly as he looked to see how far he was away from his weapons. \"Where is the rest of your family?\"\n\n\"Scattered,\" William lied. \"I see that you've forgotten your cardinal rule,\" he said with a small smile. \"Anticipate, but don't worry. I haven't returned to do you harm.\"\n\n\"Why are you here?\" Rufus asked.\n\n\"Let's just say that I believe in fulfilling my obligations,\" William replied.\n\n\"Let me make sure that I understand this,\" Caleb said, \"You really expect us to believe that you came here out of a sense of obligation?\"\n\nWilliam looked at Caleb with disdain for several seconds before replying.\n\n\"I don't really care what you believe and I don't answer to you.\"\n\n\"No, but you will,\" Caleb replied.\n\nWilliam gave Caleb an icy smile and showed a hint of his fangs. He had already decided that Caleb was going home in a body bag. He turned his attention back to Rufus who had inched toward his weapons. William sighed, but didn't move. If he had wanted to stop Rufus, there was nothing that he or Caleb could have done to stop him. He knew how the game was played. He dropped his attitude a notch when Rufus reached his weapons. He wanted Rufus to think that he was afraid of him. It would lull the hunter into a false sense of security.\n\nRufus reached his bag and pulled out the gun that was loaded with wooden bullets soaked in holy water. William almost laughed, but instead held his hands up in surrender. After all of this time, Rufus didn't know that the holy water had no effect on vampires unless they were rogue. The wooden bullets would hurt, but wouldn't kill unless it was shot directly into the heart. \n\nWilliam sensed Caleb behind him, but didn't move. He would be gone before either man could move.\n\n\"We're wasting time,\" he said. \"The longer we stand here, the longer they have to either turn or kill her if they haven't already.\" Personally, he had no problem with them turning Olivia; killing her was an entirely different matter. The next question was, had they already killed her?\n\n\"She isn't dead,\" Rufus said aiming the gun at him. \"More than likely they've turned her and already fucked her hoping to knock her up.\"\n\nWilliam was always amazed at the ignorance Rufus showed about his kind. He never corrected Rufus's misinformation because it would have been pointless- Rufus hated to be proven wrong and- it suited his needs. As he listened too Rufus talk, William decided that he would share a body bag with Caleb. He fully understood why Rufus wanted to find Olivia. If she hadn't been turned, he was going to make her marry Caleb. If she had been turned, he would have her killed. William doubted that the man could do it himself. He had noticed the almost imperceptible trembling in Rufus's hands as he pointed the gun at him.\n\nCaleb on the other hand was much smarter than Rufus. That alone made him more dangerous. He would take the time to learn about the vampire race and separate fact from fiction. William was sure that he had already begun to do that, but didn't say anything to Rufus. To do so would jeopardize his stepping into the role of the leader of the hunters. William already knew how cruel Caleb could be and that he followed Rufus's politics regarding vampires and other species to the letter. William pushed the thoughts of the men's demise aside and concentrated on the task at hand.\n\n\"I'll ask you once again,\" Rufus said. \"Where is your family?\"\n\n\"As I told you,\" William said patiently, \"We scattered. I don't know where they went and to be honest, I don't care. I have no use for those who don't keep their end of an agreement.\"\n\n\"What were you doing at Blackwell's club?\" Caleb asked from behind him.\n\n\"We didn't know that whose club it was,\" William replied. \"My father did the research to see if it would be an acceptable place to go. He neglected to check to see who owned it. Olivia didn't realize it until she actually saw the owner. To be fair, even if my father had checked to see who owned the club, the name would have meant nothing to him.\"\n\n\"You're lying,\" Caleb hissed.\n\n\"I repeat,\" William said, \"I don't give a fuck about what you believe or don't believe. The fact of the matter is that I'm here. Just as I don't care what you think, neither do I care where my family is.\"\n\n\"Shut up Caleb,\" Rufus said lowering the gun. \"The one thing William isn't is a liar. If I had to trust any of them, he would be the one. And he's right, he came back.\"\n\n\"I don't trust him,\" Caleb said. \"There's more to it than he's saying.\"\n\n\"Please tell me what that would be,\" William said as he slowly turned around to face Caleb. \"Is it because I am vampire that you think that I have no sense of honor or integrity or is it because this is the way that you are?\"\n\nHe fixed Caleb with a hard glare letting him know that he wasn't intimidated by him and waited for an answer. When none came, he turned back to Rufus.\n\n\"What happened at the club?\" Rufus asked. \n\nWilliam told Rufus how they had gone to the club for an evening out, but left out the fact that Olivia had gone out alone earlier in the day.\n\n\"So let me get this straight,\" Rufus said. \"You all went out to this club that happened to be owned by Thorne Blackwell. While you were there a human woman was murdered.\"\n\n\"Yes.\"\n\n\"You couldn't leave the club because the human police had been called.\"\n\n\"Yes.\"\n\n\"Do you know what happened to the woman?\" Caleb asked.\n\n\"They say that she was killed by a vampire,\" William replied with a shrug, \"but I don't know that to be true.\"\n\n\"And you left Olivia there?\" Caleb asked coldly.\n\n\"I had no choice!\" William snapped. \"What purpose would it have served for me to be captured as well? They would have tortured me for any information that I had and I'll tell you something, I would have given you up in a fucking heartbeat if it would have saved my life- my obligations don't include dying for you. But as you can see, I escaped and came back. Are we going to continue wasting time or are we going to look for Olivia?\"\n\n\"Do you have any idea of where Blackwell took her?\" Rufus asked.\n\n\"No,\" William replied. \"I spent part of the night looking for her before I realized that I couldn't find her alone.\"\n\n\"What is she to you?\" Caleb asked. \"You could be long gone by now.\"\n\n\"As I said, I made a bargain with Mr. Saunders. If it weren't for that, Olivia could burn in hell for all I care. Now, if he wants to release me from that bargain...\"\n\n\"I would kill your blood drinking ass first!\" Rufus said interrupting him.\n\n\"Of course you would,\" William said smoothly. \"Shall we begin our search?\"\n\n****\n\nBarb lay on the bed and stared up at the ceiling. She ran the entire conversation with her sisters through her head and still couldn't believe that Kevyn and Juliette had walked out on her. She had a harder time believing that her nieces didn't like her. The saying 'skating on thin ice' came to mind. That had been one of her mother's favorite sayings when they were getting out of hand.\n\nThe question that she asked herself was, was she as bad as people made her out to be? The second question was why did Wanda's answer to her question disturb her so much? She wondered if Victor felt the same way. She wasn't sure that she wanted to know the answer. Then there was Celeste touching her. Was it possible that she really knew what the baby was thinking? \n\nShe turned onto her side and closed her eyes. She could almost feel Celeste's light touch on her stomach. For the first time she began to wonder if some of what Kevyn and the others said was right. She thought back to the night that Thorne and Allen had used her. When she called for help, they came and the first question they asked was if she was alright.\n\n\"It doesn't feel good does it?\" Adrianna asked from the doorway. \"My family didn't speak to me for months after my rescue. Your family is bending over backwards for you and you act like an idiot. All you have to do is give a little. Is that so hard?\"\n\n\"They aren't going anywhere,\" Barb said.\n\n\"I'm not so sure about that\" Adrianna said. \"I see it in their eyes. They're tired of you and your attitude. Hell, I even see it in the kids. No one likes you and you don't do anything to change it. If you aren't careful, you're going to end up alone.\"\n\nAdrianna walked away leaving Barb alone. A few minutes later, Leon was standing in the doorway.\n\n\"Not now, I've already heard that I'm a bitch,\" Barb said without looking at him.\n\n\"Actually, I came to check on you. Louise told me about your- meeting. Can I come in?\"\n\n\"Sure,\" Barb said after a brief hesitation. \"You might as well have your turn.\"\n\nLeon walked in and sat on the bed. Neither of them spoke for a long time.\n\n\"Leon, I didn't and don't want this.\" Barb said after a few minutes. \"I never wanted the babies and the house with the white picket fence. I didn't and don't want the responsibility. All I ever wanted was to be able not to worry about anything. I hate this place and I wish to god that I had never come here.\"\n\n\"Well, you are here and this is the situation. What you do with it is up to you.\"\n\n\"Can Celeste really do what Louise says she can?\"\n\n\"Yes and so can Louise and me. I'm not nearly as strong as they are, but it's true. Nathan is like us too. He's stronger than I am because of Louise.\"\n\n\"Juliette said that she would take the baby,\" Barb said looking away.\n\n\"I heard, but Barb; I have a question for you and it's going to piss you off. Do you really believe that you were abused? I mean did something happen that we don't know about?\"\n\n\"What? Are you asking if... NO!\"\n\n\"Alright,\" Leon said holding up his hands in surrender. \"I'm just trying to understand why you think that you were abused-\"\n\n\"We all were,\" Barb broke in. \"You just don't see or remember it right.\"\n\n\"Let me tell you what I remember,\" Leon said softly. \"I remember nights were mom didn't eat so that we would have more on our plates. I remember mom and dad not buying anything for themselves so that we would have what we needed. Were they top of the line things? No, but we were covered. I also remember dad working two or three jobs at a time to keep a roof over our heads and he still made time to sit with us. I also remember a peach prom dress. Did you know that dad made arrangements on the electric bill to get that dress for you? Oh wait- that's abuse isn't it? I also remember them as the people who took me back into their home after I fucked up. What I'm saying is that none of us with the exception of you thinks that we were abused. I don't get it so explain it to me. Explain how sacrificing for us and loving us equals abuse. Tell me what they could have done differently.\"\n\n\"Mom could have gotten a job doing something!\"\n\n\"Barb, do you not remember that there were babies at home? Who would have taken care of them? What could she have done? She had a tenth grade education-\"\n\n\"And whose fault was that?\" Barb broke in? \"She didn't have to have the last of us! She could have gotten a job instead!\"\n\nLeon stared at her flabbergasted.\n\n\"Do you hate Louise that much? Do you hate your family that much?\" he asked in a hushed voice. \"Louise seems to believe that somewhere under that bitchy exterior a good person exists. I used to think that too, but now I'm not so sure. You talk about being abused; but you know what? We're the ones being abused. Mom and dad were the ones being abused by your mouth and attitude. I had really hoped that you would at least begin to see the light, but I can see that it hasn't happened yet. What I want to know is where this hatred and selfishness came from and what it will take to change things. I know that Juliette offered to take the baby. Dina and I will take him too. Any of us will take him until you get your shit together and realize that the world doesn't revolve around you and your need for money. By the way, now that you've got it; is it what you thought it would be?\"\n\n\"So I guess you're going to walk out on me too?\" Barb asked ignoring all of the points that Leon made.\n\n\"You know, I'm thinking about it; but I think I'll stay and I'll tell you why. No matter what you are or how you act, you're still my sister. You're thinking is fucked up and you're wrong about mom and dad. I also think that you can be a better person if you would let yourself. I want that baby to feel something other than your anger.\"\n\n\"Kevyn and Juliette walked out,\" Barb said.\n\n\"That was out of exasperation,\" Leon said. \"They didn't know what else to, do but they're around. That baby is going to feel loved even if it isn't from you.\"\n\n\"Why are you just talking to me?\" Barb asked. \"Thorne is being a bastard as much as I'm being the so called bitch.\"\n\n\"True, but I have the feeling that he at least cares about the baby,\" Leon replied. \"And just like I will hurt anyone who hurts any of you, I'll hurt anyone that hurts that baby --and that includes you. Do you get my meaning?\"\n\nBarb blinked not believing that her own brother would threaten her.\n\n\"I'm going to talk to Thorne next,\" Leon said when she didn't respond. \"I don't give a rat's ass about not getting involved in another couple's mating issues. If it were just the two of you, I'd stay out of it; but my nephew is involved. I suggest that the both of you grow the hell up and come to some kind of understanding if only for the sake of that kid.\"\n\n\"He said that it was my fault that we were together-\"\n\n\"No he didn't,\" Leon said cutting her off. \"That's what you want to think he said. He's owned up to his part in this- you haven't. I need to go take care of something but I think that you need to rethink some things.\"\n\nLeon stood up and left before Barb could say anything. After he left, Barb lay back on the bed and looked down at her stomach. She was shocked to see a gentle swell that hadn't been there the week before. Soon she wouldn't be able to deny the existence of her pregnancy. She closed her eyes and felt hot tears trickle down the side of her face.\n\n**\n\nAdrianna stood in the sitting room outside of the door listening. She wondered what it was that Barb was really afraid of. It was obvious that she really didn't want the life that she now found herself in, but there had to be more to it than that.\n\nShe vanished outside of the bedroom when she sensed Thorne approaching and stopped him before he went into the bedroom.\n\n\"I know that you want everyone at the meeting, but she's had a rough few hours. I'll go in her place and fill her in later.\"\n\n\"Is she alright?\" Thorne asked.\n\n\"I think so and I believe that the baby is alright too,\" Adrianna replied.\n\n\"Fine,\" Thorne said after a few seconds and walked away. They really needed to talk and soon.\n\nThere was some time left before the meeting so he went back to his office to make a few phone calls. The club was still closed and would stay that way until the hunters had been dealt with. He sat in his chair and for the first time wondered if there was something about the split between the Blackwell's and the Sinclaires that he didn't know about. What he believed and what he was seeing wasn't adding up.\n\nThe Sinclaires didn't have to warn him, but yet they did. He had the feeling that even if Barb hadn't been in the picture, they still would have reached out to him. When Ethan told him that his family hadn't betrayed his; he wasn't lying. He was telling the truth as he knew it. When Ethan said that he wanted their families to be friends again, that had been an honest sentiment. Then there was Noel who hadn't suffered any headaches in the presence of the Sinclaires. That had to mean something; but what?\n\nJust as he was about to pick up the phone, there was a tap on his door.\n\n\"Enter,\" he called out.\n\nLeon walked in and sat down.\n\n\"We're still forming the teams if that's what you're here about\" Thorne said.\n\n\"That's not what I'm here about,\" Leon said. \"I'm here about what's going on between you and my sister. Before you say it, I'm aware about the taboo about not interfering with mates and if it was just you and her, I wouldn't be sitting here. There's a baby involved and you two need to grow up and get your damned act together.\"\n\nThorne assessed Leon with cool green eyes and had to admit that he liked him and the way that he stood up for his family.\n\n\"Now isn't-\"\n\n\"Yes it is,\" Leon interrupted. \"We still have to think about our mates and children no matter what else is going on. It doesn't matter how you two came to be together, but what matters is that you did. I know that my sister is difficult, but that doesn't change the fact that you're mates whether you want to be or not. In case you're interested, I just had the same talk with her. I'll also make the same offer to you as I did her. If you and she can't get your shit together, Nadine and I will take the baby. I refuse to sit by and have that child grow up in a home where he won't be loved. One final warning, like I told you when I found out that Barb was your mate; I will hurt you if anything happens to that baby. The same applies to her.\"\n\n\"Are you quite finished?\" Thorne asked his tone even.",
        "\"Did you get my meaning?\" Leon asked his eyes not leaving Thorne's.\n\n\"I got it,\" Thorne replied leaning forward. \"As you said, whatever happens between your sister and me is none of your concern unless there is abuse of some kind taking place and there isn't. While I appreciate the concern that you have for my child, no one will be raising him except Barb and me or if she chooses to leave, then I will raise him or her myself. If that were to happen, I wouldn't deny any of you access to the baby. As Ethan reminded me, we are now tied for all eternity because of the child.\"\n\n\"What's your deal?\" Leon asked. \"I know that Barb's fucked up, but what about you? What happened to you that made you such a bastard? I think I know what Barb's problem is, but you... you grew up with everything she thinks that she's ever wanted, but you aren't any happier than she is.\"\n\nThorne waited several minutes before replying.\n\n\"Money isn't everything,\" he said. \"You may have grown up poor, but did you ever question the love of your parents? Did you have to compete with parties and other people for the love and attention of your mother? Did your mother marry your father because she loved him or because of what she thought he could give her? Did she leave you in the care of others while she took lavish trips and then brought back trinkets to make up for a missed school program or birthday?\"\n\nYou've got to be fucking kidding me,\" Leon said. \"Don't tell me that you're going to say that you were abused.\"\n\n\"No, not abused- unloved,\" Thorne said. \"Your sister is like my mother. I knew what she was when she showed up at my club that night. All she cares about is finding a rich man to take care of her. That was the original reason that I chose her. Throwing the Sinclaire name in my face only sweetened the pot.\"\n\n\"Wait... this started because you hate your mother? What the fuck is wrong with you?\" Leon asked angrily. \"Why the not just swear off women or find a woman who really is a whore?\"\n\n\"You have no idea of how much I regret the choices I made that night,\" Thorne said. \"I should have let her go with your family when they came for her. I allowed my hatred of women like her and my hatred of the Sinclaires to cloud my judgment. But I can't change that now can I? All I can do is try to make the situation more tolerable. I plan to sit down with Barb after the meeting and talk with her. I have options that she can either take or leave. The bottom line is this, I don't love her and while she may have my protection; I will never love her as you love Nadine or any of the others love their mates. However, I am willing to work at an agreement that will be beneficial for both of us and our child.\"\n\n\"I don't believe this,\" Leon muttered shaking his head. \"No matter what you do, you're together. What would your options change?\"\n\n\"I won't go into that with you,\" Thorne said. \"If Barb chooses to tell you, then that's up to her- but, as you know, she has a tendency to make everything the fault of others. I urge you to think about what she tells you. You are empathic- you'll know the truth when you hear it just as you know that I haven't lied to you now.\"\n\n\"That's true,\" Leon said after a few minutes, \"But that doesn't change anything that I've told you. I will say that I appreciate the fact that you didn't try to lie or make excuses about what you did.\"\n\n\"Leon, I may be a lot of things, but I believe in taking responsibility for my actions no matter what they are. I also believe in calling things as I see them. You are an honorable man and your family is lucky to have you. Not many would face a vampire centuries older than he is and make threats-\"\n\n\"They weren't threats,\" Leon said.\n\n\"Promises then,\" Thorne amended. \"I wish that we had met under different circumstances. I will give you my word on something, no matter what Barb and I decide to do, she will never want for anything and our child will be cared for and loved even without her.\"\n\n\"I'm going to hold you to that,\" Leon said as he stood to leave.\n\n\"I expect you to,\" Thorne replied. \"But let me clarify something, your sister will be cared for as long as she does nothing to harm our child.\"\n\n\"She wouldn't-\"\n\nLeon stopped himself because suddenly, he wasn't so sure about his sister.\n\n***\n\nBarb got up to get ready for the meeting although she really didn't feel like going. If she didn't, she would never hear the end of it and all she would do was lie in bed thinking about everything that she had been told.\n\n\"You don't have to go to the meeting,\" Adrianna said from the doorway. \"I cleared it with Thorne.\"\n\n\"How'd you manage that?\" Barb asked instead of saying thank you.\n\n\"I told him that you had a rough few hours,\" Adrianna replied. \"I'm going to sit in and tell you what happened later.\"\n\n\"Oh... okay,\" Barb said sitting back down on the bed.\n\n\"You know, when someone does something for you, it's customary to thank them.\" \n\n\"What? Oh thanks,\" Barb said distractedly.\n\nAdrianna looked at her, shook her head and walked away. She didn't wish Barb on anyone.\n\nBarb lay back on the bed, picked up her laptop and began 'shopping'. Like it or not, she needed maternity clothes. She scowled when she remembered how happy Juliette had been when she found out that she was pregnant. Juliette had glowed with happiness with that and each successive pregnancy. Louise had that same glow about her. Nathan waited on her hand and foot to the point where Louise was annoyed, but tried not to show it. Barb knew that when and if Kevyn and Nadine got pregnant, they would have that same glow and would be treated just as well.\n\nThe difference was she realized; was that they loved the men that they were with. She on the other hand was physically attracted to Thorne and wanted his money; but didn't love him any more than he loved her. She didn't think that it would have been any different with Hans although his having money would have helped. If she knew then what she knew now; she would have chosen Hans over Thorne. \n\n\"He would have been easier to deal with,\" she murmured under her breath.\n\nAfter thinking about it, she knew that it wouldn't have been the case. He had quickly tired of her attitude and treatment of his staff and had called her on it. He would have been as difficult to live with as Thorne was. The question that she didn't ask herself was why it was so hard with Thorne and why it would have been so hard with Hans.\n\nAt the last minute, Barb decided to go to the meeting. In her mind, if she stayed away, it would convey a message that she didn't want sent. One that she was wrong and two, she was ashamed of her behavior. If there was one reason that she wouldn't go, it was Celeste. The little girl scared her. She didn't like knowing that someone as young as Celeste could read her.\n\nShe changed her clothes, fixed her hair and makeup and went down the stairs prepared to be gushed over. When she got to the living room, people looked at her and spoke to her, but no one rushed over to her with open arms. She looked around the room for Celeste and was relieved when she didn't see her. \n\nBarb turned around and saw Thorne watching her. He acknowledged her with a nod of his head, but didn't smile at her.\n\n\"I'm glad that you came,\" Nadine said from behind her.\n\n\"Yes well, it's required isn't it?\" Barb retorted.\n\n\"I suppose it is,\" Nadine conceded, \"but still, I'm glad that you came.\"\n\n\"Was Leon serious when he said that you and he would take the baby if I didn't want it?\"\n\n\"I believe he said that if you and Thorne didn't want him, but yes he was serious. Why are you asking?\"\n\n\"Let's just say that I'm exploring my options,\" Barb replied and walked away.\n\nThe meeting was short and to the point. Ethan and Thorne mapped out the plans and once again emphasized safety.\n\n\"Rufus Saunders is here,\" Ethan said. \"He arrived a few hours ago. So far a few of our people have died because they didn't heed the warnings to stay off the streets. I know that we've been over this, but please keep your cellphones on and no one except for those of us who can vanish leaves this house.\"\n\nBarb barely heard what was said. She was looking around the room wondering where the kids were. Victor was the only one that she hadn't talked to about regarding his feelings toward her but she suspected that he felt the same as the others. She could have cared less about Victoria; she couldn't stand the little girl who was Wanda's and now Celeste's best friend. Thinking about Celeste gave her the willies, but she did owe her an apology for scaring her.\n\nAfter the meeting, she went up to Louise.\n\n\"Where are the kids?\" she asked not looking at her.\n\n\"Noel set up some paints and canvases in the basement. They're down there-Barb-\"\n\n\"Thanks,\" Barb said and walked away.\n\nThorne stopped her as she headed to the basement.\n\n\"We need to talk. Meet me in my office in ten minutes and it isn't a request.\"\n\nBarb looked up at him and continued on her way telling herself that he could damn well wait. She found Celeste at a table sitting with Wanda and Victoria engrossed in her painting. Victoria noticed Barb first. It was only because she was taught to respect her elders that she held her tongue. She nudged Wanda who was as engrossed in her painting as Celeste was.\n\n\"Hey guys,\" Barb said ignoring Victoria.\n\n\"Hi,\" Wanda said as she put her brush down and out an arm protectively around Celeste.\n\n\"Celeste, I'm sorry that I scared you and I'll try not to do it again.\"\n\n\"Do you like your baby now?\" Celeste asked.\n\nBarb started to lie, but knew that Celeste would know.\n\n\"That's not a topic for little girls,\" she said with a forced smile. \"I've got to go, but I just wanted to tell you that I'm sorry.\"\n\nThe girls watched Barb leave and without comment went back to their painting.\n\n***\n\nThorne waited for Barb in his office knowing that she was going to be late. He looked at the stack of papers in front of him wondering which option she would choose. It was a talk that was long overdue, but circumstances had delayed it.\n\n\"Let's get this over with,\" Barb said as she walked in without knocking and sat down.\n\nThorne looked at Barb admiring her outer beauty and his cock hardened. He pushed the thought aside. He had already decided that he wouldn't touch her until their business was concluded and maybe not even then.\n\n\"As you know,\" Thorne said, \"We're in a very uncomfortable position. Part of the reason for that discomfort is my fault and I accept that. I let emotion color my thinking. I wish to god that I had let you go with your family that night, but I didn't. As a result, we find ourselves mated and having a child together.\"\n\n\"Is this an apology for using me like a whore?\" Barb asked.\n\n\"This is me acknowledging that I made a mistake,\" Thorne replied. \"I am just as responsible for what happened as you are. You came with me willingly- you willingly spread your legs for me and if it hadn't been me, it would have been someone else. Do you deny that?\"\n\nBarb's face burned. He had just told the truth.\n\n\"Even so, I could have backed out, but I thought that it was too good of an opportunity to pass up. You were another gold digging bitch and one that was related to the Sinclaires if only by marriage. At any rate, it seems that we both have our own set of issues-\"\n\n\"What issues could you possibly have?\" Barb asked. \"You can have anything that money can buy. You had the best of everything!\"\n\n\"You had something that me, Noel and my brothers wanted and didn't have. I had something that you wanted and didn't have,\" Thorne said as he stood up. \"You had parents who loved and sacrificed for you. They didn't have money, but they would have died for you. My mother pawned us off on caretakers. It was caretakers that attended any sports events or any extracurricular activities that we participated in. My mother was more interested in her parties and social standing than she was in her husband and children. When I look at you, it's her that I see. When I hear you talking about hiring nannies and sitters, it's her voice that I hear. When I see you shopping online and none of it is for the baby-all I can think of is her. When I see how your family loves and tries to reach out to you and you insult them- look, I'm a bastard and I accept that. I also accept that while I will never love you, you and that baby are my responsibility.\"\n\n\"You hate your mother?\" Barb asked mildly surprised. She may have been angry at her parents, but she did love them as much as she was capable of loving anyone.\n\n\"Hate is too strong of a word, let's just say that I didn't and don't like her,\" Thorne said.\n\nSomething about Thorne's words struck Barb. It was exactly how her nieces and nephew felt about her. She added her family as an afterthought. Suddenly, it wasn't a comfortable feeling.\n\n\"Be that as it may, I've drawn up several options for you to think about. One is that once you have the baby, you're free to leave, but the baby stays with me. You will be cared for in the lifestyle that you seem to crave so much. The second option is that after you have the baby you leave; I'll work on releasing you from our-union. You will give up all parental rights to the baby. Again, you will be taken care of financially. The third option is that you stay with me as my for lack of a better term-mate. You will be expected to function as my mate in every way and that includes being a mother to our child. I will concede on a couple of points. You will be allowed to hire someone to help you care for the baby so that you can have time to yourself. When I say that, I'm not talking about overnight getaways nor am I talking about daily shopping trips.\"\n\nBarb listened in shock. Thorne sounded as if he was making a business deal. In a way she supposed that he was.\n\n\"Regarding the third option, let me make something clear,\" Thorne said. \"I don't love you and it isn't going to happen. We are not going to be the loving couple that your family is with their mates or the Sinclaires' are with theirs. There will never be a kiss on the temple; but you will receive the kiss on the cheek so that everyone knows that you are under my protection.\"\n\n\"What if I want to give it to Leon or one of the others to raise?\" Barb asked thinking that she already knew the answer.\n\nThorne smiled at her with a smile that didn't reach his green eyes.\n\n\"You could do that, but then your ass would be out of the door as soon as the baby is born. Your little condo is still available- I've been paying the rent. You would also lose any financial support that you would have otherwise had. But here's the thing, you would lose either way. Knowing your family as I do, I seriously doubt that they would deny a child the right to know his father. So go ahead and give the baby away... it only gets you permanently out of my life and I get to keep my money.\"\n\n\"You wouldn't get another mate,\" Barb countered.\n\n\"So what? I never wanted one to begin with,\" Thorne replied. \"I see that you still haven't learned that you cannot threaten me and win. While we're at it, if anything happens to that child; any agreement that we make is null and void.\"\n\n\"You fucking bastard!\" Barb hissed.\n\n\"Yes I know and as I said, I accept it; but when will you accept what you are? When will you accept your part in this? Make your choice carefully because once you sign on the dotted line, there's no going back. Are there any questions? I wouldn't want you to go to your family and tell them that I lied to you.\"\n\n\"You talked to Leon?\" Barb asked.\n\n\"Yes and he made a very valid point,\" Thorne replied. \"We both need to grow up and do what's right for this baby whether we do it separately or together. I'm willing to work with you, but the choice of what happens is up to you. Here are the papers, take your time and read them carefully. Hire an attorney at my expense to look them over if you want. In fact, I recommend it.\"\n\n\"I suppose that it's someone you'll recommend?\" Barb asked snidely.\n\n\"I don't care who you hire and I don't need to know who it is, but I assure you there are no loopholes in those papers. I think that you'll agree that I never lied to you about anything.\"\n\n\"No, but you didn't tell me everything either!\" Barb snapped.\n\n\"Would you have believed me if I told you that I was only fucking you for two reasons or would you have only seen the dollar signs? You were so caught up with who I was and what I had that you didn't even listen to your own damned instincts! You chose me, a man that you didn't know over your family who loves you! You sucked the cock of another man because you thought that it would put you in my favor! You didn't want to know the truth then and you don't want to hear it now! If you had wanted to leave that night I wouldn't have stopped you. The bottom line is that you were going to go with me no matter the cost. When it didn't work out the way that you wanted, you placed all the blame at my feet. So I leave you with this question, who really lied to you? Me or are you still lying to yourself?\"\n\n\"I know what I am!\" Barb snapped.\n\n\"Really?\" Thorne asked amused. \"Do tell.\"\n\nInstead of answering, Barb stood up and snatched the papers from the desk. She gave them a brief glance and walked out. Thorne watched her leave and then returned to the business at hand. The only thing that he truly cared about was that his child was safe. He hoped that Barb chose the option of taking the money and giving up all parental rights. He didn't mention the small paragraph that said that he wouldn't deny her access to the child if she wished to see him or her. He wanted to see how carefully she read the documents. If she was smart, she would take the documents to an attorney of her choosing-but- she was impulsive. If she came back and said that she didn't know what she was signing, he would remind her that he did encourage her to have the papers checked out.\n\n***\n\nBarb stomped off to her room not speaking to anyone that she passed along the way. The way she saw it, she was in a damned if she did and damned if she didn't situation. Once in her room, she flung the papers onto the bed and paced until she was exhausted. She lay on the bed and tried to calm down. \n\nFinally, she sat up and picked up the packet of papers closest to her. It was the one that gave her the option of terminating her parental rights. She read through the paper line by line. When she got to the part about being able to see the baby if she wanted to, she hesitated and wondered how she could make that work for her. She read further down and got her answer.\n\n\"If said party, Barbara Yancy Simpson attempts to renege on this agreement without first discussing it with Thorne Blackwell, all financial benefits will immediately be terminated.\"\n\nShe tossed the paper packet aside and picked up the next one and read through it just as carefully as she had the first. It was the packet that said that she would leave the baby with Thorne. It ended as the last one she read did.\n\nThe third and final option was the one where she stayed as Thorne's mate.\n\n\"By signing this document you are agreeing to perform any and all responsibilities as a mate and mother. Failure to do so...\"\n\nBarb jumped when she heard someone at the door. When she looked, there was an envelope lying on the floor. She laid the papers down and went to get the envelope. It was from Thorne.\n\n\"Barb,\n\nThis last packet is in regards to our discussion about the child and his/her wellbeing. You are not required to sign it now, but it will be an addendum to the other forms. Please read it carefully and have your attorney read over it as well.\n\nTB\"\n\nBarb threw Thorne's note to the floor and turned to the rest of the papers.\n\n\"Addendum to forms numbered 0022, 0023 and 0024: If anything should happen that results in the demise of the child, all financial benefits will immediately cease once it is determined that the mother Barbara Yancy Simpson is at fault. The incident will be investigated by three independent parties unknown to either Mr. Thorne Blackwell or Ms. Barbara Yancy Simpson. If it is deemed that the demise was at no fault of Ms. Simpson; financial support will continue as agreed upon.\"",
        "Barb reread the addendum and dropped the papers to the floor. She lost track of time as she stood there thinking about the three options presented to her. One thing was for certain, she had to make sure that nothing happened to the baby. If it did all bets were off. On the face of it, the option of giving up parental rights seemed to be the best choice. But was it? According to Adrianna it was difficult to break a bond, but it seemed to have happened with Hans quite easily. But... what if the bond between her and Thorne couldn't be broken? She would still be stuck with him.\n\nMaybe the first option was the best one, she would still have parental rights and if she changed her mind about how involved she wanted to be, there would be no issue but-there wasn't anything written that said that Thorne would try to break the bond. The third option- to live with him as his mate and to be a mother to a child that she didn't want-\n\nA pain ripped through Barb's belly taking her breath away before she could complete the thought. She started to fall to her knees, but was caught by Adrianna and carried to bed.\n\n\"I'm going to call Mr. Blackwell,\" Adrianna said.\n\n\"NO! I'm fine,\" Barb said breathing easier now that the pain was gone.\n\n\"You are not fine,\" Adrianna said. \"I think that the doctor needs to check you out.\"\n\n\"Please... don't,\" Barb said. \"I'm really alright. The pain is completely gone.\"\n\nAdrianna gave her a dubious look and then made a decision.\n\n\"I'm calling him and I'll tell you why,\" she said. \"If something is really wrong and I didn't say anything, it's my ass. I'm sorry, but you have to understand that this is part of my job.\"\n\nBarb started to beg Adrianna to reconsider, but didn't. Adrianna was already talking to Thorne.\n\n\"What happened?\" He asked a few seconds later.\n\n\"Nothing... I was reading your addendum when the pain hit,\" Barb said lying. She left out the fact that she had been having unpleasant thoughts about the baby when the pain came.\n\n\"Not true,\" a soft voice said from the doorway. \"Mama says that it's bad to fib.\"\n\nThree pairs of adult eyes turned to see Celeste standing by the doorway with Wanda and Victoria at her side.\n\n***\n\nCeleste had been painting a picture of abstract shapes and colors when she froze and looked at Wanda. \n\n\"What's the matter peanut?\" Wanda asked when she saw the expression on Celeste's face. She became alarmed when Celeste started to cry. \"Celeste? What's the matter?\"\n\nCeleste threw her shields up, took a deep breath like Louise and Leon taught her to do and calmed down. She was needed. She closed her eyes, blocked everything out and began to move her lips.\n\n\"You are my sunshine...\"\n\n\"What's she doing?\" Victoria asked. \"Who is she talking to?\"\n\n\"I have no idea,\" Wanda replied concerned.\n\nA few minutes later, Celeste opened her eyes. She looked at Victoria and Wanda, stood up and walked away. Seconds later, the girls followed her with no idea of where she was going. They made it to Barb's room just as Barb was telling Thorne when the pain hit.\n\n***\n\n\"Not true,\" Celeste repeated.\n\n\"Celeste honey, why don't you go play or something?\" Barb asked trying to send her away.\n\n\"Wait,\" Thorne said when he heard the anxiety in Barb's voice. \"What is she talking about?\"\n\n\"Who knows?\" Barb asked in what she hoped was a nonchalant tone of voice. \"She's always been a strange kid.\"\n\n\"Celeste, sweetheart; what are you talking about? What isn't true?\" Thorne asked gently.\n\nFor just a moment, Celeste seemed older than her six years of age. She looked Barb directly in the face and spoke.\n\n\"What Aunt Barb said isn't true.\"\n\n\"Celeste-\"\n\n\"Quiet, I want to hear what she has to say.\" Thorne said cutting Barb off.\n\nIt was becoming obvious to him that while small and young, Celeste Yancy was a powerhouse in the making. When Celeste started to speak, he stopped her.\n\n\"Wanda, will you please go get your parents? I think that they should be here.\"\n\n\"I'll go,\" Victoria offered. \"I know where they are.\"\n\nBarb lay on the bed watching helplessly as a six year old girl prepared to rat her out. What she didn't understand was how Celeste knew.\n\n\"What's going on?\" Juliette asked when she and Hans got to Barb's room. \"Victoria said something about Celeste and Barb.\"\n\nThorne quickly explained the situation and why he called for them.\n\n\"I wanted you here so that you can see that I am not taking advantage of your little girl. She apparently knows something that I don't and I would like your permission to ask her what that is.\"\n\n\"Barb, are you alright?\" Juliette asked.\n\n\"I'm fine,\" Barb replied. \"I need is rest and if you'll all leave, that can happen.\"\n\n\"I will leave you to your rest as soon as we find out if Celeste wants to tell us what she knows and Gretchen gets here to check on you and the baby,\" Thorne said.\n\nHans bent down, picked Celeste up and kissed her cheek.\n\n\"Do you want to tell Thorne what you know?\" he asked. He and Juliette had already begun teaching her that her gift was hers to share or not as she chose.\n\n\"He wants me to,\" She replied softly.\n\n\"Who does?\" Thorne asked confused.\n\n\"The baby- he wants me to tell.\"\n\n\"The baby?\" Thorne asked. \"I don't understand.\"\n\n\"He talks to me,\" Celeste said. \"He's sad and scared because his mama doesn't want him.\"\n\nThorne was speechless. He had heard of empaths who could communicate with the dead and the unborn, but he had never met one. In fact, he wasn't so sure that they existed, but Celeste Yancy had just proven him wrong. Still... he held on to a little of his doubt.\n\n\"You don't believe me,\" Celeste said. \"I can tell.\"\n\n\"It isn't that I don't believe you, but I'm wondering if you just think that you heard the baby talking to you\" Thorne replied.\n\n\"I heard him,\" Celeste insisted.\n\n\"Oh for god's sake!\" Barb exclaimed. \"It's obvious that she's making it up now will you all please leave?\"\n\nThat outburst, if anything convinced Thorne to hear Celeste out.\n\n\"Celeste, would you like to tell me what the baby said?\" Thorne asked. \"You don't have to if you don't want to.\"\n\nThe room was silent as Celeste considered her answer.\n\n\"He wants me to tell you that his mama doesn't want him and that he doesn't want to be born.\"\n\nEveryone stared at her and then at Barb.\n\n\"What else?\" Thorne asked.\n\n\"He's scared and wants to know if he's born if you will love him.\"\n\n\"Celeste, can he hear me?\" Thorne asked after a few seconds.\n\n\"Yes.\"\n\n\"Will he allow me to talk to him?\"\n\n\"He says yes.\"\n\nBarb scooted back on the bed when Thorne turned toward her and began to approach her. There was an emotion in his eyes that she had never seen before: love, but it wasn't for her.\n\n\"Be still while I comfort our child,\" Thorne said firmly as he sat on the bed. \n\nHe placed his big hands on Barb's belly and began a slow, gentle circling motion with his hands as he began to talk.\n\n\"Hello little one,\" he crooned. \"I am your father and I want to make a promise to you. I promise that when you are born, you will be surrounded by love. You have aunts, uncles and cousins who will help me make that happen. You are already loved by so many and I want you to remember that when you are afraid. I love you and will do anything that I need to so that you are safe. I only ask that you don't try to leave us so that we can show you that you are loved.\"\n\n\"He heard you,\" Celeste said.\n\n\"Does he believe me?\"\n\n\"Yes...mama? I don't feel good,\" Celeste said and laid her head on Hans's shoulder.\n\n\"We're done here,\" Hans said.\n\n\"Of course,\" Thorne replied awed by the power of the little girl.\n\nHe removed his hands from Barb's stomach, stood up and walked over to Celeste.\n\n\"Thank you for sharing your gift with me. If there is anything that you ever want or need, it is yours. You and yours will always be under my protection.\"\n\nCeleste looked at him, cocked her head to the side and spoke.\n\n\"Will you talk to Uncle Ethan?\"\n\n\"Of course, but about what?\" Thorne asked.\n\n\"You already know,\" Celeste replied and laid her head back on Han's shoulder. Seconds later, everything that she had eaten was on Hans's shoulder and on the floor.\n\n\"I'm sorry!\" Juliette exclaimed. \"I'll take care of it.\"\n\n\"No... please,\" Thorne replied. \"I'll take care of it, tend to Celeste.\"\n\n\"Aunt Barb?\" Celeste called as Hans started to walk away. \"It isn't too late to learn to like your baby.\"\n\nShe dry heaved and let out a small miserable sounding cry before Hans and Barb left followed by Wanda and Victoria.\n\nBarb watched the entire scene infuriated. She had been done in by a six year old who was too smart for her own good. Her feelings for Celeste went from fear to anger to dislike. Her breath caught as she felt what she considered a mental kick in the head. It seemed that Celeste and the baby were protecting each other.\n\nGretchen and Eustace showed up a few minutes later.\n\n\"Well, both of you are doing fine,\" Gretchen said after a thorough examination. \"However, I want you to stay in bed for the next forty-eight hours. If you don't have any cramping you can get up, but hold off on the exercising and absolutely lovemaking of any kind.\"\n\n\"No problem there,\" Barb snipped earning a curious look from Gretchen.\n\n\"Good and since I'm here, I'll check on your sister. Call me if you need anything.\"\n\nAfter Gretchen was gone, Thorne pulled up a chair and sat by the bed. \n\n\"What?\" Barb snapped.\n\n\"You have some decisions to make,\" Thorne said. \"You're going to be in this bed for the next two days so I suggest that you use the time to think about your future. I'll have Adrianna keep you posted on any developments and take care of any other needs that you may have. Now, if you'll excuse me; I have things to attend to.\"\n\nBefore he left, Thorne touched Barb's stomach and caressed it as he spoke to his son.\n\n\"Rest easy, you are loved and safe.\"\n\nBarb watched him leave, started to get up but was stopped by Adrianna.\n\n\"Bed rest, tell me what you need and I'll get it.\"\n\nBarb shot Adrianna an angry glare, lay back down and turned her back toward her.\n\n\"Whatever,\" Adrianna said. 'I'm in the sitting room if you need anything.\"\n\n***\n\n\"How are you feeling?\" Hans asked Celeste as he gave her a spoonful of her favorite flavor of Jell-O.\n\n\"Better, but I'm sleepy.\"\n\n\"Alright, one more bite and you can sleep,\" Hans said. He, like Thorne and Juliette had been shocked by the amount of power that Celeste had shown. He was immensely proud of her and wanted her to know it. \"Celeste, we are very proud of you. Always remember that your power belongs to you and no one else. No one can make you use it. But also remember that it is never to be used for your own gain. Once you do that, it becomes easier to do each time.\"\n\nHe didn't know how much of what he said she understood, but it was a message that he and Juliette would keep repeating until she understood.\n\n\"Sleep well sweetheart,\" Hans said kissing her forehead. \"We love you.\"\n\n\"I love you too papa-too,\" She sleepily replied. Moments later, she was sound asleep holding on to her favorite doll that had been a gift to her from Victoria and Wanda.\n\nJuliette stood by the doorway watching. Her hand was on her stomach as she wished that she was feeling the joy of being pregnant as Louise was. \"Someday,\" she murmured with a smile.\n\n***\n\nLeon held Nadine in his arms trying to convince her that he wouldn't do anything rash.\n\n\"Patrick, Nathan and Hans won't let me,\" he assured her.\n\n\"But I know you,\" she replied. \"You'll see Harry and take off.\"\n\n\"Hans thinks that they're long gone,\" Leon replied, \"but I won't ever stop looking for the bastard.\"\n\n\"I know... Leon, do you think that Barb will let one of us raise the baby?\"\n\n\"I don't know, but we've never talked about babies. I know that it's an unspoken thing, but I want to hear you say that you'll have my babies,\" Leon said.\n\n\"I'll have as many as the fates allow,\" Nadine said kissing him and taking hold of his cock.\n\n\"I like the way that you say yes,\" Leon said.\n\nNadine broke the kiss and moved until her lips were level with his nipples. She took the nipple closest to her into her mouth and bit moaning when she felt his cock jerk in her hand.\n\n\"I really like that,\" Leon breathed.\n\nNadine's hand moved faster and harder up and down his erection. Normally, he liked to come that way, but now he didn't want to waste it. He took Nadine's hand from his pulsing member and put it over his pounding heart. He placed his hand over hers when she tried to move it back to his cock. In a sudden move, he had her beneath him and his lips were wrapped around a small dark nipple. He used the tip of a fang to graze across the sensitive tip. He suckled and nipped until she was writhing and pushing her breast into his mouth. She was the only woman that he had ever been with that could come with just her nipples being sucked and it still astounded him.\n\nHe moaned when Nadine grabbed his head in a vise like grip holding it still so that he could only move his lips and tongue.\n\n\"Suck harder!\" she cried as her orgasm neared. \"Harder!\"\n\nTo tip her over the edge, Leon put his hand between her legs and pressed on her clit with his thumb. Nadine threw her head back and screamed like a banshee. Her clit was still pulsing when Leon moved down and took it into his mouth. Nadine stiffened as if she had been shot and then convulsed as Leon attacked her nub alternately biting and sucking on it. \n\n\"Come again for me,\" Leon thought to her. \"Scream again.\"\n\nNadine opened her mouth and let out a keening wail of pleasure that started Leon's orgasm. He quickly moved up and aimed his cock at her vaginal opening and rammed into her just as his seed left his body. He kept thrusting long after he was empty wanting her to have every drop of him.\n\nAfterwards, he made love to her again in a slow, leisurely manner. His hope was by the time the night was over, she would be carrying his child. He wanted her to have something to live for in case he didn't make it back.\n\n**\n\nLouise heard about the incident with Barb and Celeste a couple of hours after it happened. She was confused as to why she hadn't felt anything, but then realized that for whatever reason, the baby wanted Celeste to speak for him. In a way, she was relieved because it made her more open for other issues- namely the vampires that worked for Rufus. \n\nNathan sat on the sofa next to her with her feet in his lap massaging them with slow, but firm strokes. She looked down at her belly happy to see the evidence that she was indeed pregnant. She was glad that she had the foresight to bring a few sets of maternity clothes with her although she was hoping that they would be home before she had to wear them. Her gaze went from her belly to Nathan's face. She was scared and trying not to show it.\n\n\"Talk to me,\" Nathan said.\n\n\"I'm just scared,\" she replied after several seconds. \n\n\"I know, but try not to be. Hans, Leon and Patrick will have my back and I'll have theirs.\"\n\n\"I know, but I'm still scared. I just want this to be done with so that we can go back to getting ready for the baby and our other plans.\"\n\n\"Hopefully, it will be over soon,\" Nathan said. \"We haven't been here for long, but I'm more than ready to have some real alone time with you. By the way, Rachel gave me her book of baby names. I thought that it would be fun to start thinking about what we're going to name her.\"\n\n\"Her?\" Louise asked feigning indignation. \"She could be a he or they and by the way, I know what you're doing- thank you.\"\n\n\"Did it work?\"\n\n\"It helped,\" Louise said as she sat up and moved so that Nathan could put his arms around her. She was more nervous than she let on, but hid it well- or so she thought.\n\n\"We've had a rough start haven't we?\" Nathan asked pulling her closer.\n\n\"Yeah, but it will be over soon won't it? I'm ready for a little peace and quiet.\"\n\n\"I hope so,\" Nathan replied. \"Ethan and Thorne are cooking something up, but I don't know what it is.\"\n\n\"I don't understand why you and the others have to go. Don't you have soldiers that you could send?\" Louise asked.\n\n\"We could, but that has never been our way.\" Nathan replied. \"We defend our own and we don't ask others to do it for us.\"\n\n\"I knew that,\" Louise said.\n\n\"You're scared, I understand that; but we'll all come back.\" Nathan assured her.\n\nWhen she got quiet, Nathan pushed her back so that he could look into her face.\n\n\"What are you thinking about?\" he asked.\n\n\"If you get caught or hurt, I'm going to look for you and don't you dare tell me not to,\" Louise said her tone firm. \"I know that you're worried about our safety, but don't be; we're going to be fine. I will however promise you this, I won't do anything unless I know something's wrong.\"\n\n\"Louise-\"\n\n\"I can sense them and find them if I need to just as I can and will sense you if I need to. Please don't tell me not to help look for you or the others if anything happens. What good is having a gift if I can't use it?\"\n\n\"You'll do it even if I tell you no won't you?\" Nathan asked already knowing the answer.\n\n\"Let me ask you something, if I were to be taken; would you come after me? Wouldn't you use every gift that you had to help find me?\"\n\n\"Of course I would, but that's different,\" Nathan replied.\n\n\"How?\" Louise asked. \"Because I'm a woman?\"\n\n\"No... because you're pregnant-\"\n\n\"And not helpless!\" Louise broke in. \"Are you telling me that if I weren't pregnant, that we wouldn't be having this conversation?\"\n\nShe had him dead to rights.\n\n\"I just want you and the baby to be safe,\" Nathan said. \n\n\"And I want you back home with us. Nathan, I promise that I won't do anything rash, but I won't sit back and do nothing if I can help bring all of you home.\"\n\nLouise was right about one thing, various versions of the same conversation were happening everywhere in the house with the exception of one place.\n\n***\n\n\"Ethan will be leading one group, I will lead another with Nathan leading a third group,\" Thorne said to Barb. \"We will be leaving as soon as it's dark enough. I'm going to remind you once more that you must do as Adrianna says-\"\n\n\"Yeah I know!\" Barb snapped. \"I have to keep the precious cargo safe.\"\n\n\"Your safety matters as well,\" Thorne said. \"I may not love you, but that doesn't mean that I want any harm to come to you.\"\n\n\"Why don't I believe that?\" Barb asked.\n\n\"What you believe or don't believe is up to you,\" Thorne replied with a shrug of his broad shoulders. \"But believe this, if anything happens to anyone in this house because of your petty jealousies and insecurities; I won't be your only concern.\"\n\n\"You would choose them over me?\" Barb asked incredulous. \"I thought that you hated them.\"\n\n\"The Sinclaires and Blackwell's were friends as well as allies at one time. We are still allies no matter what we feel for each other. Because of the child that you carry, we are now family. Because of that it's in our best interest to work out any differences that we may have. I would like to suggest that you consider doing the same with your family. Of course depending on the decision that you make, that may be a moot point. At any rate, I have preparations to make; have a good rest.\"\n\nAfter Thorne left, Barb tried to pinpoint how she felt. A few minutes later, the word trapped came to mind. The urge to run away hit her but left just as quickly as it had come. If she ran, where would she go? And more importantly, what would she do with the baby? She knew beyond a shadow of a doubt that Thorne and her family would come looking for her and wouldn't stop until they found her. The idea of two powerful families looking for her took care of the urge to run.\n\nShe started to get up but then remembered that she was on bed rest. She wanted a snack and something to drink. The only way that she was going to get it was through Adrianna to whom she had nothing to say.",
        "\"What do you need?\" Adrianna asked from the sitting room doorway.\n\n\"Nothing from you,\" Barb said petulantly.\n\n\"Will you grow the fuck up?\" Adrianna asked exasperated. \"That little girl that was here is more of an adult than you are!\"\n\n\"You could have helped me!\" Barb said angrily.\n\n\"Helped you do what exactly?\" Adrianna asked. \"You treat people like shit and then you expect loyalty. You aren't the fucking queen of anything and you'd better get that through your thick skull! Now what in the hell do you need?\"\n\nMaybe it was because of the emotional upheaval of the past hours, but Adrianna's tone of voice hurt. Suddenly Barb was no longer hungry.\n\n\"You haven't eaten in hours,\" Adrianna said, \"I'll go get you something. Do you need help to the bathroom?\"\n\n\"No... I can make it on my own,\" Barb replied.\n\nAdrianna hesitated and then vanished. When she was gone, Barb made her way to the bathroom. After washing her hands, she examined her reflection in the mirror. She stood sideways and took in the soft swell of her belly. Something Thorne said went through her mind.\n\n\"Hate is too strong of a word, I don't like her.\"\n\n\"Is that how you feel about me or do you hate me?\" Barb asked the baby in her belly. \"I don't hate you- I just don't want you, but then; I never wanted a baby with anyone. I'm sorry that you're scared of me, but you have to understand that I don't want any of this-well, not the baby and vampire part of it anyway. They keep telling me that I have to accept this, but do I? I mean there's nothing that I can do about you- you're already on the way; but what about the rest of it? Look, let's make a deal- I'll try to do everything that I'm supposed to do to make sure that you arrive safe and sound and you stop blabbing to Celeste. Do we have a deal?\"\n\nA few seconds later, Barb felt a sharp pain telling her that the baby wasn't accepting her terms. He knew that she had to take care of herself no matter what. It was also his way of telling her that he didn't like her.\n\n\"Damn,\" Barb sighed feeling even more alone than before. \"Am I really that horrible?\" she asked her reflection.\n\nThe word \"YES!\" resounded through her head so loudly that she thought someone had spoken it. She turned around didn't see anyone. She felt the need to connect with someone who understood her. The only person that came to mind was Gene, but then he had changed too. She realized that not only did she have to think about Thorne's proposals; she had to think about what she wanted to do about her family.\n\nPart of her comfort zone was knowing that they would just accept her as she was no matter what she did. That apparently, was coming to an end. She had to decide how much, she was willing to give to keep them around. She had to admit that when she acted civilly, they actually had a good time together. Juliette's observations came to mind as did Louise's.\n\nThe fact was she didn't know why she fought to keep the nicer side of her hidden away. She also didn't know why she thought that money equaled love. Living with Thorne had proven that that wasn't the case, but yet she still believed it or told herself that she did.\n\nWhen she left the bathroom, she found a sandwich and beverages sitting on a tray on the bed. She could hear Adrianna typing on her laptop in the next room. She sat on the bed, looked at the sandwich and forced herself to pick it up. After staring at it for a few more seconds, she took a bite and then moaned with pleasure. The bread was one of Louise's recipes. She closed her eyes and savored the taste of the bread. Suddenly she started to laugh. She was remembering some of the recipes that Louise concocted when she was old enough to cook. Just as suddenly as the laughter started, it stopped. She finished the sandwich, drank the glass of water and went to bed.\n\n****\n\n\"How are things?\" Thorne asked Benita as he settled at his desk.\n\n\"Fine, she hasn't tried to escape-Thorne- she's very conflicted.\"\n\n\"Explain.\"\n\n\"She doesn't want to be the head of the hunters, but she feels that she has no choice. She loves but fears her father and she hates him. She has ambivalent feelings for us even though one of us killed her mother and brother. I think that deep down she knew that her father has been lying to her and that he set her up to fail.\"\n\n\"I assume that you told her about her brother and mother?\" Thorne asked.\n\n\"I did and her reaction was surprise that didn't last long and she made a feeble attempt to defend them. When I told her that I was the one that killed her brother there was an initial flash of anger and then acceptance.\"\n\n\"Does she hate her father enough to go against him?\" Thorne asked.\n\n\"That I don't know about. But if I had to guess; I would have to say that the answer would be no.\"\n\n\"Alright, keep talking to her and broach the subject in a roundabout way. Ethan and I will be over later to talk to her.\"\n\n\"Thorne- may I make a suggestion?\" Benita asked.\n\n\"I'm listening.\"\n\n\"She's scared of you even though she doesn't show it. If both of you showed up... my suggestion is this, send someone else- a female. She talks to me because although she knows what I am, I'm less threatening because I'm a female. On the flip side, I'm her guard so she's only going to tell me so much.\"\n\n\"I take that under advisement, but in the meantime keep talking with her. I'll call you later.\"\n\nThorne hung up thinking about Benita's suggestion. It had merit, but then most of her thoughts did. He picked up his cell phone and called Ethan.\n\n\"Are you busy?\"\n\n\"No, what's going on?\" Ethan asked.\n\n\"Can you be in my office in ten minutes? \n\nTen minutes later, Ethan was sitting in Thorne's office.\n\n\"Thank you for coming,\" he said. \"I know that I'm interfering with your time with your mate, but this is important.\"\n\n\"This is war,\" Ethan replied. \"Katrina understands, so what's happening?\"\n\nThorne told him about the conversation with Benita and her suggestion.\n\n\"I think that she's right,\" Ethan said when Thorne finished talking. \"I also know just the person that would be perfect for the job.\"\n\n\"Louise,\" Thorne said.\n\n\"Yes. I suggest we call and ask her and Nathan to come down here.\"\n\n\"Do you think she'll go for it?\" Thorne asked.\n\n\"She isn't going to be the issue,\" Ethan said. \"Nathan is extremely protective of her which is understandable. It's him that we're going to have to convince.\"\n\n\"Let's give them a call, but first- Ethan, that little girl Celeste is a powerhouse- did you know that?\"\n\n\"I'm not surprised given her lineage, but why do you ask?\"\n\n\"Without going into details of how this request came about, she asked me to talk to you about what happened between our families.\"\n\n\"How does she know about that?\" Ethan asked.\n\n\"I don't think that she really does, at least not all of the details,\" Thorne replied. \"At any rate, I promised her that I would talk to you. To be honest, I've been thinking that there's something about that whole thing that I don't know about or understand. After this is over, I would like to sit down and talk to you about it- if you're agreeable that is.\"\n\n\"I am more than agreeable, but as you said, let's get this over with first.\"\n\nFifteen minutes later, Nathan and Louise were sitting in Thorne's office. Thorne watched and listened as Ethan explained what they wanted. He could see that Louise was on board, but Nathan was another matter.\n\n\"Yes,\" Louise said at the same time Nathan was saying \"no\".\n\n\"I won't allow you to be in a room with a hunter-\"\n\n\"Excuse me, but you won't allow me?\" Louise asked quietly.\n\n\"It isn't safe-\"\n\n\"I won't be alone and I have to do this. If it will keep people on both sides from being killed and that includes you; then I'm doing it. And from what I'm hearing, she's scared and needs a friend-\"\n\n\"Friend?\" Nathan asked. \"Sweetheart, scared or not she's a hunter who would kill you if she had the chance! Her kind doesn't befriend our kind.\"\n\n\"Has anyone ever tried?\" Louise countered. \"What if our reaching out to her changes things? I'm sorry, I know that you don't want me to do this; but I'm going to. Will you come with me?\"\n\nEthan and Thorne watched the interaction between Nathan and Louise with interest. It reminded Ethan to call the genealogist to see if he found out anything more about the Yancy line and it made Thorne realize just what a powerful family he was allied with.\n\n\"When do we leave?\" Louise asked.\n\n\"As soon as we can get you there safely,\" Thorne replied.\n\n\"I can vanish,\" Louise said proudly, \"so we can leave at any time.\"\n\nThorne was shocked although he didn't know why. He found that he was becoming more intrigued by the Yancy line. He looked at Louise and recognition set in. The eyes in Noel's portrait belonged to someone in the Yancy line- but who? It was none of the adult females present, they were all spoken for and the girls were too young. The eyes in the portrait belonged to an adult woman. The other thing that he wondered was if Barb had gifts other than her strong intuition that she never listened to.\n\n\"Give me an hour and we'll go,\" Thorne said. \"Louise, thank you for doing this and Nathan, I swear to you nothing will happen to her.\"\n\n\"Damn right it isn't because I'm going with her,\" Nathan said. His tone conveyed his displeasure that Louise was placing herself and their child in danger. He was going to take the hour to try to get her to change her mind although he knew that it would be useless.\n\n****\n\nOne of Thorne's homes had been found only because the address was a matter of public record. Even though the hunters knew that no one would be there, they broke in; ransacked the houses and stole anything that they deemed of value.\n\nFreezers were emptied of bags of blood that were then ripped open and tossed to the floor. Thawed out units were opened and dumped on the floor or sprayed on the walls. Furniture was slashed and torn apart as the house was searched not only for Olivia, but any unsuspecting staff. The only reason that the house wasn't burned was because Rufus didn't want the police involved.\n\n\"She ain't here,\" a hunter from Bakersfield, California said as he pocketed a necklace that looked valuable from a Jewelry box. \"Damn vamps live better than humans!\" He added as he dumped the contents of the dresser on the floor.\n\nNone of the hunters noticed the wolves that sat across the street watching them. Grant and two of his wolves sat in the shadows watching. It was to their advantage that the crew in the house was made up entirely of humans who had become lax in watching out for any surprises.\n\n\"We'll grab the one who seems to be the leader,\" Grant growled. \"He'll know who the other crews are.\"\n\n\"I think that we should just kill them all,\" one of the other wolves growled.\n\n\"Kill all but the leader,\" Grant said with a cold grin.\n\n***\n\nOn the other side of town, William watched in disgust as Rufus's men ransacked Ethan's house. He knew that Olivia wasn't there, but didn't say anything. He could hear the whoops and hollers of the hunters as they destroyed anything that wasn't glued to the floor. He wondered how the hunters could say that vampires and other species were nothing but animals when they were acting like thugs. He looked to his right and saw Caleb staring at him with a predatory gleam in his eyes. He stared back and bared his fangs at the hunter and gave him the 'come hither' motion with a long dark finger.\n\n\"Come on mother fucker,\" William thought, \"I dare you.\"\n\nTo William's surprise, Caleb paled and looked away. \n\n\"I'll be damned,\" William muttered. \"The bastard is a coward.\"\n\nAs the carnage of the house continued, William walked around the house touching nothing. He saw Rufus sitting at Ethan's desk trying to get the desk top to boot up. He watched Rufus touch the power button and jumped when the desktop exploded.\n\n\"Damn it!\" Rufus bellowed.\n\nWilliam shook his head in disgust and continued on his way. He made his way to the basement and was about to leave when he sensed someone. Huddled in the far corner of the finished basement was an elderly vampire. His eyes were wide and his heart pounded when he realized that he had been sensed. William looked back toward the stairs- it would only be a matter of time before the hunters came down the stairs. He looked around the basement for a place to hide elderly vampire.\n\n\"I am not going to hurt you,\" William said as he looked around. \"I don't know why you are here, but I am going to hide you.\"\n\nThe vampire stared at William in disbelief, but said nothing. Finally, William looked up and saw a trap door. He hurried over to it and examined it. He realized that it was just a crawl space, but it would be big enough for the vampire.\n\n\"Come grandfather, let me hide you.\"\n\nThe vampire hesitated, but hurried when he heard the voice of a hunter nearing the top of the stairs. William gently picked the vampire up and lifted him toward the trap door. \n\n\"You must remain quiet. Do you understand? If they find you, I will not be able to save you.\"\n\n\"I understand- thank you,\" the vampire said as the door closed.\n\nMoments later, the basement was swarming with hunters. When the basement was totally destroyed, they left. William looked back at the hiding place and nodded. He felt surprisingly good that he had managed to save a life. Now if he could only save Olivia.\n\n****\n\nOlivia paced the small room wondering what was happening. She was certain that her father had already arrived and was looking for her. The question was, did she want to be found? That had been the burning question ever since Benita revealed a few hard truths to her. She couldn't believe that she almost preferred to be kept by the vampires as opposed to going back to her father and whatever he had planned for her.\n\nShe sat on the small sofa wondering how many had died already and wondered if William was among them. She felt a pang of sadness that she didn't understand at the thought. He was one of them. He was the enemy, but yet he hadn't wanted to leave her. He had even warned her about Harry. She closed her eyes remembering how it felt to be held in his arms.\n\nHer eyes snapped open.\n\n\"What am I thinking?\" she murmured in shock.\n\nA tap on the door made her jump.\n\n\"It's me-Benita- are you decent?\"\n\nOlivia looked at the folded sweat suit that lay on the end of the couch.\n\n\"Can you give me five minutes?\" She called back as she jumped off the couch and began to change clothes.\n\nExactly five minutes later, Benita walked in followed by a woman that Olivia didn't recognize.\n\n\"I brought you a guest,\" Benita said. \"Remember your manners.\"\n\nOlivia looked at the woman and nodded at Benita. She took a step back when the woman took a step forward.\n\n\"Hello, my name is Louise Sinclaire and I promise that I'm not here to hurt you.\""
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "vampire",
        "black woman",
        "white man",
        "pregnancy"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/thorne-ch-07-1"
}