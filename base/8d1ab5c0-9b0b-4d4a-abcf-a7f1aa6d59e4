{
    "title": "No Touching",
    "pages": [
        "All comments are welcome, and don't forget to vote.\n\nJake honked the horn as he pulled to the curb in front of Diane's house. He and Diane had been dating since ninth grade, and were off to see a new movie. They had to hurry if they were going to pick up Brian and Ellie and get to the theater on time. Diane's best friend Ellie had been dating Brian since their junior year, and the four of them were best friends and partners-in-crime. Graduation day was fast approaching, and college was just around the corner.\n\n*******************\n\nJake had just finished unloading the last of his things from his car, and into his new apartment. He was just about to start his second year at the state university. After a year in a dorm room, he was really looking forward to having his own place. Sure, it was only a small efficiency apartment, but it would be all his. He hadn't liked living in the dorms, especially when Diane visited. Now, they'd have a place to be alone.\n\nHe was also looking forward to the private gym in the building's basement. Jake was a big guy, six foot two, two hundred pounds of muscle. He'd started working out when he was on the football team in high school. Now it was one of his favorite things to do. It made him feel good to be in top shape.\n\nDiane was in her second year at a small, exclusive all-girl arts college. Jake couldn't really visit her because men were not allowed in the girls' housing. So, she visited him about once a month. With his private apartment, he suspected that they'd spend those entire weekends in bed together. Well, not the whole weekend. They'd make time for Diane to see her best friend, Ellie, who attended the same university as Jake did.\n\n*******************\n\nJake returned from classes to see fire and emergency vehicles clogging the street in front of his apartment building. He hurried up until he was stopped by a police woman.\n\n\"What happened?\" he asked. \"I live in that building!\"\n\nA fireman stepped forward and answered. \"There was a fire on the second floor. Apparently, someone left a candle burning and it lit the curtains on fire. The damage is pretty extensive.\"\n\n\"Shit, shit, shit,\" grumbled Jake. \"I live on the sixth floor. Did the fire get up that high?\"\n\n\"Most of the fire damage is on the second and third floors. Water damage goes up to about the fifth floor. You might have nothing but smoke damage up on six. It's still too early to really say. But the structure has extensive damage. I doubt that they'll repair the building. Probably just knock it down and rebuild.\"\n\n\"Oh, man,\" sighed Jake. \"Can I get up there and get my stuff?\"\n\n\"Not until the building is inspected. That'll probably take a day or two. I'd suggest that you find a place to stay if you can. If not, the Red Cross will find a temporary place for you. Officer, can you get this boy's information and put him in contact with the Red Cross?\"\n\n\"No problem, chief. Come with me, young man.\"\n\nJake spent the next hour talking with the police and some of the other people who lived in his building. It was agreed that they'd all be escorted to their rooms at 10AM the day after tomorrow to salvage whatever they could. A few people went with the Red Cross to their shelter, the rest felt that they could find a friend to crash with for a few days. Jake knew that he could find somebody who'd let him sleep on their couch.\n\nHe called Diane and told her the bad news.\n\n\"Wow, Jake, I'm sorry. But this cloud has a silver lining. I talked to Ellie this morning. Her roommate Abigail had to drop out of school because her mom is sick. Ellie's worried that she'll lose her apartment unless she finds a new roommate. I'm sure that you can stay with her until things get settled. In fact, I'm sure that she'd love for you to move in permanently. Give her a call.\"\n\nSo, Jake called Ellie and told her his story. \"Jake, you come over here right now! I insist that you stay here until you figure out what you wanna do. My roommate took her bed and furniture, but I've got a big couch that's yours as long as you want it.\"\n\n*****************\n\nTwo days later, Jake had collected his belonging from his old apartment. The apartment had been furnished, so all he really had was his clothes, books and papers, computer, and big screen TV. Everything smelled like smoke. He washed all of his clothes twice at a laundromat until they smelled clean. His computer and TV smelled so bad that he just threw them in the dumpster.\n\nThey had discussed it over dinner last night, and Jake had decided to move into Ellie's apartment with her. He'd have a big bedroom, and the rent was cheaper than at his old place. His dad had agreed to use the money saved on rent to buy Jake a new computer and TV, as well as a new bed and a used desk.\n\nThat evening, Wednesday, found Jake settling into his new apartment, with his new roommate Ellie. It turned out that Brian would be visiting that Friday, and Diane was also planning on visiting, so the old gang would all be together for the weekend.\n\n***************************\n\nAt the library the next day Jake finally had some time alone to consider things. There was a reason that he didn't really hang around with Ellie at school, and why he had been skeptical about moving in with her. But, it had all happened so fast, and he hadn't had much choice.\n\nThe reason? Ellie was fucking gorgeous! Jake had had a secret crush on her for years. He had seen her grow up from a skinny, cute girl into a shapely young woman. The summer after high school found the foursome at the beach almost every day. They had a blast together, laughing, joking and teasing each other. But, seeing Ellie in her bikinis had almost been too much for Jake. The skinny girl had blossomed. She was now about five foot eight, still thin but with what had to be C-cup breasts, her thin waist flaring to shapely hips and a tight, sexy ass. When she came out of the water and her long, reddish-blond hair was plastered to her chest, he'd had to force himself not to look for too long.\n\nDiane was also a beauty, and Jake loved her deeply. He knew that he'd marry her some day. He'd have to be very careful around Ellie. If Diane ever suspected anything about his feelings there'd be hell to pay.\n\n*****************************\n\nThe first knock on the door came at 5:15. Ellie was in her room, so Jake went toward the door. \"I'll get it, Ellie.\" He opened the door and greeted his friend Brian.\n\nAs they shook hands Brian yelled out. \"Hey Ellie, what are you doing with this strange man in your apartment?\" Ellie ran from her room and wrapped Brian in a hug.\n\n\"Don't mind him, he's just one of my many boyfriends that you don't know about. Jerk.\" She gave her boyfriend a passionate kiss.\n\nBrian grabbed his bag and followed Ellie into her room and closed the door. Jake could hear them talking and kissing. \"Don't get carried away in there you two, Diane should be here any minute.\"\n\nAbout twenty minutes later another knock sounded. Jake hurried to the door. \"Diane, honey, I've missed you.\" They were wrapped around each other when Ellie and Brian came back into the living room.\n\n\"I'd tell you to get a room, but I guess you already have one. Diane!\" Ellie pushed Jake aside and hugged her best friend. \"So, how do you like my roommate upgrade?\"\n\nDiane smiled. \"I like this one much better than the old one. He's got a bigger chest and a better ass.\"\n\nThey all laughed. This was the way that they'd been joking around for years, a part of the glue that held their friendships together.\n\nOver dinner, Jake told the whole story about the fire and the days since. He praised Ellie for taking him in. She told them all about her roommate's sudden departure due to her mom's failing health. \n\nThey drank, talked and laughed until around ten o'clock, when Diane spoke up. \"Well, guys, I need to get a little better acquainted with with Ellie's new roommate. Come on, Jake, show me your bedroom.\"\n\n\"I've got to warn you, Diane, our bedrooms share a common wall and it's a thin one. If you're as loud as usual, we'll hear everything.\"\n\n\"Me, loud? Remember the time at that hotel in the Black Hills? We could hear you guys from two doors down! You'll just have to turn your music up.\"\n\nThe two couples retired to their respective rooms. Ellie cranked her music up loud, and both couples started out trying to be quiet. That didn't last long. In the end, they all heard everything. Jake was on top of Diane when they heard Ellie cumming loudly with Brian grunting along. Jake stared into Diane's eyes as she started to quiver and shake. A moment later they both exploded, Diane nearly screaming her joy.\n\nJake and Diane were up early, so Jake knocked on Ellie's door. \"Diane and I are going out for breakfast, we'll be back around noon. Have fun.\" Jake and Diane went out for a long, relaxed breakfast at his favorite greasy spoon, then took a long walk around the campus. When they returned, Ellie and Brian were just leaving for lunch and to run some errands. Jake and Diane used the time alone for some slow, loving sex.\n\nThat night the foursome went to the student center to hear a DJ, dance, and have a few drinks. They had their usual good time and got home late. Without a word they retired to their rooms, and soon the apartment was filled with the sounds of banging headboards, loud dirty talk, and strong orgasms.\n\nEveryone was hung-over the next morning. They took turns in the shower, then the girls made breakfast. They were all sad to see the weekend almost over. As Diane and Brian finished packing their things, Brian called them all to the living room.\n\n\"Guys, I know I don't have to say this but I think it'd be a good thing to discuss. Shit, I'll just say it. Jake, bro, you'd better keep your hands off of my girlfriend! I know that she's hot as hell, but she's mine. I love her, so stay away.\"\n\nJake started to answer but Diane cut him off. \"And you, Ellie, you horny slut, stay out of Jake's pants! He's mine forever. Don't even think about trying him on.\"\n\nJake sat down and patted his lap. Diane came and sat on him and put her arms around his neck. Ellie pushed Brian into a chair and did the same. They looked at each other in silence.\n\nJake spoke softly. \"Diane, I know that this is a little weird. Christ, we just spent the weekend listening to each other fucking! It's definitely weird! But don't forget this. I want to spend the rest of my life with you. I love you so much it hurts. There's only one girl in the world for me, and that's you.\"\n\nEllie was next. She placed her hands on Brian's cheeks and looked him in the eyes. \"Brian, I trust you completely, and you can trust me completely. I love you, and respect you. You're the only guy for me.\" She gave him a slow, tender kiss. She could hear Jake and Diane kissing, too.\n\nAfter a moment Diane stood up. \"Shit, that was hot! I wish we had another hour to turn this place into a fuck palace again!\"\n\nThey all laughed and hugged, then the visitors gathered their things. With more hugs and kisses they said their goodbyes.\n\n***********************\n\nSince they both had full class loads, Jake and Ellie didn't see much of each other. They both spent lots of time at the library or studying with friends, and both tried to get to the student health club a few times a week. They had breakfast together a couple of times each week, and saw each other some nights before bed. \n\nOne night, Jake got home late to find the apartment dark. He assumed that Ellie was already asleep, so he was quiet as he slid into his room, stripped, and crawled into bed. After a minute he realized that he could hear a faint buzzing through the wall to Ellie's room. Was it her phone? As he listened, the buzz got slightly muffled, then louder again. Then the noise went from loud to muffled, loud to muffled, in a steady rhythm. Was she covering her phone with the blanket? Was it her phone? What else could it be?\n\nIt was then that he heard a soft moan and the answer hit him. \"Shit, that's the sound of her sliding a vibrator into and out of her pussy!\" he thought. His cock came to life as he pictured the scene. Without even thinking he started to slowly stroke himself as he listened. He realized that she was only eight feet away from him when he heard her moan again.\n\nEllie picked up her pumping speed and let out a little squeak. He had heard that squeak before from her, as she got close to orgasm with her boyfriend. Jake pumped his cock faster, matching her speed. His hard pumping caused his bed to shift and make a sliding sound on the floor. \"Shit, did she hear that?\" he thought.\n\nIf she did, it only made her pump faster as she began to pound the vibrator into her pussy. Her moaning became louder. Jake kept pumping, knowing that he was almost there.\n\nSuddenly Ellie spoke. \"Shit Jake, I'm cumming!\" Jake heard her thrash on her bed as she cried out in orgasm. That did it for him.\n\n\"Oh, Ellie, I'm cumming, too!\" His hips shot up off of the bed. He grunted loudly as his cum shot over his stomach and chest.\n\nHe slowly settled down and the apartment was quiet. After a few minutes he heard Ellie again through the wall. \"Goodnight, Jake.\"\n\n\"Goodnight, Ellie.\"\n\n******************\n\nEllie was up and gone by the time Jake got out of bed. They saw each other a several times in the next few days but didn't talk about what had happened.\n\nJake got home late on Friday night. He'd been at the library working on a paper. He had just pulled a beer out of the refrigerator when Ellie came in with a girlfriend. It was obvious that the girls had been enjoying some drinks.\n\n\"Jake, meet Stacy. Stacy, Jake.\" Jake nodded a hello. \"Stacy's in my European Studies class. We had a big test today and we both nailed it! So, we've been celebrating. Is there any more beer?\"\n\nJake joined the girls for a drink in the living room. It was quite entertaining, as the girls were more than a little drunk. They spent almost an hour laughing and talking before Stacy decided to call it a night. Jake insisted upon walking her home. It wasn't far, but he felt that someone should keep an eye on her. When he got back to the apartment Ellie was sitting on the couch in her robe.\n\n\"It's about time. My friend and I have been waiting for you.\" She saw Jake's confused look and smiled. Holding up a long, purple jelly vibrator, she rose from the couch and walked toward her room. \"It turns me on to know that you're listening. I've been dying to fuck myself all day.\" Ellie air-kissed him, went into her room, and closed the door.\n\nJake felt like he should resist. He wanted to be faithful to Diane, and he knew that Ellie was a little drunk. But what could he do? Wait out here until she was finished?\n\nHe went to his room, stripped and fell on the bed.\n\n\"Hey, Jake. Are you naked?\" Ellie asked through the wall.\n\n\"Yes. Are you?\"\n\n\"Yes. I'm naked and playing with my tits.\" He heard her groan. \"Now I'm pulling my nipples. God, it feels good.\" She let out a long, slow moan. \"Are you getting hard yet?\"\n\n\"Yes.\"\n\n\"Wrap your hand around it.\" Jake heard the vibrator start to hum. \"Hmmm, I'm rubbing my clit with the vibrator. It feels so good.\"\n\nJake started pumping his cock. \"Is there hair on your pussy?\"\n\n\"Oh, dirty boy, you want a picture of my pussy in your mind.\" She groaned again. \"No hair, I have it waxed. My pussy is bald. I have my knees spread and my feet together. My pussy is wide open.\"\n\n\"Shit...\"\n\n\"Now I need a picture. Tell me about your cock.\"\n\n\"It's all the way hard now. Little Jake is about seven inches long, circumcised, and sort of thick, I guess.\"\n\n\"I like that you call him little Jake. Is he hairy?\"\n\n\"I trim him, but don't shave him. I trim my balls, too.\" Jake heard the muffled sound of the vibrator slipping into Ellie's pussy. \"I can hear when you push the vibrator into your pussy. The sound changes.\"\n\n\"Can you tell when I'm pumping in and out?\" Ellie moaned and pumped faster.\n\n\"Yes. I can picture it in my mind, too.\"\n\nThey were both quiet again. The only sound was the vibrator going in and out. The minutes ticked by as the both pleasured themselves.\n\n\"I'm getting close, Jake.\"\n\n\"Me, too.\" Jake could hear that she was pumping fast and hard. He caressed his balls with his left hand and pumped his cock with his right.\n\n\"I'm gonna cum, Jake. Cum with me!\" Ellie growled. \"Here it is, Jake. Oh, God, I'm cummming.\" Ellie screamed and Jake could hear her thrashing on the bed.\n\n\"Here it is, Ellie. Here I cum, here I cum.\" Jake howled and started shooting. He could hear that the vibrator was buried deep in Ellie's pussy as his cock pulsed.\n\nThey were both quiet as they recovered. Jake heard the vibrator buzz as Ellie pulled it from her pussy, then heard it turned off.\n\n\"That was great,\" Ellie spoke slowly and dreamily. \"Goodnight, Jake.\"\n\n\"Goodnight, Ellie.\"\n\n***************************\n\nOn Friday, Brian came to visit Ellie. Diane had two big tests coming next week, so she put off her visit until the following weekend. The threesome had dinner, drinks and a lively conversation until Ellie pulled Brian into her room. Jake watched TV for a while, feeling a little awkward about being a third wheel to the two lovers, Eventually, he thought that he had given his friends enough time to do their thing so he went to his room and got into bed.\n\nIt was obvious right away that he hadn't waited long enough. He could hear the vigorous fucking taking place next door as Ellie spoke to her boyfriend. \"I'm gonna cum, Brian. Shoot your hot stuff inside my pussy when I cum.\" The fucking got louder and faster, and Ellie started to make her squeaking sound. This turned into a long groan that turned into a loud wail as Ellie came, Brian grunting and cumming with her.\n\nJake spent all of the next day at the library. He wanted to give his friends some privacy. Besides, it just made him horny and frustrated to listen to them having sex. His turn would come next weekend when Diane visited him.\n\nOn his way home Jake stopped at a local bar for a few beers. He wanted to get home late. When he finally got home the apartment was quiet and he went right to sleep.\n\nHe awoke to the sound of Brian's voice. \"God, I love watching your tits bounce when you ride me.\" Jake got up and went to the kitchen and made coffee. He couldn't stop thinking about Ellie's tits bouncing. Soon, Brian and Ellie emerged from the bedroom and joined Jake for breakfast.\n\n\"I've got to hit the road early Jake, I've got to be back by two for a study group.\" Brian told his friend. \"Sorry if we kept you awake.\"\n\n\"No problem, friend. We live in a...what did Diane call it, a fuck palace? You'd better buy Ellie some cotton for her ears because next week I'll be taking out my frustration on Diane.\" They all laughed.\n\nAfter Brian left, Jake was lying on his bed reading when Ellie knocked on his door. \"Jake, can I come in?\" He invited her in and she sat on the edge of his bed.\n\n\"Jake, I know it had to be tough listening to us fucking all weekend. Is everything OK between us?\"\n\n\"Ellie, we're fine. Well, you are. I'm just horny.\"\n\n\"Poor Jake.\"\n\n\"I woke up to Brian telling you that he liked the way your tits bounced when you rode him. Now, I can't get your damn bouncing tits off of my mind.\"\n\nThey were silent as they looked into each other's eyes. Then Ellie spoke softly. \"OK, horny Jake, we can't touch each other. Now strip, I want to watch you masturbate this time.\" Jake stared at Ellie, trying to see if she was serious. \"Here, let me help by showing you my bouncing tits.\" Ellie crossed her arms across her tummy and pulled her shirt up to just beneath her tits. \"Come on, Jake, it's not a free show. Get naked. I want to see little Jake.\"\n\nJake sat up and pulled off his t-shirt. Ellie blatantly admired his buff chest, then pulled her shirt higher until the bottom halves of her tits were showing. She stopped again and smiled at Jake. He took the hint and unsnapped his jeans, then quickly pulled them and his shorts off. He laid back naked in front of Ellie.",
        "\"Hello, little Jake,\" said Ellie. \"Big Jake has been thinking about my tits today. If I show him will you get hard?\" She saw the cock twitch and thicken. \"I thought so.\"\n\nShe looked Jake in the eyes. \"Remember, no touching.\" Ellie slowly pulled her shirt up until her tits bounced free. \"Are these the tits you wanted to see? Play with your cock and I'll make them bounce for you.\"\n\nJake's right hand wrapped around his cock and began stroking. He stared at the firm tits, admiring the hard pink nipples. Ellie began to lightly bounce on the bed, making her big tits bounce up and down.\n\nJake stroked faster when Ellie wrapped a tit with each hand and pushed them up and out toward him, like an offering. They were only two feet from his lips. He had to fight the urge to lean forward and capture a nipple with his mouth. He stayed on his back and pumped his cock.\n\nEllie was staring at Jake's cock. \"I'm going to pull and twist my nipples now, Jake. Cum for me.\" She grabbed a nipple with each hand and began to roughly pull and twist them. \"Do it. Shoot your big load.\"\n\nJake's hand became a blur as the first blast shot from his cock. He howled as a second blast shot onto his chest. Looking into Ellie's eyes he shot another spurt as she smiled at him.\n\nAs Jake lay catching his breath, Ellie leaned down and kissed his cheek. \"Next week, when Diane leaves, you'd better come to my room and inspire me while I relieve MY horniness.\" She pulled her shirt down, winked, and left the room.\n\n**********************\n\nDiane's visit went as expected. Jake was as horny as he'd ever been and kept her in the bedroom most of the weekend. They were loud and uninhibited. Sunday afternoon he walked her to her car and waved goodbye as she drove off.\n\nWhen he got back to the apartment Jake went straight to his room and stripped. He then spoke through the wall. \"Ellie, I'm coming to your room.\"\n\n\"Get in here, Jake.\"\n\nJake walked in and found Ellie naked on the bed. She was rubbing her vibrator up and down her slit as he walked over and stood by the bed.\n\n\"I listened to Diane give you your blow job this morning. It sounded like a wet, sloppy one. It took all of my will power to not grab this vibrator when she made you come on her tits. I was afraid she'd hear me.\"\n\n\"Remember, no touching,\" he replied. Jake kneeled on the bed by Ellie's head and slid his knees apart until his balls were hanging just above Ellie's lips. Ellie took a long sniff, turned on the vibrator and pushed it to her clit. Her other hand pulled on one of her nipples.\n\n\"Now I want a good look at that bald pussy.\" Jake got up and walked around the bed, then crouched between her spread legs. Ellie spread them wider and pulled the vibrator away. She used both hands to pull her pussy wide open for Jake's inspection.\n\nJake leaned in and smelled her open pussy. It was very pink, inside and out, and very wet. Her clit seemed to throb.\n\n\"Fuck, Jake, this is so hot. And I'm so fucking horny I can't wait.\" With Jake only a foot from her pussy, Ellie rammed six inches of vibrator inside. \"Oh, Jake.\" Ellie began to fuck herself with the toy as she stared into Jake's eyes.\n\nJake stood up and began stroking his rising erection. He went back around the bed and kneeled by Ellie's head again. She stared as he pushed his cock down until the fat tip was almost touching her lips. Ellie pushed her tongue out toward his cock, so he pulled it away. \"No touching, Ellie,\" She groaned and pumped her pussy faster.\n\nEllie's large, pale tits were slightly flattened on her chest, and swaying back and forth as Jake leaned down over the nearest nipple for a closer look. Ellie watched him as he blew softly on her hard nipple. They both watched it pucker up, and saw the goose bumps arise all around her nipple. He leaned farther and did the same to the other nipple while Ellie grabbed the first nipple, pulling and twisting it hard.\n\nJake rose back up and grabbed his hard cock. He pushed the tip down near Ellie's lips and started to pump it hard toward her mouth. Ellie stared as she moaned and pounded her pussy. They were both getting close.\n\nJake pulled back, then got off of the bed. \"Slide down, Ellie, until your legs dangle over the edge of the bed.\" Ellie did as he said, sliding until her knees were at the end of the bed and her feet dangled below. Jake walked around the bed then laid down upon it. He was facing the opposite direction, with his feet near the headboard. He slid a pillow under each of their heads.\n\nThis put Jake's cock right next to Ellie's head, and his head right next to her pussy. He could see over her thigh, and he watched up close as she pumped her pink pussy. He started pumping his cock as he listened to the vibrator pushing in and out of the wet hole.\n\nEllie turned her head toward his cock. It was only eight inches from her mouth as she watched him pump it. As she stared, a big drop of pre-cum pushed from the head. \"Jake, I'm watching your cock ooze. I'm gonna see it explode.\"\n\n\"I'm watching your juices squirt out when you shove the vibrator in. God, you smell good. I'm gonna watch your bald, pink pussy cum.\"\n\nThey were both quiet now as they pumped away. Ellie broke the silence with a long moan, and then a squeak.\n\n\"I know that squeak. You make that noise when you're about to cum. Show me, Ellie. Cum.\"\n\n\"You first, Jake. I'll cum when I see your spunk shooting out. Shoot for me, Jake.\" Since they were both pumping with their right hands, and their left hands were between them, Ellie took Jake's hand. \"Hold my hand while I cum.\"\n\nThey were both pumping full speed, and staring at the cock and pussy next to them. Suddenly, Jake cried out and shot a big gob of cum straight up into the air. That set off Ellie. She buried the long vibrator in her pussy as she screamed and shook through a hard orgasm. Jake held Ellie's hand tightly as his cock continued to shoot.\n\nThey both lay panting, still holding hands as they recovered. Jake was dazed as he watched Ellie pull the vibrator out of her pussy and saw the creamy white cum slowly run out her. Ellie looked at the big pool of cum on Jake's belly.\n\nEllie finally sat up and found the box of tissues from her bed side table. She took one, and Jake watched as she delicately wiped her pussy. She handed Jake the box, then watched as he wiped up most of his cum. He got up, walked around the bed on shaky legs, and gave Ellie a kiss on the cheek.\n\n\"Ellie, that was fantastic. I hope we can do it again.\"\n\nShe kissed his cheek and replied. \"I'm counting on it, roommate.\" Jake staggered from the room and closed the door.\n\n**************************\n\nThe next Saturday brought a knock on the door. Jake opened it to find their landlord. He asked if they'd like to renew the lease on the apartment for the next school year. Ellie had just entered the room.\n\n\"Well roommate?\" she asked Jake. \"Can you handle another year with me?\"\n\nJake took the lease from the landlord, checked it quickly, then signed it. He handed it to Ellie, who also signed it and handed it back to the landlord. Jake spoke with the man for a few minutes about the details and dates, shook his hand, and showed him out. When he turned from the door Ellie was gone.\n\nWhen she re-appeared a moment later, Ellie was naked and holding her vibrator. She spread a long towel out on the couch, sat at one end, and patted the spot next to her as she smiled at Jake. \"How about celebrating with an orgasm?\"\n\nJake smiled as he pulled off his shirt. It was going to be a very good year."
    ],
    "authorname": "JosephWrites",
    "tags": [
        "masturbation",
        "vibrator",
        "roommate",
        "thin wall",
        "blow job",
        "best friend",
        "no touching",
        "orgasm",
        "listening",
        "squeak"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/no-touching-2"
}