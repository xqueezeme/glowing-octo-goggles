{
    "title": "Alexa is Intrigued by a Streaker",
    "pages": [
        "Like most of humanity, Alexa would never in a million years have guessed how her world would be turned upside down in just a few weeks. She had been expecting a stress-free few months finishing up her final semester, and was looking forward to graduating with a Bachelor of Arts degree, with honors. She had only needed a handful of credits, and had finished all the challenging courses her program required, so during the first few weeks of the semester she had been cruising through the easiest period of her college career and generally enjoying life.\n\nThen the damned Coronavirus came along and wrecked everything; her course sessions abruptly turned into a series of herky-jerky video calls. She'd accepted a great job offer with a prominent tech company, but that all went to hell with the tanking of the economy.\n\nBy mid-March the entire campus had closed down, with all students being told that there wouldn't be any in-person classes after Spring break. While Alexa wasn't forced to leave town, since she lived off-campus, all of her friends had to move out of their dorms; since their courses were all now meeting online they went back to live with their parents, leaving Alexa without anyone to hang out with. She considered moving back in with her folks too, but since her college town was almost virus-free and her hometown was hit pretty badly she agreed with her parents that it was probably better that she stay put for a few more months.\n\nWith minimal coursework and no social life at all, Alexa picked up some more shifts at her convenience store job; with half of his employees having left town, the store owner was glad to have her. The extra hours allowed Alexa to put some money away to eventually help her move on with her life, and she didn't have anything else to do; with all the students and most of the faculty gone as well, her life had been reduced to working or Netflix. No friends, no bars, no restaurants, no campus events...no fun. She was aware of how much better off she was than many people, but couldn't help finding it all fairly depressing.\n\nEven with half of the store staff gone, there generally wasn't much for Alexa to do. The store's customer base was almost entirely college students or employees. Once the stores in the small shopping center adjacent to the store were declared non-essential and shut down, her shifts more often than not had exactly zero customers. Martin, the store owner, confided in her that the only thing letting him keep the place open was a generous government-backed loan program; if he kept the doors open and kept his employees on the payroll the loan would be forgiven. \n\nDespite working solo most of the time, other than some light cleaning and re-stocking a few perishable items Alexa had almost nothing to do. Most of her shifts were spent reading or watching TV. She was thankful to at least be working days now, with Martin, one of his cousins and one or two other part-timers taking care of the evenings and overnights. \n\nThe running joke between Alexa and Martin as his shift ended and hers began consisted of Martin asking her, \"You sure you'll be able to handle it?\" \n\nTo which she inevitably replied, \"Relax, boss, I got this!\" This was usually the last conversation she had with another human until whoever was working the evening shift arrived to relieve her. \n\nThe truth was, though she could easily handle the small bit of actual work involved, the boredom was driving her crazy. One Wednesday in the middle of April she had forgotten to bring her book, so she spent most of the day flipping around the available channels looking for something worth watching. Mixed in with all the doom and gloom on the news channels there was a short segment that actually made her smile! \n\nAt a college a couple of states away, a masked (cheap surgical mask, of course) woman had been seen streaking across the mostly deserted campus almost every day for the last week! A news crew had staked out a spot she was known to frequently pass and actually got her to stop and be interviewed. Despite the heavy blurring done to make the story safe for broadcast, it was clear she wasn't wearing anything! \n\n\"I just thought the world could use some dumb fun right now, and this is all I could think of!\" she told the reporter, laughing, \"Besides, it's actually crazy fun, you should try it!\"\n\n\"Thanks for giving us something fun to cover, or should I say uncover?\" the correspondent said, grinning. \n\nAlexa groaned at the reporter's cheesy comment, but had to admire the woman's daring, and thought her behavior was actually pretty generous considering the state of the world; as silly as it was, the mystery woman had certainly made Alexa's day a little more tolerable. She caught the segment a few more times that afternoon, laughing each time she saw it. \n\nSeeing the video of the streaker made Alexa think about her crazy New Year's Eve escapade. Her naked adventure that night had been more about overcoming her own boredom than brightening the day of any bystanders, and was only made possible by her drinking a bit too much champagne, so she and the TV streaker had very different motivations.\n\nIn Alexa's case, being seen hadn't been her intent, at least not at first! Different as their streaking was, Alexa could definitely appreciate the woman's \"crazy fun\" comment, and though it hadn't been any kind of plan she was sure she had given a couple of men something pleasant to remember.\n\nThe one regret Alexa had about her brief taste of exhibitionism was not getting a photo of herself in mid-adventure; she'd never done anything remotely like it before and was sure she never would again, so she sort of wished she had some documentation of her one wild night.\n\nShe even thought if there was a photo showing her nude in the store but not showing her face, as long as she wasn't recognizable she could tape it up next to the photo of another woman who had become something of a store legend by getting naked there one night a few months before Alexa began working there.\n\nAlexa liked to think that a photo like that might someday inspire some future employee the way the first woman's photo had given her the idea to do something so outrageous!\n\nOver the next several days Alexa continued thinking about the streaker; at first, she just remembered the actual news segment, less than a minute long but memorable because, well, how often do you see a naked woman on the news?\n\nEventually, she began thinking about what it would be like to see the streaker in action in person, and wondered how many people might have already seen her.\n\nFrom there it was a natural jump to start thinking about the logistics involved. How far did she run? Where did she get undressed? Did she place clothes at her destination or run in a loop back to her starting point? Did she strip in front of anyone or stay out of sight until she began running? Did she actually try to be seen or just leave it to chance? Did anyone she knew even know about her streaking?\n\nBy the time a week had passed since she had seen the streaker on TV, Alexa had begun to move beyond theorizing about how the streaker in the news might go about her daring behavior.\n\nJust as a sort of thought exercise to fend off boredom, Alexa began to think about how best to do a streak if one wanted to; where, when, and how to leave clothes behind, whether to strip in view of anyone or emerge from a building or car already naked, how to be sure to have clothes safely waiting at the end of the route, and a few dozen other details, not least of which was whether to try to accomplish the streak undetected or intentionally allow oneself to be seen!\n\nShe laughed at herself for spending so much time on such a pointless exercise, but it was a fun way to pass time, even if she couldn't think of anyone she knew who would be likely to ever actually do such a thing. \n\nHer own one-time-only experience with public nudity had been an impulsive, champagne-fueled bit of madness, being a lightweight when drinking and being bored had combined to overwhelm her usual sensible personality; what she was doing now was just a harmless way to kill time.\n\nThough it was true that she found imagining herself naked somewhere out in the world mildly exciting, it wasn't anywhere near the top of her list of fantasies, and definitely not something she could see herself trying. She guessed that she was probably the least likely of her circle of cautious friends to ever do such a thing, not that any of her gang were particularly likely to flash their body either; even the girl in their group who had once entered a wet t-shirt contest insisted she never could have done so if she hadn't downed several Long Island Iced Teas before deciding to enter.\n\nOnce Alexa began to focus on the logistics of a still very much theoretical plan for a streak, she spent more and more time thinking through each detail. Options were developed, considered, and either rejected or incorporated into her plan. Somewhere along the way she had begun calling it a plan, not because she expected anyone to use it as a guide to actually doing a streak, but because she found that imagining someone actually carrying it out made her think more clearly about how best to achieve her goals.\n\nThe goals led to a set of rules, developed as she began to consider her many options, which were written on the first page of a notebook she began using to keep track of her ideas and write up the entire plan for the streak from beginning to end; without thinking about it, Alexa had begun treating the proposed streak like one of her school research projects, with multiple drafts and revisions. \n\nIn large print on the first page of the notebook, Alexa wrote:\n\n1) Run (or walk) from one point to another outdoors while I'm completely naked.\n\n2) Distance covered should be at least \u00bc mile, preferably longer.\n\n3) Being seen should be possible, but not necessarily probable.\n\n4) Other than by choosing the route and timing, I can have no control over whether or not I am seen.\n\n5) I MUST do the streak during daylight hours.\n\n6) Once fully naked, I am to have no clothing available until reaching the end of my planned route.\n\n7) I am to have no help or assistance from anyone.\n\n8) No alcohol or any other mind-altering substances are allowed, I am to do the streak stone-cold sober or not at all.\n\nReviewing her rules a few days after writing them, Alexa blushed as she noticed something she'd somehow missed before; she quickly revised the rules, replacing \"I\" with \"the streaker\". While it was true that lately she had become used to imagining herself carrying out the plan, she told herself that she only imagined herself in the role of streaker to work out the details of the purely theoretical plan. \n\nAbout three weeks after she had seen the streaker on TV, Alexa was finally satisfied with the plan she had worked out. It was daring, but she thought it was certainly feasible if one was brave enough. \"Brave enough to risk being seen stark naked by anyone lucky enough to be at the right place at the right time!\" she said to herself, shivering at the thought.\n\nShe was pleased with her plan, and a little bit sad to put it away now that it was finished, but there was really nothing left to add, no more revisions to be made. She went back to her books and TV to pass time during her shifts at the store but frequently found herself distracted. \n\nAlexa eventually admitted to herself that she had become more than just curious about how some theoretical streaker might fare if they were to follow her plan; all the time she had invested in planning out the streak had made her wish she could somehow convince someone to take her plan beyond being theoretical, to actually risk executing it, getting naked in the real world.\n\nShe posted on her Facebook page a version of one of the \"Never Have I Ever\" quizzes floating around the internet, including a question on streaking, and another about stripping, hoping she might find that one of her friends or acquaintances would turn out to be unexpectedly daring. Though she got a lot of responses the exercise just proved once again what a cautious bunch she and her friends were. Even her fairly long list of Facebook friends didn't turn out to have any admitted streakers for Alexa to recruit.\n\nShe didn't have any idea how she might get a volunteer interested anyway, imagining her side of an awkward conversation with someone she might not have seen in several years, \"Hi Heather...yeah, it's been a while.... thanks for responding to the quiz. I noticed you have some experience streaking; as it happens I'm looking for someone to do a streak I've planned out....oh, no, no, I won't be doing it, no way!....yeah, you're right, I'm kind of a coward, but I really want to see how well my plan works; I think for someone like you who's used to streaking, it might be fun...oh, just the one time, Freshman year....they stole your clothes?....Yeah, you're right, that doesn't sound like fun at all....For what it's worth I'd definitely take care of your clothes if you....Okay, I get it, sorry to bother you, bye-bye.\" \n\nAnyone who knew her would have said Alexa was probably the least likely person they knew to pull such a stunt; she was known to be cautious and a rule follower, definitely not a rebel. All that was true, but since she clearly wasn't going to find anyone else willing to do it, she found herself beginning to think about how it would play out, and wondering how it would feel if she tried to go through with it herself! She spent the better part of three days carefully weighing the pros and cons of carrying out her plan on her own!\n\nDuring her deliberations, she wondered if she would have made the rules quite so challenging if she had been anticipating having to follow them herself! \"Did I intend all along to be bound by these damned rules?\" she wondered, a little nervous at the idea that something in her subconscious might have been quietly steering her to this point for the past several weeks.\n\nIn the end, her choice was between finally finding out how her plan would work out if set in motion or playing it safe by keeping it tucked away in her notebook. As terrifying as it was for her to imagine being even partly undressed in public, in broad daylight, for a considerable amount of both time and distance, her curiosity had by now become ever so slightly stronger than her fear. \"If I don't at least try to do this I'll always wonder how much of it I could have done, how it would have gone in reality compared with my best effort to plan it out, and most of all how I would feel during it!\" she told herself.\n\nShe was still sure trying to do the entire plan as she had developed it was a truly foolish idea but wasn't too worried about the more demanding parts since she more or less expected to chicken out before removing a single piece of clothing and was all but certain she'd back out well before being truly exposed. Though she doubted her ability to completely follow her plan she was determined to see how far she could get!\n\nAfter making her decision to attempt at least some part of her streaking plan, Alexa needed a couple of days to ready herself and her outfit. By the following Wednesday, her preparations were complete and she was ready as she'd ever be. Other than being exactly four weeks since she had seen the streaker on TV, being a Wednesday didn't really make any difference; at Alexa's workplace, every day was pretty much the same.\n\n\"Except today,\" she thought, \"This being the day I take off all my clothes, leave them behind and go for a little jaunt!\" The thought of what she had planned for today had her shivering, even though she wasn't going to begin the more daring part of her scheme for at least another hour. \n\n\"Are you okay?\" Martin asked when he saw Alexa shivering as she arrived for work right at 8:00 AM.\n\n\"Um, yeah, just kind of cold in here, I didn't have the AC on in my car.\" she lied. \"Can't very well tell him I'm shivering because I'm thinking I may possibly be naked right where he's now standing in a few hours!\" she thought to herself. \n\n\"Well, maybe getting your smock on will help you warm up,\" Martin suggested, \"and I can turn the thermostat up a couple of degrees if you're still cold in an hour or so.\"\n\n\"You'll still be here in an hour?\" Alexa asked as she took her smock out of her locker, \"Usually you take off as soon as I clock in.\"\n\n\"Not today, I'm afraid; I need to go over some invoices and it's too distracting at home with the kids not in school. I should be done in a couple of hours.\" \n\nAlexa was both relieved and nervous; relieved because she had some extra time before she'd have to shed her clothes and nervous because she had planned everything to happen at a particular time. She tried to adjust the schedule in her head to see if the delay in starting her plan was likely to create any problems. In her stressed state, she couldn't remember some details so she took her streaking notebook out of her bag and reviewed the plan one last time from start to finish; everything still seemed to work as long as Martin didn't hang around any later than Noon.\n\n\"What's in the notebook?\" Martin asked. Alexa hadn't noticed him leave his office, and jumped a little.\n\n\"Just some class notes,\" she lied again, thinking \"Can't very well show him my detailed plan about wandering about in my birthday suit.\" More shivering.\n\n\"Wow, looks like your smock didn't make much difference,\" said Martin, \"I'll turn the AC down a little.\"\n\n\"Thanks,\" Alexa said, though she didn't expect her shivering to go away no matter what Martin set the store's thermostat to.\n\nMartin retreated to his office and concentrated on his paperwork. Alexa puttered around the store, straightening up and dusting to justify her presence. Martin finally finished up his tasks around 11:30 and said goodbye, smiling as he asked Alexa, \"You sure you'll be able to handle it?\" \n\nFairly nervous as the start of her plan was getting nearer and distracted by her review of the change in her schedule, Alexa hesitated before replying, \"Uh, yeah, relax, boss, I got this!\", her voice quavering a bit and slightly muffled beneath her surgical mask. \n\nMartin was barely out the door before Alexa began feeling butterflies in her stomach, even though she wasn't scheduled to do anything too bold for some time; though it was just beginning, Martin's departure was her plan's official starting point. She drew a deep breath and said in a shaky voice, \"Okay, here I go!\" to the empty store.\n\nShe began her first few steps towards executing her plan; by design, the early steps were not risky or challenging, just necessary tasks, and a way to ease into the process. She couldn't completely get the harder steps to come later out of her mind, but checking off these easy early items on her to-do list did help calm her down, being mostly normal enough things to do:\n\n1) Remove your smock, place in locker along with purse. Keep ONLY one set of car keys and a coin out of the locker and take with you in a small plastic bag from the sales counter, lock your locker with a padlock. Make sure your spare car key is in your purse! Hide padlock key but remember where you hid it!\n\n2) Go to front window, look out at parking lot and road for 10-20 minutes (sometimes lately there wasn't much else to do, today this was active surveillance).\n\n3) Call Martin to ask about some store operations question (actually just to confirm he was at home, but a normal enough thing to do).\n\n4) Lock front door, flip sign to \"Sorry, we're closed\" side (Usual procedure for a bathroom break when working solo). \n\n5) As soon as you see the city bus pass by, go out the back door, key in 6 digit code to lock. You have exactly one hour before the next bus arrives. Make sure door is latched (normal way to leave the store on a few occasions when she had to depart a few minutes before the next shift arrived)",
        "6) Get in your car, drive slowly across the entire parking lot, park at far end (not typical, but something she sometimes did to sit in the only part of the parking lot with shade at mid-day and eat her lunch) \n\n7) Get out of the car, walk the length of shopping center sidewalk, (something she'd done a few times back when stores were still occupied, today just verifying that nobody else was around.\n\nShe knew she was now as close to her workplace as at any point in her travels, within 200 feet. She could just walk back to work right now, fully dressed, and have a nice, quiet, stress-free day. After a full minute spent thinking about the road not taken, Alexa turned away from her workplace.\n\n\"So far, so good,\" she thought. Everything is going as planned, with no sign of anyone in the stores and the usual nonexistent traffic. Maybe this won't be as hard as I've been thinking it would be,\" she told herself, though she knew the degree of difficulty was about to go up. A lot.\n\n8) Head back on the sidewalk along the storefronts to the far end of the center where your car is parked. Every time you pass a store entrance, unbutton one of the buttons on your blouse, in any order you prefer.\n\n\"Ahhh, even though I knew this was coming, it still kind of feels like a shock!\" Alexa whispered to herself, \"I guess the shock is that I'm trying this at all!\" she said in a clearer voice as she passed the first of many store entrances and reached for the button at her blouse's collar. She realized she must have been preparing for this when she got dressed this morning; she normally never buttoned the top two buttons on a blouse like this!\n\nDespite having to deal with the additional buttons, her slow walking pace and some delay caused by the considerable shaking her hands were doing after the fourth button, her blouse was fully open and flowing behind her in the breeze in less than eight minutes. With all six buttons unfastened, Alexa took a deep breath and reminded herself what step 9 now demanded of her.\n\n9) Once your blouse is completely unbuttoned, find a trash receptacle and throw your blouse away. \n\nUndoing all the buttons on her blouse in public had seemed quite daring enough; actually removing it out there and throwing it away seemed downright reckless. She was fast approaching the point of not having a good explanation for her appearance if anyone were to ask. \"Fortunately, there's nobody around but me, so off it comes!\" she said out loud. Her bravado was undercut somewhat by the way she shook a bit as she slipped her left arm free; the shaking only intensified once her right arm was free, with the blouse now completely off. \"I know the crazy chick who wrote these instructions; I'll bet she thought I wouldn't get this far!\" Alexa thought as she dropped the blouse in the first trash receptacle she came upon.\n\nA few days earlier, Alexa had made a quick visit after work to a local Goodwill thrift store to prepare for today's challenge, knowing there was at least a slim chance she might get far enough along in her plan to treat at least some piece of her ensemble as disposable! She thought the chance she would actually dispose of her entire outfit was minuscule, laughably improbable, but she was a meticulous planner and also didn't want a reluctance to part with any item of her normal clothing to influence the outcome of her experiment. Since her entire outfit had cost her less than $20, (other than her favorite sandals, which she had no intention of permanently parting with) she was prepared, at least financially, to lose everything she was still wearing above her ankles. Whether she was prepared to go anywhere near that far emotionally was still very much an open question as she moved on to step 10. \n\n10) Each time you pass a store entrance, undo one button on your skirt. If (or rather when) it is loose enough to slide off you, let it! Step out of the skirt and stuff it through a mail slot at one of the stores, all the way through until it drops to the floor inside the store.\n\nWhat the hell had she been thinking when she developed these instructions? Surely not that she'd have to comply with them herself! Losing the blouse hadn't really been too outrageous since the only bra she'd found at the thrift store in her size was dark, full cut, and made of a solid fabric; it wasn't really any more revealing than some tops her friends wore out clubbing.\n\nGetting out of the skirt was a different matter. Pretty much never did you see anyone at a shopping center like this dressed below the waist in only a lacy purple thong like the one now peeking out above the waistband of her skirt after she'd undone the first of four buttons. The thong looked much more like something you might see a stripper wearing, at least temporarily. \"Maybe I should have looked for something less flashy in the back of my lingerie drawer,\" she thought as the second button being undone let the waistband of her skirt slide noticeably lower down her butt.\n\n\"Then again, improbable as it still seems, if I somehow don't lose my nerve in the next few minutes, the style of panties I began this adventure wearing really won't matter anymore!\" The realization of how close she was getting to full-on nudity made her shudder, in a surprisingly good way. A mix of fear and arousal was building in her as she set off for the next entrance.\n\nThe next store entrance was fairly far off, as she was now passing a large grocery store. She welcomed the delay before she would need to undo button number three, and drew out her remaining time with her skirt still looking sort of respectable by stopping a few times to read various notices taped inside the store windows, \"Hmmmn, there's a fundraiser for St. Cuthbert's school band next week,\" she read silently, \"and a Honda Civic for sale.\" Realizing she was stalling, she finally stopped her dawdling and resumed her march toward the next entrance.\n\nPopping the third button was almost enough to let gravity have its way with the imitation silk skirt. Almost, but not quite; despite the temperature having risen to the low 80's, Alexa felt a chill knowing that her essentially naked butt was only fractions of an inch away from being completely revealed! She paused at the next store entrance, one with a recessed door which combined with adjacent windows to make a pretty good three-way mirror.\n\nShe was fairly amazed at the sight of her reflection, dressed as it was in only a bra, a positively sinful looking thong, now mostly in view, and her skirt, which was now riding about as low on her hips as possible! She was so busy admiring her reflection that she didn't remember for a minute that reaching this entrance meant that it was time to release the final button. She fumbled with it briefly, a reasonable reaction to her awareness of how little she was about to be wearing, in plain view, at what was it by now, maybe 12:30 in the afternoon? \n\nWhen she'd decided just a few days ago to make this attempt to carry out her plan, she had also decided that if, or more realistically, when she reached a point where she couldn't make herself take any more clothing off, she would continue to act out each step, pretending to strip without actually removing any clothing. \n\nShe knew she would look odd pantomiming most of her strip and streak, but thought it would allow her to at least imagine a little bit of what truly living out the entire plan would have felt like. She was now one button away from blowing past the point she had expected to switch to pretending to strip!\n\nAlexa hung on to the skirt for a long moment after freeing the final button, suddenly reluctant to let the skirt drop to the sidewalk. She looked at her reflection in the door, realizing for the first time she was breathing noticeably harder than usual, about as if she had just run up several flights of stairs.\n\nShe turned slowly, looking back over her shoulder, and saw that though she hadn't yet let go of the skirt it was now low enough to reveal her entire ass. She considered her butt to be her sexiest feature, full and rounded but kept firm by her regular gym sessions. The view over her shoulder confirmed that her thong was showing it off nicely!\n\nSince the skirt had ceased to cover anything it was meant to, she let it go and stepped out of the small puddle of fabric that settled around her feet. Knowing any hesitation might let doubts about her present course of action take over, she quickly dropped to her knees and stuffed the skirt into the mail slot a foot or so above the sidewalk. Her heart was racing but skipped a beat when she released the last bit of the pleated garment and watched it disappear through the slot and settle on the floor inside the store. \n\nAlexa gave some serious thought to ending her quest now, or at least switching to her imitation striptease option; she already looked scandalous and couldn't really lose any more clothing without some truly serious exposure. She was well aware of what the next step would require. \n\nShe hadn't really expected to be able to push herself this far and had already been far bolder than she thought possible; on the other hand, when would she ever be in this kind of situation again, having such a public space all to herself, allowing her to be so daring? \"I'm so close!\" she thought, \"I think I might actually be able to do this, to go all the way!\" Even after her decision was made, she found herself shaking as she began step 11.\n\n11) Walk out to a point halfway between the stores and your car. Take your bra off. Slowly. When you have it off, take the coin out of the bag and flip it; heads -- unlock the car and put the bra inside, tails -- walk back to the nearest store and stuff the bra through the mail slot.\n\nAlexa took a couple of steps off the sidewalk onto the parking lot, then stopped. Despite having started off, she doubted she could go topless out in such an open spot; up to now all of her disrobing had taken place in the relative shelter of the deep shade at the sidewalk, partly hidden by trash receptacles, planters, columns, and benches, not out in the wide-open, sunny parking lot!\n\nShe silently cursed herself for having parked so far from the building, knowing the resulting spot where her own instructions were calling for her to stand while slowly stripping out of her bra was at least 60 feet from either the building or her car. The location would leave her far from any shelter but would potentially give any passerby lucky enough to come by at the right time an unobstructed view of her open-air striptease!\n\nStanding still at the edge of the parking lot, she told herself that back when she'd made up this plan, even when she'd parked the car a short time ago, she probably had believed the car's location would be irrelevant by this point, fully expecting that she'd already have quit removing clothing a step or two ago.\n\nThe possibility now occurred to Alexa that some previously unknown part of her psyche had intentionally chosen such an open area for her to occupy as she freed herself from her bra, eagerly anticipating how exposed she would be in that spot! \"I could have parked right next to the sidewalk, but I didn't,\" she whispered, as if she was revealing a shameful secret, \"I chose this.\" She now faced another choice; whether to keep removing clothing or give in to the temptation to just act out the removal of what little remained of her outfit. \n\nAs she resumed her slow walk towards the midpoint between the building and her car she thought, \"If I do have an inner exhibitionist trying to get me out of my clothes, I have to admit she's doing a good job. An hour ago I'd have bet a month's pay that by now I'd just be going through the motions. I can't believe I'm doing any of this!\" \n\nReaching her destination but still undecided about continuing with her striptease, Alexa scanned her surroundings one more time; taking comfort in the utterly quiet setting, she took a deep breath and reached for the bra strap riding on her left shoulder. She pretended to lift the strap off her shoulder and down her arm, even pretending to wriggle her arm out from inside the loose imaginary strap, then suddenly stopped. After a long pause, she closed her eyes, and slipped a finger under the strap to slide it slowly down her upper arm and over her elbow, this time for real! \n\nDespite feeling a little light-headed, she slipped her left arm out of the dangling strap and repeated the process on her right side. She reached behind her back with her right hand, feeling her way to the four small hooks at the center of her back which were now all that was allowing the bra to keep her ample breasts covered. Holding her left arm tight to the front of the bra, she whispered, \"okay, looks like I'm really doing this after all!\" and popped the hooks loose; the back straps sprung away, exposing her entire back!\n\nAfter one more look around to see if she had acquired an audience, she looked down at her breasts, now covered only because her left forearm was still holding the cups of her bra loosely in place. She hesitated for a moment, not because of any lingering modesty, but just to allow herself time to revel in each new sensation.\n\nIgnoring the pounding of her heart, she squeezed her right breast as she shifted her left arm slightly, just enough to let the bra slip away, uncovering her left breast! She smiled as she pulled the bra away from her body, completely revealing her full, teardrop-shaped breasts and small pink nipples!\n\nSurprised by a sudden wish that some unseen observer might now be enjoying her act, she playfully swung the bra around a few times before draping it over her shoulder, thinking, \"this is probably as close as I'll ever get to actually being a stripper, so I may as well act the part!\" She knew that if she had gone on with her imitation strip act she'd have missed out on a feeling like none she had ever experienced. \n\nShe remembered how a boyfriend she had during her Sophomore year had asked her to strip for him. She had flat out refused to even consider performing a striptease then, in the privacy of her dorm room and for the pleasure of only one man, who she was already having sex with. Now she was doing a very public striptease for the enjoyment of any stranger who might happen to look her way! Even more amazing, she was actually enjoying herself!\n\nShe was shocked that imagining herself being a stripper affected her the way it did; her pulse shot up, she could feel her face flush and her nipples stiffen. She offered a silent retroactive apology to her former boyfriend, saying, \"Sorry, Josh; if I'd known how much I'd end up liking this I'd definitely have stripped for you.\"\n\nShe fished the coin out and flipped it; tails. She had strong reservations about putting one of her two remaining bits of clothing beyond her reach; as skimpy as they were, they would be vastly better than nothing if she needed to cover up. Doubts considered and overcome, she felt her pulse getting faster again as she complied with the instructions, stuffing the bulky bra through the same mail slot which had swallowed her skirt a few minutes ago.\n\nSeeing herself reflected in the door, practically naked, she shuddered as she thought about how drastically her outfit had been diminished in just the last few minutes. She shook in earnest as she thought about whether or not she should go on to step 12. She actually already knew whether she ought to proceed; of course not, what she was doing now was insane! She also knew there was no chance she could stop before completing at least one more step!\n\n12) Walk back out to a point halfway between the stores and your car. Take off your panties. Slowly. When you have them off, flip the coin again; heads -- unlock the car and put the panties inside, tails -- walk back to the nearest store and stuff the panties through the mail slot.\n\n\"Simple enough in theory, making up this challenge in the fully dressed safety of your apartment or workplace,\" Alexa thought as she walked slowly back to the same spot where she had stripped out of her bra moments ago, now to be the setting for her to peel off her thong, \"considerably harder if you're actually out in the open deciding whether or not to take off your last bit of clothing, not to mention possibly putting said last piece of clothing irrevocably out of reach! How am I even considering this?\"\n\nNow that she was finally on the verge of being naked, she wondered how her current plan had become so focused on the process of stripping instead of actually running around in the nude; \"maybe I'm more of a stripper at heart than a frolic about naked kind of girl,\" she thought, \"but I can't say for sure unless I try that kind of streaking, and maybe just for the sake of comparison, strip for real sometime with an actual audience! So many things to try...\" \n\nThen the memory of her recent reaction to acting like a stripper took over; she breathed a little harder as she hooked her thumbs over the waistband of the thong and began working them down, down, down, as slowly as she could stand, teasing herself mercilessly. She wondered if she was teasing anyone else at the moment, but knew that she wouldn't be torturing any lucky spectator currently watching her for much longer! She wished she had a mirror to see how she looked right then, with her ass now free of what little cover the thong had been providing.\n\nShe didn't need a mirror to have a good view of her clit and pussy as they were revealed. Just the night before she had shaved away all but a tiny tuft of her blonde pubes to show her sex off as completely as possible, even though she had thought it extraordinarily unlikely that she'd follow the plan anywhere like this far, or that anything like this much of her body would be exposed! \"If anyone is watching... ohhh man, I hope someone is!\" she whispered, shocking herself one more time as she pulled the lacy garment halfway down her thighs!\n\nAlexa felt a surge of energy with each slight movement of the thong, her pulse now pounding in her ears as her reveal was complete. She knew it wouldn't take much at all now to push her over the edge into an orgasm, but managed, barely, to hold herself back. She had accepted the fact that she might be seen by someone while naked, and incredibly enough was even getting to like the idea, but masturbating in public wasn't about to happen for her, \"Not now, anyway,\" she thought.\n\nShe let go of the thong entirely and watched it slip down her legs and settle on the asphalt parking lot surface. She stared at it a moment, stunned at what she had just done, then disentangled it from her feet and picked it up. She looked around sheepishly to see if anyone might have arrived just in time to see her complete her strip. She was relieved, mostly, to see no sign she had been watched, and moved on to her next task.\n\nWith her thong now removed it was time for the coin flip to determine its fate. She would be a little sad if she couldn't keep it as a souvenir of this amazing experience, and everything else she'd started her adventure wearing was already lost to her. She was also more than a little nervous about having to finish her remaining tasks without a single garment of any sort available to her! \"Am I really going to let the flip of a coin deprive me of my last bit of cover?\" she thought, then quickly answered her own question, \"Apparently I am!\" as she flipped the coin one more time. She held her breath as the coin spun in the air; tails again! \n\nShe walked over to the same mail slot as before, wondering what whoever eventually found her discarded pieces of clothing would guess about how they had come to be there. When she reached the door she paused, not due to any remaining reluctance to give up the thong, but just to take in her reflection.\n\nShe saw her naked reflection just about every day in the privacy of her apartment, but seeing herself totally nude with a parking lot, open sky and buildings in the background was a completely new experience. She smiled as the thong disappeared through the mail slot, reunited with her bra and skirt. \"Okay girl, now you're really working without a net,\" she whispered to herself. The last shred of her clothing having been discarded, Alexa moved on to step 13.",
        "13) Put anything you still have with you or are wearing into the car and lock it. Yes, assuming you left the spare key in your locker back at your workplace, this includes the car key! Walk a full lap around the perimeter of the parking lot, returning to touch your car before walking back to your workplace by way of the shopping center storefronts. Let yourself in the back door with the keypad, get your smock out of your locker and put it on, wearing only it, and ONLY it until the end of your shift. Congratulations, you've met every challenge!\n\nWhile she couldn't get any more naked than she already was, this instruction added a new element of risk, since locking the keys in her car would mean that the fairly distant convenience store would be her only refuge if anything were to go wrong. She hadn't yet felt the need to retreat to the car, but now that she was completely naked the idea of losing her only nearby shelter was pretty scary. \n\nThere was also a fairly long walk to be taken, while naked and barefoot! Still, she hadn't regretted going forward with a single step so far, so she slipped out of her sandals, took off her mask, then put her coin, a necklace, three rings, a couple of bracelets, and the car keys all in the small plastic bag, and placed the collected items on the driver's seat.\n\nSomething about the loss of her footwear made her feel even more vulnerable than her nudity had already done. Though she was almost too frightened to lock herself out of the car, vulnerable as she was, she took a deep breath, hit the lock button, and swung the door shut. Strangely, the realization that she had at least temporarily given up every single garment and possession gave her a feeling of freedom. \"If the song's right about freedom being just another word for nothing left to lose, I'm about as free as a person can get!\" she thought.\n\nIt occurred to her how rare a thing it was for her to not be carrying a single object out in the world; no keys, no phone, no laptop, no backpack loaded down with books, no jewelry, no cup of coffee, no purse with its dozens of items inside. The absence of any possessions felt almost as unsettling as her complete lack of clothing! Pleased with herself for being brave enough to take on this final challenge, she set out on her lap around the parking lot.\n\nOne side of the lot was easy enough to traverse, as a thick row of hedges blocked a small office building from view, more importantly blocking anyone in the building from getting a look at the buxom naked blonde slowly picking her way along the edge of the parking lot, carefully trying to avoid stepping on anything sharp. \n\nThe next side was the longest, following the path of the street from one end of the center to the other. This side was the real challenge; there was a nice smooth sidewalk, but a whole row of three-story buildings lined the other side of the street, less than fifty feet from the path Alexa would soon be walking. She studied the buildings for a minute before committing to this very long, very exposed part of her route.\n\nThe ground floors were all occupied by small businesses, so were unlikely to be occupied during the shutdown, but she couldn't tell if the upper two stories were part of the businesses or, she quivered to think, apartments, likely to be occupied by bored residents. She might be about to make some people's day a lot less boring, and shuddered to think that maybe she already had!\n\nDeciding that having some anonymous people see her stroll by while naked would be tolerable, Alexa crept out from behind the hedge she had been sheltering behind and strode down the sidewalk at a brisk clip. Despite deciding to go through with this part of her task, she wasn't sure she really wanted to know whether or not any eyes were trained on her.\n\nAbout halfway along the segment, her curiosity overcame whatever embarrassment she still felt about her nudity; she stopped and turned to look across the street. Even a quick look was enough to see at least a half dozen curtains being shifted in the upper floors. \"Ohmigod, I definitely have an audience,\" she groaned, blushing a deep red and feeling a familiar tingle down below, \"but I can't turn back now.\"\n\nUp until that point Alexa had been able to use the fact that she couldn't be certain she had been seen by a single person to make her broad-daylight nudity and increasingly outrageous behavior seem like no big deal. She had found herself adapting a version of the question about a tree in the forest making any sound to her own situation, asking, \"If a woman takes off all her clothes in a public parking lot but nobody sees her do it, is she really naked?\"\n\nNow she had to decide how she felt about the reality that several strangers were right that minute watching her naked stroll! Though she hadn't thought it was likely, she had always known this might happen if she followed her plan this far, and now that it was a done deal she decided she didn't feel like having strangers see her naked body harmed her in any way; in a sense, knowing she was being observed brought her back to her original curiosity about the streaker on TV and how she must have felt when streaking with an audience!\n\nAs for how she was feeling now herself, as she processed the awareness of just how public her public nudity had turned out to be, she had to admit that however unlikely it might be, she was actually enjoying being watched! \"I hope whoever is watching is getting as much out of this as I am!\" she thought.\n\nShe resumed her walk, but her stroll became more of a strut as she slowed her pace and spun around a couple of times to give whoever was watching the chance to see her from all angles as well as a bit more time to enjoy the show, and also to give herself a bit more time to enjoy being the show!\n\nThe third side of the lot was really just the border between the shopping center and her store's lot, not very interesting or very challenging. She considered stopping there and leaving out the last few legs of the streak she had tasked herself with, but having come so far and experienced so much she wanted to complete the entire challenge. \n\nThe last piece of her parking lot perimeter hike was really just a walk alongside the sidewalk in front of the stores, not too interesting except as a sort of a trip down memory lane. The last time she walked along this route in this direction she had started off fully dressed; it seemed a lot longer ago than the 45 minutes or so her adventure had taken; a lot had changed in that time.\n\nAlexa didn't feel like the same woman whose hands shook so much she could hardly unbutton her blouse the last time she passed this way, or even the one so reluctant to let her skirt drop to the sidewalk a few doors further down the sidewalk. \n\nAfter touching her car as directed, Alexa turned to finally head back to her workplace, walking back on the sidewalk. She actually stopped a few times to see what was in some of the store windows, noticing what some of them sold or did for the first time. She also paused once or twice to admire the bold young woman reflected in the window.\n\nShe had almost made it to the end of the center when she was startled by a loud tapping on the window of the store she was passing, coming from inside the store! It took Alexa a few seconds to see past the reflection into the darkened space inside, but eventually was able to see a gray-haired woman looking out at her, smiling and applauding\n\nAlexa blushed deeply in reaction to being seen in her current state by someone so near, but she smiled back. The woman gave her a two-handed thumbs-up sign, which Alexa responded to with a deep bow before continuing on her way to her workplace.\n\nThe last few hundred feet of Alexa's naked stroll passed by uneventfully. Though she was still feeling a steady tingly feeling being so exposed and vulnerable, by now she was looking forward to covering up, even if only with her work uniform. While having only the smock meant whoever was scheduled to come in at 4 PM to relieve her would be treated to an unprecedented view of her legs, she remembered from past experience that the smock was long enough to conceal everything panties or her skimpiest shorts would have. \n\nShe wished she had brought along a whole spare outfit today, but she honestly hadn't believed she was going to get through anything like the full plan. Clearly, the lack of a backup set of clothes hadn't discouraged her from parting with everything she was wearing as she began her working day. \n\nShe laughed as she remembered what her expectation had been; she had imagined getting as far as completely unbuttoning her blouse and maybe, just possibly, taking it off! \n\nShe walked around the corner of the building and went straight to the back door; she keyed in the 6 digit code on the lock, only to have the red light on the keypad light up and the words \"incorrect code\" show up on the small screen! She was sure she had remembered the code correctly, so she assumed she must have just pressed one of the digits incorrectly. She made herself wait a minute to be sure her hands were steady before carefully entering the code again; again, red light! \"Fuck me, what's wrong with this damned lock?\" she muttered. \n\nAlexa tried to remember everything Martin had told her about how the keypad functioned. She knew from her own experience that three incorrect attempts would lock up the keypad for an hour; she had messed up three times in a row once when trying to lock up and had to wait for the keypad to reset, an outcome she was desperate to avoid repeating now! She remembered pretty clearly his explanation of how the lock worked and was sure of the code, a ridiculously simple one.\n\n\"How the hell can I have messed up 123456?\" she grumbled, \"I'm sure that's what I keyed in to lock up earlier, so what the hell is going on here?\" She keyed in the digits one more time, this time making sure the correct numbers were displayed on the screen before pressing the enter button. Red light again, this time resulting in the word LOCKOUT and a digital readout of the one-hour countdown triggered by her third failed attempt.\n\n\"ARRRH! FUCK, FUCK, FUCK!\" she shouted. She sat down on an empty milk crate, trying to think of some way out of this mess. Some way that didn't involve hanging out behind the store naked for a few hours and having to explain her situation to whoever arrived to work the next shift. After a few minutes, she had only come up with one idea. She headed back towards the store where the woman had been applauding, thinking she would be likely to help.\n\nThe friendly woman may well have been willing to help, but by the time Alexa reached the store there was no sign of the woman inside, and no answer to Alexa's repeated knocking. \n\nAlexa thought for a moment about where she could find something, anything to wear; she remembered that her blouse, the first piece of clothing she'd stripped out of, was in a trash receptacle, the only piece of clothing she hadn't shoved through one of the mail slots. \n\nShe wasn't sure it was even long enough to cover up any of her ass or pussy, but at this point, it would have to do. She looked in three receptacles before finding the one with her blouse at the bottom, a location which, combined with the design of the lid of the receptacle, made it impossible for Alexa to reach it. Of course. \n\nBefore giving up on retrieving the blouse, Alexa was so focused on trying to reach it she didn't notice the sound of the city bus approaching in time to take cover, but she did manage to turn to check how many passengers it was carrying; it looked like a properly social distanced ten or twelve, at least some of whom were looking her way! \n\nAlexa trudged back to her store, resigned to waiting for some fellow employee to come and let her in. When she was sure it had been close to an hour since her botched attempt to unlock the door she was about to try again, with little hope but nothing to lose. Just as she was about to approach the door she heard a vehicle arriving. This was way too early for her replacement -- had Martin tried calling her while she was out exposing herself? Had someone called the police to report a naked woman prowling about?\n\nShe ducked around the corner of the building to avoid being spotted until she knew who was coming. She was surprised to see a dairy delivery truck backing in and watched from her hiding place as the driver rang the doorbell. She had to suppress a chuckle, imagining how he would react to her popping out to tell him, \"You're wasting your time, there's nobody in there!\"\n\nShe reluctantly decided to come out to talk with him, hoping he might give her a ride somewhere and help her get some clothing. It meant actually interacting with a stranger while naked, but what was one more person seeing her in the nude after all she'd already been seen by this afternoon? She realized she'd be asking a lot, having no ID, cash, or credit cards, but he was likely her last chance to avoid the humiliation of being found in her current state by a fellow employee.\n\nShe was about to stop hiding and approach him when she noticed him trying the keypad after ringing the doorbell a few times, she hadn't known the dairy had the code. She was shocked to hear the lock click and see him open the door! \"Why did it work for him but not me?\" she thought.\n\nAfter he had been in the store what seemed to her to be enough time to make it to the cooler, she scrambled towards the open back door. Though she hoped to sneak by him while he was putting his handcart of products away in the cooler, she was by now more than willing to risk being spotted if that was the price she had to pay to get into the store! \n\nShe dashed through the door, practically giddy at being indoors; she bolted past the cooler and headed for the sales area, planning on crouching between shelves piled high with chips and other snacks until the driver left. \n\nAlexa and the delivery guy were just about equally shocked when she rounded a corner and was barely able to stop herself from crashing into him, sliding to a stop inches away from making contact, right as he was stuffing a Twinkie in his mouth!\n\nDespite her being naked, or maybe because of it, she reacted first, going on the offensive; she did her best to ignore the full-body blush and air-conditioning induced goosebumps she was displaying from head to toe and asked him in as serious a tone of voice as she could manage under the circumstance, \"Were you planning on paying for that?\" \n\n\"Umm, yeah, but I didn't think there was anyone here, nobody answered the doorbell.\"\n\n\"I was outside,\" she answered truthfully. \n\n\"Outside? Really?\" he asked, still off-balance.\n\n\"Yeah, I felt like having a walk,\" she said as she took a few steps back, remembering the rules about social distancing. She suddenly remembered that she wasn't wearing her mask; she took one from the bag full of them Martin had placed next to the register for his employees to wear and put it on.\n\nShe suppressed a laugh as she realized she was now more freaked out by chatting with a stranger while not wearing her mask than she was by being completely nude during said conversation!\n\n\"Uhhh, a walk, like this?\" he motioned at her body.\n\n\"Yeah, sure, part of the way, why not? I wasn't expecting any deliveries this late,\" she replied with as innocent an expression as she was capable of at the moment.\n\n\"Yeah, well, I normally deliver here around 6 AM, but I had to cover a second route today,\" he said, amazed, confused, and thrilled to be having a conversation with this undeniably hot, inexplicably naked blonde.\n\n\"Oh, that explains why I haven't seen you before; I only work days.\"\n\n\"I'll be covering the extra route all this week and next,\" he replied.\n\n\"So we'll see each other again!\" she said, flashing him a big smile. \n\n\"I hope so; I'm Jeremy, by the way,\" he said as he offered his hand to shake.\n\n\"Nice to meet you, Jeremy; I'm Lexie,\" she said, suddenly deciding an alias might be a good idea. It occurred to her that as wildly as her behavior today had deviated from all her normal rules, maybe she should be thinking of Lexie as her alter ego. She waved off the offer of a handshake and offered him an elbow bump instead, saying, \"I probably should let you get on with your deliveries.\"\n\nShe turned away from him to walk to the register, giving Jeremy his first look at her naked body from behind; she was glad that she'd found an excuse to give him a look at what she considered to be her sexiest features, and decided Lexie was responsible for the extra bit of shake she gave her hips as she walked away from him!\n\nI'll ring your snack up; did you want anything else?\" she managed to say without cracking up.\n\n\"Oh, go ahead, ask me. I know you want to know why I'm naked, how could you not?\" she thought to herself, \"I'd love to tell you all about it!\"\n\n\"Uh, no, that'll be all, I guess, thanks.\"\n\n\"Okay, $1.49, please.\"\n\nHe handed over two dollars and silently motioned for Alexa to put the change in the tip jar. \n\nShe smiled and said, \"Thanks, see you tomorrow!\"\n\n\"I sure hope so,\" he said as he headed slowly toward the back door, a long look back at her and a shake of his head the only sign anything about their encounter had been the slightest bit unusual. As he was heading out the back door she thought she heard him mutter, \"Man, this kind of thing never happened when I was still single...\"\n\nAlexa couldn't help giggling uncontrollably once she heard the back door shut. She opened her locker, retrieved her smock, and had just started to put it back on when she, or more likely Lexie, had one final inspiration. She decided to go back outside and wave goodbye to her new friend; she unlocked the front door, stepped out, and jogged to a point well beyond the gas pumps in front of the store, just a few feet short of the street.\n\nShe was a little too late to wave to Jeremy, seeing his truck already on the road and headed away, but turned out to be right on time to give the dozen or so people riding by in the passing city bus a good close look at her! Though this latest encounter was totally unexpected, she enjoyed the raised eyebrows, shocked looks, and smiles she saw on the passengers! \n\nShe kept waving until she was sure the passengers could no longer see her; she waved with her right arm, the only part of her body she'd had time to get covered with the smock before running outside! \"I guess I should have finished getting the smock on before running out here,\" she laughed as she slipped her left arm into the smock and turned back to go inside the store and finish her shift."
    ],
    "authorname": "LuckyDave1066",
    "tags": [
        "being watched",
        "college",
        "enf",
        "exposed",
        "female exhibitionist",
        "naked",
        "public nudity",
        "stranger",
        "stripper",
        "tease"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/alexa-is-intrigued-by-a-streaker"
}