{
    "title": "Master! Master! Pt. 13",
    "pages": [
        "Journalists and photographers from all nations flooded the CDC headquarters for the press conference. They packed the lobby from wall to wall, every conversation, regardless of language, was speculative. Normally a conference like this would take place in Washington, but this time the CDC was addressing the world alongside a representative of the WHO. On top of a raised platform at the end of the lobby, a doctor with his credentials clipped to his suit stepped up to the podium. He was the head of head of the CDC and he began his announcement.\n\n\"Thank you all for coming today. I am Dr. Gordon Mann, speaking to you as both the head of the CDC and in association with the World Health Organization. I'm here to address your concerns as to the strange occurrences of the past six weeks.\"\n\nEvery word he said came with the flash of a camera. One reporter raised her hand. \"Courtney Bour with The Guardian. Why have you waited so long to speak to the public?\"\n\n\"The details of these phenomena are unprecedented, and frankly unbelievable. From the rumors alone, you should all realize that we've never seen anything like this before. It's taken six weeks just to get enough information for this conference.\" He took a deep breath, preparing himself for the outrageous claim he was about to make. \"In simple terms, animals have been spontaneously transforming into humanoid lifeforms, capable of speech and human intellect.\"\n\nA tsunami of sound flooded the building, causing Dr. Mann to visibly flinch. Journalists were shouting questions and even security guards and other employees were staring in shock. After a few moments, he pointed to a journalist from CNN.\n\n\"What is causing these transformations?\" the man asked.\n\n\"We have yet to indicate the physical cause.\"\n\n\"Do you believe this is natural or caused by people?\" another reporter asked.\n\n\"We have confirmed that the first occurrence was due to human intervention.\"\n\n\"Are you referring to the man and woman seen in the Bronx Zoo security tapes?\"\n\n\"Yes. We have confirmed cases of animals transforming in their presence and they used the zoo incident to draw attention to their plight and get help. They are currently working with the CDC to help uncover what is going on. For security reasons, their identities will remain confidential. However, we believe that most, if not all of the events we have witnessed since the zoo incident are occurring naturally.\"\n\n\"Do you believe this will continue?\" a woman asked.\n\n\"We have noticed a steady increase in cases and we have no reason to believe they will stop happening.\"\n\n\"Should the public be alarmed? Are we in danger?\"\n\n\"Aware, yes, but not alarmed. From what we have seen, animals that have transformed retain their behavior and natural thought processes, though with a more human-like intellect. Herbivores and other naturally timid animals will remain cautious and will flee from other people, while carnivorous animals are only as dangerous are they were before transforming.\"\n\n\"What is your opinion on the possibility of human-animal coupling? How long will it be until people are demanding legal bestiality and having offspring with transformed animals? Isn't this proof of the slippery slope argument against gay marriage?\" Of course, it was a FOX reporter who asked.\n\n\"In regards to offspring of any kind, we have found that transformed animals are all sterile, same as mules and ligers. The only exception is animals that transformed while pregnant. We have a transformed wolf woman in custody that has given birth to human-wolf hybrids like her because she was pregnant at the time of her transformation.\n\nAs for human-animal coupling, it is not in the CDC's place to give an opinion on ethics. This event has redefined what we know about biology and human existence. Whatever the future holds, it is up to the public of this country and the world to decide cultural norms.\"\n\n\"You said that you have a... wolf woman... in custody. What and where does that mean?\"\n\n\"All hybrids, both natural and manmade, are being sheltered with all physical and mental needs being met. We are currently studying their social behaviors and trying to determine how they will live in our world and what roles they will take. We are doing everything we can to ensure their safety and happiness. It will be up to the courts to decide the rights of hybrids.\"\n\n\"What should people do when these transformations take place around them?\" \n\n\"They should keep their distance and call the police, and the police will get in touch with us. However, should this happen to house pets, families may retain custody if they so wish, but they must notify the CDC so that proper measures can be taken for their wellbeing.\"\n\n\"Is it possible that this can start happening to people? That humans will start becoming like animals?\"\n\n\"There is no evidence to suggest such a thing happening.\"\n\nIn the living room of the mansion, we were watching the press conference with rapid heartbeats. Even Dr. Lawrence was with us. At the last reporter's question, I looked over to Elise. I could certainly understand why Dr. Mann had lied to the press. It was one thing if animals were transforming, but if people were vulnerable, then fear and paranoia would run rampant. Zombie apocalypse enthusiasts would probably drop the ball and people would end up dead.\n\n\"So what now?\" I asked Dr. Lawrence.\n\n\"We wait a few days to see how the public reacts, and if we don't see the total destruction of our society, then we'll evaluate our options.\"\n\n-----\n\n\"Which is how we ended up here,\" said Lorraine as she stepped out of the CDC van.\n\n\"What did you say?\" I asked as I climbed out of my car.\n\n\"I'm just explaining things.\"\n\n\"I don't follow?\"\n\n\"How else are the readers going to understand that because of lacking anarchy and civil unrest upon the revealing of animals transforming, the CDC said we should take our motley crew to a public place and Dr. Lawrence suggested the beach?\"\n\n\"What readers? What the hell are you talking about?\"\n\n\"Remember? We were talking about this yesterday when you helped me pick a new bikini, then we had sex in the changing room!\"\n\n\"You're wearing a one-piece and went to the store by yourself!\"\n\n\"Ugh, just once, could you encourage my insanity instead of getting pissy about it?\"\n\nShe was wearing a thin robe over her swimsuit, while I was wearing my trunks and a shirt. We were in a parking lot next to a public beach, with a path through a strip of forest leading to the water. All of the girls were in my car and all of the guys were in the van she was driving. Her pillar men were so huge that only three could fit in her car at once, so she was borrowing a CDC van and using all of the extra space or beach stuff. I just barely had enough room to fit all five girls into my Subaru, and that was only because Leah stayed in the very back. Betty and Elise were in a second van driven by Dr. Lawrence. I was starting to think that he had suggested a beach trip for us because he simply he wanted to go. With his job, he could certainly use a day off. However, this was a freshwater beach. We picked it for Leah, as her salamander skin didn't react well to salt. \n\nWhat we didn't expect was how busy it would be. It was a truly beautiful weekend and we had gotten the last few parking spaces. People were walking all around us, most just arriving and making trips to bring all their stuff to whatever spot they had picked. Having this many people around made me nervous as hell for the girls. But I was also excited, eager to see people's reactions. Would they be amazed? Scared? Our pictures were going to end up plastered all over the Internet, but a part of me couldn't wait to see what would happen. It was like standing on a bridge or a cliff and hearing that voice in your head telling you to jump. That little chaotic voice was saying that the more crowded the beach, the more entertaining the result.\n\n\"Ok, time to liven up everyone's day,\" said Lorraine as she banged on the roof of her car and I did the same.\n\nDoors opened and everyone got out and stretched. It had been a long car ride. \n\n\"I got to admit, you did a great job picking out the girls' swimsuits,\" I said.\n\nMomo got out of the passenger seat wearing a black bikini to match her hair. Sonja came out of one of the back seats with a white and yellow frilled bikini that accentuated her tits amazingly. Out of the other side appeared Jenny, wearing a one-piece with a hole cut in the back for her tail to poke through and an opening that showed her belly button. From the middle seat crawled out Chloe, wearing a blue one-piece with frills around the waist like a skirt. I opened the back of the Subaru and out came Leah, wearing a strapless white two-piece.\n\nThen, out of Lorraine's van, THEY appeared. The four demigods, wearing nothing but sandals and speedos, stepped out and once again made me hate myself and my physique. Goddammit, Peter had rabbit ears and a puffball tail, and he was still manlier than I could ever hope to be. They were all good guys, but every time I saw them, it crushed my self-esteem. Seeing them like this now just made it worse. But I will admit, I also did feel a lot better having them here. With these hulks around, no one would dare try anything funny with my girls. \n\nThen I sensed a disturbance in the Force.\n\nI turned around, and before I even saw her, I had an erection. My eyes fell on her, Betty. She was wearing a blue bikini that had been custom-made for her, but with a body like hers, any bikini became a micro bikini. The top was just barely covering her areolas and her nipples were poking through the thick fabric, and between her luscious thighs, the bottom had become a g-string.\n\n\"Master, what do you think? You like what you see?\"\n\nShe then turned around, showing me her perfect ass, with the blue material struggling to remain visible. I think I blacked out for a second, I definitely lost my balance. She had been fully dressed when we left the mansion, so this was the first time I had seen her in her swimsuit. I was so turned on, it was actually making me angry.\n\nBehind her appeared Elise, gorgeous as always, wearing a ruby-red top and a tight skirt. She saw me pitching a tent in my trunks. \"Put that thing away! There are children here!\"\n\nFrom the driver's seat appeared Dr. Lawrence, modestly dressed, at least in the category of comfortable beachwear. He looked exhausted, but that was understandable. Driving with bikini babe Betty in the passenger seat would wreck the nerves. All it would take is a single glance to become completely hypnotized, and the next thing you know, you're face-down in your airbag with the front of the van wrapped around a tree.\n\nFrom the moment we came out into the sunlight, a tremor moved through the entire parking lot. People around their cars stopped, saw us, and became like statues. Some were asking each other to confirm what they were seeing, and many had already whipped out their phones. We would see a lot of phones today. Chloe instinctively hid behind me, and I rested my hand on her head to comfort her. Jenny similarly got nervous.\n\n\"Relax, it will be fine. You'll all feel better once you get to the water. Now girls, what are the rules for today?\"\n\n\"No taking off our clothes,\" said Momo.\n\n\"No playing like we do in bed,\" added Sonja.\n\n\"No wandering off,\" said Chloe.\n\nLeah covered her mouth, meaning 'no talking to strangers'.\n\n\"Tell you or Lorraine if we need to go to the bathroom,\" Jenny said.\n\n\"Correct. Now, let's all enjoy our day.\"\n\nThe pillar men and I carried the beach gear and we moved along the path through the woods. They probably could have carried all of it, but my manly pride insisted I show off. Even though it was a fresh water beach, it was still a field of white sand leading to lapping water. \n\n\"There are so many people!\" Sonja exclaimed with her tail waving. True, much of the beach had already been divided up into spots for more than a hundred other visitors.\n\n\"I think I see an open space over there,\" said Betty, pointing off in the distance.\n\nIt was quite a walk, past a lot of people, but we had come to be seen so that was what we were going to do. We were hidden in the woods, but as soon as we stepped onto the sand, we became visible. We walked along the spine of the beach, leaving most people with their backs to us, but immediately, others looking in our direction had their attention drawn. Initially, they noticed us for the size of our group, then they noticed the tails and ears. They had heard about it on the news for weeks, but for the first time, they were seeing the animal people in the flesh. Scales, fur, feathers, they stood out like neon signs. A visible charge went through the crowds. \n\nThen they noticed something else; bouncing tits, swinging hips, and bronze muscles. Momo, Sonja, and Jenny walked side by side, the sunlight shining on their slender, half-naked bodies, their skin smooth as glass and glowing with sexual energy. Behind them, Betty's caramel-colored rack jiggled with every step she made and her divine ass mocked the bikini bottom so poorly trying to conceal it. Following them was Elise, showing off her flat belly and her magnificent shelf. Taking up the rear was the pillar men, causing the women who saw them to forget the names of every man they had ever loved. Guys who saw them felt their self-esteem crash and lose all hope of ever procreating.\n\nAll in all, multiple sexualities were questioned.\n\nOf course, no one paid attention to me, Dr. Lawrence, Lorraine, or Chloe. Any gazes directed at Leah was due to her black and yellow skin. But still, it was nice to see my pets being admired. By the time we reached our spot, almost everyone on the beach was staring at us. We laid out a vast field of towels and set up multiple umbrellas with several coolers full of food and drinks. \n\nLying back on a towel in the shade of an umbrella, Elise stretched out her tail to its full length in the sunlight. \"Oh, this sand feels so good! It's so soft and warm! This was a great idea!\"\n\n\"Ok, girls, before we do anything, you need to put on sunscreen,\" I said.\n\n\"Sunscreen?\" asked Jenny.\n\n\"It will keep your skin from getting burned. I'll put it on you, don't worry.\"\n\nI took out one of several bottles of sunscreen and squirted a puddle into my palm. I rubbed it between my palms and started smearing it on her face. All it took was that small contact to make her smile. I leaned in and kissed her, causing her puffball tail to twitch. The rest of the girls watched enviously as I moved across her body, rubbing the lotion on her skin so she wouldn't get the hose again. \n\nOnce it had soaked in, I moved to Momo with more sunscreen. Like with Jenny, I cupped her cheeks and kissed her. I took my time with her, wanting to savor her thunderous purring. Her bikini left a lot more skin to take care of, not that I'm complaining. I then began rubbing Sonja all over while fighting against the urge to aim for the sweet spots. I told the girls we wouldn't play, so I had to prevent either of us from getting horny.\n\n\"I love when Master pets me,\" she hummed as I massaged her back. \n\nI continued on to Chloe and Leah. Leah was easy, the sunscreen mixed together perfectly with her salamander sweat, and of course, I could listen to Chloe's adorable little squeaks all day. \"This is the strongest sunscreen I could get. I picked it specifically for you two. We need to protect that soft skin of yours.\"\n\n\"Oh Masteeeeerrrr.\" I turned to Betty, hefting her breasts. \"Can you put some lotion on me? I need to feel your hands.\"\n\n\"Betty, trust me, I'll rub you all over when we get home. But please, I can't handle more temptation.\" I then looked over to Lorraine, who had covered her chest with sunscreen and was grinding against the pillar men. \"Lorraine, I'd really like to end the day without half our group going to jail for public indecency.\"\n\n\"YOLO!\"\n\n\"A little dated, but whatever.\" I jerked when I felt the unmistakable touch of breasts on my back. \"Momo, what are doing?\"\n\n\"Master put lotion on us, so we should put lotion on Master. See, they're doing to Lorraine.\"\n\nAs per her words, the four pillar men were now giving Lorraine a full body massage as if it was an act of worship. It looked like something from an old Britney Spears music video. For fuck's sake, there are people watching! Before I could say anything, the rest of the girls tackled me.\n\n\"Dr. Lawrence, a little help please!\"\n\nThe doctor had just sat down in a beach chair and cracked open a beer. \"Sorry, but I'm going to have to follow the Prime Directive on this one.\"\n\nIt took some effort, but I managed to peel the girls off me. \"Ok, let's go swimming.\"\n\nHearing the magic words, Leah sprung up and ran towards the water, past rows of people who couldn't believe their eyes. She had to be wearing a costume, right? Leah dove into the water and immediately surfaced, waving us in. Whooping in joy, Sonja chased after her and made a large splash. I went in third, watching as Sonja flopped around with a big grin on her face, trying to spray as much water as possible. Beneath the water, Leah was zooming around like a torpedo. But looking back, I saw Momo, Chloe, and Jenny standing at the water's edge.\n\n\"Come on in,\" I said.\n\n\"Momo can't swim,\" the feline said. Chloe and Jenny shook their heads as well.\n\n\"I don't think Sonja can either, but she's figuring it out. Just walk into the water until it's up to your chests and it will come naturally to you.\"\n\nJenny went in first, dipping her furry feet into the water and slowly stepping in. Momo followed, grimacing from the water's temperature. It wasn't cold, but she was used to hot baths. Chloe remained at the edge, tugging on her ears. Countless people were watching, but that wasn't why she was nervous. I held out my hand to her.\n\n\"Just walk to me. You'll be perfectly fine.\"\n\nShe built up her courage and finally stepped into the water. She took my hand and I led her deeper in, until the water was halfway up her chest.\n\n\"Now just remember to always be able to keep your feet on the ground, and when you want to paddle, keep your fingers together.\"\n\nI looked so Momo, who was slowly walking around with her breasts just above the water. \"Momo has never seen so much water before, it's like a giant bath.\" \n\nMeanwhile, Jenny was getting adventurous, walking out until the water was up to her neck and beginning to figure out how to use her arms. A big smile on her face, Sonja paddled over with her floppy ears floating up. She swam over to Chloe and then burst up from the water. \"I love swimming!\"\n\nThe sound of frantic splashing and a garbled voice turned me around. I saw a young boy with goggles and a snorkel freaking out, trying to get as far from Leah as possible. He must have met her under the water and mistook her for a lake monster or something. As the boy ran off, Leah came over to me with a somber look on her face. She ducked behind me the way Chloe would, as if trying to hide from the world. \n\nI crouched down and kissed her on the nose. \"People just aren't used to seeing creatures like you, but in time, they will be. You're beautiful after all.\"\n\nLeah wrapped her arms around my neck and I returned the embrace. Hopefully the people watching us were paying attention. \n\n\"How's the water?\" Elise asked as she slithered over with Betty.\n\n\"It's nice and warm,\" said Momo.\n\nElise moved into the water, shivering as it touched her scales. \"This feels pretty cool actually. But I'm supposed to be able to float.\"\n\n\"What do you mean?\"\n\n\"I got an x-ray at the clinic and found that I have a long third lung in my tail. Normal snakes have something similar.\"\n\n\"You probably sink because of your posture, like when you raise your head when floating on your back.\"\n\n\"If it looks like I'm drowning, grab me.\" She then dove headfirst into the water, disappearing beneath the surface. She reappeared a hundred feet away from the water's edge after only a couple seconds. How the hell did she get over there so fast? \"This is so cool!\" she hollered.",
        "\"Master, look at this!\"\n\nWithout me seeing, Betty had gotten into the water. It was up to her neck, but her breasts were floating like a pair of buoys. Jesus, those things are magnificent. I just wanted to\u2014 no, no, get a hold of yourself! I must resist temptation! Damn it, she's trying to tease me! I must change the subject!\n\n\"Are you ok in the water? Are your hooves weighing you down?\n\n\"Yeah, they're heavy, but as you can see, my body makes up for it.\"\n\nLorraine and her pets than entered the water, but from the looks on their faces, the men were only going in to follow her. They were probably just as confused and uneasy as the girls were. \n\n\"Master, is this right?\" Momo asked.\n\nShe was doing a doggy paddle the same way Sonja had, keeping her head above the water with her tail swishing behind her. It was honestly one of the cutest things I had ever seen.\n\n\"Yeah, that's perfect. What about you, Jenny?\" Nearby, she was struggling, unable to get much forward movement without simply pushing off from the ground.\n\n\"Master, it's not working!\"\n\nI held her against me to calm her down, waiting for her breathing to become steady. \"It won't work if you get freaked out. Just relax and try to move towards me.\"\n\nI separated from her to open up some space and she gave it another attempt. She tried to swim towards me, paddling forward with her hands and propelling herself with her legs, but the problem was her movement. Every time she brought her legs forward, she ended up pushing against the water with equal force to when she'd try to kick off, leaving her just treading water.\n\n\"Ok, let's try something different. Take my hands and I want you stretch out your legs straight behind you and walk like your taking tiny steps.\"\n\nShe didn't understand but did trust me. She took my hands and I helped keep her head above the water as she straightened her legs out. She started moving her legs with her wide rabbit feet acting like fins at the end of a tail. I tried to move back and pull her along with me, but her propulsion was greater than I expected and she ended up running me over and sending the two of us sinking. We came up from the surface, coughing and sputtering.\n\n\"Sorry, Master!\"\n\n\"No, it's fine. Just do what you did then and use your hands to steer and keep yourself upright.\"\n\nThis time she tried it on her own, and after a few attempts, she figured it out and was swimming laps around Momo, Sonja, and Chloe. Like Sonja, her rabbit ears floated on the surface of the water, and I couldn't help but laugh at the sight of her tail poking up. I looked over to Lorraine who was starting off the pillar men by simply having them float on their backs to get a sense of their natural buoyancy. \n\nWe continued swimming for a while, all of the pets getting used to the sensation of moving through the water. Elise and Momo eventually called it quits, wanting to soak up some warmth. I decided a change of things would be good.\n\nSonja looked up at me as I got out of the water. \"Huh? Master? Are we going home?\"\n\n\"No, we've still got all day to enjoy ourselves. But there's more you can do at a beach than just swim. Do you girls want to build a sand castle?\"\n\n\"What's a sand castle?\"\n\n\"It's like when you shape clay into animals and people, but instead, you make buildings out of sand.\"\n\nA lightbulb appeared above Sonja's head as inspiration struck her.\n\nWe moved back onto the beach and Sonja and I started digging into the damp earth. Our first idea was to build a copy of the mansion, first a rough draft about the size of one of the coolers. Then, we made our tiny cabin next to it, with a forest of twigs around it. Once we started working on Elise's farm, the other girls had started to join in. Lorraine watched as we built a sandy city.\n\n\"Mistress, would you like to do that too?\" Peter asked.\n\n\"Do it too? I want to put them to shame. Come on, we got work to do.\"\n\nOur two groups dug and built opposing cities with Elise's tail stretching from the camp as a divider. She was soaking in the sun from her towel, while beside her, Dr. Lawrence sat in his chair and read a book. Of course, people were still watching us, and I could see them starting to move in closer, with fear and confusion being replaced by curiosity. They were probably re-evaluating our pets, going back to thinking they were just people in costumes. After all, they all acted so normal.\n\nWe stopped after a couple hours, having a full sandy city in front of us. I went over to see what Lorraine had made. It was a town like ours, but with some kind of Mt. Rushmore in the back and a wall around it.\n\n\"What is that?\" I asked.\n\n\"It's the Village Hidden in the Leaves, or in this case, the sand.\"\n\n\"I'm not even going to ask what that's a reference to.\"\n\n\"Elise, judge our sandcastles! Whose is better?\"\n\nElise got up from her towel and slithered over, checking both our creations. \"Meh, he wins. If you're going to make a reference, it has to be something that everyone knows. If you had made something from maybe the Lord of the Rings, I might have given you the gold.\"\n\nNow covered in sand, we went back into the water to clean ourselves off and then returned to our towels for lunch. After eating in the shade of the umbrellas, we all reapplied sunscreen and took a nice sunny nap. Dr. Lawrence kept watch, making sure no one on the beach tried anything funny.\n\n-----\n\nAfter our nap, we swam some more and worked on our sandcastles, but in time, the sun began to set and we called it a day. The drive back home was quiet, all the girls sound asleep, with the light of the setting sun on their serene faces. It had been a perfect day; the girls got to enjoy the outside world, we had fun, and nothing bad happened. As we pulled up the driveway, the girls began to stir, shaken by the bumps of the driveway. They were all yawning and rubbing their eyes when the car came to a stop.\n\nWe all got out and circled around to open the back. On a soft rubber mat, Leah was still snoozing, curled up with the tip of her tail touching her nose. I gently scooped her up in my arms and gave her a small kiss. Next to us, the two vans had parked and everyone was getting out, blissfully tired.\n\n\"Dr. Lawrence, I'm going to take the girls upstairs to get washed up. Can you make a call for pizza delivery?\"\n\n\"Sure thing.\"\n\n\"Girls, let's get in the bath.\"\n\nI carried Leah inside with the girls following me to our bedroom. I filled up the large tub in the bathroom while the girls stripped off their swimsuits. \n\n\"It's ready, come on in!\"\n\nThe five naked beauties pranced into the bathroom, all smiles as they saw the hot communal bath. This would be Jenny's first time, but after spending the day swimming, she was all smiles. I was first into the tub, checking the water temperature and finding it perfect. Once I took my seat at the back, the girls each climbed in, humming in bliss from the warmth. We had spent the day swimming, so the hot water felt especially blissful. I had Jenny at my side, my arm around her.\n\n\"Today was a good day,\" I said as I nuzzled one of her long ears.\n\n\"Can we go back to the lake tomorrow?\" she asked.\n\n\"Not tomorrow, but we'll definitely go there again. I was thinking I would start teaching you how to read tomorrow.\"\n\n\"What's reading?\"\n\n\"It's a way to gain information or learn different stories. I taught all the girls how to do it and it helps them pass the time when I'm not around.\"\n\n\"We're having pizza for dinner, right?\" asked Sonja.\n\n\"That's right.\"\n\nMomo closed her eyes and sank down into the tub, keeping her chin above the water with a smile on her face. \"Momo loves pizza.\"\n\nEach girl had a special topping they favored. Momo liked anchovies, Sonja liked pepperoni, Chloe liked vegetables, and Leah liked pineapple. Speaking of Leah, the salamander slipped under the water and reappeared in my lap. Wagging her tail in happiness, she straddled me and gave me a loving kiss.\n\n\"You definitely had fun today, didn't you? I've never seen someone swim so fast. Don't worry, you'll get to swim plenty more times.\" She then started to grind against my lap, making me hard. \"Ah, not right now, Leah. We need to wash up and be nice and clean before the pizza delivery guy gets here. But don't worry, you can go first when we play tonight.\"\n\n\"Can I go second?\" Chloe asked, crawling over.\n\nI pulled her close and kissed her on the forehead. \"Of course.\" I eyed Momo, Sonja, and Jenny. \"Then it's first come, first serve.\"\n\nWe all worked together to clean each other off before dinner time, first forming a semicircle and massaging each other's scalps with shampoo. Since Leah didn't have any hair, she was in the very back. Then, of course, it quickly devolved into foreplay. Next to me, Momo and Jenny panted and blushed as they rubbed their chests together, leaving their tits covered in suds. On the other side, Chloe was massaging Sonja's breasts from behind, causing Sonja to give a canine whimper of bliss. Leah returned on my lap, and we were tongue kissing as we scrubbed each other with bars of soap. \n\nSomehow, we managed to pull away from each other in time and wash off the soap and shampoo. As we finished drying off and got dressed, the pizza delivery guy pulled up the driveway with more than half a dozen boxes of cheesy goodness. Lorraine paid and we all settled in the kitchen with a huge stack of cardboard boxes in the middle of the table.\n\n\"So how did you guys like the beach?\" I asked as the pizza was distributed.\n\n\"Oh, it was so much fun! I got to swim! I've never swam before! I can't wait to swim again! And the sand! I want to build more sandcastles. Mistress, let's make a sand castle tomorrow. Can we? Please? I wonder what other kinds of beaches are there. Do they have different colored sand? Is the water different? I just think that\u2014\"\n\nMoving on...\n\n\"Tobi, what about you?\"\n\n\"It was nice. I enjoyed napping in the sun. My tail still isn't completely dry, though.\"\n\n\"I can't wait to see what we do with Mistress next,\" said Peter. \n\n\"I'm just surprised it was so crowded. I've never seen so many people before. But I like to think I was the one they were all staring at,\" Betty bragged.\n\n\"So, Dr. Lawrence, how successful would you say this observation task has been so far?\" Elise asked.\n\n\"Incredibly successful. We're getting great data on hybrid behavior, especially with people. The way you love and care for your pets really tells me that human-hybrid cohabitation if possible on a wider scale. Tomorrow, we'd like to start testing their intelligence.\"\n\n\"I was planning on teaching Jenny how to read tomorrow,\" I said.\n\n\"That's perfect, the learning process would be amazing to witness.\"\n\nI turned to the girls. \"Oh, you are going to have fun tomorrow.\"\n\n-----\n\nThe girls and I were just about to climb into bed when the knock came. I cursed in annoyance and pulled my pants back on. I went to the door and opened it, finding Betty of all people. She was wearing only a couple towels, one around her waist and the other around her chest. Her hair was wet and there was a sultry look on her face.\n\n\"I was thinking about you while I was in the shower and decided my fingers weren't good enough.\"\n\nI looked back at the girls on the bed, all of them naked and eager to play, and then back at Betty. \"From now on, don't bother knocking.\"\n\nShe dropped the towels, exposing her sinfully sexy body and followed me into the bedroom while I ditched my jeans. We both climbed onto the bed and I moved back to the headboard, surrounded by my harem.\n\n\"Now, I promised Leah the first turn. Come here, sweetie.\"\n\nShe crawled towards me, the same smile on her face that Betty had. Rather than kissing me, she started down below, running her tongue up the shaft of my member. It entered her mouth, being drowned in her saliva while her tail swung from side to side. She then released it and began to move up, running her tongue across my chest, but once our lips met, her fingers returned to my cock. As she rolled her tongue in my mouth, she stroked me with masterful skill, using both her saliva and the moisture on her hand as lubricant. \n\nThe rest of the girls watched eagerly, waiting to see what would happen next.\n\nLeah moved off to the side as if she was sliding off, but I knew she was up to something. I then shuddered as she began moving her leg, finding myself blindsided. Instead of going for insertion, she was using her turn to try a new level of foreplay. My cock was being squeezed in the back of her knee, the rises and falls of her leg mimicking the movements of a handjob, with the slipperiness of her skin removing all friction. Only with her could such a move be possible. There was no flaw in her movements, she had mastered the technique immediately, and she was heightening the experience by continuing to run her tongue and lips across my chest.\n\nI found my defenses broken, having never experienced something like this. I had built up an immunity to most sexual acts, a means of self-control so that I can last until the girls finish. Handjobs, blowjobs, intercourse, I had become accustomed to the sensations enough that I didn't need to think about baseball to prevent a premature release, but this new feeling was completely new to me. My amazement as to her ingenuity and imagination was mixing with the incredible physical feeling, as well as an almost masochistic thought of deprivation to be denied her depths. I can't believe it happened, I'm ashamed that it happened, but I came after only a minute, splattering semen onto her leg. The girls stared, astounded by Leah's feat. She gave me a loving kiss and moved off me, beaming with pride. No wonder she wanted to play so badly; she wanted to try out her new trick.\n\nNow I was stuck here with my first shot gone after the first round and I had five more girls to satisfy, not to mention Leah would probably go again. Wait a second, hope wasn't lost.\n\n\"Chloe, I promised you you'd go second, and I'll do that in a minute, but first, there is something I need to do. Betty, I need an energy drink.\" \n\nI then pushed her onto her back and got on top of her, sucking gluttonously on her breasts. She panted from the pull of my lips as I sucked her dry, filling my stomach with the nectar of the gods. Cue the Popeye theme, I was back to full rigidity and my strength had been restored. The girls watched in curiosity, wondering what I was doing. This didn't seem like regular foreplay. When I switched from one breast to the other, they realized what was happening.\n\n\"Master, is something coming out of her boobs?\" Jenny asked.\n\n\"Milk. The milk we drink comes from cows. Technically, all mammals are capable of it, but Betty here is the cream of the crop, pardon the pun. You girls should try this. Thanks, Betty.\"\n\n\"It's my pleasure, Master,\" she purred, \"but don't be afraid to get a little rougher next time.\"\n\nI moved back over to Chloe and brushed a lock of white hair out of her face. \"You are just too cute.\" \n\nWe began to kiss, our tongues filling each other's mouths. Behind me, Jenny and Sonja were sucking on Betty's tits, giving it a try and immediately becoming addicted. Betty couldn't help but play with herself. Momo was with Leah, not just licking the fluid on her skin like she normally would, but also slurping up the semen I had left on her leg. Leah began to pant as Momo raised her leg, her tongue moving from the back of her knee, down her thigh, and finally arriving at her slit. \n\nI soon broke my kiss with Chloe, busying my lips instead with her nipples, while my fingers explored her interior. Like Betty, she couldn't help but whimper in bliss to the sensation of her breasts being kissed. I spent more time than I usually would, licking her porcelain skin and making love to her petite shelf, but that was for her sake. She was the flattest of all the girls, and now with Betty here, I had to remind her that I loved her small breasts.\n\nAt last, I rolled onto my back and picked Chloe up, sitting her on my face. Her whimpers became moans as I licked her out, tracing the alphabet with my tongue against her pink labia. \n\n\u266b A B C D E F G I'll make Chloe cum for me. \u266b \n\nHer small body trembled and her voice cracked as if in pain, her cheeks becoming wet with tears as always. I held her hands, keeping her steady as I brought her through the threshold. She squeaked like a whistle and collapsed on top of me. I gently laid her on her back and got on top of her.\n\n\"Master, I love you,\" she whispered as she wrapped her arms around me.\n\n\"I love you too,\" I said, kissing her head and smelling her silky hair.\n\nI pierced her in a smooth stroke and she dug her nails into my back. I began my movements, diving into her again and again while holding her in my arms. Her voice never left my embrace, but I could feel her kissing my chest the way Leah had. I brought up my speed, finally letting her moans be heard.\n\n\"Master! Master! Master! Master!\" \n\nShe cried out to me again and again, finally culminating in a moan of sexual bliss. \n\nI stopped my thrusts but didn't move off her, keeping her wrapped up until her breathing had calmed. \"And I'll always love you.\"\n\n\"Master...\" Her tears were no longer from carnal sensations after hearing those words. \n\nI gave her one last kiss and then moved on to Momo. She didn't see me coming and I took her from behind. But rather than simply drill her in the doggy style position, I kept us both lying down, me on top of her. She purred as I nuzzled her ears and shivered as I penetrated her. I was gentle with my thrusts, moving my body as little as possible to keep us from separating, but strangely, Momo was moaning as if I was going all out. At this angle, my cock was rubbing hard against the front wall of her interior, rather than simply shooting past it.\n\nShe stretched her arms out in front of her and raised her hips, her purr deepening. There was a crease running up the sides of her head, down from the edge of her feline ears to where her human ears would be, and my lips on that line of cartilage made her shiver from head to toe. I whispered her name over and over while I slipped one hand under her and cupped a warm breast.\n\n\"Master, please make Momo cum,\" she begged.\n\nI sat up and grabbed her hips. Rather than lifting her up onto all fours, I kept her flying flat and simply stayed on my knees. I increased the strength of my thrusts while trying to keep the angle, working a firm grind in her sleeve. I looked down on her, mesmerized. I had always found a woman's bare back to be sexy, to see the ridges of her spine and the trembling of her muscles beneath a canvas of smooth skin, to watch her shoulder blades rise and fall as I penetrated her. In this category, Momo beat all other women. Every stretch she made drove me wild, the lightest film of sweat catching the light, the contrast of her raven hair against her alabaster form. I wanted to paint a picture of her in this position, an elegant portrait to hang over a fireplace or in a museum.\n\nA climax swept through her, a primal call escaping her throat as she succumbed to bliss. She became limp, like a puppet with its strings cut. I pulled out of her, moved into her view, and stole a kiss. Three down, three to go. I could no longer ignore Betty, still on her back with her legs spread, pinned down by Sonja and Jenny using her breasts to indulge their gluttony. But before penetrating her, I wanted a taste. I lowered my head between her legs and began licking her out like I was eating a tub of ice cream without a spoon. She began to moan, overwhelmed by the feeling of three mouths on her bare flesh. She was soaking wet, her body begging for my cock, but I wasn't ready to indulge her just yet. To further stimulate her, I pushed my thumb into her anus and began stirring it around.\n\n\"Ah! Master!\" she called. I waited until she was about to cum and then stopped. \"Master, please!\" she cried.",
        "\"Don't worry, I'll make you feel good. Sonja, Jenny, I think you've drunk enough.\"\n\nThey moved aside, giving me room to pounce on Betty and drive deep into her pussy with a perfect stroke. My cock went barreling into her cervix, drawing out a deep moan. I pulled out and slammed back in with all the force I could muster, then worked on building up my rhythm so that her moan would keep going. As I fucked her, I grabbed her breasts and smooshed them together so that I could get both nipples in my mouth. Sonja and Jenny had certainly drunk a lot, but there was still plenty for me. \n\nHer pussy massaged my cock the way no other girl could, her walls rolling across it and squeezing it, sucking me in like a vacuum cleaner. Once again, it was a race to see who would cum first. I beat her, only by a hair's breadth. Her bovinae moan was my alarm clock, and once her voice bounced across the walls, I released my held reservoir and flooded her body with my cum.\n\nI pulled out of her and fell back, waiting for the milk I had drunk just then to restore my stamina like before. Jenny crawled over to me, noticing my flaccidity. \"Master, do you want me to make you hard again?\"\n\n\"I need to rest a minute. Come here, give me some love.\"\n\nShe lied down beside me, humming joyfully as I wrapped my arms around her. I held her close, relishing the smell of her hair. My breathing soon calmed, my muscles no longer shaking. My erection returned, but I stopped Jenny from getting on top of me. \n\n\"Let's stay like this, take it easy,\" I said, keeping us lying on our sides. \n\nShe smiled and raised her leg, bending it like a gymnast so her foot came up to my shoulder. Holy shit, since when was she this flexible?! With her leg raised, I was able to slide into her, and by raising my own leg, I was able to create some leverage and begin my strokes. We made out as I thrust into her, penetrating her mouth with my tongue the same way I penetrated her womanhood. We moved our hands across each other's bodies, wanting to get a true feel of each other. \n\nA bolt of lightning shot through Jenny as my hand finally found her cotton ball tail. Yep, the tail is always the magic spot. I began to fondle it as if it was a breast, making Jenny tremble and whimper from the sensations. She could no longer kiss me as her body refused her commands. I continued to hold her, never stopping my thrusts as I massaged her tail. \n\n\"Master, it's too much!\" she cried.\n\n\"It's not over yet.\"\n\nThe final nail in her coffin, I got the tips of both her ears on my mouth and nibbled on them, something impossible if I was with any other girl. Jenny screamed in mind-churning euphoria, cumming again and again with such force that she couldn't remain conscious. I rolled her onto her back and moved away to create some room, then turned my attention to Sonja.\n\n\"Well, you've been a patient pup. You're up.\"\n\nShe grinned from ear to ear and pounced on me. \"Master!\"\n\nSince I was still on my back, she decided to ride me. She got on my lap and used her hand to guide me in. She gave a sigh of happiness, as if all was now right with the world. I grabbed her ass and she began gyrating her hips, letting my cock stir her up. The smile on her face was truly precious, a surprisingly innocent look of pure entertainment. It was the same smile she'd wear when chasing a frisbee. Then she leaned forward, resting on her hands, and began throwing her body back and forth so that she could feel true impacts. Now with more movement, her melon titties were bouncing and swinging, and my eyes couldn't leave them.\n\nI grasped them both, cradling them in my palms like apples I was about to pick. Like with Chloe, I had to remind her how much I loved her funbags now that Betty was in the room. They were so soft, they just enveloped my fingers while refusing any kind of force exerted on them. No matter how I squeezed or how I rubbed, they seemed to escape my grip like water. I sat up, now holding her in my lap while I sat cross-legged. I was moving my arms to control her, bobbing her on my cock while I sucked on her breasts. Titties like these deserved love. \n\nSonja wrapped her arms around my head and pulled me close. \"Master, I'm cumming! ARUUUUUU!\" \n\nShe raised her chin and howled to the moon she could not see, while her temple flooded with her arousal. I held her upright, not done kissing and licking her nipples. It was the soreness in my knees from maintaining that position that finally made me give in, and I gently laid Sonja on the bed. There was only one last girl. I turned to Leah, sitting at the edge of the bed with a coy smile on her face.\n\n\"I got one more shot left, and I owe you for that trick you pulled. Are you ready?\"\n\nShe answered my challenge by getting on her hands and knees with her tail raised. I got behind her, rubbing my cock against her entryway. But then, a thought occurred to me. I leaned over and whispered in her ear, \"I'm going to try something different, hit me with your tail if you want me to stop.\"\n\nShe looked at me with a curious gleam in her eyes, then her face seemed to melt into an expression of sexual madness as I forced myself inside her. But unlike the other times, I was now deep in her asshole. I had done it in a sudden shove, not giving her any time or further warning. Like I had predicted, it was easier than it would have been with the other girls. Her natural slimy skin and soft body made penetration easy, despite her virgin tightness, but the sensation was almost too much for her to bear.  \n\nShe lost the strength in her arms and her face fell to the mattress, with her eyes rolling back into her head. But she wasn't hitting me with her tail, which I took as a green light. I reaffirmed my hold and her hips and began slamming into her, driving my cock as deep into her anus as possible. Now her voice could be heard, her squeaks and moans mixing together with each impact. I increased my speed more and more, each impact harder and faster than the last. Her back door was so soft, so wet, it was both a similar yet alien sensation when compared to regular sex. I couldn't help myself, I wanted to go ever deeper, in search of a point where the ease would disappear. Then, of course, I played dirty and began sucking on the end of her tail like it was a candy cane. \n\nThe combination of her tail being licked and her asshole being violated pushed her over the edge. She cried out, experiencing orgasm after orgasm. They rolled over her like a tsunami, each slam I made triggering another climax, as if my penis were a firing pin and her body was a machine gun. I continued sodomizing her through the chain or orgasms, not stopping until I had one of my own. I emptied everything I had into her and then let her fall forward. She lay unconscious on the bed, my semen trickling out of her anus contrasting brilliantly against her jet-black skin.\n\nAll the girls were unconscious, fucked into sex comas. Damn, today was a good day.\n\n-----\n\n\"Masterrrrrrr, this is boringggggg!\" Momo whined.\n\nThe whole group was sitting at the dinner table. Momo, Sonja, Chloe, Tobi, and Steve were undergoing exams to test their intelligence. The tests they were taking involved language and math problems from first grade to college level, to see where they fit on the educational and intellectual spectrum. The problem was that while the girls had honed their literacy skills, I hadn't really taught them much math. They could do addition, subtraction, and basic multiplication and division, but that was it. We hadn't even reached decimals and fractions. It seemed that Lorraine hadn't even taught the pillar men that much. \n\nMomo had burned out, face-down on the desk in refusal to do any more work. Sonja was close to that point as well but wasn't being as whiny about it. I couldn't blame them. It was sheet after sheet of problems. Chloe was still going strong, the look on her face telling me that she was actually learning new things from the test. Steve was shooting through the language problems, unless they involved naming different grammatical terms, while Tobi looked asleep. \n\nOf the hybrids, they were the only ones who knew how to read. Jenny and Peter had joined us too recently, Elise and I hadn't gotten around to Betty, and Alex and Leah's muteness made it too difficult for me and Lorraine to teach them, not to mention that Leah's slimy skin made her unable to use paper. But that was changing now. The dinner table was large enough to all work in separate areas. I was teaching Jenny, Elise was teaching Betty, and Lorraine was teaching Peter. A teacher specializing in disabled children had been called in to teach Leah and Alex, using markers and dry-erase boards to make up for her slippery skin. The doctors normally working surveillance with cameras were in the dining room with us, taking notes and closely studying how the hybrids behaved and learned.\n\nI looked over to the teacher working with Leah and Alex, a late middle-aged woman. Clearly, she was a prominent figure in the world of academics if the CDC knew about her. Like all the doctors watching us, her involvement in all of this would certainly propel her career even further. To have her name on a case study involving the hybrids would make her world renowned. When she first arrived, she was certainly nervous around Leah and Alex, Leah due to her alien-like appearance and Alex due to his intimidating bulk, but once she got a sense of the mood in the house, she lightened up a bit.\n\n\"J E N N Y. That's how you spell your name.\" I wrote it down for her and she stared at it with her nose twitching. \"Now you try.\"\n\nI put the pencil in her hand, showed her how to hold it, and watched her figure it out. Her letters were a bit messy, but she was learning pretty quick.\n\n\"Master, can we take a break? I'm sick of papers,\" Sonja groaned.\n\n\"Sure, you've earned it. I was actually thinking of going to the store to pick up some things. How about... Momo, would you like to tag along?\"\n\nShe perked up. \"To the store?\"\n\nWith thirteen of us living in the mansion, most of our groceries were delivered in bulk, but naturally, certain foods would always be eaten up faster than expected, and I thought that rather than just ordering them for delivery, I could use this chance to give Momo some fresh air.\n\n\"Yeah, and we can even grab some lunch.\"\n\n\"I want to go! Master, can I go too?\" Sonja asked.\n\n\"Will Master take me as well?\" asked Jenny.\n\n\"Sorry, but I think it would be best if I only took one of you at a time. You'll each get a turn. Momo?\"\n\n\"Ok.\"\n\n\"Good, but before we go, you'll have to put on a shirt that covers a little more. And a bra.\"\n\n-----\n\n\"Master, this thing is itchy,\" Momo said as she scratched at the bra under her top. \n\n\"Momo, when we're at the mansion, you're free to walk around without a bra. Hell, when we're at home, I love when you don't even wear a shirt. But this is something you need to do when you leave the house.\"\n\n\"Fine. What is this place? Is this the store?\"\n\n\"No, this is a place called McDonalds.\" We had just pulled into the drive-through and were waiting in line behind other cars. \"It's sort of like the grocery store in that you can buy food, but while there is a lot less variety, the food you buy here is already prepared for you. I wanted to stop here for lunch.\"\n\n\"Are we going inside?\"\n\n\"No, just watch.\"\n\nWe pulled up to the speaker and we were asked our order. Hearing the stranger's voice, Momo jerked in surprise. \"Is this like the phone?\"\n\n\"Sort of.\"\n\nI ordered us double quarter-pounder and a regular quarter-pounder with fries and milkshakes, more than enough to satisfy my junk food craving. As I spoke into the speakerphone, Momo sniffed the air and began to drool.\n\n\"Master, something smells really good.\"\n\n\"Just you wait.\"\n\nI pulled up to the first window and paid, then moved up to the second. As the scrawny college student handed us our food, he noticed Momo sitting in the passenger seat. Her ears were pretty hard to miss.\n\n\"Holy shit, is she one of those animal people?!\" he exclaimed.\n\n\"She is. Momo, say hello.\"\n\nShe had her face buried in the paper bag holding our food, but looked up and gave the man a small wave. \"Hello.\"\n\nThe man looked back inside. \"Hey, guys! There's a catgirl out here!\"\n\nHe reached into his pocket to get his phone, but we had already left.\n\nAs we drove to the grocery store, I took my first bite out of my burger and nearly melted from the taste. Next to me, Momo was giving a happy growl and digging into hers. \"It's so good!\" she said.\n\n\"It is easily one of the most unhealthy and disgusting foods on Earth, but Goddammit, it's fucking delicious. It's been so long since I ate beef, I wanted to pig out.\"\n\n\"Master, why haven't we had beef in such a long time? Momo misses spaghetti and meat sauce.\"\n\n\"I can't cook it because Betty is around.\"\n\n\"So?\"\n\n\"So, she's a cow, and beef is cow meat. How would you like it if we had cat meat one night?\"\n\nAll of Momo's hair stood on end, her tail completely erect and her eyes as wide as dinner plates. \"There aren't any places that have cat meat, are there?\"\n\nI probably could have made any number of jokes about Chinese restaurants, but they would have gone over her head.\n\n-----\n\nWe pulled into the parking lot of the nearby grocery store, this being the first time for both of us. I didn't notice anyone looking at us as we crossed the lot to the entrance, but that would change once we got inside. Like Chloe, the automatic doors scared Momo, but I pulled her inside. There a handful of people passed us by, either retrieving empty shopping carts set up along the wall and departing with full ones, but as soon as they saw Momo, they stopped and stared. She didn't seem to mind the gazes, showing a very bored look on her face.\n\nWe walked past the petrified shoppers, and after a second set of automatic doors, Momo let out an audible gasp. The grocery store was smaller than the mansion, but the vast openness left her baffled. \n\n\"So much food,\" she murmured. \n\nFirst, we strolled through the vegetable section, picking out greens to satiate everyone back home. Chloe, Jenny, Betty, and Peter were all omnivores, but they preferred vegetables over meat if given the choice. Shelves were lined with fresh produce, kept damp by sprinklers on a timer. \n\nI grabbed a plastic bag and handed it to Momo. \"See the broccoli over there? Go get a few big pieces.\"\n\nMomo pouted. \"Master knows that Momo hates broccoli.\"\n\n\"Well it's a Master's duty to make sure his pet is healthy.\"\n\nShe grudgingly took the bag and went over, and at the moment that I turned my head, I heard her give a loud hiss. Anyone who wasn't watching her before certainly was now. Momo walked back over with her hair and shirt wet. It seemed she had gotten hit with the sprinklers.\n\n\"Momo hates this place. Momo wants to go home.\"\n\nIt's amazing how similar the personalities are of a cat and a belligerent toddler.\n\n\"Now, now, there's no need to get fussy. I'll get the broccoli, you grab some cucumbers.\"\n\nOnce we had gotten all the vegetables we needed, I moved on to the cheese section, but before we were even halfway through it, Momo caught of whiff of something and took off. As always, she drew the eyes of everyone around her, her ears and tail impossible to miss. Momo threw herself onto the sneeze guard along the counter of the fish section, staring down at the treasures of the sea with her mouth watering. Customers around her gazed in amazement, finally able to see a hybrid in the flesh after weeks of news coverage.\n\n\"Master! Master! There's so much fish! Momo wants fish!\"\n\nI came over and stood her up. \"Momo, don't go running off. If you want fish for dinner, I'll get you some.\"\n\nShe pointed to some pink salmon. \"Momo wants fish now! Momo wants that fish!\" Her behavior was starting to draw laughs from our spectators. I suppose that's a good thing, better they find her funny than scary.\n\n\"No, you already had lunch. Besides, I don't want you eating raw fish.\"\n\n\"Please?\" She started rubbing her head against me like a drunk goat. \"Please, Master?\"\n\n\"Do you promise to be well behaved for the rest of the day?\"\n\n\"Yuh-huh!\" she said with an eager nod.\n\n\"Ok, but we have to wait in line like everyone else.\"\n\nI brought her to the end of the line and took a numbered ticket from the dispenser. Momo stared at the encased roll with mischievous curiosity, and as one would expect, started pulling out tickets one by one until I stopped her.\n\nThe person ahead of us was a middle-aged blonde woman, and I have to hand it to her, she was able to resist her own curiosity for a good while before giving in and turning around. \"Excuse me, is she really one of those animal people they've been talking about on the news?\"\n\n\"Yep, this is Momo. I went to sleep one night with a regular cat on my chest, wake up to find her instead.\"\n\n\"She isn't dangerous, is she?\"\n\n\"Not at all, unless you're a vet, then she'll take a swing at you.\" Momo's hair stood on end at the mentioning of vets and I calmed her down by rubbing her head. \"Relax, you're fine.\"\n\n\"And you take care of her like this?\"\n\n\"Of course, I've taught her everything from brushing her teeth to cooking dinner.\" I started tickling under the chin and she began to purr. \"Right, Momo?\"\n\n\"Momo loves playing with Master,\" she said.\n\nMy sphincter slammed shut and I forgot how to breathe, waiting for the woman to respond. She simply smiled and said, \"I'm sure you do.\" Sometimes I forget that \"playing\" has a very different meaning in our house than in others.\n\nOur time soon came and I got enough fish to satisfy Momo's feline hunger. The man behind the counter actually gave her a piece of raw swordfish as a treat.\n\n\"Momo, what do you say?\"\n\n\"Thank you!\" she exclaimed with her mouth full.\n\nUnfortunately, Momo's promise of good behavior went out the window. The fish section had gotten her all excited and now she was wound up like she was chasing a moth at three in the morning.\n\n\"Master, can I have this?\"\n\n\"Master, can I have that?\"\n\n\"Master, I want those!\"\n\n\"Master, let's get cake!\"\n\nEvery time she saw something she liked or simply didn't understand, she'd pull on my sleeve and beg me to get it for her. When I was a little kid, I used to behave the same exact way in the store. My mom called it the \"gimme's\", and now I finally knew how to felt to be at the other end. People started following us through the store; not directly behind us, they had the decency to keep some distance, but whenever I looked over my shoulder, I could see them, peering from around the corners of aisles, darting back when I spotted them like coyotes. I didn't blame them, Momo could certainly draw attention. \n\nI finally managed to get her to the checkout aisle, but by then, we had the entire store watching us. \"Ok, now we put everything on the table and pay for it.\"\n\nMomo did as told and moved the food over onto the conveyor belt. It started to shift and she jumped back. \"Master, what's going on?\" she asked fearfully.\n\n\"Relax, it's just a machine.\"\n\nWe continued loading our food onto the conveyor belt with the cashier doing her best to focus on her job instead of Momo, though I could see her snickering at Momo's reaction to the belt moving. It was a relief when we finally got out of the store and returned to the car.\n\n\"Momo, I love you, but you were a pain in the ass in there.\"\n\n\"Sorry, Master.\"\n\n\"Just try to behave better the next time I take you out. And remember, Betty cannot find out that we had burgers for lunch.\"\n\n-----\n\n\"Ok, you two, blow out the candles,\" I said to Peter and Jenny.\n\nWe were all gathered at the dinner table, looking at the expansive cake placed before us. I had gotten it at the store with Momo, but it had been a challenge to keep her from giving into temptation and pigging out in the middle of the store. We were celebrating the rabbits' \"birthdays\", their transformations. Jenny and Peter were sitting on opposite sides of the table, and they both leaned in and gave a puff, blowing out the two candles.",
        "Everyone clapped and I started cutting up the cake. All around me, tails were wagging in anticipation, and once I handed the first two pieces to Jenny and Peter, all the hybrids crowded in, fighting for the next slice.\n\n\"Hey, everyone, get back to your seats! Only people sitting can have cake!\" \n\nI shooed them all back and finally handed everyone a slice.\n\n\"This is so good!\" Jenny exclaimed with her ears standing straight up. Peter was in a similar state, and all through the table, that same moan of happiness was being heard. \n\n\"We're going to need a lot of cake when everyone else gets here,\" I said as I sat down.\n\n\"Huh? More like us are coming to live here?\" asked Jenny.\n\n\"Yep, at the end of the month, about a hundred of them. It was how we got the attention of Dr. Lawrence and the others. We went to a public place and transformed a whole army so that the world would know what was going on.\"\n\n\"Were there any cats?\" Momo asked.\n\n\"A couple, but none like you.\"\n\n\"This place is going to be packed,\" said Lorraine, \"I can't wait! It'll be so much fun! Not to mention I can finally fulfill my dream of having sex with fifty guys at once.\"\n\n\"Are we going to live like this forever?\" Peter asked.\n\n\"No, this place is just an experiment,\" I said. \"The CDC is studying our interactions. We'll be moving back to our original houses in two months.\"\n\n\"Oh, hey Dr. Lawrence,\" said Elise. She had sensed him with her tail before any of the girls managed to hear him approaching. Though they were occupied with eating cake, so it was understandable.\n\n\"Hello,\" he said as he took an empty seat.\n\n\"Do you want a piece of cake?\" I asked.\n\n\"Jeez, I really wish I could say yes, but I feel like one bite of that would add three inches to my waistline. Besides, we're all eating way too much junk food in our office.\"\n\n\"With a job like yours, you're probably eating out of boredom,\" said Elise.\n\n\"I'll admit, some moments are more fascinating to watch than others.\"\n\n\"I hope you've been saving the footage from my room. I want to add them to my collection, maybe put them online when everything settles down,\" said Lorraine.\n\n\"Yeah, that's something I wanted to ask about,\" I said. \"I'm sure you and the other doctors are watching me and the girls when we play together. I really want to read any notes you guys have come up with, or whatever dissertation you plan on publishing.\"\n\n\"Sorry, we're not the people to talk about for advice on improving your performance.\"\n\n\"Not that, I just want to make sure that nothing is... misunderstood, that no one is getting the wrong idea.\"\n\n\"Very well, but you have to read them elsewhere. I need you and Lorraine to stay out of the house tomorrow.\"\n\n\"What for?\" Lorraine asked.\n\n\"We're going to study how hybrids communicate with animals, specifically their own kind. Betty told me she could speak to the cows on your farm, so we want to see what happens when everyone else meets their own animal counterparts. Since we're having animals brought into the house, we need you two to be far away so that none of them turn.\"\n\nI looked at Lorraine. \"We're not hanging out together, do you understand?\"\n\nShe grinned. \"There is nowhere you can go where I can't find you and annoy you.\"\n\nPlease comment!"
    ],
    "authorname": "Sage_of_the_Forlorn_Path",
    "tags": [
        "harem",
        "cat girl",
        "dog girl",
        "mouse girl",
        "cow girl",
        "salamander girl",
        "bunny girl",
        "anal",
        "animal girl",
        "comedy"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/master-master-pt-13"
}