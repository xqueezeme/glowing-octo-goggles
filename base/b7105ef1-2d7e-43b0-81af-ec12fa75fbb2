{
    "title": "Requited Ch. 06",
    "pages": [
        "\"How did you get here so fast?\" He asks, as he lets me in.\n\nHis apartment has the same empty feeling as mine. Sarah left last week, and Tyler left earlier today. Their things are gone. The photographs Sarah took in Dubrovnik, that used to hang above the sofa, are gone. Nothing but nails and slight discolorations in the paint on the wall, lie in their wake. The pink feather boa, that was draped over the mirror in the hallway ever since Tyler's hat party, is gone too.\n\nSeeing his place like this and seeing him in it, surrounded by half packed boxes and empty space, makes me feel frantic. I feel wild. Terrified. More afraid than I've ever been. For the first time, I'm not just scared of losing him. I am scared of that. I'm scared shitless of that. But that's not all I'm scared of now. I'm scared of more than that now. Much more. Now, I'm scared that if I don't tell him how I feel, he's going to drift away and I'm going to live the rest of my life living a half-life. I'm going to spend the rest of my life feeling him in my chest. Every year, life is going to take him further and further away from me. I'm going to live every day knowing I didn't take a chance.\n\n\"I drove.\" I say.\n\n\"What? Are you crazy? Have you been drinking?\"\n\n\"No,\" I say, though I can see how I might have sounded a little unhinged when I called him earlier.\n\n\"I thought you were fucked up.\"\n\n\"I am fucked up. Believe me, I am, but not like that.\"\n\nHe looks confused and a little upset. A little upset, turns to a lot upset. His eyes are huge and dark. Big, black pools. Glassy and shiny.\n\n\"I, uh, I kind of feel like we're having a fight, but I'm not really sure what it's about.\" He says, biting the corner of his bottom lip.\n\n\"I feel like that too,\" I say, before adding quietly, \"but I do know what it's about.\"\n\nHe looks more confused, and his eyes are sadder than ever, \"What's going on with you, West?\"\n\n\"I feel like everything is ending. I feel like this is the end.\"\n\n\"Oh, West.\" I can tell he's trying really hard to be supportive but it's taking a toll on him, \"You'll get back together with Ash. You always do. Don't worry about it.\"\n\n\"I won't. It's over. It's done.\"\n\nHe must hear something in my voice, because he looks a little taken aback. He doesn't say anything. He just stands there, looking at me in a mixture of sympathy and something else. He looks tired. Weary.\n\n\"I had a dream about you the last night.\" I say, \"You were really, really far away. I was calling you, but you couldn't hear me. I was upset when I woke up. I'm worried...I think that's what's going to happen. Our lives are going to take us in different directions, and we'll drift apart. That's what happens with college friends.\"\n\nHe doesn't reply.\n\n\"Andy, I don't want that to happen with you.\"\n\n\"I don't want that either.\"\n\n\"Our friendship is too important to me.\"\n\n\"It's important to me, too.\"\n\n\"I know, but I think it's more important to me. I'm the one who always makes all the effort. I think it means more to me than it does to you.\"\n\nHe smiles a wry little smile, it's the smile he always smiles when he thinks he knows more than I do, \"No, it doesn't.\"\n\n\"I have to have you in my life. It's like I, I won't be okay without you. Andy, I don't just want you in my life, I need you.\"\n\nHis brow furrows for a second and then he looks down at his feet, \"I need you, too.\"\n\n\"I'm really, really scared of fucking our friendship up.\" There's fear in my voice. I can't hide it, so I don't even try.\n\n\"Me too.\" He looks right at me when he says it. His voice is strong. Stronger than usual. He really means it.\n\nI sigh. I look around the room for a second. I know I'm going to say it. I always do. I can't help it. My heart starts sinking before I even say the words. I already know what his response is going to be, but I say it anyway.\n\n\"I love you, Andy.\"\n\nMy chest squeezes as I wait. I'm expecting a, \"Shut up,\" or a, \"Jesus.\" He looks tired, so maybe, tonight, it will just be an, \"Ugh,\" or an eye roll. I keep waiting, but he doesn't say anything. My heart starts pounding. I can feel it in my throat. I will my eyes to look up at him. I move them slowly. I move them up his body, his neck and his face. I move them up, until I get to his eyes.\n\nHe takes half a breath. A quick intake and then a strange, choked little exhale.\n\n\"I love you, too.\" The words seem to spill out of his mouth, tumbling out fast.\n\nHis voice wavers as he says it. It sounds like a very fine blade has sliced through his larynx. The words travel slowly across the space between us. When they finally land, they land softly. They warm my chest. It starts to burn. I don't move for a second. Maybe more.\n\nHe looks down and tries to smile. It's a nervous, wobbly smile, \"Bro.\" He adds quickly.\n\nIt's too late. He said it and I heard it. I felt it, too. I feel it. I start to smile. I feel it all over my body. The smile takes me over. I feel it in every cell in my body. Explosions. Tiny explosions, rip through me. Every part of me is alight. On fire.\n\n\"I told you!\" I cry. A wave of euphoria hits me, as I step towards him, \"I told you. Didn't I always tell you, one of these days, you'd say it back?\"\n\n\"It's uh, it's no b-big deal.\" He's still trying to smile. He's still not entirely successful.\n\n\"There's one thing I didn't tell you, you know that?\" I take another step to him. He steps back a little. His eyes are huge. He looks nervous. He tries to move, to look away, but he doesn't.\n\n\"W-what's that?\"\n\n\"I never told you what I swore to myself I'd do, if you said it back.\"\n\nHe's stepped back as far as he can. He's up against the wall. I take one more step towards him. I'm so close, we're almost touching. I can feel his heat from where I'm standing. It's burning me through my clothes.\n\n\"W-what's happening?\" He whispers, so softly he's barely mouthing the words.\n\n\"I'm going to kiss you, that's what's happening. I'm going to kiss you right n...\"\n\nI don't finish my sentence. He cuts me off. He leans down and kisses me first. He kisses me with an intensity I've never felt before. A force, I've never even imagined. I lean up towards him. I open myself. I'm like a vessel, empty, but I want to be full. I lean up and open my mouth. He fills me. He pours himself into me and I let him fill me completely. I let him flow into me until I'm on fire. I'm burning. I'm burning and moaning. A deep, low sound is coming from my belly. I don't sound like myself. I sound wild. I sound like an animal. The sound coming from me, isn't a moan, it's a call. A mating call. My mate hears me. He knows my call. He answers with a call of his own. A soft, low, growl. The sound reverberates through me. It echoes in my lips, my heart and every part of my body that's pressed up against him.\n\nMy hands are around his neck and in his hair. We are both breathless. We're gasping.\n\n\"What's going on?\" He says again.\n\n\"I want you.\" I moan into his mouth, \"I want you, Andy.\"\n\nEven though I know I should, I don't wait. I can't. I start pulling at his t-shirt. I start lifting it. He looks stunned and confused, but his eyes are dark with arousal. He lifts his arms up above his head and I pull his t-shirt off. I throw it down on the floor. A low moan rises up from my core. The sight of him like this, shirtless, open mouthed. In my grasp. It's almost too much. My brain is thinking slowly. It's not thinking in words. It's thinking in sight and sound. It's thinking in touch. My hands are shaking. They are shaking so much, but I touch him anyway. My hands are everywhere. They are all over his chest. I'm stroking his abs. I'm grabbing at his pecs and his arms. He's hot and hard. I can't get enough. My hands snake down. They are being pulled downward. Down to his dick.\n\nThe first time I touch him, I do it with a flat palm. The second I touch him, my hand curls around him. It clenches. I grab him hard. So hard, he gasps and bucks. He's thick and solid. He pulses in my hand. I don't stop. I stroke with one hand and I rip at his belt and his fly with the other. The whole time, my eyes don't leave his. I see worlds in his eyes. Planets. Galaxies. I see the answers to every question I've ever had. I see it all. I don't want to look away. Just the thought of it makes me ache. But another world is calling my name. A place that's been calling me for a long time. Too long. Its call has gone unanswered for years. I have to answer now. I have to. It's not calling vaguely now. Now, it's saying my name. It's calling loudly. It's calling strong. I sink down to my knees. I do it without thinking. Without a clear plan. I simply answer the call.\n\n\"What's happening right now?\" He whispers.\n\nHe looks confused. His hair has fallen into his face. His lips are parted. Thick with desire. Even though he doesn't understand exactly what's happening, he knows what to do. He pushes his jeans and his briefs down. He shoves them out of the way.\n\nI moan again, when I see him like that. His dick is perfection. It's thick and straight. Uncut. It's swollen and hard. Straining. My hands are on his hips and I pull him towards me. I lean my face into him. I press myself against him. I rub my face up and down the length of him. I press my nose as close to him as I can get and inhale deeply. He smells like Andy. Exactly like Andy. Just like the faint hint of him I've been smelling for years. This isn't faint though. I found the source. I'm not just close, I'm shoved up against it. I rub my face and my mouth against him. He's hot to the touch. Smooth and hot. I moan again. The sound rises inside me. It rises like a wave. It makes my back arch and just for a moment, I look up at him. He's looking down at me in wonder. Awe. Astonishment. I don't look for long. I take him in my hand and bring him to my mouth. He's rigid and big. He fills my mouth. I lick him and stroke him. I take him into my mouth. I do it over and over. I try to consume him. I do it until he's moaning, too. I do it until he steps back.\n\nHe pulls me up to my feet. My head spins from the sudden change in longitude. I'm dizzy. My vision is unclear. He kisses me again. This time, he kisses me like he owns me. He forces his tongue into my mouth. As he does it, he pushes me towards his bedroom. We stagger backwards. We crash into the door. He pulls off my t-shirt and then my belt. It lands on the floor with a hollow clank. He fumbles at my fly, stepping out of his own jeans at the same time. He pushes me down on the bed and pulls off my shoes and socks and then my jeans. We are both completely naked. I'm almost insane with desire. Seeing Andy like that, naked. Just muscle and skin. I can't think. I can't think anything. All I can do, is feel.\n\nHis hands are all over me. His big, beautiful hands. Hands that make art. Hands that make beautiful things. He inches them down my chest, down my belly. I try to lie still, but I can't. My dick is screaming. It's begging and straining. If he doesn't touch me, I know I'll go insane. I can't talk though. I can't form the words, so I can't tell him. Thank God, it's Andy and he knows me. He knows me better than anyone. He understands. He strokes me gently. Just a light touch. It's enough though. It's more than enough. Every muscle in my body tenses. They all tense hard. He takes me into his mouth, and I feel weak with relief. I look down and see myself disappear into his mouth, into his beautiful face. What he's doing to me is unreal. He takes me and takes me. He takes more of me than I ever thought possible. Then he takes more. I feel the slick smoothness of his throat. It feels like he's swallowing me. Swallowing me whole.\n\nHe has one hand on his dick. He's stroking furiously. I can't drag my eyes off him. I see the second he comes. He sprays all over. He moans on my dick. The sound resonates through me. I was hanging on by a thread anyway and the sound he makes reaches inside me and squeezes my soul. It damned nearly squeezes the life out of me. I come so hard everything goes black. It all goes away. The stress of the last couple of months, things with Ash, all the good-bye's, the empty apartments, the thought of Andy drifting away, it all goes. It fades to black. Everything's quiet. Perfect and peaceful. There's nothing but pleasure. I feel like I'm floating. There's nothing but Andy. There's nothing but Andy and me.\n\n\"What the fuck is happening right now?\" He whispers once more.\n\nI can't talk. I still don't know words. So, I show him. I show him and then he shows me. We show each other until we can't move. We show each other until we both fall asleep.\n\nFalling asleep, is putting it mildly. Passing out, is probably a better description.\n\n*\n\nThe next morning, I wake up late. It's already light. I look around the room. Andy isn't here, his side of the bed is cold. I notice there's no pillow wedged between me and where he lay, so I guess that's a good thing. I find my jeans in a crumpled heap on the floor and pull them on. I have a quick attack of nerves as I do it. Last night was wild. We were both out of control. It isn't dark now. It's light. That makes it feel different. That makes it feel real. I head into the living room to find him and to find out what reality looks like in the cold light of day.\n\nHe's in the kitchen. He has his back turned to me. He has a pair of sweatpants on and nothing else.\n\n\"Hey.\" I say.\n\nIt's just a small word, but it doesn't come out easily. It sounds a little breathless. Like I've been running, or something. His whole body tenses. I see the muscles in his back contract. He jumps noticeably at the sound of my voice and spins around quickly to face me.\n\n\"Morning,\" he says, \"a-are you okay?\" His eyes are wide. He's biting his top lip. Not biting it, really, just running his teeth over it, the way he does when he's nervous, \"Everything's fine,\" he adds quickly. So quickly, I'm not sure if he's trying to convince me or if he's trying to convince himself, \"everything's okay. It's definitely all fine.\"\n\nI feel my eyebrows rising. I've seen him stressed and a little up-tight before, but I've never seen him like this.\n\n\"This kind of thing happens,\" he continues, his voice is a little higher than usual and he's talking so fast, his words are running into each other, \"it happens from time to time. It doesn't have to be a big deal. It's fine. I mean, it's weird, but it's fine. I guess, i-it's just one of those weird things that happened, but we won't make it weird, so it just...it just won't be weird.\"\n\nI burst out laughing at that. I don't mean to, but I can't help it. I can't believe he's using my line. I walk over to him. He's leaning against the kitchen counter and I'm a metre or so away from him.\n\n\"Well,\" I say, dragging my voice out as if I'm giving it serious thought. I dig deep. I dig deep into myself and find every shred of self-assurance I can muster, \"I think we could have got away with not making it weird, if we only came three times. I think the problem is the fourth time. I think that was one time too many. I think the fourth time just pushed this whole thing over the edge. Over the edge and right into serious weirdness.\"\n\n\"It doesn't have to.\" He whispers, \"It can still be fine. It doesn't have change anything.\"\n\nI take another step towards him. \"What if it does?\" I'm so close to him now, we're almost touching. I can see how much I'm affecting him. I can see how nervous he is. Seeing him like that, makes me feel better. I can see this means something to him. Hopefully, it means the same thing to him as it does to me. I take one more step, so that our hips are touching. \"What if I want it to?\"\n\nHe looks around the room in a daze. He blinks his eyes hard for a second and then looks at me, \"What's going on?\"\n\n\"This.\" I say, running my hand up his chest, curling my hand around his neck and pulling him towards me. I kiss him softly.\n\nHe gasps and pulls away, \"But West, you're straight. You, you like girls.\"\n\nBeing close to him like this, is sending a charge through me. A deep, wave of desire. I've never felt less straight in my life. I shake my head, \"Not straight,\" I say, \"definitely not straight.\"\n\n\"But...\"\n\n\"Want me to show you?\"\n\nHe swallows hard. He looks confused, but he nods.\n\nI take his hand and press it firmly against my dick. His eyes and his mouth fly open. I hold his hand against me and then I kiss him. The second my tongue finds his, my dick lurches. It lurches wildly, \"See?\"\n\nHe nods, but he still looks very uncertain.\n\n\"Okay,\" I keep holding his hand in place and reach down with my other hand, I grab his dick and stroke it. The second I touch him, the effect of it hits me. Blood rushes south with such force, my head spins. My dick grows so hard and so fast, it makes him gasp, \"See?\" I say again.\n\nHis free hand flies up to his face. He presses it up against his lips. He dips his head slightly. He's trying not to smile, but he can't help it. His eyes are dancing. He likes what I'm saying. He likes what he has in his hand. He likes it, the same way I like what I have in my hand.\n\nI can tell. \n\nEven though Andy was making coffee when I found him, we don't drink it. It goes cold. Ice cold. We get distracted. We get distracted all over the kitchen. All over the living room. We're back in his bedroom, by the time we come up for air. He looks at his watch.\n\n\"My God,\" he says, jumping up, \"we're supposed to be studying.\"\n\nIt's Saturday morning, it's almost midday. My last exam is on Tuesday and Andy's is on Wednesday. It's crunch time.\n\n\"You're right. We should study. We should eat something, then we should study.\"\n\nI feel lightheaded and shaky. We haven't eaten all day. That's at least part of the reason I'm shaky. The rest of the reason has something to do with the fact that Andy's naked. Totally naked. He's walking around without a stitch of clothing on. He's moving around, the way he does. Languid. Slow. Sexy. He's not covering himself with a towel, or trying to hide, the way he usually does when he gets changed in front of me. He's not self-conscious at all. What he is, is beautiful. His body is beautiful. Long, lean limbs. Broad shoulders. Narrow hips. I already know his arms and his chest. I've been committing those parts of his body to memory for years. I'm used to seeing his legs. I see them when he swims or wears shorts. I haven't seen the rest though. Not like this. I've only seen flashes of the rest. Stolen glances. He looks different like this. Naked everywhere. All at once. I can't take my eyes off him.\n\nHe finds his sweatpants on the floor in the kitchen and pulls them on. I find mine, and get dressed, too. We make ourselves a sandwich and sit at the table and eat it. We don't talk much. We were both starving. Every now and then he looks up at me and his eyes smile like crazy. They glisten as he looks across the table. He looks away when I catch him looking and takes another bite of his sandwich. His lips curl up as he does it. He's trying not to smile, but he can't help it. I'm smiling, too. I can't help it either.\n\nAfterwards, I ask if I can have a shower. He says, \"Sure, the towels are in the cabinet and if you look in the top drawer, you should be able to find a toothbrush.\"\n\nI shower and then search the drawer for a toothbrush. I find a little stack of them. They're the disposable toothbrushes you get on planes or in hotels. There are five or six of them, each individually wrapped.\n\nI'm grateful to be cleaning my teeth, it's not that I'm not. It's just that as I do it, I can't help thinking of all the other guys who have stood here in this bathroom, and cleaned their teeth, like I'm doing now. I feel a sick sense of dread. Of fear. Andy never keeps guys around for long.\n\nIs it going to be different with me? \n\nI hope so. I hope it's different with me because it's me. But I don't really know this side of Andy and who knows what the future will bring? No one really knows. Especially not people who recently made a deliberate decision to choose the unknown.",
        "Andy spends the afternoon studying in his room and I lie on the sofa and watch one of the Fast and Furious movies. I couldn't tell you which one. For all I know, it was Fast and Furious 218. I don't have my books with me, so I can't study. Not that I was really planning on studying, even before this whole thing with Andy happened, if I'm being totally honest. My last paper is Quantum Geometry. It's one of my strongest subjects. I've been charging rich kids forty dollars an hour to tutor them on this subject for years. I don't need to study. I do spend a little time thinking about the geometry of moduli spaces of supersymmetric gauge theories, as I lie there, watching the movie, so that's something. I think about it, when I'm not thinking about Andy, so I don't feel entirely bad about not studying.\n\nI get hungry again in the early evening. I'm thirsty, too. I'm probably a little dehydrated. The things Andy and I have been doing to each other, have probably seen to that. I search the fridge and find ingredients to make an Amatriciana sauce, of sorts. The smell of the bacon and garlic saut\u00e9ing, lures Andy out of his room.\n\n\"God, that smells good,\" he says, as he heads to the shower. I consider following him, but the pasta dish I'm making is at a critical junction. I decide to wait, even though my dick disagrees and is making its point of view known.\n\n\"Want a beer?\" He says once he's showered.\n\n\"Don't you need to study some more?\"\n\n\"I uh, I think I've done all the studying I can manage for today.\"\n\n\"Gee,\" I say, \"I hope I haven't distracted you.\"\n\nHe gives me a look that I've never seen on him before. His eyes are dark. They take me in and then after a split-second, he smiles a small, crooked smile. It's the first time I've ever seen him looking at me like that. I don't know that look, but it doesn't take a genius to understand it.\n\nThat look is pure sex. \n\nMy dick was already thickening, now it's solid. Erect.\n\n\"Mmmh,\" he says, after we've eaten, \"that was good. Thanks.\"\n\n\"You must have been hungry. We haven't eaten enough today.\"\n\nHe smiles like he did before. He smiles like sex. I'm glad we're sitting down. I'm not sure I could trust my legs to support me right now.\n\n\"What are you talking about?\" He says, \"I've eaten plenty. I've eaten loads.\"\n\nMy brain experiences a major, major short circuit when he says that.\n\nDid Andy Montgomery just talk dirty to me? \n\nI'm shocked. Shocked and aroused. Shocked, aroused and amused. I start laughing. It rushes up from my belly, bubbling out of me, the way only Andy can make me laugh.\n\nI look at him and smile, I let my eyes travel down his face, down his neck. I deliberate for a second before I add, \"I'm still hungry.\"\n\n\"Do you want more pasta?\" He teases. He's still smiling like sex. Exactly, precisely, like sex.\n\nI shake my head. I'm having trouble breathing and organising my thoughts, but I manage, \"That's not what I'm hungry for.\"\n\nHe gets up. He holds my gaze as he saunters around the table. I feel paralyzed. He pulls me up so quickly, I let out a little surprised squawk. His chest is right up against mine. We're touching. Our chest and our hips. My heart is pounding. He runs his hand up my arm and takes my neck gently in his hand. His fingers are just below my jaw. Not squeezing, just holding. Owning. He tilts my head slightly, so my neck is exposed.\n\n\"Careful,\" he murmurs, exhaling a warm breath against my ear, \"if you say, \"Hungry,\" like that, one more time, you're going to make me lose control.\"\n\n\"Urghg.\" I gurgle, turning slightly to face him.\n\nHis eyes are hooded. Low. Darker than I've ever seen them. The effect he has on me is indescribable. It's unlike anything I've ever felt. I part my lips and offer him my tongue, before his lips even make contact with mine. I let him pour himself into me again. I tear at his jeans while he does it. I rip open his button but struggle with his zip. He has to help me. There are hands everywhere. Big hands. Male hands. He pushes down his briefs and his jeans and I have him in my hands. His dick in one, his balls in the other. He takes a couple of steps back and I follow, though I'm sinking to my knees as I do. He takes another step or two back, sitting back on the sofa. I'm on my knees, so I crawl over to him. I do it slowly. I don't take my eyes off his dick. I'm breathing through my mouth. Loudly. I can hear it. I've never felt like this before. I've been on my knees before, of course I have. It's always been for fun. Light titillation. This isn't light. It isn't to titillate. It's the first time I've ever felt like I belong on my knees. Like I belong at some one's feet.\n\n\"Andy,\" I say, looking up at him, \"I don't know what I'm doing here.\"\n\nHe misunderstands. His eyes open in something resembling horror, he tries to cover himself quickly, \"You don't have to. It's fine. We don't have to do this.\"\n\n\"No, no, I want to do this. I want it. I just don't know what the fuck I'm doing.\"\n\n\"Oh, okay,\" he says and then smiles, pausing and thinking for a while before taking my left hand in his. He grips two fingers in his hand, at my third knuckle. He lifts my fingers up to his mouth, looking down at me, making sure I understand. I give a slight nod. He swirls his tongue around my fingers. I do the same to the head of his dick. He makes his lips soft and nudges the tips of my fingers against them, opening them slowly, little by little. I feel the hot, wet roughness of his tongue against my fingers and do the same to his dick. I do it until there's a slight saltiness when I lick his slit. I swirl my tongue round his tip, teasing his foreskin. I pull it back slightly, raising my eyebrows to him, waiting for him to show me what he wants.\n\n\"Yeah,\" he nods, \"like that. Just pull back a little.\"\n\nHis swollen head and slit are exposed a little more. I run my tongue around it, drawing a sharp hiss from him.\n\n\"Sensitive?\" I ask.\n\n\"Mmmh,\" he moans, \"So, so sensitive.\"\n\nI'm intrigued by the fact he's uncut. I like it. I like everything about him and his dick. I want to know everything about it. I want to know what it feels like for him. I want to know if he has a preference for cut or uncut men. I want to know what he likes, and I want to know how to give it to him. I need to know. I look up at him again. I wait for further instruction.\n\n\"Don't force it,\" he says, as he sinks my fingers into his mouth, \"just take what you can.\"\n\nHe takes the entire length of them into his mouth, undulating his tongue ever so slightly. The wetness of his mouth on my fingers makes me groan softly. I take what I can. It's nothing compared to him, but it's more than I managed last night or this morning. I roll my tongue against him, sucking slightly when I raise my head. My mouth is full. Full of his thick, fleshy pole. I love it. I can't get enough. The pressure in my dick is so intense, I can't ignore it anymore. I'm squirming against my jeans. Trying to find any friction I can, to ease the tension. I try to reach down, to rub it, but he catches my wrist. He guides my hand to his dick. I use my hand and my mouth. I was going slowly, but I'm not anymore. I'm in a frenzy.\n\nHe taps my shoulder, \"West,\" he says, his voice is low and strained, \"if you keep doing that, I'm going to come.\"\n\nHe did this when I went down on him before. He warned me and then pulled out, or he came into his hand, or my hand. This time, I don't want him to do that. I want him. I want his load. I want it because he made it for me. I want it, because it's his. I sink my mouth onto him again. Deeper than before and as I do, he stiffens and moans. It's a deep, lustful sound that comes from his core. He shoots so deep in my mouth, that I don't even taste it at first. I just swallow. I swallow and swallow, until I pull back. I taste the last two or three spurts. They land on my tongue. It tastes salty, in a slightly fruity way. I like it. I want it. I lick his tip until he's quivering as if he's in pain. His head is thrown back against the sofa and his eyes are following me slowly.\n\n\"Your turn,\" he says, pulling me up and switching positions with me. He takes off my t-shirt and works his way down my body with his mouth. I feel delirious. I've never felt this sensitive. Over-sensitive. Just his breath on my neck and my nipples, makes me tremble.\n\nPlease, Andy.\n\nHis hands are on me now, too. They're on me hard. They seem to know where I'm aching. He knows just how to touch me. Just how much pressure to use.\n\nPlease, I can't wait.\n\nHe flicks my nipples with his tongue. They feel raw. As if they've been exposed to the outside world for the first time. When they are so hard, they hardly feel like they're part of my body anymore, he grazes them with his teeth. I gasp through my teeth and thrust my hips up.\n\nTouch me. Please touch me. I'm losing my mind. \n\nI can't form the words, but he must hear the voice in my mind. He sinks his mouth down on me and takes more of me than anyone else ever has. He comes up for air and then takes more. From the second he touches me; I can feel my orgasm. It's close. It feels like it's already left my balls. It's so close, I can almost feel it travelling up my shaft. I hold back as hard as I can. I clench my teeth and dig my nails into the sofa. I'm writhing and trying not to scream with the effort. Every breath I exhale takes the form of a ragged, rattle that comes from the back of my throat.\n\n\"Fuck!\" I gasp, \"Fuck, fuck, I can't hold back!\"\n\nHe pulls up slowly, his lips stimulating every millimetre of me, \"I don't want you to hold back. Let go.\"\n\nHe takes me again and the second I feel myself slide into his throat, I let go. I let go with every part of my soul. I let go with parts of me I didn't even know I had. I let go of things I didn't know I was holding onto. I let everything go. Everything. I hold nothing back. The pleasure is so profound, I feel certain it will change me. Alter me. Transform me forever. I know the exact second it starts, but I'm not sure when it ends. It goes on and on. Longer than ever. On and on until everything feels woolly. Vague and unfocussed.\n\nI don't move for a very long time. I can't. At some point, he gets off the floor and comes to sit next to me on the sofa. I can't move. I don't have command of my body yet, but as soon as I do, I lean my head down and rest it on his shoulder. We stay there like that until it's time to sleep. We watch something on TV. Fast and Furious 2546, for all I know.\n\nTonight, I'm aware of him, as I sleep beside him. I feel his presence. His heat. His body. Last night, I passed out as if I was in a stupor, but tonight, I know he's there. I feel it when he moves. I'm aware of his skin against mine. At some point, I'm on my belly and he's on his side next to me, one leg slung over mine, and his arm on the small of my back. Holding me down.\n\nI can hardly describe how much I love the feeling of being weighed down by Andy.\n\n*\n\n \n"
    ],
    "authorname": "herdirtymind",
    "tags": [
        "gay romance",
        "first time",
        "blow job"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/requited-ch-06"
}