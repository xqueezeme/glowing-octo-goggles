{
    "title": "Buried Treasure Ch. 26-30",
    "pages": [
        "Pack Warrior Greg Barks' POV \n\nArrowhead Alpha Home \n\nI woke to the banging on my door. \"GREG! Meet me in Heather's room in ten minutes.\" I recognized my boss's voice. \n\n\"Yes, Beta Coral.\" I looked at the clock; it was just after midnight. I'd gotten maybe an hour of sleep, and I had a feeling I wouldn't get much more. I quickly dressed and was out the door in eight minutes. \n\nBetas Coral, Keith, and Teri were waiting for me in Heather's room. She looked at me, confused as to why everyone looked like they did. \"What's going on? Is it the Club?\" \n\n\"Everyone remember not to reveal our nature to her,\" Coral reminded us. \"In a way. There have been some developments down in Florida you need to know about, Heather.\" She filled both of us in on what had happened; the eleven Sons of Tezcatlipoca who were found dead in Mongo's garage and his arrest. \n\n\"Oh my God, Three Tequila must be beside herself,\" she said as it all hit her. \"She's all alone now.\" \n\n\"She's never alone, the Ladies will close ranks and help her out,\" Coral said. \"You know that.\" \n\nShe nodded. \"I should be there for her.\" \n\n\"You're in more danger than ever, Heather. We thought we got you out of there without a trace, but Rori called me tonight. They think enough clues were left behind that the Sons might come here looking for you.\" \n\nI stiffened, any threat to the Pack had to be acted on decisively. \"When?\" \n\n\"We don't know. The Sons might have eyes on us already; they might be here in a few days; they might never figure it out. What they are sure of is that we cannot have you here if they come looking. We don't think the Sons will risk attacking us unless they know you are here since there are so many places you could be,\" she said. \n\n\"The police think the Sons have you, and we wanted the Sons to think the Feds have you. The Task Force announced that you are presumed dead, and they are searching for your body at a lake near Ocala. The Sons know better, they'll think the Feds are lying to throw them off. What we found out last night is that the Sons may have figured out Chase and Rori had something to do with your disappearance. We need to get you out of here quickly, and keep you away until it is safe to return.\" \n\n\"Where am I going,\" she asked. \"I'm not very mobile right now.\" \n\nCoral sat on the bed with her. \"We had a few ideas, but the best one was the most radical. Moving you to other chapters, or with people you know, won't work for long. The Cartels and the Sons WILL find you eventually; they have too much money and resourcefulness not to.\" She looked over at me. \"That is why we decided that simple is best. Mrs. Heather Barks will be on an extended honeymoon with her husband, Greg.\" \n\nMy jaw dropped, about the same time hers did. \"What the fuck did you just say?\" \n\n\"You have a new identity that should be good, but by traveling with Greg, it gives you protection and another layer against leaving a trail. He's still a Canadian citizen, no one knows he is here, and he's close enough in age you make a believable couple. By pretending to be a married couple, you don't need to provide identification, and you won't raise any eyebrows.\" \n\nI thought about it; it made sense. One werewolf could keep Heather hidden, and a couple would be able to travel without raising any flags. \"Where will we go?\" \n\n\"Don't fly, and only cross the border into Canada if you think you need to,\" Coral told us. \"We want to minimize your paper trail. I just want to make sure that you two are going to be all right with this plan.\" \n\n\"I'll do whatever is needed to keep Heather safe,\" I said. \"You can count on me.\" \n\nHeather didn't look as confident. \"This is what Chase and Rori think is best?\" \n\n\"Yes, she told me an hour ago.\" \n\nThat settled her. \"I know how much they risked to get me out of there. If they need me to do this, I'll do it.\" \n\n\"Thank you, Heather. Trust us to keep you safe, and we will.\" She looked over at me. \"Teri is going to help her pack, you leave in an hour,\" Coral said. \n\n\"I don't have anything,\" Heather said. \n\n\"I went shopping for you yesterday,\" Teri said. \"Chase let me know your sizes and preferences after he cleared your clothes out of your house. I couldn't pull off the Florida look on the North Shore in December, but I think you'll like your outfits.\" \n\nI followed Beta Coral out of the room as Teri went to get the suitcase and clothes for her. She led me to her office, where she opened a safe. \"Stay well clear of other Packs and Steel Brotherhood clubhouses, and the entirety of the American Southwest. We want you to limit your trail and your chances of detection. Avoid big cities, and keep her out of sight if you're going through them; they have too many cameras, and cameras can have facial recognition. The same thing applies to casinos; even the smaller ones are using the technology. Don't get pulled over or attract attention, and travel at night if you can.\" \n\n\"I'll stick to smaller resorts and hotels then.\" \n\n\"Exactly.\" She opened up a safe behind her desk and pulled out a small stack of cash. \"This is mostly 20's because hundreds attract attention. Use cash as much as possible.\" I looked at it before putting it in my pocket; it was close to ten thousand dollars. \"Where you need credit cards, like gas stations, use these. They are reloadable debit cards, completely untraceable; each contains about ten thousand dollars. Hotels will still insist on photo identification and a credit card, so use your credit cards for that. Transfer money from one of the debit cards if you need to pay the bill.\" \n\nI looked at the cards and put them in my hoodie pocket with the cash. My old Alpha wanted a receipt for coffee and a McMuffin at McDonald's to get reimbursed, but Coral was handing me a small fortune up front. \"This is a lot of money.\" \n\n\"I don't know how long you'll be out. I'm not expecting you to stay at the Ritz-Carlton every night, but rooms and room service aren't cheap. I also expect that you will take advantage of this time to train her in self-defense, defensive driving, losing tails, and surveillance. She needs to keep busy.\" \n\n\"I understand.\" One thing about this plan made me nervous. \"What if I get into trouble, or you need to reach me?\" \n\n\"Heather doesn't know we are werewolves, and we need to keep it that way. I will work out a rotation where a pair of warriors or Betas from this Pack stays near enough to lend assistance you get in trouble while staying far enough away that you won't ever see them. Charlie and Bonnie will be leaving after you do; every time you change locations, we'll change teams out. Look at the bright side, a lot of people get vacations out of this. Keith owes me a trip, so pick somewhere good.\" \n\nI gave this a little chuckle. \"Someplace warmer?\" \n\n\"That would help. You have thirty minutes to be packed and out front.\" \n\n\"Yes, Beta,\" I said. \n\n\"It's important we don't give up your location by other means; she cannot access any of her social media accounts, and all computers and accesses need to be in your name. Her phone and computers are still in Florida, and she is not to have any other access. If she uses a computer, it's yours, and you monitor it. Even a search history might give them a clue if you aren't careful.\" \n\n\"I understand, and I'll make sure she maintains that discipline.\" \n\n\"Good. I need you to remember that Heather is important to our Pack and our Alphas. You need to be alert and professional at all times. Don't let your proximity lead to an inappropriate relationship or letting your guard down. Your shadows will be kept informed of any threat updates and pass them to you. No one except your shadow will know where you are, including me.\" \n\n\"I won't let you down.\" Thirty minutes later, I'd re-packed my limited belongings. I'd have to buy more along the way since my gear wasn't here yet. \n\nI stepped into the garage, where Heather was buckling into the passenger seat of a 2015 Ford Escape 4x4 in dark green with black leather seats. Tina was folding her wheelchair and putting it in the back seat. \"Nice car,\" she said. \n\n\"It should be, it's yours,\" Coral said. \n\n\"WHAT?\" \n\n\"We've been keeping up the identity you're using for years. When you got your driver's license, you bought this car for cash from one of my friends. Insurance and registration are in the glove box; both are in your name. We've disabled the GPS, but there is an old Garmin in there too.\" \n\n\"Nice,\" I said. \"This won't attract any attention.\" \n\nI got in as Coral leaned down, helping Heather lean her seat back so she could rest. \"Have a good trip, and don't do anything stupid. If something doesn't feel right, get out of there.\" \n\nI fired up the engine as the garage door opened. Ten minutes later, I was on the road, heading east to Highway 61. \"Well, Mrs. Barks, any preference where to go?\" \n\n\"I'm not leaving the hotel room, so just give me a nice view,\" she said. \n\nI pulled over, getting out my phone. It was already the middle of the night, so I didn't want to drive too far before we stopped. Duluth wasn't far; I called and made a reservation at the South Pier Inn. Located by the historic Lift Bridge at the harbor entrance, it was far enough out of the way to give us isolation, while close enough to the city and the Harbor Walk. If nothing else, we could watch the ships go past from our room. They comped the first night for the late arrival based on my four-night stay in a suite. \n\nWhy four more nights? I figured that it would take that long for her wound to heal enough that she could shower and travel comfortably. \n\nShe fell asleep by the time we hit the highway. \"Charlie, you back there?\" \n\n\"We just left Pack lands,\" he replied. \n\n\"We're heading for Duluth. Find a place to stay near the Lift Bridge.\" \n\n\"Roger that. Drive safe.\" \n\nThe roads were quiet and the weather was good, so it was just after three when we pulled into the parking lot of the Inn. I left Heather in the car as I checked in, then pulled around to the back entrance. \"Time to go,\" I said as I unfolded her wheelchair. \n\n\"Take me to bed,\" she moaned as I lifted her out of the seat and into the chair. I took her up to the room, getting her settled in the king-sized bed before going back down to get our luggage. I finished in the bathroom, then grabbed the extra sheets and a blanket from the closet and tossed them on the couch. \"What are you doing,\" her soft voice said. \n\n\"Going to bed.\" \n\n\"This bed is huge, just stay on your side.\" I wasn't going to turn that down, but I did put a long pillow between us. The last thing I needed was to hurt her grabbing her at night. \n\n\"Good night, Mrs. Barks,\" I said as I turned the light off. \n\n\"Good night, Mr. Barks,\" she said. \n\nI woke up when she started to talk in her sleep. The talk became screaming, the screaming became tossing and turning, and the tossing and turning were tearing her stitches. I could smell the blood, and I didn't have a choice but to grab her and hold her to me. \"HEATHER,\" I said into her ear. \"WAKE UP.\" She suddenly stilled, her eyes opening, and the panic faded as she realized where she was. \"You were having a nightmare,\" I said as I tried to let her go. \n\nShe hugged me tight, her face buried in my chest as she broke down. I just held her in my arms, my hand rubbing her back while I told her she was safe with me. She fell asleep that way, and eventually, I did too. \n\nI woke about noon to the sound of a ship's whistle with my arm around her shoulders and a hard-on a cat couldn't scratch. I got it to go back down by the time I came back out of the bathroom, so I didn't embarrass myself or Heather. \n\nThe light was coming through the drapes by the deck, and I was hungry. I called for room service, thankful it wasn't too late to get a big breakfast. \"Steak and eggs for me,\" she said from under the pillow. I smiled and put her order in. \n\n\"Good afternoon,\" I said as I pulled her pillow away. \"How did you sleep?\" \n\n\"It was better in the second half,\" she said. I helped her stand, then into the bathroom. When she was done, I had her lean against the vanity while I got the medical supplies out of her suitcase. I removed the old dressing and cleaned off the blood. \"How bad?\" \n\n\"You pulled out a couple of stitches, but it's not that bad.\" I cleaned the area and used butterfly bandages to hold it together, then covered the whole thing with a large bandage. \"You need to rest today, no more sudden motions.\" \n\n\"I heard the ship,\" she said as I moved her to the table. \n\nI opened the drapes, and her jaw dropped as she saw the view. Our deck looked out over the harbor, which was still active for the shipping season. \"Nice place,\" she said. \n\n\"I'll head out later and get drinks and snacks to stock the fridge. They have room service, and there are delivery menus under the television. We really shouldn't do much until you can move without hurting yourself.\" \n\n\"I'm sorry. I was just back there in my dream for a minute, back when I came home, and the Sons were coming out. I felt myself getting shot again.\" \n\n\"It will get better.\" I looked up at the clock. \"The memorial service starts in a couple of hours. It's streaming on the Internet if you want to watch.\" I thought of something. \"The Club thinks you are dead, and you are going to be in the service. Can you handle that?\" \n\n\"Just hold me, Greg. Hold me, and I'll be all right.\" \n\nCh. 27 \n\nGreg Barks's POV \n\nSouth Pier Inn, Duluth, MN \n\nI let her calm down, sitting at the table as we waited for our room service. She turned the television on, turning it to cable news. That wasn't a great idea to calm her down, as the recent developments in the so-called 'Biker Gang War' were leading the broadcast. She froze as her picture came on the screen, with a reporter talking from the crime scene tape near the Ocala lake. A helicopter showed the searchers out looking for the bodies, while the \"expert\" talked about the difficulties in recovering the bodies. Big gators and swamps were not making things easy. \n\n\"I have to change my appearance,\" she said as she looked at the television. \n\n\"I'll go pick up the things you need later. What hair color do you want?\" \n\n\"Black, like yours. Maybe with a hint of blue in it.\" She pulled her long hair around. \"Maybe I should get this cut.\" \n\n\"That depends on how much you trust me,\" I said. \"Where I grew up in Canada, we were a long way from a barber shop. My Mom taught us all how to do hair. I'm no stylist, but I won't mess it up either.\" I could tell she wasn't too excited about the idea, but she'd do it. \"It's not like I can bring someone here to do your hair, not after your picture is on national television.\" \n\n\"I'll think about it.\" The food arrived, and we didn't say much while we ate and watched the news. There was so much interest in the case, and multiple guests discussed what had occurred. They had law enforcement experts, legal experts, and even a panel with motorcycle club members discussing the apparent \"war.\" Much of the discussion focused on the arrest of Mongo, despite his iron-clad alibi at the temporary clubhouse. Juanita had been all over television, with stacks of sworn statements from people inside the Clubhouse and outside. \n\nWe stopped eating as her press conference came on. \"It is abundantly clear that there has been a rush to judgment for my client. Intruders were seen in his house, and the police entered minutes later. The blood hadn't even dried in his garage before they were arresting him, despite him being in the Clubhouse the entire day. We won't even discuss the idiocy of not even conducting a rudimentary investigation or interview before the arrest!\" She waved the pile of affidavits at the cameras. \"He. Wasn't. Home. If he's not home, he didn't kill them. Despite all this, the Prosecutor is slow-walking his hearings, thinking they can hold him for a month or two without probable cause. This is not America. This is not Justice. THIS IS NOT RIGHT.\" \n\n\"Damn, she's good,\" I said. \n\n\"Why are they doing this,\" she asked. \n\n\"Pressure on the Club, and it looks good for them to have an arrest already,\" I said. \"In a couple of weeks when they release him after the Prosecution declines to indict him, he'll already be seen as guilty in the public eye. Plus, it keeps him from the funeral service.\" \n\n\"The Chief and the politicians didn't like the Club.\" \n\n\"So they are happy, and this gives them an excuse not to attend the service that includes their three men. I bet they're talking to the families right now, telling them to back out because the Brotherhood's war with the Sons is why their husbands are dead.\" \n\n\"Fucking bastards. The Club did nothing but protect me.\" Tears started to form in her eyes, breaking my heart. She was innocent and was carrying such guilt. \"All these people dead. If I'd died in my driveway, they would all be alive right now.\" \n\nI got off my chair and moved to her side as she sat back, the sobs coming harder. \"NO,\" I told her as I grabbed her arms and shook her gently. \"Your guilt does you no good, and dishonors those who sacrificed so much.\" She looked at me, mouth open in shock. \"You did nothing except coming home from school and escaping with your life. You weren't the cause of the bad blood, you didn't shoot any of them, and you didn't choose this. Things blew up beyond what anyone could have imagined, and many people died.\" \n\n\"I... I didn't...\" \n\n\"You didn't do a thing wrong. Bad things happen in wars. People die, but as you watch the service, remember what they died for. They didn't die because of you. They died FOR you, they died FOR their Club, because they protect their own. That is what real men do, and these were men of honor and courage.\" \n\n\"What about you? What if you die because of me?\" \n\n\"Then I die, Heather. That is the man I am; I serve as a protector and a fighter. I would rather die than explain how I let you get hurt. These men we honor today, they were protectors as well. They fought and died to save their friends, their families, and the innocent. If they had not sacrificed what they did, there would be a lot more coffins lining the front of the stage.\" I took her face in my hands and made her look in my eyes. \"The sad reality is that true evil is out there, and good people will die fighting it. None of this is your responsibility.\" \n\nI kept her face looking at me as I watched for the reality to set it. Her eyes went from sorrow to anger to determination. \"They must pay for what they have done,\" she finally said. \n\n\"They will,\" I promised. \n\n\"No, I will make them pay.\" \n\nI leaned forward, kissing her forehead. My senses picked up the slight moan and the rise in her heart rate as I came closer. I pulled her into my shoulder, taking in her scent. It didn't do anything for my wolf, but I loved it. \"You will rest and recover,\" I finally said. \"You will train and learn to fight because I will not let you risk taking your revenge until you are capable of taking them on and returning to me. Promise me you won't do anything before I say you are ready.\" \n\nShe just nodded as she cried. \"If you teach me, I will wait.\" \n\nIt was all I could ask of her. \n\nShe was tired after lunch, so I got her back in bed watching television while I went out to get supplies. At the local drugstore, I bought the hair coloring, shears, and other supplies I would need, as well as snacks and drinks for a few days. When I returned, she was asleep. I filled the fridge and put the rest of the stuff in the bathroom. \n\nI woke her fifteen minutes before the service started, and I settled her in front of me as I leaned back into the pillows. The service was well-attended, and not just by the Brotherhood. Representatives of other Clubs were recognizable by their cuts, and there was a whole section from the DEA and local Police. The Chief's edict hadn't gone down well with the rank and file, and family members filled the front row. The three police would have another service, their bodies were not here, but they were being honored; that would not be ignored. ",
        "Tripod was running the event since Mongo was still in jail. He welcomed everyone and introduced Father Pasch, who ran the annual Blessing of the Motorcycles in Orlando for the Church. He gave the opening prayer, then the doors opened, and the sounds of Harleys filled the air. One after another, Brotherhood riders towing hearses drove in one of the open garage doors before stopping in front of the stage. Each of the trailers had a coffin on it, covered with the American or the Brotherhood flag, and large photographs on each side. The audience stood silently, hands over hearts, men in uniform saluting, as they passed. I wrapped my arms around Heather as she cried with each closeup and name as they drove past the camera. \n\nThey even had a coffin for her; the caption noting it was empty, as her body had not been recovered yet. \n\nThe place was silent as the last man arrived behind the Harley and it shut down. \n\nCrankshaft, the National President of the Steel Brotherhood, came forward first. \"Today is a sad day for the Brotherhood. Today we say goodbye to twelve of our Brothers, two of our Ladies, and three brave police officers. We honor their lives and their sacrifices today, but we will not call for vengeance.\" There was a murmur among the crowd. \"Our Club is just that; a Brotherhood of riders who love the road and each other. We fight when threatened, we defend what is ours, but we do so within the bounds of the laws we all live under. Anyone who was involved in these cowardly attacks and is still alive will be turned over to Law Enforcement to face justice.\" He paused for a moment. \"And now, we will learn more about each person who was lost to us. With so many to honor, we are going in order of when they died, and one person has been chosen to eulogize each. It is my honor to introduce the President of the Orlando Steel Ladies, Three Tequila.\" \n\nShe didn't look good; she'd been crying all day. She spoke of her sister's love for her family and the Club. She told the story of her decision to become a lawyer to fight for Justice, ending up in California where she met a DEA undercover agent. \"She lived her life without regrets and loved without limits. We will all miss her.\" \n\nTripod introduced Director Frank Grimes. \"You all knew him as Sean 'Easy' Ryder, but I first met him when he was a Marine Corps Captain I was trying to recruit. Sean spent years doing dangerous undercover work before meeting his wife and changing his name. He had a distinguished career in the Drug Enforcement Agency, served his Nation honorably, and had far too short a retirement. Our lives are diminished with him gone,\" he said. \n\nShe could barely watch as Giggles, her best friend in the Club, talked about how much she missed her smile around the Clubhouse. The three police officers were each eulogized by their partners or family; then Chase got up to talk about Nate. \"Nate volunteered to help keep the Clubhouse safe with his dog,\" he said. \"He was the first person to die in the attack, shot in the head without any warning. In the short time he spent with the Brotherhood, he saw what we were about and loved it. He goes to his grave a Brother.\" He took out the Orlando Chapter Cut and walked down, draping it over his coffin. \n\nThe service took another forty minutes as the men who died trying to break out of the Clubhouse were eulogized. Tripod was just about to give his closing comments when there was a commotion from the side of the stage. The parabolic microphone on the camera caught the conversation. \"You shouldn't be here,\" Crankshaft said as he and the other Presidents onstage encircled a lone Hispanic man. \n\n\"I wish to speak, and I come in peace,\" he said. \"I am Manilo Correria, and I am here because this needs to end now. I come with the blessing of our International President. Please, let me speak. There can be no more bloodshed.\" \n\nThe cameras focused on the standoff, and the commentators were breathless as they described how a President of the Sons of Tezcatlipoca was crashing the ceremony. I saw Chase whisper in Crankshaft's ear, and a few moments later, Crankshaft escorted Manilo to the microphone. \"I apologize for the entrance. My name is Manilo Correria, President of the Los Angeles Chapter of the Sons of Tezcatlipoca. I am here to apologize to you. The people you honor today should not have died. Their deaths were the result of a grudge carried from father to son, a grudge that spanned over twenty years. My nephew Jose lost his mother in a raid based on information Agent Ryder provided. Jose had men who were going to open a new Chapter, and he used my Club to seek his own vengeance. Jose and the men who attacked your Club are dead, and with them dies the grudge. Our club did not know of this plan, and we do not condone what he did. You have our deepest sympathies. May they rest in peace.\" \n\nHeather had been stiff, barely breathing as she watched this man. \"He's lying through his teeth,\" she said. \n\n\"He's covering his ass, knowing the Feds are after them all.\" \n\nManilo walked offstage, escorted by several of the men, then sat down in the crowd. Crankshaft took to the microphone again. \"This joint ceremony is not the end of our remembrances; several of these men will be escorted back to their home Clubs or homes following the internment. The funeral for the fallen officers is tomorrow at one in the afternoon; all Members are encouraged to line the route and honor them. For the closing prayer, Pastor Paris.\" \n\nWith the final prayer, the motorcycles fired up and pulled out in a line. They stopped just outside, as all the Members mounted up for the four-mile drive to the graveyard. The funeral procession was almost a half-mile long, police on motorcycles in front and hundreds of riders surrounding them. When they arrived, the riders revved their engines three times on a signal from Crankshaft, then cut them off at the same time. \n\nThe helicopter showed the final goodbyes. Nate and his honor guard left for the airport where Chase and Rori had a plane waiting, while the men from other Chapters were escorted home for their services. \n\n\"What do you think,\" I finally asked her. She hadn't said a word in an hour. \n\n\"That man and his Club took everything from me, even my name.\" Her head turned so she could see my eyes. \"I'm going to take everything from them.\" \n\nI just nodded. \"After a cut and color,\" I said. \"We can't have anyone recognizing you.\" \n\nCh. 28 \n\nAlpha Rori's POV \n\nTemporary Orlando Clubhouse \n\nI was sitting with the other Ladies for the service as Chase sat on the podium with the other leaders. He was only there because he had to talk about Nate. \n\nWe were packed and ready to go to the airport as soon as the service and burial ended. Ron was sitting behind me as my protection; Chase knew there weren't other Packs around, but it was a sensible precaution. His protector, our new warrior Vic Knightly, was sitting near the back entrance. \n\nThe service was very emotional, and I spent most of my time comforting the other Ladies. The front row was all the immediate family, so I wasn't close enough for that, but this affected everyone. All I could think about as the service was wrapping up was the memorial wall I'd need to do for the rebuilt Clubhouse. Tripod verified my mural had burned in the fire. \n\nThe replacement would need to be much longer. \n\n\"ALERT everyone, a panther just entered.\" Vic's mental warning to us had my neck snapping up; I took a deep sniff as I looked around. There was an older man, Hispanic, and he was a big guy. He moved with a liquid grace of a panther, that was for sure. He was wearing jeans, biker boots, and a windbreaker. He got up from his spot and started to follow him towards the front. The man looked back at him and smiled. \"He knows we are here.\" \n\n\"Stay on him, I doubt he'll try anything with all these humans around,\" Chase said. \"Ron, watch her back. If anything happens, you get Rori out of here and back to the car.\" \n\n\"I'm not leaving you in a fight,\" I said with a growl. \n\n\"And I'm not risking you and our children,\" he replied. \n\nI had to relent; my wolf agreed with him. \"Fine.\" \n\nThe man got to the corner of the stage, where some of the Brotherhood stopped him. When his windbreaker came off, and his Sons of Tezcatlipoca cut was visible, the Club reacted. Chase joined the men circling him, as Vic moved to support him. \"Chase, if he starts trouble, you have to get him off-camera and out of there without shifting,\" I said. \n\n\"I don't think that will be necessary. He wants to speak at the service.\" \n\nI couldn't believe it. \"Is he the only one?\" \n\n\"Yes. I think we should let him talk. Maybe we can defuse the situation before it gets out of hand. The last thing we need is a riot on national television.\" I saw him lean towards Crankshaft; he nodded and let him pass. Chase followed him as he walked to replace Tripod at the podium, staying between Manilo and the Presidents. They had no idea what they were dealing with; Manilo didn't get to be an old man by being weak. \n\nI listened to him talk about peace, and my stomach flipped at the things he was saying. \"Do you think he means any of this?\" \n\n\"Their Club doesn't forgive or forget. If he's saying anything, it's for public consumption. He's here to divert attention and gain intelligence, and now he knows the Brotherhood has werewolves in it.\" \n\n\"It won't take long for them to track us back home,\" I said with a sigh. \"Ron, get word back to Teri. The Pack goes on lockdown immediately, full patrols. Have them run defensive drills, and inform Oxbow of the threat.\" \n\n\"On it, Alpha,\" he said. \n\nThe service ended without instance, and Vic didn't even have to make sure Manilo left without incident. Director Grimes and his team bundled him into a Suburban to talk. Most of the Ladies left with their old men, while we ended up at the back of the procession with the other cars. \n\nVic stayed with Nate's casket, volunteering since he didn't know the men. Beta Ron had gotten to know Mongo and some of the others during his visits to our Pack lands. The burials went quickly, all of them in the same area of the cemetery. I leaned into Chase's side the whole time, my grief overflowing as my friends went to their final resting places. \n\nEveryone gathered back at the bikes, saying one last goodbye as the Chapters escorted their charges back home. The visitors who were staying around were heading back to the Clubhouse, while we headed to the airport. By now, the Clubhouse was set up for the biggest wake the Club had ever seen. \n\nI had expected to be alone as we followed the hearse to the airport, but three dozen of the Brotherhood rode with us. The pilots were waiting, and his casket was carried inside and secured. The four of us settled into the leather seats, exhausted from the day. \"What do we do now,\" I asked the others. \n\n\"We go to Oxbow and bury Nate. We can warn them while we are there. We missed the run for Connie; I don't want to miss this one,\" Chase said. Pack runs were the way our wolves reinforced our unity, kind of like the way the Club rode fast in tight formation. I was looking forward to it. \n\n\"Tina understands the danger, and they are taking measures. The people in the outlying homes have been brought to your house or the other houses on the Point, closer to the safe rooms. We've doubled the patrols and have brought more cameras online, especially on the lake. Those not needed for Pack operations relocated to Oxbow Lake, and Oxbow is patrolling our outer borders for us.\" \n\n\"Good,\" I said. \"My aunt and uncle will protect them. How long do you think we have?\" \n\n\"I doubt if anything will happen before morning. It will take that long to get people assembled and get flights to Minnesota,\" Ron said. \"Less time if they send the Jaguars. Two or three of them could mess things up.\" \n\n\"That's why you use the shotguns,\" Vic said. \"Fighting big cats one on one will get people killed. Make sure no one is without a pistol, and a shotgun or rifle is nearby. Nobody goes outside in groups of less than four; any fewer is an invitation.\" \n\n\"Agreed,\" Ron said. \"We may not be able to stop an attack, but we sure as hell can be ready for it.\" \n\nI had an idea. An evil idea. \"Tell the Omegas not to clean out Heather's room. Seal all of her clothes in plastic bags and keep a bag down by the media room.\" \n\n\"Why?\" \n\n\"It's about controlling how and where the attack comes.\" I leaned the seat back as we reached cruising altitude, tucked into my mate's shoulder, and promptly fell asleep. \n\n\"Baby, we're landing,\" Chase said as he moved my head off him. I looked out the window; it was well past sunset in the frozen North. The moon reflected off Lake Superior as we made our descent into the airport. \"Who's meeting us?\" \n\n\"Teri, Brent, and Laura. Alphas Michael and Margaret, plus both Nate and Connie's parents will be there. We will spend the night there, staying the night after the Pack run.\" I was glad we were finally laying Nate to rest by his mate's side. \n\n\"Our orders, Alphas?\" \n\n\"Ron, you go home to your mate. We'll be fine at Oxbow.\" He smiled; he couldn't wait to get home to Teri, his Japanese mate. They were still in the honeymoon phase of their mating, and maybe they'd be one of the lucky ones who get pregnant early. It was easy to forget for me since I had the blessing, how tough it was for everyone else. True mates often tried for fifty, even a hundred years before a heat would take. That kind of heartbreak was something I couldn't imagine. \n\n\"My orders, Alphas?\" Vic didn't have anyone to go back to, hell, he'd barely unpacked before leaving for Florida. \n\n\"I will leave it up to you, but I think you should attend the Pack run with us. It will give you a chance to meet our neighbors, and maybe you'll find someone you are interested in.\" \n\nI laughed inside as I saw him fighting not to roll his eyes at me. \"I'm here to protect my Alphas, not to find a woman,\" he said. \n\n\"Well, you're an attractive, mature, unmated male in an area with a surplus of unmated females. I'm sure your dance card will fill up quickly,\" I teased. \n\n\"I promised my daughter I'd watch my granddaughter Gina, so Vicki and Ted can join the hunt. I'll be having a nice, quiet night.\" \n\n\"No 'Bad Grandpa' moments? Too bad,\" Chase teased. \"I bet your daughter already has someone in mind. She'll probably have her stop by to 'help out.'\" \n\n\"Thanks, Alpha. My life isn't hard enough without having to dodge the ladies?\" Wolves have a different way of looking at things; they don't date to find their mate; they date for fun until they meet their mate. Once you've known the fullness of the Mate bond, everything else seems inconsequential. I still held out hope for Vic and the older Omegas in my Pack. Choice mates did happen, and maybe he would get lucky. \n\nThe landing was smooth, and when the door opened, the four of us moved the casket to the door and handed him off to the waiting wolves. We stood respectfully at the bottom of the stairs as he was moved to the hearse. When the door closed, Margaret turned and hugged me, then hugged my mate. \"We watched the service, and your words were perfect,\" she told him. \"Thank you.\" \n\nRon went back with Teri, and we hitched a ride with the Alphas. We followed the hearse directly to the Pack cemetery, where the Oxbow Lake Pack and friends were waiting. Connie's grave was next to the hole that Nate was lowered into. I held Chase's hand as we filed past, taking a handful of earth and tossing it down. \"Your sacrifices will not be forgotten, my friends,\" I whispered as the dirt hit the top of his casket. \n\nThe Pack gathered back at their Pack House, where clothes were pulled of before we all shifted into our wolves. \"No argument from your wolf?\" \n\n\"No, dammit. Still too early to know.\" I shook out my rust-colored fur and rubbed against his body. Despite being a more dominant wolf, his Alpha genes and male sex meant he was much larger than me. Michael howled to gather the Pack, and we moved near to him. As family and guest Alphas, we would run just behind them. The rest of the Pack gathered in the clearing, and we all took off down the trail. \n\nThe moon and the clear sky made it easy to see the trail. We ran a few miles west, deep into the woods that formed their territory, when he picked up the scent. \"I love the smell of fast food,\" I said to my mate. \n\n\"Smells like three bucks and ten does,\" Chase said. \"Good thing since these Minnesota deer are so tiny.\" He grew up hunting mule deer, not the whitetails we had here. We didn't have the Pack bond, so we followed the Alphas as they split the hunters into three groups. The deer were quickly surrounded and bolted, right for us. \n\n\"It's their land, let them take down their deer,\" Chase told me. We helped to herd them until Michael took down the largest buck, then the other hunters took theirs too. The Alpha's huge wolf sat back and howled, the Pack joining him. \n\nSome of the Pack members were carrying knives and ropes, and it was minutes until the deer were field-dressed. Wolves took huge sections in their jaws and started to run back home; our wolf nature doesn't mind raw meat, but it's better fire-roasted and seasoned. Chase grabbed a rear quarter, and I led him back. Two hours later, our bellies stuffed, we fell asleep together. \n\n\"ALPHAS, WE ARE UNDER ATTACK,\" Coral sent to us. I jumped out of bed, catching the time. It was six in the morning, still well before sunrise, and we were miles from home. \n\nCh. 29 \n\nBeta Coral's POV \n\nArrowhead Pack \n\nPrevious afternoon  \n\nTeri sent the warning over the Pack link as soon as she read Beta Ron's warning. \"The Sons sent a panther to the memorial service, and he has scented our Alphas. We are to go into lockdown immediately and watch for the attack .\" \n\nThe Pack responded quickly per the defense drills we practiced at least monthly. I was with the babies in Rori's home, feeding Hope while one of the Omegas bottle-fed Cheryl. Her guards were at their side immediately, Tom pulling her to her feet. The female warrior, Meghan, grabbed Mark from the crib as we headed for the stairs to the basement safe room. \"Where to, Beta,\" Meghan asked. \n\nI verified there was no attack in progress with our security center first. The duty warrior reported no alarms and cameras were clear, so I ordered everyone to the main safe room under the Pack House. It was simpler for the warriors to protect one location, and that room was well stocked and prepared. The safe rooms in homes were for no-notice attacks where we didn't have time to use the tunnels. \"Security control, notify Oxbow Lake of the threat and that we are going into lockdown.\" Oxbow didn't border us, but they were family and close allies. \n\nWe passed through the theater, the safe room in the basement of the Alpha house, and into the tunnel leading up to the Pack House. They had been a lot of work to install, but they were a big advantage to our defense. They allowed us to move people out of sight between buildings safely and quickly. \n\nWe had to wait to pass into the main safe room, and I handed Hope off to the Omegas in charge of the nursery. People were still streaming in from the other homes. I went to a board where the Pack Roster was displayed and moved the magnets for the babies and their guards to the Safe Room column. I moved mine to Outside. Keith joined me with the warriors outside the door to the safe room. \"Get a count and keep everyone except warriors in there setting up,\" I told Beta Roadkill. Since he and Possum were human, they were in charge of the people in there. \"If the count isn't complete within the next two minutes I'll have us doing drills every day until it is.\" ",
        "One minute and fifty seconds later, Roadkill reported the count was complete. Roadkill was a Beta even as a human, so he and Possum were in charge of the safe rooms. \n\n\"Attention everyone,\" I said out loud for the human's benefit. \"The threat the Pack is under Is grave, but the timing is uncertain. We do know that the Sons of Tezcatlipoca, a violent motorcycle gang whose leadership are all jaguar shifters, know of us now. Our warriors killed some of their men, and we are protecting a woman who they want dead. Because of these threats, we will be remaining in Security Condition Yellow until further notice.\" Yellow was the second-highest state of readiness, with Red being an attack in progress. \n\nThere was murmuring among the Pack with the news. \"The rules for condition Yellow are simple. Unless you are part of an armed security group, you are to remain in the safe room or be able to reach the safe room in sixty seconds. The Pack House entrances will be closed and barricaded. Also, everyone not on duty will remain in the room between 2000 and 0600; the doors will only open for shift change. If you need anything from outside the Pack House, let Security Control know, and they will get it when able.\" \n\nMy mate Keith picked it up. \"A jaguar threat is something no one here has dealt with before, so this is what we know. Jaguar shifters are the size of lions, with excellent night vision and smell. They fight with teeth and claws equally and are too much to take on alone. We prefer to fight them as humans, with scoped hunting rifles at long range, or shotgun slugs up close. Our AR-15's don't have enough power to kill them without a lucky shot. Every qualified person outside the safe room will be issued a Glock .45, holster, and extra magazine. I pray it doesn't get to that.\" There were nervous chuckles. \"They are ambush predators who can climb and leap, so for Luna's sake, look up.\" \n\n\"How do you fight them as wolves?\" \n\n\"No one goes out in groups of less than four. Surround it, work together, and try to take out the hamstrings. If it runs, even better since they don't have our stamina. If you can tree it, call for help and remember they can leap between trees.\" \n\nI looked everyone over; I was in charge of Pack defense and the de facto Alpha with Chase, Rori and Ron gone. \"The Pack roster board is to be kept updated. All warriors meet in the gym after this breaks up. Any questions?\" \n\n\"How are we handling meals,\" an Omega asked. \n\n\"The kitchen is within 60 seconds so it can be used, but think about what you can do down here. It could be a while before a grocery run, so use perishables first. Bring things for sandwiches and the like into this kitchen. Prepare menus and get Beta Possum's approval tonight.\" \n\n\"What about Heather and Greg? They need to know they can't come back.\" \n\n\"They know that already,\" I replied. \"I will make sure all those outside link range understand the situation.\" I would call Charlie and Bonnie; they could decide if it was wise to move Heather again. \n\nThe meeting ended as they got to work organizing for the extended stay. I took the warriors into the gym, keeping the link open for the ones working. \"Teams A and B, you'll be securing the homes. Get everything locked up and alarmed, and check with the residents to see if they have urgent needs. Close and padlock the tunnel doors to the outlying houses from both sides.\" Every member kept clothes and supplies in a safe room locker, so there shouldn't be much to pick up. The tunnel system was segmented in case of a breach, the doors giving us more time. \"Teams C and D will be on outside patrol. Start at the homes and work out to the border. Double-check the gate and cameras at the entrance road.\" \n\n\"Beta Coral, Oxbow offered to take over border patrol for us. They will have the first pair here in two hours, and keep two out 24/7.\" \n\n\"Pass along my thanks; make sure they know to report and avoid, two isn't enough without help.\" \n\n\"Yes, Beta.\" \n\n\"Team E will take over Security Control and Pack House stations. Once initial rounds are done, C takes outside patrol, D inside, rest is reserve and resting. Swap every three hours. Keith and I will alternate command shifts in Security. Any questions?\" \n\n\"Beta, half of my team is apprentice warriors. Shouldn't we leave them in the house and form patrols with qualified wolves?\" \n\n\"This could go on for weeks. Get them the experience; all can shoot, and fighting in wolf form is a last resort.\" They left, and I went to Control. \"Still quiet?\" \n\n\"Yes, Beta. Those cameras out on the ice fishing houses were a great idea; it extended our detection capability on the lake.\" We'd installed WiFi cameras, with night vision and motion detection, on ice houses we owned, since the lake was the weak spot in our defense. I watched until Keith took over at dinner time and all was quiet. \n\nRori's suggestion came in as the patrols headed out; it was a great idea. I had warriors go to the Alpha's house and carry Heather's dirty clothes and bedding through the garage and down to the safe room, rubbing her scent onto the walls and handrails. The Omegas cleaned her bedroom and her room at Possum's house to knock down those scents. I left two volunteer Omegas and the sealed bag in the Alpha's safe room with instructions. They were to stay there, every 12 hours reapplying the scent, and keep the door to the tunnels open. \n\nI slept as much as I could from dinner on, while our Alphas and Vic traveled to Oxbow. Keith had it handled; he kept reminding me every time I would ask. The Alphas were coming back from the hunt when I took over the midnight-to-six watch from him. \n\nCoffee is my friend until three AM, then I have to stop, or I won't get sleep after breakfast. That meant I was dragging by five-fifty-five as the day team finished eating early breakfast. The cameras were still quiet, and sunrise was over an hour away. \n\nThe alarm system beeped, and the camera with the motion alarm came up on the big screen. Two shapes, moving quickly across the ice. As they got closer to the ice house, I got a good view. Big cats, running fast with bags in their jaws. \"WE'RE UNDER ATTACK,\" I blasted over the Pack link. \"Three panthers, 200 yards out on the lake and coming fast. Execute the false trail plan.\" \n\nThe Pack House came alive as all available warriors went to set 'repel boarders' and guard all entrance points. Footsteps tumbled through the house as people raced back to the safe room. The panthers slowed for a stealthy approach, seeing some lights on in the early morning. The safe room was closed and locked before they touched dry land, all except the door from the tunnels. Six armed warriors guarded that. \n\nThe cats stayed in the shadows until they caught Harleigh/Heather's scent by the side door to the garage. They shifted, pulling on clothes and shoes, then picking up what looked like H&amp;K machine pistols. \"Entering via Alpha house garage, all three armed with sub-machine guns,\" I sent. \n\n\"Scent trail-ready and I'm at the door,\" Linda said. One of our fastest wolves, the Omega had the open clothes bag in her teeth just inside the tunnel. Mackenzie, another Omega, had covered her scent with popcorn butter and was hiding in the safe room. \n\nThe Alpha house cameras showed them breaking in and entering the kitchen through the attached mud room. They stopped at the stairway, the lead male scenting upstairs before leading the two females downstairs. They followed the trail into the safe room. Linda was closing the door, and the male grabbed it when it was nearly there. She shifted and sprinted for the Pack House with her clothes bundle as the panthers strained to get it open again. \n\nThe three got in the tunnel just as Linda burst through into the safe room. Six men shoved the door closed and latched it; it would take explosives to get through now. The male pounded on the door in frustration, and then they heard the door behind them close. \n\nMackenzie had emerged from her hiding space when they entered through the door and latched it closed. The tunnel complex section was now sealed with electronic and mechanical locks, trapping them like mice. \n\nI watched in amusement as they ran back and forth, looking for an escape and finding none. When they stood together outside the Pack House vault door, I got on the microphone as I watched them on camera. \"Bad kitties,\" I teased. \"Who are you, and why are you here?\" \n\nThe man turned to the camera above the door and glared at me. \"We are here to take the human girl, Harleigh Ryder. Turn her over, and the Sons will not kill you for your Pack's part in the death of Jose and his men.\" \n\n\"Can't do that, Spots. Harleigh is under our Alpha's protection. You could have left her alone; she wasn't even born when Jesus lost his wife. Haven't enough died already? Manilo was correct in saying that peace is the best option now.\" \n\n\"My mate will stain the snow with your blood if I am not released,\" one female threatened. \n\n\"Ah, Mrs. Manilo. He must not think much of your life if he sent you here to die. We've been expecting you since yesterday afternoon. Any last words for your husband? Jose can't be the only one who records the demise of his enemies.\" \n\nThe male stared me down. \"It will be an open war on your Pack if we die.\" \n\nI just laughed into the microphone. \"It was war as soon as your front paw crossed into our territory.\" Setting the microphone down, I turned to the warrior at the panel. \"Arm the flooding valve,\" I said. \n\nI touched the button on the microphone one last time. \"I hear jaguars like to swim. Let's see.\" I ordered him to turn the switch, and a ten-inch valve stroked open on the bottom of the pool. Water rushed in through a pipe behind them, rushing down to fill the tunnel below. If they acted quickly, they might get through a door, but they didn't. They cursed and pounded as the water rose inexorably towards them. They even fired a burst of 9mm into it before realizing gunfire in a narrow tunnel didn't work well. \n\n\"Not very sporting, is it, Beta?\" \n\n\"Sneak attacks aren't very sporting either,\" I responded. The water kept rising as the male shifted, his claws scraping at the steel door to no effect. They gasped at the remaining air, which vented outside through a six-inch ventilation duct surrounded by a foot of concrete. \n\nThe camera went underwater, and I forced myself to watch as they drowned. They chose to come here and hurt my family; death was the required response. \"Good job, everyone. Linda and Mackenzie, you two were perfect. The attack is over, but our world just got much more dangerous,\" I said. \n\n\"I fear we have awakened a sleeping giant and filled him with a terrible resolve,\" Keith responded. \n\n\"You protected the Pack well, and your Alphas are proud of you. This is bigger than just our Pack now. Our Council will have to get involved now.\" \n\nThank Luna it wasn't the same Council as before Rori ascended to Alpha. This one might help. \n\nCh. 30 \n\nGreg's POV \n\nDuluth Hotel \n\nHeather was a wreck after watching the service. \n\nShe couldn't stop crying, so eventually, we ended up in the bed, her body clinging to mine as her tears soaked the shoulder of my T-shirt. She finally fell asleep about four in the afternoon, leaving me to my thoughts. The first and foremost was how good she felt against me. \n\nI'm no blushing virgin; I grew up in a remote Pack with long winters and a few people my age. The Banff Pack was larger than Arrowhead with few young, no one within two years of me. There were about fifty unmated adults, more men than women, and the women's lusts were wolf-driven like the men. I didn't have a girlfriend since we were all hoping for our mates, but we swapped partners at will. When I turned eighteen, the single ladies eagerly taught me how to be an attentive lover. \n\nThe only time the parties would pause would be when we were visiting or being visited by another Pack. Things tended to go downhill quickly if a male found your seed inside your new mate. To prevent conflict, the Alphas ordered a 72-hour cooling off period. \n\nWhen the other wolves came in, and we didn't find our mates again, the hookups with newly arrived partners could be explosive. Drunken orgies in the hot tubs and Warrior quarters were common, as were fights and bets. It was a fun time, unlike now. I'd been without relief for longer than 72 hours, and Heather could tempt the devil himself. I didn't find my mate when I arrived, and Beta Coral warned me about playing their field. Arrowhead had a lot of females still struggling after being in horrible situations. \n\nWhich brought me back to my current predicament; lying in shorts and shirt under a tented sheet held high by an erection that wouldn't go down. I tried math problems, distracting myself with news or sports, but nothing worked. I'd feel her toned leg draped over mine, or the press of those unbound tits through the thin shirt, or the way her mouth twitched in sleep, and I was rock hard again. \n\nMy real problem was that I was falling in love with her. She was smart, tough, beautiful, and loyal. All the things I dreamed of finding with my mate, she had in spades. The only thing she didn't have was a wolf. \n\nI couldn't fall in love with her, and I couldn't let her fall for me. It would end badly. I had a job to do. \n\nThen her hand slipped down my body. The tent was pulling the waistband away, allowing her hand to slide inside. I froze; I was barely holding myself back from pulling her shorts down and taking her already. If she started to play with my cock, even in sleep, I might wake her up and do that. \n\n\"Greg, we got word from Beta Coral that the Sons of Tezcatlipoca know we were in the Orlando mess. They are going into lockdown.\" \n\nI was relieved to be called in bed with a woman for the first time in my life. \"I figured that when I saw the Alpha next to Manilo before he spoke, Charles.\" \n\n\"They left it up to us to decide if we need to move. The Alphas are going to Oxbow Lake when they return tonight.\" \n\nI thought about it; the hotel we were in was among the humans but surrounded by water, off the usual travel routes. \"You said you liked this from a defense standpoint. Do you still feel that way?\" \n\n\"Yes, it's easy to patrol.\" \n\n\"Let's stay for now. The room works well for Heather, and we don't risk her being recognized so soon after the service. She wouldn't be comfortable with a long drive, either. We should have plans ready. Look for suitable places within one, four, and twelve hours driving and check availability. I'll do the same.\" \n\n\"No problem, Greg. Hey, I'm picking up barbecue tonight, do you want me to bring some to you? I can play the delivery guy.\" \n\n\"Sure. A meat sampler for four with a few sauces and sides. Get extra cornbread and pecan pie, too. The room has a fridge if I don't eat it all.\" She shifted, moving until she was on her back. \"Can you wait a few hours? Heather was upset after watching the service, and I just got her to sleep.\" \n\n\"I bet. She's been through so much; I'm surprised she's still functioning.\" \n\n\"Heather is strong inside,\" I said as my hand moved to hers, holding it gently. \"She wants to learn to fight so she can take them on.\" \n\n\"Teach her to survive first.\" \n\n\"I will.\" I sat up and turned the cable news up a little. The panel of experts was discussing the surprise appearance of President Manilo at the memorial, and whether he was truthful in saying it was all the fault of a rogue chapter. \n\n\"Of course he's going to say that,\" a former Federal Prosecutor said. \"What else can he say to limit the damage? The Task Force and the State of Florida are going to fall on this club like a ton of bricks. They will raid, seize, arrest, and flip people until the whole gang is broken up. I'm sure they are already working on RICO charges; once they prove the gang is an ongoing criminal conspiracy, they will take them all out.\" \n\n\"What about the Steel Brotherhood? Will they get the same,\" the host asked. \n\n\"They are claiming to be a law-abiding club, and I haven't seen anything contrary to that yet. If they are just victims, they will cooperate. I know the Orlando Police Chief has been outspoken about wanting them out, so the truth will come out. If they have nothing to hide, they'll be fine.\" \n\nA defense lawyer laughed at that. \"Have we learned nothing from the Special Counsel investigations? This task force is going to crawl up their collective butts and pull out a microscope. They'll charge low-level people to flip on others, figuring eventually they get the big fish. It rarely works that way in real life. They will destroy dozens of lives and ruin the club, and come out with nothing.\" \n\n\"Exactly,\" a talk show host said. \"The Brotherhood had a family tortured and killed; the daughter shot then kidnapped and killed by these animals. The dead Sons got what was coming to them. We should be buying them drinks, not arresting them. What happened to the Chapter President, Mongo, is a travesty.\" \n\n\"He has eleven bodies in his garage, you can't ignore that,\" the prosecutor countered. \n\n\"You can't be bothered to investigate it in Orlando. They go from a robbery in progress call to arresting Mongo in less than an hour, while he was with dozens of witnesses. They were taking crime scene photos at the same time as his mug shot!\" \n\n\"If I were the District Attorney I would not indict,\" the defense lawyer said. \"His lawyer is already writing up the lawsuit for false arrest. I'll bet you a coke that he's released in an hour,\" he said. \n\n\"I'll take that action,\" the prosecutor said. \"Today's hearing is not evidentiary, and it is capital murder with multiple counts. The judge can't let him walk, and the formal indictment can wait up to 59 more days.\" \n\n\"Great lead-in, because we have just received word that the Attorney General of Florida is declining to indict. Mr. Lane is being processed for release now.\" \n\nThe defense lawyer slapped his hand down. \"I prefer bottles,\" he teased. \n\nAn hour later, I saw why. Security cameras on a neighboring house had caught images of men heading to the house two doors down. \n\nOne was Manilo Correria. \n\nAs the tape ran, Sons were seen walking by in the company of a thin white male, who would walk back alone and fetch the next guy. The station inset photos of the dead men as they walked past, then we saw Manilo returned the way he came. \n\nJust like I thought, it was a setup. \n\nWhy would the Sons kill their own? \n\nTo protect Manilo and the rest of the club. Only with the known attackers dead could the cases be closed, and the Club deny their involvement. \n\nHeather woke slowly, her back arching and pushing her breasts out towards me. Goddess, she was built for sin. \"Feel better?\" \n\nI helped her sit up. \"Yes. I'm sorry, Greg.\" \n\n\"For what?\" \n\n\"You're a great guy, and I'm sure you'd rather be doing something other than babysitting a bawling freshman girl.\" \n\n\"So you think I'm a great guy?\" I gave her a puppy dog look, and she laughed. \"I love hearing that sound.\" \n\n\"Help me up.\" \n\nShe used the bathroom, and I helped her back to the table. \"Good news, Mongo is being released without charges.\" \n\nShe looked at me, then the television. \"It was Manilo?\" \n\n\"Yep. Caught on a neighbor's security cam after a cursory investigation.\" \n\n\"Thank God. Three Tequila had enough going on.\" \n\n\"He should make it back to the clubhouse for the wake.\" There was a knock on the door. \"I didn't want to wake you, but I knew you'd be hungry.\" I grabbed a fifty and a ten out of my wallet, then kept the Glock behind my back as I opened the door. I kept my body in the way, so she didn't see Charles. \"Thanks, keep the change.\" ",
        "\"That smells amazing,\" she said as I set the round tray and a bag down. \n\nI set the table, then opened up the food. \"Did you get enough? I'm not some salad and a Diet Coke chick, you know.\" \n\nThe tray had a pound of brisket, pulled pork, a rack of ribs, and a whole chicken plus beans, coleslaw and cornbread. \"Pace yourself; there's pecan pie for dessert.\" \n\n\"With ice cream?\" I shook my head, no. \"Sooo close to getting into my pants with all this, and he can't stick the landing.\" \n\nI just about choked on a piece of brisket dipped in hot and smoky barbecue sauce. \"I'll know better next time,\" I finally replied. \n\nOver dinner, we talked about what had happened today and what it meant for us. \"Manilo is still at large, and he knows Chase and Rori are with the Brotherhood. If they don't believe the Feds have you, and they didn't kill you, it makes sense you might be hiding in Minnesota. You're still in danger, and still presumed dead.\" \n\nShe thought as she ate, which was another trait I loved. She was measured, not blabbing incessantly. \"You should do my hair. A hotel worker might see me.\" \n\n\"Later.\" We'd made a good dent in the food by the time we'd discussed the Brotherhood, her upbringing with a DEA Dad and prosecutor Mom, and being the niece of the Club President. \"You must have had boys lining up to date you in that clubhouse,\" I said. \n\nShe roared with laughter. \"Are you kidding? I could have ridden my Harley naked through the clubhouse, and no one would have touched me. You don't know biker culture, do you.\" I shook my head, no. \"Women in most Clubs can't be members. You only get in by being family, a member's Old Lady, or you are there to fuck. My Club doesn't have sweetbutts or club pass-around whores like others, but there's a lot of women attracted to the bikers. Those men get more ass than an airport toilet seat.\" \n\n\"Family members are different?\" \n\n\"Hell yes. Since I'm a Club princess, the whole Club watches out for me. One visiting biker grabbed my ass as I walked by last year, and he didn't wake up until the next day.\" She grabbed the last rib, smirking as I tried to grab it from her. \"If you wanted to date me, you had to get permission from my Dad and Mongo. Permission usually comes after a beating, and a warning involving dismemberment or death. No biker ever got that far; there's a prospect who I know wants to, but he can't until he's a patched member.\" \n\nIt was quite the cock block. \"What about dating me? I'm not in the club.\" \n\nShe just smiled at me like I was an idiot. \"Oh, then they just cut your dick off and dump you in the swamp,\" she said sweetly. \"Pie, please?\" \n\nI handed it over. This girl would be the death of me. \n\nAnd I was seriously considering ordering ice cream from room service."
    ],
    "authorname": "partwolf",
    "tags": [
        "biker",
        "gang",
        "jaguar",
        "pack",
        "panther",
        "romance",
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/buried-treasure-ch-26-30"
}