{
    "title": "The First Deadly Sin",
    "pages": [
        "From time-to-time, people have asked me to continue one of my characters. This story satisfies the most frequent requests. \n\nAlmost from the day I posted it, readers have asked me to tell the story of the little boy in \"A Totally Unromantic Love Story.\" Not too far behind, are the folks wanting me to do something about the two people in \"The Long Goodbye.\" I couldn't come up with a good story-line until Rick at rkv330, bailed me out. He's done that an embarrassing number of times. Then, when I bogged down again, E. W. Orc asked me to relate a few fond memories from my days in Sodom-and-Gomorrah-upon-the-Potomac. \n\nPeople who have already read this have told me that they think I am making stuff up. All I can say is - believe it... There is nothing in this, from the Bumblehive to botnets, that is fictional. None of the operations, or agencies, their mission, or gear are a figment of my imagination. They all operate exactly as I describe them and are doing it as you read this. As usual, I would like to thank Randi and Pixel for their usual amazing editing work. It's a humbling experience getting stuff back from those two.\n\n*****\n\nTHE FIRST DEADLY SIN\n\nThe man was sitting in an English garden, replete with flowers bees and tomato plants, but it wasn't in Devon, or Kent. It was on top of London's Ham Yard Hotel, not two minutes from the insane comings-and-goings of Piccadilly Circus.\n\nHe was an extremely handsome guy; stalwart, chiseled features, five eleven and a solid one-ninety, fit and trim, thick forearms, all-reflexes, like a western gunfighter. His blond hair was cut into a high-and-tight, which implied a military background. His eyes were bright blue. They belonged to a fellow who could overcome challenges. \n\nThose eyes turned loving, as a dusky woman sat down opposite him. She was the man's equal in extraordinary appearance. She was perhaps five-two with a wealth of dark brown hair framing a beautiful oval face, huge brown eyes, a slim nose and a full sensual mouth. \n\nThe rest of her was a Sultan's delight, voluptuous and erotic. The subtle hint of her perfume preceded her. It evoked images of a-hundred-and-one nights of carnal pleasure. Her eyes sparkled with humor and warmth. She extended both arms as she sat. It was an affectionate gesture. They held each other's hands, looking deeply into each other's eyes. Their love for each other was unmistakable.\n\nThe tender scene was captured by a big dragon fly, which was hovering next to a hollyhock. Except it wasn't an insect. It was a PD 100 Black Hornet micro-bot. It was easy to make the mistake. The miniature drone was painted to look exactly like a dragon fly. \n\nThe handler had released it from his palm as he stepped onto the terrace. The HD video was transmitted to a digital repeater in the handler's pocket. From there, it streamed to a satellite and down to an obscure little building in Beltsville, Maryland. That building housed the Special Collection Service. \n\nThe Special Collection Service is a joint CIA-NSA black-budget operation. It is never a good thing to be caught doing clandestine surveillance, particularly if you are in a friendly country, or even France for that matter. It tends to create hard feelings among the natives. It doesn't mean that we don't do it. It just means that we do it covertly. So, the SCS uses \"Mission Impossible\" stuff; and the dragonfly drone and various other bird and insect bug-bots are their stock in trade. \n\n~\n\nI joined the Guard after I got out of the Army. It seemed like a safe commitment. My wife, Pia, thought that a weekend a month and a couple of weeks a year was good for me. She told me that playing soldier made me less aggressive. \n\nShe was right, of course. I AM a little over-aggressive. That's why I spend so much time hitting the weights. It's a lot more constructive than hitting other people. That thought reminded me of Pia's brutal murder. The man who had seduced and killed her was in the ground too. \n\nHis spinal injury made him a helpless cripple. So, he killed himself. His death saddened me. I had hoped that he would live a long and excruciatingly painful life, but the sniveling coward was too weak to deal with reality. I had caused that injury. It was the least I could do for my murdered wife. \n\nAfter I settled that debt, I went back to lonely ten-hour days. We contract with the Feds to do local sniffing. The question might be asked, \"Why would the National Counter Terrorism Center, hire clandestine agents to watch the people of the Windy City?\" It's because, Cook County might have more potential home-grown jihadists than a few Middle Eastern countries. \n\nThose people aren't unhappy Brothas either. They are typically over-entitled, rich-kids; eager to shirk adult responsibility. Most are posers. They're just doing it to impress their friends; and horrify their folks. But a few are too stupid to see the big picture. They're the ones we keep an eye on. \n\nI was sipping my morning coffee when a wealth of copper curls and a gorgeous pair of green eyes peeked around the door. I heard a husky female voice say, \"What kind of mood are you in boss?\" \n\nI laughed and said, \"I haven't killed anybody ... yet!! What can I do for you Kelly?\"\n\nMy partner takes getting used to. Kelly is arguably the hottest Celtic woman in captivity; at least, since the lifestyle caught up with Lindsay Lohan. She is five-foot seven and a hundred and twenty-five pounds of gorgeous Irish female. \n\nHer bountiful hair is the color of copper. Her huge cat eyes are deep emerald and loaded with tons of Irish mischief. Her nose is narrow and long and her full mouth is downright lascivious. She also puts new meaning to the term \"brick-shit-house.\"\n\nKelly is the second toughest and most ruthless person I know; moi being numero-uno. She can steal your secrets, or kick your ass. She can seduce a marble statue. She can drive a nail with her little Barretta nano; which she keeps in a pancake holster, located just above the crack in her delicious round ass. She is whip-smart, street-clever, totally fearless and unquestionably loyal. \n\nWe are perfect together. We think alike and we have the deepest mutual respect. I know she loves me, but we will never get together in a romantic way. \n\nWhy would I NOT want to fuck Miss Kelly McMahan? She might be the most sensuous female agent since the French shot Mata Hari. It's because I don't want to mess-up what we have. And a sexual element would complicate things infinitely. \n\nI discovered that while we were investigating Pia's murder. \n\nPia's killer's DNA was a critical piece of evidence. If I didn't get it, the perp would skate. The problem was that he wouldn't give it up voluntarily. I COULD get it by brute force; which was my preferred method anyhow. But, knocking him out would warn him that I was coming. And I knew he'd scamper down a rat hole. So, I was stuck. \n\nKelly got it for me, except she did it by fucking the suspect. I should have known that she would do something like that. She saw how much I needed the sample, and it was just sex to her. \n\nBut, the thought of Kelly with that slime-ball's cock in her drove me into green-eyed paroxysms. I was astonished to find that I was even angrier than when I discovered that my loving wife was fucking the same douchebag. \n\nIt made me realize how deeply in love I was with Miss Kelly McMahan. \n\nI'm a player. I'm always on top of the situation, nobody gets a clean shot, but Kelly knocked me out with one punch. And, the amount of hurt that she laid on me made her an existential threat. \n\nSo, I did the only thing I could. I closed her off completely.\n\nBefore I met Pia, I thought that everybody was out to screw me. I knew that Pia was the one person I could trust. She had every admirable trait, warm. loving, nurturing and smart. But she had one weakness. She loved to fuck. Her boss took advantage of that. \n\nPia's betrayal was hard to take, even for a thug like me. So, I wasn't going to make the same mistake twice. Instead, Kelly and I have the most sympatico bond that two partners can have. I've never had a friend, man, or woman, who I have EVER felt closer to than Kelly. \n\nThat includes my former wife. Pia was a warm and loving woman, too loving as the case turned out. But Pia didn't come close to Kelly's status as a life-partner. Kelly is me, and I am her.\n\nKelly gets horny when she has a new case. It's especially true if there might be danger and violence involved. That's her version of foreplay. I wondered what had prompted her present state. \n\nShe sauntered the rest of the way into the room. I said resignedly, \"Okay, what are we doing now?\" \n\nShe gave me her cat-that-ate-the-canary smirk and said, \"How would you like an all-expense-paid trip to Europe?\"\n\nI said, \"There's no such thing as free. What's the catch?\"\n\nShe turned to close the door. She was wearing yoga pants, for God's sake!! Her butt was so perfectly round and full that you could bounce quarters off it. It's times like these that test my resolve. There isn't a man born, whom Kelly can't get a rise out of, especially when she is in one of THOSE moods. \n\nShe walked over and sat, crossing her legs in a way that drives me nuts. Naturally, she knows that. She said, \"Frank at the NCTC called.\" \n\nFrank was our Program Administrator. I said, \"What does he want?\" \n\nShe said, \"He wants us to come to DC to talk. He said it had to be there, not here.\" \n\nI said, \"I wonder what's so red-hot pressing?\"\n\nKelly got that familiar larcenous gleam in her eye, it's a look I love. She said, \"I'll bet that there's a pot of gold at the end of THAT rainbow. I'll make the arrangements.\" \n\n*****\n\nBill Hughes Junior had led a privileged life. His dad, Bill Senior, owned a big beltway consulting firm. His mother Maddie, was a lawyer and very rich in her own right. \n\nMaddie was actually Billy's step-mom. But she was his center of gravity and guiding star. Her wisdom and intelligence were the virtues that inspired him to excellence. \n\nThe strength of her love had given Billy the confidence to excel at the Academy. After that, he had gone through the advanced-strike pipeline, at NAS Pensacola. When he graduated, he had flown carrier missions all over the Gulf. \n\nBilly was renowned as a \"hot stick.\" That got him an offer to join the Navy's Flight Demonstration Team, better known as the Blue Angels. \n\nHe met Suzy at a Make-a-Wish event. The Blue Angels, leverage Navy PR. Part of that is the one-on-one contact with the public, so Billy and the Team's slot guy were sitting at a table signing pictures. The PR people had carefully posed them in front of an F/A 18A, with its spectacular blue and yellow paint job. \n\nBilly looked up into the hottest cornflower blue eyes imaginable. They mingled little girl innocence with carnal knowledge. She was smiling shyly while proffering the eight-by-ten glossy of him standing in front of his aircraft. He had to admit that he DID look like a knight in shining armor. \n\nHe gave her his most welcoming smile. Every member of the public got that smile. But this one was especially welcoming. That was because Suzy Marshall was a sight to behold.\n\nHer flawless, heart shaped face was framed by a wealth of natural blond hair, tied back in a single long pony tail. Her features were perfect; button nose, huge round eyes and a mouth that was so sensual it screamed, \"kiss me.\" She was wearing one of those off the shoulder tops that all the country-girls sport. The mounds of her big, round, firm breasts peeked above the elastic. \n\nFor a change, it was Billy who was flustered. He dropped the pen. Before he could move, she bent down and retrieved it. That didn't help things, since her perfect apple ass stretched her jeans even tighter. He just stood there looking at her. She looked at him expectantly. The people waiting in line started to get restless. He hastily signed. She said, \"Thank you,\" and moved past him. \n\nThe slot guy said appreciatively, \"Man, I would love a piece of THAT!!\" \n\nLater that day, Billy was standing in the Make-a-Wish reception. It was August, so he was wearing his Summer Service Whites, which everybody calls the \"Milkman.\" He had the shoulder boards of a Lieutenant Commander and the gold wings of a Naval Aviator. \n\nThe \"V\" on his Air Medal designated his combat service and the 68 strike/flight numbers detailed it. The Distinguished Flying Cross with two silver stars indicated that some of that combat was down-on-the-deck in close support of Marine operations. \n\nBilly didn't drink much. You need to have split second reflexes to fly an F/A-18; at least, in the way that it's supposed to be flown, so Billy kept himself in perfect shape. Self-discipline was natural for him. His mother expected it. \n\nHe knew that his mother loved him beyond her other children. It was odd really. Billy was three years old when Maddie Wilson came into his life. Billy had never known his birth mother, nor did he want to. There were only two women in his life. They were, his unparalleled mom and his even more incomparable sister Chelsea. \n\nMaddie Hughes raised extraordinary children. Bill's younger sister, Chelsea, exceeded her mother's extravagant beauty. She should have been the family's stunning crown jewel, perfect debutante and conspicuous social asset. But she was a genius. \n\nSo, instead of \"marrying well\" and merging into white glove society, Chelsea disappeared into the darkweb. Nobody knew what she was doing, but the rumor was that she was an elite, super-hacker. \n\nChelsea idolized Billy, so he was the only family member with whom she regularly communicated. He knew that she was married to an enigmatic older guy and living on the Island of St Lucia. What they did for a living was anybody's guess. But whatever it was, had brought them very-big-money.\n\nBilly had sufficiently \"showed the flag.\" He was about to leave, when he felt a tentative tap on his arm. He turned questioningly; the only thing lacking was the halo and the heavenly choir. If there is such a thing as kismet, it appeared when Billy Hughes locked eyes with Miss Suzy Marshall.\n\nInstead of a casual top and painted on jeans, this version of Suzy Marshall was dressed to kill. She was average height for a woman, perhaps five-five, but the brushed gold Herve Leger Iman dress made her look like five feet of shapely leg. \n\nOf course, the rest of Suzy was awe inspiring. The dress was held up by a tapered strap that left her shoulders bare down to the big round mounds of her impressive boobs. It accentuated her long waist and amazing bubble-butt. Billy was enthralled.\n\nSuzy said, \"I wanted to thank you again for signing the picture.\" The look in her eye said she wanted to do a lot more than just thank him. He stammered some sort of inane reply and stood there gaping at her beauty. \n\nThere was an uncomfortable moment. She finally said, \"My Daddy is sponsoring this event. Would you like to meet him?\" So, she was rich too!!\n\nBilly nodded mute assent and she gently took his arm and led him over to the circle of Louisville elite. She walked up to a guy who Kentucky society would have called, \"Big Daddy.\" He was a large fleshy man, much bigger than Billy. It was Derby week, so he was wearing the full Colonel Sanders, right down to the black string tie. He was holding court with a bunch of big-shots. They were all drinking juleps.\n\nSuzy crushed Billy's arm against one firm boob and said, \"Daddy, I wanted to introduce Billy Hughes, we are close friends.\" That was news to Billy. It was good news, but news nonetheless. Big Daddy turned and looked at Billy, who was standing with his usual relaxed confident attitude. \n\nBilly extended his hand and said, \"An honor to meet you Sir.\"\n\nBig Daddy did the calculations. The Blue Angels were in town and his daughter was wrapped, possessively around a naval aviator. Ergo, Billy must be one of the Angels. Big Daddy gave Billy the politician's two-handed shake and said in his booming voice, aimed at getting the maximum advantage out of what his daughter had brought him, \"It's a privilege to meet you son. Which position do you fly?\" \n\nEverybody in the immediate area swiveled to look at him. \n\nBilly blushed furiously and said self-effacingly, \"Number five, lead solo, Sir. We do the sneak passes and the high-alphas. The guys in the diamond do the real flying.\" \n\nSuzy actually squealed with excitement and said, \"We'll get to see him do it tomorrow Daddy. I have his autographed picture and everything.\" \n\nBig Daddy said expansively, \"We'll all be looking for you tomorrow, Son. Perhaps you'll do us the honor of watching the fireworks show afterward on our VIP Rooftop.\"\n\nSuzy squealed again and mashed his arm between her two big breasts. She said, \"That would be wonderful Daddy. I'm never letting this man go.\" \n\n*****\n\nIt's a fact!! Military intelligence is an oxymoron, but perhaps I'm jaded. Nothing ever surprises me and nobody in DC has ever sunk lower than my expectations. Still, the increasing amount of time that I have spent there never fails to reinforce the belief that there are additional depths to be plumbed. \n\nWhen you think of intelligence you think of dedicated patriots. That's probably true among field agents and analysts. But with clandestine service managers; what you get are ass-covering blame-shifting bureaucrats, most of whom are pushing a personal agenda. \n\nThe best word to describe them is \"sanctimonious.\" Their only thought is how to further their own career, and \"the big picture\" for them is the portrait of the current President, which is always worshipfully displayed behind their desk. \n\nThat pretty-much summed up Frank McCarthy. Frank always gives Kelly a thorough and appreciative going over whenever she's in the same room. Those attentions might be a problem for some women, but Kelly doesn't discourage it. She tries to keep Frank motivated and if he ever got out of line, she would just shoot him. \n\nFrank was squatting at his desk, looking like Jaba the Hut; without the Klatooine paddy frogs. Kelly and I were sitting on the other side. Frank shuffled a file. It obviously contained our paperwork. He cleared his throat, then he sat there looking like he didn't know what to do with us. \n\nKelly, ever the smart-ass said in a bored voice, \"Take your time Frank; we've got all day.\"\n\nHe harrumphed some more and then the door opened. Lieutenant General Burton Reynolds walked into the room. The good General's parents were either devoted fans of Smokey-and-the-Bandit or they were totally clueless. My money was on the latter.\n\nThe funnel gets narrow at the top, so moving up requires a skill-set more appropriate to the Emperor of Byzantium's Court than the E-Ring of the Pentagon. Hence, most three-stars are politicians. Sitting in front of me was a slightly chubby illustration of that adage.\n\nLieutenant General Reynolds had always been in Intelligence. So, he didn't carry the hard edge that field commanders have. Nevertheless, he was VERY impressed by the three stars on his shoulder tabs. And he expected everybody in the room to be equally awe-struck. IT WAS a significant achievement; no matter how much backstabbing he had to do to get there.\n\nHe also checked out Kelly, who was giving him a full vista of her gorgeous upper body. Kelly is perfectly happy to accommodate men, if they want to make fools out of themselves. \n\nHe turned to me and said, \"I have an assignment for you Major.\"\n\nI said, \"Check with the Governor of Illinois, I'm in the Guard now.\"\n\nHe said roughly, \"You've just been called back to active service MAJOR, here are your orders.\"\n\nI thought to myself, \"Shit!! Those bastards were going to activate me and McCarthy set this up.\" \n\nI uttered the immortal words of every poor sucker the Army's just dropped in the shitter, \"Why me!!?\" \n\nReynolds got a beatific look and said, \"Because we can!!\"",
        "McCarthy chimed in, \"The General was looking for a non-entity to do some deep cover investigation. It had to be somebody we could activate, and who we had by the balls contractually.\" \n\nHe was right. They COULD activate me and I WAS on contract. I'm tough enough to walk away but that's another conversation. \n\nFrank got an evil grin as he said, \"I told him that you were a world-class smart-ass and a giant pain in the tuchus. But that you knew your stuff. So, you're the lucky bastard who gets ass-fucked by the rigid rod of reality. \n\nI said grimly, \"I don't do anything without my partner.\" I knew Kelly would demand that I drag her into the shit with me. It was who she was.\n\nReynolds looked like he was going to say something stupid. So, I added with menace, \"I'd hate to resign and let the chips fall where they may. But that's going to happen if Kelly doesn't come along.\" The dude could see that I wasn't kidding. \n\nHe glanced scornfully at Kelly. She stared back at him daring him to say something. The contest went on for several seconds. Finally, he sighed and said, \"You can include her If she passes the background check. This is a highly sensitive assignment.\" \n\nThen he turned to McCarthy and said, \"You were right. He IS a pain in the ass.\"\n\n*****\n\nBilly had flown his usual capable show, showered, and changed into his whites. The Navy wanted the Angel's presence to be noted. He had driven the 15 miles to the Marshall family compound, on River Drive. It had an excellent view of the Ohio.\n\nBilly had spent his entire life going to society parties, thanks to his mom. So, he could slide into a milling pack of beautiful people with ease. Nevertheless, it was hard for him to be anonymous, since he was in an all-white uniform, with medals hanging all over his chest. \n\nPeople looked inquiringly at him, as he made his way around the rooftop in search of Suzy. He could hear the whispers, \"That's Suzy Marshall's new man.\" All he had done was sign a picture for her. It was a little disturbing to discover that he had been promoted to boyfriend-in-absentia. \n\nHe finally spotted Suzy on the dance floor. She was dancing with a Tom Cruise lookalike, her vibrant spirit and joi d'vivre filled the room. \n\nShe was in the standard little black dress, but the woman inside that dress was spectacular. Her thick mane of blond hair hung down to her shoulder blades. Her beautiful face was suffused with the joy of sensuous movement, but the most remarkable part was her body.\n\nSuzy's thighs were proportionally a little longer than the average women's. That left the illusion that she was all slim, shapely leg. He could see her leg muscles flexing, because the dress was at least four inches above her knee and skin tight. That showcased her full, round butt and exceptionally long, narrow waist. Her breasts were much larger than the norm, and her scoop neck showed off three inches of pure cleavage. \n\nThe music stopped and Suzy blissfully hugged faux-Tom. Her big boobs pillowed between them. They shared a long happy kiss and then she turned and began to walk toward her father's group, holding faux-Tom by the hand. There was intense familiarity between the two. It was obvious that they were lovers.\n\nBilly experienced a couple of emotions. The first was aching jealousy. The second was bitter regret. He turned and made his way to the exit stairs. He was upset, but he wasn't going to show it. He had that kind of pride and self-control. \n\nBilly was just getting back to the Crown-Plaza when his phone lit up. Suzy was on the caller ID. He didn't want to talk to her, so he didn't answer. The phone lit up three more times in the succeeding hour. She wasn't going away. He answered the fifth call. He said, \"Hi Suzy.\"\n\nHer voice was distraught. She said, \"Where did you go? People told me that you were there, but you disappeared.\" \n\nBilly was in new territory, caught between conflicting feelings. He had been hurt by what he saw. But the disciplined naval aviator wouldn't admit to an emotion as petty as jealousy, especially since it involved a woman he barely knew. \n\nHe said, \"I was there but I saw you were occupied. I only came to the party to see you, so I just went back to the hotel. We fly out at 07:30 tomorrow.\" \n\nThere was a long pause on the other end of the phone. Finally, she said timidly, \"Can I explain something?\" \n\nBilly said, \"It's a little late, Suzy. I need to be up by 04:30.\" \n\nHer voice had tears in it as she said, \"Please, it won't take long. I promise to leave by 10:00.\" \n\nBilly had flown combat missions on three hours of sack time, so, it wasn't a matter of losing sleep. The thing that bothered him was the idea of having a woman in his room at 22:00. The Angels were grownups. They could have guests, even at that late hour, but Billy was a bit of a stuffed shirt when it came to appearances. \n\nThe tricky part was that he felt unusual things for Suzy Marshall, emotions that he had never experienced, so he said cautiously, \"Okay, Room 146.\" The knock on his door came almost immediately. He opened it puzzled.\n\nShe was standing there in her little black dress, mascara running down her cheeks, holding her cell phone and looking like a recently drowned kitten. Crying, she threw her arms around Billy and buried her face in his chest. \n\nBilly was knocked backwards, the door slammed shut and he stood there with a weeping woman in his arms. Being Billy, he was concerned about what her makeup was doing to his white shirt. She reared her head back and said tearfully, \"I'm so sorry.\"\n\nBilly led her to the room's little table. She sat there looking at him solemnly. He said truly puzzled, \"Sorry about what?\"\n\nShe said, \"You saw me dancing with Chip, didn't you?\"\n\nBilly said, \"If Chip is a six-two, hunka-hunka-burning-love, then yes.\"\n\nThe conflict was written all over her beautiful face as she said, \"He's my fianc\u00e9, or he was until tonight.\"\n\nBilly thought, \"Okay, that makes no sense whatsoever.\"\n\nSuzy looked at him pleadingly and said, \"I don't know what's happening to me. I am normally a sensible girl. But, I went completely nuts when I found out that you had been there, and then left. It hit me like a thunderbolt, I love you!!\"\n\nShe looked at him pleadingly and said, \"I've known from the instant we met that you are the only man for me. I told Chip that. He didn't like it. Daddy didn't like it, but I'm comfortable with my decision.\"\n\nBilly looked at her shocked. She rose from the chair smoothed her dress and said with deep womanly conviction, \"So, this is all yours if you want it.\"\n\nBilly didn't know what to say. He had flown into SDF as a 28-year-old jet jockey wedded to the Navy, but, there was no doubt that the woman in front of him ticked every box. Her beauty, sexuality, intelligence and shining spirit were everything a man could want. \n\nThe problem was that, every other member of the team was more sexually experienced than Billy. During his Academy days and afterward, Billy had fucked a few over-bred, rich-girls. But, it was always classic missionary; in and out with no mess. \n\nWomen of a certain status don't do wild sex. And God help you, if you delivered your payload on anything but the authorized target. So, Billy had never experienced anything but reserve and repression in his sex-life. \n\nHe stood hesitantly. She came to him radiating predatory assurance and dropped to her knees. He looked confused, as-if he had no idea what she was planning next. Suzy thought that was preciously droll. He really WAS a boy-scout. She unzipped him. He finally realized what she had in mind. He tensed.\n\nThe instrument she withdrew was as perfect as the man. Even Chip, who was well endowed, couldn't compete. It was the embodiment of the F/A 18, long, sleek and potent. As she slid it into her mouth, she gave Billy her patented \"fuck-me\" stare, her gorgeous cornflower blue eyes broadcasting her hunger. He groaned in ecstasy, his head rocked back and his eyes closed. Suzy purred with contentment.\n\nShe worked on him until he was panting and pumping with need, then she stopped stood and sinuously slipped her dress off, dropping her cheekster panties as she did it. He made a little moan of frustration. She unsnapped her bra and stood still for his inspection. \n\nBilly couldn't believe what was happening to him. This golden goddess had just given him more sexual delight than he had experienced in his life. Then she had revealed herself in all her erotic glory. \n\nHer body was both hard and soft, fragile feminine shoulders and formidable, full tits, without the slightest hint of sag. They had been helped a bit, but Billy would never be able to tell. Her aureolae were perfectly round and pink with big, red distended nipples. \n\nHer body from boobs to hips was rock hard and narrow. Her stomach was flat, and her waist was nipped-in perfection, but of course the seat of womanly power is in the hips. Suzy's were tantalizing, sturdy and fruitful, with the joining of her legs bare and inviting. \n\nNonetheless, her crown jewel was the splendor of her legs. They were perfect, slim, yet powerful. The open triangle at the top revealed muscled inner thighs and the tops of those thighs were so long and faultlessly shaped that he couldn't take his eyes off them. \n\nSuzy knew how devastatingly beautiful she was. Men prior to Billy had also just stood there gaping at her, so sometimes they needed a jump-start. She took things into her own hands. She smiled alluringly walked over to Billy and began to unbutton his shirt. He got the hint. Soon, he was as naked as she was.\n\nBill's body was chiseled perfection. Chip was several inches taller but there was no way he could exude Billy's erotic energy. Chip was a businessman, ten years older and soft from too many power-lunches. \n\nBilly's shoulders and chest were the ideal male build. Insanely strong, but not intimidating, nicely furry but not a pelt. His pecs and deltoids were big and well defined from hauling stick in a 3g environment. His legs were the marble pillars of a Greek God, but it was the precision of his movement, every motion controlled and exact, that drove her into a sexual frenzy. \n\nShe yanked him forward and they fell on the bed together. Suzy normally liked a little oral stimulation, just to get the juices flowing so-to-speak, but in this case, she was so excited that she was dripping. She was still making all the moves, but he was following along nicely. \n\nShe elevated her legs and pulled him into her. That hot thing slid up her passage. It filled her to perfection and. she lost all control. She groaned; a lingering cry of sexual duress. Her hips elevated to take him to the hilt. She wrapped her long, slim legs around his waist as he began to pound her. She howled her pleasure to the surrounding walls.\n\nBilly had never experienced a woman like Suzy. He had several girlfriends in his high school and Academy days. Still, they were all members of the same elite social group. Hesitancy and restraint were the order of the day, at least for \"good\" girls. None of the women he'd known to that point had ever came close to Suzy's downright feral approach to mating. \n\nBilly simply had no point of reference for what was going on underneath him. Suzy was wildly out of control. Her legs held him in a vice. She was panting like a steam engine and writhing her boobs on his chest making loud animal cries of pleasure. The sweat pooled between them making the contact even more sensuous. Her pussy was pulsing on him like a busy Wisconsin milkmaid. \n\nThe hormonal smell of aroused female was driving him nutty. Still, Billy Hughes was a man of discipline and in excellent shape, so he continued to drive into her and she pounded back on him until she began to shriek, \"Nyyyaahh, Nyyyaahh, Nyyyaahh, Nyyyaahh, YESSSS!! OH!! MY FUCKING GOD!!\" \n\nHer hips went into overdrive, torqueing up slowly until they were cycling at impossible speed. They reminded him of how the GE-402s, that powered the Hornet, got to max-RPM. That made her come again. She shouted, \"CUMAGAIN!! OH JESUS!! DON'T STOP!!\" And Billy didn't. \n\nShe was contracting furiously around him, eyes white, with the cornflower blue irises completely rolled up into her head. Her breathing was frantic. Billy couldn't stand it anymore. He never made sounds during sex, but he heard himself roaring, \"Fuck Yeah!!\" as he shot round, after round into her. \n\nHe came back to awareness lying between her widely spread legs. She was breathing dreamily, almost like she had passed out. He looked into her gorgeous face worried. Her eyes popped open confused. It was like she really was coming back from another place. She took a second to focus. Then her full, lips contracted into a merry grin and she said, \"That was the most amazing experience of my life. I'm never letting you go.\" \n\nShe never did. They corresponded for a short time while she got her affairs together in Louisville. That included officially ending her engagement. Daddy wasn't happy. She didn't care. She had found the man of her dreams. As far as Suzy was concerned, the faster they married the better. \n\nThe following month, Suzy joined Billy in Pensacola and they were wed. Both should have been a little leery of the radically short time of the courtship. And perhaps Billy should have been more cognizant of his soon-to-be bride's impulsiveness. But none of that mattered. They were in love.\n\n*****\n\nThe briefing was short and sweet. Reynolds handed us off to one of his flunkies. The minion took us into a TEMPEST shielded room. The shielding told me the information was important. The fact that they were using a nobody to brief us, told me that we were ALL expendable. They call it, \"plausible deniability.\"\n\nThe target of investigation was a dude who I would have liked to have a beer with. Even if he was a squid. There was simply nothing suspicious about him. \n\nBut then again, if Hughes wasn't a person of interest, his little sister sure was. \n\nThat's because, there was indirect evidence that she was a card-carrying member of the Red Dragon Revolution, one of the world's most feared hacking groups. The fact that she and her husband just happened to live outside U.S. jurisdiction didn't seem like a coincidence. \n\nThe rest of the family were power players. His Mom was a big-time DC lawyer and society friend of half of Congress. One aunt was a Senior Partner in a Big Four firm. She had her dainty fingers sunk into major chunks of the economy. The other aunt was part saint, and part globe spanning doctor. \n\nI finally stopped the nerd, who was doing the briefing, and said, \"So far you've shown me nothing. There might be a potential black sheep. But this guy is a hero. Why the fuck would you waste the taxpayer's money on something as flimsy as this?\"\n\nThe nerd said, \"There's a lot more to show you.\" He then proceeded to outline the background of the Esfahan family. \n\nThe daughter, Samreen, was Hughes's current object of lust. I didn't blame him. If I wasn't carrying on a frustratingly platonic lifetime affair with Miss Kelly McMahan, I would DEFINITELY do Samreen Esfahan. She was sex on an exotic Persian stick; as hot as the Dasht-e-Kavir, the Great Salt Desert of Iran.\n\nOn the surface, she seemed perfectly innocent. But, McCarthy alleged that she was working for the Iranian Ministry of Intelligence, known in the trade as VAJA. There was no direct evidence to link her. But, her father Jahangir and her two brothers Rahim and Bahadur were high up in the Revolutionary Guard. Plus, her mother had been an operative with the old VEVAK. So, it ran in the family.\n\nThe surveillance that had started the ball rolling, was through London's network of street cameras. Hughes was important enough to justify keeping an eye on. It was handed to a CIA Case Officer when it became apparent that he and Miss Esfahan were more than casual acquaintances. \n\nOur job was to confirm whether Commander Hughes was an appropriate candidate for a CIA headbag. \n\nSo why use a couple of Windy City gumshoes? The action was in London, not Chicago. the answer was obvious. They needed easily-disposable cover, and we were available. \n\nIf you're the government, you can't just outright screw-over one of your citizens. You'd have to surrender the moral high ground if you did that. So instead you pretend to do a thorough investigation. Then an analyst \"interprets\" the \"findings.\" THEN, you do whatever the fuck you wanted to do to him in the first place.\n\nThe CIA Directorate of Operations had been burned by Ames, Hanssen and Snowdon. So, they planned to make an example out of Hughes. That's the way it works; it's all in the optics and carefully planned misdirection. \n\nHow did I know that? Because I had done that shit for years, first as a military cop and then as an analyst. So, I knew that Hughes had gotten crosswise with somebody powerful. And THAT somebody was fitting him for a gold-plated frame. \n\nThe only real mystery was; why Hughes? That question would make for a worthwhile puzzle to sort out.\n\n****\n\nAfter his tour with the Angels, Billy was assigned to VT-21 at NAS Kingsville. He was an Instructor/Pilot. He was flying T-45 Goshawks instead of F/A 18s. But, he found to his absolute delight that he loved taking eager trainees, on the long journey from novice, to naval aviator. \n\nMeanwhile, Suzy was the leading light of base society. She was the star of every social event. Billy was proud of his beautiful wife and she was delighted to be married to the Base's star instructor. \n\nBilly's Annapolis credentials and his time with the Angels were marks of distinction. However, there was one exception to the universal respect. That was Captain Dirk Bennett. \n\nBennett was Billy's commanding officer and the son of Admiral Lindsay Bennett. Admiral Bennett might be a member of the Joint Chiefs. But, his son would get boiling mad if anybody implied that his rapid advancement had anything to do with nepotism. \n\nDirk Bennett was a big, good-looking guy; running to overweight. He had been the star of his own show growing up. He was the best at everything and the acknowledged Prince Charming. Now, his far too humble underling kept stealing his thunder. Worse, Billy seemed to do it without any visible effort. He was just a great pilot and a natural leader. \n\nBennett's own flying career had been less than stellar. At six four and two-thirty, Bennet was too big to qualify for anything but the propeller pipeline. So, he had flown the P-3 Orion. \n\nThere was nothing wrong with submarine hunting. In fact, it was an essential cog in the defense of the Nation. But, spending a career putt-putting along at 400 knots made Bennett hate the jet jockeys. Now he had the most righteous of them all under his command.\n\nDirk Bennett saw everything Billy did as a conscious effort to hog the hero worship that should rightfully have been his, and he resented it. Even worse. Hughes had a goddess for a wife. \n\nBennet's wife Julia was attractive enough. But, she wasn't the big-titted trophy that every aspiring macho-man needs, to prove his innate superiority. Ipso facto, Bennett had to steal Suzy Hughes. \n\nBennett was a smooth operator. He could sense Suzy's fatal flaw. She was addicted to conquest, in that bagging attractive males propped-up her self-image. Even worse, Suzy was impulsive to the point of recklessness. THAT was something that Bennett knew he could exploit. \n\nSo, Bennett slithered over to Suzy at every party, and spent his time telling her how much he valued Billy, both as a friend and as an instructor. He would make it a point to tell Suzy that, he was dedicated to advancing Billy's career. \n\nThat put two things in Suzy's head. The first was that Bennett was an important guy, because he could help her husband. The second was that Bennett could be trusted to do the right thing. Bennett worked hard to make sure that Suzy believed those two things.",
        "Dirk Bennett was an alpha-dog. His macho-man image might be intimidating to some women. But it was catnip for a female as sexually experienced as Suzy. So, Suzy and Bennett frequently engaged in the sort of innocuous flirting that people do. It was never anything out of line. But, over time it built a connection between the two that was fundamentally sexual.\n\nThe part of Suzy that enjoyed hunting men for sport, savored the thought that she had added an important guy to her collection. Of course, being in her collection gave Bennett \"special\" standing. That status let him creep closer. \n\nBennett needed to have Billy out of the way. So, he assigned him to represent NAS Kingsville in Washington. Both Billy and Suzy saw those trips as a huge boost to his career, since it gave him almost weekly visibility with the higher-ups. With Billy out of the picture Bennett moved even nearer.\n\nHe was sure that Suzy saw him as a \"conquest.\" He could also sense her sexual interest. Her notice of him was no different than the way a normal woman would appreciate an attractive man. Certainly, it was nothing that she would act on. But she was a very sensual woman and Bennett knew that all it required was the right circumstance. \n\nThat circumstance would be the annual military dress ball. The ladies would turn out in their best formal dresses All the Naval instructors would be there in their fancy dress uniforms; except Billy. Bennett had sent Billy to Washington. Billy never questioned orders. But it was obvious that he was upset. \n\nNot surprisingly, Suzy was outraged. She said through gritted teeth, \"This is the most important social event of the year and I'm hosting it. Can't you just tell them that you'll come a couple of days late.\"\n\nBilly chuckled lovingly and said, \"That's not the way it works. If I told the command staff that I couldn't attend their meeting because it would get in the way of my wife's social event, they might start to question my commitment.\"\n\nSuzy could see that Billy was perfectly right. But, it frustrated her anyhow. That was probably the reason why, she was drinking more than she usually did the night of the dance. \n\nBennett arrived with his wife Julia. Julia was a sweet girl with impeccable Austin society credentials. Her pretty face and her slim, almost boyish figure, were a perfect counterpoint to her husband's overweight frame. \n\nIn her little black dress, Julia was like a string quartet, classy and demure. While Suzy, was the A&M Marching Band blasting the Aggie War Hymn. Shock, and awe, are perhaps the best two words to describe the impact of that spectacular body. \n\nStill, Bennett was a smart man. Rather than drooling on Suzy's magnificent boobs. He took both of her hands in his and said, with his eyes never leaving hers, \"I'm sorry that Billy couldn't be here to see what a remarkably beautiful woman his wife is.\" \n\nSuzy appeared to melt right there on the spot. She said with considerable emotion, \"Thank you Dirk. That means a lot to me.\" Bennett gave her hands an affectionate squeeze, nodded and he and Julia moved on to the rest of the party. He knew she was angry and insecure; and ripe for the picking. \n\nHosting duties kept Suzy busy all night. But Bennett would occasionally drop over to \"freshen\" her drink. Suzy was drinking vodka and tonics. It was a simple cocktail with very little kick. That is, unless it was made with 153-proof vodka. Dirk liked to plan his seductions to the last detail.\n\nBy the end of the evening, Suzy was hammered. She was surprised, and humiliated by her condition. Hence, she wanted to get out of the public eye before she did anything too embarrassing. Naturally, she turned to the only person she was confident she could trust. Her friend Dirk would rescue her. \n\nDirk, being the kindly predator that he was, gallantly offered to drive her home. He could have taken his wife Julia with him. But what would be the fun in that? His wife was used to her horn-dog husband's shenanigans. She said, \"I'll get a ride.\"\n\nBy the time they reached her house, Suzy was lolling against the door of Bennett's Escalade. She had slid down in the expensive leather seat, forcing the dress up to her butt. Her gorgeous legs were spread immodestly wide. Her black thong panties were on delectable display.\n\nDirk parked down the street. It wouldn't do to leave his car in front of the Hughes's house. He helped his drunken victim out of the car. She immediately fell to her hands and knees and yakked all over the lawn. Her dress was above her waist now, and Bennett admired the smooth round curves of her beautiful ass. This was going to be delightful.\n\nBennett helped Suzy to her feet. She muttered something about, \"embarrassed.\" Bennet steered her to the door, wobbling on her four-inch heels. He said, \"Where are your keys sweetie?\" \n\nShe had no idea where her purse was. So, she slurred, \"Look under the planter.\" Bennett parked her on the porch swing, and fumbled under the pot. He found the key and hastily opened the door, just as Suzy began to slide out of the swing. \n\nHe grabbed her and dragged her inert form into the house, closing the door behind him. He was now holding her in an embrace that crushed her two big jugs against his chest. Her head was hanging back and she was more-or-less limp in his arms as he marched her to the bedroom. \n\nThere, he took her by the chin and kissed her passionately. Eventually, the sensation of being kissed, hit her. THAT was something that her brain recognized. She had no idea who she was kissing, nor did she care. Suzy's default setting was, \"Sex.\" She moaned loudly, and her mouth opened wide, tongue dueling with his. \n\nThe kiss lingered. Then Bennett took her heavy right breast and began to manipulate it, rolling the nipple as he did. That shot most of Suzy's blood into her pelvic regions and she groaned with need. She said urgently, \"Fuck me!!\" \n\nSuzy Hughes was a sexual creature and her fire was lit. She had no idea who she was talking to. But it didn't matter. Her mind had lost all concept of silly notions like fidelity, or morality. Her consciousness had coalesced into a compelling little ball located between her legs; she needed to fuck somebody!!\n\nShe turned and sat on the bed, frantically bunching her dress up around her waist. Bennett dropped his uniform pants and they pooled around his ankles. Suzy grabbed his throbbing member and attempted to swallow it whole, making loud noises of enjoyment. He threw his head back in ecstasy.\n\nBut, she had to have him inside her, NOW!! She pulled off him with a loud smacking noise and fell backward on the bed. She spread her legs wide. She was crazed with lust. Her arms were extended back over her head, leaving her body fully open to him. \n\nHe moved her thong aside and inserted himself into her without preliminaries. She was so lubricated that he immediately slid up to the top. He marveled at how hot and wet she was. She shrieked with the sensation and they began a frantic coupling. She grabbed the back of her legs, and humped herself up to experience him fully.\n\nBennett was pounding her with everything he had. Suzy was uttering deep throaty grunts each time he bottomed out in her. They were both completely lost in the moment. \n\nSuzy was making a varied collection of effort noises; moans and groans, while she worked to get her satisfaction. Bennett constructed a cone out of one of her glorious tits, while he sucked on its big brown nipple. Suzy started emitting loud steam engine panting noises and the first orgasm hit her. \n\nIt set off violent contractions. She tried to smother Bennett in her abundant breast flesh. She elevated her legs, pointed her feet, curled her toes and emitted a single, loud, raw grunt. She was urgently muttering, \"Don't stop!! Fuck-me, Fuck-me, Fuck-me!!\" \n\nThen the growling started. Those noises were more animal than human; Bennett marveled at Suzy's strength. She shrieked as another earth-shattering orgasm washed over her. Bennett paused to let her work through the contractions. Then he went back to pounding her. \n\nFinally, he began to shout exultantly, \"I'm fucking the shit out of you bitch. You're my bitch now. Your pussy is mine!! Ahhhhhhhhhh!!\" And he poured a torrent of cum into Suzy's highly receptive hole. \n\nBennet came back to earth lying between Suzy's widely spread legs. That side of the bed was soaked, and the smell of sex hung everywhere in the air. Suzy was passed-out-sleeping. \n\nHe wanted to spend the night. So, he undressed both of them, marveling at Suzy's superb nude body. He arranged himself, with them spooned together naked on the un-ravaged side of the king bed, and fell into victorious slumber.\n\nSuzy awoke to the sensation of somebody playing with her clit. It was sometime in the middle of the night. She didn't know where she was and how she'd gotten there. But, she didn't care. The feeling was so exquisite that she uttered a loud moan of need, and elevated her legs for round two.\n\nShe screamed loudly, through the fucking of her life. She must have come hard, three or four times, before her bed partner shot his seed into her and the two of them went back to sleep.\n\nThe sunlight woke her. It was shining through the open curtains; so brightly that she thought her retinas would evaporate. She moaned with the pain of a monster headache. How had she gotten so drunk???!! More importantly, she remembered that Billy was in DC!! \n\nSo, who was this person holding her naked tit and idly strumming her rapidly rising nipple??! She fought down the waves of desire and turned to see that she was being held by Dirk Bennett!! They were both naked and he was obviously the man who had fucked her to death last night. \n\nThe enormity of what they had done hit her. She shoved herself out of bed, and jumped to her feet. Bennett sat there with an innocent smile on his face. He said playfully, \"I thought we were just friends. I didn't know we were a lot more than that.\" \n\nThis was the tricky part. He had to convinced her that this was all her idea.\n\nSuzy wailed, \"OH MY GOD!! How could we have done this!! We're both married!\" \n\nBennett said gently, \"You came on to me pretty hard last night. I had to get you out of there before anybody else noticed. I'm just glad we made it back to your house before I gave in to you.\"\n\nThen he looked at her contritely and said, \"But, you are so beautiful, that you are impossible to resist.\" That was such a blatant lie that Bennet was afraid his nose would grow at a faster rate than his other appendage.\n\nSuzy fell for it. That was because, in her not so humble opinion she WAS irresistible. She must have been so angry at Billy that she decided to fuck his best friend. Or maybe Bennett was HER best friend? She was so confused. She said contritely, \"I'm so sorry Dirk I don't know how I got so out of control. It will never happen again.\"\n\nBennett gave her a patently insincere smile. He HAD to make her believe that what they had done was nothing and that she could trust him to be discreet. He said, \"No harm baby, nobody but the two of us knows about it and we can keep this between ourselves as friends.\" \n\nThis was the critical moment. He would know that Suzy had bought into the lie if she let that statement pass without challenging it. He added, \"But I have to admit that was the most incredible sex of my life.\"\n\nBennett was intentionally leading her in the wrong direction by stroking her ego. He was counting on the fact that men had always told Suzy that she was a great fuck. So, she would feel powerful instead of remorseful. She wouldn't be able to see the truth.\n\nBennett patted the side of the bed and said, \"I still have some time. Let's try this again when you're sober. I just know that you can rock my world.\" This was the moment of truth. If she said \"yes\" than he knew that he had her. If she said \"no,\" then he would walk away. \n\nSuzy hesitated for one fateful moment. She had the impression that Bennett was questioning her sexual prowess. She knew she was the best and she was always ready to prove it. That was exactly what Bennett wanted Suzy to think, and it worked. \n\nSuzy was a dripping 125-pound bundle of money love. She had no inhibitions. It never occurred to her to say \"no\" to herself. What would be the point? If it felt good she knew she would eventually do it. That had been her history from day-one, and last night had been one intense orgasm after another. \n\nShe was also practiced at finding excuses for her behavior. She could justify this betrayal under the heading of, \"Nobody would be the wiser. So, nobody would EVER get hurt.\" It was a rationalization. She knew that. But it really didn't matter. She wanted it. So, it was \"game-on\" at the Hughes household. They fucked twice before Bennett went home to his family. \n\n*****\n\nBilly seemed to be in DC more than usual. He hated being away from Suzy. But he was also a team player. So, he would drag his butt from Kingsville over to Corpus Christi and take the two hops to DC. \n\nHis meetings were just routine updates and he should have been able get them over and fly back in a day. But Captain Bennett wanted him to brief other people while he was there. The boss said it saved money. So, Billy would normally be gone for four days. \n\nBilly was standing at the Taco Bell in the center of the Pentagon. Yes, it's true. A Taco Bell is at the physical center of America's Defense Establishment. Of course, the undocumented aliens who work there all need security clearances. \n\nIn any case, Billy was just finishing a burrito, which he thought might be radioactive, when he heard a delighted voice shout \"Billy!\" He turned, and it was his old Blue Angels commander, Admiral Wilbur Rosen. Rosen was an O-7 now, one- star Vice Admiral on the NAVAIR Staff. \n\nRosen said delighted, \"What brings you to DC? I thought you were the main guy at Kingsville?\"\n\nBilly said, \"Well, I don't know about that. But I AM at Kingsville. I'm their Liaison Officer to the Pentagon so I'm here a lot. In fact, I have to get on a commercial flight back to Kingsville, early tomorrow.\"\n\nRosen looked like a lightbulb went on in his head!! He said, \"Why fly commercial? I think we can help each other out.\"\n\nIt turned out that Rosen had a problem. He had a Goshawk that had to be delivered as a replacement to NAS Kingsville, but he didn't have a pilot handy. And Billy needed a ride home. So, he arranged for Billy to pick up the Goshawk at NAS Patuxent and fly it from Pax River to Kingsville. \n\nBilly was overjoyed. It meant he would be able to fly himself home. He never missed a chance to get in the air. It also meant he would be home that night, rather than the following evening. \n\nThe Goshawk turned the grueling five-hour flight into a delightful two-and-a-half-hour hop, including a refueling stop in Memphis. The only problem was that Billy had left his car at the Corpus Christi airport. So, he had to cab over to Corpus Christi, after he debriefed the delivery in Kingsville. It took a couple of hours to get back. Thus, it was close to 3 AM when he slipped quietly in the door of his house. \n\nBilly was always a considerate guy. He didn't want to wake Suzy at that ungodly hour. So, he bedded down in the guest room. Truth be told, he was enjoying the joke. He chortled at the shock that Suzy would get when she awoke to find him making breakfast.  \n\nHe had no concept how profoundly shocked Suzy was going to be. \n\nThe sound of his wife screaming blasted him out of sleep. Billy always woke like a cat, instantly aware of his surroundings. It was an odd trait. The only other person with that gift was his step-mom. \n\nConcerned, Billy jumped out of bed and hustled up the stairs to the master-bedroom. The sight that greeted him ended his world. \n\nSuzy was lying on her back, naked. Her legs spread wide and elevated into the classic female fucking position. Dirk Bennet was lying between them his hairy ass pulsing as he came. Suzy was crooning, \"Yesss!! Give it to me baby!! Give it ALL to me!!\" Bennett was shouting, \"Ahhhhhhh Fuck Yes!!\"\n\nBilly was a Navy pilot. He was trained to react quickly and decisively. He instinctively knew that he would need hard evidence. So, he grabbed the cell phone out of his jeans pocket and began to record. He would deal with the heartbreak later. \n\nBennett collapsed, spent. Suzy was frantically sucking the sweat off his left shoulder, still processing her orgasm. That was when she saw Billy. It took her a second to comprehend what she was seeing, because she was still experiencing contractions. Her eyes went wide, and she shrieked, \"Ohhh Noooo!! Billy!!\"\n\nShe struggled to get Bennet out of her. It took Bennett a few seconds to realize that something bad was happening. He whipped around to find Billy holding a cell phone. \n\nBennett knew that his career was over if that recording ever saw the light of day. So, he jumped out of bed roaring, \"GIVE THAT TO ME!!\" Then, he rushed toward Billy and tried to grab the phone. \n\nBilly calmly ducked under his reach, still recording. He said, \"Sorry Dirk, but I'm going to need this for your Article-134 hearing.\"\n\nBennett yelled \"Ahhhhhhh.\" It was the same sound he had made a minute earlier when he came in Billy's wife, but this time it was out of fear and frustration. \n\nBennett swung a roundhouse right. The blow landed mostly on Billy's shoulder. It also partly connected with the side of his head. Billy staggered across the room and landed butt-first, in the doorway; still holding the phone unwaveringly on target. \n\nBennett was desperate now. He rushed at Billy. Billy jumped to his feet, and nimbly dodged aside. Then using Bennett's own momentum, Billy shoved him hard. Bennett went straight across the hallway and into the opposite wall. His head bounced off the wall, he wobbled, and fell down the stairs. There was a lot of crashing and then silence. Billy thought, \"God I hope I didn't kill him!!\" \n\nBilly continued out into the hallway, still recording. He saw Bennett lying at the bottom of the stairs moaning. He looked like he dislocated his left shoulder. It was the one Suzy had just been licking. \n\nBilly shut down the recording. Then he dialed 911. \n\nHis next act was to send a copy of the evidence to the cloud. That was just Billy being practical and cool-headed. He always crossed every \"t.\" That was what his mother had taught him.\n\nThen he turned to confront his treacherous wife. She was lying face down on the bed, crying and pounding the mattress in her grief and agony. \n\nBilly was not an automaton. It was just that he was trained to handle stress with calm determination. That was part of his core programming and that was what was governing his actions. He would break down once he'd gotten the important stuff out of the way.\n\nThe EMS arrived within five minutes. There was a squad car accompanying the bus. The cops talked to Billy, as the EMS people were loading Bennett's naked body on the stretcher. The cops didn't miss Bennett's state of undress. \n\nThe female first-responder draped a blanket over Bennet, as they wheeled him out. It was INDEED an impressive member. Billy told the cops the story. He showed them the video, including Bennett taking the first swing and Billy doing nothing more than shoving Bennet as he charged past him. \n\nThe cops had seen it a thousand times and they were bored. They said, \"We'll need you to come down to give us a statement, but you can take your time. This is pretty clear-cut.\"\n\nThen Billy went upstairs for one final, painful moment. Suzy was exactly as he had last seen her, naked and weeping face down on the bed. He said bitterly, \"You didn't expect me to be home until tomorrow, did you?\"\n\nShe turned at his voice and scrambled under the sheet. She held it modestly to her breasts. THAT was a laugh. She said weepily, \"God Billy!! I am so, so, sorry!!\" ",
        "Billy said, \"How long?!\" \n\nShe looked miserable. She said pleadingly, \"It doesn't matter how long. This wasn't supposed to happen. I only love you. Please, please!! It will never happen again!!\"\n\nBilly said grimly, \"It matters a lot. Bennett is my superior officer. He is in deep shit if he was ordering me away so you two could play bedroom games. You can tell me now, or you can tell the Adjutant General when he deposes you, but you WILL tell someone.\"\n\nSuzy burst into tears again and said, \"It's been since the Dress Ball. He told me it was just a bit of fun. Nobody would get hurt.\" \n\nBilly did the math. He said, \"Are you telling me that you've been fucking that son-of-a-bitch for the past eight months?? God!! I am too stupid to live!!\"\n\nSuzy ran through the adulterer's handbook, \"It was just sex. It didn't affect anything between the two of us. I only love you. We can get past this. I know we can. I'll never let another man touch me, just you!!\"\n\nSuzy started to rise. She was going to play her trump card. She said, \"It was only when you were away. I NEVER thought you would find out. I would NEVER do anything to hurt US. Come to bed and let me make it up to you.\" Billy looked at that gorgeous body. Her lady parts were an absolute mess.\n\nThat sight flipped a switch and three years vanished in a puff of smoke. The opposite of love isn't hate, it's indifference. Billy felt nothing. There was no pain, just oblivion. He said disgustedly, \"I never want to touch you again. I loved and trusted you, and here you are full of that disgusting son-of-a-bitch's cum.\" \n\nSuzy looked puzzled. Then the realization struck. He didn't want her?!! That was impossible!! Every man wanted her!! How could she win her husband back if he didn't want her? \n\nIt finally dawned on Suzy Hughes that she was in serious trouble.\n\nBilly was a man of honor. He would never break a pledge. To him, Suzy's betrayal was the worst kind of treachery. It drove him wild with anger, but his lifelong commitment to service had created a foundation of adamantine self-control. Billy never reacted emotionally. It was the same quality that made him so effective in combat. He made life-and-death choices daily, in Afghanistan, and this was just another one of those. \n\nBilly knew that his next actions were going to dictate the direction of his life going forward. So, he stopped and asked himself what he REALLY wanted out of this situation. The answer came back instantly, \"I want to rebuild my life without this woman.\"\n\nHe said calmly, \"You and I are done. It isn't a matter of trust, or even my male ego. I just can't live with a person who has no honor. And you lost yours the minute you defiled our marriage.\"\n\nSuzy looked like she was about to say something. So, he quickly added, \"I don't care what excuses you have. It was simply the wrong thing to do. You knew it was wrong, but you did it anyhow. And there is no denying that fact.\"\n\nSuzy looked distraught. She said pleadingly, \"Please Billy. Give me one more chance. I can't imagine life without you.\"\n\nBilly added grimly, \"Honestly, I can't imagine life without you either. But sometimes you have to do tough things if you want to keep your self-esteem.\"\n\nHe added softly, like he was talking to himself, \"I would lose all respect for myself if I continued the marriage. Life's full of pain and suffering. It happens to everybody. Successful people deal with it. So, I am NOT going to let this drag me into a well of self-pity. I was brought up to be stronger than that.\" It was what his parents had taught him.\n\nSuzy sank to the floor of the bedroom crying. Billy looked at her with the mixed feelings. Anybody would have those feelings, if they had loved somebody for a long time. But Billy was a person who was committed to facing things. \n\nHe said mildly, \"I'm going to bunk into the Base BOQ until the divorce. I'll be fair, but nothing more than that. You know my family, especially my mother and my Aunt Mary. So, don't even think about contesting this. They'd bury you and your old man.\" With that he grabbed the \"ready bag,\" and walked out of Suzy's life forever.\n\n*****\n\nThat evening Kelly and I grabbed a flight out of BWI, bound for Heathrow. We didn't bother to mention it to anybody, but then again, nobody cared. We were nothing more than the designated Judas-goat. \n\nI had booked one of those long-stay apartments in May Fair, $300 a night with a bedroom and a pull-out couch for me to sleep on. I wasn't going to tempt fate by sharing a bed with Kelly. It wasn't Claridges or the Cavendish, but we were traveling on a government expense account. \n\nEsfahan was the source of the concern. So, the next day I trudged up Bruton Street in a soaking rain looking for her office. I was expecting something Victorian. After all, she was a Cambridge PhD and it was off Berkeley Square, but her address was a modern building.\n\nIt was raining hard. So, I loitered in a doorway across the street. Finally, she dashed out her building's door and rushed off toward a pub up the street. I waited a serviceable period and joined the party. It was still raining. So, I had my collar up and my hat pulled low, thank God!! Esfahan and Hughes were sitting right next to the entrance. \n\nI was pleased to find the two subjects together. It made the bluebugging ever-so-much easier. I needed them within thirty feet to drop a little piece of malware on their phones via their Bluetooth ports. Of course, that's strictly illegal, but my only interest is results, so I don't care about legal. Laws are just the point of reference to color outside of. \n\nEsfahan was in discoverable mode. So, she was wide open. The fact that she was walking around with her whole life exposed, indicated that Miss Esfahan was probably NOT a threat to National Security, but we had to prove it. \n\nHughes was a bit more difficult. His phone wasn't discoverable. So, I used a Bluesniffer to access his 2.4 GHz port. Then I dropped the same malware shell on him. It was the one I had just laid on his girlfriend. That exploit was all taking place in their pockets; as they enjoyed finger sandwiches and white wine. \n\nI got up and made my way back out into the rain, making sure that they didn't see my face. Now, we could monitor and record their conversations, calls and even use their phone's camera feature. \n\n*****\n\nWe monitored Hughes and Esfahan for a solid month. It was clear that they were two people in love, nothing more. Esfahan seemed to be avoiding her family and Hughes was totally business-like. That is, when he wasn't with her. When he WAS with her he acted like a smitten schoolboy. I didn't blame him. Estefan was a beautiful and intelligent woman. \n\nIt was becoming glaringly obvious that Kelly and I were just the cat's-paw for some elaborate personal agenda, and that person was going out of his way to stay anonymous. Consequences are for wimps, at a certain level in the Federal bureaucracy. Think about it. You don't get no stinkin' consequences if no one knows who pushed the button. So, nameless people hold life or death power over the rest of us. \n\nLord Acton got it right when he said, \"Power corrupts,\" but so does anonymity. The bureaucracy is incredibly powerful and confusingly intricate. Its complexity lets anonymous seat warmers abuse the power of their position. I mean seriously!!?? What's the point of having minions, if you can't use them to resolve a few of your own anger issues. \n\nNobody plans road rage, but occasionally another driver totally yanks your chain. Now imagine that the other guy is driving a Fiat 500 and you're driving an Abrams tank. It's only human to crush the fucker. \n\nIt might cost you. That is, IF people knew you did it. But, the nice thing about being an anonymous cog in an impersonal machine, is that you can rumble on down the road whistling \"Another one bites the dust;\" with the self-righteous assurance that you've just eliminated one more bad driver. \n\nGetting involved in that shit, will corrode your soul. Maybe that's why I got so fucking jaded. But even an utterly world-weary hard-case like myself can get fed-up. And the railroad job we were engineering for Billy Hughes was making me gag. \n\nMy spidey-sense told me I'd hit the end of the road, and it triggered a strange sensation. For the first time in my life I wanted to do the right thing; not the smart thing. And, none of that involved hanging Hughes out to dry. I said to Kelly, \"I've come to a decision.\" She looked more-than-a-little interested.\n\nI said, \"I've decided to go rogue. These two, are being set-up and I'm going to find out who's behind this clusterfest. When I do, I'm going to shine the light of righteousness on the entire stinking mess. Maybe I'll even get some of my own soul back.\" \n\nI added lovingly, \"I'll have to break cover and it will probably violate our contract, if not the law. This could get very messy. So, you can opt out if you want. No hard feelings. Only a stupid goon like moi, would go feral on the entire U.S. government.\"\n\nKelly looked like I'd hit her g-spot. She said in a husky voice, \"You know how to turn a girl on don't you baby.\" \n\nI thought to myself, \"Why haven't I made this woman mine??!!\" \n\nI said, \"It's time to talk to the target. We need the backstory. There has to be an obvious reason why this dude's being fitted for a treason frame.\"\n\n*****\n\nBesides being smart and beautiful, Kelly can pretty much sell a story to anybody. Hughes and Esfahan were both deeply intellectual people. I'm a thug, but Kelly is a PhD graduate of the University of Chicago's forensic psychiatry program. So, Kelly made the initial contact.\n\nThe real Kelly is like lightning in a bottle, but she has this chameleon-like ability to project a certain persona simply by facial expressions and the way she holds her exquisite body. This Kelly had nothing of the pantherish grace and powerful athletic frame of the real one. She was very civilized. \n\nI could see her smile politely and introduce herself. Both Hughes and Esfahan's body language screamed uneasiness; at first, that is. Kelly stood there, calmly explaining and eventually they simply looked curious. She handed them a card. Then she turned and walked out the door. \n\nIt was likely that the London camera system would pick her up as soon as she stepped outside the restaurant. And it was equally likely that the people who we had just declared unofficial war on, would be on the other end watching. So, she executed a classic \"find the lady\" maneuver. \n\nThe whole point of three-card-monte is to get the mark watching the wrong card. Kelly was the one who had made the contact and they'd be watching her. So, Kelly exited first. I came out a few minutes later. Because, I was the money card.\n\nKelly used four different underground stations and two different underground lines to get back to our flat. I was sure that they were burning up their camera bandwidth trying to follow her. Then she proceeded to kick back for a nice relaxing evening at home, a job well done. \n\nIn the meantime, I had slipped through Berkeley Square and then up Bruton Lane to the Coach & Horses; which was where I had first observed Hughes and Esfahan. Finally, I circled back down Bruton Street. I was waiting for the loving couple outside Dr. Esfahan's office.\n\nHughes and Esfahan came up the street and into the building holding hands. It was cute. I stepped out of the shadows. I could tell from their body language that they didn't want anything to do with me. I didn't blame them. At five-eleven, and 240 pounds I resemble a gorilla. \n\nI said as politely as I could, \"Dr. Esfahan, Commander Hughes? We need to talk.\"\n\nHughes said, \"Your associate told us that you had something important to discuss. Then he smiled engagingly and said, \"She said that you were harmless, even though you looked like the Missing Link.\"\n\nI said with a smile, \"Just think of me as a big teddy bear. I know I'm built like one.\"\n\nThey laughed, and the ice was broken. I said apprehensively, \"We can't stand outside like this.\" I gestured toward the traffic camera up the block.\n\nDr. Esfahan said in a low cultured voice, \"Please come up to my office.\" I knew from the bugs that she could make her Oxbridge accent sound like a proposition to get naked. She was one very hot woman.\n\nOnce we were neatly ensconced, and far away from prying eyes; I looked directly at Hughes and said, \"I know that this is sudden and unexpected; and I also know that you are going to have a hard time believing me, but Kelly and I were assigned by the Pentagon to set you up for treason.\"\n\nI added, trying to convey the importance of what I was about to say, \"It looks like you are being put in the frame by somebody you know.\"\n\nHughes was surprisingly calm, just a simple tightening of his jaw muscles. I thought, \"Good man!!\" I added, \"I don't know why, and I don't know who's behind it. But, Kelly and I are here to help you. Maybe we can get to the bottom of this, working together.\"\n\nI said earnestly, \"Is there anybody you know in the Government who would like to see you in an orange jumpsuit in ADX Florence?\" \n\nI expected him to act puzzled or outraged, maybe even frightened, since a Federal super-max is a scary proposition. Instead he calmly said, \"I can think of one person who might want that to happen.\"\n\nHe told me a classic story of betrayal. \n\nI've been an Army cop, and private eye for almost 25 years and I've seen thousands of them. Wife gets hooked up with some slick operator and ends up getting discovered. That's because, sooner-or-later people who hook-up ALWAYS get discovered.\n\nExcept this time, the whore in question was fucking Hughes's commanding officer. And Hughes had the evidence to prove it. Even worse, the commanding officer had been abusing his position, to get Hughes out of the way. \n\nSo, one UCMJ Article-134 Court Martial later, the fucker in question found himself busted down from Captain to Lieutenant Commander, one rank below Hughes. Then he was handed an, \"Other than Honorable,\" discharge; which is the kiss of death for future career opportunities; except perhaps in the janitorial trade. \n\nThat would be the case with this dude. Except his father was a Joint Chief. So, daddy parked his little boy with a contractor; for considerations of future love. That's the normal backscratching boogie among the bandits-of-the-beltway. \n\nThat put at least two people on the suspect list, the son and the dad, but apparently there was a third. The whore Hughes had been married to was given a very unfriendly divorce and shipped back to her daddy in tears. Her daddy was a player in the Kentucky delegation and he didn't appreciate his little girl being returned as damaged goods. So, there might also be involvement with the folks on the Hill. \n\nAccordingly, it was probably safe to assume that Hughes was in deep shit with a number of very powerful folks. I said, \"Before we can start investigating, we need background information, and frankly I don't know how to get it.\"\n\nEsfahan said in a disheartened tone of voice, \"It will kill me, but maybe we should go our separate ways, my love. I don't want to get you in trouble with your government.\"\n\nI looked at her bluntly and said, \"Don't give up that easily, my little friend. You're collateral damage right now. But the Brits would ship you back to Iran if things turned out the way they are designed to go.\" \n\nThen I added, perhaps a bit too gruffly, \"Are you a VAJA sleeper agent? They know who your father and brothers are, and we also know who your mother worked for. That's the story that the people spinning this little fairy tale are pushing.\"\n\nEsfahan looked terrified. Her face is so stunning, and her eyes are so intelligent, that you quickly lose track of the fact that, beneath all that beauty she is just a normal person. Kelly is the one exception to that rule. She's gorgeous and she is ALWAYS dangerous.\n\nEsfahan looked like she was about to explode. She said angrily, \"My family is Shia and followers of Agha-Tehrani.\" That statement meant they were indeed hard-core fundamentalists. \n\nShe added, \"But, I have no religion except humanism. I would NEVER do a cruel thing to anybody, for any reason. Because of that, I have been alienated from my family since I matriculated Cambridge. What they believe doesn't make sense to me. It's coldhearted. I'm a healer, not a fanatic.\"\n\nThere was nothing rehearsed, or dishonest in the way she said it. I learned a long time ago to trust my gut. And this woman was simply not a threat. What we saw, was exactly what we were getting.\n\nHughes said, \"The background information you need is no doubt all locked down under a \"classified\" heading. There is only one person I know who can get that and that's my sister.\"\n\nI knew about the sister. I said, \"You mean the one who's with the Red Dragon Revolution?\"\n\nHughes chuckled and said with brotherly pride, \"Chelsea IS the Red Dragon Revolution. It's just her.\"\n\nI said incredulously, \"Do you mean that one of the most powerful hacking groups on the darkweb is nothing more than one woman?\"\n\nHe smiled and said, \"If it involves a computer Chelsea will find it for you.\"\n\n*****\n\nFive days later, Kelly and I got off a sixteen-hour flight to the tropical island of Martinique. We had reported to McCarthy that all was quiet in London. However, we had dug up some secret bank accounts in that Caribbean nation, and we were going there to check them out. It was actually a head-fake.\n\nThat news must have given McCarthy a woody, since he knew that the entire investigation was a sham. The idea that Hughes might really be up to nefarious dealings would make the whole process of framing him so much easier. So, he fell for it hook-line-and-sinker.\n\nThere was a sleek 60 Cantius waiting for us at the Fort-de-France cruise terminal. It was a real luxury item. The owner had to have very big money indeed. It was being driven by an older guy. His daughter met us as we boarded. \n\nShe was a slip of a girl, compared to Kelly; perhaps five feet tall and maybe 100 pounds., but she was absolutely, heart-stoppingly beautiful. \n\nShe had very thick auburn hair that was cut short in a \"pixie.\" That only served to highlight the perfect proportions of her flawless face. She had the most amazing pair of intelligent jade green eyes. Kelly's are an emerald green. They reflect the heart and soul of the Irish people. This little woman looked more like she was half cat. \n\nShe was wearing a simple hooded pull-over sweat-shirt and short boat-shorts. Her legs were spectacular, perfectly muscled and slim, yet full and round. She had a bubble butt to rival Kelly's. \n\nWith a superb body like that, you would expect her to radiate sexuality, but this woman came off dangerously competent and very tightly controlled. \n\nShe gave me an appraising look. It was disturbingly direct. This little woman clearly operated on a different plane than the rest of us humans. I had seen that same look before, so I said, \"You must be Billy's sister Chelsea.\" \n\nChelsea Hughes-Meissner was an odd amalgam of incomparable intelligence and focused, almost laser-like intensity. She was one of the most intimidating people I have ever met.\n\nShe said, \"Yes, I'm Chelsea and this is my husband Tom.\"\n\nSo, he was the HUSAND, not the dad??!! I understood. You'd have to be very secure yourself, to coexist with a woman like Chelsea. I couldn't imagine any guy her age being confident enough to keep his macho intact married to her.\" \n\nThere was a miniature version of Chelsea standing next to her. She was also tiny. She had the same flawless beauty, auburn hair and dusky coloring as her mom. She also had the same outrageous Jade green eyes. \n\nThe little girl was no more than seven years old. But, she extended her hand graciously and said, \"My name is Brooklyn. Welcome aboard our vessel.\" ",
        "I thought, \"What kind of seven-year-old calls a boat a vessel??\" \n\nI said, \"This is my associate Kelly McMahan.\"\n\nKelly and Chelsea were already sizing each other up. That's because women are cats. Chelsea was clearly the smarter of the two. But then again, there are very few people outside of DARPA and CERN who are as smart as Chelsea Hughes-Meissner. \n\nOn the other hand, when it came to overall worldliness and practical street smarts, Kelly was clearly the alpha female. Plus, Kelly was armed.\n\nI would later bear witness to the fact that Chelsea Hughes-Meissner could literally alter your world as you know it. But for the time being, I simply settled into the luxurious upper lounge of the Cantius It's about 50 miles between Fort-de-France and Rodney Bay, on the island of St. Lucia. We made the trip in under three hours.\n\nTheir estate was a sight to behold. We were picked up by a creole character. He was their driver and he never stopped talking. He was some kind of French, English-speaking Rastaman, driving a 1953 Plymouth, which looked like it had just rolled off the assembly line. \n\nThe estate itself reeked of eight figures. And that was just the grounds and house. The staff probably added another couple of hundred thousand a year. \n\nThey put Kelly and me in a single room that had a great view overlooking the Atlantic. It had a couple of king beds. They just assumed. \n\nIt seemed too wimpy to worry about sleeping arrangements, given Kelly's hotness factor. So, I didn't ask for a separate room. If I had, they would have probably thought that I was gay, but coexisting with Kelly was going to test my resolve.\n\nThat evening, we gathered for dinner on the terrace. That told me that the Hughes-Meissner family was underplaying the reason why we were there. Chelsea's beloved brother was facing a treason charge, yet they were acting like they were entertaining out of town guests. \n\nI would later learn that the Meissner family had that kind of confidence, and I could see why. But, their seeming indifference was disturbing at the time. \n\nBoth women were in light tropical print dresses. The little girl was in shorts and a t-shirt. It said, \"Gurlz Rule.\" Meissner and I were in cubaverras, complete with after dinner brandy and Cohibas. The drinks were served by a couple of maids and a butler. \n\nEverything around us was green, and manicured to within an inch of its life. The rest of the scenery was the blue Atlantic. The birds were singing, and the insects were buzzing. It was a delightful hiatus from the traffic noise and bustle of a big city. \n\nWe could afford to kick back since McCarthy still thought we were on Martinique. That misdirection play was the reason for the boat-ride. After London's rain and chill, it was wonderful to sit in a topical evening, with the warm breezes and the sultry smells of the lush, verdant landscape. \n\nI couldn't help checking out Chelsea Hughes-Meissner. She was a jewel of a woman, flawless, perfectly arranged facial features and satin skin. But the odd part was her figure, which was lushly hourglass, even though she was perhaps a hundred pounds soaking wet. \n\nKelly has the same kind of shape, but she is seven inches taller and twenty pounds of delectable muscle heavier. This little woman was faultlessly proportioned, even a bit top-heavy. She was just so small. \n\nI quickly learned that, although she was physically exquisite, Chelsea Hughes-Meissner was something entirely different when she was the Red Dragon. Nonetheless, that revelation had to wait a day.\n\nAfter dinner, Kelly and I retired to our room. It was the first time we had actually slept together in the same room. She had been oddly restrained all evening. It was like she was thinking about something. When we got in the physical location she said, \"Are we sleeping separate, or together?\"\n\nI said, \"Separate baby, you know what would happen if we were ever in the same bed.\"\n\nFor a change, she didn't have a snarky come-back. She just flashed me an enigmatic look and went into the en-suite. \n\nWhen she came out she was wearing the outfit that she had been sleeping in all the time that we had been on the road. It was a Bears jersey with the number and name of her current boyfriend on the back. Zak is six-six and two hundred and fifty pounds. So, the jersey was like she was wearing a tent. \n\nShe had cut it off about three inches below her panty clad pussy. And, her magnificent, long muscled legs were on full display. She got into the king bed nearest the sliding door to the terrace, and turned her back. All I could see underneath the covers were the scrumptious mounds of her hips and her shapely shoulders. A bountiful pile of copper colored curls lay on the pillow. \n\nIt almost seemed like she was softly crying, but I knew that Kelly was way too tough to be doing girl things like that. I was wearing my usual pajama bottoms. I can't find a concomitant top big enough to fit my upper body, so I just sported a wife beater. \n\nI turned off the light and said, \"Night!\" The darkness enfolded us. There was nothing but silence on the other side of the room. \n\nI awoke sometime in the middle of the night to find that I was holding a big solid tit. It was attached to a naked woman, whose luxurious body was spooned with mine. It was clear that while I'd been sleeping, Kelly had decided to take the bull by the horn; so, to speak. \n\nShe had lost her jersey and was now snuggling her round naked buns into me. She had my arm pulled over her like the covers of the bed, and my hand draped across her chest. She actually appeared to be sleeping, even though the nipple was rock hard. \n\nWhatever abstract ideas I had about our partnership evaporated, along with all my inhibitions. Make no mistake about it, Pipe was going to be laid tonight.\n\nMy mind went through a million calculations. There was no doubt that I was going to fuck Kelly McMahan. So, for better or for worse, we were committed to the next phase. \n\nBecoming a couple involves implicit assumptions about how you will interact going forward. With all of the inherent variables, the potential for loss can be almost as daunting as the opportunity for happiness. Consequently, I knew I was running a tremendous risk. \n\nIt was inevitable that the dynamics of my life with this woman, who I had loved forever, were going to be different. And that difference entailed a lot of new and disturbing emotional factors. I was aware of the danger; even with the imminent prospect of getting my brains fucked out. \n\nIt's one thing to fuck a sexy woman. It is something entirely different to involve yourself in the ultimate physical intimacy with the sole person in your life whose loss would be unsustainable. Kelly had been my sounding board, conscience and best friend. That had been for so long that I couldn't imagine life without her. That's what I was facing, but we would deal with that later.\n\nKelly was either purring loudly, or snoring. I carefully moved my hand down to those delectable lips. Spread her petals and began to twiddle her little-man-in-the-boat. She let out a loud moan. It almost sounded like pure agony. Then she flopped violently over on her back. \n\nI could see in the ambient light that her eyes were wide open and staring at me. She slowly spread her legs wide, offering me access. I moved between those shapely thighs, supporting myself on my arms. Then, I inserted myself into her boiling hot, highly lubricated passage. \n\nShe grunted with sensation, threw her arms over her head to grab the rails of the headboard. Her big meaty boobs rose like the birth of a new mountain range. Her hips elevated. Her legs came up and she actually pushed me the rest of the way into her using her heels. \n\nShe groaned loudly and said, \"My GOD YES!! You have to fuck me. I've been waiting forever!!\" \n\nHer sex engulfed me, and we set off in that age-old motion. Her mouth was wide open, and she was breathing like a sprinter. I fastened my lips on hers and our tongues dualized. I realized that this was the first time I had ever kissed her. She moaned over-and-over through the kiss. It was a very long one. \n\nAll the time our hips never stopped pistoning into each other. That produced loud wet slapping sounds. She had her legs wrapped around me and her sex was red hot and overflowing. The hormonal smells were driving me nuts. \n\nKelly is as physically strong as a woman can be, with a rock-hard body and her big soft tits. She was writhing them against me, wrapped up in the sensation of sliding them back and forth lubricated by our sweat. \n\nShe was repeating over and over, \"What I imagined!! Sooooo Gooood!! Then she made a \"Thunk!!\" grunting noise deep in her chest. It sounded like somebody had hit her in the solar-plexus. And her sex began a series of rapid, pulses. \n\nI had never experienced such a powerful female coming sensation, even with a woman as hot as Pia. Kelly's eyes flew open in astonishment and she started shouting, \"Ahhhh, Ahhhhhhh, Ahhhhhhhhh!!\" \n\nHer legs quivered uncontrollably, like she was having an epileptic seizure and she set off wildly thrashing underneath me. It was almost like the sensations were too much for her and she was trying to escape. \n\nI had fucked one of the hottest women on Planet Earth. That was my dead wife Pia. But I had never come across a woman who went off like Kelly. It was like she had blown into smithereens. \n\nHer extreme orgasm set ME off and we had a couple of irrational moments while we both took care of business. I finally had to bail-out of her. Otherwise, my wiring was going to melt down. As I did, I shot in her, on her and over her, on the wall behind us. \n\nKelly was still flopping around in the throes of monster contractions, making agonized noises while her heels drummed frantically on the bed. In my case, it was more like my entire psyche and consciousness was rebooting.\n\nWe finally both calmed down enough that it was possible to conduct a rational conversation. I was lying on my side, head propped on one arm. She was looking angrily at me. If you haven't noticed, Kelly is not your classic weepy, over-emotional female after sex. \n\nI said, \"WHAT???!!\" \n\nShe said heatedly, \"What's the matter with you? We could have done that a year ago, you son-of-a-bitch??!!\" \n\nI whined defensively, \"I didn't want to take the chance of losing you.\" \n\nShe gestured down her incredible naked body and said, \"What the fuck does that mean??!! This is all yours!! It's always BEEN all yours!!\" She added angrily, \"You just had to TAKE it!!\"\n\nHer lovely face radiated pissed-off as she said, \"This doesn't change anything. All it does is add another dimension to our hitherto wonderful love. I'd shoot any other fucking male before I would EVER let him have what's yours.\" \n\nShe added fiercely, \"Now that you've finally gotten your head out of your ass, you're going to be stuck fucking this for the rest of your life; MISTER!!\" \n\nLike I said, \"Kelly is not your typical shrinking-violet.\" \n\nOnce we had broken the ice It was like we couldn't get enough of each other. I think my record was three times with Pia. Kelly and I surpassed that mark well before sun-up. So, we were both a little worse for wear at breakfast. \n\nSitting there over the Eggs-Benedict, I was interested in the interplay between Chelsea and her husband. He was a steady guy, almost sixteen years older. His main role was to serve as the foundation for her brilliance. In many ways Kelly and I operated the same way. She was the sharp edge of the axe and I provided the heft. It was a very effective combination. \n\nI explained the situation that Chelsea's brother Bill was facing. The husband nodded his head and said, \"That sounds familiar. Frameups always come down to money, or revenge, sometimes both.\" \n\nChelsea was radiating a mixture of white-hot fury and existential menace. It was an uncanny metamorphosis. It was as if this tiny little woman was in the process of unfolding into a fifty-foot Dragon; right there, over the breakfast canapes.\n\nShe said with cold and eerie calm, \"Do you think that others are involved?\"\n\nI said, \"There is no way the two Bennet's could pull this off. Bennett Senior is a member of the Joint Chiefs. So, he could set the gears in motion, but he is way too visible in the command structure to be directly hands-on. If he was pulling shit, then the people around him would know it.\"\n\nChelsea said, her voice hard, \"Maybe they do.\" \n\nI looked at her puzzled. She said casually, \"People talk. I count on that. I assume Bennett Senior has a staff?\"\n\nI said, \"Of course, they operate like every other military organization, everything from J-1 to J-8. In civilian terms that means they have hundreds of lower level staff.\" \n\nChelsea said, \"Good, that's exactly what I was hoping for. Somewhere, somebody has said something indiscreet. All we have to do is listen in.\"\n\nI said, \"There is no doubt about that. People in those agencies gossip more than teenyboppers at a junior high school dance, but this all would have taken place months, perhaps years, ago. So how do we listen in to something that's already happened?\"\n\nChelsea said menacingly, \"Let's go into my war-room and maybe I can dig something up.\" She was completely in control now. It was clear that this delicate little woman was an entirely different species when her blood was up. \n\nHer war-room was wall to wall monitors and a series of workstations on a desk which formed a half circle around a large chair. She sat and did a little typing, adding conversationally, \"There isn't a phone call made inside the Beltway that isn't recorded and stored at the Bumblehive out in Utah.\" \n\nI had no concept of what she had just said. \n\nShe continued with, \"It's the NSA's Massive Data Repository. The number hasn't been invented to describe the total storage capacity of that place. All of the mass communications in every major city in the U.S. are recorded and stored there.\"\n\nShe smiled conspiratorially, \"I worked there as a tech intern for a couple of weeks. That was back in my wilder days, before I met Tommy. A little investment in the future so to speak. They'll never find the back-door I planted.\" \n\nI didn't know what was more alarming, the fact that the U.S. Government was intercepting and storing everything from business conversations to phone sex; or that this beautiful little woman could so easily defeat them. \n\nShe grinned and said mockingly, \"Bluffdale Utah is the epicenter of polygamy in the U.S. I just love the dynamic of polygamists and Federal snoops fighting it out for turf in one little dusty town. They ought to make a movie about it.\"\n\nShe turned to me and said, \"I have an optimized ultra-high-speed compression algorithm that operates like the old Carnivore. It finds the meat, but it needs keywords. Tell me who to include and what I'm looking for. We can refine the search after we get a preliminary result.\"\n\nI listed all the names of the potential players; from prime suspects, like the Bennetts, to every low- level minion, like McCarthy. I also included the slut-wife's family. \n\nThe keywords were more challenging, since the greater the number of criteria the longer the processing time. We both knew that the answer was somewhere in that mass of data, but we were going to have to sort through exabytes to find it.\n\nFortunately, my little friend also controlled a fifty-million-computer botnet. So, she had more compute power at her delicate little fingertips than the NSA. The Red Dragon was indeed, a mighty creature.\n\nChelsea entered the names and keywords. We agreed to just search on words like \"Iran\"; \"Bennett\"; \"Hughes\"; and \"Esfahan\" to start. We could expand the search if we didn't get any hits, but it made good sense to cut right to the chase. If those two were the target, then their names would be in the communications of interest. \n\nChelsea turned to me and said brightly, \"This will take a while. So, why don't you go find lunch?\"\n\nI was still shaken by what I'd just witnessed. A lot of your sense-of well-bring comes from knowing that your dirty deep-down secrets are buried in the clutter of everybody else's. I now realized that communication in the U.S., voice and data, is recorded and searchable. So, it would be possible for the right people to pick through the details of anybody's private life at light speeds. \n\nThat also meant that there is no such thing as real privacy, no matter what Fourth Amendment rights you think you have. And of course, that raised Juvenal's old question, \"Quis custodiet ipsos custodes?\"; who watches the watchers?\n\nI felt like I needed to talk with Kelly about what happened last night. So, I invited her to walk over to the Naked Fisherman at the Cliff at Cap to eat, just the two of us. It just seemed like a good place to settle things with her. \n\nOn the way over, I told her about Chelsea's little trick; searching the government's secret stash of citizen information from 4,000 miles away. I said, \"Chelsea Hughes has so much power at her finger-tips that I wonder about her. If power corrupts. She must be one white Persian cat short of being a James Bond villain.\" \n\nKelly looked at me fondly and said, \"That's what Tommy is there for lover. He rules the roost, not her. He's her stabilizer, the part of the couple who provides steadiness and purpose. Chelsea knows that's his role. And she would be rudderless without him. It's the reason why they love each other so much.\"\n\nI was about to respond to that, when she speared me with a look from those incredible emerald green eyes and said dryly, \"I'm going to shoot you if you start going all girly on me. I love you, body and soul. We complete each other, just like the Hughes-Meissner's. That will never change. You're mine forever. Just accept it.\"\n\nThen she turned serious, \"I know that you were burned by Pia, but nothing changes between us. It just means we have fun and entertaining things to do at night, or any other place where the fancy strikes. Nothing about the rest of our life is different.\"\n\nI started to open my mouth and Kelly reached her right arm behind her, to the holster where she keeps the Barretta. She said, \"Shhhhhh!! I know I made a mistake getting Tedesco's DNA. It was stupid and thoughtless.\"\n\nShe actually looked remorseful as she said, \"Tedesco was just a mission objective to me. I didn't have the slightest idea that you felt that way about me. All I knew was that I was devoted to you and that I would do anything to make you happy. I knew that Pia's murder was eating you up. It was more than I could ever hope that you cared enough for me, that my fucking Tedesco would hurt you. I just didn't think the situation all the way through.\" \n\nThen she turned deadly serious, \"Now that I know how you feel; hear this. When I make a commitment, I honor it. I know what the rules are, and I'd die before I break them.\"\n\nThen she added mischievously, \"I'm yours until death do us part. If you want a ceremony then fine, but it changes nothing. I'll be yours until you say otherwise.\"\n\nIt was that simple. I knew that she meant it. We had been together long enough for me to recognize when she was being serious. She said with a big smile, \"So do we have an understanding. Or am I going to have to kill you, because no other member of the estrogen bearing species can have you now?\"\n\nI thought \"what a woman!! What a marvelous life partner.\" \n\nI held up my arms in mock surrender, smiled and said, \"Don't shoot baby. I accept your terms.\"\n\n*****\n\nI had just assumed that this whole clusterfuck was some sort of stupid revenge scenario, centering on Bennett minor paying Bill Hughes back for ruining his career. However, Hughes was nothing more than collateral damage. The real plot was much more devious and bizarre. \n\nHow did I know that? I literally heard every word of the conversations that set it up. Of course, it was the U.S. government and its eternal distrust of its citizenry that gave us that golden opportunity. ",
        "You have to be particularly incompetent, or stupid, to weave the net that you subsequently get caught in. But that was just the usual DC business, of the right hand, not knowing what the left one was doing. \n\nThe various intelligence agencies had scooped up the necessary evidence as part of the \"war on terror,\" and then they stored it in the Bumblehive because governments like their paperwork. Chelsea was able to plant the backdoor there, because the NSA is expert in electronic security, not the kind that protects it from its own employees. Edward Snowdon is living proof of THAT. \n\nIt took a massive amount of compute power to tease the real picture out of all the background noise. None of THAT would have been possible if Chelsea Hughes-Meissner hadn't used the 50-million slave computers in the Red Dragon's botnet to process exabytes of data. \n\nHer zombie computers, were a perfect illustration of why it is a bad idea to click on unknown links. Because, THAT'S how you JOIN a botnet.\n\nOf course, the power of the Red Dragon's botnet made this beautiful little woman one of the most dangerous people on earth. Chelsea Hughes-Meissner could drop huge corporations, or even whole Countries, to their knees; all of that from the comfort of her hard-to-extradite home. \n\nShe could wreak havoc on any computerized system, anywhere; Using her botnet. That included things like the automated systems that controlled a country's infrastructure, or military hardware. \n\nThe scheme that we uncovered was basically a variation of the Fat Leonard scam. The Naval Support Activity Bahrain was the crime-scene, not Singapore. \n\nNaval Support Activity Bahrain is home to U.S. Naval Forces Central Command and United States Fifth Fleet. It is the primary base for naval operations in the Persian Gulf. \n\nA host of contractors support the massive U.S. naval presence there. So, the reprovisioning business, serves up billions in pork. Hence, there is always an unseemly stampede among the contractors to see who can jam their snout farthest into the trough. \n\nI suppose I don't need to tell you who one of those contractors was? There was a lot of money involved and Bennett Minor was making it hand-over-fist. He had recouped everything he lost in the divorce and more.\n\nThe deal was simple. Bennett was wired in from the top, even though Bennett the elder wasn't directly involved in the scam. Every quartermaster, Admiral and ship commander knew the name. So, they were more than happy to play along, when Bennet the Younger approached them with $25,000 watches, $2,000 boxes of cigars and thousand-dollar-a-night hookers. \n\nAll Bennet wanted in return was a little information about the courses and mission objectives of the ships deployed to the Gulf. Knowing that in advance would let Bennett, \"Serve the Navy better,\" when it came to the positioning of fuel, services and other material. \n\nAnd, it would be a special favor in return, if the recipients of Bennett's largess made sure that their ships arrived where and when he wanted them to. That would give him a huge jump on his competition, but that was beside the point, wink-wink. It's standard operating procedure for government contractors to put their thumb on the scale.\n\nNaturally, all that tactical information was classified. That was for good reason. Knowing what the Navy was up to would tip the U.S.'s hand to every potential evil-doer in the Gulf. And, providing that information would end the career of the Captains and Admirals who accepted Bennett's \"favors.\" \n\nThe problem was that Bennett's clandestine bribery scheme was the worst kept secret in the entire Fifth Fleet. Not much gets past the people who live in that ancient nexus of cultures. Consequently, Bennett's activities were well known to the indigenous population. \n\nThe Islamic Republic of Iran is a mere 400 miles away on the other side of the Gulf from Naval Support Activity Bahrain. For obvious reasons, it considers the American naval presence in the Gulf threatening at best, and an act of war at worst. So, it is always plotting ways to disrupt, as well as endanger American ships. \n\nThe VAJA realized that the positioning and movement data for American ships would be an intelligence bonanza. So, they fired up their best agent to get it. \n\nThe U.S. uses technology to get the dirt on their business, diplomatic, or political targets. The Russians do it the old-fashioned way; meaning, pussy. They know that any guy will give it up for the right inducement. It just has to be persuasive enough. \n\nAs a result, Russia has surreptitiously made film-stars out of every mover-and-shaker who's ever visited their glorious Worker's Paradise. Holding that card gave them a lot of blackmail leverage. \n\nEkaterina Seminova was a true Russian beauty, twenty-six years old and literally engineered from the ground up to seduce secrets out of men. The little surgeries to create that face and body were masterful. The years of training in seduction and the bedroom arts were more rigorous than the Spetsnaz endure to earn their place in the ranks of Russia's Special Forces. \n\nWord had it that Bennett was constantly horney. So, the FSB was more-than happy to loan their deadliest asset to the Iranians. And Kat Seminova targeted Bennett like she was a cruise missile and he was downtown Pyongyang.\n\nBennett had no concept of how dangerous Kat Seminova was. A narcissist like him is always susceptible to self-delusion. So, he honestly believed that this superb beauty was put there to please him. The thought never entered his mind that it wasn't his slick skillset and his money that had attracted this incredible woman into his bed. He simply viewed her as his greatest conquest; self-validating proof of his enduring manhood \n\nBennet was regularly committing treason, by the time Kat Seminova was done with him. He was doing that by openly sharing his ill-gotten tactical information with her. He did it to impress her with his worldliness. I mean... What would be the harm, since she was just a pussy? \n\nOf course, that pussy was supplying her VAJA masters with high-grade intelligence, which was allowing the Revolutionary Guard to make U.S. ships miserable. It seemed like every day, routine littoral patrols were being harassed by swarms of fast-attack-boats, as well as dangerously positioned commercial shipping. \n\nThe Iranian actions were getting so prescient that people in the Navy's National Maritime Intelligence Center began to see a pattern. It looked like somebody was passing the Persians classified information about locations and courses. \n\nSince it was the Iranians, the Navy turned the matter over to the Naval Criminal Investigative Service. Bennett started to feel the heat when NCIS Special Agent Anthony DiNozzo showed up at his office. \n\nIt was a preliminary fact-finding visit, nothing more; just to touch base with the big operations, but it freaked Bennett out. He was smart enough to see that the people at NCIS might figure out that the information could ONLY have come from him. Obviously, he wasn't going to admit that to anybody. So, it prompted a call to daddy. \n\nHis old man wasn't pleased. However, daddy was willing to help him, since Bennett swore that he was only trying to get a competitive advantage. Bennett Senior was no more righteous than any other major player in the DC space. To him, concepts like ethics and morality are always in the eye of the beholder, and his idiot son was still his kid. So, Bennett called in his \"fixer\" to make the problem go away. \n\nCaptain Bob Roberts might have been a man with two first names, but he was ruthlessly single-minded in his devotion to the fellow who had put him in his undeserving position. His only role at JCS was to \"fix\" things for his boss. \n\nRoberts was a guy with a lot of contacts on the seamy side of clandestine operations. He learned from those contacts that the investigation was proceeding along the lines of Iranian espionage. He needed to find a fall-guy; one with the right access to the information and Iranian connections. \n\nHe knew who the real perpetrator was. Bennett Senior, had told him that. So, Bob Roberts had to set somebody ELSE up to get the NCIS investigators off Bennett Junior's tail.\n\nThat's the reason why, he tasked the Office of Personnel Management to work with the CIA to identify a sailor with intelligence responsibility in Naval Support Activity Bahrain's patch and Iranian ties. The guy at the top of THAT list was Commander William Hughes. \n\nBoth Bennett's considered THAT news a rare, unexpected bonus. There is nothing more satisfying than getting payback while covering your OWN ass.\n\nAfter the divorce, Billy had been reassigned to the Nimitz Operational Intelligence Center in Suitland, Maryland. A change of venue seemed like a wise move after the shit had hit the fan at his old posting. \n\nFortunately, Billy's focused, analytic mind made him particularly excellent at strategic intelligence. In fact, he was so good that he was reassigned as the Naval case officer for Iran at the U.S. Embassy in London. That was where he met Samreen Esfahan. Unfortunately, she just happened to have impeccable Republican Guard credentials. The frame fit so neatly that it was almost too good to be true.\n\nIt was everything Roberts needed to tie the whole mess up in a neat little package. He began to subtly connect the dots for the investigators. As a JCS staffer, he could read-in CIA and the Pentagon with respect to his suspicions. The evidence looked damning. \n\nHe tossed that bone to Lieutenant General Reynolds. Roberts knew that Reynolds was a numbskull, but he also knew that he could count on Reynolds following the trail without exercising the slightest bit of critical thinking. \n\nMilitary intelligence was now chasing after the wrong quarry. Bennett Senior, whose hands were as dirty as his underling, called Bennett Junior and told him in no-uncertain terms that this was the very last time he would save his bacon. \n\nNone of the players had considered the possibility that all of those conversations were intercepted, recorded and stored. It still wouldn't have been a problem, unless a set of utterly unlikely conditions hadn't been present. \n\nFirst, the hounds would have to suspect they were pursuing the wrong prey. They would have to be able to call on the help of the one individual who could access all the damning evidence. And finally, that individual would have to have the compute power to winnow through an impossible array of data, to find and document the smoking gun. \n\nThat implausible set of conditions was beyond anybody's reckoning. So, the matter was considered settled, and all was well with the world.\n\n*****\n\nBilly Hughes and I were sitting on one side of a long mahogany table. It was in a briefing room attached to the Senate Armed Services Committee Offices. There was one other person with us. She was perhaps the hottest sixty-year-old woman I had ever met.  \n\nI could see where Chelsea got her looks and her outrageous figure. The woman might be a grandmother, but she was still, world-class gorgeous. She was looking at her son with a mixture of intense love, and righteous indignation.\n\nThe mom, whose name was Maddie Hughes, was only a couple of inches taller than her daughter, but she radiated sexuality, Thick dark auburn hair, huge intelligent eyes, a mouth that was almost lascivious and a body that was an hour-and-a-half glass voluptuous. \n\nIt wasn't her unquestioned sex appeal that drew you to her. Maddie Hughes was a true force of nature. Her own daughter and my beloved partner Kelly were the only two women who rivaled her for sheer animal magmatism. You could almost feel the air crackle around her. \n\nMaddie Hughes was very womanly, in a dark attractive way, but there was no mistaking that there was steel underneath. And Maddie Hughes was royally pissed. I imagine you would be too, if you had just learned that your own government had tried to frame your favorite son for treason.\n\nSitting opposite us was the Chair of the Senate Armed Services Committee. The distinguished Senator from Maryland was a close personal friend of Maddie Hughes. Sitting next to him was the Secretary of Defense. So, the Executive Branch was represented too. \n\nPolitical kingmakers like Maddie Hughes can get meetings with important people, just by picking up the phone. Politicians, being the opportunistic souls that they are, understand the value of friendship; especially when that friendship is with big donors. That's because those donors can make a fortune appear in your campaign coffers, or in your rival's. It just depends on how pleased they are with you. \n\nBoth men wanted Maddie Hughes to be very pleased.\n\nThey both looked a little dazed. Maddie had just finished playing a fifteen-minute, \"greatest hits\" compilation of phone conversations that nailed down the shenanigans behind the framing of her son. Each of the culprits was heard in their own words; standing over the corpse, smoking gun in hand, shouting, \"I did it.\" \n\nThe sheer political juju that those recordings represented was awe-inspiring. We had spent days putting that recording together. Politicians have short attention spans. So, we had to make it easy for them to understand just how deep into the shit they were. Maddie Hughes had the Department of Defense by the balls and everybody in the room knew it. \n\nThe Secretary of Defense was a partisan street-fighter. He understood what this meant, but he had to give it the old college-try. He said, \"Where did you get this? Can you verify any of it?\"\n\nMaddie laughed in his face. She said, \"We both know it was hacked from Bluffdale. So obviously, I can't reveal the source, but let me assure you that it's the real-deal and we have hours of it.\" \n\nThen she leaned back languidly in her chair. It was like she was thinking about something. I noted that there was still very little sag in her huge tits. Don't judge me!! All men are hounds. \n\nShe said idly, \"I suppose I could give all this to CNN and the Post? THEY have the investigative resources to confirm it.\"\n\nBoth the Senator and the Secretary smiled. Players admire another player. The secretary said, \"What will it take to make this go away forever?\" \n\nMaddie said, with a serious look on her face, \"This is a major abuse of power. Don't you think that the people of this great Country deserve to know?\" The table erupted in laughter. Everybody appreciated Maddie Hughes delightful sense of humor. \n\nSo, the die was cast. The treason frame was surreptitiously removed from around Billy Hughes's neck. The mass of incriminating evidence led to a major purge of Navy ranks. Nobody in the Fourth Estate could figure out what was going on at DoD, but they dutifully covered the retirements and demotions. \n\nAt that point, at least four Admirals, sixteen Navy Captains and a member of the Joint Chief Staff were in the net and that was only scratching the surface. The real perpetrator, Bennett, was ALREADY going down for a very long time, but he was a nobody.\n\nAs fate would have it, Bill Hughes Senior's strange first encounter with Maddie Wilson, at that party all those many years ago, would ripple through many lives. \n\nEPILOGUE\n\nThe SecDef handled the purge in true Stalinist fashion. Bennett Senior was forced into retirement. His undeserving pension depended on him keeping his mouth shut. \n\nMcCarthy got to see what happens when you are on the other side of an abuse of power. He was disappeared along with all of his staff. They had the devil of a time finding equivalent jobs after that. \n\nReynolds lost a star and retired as a Major General. Falling just one star short of career high-country might have been the unkindest cut of all. \n\nBennett Junior didn't get the sentence he deserved. It was impossible to convict him on the espionage charge. Since, the phone conversations had been illegally obtained. But it was easy to convict him on bribery and conspiracy-to-defraud charges. He took a plea and then proceeded to sing like a gay little chickadee. \n\nSo, the Navy dropped a number of other similar indictments. \n\nBennett is doing seven years at FPC Alderson, colloquially known as \"Camp Cupcake.\" A super-max might have been a better choice, strictly for his own self-protection. The people he implicated didn't take kindly to being ratted-out. \n\nSuzy wasn't disciplined like Billy was. She simply couldn't deny herself. She probably didn't realize what a killer defect that was, until after the divorce. It didn't change her subsequent behavior, her beauty faded as one-marriage-after-another failed. And in the end, she was just another aging slut. \n\nOn the other hand, Billy was promoted to Captain. The problem was that, he had soured on the Navy, and every other form of government service. \n\nBilly was an intelligent guy. He spent a lot of hours in self-reflection. He finally realized that projecting his own values on other people was a fatal weakness. He had led his life honorably, believing that everybody around him would instinctively be honorable. That was how he was raised. \n\nIn the end, his strong moral upbringing had created a true Officer and Gentleman, but it had also built a serious flaw into his game. It was that blind-spot that had led him to trust his wife Suzy. After all, they had made a pledge to be true. Billy now realized how na\u00efve he really was. He just couldn't see the evil that lurked in people's hearts. He knew he had to be with people who shared his values and government work just didn't cut it. \n\nBilly knew that it was a matter of finding the right person and that was a crapshoot, but it starts with being honest with yourself. Billy finally got lucky meeting Samreen Esfahan. \n\nSamreen was even more sexually alluring than Suzy, but she was much smarter. She understood herself. She knew what her strengths and weaknesses were, and her self-concept demanded that she lead her life in a decent and honorable way. \n\nThat was all it took to make her a perfect match for Billy. Their exceptional children were raised with the same values. How could the two of them NOT produce beautiful and accomplished kids? \n\nAfter they married, they went to work for Billy's, Aunt Millie. It was purely volunteer work. They had plenty of money. That was because, for some reason the Pentagon had given Billy the full thirty-year pension. Neither Billy, or Samreen, guessed the reason for their windfall. It was just as well they hadn't. It would have been disillusioning, and they were both still idealists. \n\nThey found their real calling in, \"Doctors Without Borders.\" With Billy's organizational abilities and Samreen's natural people skills, they brought a lot of peace and happiness to some very unpleasant third-world places. The spiritual reward for that work paid them back in spades. It was what they had both been seeking all along\n\nBilly's sister Chelsea continues to live in luxurious peace and contentment on the Island of St. Lucia. However, a new and even more fearsome hacker presence, called the Red Dragon Gurlz, has appeared on the darkweb. Oddly enough it only seems to target teenage gossip sites. \n\nYou ask about Kelly and me? Well, absolutely nothing has changed. She is the same kickass, smart-mouth she always was. We do our best for our clients and we live a happy life together in our place down by Navy Pier. \n\nWe DID do a quickie wedding over one lunch hour. It was no big deal. Now we are even talking about kids. Between Kelly's feisty attitude and my thug nature our offspring will probably be the Antichrist.\n\nI was a lone-wolf for so long that I still can't believe that I'm not by myself anymore. It is comforting to know that there is one person in the world who would die for me. I hope she understands the same thing applies to her. Oh yeah, and the sex is still spectacular. ",
        "*****\n\nAUTHOR'S NOTE\n\nSometimes you start a story and the characters take over. That was the case with \"A Totally Unromantic Love Story\" which I wrote three years ago. That very first story spawned four other long stories plus this one. They were all fun to write. But it's time to go off in other directions. So, to those of you who have contacted me, \"This story is done. Thank you for your feedback.\" And to all of you, \"Thank you for reading me.\" \n\nD. T. Iverson"
    ],
    "authorname": "dtiverson",
    "tags": [
        "honor",
        "cheating wife",
        "hacking",
        "government scam",
        "good guy wins"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-first-deadly-sin"
}