{
    "title": "A Smokey Night with Mrs. J.",
    "pages": [
        "I had come home for Christmas break during my second year of college and decided to get together with a longtime buddy, a guy I'd known since I was ten. He'd elected to go to a local college and was still living at home so we decided to meet up at his place, about five blocks from where I grew up. \n\nOn the walk over, via a route I'd taken hundreds of times before, I was visited by a series of mental images that first took shape during my post-puberty years. That time when I began discovering and developing the fantasies that would drive me to cum in my bed late at night, frantically jerking my cock as the mental movie played out in my mind. And the images that drove those movies were fresh, usually just hours old. The truth is, when I would go to see my buddy...he wasn't the only one I was going to see. \n\nShe may not have been best described as 'beautiful' but she definitely wasn't unattractive. She was in her mid-40's with longer, brownish-red hair, only about 5'2\" and a little on the chubbier side. You could tell she had ample breasts but they weren't highlighted by her everyday clothing. Her look was decidedly Mid-Western although she lived in the Southwest. All in all...she was a \"Mom.\" \n\nAnd maybe because Moms in the good ol' days seemed to inspire a different kind of respect; she was still \"Mrs.\" to me. Even though I'd cum to her many times in my fantasies, whenever I was around her I could flip the switch, turn off the lust, and stay in line. So when I approached the door it was more about seeing a woman who had made me a lot of grilled cheese sandwiches over the years than who had been the object of a fantasy.\n\n\"Hey, there he is,\" she said while giving me a nice, brief hug. She invited me in as my buddy came around the corner with his \"Hey Man's.\" We all stood in the entry way for a few minutes as we made small talk. Mrs. J mentioned her road warrior husband was out of town on a sales trip but sent his best. I never really understood that relationship. He was one of those jowly, loud types who laughed too hard at his own jokes and didn't have an edit button. She was a lot more cerebral and introspective. Opposites attract I guess. \n\nMy buddy and I didn't have any real plans but Mrs. J wanted to leave us alone so we could, \"...go have fun but be careful.\" So we did what most guys who were too young to get in to bars did in those days. We drove around. After making a few passes down the main drag trying to look cool for girls, no easy task in my buddy's beat-up 1972 Vega, we headed over to a parking spot on top of a hill on the outskirts of town. \n\nIt was the spot that most towns had. Ours was called Flat Top which I never understood because the ground wasn't level. It was where I got my first hand job along with countless other teenagers over the decades. But tonight it would serve another purpose which became apparent when my buddy parked, reached in to the broken glove compartment and pulled out a joint the size of my finger filled with some of Humboldt County's finest. \n\nI enjoyed smoking weed but my friend was a fiend and after too many 'just one mores' we found ourselves thoroughly and blissfully high. We laughed until we snotted, decided that the universe is so vast that our galaxy is a speck of sand on another galaxies beach and agreed that my friend's ex-girlfriend was a bitch. When food became more of a necessity than an option we decided to head back to his place and fulfill our stoney needs.\n\n\u25cf\u25cf\n\nWe came in the front door and headed to the kitchen. When we did, we walked past the living room where Mrs. J was sitting on the couch and reading a book. \n\n\"Hi guys,\" she said not looking up, completely focused on the pages and oblivious to the world. And I'm glad she was because what my stoned, lustful eyes zeroed in on was the kind of scene that never failed to stir a reaction in me. Mrs. J was curled up on the couch, wearing an oversized, light pink robe, reading a mystery novel and holding a cigarette. The smoke curled up from her hand that rested on the arm of the couch and changed colors as it rose past the lampshade.\n\nI became aware of Mrs. J's smoking at about 15. Something about getting a hard on every time she lit up clued me in. I also knew this attraction I had was a little outside the 'norm' and needed to be kept private. But that sure as hell didn't stop me from sneaking glances when I knew she wasn't looking. This was before the days of the Internet. We didn't have access to the never-ending stream of porn of any kind that's available today. So those mental photographs mattered.\n\nHer smoking style was always relaxed and easy but with the way she performed a small cheek- pop before a quick snap after each drag before inhaling deeply and executing a tight, cone exhale she always conveyed a certain decadence and indulgence. It was easy to tell that she liked smoking and took time to properly enjoy it. \n\nWhile I never believed she was smoking for me personally, those occasions where I would steal glances felt like private moments. I would try and find ways to be around her so that if she smoked I could watch without being obvious. There were quite a few nights where the three of us would watch a movie where I was actually getting my own 'private screening.' \n\nMy friend and I moved past her towards the kitchen and began rooting around for the quickest, tastiest, saltiest, sweetest food we could find. As we were foraging through the kitchen Mrs. K. called to her son from the next room. \n\n\"Honey, please grab me a beer and bring it here, ok?\" With a heavy sigh my friend made it seem like an imposition. But I saw it as an invitation to embed an image in my mind that would come in handy later when I was laying naked in my bed. \n\n\"It's cool. I got it,\" I said to my friend and reaching past him to grab a Budweiser out of one of three six-packs in the fridge. \n\n\"Cool,\" he said and went back to trying to decide if chocolate and cheese would go together. \n\nAs I walked out of the kitchen and turned the corner to the living room I was greeted with the powerfully erotic image of one of Mrs. K's long, streaming exhales. The lights in the room were dim, except for the low reading light behind the long, beige couch where she sat, and the smoke from her full lips took on a bluish grey color. She was dressed in her flannel pajamas with her reading glasses dipped low on her nose and seemed engrossed in the reading she was finishing. \n\nWatching her in this private moment, I immediately felt my cock began to stiffen and I had to subdue the desire to rub the palm of my hand against its hardness. Luckily, I was wearing a long shirt that covered my quickly growing bulge but it didn't stop me from making sure it was pulled as low as possible. The idea of walking up to Mrs. J with a beer and a hard on, with my buddy in the next room, had \"awkward\" written all over it. \n\n\"Here you go,\" Mrs. J I said as casually as possible. \n\n\"Thanks very much,\" she replied, looking up from her book. \"Where's yours?\"\n\nI'd never had a beer in front of her before so I was a little surprised she asked. I was always a \"good kid.\" At least in front of her. \n\n\"Go grab a beer and tell me about school,\" she said with that kind of playful \"Mom\" sternness which immediately turned me around on my heels to head back in to the kitchen. \n\nMy friend was still rooting around for food when I nudged past him to grab a beer. As casually as I could I said, \"Your Mom said it was cool if I had a beer.\" He barely looked up and instead, in his stoned state, seemed more concerned with sizing up the leftovers. \n\nI went back the living room and took a chair by the far end of the couch which was positioned at a slight angle to Mrs. J. Although there was room on the couch I wasn't too confident in my abilities to be relaxed and casual to get much closer. I was also stoned out of my skull so a little distance would be a good thing. \n\n\"Glad to be back?\" she asked which started us off on a conversation about college life, my classes and just general catching up. I asked her about her work and hobbies and while she was polite in answering I got a sense there was a little boredom setting in. Her husband was always traveling and the only entertainment it seemed she was getting was from her mystery novels. The only time she seemed to get excited about something was when I asked her what she was reading. \n\nNow my excitement was a whole other story. It was building with each long slow drag she took off her Marlboro 100. Invariably, those drags would come in the middle of me relaying some story about college. It demanded me to focus on what I was saying and not what I was looking at. I always liked this part of my Mrs. J. fantasy. To keep the fantasy I had to keep it secret...in every way.\n\nEventually, my buddy came back in with a frozen pizza and waffle combination, (if Mrs. J didn't know we were stoned before she probably did now) and we decided to flip on the T.V. for a bit. My friend set the pizza down on the coffee table in front of the couch which meant I needed to move over to sit a little closer to Mrs. J. By now, my cock had kindly decided to show some manners so I wasn't forced to crawl over to the side of the couch in an attempt to hide my hard on.\n\nWe dug in to the pizza and turned on the T.V. My friend started flipping through the channels and when he landed on an old movie Mrs. J. quickly said, \"Stop there. Can we watch this one for just a little while? Just a little while, I promise.\"\n\nWhat we stopped on was Casablanca. Bogie and Bacall. And it just so happens that about 15 seconds after turning it on Lauren Bacall reached for a cigarette and in a way only she could, brought it to life with sensuality and power. As we watched the movie silently and with the pizza finished, Mrs. J. took the last sip of her beer and noticed mine was gone too. \n\n\"Up for another one?\" she asked with a slight smile on her face. It was a little less \"Mom\" and a little more \"friend.\" \n\n\"Sure,\" I quickly said and got up asking my friend if he wanted one too. He passed because he had to be at work in the morning, so I headed off to the kitchen, grabbed the beers and took my seat...this time on the couch next to Mrs. J. She gave me another little smile when I brought her the beer, took a long drink, set down the bottle and almost absentmindedly reached for her cigarettes, her eyes glued to the screen. \n\nFrom where I was sitting, and the angle of the couch to the TV, I was able to subtly see the profile of her face without her, or my friend, seeing me. She tapped a cigarette out of the pack, reached for her lighter and then placed the cigarette in her mouth. But as the scene in the movie was particularly dramatic, she just let it dangle there, the lighter at the ready just inches away but with her total concentration on the movie. \n\nMy cock grew harder with each moment. I was still very high and the dream-like state only allowed me to fall deeper in to the depths of my fantasy. Mercifully, she fired up the lighter and, never taking her eyes off the screen, moved it to the tip of her cigarette, collapsed her cheeks with a hard drag, inhaled without removing it from her pursed lips and slowly put the lighter back down on the table. The first blast of smoke came in a rush out of her nose as she then again dragged hard, popped her cheeks slightly as was her style, held the smoke in her mouth before executing a perfect quick snap, inhaled deeply again before exhaling a long, thin stream of smoke that danced across the flickering TV screen. \n\nMy cock was as big and full and hard as I'd ever felt it before. \n\n\u25cf\u25cf\u25cf\n\nWe sat like that quietly and watched the movie. I would try and concentrate on the screen but kept sneaking glances at Mrs. J. It felt different this time. Maybe it's that I'd been away at school and grown up a bit but I was looking at her less as the sexy smoking Mom I used to stroke my cock to and more like the sexy smoking woman I wanted to kiss. \n\nWe finished our beers at about the same time and she wordlessly nudged me to the refrigerator for another round...and then another. In addition to being high I started feeling the effects of the alcohol and I have a feeling Mrs. J was as well. She was sitting on the couch with her legs pulled up and to her side and seemed very relaxed. Actually, she looked a lot younger than I remember. \n\nAs the light from the black and white movie cast a moody glow around the room both Mrs. J and I heard a large snort from my friend who had fallen asleep in the reclining chair. We looked towards each other and smiled and went back to watching the movie. In my mind, it was like we were now alone...just the two of us curled up on the couch watching a great old movie. \n\nBefore long a scene came on where Bogie lit Lauren Bacall's cigarette. The black and white photography enhancing the obviously sexual undertone's the director was seeking. As I watched through my burgeoning fetishist's eyes Mrs. J, without taking her eyes off the screen said, \"You know, this movie was one of the reason's I started to smoke.\" \n\nJust the fact that she mentioned something about her smoking was enough to send my mind in a million directions at once. With all the casualness I could muster I came back with, \"Yeah...they sure make it look good, don't they?\" \n\n\"Yes they do,' she said but offered nothing additional. We sat for a moment more and then she again, reached for her cigarettes. Only this time when she reached for her lighter and tried to get it lit all it fired was blanks. She tried unsuccessfully a few times to bring to bring the flame alive before she set it down and started looking around the room. Noticing some matches on the table by her son she asked me, \n\n\"Could you grab those matches for me? And maybe one more round while you're up?\" she asked, pointing to her only half-empty beer bottle.\n\nI was fine with both those requests and got up to grab the matches. But instead of just handing them to her I made a half lame attempt at both with and charm with \"Let me get that for you Miss Bacall\" as I struck the match against the box. Considering my buzzed state, and lack of experience with women, I remember being pretty pleased with myself for that line. \n\nShe played right along and as my slightly shaky hand moved towards the long cigarette positioned just right of center of her perfectly formed mouth, she leaned in to it, holding my hand with hers which sent a warm shiver through my body, and drew hard, sucking the flame up in to the now smoldering tip. She pulled hard and after inhaling deeply said, \"Thanks Bogie,\" before exhaling a long, slow of smoke upwards and away from me face. I was mesmerized and stood staring at her face, the match still smoldering in my hand. She graciously leaned in to the match and blew it out. \n\n\"Uh...another beer, right?\" I stammered before turning and heading back to the kitchen. The cold of the refrigerator felt good as I leaned in to grab two beers from the back. It was like the cold shower I could have used as my cock stood rock hard against my belly and I, yet again, made sure my shirt was pulled as low as possible to hide my obvious arousal. \n\nAs I moved out of the kitchen towards the living room I was immediately stopped in my tracks. Mrs. J. was lying back in the couch and gently caressing the side of one of her ample tits. It was almost an absent-minded gesture. I took a step back behind the wall where I had a perfect sightline to see her take a hard drag and execute the kind of snap inhale only someone who was really concentrating on performing a perfect, slow snap could do. It was beyond smoking. It was smoking for pleasure, both visual and physical. Coupled with the totally unexpected image of her touching her own breast and my mind began to race. Was she excited or just scratching herself? She couldn't have known I could see her...could she?\n\nAs these thoughts flooded my mind I did my best to gather myself and headed back in to the living room. I must not have been as gathered as I thought because I walked right in to a telephone stand by the wall, sending the phone crashing to the floor. And in those days phones had bells. No way to hide this one. The noise jerked me back to reality and brought my sleeping friend right out of his chair. Shit.\n\nI quickly picked up the phone and offered my \"Sorry's.\" I noticed Mrs. J with a smile on her face. My buddy wasn't wanted one of those people who wake up well. He started mumbling to himself; obviously a little pissed off and noticed the movie was still on. \n\n\"Isn't this stupid thing over yet,\" he whined.\n\n\"No it's not over and if you hadn't fallen asleep you would have enjoyed it as much as we are,\" she mock scolded before turning to me and asking, \"Right?\"\n\n\"Yeah, it's kinda' cool man,\" I replied immediately, kind of happy that she and I were 'team' on this one and we'd moved past the jarring scene I'd just caused. He grumbled a bit more before saying he had to go to work in the morning and was going to sleep.\n\n\"You don't have to stay man,\" he said to me, maybe thinking I felt some kind of obligation to his mother. \"No, that's ok\" I answered. \"The movie's actually pretty good. Is it cool if I stay to watch the end of it?\" I asked him before turning to Mrs. J and saying, \"If that's ok.\" \n\nBefore she could answer he said, \"Whatever man. I'm going to crash. I'll give you a call tomorrow. Later.\" \n\nAnd with that he walked up the stairs to his bedroom and I went and took my place on the couch next to Mrs. J. and handed her a beer.\n\n\"Now listen. You don't really need to stay if you don't want to,\" she said. \n\n\"No, no,\" I too quickly answered. \"I really do want to watch the end of this. It's pretty good.\" That seemed to make her happy and she took a big swig of beer before falling back in to the couch, shifting her legs again so that her bare feet where about a foot away from my leg. \n\nWe both turned our attention back to the movie but, being in such close proximity to her while my mind was racing with sexual thoughts, I was having a hard time concentrating on the great acting and story but, given the circumstances, I tried to put what I'd just seen out of my mind. But the image of her languidly touching her breast kept crashing back. At least I knew I'd have the mental picture of what I'd be stroking my cock to the second I got in to bed that night. \n\nWe sat like that for about five minutes when yet again, there was Lauren Bacall lighting up a smoke. After one of her classic drags Mrs. J. said, \"Damn. I'm like one of Pavlov's dogs. When I see her smoke I need one too!\" And with that she reached to take her matches and Marlboro 100's off the table beside the couch. \n\n\"You know, I never asked you this,\" she said. \"But do you ever smoke?\" \n\nLike a lot of people who enjoy the image of smoking I did smoke, but it was very much in the closet and not daily. My smoking at the time was only reserved for special occasions like being drunk or high, which I certainly qualified for at the moment, or if I was really horny and masturbating. And since her question was more of an invite than curiosity, and the idea of sharing something as intimate as smoking with her set my testosterone in to high gear, there was no way I was going to turn down the opportunity. \n\n\"I guess I'm a rare, once-in-a-while, after I've had a few beers smoker,\" I said with a little embarrassment in my voice. I mean, this still was my friend's Mom for crying out loud. She knew me when I was 12 and I almost felt that I was doing something \"bad\" by admitting to her that I sometimes smoked. \n\n\"Well I know you've had a few beers. So what do you say? Is this a \"once-in-a-while\" Mr. Bogart,\" she coyly asked as she tapped out a cigarette from the bank and held it between two fingers in an offering gesture. \"Oh good,\" she giggled. \"Bogie's going to smoke for me. I just love a man who smokes,\" and with that she handed me first a cigarette and then the matches.",
        "So not only was I feeling the rush of doing something as \"adult\" as smoking with an older woman but I was doing so with a woman I had fantasized about for many years. As she brought the flame to my cigarette I repeated her actions from earlier and softly guided her hand to accept the flame. \n\nAfter taking a hard drag, fighting the brief urge to cough, and feeling the rush of nicotine fill my body and altered state of mind, I exhaled with an audible 'ahhh.' \"Feels good, doesn't it?\" she said as she took the still burning match and lit her own. She too took a long drag and made a little 'ahhh' with her exhale as well which caused us both to laugh. \n\n\"It's good to feel good, isn't it?\" she asked. \n\nShe didn't know the half of it. \n\n\"Yes it is. I try to keep 'feeling good' on my To-Do list,\" I said prior to replying with my own over-the-top pleasurable exhale. \n\nShe encouraged me by smiling and offering a \"That's the way to do it,\" before giving my leg a little pat and repositioning herself on the couch to turn directly towards me, foregoing any pretense about watching the movie.\n\n\"You know, there was another reason I started to smoke,\" she said almost conspiratorially. \"I was about your age and my first real boyfriend used to tell me he thought girls looked really sexy when they smoked.\"\n\n\"Oh, yeah?\" I responded as casually as possible in an attempt to hide my excitement. \n\n\"And you may not know this but 18-year-old girls really want the boy they like to think they're sexy,\" she said, reminiscing with a smile.\n\n\"So he helped get you started smoking,\" I asked, hoping she would continue down this train of thought.\n\n\"Yeah, \" she said, taking an deep, cheek-hollowing drag before pulling the smoke in to her lungs with a jolt and quickly blowing a long steady stream in to the air. \"I'll blame him,\" she said giggling. \"We used to like to go up Flat Top...you've probably been up there once or twice, right?\" she said teasingly. \n\nI didn't want to tell her that I'd been up there about earlier that night getting incredibly stoned with her son so I just off-handedly tossed off, \"Maybe once or twice.\" She giggled a bit. \"Well, then you know what happens up there,\" she said as if we now shared a secret. \n\n\"So he got you smoking up at Flat Top,\" I asked, trying to gear her back towards the subject I needed to hear most about. \"Is that what you'd do up there?\"\n\nShe laughed, \"Among other things but yeah, that's where he got me smoking.\" She paused to take another drag on her now half-smoked Marlboro. I did as well, mimicking the length of her inhale so when we each exhaled towards the same side, our smoke met and mingled in the air creating a sort of smoky communion. \n\nI think she noticed it too. \n\n\"I remember we were talking about how my friend Paula had started smoking. He asked if I'd ever wanted to smoke. I had an Aunt that smoked and I'd always kind of liked being around it. I remember sneaking a cigarette from her when I was about 14. I snuck in to the bathroom when she wasn't around and watched myself in the mirror.\"\n\n\"I did the same thing when I smoked for the first time,\" I blurted out too quickly. She paused. \"I mean,\" I explained with a little less energy. \"I kind of watched myself too. Just to see what it looks like, you know?\"\n\n\"Did you cough you lungs up too?\" she asked and we both laughed at the shared memory of our first cigarettes.\n\nShe continued with her story. \"So when my boyfriend asked if I'd ever smoked I told him that story. I remember how embarrassed he was when he told me he thought girls who smoked were sexy. When I told him I'd like to try and smoke for him he got all excited. But we didn't have any cigarettes!\" \n\n\"Ha!\" I laughed. \n\n\"But the next time we went up to Flat Top he came prepared,\" she said, taking one last hard drag and efficiently crushing out the cigarette in the ashtray. \n\n\"All I really remember about the smoking part was that it wasn't as bad as I thought it would be, she said. \"But I definitely remembered what it did to him,\" she added, alluding to the fact that it obviously turned her boyfriend on. Then she switched gears. \"Hey, I hope you don't mind me telling you this. I haven't thought about this for years. Maybe's it's the beers,\" she said almost apologetically. \n\n\"Are you kidding,\" I said. \"I love hearing stuff like this. So...you started smoking more after that first night.\"\n\n\"I did,' she replied reaching for yet another Marlboro 100. \"See what happens when I talk about smoking? I already want another one,\" at which time she brought the cigarette to her mouth for her practiced light up and drag.\n\nWith the smoke still in her lungs she said, \"So...\", before exhaling a large thick plume of smoke up in the air and over my head and continuing with, \"I guess with his liking to watch me and how it made me look and feel, I got in to it really quick.\"\n\nWe both were quiet for a second. She took another drag and then said, \"You can have another if you want.\" \n\nI did want another. I wanted to smoke with her. I also wanted to tell her how hot she was, how I'd jacked off to her and how I'd be jacking off to her later tonight. \n\nInstead I said, \"You're going to get me hooked,\" and reached over to the cigarettes on the coffee table. As I leaned over the table, cigarette in hand, I didn't see the matches. She noticed she had them sitting in her lap but instead of handing them to me she lit one, and held it up. \n\n\"Here you go,\" in a voice that was both throaty and friendly. Our faces were very close.\n\n\"Thanks,\" I said leaning in to accept her flame.\n\nShe put the match out with a flick of the wrist, tossed it in to the ashtray, took a long pull from her cold beer and then an equally long drag off her cigarette. The commitment she gave to each drag pulled me in like a moth to a flame. I had to turn avert my gaze which was threatening to become a stare. \n\n\"I guess everyone has a reason for starting to smoke, huh\" she asked. \"Some people want to look more grown up. Maybe some people have always been around it and it's no big deal. For me it was because I had a boyfriend who liked to watch me.\" She paused for a second and then in a quieter, almost coy tone said, \"And I guess I liked to be watched.\"\n\nIt was as if was talking to a girl my own age. There was still maturity in her ways but her tone was that of a younger woman. She was admitting a secret to a friend. \n\n\"And you know what?\" she said.\n\n\"What?\" I mumbled.\n\n\"Are we talking as friends? Just between us?\"\n\n\"Absolutely,\" I replied, excited at the idea that she considered us \"friends.\"\n\n\"You like watching me smoke too, don't you?\"\n\nShe said it very matter of factly. It was more a statement than a question. Her eyes were locked in to mine and it was like she was seeing right through me. I didn't know what to say.\n\nAnd then, with a soothing voice that was one part motherly and one part temptress, she reached over and rested her hand atop mind.\n\n\"It's ok. I understand.\"\n\nStill looking in to my eyes she brought the cigarette to her mouth. She hollowed her cheeks on the long, slow draw, gave a subtle yet perfect snap and with the smoke still in her lungs said, \"It's not like I haven't noticed you watching me, you know?\" \n\nWhen the last word came out of her mouth she slowly, languidly exhaled just to the side of my face, her lips pursed and her aim purposeful. \n\n\"And to tell you the truth, and remember this is between us, OK? I think I like it.\"\n\nHer body was faced toward me. I had my feet on the ground, my shirt pulled as low as possible over my very hard cock that was pushing so hard against my jeans it was becoming painful. I didn't move.\n\n\"Yeah?\" I asked softly.\n\n\"Yeah,\" she said. \"So do you? Do you like to watch me smoke?\" And with that she took a very hard drag, sucked it deep within her lungs and without moving her hand away from her mouth, hit the cigarette just as hard. She held it in for just a moment and then slowly, ever so slowly, again slowly exhaled past my face, but closer this time. So close. \n\n\"Yes,\" I breathlessly admitted. \"I like to watch you smoke.\" \n\nSaying out loud to someone for the first time that I found smoking attractive was one thing. But saying it to the woman who had fueled my smoking fantasy in the first place was pushing the limits to what a 19-year-old could handle.\n\nShe looked at me for a moment and then with equal parts curiosity and playfulness said, \"I wonder if you'd like what my boyfriend used to like?\" She gestured me towards her with the hand the held the cigarette between her small fingers. \"C'mere,\" she said. \n\nAs I dutifully, and nervously, leaned in towards her, she took another cheek-hollowing, power drag only this time she executed a stunningly slow open mouth inhale; the smoke floating slowly past her opened lips before she jerked it quickly in to her lungs. She then whispered, \"Close your eyes.\" I did as I was told. \n\nAfter a moment I felt what could only be described as the most intoxicating smell I'd ever encountered. I felt the coolness of her breath and tasted the sweetness of her smoke as she gently bathed my face with her exhale. I'd never smelled anything like it. It reeked of sex.\n\n\"Oh wow,\" I said. More words than that wasn't an option.\n\n\"Ahhh...so you like that too, huh?\" A smile crept across her face at her discovery.\n\n\"Yeah....that was wild.\"\n\n\"It was, wasn't it?\" she said, letting me know this pleasure wasn't a one sided affair. She looked at me for a couple of seconds as if she were making a decision. \"Would you like to see something,\" she asked more rhetorically than anything. She must have known that the word 'no' wasn't in my vocabulary at that moment. \n\n\"Don't move. I'll be right back.\" And just that quickly she got off the couch and headed towards the kitchen. \n\n\u25cf\u25cf\u25cf\u25cf\n\nI don't think I'd ever been as turned on, nervous, scared or excited before in my life. As soon as she left the room and I heard her heading upstairs I stood, unzipped my jeans and allowed my cock to escape from its confines. I happen to have a rather large penis and the relief I felt as I pulled it free and it slapped flat against my body was heaven. I wanted nothing more than to stroke it right there but quickly zipped up and again pulled my shirt low before sitting down. And as I sat there for what seemed like an eternity I kept pressing my hand against my rigid dick, running it from my balls to the tip. My heart was pounding with the uncertainty of what was next. \n\nI heard her coming down the stairs and stop in the kitchen. The sound of the refrigerator door opening was followed by the clank of bottles and then two tops being removed. She entered back in to the living room carrying the two bottles and an envelope. \n\n\"Tell me you're ready for another one,\" she asked without giving me a chance to reply as she moved to set the bottle on the table in front of me. She moved around the coffee table and then to the couch. This time, when she sat, she patted the cushion next to me as a sign to come sit with her. It was like we were getting ready to look at pictures from her family vacation. I was a little confused but dutifully went and took a seat beside her. \n\n\"OK,\" she started. \"I'm going to show you something no one...and I mean no one has ever seen before. So you have to promise me that you'll never, ever, ever share this with anyone else. Got it?\" \n\n\"I promise,\" I said, a little scared about the responsibility she was giving me. \n\n\"Now I mean it,\" she continued. \"If I ever hear about this getting out I'll tell everyone you tried to get physical with me and this is just your way of getting back.\"\n\n\"I would NEVER....\"\n\n\"Ssssh...ssssh...It's OK sweetie,\" she said soothingly. \"I know you would never say anything. I just want you to know how serious I am about this. Like I said, I've never shown these to anyone before and I really need to know it's going to stay between us. It's just something I think you'd enjoy and I want to make you happy. OK?\"\n\n\"Of course,\" I said with real sincerity.\"You have my word. I will never ever say anything. No matter what it is. I promise.\" And I meant it too. \n\n\"OK,\" she said as she began opening the envelope. \"My boyfriend didn't only like to watch me smoke. He liked to take pictures too. Would you like to see some of the pictures?\n\nDoes a fish like water?\n\n\"Really? Oh wow,\" I quickly replied, maybe a bit too anxiously. \"I'd love to see some pictures of you when you were 18.\" Realizing that she may have taken that as my lack of interest in an older woman, I quickly added, \"Not that you don't look great now. You do. I mean...well, you know...\" \n\nShe sensed my embarrassment and gently put her hand on my arm. \"I know what you meant. And thank you. That means a lot.\" I think she meant it. \"So,\" she continued. \"Do you want to see them?\"\n\nShe took out a stack of maybe ten, 4x6 photos. They were in black and white, a color palette I'd always enjoyed when it came to photographs. She went to hand them to me and then pulled them back,\" But there's one rule. You can't look at a new picture until I say it's ok, deal?\"\n\n\"Deal,\" I said and she handed me the envelope. \n\n\"Well, you know I'm going to need a cigarette for this one,\" and with that she tapped out another Marlboro 100. She put it in her lips and brought the match to the tip. I had lost all care about watching her and did so like a hawk. And with her knowledge of my interest, and her enjoyment because of it, she made a great spectacle of blowing out the match with her smoky exhale. Just like in Casablanca. \n\n\"Ok. Go ahead and open the envelope and look at the first picture.\" \n\nI held myself back from opening the envelope like a 6-year-old opening a package at Christmas. The first picture was of Mrs. J. Only it was an 18 year old Mrs. J. And she was cute! She was dressed in a button up sweater and had a youthful exuberance punctuated by a big smile. The photo was taken from the driver's side of a car. There was still daylight out and I could tell that it was taken at Flat Top. \n\n\"Wow. Look at you!\" I said. \"You were fine.\" I could have gone with \"Foxy,\" which was interchangeable back in those days, but 'fine' seemed a little more grown up.\n\n\"Yeah...\" she laughed. \"I was fine. Ok...now look at the next picture.\"\n\nThe next shot changed the energy in the room immediately...at least for me. It was a picture of Mrs. J. holding an unlit cigarette in her hand. She had it poised against her mouth as if she were waiting for a light. A look of seduction was in her eye. As I turned my head towards her I saw that same look. She brought the cigarette to her lips, snap inhaled so I could see it and then before she exhaled, \"Look at the next one now.\" \n\nI did as I was told. In this one, Mrs. J's cigarette was lit and she was just pulling it away from her lips. I could see the tiniest bit of smoke in her mouth and it was obvious to me that she was in the early stages of perfecting her snap inhales. At her boyfriend's request no doubt. \n\n\"Wow. This looks great,\" I said, turning my gaze from the picture to her and then back again. \n\n\"Thank you. Now look at the next one.\" We went like this through four or five more pictures, each taken at varied times of her smoking. Mrs. J. dragging, Mrs. J. inhaling and then Mrs. J blowing the smoke directly in the camera. In that one her lips were pursed like she was whistling and a thin stream was just inches away from the camera when the photo was taken. \n\n\"I bet he liked this one the best,\" I said knowingly. \"I know I would.\"\n\n\"Really? Is that the one you'd like best? You bad boy,\" she said playfully before she took another hard drag and, sitting just a foot apart from me, emptied her smoke all over my face. The smell drove me to new depths of desire and I felt my cock twitch against my belly. She kept my gaze and said, \"Now look at the next one.\" \n\nI tore away from her gaze and couldn't believe what I saw in the next picture. It was a hand, obviously Mrs. J's, holding a cigarette while resting her hand on a very large bulge tenting a pair of khaki's. \n\n\"Holy shit,\" I whispered. \n\n\"Do you like it?\"\n\n\"Yes.\"\n\n\"Look at the next one.\" \n\nThere was the same hand and the same cigarette but in this one the guy's big cock had been freed from his pants and was standing straight in the air. The little hand holding the cigarette was wrapped around the thick shaft. This was before the internet so my experience looking at dicks was limited at best. It looked long and fat and hard in her little hand.\n\nI looked at Mrs. J. and she had a look of both apprehension and excitement. It matched mine I'm sure.\n\n\"This is one of the hottest things I've ever seen,\" I told her. \"Wow.\"\n\nI couldn't take my eyes off it. I stared. Neither of us said a word. She was probably thinking about her ex-boyfriends big cock and how she had once been 18 and a little wild. I was thinking that I was sitting next to a woman on a couch while she was showing me photos of her jacking a cock off. We were both lost in worlds of our own but at the same time sharing the same experience.\n\nHer voice got quieter...more breathy. \"Now look at the next one.\" \n\nI couldn't believe what I was seeing. There was Mrs. J...that huge rod stuffed in her mouth as smoke billowed from her lips. She was giving him a smoking blowjob. Her eyes were closed with her mouth taking maybe half of his cock in to her mouth. Just as I was taking all this in I felt a powerful blast of Mrs. J's exhaled smoke hit my nose. It was like a jolt of electricity. \"Do you like that one best,\" she asked.\n\n\"Yes,\" was all I could muster. \n\n\"Look at the next one. I think you'll like this one too.\"\n\nShe had moved her lips off his cock in this one and instead, rested against the fat mushroom head. Her mouth was filled with smoke which was lit perfectly by the fading sun in the background. Again, as I lost myself in the image I smelled the sweet exhaled smoke coming from Mrs. J's mouth that she had directed towards me. \n\n\"Ok...last one. Are you ready?\" I nodded. \"Go ahead.\" \n\nI moved the final picture to the top of the stack and there it was. Cum. It was cum. And lots of it. All over Mrs. J's face. She had her mouth open and filled with smoke. Hot spunk was dripping from her cheeks, there were drops in her hair and her lips framing the smoke were wet and glistening. A beautiful, sweet 18-year-old girl covered in thick cum.\n\n\"That's hot, isn't it\" she said, her face nearly touching mine. \"Do you like that?\"\n\n\"Yes.\"\n\n\"Does it turn you on?\"\n\n\"So much.\"\n\n\"Do I turn you on?\"\n\nI turned my head to face her. \"More than you know.\"\n\n\"Is your cock hard,\" she whispered. I didn't know what to say. \n\n\"Is it?\" she asked. \"Is your cock hard for me?\" And with that she smoked my face again, forcibly exhaling a thick cloud that enveloped me. \"Tell me. Is your cock hard for me?\"\n\n\"Yes. Yes. My cock is hard for you. So hard. I'm so fucking hard.\" \n\n\"Tell me again. Is your cock hard for me? Tell me your cock is hard for me,\" she said almost pleading. \n\n\"Yes. Oh god yes. My cock is so hard for you. All for you.\" \n\n\"Do you want to touch your cock,\" she implored. \"Do you want to show me your hard cock and touch it for me? Do you want me to smoke for you while you stroke your big dick?\" \n\n\"Yesss,\" I hissed, more turned on and harder than I ever felt possible.\n\n\"Do it. Show it to me. I want to see it. Please. I want to see your cock.\"\n\nI began fumbling at my jeans...my hands shaking as I looked in to her eyes searching for a sign if this was really what she wanted. They were glued to my crotch and I was as hard as I've ever been. As I pulled my shirt up the head of my cock peeked over the tops of my jeans. \n\n\"Ohhhh....\" she whispered. \"You're very big.\" \n\nThis vote of confidence did wonders for my young libido. I stood up from the couch, slowly unzipped my jeans and pulled them down past my hips. Fruit-of-the-Looms were the underwear of choice in those days and they were under the fire-eyed scrutiny of Mrs. J as she scanned up and down the length of my dick. ",
        "I felt my breath getting more rapid and noticed Mrs. J's was as well. We stayed like that for a moment, me standing in front of her in my underwear and she gazing. \n\n\"Can I see it,\" she said quietly. \n\nI grabbed the band in my underwear, pulled them slightly away from my body, and slowly moved them down, each inch exposing more of my throbbing dick. I noticed a slight glistening on the head. Pre-cum. I was so hard.\n\nAs I moved the band lower I could hear Mrs. J murmur, \"Yes.\" Finally I reached my balls and then rolled the underwear down to meet my pants, about half way down my legs. \n\n'You, young man. Have a beautiful penis.\" \n\nMaybe it was the word \"penis\" or the seriousness in which we said it but I started to laugh and she laughed right along with me. I think the craziness of the moment hit us at the same time. But instead of our laughter causing us to think twice it created a nice, playful feeling. And it's safe to say that we were both ready to play. \n\n\"Sit down,\" she said, motioning me beside her. \"Lay back.'\n\nI moved so my back was against the couch. She grabbed her pack of Marlboro 100's and the ashtray which she set on the table to my left. She needed to lean over me to reach them and as she did her dangling robe rubbed against my exposed dick. I jumped. \n\n\"Oops, sorry,\" she mischievously said as she moved back, brought her feet up under her legs and positioned herself to my side. Her robe was still cinched tight around her chest but as she sat it rose up her leg, fully exposing about a foot above her knee. She was suddenly much less a woman and much more a girl. \n\nSensing my nervousness at being naked like this in front of her she helped put me at ease. \"Relax. This is about you feeling good, ok? I want you to feel good. You like to feel good, don't you?\"\n\nI did. I do. I was. \n\n\"Yes. I like to feel good.\" \n\n\"Would it feel good to touch your cock again,\" she asked.\n\n\"Yes.\"\n\n\"Yes what?\"\n\n\"Yes. It would feel good to touch my cock again.\"\n\n\"Then touch it. Touch it for me.\"\n\nI started slowly running my fingertips along my very hard cock. As I said, I got pretty lucky in the size department and knew by the look on her face that she was enjoying what she was seeing. While it took everything in my power to not roughly grab my dick, stroke it furiously and cum all over each of us I refrained. The moment demanded sensuality...not sexuality.\n\n\"That feels good, doesn't it? Mmm...it sure looks good. I love it\" she said encouragingly and then with a grin added, \"Is there anything I can do to help?\" As she said this she was bringing a fresh cigarette to her lips. We both knew exactly what she could, and would, do to help. \n\n\"Would you like me to smoke for you,\" she asked coyly. \"Will you play with your big cock if I do? Do you want that? Do you want me to smoke for you?\" She had the lighter in her hand and was holding it close to the cigarette that she had placed dangling between her full lips. \n\n\"Oh yes.\"\n\n\"Tell me.\" \n\n\"I want you to smoke for me. Please smoke for me. I want it. I want to stroke my cock and watch you smoke,\" I said, completely giving in to the moment and my desires. I was in an arena where fantasy met reality.\n\n\u25cf\u25cf\u25cf\u25cf\u25cf\n\nI lustfully watched as she brought the flame to life and directed it to the tip of her long cigarette. I instinctively moved my hand to the base of my cock again and slowly stroked upward, covering the head and slowly moving it down again. She drew hard, the orange glow of her cigarette turning brighter throughout her incredibly long, slow and measured drag. She inhaled fully before exhaling with purpose, focusing a tight stream of smoke from my chest to my cock that bounced off my body and lingered for a moment before wafting away. \n\n\"Yessss,\" I sighed. \"So hot. So fucking hot.\" She took another cheek hollowing drag as she kept her eyes glued to my hand languidly moving from the base to the head and back again. Her exhale this time was directed right at my cock, the smoke swirling around its length and my hand. I stroked a little faster, moving my hips up a bit to match my strokes. \n\nShe leaned away from me to ash her cigarette in the ashtray on the table and I noticed her robe was now looser around the top. As she bent over, her extended finger applying a firm tap to the half-smoked Marlboro, she looked over her shoulder and noticed my eyes glued to the tits. Still leaning over, and her eyes never leaving mine, she gently clutched her robe and gave a slow, steady pull to the fabric, slowly exposing her ripe, luscious and plump right tit...the fabric purposefully covering her nipple. I stroked a little faster. She smiled.\n\n\"Do you like that?\" she asked, nodding subtly in the direction of her ample breast.\n\n\"Yes.\"\n\nA smile crept across her face as she pulled it back even more, now exposing the very top of her areola which, despite her lighter coloring, was a rich brown; thick and large. I stroked faster. \n\n\"Ok....tell me this,\" she said while positioning herself next to me on the couch. She sat on her knees which had me looking up at her and asked, \"Do you like this too?\"\n\nWith that she leaned in slightly, took an enormous drag, inhaled sharply and deeply and once the smoke was nestled in her lung quickly took another. Reaching in to the opening of her robe she cupped the underside of her tit, pulled it free and exposed it fully to me. As she did this she moved her face towards mine and bathed me with a massive amount of exhaled smoke. \n\n\"Oh fuck...\" was all I could say. \n\nShe didn't say a word as she gently and slowly began rubbing her hand over her breast. She took another drag as I quickened the pace on my cock. After executing a perfect snap inhale she directed her exhale towards her hardening nipple, pinching it as the smoke reached its target. She moaned. \n\n\"Do you like my tits?\"\n\n\"I love them,\" I croaked, my voice filled with lust.\n\n\"I love your cock. Your big hard cock. Does it feel good to stroke your hard dick to my big tits,\" she said as she took another drag and then drove her exhale at my face with more force. The smell was turning me on in a way I'd never experienced. It was transporting me to a place that seemed to move in slow motion, filling my senses and driving my lust to new heights. I didn't respond. I was lost in the moment. \n\n\"Tell me you love stroking your dick to me,\" she almost pleaded. \n\n\"I love stroking my dick to you. I'm so fucking hard. You're turning me on so much. I...I...\"\n\nI couldn't finish my thought. My hand started beating faster, up and down as she began working her tit harder, grabbing it and squeezing it tight. She put the almost extinguished cigarette in her full lips, and then, clamping it between her teeth, moved her free hand to expose her other tit. She began rubbing them in unison, each hand melding the soft flesh before coming to together on her now very hard, big nipples and squeezing them hard enough to obviously walk the line between pleasure and pain. She powered a drag on the cigarette, inhaled deeply and exhaled just as sharply out her nose, the smoke driving down towards her now frantic hands as I stroked my dick with abandon. \n\nShe took one more hard drag while dangling the now depleted cigarette from her lips and then pulled it away, turning sharply toward the ashtray to extinguish it before quickly taking another, lighting it, dragging hard and turning back towards me, the top of her robe fully open and her big tits fully exposed, her exhaled smoke splashing against my stomach. \n\nI wanted to grab her. I wanted to pull her close to me and feel her big tits pressed against my face. I wanted to take one of her thick nipples and suck it hard, giving her the erotic pain she obviously enjoyed. But I didn't. To this point we hadn't had any real body contact at all and I wasn't going to make the first move. She was the engineer of this train and I was only too happy to be along for the ride. \n\nShe moved up next to me, tucking her legs and sitting on her knees she positioned herself to my side so I was looking up at her, her tits full and hanging boldly just a few feet from my face. Looking in to my eyes she took hard drag, inhaled sharply and leaned her head back, holding the smoke deep into her lungs before blowing a plume of satisfied smoke in to the air with a sound of satisfaction. I had slowed the pace of my hand on my cock and began a slow steady rhythm. I wanted this to last. \n\nWith her head still tilted back, she immediately took another drag, inhaled slowly, deeply and audibly, and then leaned forward until her face was no more than a foot from mine. She began exhaling slowly, the smoke building in volume as it exited her lungs, as she directed it with pursed lips all over my face, paying special attention to my nose. I breathed in, taking as much of her smoke as I could and began beating my cock faster. \n\nWithout moving, she took another cheek-hollowing drag, performed a hard snap and immediately took another. She reached out and touched my chin, directing my mouth towards hers. This was the first time we'd hard real physical contact and a jolt went through my body. Her exhale this time at one target...my mouth. She leaned in and steadily blew a thin stream past my lips, her face now just inches from mine. I inhaled it like it was pure energy, feeling it fill my lungs. I held it for a moment and let it escape from my body. The smoke danced in front of Mrs. J's face and I could see her breathe deeply.\n\n\"Now me,\" she whispered, holding the cigarette to my mouth. Without questioning I dragged hard and tried to match her level of sensuality as I exhaled towards her face. She breathed it in deeply, leaned back and began noticeably gyrating her hips. She slowly leaned forward and with a sort of stunned look on her face she quietly said, \"Wow.\"\n\nHer eyes trailed down my stomach to see my hand rhythmically beating my stiff cock. While she watched my hand move up and down my shaft I watched her bring her cigarette to her lips and suck the smoke directly in to her lungs, exhale with an audible sigh out her nose and then another drag, her eyes never leaving my cock. She then turned towards me and with the smoke still in her mouth, moved her face just inches from mine. She held it as if it were water and then opened her mouth wide. The white smoke seemed suspended in time. It slowly swirled but didn't try to escape. And then, like a shot, it was gone. Mrs. J. held the smoke in her lungs for what seemed like forever before moving even closer to my face and bathing me with the smell of sex. \n\nShe whispered, \"Jack your dick.\"\n\nI did. Harder and faster. She took another drag and repeated the performance, this time paying special attention to direct her exhale right in to my nostrils. I audibly moaned and her breathing got heavier. She then took a deep double drag, held it for just a moment and her face just inches from mine aggressively said, \"Fuck yeah. Work that cock,\" a pulsating wall of smoke coming out with her words. \n\nSomething about hearing Mrs. J. say \"Fuck,\" almost pushed me over the top. I wanted to drive my tongue in to her mouth. I wanted to grab her...take her. But I didn't. She had a lot more to lose in this situation if anyone found out and I figured that was a decision for her. And right now she wanted to watch me stroke my cock. And that was just fine with me. \n\nShe had power-smoked her last cigarette so she moved away towards the ashtray. I wasn't too worried, but was still hopeful, that she would light another. With her back to me I heard the sound of her tapping the bottom of the box to exude a smoke and the flick of the lighter. I continued stroking my cock, feeling almost like I was a voyeur who was getting off without being seen. Before lighting the cigarette she turned her head over her shoulder and smiled, her eyes dancing down to my rock hard dick and then back to meet mine. I'm sure all she saw was lust. \n\nWith her face in profile, she provocatively brought the flame to the tip, well aware of the effect her show was having on me. Her exhale was backlight from the still flickering but quiet TV and maintained the perfect shape of a cone until it dissipated in a mist across the room. \n\nShe set the lighter down on the table and moved back towards me. Only this time she slid towards the end of the couch, so she was looking almost directly down at my dick. She stared for a moment and then looked up at me, took a drag and then, keeping her eyes locked in to mine, twisted her mouth and dropped her head slightly to direct a stream of smoke at my cock. She smiled, dragged again and this time turned her face so she could concentrate her exhale on her target. When the smoke danced on my body I stroked even faster. It was one of the most erotic things I'd ever seen.\n\n\"That looks good, doesn't it?\" she asked, knowing what my answer would be. \"You like stroking your cock for me, don't you?\n\n\"So much,\" I whimpered.\n\nAnd then with a voice that was part maternal and part vixen she asked, \"Do you want to cum?\" \n\nI didn't respond. I couldn't. Hearing her say that was the encapsulation of the countless times I'd cum to her in my dreams. I was speechless. \n\n\"You do, don't you,\" she said, this time a lot more vixen that matron. She took a long, hard drag, inhaled slowly and without exhaling leaned towards me and said, \"And I do too. I want you to cum.\" She then slowly, seductively expelled her smoke across my eyes, down my nose and then blew the last of it past my open, hungry mouth. \n\nHer lips were now just inches from mine. She dragged again, the tip glowing cherry red, inhaled sharply and drove the smoke into my mouth. \n\n\"Yes. Do it. Work your fucking cock,\" she implored. \n\nTo hear her talk this way, to act this way, to smoke this way was too much. I could feel my cock begin to throb and my balls begin to tighten. I moaned. \n\n\"Yes baby...do it for me. I want to see it. I want to see your cum,\" she panted. She began hitting her cigarette again and again. Drags, inhales and exhales became one as she leaned over my face, the smoke thick between us and we each fell further in to the depths of animal satisfaction. My hand was now a blur as I pumped my cock as hard and as fast as I can ever remember. I bucked my hips and felt the familiar rise of an impending orgasm. But this was different. It was coming from a place I'd never experienced before. It was deep and unknown and had captured me totally. I was in a state of complete indulgence while continued to immerse me in her smokey world. \n\n\"I'm cumming,\" I whispered. \"Holy shit...I'm cumming...I'm cumming....\" \n\nMrs. J. practically threw herself at my cock. She grabbed it from me and drove her mouth deep down the shaft, pumping her hand up and down to match her bobbing head. Her mouth hot and wet. I came instantly...huge jets of cum exploded from my dick, over and over as she moaned, her lips glued over the head, struggling to breathe through her nose as my load filled her hot mouth. Little streams of cum slid down the side of her face. It was the most intense physical moment I had ever felt. \n\nAs I drifted off in to a post-coital state that felt like electricity coursing through my veins, Mrs. J. slowly brought her mouth off my cock, brought the now small cigarette to her lips, dragged and opened her mouth wide. There amidst the dancing smoke was my cum, more than I'd ever seen from a jack off session. She inhaled the smoke and then with a gleam in her eye, swallowed my load. When it was gone she gave her lips one last lick and then sensually exhaled her smoke in my direction. In all the movies I'd written in my mind I couldn't have come up with a better ending. \n\n\"Thank you,\" was all I could utter. And actually, I think that said it all. \n\n\"No,\" she replied. \"Thank you.\" She moved her hand to the side of my face. \"I mean that, \"she said with some seriousness. \"Thank you.\" \n\n\u25cf\u25cf\u25cf\u25cf\u25cf\u25cf\n\nLater, after we had cleaned up and were standing on her porch saying goodnight, me with still wobbly legs, I felt awkward. This was such a departure from how we had known each other I didn't really know what it all meant. I think she knew I was a little lost.\n\n\"You know what I liked most about tonight,\" she asked adding with a giggle, \"Besides the obvious?\" \n\n\"What,\" I answered. \n\n\"You were respectful of me,\" she explained. \"You didn't try and grab me. I felt safe. I liked that.\"\n\nI told her that she better know I really wanted to though. She laughed and said she had an idea. But there was something I need to know. \n\n\"When I was, you know...,\" I stammered, too embarrassed say the word \"cumming\" now that we were back to reality, \"Well, what you did. I have to tell you it kind of blew my mind. I wasn't expecting it.\" \n\n\"Well now,\" she said conspiratorially as she leaned in to me, \"I'm a good homemaker. We couldn't have all that hot, thick sweet cum messing up my nice couch, could we?\" \n\nAnd with that she gave me a quick kiss on the cheek and turned to head back in to the house. As she opened the door she stopped and said, \"Oh, I almost forgot to tell you. There's a Bacall marathon on next Friday night.\"\n\n\"Oh yeah?\" I replied, hoping but not expecting what was to come next. \n\n\"Yeah. Turns out I'll be home alone so I figured I'd just curl up on the couch and watch it.\" Her invitation was becoming crystal clear. \"Just thought you'd like to know.\"\n\n\"Well, thanks for telling me,\" I said barely able to contain my excitement. \n\n\"Well....you're welcome,\" she said with a young girl's tone that I didn't know existed before tonight.\n\n\"I mean,\" she continued. \"Who can get enough of Lauren Bacall, right? I could watch her all night. And I have to say, I think she's a great smoker, don't you?\" And with a knowing look and a slow turn she walked into the house, gently closing the door behind her. \n\nYeah, she's a great smoker. But not as good as you Mrs. J....not as good as you."
    ],
    "authorname": "saturswing",
    "tags": [
        "smoking",
        "smoker",
        "cigarette",
        "inhale",
        "mature",
        "smoking fetish",
        "milf",
        "older woman"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/a-smokey-night-with-mrs-j"
}