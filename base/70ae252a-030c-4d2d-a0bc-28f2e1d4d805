{
    "title": "After the Fall Ch. 01",
    "pages": [
        "Thank you to LaRascasse for the review and editorial comments.\n\n____________________________________________________\n\nIt was a little after ten in the morning, and Michael was already glued to the video feed from the front gate of the compound. Mariah was out there again, and she'd managed to attract a decent crowd today. He wondered how many of the men in the crowd had gathered just to watch her. An unseasonable breeze kept blowing a lock of her long brown hair across her face, and she kept tucking it back behind her ear. She had such delicate ears.\n\nShe turned her face into the wind, unknowingly looking into the hidden security camera. He tapped the controls to zoom in on her face. Her eyes were large and expressive with a fringe of dark lashes. They were the deepest, softest brown he'd ever seen. But today, instead of the gentleness Michael was accustomed to finding, her eyes flashed with anger. He chuckled. That kissable little mouth of hers was riling the crowd, urging them to force open the gate to the compound.\n\nHe zoomed back out to see how the crowd was reacting. That slob, Brad Hawley, the self-styled mayor of what was left of the town of Ashland, Colorado, was elbowing his way to the front. Michael could see at least three of Hawley's flunkies shoving their way through the crowd to catch up with their ringleader. It could only mean trouble, and Michael radioed security for reinforcements for the single guard behind the gate. The guard posts were hidden behind the walls of the compound and the gate was solid. The people outside couldn't see in. As far as they knew, the gate was unmanned. Security monitoring was primarily accomplished through cameras and microphones embedded in the walls surrounding the compound.\n\nHawley swaggered up to Mariah and looked her up and down with an exaggerated leer. \"What do you think you're doing, little girl?\" Mariah crossed her arms and shifted her weight to one hip, but said nothing. She stared at him silently until Hawley started to fidget. \"I can't heeeaaar you,\" he intoned in a nasal singsong. She didn't answer. \"Listen, you little bitch. As your mayor, I am ordering you to stop your rabble-rousing and get the fuck outta here.\"\n\nThat finally got a rise out of Mariah. \"Mayor?\" she sneered. \"Nobody ever voted for you. Back when we still had elections, you couldn't have gotten yourself elected dog-catcher.\" Michael had no doubt Hawley had started the confrontation with Mariah because he just couldn't tolerate someone else being in the spotlight, and it was obvious the buffoon had no exit strategy. Michael grimaced. As much as he enjoyed watching Mariah shred Hawley's fragile ego, he was worried about what Hawley might do to save face. Without taking his eyes off the screen, he radioed security to be prepared to intervene.\n\nOnscreen, Hawley sputtered, \"Who the hell do you think you are? Mayor Jackson left an order appointing me as his lawful successor. Everybody knows that! What do you know about politics anyway, you stupid cunt?\" Mariah smiled so sweetly that alarms went off in Michael's head.\n\n\"What do I know? Enough to know that there was never any legal provision allowing a mayor to appoint his successor. Enough to know that as a convicted felon, you weren't eligible to hold office anyway. Speaking of felonies, I hope you don't think anyone believes Mayor Jackson shot himself. Especially not with his right hand.\" Mariah smiled that saccharine smile again. \"He was left-handed, you know.\"\n\nHawley snarled and lunged. Michael saw Mariah's head snap to the side as Hawley backhanded her. Michael yelled into the radio, \"Now! Get her out of there NOW!\" Three guards emerged through a door disguised in the wall, but not before Mariah flew at Hawley, stomping his instep as she drove her fist into his nose. Hawley's goons caught up to him and they were grabbing at her. Everyone but Mariah froze in shock when Michael's security team appeared, but Mariah's back was to them. She was focused on Hawley. Before she registered their presence, one of the guards grabbed her around the waist and hauled her back with them through the door in the compound's wall.\n\nThere weren't any cameras inside the guardhouse, but Michael could hear her protesting through the open radio channel. She was demanding to be put down. Then he heard a grunt and a curse from one of the men. She must have landed a blow before the guard had a chance to let go of her. His men remained calm. They were professionals. Now, he could hear her insisting that they let her out of the guardhouse. One of the men must have been blocking the guardhouse door. He heard Ezra, the guard who had brought Mariah in, trying to reassure her. The radio beeped and Nate's voice came through, \"Orders, boss?\"\n\n\"Bring her to house,\" Michael replied. \"I'll see her in the main living room.\"\n\n\"Yes, sir,\" Nate acknowledged.\n\nMichael sat back in his chair, his heart pounding in his throat. He was really going to meet Mariah. He'd been making plans to bring her into the compound, but he wasn't ready yet. Admittedly, most of the logistical arrangements for her arrival were complete, but he was still fine-tuning his plan to make sure she stayed. He had watched her for so long through cameras located around the town. Over the years, she had become something of an obsession for him. He knew her well, but she didn't know him at all. In a few minutes, she would be in his living room.\n\nThe flood of adrenaline and excitement left him on edge. He decided to give himself a few minutes to calm down. He had waited for this for years and he planned to have all the time in the world with her. He could wait a few minutes more. Michael used the time to make a call to Marcus in the kitchen with instructions for lunch.\n\nIn the living room, Mariah prepared for the unknown. The guards who rescued her told her very little. They wouldn't even tell her why they rescued her or how they knew she needed rescuing. She hated to use the word \"rescued,\" especially since she was seconds away from laying Hawley out flat when she got snatched by the guards, but there was no denying that she wouldn't have lasted long against his goon squad. Still, she couldn't help wishing they'd given her just a minute longer before the rescue.\n\nMariah shook herself out of her uncharacteristically bloodthirsty thoughts. The adrenaline must not have worn off yet. Hawley was a worm and he wasn't worth getting killed over. She wasn't even that vindictive. The man was contemptible and a source of misery for a lot of people, but it would have been wiser not to provoke the altercation. When he hit her, she hadn't even tried to resist the invitation to lay into him.\n\nAnd where had punching Hawley gotten her? Literally hauled off by guards who rescued her like a pathetic damsel in distress. It would be embarrassing if the whole thing wasn't so frightening. One moment she was moving in to land a blow to Hawley's throat, and the next moment, someone grabbed her from behind, lifted her off her feet, and carried her off. She hadn't even known there were guards behind the gate. As far as she knew, the only people in the compound were Mr. Kincaid and his staff. She'd always assumed that his staff would be more along the lines of people who cooked and cleaned for him, not guards patrolling the compound.\n\nShe had no idea what to expect from Mr. Kincaid. She hadn't ever met him, and nobody in town had seen him in over a decade. He must be in his sixties by now. All she knew about him was that he was very wealthy and not well-liked. Back in the guardhouse, she heard Mr. Kincaid tell the guard over the radio that he wanted her brought to the living room. She assumed it was because she had been trying to incite people to charge his gates. That was certainly going to be awkward.\n\nShe tried to view this meeting through the lens of opportunity. This compound held resources that could alleviate some of the town's hardship. Instead of trying to get to those resources by raiding his compound, she could use the opportunity to persuade Mr. Kincaid to help them. To stand any chance of succeeding, she was going to have to hide her disgust. She looked around the formal living room with its expensive finishes and expensive-looking knickknacks. She thought of the grand foyer she'd been led through, and the grand staircase she passed on the way to the living room. Keeping her attitude in check wouldn't be easy.\n\nNot far outside this compound, people were suffering and dying. There was rarely enough for everyone to eat. Some people never had enough, and sometimes nobody had enough. It was hardest on the children. Poor nutrition left them susceptible to cholera, dysentery, and a host of other diseases. Two little babies died just last week, only hours apart. She was there with their mothers when the light went out of their eyes. They didn't even have names yet. Since the infant mortality rate spiked, some people stopped naming babies until they were a year old, believing the loss would be easier to bear that way if the child didn't survive. The anguish of the dead babies' parents suggested otherwise. In her own mind, Mariah had named them Tasha and Yuri. Nobody should die without a name.\n\nThe elderly were also hit hard by poor nutrition. Many families struggled to balance the needs of aging parents and young children. Most grandparents systemically starved themselves to avoid taking food out of the mouths of their grandchildren. It was worse when elderly relatives did not have that discipline, or worse, begged for food meant for the young children.\n\nPeople like Mariah were lucky. With only herself to support, she could usually find enough food to share. The problem was choosing who to share it with. No matter how hard she worked to gather food, there was never enough to share with everyone who needed it. Nor could she deprive herself. She had to cover a lot of ground to visit all the places she found food. If she grew too ill or too weak to walk long distances, everyone who depended on her would also suffer. Her garden was an unreliable source. The flooding this year had killed most of her plants, especially the potatoes. She replanted, but she didn't have enough seeds left over for a large crop. Everyone else had the same problem.\n\nScarcity of food wasn't the only problem. Many houses were falling apart. Her own house had been spared so far because of its sheltered location outside of out of town, but the majority of Ashland got hit regularly by storms that ripped off roofs and collapsed walls. And here she was, sitting in the beautifully furnished formal living room of a ridiculously large mansion. It even had air conditioning, which meant there was electricity. This wasn't the time of day when the rest of the town had electricity.\n\nSomehow, she needed to contain her anger at the inequity and channel it into something useful. It was hard to imagine that someone who had been living in luxury while people struggled and died would be interested in helping anyone. If Mr. Kincaid wasn't ready to do his part, it was up to her to figure out what he was willing to do. Maybe he would at least allow people to grow crops on his land behind the security of his fences. As it was, people spent an entire season growing crops, only to have their gardens raided by bandits before they were ready to harvest. Although she strongly suspected the \"bandits\" were the local variety, the restricted access of the compound should keep the crops safe until they were harvested by their rightful owners. Surely there was some concession Mr. Kincaid would be willing to make.\n\nBy the time Michael entered the living room, Mariah had calmed down considerably. She was examining an antique snuff box when he came in. He nodded to Ezra, who'd taken up a position outside the door. Ezra left without a word, but Michael thought he detected a hint of a smile on the man's face.\n\nHe approached Mariah. \"I'm Michael Kincaid. It's a pleasure to meet you, Ms. Williams.\"\n\nHer smile faltered, and a little crease appeared between her eyebrows. \"It's nice to meet you, Michael. Please, call me 'Mariah.' But, how do you know my name?\"\n\nMichael smiled and gestured toward a pair of armchairs arranged around a small coffee table near one of the windows. \"I'm afraid I have a confession to make, Mariah. It's a long story, so please, make yourself comfortable.\"\n\nMariah eyed him for a moment, then accepted his invitation, settling into one of the chairs. He sat across from her with the table between them. He was not at all what she expected. For one thing, he was not in his sixties. He looked close to her own age. She didn't think he could be more than 35. He was also much more pleasant than she expected.\n\n\"Would you care for a drink?\" he asked. \"I know it's not even noon, but this has already been quite a day. Perhaps you could use something to settle your nerves?\"\n\nShe replied quickly, \"No, thank you.\" Michael could see that she was impatient for the explanation that he was eager to postpone. He picked up a house telephone and dialed Marcus in the kitchen. Marcus picked up at the first ring.\n\n\"Marcus, could you bring me my usual? And a Bellini for my guest.\" He flashed a grin at Mariah, \"Just in case you change your mind.\" Mariah raised an eyebrow. How did he know she was partial to Bellinis? She hadn't had one in years.\n\n\"Now,\" Michael said, \"first things first. Are you okay?\" He leaned over to examine her face where Hawley hit her and was pleased to find that the blow hadn't left a mark. He hoped it wouldn't bruise later. \"Would you like some ice for your face?\" Mariah's hand flew up to touch her face, as if she just remembered she'd been struck. She waved away his concern with a laugh. Michael realized he wanted to hear that laugh again. Often.\n\n\"Thank you for asking, but I'm fine. Brad Hawley hits like a girl.\"\n\nMichael laughed. \"I saw the whole thing on the gate's security camera. I bet he's wishing he could hit like a girl. I think you might have broken his nose.\"\n\nMariah shrugged unrepentantly. \"Maybe he'll stay out of everyone's way and hide his face until the damage heals.\"\n\nA plump little man of southern Indian descent appeared at the door with cocktails. He announced his presence with a discrete \"ahem.\"\n\n\"Mariah, this is Marcus. He's an amazing chef, in addition to everything else he does around here.\" Mariah smiled warmly at Marcus as she thanked him for the drink, and Michael felt an irrational twinge of jealousy. He took a long sip of his drink as Marcus left, and was pleased to see Mariah do the same, despite her earlier protestations. The calmer she felt, the better this would go.\n\n\"When I said I had a confession to make, I was referring to why I know your name. You see, I know quite a bit about you. Until his recent death, my father owned this property. It was one of our family's vacation homes. When everything started going to hell ten years ago, we moved here because it was safer and more easily secured than any of our other properties. My father was extremely paranoid. He had cameras and microphones hidden all over town. I watched the town fall apart through the video feed. It was like watching a train wreck. I didn't want to see it, but I couldn't look away. And then I saw you. You changed the way I saw things. You made me care about the people out there. You were always helping everyone you met. You were so unselfish, and you never gave up. Mariah, you gave me hope.\"\n\nShe stared at him, wide-eyed. \"You've been spying on me all this time?\" she whispered.\n\nMichael nodded guiltily. \"I didn't think of it as spying, but I suppose that's not an unreasonable way to look at it.\" She frowned as she processed what that meant for her privacy. She took another drink of her Bellini. It was delicately flavored, fresh and sweet. It had been so long since she'd had alcohol that it affected her like it was her first time drinking it. Alcohol-induced warmth spread through her body. She put the glass down. She wasn't sure she wanted to relax. She wondered when she'd mentioned Bellinis in front of one of the cameras. Then she wondered what else she'd said or done in range of a camera. Just how many cameras were there?\n\n\"Do you have cameras in my house?\" she asked.\n\n\"No,\" Michael quickly reassured her, then added, \"As a matter of fact, I haven't been able to figure out where you live.\"\n\n\"Good!\" she snapped. After a moment she asked, \"Would you have installed cameras at my house if you knew where it was?\"\n\nMichael waited for her to take another sip of her drink before he answered. \"Not inside your house, but I would have looked for a way to put hidden security cameras around the outside of your house.\"\n\n\"Why?\"\n\n\"For your safety.\" Mariah didn't know what to make of that.\n\n\"If you were so interested in what was going on in town, why didn't you just come out and see for yourself?\"\n\nMichael considered the question a moment before answering. \"Until recently, my father controlled all access to and from the compound. Nobody was allowed out.\"\n\nMariah looked incredulous. \"You're telling me that for the last ten years, nobody has come or gone from this compound?\"\n\nMichael didn't know how to answer that without disclosing information he was not ready to give her. \"I'm saying the gate stayed closed.\"\n\nShe raised her eyebrows. \"You didn't ever sneak out over the walls?\"\n\n\"No,\" he answered simply, finding himself again unable to explain without touching on things that must remain secret for now.\n\nMariah tilted her head quizzically. \"Why not?\"\n\nHe was amused that sneaking out was her natural impulse. She was probably quite the little escape artist. \"That's another long story.\" He changed the subject. \"I was really hoping to talk to you about some plans I'm making for the town.\"\n\nShe was frowning again. \"What right do you have to make plans for the town? You've never acted like you're even part of it.\"\n\nMichael hesitated. He hadn't expected her to be antagonistic so early in this conversation. \"I just want to help the people out there,\" he explained.\n\nShe exploded. \"Help them? You've been staying safe and comfortable in a mansion eating finger sandwiches and caviar while people are hungry and sick and dying!\"\n\nMichael raised his eyebrows. \"Finger sandwiches and caviar?\"\n\n\"Whatever it is rich people eat in mansions while people starve outside their gates.\"\n\n\"What do you want me to do?\" Michael asked in exasperation. \"I'm trying to find a way to help. I don't have the resources to feed or house the population of this town. If I gave them everything we had here, they might get a few good meals out of it, and then they'd be hungry again.\"\n\nMariah was incensed. She fixed him with a glare, then lit into him. \"How can you sit here with food, shelter, and apparently unlimited electricity, and make excuses instead of trying? If you can't help everybody, help those you can. On my way in from the gate, I could see buildings that could probably house a thousand people altogether.\"\n\n\"Mariah, the buildings you saw on your way in could never house a thousand people. They'd have to be converted to house anyone, but that's not really the point. Suppose I let a thousand people in. What would they eat?\"\n\n\"The same thing they're eating now. Even if you can't feed them, you can let them live in safety. Doing anything is better than doing nothing.\"\n\nHe shook his head. \"Doing the wrong thing can be worse than doing nothing. In order to eat the same thing they're eating now, they'd need to leave the compound to get access to those food sources. If I let everyone come and go, the compound would be overrun by desperate people -- desperate people who would hoard whatever food they found and fight each other for a place to sleep in the compound.\"\n\n\"Word would get out quickly. We'd be mobbed by people from other towns carrying virus mutations the people here have no resistance to. The gangs would move in, and then the real violence would start. Within a week, the food would be eaten or taken by the gangs and everyone would be hungry again. People would die, Ms. Williams.\"",
        "Mariah snorted, \"How convenient, Mr. Kincaid. It seems you have your justifications all thought out. Carefully constructed excuses to do nothing.\"\n\nMichael set his brandy down on the table a bit too hard. He was starting to lose his temper. Mariah jumped up when his glass banged, and stood cross-armed, watching him. Michael sighed. He'd probably just lost any trust he'd managed to build. \"Why are you so hostile toward me? I've never done anything to you.\"\n\n\"Except for spying on me for years,\" she reminded him. She turned abruptly and walked to the window. She was furious, and she was having trouble sorting out why. She was upset about the invasion of her privacy, but she hadn't even begun to sort through her feelings about that. She knew it wasn't the reason for her hostility. She was angry about his failure to do a thing to help anyone, but he seemed to be preparing to help now, so that couldn't be the reason, either.\n\nIf Michael hadn't sent his men to help her, Hawley and his lackeys probably would have beaten her to a pulp. She was grateful to the guards who saved her, but she just couldn't seem to summon the appropriate gratitude toward Michael for his role in it. Everything about him rubbed Mariah the wrong way.\n\nEven his looks irritated her. His dark hair had a slight wave to it, and it was just a trifle overdue for a trim. His complexion hinted at Mediterranean heritage, and his coffee-colored eyes beneath dark brows were moody enough for the cover of a trashy romance novel. His mouth was a study in masculine sensuality above a firmly set jaw. He would have been too pretty for Mariah's taste except for a harsh, unrefined quality to his cheek bones and the subtle asymmetry of the bridge of his nose. The fact that Michael was so attractive only made her angrier. It was one more source of unearned privilege.\n\nAnd there, she realized, was her answer. He was the product of unearned, undeserved privilege. That's why she felt so hostile toward him. People like his family were why the people living outside these walls were suffering. Just over a decade had passed since society crashed and burned. The privileged wealthy broke the world with their insatiable greed and hunger for more power and privilege.\n\n\"The Fall,\" as the collapse of government and social institutions came to be called, happened at breakneck speed, but it had been a long time coming. The seeds of corruption were sown long before the bitter harvest. On January 21, 2010, the United States Supreme Court decided that corporations had the right to free speech, and that free speech included the ability to funnel unlimited funds into the country's political machines. Corporate influence grew until meaningful democratic representation was completely choked out. At noon on January 20, 2023, the term of the last democratically elected U.S. president expired without an elected successor.\n\nSimilar scenarios played out in democracies around the world. The world's wealthy and powerful were united by a common goal: amassing more wealth and more power. To do so, they used corporations as the vehicles to take full possession of the levers of governmental power. Years of power brokering and kingmaking yielded slates of unapologetically corrupt candidates beholden to the ultra-wealthy and the corporations through which they acted.\n\nThey bled the world dry.\n\nThe new corporate kings enforced relentlessly exploitive environmental policies. Like arsonists setting their own houses on fire, they stripped environmental regulations and actively discouraged renewable energy in favor of fossil fuels. The scattered voices of environmental reason among the wealthy couldn't stand against the onslaught of unbridled and self-destructive short-term gain.\n\nClimate change dramatically outpaced the models for worst-case scenarios. Global famine, disease, and wars for habitable land fulfilled the direst projections. Overwhelming numbers of climate refugees inundated the areas that remained habitable, resulting in widespread violence as established residents and newcomers competed for resources.\n\nLike the proverbial frog that boils alive if the water is heated so slowly that the frog doesn't notice, the world's citizens waited too long to act. By the time they were boiling, they were already powerless to effect peaceful change. Every revolution is proceeded by a tipping point -- the straw that breaks the camel's back. Throughout history, those tipping points were reached in different countries at different times. For the first time, the entire world reached a collective tipping point, and the fabric of civil society unraveled across the globe.\n\nIt started in Europe. Italy's government collapsed after a Russian-backed rebellion roiled the country. Other European democracies began to fall like dominos as civil war and armed rebellions raged through the continent. The rest of the world wasn't far behind. The United States, Canada, Germany, Finland, Sweden, and Australia held out until a series of pandemics decimated Europe and Asia and spread quickly to the rest of the world. The beleaguered democracies declared emergencies, but their corruption-riddled governments were too incompetent to take effective measures. Emergency declarations were used primarily to impose authoritarian measures to quell dissent against governmental ineptitude and to clamp down on revolt. Elections were suspended, and dictatorships were solidified.\n\nDemocracies were not the only casualties. Early during the crisis, Russia's GRU viewed the disasters as an opportunity to upset the balance of power and seize territory and natural resources. Russia's already stressed economy was hijacked to fund civil wars and industrial \"accidents\" in neighboring countries. Meanwhile, millions of Russians died at the hands of their own government's policy of quelling insurgency at any cost.\n\nChina was also suspected in contributing to the collapse of democratic governments through market manipulation and general economic skullduggery. Like the Russian government, China responded viciously to its citizens' dissent. Thirty-eight years after the Tiananmen Square Massacre, the rulers of China's Communist Party finally met their fate at the hands of the citizens they oppressed.\n\nDuring the later stages of The Fall, nations began \"going dark\" and dropping off the grid as their power sources and communication infrastructure were destroyed or disrupted. The internet faded one server at a time as electrical grids went down. Hostile countries hacked and destroyed each other's communication satellites.\n\nEven personally delivered messages became untenable due to the dangerousness of travel and the territorial restrictions in place to prevent the spread of disease after the pandemics struck. The United States lost contact with the rest of the world. It took two years to develop a courier system that could relay messages across the country without spreading contagion. By that time, there was no central command structure to make use of the system. In the absence of functioning government, states and counties were reduced to lines on a map. Everyone had to fend for themselves.\n\nAmidst the suffering and privation they set in motion, the wealthy barricaded themselves in luxury. When everything started circling the drain, they fled to bunkers and compounds and filled them with enough supplies for several lifetimes. Like this compound. Like Michael's family. Mariah realized Michael wasn't old enough to have contributed to The Fall, but he was the beneficiary of the extravagant wealth his father amassed through the economic and social injustices that led to it.\n\nThat had to be the reason she felt so much hostility toward Michael. She was blaming him for the actions of his father and his father's cohorts. She hadn't really been giving him a chance. Identifying the source of her anger was a start, but it didn't rid her of it. She would have to make a conscious effort to be fair to him despite her resentment. It would be easier if he stopped making excuses for doing nothing in the face of dire need.\n\nShe turned back to Michael and took a deep breath. \"If it's not feasible to let people come and go from the compound, why can't you bring in as many as this estate can support? It's huge. If the land was converted for crops, it could surely support a large number of people.\"\n\nMichael nodded, encouraged that she was engaging with him despite her anger. He suspected that she had no idea that her feelings were written all over her face. He could see that she was still furious as easily as he could see that she was trying not to show it. \"Based on my research, I think we could support one hundred people. It might be more, but we'd need to start with a hundred.\"\n\nShe gaped at him. \"You mean you know it would work, but you haven't done it? Why? Why even do the research if you're not using it?\" Her cheeks were coloring again as her anger rose.\n\n\"There are two reasons I haven't done it. The first is that I had no ability to do it until very recently. My father died about two months ago. While he was alive, he adamantly insisted on complete isolation. He had the access codes, the keys, and the security force to enforce his directives. Nobody was allowed through that gate.\" Mariah looked unconvinced, and Michael had to admit that when he said it out loud, it seemed pretty thin.\n\n\"For God's sake, Michael. You were an adult. Are you saying you were powerless?\"\n\nMichael struggled to find an explanation. \"I wasn't powerless. My options were limited, but I acknowledge that I didn't try very hard to explore them. I don't know how to explain it in a way that would make sense to you. This was always a very authoritarian household and my father punished disobedience severely. Perhaps I was conveniently blind to chances I could have taken.\"\n\nMariah appeared to be somewhat mollified by his acknowledgment of fault, but he knew that what he had to say next would upset her again.\n\n\"Whatever mistakes I made in failing to oppose my father in the past, he is no longer an obstacle,\" Michael began.\n\n\"Then why?\"\n\nMichael held up his hand in a gesture for silence. \"That brings me to the second reason I haven't brought anyone in.\" He stood and walked over to the window where she was standing. \"Let's suppose I tell you that we can let one hundred people in tomorrow.\" A smile lit up her face. It was so infectious that he felt a smile forming on his own face, until he realized how cruel his next words would be.\n\n\"Which people, Mariah? Which one hundred people would you save?\" Her face fell, but he persisted. \"Would you save your friends first? I know you don't have family around here, but what about those closest to you? Would they get the spots inside the compound?\"\n\n\"Of course not!\" she responded angrily. \"What kind of person do you think I am?\"\n\nMichael pressed on. \"Then how would you do it? If you choose the people with the greatest need, you'll bring in the people least able to grow crops and support themselves. The elderly and the disabled need help the most, but can contribute the least in terms of labor. Families with many small children are also in great need, but they would bring many mouths to feed and only one or two adults who could work to support them. It just won't work that way. So how would you do it? Which one hundred people?\"\n\nMariah was momentarily at a loss. \"You can't give up just because it's difficult. You have to find a way.\"\n\n\"I agree. So, what is that way? How do you pick the one hundred people?\"\n\nAfter some consideration, she responded, \"I think the fairest way would be to match the people who were allowed in with the work that needs to be done. Hopefully, they could help support people outside the walls. You would need to bring in enough people who could farm, build and repair things. Without the right equipment, it would take a lot of people to dig fields and grow and harvest crops.\" She glared at Michael. \"But I suppose you're going to tell me why that won't work.\"\n\nMichael pinched the bridge of his nose between his fingers and sighed. \"Let's assume you find a fair way to choose people with the right skills to come in. What about their families? A metal worker is important, but Ashland's only metal worker has six small children. The one hundred-person quota will fill up fast with nonproductive people unless you're willing to separate families. If you bring in the metal worker and leave his family outside, what will happen to them?\"\n\n\"And what about the other people left outside the compound? They'll be furious when they can't come in. On top of that, we would deprive the town of labor and skills it needs. What do you do about a doctor? If we have one hundred people living in here, we'll need a doctor, and there's only one in town. I will not permit people coming and going from the compound -- not even the doctor. Either we have no doctor in the compound, or the town loses its doctor.\"\n\n\"It's easy to villainize me for not bringing people into the compound, but it's different if you put yourself in my position and face the realities of all that would entail, isn't it? It's hard to be self-righteous when you're the one deciding who gets saved and who is left outside to suffer.\"\n\n\"Think about it, Mariah. Which families are you willing to tear apart? Do the people inside the wall die without a doctor, or is it the people outside who must die unattended? How do you tell the infirm and elderly that they aren't useful enough to come in? What do you say to the children whose parents come in without them?\" Michael knew he was being unnecessarily cruel, but he was determined to drive his point home, to make her stop blaming him.\n\nMariah turned away and looked out the window. Her eyes stung with tears she refused to shed. It had been foolish to think Michael would help. All he was interested in was justifying his own inaction. He was just tormenting her, teasing her with the possibility of helping people in desperate need and then taunting her when she grasped at the hope he held out. She wanted to leave, but she couldn't. She couldn't leave until he unequivocally extinguished the last flicker of hope.\n\nMichael silently cursed himself. The last thing he'd wanted was to hurt her. The pained look in Mariah's eyes before she turned away cut him to the quick. She touched the window, as if she needed to brace herself, or perhaps to reassure herself of the reality beyond the glass. She didn't make a sound, but he was afraid she might be crying. She was looking away from him and he couldn't see her face.\n\n\"Mariah...\" He put his hands on her shoulders, and it startled her. \"I'm sorry, Mariah. I don't want to upset you.\"\n\n\"Don't you?\" she asked softly. She heard him sigh. Reluctantly, she allowed Michael to turn her to face him.\n\nHe tilted her chin up until she was looking him in the eye. \"No. I never want to hurt you. I was angry and defensive. Things came out the wrong way.\"\n\nShe looked away. He might regret it now, but she knew he had wanted to hurt her when he said it. \"What do you want from me?\"\n\nThe question caught him off guard, and his heart jumped into his throat. The answer was \"everything,\" but he caught himself before he said it. There was much more he needed to tell her before he made his move.\n\n\"Please, Mariah. Come sit down.\" She seemed disinclined, but allowed him to take her hand and lead her back to the chair. He picked up the house phone again and asked Marcus to bring two more drinks. He winked at Mariah. \"I won't tell if you don't.\"\n\nMichael waited until Marcus brought their drinks to begin. \"I've been planning to meet you. I hadn't figured out how to arrange that, but today, Brad Hawley forced my hand. As far as I know, it's the only useful thing the man's done in his life. I want to work with you. I'm serious about doing something to help, and I know you can help me do it. Everything I said about the obstacles we face is absolutely true, but I've been thinking about this for a long time and I have some ideas.\"\n\n\"As I told you earlier, I've watched you for years. Now that I'm saying it out loud, I realize how creepy that sounds. I didn't mean to stalk you. I was still in college when my father called me home and locked down the compound. I was isolated, anxious about what was going on outside, and lonely. I watched everyone in town, just like a person might people-watch at a street cafe. Soon, I found myself looking for you in the camera feeds.\"\n\nMariah conceded to herself that Michael's explanation did put his spying in a better light. That didn't mean she wasn't still angry about it, though, and it definitely didn't mean she was going to let him off the hook for it. He was disarming, which was reason enough to remain guarded. He was likeable, but she didn't want to like him. She did, however, want to hear more about what he was planning and how she fit into it.\n\n\"I know you're angry because you think I did nothing to help anyone while my father was alive. I'll make a proposal today after we talk more about my plans, and if you accept it, you'll be helping me with the project. Before you decide whether you want to work with me, I want you to understand me a little better. I'd like to correct your impression of me, but to do that, I need to tell you something that you must keep secret. If you want to hear it, I need your solemn promise.\"\n\nMariah considered. \"I would like to hear it, but I take my promises very seriously. I need to know more about what I'm promising.\"\n\nMichael laughed. \"It's nothing nefarious. Well, my father would have found it nefarious, but you wouldn't. Nobody was harmed.\"\n\nMariah nodded. \"Okay, I promise.\"\n\n\"I told you nobody went out through the gate, and that was true. I'd rather not go into the details, but I found a way to get supplies to Lois Hubbard for her to sell in her store. Nobody in Ashland has seen what the inventory is like in other towns, so nobody realizes how well stocked Lois' store is comparison. I know she charged people for the supplies I gave her, but it would have raised questions if she didn't. We agreed on the price she would charge so I could be sure it stayed as low as possible without being suspicious. Her profits compensated her for the risk she was taking. There was no telling how far my father might have taken things if he found out what we were doing.\"\n\nThe expression on Mariah's face softened as she listened to his story. \"I wouldn't have taken you for a smuggler, Michael Kincaid. I like it.\" She smiled at him, and his chest constricted. For the first time today, she looked relaxed. He loved seeing her like this.\n\nA polite cough at the door caught his attention. It was Marcus, announcing lunch. Michael turned back to Mariah. \"Please, join me for lunch and we can talk about my project.\" He took a chance and joked, \"I'm afraid we don't have any caviar, but I'm sure Marcus could arrange finger sandwiches.\"\n\nShe cringed. \"I think I could forego the finger sandwiches.\"\n\n\"I think you'll like Marcus's pasta much better.\"\n\nThe dining room was huge, but Marcus had created a more intimate setting by placing a large floral arrangement to partition off one end of the enormous table. Despite the formal architecture, the cream walls and white molding made the room feel surprisingly light. Whoever designed the room had avoided the heaviness of a single, large chandelier by placing three small chandeliers above the ends and middle of the long table. Mariah admired the flowers on the table. \"They're gorgeous.\"\n\n\"Marcus never puts flowers on the table for me,\" Michael pretended to pout, earning a fleeting smile from Mariah. At least she was trying to give him a chance.\n\nLunch was pleasant. The salad was delicious, and Mariah savored the lemon and herb linguini. A dish of sliced grilled chicken accompanied the linguine. Michael added the chicken to his pasta after Mariah declined his offer to serve it to her. \"You know I don't eat meat, don't you? That's why the chicken wasn't in the pasta.\"",
        "Michael smiled. \"I've been spying, remember?\"\n\nAs they ate, Michael explained his ideas in general terms. He wanted to bring in a relatively small number of people to plant crops and prepare housing for additional people. Once they scaled up to capacity within the compound, he wanted to start expanding in outwardly advancing rings. Maintaining good relations with the town was critical to expansion. There was enough green space around the walls of the compound to expand significantly without encroaching on the town, but things could go badly if people felt threatened.\n\nMariah was astounded by the scope of Michael's ambition. He wanted to open a school, set up a clinic, and guide people back toward democratic self-governance within the compound expansion. He had even secured a supply of solar panels that he hoped would be the start of a new electrical system. All the buildings in the compound already operated on one hundred percent solar energy. Ashland had a functioning power plant, but electricity was sporadic and unreliable. It was a constant struggle to find fuel to burn to operate the power plant. When everything was working properly, which was infrequent, the electricity was on for an hour a day. If people had access to reliable electricity, they could make use of the tools and technology they already had.\n\nAfter lunch, they returned to the living room. Mariah was animated, and Michael could see her mind was racing with possibilities. He had enjoyed talking with her about the project over lunch, but now he was approaching the make-or-break moment. He took a deep breath and forged ahead.\n\n\"I can't tell you how much I've enjoyed talking with you about this project. Now that you know what I want to do, I think you can see how necessary you are to the undertaking. I need someone who has the people's trust, who will work selflessly, who possesses intelligence and a broad knowledge base, and who can negotiate the complexities of our relationship with the town. That person is you.\"\n\nWith difficulty, Mariah refrained from rolling her eyes at the flattery. She wasn't Mother Theresa, Nelson Mandela, Mahatma Gandhi, or their triple reincarnation. She was just a mostly decent person who worked hard and didn't want to see anyone suffer.\n\nMichael continued, \"What we haven't talked about yet is the need for absolute security and secrecy until each stage of the project is completed. There are external threats I can't discuss with you until you are on board, and those threats require us to complete the project without its true nature being revealed. I know how Byzantine that sounds, but I can't think of a better way to explain it without giving you more information than I can allow until you have committed to the project.\"\n\n\"That brings me to my proposal. In order to work with me on the project, you'll need to move inside the compound. There is a bedroom already set up for you. I am in the process of converting a spare room to an office for you.\" He smiled. \"I wasn't expecting you quite so soon, but you can share my office while we finish getting yours ready, should you accept my proposal.\"\n\n\"My proposal involves three non-negotiable conditions. First, you will follow my instructions without questions in all matters related to security. This includes the security of the compound as well as your personal security. I know you are independent and that you're comfortable taking risks, but I will not tolerate you endangering yourself. On the limited occasions you leave the compound, you will be accompanied by a guard. You'll also have a tracking device.\"\n\nShe didn't care for the first condition at all. She had a feeling he was going to be ridiculously bossy and heavy-handed when it came to security. She didn't want to move into the compound, either. She valued her privacy and independence more than the electricity and comforts of the compound. Still, for a chance to help make such a difference in so many people's lives, she was prepared to accept that condition.\n\n\"The second condition is secrecy. Like I said, there are external threats that require subterfuge. Keeping things secret from these external actors will not be possible unless these things remain secret from the people in town as well. That means you can't tell anyone what you are doing or the real reason you are here. You will have to severely limit your contact with people in town, at least until they are brought inside the compound. You'll essentially be disappearing without explanation for a while.\"\n\nShe had been expecting a condition like this. He seemed to be taking it to the extreme, but she could live with it. It wouldn't be the first time she had dropped out of sight for a prolonged period, and as long as she could get messages to her friends to let them know she was going away for a while, they wouldn't be too concerned. There was nobody to whom she was extremely close, so it shouldn't be difficult.\n\n\"I can accept the first two conditions. What is the third?\"\n\nMichael hesitated a moment, but when he spoke, his voice was firm and his jaw was set. \"The third condition is that you will be my companion. To be blunt, I will require your sexual submission to me and me alone. Outside of sexual situations, I will treat you like an equal. You are my equal. By companionship, I do not only mean sex. I want you to have meals with me, enjoy leisure time with me, and share things with me, just as I want to share things with you.\"\n\nMariah stared at him in shocked silence.\n\n\"Can you accept the third condition?\"\n\n\"You can't be serious!\"\n\n\"I'm very serious. The condition is non-negotiable.\"\n\n\"I just met you a couple of hours ago! I literally did not even know you existed. As far as I knew, it was just your father who lived here.\"\n\n\"I know. I'm sorry this is so abrupt.\"\n\nMariah's eyes brimmed with tears. \"Why are you doing this to me? To offer me a chance to help people who desperately need it, and then tell me I can't do it unless I agree to be your sex slave... It's so cruel. You really do hate me, don't you?\"\n\nHe leaned forward and tried to take her hands in his, but she drew them back. \"I could never hate you, Mariah. No matter what you choose to do, I won't hate you.\"\n\n\"Then why? Is this your way of punishing me for being angry with you before?\"\n\nMichael took a deep breath. \"I am not punishing you for being angry with me before. I am doing this because, short of holding you against your will, I will do whatever it takes to keep you with me. Maybe I do want to punish you, but not for being angry. For making me want you so much. For all those years of watching you and wanting you so bad it hurt. For showing your heart in everything you did and making me care about those people out there. For making me feel guilty while I watched you working yourself to half to death trying to make things better... I don't know. I only know that I need you, and I knew that this was my only chance.\"\n\nMariah tried again. \"You don't have to do this. You're handsome. You're smart. You live in a mansion and it's the only safe place to live around here. You could have any woman you wanted.\"\n\n\"Really?\" Michael said skeptically. \"Would you fall for my looks or my intellect or my house? Because I remember listening to a conversation between you and your friend, Rebecca, on the subject of good-looking men. Something about how Rebecca was welcome to all the 'pretty ones.' Remember that? And what about the time she tried to set you up with Jared? He's probably the smartest guy in town. You told her that the smart ones just spend every minute trying to prove how smart they are. And you can't seriously suggest that you would want to be with me because of my house. I know you better than that.\"\n\nMichael waited, apparently expecting an answer. Mariah shook her head. \"But my point is that there are plenty of women who would jump at the chance to be with you. You could have your pick.\"\n\nMichael took her hands and held on to them this time before she could pull them away. \"Mariah, if I couldn't have you, I couldn't have my pick.\"\n\nShe looked away, flustered. \"There are women in Ashland far better suited for the companionship you're seeking. I know women who would be very interested in you. Women who are more attractive, funnier, wittier, and--\"\n\n\"Easier?\" He finished for her.\n\n\"Easier to live with!\" she snapped, pulling her hands from his. \"Michael, I know you think you know me, but actually having me around would be different. I'm a tremendous pain in the ass.\"\n\nMichael burst out laughing, then kissed her forehead, much to her chagrin. \"I have never seen a more attractive, funnier, wittier woman, but I have no doubt that you are an extraordinary pain in the ass. Remember, I've been watching you being a pain in various asses for years. I fully expect that you will make me want to pull my hair out sometimes, but that's part of you. I want you. Not some other woman. That's not up for discussion.\"\n\n\"Under other circumstances, I would suggest that you go home and think about it. Unfortunately, after your run-in with Hawley, it isn't safe for you to do that. He'll be gunning for you. You already know he's a killer. He may be an incompetent buffoon, but it doesn't take a rocket scientist to kill one woman. You aren't safe from him.\"\n\n\"If you agree to my terms, you will begin living here immediately. You will be escorted to your home by two of my guards who will protect you and help you move your things here. If you decide not to accept my proposal, I will have to neutralize Brad Hawley before you leave. It's the only way to ensure your safety. That's why I need an answer before you leave. As awful as he is, I don't want to neutralize the man today only to find out it's unnecessary if you accept my proposal a few days from now.\"\n\n\"Neutralize him? Do you mean kill him?\" Mariah asked in horror.\n\nMichael grimaced. \"I can't think of another solution. I've seen the way that man operates. You've humiliated him in front so many people that it can't possibly be hushed up. I imagine the whole town will hear about it by the end of the day, and you know they'll be laughing at him.\"\n\nMariah was surprised to feel a tear run down her cheek. She brushed it away irritably.\n\n\"So, unless I agree to be your sex slave, I not only jeopardize a project that could save hundreds of lives, but I sign Brad Hawley's death warrant.\"\n\nA painful lump formed in Michael's throat when he saw her tears, but he had to see this through. \"Not my sex slave. I think you know the difference.\" He stopped himself. He knew that the distinction between \"sex slave\" and sexual submission didn't matter to her right now. From her perspective, he was trying to force her to do something she didn't want to do, and she wouldn't care what he called it.\n\n\"Mariah, I'm sorry this is so painful for you. You shouldn't factor Brad Hawley into the equation at all. He made the choice to attack you, and he must live with the consequences. As far as I'm concerned, he's been living on borrowed time since the moment he struck you. He's a parasite and a bully, and nobody will be sorry to see him go. No matter what you decide, it's not your fault that he put himself in this situation.\"\n\nMariah looked at him reproachfully. \"It's not that easy for me. I'm not like Brad Hawley, and apparently, I'm not like you. I can't ignore the consequences of my decision just because Brad Hawley deserves whatever comes to him. I'm not like that, Michael,\" she pleaded.\n\nMichael sighed. \"I don't see another way. I'm sorry I even mentioned it to you. I was trying to explain why I couldn't let you leave and take your time deciding, and I didn't think about the position it put you in. Although...\" Michael mused, \"How about this? I'll just have my guys nab him and lock him up to give you time to go home and make a decision. If you decide to stay here, we can put the fear of God in him and let him go.\"\n\n\"That's even worse! Don't you see? I'd still have to make a decision that will determine whether that man, such as he is, lives or dies. The only difference is that I'd know he was trapped in a cell while I decided his fate.\"\n\nMichael was silent for a while, thinking. \"I don't want your decision to be about saving Hawley's lousy hide. As distasteful as I find lifetime incarceration, I'm willing to keep him locked up for the rest of his life if you choose not to accept my proposal.\"\n\nMariah realized that in a perverse way, Michael was trying to be fair. She stared down at her lap. Who was she kidding? Even if Hawley wasn't a consideration, she still didn't have a real choice.\n\nShe couldn't possibly walk away from the opportunity to help so many people. It was entirely possible that Michael came up with his benevolent project for the sole purpose of entrapping her. If that was the case, he would probably abandon it if she refused. Even if he promised to go through with it no matter what she decided, she knew he was right. He did need someone who could intercede on his behalf with the people in town. There were other people could accomplish the same thing, but given Michael's stubborn insistence that it must be her, she doubted he would seek or accept help from anyone else.\n\nIn the end, there was no choice at all. She couldn't stand to watch more babies die if she could save them. There was only one thing she could do. She would accept his conditions.\n\n\"Could I have a few moments to think?\"\n\n\"Of course,\" Michael agreed. He was encouraged that she was at least considering his proposal. \"I'll be in the foyer you passed through on your way in.\"\n\nWhen he left, she sighed in relief and sank back into the soft chair. She didn't really need the time, but it felt good to be away from Michael's intensity and out of his sight. She felt like he was always looking at her, and she hated it.\n\nAlthough the temporary reprieve from his presence was welcome, she wasn't postponing the inevitable just to enjoy a few Michael-free minutes. She needed to be strategic. If she allowed him to realize how important his project was to her, he would have her at his mercy. Her acceptance of his mandates on security and secrecy didn't give away how badly she wanted to make sure his project went forward. It was the third condition that was the problem, and not just because it was a disgusting and depraved use of his advantage. It was the sort of condition a person wouldn't agree to unless they would agree to practically anything.\n\nRight now, she had some leverage. He wanted her with him in a way he couldn't achieve by force. He wanted to have a friendly relationship with her, even if he was willing to obtain it through coercion. He would assume that he could not treat her too harshly without jeopardizing that amicability -- unless he realized that the project was so important to her that he could get away with it. She didn't believe Michael viewed himself in that light. He probably couldn't have unraveled his motivations if he wanted to. He likely believed he was motivated solely by altruism and discounted the gratification of his own self-interest as incidental.\n\nShe couldn't count on Michael's lack of self-awareness to prevent him from eventually realizing and capitalizing on his advantage. Consciously or unconsciously, the pieces would fall into place in his mind. Once he realized how much she would put up with for the sake of the project, all bets would be off. To prevent that, she had to make him believe that her acceptance of his third condition was at least partly motivated by something other than the project. It had to be a motivation that could disappear if he mistreated her. The best way to achieve that was by indulging his fantasy that she might want to be with him.\n\nProvided she could keep her temper from flashing through her act, she knew she could pull it off. The best acting magnifies a grain of truth, and the truth was that she was attracted to him. She just had to separate that feeling of attraction from her hatred of feeling it. When she was with him, she needed to be able to access one feeling without the other. It was going to be complicated to maintain a separation between her authentic feelings and her projected feelings, but she didn't have a better alternative.\n\nOnce she was resigned to her plan, she let more time drift by. With her decision made, the waiting played havoc with her own nerves, but she felt it was important to give Michael's uncertainty time to grow. He would be less likely to question a \"victory\" that did not come too easily.\n\nWhen she couldn't stand the strain any longer, she found him in the foyer. She spoke without preamble. \"You've imposed three outrageous conditions, Michael. I have two conditions of my own.\"\n\nMichael felt like a weight was being lifted off his chest. If she had conditions, it could only mean she might agree to his terms. Whatever the conditions were, he would do anything necessary to meet them. This was a negotiation, though, so he kept the look of relief off his face.\n\n\"What are your conditions?\"\n\n\"The first is that I have to be able to bring my pets. They have to be allowed to live inside with me, and they must be treated kindly.\"\n\n\"And your second condition?\" Michael prompted.\n\n\"Food has to be delivered weekly to people I normally provide it to, and it has to be delivered secretly so that it doesn't cause them trouble with their neighbors or get stolen. Most of them don't know who leaves the food for them anyway, so your people could just leave it in the usual drop-off location. I can make lists with descriptions of the drop-offs, unless you'll agree to letting me take care of it myself.\"\n\n\"I won't.\"\n\n\"Then someone else will have to do it. Those are my two conditions: My pets and food for the people I usually distribute it to.\"\n\n\"Done.\"\n\nShe blinked. \"Done?\"\n\n\"Yes, done. I accept your conditions. Do we have an agreement?\"\n\nMariah looked away, trying at the last minute to think of another solution, but there wasn't any. Michael held all the cards.\n\n\"We have an agreement.\" She hated the tremble she heard in her own voice. She needed to be strong right now.\n\nIn an instant, Michael closed the space between them. He drew her against him and held her in place with his hand at the small of her back. Her body felt so soft and warm against his. He caressed her cheek, then trailed his fingers through her hair to cradle the back of her head.\n\n\"I promise, Mariah. I'll do anything in my power to make sure you're happy here.\"\n\nBefore she could say a word, his mouth was on hers. His kiss was passionate and aggressive. His tongue swept between her lips. She gasped against his mouth and his tongue slipped in, stroking and circling her own. He kissed her with a hunger that left her reeling. She realized that her hand was on his chest, but she didn't know whether it was to touch him or push him away. Somewhere along the way, her tongue had started moving against his.\n\nMichael let out a strangled groan when he felt her respond. The sound vibrated against her mouth and sent a rush of heat through her. Mariah was well on her way to losing herself completely when Michael suddenly pulled back. Her dark eyes were wide and her cheeks were flushed. She looked stunned, and when she unconsciously touched her fingertips to her lips, he felt his cock twitch in response. He kissed her again, hard and brief. \"You've got to go get your things before I can't let you leave,\" he said hoarsely. \"I promised you could get your pets. Bring anything else you want to keep with you, but everything you need will be provided.\"\n\nWithout taking his eyes off her, he reached for the house phone. \"Ezra, Mariah will be staying with us. I need two men two escort her. I'd appreciate it if you would go yourself. Thank you.\" Mariah barely had time to regain her composure before two security guards in black tee shirts and camouflage combat pants arrived. Michael made hurried introductions. \"Mariah, you met Ezra earlier.\" The larger of the two men nodded. He had salt and pepper hair, gray eyes, a wide jaw, and the tried-and-true bearing of a veteran.",
        "\"I'm sorry I kicked you,\" Mariah apologized. \"I didn't know what was happening.\"\n\nEzra reassured her. \"It's perfectly understandable, Ms. Williams. I feel like I ought to be the one apologizing for interrupting the thrashing you were giving Hawley.\" Mariah flashed him a grateful smile.\n\n\"And this,\" Michael indicated the younger man, \"is Jack.\" Jack had curly brown hair, amber eyes, and an infectious grin.\n\n\"Please give Mariah any assistance she needs. I will be available by radio. Please check in when you get there and again when you start back to the compound. If you encounter any problems, notify me immediately.\" With a last glance to Mariah, Michael left the room and she was left with Ezra and Jack.\n\n\"Would you come this way, Ms. Williams?\" Ezra asked.\n\n\"You can just call me 'Mariah,'\" she said as she followed him from the room, with Jack bringing up the rear. As they walked, she was uncomfortably aware of the slickness between her legs from her response to Michael's kiss. They stopped near the foot of the stairs at the house's main entry, where an elevator was disguised behind two wooden doors. She was hesitant since it had to have been years since the elevator was serviced, but the polished, well-lit interior suggested it was used regularly.\n\nJack pushed the button for the basement as Ezra spoke. \"The garage is part of the basement complex. We'll get a vehicle down there. While we're outside the compound, please stay close to us. When we get to a new area, give one of us a chance to go first and make sure it's safe.\"\n\n\"Okay, but I don't think there's anything to worry about. I don't have any enemies.\"\n\n\"Besides Brad Hawley!\" Jack laughed.\n\nMariah was getting the impression that these guys had been wanting to punch Hawley themselves for a long time. \"I see he's got a lot of fans,\" she remarked dryly. Jack snorted.\n\nThe elevator door dinged but didn't automatically open. She noticed Ezra and Jack looking up at a monitor in the corner of the elevator. The screen was black until Jack pressed a button above the elevator controls. Then it showed the lights coming on in a parking garage that looked a lot like the ones under large city office buildings. Tapping controls beneath the monitor, Jack zoomed out and panned the camera. He tapped again, and the screen turned dark blue, with a few shapes visible in green. \"Thermal imaging,\" Ezra explained. \"If anyone was down here, they'd show up in red and yellow, even if they were hiding behind something.\" The screen went back to the regular view.\n\n\"But isn't this part of the compound?\"\n\n\"Yes, but we're down here less frequently, so we like to be extra careful.\" The door opened and Ezra gestured for her to stay back while Jack walked out and inspected the area. Mariah wondered who they thought might be lurking around their own garage, but it didn't seem like the right time to ask.\n\nWhen he was satisfied with his sweep of the area, Jack got into a large van and drove off. Ezra chuckled at Mariah's confusion. \"He'll be back for us as soon as he takes a circuit around the garage. Can't be too careful.\"\n\nShe looked around while they waited. There were an awful lot of vehicles for one house, even a house this size. It looked like someone with a very large bank account had gone to a dealership and bought at least four of everything. There were Jeeps, pickup trucks, ATVs, sedans, and a smattering of high-performance sports cars parked in the rows in the main garage space. There was a line of motorcycles along one wall and a line of golf carts along the other. They all looked shiny and new, even though they couldn't have been manufactured in the last ten years. All the vehicles, even the golf carts, were black.\n\nJack returned shortly with the van and stopped in front of the elevator. He kept the vehicle running while Ezra slid the door open for Mariah and helped her up to the bench seating installed behind the front seats. Instead of a third row of seats, the van had a large cargo area with straps to secure whatever it was people transported with small fleets of black vehicles they kept parked in mysterious underground garages. She was still contemplating that when they reached the end of the long tunnel leading from the garage.\n\nJack pressed a button on the dash, and the door in front of them rose to reveal a ramp leading up into the ceiling. Where the ramp met the ceiling, part of the ceiling rolled back, allowing them to drive up into... another garage? Jack grinned at her in the rearview mirror. \"Just watch.\" He drove forward, then pressed another button. The floor slid closed behind them, hiding the tunnel entrance. Another button raised the garage door and they drove out onto a dirt road. Mariah recognized the building they'd just exited. It was the garage attached to the hanger on the old private airfield. It had been derelict for years, even before the world had started falling apart.\n\n\"That's brilliant! Who came up with that idea?\"\n\n\"It was Ezra.\"\n\n\"Ezra, you're either a genius, a paranoiac, or just very bored.\"\n\n\"All three,\" Ezra said with mock seriousness. \"Okay, Ms. Williams, where are we headed?\"\n\n\"It's just 'Mariah,'\" she reminded him, then gave them directions to her house. \"Could we stop for my bike? We'll pass it on our way.\"\n\n\"Sure,\" Jack answered. \"Just tell me when we get close to where it's parked.\"\n\nA sort distance outside the main part of town, Mariah pointed out a large culvert. \"It's through there.\"\n\nEzra heard her taking her seat belt off and stopped her. \"I'll go get it.\"\n\n\"You can't. I don't know how to explain how you get to it.\"\n\nEzra looked back at her. \"Do the best you can, and I'll take it from there.\"\n\n\"You have to go through the culvert that runs under that hill. You can't go around from the other direction because the other end of the culvert is caged in with an electric fence. Then there's a fence around the electric fence to keep people from touching it. I stashed my bike between the two fences. There's no power from the electrical plant most of the time, but you never know when it could come on. I've insulated a section of the electric fence so I can open it. It's not obvious where that section is, and I don't want you to touch the wrong part of the fence based on my description.\"\n\nBy the end of her explanation, both men had turned in their seats and were looking at her like she'd grown a second head. \"You must really like that bike,\" Jack remarked.\n\n\"I really need that bike. Or at least, I did. And it wasn't just that. I didn't want anyone following me home. Not very many people know where I live. Nobody ever saw where I went when I left town because I used the dried riverbed as a shortcut through the woods. It's firm enough to bike over and it comes out on a road near my house.\"\n\nThey both nodded in approval. It made sense to them now. After all, these were the guys who hid their garage entrance inside another garage.\n\n\"Okay, you win,\" Ezra said. \"Wait in the van while I go down to the other end of the culvert to make sure it's clear. Then I'll come back for you and we'll go get your bike while Jack keeps the van running.\"\n\n\"You know Hawley's holed up drunk somewhere, right? He's not going to be sneaking around culverts.\"\n\nEzra nodded as he got out of the van. \"I have no doubt of that, but some of his charming companions are probably sober enough to be out looking for you.\"\n\nMariah sat back in her seat and closed her eyes. She almost wished she hadn't punched Hawley. Almost. A couple of minutes later, Ezra returned for her and they made their way down the culvert. She could walk through without ducking, but he had to stoop. She showed him the panel she'd rigged and pulled the bike out.\n\n\"How'd you get through to the other side when you went home?\"\n\nShe showed him a panel in the outer fence that she'd altered so she could open it. It was clipped to the adjoining fence from the inside. From the opposite side, it wouldn't have been obvious how to get in, even if someone ventured this deep into the ravine. She couldn't help feeling proud of herself when Ezra looked impressed.\n\nOn the way back through the culvert, Ezra agreed to let her wheel the bike so he could walk ahead. Just in case one of Hawley's minions was skulking about, she supposed. She had a lot less confidence in his goon squad's initiative than Ezra and Jack did. They probably spent less than an hour looking for her. By now, they were either making drugs, using drugs, or sleeping off drugs they'd already taken.\n\nWith the bike secured in the back of the van, they continued toward Mariah's house. She could bike the shortcut through the woods in about fifteen minutes. It took them almost as long in the van because there was no road that led directly where they needed to go. Finally, they reached their final turn and Mariah pointed out where to stop. Her road was little more than two old tire tracks obscured intermittently by tall grass and barely distinguishable from the field it ran through. \"My house is only about half a mile ahead in that grove, but this road is so full of ruts and so grown over that I don't know if the van can even make it.\"\n\n\"We'll make it,\" Ezra said. \"It looks like a van, but it's technically a panel truck. It's built on a truck chassis and the suspension's been upgraded.\" Sure enough, they pulled up outside her door a couple of minutes later. Mariah swallowed hard. This was really starting to feel real. She gave her keys to Ezra, who insisted on going in first.\n\n\"You'll have to let me stand outside the door, though,\" Mariah insisted. \"My dog will run outside as soon as you open it, and I need to let him know it's okay.\" They could hear Henry barking and growling ferociously inside. As soon as Ezra got the door open, Henry came flying out. He jumped up and put his paws on Mariah's shoulders for his hug. Henry looked at Ezra and Jack, then demonstrated what a complete clown he was by rolling on the ground with his tongue lolling out of his mouth and his whole butt wagging in counterpoint to the swishes of his tail.\n\nJack raised his eyebrows. \"What a brute!\" Henry came over to give Jack a good sniff while Ezra checked out the house.\n\n\"Careful of the cats!\" Mariah called after him.\n\nAfter Ezra gave the all-clear, Mariah offered them seats in the living room, feeling awkward and strangely out of place in her own home. She loved her little house, and she was already starting to feel like she didn't belong there. Ezra checked in with Michael by radio as instructed. She didn't want to think about Michael right now. With a sigh, she pulled two suitcases she'd stacked to make a coffee table back to the bedroom.\n\nIt didn't take long to fill one suitcase with her clothes, a few keepsakes, and cat and dog toys. Her books and some dried herbs filled the other suitcase. She wasn't ready to look the cats in the eye, so she grabbed the mouse cage. Mister Barnaby poked his head out of his little mouse house to investigate. \"Moving day,\" she told him. Next, she set the terrarium holding Quincy the one-legged cricket beside Mister Barnaby's cage. All that was left was to add her philodendron to the pile and she was finished.\n\nMariah plopped on the bed. Waking up here this morning seemed so long ago. She put her head in her hands. How did her life get turned upside down so fast? Her stomach fluttered when she remembered Michael's kiss. She wasn't supposed to like it. He hadn't given her any real choice about her future. He was probably gloating right now while she was saying goodbye to life as she knew it.\n\nShe shook her head. Being dramatic wouldn't help. She'd made her deal with the devil and now it was time to focus on the reason she'd made this choice. If she could help Michael pull this project off, a whole lot of people would gain some safety and food security. They might even be able to start rebuilding. A school for the children would change the course of their lives. As it was, kids were growing up without even learning to read. She was already thinking about a possible curriculum that combined practical knowledge with classical education.\n\nEzra coughed, and Mariah looked up to find him standing in the doorway. \"Ready?\" he asked.\n\n\"No, but let's go anyway.\"\n\nEzra smiled sympathetically. \"Jack, could you give us a hand?\" he called into the living room. They decided that Jack would carry everything out to the van while Ezra stayed in the house to guard Mariah from the boogeyman. After Jack carried everything out, Henry jumped into the van on his own, giving the interior a thorough sniff.\n\nTime for the cats. They were about to find out what the pet carrier in the back of the closet was for. Then, Mariah thought grimly, they were probably going to hate her forever. Julia was hiding in the bathroom sink. Mariah apologized profusely as she eased the elderly cat into the carrier. Duncan was more of a challenge. He'd been sitting in the windowsill while she packed, but now he was glaring down suspiciously at her from a shelf in the closet. He yowled pitifully as she dragged him down from the shelf, then splayed all four legs to avoid fitting through the carrier's door, screaming bloody murder. She was covered in cat hair by the time she got him stuffed in.\n\nHenry was still goofing around in the van when they wedged the cats' carrier between the front and back seats. Mariah bit her lip as Jack locked up her house. She didn't know when she'd see it again. Ezra radioed Michael to let him know they were on their way back. She still didn't want to think about Michael.\n\nOn their way back to the garage, Jack radioed the compound. \"Hey, Andy. We're about four minutes out. Could you meet us in the garage?\"\n\nBy the time they pulled in, Andy was waiting by the elevator. He was wearing the same combination of a black tee shirt and camo combat pants, but where Ezra and Jack were on the brawny side, Andy was lean and wiry. He had sandy blond hair, bright blue eyes, and an air of barely suppressed energy. He seemed like the kind of guy who would rather run than walk.\n\nAs soon as Jack parked the van, Andy came over and slid the side door open. \"I'm Andy,\" he announced cheerfully.\n\n\"I'm Mariah. Thanks for coming to help.\" Up close, she could see he was even younger than Jack.\n\n\"Happy to help. And who's this fine specimen?\" he asked, looking at Henry.\n\n\"This is Henry, professional mutt and amateur jester.\" Andy ruffled the fur on Henry's head.\n\n\"Don't let her fool you, Andy,\" Jack said. \"That dog threatened to eat us. He's vicious.\"\n\nDuncan chose that moment to let out an unearthly scream from the carrier, reminding them to get down to business of unloading. Andy pulled her bike out and went to park it by the line of motorcycles. There was something sad about the beat-up teal bike standing crookedly in the sleek black fleet.\n\n\"Careful!\" Jack called. \"You wouldn't believe what Ezra had to go through for that bike!\"\n\n\"It's true,\" Ezra agreed.\n\nMariah leashed Henry, and between the four of them, they managed the two suitcases, cat carrier, mouse cage, cricket terrarium and philodendron in a single trip, even if it was a bit tight in the elevator. When the elevator opened on the third floor, they were met by a middle-aged woman with sparkling hazel eyes and chestnut hair frosted prematurely white at the temples. She was all smiles and wasted no time fussing over Mariah and taking the cat carrier from her. Andy gave the woman a kiss on the cheek. \"Hi, mom.\"\n\n\"Mariah, I'd like you to meet my mother, Paula. She takes care of things around here. Basically, she's the boss.\"\n\n\"Now, Andy!\" Paula tutted. She turned to Mariah. \"I'm nobody's boss. He just likes to tease his poor mother. I swear I don't know about some people's children!\"\n\n\"Let's get you oriented, sweetie. This is the third-floor sitting room.\" She pointed out double doors on either side of the room. \"The east wing is through the doors on the left. That's where my quarters are, if you ever need to find me. The west wing on this floor is dedicated to Michael's private rooms. That's where your bedroom is.\"\n\nPaula bustled over to the doors on the right and swung them open. She led them down the hall, identifying the rooms as they went. \"This door is just a linen and supply closet. We keep all the linens for the master suites up here in case you want an extra blanket or towel. There are extra toiletries and that sort of thing in there, too. The kitchenette is the first door on the left. It's not as well stocked as the main kitchen, of course, but you'll find most of what you need there. The second door on the left is the lounge. The second and third doors on the right are your offices. Yours is still being set up, though.\"\n\nThe end of the hall connected with a hall going off to the right. Just after they passed the turn, Paula threw open a door on the left. \"Here you go, dear. This is your room. The last door is Michael's.\"\n\nEzra, Jack. and Andy set Mariah's things down and she thanked them on their way out. Paula shut the door behind them and turned to Mariah with a huge smile. \"I'm so happy you're here! Now, I know you'll want to get more comfortable. Your bathroom is right through there. You'll feel so much better after a nice long shower. Well, maybe not too long. I told Michael to let you get settled, but he's impatient. If you take too long, he's liable to show up looking for you.\"\n\n\"I'm going to go find something tasty for your kitties and this handsome fellow,\" Paula rubbed Henry's ears, \"and see if I can't keep Michael occupied. If you need anything before I get back, just give me a call on the house phone over there. I left a list of all the extensions next to it. I'll be back to check on you in a bit.\"\n\nPaula closed the door on her way out, and the room was suddenly quiet in her wake. Mariah let Henry off his leash and looked around. The bedroom was much bigger than her living room at home. She liked the color scheme of pale blues and greens against white walls. A big four-poster bed was centered on the right wall. Henry jumped up on the ice blue comforter and plopped squarely in the center of the silvery arabesque motif. She wondered how long it would take him to start rolling around in the pillows piled against the headboard.\n\nThe wall opposite the door held three large windows trimmed with airy white curtains above a long, upholstered window seat. The floors were the same light-toned wood as the floors in the other parts of the house she'd seen so far. The bed and nightstands sat on a large, pale green rug. A cream-colored area rug edged in the same pale green defined a seating area in front of the windows. The bathroom was through one of the doors on the left. She assumed the other was a closet. Further exploration could wait until she had more time.\n\nMariah opened the carrier and both cats streaked to the bed and hid underneath. She tried some baby talk, but they weren't ready to forgive her. Not even close. She placed Mister Barnaby's cage and Quincy's terrarium on a shelf and put the philodendron on one of the side tables in the seating area. She left the suitcase full of books to unpack later and opened the suitcase with her clothes. She pulled out an outfit to change into after her shower and headed to the bathroom.\n\nIt was nothing short of opulent. Sunlight streamed in through a row of skylights. A large vanity on the left held an array of toiletries. The interior walls of the water closet on the right were decorated with blue and green glass tile. A long teak bench divided the rest of the room. A spacious glassed-in shower stood to the left, and a large bathtub was centered beneath a chandelier to the right. Fluffy white towels were stacked on the bench and on the shelves beside the vanity. The floor was tiled with ceramic squares in a spectrum of pale stone-inspired colors.",
        "Remembering Paula's warning about Michael's impatience, Mariah undressed quickly and got in the shower. It was heavenly. The temperature was hot and the water pressure was strong enough to soothe the ache in the back of her neck. The niche that ran the length of the shower's back wall was filled with soaps, shampoos and conditioners in a variety of scents. Unscented didn't seem to be an option, so Mariah chose a set that smelled like sandalwood and gardenia. As she lathered her hair, she tried to wrap her mind around everything that had happened to her over the course of a single day. And the day wasn't even over yet.\n\nShe worked the conditioner into her hair and tried hard not to think of Michael while she soaped herself. The ledge of the niche also held a razor and pumice stone. By the time she finished making use of them, she was worrying about the time. She toweled off quickly and slipped into a white terry cloth robe she found hanging on a peg. If Michael did show up, at least she'd be wearing something.\n\nShe combed her hair out and checked her part in the mirror. She touched the shadow of a bruise at the on the side of her face above her cheek. It barely hurt at all. She grinned at her reflection, remembering Michael's comment that Hawley was wishing he could hit like a girl.\n\nShe peeked into the bedroom while she blew her hair dry. Henry was still on the bed and was laying on his back with one paw stuck straight up in the air. She spotted Duncan on a windowsill, glaring daggers at her. Julia was probably still hiding under the bed. Mariah had just finished fixing her hair when she heard a knock at the door. She froze. It must be Michael.\n\n\"It's just me, sweetie,\" Paula called through the door. Mariah let out the breath she'd been holding in a huge sigh of relief and hurried over to open the door for her. \"Don't you look lovely!\" Paula exclaimed.\n\nUncomfortable with compliments, Mariah changed the subject by telling Paula how much she'd enjoyed the bath products. \"Michael chose the scents. He's got great taste.\" Paula smiled proudly. She sounded like a parent whose child's artwork was chosen to hang in the principal's office at school.\n\nPaula had food and water for Henry and the cats. Henry jumped up and put his paws on Paula's shoulders to express his slobbery gratitude. Mariah laughed as Paula tried to pet Henry and fend off his doggie kisses at the same time. She grabbed the outfit she'd unpacked, but Paula stopped her. \"Did you see the closet, dear?\"\n\n\"No, I was just planning on wearing this,\" Mariah held up the outfit in her hands.\n\n\"Well, let's have a look,\" Paula suggested, and ushered her toward the closet door. Paula pulled open the door and flicked on a light, revealing a closet the size of a normal bedroom. It was lined with racks of clothes on both sides, with shoes lined up on shelves beneath the clothes. The back wall of the closet was filled with drawers. Between the clothing-lined walls, there was a long, cushioned bench upholstered in light blue.\n\nMariah grew more serious. \"Paula, where did all these clothes come from? Who do they belong to? Please don't tell me someone gave up their bedroom for me.\"\n\nPaula beamed. \"They're yours. They're brand new. Michael picked them out himself.\"\n\nMariah was flustered. \"How on earth? Paula, I don't know what to say. I don't need all these clothes.\"\n\n\"I know, sweetie. Nobody needs that many clothes. But Michael really put a lot of effort into it, and he'll be so pleased if you like them.\"\n\nMariah nodded. \"Of course. I don't mean to be ungracious. I'm just a little overwhelmed.\"\n\nPaula patted her arm. \"Don't worry. Everything will work out. Now, why don't you pick something out and I'll just check on Michael. The poor man's down in the library climbing walls. I'll be right back to show you where it is.\" Paula scurried off.\n\nMariah wandered into the closet to find something to wear, which was a bit daunting given the sheer quantity of clothes to look through. She checked a few random labels to confirm that they really were her size. She considered wearing the outfit she'd already laid out as a show of independence, but decided it probably wasn't the first battle she ought to pick. For the foreseeable future, she would have to balance the needs of Michael's inner control freak with her own need for self-determination in order to maintain a productive working relationship. She saw a color she liked and grabbed it. It was a coral sundress with flowing lines and a lace-up back.\n\nNow for underwear. The drawers at the back of the closet were full of lingerie, and she couldn't take time to hunt through every drawer. If the first several drawers she checked were any indication, it all looked like something out of a Victoria's Secret catalog, anyway. She wondered where Michael found it, given that there was no more Victoria's Secret, or even Walmart for that matter. More disturbingly, how had he figured out her correct bra and panty size? She probably didn't want to know. She put on a white lace bra and panty set and pulled the sundress on over it. A pair of sandals completed the outfit.\n\nWhen Paula returned, Mariah was halfway under the bed, apologizing to Julia with chin rubs. She scrambled out with what dignity she could muster under the circumstances. \"Sorry, I was making up with my cat. She's still in hiding.\"\n\nPaula nodded. \"The poor little things can be so sensitive, can't they? Well, just wait until she sees all the goodies her new aunt Paula's going to get her. It won't take her long to come around. But we'd better get you downstairs. I promised Michael I'd bring you back with me.\"\n\nThey took the elevator down to the first floor and Paula herded her down the west wing. \"Paula, where did all those clothes come from? Or the bath products? Or the ingredients Marcus uses? Where do any of these things come from?\"\n\n\"That's something Michael is going to want to explain to you himself.\"\n\nAll too soon, Paula left her standing in front of the library where Michael was waiting. She squared her shoulders and entered, resolved to stay cool and collected. Michael stood when she entered and came over to meet her, displaying none of the anxiety she felt. He smiled, but she saw his mouth tighten when he saw the light bruise on her face.\n\n\"There you are. All settled in?\"\n\n\"Mostly.\" She felt like she ought to be thanking him for the clothes right now, but she didn't intend to reward his presumption. She suspected they were more for his benefit than hers, anyway.\n\n\"Did you find everything you need? Did we forget anything?\"\n\nMariah had to laugh. \"Honestly, I can't imagine what you could possibly have forgotten. It was all lovely. I don't even know what to say about it all.\"\n\nMichael smiled. He really did have a cute smile. There was something innocently boyish about it. \"You don't need to say anything at all, unless you think of something you need. You'd be surprised what we can get our hands on, so please let me or Paula know if there's anything you want.\"\n\n\"I wanted to ask about that. Where do all these things come from? It's like you raided a department store, except the department stores have been empty for years. Nobody can get these sorts of things.\"\n\n\"That's a small piece of a much larger picture. I'm sure you remember how people started stockpiling things when the economy collapsed. Stores were completely emptied, and everyone attributed it to panicked consumers. It was true that ordinary consumers cleaned out the stores, but most of the products weren't in the stores. They were in factories and warehouses along the supply line. Plus, some of the factories kept producing for a while even after they stopped delivering to stores.\"\n\n\"Every crisis is an opportunity for someone. People with the means and the right connections bought everything directly from the manufacturers, so the goods never made it to the stores. They bought them as an investment. The investors believed things would start to return to normal before too long, but they expected an interim of scarcity before factories were operating again. They anticipated an enormous profit from selling their stockpiled goods until production was up and running.\"\n\n\"To this day, they are still sitting on huge quantities of consumer goods. Since very few people have access to them, the stockpiles are barely diminished, even after all this time. Those people are the source of most of the things you're asking about. There's much more to tell about it, and I know you have questions. As I said, it's part of a much bigger story. Tomorrow, I'll show you around the compound and introduce you to everyone. Then, I'll start filling you in on the bigger picture.\"\n\n\"That's disgusting! Why didn't you let anyone know it was going on?\"\n\n\"Who would I tell and what could they do about it? Those warehouses are locked down like Fort Knox and guarded by people who won't hesitate to kill any unauthorized person who finds the location. Even if I had the ability to open those storehouses to people, it would be a very temporary benefit. We need to find permanent solutions. That's what I want you to help me do.\"\n\nThe conversation lapsed as Mariah turned Michael's explanation over in her head. He was correct from a logical point of view, but that logic did nothing to address the massive injustice. She acknowledged that right now, the most important thing was to give people tools to improve their lives. Where did justice fit into it? Surely nothing worthwhile could be built without fairness at its foundation.\n\nShe looked up to find Michael studying her intensely. \"How are you doing?\" he asked, his voice husky.\n\nShe fidgeted under his gaze. \"I'm fine. Just a little tired.\"\n\n\"But what are you feeling emotionally?\" Michael persisted.\n\nShe had been trying not to think about what she was feeling. The day had been a roller coaster of anger, hope, sadness, and even excitement. Not to mention the jumble of emotions she felt toward Michael personally. She resented him for imposing conditions on her life in exchange for something she felt he should be happy to offer freely.\n\nHis requirement that she offer her sexual submission to him was outrageous, and it made it even harder to process her attraction to him. When she made her to decision to accept his proposal, she planned to carefully balance and draw on her feelings toward him. After his kiss earlier, she no longer trusted her feelings. She was also beginning to recognize that her attraction might be more than physical, and that was dangerous. She needed time to let the tumult of thoughts in her head settle down so she could sort things out. Her emotions were running high and discordant, and she was afraid she would fall apart if she tried to unravel them now.\n\nMichael was still waiting for an answer. \"I'm pretty overwhelmed right now. I'd rather not to talk about it.\"\n\nMichael's forehead creased, but his frown faded quickly. \"Perhaps you'd like a tour of the library?\" he suggested smoothly.\n\n\"I'd like that.\"\n\nThree of the library's walls were lined with bookshelves. Michael explained the organizing principals of the book collection, pausing here and there as they made their way along the shelves to pull out a favorite. Many of the books were beautifully bound editions. Others were well-thumbed paperbacks. Here and there, Mariah noticed some of her own favorites, as well as some titles she looked forward to reading. She supposed that if Michael had procured an entire wardrobe for her to wear, it was safe to assume she would be allowed to borrow books.\n\nThe fourth wall held a bank of windows that overlooked a lush lawn planted with trees, shrubs and flowers. The library's central seating was a casual mixture of love seats, recliners and ottomans. Directly in front of the windows, there were a couple of armchairs and a coffee table divided from the main seating area by a cabinet displaying a collection of maps and globes. Michael led her to the windows and they looked out. \"This reminds me of the library on the campus of a college close to where I used to live,\" Mariah remarked.\n\nMariah was already in Ashland when Michael's father called him home from college and locked down the compound, but he'd known she was originally from somewhere else. \"Where did you live before you came to Colorado?\" he asked.\n\n\"Maryland. I lived on the peninsula where the Patuxent River emptied into the Chesapeake Bay.\" There was longing in her voice. \"Most of it's under water now,\" she added sadly.\n\n\"Tell me about that library.\"\n\nShe glanced at Michael. She hoped he meant to ask it as a question, but it sounded like a command. \"It was one of the most pleasant spaces I've ever spent time in. It had plenty of windows and high ceilings, but it was proportioned and laid out so well that it felt quite intimate. The rows of bookshelves were just the right amount of musty, and the rest of the library was light and airy. The woodwork was incredible.\"\n\n\"On the second floor, there was a seating area with a huge picture window. It was close enough to the river that you could watch the students yachting. Outside the library, there were arbors and trellises covered in wisteria vines. There were even several peacocks that roamed around during the warm weather months. They were gorgeous, and they would come very close to people because they were used to getting crumbs.\"\n\n\"It sounds lovely,\" Michael said, picturing it in his mind. \"You miss it, don't you?\"\n\n\"The college?\"\n\n\"The place,\" Michael clarified.\n\n\"Yes, I do. I'm not exactly homesick, but I miss the sights and smells and sounds of being near the water. I hadn't thought about that library in years, though. I guess remembering it made me nostalgic.\"\n\n\"Maybe we should get some wisteria and peacocks for the compound.\"\n\nShe laughed. \"Too bad Lois is out of peacocks at the shop!\"\n\n\"She does have wisteria?\" Michael looked quizzical, as if he really thought Lois Hubbard might be keeping flowering vines in a back room.\n\n\"Not last I checked. It would be a hard product to move, since you can just go out and find some.\"\n\n\"You can? I assumed it would come from a greenhouse.\"\n\n\"Well, it did. But once people planted it, it took off. I happened across an abandoned house in the woods that was absolutely covered in it.\" Mariah wondered at Michael's sudden interest in wisteria. Did he actually want to find some to plant?\n\nMichael took her elbow and guided her to the window. \"See that little path going off to the left?\"\n\n\"I see it.\"\n\n\"It leads to a pond. I can show you tomorrow. We could build an arbor for wisteria over the path, don't you think?\"\n\nMariah frowned. Was he serious? The last thing she wanted was for him to rearrange his landscaping for her. She searched for a tactful escape from the subject.\n\n\"I'm sure it would be beautiful, but the person who maintains your grounds probably wouldn't appreciate it. Wisteria can really take over. It has to be trimmed frequently, and it sends out shoots underground that pop up well away from where it's supposed to be growing.\" That, she thought hopefully, should put an end to the landscaping plans. Any manpower available needed to be reserved for their project, anyway.\n\nMichael put a hand on her shoulder and pointed to the tree line at the crest of the hill behind the house. \"Look. Foxes!\" A small fox emerged from the trees and crept towards the house. A moment later, five little foxes appeared, trailing their mother.\n\n\"They're coming drink at the birdbath. I was hoping they would show up tonight so you could see them.\"\n\nThe vixen's coat was burnt orange and white, but her kits were fuzzy gray fluffballs. Three of them followed their mother closely and imitated her movements, but the other two kept pouncing on each other. They fell behind their siblings, then caught up when they rolled down the hill, still tussling.\n\nThey watched the foxes until they had their drink and disappeared back into the trees. Michael's hand was warm on her shoulder, and she was intensely aware of how close he stood to her. It made it hard for her to think. He moved to stand behind her, and when he spoke, his voice rumbled so close to her ear that it made her shiver.\n\n\"Do you think you can tell me how you feel, now?\"\n\nMariah sighed. She didn't want to tell him, but his nearness was making it hard for her to think. When she didn't answer right away, he asked again, softly, \"How do you feel, Mariah?\" His voice was even closer than before. It was making her thoughts go haywire.\n\n\"Confused,\" she whispered.\n\nHis hand moved from her shoulder to the back of her neck, where he stroked it lightly. \"What are you confused about?\"\n\n\"You,\" she said simply.\n\nHe kissed the top of her ear and her breath caught. Her ears were sensitive, and she shivered hard enough that she knew he must have noticed.\n\n\"Thank you for telling me,\" he said, so close to her ear. \"In the future, I expect you to tell me how you feel. We can go to a window if that makes it easier for you to talk, but you have to tell me.\"\n\nMichael's words jerked her out of the haze that was clouding her mind. She was dismayed that he had already ferreted out the fact that it was easier for to talk about sensitive subjects that way, and she was affronted by his presumptuousness.\n\nShe turned to face him. \"Why should I have to tell you how I feel?\"\n\nMichael put his hand on her shoulders. \"I need to know so that I can take care of you.\"\n\nMariah shrugged away his hands. \"Thank you, but you don't need to take care of me. If there is something I need to talk to you about, I'll let you know, but I'm a very private person.\"\n\nMichael looked hurt and a little angry. \"Mariah,\" he started, then stopped when he saw the tears in her eyes. Mariah was mortified when a tear escaped the corner of her eye and trickled down her cheek. Michael wiped it away. \"It's okay. We'll talk about this another time.\"\n\n\"Michael, this isn't going to work. I can help with the project, but I'm just not right for the interpersonal part of this. My friend, Rebecca, would be perfect for you. She's gorgeous. She's tall, blond, has green eyes. She could be a model.\" Words were just spilling stupidly out of Mariah's mouth and she couldn't seem to stop. \"Rebecca is really open and easy-going. She wouldn't be awkward or make things difficult like I do.\" Mariah finally ran out of things to say and trailed off, looking miserably at her hands.\n\n\"So, you want to sacrifice your friend in your place so you can get away from me?\" Michael's voice was flat and hard.\n\n\"No! You don't understand! I want to stay. I want to work on your project with you. I could stay and work with you, and Rebecca could offer the companionship and sex you want. And it's not sacrificing her! She would be all over you. In a good way, I mean. She'd start seducing you the minute she met you.\"\n\nMichael looked angry. Mariah's eyes wandered to the door. She desperately wanted to get out of this room. Michael took her chin and forced her to look at him. His expression was stony. \"Mariah, I don't ever, EVER want to hear again about Rebecca or any other woman as a substitute for you. Do you understand me?\"\n\n\"But I'm not any good at this. I've just gotten here and you're already angry with me.\"\n\nMichael leaned closer and repeated himself, a little louder this time. \"Do you understand me, Mariah?\"\n\nShe nodded.\n\n\"Tell me,\" he demanded.\n\n\"I understand.\"\n\n\"Good.\" His expression softened. His thumb brushed over her lips. \"I want you. Not Rebecca. Not anyone else. Just you.\" He caressed her cheek. \"I'm sorry everything happened so suddenly, Mariah, but I could never be sorry you're here with me. I'm not angry with you. I'm angry that this is hard for you, and that I can't make it easier. I'm angry that I'm not better at helping you understand.\"<br >\n\nHis fingers slid along her jaw and back through her hair. He kissed her gently, tenderly. All she could think was that his lips felt so good against hers, just like she'd been remembering. He kissed her again and again, slow and soft, until she was responding to his kisses. His fingers trailed through her hair to the back of her head, as he urged her into the kiss. Michael deepened the kiss as his other hand skimmed her waist, sliding up to the bottom of her rib cage.",
        "Mariah's pulse was pounding in her ears and she couldn't think clearly. She pulled back from the kiss and tried to calm her breathing. She needed to think, but she was distracted by Michael's hand moving up her side. She took a step back and hit the wall between two of the windows. Michael moved with her, and his body pressed firmly into hers. She could feel his erection against her belly, ramping up her arousal and agitation in equal measures.\n\nShe put her hand on Michael's chest to maintain some distance. He took her hand and pulled it up to his mouth, watching her as he kissed her fingers. He raised her hand and held it loosely against the wall over her head. \"What's wrong, kitten?\" Michael asked in that deep, growling voice that made her tummy feel funny.\n\nHis other hand slid higher until his fingers were brushing the underside of her breast. \"I'm just...\" she floundered as his hand rose to cup her breast. \"Oh...\" She needed to concentrate, but his thumb was brushing just below her nipple.\n\n\"Hmmm? You're just what?\n\n\"Umm...\" She needed to think. \"I'm just trying to think.\"\n\nMichael chuckled and rubbed his thumb across her nipple. Her back arched and she moaned softly. \"What are you trying to think about, kitten?\"\n\nMariah tried to answer, but she couldn't remember what she wanted to say. Michael ran his thumb back and forth over the nub, watching her face. She looked dazed. Her lips were swollen and parted, and her little pink tongue kept darting across them. Every time his thumb rubbed across her nipple, her breath hitched.\n\n\"Tell me, Mariah,\" Michael coaxed. \"What are you trying to think about?\" He pinched her nipple and she gasped. Michael leaned close and spoke softly against her ear. \"Are you thinking about what I'm going to do to you?\" A head-to-toe tremor ran through her. Michael bit her earlobe gently and sucked it between his teeth, then let his teeth drag over her skin as he released it. \"That's what I'm thinking about, kitten -- all the things I'm going to do to you.\"\n\nMariah gave up trying to think. He tweaked her nipple again and she whimpered. It was getting hard to stand up. Michael's lips brushed her ear when he spoke. \"We have to go upstairs. Now. Otherwise, I'm going to have to fuck you right here up against the wall.\" Mariah's pussy clenched. She was so wet. It would feel so good to have him inside her. She knew she'd wanted to stop and think, but she couldn't remember why that would be helpful.\n\nMichael led Mariah by the hand to the elevator. As soon as he pushed the button, he backed her against the elevator wall for a searing kiss as the elevator completed the short ride to the third floor. He was reluctant to give up her mouth, but he needed to get her to his bedroom. He pulled her out of the elevator and headed for the doors to his private wing. Once through the doors, he turned to shut and lock them.\n\nWhen he turned back to Mariah, his eyes had a predatory glint. He reached for her and kissed her hard, using a hand on the back of her neck to hold her against him. Keeping hold of her hand, he led her down the hall to his bedroom, where he stood her in front of the bed. He cupped her face in his hands and kissed her lips. Then he stepped back.\n\n\"Take your dress off for me, Mariah.\"\n\nShe hesitated. Her nervousness from earlier came creeping back, but she was still dazed. She wanted Michael to touch her again.\n\n\"I want to see you, kitten. Show me.\"\n\nHaltingly, she pulled the dress over her head. \"Good girl.\" The phrase sent a wave of heat between her legs. Michael moved to her and kissed her again. His hands ran down her arms and he took the dress from her. He stepped back again so he could look at her.\n\nThe white lace of her bra and panties accentuated the golden-brown tones of her skin. His eyes traced the graceful lines of her collarbones. They stood out in relief as her chest rose and fell, and her leanness reminded him of the scarcity she had been living in. He would be happier when Marcus's cooking filled out some of her hollows, but her delicacy accentuated the elegance of her frame. Her breasts swelled above the gentle depression of her stomach. He imagined his hands on the curve of her waist, holding her beneath him. The flare of her hips invited him. He needed to see more of her.\n\n\"Take your bra off for me.\" Her dark eyes fixed on him. She looked skittish. \"Please,\" he coaxed. He was pleased when she reached back to unclasp her bra. Once it was unfastened, she hesitated. He urged her on. \"I want to see your breasts, kitten. I want to look at them now because my hands will be all over them later.\" She shivered and shrugged the straps off her shoulders. She slid them down her arms and let the bra fall free.\n\n\"Good girl,\" he praised her huskily. He swallowed hard. His cock throbbed against the confinement of his pants. He could hardly wait to fill his hands with her breasts. The fullness of her breasts' lower curves gave her nipples an upward tilt. He wanted to taste them. He would. Soon.\n\n\"Now your panties.\" He could hear the strain in his own voice. Mariah hooked her thumbs in the waist of her panties and skimmed them off. Her groaned when he saw the wet sheen on her neatly trimmed pussy. Christ... the insides of her thighs were wet, too.\n\n\"Good girl. Delicious.\" He moved closer. The musk of her arousal sent thrills shooting straight to his groin. He was already aching for relief, but he was determined to take his time with her. He tilted her chin up and leaned down to kiss her. Her cry of surprise when his finger slid through her pussy was lost against his mouth. His finger came away coated in her slickness. He heard her suck in her breath when she saw him taste her on his finger. He groaned appreciatively.\n\nHe pulled her against him abruptly. He kissed her deeply and his tongue plunged in to claim her mouth. His hand rose between them to cup her breast. Of her own accord, she began rubbing against him and arching her body to push her breast into his hand as she sought more contact. With a hand on her waist, he held her hips against him as he ground his erection against her stomach.\n\nShe hadn't noticed that her hands had curled around Michael's forearms until she felt him take her hands away one at time. He gathered her wrists behind her back and held them there while he kissed her. Then, he moved to her side, so that he was facing her profile, and held her wrists behind her in one hand while his other hand ranged freely over the front of her body.\n\n\"All mine, Mariah,\" he whispered against her ear. Need ran through her and her pussy throbbed. Warnings skittered through her mind like frightened mice, but she was already caught in the pull of his words and their dark allure.\n\nWithout releasing her hands, he cupped her nearest breast as he bent low to suck her nipple into his mouth. He sucked hard, tormenting the stiff and swollen nub as his hand slid from her breast. He caressed her stomach, trailing downward. His finger slid between her folds again, and this time her hips arched towards his hand. His finger glided forward and back through her slick heat, nudging her clit at the top of each stroke. He closed his teeth around her nipple and tugged gently as he raised his head until her nipple slipped free.\n\nMichael's fingertip circled her clit while he whispered against her ear. \"I'll enjoy keeping your little pussy hot and wet for me. Would you like that, kitten?\" He pinched her clit between his fingers and stroked up and down the sides of it. Mariah's needy little noises excited him. \"Would you like being slick and ready for me all day long? So ready I could just bend you over and take you any time?\" She shuddered. He gave her clit another pinch.\n\nMariah's legs felt shaky, and she was relieved when he guided her to sit on the edge of his bed. She watched as he undressed. When he pulled his shirt off, she saw the definition of the muscles she'd felt earlier. They were beautifully defined without excessive bulging, and his skin rippled when his muscles flowed beneath it. She wanted to taste the smooth skin on his chest, right above the trail of hair in the center. She wondered what he would do if she flicked her tongue across his nipples.\n\nShe watched as Michael unzipped his pants. He pulled his pants and boxers down together and stepped free of them. Her eyes fixed on his cock. It looked so good. The skin encasing his shaft was stretched tight by his tumescence. The dome of his cockhead was smooth and shining with the fluid pooling at his tip and dripping down his shaft. She bit her lower lip and squeezed her thighs together. It made her want to crawl over to him.\n\nMichael noticed her restlessness. \"Stay there, kitten.\" He squeezed his hand around his shaft and gave it an upward stroke. More clear fluid welled up and spilled down the head of his cock. He looked up to see her eyes locked on what he was doing. The tip of her tongue touched her lip.\n\n\"Do you want a taste?\"\n\nMariah nodded without taking her eyes off his cock. She reached out when he came close, but he stepped back. \"Put your hands in your lap, kitten. I don't trust you not to make me come much too soon.\" She looked so disappointed that he couldn't help chuckling. \"Don't worry. You'll still get to taste.\" He swiped his finger across his tip and held it to her lips. Her tongue darted out and she ran it delicately over his fingertip, pausing the motion of her tongue briefly to appreciate the flavor and texture before she resumed licking the fluid from his finger.\n\n\"Greedy little kitten. Do you want more?\" She nodded hopefully. He gathered a bead of precum on his fingertip and held it just out of reach. \"Open your mouth for me.\"\n\nMariah's lips parted instantly, and he slipped his finger into the warmth of her mouth. Her lips closed around his fingertip and she sucked. She looked up at him with those big brown eyes while her tongue caressed his finger and she sucked it deeper into her mouth. He began siding his finger in and out over her tongue. Her eyes closed as she sucked, and he noticed her squirming against the bed. He looked forward to exploring her oral fixation. Not right now, though.\n\nMichael pulled his finger away and she waited eagerly for more. He smiled. \"That's all for now.\" She looked disappointed again.\n\n\"Michael?\".\n\n\"Yes, kitten?\"\n\n\"May I please lick it?\"\n\nMichael groaned. \"Lick what?\" He wanted to hear her say it.\n\nShe moistened her lips and squirmed on the edge of the bed while she decided whether she wanted it badly enough to say it. She did. \"May I please lick your cock?\"\n\n\"Just one lick, okay?\"\n\nShe nodded her agreement, but the look on her face made him suspect that she'd have her mouth halfway down his shaft in a matter of seconds if he allowed it. He tangled his hand in her hair as a precaution. He stepped closer to her and she reached out to curl her hand around his shaft. That wasn't part of the deal, but he let her get away with it. She leaned forward until his hand in her hair held her back. Determined to get the most out of her one permitted lick, she turned her head to the side to curl her tongue beneath the flared head of his cock, and licked upward in a swirl, straightening her head until she licked right across the tip. His hips jerked reflexively with the urge to push himself into her mouth. Later.\n\nHe heard her whine as he pulled away, but there was no way he was letting her mouth anywhere near his cock again until he'd fucked her senseless.\n\n\"Get all the way on the bed and lie back for me.\" She scooted back on the bed but hesitated to lie down. Michael sat on the bed beside her and put his hand to the middle of her chest. He pushed her back until she was lying flat.\n\nHe raised her arms toward the headboard and crossed her wrists. \"Do you think you can keep your hands just like that for me?\" She looked doubtful and nodded unconvincingly.\n\n\"I don't think you can. Don't you think you need some help?\"\n\n\"Help?\"\n\nMichael pulled the belt from an emerald silk robe from his nightstand and wrapped it around her wrists, tying them gently. \"Like that. Don't you think that will help?\" She nodded and started to lower her arms.\n\n\"No, kitten. Your hands stay up where I put them.\" Mariah put her hands back above her head.\n\n\"Good girl. Is that enough help, or do you think I need to tie your wrists to the bed?\"\n\nMariah shook her head. \"I can keep my arms still,\" she answered, but he saw her thighs squeeze in response to the idea of being tied to the bed.\n\n\"Hmmm... I don't know if you can. Besides,\" he teased as he ran his fingers from her breastbone to her navel, \"I think I'd like to tie you to my bed. You'll look so good tied up while I fuck you. What do you think about that?\"\n\nHe smiled when Mariah looked like she didn't know what to think. Without waiting for an answer, he stood up and tied the other end of the fabric around a spindle of the headboard. It was slack enough that she could move her arms, but she wouldn't be able to lower them past her head. He stroked her arms gently, raising goosebumps. Then, he stood back and looked at her. \"That's perfect.\"\n\nIt really was perfect, he thought. She looked like a wet dream lying there with her arms stretched upward and her thighs rubbing together. He sat beside her again and leaned down to kiss her. She raised her head to meet his kiss, but he held her down with a hand on her chest. Brushing his lips past her chin, he kissed and nibbled at her throat. His hand slid from the center of her chest to her nearest breast. He squeezed and kneaded it before he lowered his lips around the nipple and sucked it firmly. He tightened his fingers around the base of her breast as he sucked harder at its peak. Her nipples would probably be tender tomorrow, but he intended to keep her arousal high enough that the tenderness would add to her excitement. He released her nipple slowly, his teeth scraping over it until it popped free.\n\nHe moved to her other breast. He wrapped his hand around its base and squeezed so that the flesh mounded high. He licked across her nipple and around the areola, then blew across her moist skin. She shivered and her nipple grew even harder, standing rigidly from her breast. Mariah moaned when he drew it into the warmth of his mouth. He was gentle at first, swirling his tongue against the tip as he sucked it. When he felt her squirm, he held the base of her nipple firmly between his teeth and tongued it. She sucked in her breath sharply and stilled. He gave it another long, hard suck before he rose to move between her thighs.\n\n\"I'm going to enjoy playing with your nipples, kitten. They're so responsive. I'm going to keep them so sensitive.\" She shivered and tried to squeeze her thighs together, but his knees held them apart. He raised her knees a bit and caressed the insides of her thighs. He pushed her legs further open and held them there. The outer lips of her pussy were so swollen that they pulled back, displaying her glistening dark-pink core. All for him.\n\nHe lowered himself to swipe his tongue through her center. His tongue circled just inside her entrance, before he dragged it up through her folds. When he reached her clit, he tongued it briefly before returning to her slit. He lapped greedily. Her hips arched when he slipped a finger into her and worked it slowly in and out. She was so slick that a second finger slid in without difficulty. Her pussy gripped his fingers tightly, but her inner walls were too slippery to offer real resistance.\n\nMariah whimpered as Michael's fingers sunk into her. She felt so full, even though she only had his two fingers inside her. She felt his lips against her clit, kissing it. Then she felt his tongue again, and she couldn't stay still. Michael used his other hand to hold her hips down against the bed while his tongue circled her clit. His fingers moved faster, driving into her. The muscles in her inner thighs twitched and her hips strained upward against his restraining hand.\n\nHe sucked her clit and twisted his fingers inside her until she was bucking beneath him. She was panting hard and her whole body was quivering with tension. He held her there on the crest of her pleasure, prolonging it until he was ready to push her over the edge. When he did, he thrust his fingers in deep and pumped hard while his tongue lashed over her clit. She cried out as she came, pulling against the belt that secured her wrists and twisting her hips so frantically that he had to withdraw his fingers so that he could hold her hips down with both hands.\n\nHe didn't let her come down from her climax. He continued licking, more gently now, making her hips jerk. She whimpered and tried to pull away from his mouth, but he followed her. He had no intention of letting her stop yet. He used feather light strokes of his tongue against the hood of her clitoris until the bud beneath it began to swell and tighten again. She whined softly as he teased her too-sensitive clit by alternating soft, slow licks and glancing flicks of his tongue.\n\nMichael moved his forearm to rest across the top of her pelvis to hold her in place so that he could use his other hand. He formed a V with his first two fingers and placed it just below her clit. As his fingers slid up the sides of the nub, he firmly pressed the V into her flesh, making her clit to stand out inside the V. Then he squeezed the sides of the V toward each other to stimulate the back of her clit. Mariah's thrashing calmed as another orgasm began to build.\n\nWhen she acclimated to the higher level of sensation, he added the pressure of his tongue, trapping her swollen, over-sensitized clit between the flesh pinched behind it and his tongue against the top of it. When she began rocking her hips again, he started moving his tongue. He could feel the tension building in her body. He sucked softly as he pulled his mouth away.\n\n\"Again, Mariah. Come for me again,\" he demanded. He sucked her clit deeply and held it between his teeth while rubbed his tongue against it. Seconds later, her climax hit her. Her body shook like she was in the grip of an electrical shock. Finally, she laid panting and spent. Michael looked down in satisfaction at her deeply reddened, quivering pussy. It was going to feel so good around his cock.\n\nHe rose above her, taking in the sight of her in his bed at last. He was struck again by the eroticism of the emerald green belt around her wrists. Her chest was heaving with deep, shuddering breaths. Her face shone with a thin sheen of sweat, and little tendrils of her dark hair stuck to her skin around her hairline. She was gazing up at him with a look of amazement blended with lust.\n\nHe leaned over her and looked down into her eyes. \"I'm going to fuck you now, kitten.\"\n\nThe deep growl in his voice made her stomach flutter. She watched as he settled between her legs. When he looked up at her again, the intensity in his face made her breath catch. His gaze traveled down her body and fixed between her legs. She felt uncomfortably exposed, but the hunger she saw on his face excited her.\n\nMichael placed the head of his cock against her opening. He paused to enjoy the sight, then pushed steadily into her. His tip was blunt and his shaft was thick, but she was so wet that he easily pushed through her body's resistance. He groaned as she stretched around him. He didn't stop until he sank into her completely. He held himself there, seated as deep as he could push himself, and focused on the sensation of his cock throbbing in her liquid heat.\n\nMariah couldn't lie still beneath him. She was so sensitive that the slightest friction caused her inner muscles to clutch at him. Her clenching muscles caused a spasm of pleasure that made her squirm and move on his cock, catching her in a vicious cycle of sensation and response. He watched her writhe on his cock for as long as he could stand it, but a man can only take so much.",
        "He pulled back and plunged in again through her spasming muscles. She moaned and quivered, and the last of his control snapped. He braced his arms beside her shoulders and began driving into her pussy. Her breasts bounced with every thrust. He pounded into her until he had to stop to breathe. He ground his pelvis against her clit, instantly setting off a spasm that made her hips arch and her pussy twitch around him.\n\nHe resumed stroking into her at a more measured pace, letting her spasms and twitches work his cock. He built speed slowly, and the steady friction was working her up to a crescendo. At the top of each stroke, her hips jerked upward and her muscles seized around him. He kept fucking her until her breathing was ragged and her inner muscles were locked around his cock in spasms so strong that even as wet as she was, it was becoming difficult to move inside her. With the last of his stamina, he slammed into her pussy and came with a groan.\n\nHe slumped forward, careful to keep his weight off Mariah. When he could move again, he climbed up beside her. The thought of leaving her wrists tied was tempting, but he untied them and kissed the inside of each wrist. He turned her toward him and gathered her against his chest. She sighed as he stroked her hair and he listened to the little satisfied sounds she made. Exhausted and sated, they drifted off to sleep.\n\nMariah was only asleep for moments before her eyes snapped open again. She couldn't fall asleep in Michael's room. Under no circumstances would she leave Henry, Julia and Duncan alone on their first night here. Michael's arm was draped over her. She tried to slip out from under his arm without waking him. She gathered her clothes quietly and was heading toward the door when Michael woke up.\n\n\"Where are you going, kitten?\"\n\n\"I've got to get back to Henry.\"\n\nMichael jumped out of bed and strode over to her, looking dangerous. \"Did you just say you have to get back to Henry?\"\n\nShe nodded. \"I can't leave him by himself all night.\"\n\nHe felt rage and pain building in his chest. \"Who the hell is Henry, and why am I just now hearing about him?\"\n\nShe stepped back from him in alarm. \"You know about Henry. You promised I could have him here.\"\n\nMichael looked at her like she'd lost her mind. She was genuinely frightened now. She couldn't let him get to Henry, and she didn't know what to do. She dashed toward the door, hoping to barricade herself in her room where she could try to protect Henry. He caught her. It was like trying to hold onto a wildcat. She kicked and clawed and twisted to get away. She had little chance of getting away from him, but he was afraid she would hurt herself. He managed to get his back against the door and let her go.\n\nShe ran to the window and unlocked it before she realized it wouldn't do her any good to get out of the house, even if she could climb down to the ground. She had to get to Henry, so she moved back to the door. If Michael opened it, she would try to run past him. When he didn't move, she yelled at him.\n\n\"What the hell is wrong with you, Michael? You know damned well I only came here under the condition that my pets came with me, and that they would be TREATED KINDLY!\"\n\nHe looked at her in bewilderment. \"What's that got to do with anything?\"\n\nShe realized what was going on and threw up her hands in exasperation. \"Henry is my dog, Michael.\"\n\nThe look on Michael's face was priceless. After a moment of sheepishness, he shook his head and started laughing. Mariah was not even mildly amused. He sat down on a love seat in his sitting area and gestured for Mariah. \"Come here, kitten.\"\n\nMariah wasn't having it. \"No,\" she snapped. She hadn't decided whether it was best to stay in Michael's room where she could stay between him and the door to keep an eye on him or go to her own room and lock him out. She was leaning toward locking him out.\n\n\"I'm sorry. Please come here. Give me a chance to talk to you. I promise you don't need to worry.\"\n\nHer adrenaline was wearing off and she started shaking. She just wanted this to be over with. Michael came to her and led her to the love seat. He sat down and pulled her onto his lap. He tucked her hair behind her ear so he could see her face. \"I'm so sorry, sweetheart.\"\n\nShe didn't answer. All she wanted was to be safe in her own house with Henry and Julia and Duncan safe and happy cuddled around her and Mister Barnaby and Quincy comfortable and secure on their shelf in her own bedroom. She could picture it in her mind. She would light a few candles in the fireplace, and they would curl up on the couch and listen to leaves rustle outside the windows. She swallowed hard around the aching lump in her throat and squeezed her eyes shut. She couldn't afford to think of things like that.\n\n\"Mariah,\" Michael tried to get her attention. \"I don't know what came over me. I'm not used to being jealous, but I do feel jealous when it comes to you, and I didn't deal with it well at all. I'm sorry I scared you --\"\n\n\"I'm not scared of you!\" Mariah interrupted indignantly.\n\nMichael picked up her hand and kissed her knuckles. Her fingers were still trembling. \"I promise I would never hurt Henry. I'm sorry I acted that way. Can you forgive me?\"\n\nMariah wished he hadn't asked her to forgive him. She was tired and completely overwhelmed. It would be so much easier to forgive him so this could be over. Maybe this once, there wouldn't be any harm in doing the easy thing.\n\n\"Okay. I forgive you.\"\n\nHe hugged her to him, and she felt a sense of relief. The incident was over and things could go back to what passed for normal in this household. Michael was relieved, too. He hadn't known what to do when she went wild like that. He was embarrassed by his behavior and appalled that he had scared her. And, of course he felt like a complete idiot. It was beyond ridiculous. He knew she thought so, too.\n\nHe kissed her cheek. \"Thank you, sweetheart. Now, do you suppose you could introduce me to my rival?\" That got a smile out of her.\n\n\"Only if you promise to be a gentleman,\" she admonished.\n\nMichael pulled a dressing gown off a hook and handed it to her, then found a bathrobe in the bathroom for himself. Michael followed her next door to her bedroom. As soon as the door opened, a dog jumped off the bed and came bouncing over. His wiry fur was a mixture of tan and black. He looked a bit like a much larger, seedier version of Benji. He jumped up and put his paws on Mariah's shoulders for his hug.\n\n\"This is Henry.\" Henry looked over at Michael. \"Go say hi,\" Mariah told Henry. He whined at her.\n\n\"He's just holding out for his kiss.\" She kissed the top of his head and he dropped to all fours and trotted over to Michael.\n\nMichael leaned down to pet him. He felt it was important to make a good first impression with Henry, but he didn't have much experience with dogs. His father had never allowed them in the compound. Henry didn't wait for him to figure it out. Without hesitation, he gave Michael a big, wet kiss. Mariah giggled. \"I'm sorry. I should have warned you. He likes to slurp faces.\"\n\nMichael wasn't wild about the dog slobber, but he was pleased that Henry seemed to approve of him. He was looking forward to getting to know him. It might be nice to have a dog around the house. \"Does he play fetch?\" he asked Mariah.\n\n\"Sort of. He's not interested in sticks, but if you throw a toy or a pinecone for him, he'll chase after it. He'll usually bring it back a few of times, but eventually, he just wants you to chase him for it.\"\n\nHel was still petting Henry when a large black and white cat with tuxedo markings came up and started rubbing against his legs. \"This is Duncan,\" Mariah told him. \"He's a good boy most of the time, but he can be a brat.\"\n\n\"Does he want me to pet him?\"\n\n\"He not only wants you to pet him; he expects it. It's polite to let a cat sniff your finger before you pet him, though. He likes it if you pet him in smooth strokes from his shoulders to the tip of his tail.\" Michael obliged and Duncan purred loudly.\n\n\"Julia is over on the window seat. She's a bit elderly and a little prim, so it's probably better to let her get to know you on her own terms.\" Julia was a small cat with Siamese markings, but was softer and rounder than a full Siamese.\n\nMichael looked around. \"Is there anyone else?\"\n\n\"Mister Barnaby is in this cage here.\" Mariah showed him. \"He's a field mouse. I found him in a mouse trap when I was snooping around the power plant. He has nerve damage from where the trap damaged his spine. He can't use one of his back legs, so he wouldn't be able to survive on his own. He's asleep right now. He sleeps a lot. The best times to see Mr. Barnaby are around dusk and his dinner time.\"\n\nShe took Quincy's terrarium down from the shelf and showed Michael. \"This is Quincy.\" He didn't see anything. She pointed him out. \"Quincy's a cricket. He lost his back leg, so he can't jump around. The moss and bark in the terrarium are easy for him to hold on to so that he can walk around on his other legs without falling over.\"\n\n\"How'd you end up with a one-legged cricket?\"\n\n\"I just found him on the sidewalk one day.\"\n\n\"Why did you name him Quincy?\"\n\n\"Look at his little face.\" Michael looked closer. He hadn't thought about crickets having faces before, but he could see little eyes below Quincy's antennae, and little mandibles at the bottom of his face.\n\n\"Don't you think he looks like a Quincy?\"\n\nMichael shrugged. \"If you say so.\"\n\nMariah tried to hide a yawn. Michael realized it was late and she'd had a long day. \"Let's go back to bed.\"\n\n\"I need to sleep in here with them. This is their first night in a new place. It's important for me to be with them.\"\n\n\"I understand,\" Michael patted Henry's head. \"You win this round, sir.\"\n\nBefore he left, he pulled her to him and kissed her softly. \"Sweet dreams, Mariah.\"\n\n\"Goodnight, Michael.\"\n\nMariah was exhausted, but she wanted to clean up before she climbed into bed. She pinned up her hair so she could keep it out of the stream of water. In the shower, she soaped up quickly. She washed her nipples gingerly and avoided letting the water hit them directly. They would be sore for a while. She ached between her legs, too -- not just her tender clit, but her whole pussy. She was annoyed with herself when she realized she was getting wet again from remembering how she got so sore.\n\nAfter she dried off and let her hair down, she rummaged through the drawers in the closet until she found some pajamas. She normally slept naked, but she would feel less vulnerable in pajamas. Most of what she found fell into the negligee category. What she really wanted was a pair of leggings and a giant sweatshirt, but she did find a cotton shirt and shorts set. It probably qualified for Michael's selection criteria because the shorts barely covered her butt and the shirt was a crop top. She planned to swipe some tee shirts from him at the earliest opportunity. They would be long enough for her to use as nightshirts.\n\nShe threw back the comforter and slipped between the sheets. They were luxurious, and the pillows were so soft. It all felt so comfortable that it was easy to snuggle into the bed and let her mind drift. Henry jumped up on the bed and settled next to her. Julia came running and took up her spot above Mariah's head. Duncan showed up a minute later and laid on top of Henry. Henry growled at him half-heartedly and Duncan ignored him, like always. It was their nightly routine.\n\nMariah was glad Michael hadn't suggested sleeping in her bed, but she wondered why he hadn't. Perhaps he just didn't think of it. She would like to think he was respecting her privacy, but that seemed highly unlikely. He clearly had some boundary issues. She wasn't comfortable with the intimate turn things had taken. She knew sex and companionship were part of the deal, but he was interacting with her as though there was an emotional component. She had expected more of a friends-with-benefits relationship.\n\nPerhaps her own emotions were making her read too much into it. She found herself liking him entirely too much, but there was no point worrying about it tonight when she couldn't think straight anyway. She turned out the light on the nightstand and snuggled into the bed. She was asleep in less than a minute.\n\n____________________________________________________\n\nChapter Two is written and will be submitted after editing. I would welcome your constructive feedback. There is room to make adjustments as the story goes forward. Please let me know what worked for you, what didn't, and what you'd like to hear more about. I'd also welcome style notes. If something annoys or confuses you, let me know. Your feedback will guide future submissions. I would really appreciate it if you vote for this story. It's the only way I'll know whether there is a demand for more.\n\nFinally, I'm looking for an editor for future chapters. If you're interested, please contact me!\n\nThanks for reading!"
    ],
    "authorname": "Enchantment_of_Nyx",
    "tags": [
        "coercion",
        "dominance",
        "dominant male",
        "drama",
        "multiple orgasms",
        "orgasm",
        "post-apocalypic",
        "reluctance",
        "submission",
        "submissive female"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/after-the-fall-ch-01"
}