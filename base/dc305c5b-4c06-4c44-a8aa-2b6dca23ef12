{
    "title": "Arcanum - Of Steamwork and Magic Ch. 11",
    "pages": [
        "April 30<sup>th</sup>, 1885 \n\nAshbury, the United Kingdom \n\nThe sea salt and fresh wind off the coast mixed with the scent of fish, of tar, of sailcloth, of unwashed sailors, and of sewage to create a pungent mixture in my nose -- but it was all worth it to see the wide eyed expression on Cynthia Boggs' face as she walked off the gangplank of the Gypsy Queen and onto the mainland of Arcanum for the first time. I watched her, turning to look at Captain Teach, who was fingering the stem of his long pipe, narrowing one eye fiercely as he eyed the former prisoner. \n\n\"You'll be sure to find her a place?\" I asked. \n\n\"Oh, aye, Mr. Cog,\" Captain Teach said, puffing on his pipe. \"But why are you so set on heading out. Who put a match to your fuse, eh?\" \n\nI sighed, then reached into my pocket and tugged out a pair of emerald spectacles. They caught the light of the morning and glittered luminescently, while my comrades in arms started to get off the ship, Sally giving a few of her bone cracking hugs to several of the sailors she had gotten on with better than the others, while Virginia seemed pleased to be on some land that didn't pitch beneath her feet. I tucked my glasses back into my pocket and smiled at Captain Teach. \n\n\"We've got some more dwarves to find, Edward.\" \n\n\"More?\" He scowled. \"You already got one dwarf. Not sure what you need with more of 'em.\" \n\nI slapped his shoulder. \"If you're lucky, you'll find out why by reading the newspapers, Edward. Send Mr. Bates my regards and this...\" I held out a small collection of papers. It had taken some practice to get used to writing in the pitching cabin, though my technological writing implement -- the ballpoint pen -- proved more than able at keeping ink from spilling everywhere. I had transcribed everything that had transpired upon the Isle of Despair. Leaving out, of course, time stopping monsters, rescued women, banished princesses, and ancient constructs of mysterious providence. \n\nSo, in honesty, I had actually transcribed very little that happened upon that penal colony. But the important facts were there: We were heading for the Wheel Clan, the highest clan of all the dwarves. If they didn't know where the Black Mountain dwarves were located, then I was beginning to think that a better place to check would be Madame Toussaunde's. I smiled at the memory of the exotic, spirit riddled woman, but the smile faded as Gillian's posh voice called from the dockside: \"Sir! Are you quite ready to go now?\" \n\nEdward Teach took my hand and pumped it. \"I never made much truck with sods who think they can judge a man's character by his skin,\" he said, his voice gruff. \"Orcs, full blooded and half, have shipped with me many a time. And you? You can ship with me again. If you ever need a ship...\" \n\nI squeezed his hand back. \"Of that I am most assured, Edward.\" \n\nHe released my hand and, together, I and my comrades set out for the Wheel Clan. \n\n*** \n\nThe Morbihan Plains were considerably less enjoyable to cross when one was hiking compared to traveling in first class. But I had spent a rather ill founded youth upon them, and I knew the tricks and the stratagems to cover distance in some comfort. Walking during the night, with walking sticks to keep from being caught in sink holes, sticking to the open plains rather than the more dangerous rocky hills that bordered dried up riverbeds. Placing a rope about ones sleeping bag, to dissuade the various forms of snake from seeking out your bodily heat in the cool night. All of these strategies helped to ease our passage as April turned into May and the heat of the day grew only more intense. \n\nBut, by the gods, if there was one thing I could not complain of, it was the company and the view. Each of my comrades had settled firmly into our party, and each seemed to shore up the weaknesses and blind spots of the other. Virginia often served as a task-mistress, keeping everyone on track during the camps at night, and managing the supplies. Sally remained her jovial self away from the sea, while Maggie and Gillian both brought their own charms to the conversation -- though I did note that Maggie grew more and more withdrawn the closer and closer we came to the Grey Mountains. \n\nAnd the views! We hiked past the vast, flat topped rock that was rumored to be the lair of the ancient dragon Bellogrim -- dead these past two thousand years. While the temptation to divert our course, to see the great bones and the vast cave that the Tarantian Society of Naturalists had been excavating for the past thirty five years, was great...we remained steadfast. Or, more accurately, Virginia, Sally, Maggie and Gillian all pointed out that while I might have been fascinated, they would have been deadly bored. \n\nThe weeks passed, and May crawled by as we hunted for our food and drank from watering holes, stretching our supplies whenever we could, in the case of some serious setback. And sometime, when the day was crawling by as we lounged in the shade, Virginia would come to me in my tents, and we would share a slow, sensual time together. If we stuck together -- slick and tacky with sweat and other fluids -- once we were done, the awkwardness and discomfort never seemed to be noticeable until we were recalled to our senses, usually by one of the other members of our party informing us that they were done pretending to not notice Virginia's moaning and my grunting. Each, I add, in their own unique way. Maggie would inform us via beginning to talk extremely loudly to one of the others. Gillian would, instead, begin to hem and haw and then begin to cough in as posh a manner as one could. \n\nSally, meanwhile, simply stuck her head into the tent and asked: \"Ey, room for one more?\" \n\nBut finally, on the 21<sup>st</sup> of May, we came to the vast, roaring rapids of the Hadrian. The huge river that spanned the entirety of Tarant was even larger and even more powerful here than it was in that great metropolis. The water stretched nearly a mile from bank to bank, and was fed by what seemed to be a dozen waterfalls that thundered from the sides of the Grey Mountains, fed by the immense snowpack that clustered on those mountains after every winter. \n\n\"How do we get across?\" Virginia asked, frowning as she picked up a smoothed rock and tossed it. She managed six leaps, which provoked a gentle golf clap from Gillian. Virginia shot the orcess a grin and bowed to her, sweeping one arm out wide. \n\n\"I could construct a boat of some kind...\" I said. \n\nMaggie snorted. \"You may be smart, Ray, but I'd want you to go first on any raft you make.\" \n\nSally blew a wad of snot from her nose, then snorted in a breath of air. \"There's gotta be a bridge.\" \n\n\"We're hundreds of miles from anywhere,\" Virginia said. \n\n\"Nah, Stillwater's around here somewhere,\" Sally said, nodding. \n\nMy hand dipped to my pocket. I felt the emerald glasses, which had survived this entire trip unscathed. \n\n\"I'm sure a human town knows exactly how to find a secret dwarven entrance,\" Virginia said, her voice growing wry. \n\n\"They might!\" Sally said, then hiccuped. \"Okay, they...won't.\" \n\n\"Ladies,\" I said, cheerfully. \"Give me but a moment.\" \n\nAnd with that, I set the glasses upon my nose. \n\nThe view through the glasses looked identical to the view without. But then, as I looked out at the Hadrian, I saw a shimmering above the waves...and then a flux within the air, like the movement of heat rippling off black tarmac road. The ripples coalesced, transforming into a single massive bridge made of perfectly rectangular stones, the edges braced against the water by carved plinths, each one fashioned to look like a stoic dwarven warrior, holding the bride up beneath their stout shoulders, their beards submerged under the water and their mustaches frothing with white rapids. The bridge itself, though, led not to the far side of the Hadrian. Instead, it plunged downward, into a tunnel of stone set in the center of the Hadrian itself, the walls fashioned to keep not a single droplet from going down the tunnel itself. It was like a well, sunk into the middle of the river, and all of it was designed ingeniously to bend light, using what decorated the stone: Cut gemstones. Thousands of them, each one angled in such a way as to keep the entire construction from prying eyes. I was almost positive that at least some measure of magick had to be used to force natural laws to assist with this endeavor -- and checking my pocket watch confirmed this, revealing that it was ticking ever so slightly off from its normal cadence. \n\n\"What have you found?\" Virginia asked. \n\n\"Well, old girl,\" I said, tucking the glasses away before leaping into the Hadrian. Everyone cried out -- but I landed not in the water, but rather upon the bridge. And with my unexpected personage standing in the way of the manifold beams of bent light, the entire illusion seemed to haze out of existence -- though I was sure that it would return once we had entered into the Wheel Clan itself. I turned to Virginia, holding a hand out to her. She looked as if she could hardly believe that such a construction had been concealed from her, and stepped only tentatively upon the stone. Maggie looked shocked to her core, and was hastily adjusting her false beard -- I would need to begin thinking of her as 'Magnus' once more. \n\n\"Bugger me sideways,\" Sally muttered as we walked along the bridge and to the well that led into the Wheel Clan properly. Setting foot upon the stone top of that well, I heard a low groan, then a series of clicks and clatters. This preceded the floor descending, like some vast elevator. Each of my comrades tensed in alarm, and I admit, even my hand dropped to my acceleration pistol. But as we descended into darkness, I chuckled. \n\n\"Some kind of hydraulic mechanism,\" I said. \"I...ah! The wheel clan!\" I chuckled. \"A water wheel!\" \n\n\"Ah.\" Virginia's voice was clipped. \n\n\"I don't get it,\" Sally whispered. \n\nThe smooth clicking and clattering came to a sudden, juddering stop. My arms flung out and Virginia grabbed onto my shoulders, trying to keep me from toppling over. We both regained our balance -- though it was trickier than I expected. Within the unlit elevator shaft leading down into the Wheel Clan's domains, the floor had stopped at a slightly canted angle. As if, for some reason, the mechanisms that had been working so perfectly had suddenly...seized up. My pistol quivered in my holster, like a restive beast, and my hand darted to my pocket watch. I drew it and held it to my ear in the near total blackness. I could hear the wild whirring of a second arm going around and around at a dizzying speed. \n\n\"Virginia, I-\" \n\nA wave of orange light exploded from Virginia's mouth and eyes. She clutched at her head -- and so did each of my comrades. Each glowed and each fell to the ground, sprawling about me. I gaped, totally stunned, then dropped to my knee. Immediately, my finger sought for Virginia's pulse, my heart hammering -- and only when I felt her slow, steady heart beat (a familiar pulse, one I had felt many times as she slept in my arms) did I breathe out...and look up. For standing before me, as if he had always been there, was a man. \n\nTall and robed in blood red, the man's face was concealed by a hood -- his hands, though, made it quite clear that there was no reason to look beneath the hood. In the dim light cast down the shaft of this stone elevator, I could see that his hands were naught but shadows. Rippling, crackling bundles of dark energy, coalesced into the forms of humanoid fingers -- but not nearly as comforting as that might sound. For those fingers were not the gentle digits of a human, nor the rough, calloused ones of a hard working dwarf. Rather, they were elongated. An extra joint or two seemed to be positioned within them, giving them an eerie way of moving. The obsidian black shadow that was the fingernail on each appeared to be nearly an inch long -- giving the individual wicked, raking claws to match any beast. And beneath the hood glowed two coal-bright pinpricks. \n\nRed eyes. \n\nI immediately sprang to my feet, drew my pistol, and discharged it. The bullet struck the wall behind the apparition and I felt a momentary tightening of my chest: This fiend could clearly strike at me and mine, while I was unable to do more than rattle his hearing, if that. \n\nThe robed figure chuckled -- a sound as dark as the shadows beneath the hood. \"Greetings, Resh Craig,\" his voice rumbled out, as deep and echoing as this well we stood in. \"It seems to me that you're looking for answers, when you're not too busy shooting at things you do not understand.\" Those eyes gleamed, flaring brighter. \"Perhaps it is time that I answered them for you...\" \n\nI lowered my pistol. \"And...\" I paused, about to ask who he was. But the name sprang to mind, recalling a stone statuette within the dubious museum of H. T. Parnell. It had been easy to laugh, then, in the bright lights of a warm April day, at the thought that such a malformed visage might be the face of my supposed enemy. Presuming, of course, I was indeed the reincarnation of Nasrudin. My teeth clenched and I growled. \"Arronax.\" \n\n\"I sense doubt,\" the figure said. \"Perhaps you are not the Living One. Perhaps Nasrudin, the coward that he is, will not heed Fate's call and face me in the final battle. It would be so like him to do so...\" \n\nMy neck prickled and my hands tightened as I glared at Arronax. \"Well? Are you? Or aren't you?\" \n\nThe dark figure held his hands outwards. A pale red light began to pulse about his body -- a reminder of the red energies of the necromancers I had faced before. But where those had been unto a candle, this growing dark luminescence hearkened to an arc light in a vaudeville stage. His fingers curled inwards and he spoke -- his voice beginning as a hiss, then growing louder and louder: \"I am he of the dark, the rightful ruler of this land, the vengeful god of Arcanum and its races. I am Arronax and I have come to give you a message...\" \n\nI licked my lips. \"Did you ever think to send a telegram?\" I asked. \n\nA force clenched around my throat, then slammed me into the wall. I grunted at the impact, stars flaring through my eyes. Arronax floated closer to me. \n\n\"The message is this.\" He drew closer. And closer. With every word, I could smell the rot and decay roiling from his body, like a physical wall of miasmamatic foulness. \"Whether you are the Living One or not. Whether or not the coward Nasrudin hides in your bones or still rots in his grave, the inevitable will still come to pass. I am returning. It has already been set in motion, and there's nothing you can do about it. I am returning and all will fall before me. Everyone you know...everyone you love...\" \n\nThe tightnenss around my throat grew fiercer. I gritted my teeth. \"You...bastard.\" \n\nHis red eyes bored into mine. \"Do you see my power? Do you yet understand? Perhaps I need to be more clear. No one is safe, Resh. No one. Not even you.\" \n\nDarkness swirled around my eyes. \n\nAnd then I dropped to the ground. The grip around my throat had lessened. I rubbed at my throat, letting out a hoarse cough. A voice echoed in my mind. Arronax's last words -- ringing like the tolling of a black bell: Remember what I have shown you. Remember and tell the world. Arronax is returning to Arcanum and nothing -- nothing -- will ever be the same. Farewell \n\nDarkness grew thicker. \n\nI knew no more. \n\n*** \n\nI woke with the echoing sound of distant laughter in my mind. I sat up, clutching at my chest, dragging in deep gasps. I nearly struck my head against the jaw of a dwarf clad in bright blue robes, who stepped away from me. I took quick, almost panicky stock, of the room. It was a well made, dwarven room -- so similar to the rooms within the Black Mountain Mines. But where those rooms had been dusty and disused and abandoned, this chamber shone with life, care, and attention. Torches flickered in their sconces, while the air smelled faintly of spice and freshly cleaned linen. I looked down and saw that I had been stripped to my loincloth -- but my clothing had been gathered up in a bundled pile on a small table in the corner of the room. My pistol was set in a place of honor on a table beside it, with my bullets arranged in neat rows. \n\nThat struck me powerfully in that frantic moment: The dwarves had clearly been tending to my wounds, and yet, they had taken the time to not only examine my pistol, but to also arrange it as if it was the weapon of a hero. \n\nI clutched at my breast, then slowly relaxed, looking at the dwarven doctor. \"My apologies, sir,\" I said, grinning. \"Or should I say, Doctor?\" \n\nThe dwarf chuckled, his hand going to his beard. Unlike the beard of 'Magnus', this beard was a great deal larger and more fancifully decorated. I could have wagered that this dwarf hadn't trimmed his beard a single time in the multiple centuries of his life -- hence why it had been tucked into the sash of his robes. But the edges of the beard impressed as well: They had been carefully braided into geometric patterns that looked nearly carved -- so straight were their lines, so perfect was the mathematics of their construction. \n\n\"You should, half-orc,\" the doctor said, his voice prim. \"I'm Doctor Tegharan Lightning Rock, of the Wheel Clan. Of which you are currently a guest of.\" He frowned. \"Your friend, Magnus Shale Fist-\" \n\nMy worry released. 'Magnus' was not only alive, her deception was also being carried off with enough aplomb to convince these dwarves. \n\n\"-awoke first and set to repairing the elevator. He has explained your purposes for coming here -- but has not yet told us exactly what happened. According to the guard, a magick field unlike any we've seen in these parts appeared within the elevator...\" \n\n\"It is quite a long story,\" I said, my voice tired. \"But I must speak with your King. Immediately. It is a matter that concerns the future of Arcanum itself.\" \n\nDoctor Lightning Rock pursed his lips behind his beard, eyeing me. But whatever he saw, it convinced him. He nodded. \"Get dressed. The King-In-Waiting shall see you in the throne room.\" \n\nI dressed quickly, then tucked my bullets into my belt pouch, checked my pistol to ensure it was not damaged, then holstered it. When I emerged from the doctor's room, feeling more fit than I believed possible, I found Virginia waiting for me. She was clad in her chain mail and had her magick blade strapped to her hip -- though I noted that the scabbard had a small lock placed upon it. I wondered if the dwarves mistrusted her more, or simply saw the sword as a bigger danger than my pistol. Either way, I embraced Virginia without a second thought, startling her. She jerked, wriggled, then hugged me back -- before pushing me away. \n\n\"Sir,\" she said, her voice deadly serious. \"That was-\" \n\n\"Arronax, I know,\" I said. \n\n\"What do we do?\" she asked. \"If he can strike at us at any time...\" \n\nI shook my head. \"I don't believe he actually can,\" I said, frowning. \n\nHer brow furrowed. \"Sir, he knocked each of us out...\" \n\n\"That he did,\" I said, nodding as I stepped back, then started to walk down the corridor. Two dwarven guards waited at the end of the corridor, and both started to march ahead of us, clearly leading us towards the throne room. I spared them barely a thought, too focused on what I was working on with Virginia. \"But think: Arronax is an ancient, extremely powerful elf. Does that imply stupidity?\" \n\n\"No,\" Virginia said. \n\n\"And thus, with the assumption of the intelligence the gods gave a chimpanzee,\" I said, my voice becoming lower. \"What would possibly prevent Arronax from simply snuffing my heart out the instant he set his mind to it, if he could reach across such vast distances to strike with impunity?\" ",
        "Virginia pursed her lips. \"You think he can't?\" \n\nI nodded. \"Yes,\" I said. \n\n\"Well, sir,\" Virginia said. \"I don't exactly think we can guarantee that. What if his plans involve you liberating him from some prison or something, and he seeks to goad you into unwittingly freeing him?\" \n\nThe dwarven guards peeled off as we entered into a large, vaulted chamber. A throne made of iron and steel sat at a dais that was positioned at the end of almost fifty feet of stairs, though thankfully the stairs were on a gentle incline and quite broad. The throne itself had a dwarven man standing beside it, clad in ornate, gold and silver armor. Standing next to him and looking as terrified as I had ever seen her, was 'Magnus', who was speaking quietly to the dwarven King. As I started up the stairs, I whispered to Virginia. \"Well, then. If I ever find Arronax in a prison, I won't free him. Deal?\" \n\nVirginia chuckled. \"Of course, sir.\" \n\nWe came to the throne and I bowed as low as I could manage. \"Sire,\" 'Magnus' said, his voice pitched so low I was worried that she'd completely lose control of her ability to speak. \"This is my comrade in arms, Rayburn Cog.\" \n\n\"Mr. Cog,\" the dwarven king said. \"I am Randver Thunder Stone, son of Longhaire Thunder Stone, King-In-Waiting to the Wheel Clan.\" He gestured, his armor clicking and clacking slightly. \"Mr. Shale Fist here has told me quite a deal about your adventures. But what he has not said is why you are here.\" He frowned, his thick, black beard bristling ever so slightly. AS I stood and looked into his eyes, I could see that Randver was looking deeply concerned. His eyes lacked the steely resolve I had expected from the king of the most grand dwarven clan in the entirety of Arcanum. \n\nBut maybe his title explained that: King-In-Waiting. Not King. \n\n\"Your majesty,\" I said. \"I come bearing grave news of the Black Mountain Dwarves.\" \n\nRandver's eyes narrowed and he placed a gauntlet clad hand upon the rest of his iron throne. \"Tell on,\" he said. Thus prompted, I told him the entire tale -- starting with the destruction of the Zephyr and continuing on to Tarant, then from Tarant to Ashbury and the Isle of Despair. Once I had completed with my return and the eerie proclamations of Arronax, Randver put his face into his palms, cupping his head -- the most remarkable display of emotion I had ever seen in a dwarf. He breathed out a slow sigh, then dropped his hands. His eyes flashed with anger. \n\n\"Damn the elves...\" he growled. \"Damn them and their assurances.\" \n\n\"What happened exactly?\" I asked. \"Why did the elves banish the Black Mountain C-\" \n\n\"That is the business of my father,\" Randver said, pacing back and forth before me, his hands clasped behind his back. His eyes grew distant. \n\n\"Well, did he tell you?\" I asked. \"Please, your majesty-\" \n\n\"I am not the King!\" Randver exclaimed, turning to face me. He shook his head. \"My father is not dead.\" He paused. \"He...was broken. Broken more completely than any dwarf I had ever seen. You do not know what it was like, outlander, to see Longhaire Thunder Stone on that day.\" His voice grew black and bleak, like the most distant peaks of the Grey Mountains. His eyes looked at mine, but they did not see me. They were witnessing the past, I was sure of it. \"Longhaire united our people after the Clan Wars. For five centuries, he fought to bring us together. He broke Lorek the Abjurer over his anvil at Gorgoth Pass, and burned him and ten thousand dwarven followers of his alive with phosphorous bombs.\" He shook his head. \"He did not break then. But the day after those elves came and he consigned that foolish, short sighted, backwards clan to their punishment, he...he tore his clothes from his body. He threw himself against the stones of this hall, beat his fists against the ground, and ripped his beard into tatters.\" \n\nHe closed his eyes. \"And then he took his ax, Harrower, and...left.\" \n\nI shook my head slowly. \"But...but why?\" I shook my head again. \"And w-what were those Clan Wars?\" \n\n\"They happened before humans wrote their histories, in the Age of Legends,\" Randver said, shaking his head. \"When my father was young, and when the world was rich in magick.\" He paced a gain. \"And...you wouldn't understand.\" \n\nI clenched my jaw. \"Randver,\" I said, quietly. \"I believe that I can-\" \n\n\"You believe?\" he turned to face me. \"You think you can see to the soul of a dwarf, and grasp what makes him act and think? Hmm?\" He narrowed his eyes. \"Your kind -- all human stock -- die before a dwarven child begins to speak. And you think you can understand my father and his will?\" \n\nI felt frustrating bubbling inside of me -- and it sprang forth. \"I have been across the width and the breadth of Arcanum twice over. I've been drowned, stricken with amnesia, attacked by assassins, haunted, hunted, accused of being a criminal simply for being green of skin and long of tooth.\" I stepped forward and leaned down, so that my eyes were on the level with this petulant king. \"I am done hitting dead ends and I refuse to budge until you explain what you mean, your majesty.\" \n\nRandver blew out a frustrated snort. Then, crossing his arms over his mailed chest, he lifted his chin. \"Very well,\" he said. \"A dwarven soul is not like that of an elf or a human. It is comprised of, in our words, the Shape and the Stone. If you understand these two things, you can grasp our morality. Our purpose. How we shape our lives within the context of our world.\" He gestured about himself at the great hall. \"How we build such greatness...\" \n\nI nodded -- and out of the corner of my eye, I saw 'Magnus' watching with wide, wide eyes. \"I follow.\" \n\nRandver rubbed his beard, looking as if was struggling to find the words. \"The Shape is...the Stone...\" he sighed. \"The Stone is unchanging. Gravel is gravel. Flint is flint is flint.\" He nodded. \"You can craft a great deal from stone, but it must be the right stone. Gemstones for delicacy, granite for sturdiness and the like.\" He looked at me, his voice growing more firm. \"You cannot carve a Shape without a Stone -- and the Stone cannot be a Shape without being itself.\" \n\nI nodded again, slowly. \n\nRandver brought his hands together with a clink of metal. \"A fire striker must have flint -- and flint must be a fire striker. The two concepts are linked, you see?\" \n\n\"Yes...\" I said, quietly. \"Go on.\" \n\nRandver, looking as if he was warming to his subject, began to speak with more confidence. I had noticed a sense of unease in him on matters of kingship...but this? This appeared to be what he found to be comforting. No wonder he so missed his father. \"There are many Stones, and there are many Shapes for each stone. And thus, our morality is not a choice, as humans see them. One cannot not be their Shape, nor turn against their Stone. Rather, you express what you are. We are dwarves. That is our Stone.\" He nodded. \"While our Shape...\" He trailed off. \n\n\"You are a dwarf,\" I said. \"That is your Stone. But your shape is that of a King.\" I smiled. \"In Waiting.\" \n\nRandver inclined his head, slowly. \n\n\"And Lorek the Abjurer,\" Randver said. \"He was true to his Shape, that of being a great inventor. But he betrayed his Stone -- being a dwarf, by believing that he and his Clan were greater than all others.\" \n\n\"And your father...\" I said. \"Betrayed his Shape and his Stone. By not protecting his people, he failed at being a king. And by kowtowing to elves over his own people, he failed at being a dwarf.\" \n\n\"And thus, he was nothing,\" Randver said. \"You...follow?\" \n\nI nodded. \"I do,\" I said. \"But one thing does not make sense to me.\" \n\nRandver frowned. \"What?\" \n\n\"How do you know you're the King in Waiting and not the King?\" I asked, my voice soft. \"Where did your father go.\" \n\n\"To the Dredge.\" His voice was grim. \"A warren of tunnels and sledge pits and monster dens. We keep it under lock and key -- but he could be anywhere within.\" His voice caught at that word. Anywhere. My eyes narrowed slightly -- and I saw the only logical reason why he would claim to be a King-In-Waiting. For he spoke of his father being in the Dredge not with hope that his father was alive. No. He spoke with resignation that he was there at all. \n\n\"Randver,\" I said, seriously. \"You know he's alive. Which means you've seen him recently.\" \n\nRandver let out a slow sigh. \"Damn it all,\" he rumbled under his breath. \"Yes. Yes, Mr. Cog. I know where my father is. I had a tunnel dug to his hide-away, so that I might visit him, tell him of the clan. Beseech him to...\" He trailed off. \n\n\"You don't think his self banishment was just?\" I asked. \n\nRandver glared at me. \"What I think does not matter, Mr. Cog,\" he said, seriously. \"My father chose what he thought was right-\" \n\n\"Just as he did when he allowed the elves to banish the Black Mountain Clan, banish them for spreading technology to humans,\" I said, stepping closer to him. \"But he was wrong to do that -- clearly, their banishment has a darker purpose than any we could have imagined. And now, you think he has compounded a failure with his Shape with another failure.\" \n\n\"I-...I-\" Randver looked caught betwixt the devil and the deepest, bluest sea. He clutched at his chest, then wheezed out, as if he had been struck. \"Yes.\" He hung his head forward. \"The tunnel, it...it is beneath my throne. Simply push it aside, and you will reach Longhaire. And...please...Mr. Cog...\" He looked up at me. \"Please, make my father see reason.\" \n\nI clapped my hands on his shoulder. \"I swear it, Randver.\" \n\n*** \n\nI left Virginia and 'Magnus' behind, crawling in the tunnel by myself. Virginia had objected -- but 'Magnus' had born no objections. Indeed, the young dwarf had looked as if she was thinking deeply about the conversation. I wished her the best of luck, but for the moment, I had nothing in mind but getting to the end of the tunnel. Constructed in secret and for a dwarf, the tunnel was pitch black and narrow and low, requiring me to crawl on my hands and knees. My breath often gusted back into my own face, only adding to the claustrophobia of this place. But I gritted my teeth and continued on until, after what felt like an eternity, I came to a small slab of stone, bumping face first into the material. Fortunately for me, the stone was smoothly hinged on metal pivots, and swung outwards into a cave, lit by a smoldering flame. \n\nAbove the flame was what appeared to be a large rat, spitted and slowly sizzling. Kneeling before the rat, turning the crude spit of wood and scrap metal, was yet another dwarf. Grizzled and toughened and entirely exposed, Longhaire Thunder Stone looked in all parts like a king, in a way that his son simply did not. Despite being clad in gilded armor and pacing back and forth before a throne, Randver felt like a school teacher that had been thrust into the pulpit. Longhaire, though, held himself with a regal pride, despite being completely nude. His body was pockmarked with scars and puckered wounds that could have been ancient arrow impacts. He had winding tattoos along his incredibly muscular forearms and his shoulders looked sturdy enough to bowl over a man in full plate with nothing but his short, powerful legs. His beard was cut deliberately short -- and if I was any judge of looks, that shortness suited him more than a wild mass of beard would. \n\nHis eyes were gold and they flared like molten metal as they looked at me. In an instant, he stood, holding a battle ax made of silvery metal in his hand. Lightning crackled along the edge of the blade and his voice -- deep, authoritative, and entirely certain -- filled the small cave. \n\n\"What are you doing here, orc? Speak. Quickly!\" \n\nI lifted my hands and said: \"Your majesty, I am Rayburn Cog, and I have come to speak-\" \n\n\"To speak?\" Longhaire said, his voice deadly soft. He started to pace around the flames, his ax passing from hand to hand as he glared at me. \"You come to speak to me, orc? I have come here to die.\" His eyes flared. \"I have come here to writhe upon the blade of my sorrow, to live a life of a thousand deaths until at last, the great silence claims me, by the rights of the most ancient Kings. These laws are passed down through the mountain from the beginning of time. Your life is forfeit to them -- do you understand?\" He lifted his ax -- clearly intent on bringing his solitude back through main force. \n\n\"I am here about the Black Mountain Clan!\" I shouted. \n\nLonghaire dropped the ax. Harrower struck the ground with a chink of metal and gravel. \n\n\"Speak...\" his voice was roughened with emotion. Sitting down, so that I might be level with the shorter man, I spoke. I told him the tale I had told his son. As I spoke, the rat began to burn, ignored by the two of us. Once I had finished my tale, Longhaire whispered to himself. \n\n\"My shame...\" he whispered. \"My shame returned -- and compounded. How could this have happened?\" \n\n\"Maybe you should tell me...from the beginning what happened,\" I said, my voice soft. Gentle. \n\nLonghaire bowed his head. He spoke...and he told his tale. \n\n*** \n\nLonghaire's Tale \n\nThe elves arrived with bows, swords, and magick. They came in a great host -- or, at least, great for that race. A hundred elves in a single place had not been seen for many centuries, and Longhaire was roused from his bed with the news of their arrival, and with the strident tone of their demands. He went to them, under flag of truce, beneath the vastness of the sky. There, on the bank of the Hadrian, he saw something that reminded him of his worst nightmares. \n\nFor two thousand years, his old eyes had only seen the patterns of war in the hands of humans and orcs and other younger races. Only they had the numbers and the inclination to order themselves and march under snapping banners, in gleaming armor, with bows and spears and swords and shields. For two thousand years, the only time he had ever seen the elder races marching to war had been in his terrible dreams. Dreams of Gorgoth Pass. Dreams of his army's battle cries as axes and hammers met shield and mail. The clang and clatter of metal, the scream of the dying, the wounded. And at the center of it, Lorek the Abjurer, shrouded in a crackling shield of magick and wielding a staff. \n\nThat staff and his ax, Harrower, met again and again in those dreams. \n\nEvery time, Longhaire wished that Harrower would be struck from his hands and the staff's energy would reduce him to ash, as it had reduced the King of the Gemcutter Clan to ash two centuries before. \n\nBut no. \n\nHis dreams never so kind. Instead, he had to remember the sight of Lorek in his mailed hand, his eyes bulging with terror. Of the last, desperate mutterings of the madman, begging him. Begging him not to. Every time, Longhaire was forced to watch as he tossed the mad dwarven king over the cliff, down to the screaming inferno of ten thousand warriors. His army had continued to fire the phosphorous bombs over the edge of the mountain, shooting them into the pass, until nothing was left but burbling slag, slag that had hardened into blackened glass -- still laced with the charred bones of his victims. \n\nLonghaire saw that in the hundred elves. \n\nUniformed. Armored in mithril chain and armed with saber and bow, the hundred elves positively cracked and hummed with magicks. Defensive spells had been cast, and offensive ones waited for the join of battle. \n\nUnder the light of the moon and the endless, gem-scattered sky, Longhaire had met the leader of the elves: Min'Gorad. \n\n\"What is the meaning of this, elf?\" Longhaire asked. Min'Gorad -- whose name had only been revealed to Longhaire after this meeting -- glared down at him. He had been a tall elf. Narrow faced. Sallow complexioned. Red of hair. Utterly unbending. \n\n\"Morhiban is dead,\" Min'Gorad snarled. He tossed down a branch, blackened and charred. \"The entire forest has been cut down by steam engines. Steam engines run by Bates Industry Logging Company.\" His eyes flashed. \"An entire forest, King Longhaire. Every. Last. Tree. The Hadrian runs through a wasteland now!\" \n\nLonghair rocked back -- stunned. The humans had only been given technology twenty years before -- the idea they could have done so much in such a short turning was...very like them. Humans scurried about, under an eternal fear of death. But rather than accepting their lot, rather than finding what peace they could, they ignored death. They thought they could buy immortality by their actions, and so they acted. Acted. Acted. And, as a distant second, they thought. \n\nAnd further after...they felt. \n\nAnd they would never live to see the consequences of their decisions. \n\n\"We are already working on how to punish the Black Mountain Clan,\" Longhaire said. \n\n\"The Silver Lady sent us to ensure the punishment is sufficient,\" Min'Gorad said, his lips curling in a sneer. \"For if the Black Mountain Clan is not punished appropriately, then I have been given orders to tell you that there will exist a state of war between our peoples, King Longhaire.\" \n\nLonghaire's eyes widened. The dream! The dream came to him then -- but now it was not ten thousand dwarves. It was ten million dwarves, screaming out their battle cries, rushing at the elves. Arrows darkened the sky. Magick crackled and the ground itself shook. War machines, long buried in vaults, trundled across the battlefield and Arcanum blackened as the sky filled with ash and the bones of the dead choked out the forests. In an instant, the vision vanished and he clenched his jaw. \n\n\"What punishment could suffice?\" he asked. \n\nMin'Gorand affixed him with an icy glare. \"The Silver Lady of Quintarra says there is only one...\" He frowned. \"Banishment to the Isle of Despair, overseen by ourselves.\" \n\nLonghaire felt his gut knot. He looked at the elves. At their steely eyes. And he saw not a single bit of bend there. But...no. How could he strip a clan of its honor, of its pride. Of its home! He was about to say that -- about to send these elves home. But then his eyes fell upon the blade of Min'Gorand. And Longhaire could feel the bodies in his hands. The bodies, the bodies, the bodies. How many had he buried, how many dwarven sons had he laid to rest in crypts? How many waited the end of the world, eternally looking into nothingness. How many? How many more could he bear to lay to rest? \n\nAnd he learned the answer that day, beneath that endless sky. \n\nNone. \n\n*** \n\nLonghaire lapsed into silence, his face once more haunted. \n\nI had crossed my legs beneath me and my rump had gone nearly numb. But my mind was spinning. \"That's what happened?\" I asked, quietly. \n\nLonghaire inclined his head in a subtle nod. But my mind had latched onto several inconsistencies within the story -- strangeness that needed to be explained. And I would need to guide him into the same realization I had, and that would be the first step in returning Longhaire to his sanity and to his throne. \n\n\"Are elves a warlike people?\" I asked. \n\nLonghaire's brow furrowed. He shook his head. \"No...they have outgrown it. Like we, they realized that war harms many and benefits few people.\" He smiled, slightly. \"It was a bit of wisdom we shared. And...\" His brow furrowed. \n\n\"And the Morbihan Forest, if I remember, was entirely populated by humans before it was clear cut, correct?\" I asked, sitting up more. \n\n\"Yes, I...\" Longhaire stroked his short beard. \"Yes, elves had relocated to the Glimmering Forest before the 14<sup>th</sup> century.\" ",
        "I nodded and stood up from the ground. \"And do elves hate dwarves enough to grasp upon any excuse to fight?\" \n\nLonghaire shook his head again. \"No! Our people are different...but we still respect one another. I may not understand an elf, but I can see their...\" He trailed off. \"You're right, stranger. You're right...\" He stood, slowly, his hands clenching. \"The elves would not have gone to war over the Morbihan. It was a tragedy, and elves feel the plight of the woods deeply, but no elves were harmed. It's not enough to threaten a war that would shatter Arcanum apart!\" \n\nI nodded. \"These elves,\" I said, quietly. \"They took advantage of your fear.\" \n\n\"Yes...\" Longhaire whispered. \"I betrayed-\" \n\n\"Your Shape?\" I asked, quietly. \"No. No you didn't, Longhaire.\" \n\nHis brow furrowed. \"You're an orc,\" he said, slowly. \n\nI tapped my temple. \"I am also capable of listening, your majesty,\" I said, my voice serious. \"Your Shape is to be King. That means making the right decisions for your people -- all of your people. But no shape is perfect. Gilbert Bates told me of the hall in the Black Mountain Clan where mistakes are housed, so that they might teach future generations of dwarves. Mistakes happen in all Shaping. But what is the greater mistake: To mistime a chisel strike...or to throw the chisel away and leave the home you were making half finished?\" I thrust my finger at him. \"You made a mistake -- then compounded that mistake by abandoning your people when they needed you the most.\" \n\nLonghaire looked as if he had been struck. He sagged, his head hanging forward. \"I am a fool,\" he whispered. Then, louder, he wailed it. \"I am a fool!\" He slammed his fists into the ground. \n\n\"A fool,\" I said, kneeling down. \"With another millennium to correct it.\" I placed my hand on his shoulder. \n\nLonghaire wept. His tears pattered upon the ground, and he wept. His shoulder shook beneath my hands as his fingers dug into the ground...and tore up great chunks of gravel. He stood, rock crumbling between his fingers. His eyes caught the light of the flames and glowed with an almost inner light. His voice was a low growl. \"You're right, outlander. I must make this right. I must. I will return to my people -- and you...\" He dropped the gravel to the ground, the fire guttering as several pieces fell upon it. \"You will go to the Silver Lady in Quintarra. You will ask her about Min'Gorad, and you will find the truth of this and we shall bring the Black Mountain Clan back.\" \n\nI clapped my hand to his hand and he clenched his palm around mine. Muscles strained as I looked into his eyes. \n\n\"I swear it, Longhaire Thunder Stone.\" \n\n*** \n\nI lay in the chambers that had been given me, my belly filled with the rich banquet that we had been served -- my eyes looking into darkness, my mind whirling with yet new thoughts. The mystery had gained new, darker dimensions, and I remained uncertain as to my real place here. Did Nasrudin truly lurk inside of me? And...did I wish it? Did I wish to lay my accomplishments at the spirit of a long dead elf? Or did I wish to stand upon my own deeds and proclaim that it was I, Rayburn Cog. Or...Resh Craig. \n\nIt was me. \n\nAnother part of my mind was ticking over a slightly more practical problem: None of the dwarves actually knew how to reach Quintarra. Neither did any of my companions. The elven city was located within the Glimmering Forest -- the vast woods that spanned beyond the Stonewall Mountains, in the northwestern reaches of Arcanum. But actually finding the city -- let alone finding the pass through the Mountains that would be easily traversed -- was also quite a task. \n\nFortunately, during the banquet, Randver had provided the answer. Looking more at ease and happier dressed in simple white than in a king's regalia, Randver had said that the town of Stillwater -- which traded with the Wheel Clan and the elves of Quintarra both -- surely had someone who knew the route. A merchant. A traveler. Someone. And Virginia had pointed out that the telegraph we had been given from her mentor, Johanna, said that Johanna would be waiting in Stillwater for us. \n\nSurely, she'd be quite shocked to find us arriving after all these months... \n\nAnd lo, as if she had been summoned by my thoughts, the door to my room opened, spilling a thin knife of light into the chambers. I sat up, my blankets gliding along my bare chest -- but the shadow cast against the wall was shorter. And squatter. And then the door shut and I heard the husky contralto of Maggie. Not 'Magnus'. Maggie. \n\n\"R...Ray...\" she said, her voice hesitant. \"I need ta talk.\" \n\nI swung my legs around on the bed in the darkness, feeling quite aware of how little I was wearing -- the dwarven caverns were rather warm. And I preferred to be nude while I slept. But...well...Maggie. Other than the single delirious night at the Isle of Despair, we hadn't ever been...intimate like this. But the tone of her voice kept me from moving. Kept me from even breathing. It was so...tentative. So shy. So worried. \n\n\"What's wrong, Maggie?\" I asked, taking heart in the thick walls, thick door, and generally private nature of dwarves to keep us from being overheard. \n\n\"It's about what you and the prince were talkin' about,\" she said, her voice growing softer still. I heard her feet scuffing on the ground. Was she drawing closer? Or simply pacing in the darkness? I wasn't sure. I had a temptation to fumble about for a light. Instead, I stilled myself. \"The whole Shape and Stone such and such? I...I've never heard any of that before.\" She sounded deeply shamed. \"Not a once. Two hundred years old and I call myself a dwarf.\" \n\nI shook my head. \"You were born in a city, away from a clan...\" I said -- not a question. A statement of fact. \n\nMaggie sighed, slowly. \"But hearing it...it...it made me think. What am I?\" Before I could respond, she underlined it -- her voice growing more and more frightened with every word, tiny frightened breaths sucked in every pause: \"I'm a dwarf. But I wear a beard, I act like a man, I go out and about, rather than making babies or being a good and obedient woman. I'm betraying my Shape and my Stone! And I didn't even know it! How could I possibly find my Clan, my real Clan, if I cannot even-\" \n\nI moved without thinking. In the darkness, I had to rely upon only my hearing and my sense of the room. It was enough for me to bundle Maggie into my arms. My muscles strained -- she was quite dense -- but I was able to hold her to my chest, squeezing her tightly. Her large breasts pressed to my chest and her legs kicked and flailed in surprise. But I acted quickly -- knowing that I couldn't possibly hold her aloft for long. I stepped backwards until my legs bumped into the bed, then swung her around in the darkness. \n\nIn that pitch blackness, I heard the bed squeak, and the mattress groan. Softly, Maggie whispered out: \"R-Ray...\" \n\n\"Maggie,\" I said, my voice a deep rumble. I looked at where I hoped her eyes were, my hands resting to either side of her head. I felt the snarled curls of her hair, spilling against my knuckles. I heard the soft gasp gasp gasp of her breath. I could picture her breasts, rising and falling beneath her shirt. She was clothed. She might not have realized I wasn't. In the darkness, my member began to harden -- first a little. Then more. As if I could hear her every gasp, and some deep, animal part of my soul knew at least some of that breath was her enjoying my scent. \n\n\"W-Well?\" she whispered. \"How am I not...nothing?\" \n\n\"Because a stone can change,\" I said, my voice quiet. \"Under pressure and heat, stone becomes lava. Lava can be shaped and changed and allowed to cool into new structures. Chemical processes can remake what looks, to a simple glance, like unchanging eternity.\" I leaned down. \"To be quite honest, I think that these dwarves have spoken only to other dwarves for so long that they have begun to think that their philosophy is more than it is.\" \n\nMaggie tensed -- I felt her prickling up, as if she were a hedgehog. \n\nI chuckled. \"I don't need to see you to know you're making that face,\" I said, my grin clear in my tone. \"Maggie, don't think of what other dwarves do, what other dwarves think. Instead, think of what you have done. What you have seen. What you believe.\" I leaned forward, slowly. I felt her skin before I touched her -- my breath bounced off her neck and filled my nose with a moist scent. \"What you feel.\" \n\nMaggie squirmed under me as I kissed her neck. Gently. I flicked the pulsing beat of her heart, and felt the tension within her uncoiling. \"Ray...\" She whispered, very softly. \"I-I don't know if I can do that. I...I've spent my whole life trying to find my clan. My place.\" \n\nI nuzzled her. \"Maybe you have, Maggie.\" \n\nOne of her hands gingerly closed around the back of my head, working through the straight, raven black lines of my hair. Her fingers pressed to my scalp and her soft gasp filled the darkness as I kissed her neck with more force. I used my teeth to pucker her skin slightly, tugging ever so slightly backwards. Maggie's quiet moan was nearly as musical as the banquet's accompaniment had been. It drove me on. I peppered her neck, her chin, her jaw with kisses. Finally, her lips met mine within the darkness and her tongue plunged into my mouth with a hungry growl. Her fingers laced through my hair, then clenched into a fist, holding my hair in a bunch as she pressed her muscular, soft body to me. I rocked back onto my knees, drawing back just enough so that I could pick my hands off the bed and start to quest along her body. \n\nShe was clad in night clothes -- but it was thick, male night clothes. I started to work at ties and ribbons as she thrust her tongue into my mouth with a desperate passion. I wasn't sure if it was fear of her own uncertainty, or something more honest and pure, that drove her to this passion...but I was enjoying it. When I broke the kiss, it was not simply to free up her arms and her head to let me tug her top off. It was also because I simply needed to breathe. \n\n\"I suppose I can explore a new shape...\" she murmured, huskily. \n\nI tossed her top away. In the darkness, my lips traced a line from her neck to her breasts. I found one of her fat, hard nipples and sucked eagerly on it. This provoked a quite unladylike curse. \"F-Fuck!\" \n\nI grinned around her nipple, then squirmed as I felt her hands sliding along my back, to my belly. She wasn't quite tall enough to reach my member, but she was able to lift her thigh, grinding her leg against my cock. She trapped my cock between her muscle and my belly and pressed with enough pressure to force a grunt from me. I broke the connection with her nipple, panting and gasping. \"Maggie-\" \n\n\"Oh just plow me already,\" she whispered. \n\nI grabbed for her hips, but ended up gripping her knees. That was well enough. I crooked her legs upwards, almost folding them against her belly. I could picture her pubic hair glistening with her arousal. I could picture her sex spreading for me. I could imagine her taste, remembering it from when she had sat upon my face. But rather than simply slamming into her, I let her wait. I let her feel suspense. I slowly folded her legs to the side, so that she was laying entirely on her hip and shoulder. \n\nMaggie's quite moan of confusion was broken by a gasp as I let my cock drop and slap against her curved hip. The warmth of her skin felt like a furnace, and the warmth grew only more intense as I sloooowly ground the tip of my cock along her skin, along her rump, and finally, to the plump lips of her eager, puffy pussy. Through it all, Maggie sounded as if she was muffling herself by biting her lip. Quietly, I murmured. \"Where is your fake beard, anyway?\" \n\n\"B-By the door...\" she whispered. \n\n\"Good,\" I said, huskily. \"I'd hate to...\" I slid an inch into her. Her sex was so tight. Like a vice of soft, eager flesh. My eyes closed. I gritted my teeth. \"I'd hate to imagine you wearing it right now.\" Maggie let out a strangled laugh -- which became a gasp, then a moan as I slid another inch into her. Her sex was so very wet, but she was so very, very tight. I closed my eyes and I gritted my teeth. Not because I was uncomfortable. Oh no. She felt divine. \n\nNo, no, no, I was trying to restrain myself. I was so used to fucking Virginia, who had gotten quite used to taking my endowment. As I puased, feeling the fluttering pulse of Maggie's heartbeat, I heard her mumbling into a pillow -- muffled but still understandable: \"By Albrecht! How big is this bugger!?\" She shuddered and I felt her sex slip another few inches down my cock as I worked my hips forward until, at last, I was buried within her. We were joined, as closely as it was possible to be -- save for the connection of two souls twined in true love. \n\nLike...Virginia and I... \n\nWhen I wasn't being a damn coward. \n\n\"Gods...\" Maggie whined. \"I...feel so full, Ray...\" \n\nI chuckled, my voice ragged. \"Ready for me to do more than simply wait?\" \n\n\"A-Aye,\" Maggie mumbled. I heard the faint creak of wood and wondered if she was gripping the headboard. Her back was definitely arching, from the way that her hips were moving against mine. I smiled and started to slowly thrust into her. I drew my cock back, then slammed into her, then drew my cock back, then slammed into her. Each time, I could practically feel the vibrations of her ass as she took my cock again and again and again. And with each thrust, like I was stoking the bellows, I could hear Maggie's moans and gasps get louder and hotter. \n\n\"Aye...aye! Yes! Ah, fuck, yes!\" She moaned. \"A...Gods!\" She shuddered and I felt her sex clench upon mine like a silken fist as her back arched. The headboard creaked louder and she rocked her hips against me with a furious, wriggling motion, trying to drive me in deeper and harder. I put one palm against the wall -- anchoring myself -- and started to do just that. I used my entire weight to slam into her again and again and again, taking full advantage of dwarven... \n\nDensity. \n\nToughness. \n\nGirth. \n\n\"Yes! Yes! Yes!\" Maggie was almost screaming now, her voice becoming ragged. \"Oh Ray!\" \n\nI couldn't keep this up. It was simply impossible. My eyes closed and I managed to grit out the question. \"In or on, Maggie?\" \n\nMaggie, to her credit, picked up fast. She drew in a ragged breath, then cried it out. \"In! In, Rayburn! In!\" She shuddered in bliss and her voice broke down into mewling cries. But, well. The lady had spoken. I let myself slide back into her, feeling her sex tightening around every inch of my thick, green cock. At that moment, it struck me how...very...forbidden this was. Dwarven women were kept under lock and key. Hells. I had never seen or heard of another one ever. And here I was. \n\nDeflowering her. \n\nClaiming her. \n\nThat thought almost did more to push me over the edge than the warmth and tightness and delicious smoothness of Maggie's welcoming sex. My green balls tightened as if gripped in a fist and I gritted my teeth so hard I could feel my jaw clicking. And my cum spurted into her. Spurted and filled her, painting the inside of her dwarven womb as she shuddered underneath me, her voice muffled by what was clearly a pillow pressed to her face. The moment dragged out -- stretched...and snapped as my arms finally gave way. I sprawled on the bed beside her, gasping in -- breathing in the sweet smell of her sweat. My arm wrapped about her and my cock slurped from her sex -- and my hand immediately found the fullness of her breast. \n\nI squeezed. I fondled. I cupped and caressed. \n\nMaggie let out tiny mewls. Like a happy kitten. \n\nWe floated in a haze for a time -- and quietly, she mumbled. \"T-Think...Gilbert Bates' money will...spend here?\" \n\nI chuckled, softly. \"I have some liquid currency. Why?\" I asked -- bemused by the seeming non-sequitur. \n\nMaggie chuckled, her voice horse from all of her moaning and gasping and, yes, a few screams. I wondered if her eyes were opened or closed. Mine were closed -- closed tight, with my forehead resting against her shoulder. My tongue darted out, licking up some of her sweat. \n\n\"I want to...buy something dwarven here,\" she said, quietly. \"I want to see what's here -- other than...mm...barmy kings and philosophical princes.\" \n\nI nodded. Nuzzled her neck. \"Deal. Tomorrow, you may spend all of my money. Deal?\" \n\nMaggie let out a soft chuckle. \n\nThen... \n\nIn the darkness. \n\n\"Ray...can I ask yeh a question?\" her voice was very soft. \n\nThe tone of her voice made my spine tighten slightly. I squirmed and my softening cock nestled between her ass cheeks. I licked my lips, then whispered. \"S-Sure.\" \n\n\"Whose Resh Craig?\" she asked. \"When I got hit with that bugger Arronax's magic, I...I thought he said something about Resh Craig...\" \n\nSilence yawned between us. A dozen lies came to mind. But...none of them fit. Maggie had revealed her own uncertainty to me -- seeking comfort for her own soul. For her shape. Could I deny mine? And so, quietly...I began to speak. \n\nI began to tell her the story of Resh Craig. \n\nTO BE CONTINUED"
    ],
    "authorname": "DragonCobolt",
    "tags": [
        "dwarf",
        "orc",
        "philisophy",
        "fantasy",
        "romantic",
        "gentle",
        "steampunk",
        "adventure",
        "action"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/arcanum-of-steamwork-and-magic-ch-11"
}