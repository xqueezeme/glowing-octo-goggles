{
    "title": "The Link",
    "pages": [
        " Author's note: This is the largest story I have ever written. Its name has changed three times and the plot is nothing like I envisioned. I hope you enjoy it.\n\nThe Link\n\nChapter 1 - Sam\n\nI needed God. It was hypocritical of me since I never believed. I couldn't fathom his existence, so I ignored the issue altogether in the past. If God wished me to know of him, he would have simply stopped by and said hello. The lack of an introduction meant God didn't exist, or he didn't give a shit. To me, clergy were no different than used car salesmen promising an eternity of maintenance free driving. \n\nMore blood seeped through my fingers. God would be handy right now. The wound was probably deep. It didn't hurt as much as I thought it should. That was disconcerting. I tried to reach across my body to open the car door. My twisting torso hurt more than I thought it should. That was disconcerting as well. \n\nMy car had spun laterally in the collision. The SUV that struck mine overturned and rolled into a wire fence that separated the desert proper from the pavement. It steadied after rocking on its hood a few times. I pushed the bloody airbag back and spat some of the powdery residue from my mouth. The pink mist I created frightened me. I licked my finger, and it came back bright red. Most disconcerting. I was likely dying. \n\nMy head fell back against the broken headrest. I slowed my breathing and tried to feel how damaged my insides were. I reevaluated my need of God. I actually needed him not to exist. For if he did, I was screwed. Hell would have been devising my eternity with relish. As a human being, I sucked. I coughed up some blood that was blocking the back of my throat and wondered if it was possible to drown in my own fluids. \n\nI groaned as I forced my free hand across my body and pulled on the door handle. I heard the mechanism pop, but the bent up door refused to move. I almost laughed, maybe my hell had already begun. I pushed with my shoulder, causing a sharp pain to emanate from the hole in my side. More blood. I wasn't sure how much more was in my body. My hand wasn't an effective band-aid. \n\nThe seatbelt was still fastened. Here I was killing myself to open the car door, and I hadn't even undone the belt. More wonderful humor to consider as I burned for eternity. I popped the catch and the belt released but refused to suck itself back into its holder. No matter, if I did get out of the car, I wasn't going to get back in. I laid down across the divider and reached for the passenger side door. The handle popped, and the door slowly opened. The hellish Arizona desert heat hit me in the face. I should have spent a few more minutes enjoying what was left of the air conditioning. I sighed, it would be good practice for the afterlife. \n\nMy legs pushed, my arm pulled as I slowly extracted myself from the now visibly smaller driver compartment. Future bruises announced themselves loudly as I moved. Things became easier once I had gotten my ass over the divider. I grabbed the hood of my car on instinct, trying to pull myself out. It felt like the coils of a stove. Damn sun. I snapped my hand back and used what leverage I could find on the cooler insides of the car. Slowly, I turned my body and came out legs first. \n\nStanding was less of an effort than I had imagined it would be. I looked down at my side; blood was coating my shirt and covering my hand. It hadn't begun to soak my pants. Maybe I would just die of dehydration instead of bleeding to death. I steadied myself and looked down the road in both directions. Silence, not another moving vehicle in sight, the middle of nowhere. A good road to take if you're transporting ten pounds of pot. A really bad choice if you plan on having an accident. \n\nI pulled out my phone. No service. Seemed right. There was no reason a shit like me deserved a break. I lifted up my shirt to see the wound. More of a gash really, about two inches long and maybe an eighth inch deep at the worst. Nasty, but not as bad as I had first thought. The side view mirror informed me that my bottom teeth had torn into my lower lip. Blood had soaked a bit of my scraggly beard. Again, not as serious as I had first thought. I was pretty confident that I would live long enough to die of thirst. \n\nI stumbled over to my assailant's SUV. If I walked slightly funny, it hurt less. \n\nThe windows on the driver's side of the car had shattered. The roof frame was bent a few inches toward the front but seemed to be holding steady. I heard a low moan as I approached. Bending was difficult. \n\nA woman lay along the overturned roof. She obviously hadn't been wearing her seat belt. I leaned in and choked back bile. Her legs were bent wrongly. White bone had torn through her pants below the left knee. Her hips seemed oddly askew, and blood pooled around her. I reached in and pulled some her brown hair from her bloody face so I could see her eyes. \n\n\"Hello?\" I said stupidly. I held back the are-you-alright because she wasn't. She was truly screwed. Her eyes opened slowly. I tried to smile. It would be what I wanted to see in my last moments. Someone, anyone smiling would be better than nothing. I had little doubt these were her last moments.\n\n\"Hi,\" she groaned back. I reached in and grasped her hand that was lying limp near her head. I don't think she could feel it. \"How bad?\" I was about to lie. I couldn't. If it were me, I would want to know.\n\n\"Bad,\" I said, trying to be soft. I saw a tear form in her eye. I bit back my own. I hadn't cried since I was ten. Then again, I never saw someone die before. \"There's no one on the road and no phone service.\"\n\n\"You're here,\" she said. I moved closer. I hate death. I don't do funerals or go near hospitals. For some reason, empathy forced me to commit to her. There wasn't anyone else to dump it on and I couldn't let her die alone in the desert. \"I'm so sorry,\" she groaned. I wasn't exactly caring who was to blame for the accident. It seemed silly now. \n\n\"It doesn't matter,\" I stuttered. Damn tears. \"Is there someone you want me to talk with?\" I hoped she wasn't worthless like me. I hoped she had someone. \n\n\"You can't let them take the baby,\" she said weakly, her eyes darting from side to side. I think she wanted to move her head, and it wasn't responding. Delirium was setting in. \"Promise me,\" she added. \n\n\"I...\" my words caught when my eyes spotted movement in the back. An upside down car seat, still secured, contained a strapped in baby with wide open eyes looking at me like being upside down was normal. The child's thin hair was hanging straight down, moving with the turns of it's head. \n\n\"Shit!\" I said too loud. I tried to crawl under the seat tops, failed and retracted myself quickly from the car. Ignoring the pain, I practically dove into the back window. It took way too long to decipher the car seat connections. The baby just looked at me, its upside down eyes barely blinking as they traveled around my face. It made no sound beyond blowing drool bubbles out the corner of its mouth. My only thought was to bring it to its mother. She had to see that her baby was okay. One could die in peace knowing that - I was sure of it. I silently cursed the insane engineer who designed the car seat. \n\nWhen the seat finally broke free, I lowered it gently and turned the child around. It made a funny face, like an old man trying to struggle up a tall flight of stairs. A wet gurgling sound followed from within the seat. The smell that quickly grew was staggering. I ignored it as best I could. I pushed some flowered cloth bags out of the way and pulled the child, seat and all, out the window. The base of the seat barely fit. It wasn't going to make it into the front. \n\nI set the car seat on the ground and started undoing more straps. Another moan from the front made me move faster. The child just watched me work, unconcerned it was 110 degrees out, and we would all likely soon die. I crawled carefully while keeping the smelly child at arms length. I scooted myself back in and sat the baby next to its mother, out of the pooling blood. My side was complaining fiercely, but I wasn't dying. \n\n\"Don't let them take her,\" the woman insisted. A struggled smile formed on her lips as her eyes took in the child. \n\n\"She's fine,\" I said, realizing it was a girl, \"I'll make sure she gets where she needs too.\" The woman gritted her teeth and scrunched her eyes at some unknown wave of pain. \n\n\"You have to take her,\" the woman continued, \"there's no one else.\" She paused to deal with more pain. How I wished I could ease it. I hated watching. \"They'll come after you.\" I wasn't sure who she thought I was. \n\n\"I'm not someone you give a baby too,\" I said, \"I'll get her to the police. I won't let anyone take her.\" I could promise no more, and I wasn't going to lie to a dying woman - delirious or not.\n\n\"No!\" she shouted. It cost her a lot. I reached in to hold her hand again. This was harder than I ever imagined. \n\n\"She's special. They will try and take her,\" she was gasping for air, \"you must not let that happen.\" I studied her carefully and no longer thought she was the mother. Something was screwed up. Maybe she was one of those crazy women who steals other's babies. Her breathing was coming in fits. \"What's your name?\" she asked during an exhale.\n\n\"Sam,\" I answered.\n\n\"Promise me, Sam,\" she struggled with the words. A damn dying wish. \n\n\"I can't take a baby,\" I insisted. Pot running was one thing; kidnapping was a whole different 20 years in prison. \n\n\"They will use her,\" she said, her eyes trying desperately to stay open. Who the hell uses babies? The woman needed the truth. It wasn't like she could turn me in. \n\n\"I'm two-bit drug mule,\" I said. The admission hurt. It was what I was, and I didn't see that ever changing. \"I'm not fit to take care of a baby.\" The woman smiled a huge smile of forgiveness I didn't deserve. I wanted her to take it back. \n\n\"Take her to Portland,\" the woman pleaded. Blood was leaking from her mouth, ruining the smile. \"Promise me you'll take her that far.\"\n\n\"Portland,\" I nodded, I knew I was lying. I was lying to a dying woman. I was truly shit. \n\n\"138 North Packard. Repeat it.\" The blood was making her words bubbly. \n\n\"138 North Packard,\" I said back. The baby babbled, joining in the lies I was telling. \n\n\"They will hunt you,\" She said, her eyes no longer focusing on me or anything else. Her delusions were getting stronger. \"Sam!\" she suddenly called out. \n\n\"I'm here,\" I said, moving my hand from her lifeless palm to her forehead. \n\n\"You will do it?\" she pleaded again.\n\n\"Yes,\" I lied. \n\n\"Then know, I love you for it. I love...\" Silence followed. Her eyes never closed when the breathing stopped. Damn tears. I pushed more of her hair away from her face. I couldn't stop the flood. I scooted back out the window, pulling the stinking baby out with me. I placed her in her car seat and looked at the nameless little girl. \n\n\"She loved me,\" I said softly. Words I hadn't heard since I was a child. The baby smiled at my memories. I wiped my eyes with the back of my hand, trying to let it go. She loved me, and I never asked for her name. \n\nI pulled the baby and her seat into the little shade the side of the car offered. She babbled at the sound of the seat scraping along the sandpaper surface. I crawled back into the back window, pulling out the two flowery bags I ignored before. Hopefully, there was something in them. In my trunk, I only had a small overnight bag, pot, and a couple of blankets to cover the pot. \n\nThe first bag was the baby's. Diapers, wipes, and a six pack of warm juice boxes with two empty baby bottles. If there was a God, he sent the juice boxes. The devil must have sent the diapers. I couldn't in good conscience allow the child to sit in her poop now. The diapers were all loose without instructions. I fished deeper into the bag. A couple of rubber chew toys and a folded plastic mat, no diaper directions. I looked at the child. \n\n\"You know how to do this?\" I said, holding up one of the diapers. She smiled. \n\n\"You're a stinky baby,\" I said, smiling back. This time I received a large toothless grin. I poked her tummy with the end of the diaper. \"Stinky, stinky,\" I babbled. She could laugh. The death of the lady, my totaled car, and our slow demise to dehydration disappeared in that laugh. I had her unconditional attention and a selfishly abused it. Absorbing baby laughter seemed to lighten the misery. No matter what I did, as long as I smiled, she would break into her breathy laugh that cooled my ears. She was special alright. \n\nI spread out the plastic mat in the shade of the car. I lifted the smiling baby and laid her gently on her back. She was wearing a red flowered matching shirt and pants. Her arms were reaching for me as I pulled off her pants while calling her Stinky. She seemed to adore the name. I found new and exciting ways to pronounce it. She loved it more. I learned I liked baby girls. Too bad they grow up to become picky and judgemental. \n\nI looked carefully at how her diaper was attached. Taped at the front. I unfolded a new diaper and flipped it over so it would work like the current one. This wasn't going to be as difficult as I thought. I released the tabs on the tape and undid her diaper and pulled back the front.\n\n\"Oh...Stinky,\" I groaned, trying not to lose what little was in my stomach. She laughed at that too. It was brown with green streaks, smelling of sewer, and seemed to be everywhere. I placed my hand over her tummy, to keep her in place while I fished for the baby wipes I had seen in the bag. I tried not to look at the mess. \n\nMy hand began to tingle on her tummy, almost like it had gone to sleep. I grabbed the package of wipes with my other hand, turning my attention back to Stinky. The tingle had expanded up my arm, a strangely comfortable feeling. I slowed, watching her eyes take me in. My body embraced the pleasant feeling as it spread. My smile grew, my eyes closed. Peace, simple and pure, wrapped around me like a blanket. \n\nAn awe of life developed inside me. I remembered the first time I saw the vastness of the ocean, the desert sunset, and a baby deer in the woods. All of these spread like a soft fog in my mind. Each igniting an excitement in tomorrow. My place was comfortably defined, yet a vastness so unlimited was spread before me, and nothing seemed impossible. Most of what I had done before was no more than a lesson of what not to do. I had so much potential and knew what was needed. I saw the future, where I should be, a place where I mattered and had the respect of so many. There was no embarrassment, no failures or regrets. Happiness was such a simple thing. \n\nI quickly pulled my hand away. The feelings dissipated like a receding tide. I breathed. She was very special. \n\n\"Who are you, Stinky?\" I asked. The little smile factory gave me no answer I could understand. \n\nChapter 2 - Sam\n\nStinky's butt was disgusting. A newfound respect for my mother grew in me as I lifted legs, shifted them this way and that, using way too many wipes to remove the foulness. The tingling started again, so I switched hands which seemed to stall the effect.  \n\n\"You're gross, Stinky,\" I said, trying not to gag. She just smiled. Anything I would say or do seemed to please her. \"Your butts all red now. What did you eat? It's like toxic waste.\" More smiles and part of a laugh. I had to switch hands again. \n\n\"I got it on my damn fingers,\" I said, pulling another wipe out. Stinky seemed to enjoy my complaining. I had to admit, I enjoyed her smiles. I always figured being a parent was a sucker play. I was beginning to see the appeal. Her happiness was contagious.\n\nI pulled away the soiled diaper and filled it with nasty wipes, folding the grossness away. I tucked the clean diaper under Stinky's red butt. It took me two tries at taping it shut. It was too loose the first time. \n\n\"There, isn't that better?\" I asked her. She kicked her legs at me, obviously pleased with her clean ass. It was strange, looking down at her. At that moment, I was all she had. My hands found her feet and pumped them back and forth like she was riding a bike. She thought it was a fabulous game. The tingling began again. This time, I didn't let go.\n\nDreams, fabulous dreams. My own dreams made whole. Paths to achieving them no longer seemed insurmountable. My mental fortitude grew as fast as my potential. I saw how I could shape the world, adding instead of subtracting, building instead of weakening. I liked myself for the first time in years. I let go of Stinky's feet and breathed deep. She smiled. I knew then I would make good on my lies. Stinky was going to Portland. She was too important to ignore. \n\nStinky and I sat, splitting an apple juice box. I was able to squeeze half of it into one of the bottles without getting everything sticky. She was pretty good about helping to hold the bottle. We were partners in crime now. I had thrown the fouled diaper and wipes as deep into the desert as I could. The odor had been too much to bear. Stinky did nothing to stop me, so I labeled her an accessory to my blatant disregard for the Arizona littering laws. Stinky and I were badass.\n\nEventually, another vehicle would come down the road. It was a lonely two-lane road used mostly for ranch access. As the heat of the day wound down, someone would want to take a trip to civilization. If not, it would be a very long walk. One I wouldn't attempt with the sun up. \n\nI settled Stinky into her car seat, buckling her back in. Leaving her in the shade, I retrieved the pot I had been transporting, wrapped it in one of the blankets and stashed it off the side of the road, behind a sequoia that was hosting a few scraggly bushes at its base. I was taking a risk that it wouldn't be found. Losing a delivery was not a healthy thing to do. Since I had stopped bleeding, I changed into a clean shirt I had in my travel bag. The other blanket, I used to cover the poor woman. A task I found difficult. \n\nI couldn't find a purse and it didn't feel right to search the body. I wondered if I would ever know who loved me. The second bag from Stinky's car held some women's clothes and toiletries. At the bottom of the bag, I found a thick roll of twenty dollar bills. I transferred the few things of Stinky's into the diaper bag, plus the money. Just shy of three thousand dollars. Stinky's inheritance, more than enough to get us to Portland. \n\nI looked at the time on my phone and thought I should wait thirty minutes before opening another juice box. I had it worked out to get us to sunset. It was so damn hot; even sweat evaporated before it could soak clothes. After it got dark, we would have to start walking. We spent our waiting time talking. Well, I talked, and Stinky listened. She was a wonderful listener, unlike all the women in my past. She laughed at my jokes and just about anything else I spoke about. \n\nTwo juice boxes later, I began to get concerned. Stinky was getting lethargic. Her reactions slowed, and the animation had left her arms and legs. I pulled her out of her chair and laid her back on the plastic mat in the shade. She felt warm, so I stripped her to her diaper. I used a clean diaper as a fan and created a breeze for her. She closed her eyes, her lips moving as if they were feeding. She slept as I fanned and worried. \n\nI got it in my head that Stinky was my chance at redemption. I had done some pretty awful things in my life. Nothing like murder but screwing over others never bothered me. The strange hope that bled through Stinky was mind altering. I didn't understand it; I just accepted it. I made it my mission to preserve it. If I could do that, it would be like apologizing to the world and the world having to accept. She was my life raft. She was changing me, and it felt good. ",
        "It's not like I had much future in transporting pot. Colorado was the first state to fall, and I was sure others would follow in time. Once it was a business, uneducated slobs like me were out of a job. Bussing tables or washing dishes was all I was qualified for. That would have to change. \n\nThe lady said I would be hunted, that they would use Stinky. The thoughts didn't sound as ridiculous as when I had first heard them. I didn't know who 'they' were, but I knew how to hide. I had been practicing running under the radar for my whole adult life. A child was just another package. I could move her from point A to point B without being noticed. Stinky was my destiny. My ultimate run. I looked down at the sleeping baby. Hope had an amazing effect. \n\nThe shadows were long when I finally heard an engine. A small box truck was coming down the road. I lifted stinky in my arms, waking her. I didn't like how warm she was. Her head fell to my shoulder sluggishly. I needed the vehicle to stop. I couldn't imagine it wouldn't. Her legs were using my arm like a seat causing the tingle to grow. Clarity surged through me. The desert lost its dullness, its beauty exploding in my eyes. I saw the slight increase in the speed of the truck and sensed the driver's desire to pass us by. It was as clear as if I were sitting next to him. I was inside him. I knew his conscience was digging into his mind, fighting against a desire to avoid other's problems. I stepped onto the road with confidence. The brakes engaged, the back of the truck sliding sideways, the driver compensating as I knew he would. The truck skid to a halt. I had five feet to spare. Not really a challenge. \n\n\"Shit!\" the driver screamed as he exited the truck. He slammed the door. \"Are you stupid? I almost killed you.\" He was a stocky man in overalls. \n\n\"I needed you to stop,\" I said, walking quickly to passenger side of the cab. He wasn't the violent type. I don't know how I knew, I just did. He was scared, socially inept. Unconfident in a crisis but generally a good man. Hope told me so. \n\n\"Where the hell do you think you're going?' the man yelled, hurrying after me. \n\n\"My baby needs to cool down,\" I replied, \"she's overheated. We've been out here all day.\" I wasn't stopping. He did. \n\n\"A baby?\" He said with sorrow. I could feel his heart drop. He almost left a child on the side of the road. Guilt filled him, then a strength swelled in his mind. He committed. \"Let me start up the truck, get the air going again.\" He moved quickly to the driver side. I found the passenger side locked. The man climbed into the driver seat and unhesitantly popped the lock. It felt significantly cooler in the cab.\n\nI laid Stinky on the bench seat, climbed in and closed the door. The man closed his door and started up the engine and adjusted the air to full. He put both hands on the wheel, bowed his head and sighed. \n\n\"I'm sorry,\" he said quietly. Stinky's power had receded and left me with a slight headache. I couldn't feel him any longer, and the memory of the oncoming truck sent a shiver through me. I had to take a deep breath to quell the latent fear. \n\n\"You stopped,\" I said with half a smile, \"we're grateful.\" I hoped it would be enough. I needed him to trust me. I closed my eyes and tried to forget the image of the oncoming truck. The damn thing almost hit me. I ran my hand along Stinky's back. It was uncomfortably warm. \n\n\"Let me pull off to the side,\" he said, putting the truck into gear. I nodded as we maneuvered off the road. I could have told him it was unnecessary. He was the first vehicle in nearly four hours. \n\n\"I'm Jack,\" I said, holding out my hand. Not my real name, but I felt he needed some frame of reference. \n\n\"Charlie,\" he responded, shaking my hand. \n\n\"This is my daughter, Mary,\" I said, continuing the lies. He smiled at Stinky. \n\n\"What happened?\" He asked, looking at the overturned car. \n\n\"Best guess,\" I said with confidence, \"the lady in that car fell asleep behind the wheel.\" I pointed to the overturned vehicle. \n\n\"Where...is she?\" Charlie was at a loss for words. Like me, I could tell he wasn't comfortable with death. \n\n\"I don't think she was wearing her seat belt,\" I answered, \"she didn't make it. I don't even know her name.\" I didn't have to fake my sorrow. She loved me and entrusted me with Stinky.\n\n\"Oh, hell,\" Charlie sighed, looking down at his feet. \"Anyone else hurt?\" \n\n\"No, Mary and I were lucky,\" I responded. Stinky's skin was cooling. I lifted my hand as the tingling started. For some reason, I felt it best not to live in it. It was special and probably shouldn't be used as a crutch. I certainly didn't want to extend my headache or jump in front of another oncoming truck.\n\n\"I can get you to Winslow,\" Charlie said, \"phone coverage will be spotty for awhile.\" \n\n\"Anywhere but here,\" I said in a grateful tone. \n\n\"What about the lady in the car?\" Charlie asked. He didn't look like he wanted to touch a dead body. Nor did I. \n\n\"Do you have room in the back?\" I asked, tilting my head toward the rear. \n\n\"I don't have the key,\" Charlie said, \"I'm helping my brother move. He's got the key to the padlock.\" I disliked leaving the nameless woman alone in the desert. There was no way she could ride up front and I wasn't going to insult the body by strapping it to the roof. The police were going to have to handle it. \n\n\"It's probably best if we just call the police as soon as we can,\" I said, \"anything else seems disrespectful.\" Charlie gave me a relieved nod of agreement. \"I covered her with a blanket. It's the best we can do for now.\" \n\n\"Gather what you need, I'll watch your daughter.\" I left the cab and gathered Stinky's diaper bag, car seat, and my overnight bag. It took a few minutes to get the car seat set up. I had to guess how the seat belts fed through the frame. It seemed secure when I buckled Stinky, still sound asleep, into it. I was relieved to find her skin physically cooler. It was tight, but I squeezed in with the bags and we headed off. \n\n\"I'm glad you happened by.\" I tried to bolster Charlie. I needed his trust. \"I think we were pretty close to being in real trouble.\" \n\n\"I'm sorry I wasn't here sooner,\" Charlie said, ignoring his initial misgivings, \"must have been pretty bad by the looks of the cars.\"\n\n\"Yeah, my side is killing me,\" I said, lifting the edge of my shirt. The blood was all dry. Nothing new was leaking out. \n\n\"Those car seats must really work,\" Charlie continued, his eyes traveling to Stinky for a quick look.\n\n\"I don't think she even knew it happened,\" I said, giving Stinky's feet a quick squeeze, \"the heat bothered her more.\"\n\n\"Bet her mother will be relieved,\" Charlie said with a grin. \n\n\"I'm all Mary's got Charlie,\" I said sadly, \"Cancer.\" That one word explained a lot. It also guaranteed he wouldn't dig any further. It was shitty of me to invent a dead wife, but I needed to keep the story simple. Some shared grief goes a long way to building trust. \n\n\"I'm so sorry.\" Charlie's grin faded quickly. \"It must be hard, raising her by yourself.\"\n\n\"It's been hard, but she's a good kid,\" I said, my eyes on Stinky, \"she doesn't complain much and she's a wonderful listener.\" I added the last to lighten the talk up. No need to concentrate on death.\n\n\"She sure is a pretty girl.\" Charlie's smile returned. I joined him. She was certainly the best looking baby I had ever seen. \n\n\"Got her looks from her mother,\" I added. \n\n\"Hopefully, all girls do,\" Charlie joked. We shared a small chuckle. Bonding complete. \n\n\"You live in Winslow?\" I asked.\n\n\"Nope, I live in Albuquerque,\" Charlie replied, his posture more relaxed, \"my brother is moving to Flagstaff. Following his new wife who has a better job than he does.\" He pointed down the road. \"I took a wrong turn and found myself on this long cut.\" I smiled as if it could happen to anyone. I was more than pleased he didn't know the locals. It would make things easier for the both of us. \n\nStinky started, her arms jerking as she woke. Her eyes found mine and she smiled. She trusted me. I wasn't sure I was worthy of the trust. My words to Charlie were bold faced lies. I lied as much as I told the truth in my life. I did the only thing I could do in midst of such faith. I tickled her toes and smiled back. Her temperature seemed to have returned to normal. \n\n\"She sure loves you,\" Charlie stated, his eyes moving between the road and Stinky. The thought was entirely too pleasant. Love does not manifest in the space of a few hours. I hadn't felt it since I was a child. Love was for other people. She merely trusts me. Normally I would think the trusting person a fool. In this case, her trust was not unfounded. \n\nWe had driven for 15 minutes before Charlie's turned onto a real road with other cars and his phone dinged. I pulled mine out and saw two bars. I made a show of sliding my finger and pushing the screen and then sighed loudly as I turned it off. \n\n\"Out of juice,\" I lied, waving my phone in disgust. \n\n\"Here, use mine,\" Charlie offered. I thanked him and dialed 911. Much better that it be his phone. I had no idea who might want Stinky. There was no reason to leave a trail of breadcrumbs for them. I would have avoided the phone call altogether if the lady wasn't lying dead in the desert. She deserved more than to be forgotten. \n\n\"I need to report an accident,\" I said once the operator answered. I went through an explanation that Charlie wouldn't discount. I explained the reason I had to leave the scene and the unfortunate death. I had some trouble explaining its location. There weren't many landmarks, and the turnoffs were unmarked, most likely very long driveways. Between Charlie and I, they had enough information to find the spot. I promised I would go directly to the police station in Winslow as soon as my daughter was taken care of. I trusted them to care of the lady's remains. Their trust in me was unfounded. \n\nWe approached Winslow as the sun set. It was a smaller city than I hoped. The problem with small towns is that everyone knows everyone else. A stranger and his daughter would have difficulty blending in. It would also be more difficult to find transportation. I had to remain near the highway, blend with the travelers and head out as quickly as possible. I had to find someway to get rid of Charlie as well. \n\n\"The Motel 6 sounds good,\" I said, pointing at the billboard that forecasted it a mile ahead. \"Can you drop us off there?\"\n\n\"Sure,\" Charlie replied, \"or I can get you to Flagstaff. It might be a little easier to get some transportation from there.\" He gave me a knowing smile. I swallowed hard. \n\nChapter 3 - Sam\n\n\"I'm supposed to see the police in Winslow,\" I said, keeping my falsehoods straight. Maybe Charlie forgot. He took a deep breath and let it out slowly. \n\n\"Mary, or whatever her name is ... special,\" Charlie straightened his arms, pushing his back into the seat and flexing his shoulders. \"I don't know how, but she showed me things when you were getting your bags.\" He turned to me, \"She trusts you, so I trust you. I even trust that your lies are necessary.\" His eyes returned to the road. I watched him for a moment. I wasn't the only one Stinky affected. Jealousy flashed for a moment, but I let it go. \n\n\"You felt her?\" I verified. \n\n\"If you can call it that,\" he answered, \"one second I was rubbing her back and the next I was perfectly there.\" Perfect was a good word. Supreme clarity. \"I know you cared for the woman in that car. I know you care for Mary. I also sensed your need to stay under the radar.\" \n\n\"I call her Stinky,\" I said. Stinky lit up and smiled at my words. \"I don't know her real name either.\" Charlie smiled as well. \"My real name is Samuel. My friends call me Sam.\" \n\n\"Why Stinky, Sam?\" he asked. \n\n\"Let's stop at a grocery store and I'll show you,\" I said with humor, \"I didn't know when she ate last, but I do know when she pooped last.\" Charlie laughed. It was a good healthy laugh that brought out a breathy one from Stinky. \n\n\"Food is a good idea,\" Charlie agreed. I confided in him, telling him the truth as I knew it, knowing he had felt a lot of it through Stinky. I left out the ten pounds of pot since I didn't know where he drew his moral line. We pulled into a grocery store off Interstate 40, inside of Winslow proper. I fished out pants and a shirt for Stinky so she would be more presentable. \n\n\"She sure is a calm child,\" Charlie observed, \"my brothers kids can't go thirty minutes without complaining about something.\" He was right, not that I had much experience. When I paid attention to her, she smiled. When I didn't, she just watched me. I suspect she was as hungry as I was, but not a single cry to let me know. \n\n\"Special,\" was all I said. Charlie nodded. I added some socks which seemed to please Stinky or maybe she thought I was playing with her feet. No matter. Her smile owned me. \n\nTwo men with a baby pushing a cart through a grocery attracted attention. I hadn't thought it would, but we were getting looks. Mostly from the women. A glance at us, one at Stinky and a strange knowing smile. I think they thought we were a gay couple with a child. I started smiling back. I was the type of person who didn't get second looks. Stinky got me those looks, even if it was for the wrong reason. I straightened, trying to look like a good father. \n\nWe hit the diaper aisle and stocked up. I grabbed a few more boxes of wipes. I had to figure out a way to not use half a box per poop. We moved to the baby food aisle and were immediately lost. Neither of us had any idea of what to get. There were choices galore and advertising that seemed specific to age and development. I wasn't sure how old Stinky was. Charlie gave me a funny look and a shrug when I asked him. So, I asked Stinky.\n\nI wrapped my hand around Stinky's and let the tingle turn to wonder. Wonder to clear thought. Memories from bits of conversation and blurbs from words I had forgotten I'd read came flooding back. I stuck my little finger in Stinky's mouth. A couple of sharp little razors bit down. New teeth, somewhere around six months. Not crawling yet, less than ten months. I moved along the aisle till I found the proper solid food choices. Nothing dramatic, some carrots and green beans, well pureed. I picked up some Cheerios for her to gnaw on. Water and some yogurt for a cool treat. I opted for formula instead of milk. I remembered hearing some TV doctor say that cow's milk should be introduced slowly, at around eight months. I was in the third grade when I watched that with my mother. \n\nI felt apprehension and fear. Not mine, someone else's. I looked at Charlie and saw indifference. It came from the aisle on the other side of the baby food. I walked around the endcap tasting fear mixed with an oppressive need. A young man with dusty brown hair and an unshaven face that had yet to fully mature. He stared at a bag of dog food. His jeans were baggy, and he wore an untucked long sleeve shirt. I could see the sweat on his temples and could feel him trying to build courage. He needed money desperately. Debt and shame were piled on his shoulders. I could sense the gun he hid in his pants. I looked at Stinky, and she smiled. I smiled back and walked toward the up and coming criminal. \n\n\"I'll buy your gun for a thousand,\" I offered quietly. He jumped. Stinky and I smiled. \n\n\"What?\" he said, his eyes darting up and down the aisle. He thought I was setting him up. \n\n\"I'll give you a thousand for your gun,\" I repeated. It was so logical. He needed money, and I had extra. No one would get hurt. He wouldn't end up in jail, and the gun would leave circulation. I saw his hand moving slowly to his back. \"You'll never make it,\" I warned. My reflexes, even holding Stinky, would be far beyond his. My confidence was unwavering. \n\n\"It's not my gun,\" He said, letting his arm drop back down to his side. I shrugged my shoulders. It was his choice. I just smiled. \"Okay,\" he capitulated. I dropped my hand from Stinky and reached into my pocket for the roll of bills. My confidence and perfect presence fled. The fear was incredible. There is no such thing as extra money. This nutcase was going to rob the place, and I was about to pull out a wad of bills. I was doing it with a baby in my arms. I was a complete idiot. \n\nI shifted my hand that was holding Stinky and slid my thumb under her top and let it lay against her back. Brilliance returned a moment too late. The boy had seen my hesitation and went for the gun. It came from his back, the barrel moving from the floor toward me. Time moved slowly for him, too slow. In the time it took him to raise the barrel, my hand shot from my pocket and diagrams of a Colt 45, original model 1911, flashed through my mind. My hand covered his; one finger engaged the safety another depressed the magazine release and still another tucked under his thumb disallowing the additional grip safety to be depressed. His eyes widened as the magazine hit the floor with a metallic clatter. \n\nMy foot moved quickly, topping the magazine, sliding it behind me and out of his reach. I twisted the weapon and the barrel away from us while moving Stinky farther from his reach. My weight went to my left foot. My right foot was ready. I had no doubt I could hit his head with it if I so wished. The boy's muscles slackened, his eyes moving from mine to Stinky's. He visibly calmed, then smiled. \n\n\"I have made a mistake,\" He said as his finger left the trigger. The words didn't fit his age or demeanor. He made no move to release the weapon. He wished me to hold him. Stinky's gift was traveling through me.\n\n\"How much do you need?\" I asked. \n\n\"$480,\" He replied, \"It's my grandfather's gun. I need to return it.\" I let go of him and the Colt. Reality returned to him. He stared for a moment, then replaced the gun under his shirt and into his pants. \"I'm sorry,\" he offered. I pulled my thumb from Stinky's back. I let my breath out as real life took hold again. My right foot was no longer a weapon. \n\n\"You saw your potential,\" I said as I fished back into my pocket pulling out the roll of twenties. He was no longer highly concerned with the amount. I handed him the roll. \"Take what you need.\"\n\n\"Who is she?\" He asked as he slid the rubber band off the bills. \n\n\"Someone very special,\" I replied. He counted off exactly $480, replaced the rubber band and handed the rest of bills to me. I put them back in my pocket. \n\n\"An angel,\" he suggested while he pocketed the money. Charlie came around the corner and stopped in front of the magazine that was still on the floor. \n\n\"I miss something?' Charlie asked. \n\n\"A future rewritten,\" I said with an aplomb I didn't deserve to portray. It was Stinky's doing after all. The young man chuckled under his breath. \"Are you going to be alright?\" I asked him. \n\n\"I think so,\" he said with a smile. Charlie reached down and retrieved the magazine. \"She changes things. How does she do it?\"\n\n\"Ahh, you've been in her world,\" Charlie said, holding out the magazine. The young man took it and deposited it his front pocket. \n\n\"We have no idea,\" I answered, \"faith seems to be part of it.\" The words felt strange coming from my mouth. I was always faithless. Maybe she was an angel. A stinky angel. Stinky leaned away from my chest trying to grab a colorful can off the shelf next to us. It was too big for her hand, so she just pushed it around trying to get a grip. Her face was tight with concentration. All baby at that moment. \n\n\"I have some apologies to make,\" the young man continued, \"I've been pretty much an asshole for the last couple of years.\" He shook his head, \"she washed out a lot of stupid. What's her name?\"\n\n\"Stinky,\" Charlie answered with a grin. Stinky turned and smiled at Charlie. She knew we were talking about her. \n\n\"Thank you, Stinky,\" the man said with humor. Her eyes moved to the young man. He nodded, turned and walked away. I watched him walk without the swagger I would expect from a young hoodlum. ",
        "\"Are you going to save the world?\" I asked Stinky. She grabbed my nose and gave it a tug, then turned her eyes back to the shelf. I moved her closer so she could get both hands around the can. It was too heavy for her to lift, so I helped. I got a breathless laugh for my efforts. We didn't need a can of spray starch, but I bought it anyway. \n\n\"Your nose is bleeding,\" Charlie told me. I reached up and wiped under my nostrils. My finger came back with a small amount of blood. I wiped again, and it came back clean. \n\n\"I think I hit the airbag pretty hard,\" I said, shrugging it off to the accident. \n\n\"What was that all about,\" Charlie asked, once we were on the road again. I was busy feeding Stinky some slightly chunky carrot concoction that didn't smell tasty. She acted like it was chocolate cake. I couldn't seem to spoon it fast enough. It was the first time I had seen her demanding side. She also insisted on trying to help which made matters worse. \n\n\"The kid was going to rob the store,\" I said, using my finger too quickly dam up some dripping carrot on Stinky's chin. I pushed it up and between her lips. She grunted excitedly, wanting more. \"It was strange. You know how you can remember things and dredge things up from long ago?\"\n\n\"Yeah,\" Charlie answered, glancing between me and the road. I dipped the plastic spoon back in the jar as Stinky strained at the chair straps to try and reach it herself. \n\n\"This time, I recognized the gun and knew how to take it apart. I could see the manual.\" I said as Stinky's carrot covered hands helped me pull the spoon into her mouth. \n\n\"So?\" \n\n\"I've never really touched a gun. Never liked them,\" I said, scooping up the carrot mess on Stinky's chin. Only half the stuff was making it in her mouth on the first try. This feeding thing would take some serious practice. \"I think I was seeing someone else's memory.\" \n\n\"Maybe you see what you need,\" Charlie added. \n\n\"Stop helping,\" I said laughing. Stinky ignored me, tugging at the spoon. If her teeth were in, she would have bit the spoon in half. I pulled the spoon back and refilled it. \"It was tense there for a moment. I can't believe I confronted him with her in my arms. It was so logical at the time though now it seems idiotic.\"\n\n\"It was risky,\" Charlie agreed.\n\n\"You don't think about risk,\" I continued. I succeeded in getting the spoon into Stinky's mouth intact. She inhaled the carrots and opened her mouth for more. \"It was like I knew the outcome before I started. I saw nothing but success.\" I set carrot jar down on my knee and looked at Charlie. \"What if I was wrong?\" \n\n\"She has to come first,\" Charlie analyzed. My thoughts exactly. Stinky grunted like a chimp and waved her hands excitedly. I smiled and went back to feeding. She seemed to be starving. \n\n\"I have to get her to her people,\" I said, \"someone who knows what to do.\" Charlie nodded as I spooned more orange glop into the bottomless pit. \"I was the wrong person to pick for this job.\"\n\n\"I think you were the only person,\" Charlie chuckled, \"Besides, she likes you.\" He looked over at the ravenous beast. \n\n\"She does, doesn't she?\" I agreed, prouder than I had been in a long time. I've known her for only half a day, but I knew I would protect her with everything I had. I let my finger linger on her chin, cleaning more spillage. I let the tingle grow, and I smiled at her. Love flooded me, her love. I would protect her with my life if I had too. An ugly orange smeared smile appeared, her hunger forgotten for a moment. She was very addictive.\n\nChapter 4 - Sam\n\nI woke with a start. The lack of engine noise was overpowering as I wiped the drool off my face. I didn't remember falling asleep. The truck was pulled over at a well-lit gas station. I panicked seeing both Stinky and Charlie gone. Her car seat was still in the truck, but she and her bag were gone. I jumped from the truck, looked around quickly and decided to head toward the mini-mart attached to the station. I took off at a jog, the thought of losing Stinky was filling me with fear. \n\nCharlie emerged from the mini-mart, Stinky smiling in his arm. He saw the relief in my face and shrugged his shoulders. \"Sorry, you looked dead to the world. I thought you could use a bit more sleep,\" he apologized. \n\n\"No worries,\" I lied. My shoulders relaxed.\n\n\"Stinky is an apt name,\" Charlie smiled. I laughed, realizing why he stopped. He handed me Stinky's bag and held onto the girl. She seemed at home in his arms. Jealousy poked at me again, but I let it go. Everyone deserves some love after changing a diaper. \n\n\"Now that we're in Flagstaff, what's the plan?\" Charlie asked. \n\n\"A place to sleep and I'll need to find some transportation,\" I said, thinking out loud, \"maybe Amtrak.\" We started moving back to the truck. \n\n\"I hate goodbyes,\" Charlie said, moving slowly, \"she makes it even harder.\" I could only nod. I would be in the same boat once I get to Portland. It was sad thinking about it. Though it hadn't been an entire day, Stinky made it seem an eternity. \n\n\"I think there's a Roadway Inn, a couple of blocks from the train station,\" Charlie continued, \"It may not be the best, but it's cheap.\" \n\n\"Cheap is good,\" I agreed, \"and all we're going to do is sleep. Can't believe I nodded out during the drive.\" Charlie lifted Stinky and put his lips to her forehead. He closed his eyes and held her there. I knew she was joining with him for the last time. His eyes flew open. \n\n\"They're coming,\" he said, handing me Stinky. He moved quickly to the truck. I followed trusting his words. \"They're looking for the truck,\" He continued, as he opened the door and started to unhook the baby seat. \"About four blocks away.\" He pointed to the southeast, diagonally across the street. \n\n\"Who's coming?\" I asked, taking my overnight bag he thrust out behind him. \n\n\"Police, I think,\" Charlie answered as he removed the last of the car seat straps, \"They're looking for her.\" His voice was as rushed as his movements. \n\n\"How did they know we are here?\" \n\n\"I don't know, maybe my phone,\" Charlie responded shrugging his shoulders. He handed me the car seat. I shouldered the bags and took the seat. He looked at me with seriousness, \"they want her. I don't know why, but I think we are in the way. They know of her and are wary of us.\" \n\n\"Shit,\" I sighed. My mind worked quickly, trying to figure out my next move. Leaving the truck was a given. \"You have to stay with the truck,\" I said quickly. I thrust my left hip forward. \"Take my phone out of my pocket and shove it between the seats. If they're tracking it, say I must have left it when you dropped me at the Motel 6 in Winslow.\" Charlie nodded and retrieved the phone. \n\n\"Go,\" Charlie said, \"take care of her.\"\n\n\"Thank you, Charlie,\" I returned as I moved off quickly, my arms full of bags, seat, and baby. I moved behind the mini-mart toward a large metal dumpster. I was able to scoot behind, between it and the fence. I watched as Charlie hopped in the truck and started off down the road. Sirens and flashing lights followed only a few seconds later. I doubt if he made half a block. \n\nOne of the police cars pulled into the mini-mart and two officers got out. Both cops were wearing skin-tight blue gloves, most likely latex. One went directly into the store, the other stood watching whatever was happening down the street with Charlie. The store would have video, and I knew my time was limited. Whoever was after Stinky held enough power to track us down quickly. I thought about using Stinky, then shelved the idea. The cops had guns, and I might get too brave. The gloves meant they were aware of Stinky's gift, or under orders from someone who was. I needed a diversion. \n\nThe dumpster was full of cardboard, paper, and plastic. It would burn. I could be a block away before it was noticed. I assessed my supplies and decided against carrying the car seat. It was too bulky to make a getaway. The bags and baby were enough. \n\nThe cop moved toward the mini-mart following his partner and disappeared from my view. I prayed the clerk didn't have the ability to replay video, and they would have to wait for a manager or owner. I lifted the dumpster's plastic lid until it leaned against the fence. I put the car seat in the bin and lit a corner of a piece of paper on fire with my lighter. It started burning quickly. On a whim, I tossed in Stinky's can of starch and took off down the side road, away from where the action was. \n\nI was a block and a half away when I heard the shouts of fire. I turned, moving between some bushes, and started walking through the backyards of modest homes. It was dark enough that I couldn't be seen from the road. A small tract of trees divided the properties on each side. I hugged the tree line, and moved as quickly as I could, trying to calculate my next step. \n\nA loud explosion echoed off the houses. The can of starch had burst. I saw lights go on in some of the houses and rethought the wisdom of adding the can to the fire. I heard a sliding door open a few house behind me and another next to it. There was talk and interest in what was happening. Another door opened in front of me, and an old woman walked out onto a wooden deck. \n\n\"What's going on?\" the woman called to me. In the dark, she probably thought me a neighbor. I was out of options and needed cover. I saw reflections of rotating blue and red lights coming from the street. I moved toward the woman. \n\n\"A problem at the mini-mart,\" I said as generically as possible. I didn't think her sight was that good or she would have questioned the bags and baby in my arms.\n\n\"I hope they aren't getting robbed again,\" the woman said, rising on her toes as if it would help her see more. The flashing lights from the road were raising my adrenaline and making me move faster. Thankfully, the lights were attracting the other neighbors eyes. \n\nThe woman was wearing a robe and slippers. As I neared, she became visibly startled when she recognized the burdens in my arms. She stepped backward toward her sliding glass door as I sped forward. \n\n\"Please,\" I said, holding Stinky high on my chest, \"I need to borrow your phone.\" The woman looked at me and back at the lights behind the trees. I could see she was connecting me to them since we were both out of place. I moved quicker when I saw her reach for the door handle. \n\n\"Please,\" I said desperately, dropping my bags and laying my hand on her arm. My other hand snuck up under Stinky's top, gracing the skin on her belly. \n\n\"Don't hurt...\" the woman's panic drifted away as Stinky invaded both our minds. I could sense the woman's loneliness. I saw an image of man and experienced the loss she felt, still strong though I knew it was years ago. I watched as her confusion changed to determination and a smile graced her lips. \"Inside, quickly,\" she said. \n\nI sensed the police and their desire to find Stinky. I squatted, picking up the bags and followed the woman into her house. As soon as I entered, she closed the door, the drapes, and pointed to a small couch. I dropped the bags in front of the couch and sat down heavily. Stinky bounced in my lap and smiled. Reality returned. I let my breath slow back down to normal.\n\n\"Who is she?\" the woman asked. Her eyes were kind, almost grandmother like as she examined Stinky. I could see we had disturbed her sleep. Her curled gray hairs were askew, and her face was devoid of any makeup. \n\n\"I don't know,\" I replied, knowing I couldn't lie. She had felt Stinky. \n\n\"You have the same name as my late husband, Sam\" the woman said. My eyes widened. Stinky had shown her what she needed to see. \n\n\"I saw him,\" I admitted, \"he was tall with gray sideburns and his eyes formed deep crinkles when he smiled.\" The woman smiled lovingly. The smile was for her husband, not for me. \n\n\"She's special,\" the woman said, sitting down next to me. Stinky reached out to the woman, and I helped her change laps. \n\n\"Very special,\" I added. \n\n\"I'm Rose,\" the woman said as she held Stinky. \n\n\"I'm Sam, as you know, and that's Stinky,\" I said. Stinky smiled at her name. \n\n\"Stinky? What an awful name for such a beautiful child,\" Rose said as she lightly bounced Stinky on her lap. Stinky gave Rose one of her breathless laughs. \n\n\"I don't know her real name,\" I said, \"the first time I met her, she pooped and was...well stinky. It kind of stuck.\" Stinky smiled when I said her name again. \"See, she likes it.\" Rose laughed. I could see it had been a long time since she had laughed. It made me feel good to be part of it. Strange, I never cared for the feelings of old ladies in the past. \n\n\"Would you like something to eat, Sam?\" Rose asked. I was hungry, but would have said yes either way. I could tell she wanted to feed me. That it would make her feel good to watch me eat. I liked the idea of her feeling good. Stinky was changing me.\n\n\"That would be wonderful,\" I replied. Rose smiled in a grandmotherly way and handed Stinky back to me. I followed her into the kitchen. \n\n\"I always make a few meals at a time when I cook,\" Rose said as she pulled out a deep dish from the refrigerator, \"decided to make fried chicken today. I hope you like chicken.\" \n\n\"Yes, very much,\" I answered. I sat down with Stinky at the kitchen table. It was a small kitchen. The table was pushed against the corner with three chairs, two on one side and one at the end. I watched as she moved two fried breasts from the dish onto a pan and placed it in the oven. \n\n\"Green beans okay?\"\n\n\"Perfect,\" I replied. My mouth was starting to water. I was hungrier than I thought. \n\n\"Why are they after her?\" Rose asked as she pulled a bowl of green beans out of the fridge. I explained everything I knew. Rose listened intently while she warmed everything up. I could again sense her joy in preparing the meal for me. I was company and Stinky had convinced her I was safe company. Rose needed company. \n\n\"Aren't you going to join me?\" I asked when she set the food in front of me. \n\n\"I already ate,\" Rose replied as she took Stinky from my arms, \"I have to watch my girlish figure.\" I tried not to laugh, but her smile made me. She sat down next to me and watched me eat. The chicken, even re-warmed, was excellent. \n\n\"I believe your thinking is sound,\" Rose said, as I rudely licked my fingers. She handed me a napkin without comment. \"you should take Stinky to Portland.\" The seasoning on the chicken was tasty and I hated to waste it, but I resisted licking my fingers again, and used the napkin. Rose frowned on bad manners and subconsciously created a desire in me to comply.\n\nStinky started grunting and leaning toward my green beans. I could see the hunger in her eyes. I teased her by picking up one of the beans and putting it my mouth. She hooted like a chimp and waved her arms up and down. I laughed.\n\n\"Don't tease her,\" Rose chastised. \n\n\"I have some baby food in the bags,\" I said, chuckling as I stood. I retrieved some green bean mash so we could share the same flavor. \n\n\"May I?\" Rose asked. I could see the desire in her eyes. \n\n\"Sure,\" I responded as I traded her the baby-food jar for Stinky. I sat Stinky on my lap and let Rose feed her. Stinky was no less a pig with green beans than she was with carrots. Her whole body would get involved as she struggled to get as much as she could as fast as she could. Rose was having the time of her life trying to keep Stinky from swallowing the spoon. \n\n\"I remember feeding Natalie when she was this small,\" Rose said with a smile, \"always so excited. Always trying to help. Just like this one.\"\n\n\"Natalie?\" \n\n\"She's my daughter,\" Rose said as she dodged Stinky's food coated fingers with the spoon, \"she lives in Phoenix now. A bigshot lawyer.\" Rose laughed when Stinky caught the spoon and tried to stick more than necessary in her mouth. Stinky seemed so pleased she got control and kicked with her legs to let us all know her success.\n\n\"Do you see her often?\"\n\n\"Thanksgiving and Christmas,\" Rose said as she reloaded the spoon, \"If she ever gets married, I suspect I will see even less.\" I saw the hurt in her face even while she smiled for Stinky. I thought of my mother and wondered what she was doing at that moment. I hadn't seen her in years and wasn't planning too. Of course, she was rarely motherly or sober, unlike Rose. Never knew my father and hadn't seen any of my extended family since I was a child. \n\n\"You could visit her,\" I suggested. I don't know where it came from, but I felt I needed to provide an option. I wanted to help. \n\n\"Yes,\" Rose replied, \"I suppose I could.\" Rose fought through Stinky's grabby hands to put another spoonful of beans in Stinky's mouth. I think there was more on Stinky's face then had found its way into her tummy. Rose competently corralled the mess around Stinky's face with the spoon and fed it back to her as if it was normal to eat food off one's face. I watched and learned.\n\n\"You don't like your life,\" Rose said, matter-of-factly, as she reloaded the spoon. Stinky was grunting with excitement, her eyes following the spoon intently. Stinky must have shown Rose a lot about me. \n\n\"I'm not...\" I stuttered, then decided to change to past tense, \"I wasn't a good person.\" Rose chuckled. I wasn't sure if it was because of Stinky or the change in my words. \n\n\"None of us are always good,\" Rose said, fighting Stinky for control of the spoon, \"I flattened my husband's tire just to make him notice me. Well, he wasn't my husband yet, but I was determined.\" This time, I chuckled.\n\n\"I'm surprised he would speak to you after that,\" I said. \n\n\"Oh, he never knew it was me, and I never told him.\" Rose was smiling as the memory came back to her. \"He ran a delivery route at the time, and I would order things just to get him to the house. My mother would get so angry at all money I wasted.\" Rose continued slowly feeding Stinky, ignoring Stinky's grunts demanding she speed up. \"One day, I figured I would get him to stay longer. Sam was delivering to the front door, and I ran from the back yard and stabbed his tire with a knife.\" Rose looked up at me. \"It's a lot harder than your think to stab a tire. It had taken a few tries before I heard the air escaping.\"\n\n\"You have a devious mind, Rose,\" I said with a smile. \n\n\"It worked,\" Rose shrugged, \"he had to borrow the phone to call for a repair truck. I got an uninterrupted two hours with him. I had a date by the time he left.\" Rose's smile grew as more memories I wouldn't hear emerged. \n\n\"That was for a good cause,\" I said, ashamed at my past, \"I have done selfish things. Hurt people just because I wanted things.\" \n\n\"Stabbing Sam's tire was selfish,\" Rose added, \"I wasn't thinking of what was best for him. I was only thinking of myself.\" She refilled the spoon, gathering what little green goop was left in the jar. \"That we ended up in love, was luck.\"\n\n\"Or fate,\" I said. Stinky lurched forward and I firmed up my grip around her waist. Stinky's gooey hand covered mine, and my mind expanded. I saw something in Rose. Something bad I didn't want to see. I've known Rose for less than an hour, and the pain of it surged through me. \n\n\"Fate - Luck. They're just terms for the same thing.\" Rose said as she fed Stinky the last spoonful. \n\n\"Did you ever regret it?\" I asked. I knew a tear was leaking. I tried not to think about what I had seen. She wouldn't want me to know. It was the first time I regretted bonding with Stinky. It wasn't something I needed, but it was the only thing I saw. \n\n\"Never...what's wrong?\" Rose said as she saw my face. I couldn't help it. Tears backed up and flooded from my eyes. I never felt so weak in my life. \n\n\"I don't want you to die,\" I said slowly. Rose watched Stinky let go of my hand. The tears didn't stop. Rose smiled and raised her hand to my cheek. \n\nChapter 5 - Sam\n\n\"Your tears are more lovely than you know,\" Rose whispered. The loneliness I felt in her made more sense. \"the cancer is just more of my luck,\" she quipped. I tried to smile though it must have looked strange mixed with watery eyes. ",
        "\"I don't know why she showed me that,\" I said, \"she only showed me what I needed before.\" I secured Stinky with one hand and wiped my eyes with the other. I knew Rose had maybe a year left on this world. \n\n\"Maybe I needed it,\" Rose said as she sat back into the chair, \"Maybe I needed to know that someone cared.\"\n\n\"You have Natalie...,\" I said. Rose's face shifted, and she looked away, \"you haven't told her,\" I added knowing it was the truth. It was amazing that I could see it in her face so easily. I had never been able to read people before. \n\n\"I don't want her to come because I'm dying,\" Rose said with a small thread of anger. She stood to put the spoon in the sink and throw the empty jar away. I had to reset my hold on Stinky as she surged forward and tried to follow her, or maybe it was the jar.\n\n\"We're here,\" I said with determination. I couldn't believe it came out of my mouth. I didn't want to leave this woman alone. A day ago, I would have run in the other direction and not given it a second thought. I looked down at Stinky, wondering what kind of drug she was. When I looked up, Rose was staring at me with her own tears.\n\n\"I'm not leaving,\" I reworded. \n\n\"Yes, you are,\" Rose stuttered, \"you need to get her to Portland.\" I thought about it and decided that going to Portland could wait. I didn't even know what waited for Stinky there. It could be a wasted trip, but staying here was not. Rose had a short time left on this planet, and she wasn't spending them alone. \n\n\"We are just more of your luck,\" I said, shaking my head, \"we aren't going anywhere unless you kick us out.\" \n\n\"I might just have to kick then,\" Rose acknowledged, her eyes widening. \n\n\"We're staying. Someone needs to show me how to take care of Stinky,\" I said, adding an upbeat tone to my words, \"I have no idea what's in Portland, but I know what's here. I need your help, Rose.\" \n\n\"I could use a pleasant diversion,\" Rose said. I stood with Stinky and did something I hadn't done in a long time. I hugged someone. Stinky helped. I should have washed her up first. \n\nThe doorbell rang and broke up the group hug. Rose wiped her eyes and straightened her robe. I handed her the towel by the sink, and she wiped off some of the green stuff that Stinky had spread around. \n\n\"Stay here,\" Rose said as she moved out of the kitchen with her confidence restored. I wished my mother was like her. Mine would trade me for a bottle of Jack at the drop of a hat. I wondered what kind of person Natalie was. How could she just ignore such a perfect mother? I looked at Stinky and wondered how Rose became wonderful in only an hour. I should fear the change. It could only cause me problems. Stinky smiled at me with green lips. I wasn't sure I was choosing the problems of my own free will. Maybe, Stinky chose them for me. I hoped it was me. I wanted it to be me. \n\n\"Good evening, Ma'am.\" I heard a male voice after Rose opened the door. \n\n\"Good evening, officer,\" Rose returned, \"I hope everything is alright. I heard a loud bang a little awhile ago, and it's got me a little frightened.\" Her acting abilities, at least, her voice, was very convincing. It's always good to point out the obvious to preempt questions. \n\n\"It was just a dumpster fire, Ma'am. It's been taken care of.\"\n\n\"Thank goodness,\" Rose exclaimed with relief, \"I thought it was something more serious.\"\n\n\"We are looking for two people,\" the officer said, \"a man and a child. The child is less than a year old. Did you happen to see anything tonight.\"\n\n\"No, goodness me, a baby?\" Rose asked. \n\n\"Yes, ma'am.\"\n\n\"No, I haven't seen anyone.\" Rose chuckled a little before continuing. \"I heard that explosion and locked all my doors and windows. Loud noises are frightening for someone who lives alone.\" I was shocked at her ability to deflect the questions so easily. \"I have to say, it really puts me at ease to see you here.\"\n\n\"I'm glad I could ease your concern,\" the officer sounded a little uncomfortable, \"here is my card. If you see the two I mentioned, I would appreciate a call. It's best if you don't approach them.\"\n\n\"Are they dangerous?\" Rose asked. I could hear some fear in her voice. It made me smile. \n\n\"They may be. We don't have all the information yet, but we're told they may be infectious. It's best if you stay clear and call us immediately.\"\n\n\"Oh, that sounds terrible,\" Rose continued her performance, \"I hope the baby is okay. I have a daughter you know...\"\n\n\"Thank you, ma'am,\" the officer cut in, \"I have to talk with the rest of the neighborhood so I must move on.\"\n\n\"Of course,\" Rose said, disappointment in her voice. I almost laughed and had to cover my mouth, \"You have a nice night, and please be careful.\"\n\n\"I will, ma'am.\" I heard the door close and waited for Rose to return. \n\n\"Flat tires aren't your only deviousness,\" I said when she returned. Her smile matched mine. She enjoyed playing with the cop. \n\n\"Young men usually don't want to talk to old women,\" Rose said, \"start telling them about my life and off they go.\" She lost her smile. \"There's a lot of them out there, Sam. I saw three officers going door-to-door and a lot of spinning lights. They were all wearing gloves.\"\n\n\"Hopefully, they will think I moved on,\" I said, \"they are certainly moving quickly. Someone knows about Stinky and has enough power to pull in the police without them questioning it.\"\n\n\"The disease story makes it easy,\" Rose surmised, \"Maybe, someone connected to the CDC.\" \n\n\"Well, they can't quarantine a whole city,\" I added, \"I suspect they will spend a few days looking around then the interest will fade away. I don't like the idea of Stinky getting into the hands of someone who can wield this kind of power. She needs good people.\"\n\n\"I thought you weren't good people,\" Rose said with a smile. \n\n\"I wasn't,\" I smiled back while looking at Stinky, \"she has a way of changing that.\"\n\n\"I think she builds on what is already there,\" Rose said. I liked the sound of that. Maybe, I only needed a reason to be someone I didn't hate. I did hold the hand of a dying woman before I linked with Stinky. Stinky laughed at my smile. \"Time to learn how to give her a bath,\" Rose added, taking Stinky from my arms.\n\nRose had two bedrooms, hers and a spare that doubled as an office. The spare held a pull out couch with a thin mattress. It would suit me fine. Using the pillows from the couch, we created a small corral atop a blanket on the floor. Stinky wasn't crawling yet, so it would do as a crib. \n\nA clean Stinky and I slept soundly that night. The day had been life changing and frankly, exhausting. My eyes stayed open just long enough to watch Stinky close hers. She was quite beautiful as babies went. \n\nI woke to the smell of coffee. It was a domestic odor, and I found it pleasing. I had no idea why it pleased me. Maybe, because I didn't have to brew it myself. I sat up and found Stinky gone and a brown robe laid at the end of the bed. Rose must have been up for a while. I donned the robe and followed the heavenly smell to the kitchen. \n\n\"Good morning,\" Rose said brightly as I entered. She was holding Stinky on her hip in a practiced manner and melting butter in a pan with the other. \n\n\"Morning,\" I returned. Stinky smiled at me but looked too comfortable to retrieve. \n\n\"I see you found the robe. It used to be Sam's,\" Rose chuckled, \"I guess it is again.\" I wasn't sure how I felt wearing a dead man's clothes. It didn't seem to upset Rose, so I squashed the feelings and moved toward the coffee. \n\n\"Nope,\" Rose said and blocked my way, \"clean first, and then you may join us for breakfast.\" I stuttered something as I looked at her determined eyes. \"There are fresh towels in the hall bathroom, shampoo, and soap in the shower. I couldn't find a razor in your bag, so I put one of Sam's disposables on the sink.\" I was about to argue when I caught Stinky's eyes. Her eyes held the same determination. I looked at the two and smiled. Stinky gave me a breathless laugh, and Rose smiled back. \n\n\"Clean first,\" I repeated my instructions as I drifted backward, \"shower, shave, and then breakfast.\" Rose nodded agreement before I turned and headed for the bathroom. I wasn't good with orders, but these were different. They came calmly with a smile, not the terse demands I was used too. It was Rose's house, and it was her rules. I wondered why I was playing by the rules as I stripped and climbed into the shower. \n\n\"You clean up nicely,\" Rose said when I reentered to the kitchen. She handed me a cup of coffee, \"cream or sugar?\" \n\n\"Black, thank you,\" I said, surprised at my politeness as I took the coffee. I sat down at the table, and Rose placed Stinky in my lap. \n\n\"I like your face without the hair,\" Rose said, \"it's more intelligent and strengthens the jawline.\" I smiled at the compliment. In a mere second, she had made sure I would shave every morning from that day forward. Rose was not a woman you wanted to disappoint. \n\n\"How would you like your eggs?\" Rose asked as she moved back to the stove.\n\n\"Scrambled, please,\" I responded. Stinky was watching Rose intently as she moved to the refrigerator, retrieved some eggs, and returned to a metal bowl to scramble them. \n\n\"It feels good to cook for someone,\" Rose commented, \"I have missed the normalcy of it.\" I held Stinky in one hand and sipped my coffee with the other. It was a rich brew. The first sip was almost bitter, swamping my taste buds. The second mellowed nicely as the flavor came through. Rose began slaughtering the eggs with a metal whisk. Stinky found the sound very exciting and waved her arms. I set the coffee down and brought Stinky to the bowl to watch. Rose smiled at Stinky's concentration. \n\n\"I think she likes to sound,\" I said. \n\n\"She's all baby on the outside,\" Rose added, speeding up the whisking which widened Stinky's eyes. \n\n\"I've never heard her cry,\" I mentioned.\n\n\"You haven't had her long enough,\" Rose said, \"all babies cry.\" I couldn't disagree, but I thought Stinky might prove the exception. \n\n\"Maybe she doesn't need too,\" I surmised, \"Maybe she sees what she needs as well.\" Rose stopped whisking and looked at Stinky. Then she shook her head and returned to scrambling the eggs.\n\n\"Babies don't know what they want,\" Rose stated. I nodded my head and decided not to argue. It seemed pointless, especially since I couldn't support my argument. This was the first baby I have tried to care for. Rose was the expert having had one of her own. \n\n\"I know she can see minds a long way off,\" I said, \"four blocks away in Charlie's case.\" I wondered what happened to Charlie. I hope they just questioned him then let him go. Hopefully, they believed him and were looking for Stinky and me in Winslow as well. Confusion was always a good helper.\n\n\"Do you think she always sees minds or only when we touch her?\" Rose asked as she poured the yellow eggs into the hot pan. She shooed me out of the way to get to the sink with the dirty bowl. I sat back down with my coffee. \n\n\"I'm not sure she sees them at all,\" I said, shrugging my shoulders, \"she may only be a conduit. I don't think I have ever seen her mind.\" \n\n\"Good thing,\" Rose laughed, \"she probably only thinks of breasts and strained peas.\" I sipped my coffee and refrained from the smart ass comment that came to my mind. I was gaining an inner voice, the one that tells me to shut up and not be rude. \n\n\"I wonder how they know about her gift?\" I asked aimlessly. \n\n\"How do you know it's a gift?\" Rose returned as she loaded the toaster with bread. \n\n\"You felt it,\" I said, \"what would you call it?\"\n\n\"Something beautiful, something wonderful and precious,\" Rose said. She turned to me, and I saw intelligence I hadn't noticed before. \"they say some drugs are like that.\" I looked down at Stinky, and she smiled at me. She was a drug. \n\n\"I'm addicted,\" I admitted, smiling back at Stinky. \n\n\"Me too,\" Rose agreed, \"it's amazing how quickly she bonds. I sense only goodness, but it could be an illusion.\" I thought about it and decided it didn't matter. My previous life was crap. Now I had a purpose and liked myself. I tried to think how far I would go for Stinky. To protect her, I saw no limits. \n\n\"I think I would die for her.\" I shuddered. Rose nodded. We would die for her. \n\n\"It's probably best we don't let her bond with too many people,\" Rose surmised. If we were wrong about her and she was something bad that we couldn't see, it was best to isolate the effect. It was a powerful drug. \n\n\"As few as possible,\" I agreed. Rose stirred the eggs, and they began to gather into their fluffy bundles. \"I think she's good,\" I added, more to myself than to Rose. \n\n\"There's butter and jelly in the fridge,\" Rose said, pointing with her elbow. I rose with Stinky and retrieved the butter and jelly. \"Silverware in the drawer,\" Rose continued, tilting her head toward the drawer next to the dishwasher. I moved without question and pulled forks and knives from the drawer and set the table. \"Thank you,\" Rose added when I was done. I wasn't sure why that felt so good. It was only a simple thank-you.\n\nBreakfast went down well. I was hungry, and the eggs were good. The grape jelly sweetened the toast, and I washed it all down with a second cup of coffee. Rose enjoyed watching me eat. I liked her cooking, so it worked out well. \n\nUncharacteristically, I handed Stinky to Rose and began clearing the table when we finished. Rose and Stinky smiled as I cleaned up. We talked about Rose's past life as a teacher while I rinsed off the dishes and loaded the dishwasher. She had taught history in high school and was an assistant principal as well. I didn't know why I hadn't sensed it earlier. No wonder why I acted quickly to fulfill her demands. She had that teacher voice that disallowed dissent. \n\n\"I wasn't a good student,\" I admitted, smiling at the trouble I used to cause. School and I had different goals. \n\n\"Everyone learns differently,\" Rose said. \n\n\"Learning and I never got along,\" I clarified, \"facts never settle in my brain. I just don't have that type of smarts.\"\n\n\"Nonsense.\"\n\n\"No. It's true,\" I continued, \"even if I tried to study, I would forget everything when it came to the test.\" A shiver ran through me as I remembered some of the tests. It was the black feeling I remembered. That horrible stupidity almost made me drop out. Stinky reached out to me from Rose's lap. I took her, and the feeling dissipated in her smile. She was a wonderful drug. \n\n\"What's one plus one?\" Rose asked. I looked at her funny. \n\n\"Two, but what's that...\"\n\n\"See,\" Rose interjected, \"you have no trouble with facts. You just never learned how to study.\"\n\n\"Everyone knows one plus one,\" I said a little harsher than necessary. \n\n\"Stinky doesn't,\" Rose continued, \"where was the Magna Carta originally enacted?\" \n\n\"I'm not sure I know what the Magna Carta is,\" I said, my anger growing. I had felt this way before. I wasn't sure I wanted to feel stupid again. \n\n\"It was enacted in a place called Runnymede,\" Rose said, \"say it out loud a few times.\" My anger surged. I didn't want to feel like her student. I didn't like being the dumbest person in the room. \"Please, Sam,\" Rose added softly. \n\n\"Runnymede, Runnymede, Runnymede,\" I said, feeling more foolish than stupid. If she hadn't said please, I would have walked out of the room in a huff. Rose smiled and grabbed the notepad and pen that rested at the end of the table. She wrote out Runnymede and handed it to me. It was spelled differently than I would have guessed. I thought it was two words. She traded me the pen for Stinky.\n\n\"Write it out once,\" she said, her smile making me comply. I felt like an idiot as I copied the word letter for letter just below her handwriting. My handwriting wasn't as legible. She retrieved the paper after I finished, and threw it in the wastebasket under the sink. \n\n\"Where was the Magna Carta enacted?\" She repeated her question. \n\n\"Runnymede,\" I replied, \"but you just told me.\"\n\n\"And you won't forget anytime soon, will you?\" Rose said confidently. \n\n\"How could I,\" I said as if she was dull, \"you made me say it and write it.\"\n\n\"You're a physical learner, Sam,\" Rose continued, \"you need to feel the fact, not just see it in a book. I bet you had no trouble in shop or art.\" Art and shop were fun. I ditched most of my other classes. \n\n\"Well, they don't take much brain work,\" I qualified.\n\n\"More than you know,\" Rose continued, \"I've seen straight-A students struggle with tasks that don't have a manual. They have trouble with the 'doing' of things. You are the opposite.\" I tried not to smile. For some reason, I didn't want her to know I found the idea pleasant. I failed and my lips curled. \n\n\"Where is Runnymede and what is Magna Carta?\" I asked with my silly grin. It seemed important to know. My brain would take years to forget Runnymede, so I might as well have some context with it. Stinky and I listened as Rose filled in the blanks. She was in teacher mode and seemed to enjoy the lesson. I enjoyed her enjoyment. \n\nI was on the couch, holding a bottle for Stinky when the news came on. She didn't need help, but I liked holding it, and her. The formula smelled bad, not milk-like at all. A moldy wet cardboard smell. Rose assured me it was fine, and Stinky thought it was delicious. I would have preferred juice. \n\nA fuzzy picture of me, holding Stinky flipped onto the upper right corner of the TV screen. Underneath it was 'Health Alert' in white block letters on a red background. Rose sucked in a breath as we listened to a reporter standing in front of the mini-mart. \n\n\"A warning has been issued by the Centers for Disease Control. This man and the child in his arms are suspected to be carriers of a deadly form of Ebola. Though they may be immune, all who come in contact with them are at risk. The Typhoid Mary of our times.\" The reporter, a woman, likely chosen more for looks than skill, pointed behind her to the mini-mart. \"They were seen last night at this Vee Mart, on the corner of First and Wilkerson streets. The police have released the security photo we are showing you now. They are asking for the public's help in locating these two.\" \n\nThe picture faded then reformed on a news conference filmed earlier. A policeman in a crisp blue uniform addressed a series of microphones on a podium. 'Chief Lockerson' was titled across the bottom of the screen. \"We would like the public's help in locating Mr. Samuel Donaldson and the child known only as 'Jane Doe.' Do not attempt to approach or detain them. Call the authorities immediately and let us do our jobs.\" Lockerson coughed into his hand briefly, then looked back at the cameras. \"Mr. Donaldson, if you can hear this message. Please contact us immediately. We have medical personnel and facilities waiting. We can help the both of you.\" \n\nThe image faded and returned to a split screen between the anchor and the reporter. \"Mary, is this the same Ebola that caused so many deaths in Africa recently?\" the Anchor asked. \n\n\"Jim, the authorities have told me it may be more virulent.\" Mary replied, \"the police have set up roadblocks and are inspecting all vehicles leaving the area. The first course of action is containment and quick isolation of infected.\" The conversation deteriorated into speculation of how Stinky and I were exposed to Ebola. Rose stood and began closing curtains on all the windows.\n\nChapter 6 - Sam\n\n\"They'll start a panic,\" I said, \"everyone will want out of the city.\" \n\n\"And they will gain public support for a house to house search,\" Rose added, \"Hitler tactics.\" I Iooked down at Stinky sucking on her bottle. Someone wanted her badly. So much so, they didn't care how. They just wanted her as quickly as possible. \n\n\"What would you do if Stinky left?\" I asked. Maybe it was someone else who had bonded with her. The drug they must have back. ",
        "\"If I thought her safe,\" Rose replied, seeing where my thinking was going, \"I would be fine with it. You told me Charlie practically shoved her into your arms and pushed you away.\" I nodded. \n\n\"What if it was someone who had bonded more deeply?\" I continued. \n\n\"Maybe, but would they want it so public?\" Rose reasoned. \n\n\"The lie would make it difficult for more to bond.\"\n\n\"Do you feel jealous that Stinky bonded with me?\" Rose asked. \n\n\"No,\" I thought for a moment, \"in fact it was nice, except for the...\"\n\n\"Cancer,\" Rose finished my sentence for me. \"Maybe other bonds are different. Maybe some people get possessive.\" \n\n\"I'm afraid Stinky is in danger,\" I said, watching Stinky drain the last of the formula from the bottle. I took the nipple from her lips and smiled at the audible pop it made. \"Whoever is after her, wants everyone else far away, and it looks like they can do it.\"\n\n\"Maybe it's the government,\" Rose said, thinking aloud, \"the CDC and the large police presence. It would be easy for them to orchestrate this.\"\n\n\"I would expect men in suits running around,\" I surmised.\n\n\"Maybe they are,\" Rose added. I lifted Stinky to my shoulder, and she promptly burped, discharging some of what she had drunk on my shirt. It smelled foul. \n\n\"Give me your shirt,\" Rose said while laughing. I put the smiling stink factory back on the couch and pulled off my shirt. Rose started rinsing off the shirt while I took Stinky with me to retrieve another shirt. \n\nWe spent the rest of the day talking, interspersed with watching the news and changing diapers. Rose was trying to convince me to go to college. To me, that choice was made over ten years ago, and I didn't want to rethink it. She insisted I was more than smart enough and easily countered all of my arguments. I wondered what life would have been like with her my corner long ago. \n\nI quizzed Rose on her daughter to change the subject. Natalie was obviously brilliant. That, and she had Rose backing her all the way. I laughed when Rose remembered Natalie's antics from childhood. I got a picture of an independent girl that disliked rules, at least, when she was young. \n\nRose harped on Natalie's law degree. She graduated third in her class and was heavily recruited. She accepted work at a prestigious firm in Phoenix and was on track to becoming their youngest partner. I could see the pride in Rose's eyes. I could also see that she missed her daughter greatly. I wanted to interfere and sneak a note to Natalie about her mother's illness. The breach of trust was the only thing that stalled me. It wouldn't have stopped me a few days ago. Actually, I wouldn't have cared two days ago. I was thinking differently. My mind was nicer.\n\nThe news after lunch changed. Stinky and I were still on, but the grand exodus of Flagstaff was the main story. I had been correct. Suddenly, a lot of people were taking vacations. The Ebola scare had families in a panic. The roads out of the city were bumper to bumper with the authorities checking every vehicle. \n\n\"This is insane,\" I said, \"how will they undo this. Even if they catch us, the world will find out we don't have Ebola. It will all come crashing down on them.\"\n\n\"Sam,\" Rose said slowly, shaking her head, \"these people are powerful. I don't think they'll let you talk to anyone. Ever.\" She was correct. The best scenario for them would be for Stinky and me to disappear. For me, the one with the adult mind, it would likely be permanent. A report of our demise to the disease would be easier than our capture. \n\n\"What if we went to the press now?\" I brainstormed out loud.\n\n\"We would have to prove ourselves disease free,\" Rose replied. \n\n\"That would involve the CDC and the government,\" I continued, \"easily falsified tests would have us quarantined from the public.\" Rose nodded. \n\n\"I don't want these people to have Stinky. We need to get her out of the city, away from search,\" I continued, \"somewhere she can live in peace.\" \n\nThe phone rang and interrupted our thoughts. Rose's smile grew when she saw the caller ID. I had known before she picked up; it would be Natalie. \n\n\"Hello sweetie,\" Rose said, her voice rising an octave. \n\n\"No, I'm not too frightened,\" Rose continued, responding to Natalie, \"I'm staying inside, well away from everything that is going on.\" Natalie spoke for a while. \n\n\"I think I will be fine right here, but thank you for offering,\" Rose said, \"Besides, I saw it was 110 in Phoenix today. This is one old lady who hates the heat.\" \n\n\"No, I think coming up here would be a waste of time,\" Rose continued after a pause, \"I think they are blowing it all out of proportion. If it were really that contagious, there would be sick people filling the hospitals.\" \n\n\"Well, I guess,\" Rose said, shrugging her shoulders, \"if the gestation period is that long then maybe they are right.\" Rose shook her head in frustration and rolled her eyes. \n\n\"No,\" Rose continued, \"even if you come up here, I'm not leaving. Just stay in Phoenix and we'll see each other during Thanksgiving.\" I cringed at her words. Cancer could claim Rose before Thanksgiving. She was putting Stinky ahead of seeing her daughter. I looked at Stinky, and she smiled at me. A most potent drug. I wondered if there were withdraws. Is Charlie rolled in a ball and screaming for her return?\n\n\"I truly love your concern, sweetie,\" Rose continued, her voice lowering, \"but I'm old, not senile. I can make my own decisions.\" \n\n\"Maybe you should go,\" I whispered. Rose shook her head vehemently. \n\n\"How is work going?\" Rose asked, trying to change the subject. It worked. They spoke for twenty minutes about life's minutiae. Rose became animated during the conversation, talking with her free hand as well as her words. There was so much love in her face as they discussed Natalie's redecorating of her house. They laughed as they discussed colors using memories from their shared past. Natalie made one more weak attempt at coming to get Rose at the close of the call. It failed, but they both expressed their love at the end. \n\n\"You just chose Stinky over your daughter,\" I pointed out. \n\n\"I chose someone who needed help,\" Rose said, \"Natalie isn't being hunted.\" Rose was a strong woman. She drew a line in the sand and defended it with sheer will. I still wondered if would have been the same reaction if Stinky was normal. \"How do we get her out of the city? We can't walk out, and all the vehicles are being searched.\"\n\nWe spent the afternoon tossing about ideas. They were all discounted. I knew where to hide drugs in a car, but a baby needed air. I didn't even have her car seat anymore. We were no closer to a solution at dinner. Stinky made a mess with sweet potato. She continued to be a challenge to feed with her excitement and demands to help. Rose loved it and laughed at Stinky's antics. I think she was reliving Natalie youth. \n\nI was bathing Stinky when I decided to ask her about our predicament. Instead of the swift touching I had learned to deploy, I held her upright in the water and let her fill my mind. \n\nRose was correct. College would be no more difficult for me, than any other student. A simple change in study habits and I could conquer it. I smiled as I saw myself on the podium receiving a well-earned degree. Stinky slapped the water, splashing it all over. Still I hung on. My mind wandered, snaking through the neighborhood, following roads as if on a map. A map I had never seen before. I saw the roadblocks and felt the minds of the police searching. They were practiced, bored, but thorough. They were acting for the greater good, and it had been ingrained in them at an assembly location. \n\nMy mind moved, following the trail of thoughts, toward where the police assembled and received their instructions. I began to feel less sure the farther away I went. I relaxed my shoulders as Stinky continued splashing. I forced myself toward the assembly area, a large building, Bridgeton Elementary. I traveled the halls and found the gym. Tables were set up with maps spread across them. Men in suits, some with badges hanging from their belts. The image was fading as I struggled to stay. \n\nSomething pulled me back hard. Seven houses down from Rose's the police had gathered. There were others posted about the neighborhood, some in plain clothes. A house to house search had begun. \n\n\"Sam!\" Rose yelled. I broke contact with Stinky and a sharp pain pierced my brain above my eyes. Rose moved quickly, steading Stinky so she wouldn't slip. \"Sam,\" Rose repeated quietly, \"your nose is bleeding.\" \n\n\"They're coming,\" I said as I pointed to the south, \"a house to house search.\" I had a horrible headache, and the light in the bathroom was too bright. \n\n\"Can we get away?\" Rose asked. I shielded my eyes and shook my head. \n\n\"They have set up a headquarters. I saw grid maps with search areas,\" I said as I fully closed my eyes, \"it's massive. It has to be the government.\" I slumped against the wall and slowed my breathing. \"It hurts to go far.\" \n\n\"I can stall for time,\" Rose said, pulling Stinky from the tub. She quickly set Stinky on a towel so she could let go. \"I don't think her power is meant to be used in such a way. I had to yell your name to bring you back.\" Rose wrapped Stinky in the towel and began drying her off. \n\n\"I thought I could find a way out,\" I said, The light was becoming less oppressive. \"It's a well-coordinated search. The police don't know the truth, but they are protecting the public. They think they are part of something important.\" I looked at Rose feeling defeated, \"I think it's over.\"\n\nRose let her hand find Stinky's foot. She grasped it, then took mine. An image formed of a child, a little older than Stinky, with soft blonde hair half-combed sitting in a highchair. Her face, below her nose, was covered with chocolate cake, and she was laughing uncontrollably, waving chocolate fingers around. Stinky started laughing, as did Rose. My headache washed away, and I joined the laughter. Rose let go. \n\n\"Natalie,\" I said, a chuckle still in my voice. \n\n\"Her first birthday,\" Rose said, her smile spreading across the room, \"a happy memory.\"\n\n\"How did you know I would see that?\" \n\n\"She shares feelings,\" Rose said, \"things we need to feel. We needed laughter.\" Rose handed me the box of tissues that were sitting on the toilet. \"Clean up your nose and let's try and figure this out.\" I had already seen enough. \n\n\"Stinky is a weapon,\" I said as I wiped my nose, surprised at the amount of blood, \"think of the interrogation possibilities and she could invade meetings without leaving a trace.\"\n\n\"They wouldn't want that to get out,\" Rose said as she dried Stinky's hair, \"and they can't let anyone else have her. Ebola was their best option.\"\n\n\"Where do you come from, Stinky?\" I asked rhetorically.\n\nWe waited for the police to reach the house. I put a fresh diaper on Stinky and dressed her in a jumper for travel. I saw no way out of giving her up. I suspected I would find a dark prison cell or maybe something worse. I did what I could and made Stinky laugh. I saw a miserable life of government slavery ahead and decided that I would give her as much happiness as I could for as long as I could. She loved my funny faces, and her side was especially ticklish. \n\nI jumped when the doorbell rang. \"I'm sorry Stinky,\" I whispered, hiding with her in the kitchen. Rose went to the door.\n\n\"Yes,\" Rose yelled through the door. \n\n\"Flagstaff Police ma'am,\" A man called back, \"we have a public health emergency and need to search all the houses.\"\n\n\"You are not bringing the Ebola in here,\" Rose said in an unstable voice that didn't fit her personality. I smiled. I doubt it would work, but I liked the fight. \n\n\"No, ma'am. We are trying to prevent an outbreak.\"\n\n\"I'm not letting anyone in, and I'm not leaving,\" Rose continued, \"Ebola isn't going to get me. No sir! I heard the news reports.\"\n\n\"Ma'am, we just need to check the house for your safety,\"\n\n\"I am safe,\" Rose stuttered, \"go away.\"\n\n\"I can't do that ma'am.\"\n\n\"And why not?\" This was spoken by a woman on the other side of the door. It was loud and held an authoritative tone. \n\n\"Please return to your car, ma'am,\"\n\n\"No,\" the woman continued, \"not while you are harassing my client. May I see your warrant officer?\" \n\n\"Ah, this is a public health emergency,\" the officer stumbled, \"we expect the citizens to cooperate.\" \n\n\"I'm sure you do,\" the woman continued, \"and I expect you to follow the law. If my client does not wish you to search her home, then a search warrant is required to compel her to do so. As an officer of the court, I would be more than happy to explain the law to your supervisor if necessary.\" \n\nMy smile grew. I assumed that the woman I heard was Natalie. She projected the same strength as her mother. She had ignored Rose and came anyway. \n\nChapter 7 - Sam\n\n\"Ma'am, it's just a quick inspection. We're not going through drawers, just looking for two people,\" the officer pleaded. \n\n\"I'm sure your intentions are altruistic, officer. That doesn't make them legal,\" Natalie continued, \"you will need a search warrant as the law prescribes, and my client will comply. Until then, I believe you need to leave the property.\"\n\n\"Yes,\" shouted Rose, her Oscar performance still in high gear, \"and take your Ebola with you. I don't want it anywhere near my house.\"\n\n\"We will be back ma'am,\" The officer said, his voice retreating. A few moments later, the door opened, and I heard clothes rustling in what must have been a hug.\n\n\"You shouldn't have come, sweetie,\" Rose said, \"but I'm glad you came when you did.\" \n\n\"What the hell is going on?\" Natalie asked, \"the surrounding states are wondering why the CDC is letting people leave the city if it is so dangerous. They are thinking of closing off their borders to anyone that has been to Flagstaff.\"\n\n\"There's no Ebola,\" Rose said, \"they made it up. They are just trying to find a child.\" I heard them approaching and left it to Rose to break the news. \n\n\"What? Why? How would you know?\"\n\n\"Because the child is here, dear\" Rose said. I heard Natalie suck in her breath. \n\n\"What have you done, mother?\" Natalie said, her voice deepening, \"why would you get in the middle of this?\"\n\n\"'This', found me,\" Rose continued as she directed Natalie into the kitchen. A slender woman with caramel colored short hair parted over her left eye, entered. She had her mother's intelligent hazel eyes but was missing Rose's smile. I could see some of her father in her cheeks. Thankfully, she had her mother's nose. Natalie took a step back, the Ebola still on her mind. \n\n\"Hi Natalie,\" I said, rising with Stinky in my arms. Natalie looked quickly at Rose and me. \n\n\"Mother?\" Natalie asked with apprehension. \n\n\"For god's sake, Natalie,\" Rose said, \"do you think I would let you in here if Ebola were running rampant?\" Natalie shook her head but didn't approach. \"The child is special. Very special. We think the government wants her, and we don't believe it's best for her to go.\"\n\n\"What? Shouldn't her parents decide?\" Natalie stuttered, \"and what would the government want with a baby?\" \n\n\"We don't know who her parents are,\" I replied, \"I'm Sam by the way.\" Natalie ignored my outstretched hand and turned to her mother. I think I was the last person in the world she wanted to meet. She was one of those women who finds guys like me useless and in the way. My defenses kicked in. I began to dislike her in return. So much easier that way.\n\n\"They will be back, mother,\" Natalie chastised, \"this time with a search warrant. You will be prosecuted for hindering an investigation. And for what?\" She waved her hand at us, \"people you don't even know.\" The way she said people hurt. She could have changed it to scum, and it would have sounded better. Stinky didn't deserve being lumped in with me. I squared my shoulders and lost my false smile. She was a judgemental bitch. \n\n\"Your manners need improvement, Natalie,\" Rose said in her teacher's voice. The look in her eyes gave Natalie pause. I could see Natalie considering a response, then shoving it aside. Her mother had that way about her. \n\n\"I'm sorry,\" Natalie said calmly, then she turned to me and repeated it. There was no more anger in her eyes. \n\n\"Of course,\" I stuttered out forgiveness. I wasn't used to a woman of her caliber apologizing to me. It sucked the strength from me. \"I'm sure we took you by surprise,\" I added as an out for Natalie. She gave me half a smile which I returned in kind. \n\n\"That's better,\" Rose said lightly, \"why don't you sit down and I'll make us all some tea.\" Natalie sat as instructed and I retook my seat, Stinky in my lap. Natalie smiled at Stinky and Stinky returned one of her patented breathless laughs. I could see Natalie's smile lose its falseness as more teeth began to show. Stinky knew how to please a crowd. \n\n\"Stinky, this is Natalie,\" I said, introducing the two.\n\n\"Stinky?\" Natalie chuckled, \"what kind of name is that?\" I explained about first meeting Stinky, the dead woman and the dirty diaper. I left out the bonding, not knowing how to explain it. \n\n\"This woman,\" Natalie said, \"she could have stolen her, and now you're an accomplice. You should have brought her to the police immediately.\" \n\n\"That was my intent, at first,\" I said, then hedged, \"then I found out how special she is. I don't think the government wants good things for her.\"\n\n\"She's a baby, how special can she be?\" Natalie asked, \"is she royalty or something?\" I looked at Rose. Natalie was her daughter, and I needed Rose's permission. \n\n\"Feel how soft her skin is,\" Rose said nonchalantly. Natalie reached out and carefully grabbed Stinky's left arm. \n\n\"I doubt they are interested in soft...\" Natalie's expression changed to one of awe as Stinky bonded with her, \"Oh my,\" Natalie whispered. Her face shifted to something quite beautiful as her self-imposed weaknesses disappeared. I remembered too late when her eyes began to flood. I pulled Stinky away, thinking I could undo what I knew she saw. \n\n\"Why didn't you tell me?\" Natalie blubbered, her words undulating through a pain I knew too well. I stood.\n\n\"We'll be in our room,\" I murmured, and took Stinky to the guest room. I heard the beginning of Natalie's cries and Rose trying to console her. It may not have been the best way for Natalie to find out about Rose's cancer, but Stinky thought she needed to see it. Stinky and I played with a rolled up pair of socks. She liked to try and fit in her mouth, and I tried to stop her. To her, it was a wonderful game. I greatly preferred her laughter to the pain in the kitchen.\n\n\"Sam,\" Rose said softly. I looked up into red eyes. \"the tea is ready.\"\n\n\"It's better that she knows,\" I said. Rose nodded and returned silently to the kitchen. I took a deep breath and followed. I suspected it would be a quiet cup of tea.\n\nWhen I entered the kitchen, Stinky and I were wrapped in Natalie's arms. I stood stock still, not understanding the hug I was receiving. She held it long enough for me to relax then she whispered, \"I know you love her too,\" and broke the embrace. I thought about it and realized I did like Rose. The mother I wished I had. Stinky was smiling, and I could swear I saw pride buried behind her infant eyes. She told Natalie too much. I looked up, probably more red in the face than I desired. Natalie smiled and held out her hands. I put Stinky in them and sat down. She took the seat next to me and began playing with Stinky as Rose set out the tea. \n\n\"So,\" Rose started, \"we still need a plan.\"\n\n\"It will take them a day or so to find a cooperative judge,\" Natalie added, \"Normally, no judge would touch such a broad warrant, but they can be persuaded and claim the greater good if challenged.\"\n\n\"What if I still refuse to let them in?\" Rose asked.\n\n\"They can break down the door and arrest you.\"",
        "\"We need transportation,\" I said, ignoring what we couldn't change, \"and somehow get past the roadblocks. I would like to see Stinky grow up like a normal child.\"\n\n\"She's not normal,\" Ruth pointed out the obvious. \n\n\"They are checking every vehicle on every road,\" Natalie said, \"trains, planes, nothing is being skipped.\" Stinky waved her hands up and down, excited with Natalie's play. \"She sure is a happy baby.\"\n\n\"She hasn't complained once,\" Rose added, \"it's almost scary. She just smiles and enjoys everyone around her, except when she's eating.\" Natalie raised her eyebrows, \"she's very intense when she eats. Full concentration.\" \n\n\"She acts like she's starving,\" I added. Natalie nodded and continued playing, drawing more smiles from Stinky. \n\n\"A police car could get through,\" I said, thinking out loud. \n\n\"What?\"\n\n\"A police car,\" I repeated, \"hide in plain sight and all that. We could drive right past the checkpoints if we had a police car.\" \n\n\"And where would we get one of those?\" Rose asked, \"there's little chance of stealing one and I doubt they rent them out.\" \n\n\"We could borrow one,\" Natalie said, not looking up from Stinky's smiles. She was enamored with the grins and worked feverishly to keep them coming. Stinky bonded quickly. Such a powerful drug.\n\n\"And who would lend it?\" I asked.\n\n\"A police officer, of course,\" Natalie added with a bit of whimsy. She looked up with a smartass grin that held no judgement. She was playing with me as well. I gave her her earned smile and waited for the explanation. \n\n\"We let in a single officer to search the house,\" Natalie explained, \"we let him find Stinky.\" Let the bonding work for us. It was simple and probably our only option. I didn't like adding another bond not knowing the long term effects, but what choice did we have. Natalie was smart though I didn't want to admit it out loud. \n\n\"Wouldn't a married officer do as well?\" I asked. My smartass grin was better than hers. Rose laughed, and Natalie reached out and slapped my knee. There was a sparkle in her eyes. I had a new friend. \n\n\"They wear gloves,\" Rose said, trying to stifle her chuckle, \"how would we get an officer to touch Stinky.\"\n\n\"One of us can touch the cop while touching Stinky,\" I suggested. \n\n\"I could do that,\" Natalie offered, \"should be easy if he's male,\" she smiled, \"and single.\" I had to laugh at the puns being thrown around. Natalie smirked and we shared a look as Rose added to the grinning. Stinky thought we were playing with her and started laughing herself. It was a very pleasant cup of tea. \n\n\"We should do it before they return with a warrant,\" I suggested. Everyone nodded. We had a plan. \n\nChapter 8 - Sam\n\nRose and Natalie talked well into the night. I left them to it, knowing that the earlier tears were only the beginning. They needed time together, and I was the third wheel. They insisted I leave Stinky and relax. I found a radio in the guest room and located an oldies station to listen too. It wasn't long before my eyes closed and I nodded off fully clothed. \n\n\"Sam.\" I heard Natalie softly calling my name. I realized it wasn't the first time. I opened my eyes to see her at the foot of the bed holding Stinky. \"She misses you,\" Natalie said with a warmth I didn't expect. Natalie's eyes looked dreamy, and her smile was more than friendly. I almost looked behind me to see if it was meant for someone else. \n\n\"Sure,\" I fumbled and held my arms out. She put Stinky carefully, almost lovingly, in my arms. I pulled Stinky close. Natalie laughed as she ran out of the room. The smell hit me hard. I looked down at what I thought was raw sewage to find Stinky smiling at me. \n\n\"Chicken!\" I yelled. More laughter. \"Damn, Stinky. What did they feed you?\" I maneuvered her off the bed and grabbed her bag. I was just tricked by a lawyer in a most childish manner. It would take time, but childish revenge was my specialty. I was breathing through my nose and laughing to myself as I cleaned up sewer butt. \n\nI returned to the kitchen with a clean baby in one arm and a filthy diaper in the other. Rose was holding back a grin and Natalie was outright laughing. I made a feint, pretending to toss the foul diaper at Natalie who panicked for a moment then returned to her laughing. \n\n\"Think you're funny?\" I asked.\n\n\"I know I am,\" Natalie countered. Rose turned away, trying not to offend me by laughing. \n\n\"It will come when you're not looking,\" I said ominously, \"when you least expect it.\" My smile weakened the threat, but I knew I had her thinking. \n\n\"It was worth it,\" Natalie continued, \"at least she is true to her namesake.\" I made to throw the diaper in the waste under the sink.\n\n\"Garage,\" Rose said, her grin no longer covered. It was worth it to see those two smiling. I could be the butt of their joke at that price. Stinky and I traveled to the garage and disposed of the foul beast. \n\n\"We really should get some sleep,\" Rose said. \n\n\"I think I was asleep,\" I commented. Natalie covered her mouth trying not to add to the joke, \"I can take the couch,\" I offered. \n\n\"No,\" Natalie disagreed, \"you were here first. The bedroom is for you and Stinky. I can always sleep with mom.\" Rose agreed as she started the dishwasher.\n\n\"Goodnight,\" Rose told me and leaned down to kiss Stinky's forehead. \n\n\"Sorry about that,\" Natalie said once her mom had left. Her smile belied how sorry she was. I wasn't upset. I should have been, but I enjoyed being toyed with by her. It was done in such a sisterly manner. \n\n\"I forgive you...for now,\" I said with a sly grin. Natalie nodded, knowing she was in for payback somewhere along the line. \n\n\"Actually, I have never changed a diaper,\" Natalie said as she rose, \"maybe you could show me tomorrow.\" \n\n\"Sure,\" I said, \"you have to supply your own gas mask though.\" That got me a small chuckle as she exited the kitchen calling out a good night. I returned it as pleasant as I could. For a judgemental bitch, she sure looked good in her jeans. \n\nThe smell of coffee woke me again. Stinky was gone, probably being entertained by Rose. As I was trained, I went to the bathroom and cleaned up before I entered the kitchen for coffee. Rose and Stinky smiled at me. A steaming cup was already waiting on the table. I could get used to that. \n\n\"Good morning,\" I said, remembering my manners.\n\n\"Good morning, Sam,\" Rose replied, \"Natalie will be with us soon. She sleeps late when there's no alarm clock.\" I nodded as I drank some coffee, warming my hands and mouth. \n\n\"You two good?\" I asked, curious about how things worked out. \n\n\"As good as to be expected,\" Rose said, \"I have Stinky to thank for that. I had no idea how I was going to tell her. Maybe, I wasn't going too - I don't know. It's better this way. I know that now.\"\n\n\"I thought you teachers have all the answers,\" I joked. \n\n\"Whoever told you that, doesn't teach,\" Rose snickered, \"we just have to be smarter than the students. Sometimes we even fail at that.\"\n\n\"I wish I had met you years ago,\" I admitted. \n\n\"You probably did meet someone like me,\" Rose said, \"you just weren't ready.\"\n\n\"Stink has a way of making a person ready,\" I said, \"she removes all the barriers and lets you see your potential.\"\n\n\"We still don't know how real it is,\" Rose said, \"there are drugs that convince people they can fly.\"\n\n\"True,\" I agreed, \"and there are drugs that cure diseases.\" \n\n\"I sure hope she is a good drug,\" Rose said, and she caressed Stinky's back. Stinky smiled, enjoying the attention as she always did. \n\n\"Good Morning,\" Natalie said brightly. She was wearing a summer dress and looked striking. She turned around quickly, showing it off. \"Think one of Flagstaff's finest can resist?\" \n\n\"Not in a million years,\" I said with more awe than I intended. Rose choked back a laugh at my unexpected tone. I gather myself quickly. \"I thought you lawyers were all suit and tie.\"\n\n\"Only when we take you to court and clean out your life savings,\" Natalie said, not missing a beat. I didn't think she noticed my brief loss of control. \n\n\"You want to do this before breakfast?\" I said, my stomach growling. \n\n\"Never, it's Sunday,\" Natalie said. She continued when she saw my blank look. \"Sunday is pancake day at the William's household.\" I looked to Rose, who quickly handed me Stinky. I could see she had forgotten and thought herself remiss. \n\n\"Pancakes sound good,\" I said. Natalie shook her head smiling. \n\n\"Then you can help,\" Rose announced. There was something I was missing about past pancake days. Sitting on your ass and commenting must be frowned upon. I handed Stinky to the grinning Natalie and became the kitchen helper. \n\nI enjoyed watching Natalie play with Stinky as we ate. Stinky tried desperately to get a taste of the syrup. Natalie seemed at ease at keeping her mind off the food with simple tickling and some bouncing. It looked like she enjoyed it as much as Stinky did. After our meal, I washed dishes, and the ladies fed the human disposal. We put our plan into action after Stinky was fed. \n\nI watched out of the corner of the window as Natalie leaned into the Police car talking to the officer who was watching our house. I assumed they had us under surveillance because we refused a search. I was telling myself I was watching to see if she succeeded. My eyes locked on the subtle gyrations of her backside. The flowered dress flowed with her movements in a beautiful way. For a moment, I wished I was the officer. I had known before the car door opened, that she would convince him. \n\n\"It took me all night to convince her,\" Natalie said to the cop as she entered the front door, \"this Ebola thing has her scared. Is it okay if she keeps her distance?\"\n\n\"That shouldn't be a problem, Natalie,\" the cop replied. I didn't like how he said her name. I was having new reservations about the plane, \"We usually require two officers, but I think we can make an exception in this case.\" I could almost feel the smile that must have been on his face.\n\n\"Thank you, Tom,\" Natalie said. I disliked how she said his name. I took a slow breath and let the emotion pass. I didn't like what I was feeling. I had no idea where it was coming from. Natalie was a lawyer and way out of my league. A brief necessary friendship was all that would ever come of it. \"Where would you like to start?\"\n\n\"Is there a basement?\"\n\n\"No, just a crawl space you can only access from outside,\" Natalie answered. \n\n\"Then I just need to look in each room starting with this one,\" Tom instructed, \"then the bedrooms.\" Natalie giggled when he said bedrooms. My anger flared. More slow deep breaths and self-admonishment for being an idiot cooled me back down. I sat quietly on the bed knowing if he got to this room the gig was up. I listened as footsteps walked around the living room, presumably behind the couch and other possible hiding places. \n\n\"Oh!\" I heard Rose exclaim from the kitchen. I knew she was peeking from behind the kitchen door, Stinky still behind the wall.\n\n\"Ma'am, I'm sorry about this,\" Tom said, his tone changing from confident man to sympathetic, \"I will only be inside for a moment. Once your house is cleared, you won't be bothered again.\"\n\n\"He's not wearing a mask,\" Rose said with desperation, \"he can cough it all over us.\" \n\n\"I assure you I'm not infected,\" the cop said calmly. \n\n\"I'm sorry, mom. I forgot to ask.\" Natalie said. There was a short pause as Natalie pulled out the scarf I knew she had. \"Would you mind if I put this on you?\" she asked the cop. I could hear the smile in her voice. Unless the cop was gay, he would allow it. \n\n\"Of course, Natalie,\" Tom answered. I closed my eyes and prayed for divine intervention. I knew Rose was moving up, behind the cop as Natalie reached around his neck to tie the scarf around his mouth. I tried not to imagine her hands gracing the back of his neck as Stinky was secretly brought within Natalie's reach. There was a long paused filled with way too many pounding heartbeats. \n\n\"Who is she?\" I heard Tom ask calmly. \n\n\"We don't know,\" Rose said, no longer acting the senile woman, \"we only know the government wants her enough to dream up the Ebola scare.\" I walked out of the bedroom and joined everyone in the living room. I was gratified to find Tom a little out of shape, maybe carrying an extra fifty pounds. He was untying the scarf.\n\n\"You must be Samuel Donaldson,\" Tom said, shaking his head.\n\n\"Sam,\" I said, holding out my hand. I wasn't surprised when he didn't take it. \n\n\"Is this some kind of trick?\" Tom asked Natalie. \n\n\"Only to get you in the house,\" Natalie said, \"I'm sorry about that, but we need help.\" She looked over to Stinky, \"she is for real.\"\n\n\"I knew something was wrong,\" Tom said, \"they were letting people leave, in fact encouraging it.\"\n\n\"I think they figured it would be easier to catch us in a car,\" I surmised, \"we need to get past the roadblocks.\"\n\n\"Why shouldn't the government have her?\" Tom asked. I looked between Rose and Natalie. It wasn't a question I was prepared to answer. Everyone else who bonded just naturally wanted to protect her from everyone. \n\n\"I think they plan to use her as a weapon,\" I replied, \"spying and interrogation. Things like that. We believe she needs a childhood.\" Sam reached out and grabbed Stinky's barefoot. Stinky gave him one of her laughs, and he smiled as the bond took hold again. \n\n\"Damn, she's powerful,\" Tom said, \"somehow I know you're not lying,\" he turned to Natalie with a friendly smile, \"and I know you're not interested...in me.\" \n\n\"Sorry,\" Natalie said. I thought I saw her cheeks redden. I guess leading a man on embarrassed her. \n\n\"Sam,\" Tom said, holding out his hand, \"how can I help?\" I smiled and shook his hand. We all sat down and spent the next ten minutes filling him in on what has happened and our observations and reservations about Stinky. \n\n\"So, we need you to drive us through a road block,\" I said when the explanations were through. \n\n\"I better make a call,\" Tom said, ignoring the radio clipped to his breast and using his mobile phone. \n\n\"Hey, Gabby,\" Tom greeted when his call was answered, \"I'm at 23 Madison. The owner is pretty freaked out, but the daughter got me in, and I searched the place.\"\n\n\"I know, but the Feds will have to be satisfied,\" Tom continued after a short pause, \"the lady is senile and near a nervous breakdown.\" He smiled at Ruth, \"you bring in anyone else, you'll need an ambulance as well.\" \n\n\"Yea,\" Tom continued, \"I just need to use your name on the write up so the Feds won't go postal on me for doing it alone.\" \n\n\"Yes,\" Tom laughed as he spoke, \"she is a nine. Would be a ten, but I couldn't get a phone number.\" There were a few more jibes that made Natalie blush. The call ended to Tom's satisfaction. \n\n\"Sorry,\" Tom apologized to Natalie, \"he knew why I went in alone in the first place. We don't usually break protocol.\" Natalie just nodded with her speechless blush. \"Luckily, a lot of homes refused the initial search so it doesn't look that suspicious.\" Tom grabbed his radio and reported that Rose's house had been cleared using Gabby as his second. He was rather efficient for a police officer who was essentially breaking the law. Stinky was an incredibly powerful drug. \n\n\"So,\" Tom said when he was through, \"you guys got a plan.\"\n\n\"Not really,\" I said, shrugging my shoulders, \"I just figured you would drive us past the checkpoint, and we would handle it from there.\" \n\n\"What? Drop you in the desert and you hitchhike or something,\" Tom said, shaking his head, \"I can't go too far past the checkpoint without raising suspicion. All our cars are tracked by GPS. Dispatch will be checking up as soon as I leave my jurisdiction.\" \n\n\"What if I drive out first,\" Natalie offered, \"after they search my car, I can drive ahead and wait for you to catch up.\" I liked how she thought, always a devious second before me. Simple solutions for simple problems. \n\n\"I can find another car,\" I added, \"and be out of your hair in no time.\" Natalie gave me a look I wasn't expecting, almost angry. I looked away, toward Tom, trying to give myself some time to figure it out. Rose shifted Stinky in her lap. I saw curiosity in her eyes. She was perplexed by Natalie's reaction as well. \n\n\"You know, you and her,\" Tom continued, pointing at Stinky,\" will have to ride in the trunk. They won't search my car, but they will look inside as I go through.\" I just became the drugs I used to carry. I was contraband. \n\n\"Will need some pillows or something,\" I said, looking at Rose, \"I think Stinky will be alright as long as I'm holding her.\" Rose nodded her agreement. \n\n\"We can do it tonight,\" Tom said, \"I'll pull into the garage and load where no one can see us. Where are you headed?\"\n\n\"I guess west on 40,\" I replied, figuring it was the quickest way to Portland. \n\n\"There's a Pilot Travel Center about 15 minutes outside of the city,\" Tom said, \"we could meet there, near the Day's Inn. At night, we should be able to get you out of the trunk without anyone noticing.\" I nodded. No one would look twice at an open trunk near a motel. \n\n\"You're taking a big risk,\" Rose said to Tom, \"I hope you don't lose your job over this, or worse.\"\n\n\"My real love is the sax,\" Tom said, his smile growing, \"police work was my low-risk alternative. I'm beginning to think I might change professions.\"\n\n\"Stinky does make you rethink things,\" I said.\n\n\"She does at that.\" Tom laughed. \"I know I'd be damn good at it too.\" \n\nChapter 9 - Sam\n\nNatalie and Rose spent a long time talking before Natalie headed out to the Travel Center. I heard some tears though I stayed away not wanting to intrude. It was a good time to give Stinky a bath since I had no idea when she would get another. I intentionally avoided bonding with Stinky. Rose and Natalie wouldn't want me interfering though I could only imagine what they were discussing. I assumed it was Rose's unwillingness to fight the cancer aggressively. Stinky had shown me her determination not to spend her last days sick in a hospital. She had done that with her husband and wished not to go through it again. I guessed it was the real reason she hadn't told Natalie. \n\nI was relieved she now had her daughter at her side. It would be trying, but loneliness shouldn't be part of anyone's last days. I had suspected it would encompass my end in the past, but Stinky had shown me another way. In time, I too might have a family that would see me through. A dream of a legacy, though it would most likely require a name change. I doubted the Feds would stop looking for Samuel Donaldson. \n\nThere were more tears and hugs when Natalie left for the Travel Center. It affected me more than it should or, at least, more than it would have pre-Stinky. I wanted to say something to make it go away. What that something would be eluded me. I stood back and let it run its course. \n\n\"Natalie acts like she won't see you again,\" I said as Rose relieved me of Stinky. Rose ignored my statement and began tickling Stinky, making her smile and then laugh. It's hard to pry into a personal conversation when there is a laughing baby. I let it go and moved to the kitchen. Rose wanted to feed me one more time, and I wasn't going to miss it. \n\n\"I'm sorry I'm leaving you,\" I said as dinner wound down, \"I don't see any way of staying without risking Stinky.\" The realization of my leaving was coming home to roost. It was most likely the last time I would ever see Rose. She would become a memory. A memory that would drive my future decisions. \n\n\"Stinky needs a new name,\" Rose laughed. \n\n\"She likes it,\" I said, knowing that Rose was changing the subject.\n\n\"Even Smelly would be better,\" Rose continued. \n\n\"She'll always be Stinky to me,\" I countered her control, \"I don't want to leave.\" Rose sighed. She shifted Stinky on her lap and pushed her plate away. "
    ],
    "authorname": "DreamCloud",
    "tags": [
        "romance",
        "sci-fi",
        "stinky",
        "teegan",
        "dna",
        "future"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/the-link-1"
}