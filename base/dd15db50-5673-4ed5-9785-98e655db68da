{
    "title": "There and Back Again Ch. 129",
    "pages": [
        "Chapter One Hundred Twenty-Nine: Fallout\n\nIn the end, it was decided that Zevran would tackle Erlina, being the most likely to catch her if she was lying, while Aedan, Alistair, and I went to free Dougal and Loghain from their house arrest and bring them to Cailan to hear their side of the story. Both men were being guarded in rooms in a dim, slightly dingy hallway; the guards reported no problems with either man, and appeared to be quite relieved to be released from their duty.\n\nAedan knocked, and then opened Dougal's door; the older man was sitting cross-legged on the bed -- the only furniture in the room -- reading a book. His smile was incredibly relieved when he saw Aedan and Alistair, and he jumped up to clasp forearms with each of them before hugging me briefly. He started trying to explain, but Aedan stopped him, telling him we'd sit down and talk about it all at once.\n\nLoghain, on the other hand, was pacing, shirtless, a large bloody bandage wrapped around his middle. He was in amazing shape for a man his age, I couldn't help but notice; beside the bandages, his torso was covered in various scars that did nothing to hide his physique. He quickly donned a shirt, bowing to us respectfully. I was surprised -- from all reports, he'd barely survived, not been offered healing, then been held a virtual prisoner since the wreck; I expected some anger, at least, but all I could see in his countenance was grief. I keep forgetting he just lost a daughter. He's got bigger issues than Cailan's bad treatment.\n\nWe led both men to a small room where Cailan waited; Aedan insisted that Wynne be allowed to heal Loghain before anything else happened. The mage bustled in a few minutes later, exchanging fond smiles with Dougal before proceeding to unwrap Loghain's bandages with an irritated sniff. The Warden tried to object, claiming he was fine, pushing her hands away, but Wynne slapped his hands and insistently ripped off large clumps of filthy gauze.\n\n\"Why weren't we called before now? There's an entire clinic of healers in Denerim! This should have been tended days ago.\"\n\nThe degree of ire in her voice made me curious, and I stepped to the side to see the wound as she bared it. I immediately regretted it; there was a gaping hole in the man's abdomen, the edges of which were grey and ragged; blood and pus pooled in the wound, and bruising led from the injury around his flank and down towards his hip. I gasped in horror, wondering how he had survived this long.\n\n\"Cailan!\" I exclaimed in disgust.\n\nCailan blanched as well when he saw it. \"In my defense, I had no idea...no one told me. Loghain, I am sorry. I would not have left you like this had I known.\"\n\nThe taciturn former noble barely responded, distracted as he was by Wynne cleaning out the wound with supplies she produced from a small bag she'd brought with her. He tried to suppress his groans of pain, but a few slipped through and we all winced. Finally happy with her work, Wynne concentrated, and I felt her mana gather. The healing took several minutes, and left Wynne reeling and Loghain looking nauseous; it also left him with a large, dark, puckered scar. I helped the mage into a chair, while Loghain slowly, stiffly redressed himself.\n\n\"I'm sorry about the scar,\" Wynne said to Loghain. \"It has been too long. You're very lucky to have survived.\"\n\n\"Not sure I'd call that lucky,\" he muttered, thinking about Anora, I assumed. I wonder if he kept quiet about the wound hoping it would kill him? But he tried to force a smile for the healer. \"Thank you.\"\n\nWynne, recovering slowly, climbed to her feet and excused herself; she was going back to her clinic, she told us, but promised to be back before supper. Just as she was leaving, a line of servants arrived, carrying trays of food which they placed on the sideboard before slipping out. Cailan gestured at everyone to eat; we all helped ourselves, though I noted Cailan took only an apple and some cheese. Probably the first thing he's eaten in days.\n\nFinally settled with our plates, Aedan turned to Loghain and Dougal. \"Start from the beginning,\" he requested.\n\nDougal began. \"We left Denerim and things were fine for a few days. We were following along the Ferelden coast; we stopped in Highever for a few hours to board supplies, and then headed further west -- there's a safer crossing point to Nevarra near Jader. That was our goal.\" He looked around, sighing.\n\n\"The ship was attacked in the night after we left Highever. I woke when we were boarded -- I could hear too many pounding feet, and yelling. I grabbed my sword and opened the door to my room, only to be attacked. They were dressed like sailors, though they seemed to have trouble with their balance, so I suspect they were disguised soldiers, not pirates. They had Orlesian accents. I fought my way up to the deck, finding most of the crew slaughtered.\"\n\nLoghain broke in. \"I only woke when someone stabbed me, and I wonder now if I'd been drugged -- I'm not usually a deep sleeper. I killed my attacker with his own blade, and then tried to get to Anora's room.\" He grimaced, face a mask of pain and grief, and his voice cracked when he spoke again. \"Her door was open, and she was lying on the bed, blood trickling out of her mouth, her eyes wide open. She was dead, I'm sure of it.\" He looked at Cailan anxiously, clearly thinking he wouldn't be believed. \"She didn't do this, Cailan. I'm certain of it. She had come to terms with Nevarra, and she wasn't unhappy to go.\"\n\nCailan nodded tersely, clearly suffering from the telling. Alistair reached over and put a supportive hand on Cailan's shoulder, and the king's expression softened slightly.\n\nDougal continued, \"The ship was on fire, and taking on water; most of the attackers were dead or fled -- I saw their ship in the distance. Riordan dragged Loghain, unconscious, onto the deck; he and I pushed some crates into the water for floatation, and he ordered me to take Loghain and swim for it. He told me he was going back for Anora's body, knowing that you'd need proof. I carried Loghain overboard, and we waited...we waited longer than we should have, way longer than I was ordered...but the ship sank, and we never saw him again.\n\n\"A few other survivors were in the water; we all grouped together and swam to shore. A couple of people died of their wounds, and some I think succumbed to the cold, but we made it to shore near West Hill. Bann Franderel's men found us; he gave us healing potions and sent us back here by cart.\"\n\n\"And you have no idea who attacked you?\" Cailan's voice was much steadier than I expected, given his obviously emotional reaction to what had happened. I'm just happy he's dealing with things, instead of hiding in his room and drinking his feelings.\n\nLoghain and Dougal both shook their heads. Loghain scowled. \"They were Orlesian, but even I must admit that many would benefit by making it appear we were attacked by Orlais. They could have been mercenaries, hired by almost anyone. I have many enemies, as did Anora, and one or both of us were clearly the targets.\"\n\n\"Because you were stabbed?\" I asked.\n\n\"Because I was sedated,\" Loghain replied. \"Warden Dougal felt no ill effects. Someone must have dosed my food, possibly Anora's as well. It made us easy targets, and once we'd been stabbed, the attackers fled. If it had been piracy, or an attack on the ship itself or the captain, they wouldn't have started a fire, wouldn't have run -- they'd have been looking for valuables.\"\n\n\"Did the captain survive?\" I asked, thinking sadly of the man with the dry sense of humour.\n\n\"Yes,\" Dougal replied, \"and a few of the crew, but I don't know where he is now. He was brought back to the palace, but I've no idea where the other survivors were taken.\"\n\nWe talked for a while longer, and it became clear that no more details would be forthcoming; Aedan, Alistair, Cailan, and I left Dougal and Loghain in the sitting room, heading to Cailan's office for a chance to talk privately.\n\n\"Do you believe them?\" Cailan asked.\n\nAedan nodded. \"No reason for Dougal to lie -- or Riordan to cover for Loghain, once unconscious, if Anora had escaped alive or some such. I don't see Loghain assassinating Anora and stabbing himself to allay suspicion...nor Anora attempting to assassinate her father. Unless Anora was a lot less human than even we expected, someone tried to kill them both.\"\n\nI agreed, though I had to admit that some of the politics escaped me - who would benefit from Anora's death? And I hadn't entirely let go of the idea that the former queen might have faked her death, her father's injury perhaps unintentional.\n\n\"The Orlesians could be looking to sow discord between Ferelden and Nevarra; Duke Anaxas is not going to be pleased, and he could very well be the next to challenge the King's hold over Nevarra,\" Cailan speculated.\n\n\"For that matter, the Duke's enemies could have been responsible, and they just tried to dispose of Loghain to get at Anora,\" Alistair countered.\n\n\"Let's not forget the Fereldans who might want vengeance against either of them, or those that might think you would be grateful to have them dead.\" Aedan smiled sympathetically at Cailan. \"There are enough potential candidates to go around.\"\n\n\"So now what?\" I asked.\n\n\"See what Zevran comes up with, and question the rest of the survivors.\" Aedan sighed. \"Any idea where they are?\"\n\n\"This is why I have a seneschal,\" Cailan replied wryly.\n\nWe found said seneschal, and were escorted to a long-unused wing of servant's quarters, where the rest of the survivors were being held under house arrest. I was truly pleased to learn they hadn't ended up in a dungeon -- or Fort Drakon. Cailan excused himself to catch up on his duties, including dealing with the nobles who'd been plaguing his seneschal, leaving us to question the survivors.\n\nWe questioned the captain first; his account matched Dougal's, though he offered a few new details.\n\n\"It was a pirate ship -- Felicisima Armada, I'd guess, one of the fastest ships I've seen -- but it wasn't pirates that boarded us. They carried soldiers; I couldn't tell you whose. The attack seemed calculated, directed -- don't know what they were after, but it wasn't treasure. They only killed anyone who got in their way, and they didn't take anything. My boys put up a good fight, but they're not trained soldiers -- they had no chance.\" He looked incredibly weary -- not from bodily fatigue, but just the weight of the world pressing on his shoulders. I resisted the urge to hug him. I wondered if he'd had family on his crew, and how he was going to make a living now that his ship was at the bottom of the ocean. I hoped Cailan would compensate him in some way...I realised I was missing the rest of the conversation with my wool-gathering.\n\n\"...any new crew members?\" Aedan was asking. \"Anyone who signed on after we booked passage for Lady Anora?\"\n\nThe captain looked thoughtful for a minute. \"There was, yeah. Kind of odd, actually; my galley hand never showed up when we were loading supplies. I sent a runner to his usual room, and no one answered. I had to take on someone new right before you arrived at boarding.\"\n\nAedan scowled. \"Where did you find the new guy?\"\n\n\"Just on the docks. Same place I originally found all of my crew -- you take on someone new, evaluate them for one or two trips before hiring them permanently.\"\n\nWe all exchanged bleak looks.\n\n\"What?\" he asked.\n\n\"Is the new galley hand among the survivors?\"\n\nHe looked remorseful. \"No. Must have gone down with the ship.\"\n\nI snorted. \"Or he's halfway to Rivain or somewhere with those mercenaries.\" When the captain looked at me, confused, I frowned sadly. \"I'm afraid you'll probably find your former galley hand is dead, Captain. Your new hire was a plant by whoever attacked your ship.\"\n\nHe blanched, chin falling to his chest, shoulders slumping. \"I...I didn't know! I swear, if I'd known...\"\n\nAedan patted his shoulder. \"Calm yourself, Captain. We don't blame you. Can you tell us anything about the man you hired?\"\n\nHe shook his head. \"Name was Lem. Brown hair, brown eyes. Nothing that would stand out. And he kept to himself a lot. I didn't think much about it -- a lot of sailors originally go to sea to get away from something. I don't usually pry.\"\n\nAlistair sighed. \"Very well. Listen, Captain, we need to confirm details with your surviving crew, see if any of them knew anything about the new galley hand, but then you'll all be free to go. Talk to the seneschal about compensation for the families of the deceased crew and for your ship.\"\n\n\"Th...Thank you!\" he stuttered. \"Maker Bless you, Warden.\"\n\nWhen we emerged, I spotted Leliana in the hallway waiting for us with an anxious-looking guard; I told Aedan and Alistair to continue the questioning without me, and went to greet the bard, dismissing the guard who appeared relieved when no one seemed upset at her arrival.\n\n\"What did you do to the poor man?\" I asked her.\n\nShe giggled. \"Nothing, really. The guards had all been warned not to interrupt you, yes? I convinced him it was important. That's all, I promise.\"\n\nThe bard looked radiant; even in armour and carrying weapons, she practically exuded happiness. I linked my arm through hers and escorted her back to my room before grilling her.\n\n\"So? Leli, you look so happy.\"\n\nShe flushed and grinned at me. \"I am. Oh, Sierra! You can't imagine.\"\n\n\"So tell me already!\"\n\n\"Her Rev...er, her Grace has helped me find a...middle path, I suppose.\" I raised an eyebrow, and she rushed to explain. \"If she does indeed become the Divine when Most Holy Beatrix goes to the Maker's side, it will not be for some time, yes? I have convinced her that, for now, anyone can take over the study of Haven, as it is unlikely much will be found.\n\n\"Based on what you have told me, her Grace feels there is another way. I can aid her and the Chantry from anywhere using my contacts, and I can begin cultivating those contacts now -- to hand over to whomever she chooses as her Left Hand when she ascends. She has promised she will not bind me in that position. I will need to travel some to make contacts and collect intelligence, but for the most part she has agreed that I can be stationed between Amaranthine and Vigil's Keep.\"\n\nI squealed. \"So you're going to stay? Be the Arlessa?\"\n\nShe blushed prettily. \"If he asks me...yes, I will.\"\n\nI launched myself at her, pulling her into a hug; she giggled merrily and hugged me back just as hard. \"Leli! I'm so glad! You deserve some happiness for yourself.\"\n\n\"Thank you, my friend. I would not have even attempted to find another path if not for you. I must leave in a few days -- there are some things I must accomplish before I can settle down -- but will you come with me to meet her? If nothing else, I wish her to know who I have to thank for my desire to find a new path. Please, Sierra?\"\n\nI couldn't say no to that earnest expression. \"Can I bring Aedan and Alistair?\"\n\n\"Of course! I will go make arrangements. Perhaps morning tea tomorrow?\" She smiled beatifically at me, and I nodded.\n\n\"Dinner here, tonight, though. Wynne is coming.\"\n\nShe hugged me once again, and bounced off, presumably to plan our meeting in the morning. I sighed, sure that Aedan was going to be less than pleased with me when they got back. And Duncan would be rolling over in his grave...if they did graves in Thedas.\n\nZev returned a little later, having spent the morning interrogating Erlina. I was appalled to learn she'd been kept in the dungeon since arriving back at Denerim.\n\n\"Can you blame them, Bellissima? Her mistress is murdered by Orlesians while she survived. She is an Orlesian and an elf, and we had suspicions about her before the Landsmeet. She looks like a suspect, a traitor, no?\"\n\nHe hadn't learned much new from the handmaiden; she refused to say anything except confirm the basic facts we'd learned from the Wardens and the Captain.\n\n\"Do you believe her?\"\n\n\"Her grief is real enough,\" he answered. \"I do not believe she orchestrated the assassination. But she also knows more she's not telling -- whether it is just Anora's secrets she's protecting, or something else, I don't know. But I don't believe it will be possible to break her without employing less...pleasant methods, and I don't see his Majesty approving torture.\"\n\nI sighed. \"He'd better not.\" I tugged on my braid in frustration. \"Maker, what a mess. What are we going to do with her, then? We can't let her go.\"\n\n\"Fort Drakon likely has an empty cell available, yes?\" I rubbed my eyes irritably, and Zevran patted my arm sympathetically. \"Ah, my poor, kind-hearted Sierra. Never change, bella donna.\"\n\nI stuck my tongue out at him, and he chuckled and kissed my forehead, excusing himself to go collect more gossip around the palace.\n\nRather than interrupt while the others were questioning the survivors, I shucked my dress and curled up on the bed to catch up on some much-needed sleep; the one down side to Warden stamina, I reflected, was that it didn't mean you wouldn't be tired -- you just wouldn't have to stop whatever you were doing because of it. And there was a tendency to get a little...carried away, when there was time to relax and be intimate.\n\nI woke up a couple of hours later when Alistair crawled into bed beside me.\n\n\"Love?\" I asked fuzzily.\n\nHe kissed my forehead. \"Everything's fine. Go back to sleep.\"\n\nI shook my head, clearing out the fog. \"No, I'm good. Tell me what you learned.\"\n\nHe rolled onto his side, leaning over me, his head propped on one hand. \"Nothing you didn't already know. No one knew anything about Lem -- he was quiet, kept to himself. And none of them know if he left with the pirate ship, or died in the attack. No one saw anything. We have more people to talk to tomorrow, but I doubt they'll know anything either. I'd bet anything he's the one who stabbed Anora. Might have been the one Loghain killed, for that matter. I guess we'll never know.\" He growled with frustration.\n\n\"How's Cailan?\"\n\n\"Better. Just having someone else to take charge, I think. I can relate to that.\" He grinned sheepishly at me, and I chuckled. \"I worry about him, being here alone.\"\n\n\"Me too. He needs a wife.\"\n\n\"Eamon tried that,\" he teased me.\n\n\"Yes, well, Eamon can bite me.\" Alistair choked, and I laughed. \"Earth jargon. I don't know what we can do for Cailan other than be here when he needs us.\"\n\nAlistair had been tracing circles on my bare belly with his free hand, causing goose bumps, and I shivered. Smoothing his hand over the pebbled skin, he leaned down to kiss me softly, teasing my lower lip with his tongue.\n\n\"I don't really want to talk about Cailan anymore, right now at least. Do you?\"\n\nHe kissed me again, swallowing my gasp as his hand came up to cup my breast through my bra. For the rest of the afternoon, I forgot completely about Cailan, Anora, Leliana, and all the other things that were occupying my mind.\n\nWhen we emerged at supper, redressed and presentable, we found Wynne and Leliana already waiting for us in the small dining room we had used before, along with Aedan, Zevran, and Cailan. We chatted for a while before we ate; Leliana informed everyone she'd be leaving, but promised to be back at the Vigil within a few weeks. Wynne was also leaving. Happy that her clinic was running well, she was going to Orzammar to meet up with Shale and Caridin.\n\n\"What should we do with Dougal and Loghain?\" Cailan asked.\n\nAedan and Alistair exchanged glances, and I could tell they'd talked about it already. \"I assume we will send them both to Jader -- maybe not by boat, and maybe with an escort,\" Aedan began.\n\nZevran piped up, \"Another assassination attempt is possible. We cannot be sure who the target really was -- Loghain, Anora, or both.\"",
        "\"Or someone else altogether,\" Alistair cautioned. \"We can speculate, but we don't have proof of anything.\"\n\n\"Do you think we'll ever figure out who was behind it?\"\n\n\"I can make some subtle inquiries, if you like?\" Leliana offered. \"I have many contacts within Orlais, after all.\"\n\n\"Please do,\" Cailan agreed. \"And I will make formal inquiries through diplomatic channels, though I think it's safe to say nothing will come of that.\"\n\n\"I feel like we should ask them what they want to do,\" I suggested, getting back to the subject of Loghain and Dougal. \"At least Dougal. I know you want Loghain out of the country...\"\n\nCailan sighed. \"That was probably hasty of me. I couldn't help but feel he was a threat to me, but with Anora gone...\" He looked over at Alistair and Aedan. \"I'll leave the decision to you.\"\n\nDinner was lovely; we were all guilty of watching Cailan too closely when servants came in with wine to go with the meal, but to our relief, he sipped at one glass, refusing any refills. I wondered if he'd so quickly come to his senses, or if he was just embarrassed. Either way, I'll take it.\n\nWe finished dinner, and Cailan excused himself to catch up on more paperwork. Aedan had Dougal and Loghain brought to us, and allowed Leli, Wynne, and me to stay for the discussion. Dougal, unsurprisingly, wanted to go back to Jader; he agreed to travel by ground, but declined an escort.\n\n\"They weren't after me, lad,\" he said to Alistair when he objected. \"And on my own, they won't even be able to find me if they try. I'll be back in Jader in no time.\"\n\nLoghain, also unsurprisingly, wished to stay in Ferelden. Aedan and Alistair made no commitment, but agreed to consider his request. Loghain, claiming tiredness after the healing earlier in the day, excused himself for an early night, but Dougal stayed and we all chatted until late. Wynne decided to stay the night, even when Leliana left to go back to the Chantry, and I suspected that Dougal had something to do with it. I managed, just barely, not to tease her about it when she went to bed.\n\nAedan was unimpressed, but Alistair cautiously optimistic about the meeting in the morning with Ferelden's new Grand Cleric. I had to admit I was curious about meeting her, after hearing about her from Leliana and reading 'Asunder', but I was also nervous. Bad enough Greagoir knew about me -- and rescuing Anders was a good motivator. At least I had bargaining chips I could use -- I wonder if any of his men ever managed to use the abilities I showed him? But she's supposed to be much more clever than he is, and devious -- a bard, like Leli. I'm going to have to be very, very careful.\n\nWe stopped in on Cailan before going to bed myself; he was sitting at his desk, staring aimlessly out the open window, a tumbler half-full of some sort of liquor in front of him beside a truly impressive pile of papers. Alistair let me go first, clearly insecure, uncertain of his standing with the king. Cailan jumped when I cleared my throat, and I smiled apologetically.\n\n\"Sorry. How are you holding up?\" I couldn't stop my gaze from returning to the glass of booze.\n\nHe flushed slightly when he saw where I was looking, and waved his hand dismissively. \"Don't worry,\" he responded ruefully, \"I haven't climbed back into the bottle.\"\n\n\"Cailan, I...\"\n\n\"I understand,\" he interrupted. \"When you got here...well, no one could blame you for assuming I'd be drunk again. I'm afraid I'm not very good at this...monarchy thing.\"\n\nI walked up to him, leaning one hip against his desk, holding out one hand for his. He gave it to me hesitantly, and I squeezed his fingers with mine softly. \"It's okay to lose it, every now and then. And we are always here for you -- all of us. You may be the King, blood of Calenhad and all that nonsense -- but you're still just a person, and that's okay. You're allowed to be human, and to need help. After what you've been through the last few years...no one can blame you for needing a few days.\"\n\nAlistair crept up behind me, reaching out to rest his hand on Cailan's shoulder. \"I'm glad you sent for us. You're doing well, Cailan. The people love you. Stop being so hard on yourself, alright?\"\n\nCailan clung to my hand, leaning into Alistair's sympathetic touch, eyes bright as he blinked a few times. \"Thanks.\" His expression was earnest, the gratitude so raw it hurt to see.\n\n\"It's what family does, or so I've been told.\" We all chuckled uncomfortably; not a single one of us in the room had any experience with that.\n\nFeeling awkward, we finally bid Cailan goodnight, encouraging him to go to bed rather than sit up all night with paperwork. He promised, seeming in a better mood as we hugged him and went to bed.\n\nI slept poorly, nervously anticipating my meeting with Grand Cleric Dorothea in the morning."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-129"
}