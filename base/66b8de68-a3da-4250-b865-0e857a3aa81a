{
    "title": "Let's Make a Deal Ch. 01",
    "pages": [
        "Dave didn't know what he was doing sitting at the bar. He didn't really like drinking. But he just didn't want to go straight home. Work provided some distraction from his thoughts. But other than work tomorrow, nothing was expected of him. He knew that he would be hit with a crushing loneliness as soon as he got back to his empty apartment. A place he used to consider home. But lately it has felt like a mausoleum for a dead relationship.\n\nDave and Ashley were a bit of an odd couple. Ashley was confident, sexy, and a bit out of Dave's league. Still, Dave never expected to walk-in on her with his best friend. It's only been a week, but he must have replayed the scene a thousand times...\n\nDave usually gets home around 6 on weekdays. But on this particular day he was out of the office to meet a vendor. The meeting was close to his apartment, so he thought he'd surprise his girlfriend by bringing her lunch. He knew she had the day off and would probably be home.\n\nAt first he was annoyed to find a car in his spot. But then, he realized, he knew this car. A silver Maxima with a Seahawks decal in the rear window, it was Steve's, his best friend.\n\nDave parked his car in the visitor lot and made his way to his apartment. \n\nHe reached the door and found it slightly ajar. He heard a *pop* followed by a groan. He stopped moving.\n\n*sluuuurrrp slurp slurrp*\n\n\"Oh fuck baby. You are so good at that.\"\n\nIt was Steve's voice. Dave felt ill. No way he was hearing what he thought he was hearing. He put his finger tips on the door and slowly pushed it open.\n\nDave couldn't believe what he was seeing. There was Steve, standing in his kitchen, naked. And on her knees right in front of him knelt Ashley, hands on his ass, forcing her mouth full of cock. Steve's back was to Dave and Dave couldn't see Ashley's face, but he recognized her nail polish. Dave could clearly hear her gagging.\n\n*gasp* \n\n\"Fuck I love your big dick!\"\n\nIt was definitely Ashley's voice, but Dave had never heard her talk like that.\n\n\"Mmm I'm going to cum.\" Steve groaned.\n\n\"Cum in my mouth, I wanna swallow it.\" Ashley purred.\n\n\"What the fuck!\" Dave thought. \"She never swallows!\"\n\n\"Oh fuck! Ungh! Ungh! Unghhhh!\"\n\nDave dropped the bag of deli sandwiches.\n\nSteve jumped and turned around, his thick cock still dribbling cum. And on her knees, a very stunned Ashley with mouth closed tight and cum dripping down her chin. \n\nThey all looked at each other for a moment before any one spoke. Dave looked at Steve who was still reeling from orgasm. Then he looked down at his dick. It was like a beer can. \"Did he fuck her with that thing?\" he thought. Then he looked at Ashley, visibly upset, and not sure what to do with all the cum in her mouth.\n\n\"Look, uhh-\" Steve started in, but stopped when Ashley put her hand on him.\n\n*gulp*\n\n\"I'm so sorry Dave! It kinda just happened!\" Ashley pleaded.\n\n\"Yeah bro, she still like, loves you man.\" Steve tried to compose himself.\n\nAshley started to cry, but it was clear that her mascara had already been running.\n\nDave turned around. \"Sorry!\" And walked out.\n\n\"Sorry? What the fuck Dave!\" he thought.\n\nDave left in a hurry and went back to work. By the time he got home, Ashley was gone. \n\nHe thought he might be getting over it, but then he got a text from her, asking if she could come by tomorrow and grab the rest of her things. He knew seeing her again would be painful and he was dreading it. He sat alone at the bar, with a rum and coke, trying to numb a little bit of his anxiety.\n\n\"Is this seat taken?\" \n\nDave looked to his right. She stood about 5'3\", with a small perky frame. She wore slacks and a tasteful blouse. Her hair was blonde with a bob cut. Her sparkling green eyes held very direct eye contact. Her skin was glowing. She had attractive but approachable features.\n\nDave looked around. The bar was empty, save the inattentive bartender.\n\n\"Sure.\"\n\n\"Great!\" She pulled out her stool and took a seat.\n\nThe bartender walked up and asked,\n\n\"What can I get you?\"\n\n\"Blood and sand.\"\n\n\"I know that one.\"\n\nShe turned back to Dave. And starred intently.\n\n\"Uhh, put it on my tab!\" Dave managed a tight smile as he looked at his new companion.\n\n\"Change can be painful right?\" She finally said.\n\n\"Change?\" Who was this women?\n\n\"I have a certain... knack for reading people. You look like a man going through change, a painful one at that.\"\n\n\"Well...I've been better I guess.\" Dave let out a nervous laugh.\n\n\"However, change offers opportunity. Opportunity to take stock of what you have and use it to elevate, and...\" her eyes dropped to Dave's lap, and her lip curled into a smirk \"...to grow.\"\n\nDave shifted in his seat. The bartender delivered the drink. \"Cheers.\" And went back to watching one of the TV's.\n\nThe woman extended her drink to Dave's.\n\n\"Abi.\"\n\n\"Dave.\" They clinked there glasses and took a drink. \"So I guess your business is related to opportunity?\"\n\nAbi broke into a big smile. \"Why yes!\"\n\n\"Look, I'm not sure who you think I am, but I'm not really looking for a therapist.\"\n\nAbi's smile faded. \"I'm a broker, actually. And a rather successful one.\"\n\n\"A broker? Sorry I thought-\"\n\n\"Don't you get tired of saying sorry Dave?\"\n\nDave did his best to hide his shock, but it was written all over his face.\n\nAbi's smile returned, only this time it carried a hint of cruelty.\n\n\"Hey look, I'm sor-\" He stopped himself. \"I guess I just thought what I said was uncalled for. I shouldn't jump to conclusions. I guess I'm just stressed out.\"\n\nAbi continued to stare. He was finding her too intimidating to maintain eye contact.\n\n\"You've got a lot of potential, actually.\" She finally spoke. \"You know with my help, you could be a... big deal.\" \n\n\"With your help? Are you a broker or a life coach?\" Dave tried to sound more confident.\n\n\"I'm definitely more of a broker.\" Abi swirled her drink. \"You invest with me and you'll see incredible returns.\"\n\nDave looked down. \"I'm not exactly swimming in capital.\"\n\nAbi looked at him and smiled. \"Actually Dave, I'm very familiar with your assets and, to me, your partnership is very attractive.\"\n\nDave blushed. Why is this beautiful woman flattering me like this?\n\nAbi reached over and let her delicate finger trace Dave's arm. He felt his heart leap.\n\n\"Wealth, Power, Vitality...\" She glanced at his crotch. \"Virility.\"\n\n\"What is happening right now?\" Dave leaned back.\n\nAbi broke out in a laugh, nearly falling off her stool. Dave was very aware that her hand now rested on his arm.\n\n\"Hahaha! Excuse me. I'm aware that this pitch is a bit much. But-\" Her smile faded. \"It IS true. I can deliver.\"\n\n\"Okay...\" Dave was starting to wonder if he was talking to a lunatic. \"So you do these things, but not for money?\"\n\n\"My firm rarely expects money. We're far more interested in... commodities.\" She smiled mischievously.\n\n\"And you think I have-\" Dave started.\n\n\"Look Dave! Let's make a deal!\"\n\nShe turned, put her hand on his thigh, and leaned in. Dave felt her hot breath on her neck. She breathed into his ear\n\n\"I'll make you rich and powerful. I'll even make your cock huge. I like sucking the bigger ones anyway.\"\n\nDave turned red and his pulse started racing. His dick instantly got hard. He thought about Steve's big dick fucking his girlfriend. The incredible envy. Then he thought of Abi, sucking him off.\n\nHe turned to look at Abi. She was biting her lip.\n\n\"You see Dave.\" She glanced around her, then moved her hand to the side of her mouth and whispered, \"I'm a devil.\"\n\nHer sparkling green eyes appeared to glow for a moment.\n\nDave looked at her, mouth agape, and took her in. Her blouse seemed to have unbuttoned without him noticing. Her creamy skin breathed underneath. Her nipples were hard, clearly poking out of the delicate fabric. She had a desperate submissive look, like she needed to be touched. Dave gulped.\n\n\"So commodities means... you want my soul?\" Dave could hardly believe what he was asking.\n\nAbi's grin was big and beautiful, showcasing her perfect teeth. \"Yes that's right! You get to keep it though, until... you know. But we do offer management positions to our top performers!\"\n\nShe leaned back on her stool with her hands behind her head. \"How do you think I got this sweet job?\"\n\n\"I don't even know what a soul is.\"\n\n\"Dave there are literally trillions of them. And very few people get a chance to use theirs like this.\" She leaned in and spoke softly. \"I know you Dave, I know the life I can give you. I want you.\"\n\nDave gulped. Abi looked down at the tent in his lap and smiled. \"Seems like you want me too.\"\n\n\"...Can I think about it?\"\n\nAbi's smile faded. She turned back to her drink, picked it up and finished it. She hopped off her stool and gathered her things. Dave looked on, feeling a sense of regret. \n\nShe handed him a business card. \"I expect to hear from you soon.\" And she walked out the door. Dave couldn't help but notice her perfect ass swaying in her slacks. And just like that, she was gone.\n\nDave sat stunned on his stool for what seemed like forever. He looked at the card Abi gave him.\n\n\"Abidon & Partners LLP, A Division of Inferis Law Group\" The back had a number, handwritten.\n\n\"666\"\n\nDave jumped when his phone started to ring. It was Steve. He hadn't talked to him since that day. He thought about ignoring it, but it was one of the few friends he had, and he needed to talk to someone.\n\n\"Hello.\" Sounding annoyed.\n\n\"Hey man! I wasn't sure you'd pick up.\"\n\n\"Yeah.\"\n\n\"Look man... I just wanted to call and apologize.\"\n\nDave sighed.\n\n\"I just- You see, she came on to me. I shoulda said no. I know that! But she started DMing me, talkin bout how she heard how big my dick is -I mean you saw it Haha! She was sending me pics of her titties and ass, telling me she needed to get fucked by a real man... And... well... It wore me down man and... well... I'm sorry. I wanted to tell you after the first time, but she said it was a bad idea.\"\n\n\"First time!?\" Dave stammered.\n\n\"Oh yeah bro, sorry. This has been goin on for... well... since... well, she just blew me the first time. That was Valentine's Day. You were at work. And then we started fucking shortly after that.\"\n\n\"Valentine's Day?!\"\n\nDave hung up the phone. Today was the first day of August. Dave started doing math. Then he thought about the times Ashley seemed out of sorts without explanation. He thought about the times she didn't want to have sex. He wondered how much of his relationship was real or imagined. He felt like he couldn't breathe. \n\nHe did his best to hold back his tears. \n\nHe gulped down his drink. Dave looked at Abi's card, picked up his phone, took a deep breath, and punched in the numbers.\n\n*ring*\n\n*ring*\n\nThe reciever picked up.\n\n\"Well hello Mr. Freed. Seems you've made up your mind rather quickly.\"\n\n\"I, uhh... I guess I shouldn't be surprised you know my last name?\"\n\n\"What? You doubting I'm real deal?\"\n\n\"No! I'm sor- ...I thought about what you said. I think it's just what I need!\"\n\n\"Excellent! You're is going to be so happy with your decision! I'll draft the contract and meet you in an hour at the W Hotel lobby. I'll see you at the bar.\"\n\nDave walked into the hotel looking nervous and a little sloppy. He had to rush and cleverly navigate to reach the place. It was clear on the other side of the city in rush hour. He had barely time to think about what he would do with his new powers. But he knew one thing, he wasn't going to take any shit from Ashley or Steve. They were gonna be... sorry? He wasn't sure how he wanted them to be yet actually. But knew he wasn't going to take their shit! Or whatever...\n\nDave found his way to the bar. A hand reached up and signaled him. It was Abi. Her outfit had changed. She wore a gorgeous red evening gown that highlighted her curves and athletic shape. Abi's blonde locks were woven into a long french braid that reached her ass. How the fuck did her hair grow so fast? Dave wondered.\n\n\"I'm glad you finally made it.\"\n\n\"Yeah S-\"\n\nAbi's eyebrow raised. She looked stunning. Her makeup was just enough to highlight her femininity while letting her natural radiance shine through.\n\n\"I'm here now!\" Dave managed to sound confident.\n\n\"Yay!\" Abi beamed, making Dave blush.\n\nDave took a seat next to her. There was already a glass of brown liquor waiting for him. He took a sip and turned to notice Abi was biting her lip. He thought about her casually mentioning her love to suck big cock. Dave started to get hard.\n\n\"So where do I sign?\"\n\nAbi opened her brief case and produced a tablet. Dave didn't recognize the brand. The case was red and sparkling, and the top was adornded with two plush devil horns.\n\n\"Just a squiggle at the bottom is fine.\"\n\nDave took the tablet and started to scroll. 1001 pages?! Dave started to wonder what he was getting into, wondering if he'd regret it. He turned back to Abi looking a bit overwhelmed.\n\nAbi was leaning towards him, her eyes doughy, her cheeks reddened. She also seemed unaware or unconcerned that one of her nipples had slipped into view. It was pink, with a big areola. And it was very erect.\n\n\"Come on, it'll be fun.\" She mewed. \"...and we'll forward a copy to your email, if you really want to get into the details.\"\n\nDave gulped and turned back to the tablet.\n\n\"Affidavit for release of soul in exchange for services rendered on corporal plane\"\n\nDave started to read the text, but he could barely make sense of it. It was a complex mix of legal jargon and Latin maybe? He started scrolling faster, skimming as much as he could stand. He saw mention of monetary payment, health benifits, and penile 'boosting.' He finally reached the bottom and found the signature line.\n\n\"Right here?\" Dave asked. He turned to look at Abi. She was practically salivating. She offered a nod. Dave tried to be polite, but couldn't stop himself from stealing another glance at Abi's nipple. Fuck she is so hot!\n\nDave took a deep breath and signed the line with his finger. He returned the tablet to a very happy Abi.\n\n\"Alright! What's next?!\" Dave realized he would probably know if he actually understood the contract.\n\nAbi offered a genuine laugh. \"Eager are we? Well the deal has been signed, but it needs to be sealed. Let's take this upstairs shall we.\"\n\nAbi returned the tablet to her briefcase. She got up and started to saunter towards the elevator. Dave got up quickly to follow, nearly colliding with someone as he pushed out his stool. He hurried after her. He reached the elevator just as the doors started to close.\n\nThey started going up. They were alone.\n\n\"Deals like these require a sealing ritual.\" Abi offered. \"These rituals vary broker to broker. I usually prefer a kiss.\"\n\nDave started to blush. He looked at Abi. She was so beguiling. He closed his eyes and leaned in for a kiss. But he felt a hand on his chest stop him in his tracks.\n\n\"Patience! Hahaha! You're lucky I like you! I have something I think you'll like much better in store!\" \n\n*Ding*\n\nThe elevator doors opened, not to a hallway, but a sprawling penthouse. Abi stepped out, Dave followed right behind. Her ass swayed seductively in her evening gown. Her back was exposed, and the fabric hung just low enough to get a glimpse of the top of her ass crack.\n\n\"Yes, this will do!\" Abi exclaimed.\n\nThey stood in a large living room, with a commanding view of the city. They looked out for a moment before Abi spoke.\n\n\"As I was saying. I usually like to seal the deal with a kiss, but...\"\n\nDave turned to look at her. She was beaming. Her green eyes sparkled. Her cheeks blushed.\n\n\"How about I suck your cock instead.\"\n\nShe looked down at his crotch. He was visibly tenting his pants.\n\n\"Does that sound good?\"\n\n\"Uhh sure. Ok!\"\n\nAbi giggled and set her brief case down and knelt on the Oriental rug in front of Dave.\n\nShe offered a teasing lick through the outside of Dave's slacks. Holy shit! This is happening!\n\n\"Let's see what we're working with.\"\n\nAbi unzipped Dave's slacks while biting her lip. She grabbed the waistband of his underwear and pulled them to his ankles. His hard cock sprung out. He was rock solid. Abi giggled again.\n\n\"Oh not bad. You've got a pretty cock.\"\n\nShe reached into her brief case and produced a roll of measuring tape.\n\nShe held the tape across the top of his cock. Her touch made Dave twitch and a bead of precum formed at his tip.\n\n\"Let's see here... 5...and a quarter inches... and around we have...4 and three quarters.\"\n\nAbi looked up at Dave. \"Mmm I wonder how much bigger you'll get.\"\n\nDave didn't say anything. He knew how big he was. He was just happy to have this beautiful girl handle his cock.\n\n\"Are you ready? Once I take you in my mouth, the pact will be sealed.\"\n\nAbi stuck her tongue out to catch a drop of hanging precum. Her eyes lit up as she savors the flavor.\n\n\"Mmmm\"\n\n\"Oh fuck yes! Suck me Abi! Please!\"\n\nAbi smiled and grabbed hold of Dave's twitching cock. She held it up and put her tongue on Dave's balls.\n\n\"Oh fuck!\" Dave groans.\n\nAbi tenderly licks his sack for a moment before running her tongue from the base of his shaft to the tip. She lets his cock rest there as she gives him a wink. Abi, slowly but deliberately, took Dave's cock into her mouth, all the way to the base.\n\nThe sensation felt incredible. Abi kept the whole dick in her mouth while giving quick little sucks and flicking Dave's balls with her long tongue. Dave felt like he kept getting harder. He didn't understand that was possible, considering how hard he was to start. Abi's mouth felt wet, warm, tight... and getting tighter!\n\nHe heard Abi start to gag, but she wouldn't back off the cock. Dave also was becoming aware of her teeth, gently scraping his dick. Abi started gagging more, tears started streaming down her cheeks. Her mascara was running.\n\nDave felt his cock throbbing in Abi's mouth. \"Oh fuck! That's so good!\"\n\nAbi was choking and gagging on his cock, when she started to make sounds like she was distressed. Abi reached around and put her hands on Dave's ass. Dave could feel her pulling herself down on to him.\n\nDave looked down and couldn't believe his eyes. Abi no longer had his entire cock in her mouth. She had atleast three inches of shaft exposed. And the girth! His cock looked unbelievably thick. Abi was still pulling herself down onto him, now with great determination. Her sparkling green eyes were dulling and rolling into the back of her head. She stopped making any noise for a moment and just held there.\n\n*coulch!* \n\n*clough! congch!*\n\n*Slluurrrrrp- gasp*\n\nAbi felt her throat relax as it was no longer full of Dave. After leaning back far enough she let Dave free of her mouth. She felt her jaw relax, as it was no longer pushed to the limit.\n\n*cough! cough!*\n\n\"Oh fuck! God damnit!\" Abi seemed a little disappointed in herself. But her frustration quickly faded as she stared at Dave's cock. Her eyes belied a sense of intimidation.\n\nDave, however, looked completely stunned. That's my cock!? He was massive, pointing straight out and covered in bulging veins. It was bigger than anything he had seen in porn. It looked excessively long and stupid thick.\n\n\"Wow Dave! I knew you would get a big one. But this... this is truly special. Your soul must have a great deal of potential!\"\n\n\"Oh my God this is awesome!\"\n\nAbi chuckled, \"He's not your God anymore. But yeah, this is exceptional!\"\n\nAbi's hungry eyes light up with excitement. \"Let's measure it now!\"\n\nAbi grabbed the measuring tape, pausing for a moment to greedily lick up the precum dripping from Dave's fat tip. Her eyes go wide as she takes her measurement.\n\n\"Thirteen inches! 13! I was betting you'd get a healthy 9 inches! But 13! God damn!\"\n\nAbi wrapped the tape around the middle of Dave's shaft, where he was thickest.",
        "\"Fucking 8 and a half inches! What a big fat dick!\"\n\nAbi cupped Dave's balls. She tried rather. One testicle took up her whole palm. Dave's sack had grown very large, with extra large balls. Abi could smell the cum stored inside, she found it intoxicating.\n\n\"I need to see how much this thing cums!\" She began pumping Dave's thick shaft. \"Mmm I want you pump my mouth full of your hot load.\"\n\nDave felt his ego growing as Abi praised his oversized cock. \"Show me. Show me how bad you want it.\"\n\nAbi smiled at the challenge, obviously turned on by Dave's new found confidence. She began worshipping his cock. Running her mouth all over it, covering it with her stringy spit, she was slobbering him to the best over her ability. Or at least that's what Dave thought. Abi sucked on the big tip of Dave's cock for a moment before-\n\n*pop*\n\nAbi let Dave's cock loose from her face. Strands of saliva hung in the air between his twitching member and her panting lips. Abi looked up at Dave. Her cheeks were red, her make-up ruined. Still, Dave had never seen a more perfect sight. Abi's desperate panting quieted and gave way to a mischievous smile. She opened her mouth and let her tongue hang out.\n\nAnd hang it did! Abi's tongue hung unnaturally long. She let it wiggle and writhe while holding eye contact with Dave, his massive cock, twitching inches from her face.\n\n\"Holy shit! This is crazy!\"\n\nAbi's tongue slinked back past Abi's teeth.\n\n\"I think you're going to enjoy this.\" Abi said before taking Dave back into her mouth.\n\nShe sucked his tip loudly, slurping and dribbling spit. Dave watched in awe as Abi's tongue pushed past her vacuum seal lips and snaked around his cock. And then around once more! Like a candy cane! Abi's mouth worked the head, while her tongue worked the shaft.\n\n\"Oh fuck!\" Dave grunted. \"I'm gonna fucking cum!\"\n\nAbi let out an approving moan and began massaging Dave's balls (with both hands).\n\n\"Oh fuck- fuck- fuck!\"\n\nAbi's eyes grew wide as she held eye contact with Dave. His cock throbbed in her mouth. She started gulping. And gulping. And Gulping!\n\nDave put his hand on the back out Abi's head and shoved his cock to the back of her throat. He groaned deeply while Abi choked and gagged. Cum spilled past her lips, ran down her chin, and spilled on her tits, ruining her dress.\n\nAs the climax subsided, Dave released Abi. She backed off, but kept the tip in her mouth. She sucked every drop she could, until-\n\n*pop*\n\nDave's cock flopped out of her mouth and hung low, to his knees.\n\n\"Oh fuck! So good...\" Abi muttered. \"Your cum tastes so good!\"\n\nAbi stood up and started gathering the cum that escaped with her finger and promptly gobbled it up.\n\n\"You're going to have to let me do that again some-\"\n\nAbi stopped short. Her attention returning to Dave's swelling cock. He was getting hard again.\n\n\"Already? But you came so much...\" Abi's voice trailed off as she stared at Dave's massive pole, rock hard and throbbing. \"I've created a monster...\"\n\n\"Take off your clothes. I'm going to fuck you now.\" Dave stated, rather matter of fact.\n\nAbi was suddenly aware of how soaked her pussy was. Her juices running down her legs. She started removing her dress.\n\n\"I usually don't let myself get fucked by my clients.\"\n\nAbi exposed her perky C cup tits. Her nipples were erect, and her areola puffy.\n\n\"But...that fucking cock. I've never seen one that big outside The Pit.\"\n\nShe let her dress fall to the floor. She was naked underneath, save a small patch of hair above her pussy. Dave's mouth hung open, she was stunning.\n\n\"Do you like what you see?\" Abi asked coyly.\n\n\"Oh my God! You are so fucking hot!\"\n\n\"I told you. He's not your God anymore.\" Abi winked, and grabbed Dave's cock. \"Come on. There's a bed over here.\"\n\nAbi led Dave a room down the hall of the spacious penthouse. He paid little attention to the stylish decor and dramatic views. He was focused on Abi's perfect ass, bouncing as she walked. He felt Abi's little hand tug him, leading him forward. Dave couldn't believe how small her hands looked on his springboard of a cock.\n\nThe room was large, and tastefully decorated to match the rest of the penthouse. The bed was a massive California king. Abi crawled on top slowly, arching her back. Dave could clearly see her sex glistening in the low light. Abi looked back at him with a soft submissive look.\n\nDave ran his fingers up Abi's thighs and over her ass. She cooed at his touch. Dave knelt down at the edge of the bed, putting his face right in Abi's pussy. The smell was intoxicating, like leather and dried fruits. Abi moaned as she felt his hot breath on her puffy lips. Dave made his tongue wide and flat and stole his first taste.\n\n\"Oooooo\" Abi shifted to welcome Dave's mouth. Dave savored her delicious pussy. With every lick he wanted more. He held himself back, not wanting to be too forceful. But eventually Abi reached back, grabbed Dave's hair, and pulled him close, burying his face in her womanhood.\n\n\"Oh fuck yes! Right there! Right there! Right there!\" Abi cried out.\n\nDave took the cue and stopped holding back. His tongue became ravenous. He ran his tongue all over her lips and probed inside. He even spent some time rimming her asshole. (Something he never did with Ashley.)\n\nAbi wiggled and writhed. \"Oh yes Dave! That's so good!\"\n\nDave's tongue navigated its way to Abi's clit, which by now was hard and prominent. He began circling it with constant pace and subtle pressure.\n\nAbi was moaning. Her body was writhing. \"Ooooohh fuuuuucck! You're going to make me-\" Abi got real quiet. Dave felt her body tighten and her pussy started pulsating.\n\n\"FUCK- OOoOOOooo!\" Abi's voice took on a howling distortion. Like something from a horror movie.\n\nJuices gushed into Dave's mouth and streamed down his face. He found them to be... sinfully delicious. He lapped it up greedily, before standing up.\n\n\"I hope I didn't scare you. My... dark side can be a little... much for humans.\" Abi spoke, breathing heavy.\n\n*THUD*\n\nAbi felt something heavy slap against her ass and lower back.\n\n\"Oh!\"\n\nDave had squared up behind Abi. His long thick cock reached far beyond Abi's ass crack, the head resting on the small of her back. Precum was dribbling out of the tip, forming a small puddle. Dave rested his hands on Abi's hips.\n\n\"Think you can take the whole thing Abi?\" Dave asked, somewhat sincere.\n\n\"I'll make room. It's those regular girls you're going to have to be careful with, not me!\" Abi starting to sound impatient. \"Now fuck me already you big dick bastard!\"\n\nDave slowly pulled back, leaving a slimy trail along Abi's back. He had to shuffle his feet back so the tip could clear her ass. He took a hand and guided his throbbing member to Abi's glistening slit. It took some effort to push his manhood into position. It was so hard that it stubbornly resisted any change in angle. He pressed the fat tip against the entrance.\n\n\"Oh shit.\" Abi cooed.\n\nDave started to push into her. Right away he was met with resistance. She was so tight.\n\n\"Soo thick! Ahh- AY!\"\n\nHe got the head in. The feeling was incredible. So warm. So tight. So wet.\n\n\"Oh my God that's tight!\" Dave groaned.\n\n\"I told you! He's not yo- AHHH!\"\n\nHe started pushing himself into her, slowly, but without pause.\n\nAbi's toes curled. Her fingers clenched the bed sheets. She was writhing in mix of pain and pleasure. Just how she liked it.\n\n\"Ah!\" Abi cried out.\n\nDave felt a wall. He was unfamiliar with the feeling. But he knew enough to know what it was. He reached her cervix. He looked down. He was only in about half way inside. He stopped for a moment and did some kegels. His pulsating sent waves of pleasure through Abi.\n\n\"Oh fuck! What are you doing to me?!\" Abi moaned. She could feel his precum pumping out of his spongy head, smearing her cervix. The sensation made her wetter as she squeezed his fat dick.\n\n\"Oh fuck. Oh fuck. Oh fuuuuck!\" She moaned.\n\nDave started thrusting, short but forceful. Pushing a little deeper each time.\n\nAbi already felt full. Now she felt like she was being thoroughly stretched opened. She felt herself cresting on another wave of pleasure. She got quiet and her eyes rolled back in her head.\n\n*Squish* *Squish* *Squish* *Squish*\n\nFor a moment, the only sound in the room, was Abi's juicy pussy being pumped steadily with ever more cock. Until...\n\n\"ooooooooOoooOoOOOO\" Abi emitted a groan that was low and gutteral. Dave felt her clamp down on him. She started bucking and shaking.\n\n\"Ooohhh Ohhhh OOOHHH!\" Abi desperately cried out, as she was overcome with crashing orgasm.\n\nDave looked down. Abi was creaming all over his unnaturally thick member. She was taking most of it now. But there was still another 3\" of meat that had yet to be inside her. Dave stopped thrusting and held his throbbing cock in her until she collapsed, slumping over, laying her head down on the bed.\n\nIt was then Dave grabbed tightly on Abi's hips and pulled her on to him, shoving the last 3 inches inside, burying his entire manhood.\n\nAbi screamed. The sound was terrifying and otherworldly. She looked like she was having convulsions. Dave wondered if he pushed it too far. But then he heard...\n\n\"Oooooohhh fuuuuuuck yeeeeeeessss!\"\n\nAbi was cumming again, hard. Dave cracked a smirk as Abi's little frame quivered on his meat pole. He knew he no longer needed to be careful. \n\nAbi hadn't even finished climaxing when Dave started fucking her. Like really fucking the shit out of her. Long, deep strokes. One after another. He sent ripples up her ass cheeks. His heavy balls slapped against her clit.\n\nAbi felt completely submitting to Dave. He was so deep inside her. It was painful to take him like this, but still, he was giving her orgasm after orgasm. She loved it when he slapped her ass and pulled her hair. She even took delight in his quiet laughter as he seemed to be enjoying his new gift. \n\nAbi felt Dave swelling, stretching her even more. How is that thing getting even bigger? He was close, and Abi was struggling.\n\n\"Fuck! You're! Getting! Too! Big! Let it out! Cum Inside Me! Pleeeaasse!\" Abi pleaded.\n\nHer begging sent him over the edge.\n\n\"AAAAAAHHHHH! FUCK!\"\n\nDave unloaded his heavy balls inside Abi. Spurt after spurt, painting her insides, overflowing and running down his balls and her thighs.\n\nThe sensation was too much for Abi. She let out a gutteral howl. Her body tensed and convulsed. Her eyes rolled back. Her long tongue spilled out of her mouth. Her fingers shredded the bed sheets. Her back arched. And her head turned...and turned! 180 degrees! 360 degrees!\n\nDave felt his bravado fade, as Abi's face, twisted in carnal exstacy, rotated in and out of view. \n\n\"Holy shit!\"\n\n*SHUURR- POP*\n\nDave jumped back, his long softening cock following him.\n\nAbi's groans subsided and she collapsed on the bed.\n\nDave stood frozen for a second. The room suddenly felt quiet. Abi was laying on her stomach completely still, with Dave's huge load leaking out of her.\n\n\"Uhhh Abi?\" Dave asked timidly.\n\nHe slowly tip toed around the bed, keeping a bit of distance.\n\n\"Abi?\"\n\nHer face came into view and Dave felt a bit relieved. She was passed out, sleeping. Dave thought she actually looked pretty adorable. He reached out and poked her shoulder.\n\n\"Hey!\" Dave said in a hushed tone.\n\n\"mmm!\" Abi shifted, keeping her eyes closed tight, like a child, refusing to be woke up.\n\n\"Okaaay...\" Dave said to himself. He looked around and wondered what to do. Post orgasmic clarity giving him fresh perspective on his present situation. \n\nHe was standing naked in a hotel room, with a passed out creature of hell. It might be a good time to leave.\n\nHe ran to the bathroom, his oversized genitals slapping against his thighs. He did his best to quickly wash away all the juices, all the cum. He paused for a moment when he caught a view in the mirror.\n\n\"Oh my go- ...goodness.\"\n\nHe started to get horny again, but he pushed that from his mind.\n\n\"Come on Dave.\"\n\nDave found his pile of clothes. He grabbed his boxer briefs and pulled them up. Upon finding that the fabric could no longer contain him, he decided to abandon them. He was grateful that he wore slacks. There was enough room to slide himself down a pant leg. The inseam was a bit tight on his alpha balls, but it work long enough to get to his car.\n\nBefore Dave left, he stopped by the bedroom to check on Abi. There she was, lying in the exact same position as he left her with that satisfied look on her face. Except... She was levitating 2 feet above the mattress! Dave noticed drops of cum, still leaking out of her sex, dripping on to the bed adding to the large wet spot.\n\n\"Yep! Definitely time to leave!\""
    ],
    "authorname": "Deanstiel",
    "tags": [
        "bigdick",
        "blowjob",
        "cuckold",
        "cum",
        "demon",
        "devil",
        "hugecock",
        "pe",
        "penisexpansion"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/lets-make-a-deal-ch-01"
}