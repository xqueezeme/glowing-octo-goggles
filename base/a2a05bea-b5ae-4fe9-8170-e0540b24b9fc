{
    "title": "New Horizons Ch. 07-09",
    "pages": [
        "\"So,\" Quinn said as she settled into the backseat of the cab with Mikey, yawning widely as she did so. \"Tell me what you know about Alex Anders\".\n\nQuinn stayed up way later than she should, but she couldn't stop thinking about Alex. Images of the woman gliding across the stage so effortlessly as Blanche, stealing every scene she was in with her expressive face and raw emotions flitted across her eyelids every time she closed them.\n\nBut the main thing she couldn't stop wondering is why the woman was a managing director Off-Broadway when she clearly has the talent to be on a stage anywhere she wants.\n\n\"Not much, though she's been easy to work with so far. A bit intense and serious, which makes sense I guess considering her pedigree.\"\n\n\"Pedigree? She's not a dog Mikey.\"\n\n\"It's a thing here on the East Coast Quinn. As I understand it, the Anders are royalty here. And not just within the theater scene. Simon Anders' grandfather comes from old New York money. She seems to take that legacy seriously.\"\n\n\"She sounds super fun,\" Quinn quipped back.\n\n\"She doesn't need to be. She just needs to be good at her job.\"\n\n\"Too bad you're gay. A serious and intense woman who takes her job too seriously sounds like a match made in heaven for you.\"\n\nMikey smirked at that. He knew Quinn's teasing wasn't mean spirited.\n\n\"Well as elusive as Ms. Anders may be, I have heard through the gay grapevine here in town that she's family.\" He uncharacteristically waggled his eyebrows at her.\n\nQuinn held up a finger. \"First of all, I want to know more about this gay grapevine. I never got the memo about that in my coming out welcome package.\"\n\n\"It's more for us queens, love.\"\n\n\"That feels lesbi-phobic not to share the vine, but whatever. Secondly, how and why have you been hearing things about Alex Anders?\"\n\n\"Don't forget I've been spending many a week here securing this precious deal for you. One of my east coast gentleman callers is a producer on Broadway with Simon. He happened to mention that Ms. Anders is quite the lady killer about town.\"\n\nQuinn gasped and grabbed Mikey's arm. \"You never mentioned any producer! Now I have questions.\"\n\n\"I don't feel the need to tell you about every dalliance like you do. It was brief, not important,\" he waved his hand in the air to dismiss the topic. \"Next question better be quick. We'll be there soon.\"\n\n\"Don't pretend you don't love stories of my sexual escapades.\"\n\n\"I assure you, I don't.\"\n\n\"Not even the story of the girl with the sticky fingers from the ice cream cone who\u2014\"\n\nMikey cut her off before she could say anything more. \"Quinn! Stop. Gross. No.\"\n\nShe couldn't help but laugh at his discomfort. The truth was Mikey dated much more than Quinn ever did or could. After the Jenna scandal it became harder to just meet women casually and not have them look up everything about her online.\n\nThe book release didn't help in that regard. Time spent with women now was much more casual\u2014usually short affairs with other models she knew well and that mainly revolved around sex.\n\n\"Don't be such a prude, Mikey.\"\n\nAs their taxi made its way down the congested morning traffic, she questioned their decision to not just walk. She turned to suggest it to Mikey when she caught him staring at her quietly, an amused look on his usually expressionless face. She hated when he did that. He could always read her way too well.\n\n\"What?\" She asked.\n\n\"Why so curious about her anyway?\"\n\n\"About who?\"\n\nQuinn knew she couldn't play dumb with Mikey, but she also wasn't about to admit she was mainly asking because she watched almost two hours of the woman perform the night before.\n\n\"The only person we've talked about on this ride.\"\n\nThe amused expression didn't leave his face as he continued to stare at Quinn.\n\n\"She holds our future in her hands. Of course I'm curious.\"\n\nMikey didn't reply, but simply hummed under his breath at her response. Luckily, it was that moment that their cab slowed in front of the theater on 52<sup>nd</sup>.\n\nQuinn got out of the car while Mikey dealt with payment and looked up at the building telling herself that the butterflies that just erupted in her stomach had everything to do with this new step for her career and nothing to do with the sexy blonde she was about to meet.\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\nThe lobby of the theater was larger than Quinn expected. There were three entrances to her left that took audiences into the theater with an area for merchandise nestled in between the entrances.\n\nTo the far right of the expansive room were two winding staircases that led up to what she assumed was the theater's balcony. The carpet that wound its way through the lobby and up the staircases was a deep red that reminded her of the Golden Age of Broadway, even though it was clearly somewhat new.\n\nWhile beautiful inside, the building was not modern. She could see intricate designs leading all the way up the wooden railings on the staircase. The whole room had a feel of modern upkeep and historic elegance.\n\nShe had seen images of the space in photos\u2014in fact that was one of the main reasons she chose it. She wanted to feel like she was working in the theater, not like she was just on another set which so many of the modern theaters felt like.\n\nHorizon obviously took care to maintain their space, but it was also obvious a lot of care went into honoring the past.\n\n\"Wait until you see the theater itself,\" Mikey murmured as he came up next to her shoulder.\n\n\"It's beautiful\" she replied quietly, continuing to look around.\n\n\"I'm so glad you think so.\"\n\nA confident voice joined them from behind, making her spin around at the noise. A woman had suddenly come out of a door to the right of the lobby that said \"Staff\" across it.\n\nQuinn's tongue suddenly felt heavy as she looked at the stranger in front of her. Well, technically a stranger but Quinn recognized her face immediately from the videos she watched all last night.\n\nThat college production was more than ten years ago, but the woman in front of her didn't look like she had aged at all. A spark of surprised amusement shone in the woman's eyes as she seemed to take in Quinn's lingering gaze.\n\n\"Ms. Collins, Mr. Rubio, I'm so happy to have you here.\" She reached out her hand to Mikey first but kept her eyes locked on Quinn's as she did.\n\nQuinn internally sighed in relief when her body seemed to be able to do more than her mouth and she reached out to take the woman's offered hand.\n\n\"Ms. Anders the pleasure is all ours. But please, it's Mikey,\" he gestured to himself, \"and Quinn,\" he gestured to the still silent brunette.\n\n\"Actually, I quite like the sound of Ms. Collins. It makes me feel sexy and mature,\" Quinn blurted out before mentally face palming herself.\n\nHow was that the first thing she thought to say to this woman?\n\nTo her surprise though Alex simply gave her a small smile. The woman's easy confidence made Quinn fidget a bit.\n\n\"I assure you, you can call her Quinn,\" Mikey said giving Quinn a quick look that implied she was acting odd.\n\nThe woman continued to smile at Quinn, not even glancing back at Mikey.\n\n\"And I can assure you Quinn that you look mature and sexy from here,\" Alex said to her before turning back to Mikey. \"And please, call me Alex. Why don't you both come with me and we can sit down in my office?\"\n\nWithout waiting for an answer, Alex turned and went back to the door she came through.\n\nMikey leaned in close to Quinn's ear. \"What is wrong with you?\"\n\nQuinn just shrugged. She knew exactly what was wrong with her and it was swaying its hips ten feet in front of them.\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\nThat was stupid, Alex told herself as she opened the door to her office for Mikey and Quinn to enter. Flirting with the woman two minutes after meeting her was definitely not keeping things professional and friendly. And in front of her manager no less. But she also wasn't prepared for just how beautiful Quinn was in person.\n\nEven more so than she was on stage or splashed across magazine covers. Quinn was simply perfect. She almost reminded Alex of a prima ballerina with her long limbs, high cheek bones and pale composure.\n\nHer eyes were such a dark brown they almost looked black. Alex knew she had been staring, but those eyes had captured her attention and she had trouble looking away from them.\n\nQuinn's delicate features provided an interesting dichotomy to the brashness with which she performed and the casual ease she seemed to carry herself with here.\n\nAlex had an insane urge to know more about her that had nothing to do with the spark she felt as their skin touched in that handshake. Well, maybe she could admit it had a little something to do with that.\n\n\"I thought I could start by giving Quinn a tour of the space. I have a handful of paperwork for you to go through Mikey, so I can take you to our conference room to finish that. And then we can figure out the final rehearsal schedule. As I understand it Diego will be here by the 15<sup>th</sup> to start with you?\"\n\nPart of Quinn's contract negotiation was that she got to choose her own director. Luckily, Diego Ruiz was the man ultimately chosen for the job and he was a familiar face around town.\n\nAlex knew he would protect the integrity of Quinn's original work while also tightening it for the more experienced New York audiences. It's why she had subtly mentioned him to Mikey a few months prior when she had given him a list of Horizon-approved directors.\n\nMikey jumped in eagerly while Quinn sat back and distractedly looked around the office, settling her gaze intently on the poster hanging on the wall behind Alex's desk. Alex glanced up at the poster before looking back at the look on Quinn's face that she wasn't able to read.\n\nShe moved her eyes back to Mikey and did her best not to focus on Quinn.\n\n\"Yes, Diego gets here on the 15<sup>th</sup> and we start with him on the 20<sup>th</sup>. That gives Quinn time to settle into the city before rehearsals begin,\" Mikey said.\n\nHearing her name caused Quinn's intent gaze on the poster to suddenly snap to Alex.\n\n\"Do you know of a good bagel shop?\" she asked.\n\nThe sudden question wasn't what Alex was expecting.\n\n\"Uh, bagel shop?\"\n\nQuinn leaned forward and looked directly at Alex with a small smile playing on her lips. \"New York is famous for them. I figured it would be good to know of some around here since this is my new neighborhood and all.\"\n\nAlex stared dumbly at the woman for a moment before answering. Whatever she was expecting the cool, chic model to be like, this child-like, playful woman asking about bagels wasn't it.\n\n\"George's. Down two blocks on 50<sup>th</sup>. Yellow awning out front. His are the best,\" Alex replied.\n\nThere was a silent pause before Mikey decided to get things back on track after Quinn's random question.\n\n\"Point me to the conference room and I'll dig in while Quinn checks out the theater.\"\n\n\"Great. Let's go to the rehearsal rooms first,\" Alex said to Quinn.\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\n\"This is our rehearsal space and you and Diego will spend most of your time in here,\" Alex said as she pushed open a door to a hallway that connected to backstage.\n\nAs she led Quinn down the hallway, she realized they were alone, alone. The current rehearsal must still be going because the halls were absent of the usual shuffle of actors and techies.\n\nShe silently led Quinn down the hallway until they were at a door, which she opened to allow Quinn to step in.\n\n\"We have five different rehearsal rooms of various sizes. Each map out to mirror the stage floor and your rehearsal schedule will specify which room you're in each day. Most likely you'll be in the same room for each rehearsal for consistency, but sometimes things have to shift.\"\n\nAlex watched as Quinn quietly walked around the room. Without Mikey's presence or any other prying eyes, she was able to take in the woman a bit more without feeling creepy.\n\nShe was dressed more casually than Alex's own skirt and blouse. Sporting black skinny jeans that seemed sculpted to her body and a light grey pull over hoodie, Quinn somehow made overly casual look stunning. Kind of like in one of those magazines that tries to make normal people feel like they can relate to beautiful celebrities. \"Stars! They're just like us! They wear jeans!\"\n\nAfter looking around the room, Quinn finally turned to Alex. \"But this is just a room.\"\n\nAlex's confusion showed on her face. \"Well yes, it's a rehearsal room.\"\n\n\"Exactly. It's not the stage.\" Quinn took a step closer to Alex as she spoke.\n\n\"All of our productions use the rehearsal space until it's time to move into the theater. We have other shows before yours,\" Alex spoke slowly as if to a child. She was still confused as to what Quinn's issue was.\n\n\"I need the stage to inspire my art.\"\n\nQuinn stepped closer again.\n\nAlex was at a loss for words. She really didn't think the conversation would veer this way and really hadn't pegged Quinn for the diva type. But before she could answer, Quinn burst into laughter.\n\n\"I'm so kidding. This room is great. But you really should have seen your face. You looked like you wanted to hit me.\"\n\n\"I'm not in the habit of hitting our artists,\" Alex said. \"Unless they ask me to of course.\"\n\nShe immediately regretted adding that last part, especially when she saw the quick spark of surprise cross Quinn's features. She really needed to get herself under control, but Quinn was nothing like she imagined. She had a goofiness to her that surprised Alex.\n\n\"But you do if they ask?\"\n\nQuinn was somehow standing in front of her now. Alex didn't even notice the model advance that far into her personal space.\n\nShe could feel a slight heat coming from Quinn's body, which if she had reached out her finger, she could have touched.\n\n\"Only if they ask nicely,\" she said back in a low voice.\n\nThe air around them felt thick as Quinn leaned closer. She had to put a stop to the blatant flirtation happening here. This would lead to nothing advisable. She needed to focus on the prize at the end of the season. Not that look in Quinn's eyes. Was it desire?\n\nBefore she said anything else that she would regret later she stepped back, putting some much-needed distance between the two of them.\n\n\"Let's keep going.\"\n\nShe turned and walked to the door, leaving Quinn with the same clouded look in her eyes.\n\nAlex took a breath as soon as they were back in the hallway. Rehearsal for the fall show must have just gotten out since the hallway was peppered with actors laughing and horsing around with each other. The noise in the hallway steadily increased as more people filed out of the room at the back of the hall.\n\nQuinn's eyes widened at the scene and she smiled as she joined Alex in the hallway. Alex knew the feeling\u2014there was nothing like the bustle of backstage.\n\nActors were one-of-a-kind and it was easy to create a family with your cast. Before she could guide Quinn back down the hall, she heard her name being called from the other direction.\n\nAlex turned and internally groaned as she saw her best friend bounding down the hall to them from her own rehearsal room.\n\nWearing simple black leggings and an oversized t-shirt, her red hair was thrown up messily in a bun on top of her head, but the hairband was doing a poor job of containing her wild curls.\n\nShe gave Alex a sweaty kiss on the cheek as she arrived at her side, pushing in to avoid getting hit by the rush of people going past.\n\n\"Ugh Court, you're gross.\" Alex pushed the sweaty girl off of her and wiped her now wet face.\n\n\"Get over yourself Anders and introduce my to your friend. Hi, I'm Courtney.\"\n\nCourtney turned to Quinn and gave her the smile that had melted more than one heart in NYC. Quinn took the outstretched hand, apparently not as bothered as Alex as by the sweat pouring off her friend.\n\n\"Quinn Collins, nice to meet you.\"\n\n\"I heard you'd be joining us. It's all little Alex here has been able to talk about.\" She flashed Alex a devilish smile as she looked back to Quinn. \"Welcome to the Horizon family.\"\n\nAlex sent Courtney a death stare she hoped Quinn didn't catch before schooling her face. Courtney would pay for that one later.\n\nThankfully Quinn didn't even look at Alex's now red face as she replied to the red head. \"I'm really excited to be here. Are you in the fall show?\"\n\n\"Yep. Because nothing says exciting live theater like the ever progressive and modern Arthur Miller.\" She rolled her eyes dramatically.\n\nAlex smirked at the sentiment she had heard come out of her friend's mouth more than once. Courtney knew exactly who had decided to do Death of a Salesman as their fall show. Rick Weston, their (hopefully) soon to be retired Executive Director. Alex agreed with Courtney on it. It was a tired play that held no room for newness.\n\n\"Then you're saying I should drink before seeingthis one?\" Quinn joked back.\n\nCourtney sighed, \"If only we actors got to partake as well.\"\n\n\"Like you don't have a flask backstage with you at all times,\" Alex teased.\n\nIgnoring her, Courtney turned back to Quinn, \"Speaking of! We're all heading to The Library tonight to celebrate the end of rehearsals before tech week. It's a bar. You should come. You'll love the cast. I promise we're more fun than this sour puss,\" she gestured towards Alex with her head.\n\n\"She is awfully serious.\" Quinn smiled as she finally looked over at Alex.\n\nCourtney laughed at that and swung her arm around Alex's shoulder in a friendly gesture. She pointed to Quinn. \"I like this one. You can keep her.\"\n\n\"Court.\" Alex replied in a tone that was meant as a warning.\n\nShe had to get Quinn away from the train wreck that is her best friend before anything else flies out of her unwieldy mouth or any more invitations were given out.\n\n\"Let me guess.\" Quinn looked at Alex with a challenging quirk of her eyebrow. \"You don't mix and mingle with actors.\"\n\nAlex shot Courtney another warning glance when her friend broke out into a laugh. \"Oh, she mingles with actors, just not the ones within these walls.\"\n\nQuinn's eyebrows shot up into her hairline at Courtney's revealing comment and at this moment Alex was regretting not running the moment she had heard Courtney call her name.\n\nShe wasn't going to rise to Courtney's obvious bait though and wanted to wipe the smug, knowing look off both their faces.\n\nShe turned back to Quinn and said in a challenging tone, \"Actually, I was planning on being there tonight.\"\n\n\"Really? You seem more of the go home and relax alone with a glass of wine type. Maybe play some chess. Not the party with your cast type.\"\n\n\"Well Quinn, I'd argue you don't know me enough to make those assumptions. I hate wine.\"\n\nAlex could feel the same thickness seep into the air around them as it did in the rehearsal room. What should have been some friendly banter suddenly felt like foreplay.\n\nFor a moment the two maintained eye contact and Alex almost forgot Courtney was there. When she finally broke away from Quinn's amused eyes, she saw Courtney smiling and looking between them like she was watching a movie.\n\n\"Well that's settled then. You'll both be there. Tonight. At 8. Phone?\" Courtney opened her hand to Quinn, palm up.\n\nQuinn quickly reached into her back pocket and handed Courtney her phone.\n\nNobody spoke as Courtney added herself as a contact to Quinn's phone, but Alex's stomach was doing loops at the recent development. Seeing Quinn later, especially in a bar, was not how she thought this day would end.\n\n\"K, now you have my number in case anything changes. Oh, and I added Alex's in there too.\" She winked as she handed Quinn back her phone.",
        "\"It was nice meeting you Courtney, I guess I'll see you tonight,\" Quinn responded, though she was looking at Alex.\n\nCourtney kissed Alex's cheek again as she sauntered past them down the hall.\n\nWithout turning around she shouted back to the two of them. \"And she does play chess by the way! See you tonight Quinn!\"\n\n\"Let's go to theater before we go find Mikey.\" Alex turned without looking at Quinn, much too distracted thinking of all the ways she could kill her best friend to say anything more.\n\nAs they walked to the theater, she couldn't see Quinn's face, but somehow knew the brunette was smiling behind her. She really was going to kill Courtney.\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\nMikey was right. the theater was beautiful. Being in the space where she was going to perform suddenly made this all feel much more real for Quinn. This would be the space she would bare herself to hundreds of people each night.\n\nAs she looked up the rows of seats from the stage, she tried to imagine the lights coming down and that moment right before she first speaks. All those eyes on her, just waiting for her to capture them. It was intoxicating.\n\nBeing on a stage was so different from what she was used to in modeling where she was posed and there was no limit to how many times she could try to perfect a shot.\n\nTheater wasn't about perfecting something by doing it over and over. It was about being in the moment and making it as perfect as you could right then. Theater offered no do overs. No set-ups and re-adjustments and certainly no air brushing. Just an opening, a middle, an end, and hopefully a happy audience.\n\nShe looked over at Alex who was standing on the stage with her, also looking out at the seats. Quinn had an urgent desire to know what she was thinking. Did she miss this?\n\nGranted Quinn didn't know much about Alex's circumstances. Maybe she preferred being on the business side of things. But she had a gut feeling it was more than that. She'd seen Alex perform even if it was just a grainy cell phone video. That kind of passion can't be faked, nor could that kind of talent.\n\nBefore she got the courage to ask though, Alex cleared her throat. \"Let's head to the conference room. Mikey should be done by now.\"\n\nAlex walked off the stage the way they came without looking back.\n\nQuinn noticed Alex didn't wait for an answer again and just assumed she would follow. The confidence radiating off of Alex probably should have been a turn off. Quinn didn't usually gravitate towards overly confident women, but something about Alex's directness was super hot.\n\nShe was pretty sure at this point she'd do anything the Managing Director asked of her.\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\nLater that afternoon Quinn and Mikey sat around her new dining room table finalizing her schedule, but every time she tried to concentrate on whatever Mikey was droning on about, her thoughts went back to Alex.\n\nHer low voice that was full of authority and assuredness, her clear blue eyes that seemed to appraise every part of Quinn, those perfect, kissable lips...\n\n\"Quinn.\" Mikey's strained voice suddenly brought her out of her about-to-be-R-rated daydream.\n\n\"Hmm?\" She looked up into his annoyed eyes.\n\n\"Have you been listening to anything I've said?\"\n\n\"I always listen to you. I hear you in my sleep. I see you in my dreams.\"\n\nMikey simply rolled his eyes. \"I told you Diego just wants to see the rewrites once he gets here so we don't need to send in advance. But I can see your focus is elsewhere.\"\n\n\"I'm hungry,\" Quinn deflected petulantly.\n\n\"Hungry for food or hungry for a certain blonde theater manager?\"\n\n\"Both?\"\n\n\"Quinn, you know you can't actually go there, right? Simon Anders' daughter is off limits until your run us over.\"\n\n\"I'm pretty sure I saw her check me out.\" Quinn flopped her head down into her hands on the table.\n\n\"I'm pretty sure I heard her blatantly flirt with you. But that doesn't change anything.\" Mikey held up a finger as he made each of his next points. \"No drama. No scandal. Good press. More offers.\"\n\n\"I'm seeing her tonight,\" Quinn told him.\n\n\"Quinn,\" he pleaded back to her.\n\n\"It's not like that Mikey. I got invited to a theater bar by a member of the company I met. Alex will just happen to also be there,\" she added innocently.\n\nWhen Mikey continued to stare at her knowingly, she continued. \"Ok, if I promise not to fuck the stupidly hot theater manager will you help me choose an outfit for tonight?\"\n\n\"Yes. But only because if I don't, you'll show up in a hoodie.\"\n\n\"Yeah, but like, a designer hoodie,\" she defended herself weakly.\n\n\"Ok, come on, I'll beautify you,\" Mikey stood up from the table and offered his hand to Quinn.\n\nShe smiled brightly at him as she took it. He may give her some grief, but Quinn knew Mikey only wanted happiness for her. And not in the self-serving way her mom did. Mikey was truly in Quinn's corner and she wouldn't ever forget that.\n\nChapter 8\n\n\"She's hot as fuck, I'll give you that. If you weren't so smitten, and I didn't have my eyes on a certain stage manager, I'd try my hand there.\"\n\nCourtney took a long drink of her staple red wine, her already glassy eyes dancing behind her glass.\n\n\"Court, I'm not smitten, please stop. You've already done enough.\"\n\nAlex took a sip of her own drink as she looked around the bar. She was on edge thinking about Quinn coming in.\n\n\"How are rehearsals coming?\" Alex asked her.\n\nChanging the subject seemed like the best route for her increasing nerves at this point.\n\n\"Good, good. Rick is easy enough to work with.\" Courtney took a sip of her wine as she waved to some familiar faces that just walked into the bar.\n\nAlex recognized the man leading the group over as Mark Kemp. He was in the fall show with Courtney but had done a handful of shows at Horizon before.\n\nShe vaguely recognized the rest of the cast as well as some other actors that came in with them, but he's the only one she really knew. She always liked Mark. He never brought any drama to her theater outside of what he did on stage and basically did his job without complaint. He was also a really talented actor, and truthfully that was the thing that she respected most about him.\n\n\"Alex hey!\"\n\nMark leaned over her table as he got there and gave her a quick kiss on the cheek. \"Courtney didn't tell me you'd be here. I would have worn my tie.\"\n\n\"Like you need to dress up for me, Mark. With that face you could wear a trash bag and still break hearts,\" Alex easily quipped back to him.\n\n\"If I didn't know which way you swung, I'd kiss you over a comment like that. But alas,\" he sighed.\n\nAlex gave him a small smile as she turned to the rest of the group so Mark could make some introductions.\n\n\"Alex, this is Jennifer, Max and Spencer. Jennifer and Max are in the show with us, so you've probably seen them around. Spencer is doing a show up at The Republic.\"\n\nMark gestured towards each person and Alex gave a slight nod of hello. He then gestured towards Alex.\n\n\"I probably don't need to tell you who this is. She runs the theater after all\".\n\nAs everyone settled into their seats, they began chit chatting with each other as Alex simply observed. Quinn wasn't wrong that she wasn't the going out with the cast type. It was hard to get close to people whose contracts you signed.\n\nToo many times in her past she would get close to someone in the company only to have to tell them that her father wouldn't be casting them again. Despite being in the same industry, she also just felt like she had less and less in common with actors.\n\nAlex looked around the bar, which was much busier than the last time they were there. As her eyes grazed over the bar, she noticed a familiar face coming out of the back room carrying clean glasses.\n\n\"Shit. I'm going to have to stop coming here,\" Alex said so only Courtney could hear and turned her body away from the bar in the hopes Carrie wouldn't notice her. \"Since when does she have every shift?\"\n\nCourtney turned to look over at the bar. \"You still haven't broken it off with the poor girl?\"\n\nAlex looked away with a slight bush creeping up her neck. She did feel a bit guilty for leading Carrie on. She should have ended things with her this week instead of letting her come over.\n\n\"I knew you were going to fuck her again.\" Courtney said with a smile on her face.\n\nWhile she may give Alex grief for some of her behavior, she wasn't one to ever actually judge her. Courtney was much more of a serial monogamist than Alex was, but she never made Alex feel that bad about dating around more casually.\n\n\"Please go get us refills so she doesn't come over here. Please.\" Alex looked at Courtney doing her best to give her puppy dog eyes.\n\n\"Ugh, fine. But stop doing whatever it is you're doing to your face to look sweet. It's creepy.\"\n\n\"I was going for cute,\" Alex pouted.\n\n\"You can't do cute. You can do sexy and domineering but not cute. And don't talk back to me when I'm going to save your ass by distracting your last fuck while you get distracted by your new one.\"\n\nCourtney nodded to the door with her head and then stood up. She gave Alex an exaggerated wink and then headed to the bar for their drinks.\n\nAlex didn't need to turn to the door to know who Courtney saw walk in. Lately, nothing gave Courtney that same mischievous look of glee like anything related to Quinn did.\n\nShe tried to ignore the somersaults going off in her stomach at the prospect of turning around and seeing the gorgeous girl's face, which Alex knew was utterly ridiculous. She was not the kind of person to feel giddy about a girl.\n\nAlex finally turned around to see Courtney casually lean in and give Quinn a quick hug. After a moment of them talking, Courtney pointed over to the Horizon group and Quinn locked her eyes onto Alex's. The professional resolve Alex had so soundly when she walked into this bar tonight started to feel incredibly feeble with the smoldering look the brunette was giving her.\n\nIt wasn't just that she looked fucking hot in her dark blue jeans, simple white t-shirt and leather jacket\u2014 it was the look itself she was giving Alex. As if everyone else faded from the bar for a second and they both had a mutual understanding that there was some magnetic pull to each other. She couldn't help but return the small smile Quinn gave her as she began to head towards the table.\n\n\"Quinn, I'm glad you could make it,\" Alex said as she got up from her chair and stood awkwardly for a moment.\n\nUsually she would lean in and kiss the person's cheek, but she suddenly felt paralyzed and didn't know what to do. Luckily, Quinn seemed more relaxed than she did.\n\n\"You too, Alex.\" She lightly put her hand on Alex's arm, leaned in and gave her a quick peck on the cheek.\n\nAlex tried her best not to let herself blush even though her cheek suddenly felt like it had a fever. From a peck. Courtney needed to hurry up with those drinks since she was losing it fast and the girl just walked in.\n\n\"Here, you can take Courtney's seat so you can meet some of the company.\" Alex directed her towards a chair as she sat down in the one she had been occupying a moment before.\n\n\"I've noticed you're a little bossy.\" Quinn said it teasingly as she moved past Alex to slide into the chair across from hers. Alex felt steadier the second there was a table between the two women.\n\n\"I've heard that before,\" she said back, quirking her eyebrow.\n\nAt that moment Courtney shuffled over, struggling to hold three drinks. She must have gotten Quinn's order when she saw her at the door. Quinn quickly shot up to help Courtney, putting a glass of dark liquid in front of herself.\n\nAlex couldn't take her eyes off the way Quinn's lips pressed against the glass as she took her first small sip and she pictured herself kissing the soft throat as the brunette swallowed that first fiery mouthful.\n\nA soft jab from Courtney in her ribs brought her back to reality and she quickly grabbed her own drink, taking a long swig to hide the blush she could clearly feel across her face. Thankfully Courtney didn't say anything other than smile widely like she'd just won a contest.\n\nThe woman Mark introduced her to who was currently in a show at The Republic leaned across her table towards Quinn.\n\n\"I saw you in a Fashion Week show a couple years back. And I read your book. I'm Spencer.\" She reached out to shake Quinn's hand but held on longer than Alex thought was necessary.\n\nAs Quinn pulled back her hand, she gave the other woman a polite smile. \"Thank you. It's nice to meet you.\"\n\nMark chimed in next. \"I'm Mark, and this is Jen and Max.\" Quinn shook the other hands as they were introduced to her. \"We're all doing the fall show at Horizon, so you'll see us around the dungeon.\"\n\nAlex rolled her eyes. \"Can we please not call it the dungeon to new artists?\"\n\n\"Dungeon?\" Quinn asked.\n\n\"It's what we call the rehearsal space,\" Courtney responded. \"No windows, black floor, scary blonde master coming downstairs and cracking a whip at us all the time.\"\n\n\"Yes, you poor, fair maiden,\" Alex replied dryly, pushing aside the innuendo on the tip of her tongue. She wasn't close enough with most of these people to let Courtney bait her into their usual banter.\n\nSpencer hadn't taken her eyes off Quinn since she had sat down and now moved down a chair, so she was right next to her. Alex ignored the tightening in her stomach at the blatant move. She did her best to remind herself that Quinn was just an artist in her theater, and she had no say in who hit on her, even if the display seemed a little eager in her opinion.\n\n\"I'm a big fan of Jenna Matthews. I've seen her in everything. Do you still talk?\" Spencer smiled widely at Quinn as she spoke and Alex couldn't help but notice the way Quinn tensed slightly, moving her chair back to give her some more space from Spencer.\n\n\"No. That was a long time ago. I'm just excited to be here in New York.\"\n\nQuinn took a small sip of her drink and gave Alex a quick look of annoyance over her glass that Spencer couldn't see.\n\n\"Have you been in New York long Spencer?\" Quinn asked the actress.\n\nAlex could always appreciate deflection when it worked. And for someone like Spencer who needed constant validation, it worked beautifully.\n\nSpencer was more than willing to tell the table her whole life story, which Alex mainly tuned out in lieu of subtly stealing glances at the dark beauty across from her. She wondered what that soft skin would feel like under her fingers. Would her lips taste of the liquor she just drank or something sweeter?\n\nShe had no idea how long she had been daydreaming but when she finally came back to the conversation Courtney was scrolling through her phone and Spencer was still rambling.\n\n\"So then I decided NYU was the right route and I've been here since. You'll have to come check out The Republic sometime. We're doing a new musical this Fall.\"\n\n\"That sounds great. My goal is to see as much theater as I can while I'm here.\" Quinn's response was polite, but Alex could see she wasn't overly enthusiastic about the invite. Spencer, however, remained clueless.\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\nThis night had been so much more fun than Quinn could have predicted. These people were warm and welcoming and so very different than many of the actors she'd met in LA who always seem like they're looking over their shoulder, trying to spot your knife.\n\nPerhaps these people are just better at hiding it but so far, she couldn't help but have fun. That was all with the exception of Spencer who so obvious in her interest in Quinn that it was slightly uncomfortable.\n\nMaybe she should just be sending Mikey a thank you text for the outfit, because Alex was sitting across the table giving her many of the same obvious looks as Spencer.\n\nShe had noticed Alex's eyes graze her tight t-shirt more than once and she had definitely seen her check out her ass when she went to the bathroom a bit ago.\n\nThe subtle attention may not have been lost on Quinn, but it was certainly welcome. Especially since Quinn knew she wasn't doing a good job not looking at Alex either.\n\nAlex must have come straight from work because she still had on the tight pencil skirt from earlier with the simple black blouse. Her hair was down and her shiny blonde locks swept elegantly past her shoulders. Her heels accentuated her long, tan legs, which for the record, looked like they belong in some ad for shaving cream.\n\n\"Quinn?\"\n\nSpencer was talking to Quinn again, but she had been so lost in ogling Alex that she didn't hear the question addressed to her. Face hot, she looked up at Alex and tried her best to act casual. Alex simply quirked here eyebrow at Quinn. So much for being subtle.\n\n\"Sorry, what did you say?\" She turned her attention to Spencer who was leaning forward slightly.\n\nBut the cleavage that was willingly on display for her just couldn't grab her attention like Alex's legs, or face, or well, anything.\n\n\"I asked if you had someone you needed to get home to or if you wanted to come with us uptown a bit to a different bar. Some of our other friends are congregating there.\"\n\nQuinn considered her for a moment. Spencer hadn't tried to hide her obvious interest all night and Quinn couldn't deny that she was pretty. But she could feel Alex's bright blue eyes boring into the side of her face as she was turned to Spencer and that alone got her heart rate up to an unnatural speed.\n\nBefore she could answer, Mark saved her. \"Damn Spence. Easy goes it on the new girl.\"\n\nMark sent Quinn a wink and a warm smile. She had liked him instantly. He came off as genuine and while incredibly handsome, not arrogant. She was used to men being the first to hit on her, but Mark asked her real questions all night and seemed sincere in wanting to get to know her. Unlike Spencer who seemed more interested in her ex than in her.\n\nCourtney chimed in next. \"Plus, she could live alone and still be seeing someone. Your line of questioning was faulty,\" she clucked her tongue and pointed at Spencer.\n\nTo her credit, Spencer rolled with their teasing in stride and turned to Courtney. \"Just because I invited her with us doesn't mean I'm trying to get into her pants. I invited you didn't I?\"\n\n\"Ooh burn,\" Courtney laughed and turned to Quinn. \"But really, are you single?\"\n\nAlex cut in, her voice commanding. \"Court.\"\n\nShe gave Courtney a pointed look and her tone didn't leave much room for argument. Courtney must be familiar with that tone because she held her hands up in surrender. Quinn tried to ignore the shiver that ran up her spine at Alex's authoritative voice.\n\n\"Don't worry, Al. Just finding out for when the masses start asking me.\"\n\n\"It's fine.\" Quinn looked directly at Alex and said, \"I am single.\" She then turned to Spencer and the others. \"But I'm not really looking right now. Trying to focus on the show.\"\n\n\"You'll love this bar,\" Mark said excitedly. \"It has drag queen karaoke.\"\n\nQuinn decided in that moment that she really liked Mark as the conversation moved easily off of her dating status to their next destination.\n\n\"Count me in,\" Quinn said.\n\nShe looked over at Alex, who was again looking at her intently. She couldn't really picture the woman at a karaoke bar of any kind, but she still hoped she'd be joining them.\n\nBefore she could ask, a pretty bartender came up to their table, standing closer to Alex than seemed necessary with ample space around their tables.\n\n\"Hey you. Can I get you guys anything else?\" Quinn noticed Alex blushed slightly as she peered up at the waitress standing next to her.\n\n\"No, just the check, please,\" Alex replied stiffly, looking away from the woman as she said it.",
        "The dynamic screamed of something more than customer to bartender. There was some kind of tension between them that Quinn could probably guess at if she had to.\n\n\"Are you sure?\" The waitress asked again, lightly resting her hand on Alex's shoulder. Alex's body tensed at the gesture and Quinn could hear Courtney quietly laugh next to her.\n\n\"Yes, I'm sure.\" This time Alex looked the waitress in the eye as she said it, leaving no question that the conversation was over.\n\nThe brunette raised her eyebrows at Alex slightly before walking back to the bar. Or storming back would maybe be a more accurate description.\n\n\"Friend of yours?\" Quinn asked Alex.\n\nShe tried to keep her tone playful even though she suddenly had a burning sensation in her stomach. Was it jealousy? No, she's just met Alex, she couldn't be jealous of some bartender. But the familiar way she touched Alex's shoulder and the sultry, expectant look she gave her rubbed Quinn the wrong way.\n\n\"Not a close one,\" Alex replied simply as she reached into her purse for her wallet. \"Court, be a dear?\" She asked as she slid her credit card over the table to Courtney.\n\nHer tone wasn't commanding this time, but more of one a friend would use with another friend when in need of a legitimate favor.\n\nCourtney rolled her eyes at Alex but took the card from her anyway. \"Be right back but I'm paying for all the drinks. Every round. As my fee.\"\n\n\"Like you wouldn't have made me pay anyway,\" Alex shot back but the look on her face was one of gratitude.\n\nCourtney got up from the table and walked to the bar to pay for the rounds of drinks. The group around the table watched her go having seen the awkward exchange with the bartender. Spencer looked like she was ready to burst with a million questions, but her loose lips didn't seem to apply to Alex. They all looked at her with a quiet respect.\n\n\"Shall we?\" Mark asked the others when it was clear Courtney was finishing up.\n\nThey all started putting on their jackets and Quinn stole a glance at the bar. The pretty bartender was wiping down the counter with a scowl on her face. She caught her glancing up at Alex, not masking the clear hurt the woman was causing her.\n\nSo, Alex Anders is a heartbreaker. No surprise there. Apparently, Mikey's gay grapevine gossip was legit. Quinn felt a weird mixture of excitement at confirming Alex clearly liked women and a sinking feeling knowing that she was likely a major player.\n\nThe group waited on the street outside the bar while Courtney finished up inside. Alex stood slightly away from the others, scrolling through her phone. It was clear to Quinn that while Alex had some bond with Mark, and a definite friendship with Courtney, she kept her distance from the others.\n\nAs Mark and the others rehashed their rehearsal from the day, Quinn moved over to where Alex was standing.\n\n\"Are you coming to the next bar?\" Quinn asked causing Alex to look up from her phone.\n\n\"No, you guys go on. I think I'll head home.\" She paused and gave Quinn a smirk. \"Maybe play some chess.\"\n\n\"Do you live alone?\"\n\n\"Yes.\" Alex's face was unreadable, but her tone was a bit wary.\n\nMaybe she wasn't used to personal questions from people she worked with. It seemed like a fairly innocent one to Quinn.\n\n\"Then how do you play chess? Are you flitting from one side of a table to the other? I'm picturing brandy, cigar in hand, maybe a fireplace next to some lush pillows.\"\n\nAlex gave a reluctant smile at the ridiculous statement. \"You do know that I live in the same era as you right?\"\n\nQuinn gave a small chuckle at that.\n\n\"And no, I don't flit,\" Alex used air quotes around the word, \"from pillow to pillow.\" She looked down at her phone again as she mumbled out, \"I play against a computer.\"\n\nQuinn couldn't help but let out a laugh. \"Computer chess?\" Alex just didn't seem like the type to be hunched over a laptop playing a computer game.\n\nAlex gave her a glare. \"I'll have you know that chess sharpens the mind and keeps your strategic thinking fresh.\"\n\nQuinn continued smiling but held up her hands. \"No judgement. You just didn't seem like a video game nerd.\"\n\nAt that, she could see a clear blush creep up Alex's neck. This time it was unmistakable. \"Oh my god, you play video games too don't you?\"\n\nQuinn loved teasing the woman.\n\nWith each jab she could feel more heat emanating off Alex. But it didn't feel like anger. Alex was enjoying this exchange too.\n\n\"It helps my dexterity.\"\n\nThe hooded look Alex gave her almost melted her to the spot.\n\nThere was no question that Alex meant for it to be sexual. The commanding boldness Alex possessed was oddly intoxicating for Quinn. She felt her mouth go dry before she could answer.\n\n\"I'm sure that's helpful at times,\" she whispered back.\n\n\"You have no idea.\"\n\nShe could almost feel Alex's breath. When did they get so close to each other?\n\n\"Not to interrupt whatever this little moment is, but we're heading up now if you're coming Quinn.\" Courtney draped her arm around Alex's shoulder and gave Quinn a wide smile.\n\n\"Unless you two were making other plans...\" she looked between Quinn and Alex, the smile never leaving her face.\n\nFor a moment Alex looked like she was considering something. For the briefest moments Quinn was convinced she may even ask her to hang out, but Alex just as quickly schooled her features into a polite smile.\n\n\"No. I was just saying goodbye. Card?\" She held out her hand and waited for Courtney to put it back in her hand. As she did, Alex grabbed her friend's hand tenderly for a moment. \"Thank you, Court.\"\n\n\"We still on for coffee tomorrow?\" Courtney asked her friend as she pulled her into a hug.\n\n\"Sounds good.\" Alex turned to Quinn and put her hand out.\n\nQuinn thought it was a little ridiculous to shake someone's hand after you just spent two hours drinking with them, but she wasn't about to say no to the contact.\n\nAs she took Alex's hand, she noticed how long the blonde's fingers were. The contact shot warmth straight to her center and she didn't want to let go. Alex didn't seem to either as she just held Quinn's hand and made eye contact.\n\n\"Alex, it was lovely to see you.\" Mark's presence at her side broke the moment and Alex swiftly dropped her hand.\n\n\"You too, Mark,\" she said as she let him kiss her cheek. Lucky dude.\n\nThe group began their way up the street while Alex went back to her phone. Quinn wondered where she'd go next. Did she live close? Something told Quinn she's not the subway type, so she was probably within walking distance or had a private driver.\n\nMaybe she was going back into the bar to see the curvy bartender. Quinn pushed that thought from her brain as best she could. The last thing she needed while meeting new friends was to feel a rage of unjustified jealousy coursing through her.\n\nThe karaoke bar they ended up at was wild. Quinn always loved the weather of LA and the easy, casual attitude of the town. But she'd never been anywhere in LA like this. This bar celebrated different colors, sizes, and everything in between and she loved it.\n\nTheir group had doubled by the time they got to the new spot and she had a fun time getting to know them. Spencer was sure to stay close throughout the night and made no secret of her growing attraction to Quinn.\n\nIt wasn't that Spencer wasn't appealing, because she was. But Quinn couldn't help thinking back to a certain blonde.\n\n\"So, you're into my girl, right?\" Courtney whispered into her ear later at the new bar, though the music was so loud it came out as more of a shout.\n\nCourtney was definitely not sober anymore. But to be fair, Quinn was well on her way to that same place.\n\n\"I'm sure I don't know what you mean,\" Quinn replied with a smile as she turned her focus on the glazed blue eyes staring back at her.\n\n\"Oh stop,\" Courtney smacked her arm. \"That was some serious sexual tension in that bar.\"\n\n\"You were probably just feeling that from the keen bartender.\"\n\nShit. That sounded way more jealous than was appropriate to say about someone she doesn't know. And to that person's best friend.\n\n\"Don't worry about that. Alex wasn't ever serious about her.\"\n\nCourtney regarded Quinn for a moment before speaking in a more serious tone. \"Alex isn't easy to get to know. But she is worth getting to know. Just so you know.\"\n\nAnd with that Courtney threw the rest of her drink back, made a loud whooping noise and joined the others on the dance floor.\n\nQuinn looked on from the small cocktail table she was leaning against as she thought about what Courtney said. She absolutely wanted to try to get to know Alex better. Easy or not.\n\nChapter 9\n\n\"Look I'm famous,\" Courtney said as set her phone in front of Alex at their favorite midtown coffee shop.\n\nIt was down a quieter street than most midtown stores, so they didn't usually have to fight the tourism crowd for a table.\n\nAlex looked down at Courtney's phone as the actress ran up to the counter to make her order. Smiling back at her on the screen was the face she couldn't stop thinking about all night. Not even Halo could distract her. In fact, it killed her game fast.\n\nBut it wasn't just Quinn's face in the photo. Next to her were Mark, Spencer, Courtney, and some random drag queen.\n\nQuinn had tweeted the image last night with a short caption. Alex noted the time stamp as 3:22am. It would appear the group had been out late.\n\nI see you NYC &lt;3 #Horizon #NewFriends #NotADrag\n\nAlex looked up to see Courtney chatting casually with the barista as she waited for her coffee, so she took the moment to look back down at the picture.\n\nQuinn looked just as sexy as she did at The Library, but with a slight flush to her cheeks as if she had been dancing the night away.\n\nIt took Alex only a moment to notice that Spencer's arm was wrapped around Quinn, her fingers touching the bare skin on Quinn's waist under where her t-shirt rode up slightly.\n\nShe knew she had no right to feel like ripping Spencer's arm off for touching Quinn, but it didn't stop her blood from boiling. Alex rarely felt any kind of irrational anger, but she felt it coursing through her body right then.\n\n\"Why do you look like you're going to murder my phone? Don't murder my phone.\" Courtney sat down with her coffee, pulled her phone back to her, and cradled it against her chest like it was a child.\n\nWhen she finally glanced down at the photo, she raised her eyebrows at Alex. \"Is someone jealous? Is that what I detect here?\"\n\n\"I'm not jealous. Though Spencer seems very bold for someone doing a show at a 100-seat theater,\" Alex scoffed. It was immature and she knew it.\n\n\"Don't be a pretentious snob. I've done three shows there and you still respect me. Let's talk about what's really going on here. You have a big, fatty crush on our little fashionista and you can't deal.\"\n\nCourtney took a sip of her coffee triumphantly as if she figured out the meaning of life.\n\n\"Are we going to have to do this every time we see each other until her show closes?\"\n\nAlex was already unfocused enough. She knew she had a crush on Quinn, but she couldn't very well tell Courtney she didn't sleep a wink thinking about her. She'd never be able to get Courtney to stop talking about it.\n\nCourtney's face turned tender as she regarded her friend. \"What's really going on babe? Like, I get your whole rule and while I make fun of it, I actually get it. But you seem legitimately attracted to this woman. So why can't you just be a normal person for once and bend the rules a bit?\"\n\nShe scrunched her nose as she added, \"Sorry, that sounded much more emphatic in my head.\"<br ><br >\"Because my dad has mentioned more than once that he hopes there won't be a repeat of Sloane. If I start sleeping with her, it'll just prove to him that I'm not ready for Rick's job.\"<br ><br >\"It's that important to you?\" Courtney asked.<br ><br >\"It's what I've been working on for almost ten years. It's certainly worth more than a couple rounds in bed with a model who will be off to her next project as soon as the show closes.\"\n\nAlex wanted to be done with this conversation. It was bad enough Courtney invited Quinn out last night, she didn't need to be reminded about her insane attraction to the woman again and again.\n\n\"Ok babe. I get it.\"\n\nCourtney put her hand on Alex's and squeezed it gently. \"But if you do decide to go there, just know the world won't end. I got to spend some time with her last night and she's great. She's not Sloane. She's solid. And just so you know, she seems to be put off by Spencer. That was a no go.\"\n\nAlex shouldn't have cared, but the words made her feel instantly lighter. She wanted to ask more but she had just chastised Courtney for talking about it, so she held her tongue.\n\nBut she did need a sounding board, so she brought up a safer topic that had been on her mind.\n\n\"Janet wants to feature me in the piece on Quinn that the Times will be doing. Something about how I'm the one to bring Quinn's show here, I don't know.\"\n\n\"And you're feeling very uncomfortable about that.\"\n\nAlex simply nodded. Courtney knew Alex. For the world, Alex put on a careful mask of poise, control, and decisiveness. But Courtney had seen Alex at her lowest\u2014 letting Alex cry into her chest for hours after her mom passed. Courtney knew what Alex had gone through to put her life together again after that. What it meant to get to where she is in her father's company.\n\nCourtney took Alex's hand in hers and kept it there. \"Remember the first time I ever met you? I was so fucking nervous for that audition. Just a wee little freshman there, I had no idea what kind of shark's mouth a college musical theater audition was.\"\n\nAlex laughed at the memory before Courtney continued.\n\n\"I was just sitting there waiting for my turn when you came out of the room. And instead of leaving the building, you saw a scared girl, new to the school and you gave me a piece of advice. Do you remember what you said?\"\n\n\"I'm pretty sure I asked you to come back to my dorm,\" Alex replied, which got a laugh out of her friend.\n\n\"That was after my audition you egomaniac.\" She paused as she regarded her friend softly. \"You asked me how long I've been acting. I told you my whole life and you said 'sounds like you've earned this. Take your shot'.\"\n\n\"I don't even remember saying that to you. I vaguely remember you asking me to fuck you harder, but not that whole bit,\" she waved her hand in front of her to make her point.\n\nCourtney knew Alex well enough to know her instant reaction would be to deflect from the very vulnerable conversation unfolding.\n\n\"Well you did say it. And I'm telling you the same thing. Which is what Janet is also telling you. You are the reason Quinn's show is here. You are the reason there has been a surge in original programming at Horizon. You are the reason millennials are trying to buy season subscriptions. Season subscriptions Alex. Like something they have to think about more than a week before. You did that. Not your dad's 'legacy' or whatever the fuck they call it. If Janet wants to feature you, let her. You earned that.\"\n\nIt's not that Alex wasn't used to Courtney being in her corner. But to hear such passion behind what Alex did\u2014something Alex honestly didn't think anyone else even noticed\u2014made the theater manager emotional.\n\n\"Thank you, Court. I guess I'm just worried that it will seem too self-promotional. My dad doesn't react too kindly to that.\"\n\n\"Your dad is surrounded by actors every day and let's be real, usually into the night.\" She rolled her eyes as she said that last part. \"He has no issue with people being self-promotional. He has an issue with you doing it.\"\n\n\"Whatever his issue is, I have to play by his rules. And this could push him over the edge. He's always been paranoid about me taking the spotlight from him.\"\n\nCourtney pursed her lips in thought. \"The thing is, Al. I think Janet gets that. Putting you front and center of the piece in the Times may just force his hand. He can't really dethrone the woman who saved his company.\"\n\nAlex finally felt a weight lift off of her. Courtney and Janet were right. What could her father really say to a Times piece, a sold out run and glowing reviews? He'd have to give her Rick's job otherwise it would look almost petulant.\n\n\"God this girl better be good,\" Alex said before she drained the rest of her coffee.\n\n\"On stage...or in bed...or...,\" Courtney smiled back at her.\n\n\"I will kill you.\" Alex glared back for only a second before a rare grin broke out on her face.\n\nBut by god, she needed to make sure this show was a success.\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\nOn Friday, Mikey and Quinn once again sat in Alex's office in the theater building. Someone from the admin front desk showed them in since Alex was finishing a meeting with her dad.\n\nIt wasn't long after they sat down though that Alex breezed into the room. As she passed by Quinn and Mikey's chairs, Quinn could distinctly smell her perfume.\n\nShe had noticed it the other night too as they stood close together outside the bar. More masculine than one would think she wears by looking at her, but it fits. Something almost musky with a splash of vanilla. It was delicious.\n\nAlex didn't speak until she sat down. \"Hello Quinn, Mikey. How are you settling into the city?\"\n\nThough she spoke to both of them, Quinn found Alex's gaze resting solely on her.\n\nThe look Alex was giving her was more intense than she'd expect to see in front of Mikey, but she couldn't look away from it. She'd never seen eyes that had such a storm behind them. At times, like when they were on the stage earlier this week, they were crystal clear. Like the blue you see when you wake up after a tropical storm. But right now, they had a grey mixed in that created a swirl of emotion. Quinn couldn't help but wonder what meeting she had just come from. Or did Quinn do this to her?\n\n\"I tried George's. Best bagel I've ever had,\" Quinn replied back lamely.\n\nWhy does she always resort to bagels when unnerved by this woman? She mentally smacked herself. That was until she saw Alex's smile and her eyes shine a bit brighter than before.\n\n\"I'd like to take you over to meet Simon and Rick, they're in my father's office now waiting to meet you.\" Alex said, ignoring the bagel comment.\n\nShe finally looked over at Mikey, but with a furrowed brow. \"Mikey you'll need to wait here while I introduce Quinn. My father can be rather rude to people he deems to be purely on the business side of things. Especially ones from LA.\" She at least had the decency to give him an apologetic smile.\n\n\"I understand. I had a call earlier today with Janet Jameson and she gave me some insight,' Mikey replied.\n\nFor the first time since Quinn had met Alex, she heard the woman give a genuine laugh\u2014actually it was more of a low chuckle, but it was unguarded and made her seem ten years younger. Quinn melted a little at the sound and wanted to hear it again.\n\n\"I imagine she did,\" Alex replied.\n\nIt was childish but Quinn suddenly felt left out of some inside joke. She didn't even know who this Janet person was.\n\n\"But you're on the business side of things. Shouldn't that put your dad off too?\" She blurted it out without thinking and wished she could take it back the second it clumsily fell out of her mouth.\n\nLuckily Alex's smile from before didn't leave her face, she just looked more amused now than anything.\n\n\"Indeed, it does,\" Alex said as she rose from her chair and moved towards her office door.\n\nMikey and Quinn followed. After saying their goodbyes to Mikey who headed to the elevator, Alex led Quinn down the short hallway to her father's office. Quinn couldn't help but admire the formal black slacks Alex wore with a plum button up blouse.",
        "She wondered if Alex ever dressed casually. Her fingers itched to undo the top button of Alex's shirt so she could see the soft skin under. Or, she chastised herself, she could stop thinking about her pseudo boss and get her damn head in the game.\n\nAlex stopped suddenly in front of a door. Quinn was so distracted checking her out that she bumped into her gently. If anyone had passed them in the hall, they would have looked like they were almost wrapped around each other with Quinn's body leaning into Alex's.\n\nAlex gasped softly as she turned around. Their fronts touched lightly as Alex leaned against the door with her hand on the doorknob.\n\n\"Rick is easy, just flatter him,\" Alex said in a low voice. \"But with my father, I suggest you follow my lead.\"\n\nInstead of opening the door though she just stood there looking at Quinn. As Quinn nodded back, she noticed Alex's eyes flick down to her lips before they moved back up. Just as quick as it happened, she turned around and pushed the door open.\n\nThe first thing Quinn thought as she entered the large office was that she was looking at Alex's male doppelg\u00e4nger. The man sitting in front of her didn't just share Alex's blonde hair, piercing eyes, and elegant lines, which he did\u2014he also carried himself with the same authoritative elegance. But where Alex had a softness to her features, Simon's face was hard and weathered. If she hadn't known, she would have taken one look at his expensive suit and assumed he worked in finance.\n\nRick was leaning against the windowsill and was everything she pictured an executive director to be. Equally as handsome as Simon, but with silver hair and a long, slender build. His face was smoother than it should be for someone his age and he had a much gentler air about him than Simon. Simon was the one who really ran things, that much was clear to Quinn already.\n\n\"Father, Rick, this is Quinn Collins. Quinn, this is Simon Anders and Rick Weston. Please, sit,\" she motioned for Quinn to take one of the seats across from Simon's desk.\n\nRick leaned back further against the window, gently folding his arms across his chest. He had a nice face and gave Quinn a genuine smile when she sat down.\n\n\"Ms. Collins, we are very excited to have you here this season,\" Simon said to her.\n\nHearing her last name out of his mouth did not give her the same thrill it did coming out of Alex's. On the contrary she felt like she was in trouble somehow.\n\n\"I take it you've settled in nicely?\" he asked.\n\n\"Yes, thank you. And please call me Quinn. I'm also excited to be here. Performing in New York has always been a dream of mine.\"\n\nShe noticed Alex shift slightly in the seat next to her. Maybe the doe eyed actress act wasn't the right route with Simon Anders. Simon merely gave her a forced smile.\n\n\"Have you settled into an apartment? You've gotten everything you need from HR?\" Rick asked next.\n\nHis voice was like velvet and she was caught off guard by the sincerity in his tone. It was just such a stark contrast against Simon's icy demeanor.\n\nShe should have asked Alex what the goal of this meeting was because the way Simon was appraising her, it felt like much more than a meet and greet. More like she was a calf at an auction.\n\n\"Yes, I'm not too far from the theater and my manager is living close by so it's perfect. I start rehearsing next week,\" she added unnecessarily.\n\nSimon Anders probably didn't need to get into the weeds on various artists' rehearsal schedules.\n\n\"Good, good,\" Rick said clapping his hands together. \"I'm sure Alex here will make sure you have everything you need but please don't hesitate to find me any time. And I assume you'll be at opening for Death of a Salesman? We like to have our company artists attend.\"\n\nQuinn looked over to Alex who gave her a small nod. She'll need to remember to mention that to Mikey who's handling her schedule here.\n\n\"I've heard my daughter secured Diego Ruiz for you. He's very good. You're quite fortunate.\" Simon continued in a very business-like tone.\n\nMaybe he and Rick liked to play good cop, bad cop with artists? Quinn wasn't sure why the room felt so tense every time Simon looked at her.\n\nAlex finally spoke, though not in the same commanding tone Quinn was used to hearing. \"I merely made the recommendation. Diego specifically asked to work with Quinn once he read her script.\"\n\nSimon looked over at his daughter and gave her a smile for a beat too long. Stealing a glance at Alex, Quinn could see her simply looking back at him with a bored expression.\n\n\"Ms. Collins as I'm sure you've realized by now, my daughter is a fan of your work. Catching the eye of the unshakable Alexandra Anders, and in a festival no less, is no easy feat. I look forward to seeing more.\"\n\nHis smile was almost mocking now, but he wasn't mocking Quinn. In that moment he was still looking at his daughter and Quinn's head was spinning a little bit.\n\nWhat did he mean she caught Alex's eye? And why did she feel like some pawn in a familial squabble right about then?\n\n\"We all know Alex's taste is impeccable,\" Rick chimed in trying to ease some of the obvious tension that came over the office. \"I for one, cannot wait to see what you do here.\" He smiled at Quinn who just sat there staring not knowing what to say.\n\nAlex suddenly stood and looked at Quinn, silently commanding her to do the same. Apparently, Alex wanted this meeting over as much as Quinn did.\n\n\"We can work out some progress check-ins for you both,\" she said to the two men. \"As long as Diego and Quinn are comfortable with early audiences. But for now, I just wanted to drop by so you can meet her.\"\n\n\"It was a pleasure.\" Rick moved forward to enthusiastically take Quinn's hand.\n\nSimon was much slower to rise but also reached out for a quick shake.\n\n\"Indeed. I'm sure Alex will take care of any needs you have,\" Simon said as he sat back down, glancing at his daughter with a quick wink.\n\nIf looks could kill, the one Alex was giving her father would have him dead faster than you could say Macbeth.\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\nAlex closed her eyes as she leaned back against her desk and Quinn felt like she was intruding on a private moment. She didn't know if she was supposed to follow the theater manager into her office or just leave after that awkward meet and greet with Simon and Rick.\n\nAlex kept her eyes closed and let out a breath. \"I'm sorry about him.\"\n\nWhen she opened her eyes Quinn could see a mix of embarrassment and something that looked like resignation.\n\n\"Rick seems nice,\" was all Quinn could think to say back.\n\nShe wasn't really sure what to say about Simon's behavior. She didn't even really know what just happened in there.\n\nAlex gave another chuckle at her simple statement. \"He is. I meant my father. He can be...let's just say he doesn't like ideas that aren't his. I should have warned you before we went in there that he might be...\"\n\n\"A dick?\" Quinn supplied.\n\nThis time Alex didn't just chuckle, she full out laughed and it was unlike any sound Quinn had ever heard. It wasn't care-free, and it certainly wasn't a giggle. It was low, almost masculine. Quinn could feel it in her every bone like a vibration from a train rolling past.\n\n\"That's one word to use I guess,\" Alex said as she schooled her features again. \"He likes things to be his idea, especially if they're successful. You weren't his idea. But it's not to say he'll be a problem for you, so don't worry about that.\"\n\n\"I'm not worried. But I am curious about what he said.\"\n\nAlex just continued to lean against the desk, her blue eyes just waiting for Quinn to continue.\n\n\"Mikey and my agent made it seem like they chose this theater. Not that you saw my show and handpicked it.\"\n\nAlex pursed her lips before speaking and shrugged. \"I put in a call to your agent when I was putting our Winter Series together. It just so happened she was shopping it around at the time. I guess it was just right place, right time.\"\n\n\"You could have told me this whole thing was your idea before we went in there.\" Quinn suddenly felt defensive.\n\nWhat Alex said made sense, but she couldn't help but feel like she was in the dark about something Alex, Rachel and Mikey all knew about. It was the same feeling she had earlier when they were joking about the Janet woman.\n\n\"It doesn't matter how it happened. I didn't do it as a favor, Quinn. I don't even know you. Your show deserves a stage, and mine is the best. It's that simple.\"\n\nQuinn almost missed the compliment. Alex was so calm it was as if she was discussing weather and if it might rain that day. Quinn didn't know why it bothered her to feel so out of the loop on her own show, her creation.\n\n\"It matters to me,\" Quinn said quietly. \"This work is personal. I let Mikey handle a lot, I know that. But I'm not an idiot that can't be told things related to my own career.\"\n\nAlex regarded her quietly for a moment. \"I know that, Quinn.\"\n\nThe softness in Alex's tone caused Quinn to regret her sudden outburst. This was probably why Mikey didn't let her go to meetings on her own, though she wasn't used to have meetings with women she wanted to drape across a desk.\n\n\"It does mean something to me that you liked it,\" she added quietly to Alex.\n\n\"You inspired me. When I saw your show, something woke up in me. So, I did what I do best. I'm giving you a stage. But you'll do the rest.\"\n\nQuinn wasn't expecting that response. How could she inspire this magnificent woman?\n\nAlex finally looked down and smoothed out her top, signaling that the moment was over. When she looked back up at Quinn, her face was the ever stoic one of detached professionalism.\n\n\"I'm sending Mikey a schedule of events that we'd like you to be at. Nothing is contractually obligated. But we have Rick's opening night soon and then the Winter gala right after that.\"\n\nThe abrupt shift in mood was something Quinn was starting to notice happened a lot with Alex.\n\nWithout much else to say she simply nodded. \"Well, I'll leave you to it then. Thanks for the super fun meet and greet.\"\n\nAs Quinn got up to leave something felt hollow in her chest that stopped her from opening the door. She turned back to the blonde woman who continued to stare her down from the desk.\n\nShe pointed to the poster she had noticed during her first meeting at the theater.\n\n\"An all-female version of A Streetcar Named Desire. Very bold.\"\n\nAlex's brows pulled together in confusion, but she didn't say anything. Quinn sighed and dropped her hand from the doorknob.\n\n\"Before our first meeting I was doing some light research on the theater and stumbled upon a video of your play.\"\n\nWhen Alex just continued to stare at her with a blank expression, she barreled on. \"I watched it. All of it. I wasn't going to, but it was just so good. You were just so good.\"\n\nShe moved into the office closer to the desk. \"You took my breath away.\" She stepped closer again. \"I've never seen anyone take over a stage that way. With such elegance and power. It wasn't until I met you that I saw that was more you than the character. You're inspiring too, Alex.\"\n\nQuinn was surprised by her own boldness. She hadn't been this forward with a woman ever, not even with Jenna. She could see a war of emotions swirling behind the blonde's stormy blue eyes.\n\nWhen Alex continued to say nothing, Quinn felt a wave of embarrassment wash over her, so she turned back to the door.\n\nAs soon as her hand fell onto the cold doorknob, she felt a hand on her shoulder. Alex gently took Quinn's hand off the doorknob and turned her around so the two were facing and Quinn could feel Alex's breath on her face.\n\nBefore Quinn could even react, Alex was pushing her shoulders so her back gently hit the door behind her and her gasp of surprise was stifled by Alex's hot lips against her own.\n\nQuinn's brain felt like it short circuited for a moment as she opened her mouth for Alex's probing tongue to enter. She could feel a low moan leave her mouth, only to be swallowed by Alex's greedy lips.\n\nShe gave Quinn no time to breathe, no time to think, only time to inhale Alex's scent and allow her to have her way with Quinn's mouth.\n\nQuinn could feel one of Alex's hands move into her thick hair and grip it gently, pulling her whole body closer. Quinn obliged and, in that moment, knew she'd basically do anything Alex and her talented mouth asked.\n\nQuinn moved her hands so she could place them firmly on Alex's hips and pull her body into her own. As she felt Alex's body slide up against the length of her own, the blonde let out a low moan that Quinn could feel all the way down to her center. She pulled Alex into her body again, eliciting another erotic sound from the blonde.\n\nAlex took her free hand and slowly moved it up the side of Quinn's body, letting it linger on the side of her left breast. Quinn gasped at the contact and could feel herself begin to slide down the door, no longer able to hold her legs up.\n\nAlex simply pushed her harder into the door and moved her hand down so she could support Quinn's weight by cupping her ass.\n\nQuinn's entire body felt like it was on fire as Alex squeezed her ass harder and sucked her bottom lip into her mouth. As Quinn let out a groan, the sound was joined by laughter sweeping by the office in the hallway outside.\n\nAs if she was burned, Alex pulled her head away from Quinn's mouth, but didn't move her hands away just yet. She was breathing heavy as she looked down at Quinn's wet and swollen lips.\n\n\"I'm sorry. We can't,\" she said, dropping her hands and taking a step back.\n\nQuinn took Alex's hand in hers until the blonde looked back into her eyes again.\n\n\"Why not?\"\n\n\"I can't date artists here. It's just something I can't do,\" she said more firmly, but she didn't remove her hand from Quinn's and her breathing was still heavy.\n\n\"Alex, we're both adults. And I think it's obvious we're both attracted to each other. I think we can handle the ramifications of dating, don't you?\"\n\nShe understood being professional, but it's not like they were bankers. They were in a theater and surely professional decorum was a little more relaxed, right? But the look Alex gave her told her that Alex didn't feel that way at all.\n\n\"Maybe in most situations. But you met my father. Meetings like that will be even worse if he finds out I like you. I need this show to be successful on merit alone.\"\n\nQuinn couldn't help but smile at that. \"Oh, so you like me then?\"\n\nAlex gave her a small smile in return but didn't answer the question.\n\n\"Your show doesn't deserve to be cheapened and that is what will happen if we date.\" Alex finally took her hand away from Quinn's.\n\nShe wanted to argue that this was a completely ridiculous reason not to date someone you're into. That Quinn didn't care about how it would affect her show if she could just kiss Alex like that one more time.\n\nBut the truth is, she did care. She had spent years running away from a relationship scandal that had humiliated her publicly. This was clearly different though, there really was no scandal as far as Quinn could see. Alex was single, gay and out of the closet.\n\nBut she thought back to Mikey's warning and suddenly felt a pang of guilt. She didn't want to hurt all the people who depended on her. Mikey, Claire, Will\u2014her actions had affected all of them. She needed this show to work because they needed it to work. And if Alex was right, she didn't want to give Simon any reason to pull the show either.\n\n\"No kissing then?\" Quinn asked innocently.\n\nEven if she couldn't date the woman, there were no rules against continuing to tease her.\n\nAlex gave a small smile that left her face as she looked down at Quinn's lips again. As she stared at them, Quinn could see her eyes darken.\n\n\"No kissing,\" she responded.\n\n\"How about lunch then?\" Quinn did her best to make the question sound casual.\n\nShe wanted more time with Alex. Even if it didn't involve kissing. She'd prefer it if it did, but it can't be that hard to keep things professional. Even if Alex did kiss like that.\n\n\"Lunch?\" Alex asked with a furrowed brow.\n\n\"It's where you eat in the middle of the day. Usually follows breakfast and precedes dinner?\"\n\nAlex quirked her eyebrow at that but smiled. \"Yes. I'm familiar with the concept.\"\n\nSince Alex didn't seem completely opposed to the idea, Quinn decided to push a little.\n\n\"Oh good. Makes the whole concept an easier sell.\" She winked before continuing. \"Then you know that at lunch time the sun will be out. No dark lighting or hidden corners. Just a sandwich. I'll even dress down so there's no temptation to kiss me again.\"\n\nShe paused before saying what she really wanted to say. Alex was the type to scare easy and she didn't want to do that. \"I just want to get to know you better.\"\n\nThe look Alex gave her was intense. As if she was trying to find something hidden in Quinn's eyes. When she spoke, her voice was a low husk.\n\n\"I guarantee there's nothing you could do to dress down Ms. Collins. But lunch sounds lovely.\"\n\n\"When?\" Quinn whispered back, not daring to move and have Alex change her mind.\n\nAlex moved out of Quinn's space to go back to her desk and even though they hadn't been touching anymore, Quinn instantly felt colder.\n\n\"I'm out of town this weekend. Monday. Meet me at Single Shot at noon.\"\n\nQuinn took that as her official dismissal from the office. She simply nodded her head and turned to leave, but before she could open the door, she turned back to Alex who had her intense gaze locked onto her again.\n\nAs Quinn took slow, deliberate steps back to Alex's desk, the blonde looked almost nervous. Quinn put both hands down on the desk in front of her and leaned over it slightly.\n\n\"For the record, if you think bossing me around will keep this thing between us more professional, I can assure you, it will backfire. It just makes me want to bend over this desk for you.\"\n\nAlex's eyes widened and Quinn felt a rush of satisfaction that she could unnerve the stoic woman. Part of her can't believe she just said that. The other part was physically throbbing at her own boldness.\n\nShe gave Alex one last smile, turned and left the stunned theater manager gaping at her back."
    ],
    "authorname": "FemmeyFemmeFemme",
    "tags": [
        "girl on girl",
        "lgbt",
        "new york",
        "theater"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/new-horizons-ch-07-09"
}