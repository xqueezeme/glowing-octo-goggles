{
    "title": "How to Give a Lingam Massage",
    "pages": [
        "As a woman, I don't know what it would be like to have your cock completely worshipped and adored for hours on end\u2014but I imagine it would be pretty fantastic! I happen to be on the worshipping end, and I love paying homage to what, in Tantra, is called the Lingam (pronounced ling-ahm)\u2014which loosely translates into \"Wand of Light.\" In the physical sense, it is what we might call the cock, prick, dick, etc. The Tantra definition expands the view of the male genitals beyond the physical\u2014the masculine is a pure laser beam of consciousness, raw energy and single-minded focus. A Lingam Massage is about worshipping that consciousness, and giving a man space to relax into his body, and expand his consciousness to receive even greater pleasure.\n\nThis type of massage can also help men work through sexual trauma, or negative sexual conditioning, given a massaging partner with enough gentle patience. Orgasm is never the goal of the Lingam massage, although it happens sometimes, and it is often much more intense than normal orgasms. The true goal is to massage the Lingam, testicles, perineum and \"sacred spot\" (more on that later\u2014it's the masculine equivalent to the feminine g-spot) to encourage a man to explore the edges of his ability to receive pleasure. \n\nPreparation You can bathe or shower together first. Make sure you both void before starting, as you won't want to have to interrupt the flow if one of you has to use the bathroom. \n\nYou need a quiet, preferably dim space, with a bed, or a futon mattress on the floor, or even just pillows. You can drape a sheet over them, in case you spill any oil. The temperature in the room should be a little warmer than normal because you are both going to be nude, so you may want to turn up the heat. Lighting many candles in the room also helps generate heat and keep the room dim. You will want to make sure that you have an open time frame where you won't be disturbed, preferably a few hours. Remember to turn off all of your phones and pagers, and if you live with others, you can even put a \"Do Not Disturb\" sign on the door. \n\nMusic is good to set the mood, but be sure it's something where all of the tracks are appropriate. There's nothing so jarring as a discordant piece of music suddenly playing when you're trying to relax. Make sure your CD player has a \"repeat\" function, so you don't have to stop to push \"play\" again and again. \n\nYour lubricants and oils should be somewhere within easy reach. Try to get spill proof bottles, and use plastic rather than glass. (Knocking over a bottle of massage oil and breaking it makes a huge mess and goes a long way toward ruining the mood!) \n\nIf you are giving this massage, you should remind your partner that their communication with you is key. Make sure that they feel comfortable making requests or comments. He should know that this is about his comfort and pleasure, and if he needs a break, or if the room is too hot, or the touch is too light or too hard, he can and should speak up and say something. You can often encourage him by asking \"Is this too hard?\" or \"Is the temperature ok?\" \n\nThe first thing you should do is breathe together. Breath is the way we make love with the divine. Look into each other's eyes and breathe, deep into your belly. You should be sitting face-to-face (or standing, if you prefer). You can hold hands, or hold onto each other, whatever feels good to you both. \n\nThe Lingam Massage The massage begins with the man lying on his back, usually with something under his hips to lift them a little\u2014a pillow (cover this with a towel) or a cushion. He can place a pillow under his head if he likes, or not, whichever is more comfortable. Make sure he is relaxed and truly comfortable before you begin, because he is going to be in this position a long time.\n\nYou should sit between the man's legs, cross-legged, with his legs apart, knees up and slightly bent. You should continue looking into his eyes and breathe with him. Remind him, often, of his breath. If you find he is holding his breath, you can place your hand on his lower belly and remind him to breathe from that space, to \"fill his belly\" with his breath. Practice this a few times before you begin. \n\nLingam massage begins with a slow, sensual massage of the other parts of the body. Massage his legs, his chest, his abdomen, his arms. This is a long, slow process. Advance the massage slowly toward the inner thighs and pelvis, until he is breathing deeply from his belly, and his body has no more tension and is fully relaxed.\n\nThen, and only then, should you approach the Lingam. This is a sacred act, and a powerful one. You should ask his permission to touch his \"Wand of Light.\" You can simply say the words, \"May I touch your Lingam?\" or you can more formally ask, \"May I touch your Wand of Light?\" Whatever reaction or response he has is normal. Take it in stride, whatever it is. \n\nIf he gives you permission, pour a small quantity of very good quality massage oil or water-based lubricant on the Lingam and testicles. The quality of the oil is important. This area of the body is very sensitive, and the skin can get raw quickly if the oil isn't high quality. Rub the oil into the skin, and then begin at the top of the inner thighs, in the crease where his legs meet the pelvis floor. Work along the connecting bone and muscles, releasing tension as you go. Spend a great deal of time here, rubbing the oil into the skin. Use slow, steady motions.\n\nRemember, too, to ask him what he is feeling\u2014is it too hard, too soft? Too fast, too slow? Let his pleasure be your guide. You don't need to have a conversation (and probably shouldn't\u2014it might take him out of his body) but definitely keep communicating during the massage. Look into his eyes, and keep breathing with him. \n\nNext, massage above the Lingam, on the pubic bone. Rock your hand over this place, feeling the bone beneath the muscle and skin. Then, move on to the scrotum, gently (and I say gently, and I mean gently!) pulling and kneading his testicles. You will need to pay very close attention to his responses here, and encourage him to tell you what is just right for him. Some men are more sensitive than others in this area, and can't stand to have their testicles touched at all, while others require a harder touch. Experiment, starting light and moving toward hard, rather than the other way around. \n\nThen, move your hand down to massage his perineum. This is the area between the testicles and anus, and can be very sensitive. Pay special attention here, circling and pulling at the tissues. This is a very overlooked and neglected part of the male anatomy, and most men find great pleasure in having it stimulated. You can use downward strokes from his Lingam to his anus, or a circular motion. Vary your speed and pattern and ask for feedback often. \n\nNow you can move your hand to touch his Lingam. As you do so, imagine you are making love to a god, some divine being, and this is the source of his energy and light, this hard shaft in your hand. Worship him as you begin to stroke the shaft with varying pressure and speed. Let him feel all your devotion and love in your movements. He is your god here on Earth, and this is your opportunity to show him that.\n\nIf, at any point, your man seems close to ejaculation, you need to back off immediately and let things cool down before beginning again. He will have to be more aware of his own bodily sensations during this time, and should be giving you feedback. If he thinks he is close to ejaculating, he should tell you, so you can slow your movements. If he passes the point of no return, that's ok. If he is very close, but not quite there, you may be able to hold off his ejaculation by squeezing the tip of his Lingam between your thumb and forefinger. You need to squeeze very firmly, and hold it for about thirty seconds. Encourage him to take deep, belly breaths while you do this and it may delay him.\n\nNow, as you are massaging the shaft, begin to gently squeeze his Lingam at the base with your right hand, and pull up, sliding completely off. Then do the same with your left hand\u2014squeeze his Lingam at the base, and pull up, sliding completely off. Then do this again with your right, then your left, and so on. Then, after a while, change directions\u2014slide alternating hands from the top down to the base. \n\nYou should pay close attention to the tip or head of his Lingam. Hold his Lingam by the tip and gently shake it back and forth. Then thoroughly massage the head, cupping it in your palm and making a \"juicing\" motion (like you are juicing a lemon or an orange) around and around. \n\nAnother thing about Lingam massage\u2014because it's not necessarily about achieving orgasm, he may not be fully erect all the time. That's perfectly normal, and in Tantra, it's actually preferable. Women experience the same rise and fall of arousal, too, like waves\u2014it just doesn't have such tangible measurements. Let him stiffen or wane, as his pleasure increases or decreases. The more he does this, the more in tune he will be with his own arousal. \n\nMove from the Lingam to the testicles to the perineum and back again, paying close attention to his response. A man can learn to master his ejaculations more effectively through this technique, as you massage him and he learns to identify the cues his body sends that orgasm is imminent. Remember to keep backing off if he gets too close to ejaculating, moving your hands to a more remote area, such as his perineum or even his thighs for a while. \n\nThe next place to explore is the male \"Sacred Spot.\" You can do this one of two ways. The first way is to locate the spot halfway between the testicles and anus that creates a small indentation, about the size of a dime. You should be gentle, here, (go light at first, and increase pressure as he likes, that's always a good rule) but begin to push inward with your finger. He will feel a sort of pressure, and it may even be painful at first. \n\nThe other way to access the sacred spot is through the anus. Some men are sensitive about having anything inserted and don't want to have it done this way, and that's fine. If he is open to it, you can insert the index finger of your left hand (use lubrication!) slowly and gently into the anus about an inch or so. Then crook the finger in a \"come here\" gesture, and you will feel the prostate gland. This feels good when massaged, and some men like to have the Lingam massaged at the same time. \n\nLike a woman's G-spot (her sacred spot) this can hold strong emotions that may be released as you are massaging him. Whatever comes up, it's normal, just let him experience the wave of emotions without trying to comfort or rescue him. Keep pressing there, allowing him to release whatever he needs to.\n\nThe male sacred spot is also another way to help control ejaculation. If he starts to feel close, you can decrease stimulation on the Lingam and increase stimulation in the sacred spot, either anally or on the perineum, and it should help decrease his immediate need for orgasm. \n\nIf he wants to ejaculate at the end of the massage, that's fine. If he doesn't, that's fine, too. If he does choose to ejaculate, keep reminding him to take deep, deep breaths, even during his orgasm. It will probably be more intense than most orgasms he has experienced. When he feels complete, slowly remove your hands. Ask for his feedback\u2014some men do like to snuggle afterward, but some would rather drift off into a meditative state. Let him do whichever he prefers.\n\nI love to worship a man's Lingam, devoting my whole self to his pleasure, feeling the power in him as he learns to master his own ejaculations. I hope that you can give your man your devotion and love through this massage, and show him how much you worship him and his \"Wand of Light.\" \n\n---------------\n\nBibliography\n\n1.) Copeland, Pala and Link, Al. \u2013 Soul Sex: Tantra For Two The Career Press, Franklin Lakes, New Jersey 2003. "
    ],
    "authorname": "Selena_Kitt",
    "tags": [
        "lingam",
        "massage",
        "lingam massage",
        "tantra",
        "masculine",
        "sexual techniques"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/how-to-give-a-lingam-massage"
}