{
    "title": "Unexpected Threesome Ch. 22",
    "pages": [
        "As I climbed off the bunk and put my swimmers back on after having had sex with Tash, I have to admit I was feeling every year of my age. My hamstrings and inner thigh muscles were burning and my back was aching just a bit from having pounded the girls so often during the last day and a half. And while my cock had survived relatively unscathed, there was just something about how it now hung in my swimmers that didn't feel quite right.\n\nI would have thought it would be limp and shrunken but it actually felt more swollen and full and just a bit sticky. I would have gone for a swim to freshen up, but didn't have the energy.\n\nIt wasn't that Tash had been particularly demanding; some fingering and fairly conventional and not that prolonged missionary had given her what she apparently needed. It was just it was the straw that broke the camel's - or in this case my - back. In reality, the real demands had come from Ellen and Amy.\n\nI might have said I didn't know what had got into them. But I suspected I did; or at least partly did.\n\nTash was at least transparent. She was just using me for sex. A dud date and listening to what had been happening on the boat had left her in need of some sexual satisfaction and I was her guaranteed and available path to that. It gave me some inkling as to how women feel when they are used like that; although only to a limited extent. In a way, that's her deal on the boat. She crews and adds a lot of vitality to the mood on the boat and gets sex when she wants it; an equivalent to a friends with benefits I suppose. I've got no problem with that. She gives me the extra crew person I like to have without me having to worry about an extra romantic entanglement and it makes my life easier because I don't have to worry about her being excluded when I'm having noisy sex with the others. And in the case of Amy it's always noisy sex. Very noisy.\n\nIn any case, with a body like Tash's, I'd be lying if I didn't admit there was a fair bit of enjoyment for me in it too.\n\nAmy and Ellen's behaviour was more complex. There's no doubt it had something to do with Liddy. I'll admit it, I had a wonderful two days enjoying Liddy's company. Indeed, all the dancing may well have contributed to my stiffness that morning too. We'd just clicked. And while I knew the girls were a bit jealous, I wasn't really doing anything that I wasn't entitled too. Indeed, I was probably entitled to do more, and I know Liddy would have liked me too; but actually having sex with her just didn't seem to me to be right. So it just wasn't going to happen.\n\nEven so, it seemed to drive Amy and Ellen into a frenzy of sexual neediness. Which is why I was now bent over and sore.\n\nAs I followed Tash through the main cabin on the way to the cockpit, I looked at the AIS feed on the navigation station chart plotter and saw that Liddy's yacht was now well at sea; having made good progress East in the light morning wind.\n\nI try and put on a brave showing for the girls. I never want to come across as a stooped old man. But there must have been something in my countenance as I emerged from the companionway into the cockpit that gave me away. Ellen got up and caught me half way out of the hatch, resting a hand on my forearm and with her best bedside manner announced...\n\n\"Ned, you've had a demanding two days. Amy and I are going to treat you to a full on relaxing, pampered, personally delivered, spa treatment today. We're declaring this a day of rest and indulgence for you.\"\n\nEllen gave Amy a little 'get over here' head nod as she spoke, perhaps indicating this wasn't preplanned. As Amy approached, Ellen asked her to bring up the cockpit seat cushions and lay them out in front of the companionway where Amy often sets them out to sunbathe.\n\nAmy duly complied and Ellen was soon laying me out face down on a well padded bed.\n\n\"Amy, would you mind starting to give him a gentle rub down while I rig a bit of shade for him. From what I've seen so far Ned, your resort drink is rum and cola. Are you happy with that or do you want me to chase up something more exotic? I'd even run into town to expand our drinks cabinet if you had a passion for something.\"\n\n\"Shouldn't I wait until the mast is over the yardarm?\"\n\n\"The yacht's laying off facing west enough, I think we can say it's already the right side of the yardarm, so the bar's open.\"\n\n\"Bundy and cola is great thanks.\"\n\n[Bundy is an Australian dark rum]\n\nEllen disappeared below, remerging with a light muslin shawl of hers which she proceeded to peg between the boom and the lifelines. It took away the burning feeling of direct sunlight on my back while still offering a generous and relaxing dose of filtered warmth. Another trip below and she reappeared with a tall glass of Bundy and cola; although my first sip through the straw strongly suggested it might be a double Bundy in there. \n\nAmy had been gently massaging up and down my back. Not a full on kneading sort of massage that a professional might deliver; more a gentle stroking. Frankly, that's how I like it anyway. Warm, womanly hands caressing my back. What could be nicer?\n\nEllen sat the other side of me down next to my butt. She glided her soft hands along the back of my thighs, from my knees all the way up to the leg hem of my swimmers.\n\n\"These thighs have taken a bit of a pounding haven't they Ned?\" \n\nI couldn't help myself. \"Taken or given?\"\n\nShe spanked my bottom lightly. \"Don't be cheeky.\"\n\nMoving down to kneel beside my knees, she turned to face up along my body and proceeded to massage the muscles more firmly; slow, embracing passes up and down their length, her elegantly long fingers penetrating down between my thighs as they wrapped themselves around my legs.\n\nEllen looked over to Tash who was still sitting at the back of the cockpit.\n\n\"So Tash, tell us about last might. That sounded like quite a swim to get home. I'm not sure I'd be willing to do it.\" \n\n\"I didn't have much choice really. But you can be sure I wasn't mucking about. I might have set a personal best for the distance; more so after I lost my panties on the dive in. Somehow the thought of my half eaten body being found stark naked compounded my fears. Topless, I'd been willing to go with. Naked was something more again. Still, I wasn't going to stop and look for them either.\n\nOn the date side, there's not much to tell. He was interesting enough company while we were just talking but a dud lover and really horrible the way he just left me stranded when we were finished. I've already told Amy most of the details; I'm not sure you want to be bored with them.\n\nBut I could hear you guys at it all the way over on the beach.\"\n\nTash let a moment's silence pass before she added with more than a hint of irritation and hurt...\n\n\"You know what really pisses me off? He left me feeling like I was just a couple more notches in his cock that he could go back to the boat and boast to his mates about. Yep, titty fucked her - came all over her breasts! Then I stuck my cock in and pounded her! If the boat hadn't sailed this morning, I'd go and find him and his mates and tell them all what a pathetic premature ejaculator he actually is.\"\n\nEllen replied in her best soothing voice.\n\n\"Yer, that's the trouble with guys when they're in groups like that. Sometimes it seems like they're looking for approval from their group more than they are the chick they're trying to impress. They might be nice as individuals but somehow lose that amongst friends. Sometimes I think a bunch of girls are better off when they cut a lone male out of the group and exploit him instead.\"\n\nAs she finished her sentence, Ellen gave me another spank on the bottom; making it clear - if it wasn't already - I was the target of that comment.\n\n\"Ow. I'm not saying anything.\"\n\n\"Good. Men should be seen and not heard.\"\n\nAmy had only given us the briefest summary of Tash's night when she came back to bed. At length Ellen drew out the whole sorry story; the titty fuck, condom argument, incompetent fingering, premature ejaculation and all. Plus his abandonment of her. I stayed quiet, figuring this was a girlie talk I had no business even hearing.\n\nThe Bundy and cola had gone down fairly easily as the morning warmed up and no sooner was I finished than Ellen replaced it with a new one.\n\nThe girls kept talking about guys, their experiences with them and the disappointments they'd caused; all like I wasn't there. It was clear that the male gender hadn't done a lot to endear itself to this group; although they might just have been in the mood for some girlie bitching and download too.\n\nAll the while, Amy's massaging got a bit firmer - working more at the underlying muscle - while Ellen's got more personal. The fingers between my thighs found my balls on the top of each movement and eventually found my shaft as it lay in my swimmers under my body. Undoubtedly that last contact was facilitated by the fact my shaft had also grown somewhat firmer with all the female handling I was getting. I'd not been very careful about its positioning as I'd laid down; it was sort of pointing off to the side and a bit down. So that's the way it was now expanding as it lay trapped under my body.\n\nAs Ellen touched it, I could feel her prod it with her fingers a couple of times as if evaluating its firmness. Which, in a quantum physics like way, caused a reaction which made the previous evaluation inaccurate.\n\n\"OK, time to roll over.\" A command accompanied by another smack on the bottom. Ellen seemed to be enjoying doing that.\n\nThe only problem was I now had the best part of a boner in my swimmers. Yes they'd seen it before. Yes we were all in an intimate relationship. Still I felt a bit embarrassed that I'd reacted so strongly to what was meant to be a mere massage. I rolled over, exposing its hardness lying off at an awkward angle, clearly still constrained by my swimwear, even if I wasn't still lying on it.\n\nBut I also suddenly realised how much the one and a half glasses of Bundy and cola had gone to my head; feeling decidedly woozy and relaxed as I turned.\n\n\"That looks really uncomfortable.\"\n\nEllen stuck her hand up the leg seams and wrapped it around my shaft, at the same time pinching the material of the front and drawing it upwards. Then she repositioned it pointing straight out even as her handling of it completed the arousal process. She'd created a \"full horizontal\" as the girls call it, even if as I lay on my back it was more literally a full vertical; a Pinocchio nose of clingy, tortured Lycra pushed up by a shaft of blood hardened flesh and sticking out from my crotch. \n\n\"That's better; although it's disgustingly sticky Ned. You might need a sponge bath as part of your treatment.\"\n\nI lifted my head up to look at her handiwork. The waist drawstring hadn't been tied after I'd had sex with Tash. My hardened mast was now pushing both the waistband and leg seams well away from their usual resting spot. I could see straight through the gap and see the bottom quarter of my shaft and to where my balls were now bulging out of the lifted leg seam and Ellen's hand rested just below them.\n\nAmy repositioned herself; folding her legs yoga style under my head and having it nestle deeply into the lap she thus created as she started giving me a facial.\n\nWhich left me staring straight up at Amy's breasts. That certainly wasn't going to help my boner settle down. Amy has breasts that are dead centre of the goldilocks zone. Just a bit too big for her slender figure, they stand perky and proud on her normal straight backed posture; projecting golden orbs of absolute perfection.\n\nLike all her bikini tops, the tie slide triangle one she had on covered less than half their flesh; too small even to be tied tightly against the underboob for fear of dragging it down low enough to expose her nipple at the top.\n\nThe view I had was of a line of underboob flesh with two side dishes of side boob on each breast. In the centre of the tautly drawn filmy material that unsuccessfully tried to cover them, right on the most outward projection of them from my upward looking perspective, the shadow of her nipples could be seen pushing out into the burnt orange material. Even in their relaxed warm state, I could see the outline of the plinth of areola on which the slightly bigger than normal nipples themselves sat.\n\nMy head rested deeply into her lap, the top firmly pushed against the gusset of her bikini bottom where it covered the bulge of her mons. The facial was firm enough that it generated some movement of my whole head and I strongly suspected I wasn't the only one enjoying its effect; a suspicion reinforced as I watched her nipples tighten and jut more prominently into the almost adhesive material of her bikini top.\n\nEllen was doing her own bit to maintain the firmness of my erection, brushing against my balls and then having the back of her fingers do a little butterfly dance along the length of my shaft at the end of every upward pass of her massage. I could feel the pre-cum starting to weep from the tip of my cock and glanced down to see a droplet of it had penetrated the material of my swimmers and was now glistening in the filtered sunlight.\n\nAs a youth I might have been mortified if a girl had offered to give me a massage and I'd put on the sort of sexual display my body was now showing. Then again the girls of my innocent youth probably weren't touching me up deliberately in the way Amy and Ellen were. Whatever; I felt not the slightest inhibition about it. I was relaxed, it felt glorious and the girls could do or see whatever they wanted. If beautiful half dressed women want to handle a man of any age like Amy and Ellen were handling me, they were going to get a reaction. I knew it, they knew it and there was nothing to be embarrassed about.\n\nFrom time to time Amy would lift my cup and bring it to the side of my face where the bent down straw slipped into my mouth; inviting me to take another long sip of the cool beverage until, before long I heard the sucking sound of the last vestiges of my second glass of the drink being drained from around the ice which cooled it.\n\nEllen reached up and took the glass from Amy. \"I'll go and top this up.\"\n\nWhen she returned she gave the glass to Amy, but had in her other hand a damp cloth.\n\n\"Ned mate, your cock's sticky and smelly. We're going to give it a bit of a wash.\"\n\nWithout any further invitation, Ellen drew back my swimwear to expose my shaft; still holding it in the upright position the swimmers had bound it in. I laid my head back more deeply into Amy's lap, closed my eyes and enjoyed the exquisite pleasure of Ellen wrapping my shaft in the warm wetness of the cloth and drawing it up and down its length. \n\nAfter a number of firmly squeezed full length passes, she unwrapped it and used a finger pushed into the cloth to do some detailed cleaning around the recess between the bell and the rest of the shaft before polishing over the top of the bell. Then she finished with a couple more passes up and down the shaft with the cloth wrapped around it. It felt so beautiful that she was lucky I didn't undo all her good work by discharging all over her fingers as she worked on it.\n\nFinally satisfied, she wrapped it back inside my swimwear, restoring it to the full horizontal position it had started in. I quickly I felt the wetness the cloth had left on my shaft penetrate the thin stretched material to make it cling more determinably to my shaft.\n\nBy now Amy was leaning over my head to massage my chest; leaving her breasts dangling right where they framed the view of my own elevated shaft apparently penetrating between them and leaving me feeling like I was cocooned between the bodies of these two beautiful women. I felt like I'd died and gone to heaven.\n\nAnd whether it was the state of relaxation their delightful massaging had induced or the effect of two and a half of Ellen's force fed double shotted bundy and colas, I drifted off into a beautiful sleep full of erotic dreams. I didn't so much wake up as drift back again into some sort of state of sentience. \n\nAt first I became aware of the girls voices as they continued to discuss their unfortunate past experiences with the males of the species. Then I recognised my head was still nestled delightfully in Amy's lap and that she and Ellen continued to stroke my body; maybe lightly and with a distracted sort of approach, but no less compelling because of that. And somewhere in that I realised my cock was still sensuously hard and pointing skywards; very much helped by the fact Ellen would periodically leave my legs alone to gently stroke up and down the length of my shaft, as if maintaining an erection was part of her purpose. \n\nI was almost scared to open my eyes; concerned it might trigger a series of events that would unwind the perfection of my present position.\n\nI squinted them open, hoping not to be noticed. There above me, Amy's breasts still filled my vision; her nipples still tightened just enough that the shape of her whole magnificent areola and nipple edifice stood out, tightly bound in the material of her top, from the smooth perfection of the orb on which they were mounted. Still, something jarred and it took my befuddled brain a moment to work out what it was.\n\nHer lips were heavily glossed with bright red lipstick; not something I usually see on the boat. Indeed, even over the last two nights of partying, only Ellen had been wearing lip gloss and that had been a very muted colour I had barely noticed.\n\nThe girls were still talking away discussing the ups and down of their romantic life. I turned my squinted eyes down to Ellen; momentarily distracted as she once again played the back of her hand up the length of my shaft. She too had a bright gloss on; this one a vivid pink.\n\nSomething was going on. I first wondered whether a yacht full of compellingly attractive males had somehow anchored alongside while I slept; although that hardly accorded with the conversation. With my curiosity aroused I desperately tried to twist my eyes far enough to the side to see Tash; but the slight movement of my head alerted Amy to my waking.\n\n\"Hello. I'd noticed you'd stopped snoring.\"\n\n\"How long have I been asleep?\" \n\n\"About half an hour.\"\n\nAt last I managed to focus on Tash and she too had a bright lip gloss - this one mauve. \n\n\"What's with the lip stick?\"\n\n\"We'd thought we'd do a bit of decoration.\" Ellen had a devilish smile that told me they'd really been up to something.\n\n\"Yea?\"\n\n\"You need to ask of what.\"\n\n\"OK, of what?\"\n\nEllen put her fingertip on the top of my cock to hold it vertical and with the other hand elevated the waistband of my swimmers to expose the whole length of my shaft. The entire length was covered in alternating brightly coloured rings in the same colours as the girls' lipstick; four sequences of red, pink and mauve. \n\n\"Well, what do you think?\"\n\n\"My first thought is that I wish I was awake when you did it. The second is that I'm surprised one of you didn't get a mouthful of cum in the process. But it's very pretty if that's what you mean. Whether anyone would want me to use it on them like that's another matter.'\"\n\n\"What makes you think we didn't make you cum? Indeed, who knows what use we made of you while you were out to it?\"\n\nEllen was staring at me in the most coquettish manner as she made the last statement; daring me to call her out on it. I hadn't really had much experience with night emissions since my early twenties; but my recollection was they always woke me up.\n\n\"Oh yea, who?\"\n\n\"A lady never tells.\"\n\n\"I don't think it happened.\"\n\nEllen was playing with me. Still giving me a straight faced innocent look.\n\n\"Believe whatever you want if it makes you happy. By the way, we knew you'd be disappointed not to have been awake. We agreed we'd do a freshen up of it when you woke up.\"",
        "Ellen peeled my swimmers right off it, leaving the waistband resting across my ball sack. Amy almost anxiously extracted herself from under my head, lowering it gently back down onto the cushion. She knelt alongside me with her back to me.\n\n\"I went first, like this.\"\n\nShe brought her arse up as she bent opened mouth over my erection. Pushing it upright with a finger pushed against its base, her lips didn't make any contact until she had the full length of it jammed in her mouth. I could feel the tip pushed into the back of her throat. Then she brought her lips around it. Tonguelessly, and without moving it up and down, she rolled her lips around its circumference; pressing firmly enough on it to massage it.\n\nAll the while her raised arse was half a meter from my eyes. Her bulging mons adhesively covered by the tautly stretched material of her bikini bottom, a feint crease running through the centre of it. The desire to put my hands between her legs and feel her up was difficult to resist, especially with the pants stained by the dampness of her juices which had permeated through as she'd aroused herself by brushing against the top of my head as it rested in her lap. \n\nI could only partly resist the temptation. With a... \"That's too tempting to resist...\" I ran my fingers teasingly but briefly through it and had her squirm and moan momentarily in pleasure, instead of engaging in a more prolonged arousal of her.\n\nHaving freshened up the red circle at the base, she repositioned herself around each of the next ones up and did the same before withdrawing and handing my shaft over to Ellen. Conversation just doesn't feel right when something like this is happening. I had little desire to do anything but rest my head back and enjoy the sensuous pleasure of what the girls were doing.\n\nAmy seemed to like having my head in her lap, because she moved back to where she previously was and repositioned my head back on it.\n\n\"Did you like that?\"\n\nI looked up. Over the edge of her breasts, her gorgeous round hazel eyes stared down at me, her face lit up with a smile.\n\n\"Ah, yes.\"\n\nAny further conversation was brought to an end by the feeling of Ellen's lips surrounding my shaft. Her technique was a bit different from Amy's; with her lips clamped firmly around it, she jerked her head up and down causing her lips to roll across my sensitive flesh without moving up and down the shaft and smearing the lipstick. All I could do was push my head more firmly back into Amy's lap, roll my eyes back and let out a little moan.\n\nWhen Ellen finished, Tash moved into position; perhaps a little less enthuasticly, but still willingly.\n\nAs Tash finished and moved back to where she was sitting at the other end of the cockpit, Ellen took the waist band of my swimwear and hooked it over the top of my erection just enough to keep it standing upright, while exposing most of its colourful length to a view from the top.\n\nEllen was in a cheeky mood; looking to prolong as an argument something that hadn't really been an argument on the first place. \n\n\"So, there you go; now do you believe you didn't cum when we did it the first time?\"\n\n\"It might have taken a lot of iron hard control from me to resist cumming just then. Maybe when I was asleep I couldn't exercise that control.\"\n\nShe lifted a hand up as if to slap a bottom that was no longer accessible. For a moment I thought my balls were vulnerable, but she brought the slap back down on the top of my thigh and then circled my shaft with her fingers.\n\n\"I'll tell you what's iron hard and it has been half the morning. Is that thing ever going to go down?\"\n\nShe wasn't wrong about its state. On a hardness scale of one to ten it was a ten and a half; sensitised to every touch from her or any of the others.\n\n\"Not while you keep playing with it, but don't stop on my account. That stuff isn't toxic is it?\"\n\n\"Ned. We put it on our lips. Hardly!\"\n\n\"Yer, but I don't think you put it in your pussy.\"\n\nEllen looked at me with a teasing screwed up face as if suggesting I'd said a naughty word, then took the waistband off it again and held it upright with the tip of her finger, contemplating it.\n\n\"I don'no Ned. You know us poor, dumb, females go for bright, shiny, colourful things. It might be tempting. A bit like the male peacock putting on a colourful display to attract a mate. We might have a business concept there. Organic, high gloss, erection makeup! But don't worry, we'll clean you up; polish you up even.\"\n\nShe laid my erection back down onto my stomach, leaving it on naked display and me hoping none of the residents surrounding the bay had binoculars on us.\n\n\"Just a sec!\"\n\nEllen disappeared below and came back up with her phone. Holding it close to the side of my erection, she took a photo of it. I've never photographed myself naked before, and certainly not for the purpose of sending it to a girl. But I knew the shot was an anonymous one of a close-up of a colourful, aroused male appendage and little else. \n\n\"Do you promise never to associate my name with that photo?\"\n\n\"Absolutely. I'll give you a tit shot of myself to hold hostage if you'd like.\"\n\nThe conversation turned to our plans for the day; but even as we talked, Amy's continued facial and Ellen's alternate stroking up my upper thigh and the length of my cock meant the erection wasn't going anywhere.\n\nA break in conversation gave me a chance to raise an issue that I'd been turning over in my mind since the previous day.\n\n\"I wonder whether, while we're on Bora Bora, any of you would like to have a one on one date night - actually a full date day - with me?\" \n\nThe next bit had been worrying me and I'd been trying to work out how to put it. But there was no easy way, so I just did my best.\n\n\"I suppose it would infer a degree of emotional commitment. More than just a nice dinner, rather a bit of emotional time together and the sort of public displays of affection that's going to have people wondering about both of our morals, given the obvious age difference.\"\n\nWhat I had in mind was really intended for Amy and Ellen. I wasn't sure it would feel right with Tash, given the different nature of our relationship. On the one hand, I didn't want to play favourites. But then, nor did I want to be denied the possibility of sharing real relationship experiences with Amy and Ellen just because things were different with Tash. In the end, if Tash really wanted to go along with it, so would I. But I wasn't even sure Amy and Ellen would want to put themselves on display like that.\n\nAmy didn't hesitate.\n\n\"Yes please.\"\n\nEllen was more curious.\n\n\"What have you got in mind?\"\n\n\"Something special, but I'd like to know whether you're interested before I tell you.\"\n\n\"Unequivocally yes.\"\n\nI looked over to Tash.\n\n\"Would you mind if I didn't?\"\n\n\"No, that's fine Tash. I thought that might have been your preference.\" \n\nEllen couldn't contain herself.\n\n\"OK, so what is it?\"\n\n\"I thought I might take you each to spend a day and night with me at the St Regis Resort.\"\n\nThe resort was the one we'd visited for a drink with Liddy. It was the picture postcard, five star resort, with rooms on poles over the lagoon, that's most commonly associated with Bora Bora. Amy and Ellen's eyes and voices lit up.\n\n\"Oh wow!\"\n\nI looked across to Tash. She gave me the sort of 'them's the breaks' look and shrug of the shoulders that told me she was a little bit jealous but accepted the position; which was all I could ask for.\n\nFor about another hour we loitered on the deck while Ellen and Amy continued to pamper me and keep my colourful, exposed shaft fully aroused as we talked about the future plans for the yacht voyage. Anticipating favourable responses, I'd already done a lot of pre-planning for the stay at the St Regis, but the time came when I thought I should confirm the bookings. That meant it was time to do something about my colourful cock.\n\nEllen got a warm damp cloth and 'polished' it with all the vigour her promise suggested; although short of an ejaculation, more because I was a bit ejaculated out than she wasn't willing.\n\nAfter I got off the phone for the bookings, Ellen asked if she could borrow it for a moment and with a massive grin, handed it back opened to a couple of photos she'd just transferred to it; one from the shoulders to their upper thighs of each of she and Amy completely naked. Not just naked, but with their nipples teased up and a suggestion that their crease might be showing signs of arousal too and with a confident, sexualised pose that was intended to flaunt their best features.\n\n\"There's the hostage photos I promised you. I hope you don't mind, but Amy wanted a copy of the shot of you, so offered up her own hostage shot.\" \n\nThey were photos well capable of entertaining my lonely self when we got back to Australia and they went their own way. Even when we were aboard and I saw them naked every day, I often looked lustfully at those photos; they were so powerfully expressed.\n\nIn planning the trip to the St Regis, my first issue had been how to get there. I thought for once it might have been nice to arrive as elegantly dressed guests instead of wet and bedraggled refugees from a small boat, so wondered what possibilities there were over and above just going there in the RIB. \n\nThey ran a once a day boat service from the township of Vaitape. But that was about half the distance away that the direct trip would be. As a trip to Vaitape we made later that day for some shopping showed, we'd end up no less wet; especially since, with the current wind direction, we'd be going through more exposed waters. The timing of the resort boat wasn't great either, getting to Vaitape at 11 and then waiting for a few hours before heading back at 1.30, it was designed for day shoppers from the resort and around the resort's check in and check out time. Since I only had a day with each of the girls, I wanted to make it a more complete day than that would offer.\n\nI could move the yacht; either closer to Vaitape or to the resort. But its present position was sheltered and convenient, so that would disadvantage those left aboard.\n\nSo in the end, the RIB it was; which offered us a chance to slowly explore the northern coastline of the island as we circled around the lagoon to the resort on the other side.\n\nAmy and Ellen played scissors/paper/rock to see who would go first and Amy won. So the next day found Ellen driving Amy and myself around to the resort to arrive well before noon. By us both wearing our high waisted waterproof sea pants over our clothing, we avoided having to turn up in nothing more than swimwear; me in a pair of white tailored shorts and a blue polo T shirt and deck shoes. Amy wore a pair of yellow hot pants and a tightly fitted deep v necked t shirt with sandals; although a wave over the bow left the top half of the t shirt wet enough for it still to be plastered transparently to her wind chill raised nipples by the time we arrived. \n\nEllen left us on the boat dock of the resort, although not before embracing me tightly and giving me a prolonged and somewhat passionate lip kiss in front of several resort staff and guests; that with Amy's t shirt no doubt starting the gossiping that this visit was bound to cause and even more so when the same people then saw Amy and myself walk arm in arm off the dock towards reception.\n\nThis was intended to be a romantic date and, while I was intensely aware of any discomfort the girls might feel, for myself I wasn't going to let the opinions of others affect my willingness to engage in public displays of genuinely felt affection.\n\nWe didn't expect our room to be ready and reception quickly confirmed that it wasn't. Amy teasingly leaned her wet, transparent t shirt over the reception desk wondering if there were other room possibilities, at the same time dropping a hand down to my balls and giving them a slight squeeze, as if to say 'I've got this'. Watched with eye rolling contempt by the young French girl he was sharing duty with, the poor young male receptionist stuttered and drooled in obvious distraction at the sight of Amy's breasts showing clearly through the material but was still unable to change the situation. \n\nMy discomfort at Amy cupping my balls was more due to the knowledge that the concierge who was standing behind Amy, blatantly staring at the way her hot pants moulded into her butt as she leaned over the counter, could probably see what she was doing than it was due to any physical pain. \n\nAs became obvious at the nights at the yacht club, Amy was very much starting to like the effect she knows she has on men and enjoys exploiting it. Far from being jealous, I'm rather pleased for her. It's good for her confidence and abodes well for her future ability to find the man of her long term dreams, even if I will mourn the end of our romantic relationship.\n\nWe left our bags with the concierge and Amy excused herself while she used the reception lady's room to change for lunch into a dress she'd brought the previous day while we were in Vaitape. Personally I had no problem with the wet t shirt and hot pants, but she had clearly been pleased with this purchase and was keen to display it.\n\nShe emerged looking very much the resort guest in a long, white, halter neck dress. It was definitely of the 'new Amy' style. The string tie neck led to a couple of small stretch triangles, providing barely adequate modesty to the breasts they tenaciously clung to. The triangles were sewn to a tight bodice that tucked up closely against her underboob. At her hips the dress flared out into a very floaty skirt piece, split to her knees, that reached down to her ankles and wrapped themselves seductively around her legs as she walked; more so when we got out into the wind. It was extraordinarily flattering to her beautiful figure; the tight bodice managing to fully display the way her breasts gloriously overhung it while highlighting her slim, fit, flat tummied torso and then leading the eye down to where the light material of the skirt piece draped sensuously between her legs.\n\nHand in hand we walked towards the restaurant for lunch.\n\nWhen we were shown to our seats I did the gentlemanly thing of helping to push Amy's chair in as she sat down; being rewarded with an eyeful of beautiful breast display and a nipple peek as I looked down to bring the chair in a timely manner.\n\nWe were only there for a light lunch. We didn't want to spoil the afternoon resort activities with an overfull stomach. Scanning the menu, we both settled for the grilled fish and salad; indulging ourselves with a bottle of white wine to wash it down with and figuring anything we didn't drink at lunch we could take back to our room for later.\n\nRemarkably quickly Amy turned the conversation towards the events of the last few days. She started by wanting to talk about my dancing and where I'd learnt to dance like that but inevitably she used that to circle the discussion towards Liddy.\n\nI knew it was a delicate topic and I didn't want to get our date off to a bad start, so had to be very careful, but absolutely honest in the answers I gave. Because above all else, honesty is the only basis on which the relationships we have going on the yacht can operate; especially for Amy. While happy to acknowledge that I'd enjoyed Liddy's company, there seemed to be two things really on Amy's mind.\n\nShe virtually came out and asked whether I would have liked to have sex with her. All I could really do was acknowledge that I found her sexually attractive, but that the issue never really arose for me. This was firstly because it just didn't seem right in light of what's happening on the yacht - whatever the deal might have been perceived to have been. And secondly because I was never the sort who'd expect, nor even want, sex on a first date or on a casual basis. To me the relationship always preceded the sex.\n\nAmy asked how that accorded with what happened in relation to Ellen and Tash; a fair and difficult question. As I said to her, in a way, the honest answer was 'because Issie made me'; but that was an unfair oversimplification. It really arose as a result of the relationships already on the yacht and was an outflow from that. But even here I wanted to stress it wasn't something I did because it was my 'duty as the captain' or anything like that. Basically the relationships on the yacht are complicated and in the end my normal reservations had to be put aside to everyone's benefit - and I acknowledged, no less my own.\n\nWhich led Amy to ask would I have sex with her if she joined the boat. The answer had to be, if she wanted it, yes.\n\n\"Do you think she'd want it?\"\n\n\"My guess would be yes.\"\n\n\"Would you let her join the boat?\"\n\n\"I don't think that issue would come up. I'd really only want an extra crew if one of you left, and even then, I don't think she'd abandon her friends.\"\n\n\"What if she was stranded for some reason, would you let her join then?\"\n\n\"Yes, probably.\"\n\n\"Would you like to see her join?\"\n\n\"You know, the honest answer is no. The relationship I have with you and Ellen is so special, I just think that would complicate it in a way I don't want to happen.\"\n\nAmy almost glowed in pleasure with that answer. I thought I'd take the chance to add to it an honest revelation about something Liddy had said to me.\n\n\"You know Liddy really liked and admired you, don't you. I mean, she thought you were stunningly attractive, but she really admired how you'd gone about extracting yourself from your relationship with Frank and just thought you were a really nice person.\"\n\n\"I thought she might have thought I was silly for not having got out earlier.\"\n\n\"Goodness no. She well understood how complex these situations are. They're words that are easy for someone who's never been there to say, but the reality is far more nuanced.\" \n\n\"What do you think Liddy thought about your relationships on the yacht?\"\n\n\"I think, once she'd seen enough to have the view they weren't exploitative, she was cool with it. She quickly recognised that there is a real and deep love between each of you and Ellen and myself and I think she satisfied herself you hadn't just been captured by me on some sort of rebound from Frank. She thought you were all really lovely girls and intelligent enough to make sensible decisions. If anything she might have thought Tash was exploiting me for sex, but I think that's judging things with a woman's mentality. I certainly don't think that way.\"\n\n\"I think it was a bit of a shock to her when she came aboard and found everyone running around naked and it was pretty obvious Ellen and I had spent the night in your bed.\"\n\n\"Probably - especially the latter because nakedness is pretty common on a small yacht on a long term cruise. But she made the effort to discover enough about the individuals concerned to understand how that happened.\"\n\n\"What about when you get home. Might you see her as a long term companion?\"\n\n\"Goodness Amy. I've know her for two days. She's nice and attractive too. But that's a question I could only answer after knowing her for months. She might not even like to live in Australia, let alone still like me when we got to know each other better. Americans can be very polarised on politics and that wasn't a place we even started to go in the time we were talking; and nor did I have any desire to. A holiday friendship is not the same as a long-term romance.\"\n\nSomehow that burnt out Amy's determination to talk about Liddy. From there the table conversation ranged wide; starting with Tash's adventures the previous night.\n\nEllen, when she's coming on to me or getting the hots, goes all coquettish. Amy is little short of simply being predatory. You start to feel like some prey being circled by a shark; the only difference being in this case the thought of getting eaten isn't all that bad. ",
        "Very quickly after we'd finished talking about Liddy and turned to a variety of other things, that sense of being circled started to settle in.\n\nThere was just something about the way her eyes widen and pupils dilate, even in the brightness of the restaurant, that makes her intentions clear. As we held hands in the middle of the table with one hand while eating and drinking with the other, she leaned further and further towards me until one of the triangles of her top fell far enough her breast to give me a down view of her nipple. And she knew it; glancing down and then smiling at me in a way that just dared me to stare at it and told me there'd be consequences if I wasn't interested in it, all at once.\n\nIt wasn't long before I felt her foot sliding up the inside of my shins and then my thighs. Her big toe dug into the crotch of my pants until it located the bulge she was looking for, then payed with it until she had made the bulge significantly bigger.\n\nI thought the girls would be the ones embarrassed to be seen in public being affectionate with someone as old as me. But Amy was simply shameless. The table cloth only draped half way down to the floor; not really enough to completely disguise her actions. I don't think she cared in the slightest.\n\nIn a way it was wonderful to see Amy so confident and self-assured. In so many ways I loved to see this new Amy emerge from her previous cacoon so completely. Maybe it was the way she's been ever since our relationship first developed and she cast off the shackles Frank had put on her, but in the close confines of the yacht there was no room for her to publicly display that. The confidence with which she displayed and exploited to her advantage the raw sexuality nature had vested in her might not get the approval of feminists, but it gave me confidence she had a bright future ahead in getting the relationships she wanted instead of having them come to her as a default position; although my one reservation with that was the sense that maybe I was actually a default lover - the best available for the time being.\n\nEventually I overcame my own reservations, slipped off my deck shoe and slipped my foot between Amy's thighs; pushing the loose folds of her dress deeply into her crotch and wiggling it about where I thought it might have a pleasurable effect on her. It must have worked because I watched with delight as her nipples hardened into jutting peaks; one pushing out the material of her dress, the other still clearly visible to me.\n\nLunch was soon over and we ambled arm in arm back out to reception where the poor young man on reception drooled and stuttered some more while Amy collected the room key from him and got directions to the room.\n\nAs we walked hand in hand out along the overwater board walk to our bangalow room that stood on pylons over the water, Amy warped my arm in both of hers and brought it against the centre of her body where the back of my hand rubbed firmly against her mound with every step.\n\nI swiped the key card against the door sensor and opened it to reveal our love next.\n\nStill hand in hand, we look around the bangalow, admiring the tropical casualness of it and the king sized bed, then walking out onto the deck to look down into the sparkling clear lagoon waters. The deck itself had no railing and a metal ladder to let you climb back onto it from the lagoon. Clearly it was intended for swimming from.\n\nInnocently, I ask...\n\n\"Fancy a swim?\"\n\n\"Sure.\"\n\nWe walked back inside to unpack our swimwear. I pulled mine and both the bikinis Amy had packed out of the backpack and put them on the dressing table. Then I turned back towards Amy to start undressing.\n\n\"Will you undo my sandal strap please?\"\n\nAmy thrust her right foot forward. I wasn't sure why she needed me to do that, after all, she'd managed to slip it off without undoing the buckle in the restaurant. Ever compliant I bent down to it. Immediately she threw the voluminous folds of her skirt over my head, capturing me within them alongside her shapely bare legs. Bemused, I ran my hand slowly up her outthrust right leg, my eyes following my hand's progress, until I discovered just before my hand did that she wasn't wearing any panties; her delightful mound invitingly bare.\n\nI ran my hand up to the top of her thigh, letting my thumb glide across the top of the full length of her crease without penetrating into it.\n\n\"Hmmm, that's nice Ned. I hope you're in the mood to do what I'd like you to do.\"\n\nShe brought both feet back into line, spaced half a metre apart. I separated the lips of her crease with my fingers and slipped my tongue against her clit. The playing with her over lunch had more than a little effect even after the walk back to the room; she was moist and swollen.\n\n\"Is that it?\"\n\nThere's something slightly bizarre and discombobulating about conversing with someone, while your total view of the world is of the naked lower part of their body. Amy's knees bent slightly as she moaned in pleasure...\n\n\"Oohh, yes.\"\n\nI put one hand around her naked butt to hold it towards me, while I pushed the other up inside the bodice of her dress until I found the triangle covering her right breast and within it her already firm nipple; tweaking it as I started to tongue her clit more vigorously. I was bemused by what must be her view from above; a barely perceptible bulge in her skirt with a hand emerging from inside her dress and attacking her breast.\n\n\"Oh my god Ned, that's beautiful.\"\n\nShe was squirming around in pleasure, with only the hand I had on her butt letting me keep in contact with her. As her honey started flowing more copiously, I took bigger licks through her crease, slurping it up and washing it against her sensitive bud.\n\n\"Ooohhh...oohh Ned...yes...oooohhh please...there...more...ooohhh.\"\n\nThe rising symphony of Amy's increasing arousal had started in earnest. As her body adjusted to being stimulated it seemed her expression of it moved from squirming about to something more vocal. With her thighs now simply tensed, I risked moving the hand I previously had around her butt to let me finger her.\n\nPushing two fingers into her dripping wet sex, I pushed them firmly against the area where I knew her g spot lay. She moaned and cried out a little louder, wrapping the skirt of her dress around the back of my head as she cupped it with her hand. As she started squirming again, my only available response was to push more firmly onto the front wall of her hole to try and keep her pressed against my tongue; which simply intensified the stimulation of her g spot.\n\nBy now, she was moaning and crying out loudly enough to be heard outside the bungalow. And yet, to ask her to quieten down from under her dress would have spoilt the moment. Anyhow, it was probably too late for that.\n\n\"Oh god Ned...that's it...ooohhh yes...oohh my god...oh fuck...oh shit...aaaahhhhhhhhhh...\"\n\nAs she came, she tensed her body as if she was trying to crush the fingers I had up her sex and suffocate me in the crease of her mound. But this was only the first act in a multi-act play. I let the first wave of her climax pass before I took my next move. My own erection had been bent uncomfortably in my shorts as I'd squatted on the floor between her legs. It was time to unleash its desires.\n\nAs I stood up, I simply brought the dress with me, having it over the top of her head and Amy stripped naked but for her sandals in an instant. While I pulled my polo short over my head, Amy fumbled with the buttons on the waistband of my pants, opening it, pulling down the front of my underwear and releasing my raging manhood to be wrapped up momentarily into the grasp of her hand.\n\nI ripped my pants down my legs and pulled off my shoes in one movement, taking a moment to pull Amy's sandals off as I worshipped her mound with a final kiss. With our bodies freed from all the constraints of clothing, I stood up and embraced her nakedness in my arms, pressing myself against her, her breasts against my chest, as I backed her up against the bed.\n\nEasing my knees onto the crisp hotel sheets of bed and without reducing the intimacy of our embrace, I dragged Amy onto to it, easing her glorious body down onto the soft mattress with me half on top of her. Anxiously, my shaft slipped between her thighs and found her crease; a surge letting the tip run through the floor of it until it located the radiating, wet, warmth of her ready snatch. With a single, slow thrust, the full length of the sensitive, hardened flesh of my manhood separated her velvety folds and buried itself completely in her body.\n\nA sigh gave inadequate voice to the pleasure I felt at the close embrace of my shaft within such beauty. I savoured the press of the full length of her soft, feminine flesh against me; our legs intertwined, our arms wrapped in knots around each other. \n\nThe intimacy between us was intense. My erection surged as I simply held it pushed hard but unmovingly within her. Instead it was our bodies which we rubbed together. She squirmed under me in provocative, sensuous delight as I brushed my chest from side to side across her breasts, capped as they were by jutting nipples that bent to my movement like palm trees in a cyclone. \n\nWith my head buried into the side of her neck, I tasted the salt tinged flavour of her smooth olive skin and twisted my eyes to watch the movement of those glorious orbs against my chest. She wrapped her arm around my head and repeatedly kissed my cheek as she whispered sweet words of love into my ear.\n\nThe passion was overwhelming. In measured steps our lips found each other's and Amy thrust her tongue into my mouth while pushing her mound ever more firmly against my pubis. In the sexual excitement of the moment, my cock seemed to grow ever harder and find millimetres of extra length until I thought it would burst, even as it seemed to desire to reach out to her cervix and penetrate into her very uterus. \n\nStill our bodies moved against each other, squirming, almost wrestling; making me burn with desire for this beautiful woman. I put an arm around the small of her back, pulling her even closer into me. It was as though, if we tried hard enough, our two bodies and spirits would merge to become one.\n\nAmy was moaning into my mouth as we kissed, her mound grinding against my pubis and her nipples against my chest, as she wriggled and thrashed about in erotic ecstasy. You could feel the sexual tension building within her, transmitting itself through her whole body and radiating out through her hot, delicate flesh to penetrate into the very pores of my skin. Her movements grew more urgent, more desperate as a tautness permeated her whole body. I could barely hold onto her, even if it seemed like every square millimetre of the front of our bodies was in such intimate contact that we had become one.\n\nHer climax burst with a loud grunt...and then another...before transmogrifying into a cry that must have been heard three bungalows away. At first she tensed up; almost crushing my cock within her and my balls where they lay between her legs. But, even as she continued to moan, she threw her hips towards me, half withdrawing my shaft and then crashing it back into her. Once, twice and then a third time she did it, before rolling completely onto her back and dragging me over on top of her, still thrusting her hips at me.\n\nThe message was clear. Ignore the orgasmic spasms wracking her body and the contractions pressing upon my shaft. Go for it. \n\nAll the thrashing about against her glorious female body had left my shaft with not an ounce of extra hardness or length still to give. It was primed, ready and aching to be used.\n\nHer first thrusts had sensitized it to the extreme. As she rolled onto her back and me on top, my swollen cock took control, short circuited my brain's control of my thighs and caused them to contract and expand to pummel Amy's sex. There was no time for me to straighten out my arms and arch my back to look down on her rag-dolling figure. This was sex at its most primeval. Hot, dirty, desperate. Bodies in full intimate contact, abandoned by the mind to seek their ultimate pleasure in another.\n\nI had my head buried in the nape of her neck from where I could look down and see her breasts rolling up and down with the movement of my body; one moment her jutting nipples exposed, the next submerged back under my chest. \n\nAmy had her arms around me, nearly choking me with the neediness of her hold. She was still squirming, wriggling and thrusting her hips up at me and moaning louder than was desirable in a crowded resort; whether in the throes of a new orgasm or the continuing of the old one was always impossible to tell with her. My shaft seemed to fill her. It wasn't being squeezed by her tight sex like Tash's did, but felt as if it had expanded to the welcoming embrace of her body and then expanded some more so that every thrust had to cast aside anew those warm, slippery, velvety folds of her wondrous snatch before my pubis crashed back against her mound.\n\nWith sex this intense I was never likely to last long and it was soon clear I wouldn't. My balls started to boil and my shaft heated up with every thrust sending slivers of potent pleasure shooting through my brain.\n\nI groaned loudly and buried my face in the mattress as the first rope of cum blasted itself against Amy's cervix; my shaft buried to the max and broadcasting jets of ecstasy through my body. I held it there, groaning even more, as a second rope, then a third flooded her sex with my cum. For a moment I was left panting against her neck, before it felt like my balls were trying to wring every last drop of cum out of them to impregnate the fecund beauty under me; shuddering through a series of little after thrusts that triggered a continuing run of powerful mini-climaxes.\n\nFinally the extreme passion had burnt itself out. Endorphins and oxytocins still flooded my body but the centre of attention had moved from my cock to my brain; feelings of love and tenderness towards Amy overwhelming my thoughts. Still I lay on top of her, unwilling to break the wondrous contact between our bodies.\n\nA minute passed, then several. As Amy ran her hand lovingly through my hair I willed my cock to hang onto its erection; to stay within her and keep us bound together. Her neck was steaming up with the hotness of my still heavily taken breath. Impulsively I slipped a hand between our bodies and cupped her breast; enjoying the feeling of her hard nipple pushing into my palm.\n\n\"Ned. That was beautiful.\"\n\n\"I'm the one who should be telling you that.\"\n\n\"It's still hard. Does that mean it wants some more?\"\n\n\"Amy, when I'm with you it always wants more. But I don't think it's going to be able to deliver any for a while.\"\n\n\"Want to jump in for that swim then?\"\n\nFrankly, while I was still hard and inside her and I was this physically close to her, I didn't want to go anywhere. But we were certainly hot and sweaty. We needed something before we went back and mixed with other resort guests.\n\n\"Soon.\"\n\n\"Are you game to streak across the deck and jump in naked?\"\n\n\"Who's in a naughty mood then?\"\n\n\"Let whoever doesn't have their cock lustfully up the duff of a sweet, innocent young girl half their age cast the first stone. Not.\"\n\n\"If I offer any rebuttal or comeback on that I'm just going to dig my hole deeper, aren't I?\"\n\n\"Yep, don't even try. So are you up for it?\"\n\n\"I was up, but it's going down. I think swimwear might be in order. Many years ago I was anchored with my family at a popular spot on Sydney Harbour when a young guy, on a motor cruiser anchored next to us, took a beautiful young woman in a tiny yellow bikini into the cabin. Five minutes later he streaked through the cockpit and dived into the water naked. Trouble was, streaking naked into the water was the easy bit. Getting out in front of all those people whose attention he'd attracted was the hard bit. After fluffing about trying to build up courage, he had to call out to his girlfriend to bring his swimwear out.\"\n\n\"So, he's the one who did the streaking, but you can describe the woman in exquisite detail. I don't suppose you can even tell me what type of swimwear he had on?\"\n\n\"No. But you can see the moral of the story.\"\n\n\"Yep, if you're only good for five minutes with a girl, don't make it so obvious to everyone around you. I think I'm going to have to make a run for the bathroom. You're coming out and we're about to make a mess.\"\n\nI rolled off Amy and she put her hand between her legs and dashed for the bathroom. A swim off the balcony would be nice, but it was time to put on my swimmers."
    ],
    "authorname": "Joanmcarthy",
    "tags": [
        "group",
        "group sex"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/unexpected-threesome-ch-22"
}