{
    "title": "Big Dick Diplomacy Ch. 10",
    "pages": [
        "Big Dick Diplomacy -- Chapter 10\n\n*****\n\nAfter the midnight encounter with Danielle Houston, Tom almost expected the fallout from it to land in front of him at any time. Not only was her husband (and party chairman) aware of their illicit engagement, but there was also supposedly proof in the form of a picture of Danielle's cum covered face next to Tom's presidential lapel pin. No more damning evidence was needed to bury him if someone was so inclined. \n\nBut as late summer melted into early fall, not a single word was leaked about the affair to any media outlet. While Elias was still the grudging partner that he always was, at least he was helping with the campaign's finances as they hurtled ever closer to November.\n\nThe problem was that Tom's prospects weren't looking any better. The polls still had him down substantially to Governor Norwood. The man was using his newfound popularity to the fullest, often taking the time to appear on talk shows around the country. For many Americans, Norwood's best asset was his many years of political experience, an area that Tom just couldn't measure up.\n\nAfter all, the hunt for the terrorist, Mohammad Kurzon, was still on. Two new videos had been released in the past month promising a devastating attack against Americans on their own soil. There were many in the country that felt the volatile times needed a more capable hand, and that was but one of the many reasons why Tom was constantly playing defense.\n\nStorm clouds were starting to gather overhead\u2014not just for Tom's campaign but for the country at large.\n\nThe only positive spot of sunshine that he could rely on was Aubrey's presence by his side. Despite the recent turmoil, she was someone that could always take away the negatives and help him focus on the bigger picture. There was something else about her, a unique quality that made her just so damn fun to be around, even when they weren't having sex (which they did plenty).\n\nThe only problem with Aubrey was the love thing. Recently, she'd started telling him that she loved him which in itself was something that was entirely beautiful and something that he treasured. She knew his faults, knew him on a personal level that few could match, and the fact that she still loved him for it meant that she was a special person that didn't come around too often. \n\nThe issue was that he hadn't reciprocated those feelings back to her. It wasn't on purpose, as he didn't want to hurt someone who had become so important in his life. He just . . . didn't know how he truly felt. It had been a long time since he last loved someone in that kind of way. Frankly, the vulnerability of all of it frightened him. \n\nAubrey was being so trusting to give her heart to him. \n\nWas he really ready to do the same?\n\nThat was illustrated that morning as the couple prepared to start the day. It was early still, with the sun only barely making it above the horizon. The two of them were eating a small breakfast in one of the dining rooms of the White House. Aubrey had spent the night, like she did most nights, and soon she would be off to work at her new job ever since quitting the internship. \n\nIt was also a morning when she decided to open up a can of worms.\n\n\"You know, I've been thinking,\" she said after a small sip of her coffee.\n\nTom stopped eating his bagel in mid-bite. He looked at her, choosing to start the day off playfully.\n\n\"Well, this should be interesting,\" he teased.\n\nShe continued on without acknowledging the joke. \"Yesterday, on my way home from work, I was accosted yet again by another reporter trying to find out what we are to each other.\"\n\nTom ate the bite he'd been hesitating on and swallowed it quickly. \"What we are?\"\n\nAubrey nodded. \"Yeah, like are we official or not? You know how badly the media is trying to spin this as us being in a relationship. I mean, I think that we are. I'm treating this like one. But we don't call it anything special. We haven't really acknowledged that it's official.\"\n\nTom took it all in while choosing his next words wisely. \"So is that your stance then? This is official?\"\n\nShe smiled. \"I mean, I believe that to be the case. But it takes two to get there. I've been thinking a lot about it recently, and I wanted to know your answer. Are we official? Are we officially in a relationship and not just dating anymore?\"\n\nTom ate another bite, pretending to deliberate on the answer a lot longer than necessary. \"That's a tough one.\"\n\nShe grimaced and playfully struck his stomach. \"Don't be rude now!\"\n\nTom started to laugh. \"I'm just having some fun with you.\"\n\nShe raised an eyebrow. \"I thought we had all of our fun in the shower this morning.\"\n\nTom bit his lip, remembering the way he had her pressed against the shower wall as they had sex. It was a fun position from the way the spray from the nozzle was able to coat both of them at the same time, and he mentally filed it as one to try again soon.\n\n\"Not enough fun apparently,\" he muttered as he pulled her into his arms.\n\nShe didn't answer but she searched his gaze for several moments. It was a look that he recognized, one that was vulnerable and aching for an answer. He decided to stop teasing her at that moment.\n\n\"I think you're right about us,\" he said quietly. \"I think we're official.\"\n\nAubrey lit up with the brightest smile. \"You really mean it?\"\n\nHe nodded. \"I do.\"\n\nShe leaned in and kissed him furiously. \"So I can finally tell people that I'm your girlfriend? Your exclusive girlfriend?\"\n\nTom nearly choked on air when she said exclusive. She noticed his reaction and the smile dropped slightly from her face.\n\nThat was another area of conversation they hadn't covered yet. Tom had told her about the occasional need to have sex with other women as part of his presidency. She hadn't taken it so well in the beginning, but she seemed to relent when it came to Danielle Houston and what needed to be done to keep his campaign alive. It was a gray area of their relationship\u2014one that didn't have many boundaries or much discussion at all.\n\n\"About that exclusive part,\" he said before she raised her fingers to his lips.\n\n\"I don't want you to finish that sentence,\" she said. \n\n\"I don't really want to finish it either,\" he admitted. \"But it's something we should talk about.\"\n\nAubrey let out a low sigh. \"What's to talk about? Your job requires you to go above and beyond sometimes.\"\n\n\"Above and beyond is an interesting way to put it,\" he added.\n\nAubrey shrugged. \"It's the way I choose to look at it. It helps me process it. After all, I'd have a hard time processing what happened with Danielle Houston any other way.\" She stopped for a moment and sought out his eyes. \"It did happen with her, didn't it?\"\n\nTom nodded. \"It did.\"\n\n\"That's what I thought,\" said Aubrey as she chewed on her bottom lip. \"I mean, I thought you did but we just didn't talk about it. I figured it happened.\"\n\n\"It happened once and it had a good outcome for us,\" said Tom. \"It kept the campaign alive.\"\n\nAubrey nodded again. \"I get it, I think. I don't particularly care for it, but as long as it's just sex without feelings attached, I can accept it. That's all it is, right?\"\n\nTom nodded quickly. \"That's all it is,\" he confirmed. \"What I do with these other women is just sex. What I do with you is different. It means something.\"\n\nHer cool exterior started to melt. She smiled again. \"What does it mean?\"\n\nTom chuckled and kissed her on the nose. \"That we care about each other.\"\n\n\"That we do,\" she said with a small giggle. \"I care about you greatly. I love you, Tom.\"\n\nHe'd never found saying three simple words so hard to do. Despite the fact that Aubrey was so amazing, he just couldn't say them just yet. He knew that part of him was waiting to see how they settled the sex question but with her acceptance of it, he knew that was no longer an issue. So why was it so hard for him? In fact, he'd rather stare down President Feng Jin of China right now instead of confronting the way he felt about Aubrey.\n\nSo what was stopping him?\n\nAubrey buried her face against his shoulder. It was a move he'd recognized before, something that she did to take the pressure off him from repeating the words back to her. She didn't want to watch his face while he struggled with it, no doubt a source of stress for her. Tom hugged her tightly while his inner conscience wondered if he was truly in love with her.\n\nThe moment passed them quickly and Aubrey seemed to recover her earlier cheerfulness. \n\n\"See you for dinner tonight?\" she asked as she grabbed her purse.\n\n\"Of course.\"\n\nTom kissed her soundly before she was gone, allowing him a moment to reflect on what just happened. He had the love of a beautiful woman who not only knew about him having to fuck other women, but gave her tacit permission to keep doing it. Most men would acknowledge that as being quite the gift.\n\nHe just wished it didn't make him feel so damn guilty.\n\nTom was still struggling with that guilt as he arrived in the oval office carrying a mug of coffee. What should have been a quiet morning was interrupted from the start by the immediate appearance of his National Security Advisor, Ryan Douglas. Ryan was carrying a thick folder and looked like the cat that caught the canary.\n\n\"I didn't expect to see you so early,\" said Tom as he moved closer to his desk.\n\n\"Trust me, I have good news for once,\" replied Ryan as he waved the folder. \"Guess who just caught Mohammad Kurzon's second courier?\"\n\nTom stopped walking and stared at the other man. They'd been searching for the second courier ever since they found the first one. Kurzon used the couriers to deliver news, plans, and any messages of importance between the two cells of his terrorist network. In short, finding the second courier was the final step in finding Kurzon himself.\n\n\"Where was he found?\" asked Tom. \"Is he in our custody?\"\n\n\"The Turks picked him up,\" replied Ryan. \"He almost made it to the Syrian border. Unfortunately for him, he was put in the back of a truck and hidden within a wooden crate of assault rifles that were being delivered to Syrian rebels. The truck was stopped and searched. Not only is weapon running highly illegal during a civil war but finding the courier was like the cherry on top of the whole ordeal.\"\n\n\"I'll say. So how long ago was this?\" asked Tom. \"And what are the Turks doing with him? Do we have any people there?\"\n\nRyan winced. \"It was only a few hours ago but so far the Turks are playing hardball with him. They aren't willing to give him up to our people since he was caught on Turkish territory. It was the same situation with the last courier.\"\n\n\"Yeah, and they drove the last courier mad because they were too intense with their interrogation methods,\" muttered Tom quietly. \"We don't have any other options unless Kurzon starts hiring new couriers, and he'll have struck by the time he gets to that point. We have to get our hands on that courier.\"\n\n\"How do you want to do that, sir? You know how the Turks can be. About the only way we can get them to relent on this subject is if you fly there yourself.\"\n\nTom immediately gestured toward the door. \"Then let's do it.\"\n\n\"Sir?\"\n\n\"I mean it, Ryan. We need to get our hands on that courier. It's the only way we can have a real chance at stopping Kurzon. You've seen all the videos that Kurzon has released. He's going to strike soon. American lives are at risk, so if I have to fly halfway around the world to prevent it, then I'll do so.\"\n\nRyan looked like he wasn't sure if Tom was joking or if he should make a call to get Air Force One fueled and ready to depart. Going to Turkey certainly wasn't in Tom's plans, and it would require many things to be rescheduled (in particular, his call with his friend, Lucy, which still hadn't happened yet) but Tom was determined to get a jump on Kurzon.\n\nIt only took about two hours to get the wheels in motion on Tom's suggestion. He made a quick call to Aubrey to explain the situation and that he would be home in a few days. It would be the first time he was gone for an extended period without her, and he disliked having to go back to sleeping by himself. This had to be done though. He would fly to wherever necessary to stop a terrorist before he struck again.\n\nTom watched from the cabin of Air Force One as they pushed off the ground and soon turned to fly over Washington. In a matter of minutes, they were over the ocean to begin the long flight to Turkey.\n\nIt took about twelve hours to make the flight to the Turkish capital city of Ankara, all the while diplomatic cables were exchanged with the Turkish government in preparation for his arrival. Tom arrived closer to midnight in Eastern time but in Turkey, it was already morning. He took a nap to ward off the jet lag and then was immediately sent to meet with their government.\n\nThe ride to the center of power was an interesting one. The city of Ankara was split into two distinct parts\u2014reflective of its long history and changing allegiances. The older part of the city had a clearly eastern blend to the architecture, with many mixtures of Greek building styles. The mosques themselves were made with marble. Residential homes still shouldered the distinctive Mediterranean style roofs. This part of the city seemed to be a perfect blend of east and west.\n\nThe other part of Ankara was the more modern part, where steel and glass were used in equal amounts to give the city an appearance that would fit in just about any place in North America. Skyscrapers were common, glimmering in the early morning lights. There was even a modernist approach to this architecture, amazing Tom at some of the designs of the buildings to be seen within the city.\n\nFinally, they came into the Presidential Complex itself, the seat of all power in Turkey. It was an elaborate structure, known colloquially as \"Versailles\" for its appearance and concentration of ability. There were three distinct buildings, facing south, east, and west with a stunning courtyard in the middle dominated by a long and splendid fountain. \n\nTom went through the usual pleasantries of a foreign head of office, but the person he was looking forward to meeting the most wasn't the Turkish President. Despite being the formal head of state of the government, it was widely known that the Turkish President was infirm and quickly approaching senility. He'd retained the position out of respect for his past when he was a much more virile and passionate man. Time had slowed his movements, and these days, he was usually sidelined for public appearances while his deputies took over the day-to-day running of the state.\n\nThat meant the person that Tom would be seeing was the de facto second-in-command. The Turkish Minister of Foreign Affairs was technically fifth on the list of seniority within the government, but all power had concentrated in their able hands for the running of the country. \n\nIt just so happened that this particular minister was a woman.\n\nZera Varank was a ruthless operator known to just about everyone in Turkey as someone not to be trifled with. She was a woman who'd worked her way to the top in her twenty years in the Turkish government, starting off as an embassy clerk until becoming the Minister of Foreign Affairs two years prior. She was widely seen as being next in line to take over the presidency once the old man actually croaked, and it was for that reason that anyone of importance that came to Turkey met with her first.\n\nAs Tom walked toward her, he couldn't help but reflect on how she looked like anything but a politician. Zera was a powerfully built woman with broad shoulders and a thick waist. Normally, these qualities might instill a certain masculinity to women who held them but that wasn't the case for Zera. Despite her broad shoulders, she still had prominent breasts that hinted at her femininity. Her thick waist was all bone, and when viewed from the side, showed no hint of fat or unwanted excesses. \n\nThe rest of her was equally as pleasant to look at as well. Her face had the same blend in east and west as did the rest of the city. Her skin was porcelain white and beautiful but her eastern features added in the rest of the color. Her hair was thick and dark, starting at the top of her head and moving down to her shoulders. She had thick, long eyebrows that were held aloft dark piercing eyes. Her lips were thin but ruby, and her nose could be adequately described as being of the button variety.\n\nIn short, Zera was a woman of a distinct mixture, and she perfectly represented her homeland in appearance.\n\n\"Mr. President, so nice to meet you on such short notice,\" replied Zera, her English thick with accent but still pleasing to the ears in its musical quality.\n\n\"And I thank you for your hospitality at a time like this,\" replied Tom as he shook her hand. He marveled at the strength in her grip. It was not a dainty one like those of most women.\n\nShe showed him into her office in the secondary building that faced east. This was where all the cabinet ministers worked, a clear separation from the other two buildings that housed the president and the legislative bodies, respectively. Zera's office was minimalist in appearance as most of the decoration was centered on the large bay window behind her desk that showed off the modern aspect of Ankara. \n\nZera was also a woman who didn't mess around with small talk.\n\n\"You're here about the courier,\" she stated plainly once they were seated. It was a statement more than it was a question. \n\nTom nodded. He found it refreshing to tackle the subject head-on rather than engage in the verbal dueling that typically happened at these affairs.\n\n\"We are,\" he replied. \"I understand your men have him and I want him. Stopping Mohammad Kurzon from striking again is a high priority in my administration. We have reason to believe that he's going to up the ante on his next attack and strike American soil directly. I cannot allow this to happen.\"\n\n\"Because it might jeopardize your reelection?\" she asked with a raised eyebrow. \"A terrorist attack right before your people go to the polls would surely hurt your chances of retaining the presidency, no?\"\n\n\"Even if I was a lame duck president, I would still hold this as my top priority,\" said Tom. \"There are many things that are above the need to get reelected.\"\n\nZera smiled, a lovely gesture that didn't match the words that came out of her mouth. \"So you say. We have a much more practical way of looking at elections in Turkey.\"\n\n\"And that is?\"\n\n\"That every advantage is used to stay in power,\" she said simply as if there was nothing more evident in the world. \"An attack like that could be a powerful tool to discredit my enemies if it were held in Turkey.\"\n\nTom glowered at her. \"We aren't so haphazard when it comes to American lives.\"\n\nShe smiled again. \"No, but I suppose that's the difference between your people and mine.\"\n\nTom studied her face for several moments without offering a response. He could see now why she was near the pinnacle of power in this country. With only a few simple statements, Zera had cemented her ruthless reputation. Her suggestion would set the tone for the rest of their conversation.\n\n\"The answer is no.\"\n\nTom blinked and looked back in her direction. Getting out of his mind, his eyebrows tightened as he asked the only thing he could think of at that moment. \"I beg your pardon?\"\n\nZera separated her hands. \"I won't release the courier to you. My people were the ones to capture him and bring him in. We'll also be the ones to interrogate him and glean the last bits of information he has to offer. My people, Mr. President. I appreciate the time that you spent flying to Turkey, but my answer won't change.\"\n\nRuthless indeed.\n\n\"What is your reasoning for it?\" Tom asked. \"My men are better funded, trained, and have better resources. We could surely get any information he has to give a lot more quickly.\"",
        "Zera shrugged. \"No doubt you are true in that suggestion but this has more to do with national image.\"\n\n\"National image?\" he repeated. \"In what way?\"\n\nZera separated her powerful hands. \"It's not hard to see, Mr. President. Turkey is part of the Islamic world, but she is an outlier. Her closeness to Europe has always meant two things. One, that she is a mixture of the two cultures and two, that she gets yanked between both worlds. The average Turk is a deeply religious and conservative man. He favors his Muslim brothers in Syria and Iran more so than he enjoys the culture that flows in from France or Germany. For that reason, he holds a tenuous position in the Muslim world.\"\n\n\"Tenuous? How so?\"\n\nZera smiled again. \"Because as a deeply conservative Muslim, he doesn't like the attitudes that come in from the rest of Europe. He doesn't like Europe's subservience to America and thinks it a blight on the world. He resents that Turkey is closer to America and Europe than any other Islamic entity and it bothers him. In no way shape or form does he want to be seen as kowtowing to the Americans.\"\n\n\"How would this be kowtowing?\" asked Tom. \"Kurzon has killed Turks as well as Americans. This is about stopping a terrorist.\"\n\n\"This is about image, like all things in politics,\" replied Zera. \"Turkey already gets enough flak from the Islamic community for being American lapdogs thanks to NATO. My party appeals to the common Turk\u2014one who wants a separate path from the decadence of the West. One that wants to appeal to its religious roots. For that reason, I can't be seen bowing to your demands. It would be a total surrender of the basis of my power. I won't do that, Mr. President.\"\n\nTom's expression hardened. \"You'd rather let innocent people die than to appear weak?\"\n\nZera closed her hands. \"It seems our discussion has come full circle now, no?\"\n\nTom struggled for a response. It was hard to see how cruel this woman could be, especially one that was so beautiful. It was clear that Zera Varank was a woman who'd been so molded by politics that she was nothing more than an empty vessel now. One that thought only in terms of power. She was the equivalent of a junkie\u2014one that only thought of her next fix (in her case, her next election).\n\n\"Since we aren't going to compromise, I think it would be best for us to find common ground elsewhere,\" she continued after a short pause. \"After all, I'd like for your trip here to not have been in vain.\"\n\n\"You're aware of what can happen to those that deny the requests of a sitting president?\" asked Tom, using a threat he hated to rely on. \"I'm not only the commander-in-chief of the most powerful country in the world, but I hold all the cards that could make life miserable for you. I need but say the world and I can start an economic depression in Turkey this very week. It would be . . . unwise to go against any negotiations.\"\n\nIt was a speech he'd used before, but mostly to second-rate dictators from the third world who needed reminding who was really at the pinnacle of power. Tom had to wonder if it would work on Zera, one so versed in the lines of politics. \n\nFor once, she wasn't so quick to respond. She regarded him coolly as three of her fingers wiggled against the desk. It was an appraising look but her answer took him by surprise.\n\n\"You and I should see if we can find some common ground together,\" she repeated, using her earlier words. \"Perhaps we can come to some kind of understanding.\"\n\n\"The only understanding I need is the handover of that courier,\" said Tom, remaining firm.\n\nZera smiled, making him uneasy. \"I'm sure we can think of something. This evening, I'll be attending an interesting match here in the capital city. I have room to bring a guest. Seeing as this match is one of the great Turkish pastimes, I'd like to offer you a place by my side and then to dinner afterwards. Let us talk of how we can find common ground together.\"\n\nTom had little idea of what tonight might hold but he thought more time with Zera might allow him the chance to thaw her cool exterior.\n\n\"Have your people give the details to mine,\" said Tom. \"And we shall talk more about this at dinner tonight.\"\n\nThat ended the meeting in a hurry. Zera needed to rush away for another matter while showing Tom to the head of state guest quarters that made up the south end of the building. It gave him more time to reflect on his meeting with her. \n\nNeedless to say, he wasn't happy about what happened. Zera seemed determined not to let her country appear weak to America, a factor that was crucial to her party's continued dominance of the halls of power. But surely, Zera had a weakness somewhere? Beneath that cruel exterior beat the heart of a person. There had to be a way to get her to do as he needed but how? In what way could Zera be bribed or cajoled to handing over the courier?\n\nIt was the question on his mind as he was picked up to go to the match later that evening. The sun had long set over Ankara, and the bright lights of the city still showcased the divide between east and west. Tom mused over his strategy in regards to Zera along the way, determined to try another course throughout the night. \n\nSomething had to work with her. He couldn't let Kurzon win another time. \n\nThis strategy consumed his thoughts until he met with Zera a short while later. The driver of his convoy led Tom to a small stadium on the outskirts of Ankara. It wasn't a large building, and Tom estimated it couldn't hold much more than a few thousand people. Inside though, all the smallness of the stadium disappeared into rapturous furor. \n\nEverywhere that Tom looked, he could only see half-naked men. All of them were dressed (or undressed) in the same fashion. They weren't wearing shirts, all of them showing off their overmuscled chests that were thick with hair. Below the waist, they wore the same kind of leather garment. They reminded Tom of Capri pants that women often wear, being formfitting and ending between the knee and the ankle. \n\nQuite possibly the most shocking scene that occurred was that the men were oiling each other. They would stand in front of another man and use their own hands to run a shiny oil across his body. Tom wondered just where he'd been brought but his curiosity was temporarily satisfied when he heard a familiar voice behind him.\n\n\"Oil wrestling.\"\n\nTom turned to find Zera there wearing that same irritating smile that she wore earlier.\n\n\"Excuse me?\" asked Tom.\n\nShe gestured to the two closest men who were in the process of oiling each other. \"That's what we're here for, Mr. President. This is one of the greatest pastimes of the Turkish people. Right now, these competitors are oiling each other out of a sign of respect for the other's strength.\"\n\nTom looked back over to the men and raised an eyebrow. \"Something tells me this wouldn't really catch on in America.\"\n\nZera actually laughed, a girlish noise that surprised him. Perhaps there really was a woman under all that intrigue and political guile?\n\n\"Perhaps not,\" she agreed. \"Come this way. I'll show you to my box.\"\n\nTom followed her as she led him to the second level where there was a row of private viewing boxes. Along the way, he couldn't help but appreciate her figure. While Zera didn't have the most feminine body, it was still pleasing in a way that he couldn't put his finger on. There was a deep strength in her movements as if she was trying to show off her powerful body but there was also a sensual quality to it as well that he found quite attractive. Perhaps it was the way her boyish hips swayed from side to side as she walked. It could also have been the disarming smile, the one that was quite different from the unamused expression he saw earlier. Whatever it was, Tom wondered what had caused the change in pace.\n\n\"Here's my private viewing booth,\" she announced when they arrived. \"Please have a seat near the railing, Mr. President.\"\n\nThe booth was quite like many suites that one could find at professional American football games. It was closed off from all other occupants by a door and two walls, the remaining side opening up to the wrestling field. There was comfortable seating near the front railing consisting of several recliners parked next to each other from wall to wall. Behind the seating was a private bathroom as well as a galley kitchen where a variety of hors d'oeuvres awaited them. \n\n\"Try not to fill yourself with appetizers,\" said Zera as they walked by the kitchen. \"We'll have a proper Turkish meal tonight.\"\n\n\"I'll have to learn how to control myself then,\" replied Tom, eyeing a meat dish that looked especially savory.\n\nTo his surprise, Zera let out a rich laugh. \"Not too much, I hope.\"\n\nThat was interesting. For the second time in as many minutes, Tom got the impression that she was flirting with him. Was it simply a harmless statement or was there something more behind it? \n\nAnd was there any way that Tom could use it to his advantage?\n\nHe made a small plate of appetizers for himself before sitting down in the recliner next to Zera. From here, he could view the entire grounds of the stadium, where the games were just about to begin.\n\n\"So tell me about oil wrestling,\" he asked. \"I'm afraid I don't know much about the sport.\"\n\n\"A pity then that you don't,\" she replied. \"But it's one of the most popular sports in the country. There's not much difference between this and any other kind of wrestling. The oil that they use is just olive oil. It helps to add a new dimension to the affair.\"\n\n\"Do they always wrestle topless?\"\n\nZera nodded. \"They always do. I find it quite . . . invigorating to watch. These men are always in peak form. Watching their bodies struggle together while one tries to achieve dominance over the other is quite entertaining, especially from a woman's perspective. There is a national championship contest held every year outside of the city of Edirne. It's no coincidence that nine months later, there is usually a spike in births.\"\n\n\"Sort of like a national aphrodisiac?\" asked Tom.\n\nZera grinned. \"In a way. Did you know that I was once an oil wrestler as well?\"\n\n\"Something tells me you made quite the sight down there in the sands wearing nothing but leather trousers,\" replied Tom.\n\nZera wagged her finger. \"You might like to imagine that but the women's leagues wear elastic tops to protect their modesty. Though some women prefer to be treated like men, when you are endowed like I am, it can be quite distracting for the audience.\" To emphasize that point, Zera casually gestured to her breasts.\n\n\"Yes, I can imagine those might divert attention away from the game itself,\" said Tom, playing along.\n\nZera laughed. \"Mr. President, you're too kind.\"\n\nBefore he had a chance to reply, the announcer began to signal the beginning of the matches. The stadium was large enough that several matches could be held at one time, and at the beginning of the games, at least four pairs squared off against each other at any one time.\n\n\"These are just preliminary matches,\" instructed Zera. \"The winners of these will continue to wrestle throughout the night until the top two winners go against each other.\"\n\n\"I take it it's the largest and most muscled men who usually go against each other in the last match?\"\n\nZera shot him a curious look. \"You would be surprised. Quite often, smaller men appear in the final contest. It's not all about size, Mr. President. Speed and agility form a potent variable.\"\n\nTom decided to play along with her earlier flirtation. \"In my experience, size is all that's needed to ensure the right outcome.\"\n\nZera raised an eyebrow, catching his very obvious drift. \"Some men aren't blessed with size.\"\n\n\"And some are.\"\n\nShe smiled. \"I'm beginning to find you more interesting, Mr. President.\"\n\n\"Please, Zera, don't we know each other enough now to dispense with the titles?\" he asked. \"Call me Tom.\"\n\n\"Well, Tom, I find you a much better wrestling partner than my last visitor,\" said Zera. \"You're much better company than the Greek Prime Minister.\"\n\nTom chuckled. \"I won't tell him you said that.\"\n\nZera giggled. \"I appreciate that.\"\n\nThe matches went on for the better part of two hours until the winners match arrived. Like Zera had hinted at, the two men standing at the end weren't the biggest men that Tom might have expected. One was scarcely bigger than Tom but judging by the way his feet moved, his agility was on a level of its own. The other man had powerful shoulders and a thick waist but lacked overall size. It was a toss-up who might come out as victor, but one that Zera felt compelled to bet on.\n\n\"Who's your man?\" she asked, gesturing to the two men as they squared off in front of each other.\n\nTom appraised them both again quickly. \"I like the tiny, fast one. I'm going to put your knowledge to the test and bet on agility.\"\n\nZera grinned. \"Then I'll take the bigger man with shoulders the size of the Alps. What's the wager?\"\n\n\"Is it too late to wager on the courier?\" he asked.\n\nZera let out a subtle tsk-tsk, expressing her displeasure. \"Nice try, Tom.\"\n\n\"I figured it couldn't hurt to ask,\" he replied quickly.\n\n\"How about the winner gets the satisfaction of winning and the chance to ask one favor before the night is over?\" she suggested.\n\nTom pounced on that idea, wondering how broadly she might interpret the favor. \"Deal.\"\n\nThe match didn't go his way from the start. The smaller man was immediately outclassed by his more powerful competitor, and despite his speed, he couldn't stay out of the larger man's grip. It was one of the quickest matches of the night, with the larger man pinning him and winning all within the span of about ninety seconds.\n\nZera crooned happily once the match was a foregone conclusion. \"Looks like I backed the winning man.\"\n\n\"Mm-hmm,\" replied Tom. \"Looks like I've been fed the wrong advice.\"\n\nShe winked at him. \"Maybe you're right about something, Tom. Maybe size really does trump everything else.\"\n\nNow that the matches were over, they departed the stadium before the rest of the crowd, getting into Zera's limousine so it could whisk them away. \n\n\"I hope you don't mind, but I have one of the best private chefs in the world,\" said Zera about two minutes into the ride. \"My house isn't far away and I can promise you a meal that you won't soon forget.\"\n\nThat was the first time that it occurred to Tom that Zera might be more than just talk. Sure, her flirting had been effortless throughout most of the night, but as they shuttled ever closer to her private residence, was this encounter going to continue to escalate? Was he going to put his newfound sexual freedom from Aubrey into motion for the first time?\n\nThey arrived at her residence a short while later and all Tom could do was whistle. It was like a palace of its own. It was far out in the country, away from the city lights, and at three stories high, it dominated the surrounding landscape. Most of it was glass on the front exterior with hidden lights and plants that gave it a very welcoming feel.\n\nThe inside was just as spectacular. Tom was reminded of the fact that Zera was the real power in Turkey, and her residence showcased it in a way that words couldn't. She led him into a private dining hall and instructed him to sit at a table meant for as many as twenty.\n\n\"We can sit closer together for the sake of conversation,\" said Zera. \"Unless you'd like to sit at the opposite end of the table?\"\n\n\"I'll pass on that,\" said Tom. \"I'd rather not have to yell my answers to every question to you.\"\n\nZera smiled. \"I was hoping you'd say that. Dinner shouldn't be long. I called ahead to let them know to start cooking.\"\n\nThat was true enough, and soon an array of servants brought out their meal which consisted of several courses including a rich cream-based soup to start, a meat dish that Zera described as keskek, as well as a final dessert that featured a sweet baklava.\n\n\"My compliments to your chef indeed,\" said Tom as he sat back from the table after the last bite of baklava. \"I'm quite stuffed but even I couldn't say no to another portion of baklava.\"\n\nZera laughed softly. \"My chef knows to bring out his finest dishes when I'm entertaining guests. I'll let him know that he met your approval.\"\n\n\"In all actuality, it's been a wonderful evening,\" he continued. \"A pleasant series of games and terrific food.\"\n\n\"Wonderful company as well,\" added Zera, giving him the trademark smile of hers again.\n\n\"Wonderful company,\" he confirmed, raising his glass to her. \"You surprise me, you know.\"\n\n\"Why is that?\"\n\n\"Because you aren't what you appear,\" continued Tom. \"You tried your best to play big bad politician in your office this morning but that's not really you. The real you is softer and more sensitive than you might expect.\"\n\nZera laughed heartily. \"You've spent one day with me and you think you know me already?\"\n\n\"It's not hard to know when you're paying attention,\" said Tom. \"You can learn a lot about people by watching the way they react to certain stimuli. You can tell what they're thinking by the most minute expressions on their face. You aren't that hard to read, Zera. You like to think of yourself as the power behind the presidency but I think it's a forced act on your part. One that you execute because you feel like it's expected of you, but one that you're not enthusiastic to play for very long.\"\n\nZera raised an eyebrow and let out an uncomfortable laugh. \"You think you see much that's not really there, Tom.\"\n\n\"Do I?\" he asked with a smile. \"It could be that I'm not that far off as it sounds.\"\n\n\"Or it could be that you're extremely far off.\"\n\nTom shrugged. \"I guess time will tell.\"\n\n\"So it will. But if this is your way of trying to worm the courier out of my grasp, it won't work.\" Zera casually sipped her glass of wine. \"He's quite out of reach.\"\n\n\"And here I thought we were actually starting to get to know each other.\"\n\nZera laughed again. \"No amount of knowing will get me to risk my position in this country.\"\n\n\"What about risking the lives of your countrymen?\" asked Tom. \"Would you not put your neck out a little for them?\"\n\nTom recognized the look that crossed her face. It was her political mask, the same one that he saw this morning in her office. \n\nIt meant that she was expecting a fight and she was determined to get her way.\n\n\"We've been through this already,\" she replied. \"Do you so easily forget our conversation from this morning?\"\n\n\"I thought I might try again once we had a nice evening together,\" said Tom.\n\n\"A nice evening is one thing. A total surrender is another,\" said Zera firmly. \"He's out of your reach. When we break him, we will share the information with you but my men will be the one to do it.\"\n\n\"Then at least let me offer you some of my own,\" insisted Tom. \"My men can help yours.\"\n\n\"Again, the optics of the deal would look bad,\" she replied. \"Accepting American interrogation experts into our own intelligence agency? My rivals would question whether we've become a puppet nation. I can't have that.\"\n\nTom was losing his patience. \"Then what can you have, Zera? I'm getting tired of getting nowhere with you.\"\n\nIt was a frank, but an honest admission. It also shocked her. Zera's eyes widened and her thin lips parted into an oval shape. Tom guessed she wasn't used to being talked to in that manner. No doubt that in this country, even her rivals had learned to offer her a degree of subservience.\n\n\"Will you not let this go?\" she asked finally in a calm and quiet voice.\n\n\"I will not,\" he insisted. \"It's too important.\"\n\nZera clicked her tongue with the rest of her mouth. The noise produced was loud enough to echo across the dining room. It was the act of someone who was about to put out an important wager, but also of one trying to find the courage to do so. Tom recognized the expression immediately and waited for the words to tumble from her mouth.",
        "\"So how about if I call in my favor from earlier?\" she asked, moving tentatively on shaky ground. \"The favor I get from picking the right man from the match?\" \n\n\"And what would you call in with it?\" asked Tom. \"Because if you ask me to drop it, I'm afraid your favor isn't going to be honored.\"\n\nZera shook her head. \"My favor is to ask you to indulge me right now.\"\n\n\"Indulge you? In what?\"\n\nZera gulped heavily. \"In a match of our own.\"\n\nTom wasn't sure he was understanding. \"A match at what?\"\n\nShe met his eyes fearlessly. \"An oil wrestling match.\"\n\nTom's mouth dropped. \"Excuse me?\"\n\nHer eyes narrowed as if he didn't think it was a serious request. \"I told you I used to wrestle in my youth. I took down my share of boys at the time. So I'll make you an offer you'll never receive again. A wrestling match between you and me in the Turkish style. If I win, you don't mention the courier again until my people break him.\"\n\n\"And if I win, you'll release him to my custody?\" asked Tom.\n\nZera flinched. \"Then we'll talk about an accommodation that we can both live with.\"\n\n\"No, no,\" said Tom with a firm shake of the head. \"I need to hear the words. An accommodation can mean many things. I need your word that you're going to release him to my custody.\"\n\n\"Does that mean you're considering this?\" she quipped. \"Will you give it a shot?\"\n\n\"I'm not there yet,\" said Tom. \"But what I do know is that if this is going to be the prize, then we need to set clear terms. I need to know what I'm working for. Is this the only way you'll surrender the courier?\"\n\nZera nodded without saying anything further.\n\nTom let out a deep breath. Oil wrestling? With Zera?! It was a proposal straight out of a zany porn film. Here he was, a sitting president and he was considering a half naked contest with another sitting minister from a foreign government.\n\nHow did this become his life?\n\n\"If you're thinking whether this will be too easy for you, might I remind you that I'm not some dainty woman,\" said Zera suddenly, looking at him with an intense gaze. \"My body is powerful where it counts.\"\n\n\"I have no doubt about that Zera,\" said Tom, remembering the way her body filled out her outfits. \"I'm just questioning whether I'm really prepared to do this.\"\n\nShe shrugged. \"You're the one that would do anything to put his hands on the courier. I'm giving you that out right now.\"\n\n\"Yeah, but wrestling?\" asked Tom. \"What's in this for you? What do you get out of this?\"\n\nZera's tongue flickered out and ran over her upper lip. \"Like I've told you already, I used to do this when I was younger. I was quite good at it. I'm one of the only women in the country who've been able to best boys my own age. I want to see if I still have it. I want to make sure I'm still the formidable opponent that I used to be. This is about pride for me.\"\n\nSo it was about pride for her and getting the courier for him. Which was more important? Which was worth more? Tom couldn't guess which had greater value to the respective party. He did know one thing though.\n\nHe couldn't let Kurzon strike again.\n\n\"As much as I don't like it, I'll accept your bargain,\" said Tom as he offered his hand out. \n\nZera let out a thin smile and took his hand. \"This is going to be interesting. I'm looking forward to testing out your technique.\"\n\nThere it was again. The subtle flirtation. Despite this being the most ridiculous proposal he'd accepted recently, he found himself looking forward to the affair. After all, who wouldn't turn down an oily wrestling match with a woman that looked as sexy as Zera? It might be a secret thrill after all.\n\n\"I have a small gym on the bottom floor of this house,\" said Zera. \"Meet me there in five minutes, all right?\"\n\nTom nodded as she stood up from the table. She pressed her napkin to her lips and locked eyes with him, presenting a coy target. He could only wonder what she would look like in those tight leather pants that the wrestlers wore. The other part of him got another thrill at seeing her half topless. He could only imagine what the tight top would look like on her heavy breasts.\n\nAfter waiting five excruciating long minutes, Tom made his way to the basement with the help of one of Zera's servants. Her house was outfitted with a circular staircase and he only had to go down one floor until he reached the correct one. \n\nZera's gym could have been commercialized without any issues. There were rows of equipment that could service many people at one time let alone just one. There was even a free weight section, as well as some endurance equipment like a boxing bag. The last part of the gym that was open was a section of black matting, and that was where he found Zera.\n\nTom's eyes bulged at seeing her. \n\nZera not only rocked the leather pants but she seemed bound to wrestle as the men did.\n\nThat meant she wasn't wearing a top.\n\nShe grinned at him as he struggled to avert his eyes at first. \"Do not be embarrassed,\" she said. \"If I'm going to wrestle a man, then I'm going to fight like one. There's no need for such modesty for a simple sporting match.\"\n\nTom allowed himself the opportunity to look with impunity. Zera's breasts were large and proud, showing none of the sag that was typical of women her age. They jutted out from her frame and then came around to form nearly perfect circles, capped only by the sight of extremely brown nipples. Despite it being a sporting match, those nipples were erect, showcasing just enough excitement to attract notice.\n\nZera looked at his clothes. \"These won't do at all. If you go around that wall, you'll find a leather garment of your own. Put it on and come back over.\"\n\nNeedless to say, the leather pants were tight against him. His height meant that his body was naturally bigger but he also found that his excitement at seeing Zera's seminude body was having an effect on his manhood, something that she picked up right away. \n\nShe licked her lips when he reappeared, her gaze lingering on his crotch. \"That is much better,\" she purred. \"I'm sure you'll find the freedom of movement much more . . . invigorating.\"\n\nAbout the only thing that he found invigorating was the opportunity to rub his hardening cock against Zera's body.\n\nShe grabbed a small bottle of olive oil and gently squirted some into her hand. Approaching him, she began to work it into his muscles, taking her time as she oiled his upper body. \n\n\"I mentioned earlier that oiling your opponent is a sign of respect,\" said Zera with a husky voice. \"Respect in your abilities.\"\n\nTom chuckled. \"I may not have much in the way of natural talent when it comes to wrestling.\"\n\nZera giggled. \"No, you may not. But this will be interesting no doubt.\"\n\nOnce she was finished, she handed the bottle to him. The look in her eyes was expectant. She didn't come right out and tell him what to do, but Tom knew it was his turn. The bottle made a noise as he squirted a dollop into his hand.\n\nZera laughed. \"You're going to need more than that to do me. That small amount will only cover my nipple.\"\n\nHe went red in the face for a brief moment until he squirted out another very healthy amount. Rubbing his hands together, he made for her shoulders which was at that moment the safest spot.\n\nZera let out a loud moan of approval. \"That's the spot,\" she purred as her eyes closed. \"More please.\"\n\nHe let his hands drift over her smooth skin. Zera's complexion was wonderfully exotic. The light skin on her face matched the rest of her but the darkness of her nipples hinted at her Turkish ethnicity. Tom skipped over her breasts at first to do her stomach, making Zera laugh once again.\n\n\"You must not forget these,\" she said, making them bounce. \"Or else they might bruise during our match. I can't have that.\"\n\nWith the invitation there, Tom moved both hands up to her breasts and gently coated them. Zera sighed with pleasure once he did, letting her head fall backwards while thrusting her chest firmly against his hand. Her nipples were still erect and he could feel them pressing into the center of his palm. He wondered what it would be like to get his mouth on them.\n\nTom spent a little more time on her breasts before she brought him back to reality.\n\n\"That's very good,\" she said. \"But we can't waste all the oil. Let's get started.\"\n\n\"So how does this begin?\" he asked. \"And what's the objective?\"\n\nZera blinked at him. \"It begins when we're both ready. And the goal is to get your opponent on their back. I'll warn you though\u2014it won't be easy to get me on my back.\"\n\nTom chuckled, not expecting that to be the case anyway. They both crouched at the knees, carefully regarding each other with uneasy suspicion. Tom didn't know much about wrestling but he tried to get his feet in a proper stance to give him balance. He put both hands out and waited for Zera to be ready.\n\n\"Begin,\" she said loudly.\n\nTom understood instantly how seriously Zera took the match. She moved as quick as lightning, much more quickly than he could react. In a blur, she'd hooked her leg behind his and sent him toppling to the ground. Before long, she had her powerful upper body wrapped around his, pinning him to the ground effortlessly.\n\n\"That's probably the quickest point I've ever gotten,\" she bragged into his ear.\n\n\"You move fast,\" said Tom with a pant, still unsure how events had found him on his back with a beautiful and topless Turkish woman pressed against him. He could feel where Zera's hardened nipples were now pressing against his chest. It was a feeling he enjoyed, despite the temporary humiliation of being grounded by a woman.\n\nZera moved off him slowly, but not before dragging her nipples along the rest of his torso. She resumed her stance and waited for him to do the same.\n\nTom found it harder to push off the ground with the slickness of the oil but gradually resumed his stance. This time, he wasn't going to take Zera so casually. She knew how to move quickly, but he still had probably fifty pounds on her. If he could bring his strength to bear, she wouldn't stand a chance with her quickness.\n\nJust like the last match from earlier, it was going to be a battle between size and agility. Tom well remembered how that matchup ended.\n\n\"Begin,\" said Zera quickly, hoping to catch him off guard.\n\nThis time, Tom was ready for her. Using his strength, he managed to get her off her feet first, and they crashed against the rubber mats. Holding her slick body against his, he attempted to push her back against the mat and hold it there, but it then became apparent that he had no plan for what to do once she was off her feet. The obvious solution was to pin her, but how could he keep her from getting away, especially with the oil making it easier for her to slip out of his grasp.\n\nZera took advantage of his inexperience. She managed to sneak out from under him and then flip him on his back. Once again, he was staring into her brown eyes and cocky smile as her thick nipples pushed into his chest.\n\n\"It seems you're starting to learn but you're not quite ready for prime time just yet,\" she taunted with a soft laugh.\n\n\"It would help if you took it easy on an obvious novice,\" said Tom. \n\nZera shook her head. \"Not a chance. I don't just offer favors to anyone. If you want to win, you're going to have to work at it.\"\n\nWatching Zera talk back to him while she rubbed her body against his was having quite the effect. It was at that moment that Tom noticed he was hard, his erection straining against the leather of the pants. He was tempted to crawl out from under her lest she notice his condition but Zera had already beaten him to the punch. His cock was directly under her leg and she was now grinding against it.\n\nFor a brief moment, Tom watched her eyes roll to the back of her head while she moved her body against his hardness. Her expression changed from one of competitive friendliness to another that was more charged with heat. Tom wondered when it was that she'd last had sex. Her actions now seemed to suggest it had been some time.\n\nIt was only with great agony that she removed herself from his body and attempted to stand once again. Tom got up gingerly, making no effort to hide his erection as it pressed out from his body. Zera was quick to notice, her eyes taking up a dreamy like glare as she focused on it. \n\n\"I think I'm getting the hang of this,\" said Tom as they circled each other.\n\nZera's gaze flickered back to his face. She nodded without words until her eyes went back to his cock. \n\nIt was then that Tom figured out his winning move. She was distracted by his member, no doubt, and it was the only way to get her on her back quickly before she could bring her experience into play. He would have to move fast though if he hoped to catch her off balance.\n\n\"Begin,\" he said quickly.\n\nThis time, it was Tom that moved too fast. In an instant, his arms wrapped around her body and brought her to the rubber mats. Zera let out a small cry at the speed that he moved before she remembered her training and sought to push him away.\n\nIt largely did her no good. Tom wrapped his arms around her and held her place while she used her feet to try to push away from him. Her feet had contact with the floor but because she was trying to push horizontally against a vertical surface, she wasn't going anywhere quickly. It did present a new dilemma to the situation though. \n\nZera's leather pants were oily and slick just like his were. They were wrapped around each other while she tried to push away, causing her to almost push out of her pants. Since Tom was holding onto her, it was having the same effect on him.\n\nEvery time that Zera kicked off, her pants kicked off a little more. Soon, Tom could feel the matted sensation of her pubic hair brushing against his stomach. Zera seemed to not understand what was happening to her clothing because she kept pushing to get away. Since his grip wasn't loosening, he went with her.\n\nThey both seemed to understand the situation once Tom's cock was freed from his leather prison. Zera gave him a look of sudden recognition but she said nothing about it. She stopped trying to get away as if she was trying to come to terms with the changing nature of their match. Below him, Tom could still feel her pubic mound against his bare skin and knew how dangerous the situation had now become. \n\nThe proper move was for each of them to disengage and redress while offering apologies for the impropriety. Yet, it wasn't what actually happened. \n\nWith the subtlety of a mouse, Zera began to push once again. It wasn't the push of someone struggling to get away, but rather one of someone who recognized where things were heading while giving her tacit permission for it to continue. Her grip tightened on Tom, which had the effect of carrying him with her. In response, he held on tight as well.\n\nZera continued to push her legs and inch by inch, their leather trousers were pushed lower and lower. \n\nThe cool air on Tom's cock felt extraordinary and he was in no rush to see her truly pinned. Likewise, Zera was in no rush to completely escape.\n\nThey continued their rocking motions until their leather trousers were bunched up below their knees. With all pretenses of modesty gone, Zera locked her eyes on Tom. The gaze she gave him wasn't one of defeat or even embarrassment. \n\nIt was rather one of lust.\n\nNothing more illustrated that notion than what happened next. Zera seemed determined to change her actions, recognizing that all her pushing wasn't getting her out of Tom's grasp. Instead of pushing, she wiggled against him, keeping her body grounded in the same position and hoping that Tom would respond to her movement like he had before\u2014with further restraint.\n\nIn that guess, she was correct. Tom felt her body tense up before she moved and held on tighter. However, the counterpressure that he applied to her kicks sent him sprawling forward while Zera largely remained in the same place.\n\nWhat that meant was that when Tom surged forward, so did his cock. And with Zera positioned just underneath him, it surged forward into the only space that was waiting for it. \n\nZera moaned out loud when she felt the tip of his cock spread her labia and press inside her body. Tom felt it too, his mouth dropping at the sudden change of events. Before this, they'd just been in a tenuous position\u2014dangerous but still manageable. Now a line had been crossed completely.\n\n\"Zera,\" he whispered as the head of his cock burrowed into her pussy. \n\nZera shushed him. She laid her head back on the mat and stared back at him. She offered no words but neither did she try to get away. In the meantime, Tom could only concentrate on how wet she was. Zera was soaked! How did this moment become so charged with sexual electricity? \n\nAnd what the hell was going to happen now?\n\nAs if the situation couldn't devolve any further, Zera repeated the same movement as before. She wiggled against him. Tom, knowing now that they were on thin ice, kept his hold on her but watched as she slid further under him. This time, it was his turn to gasp as his cock pushed deeper inside her. \n\n\"Zera,\" he tried again, his voice almost frantic at the situation. A good portion of his cock was now buried in her body. And she didn't seem to want to struggle or get away. It was almost like this was her form of surrender. \n\n\"Tom,\" she whispered in reply. There was no pleading for him to stop. Neither was there verbal permission to continue. Zera seemed content to let her body do the talking for her, and when she pushed back with her hips, her intentions became clear.\n\nShe wanted this. She wanted him to fuck her.\n\nStaring into her lovely brown eyes made up his mind for him. Tom withdrew his hips carefully and surged forward, burying himself further.\n\nZera bit her lip and smiled. She answered that thrust with one of her own. Suddenly, wrestling became fucking. In that moment, Tom unleashed all the energy he had and started to roll his hips, driving his cock in and out of her body. He felt Zera's arms go around his neck and her hips tighten around his waist. The oil on their bodies was soon joined with sweat as they proceeded to move against each other, each thrust a vigorous expression of the lust and flirtation that had been building throughout the day. \n\n\"Fuck me, Tom,\" urged Zera, her heavy accent making the moment that much more exciting. \"Fuck me so deep.\"\n\nZera's body was incredible. Her pussy gripped him snugly while her large brown nipples begged for further attention from him. He obliged that in the only way he knew possible, capturing one between his lips and sucking until she squealed with pleasure.\n\n\"I can't believe how good it feels,\" she said with a moan. \"Your cock is driving me crazy!\"\n\nCoupling with Zera was even better than Tom could have imagined. He thought that her powerful body might have meant she was usually the more dominant force in the bedroom but that couldn't have been further from the truth. In actuality, Zera was content to let him take the lead, meeting his thrusts with timed thrusts of her own while angling her hips to let him achieve his deepest possible penetration.\n\nThat didn't mean their movements weren't vigorous. Once he'd accepted what happened, Tom gave her everything he had to offer. His hips pistoned against hers while drops of sweat fell off his brow. In response, Zera held on as tight as she could, offering subtle moans every time he went deep. The feeling of her body under his was exhilarating. Her slick skin, added by the oil, slipped against his own and added a new dimension to their movements.\n\nIt didn't take Zera long to achieve her first orgasm. Her body tensed after several minutes of vigorous fucking, and Tom watched as her eyes closed while her legs shuddered. When her eyes opened again, he saw a new side to Zera that he wasn't expecting. One that was truly tender and at odds with her earlier personality. ",
        "It was here that Tom finally found the measure of who Zera truly was. Stripped of the quest for power, Zera was now laid bare before him, surrendered of her dominant need to conquer. He never found someone's vulnerability more sexy, even as his orgasm threatened to boil over.\n\nAfter about fifteen minutes of intense movements, Tom felt that familiar feeling in his balls. Zera was moaning loudly after her second orgasm and she had a tight grip on his ass as she tried to hold him inside her.\n\n\"Please cum for me,\" she urged. \"Give me all of your seed, Tom.\"\n\n\"I'm going to cum,\" he said with hazy breath as he felt the first spurts deep in his body.\n\nZera nodded her head and tapped his hip. It was the universal signal for pulling out, one that he heeded in that moment. Pushing up to his knees, Tom pulled his cock from her tight passage and began to jerk himself all over her, coating her pubic mound, her stomach, and even getting a few blasts on her tits.\n\nThroughout his entire orgasm, Zera rubbed the evidence into her body, using it as her own form of wicked moisturizer. She even hazarded a taste of his seed, sucking on her fingers as her eyes rolled to the back of her head. She certainly enjoyed it almost as he enjoyed watching her do it.\n\nOnce he was spent, Tom fell against the mat beside her. He was breathing hard, and now was the time to catch his breath. Zera remained silent against him, content to enjoy the afterglow of their coupling.\n\nIt was Tom who spoke first.\n\n\"So was that worth a point?\" \n\nZera let out a loud laugh. \"A point, Tom? Do you always aim so low?\"\n\n\"That good, huh?\"\n\n\"Mm-hmm,\" she cooed. \"I haven't had sex that good in a long time.\"\n\n\"You were incredible,\" he replied. \"I won't be forgetting that anytime soon.\"\n\nZera purred with happiness. \"Me neither. But I'm sure my battery-operated friend will get quite the workout this week as I remember this little match.\"\n\nTom turned to face her, putting his hand under his head. \"Speaking of the match, where do we stand? Is it still 2-1 in terms of points?\"\n\nZera shook her head from side to side slowly. \"No, I'm giving you the match. Sex that good is well worthy of giving up the win.\"\n\nTom started to chuckle. \"You know what that means then?\"\n\nShe nodded. \"You get a new favor from me, I know. I didn't forget. Which I guess means I actually have to give up the courier.\"\n\nTom could only smile now that he was on the brink of victory.\n\nHowever, it was now Zera's chance to turn the tables. \"I was always going to give him up to you, did you know that?\"\n\nHis mouth opened in confusion. \"What? How?\"\n\nShe blew a strand of hair out of her face. \"Did you really think I was going to hold out on the President of the United States? Of course not. I have to admit that it was fun to mess with you a little but I was always going to give him up to you.\"\n\nTom looked back at her with the shock still on his face. \"Then what was this all about? The wrestling? The sex? How do you explain that?\"\n\n\"I just wanted a little company,\" admitted Zera. \"You might not understand how lonely it is on the top. Most men who know my name in Turkey are frightened of me and what I've achieved. I don't blame them for it but it doesn't make dating any easier. I've long accepted that I wasn't ever going to have a husband worthy of the title but the loneliness of this position catches up with you.\"\n\nTom nodded. \"I think I understand better than you might imagine. Until very recently, I shared the same sentiments as you did.\"\n\n\"Recently?\" she asked. \"What changed for you?\"\n\n\"A woman entered my life,\" said Tom, thinking fondly of Aubrey. \"One that makes it much better than it already is. One that I don't think I can live without.\"\n\nZera smiled. \"Do you love her?\"\n\nTom swallowed heavily. There it was, that love word again. While he hesitated to answer truthfully, his thoughts seemed more clear on the matter. More defined.\n\n\"I'm not sure,\" he lied, more for Zera's benefit than his own.\n\nShe laughed softly. \"You might want to make up your mind. A woman like that only comes around once in a long while. If you wait too long, someone else might steal her.\"\n\n\"No wiser words have been said tonight,\" said Tom, agreeing with her fully.\n\nZera pushed up on her elbow. \"But don't let her think she can hog you. If I ever come to Washington, I want to ride this one again.\"\n\nTom chuckled. \"I think that could be arranged. Although, it brings up an interesting question. What are you going to do with your party now that you've agreed to give up the courier? Aren't you worried about looking weak to your people?\"\n\nZera grinned. \"They don't have to know that I'm giving him up, Tom.\"\n\nHe looked back at her with a confused expression. \"I'm afraid I'm not following.\"\n\n\"Oh, it's pretty simple,\" she replied. \"You can have the real courier, but I'm going to keep a decoy on site for myself. The Turkish people will never know that you have the real one. All that I ask is that when you break him, you don't let out that it was your people that did it.\"\n\nTom nodded and held out his hand. \"That's a compromise I can live with.\"\n\n*****\n\nWith Zera's submission, events unfolded more quickly than Tom might have realized. \n\nIn the morning, the courier was exchanged between the two governments with no fanfare whatsoever. In fact, once the courier was safely in the basement of the American embassy, the Turkish government was still putting out headlines about their attempts to unravel what was inside his mind. It was a stunning deflection away from the actual story, and it allowed Tom's men to work in privacy on breaking the man.\n\nFortunately for them, he'd already been loosened up by his time with the Turks. Tom's men only needed fourteen hours to break him, and from there, he sang like a songbird. The most stunning admission from his mouth was the confirmation of the code word 'ganja.' Not the slang for marijuana like everyone assumed, it turned out that Tom's hunch was correct. Kurzon was bedded down in the Azerbaijani city of Ganja in an unassuming farmstead just a few miles from the American embassy. Tom ordered an immediate raid once they had the location set, especially since the courier let slip that something big was in the works for the coming week.\n\nThe raid was carried out a mere twenty-four hours later by members of the Navy SEALs. They landed with three helicopters outside the farmstead in the early morning hours. They took out eight members of Kurzon's personal bodyguard as well as capturing his daughter in the raid. Kurzon himself didn't survive the attack, being shot through the head and neck as he tried to escape. \n\nHowever, it wasn't Kurzon's death that was the highlight of the day. His computer held a treasure trove of information, including the details of an imminent attack that was to be held in Virginia that very week, as confirmed earlier by the courier. Their target was a US naval aircraft carrier that was about to disembark for the Middle East before the end of the month. His computer also listed the whereabouts of the group that was to do it, and the arrests were made before the men could even figure out what happened.\n\nThe death of Mohammad Kurzon and the foiling of his terrorist plot within the United States was released to the nightly news the day that Tom came home.\n\n\"Terrorists foiled in Virginia,\" repeated the announcer on the news channel Tom usually watched. \"This cell was linked to Mohammad Kurzon and only a timely intelligence link prevented them from bombing an American carrier.\" The announcer then showed footage of Tom's message to the country where he gave further details on the foiling of the plot.\n\nIt was a public relations dream. For most of the first half of this year, Tom had been seen as a lame duck president who was about to be defeated at the polls. The killing of Mohammad Kurzon supercharged the entire country and showed them that Tom was a capable leader with their best interests at heart. It earned him the crucial credentials in experience that he was so lacking in the election, and it also earned Tom a rare moment of praise from Governor Norwood at besting a longtime adversary of the country.\n\nWith a new poll being released after the raid that showed Tom closing the gap on Norwood, he knew he might just have a chance yet of getting reelected after all.\n\nThings were finally starting to look up.\n\n*****\n\nWith Tom back in Washington, it was time for him to revisit two issues that he'd left hanging with his sudden departure to Turkey. The first of those matters was a call back to his old friend, Lucy, whom he was sure was anxiously awaiting him. He waited until after hours when Aubrey was already sleeping and snuck down to the oval office to make the call. \n\n\"You have some nerve keeping me hanging,\" she said when she answered the phone.\n\nTom chuckled. \"Sorry, Luce, you know how the job is. Duty calls.\"\n\n\"Mm-hmm,\" she replied. \"I assume it has to do with this terrorist business I keep hearing about.\"\n\n\"Oh, Luce, you know I can't tell you even if it was.\"\n\n\"You think you know a guy,\" she said with a small giggle.\n\n\"Anyway, I know I've been meaning to give you a call,\" said Tom, changing the subject. \n\n\"That's one way to put it,\" quipped Lucy. \"The only other bigger story than this terrorist plot is that you're supposedly dating Aubrey. I'd ask if it was true but seeing as I can't go a day without seeing some picture in the media of you two together, I suppose I don't even need to ask.\"\n\nTom winced as he tried to pick his words wisely. This was dangerous ground for him, and if Lucy didn't understand that Aubrey wasn't just some booty call, then it could mean an end to a friendship that had spanned decades.\n\n\"Listen, I know I probably owe you an explanation,\" started Tom before taking a deep breath. \"I'm sure you're pissed at me.\"\n\nHe heard Lucy catch her breath. \"Why would I be pissed at you?\"\n\nTom fought the urge to stare at his phone. \"Why wouldn't you be pissed? I heard that voicemail you left me.\"\n\n\"Did I sound pissed on the voicemail?\" she asked. \"That's not how I meant to sound.\"\n\nTom hesitated. \"Then can you help me out here? One of the reasons I put off this call was because I thought you would be pissed at me for dating your friend's daughter.\"\n\nLucy actually laughed. \"Tom, Tom, Tom, did you really believe that to be the case? Don't you know me by now?\"\n\nStill unsure of the ground he was on, Tom offered a tentative laugh. \"I guess not.\"\n\n\"I was more upset that you didn't tell me!\" gushed Lucy. \"Aubrey is a wonderful woman. She's bright and intelligent and very nurturing by nature. She's also someone who'll stand up for herself and tell you when you're being stupid.\"\n\nTom shared another laugh. \"Believe me, we've already been there at least once.\"\n\n\"See what I mean?\" asked Lucy. \"You could do a whole lot worse than Aubrey.\"\n\n\"So the age thing doesn't bother you?\" asked Tom. \"She's about fifteen years younger than me.\"\n\n\"Did you forget that my husband is twelve years older than me?\" asked Lucy. \"I'm not one to complain about such matters.\"\n\n\"No, I guess not,\" said Tom. \"So I have your blessing to keep seeing her?\"\n\n\"You have my blessing and my encouragement to keep going,\" said Lucy with a giggle. \"You deserve it, Tom. You've been alone for so long. It'll be good for you to be a kept man again. You do want to be with her long term, don't you?\"\n\nTom found himself smiling against the phone. \"Yeah, I do. I really do.\"\n\n\"Then there's nothing else you need to know,\" said Lucy.\n\nIn a way, she was entirely correct. Aubrey fit him so well that there wasn't anything else to think about. Not only did she have all the qualities that Lucy described earlier, but she was probably one of the only women in the world that would understand the needs of his office in both a mental and a physical capacity. \n\nAubrey was one of a kind and it was time to show her what she meant to him.\n\nTom ended the call with Lucy a short while later and found the wind in his sails. Everything about this past week seemed to confirm what he already knew deep inside. The truth was that he was tired of being lonely. Zera had illustrated that point quite well of what happens when you let the loneliness define you. As much as he enjoyed her company, he pitied her when he had to leave. There was nothing for her to return to except her thoughts of power within her own country.\n\nHe didn't want to end up like that, not when he had someone here who did care for him and whom he cared for greatly.\n\nTom didn't wait for more of a revelation than that. He walked quickly to the private residence of the White House and up to his bedroom. Poking his head through the door, he saw that Aubrey was sound asleep, her blonde hair sprayed out on the pillow. It brought a smile to his face, knowing that no matter where else he was required to be (or who else he was required to be with), at least he could come home to see this gorgeous and heartwarming sight in front of him.\n\nHe walked over and sat on the edge of the bed, gently stirring her with a hand to the back. Aubrey's eyes blinked open once or twice before she squinted at him in the darkness.\n\n\"Everything okay, babe?\" she asked sleepily.\n\nTom smiled. \"Everything is great. I just wanted to say I love you before I went to bed.\"\n\nIt took a moment for her sleepy brain to register what he said but soon Aubrey shot up and turned the bedside lamp on. She gave him a look like he held her heart in his hands.\n\n\"Did I hear that right?\" she asked, grabbing his hand.\n\nTom nodded. \"You did. I love you.\"\n\nThe sleepiness melted into joy almost instantly. A beaming smile planted itself on her face. \"I love you too, Tom.\"\n\nShe nudged against him and he wrapped his arms around her. With all the noise from the election, Kurzon, Turkey, and the courier slipping into the background, Tom focused on the one woman who truly understood him. \n\nHis loneliness became a thing of the past.\n\n \n"
    ],
    "authorname": "CJMcCormick",
    "tags": [
        "president",
        "politics",
        "turkey",
        "turkish",
        "minister",
        "wrestling",
        "seduction"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/big-dick-diplomacy-ch-10"
}