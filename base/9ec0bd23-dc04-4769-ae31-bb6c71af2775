{
    "title": "Lady in Red Pt. 02 Ch. 22",
    "pages": [
        "After the broadcast, Paula asked everyone to head to Marsh's for a celebration. \"It's taken seven years for Steve to pop the question and we're going to make sure he knows how pleased we all are!\"\n\nTed took the floor of the private room once family and friends were all gathered. \"Steve asked me a few days back for permission to ask Gwen to marry him. I told him at the time that Paula and I couldn't be happier. I'm not fooling myself about who the head of this family is. I appreciate that you all defer to me as much as you do, but Steve and Gwen are the forces that hold us together and create so many opportunities for us all. As Jordan stated at the end of the show, Valhalla now has its king and queen, and the rest of us are fine with that. \n\n\"Gwen was the 'Lady in Red' that night she went on her first date with Steve. He was the one that requested that song. It began quite innocently, but look where it's taken all of us. Paula and I are very proud of our daughters, including Jordan, and the men they've selected. We've been blessed. We formally welcome Steve into our family, although he's been a part of us since that first dance, and we look forward to the wedding and more grandchildren. Congratulations to the loving couple!\" \n\nEveryone raised their drink in toast to the beaming Gwen and grinning Steve. Gwen spent the next ten minutes showing her ring to all of the other ladies. Steve shook hands and listened to the usual warnings about giving up the single life. He simply smiled a lot and kept his eyes on Gwen. He was pleased to hear her tell everyone how happy she was with her ring.\n\n\"Steve could have gotten me some huge diamond, but he didn't. He gave me something far more meaningful. His grandmother and his mother wore this ring. Can you imagine the significance it must have to him? He must really, really love me to trust me with something so dear to his heart. Someday our son will give it to the woman he loves. I get goose bumps just thinking about it!\"\n\nThat night, Gwen was extremely passionate as she and Steve made love. \"This is my first night sleeping with my fianc\u00e9 and I want to make sure that you don't change your mind. I love you so much!\"\n\nThe next day was Christmas and everyone gathered at Ted and Paula's for breakfast and the exchange of gifts. Ted and Paula beamed as they looked over their growing family. Jordan and Lisa had babies and Gwen was engaged to be married.\n\n\"So, Sis, did you get anything special for Christmas?\" teased Kate as Gwen immediately held her hand up to show everyone her ring. \"Remember the first Christmas Steve came to our house? He got all melancholy and left the room, and you had to go try to cheer him up? It seems like you did a pretty good job.\"\n\nA short time later, Jordan and Charlie found an opportunity to speak to the happy couple. Jordan began, \"The other day, when Steve asked Ted for permission to ask you to marry him, Kate wondered how super stars got married. Charlie and I have been talking it over and have an idea, but it'll need your cooperation and approval.\"\n\n\"This sounds interesting,\" smiled Gwen. \"What did you two dream up?\"\n\nJordan nodded to Charlie as he took over the conversation. \"We think it would be fitting for two incredible talents to have a wedding so unique, that it could be both a movie and a stage show in the future. Jordan and I want to write and produce a musical. It would star you both and would be performed live as a prelude to the wedding ceremony.\"\n\n\"Are you serious?\" asked a stunned Gwen. \"You and Jordan would do all of that work for our wedding? I've never heard of a musical production as part of a wedding, but it sounds pretty exciting. What do you think, Steve?\"\n\n\"Wow! I don't know what to say. The thought of something like that has never crossed my mind. How would it work and what would Gwen and I have to do?\"asked Steve.\n\n\"You'd have to sing and dance and then march up and get married like normal couples do, except you'd have to sing a song at the ceremony,\" replied Jordan with excitement. \"Charlie and I would write a special song for that, but the rest would be a musical recap of your courtship and lives over the almost eight years that you've known each other.\"\n\n\"Would that seem pretentious, or vain?\" asked Gwen with some concern. \"We don't want everyone to think we're bragging, or showing off.\"\n\nThe rest of the family had been silent as they listened to the conversation. Paula decided to voice her opinion.\n\n\"That sounds like an incredible idea! It wouldn't be pretentious for you two. Everyone knows how genuine and grounded you are. It would be a great treat for your guests and would be a wedding to remember. That's for sure.\"\n\n\"Mom's right,\" added Lisa. \"You have the talent and the wherewithal to pull it off. How many guests will you invite?\"\n\n\"I think we'll just place an announcement in the newspaper and on the web inviting anyone that wants to come. We have so many friends, fans, and business associates that I'd hate to slight anyone,\" worried Gwen.\n\n\"And that's one reason you guys are so loved,\" beamed Paula's mother. \"What other famous couple invites the world to their wedding, and then supplies the entertainment themselves? Most of them sneak off to some exotic location and have guards keep people and photographers away. You're going to invite them!\"\n\n\"This is going to be such a great wedding!\" exclaimed Naomi. \"With Jordan and Charlie putting it together and writing a new song, and you two performing, it'll be one for the ages.\"\n\n\"When will you be getting married?\" asked Charlie. \"I need to know how long I have to get this all planned and rehearsed.\n\n\"Steve and I were thinking about July 4th,\" answered Gwen with a smile. \"That way Steve would be able to remember our anniversary. It's a Saturday this year. We'd get married here at the center and invite anyone that cared to come. We'd have dozens of vendors hired to keep the food and drink coming.\n\n\"Charlotte and I will be spending most of May and June on a hospital ship in the South Pacific and Indian Ocean, but we'll come home by July 1st, if not sooner. We graduate in early May and a week later, we set sail. It'll be part of our residency and a great experience.\"\n\n\"That would be perfect, as long as you can learn your songs and lines in a couple of days,\" responded Charlie. \"I think you'll have a wedding like no other, and way better!\" \n\nSince it was the weekend of the premier of Gwen and Steve's latest movie, the Christmas celebration was over by noon. Everyone had to prepare for the belated premier at Lady in Red Center in Sparta. In an innovative move, Stephanie had suggested that rather than walk the red carpet, the actors would be at the entrance of the center and greet the movie goers as they made their way inside. It would take some time as most people would want to chat with the cast, or ask for autographs and pictures, so there would be a large buffet available for the movie goers as they waited for the lines to end and the center to fill up.\n\nDiane was becoming very nervous as the premier got closer. \"Don't worry about it,\" assured Will. \"The movie opened last night all over the world and probably millions of people have seen these beauties by now. What's a few more?\"\n\n\"These people are my friends and neighbors,\" explained Diane. \"What if they think I'm an awful person for showing my breasts, especially at my age? I'm a wife and mother. That's the other thing. My daughter shows her breasts, too. What kind of family are we?\"\n\n\"Sexy? Well-built? Adventurous? Is that a trick question?\" asked Will with a big smile. \"I know my friends will be jealous as hell that you're my wife and I get to sleep with you, so I'm good. If someone says that they don't like how beautiful and sexy you are in the movie, it'll just mean that they're jealous. You're a beautiful woman and I'm proud of you. Look how well Gwen, Jordan, and the other girls are doing and they've been topless several times in movies.\"\n\n\"Yes, but they aren't in their forties and mothers, well, except for Jordan and Lisa now being mothers,\" responded Diane. \"You just stay very close to me and act very proud, okay? Your approval will help me a lot.\"\n\n\"You've got it!\"promised Will. \n\nMovie goers were delighted with the new concept where they actually walked in on a red carpet while the cast members greeted them and posed for pictures and signed playbills made especially for the occasion. The buffet was greatly enjoyed as fans waited patiently for the center to reach capacity. Even before the movie was shown, fans had a very favorable opinion of it.\n\nLater, when the movie finished and the credits began rolling across the screen, the applause and cheers were long and loud. It was quite evident that the audience had enjoyed the movie tremendously. Once again the cast mingled with the movie-goers and this time they had praise heaped upon them.\n\nTwo of Will's golf buddies rushed up to Diane and Will with their wives in tow. It was obvious that they had enjoyed the movie.\n\n\"Diane! You were incredible! That love scene was one of the hottest I've ever seen,\" gushed one of the wives. \"I never realized what a wonderful figure you have. Was Will okay with you spending time in the arms of Steve Hammer like that? I don't know if my husband could have handled it.\"\n\n\"Thank you,\" beamed Diane. \"Will knows it was acting, although it sure didn't feel like work. Steve's incredible. He made me look better than I really am. He was really kind to an older woman.\"\n\n\"Are you kidding? He enjoyed every second of it!\" insisted the second wife. \"He'd have to be the best actor in the world if he didn't absolutely love that scene. Are his muscles and everything as impressive in real life as they look on the screen?\"\n\n\"Exactly what do you mean by 'everything'?\" laughed one of Will's golf buddies. \"Look how everyone wants to talk to Will and Diane and we're holding them up. We'd better move on, but I'll repeat that we think that may well have been the best movie we've ever seen, and Diane was incredible in it.\" \n\nPaula and Ted were greeting fans as well. Paula received more than a few compliments about her performance, but most of her friends and neighbors felt compelled to talk about just how beautiful and sexy Diane looked in the movie. \n\nLisa and Kate were standing a short distance away and noticed Paula's body language. Even as she smiled and agreed that her sister was beautiful and her daughter was incredible, she appeared to be struggling to maintain the smile.\n\n\"I think Mom's heard enough about how sexy and amazing Diane was,\" observed Kate. \"I think she wishes that she had the nerve to do what Diane did. She's torn between being a proper mother and businesswoman and being more daring.\"\n\n\"It certainly hasn't hurt Gwen, Jordan, or the rest of us. Look how Diane is positively beaming. Uncle Will is the only person with a bigger smile. He's really proud of Aunt Diane and how great she looks. What would Dad do if Mom did that in a movie?\" wondered Lisa. \"She looks great, but just doesn't quite have the nerve to let it all hang out. Plus she's confused about her feelings for Steve. She believes a lady should behave a certain way with her daughter's fianc\u00e9, but would really like to get naked with the guy. He's the only one she'd ever do a love scene with, but her moral compass won't allow it. It isn't easy when you're so conflicted.\" \n\nMeanwhile, Gwen and Steve were surrounded by enthusiastic fans of all ages. The couple smiled and constantly posed for pictures with everyone that asked.\n\n\"That was the best movie I've ever seen!\" came a familiar voice behind Gwen. She turned to find Ms. Walker smiling like the cat that got the canary.\n\n\"Congratulations on your pending nuptials, as well as the performances you both had in the movie.\"\n\n\"Thanks so much, Ms. Walker!\" replied Gwen as she gently hugged her old English teacher. \"We worked really hard on the dance scenes. Steve is a natural, but I struggle to keep up with him.\"\n\n\"Ha!\" laughed Steve. \"We all saw the same movie. Gwen was amazing. I just tried to keep up. Why do you think the movie was titled 'Billie Jean'? Gwen was Billie Jean and she made the movie. It was pretty good though, wasn't it? It really makes us feel good when we do something that you're proud of, Ms. Walker. Your opinion means a lot to us. It did from the first day I met you and it always will.\"\n\n\"That's exactly why you two are so successful,\" responded a smiling Ms. Walker. \"You work so hard to always give your best effort. You outdid yourselves with 'Billie Jean'. It'll win every award possible. I'm very proud of you both.\"\n\nAfter Ms. Walker drifted away to speak to other cast members, Steve led Gwen over to Stephanie. She was holding on the arm of a tall, well dressed man. He turned as Steve and Gwen approached. Steve recognized him as James Hawthorne, the Englishman they had met the previous summer.\n\n\"Steph, is this guy bothering you?\" joked Steve as he offered a smile and his hand to Hawthorne.\n\n\"He flew in from England today just to be my escort tonight,\" beamed Stephanie. \"I was a little embarrassed when he saw our love scene, but James said he thought it was pretty hot. He thought you looked a little soft and pasty, but I carried the scene.\"\n\n\"I saw a couple of good reasons why he may have enjoyed that scene,\" deadpanned Steve just before Stephanie punched him in the chest. \n\n\"I think that the movie made me look better than I normally do because I sure looked pretty big on screen, didn't I? Of course Gwen and Mom were both amazing. James can't believe that Mom is my mother. He says we look more like sisters,\" added Stephanie.  \n\n\"It's a pleasure to see you both again. May I also state that the WHO greatly appreciated your efforts at the concert last summer. It was a huge success and you were the reason why,\" stated Hawthorne sincerely.\n\n\"Mr. Hawthorne, did you fly all the way here from England on Christmas Day just to see my little cousin?\" asked Gwen as she looked from Hawthorne to Stephanie. \"Have I missed something?\"\n\n\"I have no idea what you may have missed or not, but I most certainly flew here to see Stephanie, at her invitation. Did I make a mistake or something?\" asked the Englishman with concern.\n\n\"Not at all,\" chuckled Steve before adding more. \"That is unless you break her heart or harm her in some way. Stephanie is extremely important to us. I'll be quite upset if I ever found out that you didn't treat her properly.\"\n\n\"Steve! That's Uncle Will's job,\" cautioned Gwen as she took Stephanie's arm in hers. \"Let's stroll over and talk to him right now.\"\n\nGwen practically dragged Stephanie over to where Will and Diane were speaking with Ted, Paula, Lisa, and Jason. \"Uncle Will, this James Hawthorne fellow seems to be hanging around Stephanie quite closely. Is there anything you want to say to him?\"\n\nTed and Paula immediately broke into big smiles while Will simply looked confused. Ted moved closer to Will and spoke quietly into his ear and then stepped back.\n\n\"Yes, there is something I want to tell you, Young Man,\" began Will. \"You will treat my daughter with respect at all times. You will not use tobacco in any form, and only use alcohol in moderation, if at all. You will protect her with your life, if need be. You will drive carefully and never do anything to harm her reputation or self-respect. If this is asking too much, then I suggest you bid her farewell right now.\" \n\nHawthorne noticed that everyone within hearing had gone silent and Stephanie's cousins had begun to move closer as Will spoke. It appeared to be an important moment from the way everyone waited for his response.\n\n\"Sir, I would have it no other way,\" assured Hawthorne as he extended his hand to Will. \"You daughter is a lady. I will always treat her as such and her safety and well-being will always be my first concern when I am with her.\"\n\n\"Great answer!\" blurted Stephanie as she threw her arms around the surprised man and kissed him soundly on the lips. \n\nOnce Stephanie moved back a little Hawthorne saw the smiles of approval on the faces of her family members. \"We have a bit of a tradition in the family that gentleman callers are informed by the father, or father figure, on how he is expected to conduct himself,\" explained Paula. \"Ted started it with Steve years ago and has given 'the talk' to all of the girls' suitors since then. I believe that was Will's first talk, wasn't it?\"\n\n\"Yes. I almost missed the hints that Gwen hit me over the head with. I was just beginning to figure it out when Ted reminded me,\" admitted Will. \"His daughters have all found very dependable, honorable men and I would hope that you, Mr. Hawthorne are cast from the same mold.\" \n\n\"Stephanie, you need to tell us how long you and James have been an item,\" insisted Jordan. \"I knew you got along great with him in England, but I had no idea you two were dating.\"\n\n\"We're not really dating. Well, maybe we are, if emails, texting, and phone calls count. We just hit it off when we were in England. I've seen him once since, and that was when we were in Moscow. I asked if he'd like to visit over the Christmas holidays and here he is!\"\n\n\"Welcome to America!\" greeted Gwen as she hugged Hawthorne. \"I trust that Stephanie has invited you to spend New Year's with us in Maui. We're doing a TV show from the beach to welcome in the New Year. It's a lot of fun and we get to spend a lot of time in the sun and surf.\"\n\n\"I did invite him already,\" admitted Stephanie. \"I didn't think anyone would object. I hate being the odd-man-out all of the time. I'm not saying James is my boyfriend or anything, but he'll be with me and I won't be all lonely, and envious of my cousins and friends.\"\n\n\"I think you had a great idea with this premiere party,\" stated Jordan. \"Everyone loved the movie and the food and drinks seem to be going over very well. 'Singlehandedly' did real well , 'Jurisprudence' has been successful beyond my dreams, but 'Billie Jean' is going to be a real blockbuster. The reviewers are all raving about how good it is and what great dancers Gwen and Steve are.\"\n\n\"Which reminds me; tomorrow morning we're having a working brunch at Billy's restaurant at eleven,\" announced Stephanie. \"There are a few things we need to go over as a group. It's still the holiday season, so we'll get it over with quickly and just enjoy the company when it's finished.\"\n\nThe next morning, the reserved room at Marsh's had a long table filled with all sorts of delicious foods when Steve and Gwen arrived. As usual, they had been greeted by many friends and neighbors as they walked through the main dining room. As was their custom, the famous couple spent time at each table, chatting casually with the delighted diners.\n\nSteve noticed that Janice and Sybil had just sat down at a table in the main room. \"What are you two doing? We're not going to leave you out of our little meeting and brunch party. Come on with Gwen and me.\"\n\n\"I thought the brunch was for friends and relatives,\" replied a surprised Sybil. \"We'll be right here if you need us.\"\n\nSteve took Sybil's hand and gently pulled her to her feet and then he pulled her into warm embrace as he spoke gently. \"Are you saying that you two are not our friends? That we shouldn't trust you? Don't you like us at least a little?\"\n\nSybil glanced at Gwen and saw her big smile before she returned her attention to Steve. \"I think I like you too much already. Of course you can trust us and I hope that we're friends. It would be an honor to join you and Gwen this morning.\"\n\nSteve smiled and released Sybil so he could take Janice's hand and pull her to him for a hug as she admitted, \"I'll go anywhere you want, anytime you want. I've never enjoyed a job more, nor met nicer people in my life.\"\n\nSteve entered the private room with his arms around the two security women and a smiling Gwen on the other side of Sybil. Everyone smiled and greeted the two women. Steve saw Paula's eyebrows arch in a silent question.",
        "\"These two ladies have become more than employees as far as I'm concerned,\" stated Steve flatly as he looked directly at Paula. \"They came through for me when I needed it. Does anyone object to them attending this meeting and any future ones?\" \n\nEveryone was quick to assure Steve that the Sybil and Janice were always welcome, but Steve remained still with his arms around the two women as he looked directly at Paula.\n\n\"Whatever you want, Steve. You know that no one will go against you,\" replied Paula as Gwen and Lisa exchanged glances at Paula's less than warm welcome.\n\nSteve removed his arms from the two women and walked over to where Ted and Paula were standing. \"Ted, would you mind if I had a few words in private with Paula? It'll only be a minute or so.\"\n\nTed could easily see that Paula was agitated. She had been out of sorts and cranky all morning and he had no clue why. When he asked her about it, she insisted that everything was fine. Slowly it dawned on Ted that the problem may involve Steve. With more than a little relief, Ted nodded his acceptance of Steve's request. If anyone could get Paula out of her funk, it would be him.\n\nSteve took Paula's hand and tugged it gently. \"Paula, come walk with me for a while. I'd like to talk to you about a few things.\"\n\nPaula looked around and noticed that all three of her daughters were watching her closely. Reluctantly, she allowed Steve to lead her out of the room.\n\n\"What's with Mom?\" wondered Kate. \"She seemed pretty cold to Steve, Janice, and Sybil. \"It's not like her, especially to Steve.\"\n\n\"She seemed kind of grouchy this morning when we picked her and Dad up to ride over with us,\" allowed Lisa. \"I wonder if it bothers her that Diane did so well and looked so hot in the movie last night. Could she be jealous? Look at how happy Diane and Will are. They haven't stopped smiling since last night.\"\n\n\"Mom did really well in her part in the movie,\" pointed out Gwen. \"Why would she be jealous of Diane?\"\n\n\"Why?\" repeated Kate. \"Maybe because Diane took a chance and also took her top off and had an amazing love scene with Steve. Everyone was blown away by how good she looked. She really did look great topless, didn't she? So where does that leave Mom? Suddenly, she's the other sister while Diane is the hot babe that made love to Steve in the movie.\"\n\n\"Could that really be it?\" asked a surprised Gwen. \"Mom has been offered some juicier roles and refused them. It was her decision.\"\n\n\"But she had no idea how well Diane's part would be received. Even the critics think Diane was amazing. It's all over the web,\" offered Lisa. \"I don't think she's envious of Diane. She's more upset with herself and how things seem to have passed her by because she's so conservative most of the time. Diane was the 'wild child' of the two.\"\n\n\"I've been working on a script that's kind of like 'The Graduate'. I think I'll go mention it to Dad and see if he'd be cool with Mom as the 'Mrs. Robinson' of the movie,\" stated Kate.\n\n\"I don't think I'll have the time for a movie next summer,\" worried Gwen. \"I have that two month stint on the hospital ship and then the wedding and hopefully a honeymoon.\"\n\n\"That's okay because I was thinking that I could play the daughter,\" replied Kate immediately. \"I've talked to Chip about it. He doesn't feel comfortable in front of the camera like Steve does. He'd be willing to have a smaller, less demanding role. He's also fine with me doing a love scene or two with Steve. I guess I need to ask you if you'd be okay with that.\"\n\n\"You and Steve? Does that mean that Mom would be doing the dirty with Steve, too?\" asked Gwen.\n\n\"It sure does, if she'll agree to it. She showed that she can act in 'Billie Jean'. Now we need to convince her to go for that brass ring and let her hair down, along with her clothes,\" answered Kate.\n\n\"That could be my wedding gift to Steve!\" laughed Gwen. \"He'll be all over me every time he thinks about doing love scenes with you and Mom. We'd be playing into his fantasies. I hope Mom agrees to do it.\" \n\nAt that moment, Steve led Paula into Billy's office and closed the door before turning back to face Paula. \"What's wrong, Paula? Have I done something to upset you?\"\n\n\"It's just that you and Gwen are going to be married soon. You really don't need to introduce more beautiful women into our group, do you? Are you trying for a harem? How do you think Gwen feels about this? Think about her feelings for a change.\"\n\n\"Excuse me? Did you just suggest that I don't consider Gwen's feelings?\" demanded Steve. \"That surprises me. I honestly thought that you, of all of our friends and relatives, understood how deeply I love Gwen and how her safety and happiness are the most important things in the world to me. Now I see that I misjudged you.\"\n\n\"No! I didn't really mean that, Steve! I do know how much you love Gwen. It fills my heart with happiness that you two have such depth of emotion for each other. I'm sorry I made that foolish statement. I certainly don't believe it.\n\n\"You're an extremely wealthy, handsome, famous, successful, charming man. Women are drawn to you. I can vouch for that! But you're already surrounded by so many beautiful women. Is it wise to bring more into our group? Doesn't it increase the opportunity for jealousy and discontent?\"\n\n\"I'm not bringing them into our group. They pretty much accomplished that when they saved you, Theresa, little Billy, and Diane from those gunmen. Then they saved my life on that road in Pennsylvania. Am I wrong to have special feelings for them? Do you have any idea how badly I'd feel if something had happened to any of you?\"\n\n\"Especially Diane,\" mumbled Paula as tears rolled down her cheeks.\n\n\"Especially Diane?\" repeated a very surprised Steve. \"What is that supposed to mean? Are you suggesting that I'd miss Diane more than I'd miss you? Is that what you're saying?\"\n\n\"I saw you two when you filmed that movie and again last night on screen. You love her. I can tell. That love scene was not acting! Don't treat me like I'm stupid,\" sobbed Paula.\n\nSteve was flabbergasted by Paula's pronouncement. He studied Paula's face as he considered her words. He realized that Paula was unusually emotional and wasn't quite certain why.\n\n\"Paula, you're right. I do love Diane. I've never denied it. She's beautiful, smart, generous, athletic, and devoted to her family. You're also right that I wasn't acting in that movie. I suspect that I'm not really a very good actor. I have loved every woman I've had those scenes with. Jordan, Naomi, Stephanie... all of them, including Diane. \n\n\"I always thought that you knew that. I thought everyone knew it. Why does my scene with Diane upset you so much? What did I do wrong or differently with her? Help me understand so I can make it right. I never want you to be upset or unhappy with me.\"\n\n\"I don't even know why it upsets me so much,\" responded Paula. \"I love her. She's my sister. But last night everyone was saying how sexy and beautiful she was in the movie. Then there was the way you made love to her. I could barely breathe when you held her breasts and kissed them. She's only a couple years younger than me, but she was unbelievably sexy. I guess it drove home how old I've gotten. I'm a grandmother! I love my kids, and Theresa is absolutely precious, but I feel like I've lost my identity while Diane has found hers.\n\n\"She's the sexy dance instructor with the gravity defying breasts, and I'm the grandmother. If Diane has a dozen grandkids, she'll always have that moment as the sexy woman that seduced Steve Hammer in one of the best movies ever made. I'll just be a mother and grandmother. You asked me, and I'm telling you that it bothers me. I feel old, unwanted, unappreciated, and left behind,\" admitted Paula as she began crying harder.\n\nSteve was at a total loss. He had no idea that Paula was having esteem issues. In fact, he was stunned to hear it. He always thought of her as the perfect woman. She was a great mother, a devoted wife, a sexy, beautiful woman, and a wonderful person. How could any woman with all of that going for her feel so badly about herself?\n\nSteve pulled Paula into his arms as he spoke. \"I just realized that I owe you an apology. I have not been telling you the truth. Now I think it may have been a mistake to keep things from you.\"\n\n\"What do you mean? What have you been keeping from me? How old and wrinkled I am?\" asked Paula as she continued to sob.\n\n\"The truth is that I have never met a more beautiful woman than you. I've never loved a woman like I do you. I've never felt about a woman the way I feel about you.\" whispered Steve.\n\n\"What are you saying? I know you love Gwen more than me. Everyone can tell that. Besides, I'm not trying to steal my daughter's future husband. I don't really know what I want,\" cried Paula into Steve's chest.\n\n\"Paula, I am not trying to tell you that I don't love Gwen more than I ever thought possible. She completes me. She's my life. I am telling you that you are so incredibly beautiful, so smart, so strong, so admired that I love you like no other woman I've ever met. I don't tell you often enough. I don't show you enough. Everyone always teases and makes a big deal about how I feel about you, so I tend to down play it. I'm not going to do that anymore. I love you very much and I want everyone to know it.\n\n\"This isn't about Diane. She was incredible in that movie and she lived out some of the fantasies that she and Will have. They both enjoyed her role and she loves the attention. I think you two are more alike than you realize. We've been treating you too much like a mom and not enough like the sexy, beautiful woman you are. We all need approval. I seek it all of the time. It's natural that you do as well, but you've always been the strong one. We don't see the fears and esteem issues you have because we all see you as having it all. You're the one we admire and respect the most.\n\n\"Let's go back in there and celebrate the holiday and all the things we have to be thankful for,\" suggested Steve. \"I hope you're ready for me to be more demonstrative about how much I appreciate and love you. I hope Gwen and Ted are good with it, because I'm not going to bury it any longer to avoid the teasing and remarks from everyone else. You deserve much better.\"\n\n\"I can't tell you how happy I am that Gwen has you,\" smiled Paula through her tears. \"I'm so proud that you're going to be my son-in-law. If you want to be a little more affectionate with me, Ted and Gwen will just have to live with it, because it appears that I do need it. Your opinion means more to me than it should. You know that, don't you? In another time and place, I'd be doing my best to make you mine, but not in the world we live in now.\n\n\"I feel conflicted about you. I would love to climb into bed with you and have sex all day long, and I know it's wrong to feel that way. I'm a terrible mother and wife and it makes me feel so guilty at times. I think I may mental issues or something. Normal mothers don't feel the way I do. I should not love you like I do. It isn't fair to Ted and Gwen. I know that, but I can't change it.\"\n\n\"Now there's a problem we should be able to solve, although it may embarrass you at times,\" reasoned Steve. \"You must know that I have the same feelings. I'd carry you off and have my way with you for a month if it were possible. We feel the same way! We also know that our feelings cannot be allowed to control us and we can never have sex, as much as I am certain we'd both enjoy it a great deal.\n\n\"What we can do is accept it and live with it. It seems like everyone else thinks I have a thing for you and you have one for me, so why do we keep dancing around it? You're far more to me than my future mother-in-law. You're my beautiful, smart, sexy friend, like Lisa, Naomi, Kate, and Jordan. You're not the mom; you're the sexy woman that drives me crazy with desire. There are a few of them around, but you're certainly in that group.\n\n\"From now on, I'm not going to pretend that you don't get my motor running. Gwen and Ted know that we would never break our promises, but we can enjoy each other a little more than we've been doing. What do you think?\" concluded Steve.\n\n\"Let me wipe my face a little and put some make-up back on and I'll be ready to go back. Thanks for taking time to help me through my personal emotional crises. I'll try to get a better handle on my feelings,\" promised Paula. \"Do you really think Ted and Gwen would be okay with me being more open about my feelings for you?\"\n\n\"We'll find out before too long,\" predicted Steve with a big smile. \"I would suggest that you be certain to make Ted secure in your love for him. As long as he's sure you're his woman, he'll be fine with you being more demonstrative.\"\n\n\"They've been gone for ten minutes, at least,\" worried Gwen as she once again glanced at the doorway in hopes of seeing her mother and fianc\u00e9 step through it. \"I hope Mom's okay.\"\n\n\"You know she's with Steve, right?\" chuckled Jordan. \"Have you even seen her not be alright when she's around him?\"\n\n\"Yes, a little while ago, and for the first time,\" replied Gwen. \"She was kind of cold and bitchy and that's really not like her.\"\n\n\"I feel terrible about all of this,\" revealed Sybil as she glanced nervously toward the doorway. \"Your mom shouldn't feel uncomfortable with her family because of a couple of strangers. Janice and I should have stayed in the other room.\"\n\n\"Sybil, you did not cause any problems and you will not reject Steve's suggestions when he's trying to bring you into more things. You and Janice are part of our group now. I told you he'd love you for many reasons and he does,\" insisted Gwen. \"Steve has a way of handling Mom that even Dad doesn't have. She'll be fine, but do not think you're going to be able to extricate yourself from us. Steve has made his decision, and I agree with it. You and Janice are part of us, so get used to it.\"\n\nJust then Steve led Paula back into the room. Both of them were smiling as they entered. Looking around, it was apparent to them that they had held the meal up as the group waited for them to return. \n\nPaula surprised everyone when she noticed a sprig of mistletoe hanging from a light fixture just ahead and stopped under it as she pulled Steve's face down to hers for a steamy kiss!\n\n\"My God, that guy is a miracle worker!\" blurted Kate as she watched her mother break her kiss with Steve and then hurry to Ted to deliver an even hotter, longer kiss. \n\nSteve took the opportunity to pull Gwen under the mistletoe and kiss her passionately. \n\n\"You don't need any mistletoe to kiss me any time you like,\" beamed Gwen as Steve raised his lips from hers. \"You do need to explain what's going on with Mom when we get a chance to be alone. She's okay now, isn't she?\"\n\nSteve nodded slightly as he turned to see that Ted was smiling broadly as Paula released him and strode over to Sybil and hugged her briefly, and then Janice. \"I'm so sorry that I was so cold and bitchy earlier. You two have earned your position with us and I am extremely grateful to you for saving us from those gunmen and for helping out Steve so well when he needed it. Please join us this morning and always feel welcome in the future.\" \n\n\"Okay, everyone, let's eat!\" announced Stephanie. \"We'll have a little business discussion afterwards. Merry Christmas!\"\n\nSoon everyone was seated, enjoying the delicious food, and chatting merrily. Suddenly, Billy stood up and led Charlotte out to the middle of the floor and loudly cleared his throat. Everyone looked at his way. Gwen noticed that he appeared to be perspiring and flushed.\n\nBilly suddenly dropped to one knee and Charlotte squealed in delight. \"Charlotte DeVries, will you make me the happiest man in the world and agree to marry me?\" managed Billy before Charlotte propelled herself into his arms. \n\nCaught by surprise, Billy fell over backwards with his arms wrapped around Charlotte. For her part she kept shouting \"yes\" between the many kisses she planted on his cheeks and lips. \n\nEveryone stood and applauded as Billy managed to break Charlotte's death grip on his neck and help her stand up. \"That's why you insisted that Mom attend this brunch! You are such a romantic. I love you, Billy Marsh!\"\n\n\"You knocked me over before I could get the ring out,\" complained Billy but with a big grin as he reached into his jacket pocket and pulled out a small box. He opened it and handed the ring to Charlotte as her hands trembled slightly. She sighed loudly.\n\n\"It's beautiful!\" was all she could manage as Billy slid it gently onto her finger. Soon all of the women were gathered around Charlotte as she held her hand out for everyone to admire her engagement ring.\n\nBilly's father was the first to heartily shake his hand just before his mother planted a big kiss on his cheek. \n\n\"Weren't you the guy that razzed me about getting engaged a day ago?\" demanded Steve. \"What the hell are you thinking? You told me that I should stay single and enjoy my freedom, and then you go and ask Charlotte to marry you?\"\n\n\"What can I say?\" laughed Billy as the guys began shaking his hand and congratulating him. \"I'm in love!\"\n\n\"Now that Billy's engaged, maybe he'll stop perving on us women,\" suggested Jordan with a laugh. \"He won't try to watch me nurse Ruth all of the time, although it hasn't stopped Steve. I think he has Ruth's schedule memorized because he's always dropping in just as I prepare to nurse her.\"\n\n\"I fail to see the connection between being engaged and being dead. As long as I can draw a breath, I'll admire those beauties every chance I get!\" promised Billy.\n\n\"I don't have your schedule memorized,\" protested Steve. \"I have noticed, however, that every time I stop in to discuss important, manly things with Charlie, you decide to pull out those remarkable breasts and nurse Ruth. You could feed a small nation with those amazing puppies!\"\n\n\"So you have noticed? I keep telling everyone that you're a bigger lecher than Billy. Gwen, your fianc\u00e9 likes to watch me nurse my baby. You may want to reconsider marrying a guy like that,\" cautioned Jordan.\n\n\"I call bullshit!\" declared Billy. \"Steve doesn't even come close to 'leching' as well as I do. I was peeking down your top while you were putting three slices of bacon on your plate. I watched Lisa bend over to pick up Theresa as her top opened up. I saw Diane drop a small piece of fruit down her top and dig it out. Can Steve match that?\"\n\n\"He did strip me naked and spank my bottom a little while ago. Does that count?\" asked Paula innocently.\n\nAll conversation stopped as everyone looked from Paula to Steve and back to Paula. Steve was a bright red as he squirmed nervously.\n\n\"Oops! Was I not supposed to mention that? Sorry Steve, but I couldn't let Billy think he's sicker and more perverted than you, could I?\"\n\n\"Mom!\" exclaimed Kate. \"We don't talk about the spankings Steve administers to those of us that require a strong hand from time to time. Naomi, has Steve ever laid a hand on your big ass?\"\n\n\"My ass isn't that big, and so what if Steve finds it necessary to discipline me on occasion? I don't have to share that information with you,\" quipped Naomi with a smirk.\n\n\"I stand corrected,\" admitted Billy. \"There can be no disputing it. If you somehow managed to strip Paula and spank her perfect ass, you are the king, and I am your humble apprentice, which means that you'll have to show me how you do it!\" \n\n\"Well, Grasshopper, first you grab your victim like this,\" replied Steve calmly before suddenly grabbing Paula around the waist and easily picking her up. Then he took a seat and somehow managed to get a squirming Paula stretched across his knees.\n\n\"Now all you have to do as my apprentice is to lift her skirt up over her ass and pull her panties down, if she's even wearing any,\" continued Steve.",
        "Billy looked at Paula stretched over Steve's knee and then over at Charlotte, who was slowly shaking her head. \"I think you'll have to show me how that's done. I don't seem to have the necessary nerve to perform that simple task. I guess that's why you're the master and I'm just a grasshopper.\"\n\nSteve grinned at Billy and released his grip on Paula. To everyone's surprise, she didn't jump up immediately. She slowly slid around so she was seated on Steve's lap.\n\n\"That was disappointing!\" quipped Paula before she gave Steve a quick kiss on the cheek. \"Maybe later today my husband will manage what these so-called young studs couldn't?\"\n\n\"Paula, I'm going to take you up on that,\" assured Ted with an evil smile. \"That lovely ass will be glowing red when I'm done with it.\"\n\n\"Why, Ted, I would hope you wouldn't be done after you made it glow!\" joked Paula in a husky voice.\n\n\"Where's my mother? What have you done with her?\" demanded Kate. \"Mom would never allow herself to be stretched out over Steve's lap with her ass in the air, practically daring a well know pervert to help spank her. She certainly wouldn't suggest that her husband spank her!\"\n\n\"Never mind Paula's ass. I want to know why Billy didn't try to look down my top when I dropped my spoon and had to bend over to pick it up,\" asked Naomi. \"Am I losing my appeal?\"\n\n\"Actually, I was behind you and got a great look at that nice round booty,\" replied Billy with a wink.\n\n\"Billy, I was only going to take one piece of bacon until I saw you perving down my top, so I took another and then another. You think I don't know what you're up to all of the time. I was just being nice to you,\" declared Jordan.\n\n\"And I was going to have Jason pick up Theresa until I saw that drool form at the corner of your mouth, so I decided I'd better bend over and get her myself just so you'd be happy,\" added Lisa. \"Merry Christmas, Billy.\"\n\n\"After all of this time, I find out that you ladies are giving me free shots?\" asked Billy as he pretended to stagger to a chair and sit heavily. \"God bless everyone!\" \n\nThe entire group was laughing at Billy's antics when Sybil stepped up to Steve and kissed him on the lips. As she moved back, she smiled and pointed to the mistletoe on the fixture over Steve's head. Once again laughter broke out when Janice looked up, saw the mistletoe, and also kissed Steve soundly.\n\n\"We're engaged less than two full days and you've already stripped Mom, spanked her, and kissed two secret agent ladies?\" observed Gwen with a big smile. \"I'm afraid to think what will be happening after we get married.\"\n\n\"It's been my impression that Steve's done his best to show you what'll be happening after you get married,\" responded Jordan. \"Your eyes will be permanently rolled back into your head while you tremble and shake uncontrollably.\"\n\n\"Well, yes, there is that,\" agreed Gwen. \"I was more concerned about his interactions with other women.\" \n\n\"I've been engaged two minutes and my guy has admitted looking down several rather big breasted ladies' tops just this morning, and enjoyed looking at one really big ass\" pointed out Charlotte as Naomi glared at her. \"I've come to the conclusion that our guys are male and that's what guys do. I sure wouldn't want a husband that doesn't like to look at women, and doesn't think about sex most of the time. That just wouldn't be my kind of guy.\"\n\n\"That's why we were destined to be together! I promise I'll never stop looking at these ladies' boobs and butts,\" pledged Billy. \"I won't keep you guessing about it because I'll always be obvious. I'm not like Steve who pretends to not notice, but actually memorizes every curve, every freckle, every hair, every...\"\n\n\"Okay, Billy, we get the picture,\" laughed Charlotte. \"Looking is okay, but never forget that I've got the only boobs you'll be fully enjoying.\"\n\n\"I don't think I've ever seen such a compatible couple,\" joked Jordan. \"He's a perv and she revels in it.\" \n\n\"It's time for a brief discussion on our company's plans for the next few months,\" broke in Stephanie. \"The gentleman sitting next to me is James Hawthorne. He's from England and he's probably totally scandalized by now. Last night he watched my big love scene with that studly guy engaged to Gwen, then he saw my mom get the full treatment, and I have to say this. Mom, you were really good and really sexy!\"\n\nWith that comment, everyone voiced agreement and cheered and clapped as Diane blushed while she smiled at Will and then everyone else. Her smile got even bigger when Paula came over and hugged her and whispered into her ear.\n\n\"Then James got to hear how Steve stripped and spanked his future mother-in-law and how Billy has been trying to see every inch of breast and every nipple in the building since he arrived this morning. What must he be thinking right now?\"\n\n\"Truthfully? I was thinking I'd like to spend more time with you and your family,\" replied James in a British accent. \"I've never seen a group enjoy each other, and be so comfortable with each other as all of you are. It's inspiring.\"\n\n\"Or were you inspired by how sexy Stephanie looked with her clothes off in that movie?\" asked Kate as the others laughed. \"I have a feeling that you may be just as bad as Billy and Steve.\"\n\n\"Back on topic,\" blushed Stephanie. \"We've been approached about Jordan, Gwen, Charlie, and Steve hosting the Academy Awards again. Last year was the highest rated show they've ever had. They want to start advertising that you guys will host again, if you're willing. Unless you have some really serious objection, you will be doing it. That show was huge for this company. The PR was tremendous.\n\n\"No objections? I'll tell them that you'll do it. They mentioned that they would like Gwen and Steve to perform that 'Billie Jean' dance live as they sing it, so you two may need to brush up on the routine before then. Charlie and Jordan will be expected to perform a couple of their hits from 'Jurisprudence'. They also want Becky and Pete to be presenters.\"\n\n\"Really? We get to present at the Oscars? That is so cool!\" gushed Becky. \"Meeting Gwen, Jordan and Steve was the best thing that ever happened to me. Thanks so much!\"\n\n\"That brings us to the movies we released this year,\" continued Stephanie. \"Singlehandedly has earned over $135 million so far. That makes it a huge hit and almost a blockbuster. You guys did great!\n\n\"I can tell you that 'Jurisprudence' is a bona fide blockbuster with over $250 million at the box office, and it's still playing in theaters and doing quite well. Last week it was number three at the box office and that was after being released a month ago.\n\n\"Then there's 'Billie Jean' which was just released Friday evening. Early indications are that it's going to be absolutely huge. Reviews for all three movies were very positive. I think they'll be some Oscar nominations for some of the people in the room. \n\n\"All of the success with the movies will more than cover the expenses the company incurred building hospitals and helping people after disasters. Then there are the sales of our music, clothing line, posters, and action figures, as well as the animated movies we'll be releasing this winter. The company's net worth will increase quite a bit, even with our considerable humanitarian efforts. How cool is that?\"\n\n\"Lady in Red has decided to show it's appreciation to Jeff and Julie Wilson for turning around the factory they so graciously agreed to manage. They will receive a substantial salary increase as well as a generous profit sharing package.\"\n\nAs Stephanie finished her sentence, everyone began clapping and cheering as Jeff and Julie finally stood and smiled to everyone. It was obvious that they were delighted by the praise and recognition.\n\n\"Lady in Red is also giving Becky and Pete a bonus for doing so well in their movie and hopes it will encourage them to keep working for us,\" stated Stephanie. \"Mom will be getting a big bonus for her amazing contribution as the sexy cougar and choreographer for 'Billie Jean'. I've been told that my check will be a little bigger this week, too, so thanks guys!\n\n\"As you all know, Gwen has been elected for another term as Congresswoman. She and Steve feel that Ashley has outperformed their high expectations. She will be compensated accordingly for doing such an incredible job in Washington.\n\n\"Please be patient,\" urged Stephanie. \"Everyone that has action figures in their likeness will be receiving some healthy checks since sales have been very brisk. Those of you that do voices for your characters in the animated movies will be paid handsomely as well. The owners of Lady in Red are extremely proud of everyone and appreciate of all that you do to help make the company a success. \n\n\"We all know that we'd do it for free because we feel the same about helping less fortunate people as the owners, but it's nice to be paid. It symbolizes the appreciation of Lady in Red,\" asserted Charlotte.\n\n\"Our Super Bowl commercials were huge hits last year. We outperformed some very expensive ads. I think Gwen and Jordan had something to do with that. The rest of us didn't hurt, either. We'll shoot some commercials while we're in Hawaii on the beach. For some reason, pretty women wearing little or nothing seems to sell.\n\n\"Finally, Jordan, Gwen, Charlie, and Steve are doing a live New Year's show again this year. It's going to be from the beach on Maui, and all of you are invited to go! All expenses will be paid by the company. This includes everyone in this room and the rest of Sybil's associates that are not here this morning. This show is Billy's fantasy. Please bring the smallest swimsuits you dare and plan on being part of the audience and on TV when the cameras pan the audience. Last year we had a great time in Key West and expect to enjoy Maui at least as much. Thanks, and Merry Christmas!\" \n\n\"I'd like to say a few things before everyone leaves,\" announced Jason. \"All of you know that we've been helping in natural disasters and emergencies for the past year. We've spent $338, 584, 000 last year to help people caught in these disasters. This was possible because Jordan, Charlie, Kate, Lisa, Gwen, and Steve are so generous and concerned about other people. I just wanted to publicly thank them.\"\n\nOnce the applause died down, Kate strode out in front of the group. \"As many of you know, I've been writing or helping to write some of the screenplays for our movies. I want to make a movie next spring with Steve, if he has the time and is willing. It's going to be along the lines of 'The Graduate' and I'll be the fine young lady that catches Steve's eye. I want Mom to play the part of my mother and Steve's other love interest. Will you be in the movie with me, Mom? It would be so cool for us to star in a movie together.\"\n\nPaula showed her surprise at Kate's request as she looked at Kate and then Ted. He was grinning and nodding. When Paula turned her gaze to Gwen, she saw her smiling broadly and also nodding.\n\n\"I don't know how well I'd do,\" stammered Paula. \"How big would my role be and what would I have to do? Would I be in scenes with Steve where we were, ah, romantic? I don't want to embarrass Ted, or myself.\"\n\n\"Then it's settled,\" quipped Ted. \"I'm good with it. I can't let Will stay one up on me. I'm sure you'll do great and Kate will come up with an excellent storyline.\"\n\nThose gathered gave a cheer and a little applause for Paula. Then Chip moved to the front. \"I want everyone to know that my father and I are partners in the family business now. We're getting along great and we hope to be your tire supplier. The thing I really want to announce is that we're going to build our new headquarters right here in Sparta. My parents will be living in Asgard by this time next year!\"\n\n\"I'd like to say a few things,\" announced Steve once everyone quieted down from Chip's announcement. \"I want to thank Jeff and Julie Wilson for doing a spectacular job with the new business. They did great!\n\n\"We have to acknowledge what an incredible job Stephanie has done for us. She's been everything we could have hoped she'd be. Next, we need to thank Ashley for her amazing work in Washington. She's run Gwen's office flawlessly. She handles politicians, reporters, and lobbyists extremely well. I've seen her firsthand, and she's very good.\n\n\"Our quarterly magazine is doing very well and it keeps the public informed and interested in us, regardless of how dull we are in real life. As I looked around the room this morning, I realized that we are not utilizing a very important asset. Look at how beautiful so many of the mothers in the room are! I suggest that before too very long, we devote an entire issue to these amazing women, how great they look, and how important they are to our success in so many ways.\"\n\nSteve's suggestion was met with unanimous agreement. Stephanie quickly pulled her phone out and typed in some notes as Steve continued. \n\n\"Finally, I need to ask all of you to keep us informed if you have any problems, any misgivings, any health issues, any doubts about where you stand with us. We get swept up in all of the hoopla and sometimes don't pay enough attention to those closest to us. We're family. We can't help you if we don't know there's a problem. I've briefly spoken to Gwen about this. We're going to try very hard to make a point of spending some quality personal time with each of you. \n\n\"I'm telling you this so you won't panic and think you've failed in any way if I ask for some of your time. We've been a little lax in personal interaction and we want to change that. Expect us to find time for each of you. If there are any problems, it would be a good time to discuss them. Please let Gwen and me know about any issues that you may have.\"\n\n\"Now it's my turn,\" declared Charlie as Steve finished his announcement. \"Jordan and I have received permission from Gwen and Steve to produce a musical for their wedding. We expect almost all of you will have parts in it. It's going to be a musical tour of the amazing journey that Gwen and Steve have shared since they met that day at the local mall. You won't be asked to sing if you are not comfortable with it, and many of you won't be asked because we won't have the time or material. You will be asked to participate much like you do in their lives. This is a big undertaking and we'll need everyone's help to pull it off.\"\n\nEveryone stayed another hour or so, visiting and catching up on events in everyone's life over the past year. The trip to Maui was a major topic of conversation as everyone looked forward to ringing in the New Year on a warm beach with good friends.\n\n\"So what did you and Mom talk about that kept the rest of us waiting this morning?\" asked Gwen once she and Steve were back home.\n\n\"Paula was acting out of character, so I decided to find out why,\" replied Steve. \"It's hard to believe, but she's feeling insecure, lonely, old, and unattractive. Diane's performance and how well she looked and was accepted has caused you mother to start questioning her position in the family and the company.\"\n\n\"Mom is insecure?\" repeated Gwen. \"She's always been the steady, solid one that kept us grounded. Why do you think she feels that way?\"\n\n\"Pretty much because she's always been just what you said. She doesn't flirt, she doesn't dress too provocatively, she acts like a mother, and now a grandmother. She's fine with being a grandmother, but not with being Diane's less sexy older sister. She loves you and your sisters, but she's beginning to feel that you girls define her life. She's seen as a mom, not an attractive, strong, sexy woman.\"\n\n\"Is that why you stripped and spanked her?\" quizzed Gwen with a grin. \"I never expected her to say something like that. What brought that on?\"\n\n\"That was Paula not acting like a mother and grandmother. She's trying to be more spontaneous and interesting. We need to encourage her to take chances and do things that make her happy instead of always trying to make everyone else comfortable and safe. That was a great idea that Kate had, by the way. Paula was caught by surprise, but I know she was really pleased to be asked to take a major role in a movie. I think she'll do great.\"\n\n\"I bet you do!\" retorted Gwen. \"Love scenes with Mom and Kate? You'll be like a kid turned loose in a candy store.\"\n\n\"That's another thing,\" replied Steve. \"I told your mom that I'd stop acting like I wasn't crazy about her. I told her that everyone seems to know how we feel about each other, but from now on, I'm not going to shy away from it.\"\n\n\"Exactly how do you feel about Mom? Is there something I need to know?\" wondered Gwen.\n\n\"You already know everything. I adore your mom. I think she's beautiful, intelligent, sexy, and desirable. I'm going to treat her more like I do Jordan, Lisa, Kate, Naomi, and the rest of our lady friends, and less like a mother. Are you going to be okay with that?\"\n\n\"As long as we're clear,\" affirmed Gwen. \"We all know that you carry a bit of a torch for her and that's always been okay. Just don't hurt her, or Dad, okay? I know you won't make love to her or anything, but don't make Dad resent you or feel like he has to compete with you. As long as you and Dad have a strong, respectful relationship, like you have with Jason, it'll be fine. Jason knows that Lisa loves you dearly, but he's smart enough to understand that neither of you will ever act on it, so he's fine with it. He really admires and respects you, Steve. Be sure that you never give Dad reason to be jealous or angry at you.\" \n\n\"I'll speak with Ted to see what he thinks,\" agreed Steve. \"I respect him way too much to risk losing his friendship and support.\"\n\nThe day before the New Year's show, Steve found himself sitting next to Ted as the two men relaxed in lounge chairs on a beach in Maui. \"Ted, I need to discuss something personal with you. If you feel I'm out of line, just let me know. I don't want to upset or embarrass you in any way.\"\n\n\"I imagine this will involve women?\" responded Ted. \"I'm a lot more comfortable with that subject than I used to be. Fire away.\"\n\n\"It's about Paula. She's indicated that she feels like she's older and undesirable. She envies the nerve and great figure that Diane displayed in our movie. You've heard how impressed people were with Diane's acting and her figure. Everyone agrees that she looks like she's in her thirties.\n\n\"Paula feels unappreciated. Diane has taken some chances and they have paid off for her and Will. I think Paula is second guessing herself. She's always been the calming voice of reason and now she equates that with boring.\"\n\n\"I've pretty much come to the same conclusion with Paula,\" revealed Ted. \"I feel some guilt that I married her and tied her down with kids when she could have been so much more. I'm afraid she blames me, at least in part for life passing her by.\n\n\"I don't know if you realize it, but Paula has been using our home gym religiously since we've moved to Asgard. She's lost a few pounds, toned up a lot, and looks great. I admit that little sister Diane looked great in your movie, but I honestly believe that Paula has a better figure. Do you have any suggestions on how to make Paula realize that she's far from old and undesirable?\"\n\n\"Honestly, Ted, I think I've got to compliment her more and flirt with her more, and so do the other guys in the group. We've been treating her more like a mom than like a woman. You've seen how we tease the girls about all sorts of sexual things and they love it. We've sort of ignored Paula, at least a little,\" stated Steve.\n\n\"I understand what you mean, but why are you telling me? You don't plan on seducing her or anything, do you? That would be very out of character for you and a sure way to create huge problems in the family,\" declared Ted.\n\n\"I totally agree. I promise you that I'll never be unfaithful to Gwen. I'd rather have my heart ripped out than betray her. I'd never want you to think I don't respect Gwen, Paula, or you. I'm asking you if I you would object to the guys and I being a bit more flirty with Paula. We've been paying more attention to Diane since her big movie scene and I think Paula feels left out. She worries that she's not as attractive as she used to be,\" concluded Steve.",
        "\"I'm afraid that I am part of the problem,\" confessed Ted. \"I recognized early on that Paula and Diane, and even their mother, have a bit of an exhibitionist side. It turns out that my daughters are exhibitionists to some extent as well and they're happy, respected, and doing great.\n\n\"I did my best to suppress Paula's. I told her she was a wife and a mother and needed to behave like one. You remember how I was when you first met me. I was a tight assed, sanctimonious asshole at times. I allowed my insecurities to affect my relationship with my family. It's only since I met you and your friends that I realize that trust is the key to a relationship, not control. I've learned to trust you, and I certainly trust Paula. I need to show her how much. I only ask that you don't embarrass me, or hurt Paula, or the girls.\"\n\nLater that afternoon, Steve and Gwen began singling out their friends from the group and chatting with them. The couple was surprised at how much they didn't know about their friends' concerns and hopes. Stephanie was wondering if she should sleep with James to keep him interested. Gwen counseled against that while Steve volunteered to speak with James soon.\n\nLisa was back in great shape after having Theresa and wanted to appear in more films. She also wanted Jason to be able to appear with her. She felt it would be something they could do together and always be able to look back on as they aged.\n\nBecky had been offered a big part in a movie being filmed in Spain. There was no part for Pete and she didn't know what to do, or even how to tell him the situation. Steve offered to look into the production company more thoroughly to be certain everything was legitimate. It was well known that some of the smaller film companies used pretty girls as props for their movies, which usually included being naked or topless for no apparent reason.\n\nNaomi was concerned about continuing her career in the Navy. She enjoyed being an officer and her father was extremely proud that she was. But Jared was leaving the service before too long and she didn't want to continue being away from him so much. \n\nKate seemed quite content. Her law school classes were going well and she enjoyed the writing part of movies and planned to star in one with her mother and Steve. Her relationship with Chip was strong and she felt very fortunate.\n\nDiane was ecstatic. Will couldn't stop talking about her movie role. He was extremely proud of how great she looked, how well she acted in it, and the incredible choreography job she had managed.\n\nCindy Quick admitted that she had to work hard to remain sober and clean. She told the couple that having a granddaughter gave her an even better reason to stay on the straight and narrow. Then she asked if she could appear in some films, even in smaller roles. She spoke of her pride for Jordan and how she'd like to have some good memories for herself.\n\nAshley was happy working in Washington. She confessed that being with Richard Drake and his daughter was a big reason she was enjoying her time there. She was a little worried that Richard might tire of her and move on now that his life was on track. Steve made another mental note to speak with him before too long. \n\nSteve found that his male friends were happy as long as the woman in each of their lives was doing well. They liked their work and Jared was looking forward to playing professional football. He felt like he was in the best shape of his life and ready to take on the challenge. His enthusiasm carried over to Steve, who began giving football more serious thought. Playing on the same team as Jared was a big plus. They could support each other in their efforts to make the team and maybe play full time.\n\nThe TV show was a big ratings success, as expected. Gwen performed in various bikinis while Jordan didn't feel comfortable wearing one since she had not yet regained her hourglass figure. She more than made up for it with suits that displayed her amazing milk swollen breasts. Male viewers were groaning all over the country every time Jordan shimmied on stage. Steve and Charlie wore board shorts and were bare-chested the entire time. It did seem pretty strange counting down to midnight at six PM and with the sun shining brightly, but the time difference to the east coast made it necessary. \n\nBy midnight in Hawaii, the friends were pretty much played out. Everyone gathered for a late buffet at the hotel and retired for the night soon afterward. It was a happy, well rested group that returned to the mainland two days later.\n\nGwen flew to Washington with Steve, Naomi, Kate, Ashley and Richard and Ingrid Drake. Gwen's immediate family also traveled with them to Washington to see Gwen once again take the oath of office. On the flight, Steve found the opportunity to speak with Richard Drake in private and was surprised at what the man asked him.\n\n\"I know I've made some mistakes. I was pretty much at rock bottom that day I helped Gwen from the river. Your company has given me purpose and restored my pride. Ashley has given me her love,\" began Drake. \n\n\"I would like your permission to ask Ashley to marry me,\" he continued. \"She thinks of you as the one man that cares about her welfare. She's beginning to believe that I care deeply as well. I'm asking for your blessing.\"\n\nSteve had not been expecting anything like this to happen. He had planned to ask Drake what his plans were regarding Ashley. Now he knew.\n\n\"Richard, I can't make myself too clear on this. Ashley is extremely dear to me. She has a place in my heart. I will never stand by and allow her to be hurt in any way if I can prevent it. If you love her and treat her with the respect she deserves, I'll be your biggest supporter. But if you ever stop showing her love and respect, I'll come down on you so hard you won't even know what hit you. Can you live with the knowledge that I'll always be a part of Ashley's life and will do whatever I feel is necessary for her happiness?\"\n\n\"I expect no less,\" replied Richard Drake. \"She's a wonderful woman and Ingrid loves her like a mother. If I go stupid and do something to harm Ashley, please do what you feel necessary to straighten me out. I don't think you'll ever find the need for that, however.\"\n\n\"Then Gwen and I will always be there for your family. You realize you'll be getting more than a beautiful wife, right? You're getting the entire family that is Lady in Red Productions. Welcome to the family!\" declared Steve as he shook Richard Drake's hand.\n\nA short while after Steve and Richard rejoined the others, Richard Drake dropped to one knee by Ashley's seat. Ashley's eyes suddenly got very big as she gasped in surprise.\n\n\"Ashley, I've loved you from the moment we met. Will you do me the great honor of becoming my wife?\"\n\nAshley had tears streaming down her cheeks as she looked at the ring Richard pulled from his jacket pocket. Then she turned to look for Steve. Finding his face, her smile increased as he returned her smile and nodded his head.\n\n\"Yes! I'll marry you. You've made me so happy. I love you and Ingrid so much,\" cried Ashley as she flung her arms around her new fianc\u00e9. Ingrid had been sitting next to Ashley and she quickly wormed her way into the couple's embrace.\n\n\"It looks like we're going to be attending a lot of weddings,\" observed Gwen as she squeezed Steve's hand. \"Is that what you and Richard were discussing a little while ago? Did he ask for your approval?\"\n\nSteve barely managed to nod a yes to Gwen before Ashley landed in his lap. \"Thanks, Steve! I'm so happy. Richard said that he spoke to you before he asked me. That was the right thing to do. I need you and Gwen in my life. You've helped me so much and shown more faith in me than I had in myself at times.\"\n\nAshley planted a big kiss on Steve's lips and then moved over to embrace Gwen. \"I'm so happy that I have a good guy of my own. I won't be leaning on your guy quite so much from now on. Thanks for understanding what Steve meant to me and letting me embarrass myself over him so many times. Now I'll be embarrassing myself with Richard. He's my guy!\"\n\nGwen's family, along with Steve, attended Gwen's swearing in at the Capitol Building. Unlike the year before, Steve and Gwen were able to return to their hotel for a reception for her constituents without taking a quick dip in the frigid Potomac.\n\nGwen had Steve by her side as she did her best to meet and greet everyone that took the time and made the effort to attend. The pride the voters from Gwen's district felt was obvious to all. Even as the tremendous wealth of the couple increased almost exponentially, their accessibility remained the same. They used first names for almost everyone from Sparta. One woman, upon being introduced to Gwen for the first time, actually curtsied, much to the surprise and delight of everyone watching.\n\n\"Mom, that woman acts like Gwen is a queen or something,\" whispered Kate to her mother. \"We call her our queen at Asgard, but it looks like other people are thinking along those lines. My law professors think that Gwen and Steve are the top power couple in the world today. They sure seem to garner a lot of respect from everyone here.\"\n\nAs sometimes happens, the curtsy went viral on the internet within minutes. TV and web sites played it over and over. The lady was interviewed by various news agencies about her actions. Her response was simple, yet eloquent.\n\n\"I've followed Gwen Anderson's achievements over the years. I watched 'Rise of the Queen' a hundred times. I've seen and heard about all of the generous, kind acts she's performed, mostly for children and the less fortunate. I couldn't believe it when I actually met her. She's so beautiful and regal looking that I just felt that she deserved a curtsy. She's everything a real queen should be!\"\n\nGwen spent the week in Washington going over proposed legislation and meeting with various representatives, lobbyists, and more constituents. Her final semester in Medical School began the following week. She would be returning to Washington on January 20th for the inauguration of President Rosen. In February, she and her friends would again host the Academy Awards. Her schedule was extremely full.\n\nGwen found herself somewhat flustered when more and more women she met for the first time would curtsy, much like the lady had done in the viral internet video. Men began bowing to her upon introduction, or when they were simply near her. She decided that she would be relieved to go back to Stanford where she was just another med student. She was certain that the being treated like royalty thing would fade as quickly as it started. To her surprise, more than a few of the underclassmen at Stanford began to bow or curtsy to her. She could be in a line for a cup of coffee and a bagel when a random young woman unknown to Gwen would simply walk up to her and curtsy.\n\nAfter she finally got over being embarrassed by the action, Gwen began smiling and graciously thanking the person, even though she felt she was being shown far more respect than her position deserved. The first dozen times it happened, Gwen had attempted to assure the person that she was just a regular citizen and she neither required nor warranted such treatment. Eventually, Gwen gave up trying to dissuade people from what she hoped was a passing fad. It seemed to make people unusually happy when they greeted her like that, so she simply smiled and thanked them. \n\nGwen returned to Washington two days before the inauguration. That same day, the nominations for the Academy Awards were announced. Not surprisingly, Steve and Gwen received nominations. 'Billy Jean' was nominated for best picture. It became interesting when the couple learned that Jordan and Charlie also garnered best actress and actor nominations while 'Jurisprudence' was also nominated for best picture! \n\nThe friends were delighted with the success of their films and the Oscar nominations, but they all seemed to take special pride when Diane's name was announced in the supporting actress category. Gwen, Jordan, Paula, and Diane spent well over an hour chatting about the nominations, with Gwen participating on Skype from Washington.\n\nSteve was surprised when she insisted that she go to Senator Chatham's office with him the next morning, but he readily agreed. When he entered the office, Senator Chatham explained that they were going to the White House. That was when Steve realized that Gwen knew something was going on, that he did not. She had taken the time to have his dress uniform dry cleaned and ready for him to wear that morning.\n\nOnce inside the White House, they were shown to a small office. Once again Steve was surprised to see his grandparents, Aunt Janice, and Cousin Jen along with Gwen's parents and sisters waiting for him with huge grins. They refused to answer any of his questions.\n\nSoon they were summoned by a White House staff member and led out to the Rose Garden. They were seated in the front row with dozens of photographers and reporters. Steve was extremely curious by this time. His glances at Gwen resulted only in her smiling back.\n\nEveryone stood when President Hanson strode up to the podium. He welcomed everyone and then began a glowing account of Steve's adventures while Hanson had been in office. It began with the river rescue which had occurred just after Hanson had been elected and continued through to Steve being injured while rescuing the girls on the recent ill-fated bus trip.\n\nFinally, Steve was asked to come forward to receive the Presidential Medal of Freedom! Steve was caught totally by surprise. Luckily, all he had to do was stand still as Hanson asked Gwen to come forward to help affix the medal to his uniform. Once Gwen managed that feat, Hanson nodded to her and she immediately pulled off his old ranks from his uniform to reveal new ones underneath them.\n\n\"Congratulations, Lieutenant Commander Hammer,\" grinned President Hanson. \"You've just been promoted. Stand at ease and greet your loved ones.\" \n\nGwen wasted no time wrapping her arms around Steve's neck and kissing him soundly as cameras recorded everything. Kate and Lisa quickly followed suit with kisses. Steve was surprised at how warmly Paula kissed him. Then his grandmother wrapped her arms around him. Tears trickled down her cheeks.\n\n\"You're such a fine young man. I've never been so proud of anything or anyone. Thank you for letting me be part of your life,\" was all she said before William Patterson reached out to proudly shake Steve's hand. His Aunt Janice was next, followed by Jen.\n\n\"I thought you were angry with me,\" suggested Steve to Jen. \"I haven't seen you much in the past few years. What've you been up to?\"\n\n\"After I finished my masters in business, Grandpa put me in charge of his company's Australian office,\" responded Jen. \"I haven't been back to the states in over a year, but you know that. You read my emails and write back.\"\n\n\"Yeah, I knew you were in Australia, but I missed you. I hear you're doing great there and you're being groomed to take over the whole business someday.\"\n\n\"That's what Grandpa tells me, but I'd feel better if you took more interest in the business. I know how good you are at negotiating and how well people respond to you. We could really grow the company if we worked together.\"\n\n\"My plate is plenty full right now. Besides, you're doing a great job from what I hear. If you ever need me, just let me know and I'll do anything to help,\" promised Steve.\n\n\"Not to interrupt you two catching up, but we've been asked to go inside where it's warmer for some photographs,\" whispered Gwen. \"We can't keep the President waiting!\"\n\nReporters and camera crews went inside with the group to set up for more pictures and possible interviews. The White House photographer was speaking to an assistant when Gwen was approached by a member of the staff.\n\nThe young woman gracefully curtsied before asking Gwen what beverage she would prefer. Gwen, being somewhat used to being approached in that manner, smiled and asked for a bottle of water.\n\nThat little byplay was captured by two network cameramen. The young woman returned with beverages and a short time later the pictures were taken. Once it was announced that questions would be allowed, a network reporter asked if the young woman standing off to the side could be questioned. He was assured that as long as it pertained to the ceremony, it would be fine.\n\n\"Miss, we all saw you curtsy to Gwen Anderson when you approached to ask her what she would like to drink. Was this because it's become some sort of new fad?\"\n\n\"Sir,\" responded the young woman earnestly. \"I've seen the video where that lady first curtsied to Miss Anderson, but that wasn't why I did it. It simply made it easier for me. My grandfather is a wounded Vietnam veteran. He has health issues, so he went to the VA near our home. They kept giving him prescriptions for medicine that was expensive, and didn't help.\n\n\"Lady in Red Productions recently rehabilitated an older hospital in Nashville and let everyone know that no veteran would be refused care, so Grandpa finally went there. They wouldn't even let him leave after his tests came back. He told them that he couldn't afford the bills, and he was told that there'd be no bills! He had triple by-pass heart surgery the next day. That was three months ago and he feels great!\" gushed the young woman.\n\n\"You're asking why I treated Miss Anderson like a queen? It's because she and her company treat veterans and children like royalty every day. I promised Grandpa that if I had the chance, I'd thank her for him and for so many others that she's helped so much.\" \n\nGwen was obviously caught by surprise at the woman's response to the reporter's question. She quickly moved over to the young woman and embraced her. \n\n\"I'm so happy to learn that your grandfather is doing well! He's exactly the reason why we're rehabilitating some older hospitals. With the success of the recent movies we've released, we'll have enough capital for more projects in other cities. Thanks so much for sharing that with me. Could we exchange contact information later?\" asked Gwen.\n\nSteve couldn't stop the smile that spread across his face. The interview that was supposed to be about his promotion and being awarded the honor of the Presidential Medal of Freedom had been usurped by a discussion of Lady in Red's generous acts and the appreciation of a young woman working on the staff at the White House. Steve was delighted. He had no real desire to be in the spotlight.\n\nEventually, he was asked about the award and why he appeared to be surprised by it and his promotion. Steve admitted it was a total surprise, but a very pleasant one. He thanked the Navy, the President, and his family and friends for the support required to perform at the level he hoped to maintain.\n\nThen Gwen was asked a totally unrelated question. \"Do you feel it's proper for you to co-host the Academy Awards when there is so much controversy around the awards?\" asked a newsman from a large Washington paper.\n\n\"Are you referring to the discussion about diversity?\" replied Gwen calmly. \"The film industry often leads the cultural changes of society with its totally uncensored product. That same industry also reflects society and its values. My company makes movies. We try to use family and friends. We do not discriminate. We do have a limited number of black, Asian, and Hispanic friends. I do believe that we need to work on widening our appeal and the ethnicity of our films. That said, we are a private, family owned company and reserve the right to determine what films we make, and who will appear in them.\"\n\nSteve was then asked to comment. \"We do not tolerate discrimination in any form. Naomi Wilson has appeared in our movies and even won an Oscar. We hope to make a 'buddy movie' this summer with friends and that should include Jared and Naomi. We are always open to new ideas and suggestions, but as Gwen pointed out, we will make the final determination regarding every aspect of our films. Giving up freedoms and rights in an attempt to gain a momentary balance of some kind is pure folly.",
        "\"The real solution is for more quality people of all backgrounds to participate in the film industry. That includes producing, directing, casting, acting and funding films. To be honest, I don't even know who selects the finalists in the various categories for the Oscars. Complaining about, and boycotting the awards is an option, but I question how effective it will be. We at Lady in Red Productions don't make films to garner accolades. We try to make the most entertaining movie we can and then let the public decide. I think that's the way it should be.\"\n\n\"Miss Anderson, there are reports that your future husband may try his hand at professional football. The Washington Redskins hold his rights. As a congresswoman, could you support him if he played on a team that many feel has an insulting logo and name?\" quizzed another reporter.\n\n\"Wow! You guys are full of tough questions today. I can tell you that I'll support Steve if he plays professional football, regardless of which team it may be with,\" assured Gwen.\n\n\"What about supporting legislation to get the team owner to change the name?\" followed up the reporter.\n\n\"I will not support any legislation that limits or restricts freedoms,\" asserted Gwen. \"This is really quite simple. The man owns the team. That allows him to name it anything he wants, as long as the league is okay with it. Why would congress get involved in the personal choices of anyone that is not breaking any law? Freedom is a two edged sword. Sometimes people do things we do not like, such as burning or disrespecting our flag. The irony of it is, our flag stands for the freedom to do dumb-ass things like that. The more they try to debase the flag, the stronger they make it, because they do it under the umbrella of freedom, and our flag stands for exactly that.\n\n\"If enough fans complain and stay away from games, the owner will probably change the team's name. However, that doesn't appear to be happening. I understand that the Washington team is the third most valuable franchise in the entire league. It sure doesn't sound like there's too much trouble there. Perhaps you reporters should spend your time looking into matters of importance to your readers and viewers. The name a football team carries is hardly a big issue in my book. Those that don't like it can object, boycott, protest, or pursue any number of legal avenues. They have that right, as does the owner to determine the name of his team.\"\n\nGwen and Steve found themselves all over the news again that evening. Impromptu polls indicated that the majority of Americans agreed with Gwen and Steve.\n\nThe next day, the couple stood just to the left of Vincent Rosen as he was sworn in as President. Everyone watching from home was easily able to identify them on their screens. Once President Rosen completed his inaugural speech, the couple was shown congratulating President and Mrs. Rosen.\n\nAt the first ball of the evening, Steve and Gwen sang 'Moon River' as the Rosens danced for the first time as President and First Lady. As scheduled, Steve and Gwen took the floor for the second dance as Steve sang 'Lady in Red' while he guided Gwen around the dance floor. Once the dance was over, they resumed their places on the small stage as they continued to perform with the excellent orchestra. \n\nSteve had the great pleasure of performing several Sinatra songs, while Gwen also sang numerous standards. The audience responded enthusiastically and enjoyed the affair long after the Rosens had departed to attend other balls held in their honor. At the first intermission, Steve and Gwen stepped off the stage to mingle with the guests. Once again, Gwen experienced men bowing and elegantly dressed ladies curtsying when she approached. Gwen managed to maintain her brilliant smile as she worked to conceal her surprise. \n\nThese guests were movers and shakers in government and industry, yet they quite willingly demonstrated unprecedented respect for Gwen. Steve was extremely proud of the regal way Gwen handled the situation. She spoke to everyone, shook hands, exchanged hugs, and generated a great deal of good will.\n\nSteve's grandparents, Janice, and Jen, as well as Gwen's parents, sisters, with Jason and Chip, shared a table near the center of the room. \"Ted, Paula, your daughter is absolutely unbelievable. She not only conducts herself like a queen, but everyone is beginning to treat her like one. I've never seen anything in my life that could possibly compare to this. I don't dare say it too loudly, but I think more people came tonight to see Gwen and Steve than to see the new President.\" \n\n\"I can't get over how comfortable they are entertaining this exclusive group of high rollers,\" admitted Jason. \"I thought Steve showed confidence the first time we went to Russia, but he oozes it now.\" \n\n\"I have to wonder what the future holds for them,\" mused Kate. \"Even when they're in a room with the most influential people in the world, they dominate it. Their new movie is setting box office records; they've been nominated for every award possible and now Gwen is treated like royalty.\"\n\n\"Somehow, I don't think this will be the last inauguration they attend,\" predicted Lisa. \"I wouldn't rule anything out. There aren't any limits for them that I can see.\" \n\nSteve and Gwen spent the weekend together in Washington. They attended various parties and functions, but steadfastly refused to attend anything sponsored or connected with one of the political parties. They constantly reiterated that while they supported Vince Rosen for president, they were not joining his political party. Gwen would remain registered as an Independent and vote on each piece of legislation based on its merits, not because of any political affiliation.\n\nSunday evening, Gwen returned to med school in California. She was scheduled to meet Jordan, Charlie, and Steve in LA later in February to host the Academy Awards. Jordan begged off any risqu\u00e9 opening numbers because she was still working her way back into her pre-pregnancy shape. The two couples agreed to an opening number that focused on their singing talents and required very little dancing.\n\nSteve and Gwen were already scheduled to perform their big dance from 'Billie Jean' and felt getting that right on live TV would require enough effort from them for the night. \n\nAcademy award time saw the four friends walk the red carpet together. Jordan wore a black gown that accentuated her milk laden breasts and her fans voiced their approval. Gwen's red gown once again had a slit that allowed her long legs to be on display. The back of her dress was cut almost to her lovely ass and the front was held together with a silver clasp. The sides on her ample breasts showed whenever she moved her arms away from her body. Steve and Charlie were dressed smartly in tuxedoes, although they didn't think that anyone even noticed.\n\nWill had a huge smile as he escorted Diane down the red carpet. Diane looked gorgeous with a plunging neckline on a pale green gown. She smiled and waved as fans whistled and called her name as she made her way to the theater with her beaming husband.\n\nThe four friends had an easy camaraderie that was quite apparent to the audience in the theater and at home. They delivered their lines perfectly and it was obvious to all that they were having a great time. Half way through the program, Steve and Gwen performed their routine from 'Billie Jean' and it was a huge success. The movie had broken box office records since its release and their energetic dance was a major factor in the success it enjoyed. \n\nBecky and Pete received a warm reception when they were introduced to announce the best supporting actress award. Pete tore the envelop open and handed the card to Becky to read. She smiled broadly as she called Diane's name!\n\nAs Diane made her way across the stage, she detoured to grab Gwen and Steve and pull them with her to the microphone. She released their hands to accept the Oscar and beamed proudly at the applause. \n\n\"I don't have to read a list of people to thank. They know who they are. My husband, Will, supported me when he could have just told me I'm too old to be doing love scenes with this incredible man to my left. My daughter, Stephanie, who was good enough in her role to have won this award, was an inspiration. Finally, these two people standing next to me tonight were with me throughout the entire process. Make no mistake, they're everything they seem to be, and more! I love them both and thank them from the bottom of my heart.\"\n\nWith that, Diane threw her arms around Steve's neck and kissed him hard. Then she wrapped her arms around Gwen and embraced her tightly as she cried and smiled at the same time. When it came time for best actress award, Steve and Charlie were tasked with presenting the award. Steve opened the envelope and handed it to Charlie.\n\n\"The winner is... my wife!\" exclaimed Charlie as he made no attempt to hide his pleasure. \"Jordan Quick Burns wins best actress!\"\n\nJordan and Gwen had already discussed the possibility of one of them winning the award and how they should not feel badly for their friend. As Jordan hurried toward the dais, she grabbed Gwen's hand and pulled her along. She was handed the Oscar just before she reached Charlie. She held it in one hand as she kissed him soundly on the lips. Then she moved to Steve and kissed him. She hugged Gwen and pulled her up to stand near her as she accepted the award.\n\n\"These three people here with me are the reason that I'm standing here tonight. They have given me nothing but encouragement and love since we've met. I thank the Academy for this award. Next to giving birth to my darling daughter, this is the best thing I've managed in the past year.\n\n\"I know I wasn't better than Gwen, or the other nominees. I don't know how I won, but I'll do my very best to help others attain what has been made possible for me. Thank you all, and especially Charlie, Gwen, and Steve!\"\n\nA short while after Jordan's win, she and Gwen found themselves in front of the cameras to announce the best actor award. With both Charlie and Steve in the running, they had to struggle to keep their excitement in check.\n\n\"And the winner is..\" announced Jordan as Gwen looked over her shoulder, \"William Blaine!\"\n\nBoth ladies smiled and congratulated the winner when he reached the podium. \"Don't expect me to apologize for winning an Oscar,\" joked the actor after receiving hugs from both women.\n\nAs the show was winding down, the best film was announced and 'Billie Jean' claimed the honor! Gwen, Kate, Diane, Jordan, Charlie, Paula and Steve all crowded on the stage with the director, who accepted the Oscar and gave the thank-you speech while the others exchanged hugs and handshakes. \n\nIt was a happy group that attended their Oscar party at their hotel. As had been done the previous year, Lady in Red Productions posted signs stating no drugs would be tolerated and those caught with them would be turned over to authorities. A security team from L.A. was hired to enforce the edict as well as keep a close eye out for any possible problems. The ladies from Mallory Burke's firm were invited to the party, and were told they were not on duty. \n\n'Billie Jean' enjoyed renewed interest after winning the Oscar for best picture. The movie would go on to make over a billion dollars internationally. Jordan's Oscar gave new life to 'Jurisprudence' which went on to make four hundred million. Once 'Singlehandedly' was added to the mix, Lady in Red Productions raked in over a billion and a half dollars on the three movies. Even after expenses, the company's net value increased to about three billion dollars.\n\nPlans were made to create movie projects that included Jordan, Charlie, Lisa, Jason, Kate, Naomi, Becky, Diane, Paula, Cindy Quick, and Stephanie. Gwen was simply far too busy with her studies and her work in Congress to be involved. Steve had a project planned with his friends. He wanted to make an action film with all of the guys and their ladies. He hoped it would help convince Jared and Chip that making movies wasn't all that hard or embarrassing. He was in contact with North Korea to determine if it would be possible to film at least part of the movie there. He felt it important that he maintain the rapport he had enjoyed with Jong. One never knew when knowing a leader of a country might come in handy.\n\nSteve and Jared had somewhat reluctantly left the service on March 1st. They had originally thought that they would have to remain with Uncle Sam until July, but discovered that wasn't the case. They decided to leave early so they could begin training for football. Steve felt that he had a lot of work to do to get into playing shape. Jared simply needed to work on conditioning. There was little fanfare over their return to civilian life. \n\nIt was a busy winter. Gwen managed to fly to Washington for several key votes while maintaining her course to graduate med school in the spring. Steve and Jared had both submitted the required paperwork to leave the service. Sports pages were filled with theories on how well the two friends would do in professional football. Jared was interviewed on a morning sports show in mid-March. \n\n\"Redskin linebacker, Chad Dawson, was quoted as saying that playing in the NFL was going to take a lot more determination and skill than Steve Hammer would be able to come up with. He said that making movies and giving concerts had made him soft. He'd lost his competitive edge. Dawson added that since Steve Hammer was so wealthy, he'd never submit to the hours of training needed to be successful at that level. How would you respond to his assessment of your friend's chances?\"\n\n\"With a smile,\" responded Jared. \"I understand that Dawson is a pretty decent linebacker. Obviously, he isn't the person responsible for determining the talent in training camp. Steve has seen and done things that would make Dawson wet his pants. He's a Navy SEAL, along with being a wealthy actor, and musician. It would be a huge mistake on Dawson's part to dismiss Steve as lacking in determination, skill, discipline, or desire.\"\n\n\"There are reports that the two of you are negotiating as a package deal. Aren't you worried that you might get less than you would if you went alone?\" asked the interviewer. \"It's obvious that you're in great shape and could probably start at defensive end for most of the teams in the league. Is it wise to team up with Steve Hammer in this way?\"\n\n\"That's another easy question,\" laughed Jared. \"There are certain unchanging elements in the universe, like gravity. Another certainty is that you are always better off with Steve Hammer than without him. It's that simple. He's negotiated with world leaders on some pretty serious matters. Getting a good contract for us will be a walk in the park for him.\"\n\n\"You two go pretty far back,\" observed his interviewer. \"How has his friendship been important to you over the years?\" \n\n\"It's all pretty much public record. When Steve decides that you're his friend, you suddenly have a responsibility to be the best person you can possibly be. You worry a lot about letting him down. As time goes on, you realize that you've become the person he always thought you were. He's never failed me in any way and he's helped in all kinds of ways.\"\n\n\"How about those famous photos of his girlfriend standing naked with you? Was there any trouble between you two over that?\" pressed the reporter.\n\n\"If you recall, my girlfriend was on his lap, so we were both cool with it. Steve is devoted to Gwen and she feels the same about him. We can share private moments as friends, but believe me when I tell you that neither Steve nor I would ever be dishonest or unfaithful. It's a code we have. Every other guy's lady is like a sister. We're protective and supportive, but we're also monogamous. That may sound dull, but it's the code we live by, and it works.\"\n\nIt was mid-April when Steve received a phone call from an upset Nadiya. He was weekending in Sparta while Gwen was in Stanford. \n\n\"We are having a problem at the hospital! Dimitri Hasko has decided that the hospital must give him ten million American dollars for insurance. He expects it by the end of the month.\"\n\n\"We already have insurance, don't we?\" asked a puzzled Steve. \"His premiums are way too high to be considered. Just tell him we're happy with the insurance we have. It doesn't seem like you'd call me for something so simple.\"\n\n\"It isn't simple! He wants Lady in Red Productions to pay him ten million dollars or bad things will start happening. There could be fires, beatings, rapes, and murders!\" responded the agitated Nadiya.\n\n\"Has he threatened you?\" demanded a suddenly furious Steve.\n\n\"He said that if he didn't get his money by May, he couldn't guarantee my safety. I told him that my father was a deputy prime minister and he just laughed. He again stated that he needed the money by May or bad things would happen,\" repeated an obviously worried Nadiya.\n\n\"Nadiya, I'll be flying over tomorrow. Don't fret. I won't let anything happen to you. I'll call or email you with my itinerary when I have it settled.\"\n\nOnce Steve hung up with Nadiya, he called Jason and explained the situation. The two men conferred for a few minutes and decided on a course of action. Steve, Jason, Chip, Charlie, Pete, and Jared would be taking the Red Lady to Kiev and meet with the man threatening Nadiya to see if they could dissuade him from following through with his threats. If that failed, they would look into more difficult remedies.\n\nSteve received a call from Gwen a short time later. \"I just got out of class and had a message from Lisa. She said that you're going to Kiev tomorrow. Nadiya is having trouble with some gangster. He's threatening all sorts of things unless we pay him ten million dollars?\"\n\n\"That's the short version,\" agreed Steve. \"We're flying over to see if we can settle this and prevent any innocent people from getting hurt.\"\n\n\"Why does it sound like some not-so-innocent people may be getting hurt?\" asked Gwen. \"Couldn't the local authorities handle this?Do you and the other guys have to get involved?\"\n\n\"Yes, we do. I've dug into this guy's background. He pretty much runs the underground in Kiev. Police are afraid of him and he has some friends in government. He runs drugs, prostitution, gambling... you name it. He's a ruthless sociopath. We're committed to the people of Kiev and we can't let this monster win.\"\n\n\"What about paying him? We have the money,\" responded Gwen.\n\n\"Seriously?\" asked Steve.\n\n\"No, I know better than that. It would never end and he'd just use the money to build his empire. We'd be making things worse. I just worry about you guys. This sounds pretty serious.\"\n\n\"We'll be careful. I promise you that,\" replied Steve. We can't leave Nadiya, her family, and the hospital in the lurch with this situation. We need to handle it now. We'll call from there and let you know how things go,\" promised Steve.\n\nSteve's phone rang again a few minutes later. \"Steve, I understand you're going to Kiev tomorrow to handle some unpleasant business,\" began Ted. \"I'll be packed and ready, so don't try to leave without me.\"\n\n\"Sir, this may get a little ugly, if you know what I mean. It might be better if you stayed home,\" replied Steve.\n\n\"You mean with the women?\" demanded Ted. \"My daughters' men are headed for possible trouble and I should stay home?\"\n\nSteve smiled grimly to himself as he considered Ted's words. He may not have been trained by the military like the rest of the guys, but Ted was a proud man and needed to be treated with respect, even if it might include serious danger.\n\n\"We'll be expecting you, Sir,\" replied Steve. \"The helicopter will be here at six AM and we'll be leaving shortly after that. See you then.\" ",
        "A short time later, Steve heard the front door open and someone step inside. Steve waited in the darkness and watched for movement passing by a window that allowed a small amount of moonlight in. As the person passed him, he spoke.\n\n\"Paula, you could get hurt walking in here in the dark without knocking, or at least turning some lights on. Why are you sneaking around?\"\n\n\"I had to come over and see you before you left for Kiev. Ted told me that he's going with you. He feels it's his duty. I told him that he should stay home and let you younger men handle it. He got angry and stomped out. I watched him walk over to Lisa's, so I came here.\"\n\n\"So tell me why you're here,\" prodded Steve.\n\n\"Please don't let anything happen to Ted. I'm going to insist that he stay home, but he may not listen to me. If he does go, please make sure he doesn't get hurt,\" begged Paula.\n\n\"So the truth comes out?\" chuckled Steve. \"You really love the guy and you worry about him. And I thought you'd stopped in to beg me to stay home and be safe. Now I find out that it's your husband that you really love. How do you think I feel right now?\"\n\n\"Like a jackass, I hope,\" replied Paula. \"This is no joking matter. Ted wasn't in the military like the rest of you. He's a kind, gentle man.\"\n\n\"You think Jason isn't? Or Chip? Or Jared?\" questioned Steve. \"You don't seem to realize what you have in that husband of yours. He's a great deal like the rest of us, but without the military part. He's got enough courage for a dozen men. Do you think it's easy for him to be involved in this? He isn't trained, but he loves his daughters and wife. He'll go to war to help save the men his girls love. You should be very proud of your husband. He's a man you can depend on to have your back.\n\n\"When you go home tonight, you will not try to talk him out of going. Instead, you'll make sure he knows how proud you are of him and thank him for being the man he is. Tell him you'll be waiting for him to return and then maybe blow him and screw his brains out so he'll remember you while he's gone.\"\n\n\"Excuse me? Did my future son-in-law just suggest that I perform fellatio on my husband before coupling with him?\" asked Paula in a fake huff.\n\n\"I don't think I said anything like that,\" replied Steve. \"I want you to make Ted know how proud you are of him and give him some really good sex.\"\n\n\"What about you? Gwen isn't here, so what will you remember while you're gone?\" asked Paula.\n\n\"I'll call her when I go to bed and have a nice conversation while you're riding Ted reverse cowgirl style,\" kidded Steve. \"I want to see a big smile on his face when we climb on that chopper tomorrow.\"\n\n\"Okay, I'll do it!\" grinned Paula. \"His smile will be dazzling. Maybe he'll make my eyes roll back into my head.\"\n\n\"I hope he does,\" laughed Steve. \"Now get back home and do whatever you do to get Ted all cranked up. Don't make me spank you again.\"\n\n\"Again? I gave you too much credit that day. You'll never have the nerve to...\"\n\nSteve grabbed Paula and quickly spun her around as he sat in a kitchen chair. Almost before she could realize what was going on, Steve's hand came down on her nicely rounded bottom. She was wearing jeans, so the effect was minimal, but after several more applications, she was certain that her bottom was glowing red.\n\nJust as suddenly, he lifted her up and placed her on his lap and kissed her gently. \"Now go home and do as you're told. Give Ted a night to remember. If he isn't grinning from ear to ear tomorrow morning, you'll be disciplined again when I get home.\n\n\"You're spanking me now, and telling me what to do, including having sex with my husband? I think I like this new slant to our relationship,\" whispered Paula as she kissed Steve softly and then left the house.\n\nThe next morning saw the men tossing some canvas bags into the chopper before climbing in. Ted scampered in and took a seat between Steve and Jason. He appeared nervous, but determined. Steve decided to have some fun with his future father-in-law.\n\n\"Gwen tried to talk me out of going,\" he began. \"But she knows it has to be done and we can't abandon our hospital, or our friends. How was Paula?\"\n\n\"At first she was determined to talk me out of going, but by the end of the night she told me that she was proud of me and how I supported my family and did everything I could to keep our girls safe and happy. We actually had a pretty good night. I guess she was giving me something to remember her by.\"\n\n\"Uh-oh!\" teased Jason. \"You're not going to be any good to us for a day or two. I know that look. I sure hope Lisa looks and acts like Paula in twenty years!\"\n\n\"She could do a lot worse than take after her mother,\" agreed Ted. \"I just hope my heart can take it.\"\n\nIt was about nine PM local time when the Red Lady touched down in Kiev. The group had two rental cars reserved, along with a large home on the outskirts of town. They were going to sleep for several hours before meeting with Nadiya and her father. Once they had their bags inside the house, Chip asked Jason and Steve if they noticed the van that was parked less than a mile down the road. Both men nodded.\n\n\"It was in really good condition, so it's extremely unlikely that it was abandoned,\" volunteered Jared. \"I think we have someone keeping tabs on us. They know where we're staying, and probably how many of us are here.\"\n\n\"They're going to be prepared in case our negotiations don't go their way,\" agreed Steve. \"We should be okay tonight since we haven't formally declined their extortion, but once we do, it'll probably get pretty hot around here. That's why I asked Nadiya to rent a place that was secluded. We don't want innocents getting caught up in this.\"\n\n\"Just from seeing a van parked down the road, you assume we're going to be involved in a small war?\" asked a stunned Ted. \"Couldn't it simply be broken down, or a couple of young lovers?\"\n\n\"It could be,\" admitted Jason, \"but we won't get shot to hell if we assume they're armed thugs and prepare for them. If it's just a couple of kids screwing, we'll still be alive. If we assume it's broken down, or kids parking, and it turns out that Hasko lets his dogs loose, our asses will be in some deep shit. We'll be ready for the worst case scenario.\"\n\nThe next morning saw Steve, Jason, Charlie, and Ted at Nadiya's parents' home. It was obvious to Steve from the first moment he saw them, that the family was extremely tense.\n\n\"He's made millions with extortion, prostitution, drugs, and every crime you can think of,\" asserted Nadiya's father. \"He's very powerful and has spies everywhere. I'm sure he knows that you're here right now. No one lives long enough to testify against him. He has bribed more than a few high ranking people in the police department, I am certain. I don't know what you can accomplish, other than pay him. Perhaps you can get him to agree to take less. If you refuse his demands, I will send my wife and Nadiya away from here until I feel it is safe for them.\"\n\n\"Then you may want to buy their tickets right now,\" stated Jason. \"We don't pay extortion.\"\n\n\"Let's not be too hasty,\" suggested Steve calmly. \"It may be prudent if you make plans for Nadiya and your wife to leave the city, because this will be coming to a head and we can't guarantee we'll be on top when the smoke settles. First, I want Nadiya to set up a meeting with Hasko so we can feel him out. We may be able to convince him to forget the whole scheme.\"\n\n\"That will be when the pigs fly around Kiev!\" declared Nadiya. \"He is a monster. He does unspeakable things to women and children to keep men in line. If someone goes against him, their family suffers horrible torture and death.\"\n\n\"Okay, I get the picture,\" replied Steve as he noted the terror in Nadiya's voice. \"You and your mom should make arrangements to be somewhere safe for a few days. This will be settled by then. I guarantee it. Can you set up a meeting for us?\"\n\n\"I have been given a number. I will give it to you and you can make arrangements. I think Mother and I will follow your advice and pack our bags,\" responded Nadiya as she handed Steve a slip of paper.\n\nThe men said their goodbyes and left the Misko residence. Charlie made a suggestion. \"This guy has a deputy in the government afraid for his family. I think it would be a good idea to put everyone back home on alert. The slimy bastard could have people ready to hurt our families if he doesn't get what he wants.\"\n\nSteve nodded and pulled out his phone. \"Sybil? Steve here. I'm sorry about calling at this time of day. I know it's late there, but this is important. You know that we're in Kiev, and you know why? We're concerned that things may get hot there if this gangster tries to convince us to pay the extortion by going after our loved ones. He's been known to harm family members to make people fall in line.\n\n\"You need to go into your highest alert. Do not allow Gwen, or anyone else to overrule a single safety precaution. Do you understand me? I'm serious as a heart attack here. You will take full control of the situation at Stanford. Inform your mother that I expect her to do the same with our families in Sparta. Charlie, Jason, Chip, Ted, and I are on the same page with this. Err on the side of caution for the next few days.\"\n\n\"Okay, Steve. I'll get up and get on it right now. Just remember that I'm following your orders, so if anyone gets upset with our demands and methods, I expect you to back me up totally,\" insisted Sybil. \"This is what we do, so don't worry about your families. Will you guys be okay there? This sounds dangerous.\"\n\n\"We'll be careful,\" promised Steve. \"You just make damn sure that our families are protected. Spare no expense and don't let your guard down for even a second.\"\n\nThen Steve placed a call to the number Nadiya had given him. A raspy male voice answered in Ukrainian and Steve responded. \"This is Steve Hammer, from Lady in Red Productions, the owners of the hospital that you want to 'insure'. Is this Hasko?\"\n\n\"No, it is not. I can take of anything you need to know. I am his lieutenant,\" replied the man in perfect English.\n\n\"Well, that may be, but I'll need to meet with Hasko in person to discuss his proposal,\" replied Steve.\n\n\"That will not be possible. Mr. Hasko does not meet with his clients. I can take care of it.\"\n\n\"I'm sure you can, but I'll talk to Hasko about the ten million, or I'll simply leave Kiev. It seems like he has ten million reasons to meet with me. I'm sure you have my number on your caller ID. If you change your mind before this afternoon, call me back,\" stated Steve as he disconnected.\n\n\"We can't go back without settling this,\" stated Ted. \"You've just pissed the guy off.\"\n\n\"Let's go get something to eat,\" suggested Jason. \"This may be a long day.\"\n\nWhile enjoying a late breakfast, Steve called Chip and spoke with him. He filled him in on everything Nadiya and her father had told them. Chip promised that he, Jared, and Pete would be prepared.\n\nAs they were paying the bill, Steve's phone chirped. Steve grinned at Ted and then answered it. After some discussion, Hasko's lieutenant set up a meeting for them in the auditorium in the hospital. He wanted Steve to be there waiting, alone and unarmed. Steve simply laughed at that request. \n\n\"I'll have three men with me and we will be armed, as I'm sure you will be. I'll see you at three this afternoon. Let's work out an agreement we can all live with.\" \n\nThe Americans arrived early. Steve and Charlie took seats at a desk at the front of the auditorium. Jason and Ted stood behind them and to the side.\n\n\"Ted, this may go to hell in a hand basket,\" stated Jason frankly. \"I don't know how we'd be able to tell Paula and the girls if anything ever happened to you. It might be better if you waited down the hall.\"\n\n\"You can tell them that I went out like a man,\" responded Ted quickly. \"How would I be able to face them if I hid in some corner and one or more of you were badly hurt? It works both ways, so don't try to change my mind. We're in this together.\"\n\n\"Let me say this, Ted. You've shown more courage and discipline than a lot of the officers I've served with,\" responded Jason. \"You'll do.\" \n\nAt precisely three, the door to the auditorium swung open and four men in dark clothes walked into the room. They were followed by a tall thin man dressed in an extremely expensive suit. Five more men followed him into the room. They took up positions behind the man in the suit as he took a seat at the table across from Steve.\n\n\"This meeting is totally unnecessary,\" began the tall thin man Steve recognized as Hasko from the file he had studied. \"You will now pay me fifteen million dollars before the end of the week.\"\n\n'Why do you feel we would simply hand you that kind of money?\" asked Steve calmly. \n\n\"Because you want your families to live,\" responded Hasko. \"By now, my men that are stationed in your country have taken two of your women and await my orders on what to do with them. They also have the infant daughters. The rest of your families will be killed immediately if my men do not hear from me within fifteen minutes. If you do not agree to pay me fifteen million, I will have the first two women raped repeatedly, before I have their tits cut off, fried in butter, and eaten by my men. Then your darling daughters will ...\"\n\nHasko never finished the sentence as a bullet from the gun in Jason's hand struck him between the eyes. Ted had been furious as he listened to the lunatic, Hasko describe what he intended to the women in his family. From the statement about having daughters, he decided the man was referring to Lisa and Jordan! He never even saw Jason move before the gun roared in his hand and Hasko was propelled backward, tipping his chair over so his sightless eyes pointed at the ceiling."
    ],
    "authorname": "Harddaysknight",
    "tags": [
        "extortion",
        "kiev",
        "oscars",
        "proposals",
        "football",
        "insecurities"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/lady-in-red-pt-02-ch-22"
}