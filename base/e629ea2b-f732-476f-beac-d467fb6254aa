{
    "title": "Do It or Lose It",
    "pages": [
        "I pulled up to Leah's apartment; a small, blue and white Cape Cod-style house with heavily weathered shingles. It had inexpensive rent and overlooked the parking lot for a hair salon and a cheap Chinese takeout spot we sometimes ate at after a late night of drinking. I fondly recall all the times I sat across from Leah, watching her interrupt a silly grin by shoveling vegetable lo mein into her mouth. When you pine for someone, isn't it always the most mundane moments that somehow seem so riveting?\n\nLeah and I were childhood buddies. Life-long best friends in fact. Even our families were close. We went through every year of summer camp, every grade of school together, and even followed each other to the same college where we were finishing up the semester. People were always surprised about us - I guess because despite our history we'd never hooked up in all those years.\n\nIt sure as hell wasn't because I didn't want to...\n\nI fantasized about us more times than I care to admit but nothing just ever happened between us, even though I couldn't help but feel a little mutually electric curiosity there. Maybe it was because we'd been friends for too long. Maybe we were just in too deep and couldn't see it any other way.\n\nThat day I knocked on her door just like I always do. I remember watching a flock of seagulls pass and then a flatbed truck rumble by while waiting for her to arrive, then turned and saw the beautiful smile blooming across her face as it always did when we saw each other. Leah gave me a big hug and welcomed me inside. We each grabbed a beer and she cranked up the music she'd been playing. Despite her usual joviality, she had been trying to drown out certain thoughts in her head. Leah had just broken up with another boyfriend and I had come to cheer her up. Somehow, I was always the antidote to that problem and it happened more often than I wished.\n\nLeah was simply gorgeous. Tall, slender, with a beautiful, even tan. Her hair was long and brown, gently sun-bleached, always with some small accent like a single braid or a thread of tiny beads. She had bright blue eyes, a glowing smile, and an impossibly infectious laugh. Some might describe her as a little hippie, a little surfer girl, but she wasn't entirely either. She was just the type of free spirit you wanted to go to an outdoor concert with, or hiking, or for a drive out to the beach. Or anything, really.\n\nThat's just how I thought of her when I closed my eyes. Gently interacting with all the trees on that trip we took upstate to Kaaterskill Falls, her fingers curling around their trunks as she passed. Later, perched atop of a boulder, scooping up insects to peer at them inquisitively. Strolling through the shallow water, gazing at the wavering reflection of her toes. Privately, all I thought about was going for a roll in the leaves with her and listening to that musical laughter.\n\nI popped the beer can open and we made our way into her bedroom; Leah's sanctuary. I tried to decipher just how upset she was but she hid it well. Being so beautiful made her popular with the guys, many of whom just wanted to hook up, most of whom I did not approve of. I gave her my best advice when she asked for it but who was I to stay who she should date? If anything, I was most attracted to her tenacious positivity and strength of conviction about everything she put her mind to, no matter the risk of ending up wrong and disappointed in the end.\n\nThere were times my heart ached pretty badly, like the time she introduced me to my sophomore year girlfriend, Tara. Not that Tara hadn't been fun to be with. She and I had a lot in common and for a while we had a great thing going. She was a petite firecracker, full of passion, outgoing, and awash with humor. And, of course, I enjoyed our intimacy. She was quite busty for her size. Many a time I found myself just wanting to drown in her warm, pillowy breasts as she stroked my hair and hummed along with whatever cheesy pop song was playing on the radio.\n\nStill, it was hearing Leah later say, \"She's perfect for you,\" that echoed in my head. It was one of those lines that implied so much more about the status of our own relationship. It left me with a lingering sadness that I could never quite be rid of.\n\nLeah and I had a couple of drinks laying in the mountain of excess pillows that she always kept piled up on her bed for some reason. They reminded me of the childhood forts we used to build with her dad, who was always a lot cooler than mine. For a while we dissed her ex-boyfriend and laughed about it, using humor to hide her pain. When I drink, I am especially prone to saying embarrassing things. But she knew this well...\n\n\"I hope the sex was good at least!\" I remarked, not really wanting to hear the answer.\n\n\"Oooh it was,\" she laughed. \"I guess that's why I hung around longer than I should have.\" She often took on a slight blush even though we could always talk to each other about private stuff.\n\n\"Back to porn?\" I joked.\n\n\"Ha, more like back to my trusty vibe,\" she mumbled, turning a little redder.\n\nI appreciated that we could joke about such things with each other. I had heard of that mysterious object's existence before but I didn't quite know much more than that. I had a pretty good picture in my head of how it looked. Or at least how I wanted it to look. Not to mention what I imagined her doing with it. We were silent for a few minutes as her reply sunk in. I badly wanted the conversation to continue in the risqu\u00e9 direction it had taken. Anything for a chance to hear more about her intimate needs. \n\nAdmittedly, after a couple of drinks I was liberally entertaining myself with the thought of Leah masturbating in private, right where she lay. Thanks to the buzz I was feeling, I said, \"Do you have a favorite fantasy?\" Leah burst out laughing. \"What?\" I chuckled. \"I'm serious. What's your hottest, deepest fantasy? The one that banishes all ex-boyfriends from your mind.\"\n\nLeah thought for a moment. \"Man, I can't tell you that,\" she snickered. \"A girl's gotta have a few secrets...\" She turned her head and grinned at me.\n\nThe word \"secrets\" reminded me of something I hadn't thought about in years.\n\n\"Say it or lose it!\" I found myself blurting out.\n\nThe air suddenly felt like it was sucked out of the room. Her eyes widened and then darted back over toward me. After several moments, she exclaimed, \"You remember that?!\"\n\n\"Yup!\" I replied.\n\n\"Say it or lose it\" was a thing we occasionally said to one another as kids if we wanted to veto the other person's right to secrecy. If the other person still refused to answer, they had to have a strand of hair snipped off their head with a pair of scissors. Of course, in all the years we played that game it never actually came to that. We just occasionally forced each other to spill the beans and the other person always complied. It was as if we wanted to test each other - to prove again and again how deep our special bond of trust was.\n\nIt wasn't done in a mean way, mind you. We had used it when we wanted to know something that the other was too shy or embarrassed to say but always with the intent to make them feel like it was okay to share. It was a special connection we had. We always kept each other's secrets and made one another feel safe.\n\nI learned about the \"scary\" thing that happened to her one day (her first period), her secret crush (Michael Redondo), and other juicy nuggets about her life growing up. She learned about the time I accidentally walked into the girls' bathroom and couldn't look my female classmates in the eye for a week. How I got detention for throwing my sloppy joe at someone in the cafeteria. The time Nina Mathis and I kissed at my birthday party.\n\nAfter using our special power for the first time in years, I watched Leah's mouth stretch into a nervous grin. She stared up at the ceiling and then resigned herself to a response.\n\n\"Well... I have this one recurring fantasy...\" she began. \"I guess I'd call it my favorite one? It always involves... um... randomly hooking up with a complete stranger. You know... like someone I just met at a hotel bar or something.\"\n\n\"Oh wow, I wouldn't have pegged you as the type to want stranger-sex,\" I laughed.\n\n\"Don't judge me!\" she exclaimed, playfully swatting me with a small embroidered pillow that was a lot harder than it looked.\n\n\"I'm not judging you. It sounds like fun!\" She giggled next to me. \"Do you think you'd ever actually do that?\" I asked curiously.\n\n\"I dunno... It's always just been a fantasy.\" She paused for a moment. \"But I've even-\" Leah stopped abruptly, hiding her face in her hands. \"Never mind,\" she concluded.\n\n\"May I remind you that you're still under say-it-or-lose-it.\"\n\n\"Oh I am, am I?\"\n\nI pretended to check my watch. \"Yup. For another thirty-two seconds.\"\n\nShe laughed again. \"Fine... I followed this kink group and-\"\n\n\"A kink group?\"\n\n\"Yeah. You know, like on Meetup.\" I nodded at her. \"They have all these events... for different fetishes and stuff. Most of them are too weird for me. But they have this one event that's once a month... and like... it plays right into my fantasy.\"\n\n\"Show me?\"\n\nLeah burst out laughing again. \"Oh my god- Evan! I can't believe you want to know about this.\"\n\n\"Ha-ha, why?\"\n\n\"It's embarrassing!\"\n\n\"That's why I want to know!\"\n\nWe both laughed. Leah grabbed her phone reluctantly, opened the app, scrolled around a bit, and then thrust the phone in front of me. She turned away and stared across the room, trying to hide her smile.\n\nI was shocked at what I read.\n\nOnce a month, there was a gathering for straight singles. Signups were limited and strictly gender-balanced. The first part of the evening was essentially a meet-and-greet. Participants took turns in pairs introducing themselves and getting to know each of the strangers that showed up that night. It reminded me of a speed-friending event I once tried. Wine and snacks would be served to loosen everyone's inhibitions. Then, everyone would regroup and the organizer would take the guys and girls out of the room, separately.\n\nMy jaw dropped as I continued reading the event description.\n\nParticipants would undress and be led to small rooms. One guy and one girl would each be randomly paired for a session of \"intimate lovemaking, kinky sex, or any kind of hanky-panky that tickles your fancy.\" Of course, if either of the two declined to provide consent, the encounter could amount to \"just talking.\" I sat there aghast at the idea of just being put in a room with a naked girl that I'd only just become acquainted with for the first time so that the two of us could choose to have spontaneous sex together.\n\nIt seemed so wrong. So taboo... So exciting! I reminded myself that people had one night stands with strangers all the time and was this really that much different?\n\nI put the phone down. Leah was still looking away, embarrassed. \"So... wow... would you really do this?\" I finally asked.\n\nI heard Leah chuckling nervously. \"I mean... I dunno. Mmmaaaybe?\" The last word she said at half volume.\n\n\"Whew!\" I exclaimed. \"Good, 'cuz I just marked you as going.\"\n\n\"What?!\" she gasped, bolting upright and grabbing her phone.\n\n\"Just kidding - just kidding!\" I exclaimed in a fit of laughter.\n\n\"Oh man- you gave me a heart attack,\" she grumbled.\n\n\"Sorry, I couldn't resist.\" Leah shook her head back and forth, staring at the event posting on her phone and smirking. \"Anyway, it's no big deal. You should try it.\"\n\nShe looked up at me in surprise. \"Are you serious?\"\n\nI made myself exude seriousness. I don't know why. Maybe I just wanted to see her express a certain level of sexual adventurousness. \"Yeah, why not? You only live once. If this is your fantasy you should go for it. It sounds pretty hot to me.\"\n\nI saw her eyes searching mine, perhaps trying to decide if I was being serious. I held firm. She turned back to her phone. I was amazed that she seemed to be really considering my suggestion, though it was her deepest fantasy, after all. Perhaps the temptation was just too great to do something reckless and wild, just that once.\n\n\"I don't knooow, what if the guys are all weird and creepy?\"\n\n\"So then sneak out after the meet-and-greet.\"\n\n\"Yeah, I guess...\" she concluded.\n\nI paused for a moment, trying to decide if I was really going to say what I was about to.\n\n\"I'll tell you what,\" I added, \"Let's both go and use the buddy system. If either of us is uncomfortable before doing anything we'd regret, we'll both leave.\" I couldn't believe what I had just suggested. Leah perked up. \"Besides, it said that if you bring a member of the opposite sex with you, each of you only pays half the entry fee.\"\n\n\"Hmm...\" she exhaled. \"I'll have to think about it...\"\n\nLeah's tone suddenly grew serious. I didn't want to press the issue, so I let it hang there, suspended in the air between us like some strange phantom. The day went on and we didn't discuss it again for a little while. But its presence was persistently felt.\n\n***\n\nWhen it finally did come up again, I was even more intimidated by my own suggestion than I had been the day that I made it. The ball had been in Leah's court on the topic and I had no idea what kind of energy she must have spent pondering the idea as something to realistically consider. I knew she was really serious when she pointed out that there was no longer room for males at the next one, so we'd have to wait another month.\n\nWe each clicked a button. Time passed. The knowledge that we'd signed up for the subsequent event loomed larger and larger in my mind and my stomach like a tightly wound knot.\n\nBy the time we were in the car that evening, I was almost ready to lose my mind. We sat there, super nervous, as I drove across town to a shocking event at an unknown location in a seedy industrial park behind the mall. My nerves got the better of me and I actually said aloud what had been in my head.\n\n\"You know... with my luck we'll end up getting paired together and I'll end up ruining your entire sexual fantasy!\" I chuckled. Immediately, I became embarrassed for saying this; for even revealing that I had been pondering the possibility.\n\nLeah seemed surprised as if she hadn't thought about that. \"Oh my god! You're right!\" she exclaimed, launching into hysterics.\n\nI smirked. \"Okay, okay. Don't laugh too hard at that.\" I shook my head, feigning defensiveness.\n\nLeah put her hand on my shoulder, suddenly. \"I didn't mean it that way! I was just so caught up thinking about the stranger fantasy that it just never crossed my mind.\"\n\nStill: Ouch. We drove the rest of the way, mostly in awkward, amused silence.\n\nShortly after arriving, we found ourselves sitting in a circle, surrounded by a motley assortment of characters. One guy looked like a banker that had just come from his job; well-dressed, with a dark gray suit and a shiny Patek Philippe. Next to him was a girl in a printed dress who looked like a free-spirited artist type, not all that unlike Leah. There was a good-looking, well-built young man that Leah seemed to have her eye on. Across from him was a doe-eyed young woman with reddish cheeks who just sat there staring at everyone.\n\nA shy, quiet young man sat off to my left, wearing a short-sleeve shirt with a flannel pattern. He seemed to be on the verge of a panic attack. I focused on his visible nervousness, if only because it made me feel better able to manage mine. I was shaking inside and probably outside as well.\n\nThere were a handful of others. Most seemed the nervous, curious type. Just a few seemed to have more experience in the world of kinky activities. The organizer, Jenna, was a large, bubbly woman wearing suggestive black clothing that made her look vaguely like a dominatrix. It made me wonder what I was getting into. However, she explained things calmly and clearly and tried to make everyone feel welcome and less anxious about what we were about to do.\n\nI'd never heard anyone speak so seriously about kink. She treated it as if it were part of a typical wellness regimen. Leah and I often exchanged nervous glances at each other as we sat across from one another in the group circle we formed. I knew she was doing the same thing as I was; assessing the people around us, wondering which one we'd soon be paired with and watching for any sign from the other that it was time to bail. We'd worked out a simple system in advance. Three blinks in succession meant, \"Let's get the fuck outta here.\"\n\nThe sign never came.\n\nIn fact, to my surprise, and as nervous as most of us looked, not one person tried to slip out. I wondered if some would have chickened out if it weren't for the fact that they'd be so clearly and publicly observed in the act of shamefully attempting an escape.\n\nStill, no one there seemed like a psycho. In fact, everyone seemed rather normal and most were not necessarily identifiable as the type I'd imagine would attend such an event. So, we dove right into the meet-and-greet. Jenna had us cycle through the room, having just five minutes to chat with and get to know each of the guys or girls who may or may not become our randomly-assigned sexual partner. We were guided along by conversation prompts that the organizer had handed out, though I found myself quickly drifting off-topic each time.\n\nI met Diana, a cool barista who I discovered lived right near me. Kate, who went to the same college as I did and was studying economics. We traded random facts, such as the fact that her mom had been a gold medalist in the Olympics and that my sister-in-law was the local meteorologist on the nightly news. Carissa, the girl with the ruddy cheeks, had recently moved to the area from Virginia and was exploring her new environment with a sense of wonder and independence.\n\nAfter a while of head-spinning, sometimes mutually awkward introductions, we gathered back around in our group circle where Jenna announced that it was almost time to split off. I dwelled on the fact that I'd literally just met a girl I was about to fuck, only I didn't yet know which one. We'd only just learned each other's names, talked excitedly about some interest we had in common, or compared notes about what we did at school or work. However, I couldn't help but imagine that at the back of their minds they were secretly wondering if they were about to \"suck this guy's dick,\" or invite me to go muff-diving.\n\nJenna went into a long, mildly intimidating speech about how this might be a good time to explore our sexual sides in ways we've never done before; perhaps trying a new position we've always wanted to experience or some other kink we wanted to experiment with but may have been afraid to ask a current or former lover. It was suggested that we might otherwise be able to ask a complete stranger, on this one-time encounter, with no fear of judgment or consequences. I felt overwhelmed as the activity became more and more real.\n\nFinally, Jenna announced that it was time to take the guys out of the room first. I felt Leah's eyes following me out of the circle as I prepared to make my exit. At the last moment, I met her gaze. She exhaled deeply as if she had been holding her breath until I returned the nervous look she gave me. That was her last chance to do the secret blink. She didn't.\n\nJenna led us down a hallway to another room, much larger. The lights were dimmed slightly and it was divided into smaller \"rooms.\" This was achieved with tall black partitions that broke the space up into many smaller cells, each of which contained a single futon and a small plastic folding table with lube and other optional, cheap supplies. It didn't occur to me that we'd all be having sex with such a meager means of privacy between us.\n\nA longer folding table had been set up by the entrance to the room. \"This is where you may leave your clothes,\" she explained. \"Just pick a spot and make a pile and then wait for everyone else to finish.\"",
        "The guys all shared mutual looks of bewilderment as we began to slowly take off articles of clothing, one by one, not realizing we'd be stripping down as a group and suffering the inevitable insecurity of covert body comparisons. It was further made awkward by the fact that Jenna stood there watching us, smiling happily any time our eyes met hers. Before long, the whole lot of us stood there butt naked, quietly breathing in deeply and trying not to think about the fact that our penises were out and exposed to the world, dangling down between our legs and trembling slightly as we anxiously awaited her next instruction.\n\nWe were soon led, one by one, to our individual rooms. Once we were planted inside one, a curtain was drawn across the entrance to secure our privacy. It was not terribly private, however. Sure, our neighbors would not see us, but certainly they would hear. The flimsy walls were far from soundproof and they didn't even quite reach the high ceiling.\n\nSo there I stood, alone and abandoned without a stitch of clothing, waiting nervously in a small, sparsely furnished den of sin. I had to laugh at first at how surreal it was. Was it going to be the weirdest thing I'd ever done? The best thing? Something I'd soon want to forget?\n\nA few minutes later, I heard the girls being led in. There was not a peep from any of them, just the shuffling of feet and Jenna's distinct voice. I stood in the back of my room, ramrod straight, waiting for my \"partner\" to come through the curtain and greet me equally anxious and equally without any clothing on her body at all.\n\nI listened to Jenna's instruction to the girls; for the most part, a repeat of the speech we received. She told them to undress and place their things on the same table. After some silent hesitancy, I heard zippers and buttons being unsnapped. The movement of feet and rustle of clothing. I couldn't help but imagine bras being pulled away from bodies en masse, a sea of panties being reluctantly slipped down to ankles, nervous, naked bodies standing about in a sea of breasts and pubes and anxiously awaiting the next step.\n\nThe realization that all the girls were standing nude on the other side of the curtain was a momentous knowledge to possess and it caused me to suffer a great curiosity. I thought about crossing the small room to peek out through the curtain and see them all standing there exposed and defenseless, Leah included, but somehow I couldn't make my feet move. For some reason, I thought for sure they would see me, shriek and holler. I don't know...\n\nAnyway, it was too late and I was already kicking myself inside for not sneaking a careful peek. How could I have passed up the opportunity to have a look at the woman of my dreams standing there completely naked? Perhaps I just respected her too much. There wouldn't really have been time, anyway. Only seconds had elapsed since they finished undressing before Jenna began leading the girls to their partners. I heard them go one by one to the other rooms nearby. I heard curtains slip open a crack to let them slip through.\n\nI found myself frustrated to neither see nor hear the exact moment that a naked young woman entered to find a naked young man standing there, their curious, cursory examination of breasts and genitals, the two of them suddenly aware of the stranger they were about to fuck on a soft red futon in the middle of the room.\n\nFinally, my heart sank as I heard someone approaching my room. I remember tensing up, almost to the point of it being painful. My penis gave a twitch, already beginning to fill with blood in the sheer anticipation of what was going to happen. I obsessively wondered who it would be, going through each of the girls I'd just met like some kind of bizarre Rolodex.\n\nMost of all, I wondered if it would be Leah herself; if this was the moment I had been waiting for my entire life. The moment that we'd finally see each other naked, bringing to an end an intense curiosity that I found myself hoping had haunted her for years, just as it had for me.\n\nThe curtain exhibited a sudden movement, slipped aside just a small amount, and let through an astonishing figure. An utterly naked figure. A shock washed over me as I was suddenly met with the sight of jiggly bits. Hairy bits. Bits normally kept well hidden from prying eyes.\n\nThose bits did not belong to Leah.\n\nStanding before me, legs bucking and teeth grinding tightly against each other, stood Carissa, the ruddy-cheeked young woman from Virginia with whom I had just exchanged brief pleasantries. She entered the room even more terrified than she had been before, appearing to gasp as she stopped on the other side of the curtain. The two of us stood there naked, ensnared in the sight of each other shocking nudity.\n\nI couldn't help but analyze her body and mannerisms with feverish energy. She was particularly fascinating because of how awkward she was, swept up as we were into the situation that had brought us together so unexpectedly.\n\nCarissa had long, wavy brown hair. She was very tall, with an average build. She had a soft, sweet face that clashed with her voluptuous body, like a girl who had been caught by surprise as her body exploded into adulthood, leaving her bewildered as to what to do with it. Its features were disproportionately exaggerated. Carissa had perhaps the thickest and most visible pussy lips I'd ever seen, with a fluffy wisp of hair above them.\n\nEven more dramatic were her breasts. They were huge compared to her overall frame; bulging, supple, unwieldy. She was visibly self-conscious about the size of her boobs and any attention they drew - but her solution for carrying them around only made them more striking to behold. She folded her arms across her chest, underneath, as if to make a tray for them to rest on, then let them plump up and protrude outward with her two wide, pink nipples leading the way. I found the whole thing impossibly adorable, the way she seemed to struggle with the pronounced appearance of her private parts.\n\nThe spectacle before me caused an instant erection. It was unavoidable and there was nothing I could do to fight it. There was no point, anyway. I wondered what she must be thinking as I endured the embarrassment that followed. Her eyes clearly dropped between my legs where they settled on my stiffening penis, sticking straight out from my body and pulsing softly.\n\nI wondered what she was thinking as she gazed at it, stone-faced and frozen in front of the curtain. Did it make her excited? Did it make her feel more anxious? Was she coming to terms with the fact that this was the erect penis that perhaps she was about to have in her mouth and then inside her vagina, just as I gazed at her body and thought about the different ways I was about to experience it? The whole situation was confusingly, bizarrely erotic.\n\nI couldn't help staring. Something about her was so thrilling. Perhaps it was because she seemed so awkward and insecure about her body. Due to her extremely defensive stance, I immediately assumed she was so shy in real life about finding a partner that she resorted to this. I felt bad about that, but it still seemed so obvious. Then I dismissed the thought, deciding I was being too superficially analytical. Who was I to know anything about this person from just a five-minute conversation?\n\nRegardless, I reveled in the fact that she was a real woman; not some airbrushed, cookie-cutter girl from a Playboy magazine, no, she was not \"perfectly proportioned.\" She was gangly, awkward, hastily groomed, and I loved it. I loved it because she had such an innocent, natural beauty. I loved it because I saw her insecurities and could relate to them myself. I wanted to make her feel better and for her to clear my own anxieties. I wanted to make an erotic connection with her, right then and there. Someone I'd only just met and barely knew. So there we stood, facing each other, at the point of maximum erotic potential.\n\n\"Hey Carissa,\" I said, eager to reveal that I had remembered her name.\n\n\"Hey Evan,\" she said, her mouth forming into a nervous smile.\n\n\"Um... I guess let's have a seat.\"\n\n\"Yeah, I could use a seat,\" she rushed to say, breathlessly. She rushed to join me at the edge of the futon, grasping at her heavy, jiggling breasts in order to contain them as she performed a light jog.\n\nOn the mattress, Carissa pulled her knees up to her chest and wrapped her arms around them. This was another wildly defensive stance on her part, meant to obscure her body. However, unbeknownst to her, it only served to cause her thick outer labia to squeeze through the gap between her thighs to form a bulging, fleshy sandwich that I found hard to look away from.\n\n\"So... this is interesting...\" I chuckled.\n\n\"Yeah...\" she said with a soft laugh. I could almost hear her heart thundering in her chest. So was mine.\n\n\"Let's see what we've got...\" I continued, looking for something to say that would prevent the conversation from sinking into total silence. I scanned the table and described the various objects that sat there. However, announcing the presence of a shrink-wrapped dildo, a small riding whip, and other cheap novelties didn't exactly help to reduce any tension between us.\n\nWhen I turned back to face her, all I saw were two big eyes on a face growing increasingly red.\n\n\"So... like... how do you want to do this? Is there anything you wanted to try?\" I cringed listening to myself. I was getting way ahead of the situation. I just didn't know what to say.\n\n\"Um... I dunno,\" she said. Then she laughed suddenly and tried to hide her face. \"Urrr,\" she exhaled through a quivering smile, rolling her head back and gritting her teeth, trying to flush the obvious tension from her body.\n\nWe laughed together and tried to shake off the nerves. I knew I'd have to do something or else we'd end up just sitting there at the end of the mattress the whole time and everything that had led up to that moment would be for naught.\n\nI decided that talking about it wasn't going to get anywhere. Instead, I just gave her a wordless gaze, as comfortable as I could make it, full of soft, serious affection. She immediately quieted down and locked eyes with me, realizing that something was indeed about to happen. I reached out and gently stroked her hair, figuring it was an easy way to make contact without much pressure. She just looked at me like a deer in headlights.\n\nStill unsure what I was doing, I felt myself leaning in for a kiss, merely because I was used to doing that with women I was actually romantic with. I did it slowly, making absolutely clear what my ambitions were to give her more than enough time to back out. Before I could even reach her lips, I felt her nipples graze against my chest. Her body tensed up immediately. Then our lips connected. Hers were soft and warm. I felt her strained breath on my face as she breathed through her nose.\n\nWe began kissing softly for a few minutes. She came to the table with a sincere interest which made me feel less anxious about the situation. It was a comfortable way station to remain at as we collected ourselves and discovered each other's cautious willingness. Eventually, I decided to be brave and I reached out for her body again, this time to cup her breasts. I felt her react again as my hand connected with her soft, spongy flesh. Her large boobs acquiesced to my curious fingers. Carissa's whole body was surging as her lungs filled to capacity and then deflated.\n\nUp to that point, I honestly couldn't tell if she was truly excited for what we were about to do or if, deep down, she was thinking about fleeing through the curtain. However, just a few moments after I began to caress her breasts, I had my answer. As if just needing me to take the first step, I suddenly felt her hand grasp eagerly for my erection. Her entire body jerked suddenly with emotion as she wrapped her fingers around it and gave it a soft squeeze. It pulsed hungrily at the core of her fist.\n\nI felt a sudden excitement as I discovered her exceeding my bravery under tremendously awkward circumstances. As I began to play with her nipples, I felt her begin to stroke me. Her trembling hand traveled up and down the full length of my shaft as it sprouted eagerly from my lap. I was no longer convinced that her tremors were the product of nervousness alone. There was clearly also a growing excitement.\n\nThe wall had been broken. It was officially on between us.\n\nThe kissing became more passionate as we realized the degree to which we could touch and explore each other's unfamiliar bodies. We groped each other, blindly but tenderly. Despite all the times I'd been with a girl, I felt something entirely new at that moment. A potent, explosive sexual energy that I'd never felt before. It burned inside me like a fire.\n\nAfter cautiously seeking each other's tongues for a while, we pulled away from one another. Carissa seemed to feel embarrassed about the way she was touching me and avoided looking into my eyes. Instead, she looked thoughtfully down at my penis as she gave it curious strokes, lifting it up and down as she went, having a look at the underside, and at my firming testicles. I was so turned on by her innocent exploration of my body that I could already smell my own musky odor blooming between us. A smile broke out across my face. Carissa looked up at me suddenly, meeting my grin with her own. I felt things starting to relax between us.\n\nHowever, her anxiety partly returned as my hand traveled down the inside of her thigh. It was obviously apparent what part of her body I wanted to explore next... and which she felt the most insecure about. I felt giddy like it was my first time with a girl all over again. Somehow the strangeness of the situation made everything feel uncomfortably, thrillingly new again. She leaned back nervously, resting onto her forearms and eyeing me cautiously. Carissa allowed me to move her legs aside and part her hips. She seemed incredibly nervous as I sat there gazing at her beautiful, lightly hairy pussy beginning to gape slightly as she opened up to me. I knew that if we'd just make it through this area of insecurity, who knows what we might be able to do together.\n\nI reached out and gently touched her labia, splitting it open slightly to reveal the pink inner flesh of her vagina. She was already becoming wet. I wanted to sink my fingers inside her body but I reeled in my impatient curiosity. Gently, I began to stroke her labia and the inside of her thigh. She began cooing quietly and slipped into a kind of trance. Her folds parted easily, permitting me to stroke along the velvety flesh inside. Soon, her hardening nub began to peek out. I circled it with my fingers and she moaned loudly.\n\nCarissa's eyes flashed at me. Just minutes earlier she had avoided looking at me at all. Now she seemed to be directing me questions that she did not want to vocalize.\n\n\"Do you... want me to eat your pussy?\" I whispered. As nervous as I was, it thrilled me to just ask such a question out of the blue to a woman I'd only just met.\n\nAt first, Carissa seemed positively aghast that I asked her this, yet she lay fully back onto the mattress and quickly nodded. I crawled forward, examining her pubic area adoringly, lost in every sensual detail. She seemed to hold her breath as I lowered toward her crotch. Then, contact. She gasped softly as my lips graced her labia. It was as if she'd been touched there for the first time ever. Her body jerked to life, desperately opening to me and to the thrill of having succeeded in doing something that was both terrifying and miraculous at the same time.\n\nI planted kisses along her long, deep slit, then loosened her flesh with the tip of my tongue, stroking her delicately as I had done earlier with my fingers. As she quivered, I found myself suddenly awash in her body's natural odors, along with the faint traces of some other flowery scent. I imagined her lightly dabbing her body down there with her favorite perfume before leaving home as an extra means of seduction, or else as an act of insecurity.\n\nI gave into my curiosity, sucking at those moist lips and dragging my tongue through her depths as she became feverish and creamy. Her sudden jerks and squeaks only drove me wilder as I continued to work her pussy with my tongue, fascinated by the generous secretions of her body and their earthy savor. I lashed excitedly at her body, building her into a frenzy of emotion, teasing her bulging clit until it left her unhinged.\n\nWhen I finally rose from her pelvis with the need to rest my jaw, she sprung to life. I became excited at her apparent enthusiasm for taking a turn. I quickly sat back and allowed my cock to spring upward, fully distended and awaiting her lips. She quickly lay down between my legs and curled her fingers around me as before, then guided my penis through her lips and over her soft tongue.\n\nThere was no doubt about it at that point. As nervous as she'd been on the outside, her inner state raged with the same fire that mine did. I knew in an instant that she wanted my cock. She wanted to lick it, to taste it, to feel its angry pulse against her tongue as she devoured it whole. Still, there was an enchanting awkwardness laced through her enthusiasm, placing fully on display her absolute, lingering disbelief at the very act she was performing. Carissa continued her intrepid sucking as I squirmed in pleasure, watching her nostrils flex and bulge as she breathed in deeply and investigated my musky scent all the while.\n\nAs Carissa finally pulled away, my cock sprung from her mouth and stiffly bobbed in the air, still glistening with her saliva. She licked her lips softly then bit them nervously. We both knew what would come next, although now we were unquestionably better prepared for it. Carissa swept her hair aside as she scooted further back, onto the center of the futon, then threw herself down onto her back again, sending her heavy breasts into a playful wobble. No longer did she display any horror at the thought of letting me see them bounce and swing about freely.\n\nI slid forward, holding my cock between her legs. We exchanged brief glances, quietly assessing each other's state. I eased into it, taking the swollen head of my penis and rubbing it back and forth along the dewy, pink flesh between her legs. When I saw her begin to shiver, I pressed forward and began forcing myself inside. I felt her inner muscles stretching wider for me, welcoming me into the depths of her body. As I did this, she grasped for my arms, gripping them tightly and letting slip a small gasp. \n\nI slid smoothly into her tight pussy. Her eyes widened and we smiled at each other, both of us rapidly increasing the frequency of our breaths. As I began to slowly thrust forward and back, I could feel myself beaming. She gazed up at me with sparkling eyes, her mouth slightly ajar, as if amazed that this was happening.\n\nAnd just like that, we were fucking. Two complete strangers, grinding together like frantic lovers.\n\nI observed her delight; delight at her own pleasure, delight even upon seeing my own. Carissa grasped my body firmly as if afraid I might escape. She began to occasionally close her eyes with a brief withdrawal into herself to savor the pleasure. Meanwhile, my eyes toured her body, absorbed in the animation of her weighty breasts, the dark wisp of hair between her legs, in contrast to the paleness of her body, her thick, pronounced labia which had begun turning rosy with friction, and the sticky, audible suction of her body as it continued to further lubricate itself in response to my efforts. Then we began to stare fiercely into each other's eyes with a wild determination as we both jerked our hips together in unison, feverish and horny.\n\nIf I had to describe the expression that began to subsequently develop on her face, it would simply be the perfect distillation of joy. Her eyes were filled with silent laughter. Her mouth curled at the sides, struggling to maintain composure before it flourished into a fully realized grin that reached ear to ear. We fucked hungrily, facing each other with open hearts and obvious amusement. I grasped at her boobs as they shifted up and down her chest, excited by the movement of her body and the felicity with which she eagerly pumped her hips against mine.",
        "She reached up and touched my chest, running her hands over it, brushing her fingers through the light hair in the narrow channel between my abs. Carissa seemed as enthralled by my nipples as I was with hers. They hardened against my palms as I helped myself to those soft, jostling mounds of warm flesh. From time to time, Carissa craned her head to glance at our hips, moving with urgency, as if keen to glimpse the thick appendage that she could feel gliding through her depths. She seemed startled and perhaps a little amused at how generously her body coated it with a viscid film.\n\nAfter a while, a change of positions was sorely needed. As she flipped over, I kneeled down behind her and felt something damp against my knees. Looking down I saw that she had left a huge, dark wet stain on the futon, still fragrant and a little slippery. I scooted us a few inches to the left, enjoying the view of the deeply swinging boobs hanging beneath her chest as she shimmied over. The large mounds of her buttocks wavered as she moved her legs further apart and pressed her hips back, expanding the sopping flesh of her wet pussy in my direction. I was so anxious to slip smoothly back inside her that I grabbed hold of her bum before she even finished settling into place. With a groan I sunk myself back into the slick canal that awaited me, then resumed thrusting, driving deeper and deeper into the humid interior of her body and watching myself glide back outward again, further coated in her warm emissions.\n\nCarissa began moaning loudly, pressing her face down into the soft cushion beneath us, her face twisted into a wonderful crisis. \"Oh god! Evan...\" she whimpered suddenly.\n\nThose were the first words she had spoken out of lust. Any shred of shyness that remained could no longer compete with the raw experience of pleasure seizing her body at that moment.\n\n\"Carissa...\" I moaned, wanting to return the favor of saying her name in a fit of erotic crisis.\n\nThe moment I said it, she squealed into the mattress, then she emerged again, gasping for breath. She turned her head slightly, glancing back at me. Her expression had completely changed. She no longer looked like herself. Her hair was plastered to her forehead. She was sweaty. Unraveled. Lost.\n\n\"Ngh...\" she muttered. \"Fff-fuck me,\" she continued, quietly, her voice briefly quaking.\n\n\"Mmgh! Carissa...\" I groaned. I felt myself letting go of all inhibitions. I threw my head back, dizzy from the shower of sparks raining down my spine. \"Your pussy feels so good...\" Indeed it did. Her inner walls, viscous and warm, squeezed me from all sides, milking me with her deepest muscles.\n\n\"Yes!\" she cried out before taking another gasp of air. \"Mmmmh,\" she moaned again, before flirting with her continued desire to vocalize her passions. \"I love your c- I love your hard cock!\"\n\nHer words were so charged, so flecked with self-indulgent taboo that the futon could barely muffle her words. High on adrenaline and driven wild by the thrill of her own pleasure I pumped inside her as fast and hard as I could, listening to the slap of my body against her soft flesh and the flopping of her loose breasts.\n\nAs the scent of her cum grew stronger and stronger, her body seeming to turn to liquid, I realized that I could also hear sounds of the other couples around the room. There was a chorus of unfamiliar cries and moans. The sounds of bodies smacking together. Occasionally, a barely decipherable fragment of dirty talk emerged as someone begged to be fucked or frantically remarked about how wet or hard their partner was.\n\nThe image of Leah being fucked briefly flashed into my head and I found myself searching for her cries but the sounds were so indistinct, so interwoven, that we just sounded like one single act of carnality, spreading across the room through multiple bodies. So we just went on fucking, moaning, begging, reeking of sex until I could see that neither of us had much left to give.\n\nCarissa didn't have to tell me when she was about to have an orgasm. She couldn't have told me if she tried. Her body quaked with such an intensity that I saw all her faculties shut down until all that was left was the limp shell of a body. It thundered back and forth, having lost all sense of anchoring, rippling with the force of my thrusts, our shared lust, until I felt myself nearing the end.\n\nI briefly thought of Leah, somewhere else in the space, breathless, sweaty, cupping some guy's face as he fucked her mercilessly. I could see the look of desperation in her eyes so clearly. A powerful sensation welled up inside me. I almost felt like it was me she was gazing at. That was all I needed for the dam to burst.\n\n\"I'm gonna come!\" I growled.\n\nCarissa suddenly seized control of her body again and slid off me. Flipping quickly back onto her butt, she grasped my glistening cock and gazed up at me as if to ask permission. Of course, she didn't have to ask permission! I nodded frantically at her and watched as she took me completely inside her mouth, surprised at the taste of her own body mixed with mine.\n\nShe sucked forcefully, even more thrillingly than when we started. I closed my eyes and released all sense of control. I could feel myself about to detonate. Without warning, I exploded into her mouth. I felt her jerk in response to my first spasm, then recover immediately and work greedily for more. Spurt after spurt doused her tongue and filled her mouth completely as I had been pushed to the absolute limits. She seemed to want to laugh.\n\nCarissa managed to swallow everything I had and even polished me off with her tongue until I was as clean as I had been when I arrived. I gazed down at her, with those wild eyes, that unhinged expression, that experience of having shattered all our boundaries together.\n\nShe was completely different than the girl that walked into that room. We were both changed.\n\nAfterward, we lay there on the futon staring upward at the ceiling, panting rapidly and listening to the last audible frenzies of lust raging all around us. We didn't speak much. I didn't quite know what to say, but it was fine. Our smiles said everything we could possibly have wanted to communicate.\n\nAs the activity around the room began to die down and fall silent, my mind drifted back to Leah again. As good as I felt, as satisfied as my body was, having purged itself of all physical impulse and need, I still felt emotionally lost. I missed her. She was somewhere nearby. Perhaps in the room just next to me. Where was she? Who were we to each other, really?\n\nPin drop silence was Jenna's cue to summon the women from our rooms. She must have been listening to the whole thing; picturing each of us in there, engaged with each other in so many spirited ways. Carissa got up and we exchanged a brief kiss, shared a quiet smile, and then simply said \"bye.\"\n\nIt was odd. Such a simple, brief word after all that we'd just experienced together.\n\nI listened to the girls getting dressed again outside, stretching out wide on the futon and watching my hand rise and fall as it lay across my warm, clammy stomach. The scent of Carissa's body was still soaked into the mattress, it still hung in the air all around me, as did mine.\n\nWhen it was our turn, I joined the men wandering out of their rooms, each of us quite a bit more amused and excited than we were going in. A huge weight had been lifted from our shoulders. There was a newfound, bold confidence in our steps.\n\nFully clothed again, we returned to the room we had started in. The girls were already there, seated in the same chairs. Their eyes were all over us. Everyone's gears were turning. No one said a word. I thought about how funny it was that we were instantly back to being mute again after we had just listened to each other begging to be sucked, licked, fucked, or simply screaming out in pleasure.\n\nAs soon as I took my seat, I made immediate eye contact with Leah. She sat there staring at me with a look of incredulous amusement. I smirked and her face broke out into a wide grin. She was turning red again. We sat there busily trying to read each other's thoughts and emotions after what we just experienced together, hard as it was to believe. I could feel her grabbing my shoulders and giving me a hard stare as she often did when excited. I could hear her repeating the words, \"Oh my god, oh my god, oh my god,\" over and over.\n\nJenna led a brief group discussion with optional participation where we had a chance to share our feelings about what just happened, after revealing whom we had interacted with. It felt so surreal. I guess I hadn't anticipated how much like a workshop the event would be.\n\nAubrey, the artist girl, proudly announced that she had sex with the muscular guy, Fred. I badly wanted to know who Leah had been with having thusly realized that she hadn't received her top pick, given the eyes she had for Fred. He smiled suddenly at Aubrey from across the circle. She smiled back and talked about how good it felt to lose all inhibitions with a stranger and to not have the pressure of a serious relationship hanging over their intimacy.\n\nOnly a handful of people chimed in. Leah stayed silent. Jenna asked around to see if anyone else wanted to say something. Most people passed.\n\nWhen she got to me I just spoke aimlessly about how fascinating it was to wonder who I'd be paired with after meeting everyone, and the anticipation of not knowing. Then I accidentally let slip that I also wondered if I'd end up with the person who brought me. I didn't mention Leah by name but I saw her perk up, surprised that I even mentioned this.\n\nJenna explained that when she randomly assigns partners she avoids pairing anyone up with their plus-one since the spirit of the activity is to interact with a complete stranger. Upon learning this, I felt bad that, in fact, I could never have been paired with Leah for this reason. Then I felt relieved as this pressure was released and sank into the comfortable bliss of what I shared with Carissa, without having to suffer any guilt about what I'd missed out on. Next, I felt bad again, imagining Jenna casting some dice, picking Leah as my partner and then having to forcibly re-pair us because those were the rules.\n\nLeah and I left that place and walked out to the car. For a while, the ride was a little awkward as we both seemed to be dwelling on the event in silence. She broke it by saying, \"So... you got that busty bundle of nerves, did you?\" Her mouth broke into a wry grin.\n\nI chuckled. \"Yeah, why?\"\n\n\"Nothing... Just interesting.\"\n\n\"Who did you get?\"\n\n\"David,\" she said abruptly.\n\nI pictured the shy, slightly nerdy guy in the flannel-print shirt that I had observed earlier that evening. I pictured the two of them fucking each other and sucked the air in through my teeth. He had to have come into that evening a virgin and subsequently left it behind there, right on that futon. I didn't want to admit it but I couldn't help but imagine he was strangely desirable to women, having that Clark Kent kind of nerdy handsomeness that he was probably completely oblivious to.\n\nI wasn't prepared for how jealous and angry I felt at that moment. It took over me like a storm. Here I was desiring Leah for years and years and then all of a sudden this guy comes along, whom she doesn't even know, who probably could barely speak a word to a girl, and she gives him what was probably the best sex he'll ever have in his life.\n\nI felt myself struggling to get words out. \"What was it like?\" I finally replied.\n\nLeah was quiet for a few moments. \"It was kinda funny and kinda amazing,\" was her reply.\n\n\"Oh?\"\n\n\"Yeah. I mean, he wasn't experienced or anything, but that's what made it interesting. I could tell he was super attracted to me. I think what got me was seeing how badly he wanted me. And how determined he was to pleasure me, even if he was a little awkward. It was cool knowing that we'll probably never see each other again and just feeling free to follow whatever urges we had at that moment and not have to even address them later. It was very liberating!\" She began laughing.\n\nI forced a smile. \"So you finally made good on your fantasy!\"\n\n\"Yeah!\" She was grinning ear to ear and seemed lost in thought. Finally, she snapped out of it. \"Thanks to you!\"\n\n\"You're welcome,\" I chuckled.\n\n\"But you know...\" she continued. \"It was so different. Like... there were so many things that were great about it. But there are also so many things that were absent, which you have with a romantic partner. You know? I don't know what else to say but... just that they're a lot different. Good in different ways.\"\n\nI understood what she was trying to say and based on her earlier comment, I began to think that what Leah really wanted to get from sex with a stranger was positive validation without any strings attached. After a spate of failed relationships, she must have wanted to separate out what made her feel good from what somehow always seemed to sour things. I supposed it made sense and I couldn't blame her. However, that didn't change the fact that I thought we could offer each other much more.\n\n\"Anyway,\" she blurted, abruptly shaking her head. \"What was Carissa like?\"\n\nI laughed. \"Really, really shy! Like your guy. It was awkward at first. I guess we both were. But it was fun to see her transform and open up and want to get down and dirty!\"\n\nLeah snickered. \"Oooh, sounds hot!\" She cast me a wicked grin.\n\n\"Ha-ha, yeah. It was...\" I smiled and stared at the road in front of us.\n\nI could feel Leah's eyes occasionally on me but I couldn't get myself to look at her.\n\n***\n\nA week passed and Leah and I didn't say one word to each other.\n\nThat was unusual for us. It felt strange. I wasn't exactly sure the reason why it was happening. I wondered if we were both waiting for the other to send a random text and reopen the comfortable line of communication we had always had, which had never suffered a break like that before.\n\nFinally, I texted her. I said, \"Hey, how's it going? I'm almost fully recovered from our little event. You?\" Then I added a winking face emoji.\n\nAfter fifteen minutes or so of biting my nails, she finally replied. I felt relieved to see her greet me excitedly. She even said she'd been thinking about me. I said likewise. We chatted for a bit and then she asked, \"Oh! Hey, you wanna hang out this weekend? I ran into April and Matt. They've been having people over at their new apartment and they told me to bring you.\"\n\nI readily accepted. I badly wanted to spend time with Leah and make sure that nothing we did caused any complications between us. Even if it had to be in a social setting, I jumped at the opportunity to make sure we were still good.\n\n***\n\n\"No one's weird about sexy dares, right?\" Matt said with a wry grin. He emerged from the adjacent room with a second bottle of C\u00f4tes du Rh\u00f4ne and a small red and black box. The question reverberated around the room for a few moments.\n\nI looked over at Leah. She sat there as beautiful as ever; her long brown hair curled back behind one ear, those penetrating blue eyes staring straight into my soul, her soft, easy smile making my knees go weak. Knowing how mischievous Matt and April were, Leah and I soon exchanged a worried look. The two of them could be even more dangerous together.\n\nI then glanced over at Nathan and Samantha, mutual friends of ours who had also come to check out the new apartment as well. They were the perfect couple; both attractive, perfect chemistry, outgoing, fun to be around. I felt a little awkward on account of the fact that Leah and I were the only non-couple in the room.\n\nSamatha shared the same worried look with Nathan and uttered, \"Um... what kind of dares are we talking about, exactly?\"\n\n\"Adult party game,\" April chimed in. \"It's preeetty raunchy. But you can always chicken out and let everyone shame you for it.\"\n\nSamantha laughed. \"Okay...\" she said cautiously, before looking at Leah and me. I saw Leah gulp and nod knowingly at her.\n\nAs we approached the long coffee table around which April instructed us all to sit, Leah meekly added, \"Do any, uh, clothes have to come off?\" She seemed genuinely nervous. I found that interesting, given the event we had recently attended. However, the idea of playing a sexy adult game with her already had me brimming with nervous excitement.\n\nApril whistled.\n\n\"That depends on what cards you draw,\" laughed Matt. \"But who cares, we're all close friends here. What difference does it make if we just get to know each other a little bit more intimately?\" A huge grin continued to stretch across his face as he took a seat and opened the cardboard box.\n\nThe title on the box read, \"Naughty Neighbors: After Dark Edition.\"\n\nI couldn't help but feel a sense of disbelief about our hosts. Leah had once told me that April confided in her about going to some kind of sexual play party with Matt a couple of years prior. It was anyone's guess what kind of shenanigans they'd gotten themselves involved with since then. They were the only people I knew that would ever do something like that. - Well, at least up until what Leah and I did together. I immediately wondered if Leah had told April about what we had done. Maybe she had? Perhaps that was why April and Matt assumed we'd play along with the evening entertainment?\n\nApril's eyes flashed at me and appeared to be trying to read my thoughts. She smirked. I quickly looked away.\n\n\"So what are the rules?\" asked Nathan, settling into a cross-legged position next to his girlfriend.\n\n\"I mean...\" Matt mused, \"We don't necessarily have to play by the rules. Basically, you get dare cards, confession cards, and mystery cards. You start with five cards and then just draw one and discard one. You'll get the idea. Most people try to avoid doing the dares and just decide to answer one of the revealing questions. But that's what the mystery cards are for... You might be forced to do a dare.\"\n\n\"And what if we refuse?\" asked Samantha, still full of reluctance.\n\nApril rolled her eyes. \"Don't be such a fucking prude, Samantha!\" she laughed.\n\nMatt was already well on his way with the eager distribution of each of our hands, issuing the five little cards that would soon determine our fates. Each of us stared at them as they turned into small piles and then cautiously took them up into our hands. There was silence as we stared in shock at the hands we were dealt, the wildly revealing things we'd have to answer, and the unthinkable dares that we were sure to discard as quickly as possible.\n\n\"Yeah... no...\" mumbled Samantha. \"That card's got to go. I wouldn't even do that with Nathan in the privacy of our own bedroom.\" Leah and I burst into laughter while watching Nathan lean over curiously to take a peek at the card she was referring to. He just chuckled and shook his head.\n\n\"Uh, what does it mean by 'opposing team'?\" Nathan asked, returning attention to his own cards and peering at them curiously.\n\n\"Fuck teams. Everyone is on their own team,\" April said decisively.\n\nWe started off simple, tolerating the least distressing of the confession cards and quickly discarding as many dares as we could so as to not get caught with them. Each of the dares came complete with a whimsical illustration designed to titillate and to demonstrate what was to be executed. As I tried to fill my hand with confession cards and prioritize the rejection of the worst of the dares, I found myself intrigued by a \"fingering\" dare. It sported a line drawing of a wide-open vagina penetrated by someone's finger, somehow both terrifying and yet offering relief from the more intimidating alternatives.\n\nAs the game ensued, I had to reveal how many sexual partners I'd had. Matt had to share whether or not he'd ever tried anal sex. Samantha was required to describe the loss of her virginity, which she detailed as awkwardly as the act itself apparently had been. Poor Nathan had to explain who he most wanted to have sex with at work and describe how. - Needless to say, Samantha was not amused.",
        "They got raunchier too, such as explaining what sex act we'd like to do... if it were legal, what our masturbation habits were, what the perfect orgy would be like and which celebrities or historical figures we'd invite to it.\n\nI sat there with bated breath every time I watched Leah read her next question. \"Rank the following sexual positions in order from most favorite to least favorite,\" she declared. She grew red with embarrassment, chewed it over in her head until the audience grew impatient, then slowly answered, ranking doggy style last and missionary first.\n\nBefore I could ponder that, Matt said, \"Aww, you don't like doggy style? Don't knock doggy style!\"\n\nLeah laughed. \"No - no! I love doggy style. It's just never gonna replace something where I can see his eyes.\"\n\nSamantha perked up. \"Yeah, girl!\" she exclaimed. They shared a high five.\n\n\"Don't worry baby, we can get it on doggy style any time,\" April said, grinning at her husband.\n\n\"See, this is why I love you so much,\" Matt replied, giving her a quick kiss. April snickered. \"Okay, enough questions now. We need to spice things up,\" Matt continued. \"Let's try a mystery card!\"\n\nMy heart sank. Matt grabbed a mystery card and raised it up in front of his face. He smiled happily. \"Okay, I got a dare that I have to perform on someone else.\"\n\n\"What is it? What is it?\" April repeated excitedly. The rest of us stared at the two of them in silence.\n\nMatt read the title of his card, \"Party Snacks.\" April was immediately in hysterics.\n\nSamantha laughed. \"How often do you guys play this shit that you already know what he's gotta do from the title alone?!\"\n\nMatt continued, \"Choose a member of an opposing team and have them strip down to their underwear. Using only your mouth, remove their underwear. The opposing team member must remain naked for sixty seconds.\"\n\n\"Whaaat?\" droned Leah. Samantha blinked at Matt, dumbfounded. Nathan and I just smiled quietly, wondering how we got ourselves into this but feeling relieved that we dodged a bullet. After all, Matt obviously wouldn't choose either of us. I couldn't decide if I should pray for it to be Leah or if I should feel guilty for even entertaining the idea of something so embarrassing happening to her.\n\n\"Hmmm...\" Matt said, touring the room with his eyes, glancing from Samantha, to Leah, to April. Both Samantha and Leah avoided any eye contact with him.\n\nHearing his girlfriend take a deep breath, Nathan came to her defense. \"I nominate April, seeing as how she's sooo much more thrilled to be playing this game than we are.\" He smirked at her.\n\nApril laughed. \"Yeah, yeah, yeah. I get it. Fine. If I have to get things started, I will.\" She shrugged and looked at Matt. He nodded at her. She nodded back. They both smiled as she stood up.\n\nI couldn't help but feel like any reluctance on the part of April in regards to stripping down in front of her friends was a false pretense - and not just because of the juicy gossip I'd heard about the two of them and their adventurous lifestyle. There was an eagerness in the way April stood up and made swift progress in having her shirt up and over her head. All of a sudden, I found myself staring at her lacy purple bra and the deep chasm between the two cups supporting her snugly compacted breasts.\n\nI felt Leah's eyes briefly on me but I didn't return the look. Instead, I watched in disbelief as April smiled silently to herself and undid the button on her jeans. She slipped her pants down and stepped out of them, leaving her clothes in a heap on the floor next to her feet. April's panties matched her bra: sexy and feminine, full of textured, floral lacework. The strip of fabric that slipped between her legs and covered her mons puffed out slightly, providing a discreet indication of her outer labia.\n\nEveryone just watched in silence. No humorous remarks. No laughs. Just wide-eyed, \"is-this-really-happening\" expressions aimed squarely at the couple hosting our visit and apparently enjoying the wicked games in which they had their friends ensnared.\n\nMatt hoisted himself up beside April. She stood there stiffly, like a model striking a pose, as he circled behind her body. April's eyes fixated on the rest of us, shining with the mischievous knowledge that we were about to witness the shocking spectacle of her unexpected nudity. I felt myself becoming aroused as I sensed her erotic anticipation. I shifted my position, afraid someone might detect a growing, unwanted erection.\n\nMatt preceded to place his hands behind his back in order to emphasize complete disuse of his hands. We watched as he lowered his head behind April's back and toward her bra strap. As his mouth connected with the undergarment, April smirked and bit her lip. She seemed to be thrusting her chest out slightly, in anticipation of the fact that it would soon become uncovered and exposed. April remained like this as Matt fished around behind her back, briefly struggling with the task of unhooking her bra with his lips and tongue.\n\nSuddenly, it popped free and the cups gently loosened from her body. April giggled and shimmied her body in order to let her bra fall. And fall it did. Right to the ground, revealing a pair of beautiful, bell-shaped boobs. I couldn't believe I was looking at my own friend's bare chest - and right in front of her husband, no less. I didn't know how to react or where else to look. Her nipples were reddish-pink and firm; rigidly defined love-buttons excited to greet the air and all of our bewildered stares.\n\nMatt slid down her body to the waistband of her panties.\n\n\"Oh my god, okay...\" I heard Samantha whisper as she held her hand to her mouth and began processing what was really happening. Nathan turned and grinned at her, relishing the display of bashfulness.\n\nI finally took a look at Leah. She turned and met my smile with her own. Our eyes searched each other's expression for a moment, then we both turned to continue watching.\n\nMatt grasped April's panties with his teeth and made a muffled sound that caused everyone to laugh. He tugged at the fabric as she giggled and squirmed. After a short while, he finally managed to lower each side of her underwear down her hips until the threat of her full exposure became very real. He paused for a second, then made an aggressive attempt to yank them down the rest of the way, grumbling with frustration through his teeth.\n\nWith a forceful tug, he managed to get them down her legs. I inhaled suddenly, shocked to see April's pubic area suddenly fully exposed. The pale flesh of her body was entirely smooth and I found myself gazing at the two perfectly shaven lips of her pussy, sweetly divided by a clean slit. Her labia was beginning to swell and seemed to reflect what must have been an emerging arousal upon seeing us examining her there.\n\nHaving dropped her panties to her feet, Matt stood upright again and threw his arms into the air as if to announce his success. Then, upon seeing our eyes, he circled his wife's body to enjoy his own view. Samantha's face was fully covered by her hands.\n\n\"Someone start counting!\" exclaimed Nathan.\n\n\"One Mississippi, two Mississippi,\" began Matt, sarcastically as April rolled her eyes. For sixty seconds we sat there, finding it hard not to look directly at April's private parts - but look we did because there it was; her hairless, naked pussy.\n\n\"Well, this is interesting...\" I said, needing someone to say something - anything, even if it had to be me. Leah laughed and seemed to want to reply but changed her mind and snapped her mouth shut.\n\nAfter time was up, April sprang into action, clearly unashamed about the dynamic movement of her mercurial breasts as they thrashed about while she collected her clothing. With an amused look on her face, April threw her things back on until she was fully clothed again and then took her seat beside Matt.\n\n\"Wait... hang on...\" he said, sarcastically searching for something. \"Someone check the rules. Are we sure she isn't supposed to stay like that for the rest of the game?\" Everyone laughed.\n\n\"That was fun!\" April said cheerfully.\n\n\"Yeah, why don't we do a whole round of mystery cards?\" Matt suggested.\n\n\"Yup,\" she replied. \"Evan, Nathan, you in? We might as well continue with having the guys each take one.\" My heart started pounding in my chest. Nathan looked at me and I at him.\n\n\"Okay, big shot. Let's see if you got game,\" snickered Samantha, calculating that the risk to her had just been minimized. She gave her boyfriend a playful jab. I could almost see the devil horns sprouting from her head.\n\n\"Ugh... okay...\" mumbled Nathan with a smirk. I knew that if he did it, there was no way that I could get out of it myself. I ran through the things I might have to do. All of them involved some kind of humiliating exposure that would change my life forever. Nathan grabbed a mystery card and slowly peeked at the result. \"Wait, I need a new one,\" he said quickly, attempting to return it to the pile.\n\n\"Nope,\" said Samantha, grabbing his hand. She seemed suddenly wicked. \"Let's see whatcha got.\" Samantha forced him to turn his card over. \"Oh man,\" she concluded, upon seeing what was there. She seemed to be turning a ghostly white after fully understanding the consequences of her boyfriend's willingness to participate.\n\n\"What did you get?\" asked Leah.\n\n\"It's About To Go Down,\" Nathan said with a sigh, reading the title of the card. \"Request a volunteer from an opposing team to perform oral sex on you until the rest of his or her team is satisfied.\" The room exploded into laughter. That is, except for Samantha.\n\n\"Good luck, man,\" I said with a smile, patting him on the shoulder.\n\nNathan's head hung low for a second, then he said, \"Fine,\" and stood up. \"Um... volunteer?\" With a smirk, he looked only at Leah and April, knowing that he was teasing Samantha in the process. He obviously had no intention of not picking her.\n\nSamantha's hand shot up into the air. \"If anyone else volunteers, I'll kill them,\" she snapped, eying April and Leah who both collapsed into hysterics. With a grumble, she rose to her feet and wiped two sweaty palms on her jeans. If she had been the least bit eager to participate with his dare, I imagined it had been solely because she was eager for no one else to do it in her place.\n\n\"Okay, go for it!\" April said, getting comfortable. \"Let's see what you're packing, dude.\"\n\nSamantha's chest was rapidly expanding and contracting. I could feel her embarrassment at the act she was about to perform. \"At least I don't have to get naked,\" she said.\n\nNathan seemed oddly calm, even though I knew he was hiding his anxiety. His girlfriend fumbled with the fly on his pants. \"Are we really doing this?\" she whispered to him. He gritted his teeth at her before smiling and silently indicating that she should proceed.\n\nSamantha had Nathan's pants down rather quickly and seemed mildly startled that his boxers were tented. \"Oop! Okay...\" she mumbled quietly to herself upon discovering his hidden and unexpected arousal. I found it funny how bashful she was in front of her own boyfriend, solely because others were around.\n\n\"Oh man, Samantha... I can't believe you're doing this...\" Leah winced comically. Samantha gave her a trepidatious look.\n\n\"Boy... he's ready,\" April laughed, eying his telltale bulge.\n\n\"Yeah, seriously,\" Matt added.\n\n\"Guys! Come on!\" Samantha snapped.\n\nLeah couldn't contain her laughter and collapsed into me. The feel of her body against mine felt wonderful. She was warm and trembling. The gesture seemed to carry an affection that came out of nowhere as if we, too, were a couple experiencing the event together, just as the others were. I might have felt jealous, imagining that she was curious about seeing Nathan's penis, but this simple gesture seemed to suggest any such sexual curiosity might have been redirected toward me.\n\n\"Okay... okay...\" Samantha mumbled, holding Nathan's boxers squarely with both hands. Then, without warning, she bit the bullet and dropped them straight to the floor. The action caught Nathan off-guard, as it came with no warning, and he flinched. The swift unveiling of Nathan's cock sent it springing about happily, already quite swollen and no longer subject to the constraints of his restrictive clothing. He doubled over in a fit of startled embarrassment, briefly grasping at his erect penis as it thwacked against his inner thigh.\n\nI felt Leah tense up, her eyes glued to the fleshy projection that was bobbing about just a few feet away. I felt a mixture of emotions swirling inside me as I observed her eyes; amusement, excitement, maybe still just a tinge of that jealousy. Samantha's head dropped in defeat and she covered her eyes, doing little to hide either her embarrassment at her boyfriend's erection nor the amusement revealed through her smile.\n\n\"Daaamn, Nathan!\" April cheered at the sight of her friend's erect penis.\n\n\"Yeah- good lord...\" Leah grunted in amusement at his startling degree of arousal.\n\nApril grew bolder, seeing Leah's reaction. She added, with a touch of sarcasm, \"He's so huge! I don't know how you're gonna fit that thing in your mouth!\"\n\nNathan started laughing and turned red. \"Guys!\" Samantha growled again before joining in the laughter. \"Ah man...\" she mumbled between laughs. \"I can't believe you're all looking at my boyfriend's dick...\"\n\n\"Suck - it - suck - it - suck - it!\" Matt started crudely chanting, causing Samantha to groan. She relented, however, and slowly lowered to her knees. Nathan's erection was long, thick, and slightly veiny, extending outward toward his girlfriend's face and twitching with an aggressive, wild pulse. She reached up and grasped it, taking a hard swallow and collecting herself. She looked almost crosseyed staring at the rounded knob of his cockhead which hovered near the tip of her nose.\n\nI watched in amazement as Samantha rather skillfully stuffed her boyfriend's cock into her mouth and went to town on it. For all her visible embarrassment over the public display of anything overtly sexual, her actions revealed what she was actually like in a comfortable, private setting. Namely, as horny as the rest of us.\n\nShe seemed to know exactly what he liked, going back and forth between taking him deep and focusing on his tip, and pausing to twist her hand in a circular motion around his glans when she wanted to really take him to the edge. Along the way, she seemed to take quiet delight in cupping his balls, rolling them about in her hands with a gentle massage. Nathan seemed blissed-out, dragging his gaze upward as if deeply intoxicated. For once, April was silenced. She and Leah were breathless, exhibiting hard, focused stares.\n\nAll in all, the event didn't last that long as insecurity finally caught up with Samantha. She let his cock pop out of her mouth, slick and wet, where it continued to bob stiffly in the air. \"Okay, that's enough,\" she hissed before abruptly standing upright and giggling. Nathan, too, seemed eager to pull his boxers back up, confronted with the wild stares of everyone in the room. They rejoined the group, returning to their seated positions, still breathing rapidly and experiencing the shock of what they'd just done together.\n\n\"Evan! You're next!\" April snickered, pushing the deck of mystery cards closer to him.\n\n\"Yeah, see if you can top that,\" Matt added wryly.\n\nThe deck sat there in a casually threatening manner, holding a cruel power over my destiny, even if only because I was a reluctantly willing participant. I remember reaching for it slowly, imagining all sorts of horrible scenarios that would embarrass me in front of Leah and ruin our friendship. When I finally selected a card, I barely processed what I was looking at. I had lost all my senses.\n\n\"Um...\" I stammered.\n\n\"What did you get?\" asked Leah almost immediately. She looked as if she was feeling that the consequences of what I'd picked were highest for her. And perhaps they were.\n\n\"Well, it says I have to pick a player on an opposing team and steal one of their cards at random. Then I have to answer or do whatever is on the card.\" I heard a murmur around me. I read aloud the rest of the instructions. \"If the card is a dare involving another player, the original owner of the card must be the player involved in the dare.\"\n\nLeah blinked at me. I wondered what she was thinking. There was only one thing on my mind, though. If I ran the risk of stealing a dare card and having to interact with the owner, there was only one person I could steal a card from: Leah.\n\nGranted, I knew that there was a chance I'd just get a confession card. If that happened, great. I got lucky. If I got a solo dare, at least I saved Leah from having to participate. But the risk of having to do something like what Samantha and Nathan just did? ... I already had butterflies galore.\n\n\"Okay, I'll pick one of Leah's,\" I said quickly. She didn't seem surprised, however, she quickly glanced down at her cards with a terrified expression. Something was there in the mix. Something extremely daunting but there was no way to know what it was. I saw her hands trembling as she fanned the cards out in front of me so that only she could see what was written on them.\n\nI found myself trembling, too, as I reached out indecisively, moving first toward the left and then toward the right, struggling with the unknown consequences of the simple action I was about to perform. Finally, I just grabbed one without thinking, hoping that the universe would somehow steer me to the right card. Whatever \"right\" meant in a situation like that.\n\nAs I tugged it out of her hand, Leah's eyes shot open. They were as wide as I'd ever seen them. I knew Leah well enough to know in an instant that the card I'd just picked was something significant. I didn't want to turn it over and see what was there. I felt like I was about to pass out already.\n\nI finally looked down and mumbled, \"It's a dare card,\" my vision only partly returning and making it possible to process what I held in front of me. Matt laughed happily.\n\n\"What is it?!\" Samantha blurted out.\n\n\"Seriously. You're killin' me here,\" April added.\n\n\"Class Is In Session,\" I continued, reading the title. I had only gotten that far before I heard gasps from April. Leah's face had gone totally pale. She wasn't breathing. So many things were written there, yet so little was happening. I saw there a complex set of emotions happening all at once, not knowing quite how to express themselves.\n\n\"What's that?!\" Samantha asked frantically, swept up in the scandal of it all. \"What does he have to do??\"\n\n\"Um...\" said April, a wide grin creeping across her face.\n\n\"... he basically got the big one... or one of them, anyway...\" Matt mumbled in disbelief.\n\nI started to read the card while my heart thumped in my chest. As I explained what I had to do, I felt oddly disconnected from my fate - as if it wasn't yet real. \"Class Is In Session\" read like a cruel punishment. A punishment in which I should be led through full-blown sexual intercourse with a member of an opposing team by way of precise instruction from any and all members of the audience. Leah and I would take their dictation, demanding what to do and how.\n\nBut the details hardly mattered. I couldn't get past the bottom line. The task that presented itself, no matter how it was designed for the amusement of others, was about Leah and I having sex together... for the first time... in front of everyone.\n\nI heard more gasps. Leah and I remained frozen, locked in each other's stares. April leaped to her feet.\n\n\"Oh my god!\" she exclaimed before slapping her hands together. \"This is great.\"\n\n\"Ha-ha, why?\" blurted Samantha, beyond scandalized. I was shocked that even she seemed to be mixing her shock with amusement. Then she asked the question that made all the difference. \"Do they already want to hook up?\" she asked. Bless Samantha and her innocence, her lack of awareness. To her, the question must have seemed so simple.",
        "\"Well, they've known each other since childhood and for some reason have never hooked up,\" April started to explain. Gazing at Leah in silence, I nearly choked. Neither of us knew what to say, how to react.\n\n\"Oh wow! I never knew that,\" Samantha said, turning to study the expression on Leah's face and on mine. No doubt she wanted to observe that moment. The moment that we both processed the fact that we were about to see each other naked for the first time. To touch each other's naked bodies for the first time. To have sweaty, raw, passionate sex for the first time with a person we knew in every possible way... except that one. To see there written on our faces the knowledge of something that had been such a long time coming.\n\n\"Yeah they, like, know everything about each other and stuff. They've been best friends forever! But I also know everything about them,\" April continued, exhibiting a devilish amusement. \"Including stuff they haven't said to each other, so...\" She snickered.\n\nBefore I could ponder that comment, Nathan chimed in excitedly. \"Have you ever even seen each other naked?\" he asked, confusingly.\n\n\"Um... no...\" I said, noticing that Leah wasn't about to reply on account to her having not appeared to take a single breath since I drew the card. Samantha squealed with delight.\n\nHell, I still didn't know if Leah would go through with it. I still hadn't convinced myself that she even wanted to. But there was April, running around like a madwoman, making preparations. \"Let's give them the couch,\" she said. \"I'll put a towel down, just in case it gets a little messy.\"\n\nMatt snorted then turned to me. \"Dude, if yooou jizz on my couch...\" The crudeness of his comment suddenly made everything very real. I had barely thought about getting naked in front of Leah and here he was prompting me to imagine ejaculating on her, in front of everyone. My head was spinning.\n\nApril had left the room and returned in a flash with a towel to drape over the couch cushions. \"You guys, I got this,\" she snapped. \"Trust me, after all the listening to Leah, after all the bullshit being a good friend and keeping my mouth shut about her and Evan, I'm owed this. I'm the one giving instruction. Y'all gotta get outta my way.\" She started laughing.\n\nLeah finally moved. She whipped her head around and cast April a cross between a glare and a pleading look. Leah seemed frightened, much as I imagined I looked myself. April ignored her and settled into a comfortable seat, as did the others.\n\nSamantha gritted her teeth sympathetically and couldn't stop staring at us. She seemed like she wanted to ask us a million questions. I could imagine her saying, \"Are you scared?\" or \"Can you believe you're about to fuck?!\" or \"I can't believe I'm about to watch you two have sex!\" I could imagine telling her to please stop talking, stop saying anything at all.\n\nMatt filled the silence. \"Shit, we need some popcorn or something.\" The others laughed.\n\n\"Come,\" April said, finally taking on a sympathetic tone and pointing to the couch. \"Come 'ere, baby. It'll be all right.\" She stared at Leah as if she really wanted to say, \"Get your butt over here, you know you want this. I know you want this. Everyone wants to see you finally do this.\" I started to allow myself to believe that Leah really did want this.\n\nLeah and I glanced at each other, wondering if the other would move. Somehow, we both kind of rose up at the same time. Slowly, we wandered over to the couch.\n\n\"So...\" April said. \"Evan... Ice breaker for you.\" I eyed her nervously. \"Have you ever fantasized about being with Leah before?\" Leah didn't quite turn to face me but I noticed her perk up.\n\n\"Um...\" I mumbled, fumbling to find the right response. \"I mean... I guess everyone fantasizes about their friends sooner or later.\" Everyone in the room seemed to groan at once and I realized that it was ridiculous of me to even assume that a response like that would get me off the hook.\n\nApril twisted her mouth to show her displeasure and let out a long, \"Mmm-hmm...\" Then she turned to Leah and said, \"And what about you?\" Her frown turned into a knowing smirk.\n\n\"Uh... I guess... what he said...\" she answered, then let out a small laugh.\n\n\"Okay, I see how it is,\" April grumbled. \"That's fine if that's all you want to say.\" Leah gave another nervous laugh. \"In that case, there are other things your mouths can be doing besides spilling the beans.\" I gulped. \"Evan... why don't you start by kissing her. And I don't mean a quick peck. I mean a real, passionate kiss.\"\n\n\"Fuck,\" I thought. We hadn't ever even kissed before. Or had we? Suddenly a remembered a playful kiss on the cheek, but that was years and years and years ago. Still, it swept in from the mists of time to remind me that it had once been so. I must have blocked the memory due to the sheer pain of longing that it had caused.\n\nI turned to face Leah. Her eyes were like two deep, liquid pools. Something drove me forward. I wanted this.\n\nAn intense pang erupted inside me the moment our lips touched. They were soft and warm. I detected a slight tang of red wine. Admittedly, I faltered upon contact as years of emotion became instantly stirred up. I recovered, restoring my efforts with vigor and taking her by surprise. I sensed her receiving my emotion and returning her own. I felt Leah crumbling right in front of me. I inhaled her scent, savored her lips, pressed longingly up against her body, involving my whole being.\n\nAs I finally pulled away, I saw us both rattled by the event, trying to regain composure but checking each other's eyes quietly as we both wondered what just happened, if what we felt was shared by the other. I saw her returning my gaze with her own; one that looked crazed, desperate, somehow even senseless.\n\n\"I know that look,\" mumbled April, suddenly shifting positions as if moved to action by the sheer gravity of the situation. We both looked back at her. \"Guys,\" she said, her tone growing serious. \"I can't believe, in all this time as best friends I'm the one who still has to tell you this... but... it's time for you two to fuck.\"\n\nHer final word lodged in my brain and lingered there, burning in the recesses of my mind, conjuring up every fantasy or dream I'd ever had about Leah over the years until they consumed me entirely. Never in a million years had I imagined it would be under these circumstances but there it was, the moment of all moments, staring me in the face.\n\nI slowly turned to face Leah, ready to look her in the eyes for the first time not as a friend but as a soon-to-be lover. With great anticipation, I steered my eyes to meet hers, desperate to receive that look of understanding about what we were about to finally do together.\n\nHowever, they failed to meet their target.\n\nLeah mumbled, \"Excuse me for one sec,\" then rushed out of the room, staring at the floor in front of her. April became alert, as did I. I felt awkward standing there for the next few minutes, avoiding Samantha's disbelieving stares. Nathan shifted about nervously. I could tell the idea already had him uncomfortably aroused.\n\nHowever, as the moments crept by, I began to worry about where Leah was. Hell, I wondered if she'd escaped out of a window. I thought: Did she even want to have sex with me? Maybe the idea turned her stomach. Maybe I was tragically alone with my secret desires.\n\nWhen she finally returned, I felt like I was about to hear some damaging excuse for why she would not go through with it and have my heart broken.\n\nInstead, she came and stood by my side, took a deep breath, and just said, \"Sorry\" aloud to the room. \"Ready.\" And so, just like that, all my fears of rejection vanished and became instantly replaced with fears of having sex in the open, in front of my friends. Part of me, however, didn't care. If that was the price I had to pay for the thing I had waited for all this time, so be it.\n\n\"Okay. Leah, go ahead. Unbutton his shirt and take it off,\" April instructed her.\n\nI stood ram-rod straight in front of Leah as she quietly stepped forward and reached for my shirt. I watched her fingers negotiating my buttons, albeit with a little extra effort on account of how much they were shaking. She had it unbuttoned and removed quickly before April instructed her to continue and remove my t-shirt. Soon, I stood there bare-chested and taking deep, heaving breaths. I caught a slight whiff of my own cologne evaporating off my chest, a seemingly sarcastic reminder of how routine it had become for me to do everything in my power to woo Leah any time we did anything together.\n\n\"Now his belt,\" April said. \"Pants off.\"\n\nLeah fumbled with my belt buckle and then unzipped my fly. With a series of shimmies, she managed to get my pants down to my feet where I stepped out of them, awkwardly aware of the way my cock flopped about inside my boxers. The movement seemed to catch her eye, drawing her attention momentarily before she quickly distracted herself with the task once again. It was there. She had seen it dangle about. There was no doubt. She removed my socks and stood back up, leaving me nearly naked, with only my boxers remaining.\n\n\"Okay...\" April said slowly, rising up onto her knees excitedly. \"Are you ready to see it, babe?\" Leah shot her a look and took a hard swallow. \"Why don't you take his boxers down now so you can finally have a look at Evan's penis.\"\n\nI felt myself becoming rapidly aroused, swelling in my boxers until I hung thick and long down one of the leg holes. Then I felt it begin to rise and I started cursing myself under my breath. Leah directed her attention downward, eying the last piece of clothing on my body with hesitant curiosity. She slowly squatted back down in front of me, then raised her hands to grasp the elastic waistband.\n\nTime seemed to slow down to a crawl.\n\nI watched Leah's eyes as she began to slide the boxers down my thighs, observing with a sense of wonder as my body revealed itself. My underwear crept downward, one centimeter at a time. There were April's eyes. Samantha's. Even Nathan and Matt were glued to my groin.\n\nThen, finally, it happened. My naked penis flopped out and wobbled in front of Leah's face. Half erect, there was no turning back now. I watched as it quickly lengthened the rest of the way, stiffening dramatically in front of everyone's eyes, pulsing at the rate of my heartbeat and gently twitching higher and higher into the air as my shaft became rigid and firm. Leah paused suddenly, her eyes bulging for a moment as she examined my exposed genitals. They focused briefly on the thick, ridged head of my cock, then traveled along my lengthening shaft until it met with my testicles dangling between my legs, and then she looked up to observe my neatly groomed pubic hair.\n\nThe room was silent. Everyone watched breathlessly as she projected a sense of quiet wonder and a twinkling of desire. She quickly tugged my boxers down the rest of the way, avoiding the wild swing of my stiffened member, then stood up, her eyes never leaving my cock. Finally, she raised her eyes to mine to offer a soft expression of longing.\n\n\"It's okay,\" laughed April, sensing Leah's hesitation. \"You can touch it. Go ahead and caress him.\" April was all-in on the instructor thing. She wanted it all to herself. Clearly, she'd been waiting for that moment, much as I had. She sought satisfaction and she was going to get it in all the ways of her choosing.\n\nI watched Samantha raise her hand to her mouth, gawking at the two of us, her cheeks and neck flush with deep color. I felt that much more aroused seeing Samantha so aroused by the two of us. Leah reached out and softly grasped my cock where it began to throb in her hand. Together we looked down, watching as it strained painfully, sliding along the inside of her open palm. I could hear Leah breathing deeply. Then I felt her give me a gentle squeeze as if to see how hard I'd become.\n\nI looked up at her face and she quickly responded in kind. As I felt her hand begin sliding back and forth along my shaft, we gazed into each other's eyes. Her bright blue pupils were unsteady, distracted, driven left and right as if by the waves of emotions and scattered thoughts erupting in her mind like dynamite. Yet somehow we still connected there, sharing the same wild realization that at that moment she was actually stroking my fully erect penis.\n\n\"Dude, he has a big cock. Look what you've been missing out on all this time!\" laughed Matt. Leah turned red and briefly looked away from me.\n\nSamantha gasped. \"Oh my god! Matt! You're so-\" she didn't finish her sentence. She just resumed her stare that had been fixated on us, full of equal parts shock and wicked amusement. I felt my head spinning. I was lightheaded.\n\n\"Okay, that's great. Now, Evan, it's your turn,\" April continued.\n\nLeah whipped her hand away, leaving my stiffened cock to bounce excitedly in the air. She instantly clammed up, realizing that I was about to undress her. Slowly, I reached out toward her body, carefully watching her eyes. I saw her inhale sharply when I made contact. I struggled a little bit getting her shirt off due to my own nervousness. It bothered me that all my emotions were plainly on display.\n\nLeah had on a simple white bra. I was instantly mesmerized with the deep well between her breasts but I was too afraid to take a proper look. I moved on, slipping down her pants to reveal an equally simple pair of white panties. At the first sign of even the slightest evidence of the faint impression of her labia, I quickly rose back up, my heart racing wildly.\n\nApril laughed softly, seemingly giddy at my intense stare at the woman in front of me. \"Excited?\" she asked me, her sinister grin broadcasting her quiet delight.\n\n\"Y-yeah...\" I said, unable to offer much more than that basic fragment of honesty.\n\n\"I'll bet you are...\" she said with a smirk. \"When you're ready, I'd like you to begin removing Leah's bra and panties so that the two of you can stand before each other, naked.\"\n\nAs if on cue, triggered by the next step in the slow unfolding of April's wicked plan, Leah began shaking. I took a step forward and slid my hands around her back. She flinched. \"Are you okay?\" I asked, ready to back away. I suddenly felt terrified at any sign of discomfort. \"We don't have to do this if you don't want to. It's just a game.\"\n\nLeah just stared into my eyes. I remember struggling to understand exactly what she was thinking. It seemed like an eternity of not knowing. However, this strange sort of disappointment seemed to be forming on her face in response to my question. A moment later, everything came full circle. All that we'd been through together, everything we had ever meant to one another, suddenly became crystal clear.\n\nIt was as if our friendly little games were always meant to prepare us for their real purpose, in the midst of establishing itself, right there, on that evening.\n\nLeah leaned forward a little, bringing her mouth close to my ear, and spoke softly, grasping for whatever last, flimsy bit of privacy we still had.\n\nShe simply said, \"Do it or lose it.\"\n\nI felt my whole insides collapse in a burst of emotion as she pulled away from my ear with a wide, nervous grin. Our eyes connected, communicating the understanding that she'd just, in our own special, private way, told me how much she wanted to proceed. I felt a certain crisis overtake me at that moment. So many years had passed that I'd lived in anguish with the desire for Leah. I'd grown up with her at the center of my adolescent curiosity about the female body, the target of the full blossoming of sexual desire as I grew up and became an adult, the fantasy model by which I had compared all partners I'd come to have ever since, including the very stranger I'd been with recently while Leah lay nearby with someone else that should have been me. However, it had all led to this very moment; the moment when all curiosity would vanish, fantasy and reality would become one. Leah's beautiful, naked body was about to exit my dreams and enrobe itself in living flesh.\n\nI could almost hear her heart thumping in the core of her chest as I moved slowly for the band of her bra, following it all the way to the back. As I gazed at the soft inward slope between her breasts, I could see her trembling with intense emotion. My fingers found the closure and began the brief task of unhooking it. I felt Leah's eyes on me as if desperate to catch my expression upon having my first glimpse of her private places.\n\nMy hands were shaking as I pulled the bra forward, letting the cups fall away from her body. My breath stopped as I looked down and watched her breasts gently bounce free and wobble ever so slightly as they settled into place, extending proudly from her chest. They seemed to me to exemplify everything that was sweet and feminine, from their delicate roundedness, to the pale impression of a nearly-extinct tan line, to the vigilant nipples swelling from their tips like two rosy coins. I wanted to bury myself in their warmth, immerse myself in their soft cushioning, then feel the hardness of her excited nipples on my tongue.\n\nLeah gazed at me with a serious, longing expression, reading the suffering on my face and reflecting it back with her own desire. It followed me as I slid down along her body toward the final unknown territory of her body. I craved the opportunity to explore the limits of her private femininity with tenderness and adoration and there it was, obscured by just one small piece of fabric.\n\nI grasped her panties, eye-to-eye with the apex between her thighs. I began to slide them down, slowly, savoring the moment. A sharp line of hair emerged, then more after, until a soft, thin bush blossomed forth. Neatly groomed, it was not too thick, having the appearance of light brown, silky fur. I continued downward until I saw the delicate pink flesh of her labia emerge, much sparser with its finespun, gossamer hair and already quite swollen with erotic excitement. I found myself so entranced with the exquisite lips of her naked pussy that I lost myself for a moment, drowning in its feminine charms.\n\nSuddenly aware of my own fascination and feeling mildly ashamed, I stood up sharply, now eye-to-eye with Leah who seemed like she'd just witnessed the bright skies open up after a long and dreary rainstorm.\n\n\"Damn...\" I heard Matt say with an authentic sincerity. I couldn't help but laugh softly to myself for having the same reaction.\n\nI'd long since forgotten that April merely asked us to stand there before each other, naked. No, we already wanted to touch one another, to explore our desires, to bring physical expression to our secret urges. I began to slide my hands across her arms, exploring her safe zones at first. Her skin was covered in tiny goosebumps. I felt her hands on my body as mine traveled down the sides of her torso. Little by little, we mapped each other's terrain with an obvious fascination, enthralled in the vast expanses of naked flesh and bashful at each visual encounter with an especially private bit which we still lacked sufficient bravery to examine with especially close attention.\n\nIt was April, again, who had to prompt that leap. \"Evan, you can touch her elsewhere, too,\" she said somewhat impatiently. \"Don't be afraid to caress Leah's breasts and pussy.\" As she said this, she hoisted herself up higher on her knees, running her hands over her own body as if instinctively mimicking the contact she wanted so badly to witness.\n\nA magical, sparkling sensation showered through me as I heard her say those words, inviting me to bring my fantasies to life. Leah's hands dropped to her side as if preparing to suffer the pleasure of my curious touches. Growing bolder and more eager, I moved my hands up her stomach toward the undersides of her breasts. I felt her soft, pliable flesh collecting in my hands as they rose up over them, then slid over the tips, feeling her hardened nipples dragging across my palms. There I cupped them gently, assessing their weighty bulk, and then felt them quake briefly as Leah suppressed a sudden laugh.",
        "I was not prepared to bury my face in them, as I had earlier fantasized, but somehow Leah must have sensed my instinctual inward leaning. Her hand found its way around the nape of my neck, then it climbed upward to caress my hair. She guided me forward, gently holding my cheek against her chest. I felt myself instantly collapse, turning my face into the chasm between her breasts and sighing heavily. I lingered there, inhaling deeply the natural scent of her skin, letting her blushing nipples find their way to my mouth where they popped over the ridges of my lips and tickled my nose.\n\nAfter enjoyed my brief escape to the seclusion and solace of her breasts, I slipped my hand down over her bellybutton and cupped her furry mons. I heard her inhale sharply, offering me a weakened smile. My fingers found their way over a feathery plain of hair until they discovered two smooth banks of flesh that parted willingly, giving way to a velvety interior that I briefly massaged, while at the same time gazing intensely into Leah's eyes. Her lips began to quiver then emit a breathy sigh.\n\nI offered her just a tease. When I pulled my hand away I looked down and saw my fingers glistening.\n\n\"Wow... is she wet already?\" Matt asked.\n\n\"Obviously,\" Samantha replied with a nervous laugh, almost instantaneously having noticed the same thing.\n\nAs we resumed enjoying the sensation of each other's naked body, I found my head swimming with recollections of all the years we'd known each other. I reflected on growing up together. The closeness we had formed. I remembered recent experiences, too. The visit to the beach last summer with friends. My fascination with her breasts, squeezed into a tight bikini, the stark impression of her nipples poking against the dark fabric when she emerged from the waves and was met with a slight chill.\n\nShe had been my sexual awakening, my deepest fantasy and, apparently, I was hers. I thought how funny it was that it took a detour with strangers for us to realize this had always been the case; that what we wanted most was already closest to us.\n\nI felt Leah tugging eagerly at my cock, jerking it slowly at full mast, her quiet vocalizations ambiguous and hoarse. The strong arch in her back pressed her breasts forward and her stomach heaved in and out causing her bellybutton to rise and fall. I could feel the erotic charge building in her body as her heavy breathing reacted to the fierce resistance my engorged member offered her passionate manipulations.\n\nI grew bolder myself, parting her labia and slipping my fingers between those soft folds of flesh where they vanished into a moist, slippery chasm. She quickly parted her legs wider, offering me greater access which I willingly accepted. With a shiver, I came to know just how sticky and slick she'd become, something she could no longer hide and had no reason to. For a long while, we remained just like that, gently leaning into each other, listening to the other's breathing, being stroked lovingly. Our bodies came alive under each other's touch as Leah stroked my cock and I rubbed her pussy in slow circles, the two of us investigating each other's body, absorbed in the long-overdue curing of years of curiosity.\n\n\"Oh-my-god, finally!\" shouted April as if she were having an orgasm. \"Do you know how long I've been waiting for either of you to do this?!\" Leah sputtered up a laugh and I felt myself beaming at her. \"Okay - okay, next!\" April squealed excitedly. \"I want you to kneel down, Leah. Take his cock. Feel his length and girth. How soft his skin is. How hard he's become in your hands.\" Leah kneeled down in front of me. She reached out with both hands and began lovingly caressing me. \"Now kiss him there,\" April said. \"Inhale his musk. Know how badly he wants you.\"\n\nLeah's quivering hands continued to softly caress the solid trunk of my cock as she studied the thick, distinct head pointed toward her lips. She seemed to be examining the small hole at the tip, the red ridge that separated my glans from shaft, the soft, sensitive flesh beneath it which she lovingly stroked with her thumb. Then she leaned slowly forward, closed her eyes, and gently kissed the tip of my penis. I felt her warm breath exhale against my swollen member. Then I felt another kiss, and another, all along my shaft.\n\nOut of the corner of my eye, I saw Samantha turn to Nathan and silently mouth the word, \"Wow\" as well as the grin he gave her in return.\n\n\"You guys are way too quiet,\" April said with an air of frustration. \"Tell her what you want her to do, Evan.\" I looked at her with astonishment. It was still so strange, being there, being watched. \"Go on. Tell her. Be honest. What do you want her to do with it?\"\n\n\"I want you t-\" I began.\n\n\"She has a name,\" April interrupted. Then she dropped what felt like a bombshell. \"She's not some stranger you just met.\"\n\nI remember thinking: Whoa. Did she know? Had Leah told her about our recent sexual escapade? Did she know how we'd both fucked a complete stranger instead of the one we were really meant for? Was this our punishment?\n\n\"Leah...\" I responded, preparing myself to get as expressive and dirty as April wanted. \"I want you to... um... to suck my cock...\" I couldn't believe April was making me say this but I gave her what she felt she was owed. Granted, it was also, in truth, precisely what I wanted Leah to do. She took it with good humor, cracking a smile and giving me a teasing look that made me smile.\n\nHer eyes lingered there, connected with mine as she leaned back in, parting her lips as she went. When my cock slid into her mouth she was still trying to assess my expression. I gazed down at her warmly, then closed my eyes and sunk into oblivion.\n\nI felt the warm, rich moisture of her mouth envelop me. The eager playfulness of her tongue. The strong suction as she took me deeper, toward the back of her throat. From time to time, she allowed me to briefly slip back out, her eyes lowering, studying and admiring, using every sense to assess that swollen object which so ignited her passions. After a short while, she gave in, sufficiently satisfied in her exploration of my taste and smell and now fixated solely on an aggressive attempt at rendering me senseless with pleasure.\n\nI felt her lips ease into a partial smile as she began hearing me moan. It only caused her to suck harder, more urgently, to the point where she got ahead of herself and risked taking me too far.\n\nI swept my hand through her hair and began chuckling. \"Okay, okay...\" I said, pulling away slightly. My aching cock slid smoothly back out between her lips and hung stiffly in the air with a fresh coating of saliva. She licked her lips and gave an embarrassed laugh, having been made aware of her over-enthusiasm.\n\n\"Okay, your turn, Leah. Tell him what you want,\" April said gleefully as if dying for this moment.\n\nFully expecting this, and without missing a beat, Leah suddenly thrust her hand into my hair, tussling it, and gazed into my eyes. I felt her hand shaking violently. She seemed to be preparing herself as if she was taking a moment to savor something she wanted badly to ask me for. Leah pressed her forehead against mine and sighed. She nuzzled my neck, then lifted her lips to my ear.\n\n\"Do you want to taste me, too?\" she asked. I quickly nodded. \"Mmm,\" she sighed, her body moving anxiously against mine as she became further and further desirous of our intimacy. \"Taste me then,\" she breathed quietly into my ear. \"I'm really wet, Evan. I want you to eat my pussy.\" Her voice was delicate yet strained, yearning, infused with the desire to turn me on but still laced with the insecurities that came with sharing a private moment so publicly.\n\nSamantha audibly gasped upon hearing Leah's pleas. Nathan responded by wrapping her in his arms, cradling her there as they became drowned in a certain lovey-doveyness that was apparently contagious. I saw that Samantha's eyes were focused on the closeness of our bodies. Her face looked red and hot. She was breathing quickly. I may as well have been preparing to go down on her.\n\nLeah held my hand lovingly as she backed up to the couch and sat down onto it. She lifted her legs and bowed her knees out to the side, then swept aside her long hair, narrowed her eyes, and placed one hand upon her inner thigh, opening her hips further and casting me an inviting look. She seemed to relish the expression on my face as I watched that fuzzy, fleshy opening parting wide and inviting me in to savor her sweet delicacy.\n\nAt that moment, I could see just how turned on the whole experience had made her. She was resigned to what was going on and the conditions under which they were happening.\n\nShe embraced what she wanted. It was this.\n\nLeah's flushed thighs rose on either side of my head like chasm walls as I lowered toward the seclusion of her crotch. Her pussy was fragrant and moist, already glistening with abundant lubrication. There was no doubt about it, Leah was the type of girl with a generous output. I inhaled deeply, letting her private odors flood my head. My nostrils burned with the heady, intoxicating perfume of potent, female sexual arousal. I found myself salivating, eager to drown myself in her body right then and there.\n\nThe moment I made contact I heard Leah whimper loudly, her body slumping and going weak as I kissed the wrinkly flesh of her expanding labia. Her sticky flesh clung to my lips, leaving a gloss there that came with it my first taste of her wet pussy. I was instantly enamored, craving more, craving all of it. My tongue lashed out and dragged through her silky inner flesh, gathering a coating of fresh, dewy moisture as her balmy humidity engulfed my entire face.\n\nI went to work, skillfully exploring every inch, every fold. Leah writhed and squeaked in the most wonderful way, submitting her most private of erogenous zones fully to my explosive fascination. I tickled her thigh, licked and sucked at her labia, flicked eagerly at her clit, driving her wild until she groaned and arched her back, clutching at her breasts and mashing her slick mound against my hungry mouth. Finally left with an aching jaw and a dripping chin, I showed her mercy and withdrew from the greatest source of pleasure I'd had ever known.\n\n\"Fuuuuck, that looked intense!\" April exclaimed, collapsing backward.\n\nSamatha groaned, \"I knooooow!\" as she threw her arms into the air and then plunged them down over her forehead in a display of dramatic disbelief. Nathan whispered something privately to her that I could not hear. Samatha responded with a secret, wicked grin.\n\nWith a grin, Matt offered his eager opinion, saying, \"Okay, tell them to get it on already.\"\n\n\"Okay, okay...\" replied April. \"Since you're so keen to knock doggy style, I'm gonna make you start there.\" She began to laugh. \"But don't worry, Leah, you'll get to look him in the eyes soon.\"\n\nA quiet, serene smile glowed on Leah's face. I returned it as I watched her flip over and get onto all fours, her beautiful, round ass extended in my direction. She grabbed one of the pillows on the couch, setting it in front of her and relaxed into it before easing her hips into a position that allowed her thighs to widen for me. I shuffled forward on my knees, overtly conscious of my raging cock that extended outward before my body and swung madly from side to side.\n\nApril shifted her position slightly. \"I gotta see this. I want to see Leah's expression when she takes you inside for the first time.\"\n\nI felt a certain madness overtake me like I was some animal about to mount a new mate. I became aggressive, grasping Leah's buttocks and positioning my cock between her thighs. There I found the hairy portal to her body splitting open to reveal a deep pink canal. I was ready to dispense with the teasing and finally feel us unite fully, completely.\n\nI eased my cock forward, clearing her lips and gliding smoothly into her body. It was a momentous experience as I felt Leah expanding, the tight walls of her vaginal canal snuggly grasping my hard shaft on all sides. Leah gasped softly into the pillow, then let out a muffled groan.\n\n\"Oh my god, yeeeesssss...\" April cooed as Samatha grinned and bit her nails, both sets of their eyes affixed to the unhinged expression on Leah's face as it emerged from the briefly comforting depths of the pillow.\n\nI began to groan as well, engrossed in the sublime sensation of dense, hardened flesh plunging through flesh that was yielding, soft, and slick. I gawked at the peachy roundness of her tight bum, the compact wobble of her cheeks, the way they compressed in my hands as I squeezed and kneaded them happily. I watched the glistening rod of my cock driving deep into her body and then out again, glazed with a creamy film as she coated it in her cum.\n\nThe air filled with the music of Leah's happy cries and the powerful odors of our aroused bodies intermingling. It wasn't lost on me that our audience had seemed to creep closer to us, especially April whose nostrils strongly flexed with the telltale indication that she, too, was driven wild by the scent of our sex.\n\nI began to pound Leah harder, listening to the volume of her moans increasing. I watched the rippling of her spongy flesh receive the impact of my body, the gluey strands of her cum forming at the entrance of her vagina, the frantic swing of her loose breasts as they jostled beneath her body. It suddenly felt warm and steamy. My vision briefly blurred as I became overwhelmed with pleasure, hearing only the regular smack of one body recoiling against another.\n\nAs if sensing that I was beside myself, April quickly suggested, \"How about reverse cowgirl now?\" She snickered. \"I'll make her wait just a liiiitle bit longer to see your eyes.\" Leah snorted a laugh and the rest of us joined in. April seemed perfectly eager to dole out a little more punishment to Leah for waiting so long to be this close to the person she most cared for.\n\nI pulled out of Leah's pussy then laid back and watched as she sunk her firm buttocks down over my groin, letting my upright cock ease deep into her pussy once again. Propping herself up atop my body, she let out a small sigh and I could see the slow creep of her smile reforming at the edge of her face. For the next few moments, I enjoyed watching her in the driver's seat, holding all the power over both her pleasure and mine. She began to roll her hips with a steady rhythm, grinding firmly against my body. With each urgent gyration, her cheeks flexed open, revealing the rosy pucker of her anus and the two dampened lips gaping open to devour my cock like a hungry, seething mouth.\n\nAs her pleasure increased, Leah began to scoop her hips faster, whipping them back and forth aggressively, causing the loose mounds of her clammy flesh to wobble and quiver. Suddenly, her head hung low. Her face, lost in a forest of fallen hair, briefly emerged now and then to emit a soft moan and flash her blue eyes indiscriminately about the room. I found myself lost in the blissful scent of her arousal, my entire pelvic area becoming dank and fragrant from the humid heat of her tacky sex.\n\nShe swung her whole body upright, arching her back and extending her chest. Leah's hands traveled up the front of her body to cup and fondle her own breasts. She delighted in pinching her own nipples as she began to transition from a rolling motion to a frantic bounce. As she threw her hair back and moaned, I briefly caught a glimpse of her face. It was awash with pure, unadulterated joy. Leah continued to spring up and down, driving my swollen cock up through the tight inner canal of her body over and over again. She began to laugh softly, letting her head bob about drunkenly. It seemed as if she was riding some sex toy for the first time, ecstatic with bliss and shock over the unexpected degree of pleasure she could coax out of the hard, protracted object that penetrated her so deeply.\n\nI suddenly realized that, in a way, we weren't just being intimate for the first time. Far from the strangers we'd recently experimented with, I already knew Leah as intimately as possible and vice versa. This was just the missing piece of the puzzle; the physical confirmation of what we'd already known. April was right. This was a right of passage that was inevitable... and we had indeed waited far too long.\n\nI was dying to see Leah's face; to gaze up into those eyes as blue as the sky and see what was so plainly written there. And as if those desires had been communicated telepathically to April, she answered my call.\n\nApril's face lit up with a wide grin. \"Okay babe, I'll give you what you want. Turn around.\"\n\nLeah spun around so quickly that it caught me off guard. Her eyes immediately searched for mine until we firmly connected. With an expression of great joy, she placed her hands gently on my chest, readjusting her hips until she was comfortably impaled on my cock again. Leah sat up in my lap, swinging her hair out of her face and lowering her eyes to mine to offer a hungry stare. Her body began moving again, winding like a serpent, unwilling or unable to take even the briefest pause in the fierce desire to derive maximum pleasure from my body. Our eyes remained locked like that, transmitting urgent signals about how badly we wanted one another and how wonderful it felt to be doing what we were doing.\n\nWrapping her arms around my neck she began to ride me, face-to-face. I held her torso as she rocked back and forth, feeling the dense tips of her nipples repeatedly graze my chest. She scooped her hips back and forth with increasing urgency, her eyes still locked to mine with a mad determination. The frantic swing of her buttocks brought her soft patch of pubic hair up against my hips and then back again, tickling my skin. I drew her attention downward as I observed our bodies connecting. My rigid cock stood firm in its deep plunge through her body, emerging repeatedly engorged and reddish, coated in a thick film that audibly declared its stickiness with each swing of her hips.\n\n\"Ngh,\" she whimpered as we gazed in wonder together at our physical union and at the excess of cum that her body continually slathered on mine.\n\nI barely had any attention to offer our audience, being so fully consumed by my shared intimacy with Leah. However, I was vaguely aware of the flurry of activity that suddenly raged around us. The two couples observing our extreme display of erotic delight were whispering excitedly, breathlessly, commenting on the rise of burning passion that inspired us to fuck so feverishly.\n\nLeah suddenly looked bleary-eyed, sweaty, and weakened. I reached up and embraced her body, feeling her collapse into my arms. I felt the heat from her body, the slight tang of her sweat, the raw, piquant scent of her sex. We fell toward the couch together until she lay on her back, gazing up into my eyes with a pleading took, begging me to take her the rest of the way. I rose up in front of her, forcing her knees out to either side, and shared an excited grin with her. I reached forward and gently cupped her breasts as she adjusted her hips wider to fit me between them. Then I eased forward and began inserting my cock deep inside the snug pink canal offered up to me with so much urgency.\n\nI felt myself sink into her tight pussy as the bliss returned and washed over me. The hairy ring encircling her labia split open wider as she received my eager girth, devouring my penis inch by inch and welcoming me home into her comfortable depths. I began to fuck her hard in missionary, observing the sweet anguish on her face as she moaned uncontrollably.\n\n\"Ohhh god,\" I grunted, driven wild by the sight of her two beautiful tits lurching happily about her chest as I thrust into her.\n\n\"Yes, Evan!\" she exclaimed. \"Ngh! Fuck me!\"\n\nOur audience became increasingly animated. I glanced over, discovering that Nathan had slipped his hand into Samantha's panties. He moved it back and forth lovingly, rubbing her concealed pussy as she abandoned herself to his other arm which wound around her body. Her breath seemed strained and her voice hoarse as she began to moan, her wide eyes affixed to the sight of my solid cock plunging back and forth through the viscous entrance to Leah's body. She rested her head in her boyfriend's neck, nuzzling him there and occasionally closing her eyes. For someone that had been so embarrassed by the preceding events, Samantha resigned herself to his loving touches, looking helpless as he kissed her softly and continued to discreetly stroke her body.",
        "Matt had his knees up in the air, leaning back on his arms, watching us intently with a silly grin on his face and a large bulge at the front of his pants growing visibly larger. April no longer looked amused. She rubbed herself aggressively then turned to her husband and mouthed, \"I'm so fucking wet.\" Perhaps this simple fact was behind her sudden silence, her inability, or even disinterest in getting in the way of our progress with any further instruction.\n\nI still couldn't believe they were watching us there, naked, aroused, and horny beyond all sense of decency or reason. Leah and I were fucking like animals. We fucked for all those times we wanted to fuck but didn't because we were both too afraid to make our relationship what we really wanted it to be.\n\nLeah gave me that look. I knew that she wasn't too far out from that peak of pleasure. Nor was I. I wanted so badly to come for her, to finally find relief from all that tension that had built up over the years.\n\nI noticed the sudden silence of our audience. They were speechless, caught up in the passion of our moment, they slipped away from me. I no longer even cared that they were there.\n\n\"Fuck... Leah- I'm gonna come,\" I quickly whispered. I immediately made to pull out but she shot her arm forward and grabbed me by the waist, locking my hips in place.\n\n\"No- wait,\" she said breathlessly.\n\nI gave her a panic, confused look. \"But I'll-\"\n\n\"No, it's okay. When I left earlier, I... uh... borrowed something from April,\" she replied. She resumed bringing the motion to her hips, humping me with urgency, not wanting the constant flow of pleasure to cease for even one brief moment.\n\n\"Leah...\" I began saying, too distracted to think clearly about what she meant. Was it a diaphragm? A sponge? Some other strange type of device I rarely ever saw someone actually use?\n\n\"No- really. I swear, it's safe,\" she continued at a low volume, hoping for any degree of privacy she could manage. \"Come inside me. I want to feel you- Please, Evan... I'm so wet for you... come inside me! Come in my pussy!\"\n\nI listened to the desperation in her voice, a deep craving to feel the apex of my pleasure within her depths, realizing that she might have imagined that moment so many times in the privacy of her own fantasy world. If she had, it was admittedly something we shared.\n\nI offered Leah all my trust as I swung my hips forward and back, both of us watching the thick mass of my cock forcing its way through her soft ring of pubic hair, plunging deep into the yawning, pink opening of her body where she eagerly welcomed me home into the deepest recesses of her femininity. I felt a powerful emotion sweep through my body. It was love. It overtook me. Suddenly, I wanted her closer to me and I lifted her up into my arms.\n\nLeah embraced me and quickly started to ride my cock in my lap. We gazed into each other's eyes, bound to each other on every level, our bodies grinding together in perfect unison. We were at each other's lips. I could feel the waves of pleasure rolling through her body, activating each and every center of pleasure until she came alive with such an erotic climax that all boundaries between us seemed to vanish.\n\nLeah's warm body moved frantically against mine. The soft cushion of her breasts pressed into my chest, her hot breath scattered across my neck, the soft, wet squelch of her body receiving mine. I could feel myself reaching the point of no return. I was ready to give her everything.\n\n\"Oh god, Leah... I love you so much,\" I groaned, barely conscious of what I was saying.\n\nOut of the corner of my eye, I saw April fall backward, reeling, her hand rising to her mouth. All jaws had dropped, in fact. I heard the sound of four distinct individuals surrounding us suddenly take a sharp inhalation.\n\nI also heard a gasp in my ear. Before I could panic about what I'd let slip, I heard Leah reply, rushing to match my sentiment with one of equal openness and honesty. \"I love you too, Evan!\" she cried out.\n\nJust like that, I heard all that I had ever wanted to hear, and the dam broke.\n\nI began erupting, squirting violently inside her with warm issuances of cum that drained all the strength from my body. The moment it started, she climaxed with a bang, her whole body thundering with a full-body orgasm that left her senseless. I submitted to the sensation of the two of us orgasming together, clutching each other urgently, anchored against one another, each of us equally explosive and powerless but somehow bolstered and reassured by the comforting presence of the other.\n\nSomehow, Leah briefly grasped onto the faint trace of consciousness she could still harness. \"I can feel you coming! I'm coming, too!\" she whined into my ear. She began laughing, cupping my face happily and bringing me back to her. I remember I was still spasming, still flooding her with recurrent emissions, bewildered by how long they were lasting. Then, soothed by her body radiating its heat, I felt us both lulled back into the splendor of nothingness.\n\nAt that moment of peak climax, the world went away, just as you want it to do. There were no sights nor sounds around us, no one else there, no memories, good nor bad, no fears or insecurities, just passion in its purest form. In the vast blankness of the mind at the point of orgasm, even I went away. And Leah. Just one continuous flow of energy. A warmth, security. We blended together. We melded.\n\nAnd even moments later, when the world came screaming back into existence to break us in two once again, we resisted, clutching for each other tightly in a cloud of heat and sweat, our fierce expressions locked together.\n\nI could read her eyes. I knew exactly what she was thinking. I was thinking the same thing.\n\nIn our sweaty, desperate haze we had fucked ourselves into a perfect state of harmony and perfection - and it was only a matter of time before we would return, surrendering ourselves to that comfortable dissolution, the one that made all pain go away. We'd return to that place time and time again, for as long as any existence on Earth could allow.\n\nBecause, well, we had a lot of lost time to make up for."
    ],
    "authorname": "SolarRay",
    "tags": [
        "dare",
        "game",
        "kink",
        "love",
        "reluctance",
        "romantic",
        "stranger",
        "true love",
        "truth or dare"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/do-it-or-lose-it"
}