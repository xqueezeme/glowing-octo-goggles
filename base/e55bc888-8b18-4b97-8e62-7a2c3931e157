{
    "title": "Kept",
    "pages": [
        "Author's foreword: Thank you for humbly allowing me to participate in this event with such a stellar cast of writers. I accepted the invitation because I have always loved the Western genre and I'm looking forward to reading some incredible stories. A big and heartfelt thank you to Randi for riding herd on this event and editing my story. Hope you enjoy.\n\n*\n\nThe cold steel-gray horizon slowly began to lighten, bringing landscape features into view. I sat motionless, darting my eyes from point to point trying to recognize any potential dangers, my ears focusing to alert me to any foreign sounds that harbored any ill-intent to me. I continued my silent vigil, slowly turning my head to register the scene behind my back and confirm no apparent perils were approaching me.\n\nA flash of motion alerted me, and I immediately grasped the butt of my Colt Navy revolver, ready to draw, aim and fire. A commotion was taking place on the ground approximately twenty yards away near some mesquite brush. The sight of the red-tailed hawk grasping its prey in its razor-sharp talons confirmed no immediate danger. Still, I kept my hand on my pistol as I watched the hawk wrestle with the large rattlesnake.\n\nThe rattler continued to writhe in the death grasp of the hawk, twisting and turning to escape, or to fight, to no avail as the raptor repositioned its talons, spreading its wings for balance as the snake's resistance slowly ebbed away.\n\nThe hawk looked directly at me as I studied it and gave an angry cry of warning not to interfere or approach. It needn't have bothered. I was of no mind to place myself as an arbiter between the combatants. Had circumstances been different, the snake may have bitten and coiled around the hawk and crushed the breath out of it. I wouldn't have interfered at that result either.\n\nNature. Cold, impartial, nature.\n\nSince the snake was too large for the hawk to fly off with, it began piercing with its beak and ripping off portions of the snake to devour. The snake continued its death throes, though they lessened as time passed. The hawk continued to pause and study me as it slowly ate its fill. Assured I posed no immediate threat, it continued.\n\nBy now, the grey morning began to burn bright with the sunrise approaching to promise another bright azure sky on the plains. I turned and studied the wagons behind me. Soon, the occupants would stir and start their daily constitutions and routines, as would I.\n\nThen, after all was prepared, we would start the daily quest, moving our chain of machines, beasts and humanity forward to the next watering hole ten miles westward in our journey to the gold mines of California. There, we all hoped to sate our needs and desires, just as the hawk was sating its needs. Whether we were successful depended on nature.\n\nCold, impartial, nature.\n\nI had learned the harsh lessons of nature so many years ago, in the Civil War. \"Come with me, Zebulon, and join the fight!\" cried my cousin, Isaac. So, we left our homes and family and the hardscrabble earth where our parents struggled to seek out an existence, and went to see the elephant: a term used to describe the glory and honor of war.\n\nThere wasn't much glory or honor to Isaac's death. He died at the Battle of Pea Ridge in the middle of the night from a gutshot wound, crying for his mother. I held him as his bloody hands tried in vain to hold his entrails together. My attempt to dig his grave was interrupted by General Earl Van Dorn's orders to retreat. So, I left my cousin's corpse unburied, unattended and unmourned.\n\nHad I been smart, I would've deserted that day, but I was barely in my teens and thought of the dishonor I would bring on my family. I had nothing vested in the war save the desire to repel an invading army off my homeland. Neither I, nor my family owned slaves. We could barely afford to buy seed corn every year.\n\nThe only thing that kept me here was the knowledge that running away would be seen as a betrayal of Isaac's sacrifice by my family and friends. I could hardly expect to go home and look for my intended, Alice Williams, to see me as anything other than as a coward, so I resolved to follow my misguided hasty decision to the conclusion.\n\nFrom there, we fought at Corinth, then came the Vicksburg Campaign, and our numbers steadily dwindled as we suffered from the ineptness of General Van Dorn's leadership. The men under his command had little hope that any of us would survive, and we became reconciled that our suffering would soon be over, given the next battle or two.\n\nThat was not to be, as Fate had something else in store for us. The good General made up for his incompetence with his courting of every female that came into his view. That husbands, boyfriends, or fathers would be aggrieved by his behavior held little sway with him until he was killed by an irate husband while sneaking out a bedroom window. So notorious were Van Dorn's offenses that his assailant was never brought to trial.\n\nFrom there, I made the decision to transfer to a cavalry unit, reasoning that since I was already hell-bound, it would be easier to ride than it would to walk in the infantry. I fought the rest of the war on horseback until we surrendered at Gainesville, Alabama.\n\nI took the Oath of Allegiance and left for home. When I got there, it was all gone. Under Order Number 11, all my kin were removed from their homes and all their property and livestock confiscated. I had no idea what had happened to any of them. Word came to me that my sweetheart, Alice Williams had caught the eye of a Yankee major in an Iowa regiment and eloped with him.\n\nI was eighteen years old, broke, homeless and destitute. All I had was my weathered uniform, a pair of Colt Navy pistols and my horse. I had wasted four years of my life fighting a war that held no advantage for me. I couldn't even think of a soul that owned a slave in our neck of the woods. Still, I would suffer the consequences along with the entire South as Reconstruction began.\n\nI had learned many harsh lessons as to the whims of a capricious Nature during the war, and I learned them well. I realized you couldn't account for every possibility, but you could help your odds by being careful and not relying on others. Those lessons would be reinforced, and other hard lessons taught, as I rode for Texas.\n\nI took work on cattle drives, riding sunup to sundown behind a dusty herd of longhorn steers, gulping down a bowl of beans, gnawing through a portion of concrete-hard bread, and finishing it off with a bitter cup of coffee. Sleep was four hours on a bedroll on uneven ground, pillowed by a hard leather saddle, shivering for warmth by a campfire along with the other ranch hands. Then, awakened to stand watch on the slumbering herd so they didn't stampede or be stolen by Comanches or vaqueros.\n\nDeath could come anytime; whether gored by a steer, thrown by your horse, drowned crossing a river, bitten by a rattler, poisoned by alkaline water, or ambushed by rustlers. Cholera, dysentery, malaria, pneumonia, tuberculous, rabies, smallpox, measles, or plague, all took claimed their own.\n\nThe agent of death didn't matter. You were hardened by death and inured to its effects. You stood and watch it take someone, divided the belongings of the hapless soul and went about your business.\n\nA shallow grave and, if you had been well liked, rocks provided a small cairn to protect varmints from digging up your corpse, a makeshift cross giving no clue to identity, words fumbled over for a quick ceremony and then back to business.\n\nThe only break in the monotony was the short glimpses provided by the cow-towns. Being suddenly thrust with the temptations provided; you could fuck or drink yourself to death, or exchange words with the wrong person and be shot, or knifed, or bludgeoned to death. Even if you won such an encounter, it didn't promise you protection from a lynch mob consisting of the victim's friends and family.\n\nNature. Cold, impartial, nature.\n\nI heard the footsteps approaching me. I didn't bother turning since I recognized the gait of the person. He stopped by my side as he did every morning and waited wordlessly for me to acknowledge his presence. He stared out at the hawk as it finally flew off with the remains of the snake. I looked down at him.\n\n\"Herr Russell, the wagonmeister requires your attendance,\" he spoke in his broken guttural German-English.\n\n\"Thank you, Willi,\" I replied. \"Let us not keep him waiting.\"\n\nWe turned to go back to our semblance of civility.\n\n\"Have you and Gretchen eaten breakfast?\" I asked.\n\n\"Ja, Herr Russell,\" he assured me.\n\n\"What about the oxen?\" I asked the question as I had every morning. The answer came forth by rote.\n\n\"They all are accounted for, they have grazed and watered and are yoked to the wagons,\" Willi answered with pride for the accomplishment of the chore. Despite his youth and size, Willi found a technique that allowed him to do a task solo that many men had to pair up with to accomplish.\n\nIn fact, as we walked, I noticed several men struggling to get their teams aligned to their wagons. Various people hustled to be ready when the signal came to start the daily drive.\n\n\"The wagons?\" I asked.\n\n\"All wheels and axles greased, all water barrels filled. All goods inventoried and accounted for.\" Willi promptly responded in a somber manner that he decided all adults should use when discussing business.\n\n\"Excellent work, Willi, I will give you and Gretchen a raise at the end of the drive.\" I replied.\n\nI caught the whisper of a smile appear fleetingly on the child's face as he answered, \"That will not be necessary, Herr Russell; we are only performing our contract,\" he protested.\n\n\"Nevertheless, you and Gretchen have earned a reward. When we get to California, I will sell my inventory and pay you and Gretchen double wages.\"\n\n\"Thank you, my Herr!\" Willi gasped at the mention of his windfall.\n\nI spied the Wagon Master, William Cutler, barking orders at some hapless family hopelessly trying pull their wagon out of the mire of the riverbank. The wheels were buried up to the axle in muck as the family physically strained to free their vessel.\n\n\"Mr. Russell, you will unhitch your oxen and assist Mr. Kohrs in freeing his wagon and accompany them as the two of you catch up with us on the drive,\" Cutler commanded.\n\nI realized this for what it was. Cutler was trying to put me in my place. It would have made more sense to enlist the aid of livestock and men still unprepared to start the drive, rather than burdening me with unhitching my teams, unhitching the Kohrs' team of horses, yoke my oxen to the Kohrs' wagon, pull them free, unattached my teams, reattach the Kohrs' horses to his wagon, and finally, reattach my oxen to my wagons.\n\nI had persisted in not acknowledging Cutler with the honorific title of Colonel during the entire drive, and now the little martinet saw an opportunity to make me pay.\n\nWithout speaking, I allowed my body language to imply my compliance with his order. I turned to walk toward my wagons and caught a glimpse of the smug satisfaction of Cutler's smile as he left to harass another unsuspecting victim of his self-importance.\n\nI had suffered from too many needless incompetent orders during the war and the many cattle drives, and I used common sense to achieve goals rather than satisfy the thoughtless requests. Gordian knots were meant to be cut.\n\nI hailed a nearby wagon in the process of attaching a team of mules to assist the Kohrs. Willi was drafted to walk through the camp and get volunteers to help us. I began digging out the mud-sunken wheels with a shovel and placed tree branches under the wheels to allow the wheels' purchase when we were ready.\n\nIn ten minutes, with the assisting mule team and ten volunteers pushing behind the wagon, the wheels rolled over the branches and brought the wagon safely on dry ground. A cheer rose for the successful effort and the Kohrs family went around thanking all for their help. Kohrs was so happy he had taken to shake my hands twice as he went around thanking everyone.\n\nI stopped short Mr. Kohrs profuse third attempt to shake my hand and thank me. Still, he grasped my arm in a comradely fashion and for a moment I thought he would hug me.\n\n\"Thank you, sir, for your help,\" he gushed, \"I'm Herman Kohrs, and you are...\"\n\n\"I am Zebulon Russell, and I'm late attending to my own wagons,\" I replied, bluntly rebuffing his attempt to be friendly. He recoiled from my cold response.\n\n\"I'm sorry, sir, I meant no offense,\" he stammered. \"I only wished to show my appreciation for your assistance.\"\n\nI interrupted his continued abject apology. \"If you wish to show your appreciation, don't camp your wagon so close to the river again. The weight of your wagon will always cause your wheels to sink, that close to water. I don't feel the inclination to help you get your wagon free every morning for the rest of the trip.\n\nKeep your wagon away from the water. It may be an inconvenience to carry water into camp, but it beats having to get you unstuck every morning.\" I explained.\n\nI could see the knowledge sink into Kohrs' eyes as he digested the lesson he learned. Whether he was intelligent enough to grasp all the other lessons that would come quickly and harshly during this trip, remained to be seen.\n\nFor example, his wagon was loaded with heavy and bulky furniture. Already his team of horses was feeling the strain of the weight, and we weren't even close to the Rockies. It was clear to me that he and his family would be stranded at some point when his horses died or pulled up lame. Whether his family survived after that depended on nature.\n\nCold, impartial, nature.\n\nI turned and walked away and noticed the glare on the would-be Colonel William Cutler's face as he realized that I circumvented his intentions to punish me. I would keep an eye on him. If push came to shove I would be prepared to deal with him like I had so many others. Whether he walked away from the experience or I did depend on nature.\n\nIt always came down to nature.\n\nI climbed into my wagon and looked across to see Willi climbing into my second wagon. He firmly gripped the reins, concentrating on the trek ahead. It took all his physical prowess and willpower for the boy to drive the team of six oxen hauling the merchandise I intended to sell to the miners at exorbitant prices and make my fortune.\n\nEach evening, I had to literally lift him off the wagon as we set up camp. That sweaty ragamuffin boy never complained or slacked off. Well, he did protest if he thought I was showing him any favoritism. He insisted on working like a man, so, by God, I would treat him like a man.\n\nWhen he was ready, he looked across and nodded at me. I took the bullwhip out of the holder beside me on the wagonseat and cracked it across the heads of the lead team of oxen on my wagon. As it lurched forward, I watched a tiny barefooted urchin kneel beside the forward wheels of Willi's wagon, pick up stones and throw them into the flanks of his oxen's team as she shouted a command in German that the oxen apparently understood. Willi's began moving as he strained to steer his teams to follow my path.\n\nThe little girl continued to trot alongside his wagon. Occasionally, she would stoop to pick up rocks in her small hand and throw them at the oxen as she assisted Willi in guiding the oxen to follow my path. Willi had to use both hands on the reins so he couldn't use the bullwhip like I could. He was dependent on his little sister, Gretchen, to help navigating the way.\n\nGretchen, a ball of infinite energy, would walk/trot nonstop alongside Willi for the duration of each day's segment of the drive. Her voice would pierce the sky nonstop as she shouted invectives and abuse to the oxen in her broken English.\n\n\"Move, damn lazy bastards!\" She yelled while tossing a rock to the flank of the ox she wanted to direct attention to. The equanimity of the oxen to the verbal barrage continued as she bantered at them.\n\n She would only pause to quench her thirst from a canteen slung across her shoulder. Then, she would sprint to her position alongside Willi and start with more spirited insults. If I could hear her, I knew all was well behind me.\n\nAs we continued our slow and steady pace, I would occasionally stand up in the moving wagon and peer across the horizon to assure myself there were no surprises looming in our path. I would take the field glasses I liberated from a prisoner of war in some skirmish in Mississippi and study in detail the terrain.\n\nAll it would take is dipping suddenly in a precarious rut and losing a wheel and we would be in trouble. Luckily, no perils were present as we continued crossing the Llano Estacado, the staked plains of western Texas. Before long, we would be overtaken by the wagon train powered by horses and mules, and we would steadily lag behind until at last we met them at the appointed camp rendezvous.\n\nThat was why I preferred leaving early instead of being too far behind for support if I left when Wagonmaster Cutler wanted me to leave in his parade march fashion at 8AM sharp. Just another bone of contention Cutler had with me. Before our paths separated, I was sure there would be more.\n\nAs predicted, wagons began passing us on either side, the yokels' drivers hooraying as they proceeded to pass us. I paid them no mind as I allowed myself a moment to reflect on how I had gotten to this point in my life. All due to nature.\n\nCold, impartial, nature.\n\nI was riding drag on a cattle drive as we entered Medicine Lodge, Kansas. Drag riding a cattle herd is a hellish task, and one not that befitted my seniority and expertise, but the rancher's son had allowed too many steers to get lost through his incompetence, so I was paying the price as I hustled through the dusty cloudy, trail, spitting out grit to keep my mouth wet as I maneuvered the recalcitrant beasts lagging.\n\nBy the time I got settled, all my co-workers had staked claims to the whores, saloon tables, and dining tables in just that order. I stood watching with little hope that anyone of the three pursuits would have an opening soon for me. As I continued to watch, I noticed a large group of the towns-people mingling and getting increasingly agitated. It didn't look like any of our bunch caused the problem, but then, you never could tell, so I moved my back to the wall and my hand resting on the butt of my pistol.\n\n\"Hey mister, do me a favor!\" The bartender motioned to me, \"Take these plates across the street to the jail and give the prisoners their meals.\"\n\n\"Why can't you do it?\" I asked.\n\nHe gave a hard grin, \"We caught a couple of hombres robbing the bank today, they killed some of our citizens and we had to catch them after we got up a posse. Now, we're deciding what to do with them.\"\n\nFrom his countenance, there was little doubt what was in store for the prisoners. I shrugged, took the plates and went across the street to the jail. I entered the bare one cell unguarded building and the two miserable men sitting on the dirt floor looked up to me.\n\n\"Got your meals here. Was I y'all, I'd hurry up and eat them,\" I said and handed the plates through the bars.\n\n\"Wait a minute!\" One of the two stood up, reached through the bars and gripped my arm in desperation. \"How would you like to have a thousand dollars? All you have to do is unlock this door.\"\n\n\"Friend,\" I replied, \"I do that and I'll be swinging alongside the both of you in just a few minutes. Besides, it doesn't look like you got a thousand dollars on you. Otherwise, why did you try robbing the bank?\"\n\nHe nervously licked his lips, \"My name is Henry Newton Brown, I'm the Sheriff over in Caldwell, Kansas. I used to ride with Billy the Kid as a Regulator in the Lincoln County War. Billy will pay you!\"\n\nI laughed.",
        "\"Well, Sheriff, you're in one helluva fix, cause I never seen anybody pay another person that kinda money on just somebody's say so.\"\n\n\"Wait, I got something else,\" he continued as I prepared to walk out. \"A month ago, we robbed the bank in Newton, Kansas. We had to hide the money because it was all gold coins and it was too heavy for our horses. We hadn't had an opportunity to ride back that way. That's why we tried robbing this bank.\n\nNow, I drew a map. Just let us out and the map is yours!\" He grasped a sheet of paper with some diagram on it.\n\nJust then a roar came from the gathering mob across the street. The noise was getting louder and closer.\n\nHenry Brown blanched as he dug out a letter from his coat pocket.\n\n\"This is a letter to my wife. Will you see that she gets it?\" he requested.\n\nWith that, he handed me the map and the letter. No sooner than I stepped away than the door burst open and the crowd mashed me against the wall as they vied to manhandle the prisoners.\n\n\"Going to hang you sorry bastards!\" the bartender crowed as the door swung open.\n\nAs soon as the door opened, Brown and the other prisoner rushed through the door and initially fought their way through the surprised crowd in a desperate bid to escape. The mob followed them and I straightened back up away from the wall when I heard the blast of shotguns firing and a cheer coming from outside.\n\nAs I walked outside the broken corpses of the prisoners in the muddy street were surrounded by the cheering mob as they quenched their bloodlust. They began propping the bodies on long planks so a photographer could make daguerreotypes with the bloodthirsty crowd. I walked unnoticed back to the saloon, waiting patiently for the bartender to return to serve me a drink.\n\nFinally, with drink in hand, I ambled over to the boss to collect my pay so I could get a meal, a bath and with any luck, entice a barmaid or whore to spend time with me.\n\nHis look soured as I sat down at the table. He barely glanced at his ledger on the table before he dug into his pocket and handed me a dollar bill.\n\n\"Must be some mistake, boss. You owe me five dollars.\" I looked at him puzzled.\n\n\"That was before you lost all those steers, Zeb. I got to dock you for that,\" he grumbled.\n\n\"You mean the steers your son lost. That wasn't my fault. You want to hold someone accountable, make sure it's the person that is responsible!\" I angrily replied.\n\n\"Nope, it is your fault, Zeb. That's my decision,\" he answered nervously.\n\nAs well, he should. People lost their lives for a lot less than an argument over four dollars these days. I noticed some of my co-workers paying attention ready to defend the boss if need be. Should I start a ruckus I would be shot down like a dog, like Sheriff Henry Brown.\n\nI looked back at the miserly son of a bitch that I hired on with. For a year, I worked, starved, sweated, bleed for this man and my value wasn't even worth four dollars to him.\n\nI relaxed my posture to show no threat, stood up and wordlessly walked away with my dollar bill.\n\nTwo days later, on the trail, I was awakened to take my shift guarding the herd at midnight. I saddled my horse and made a loop around the resting slumbering herd. Everything was well as I steered my horse away from the herd. By daybreak, I would be too many miles away for the crew to intercept me as I journeyed to Caldwell, Kansas, to deliver the letter to the widow of Sheriff Brown and then to Newton to see if the desperate lawman had told me the truth about his treasure.\n\nI studied the detailed instructions on the map and was pleasantly surprised by the existence of the saddlebags filled to the brim with golden $20 double eagles coins. Judging from the heft, I agreed with Sheriff Brown, the weight was too much for a horse to bear with a rider.\n\nI left the treasure where it was and went back to the community of Newton. I had five coins with me. Enough money to buy a pack mule and the rest to spend on a splurge like I never had before. Before I was through I'd drink the town dry and fuck every whore they had, or I would die trying.\n\nI had just settled in with a bottle of rye whiskey at Tuttle's Dance Hall in Hyde Park. An old friend, Jim Martin, greeted me and I invited him to share a drink. We were just getting caught up with our lives when a commotion started.\n\n\"This ain't good, Zeb,\" he warned. \"That gang of men have bad blood with that McCluskie fellow. He doesn't have any help at all except for that kid over there.\"\n\nHe nodded over at a thin boy, looking deathly ill cough up blood on his sleeve.\n\n\"You're right, Jim. That boy needs to see a doctor.\" I said.\n\n\"That's James Riley,\" Jim responded, \"A doctor won't do him any good. He's dying from consumption.\"\n\n\"Zeb, I better go see if I can quiet things down,\" Jim announced, and he got up to make his way over to the confrontation.\n\nBefore he got there, the group of men were tired of arguing, they pulled their guns and shot McCluskie before he had a chance to defend himself. They continued shooting him as he collapsed to the floor.\n\nThe stunned crowd went quiet as the room continued echoing the retorts of the gunshots. Acrid gunsmoke filled the air. My friend, Jim, looked helpless at the scene.\n\nWithout notice, James Riley walked to the door of the building, shut the door and locked it. With another blood-sprayed cough, attention went to him as he said, \"That was my friend, you sons of bitches!\" He drew two Colt Peacemakers and began firing indiscriminately into McCluskie's murderers.\n\nPanic and chaos ruled the scene as he emptied his guns. The men tried valiantly to battle back, but not a single bullet of theirs stopped the wrath of Riley. Yells and screams continued even after the firing stopped. Due to all the shots, visibility was nil.\n\nI was crouched underneath my table, above me, the overturned bottle of rye was pouring down my back. I had instinctively dived once the fracas started; if I was going to get hit by a stray bullet it was going to have to do its damndest to find me. I looked across the floor and saw my friend, Jim gasping with his dying breaths, blood spurting from his neck wound. He had been struck in the crossfire, dying while trying to do a good deed.\n\nJames Riley continued to look over this scene from Hell he had unleashed. Then, without a word, he unlocked the door, opened it and walked out into the night, mounted his horse and rode off, leaving behind the carnage of four dead souls and three wounded on the floor of Tuttle's Dance Hall.\n\nI slowly arose from the floor with my gun drawn. I wanted to show the shell-shocked victims that I posed no threat to them, but I wanted to be ready just in case. I went over to Jim, but I was too late, the light of life had already left his eyes.\n\nScreams for assistance and for medical help filled the air. It didn't really register with me as I grieved for a man I counted as a friend on the cattle drives. Then it struck me how little I even knew him. I had no idea where his family was, where he was from, or even where he wanted to go before he had been cut down.\n\nThen the epiphany came that my life was in a similar state of flux. Had I died there, Jim would be looking askance at my corpse. The only things I had in this harsh world were my pistols, my Henry repeater, my horse, and some gold coins to assure my coffin and burial in this God-forsaken town. The knowledge of my newly discovered treasure would be lost for eternity.\n\nMy first plan had been to burn through the money as quick as I could. I had estimated that I could live high on the hog for three to five years before I would have to get another job.\n\nBut what then? Go back and hire on for more cattle drives? Have my body, mind, and soul broken down that much more?\n\nJesus, I had the answer to change my life right before me! I could take the treasure and start a trade.... Better still, I could reinvest the treasure and make a quick profit and then settle down to a respectable job.\n\nWord came, even to the plains of Texas, of what the gold miners of California were paying for shovels and pickaxes. All I had to do was find a cheap source of goods, freight them to California, sell the goods for five times what I paid for them and I would start a bar or a mercantile store with the profits.\n\nMy thoughts were interrupted by a dour thin man dressed in black who walked up and stood beside me.\n\n\"Did you know the unfortunate soul?\" He asked. I knew immediately that his concern was more of a financial matter than a spiritual one from his oily demeanor.\n\n\"Yes,\" I replied, Jim Martin was his name, we rode together on some cattle drives. I want to see him in a good coffin and have a stone marker for his grave. See to it, that the preacher gives him a good send off.\"\n\nHis eyes gleamed as I dug out the gold coin to pay for the services and handed them to him. \"I'll be attending the service in the morning,\" I warned, \"You'll be burying him with his boots on.\"\n\nHe gulped, and nervously nodded his acknowledgement. I left to find a room. My desire to have a party had left and instead, I continued thinking of my new plan.\n\nThe next morning, I attended Jim's service. When it was over and I had paid my last respects, I went to the stable and bought a pack mule. I rode off with my caravan to pick up the gold and head east to St. Louis.\n\nIt took me two weeks to ride to St. Louis. As I rode into town, people took notice of me briefly before they went back and attended to their own affairs. The city had grown by leaps and bounds since the war. It had evolved to a thriving metropolis, one which I had anticipated would allow me to purchase goods cheaply, purchase two well-constructed wagons and the livestock for steerage, and hire a driver for the second wagon.\n\nI would then hire a freight car to ship everything to Independence, Missouri, the gateway to the Oregon Trail, my path to California. I would join a wagon train consisting of 500 wagons. Families secured by the safety found in the sheer numbers of fellow travelers as we headed westward, 500 vessels that held bright dreams and futures. I estimated that only one in five would reach journey's end.\n\nI rode up to the nearest stable, dismounted and stretched my stiffness away from the last leg of the journey. As I tied the reins of my horse and pack mule to the hitch, a child approached me.\n\nThe boy was roughly ten years of age, unkempt shaggy blonde hair had been quickly slicked down to be more presentable. His clothes had the dust briefly beaten away, but still, the accumulation of dirt and tears in the fabric showed the misfortune of the boy.\n\n\"Excuse me sir. A dollar to see to your horse and mule?\" The soft quiet politeness of his voice almost hid the desperation in his offer.\n\nA man came charging out of the stable. He roughly pushed the boy down to the ground and the child skidded in the dirt from the hard impact. \"Boy, how many times do I have to tell you to leave my customers be! Now git, before I put a knot in your head!\" the man threatened.\n\nThe malnourished boy winced as he stood up. His resignation to the painful assault proved to me this was an everyday occurrence for this child trying to survive in an unfeeling city. He began to walk away.\n\n\"Hold on, Mister,\" I angrily said. \"Me and this boy, had just started negotiating a business deal when you interrupted us. Now, I'm leaving my animals hitched to this rail while me and this young'un discuss the details over lunch. When we get back, I'll be renting a stall from you, but the boy will be tending to my animals. If you've got a problem with that, you best let me know right now. Because if I see or hear of you mistreating him, I'll do to you, what you did to him!\"\n\nThe promise of my retaliation quickly brought a nervous stuttering apology from the stableman. I decided to add insult to his injury by ignoring his profuse assurances, turned and retrieved the heavy gold-laden saddlebags off my mule, and walked away with the boy accompanying me.\n\n\"Well, boy, where's a good place to eat around here?\" I asked.\n\nThe child continued walking straight ahead and without looking at me responded, \"The saloon next block has decent food, but I am not allowed inside.\"\n\nI didn't bother asking him why he wouldn't be welcomed to the establishment. \"Let me worry about that,\" I told him as we went inside.\n\nSure enough, as we entered, the bartender bowed up at the sight of the child walking with me and then hesitated as I glared at him, daring him to refuse us entry.\n\nWe walked to the nearest open table and sat down. The saddlebags thudded on the floor as I gladly dropped the weight from my shoulder.\n\n\"Need to see a menu,\" I announced. A comely barmaid walked over and handed me a placard. It didn't take long for me to make up my mind.\n\n\"I'll have a steak, baked potato, dinner rolls and the coldest beer you've got.\" I told her as I handed the menu over to the boy across the table.\n\nHe looked tortured as he held on to the menu without even looking at it. He fumbled handing back the menu to the waitress. \"I...I'm afraid...that I lack the funds to join you for your meal,\" The boy looked miserable as he thought of his hunger so prominent with the unfulfilled promise of food so close by.\n\n\"Boy, I invited you to lunch to talk business, so I'll be picking up the tab.\"\n\nHis eyes grew large as he realized that his hunger pangs would soon be sated by a hot meal. I could tell he was awkwardly working himself up to giving me the commiserate amount of appreciative thanks when I deflected it away from him.\n\n\"Tell you what ma'am, just bring the child the biggest steak you've got, baked potato, rolls, and that demijohn of apple cider you've got there.\" I pointed to the bottle inscribed with its content.\n\n\"Now, boy, before we start talking, we gotta do some serious eating,\" I intoned, as I slathered up a hot dinner roll with butter and dipped it into a pool of honey. In seconds, the boy had matched my action and I soon called for another bowl of rolls for our table.\n\nDuring our meal, I soon became aware that the boy was sneaking food off the table and storing it surreptitiously inside his tattered shirt. Half his uneaten steak and the remaining half of his potato wrapped in his table napkin were followed by numerous rolls and a couple of apples from a fruit bowl on the table.\n\nI didn't feel that any good would come from shaming him by bringing it to attention. Finally, I pushed back from the table with a groan of pleasure at not having to eat my cooking after two weeks on the trail.\n\n\"Guess I need to introduce myself,\" I said, \"I'm Zebulon Russell, my friends call me Zeb. I'm here to see about buying some goods and taking them to sell in California. I expect to be here for about three to five days, depending on what I can negotiate. I suppose you can tell me the name of a decent hotel?\"\n\nThe boy nodded at my information as he finished his swallow of food. I had to pay attention to his soft quiet voice pronouncing words with an inherent Teutonic flavor.\n\n\"A pleasure to meet you, Herr Russell. I am Willi Kemmler. There is a hotel right behind this saloon that can serve your needs. I would be honored to attend to your horse and mule for the duration of your stay.\" He said.\n\n\"There's a $10 dollar gold piece for you to tend to my horse and feed him during my visit. I intend to sell the mule while I'm here, so you wouldn't have to care so much for it.\"\n\nWilli's eyes grew large with the pronouncement of the vast sum of money coming his way.\n\n\"I will look after both at all times, Sir,\" he assured me. \"They will want for nothing.\"\n\nWill the stableman give you any trouble?\" I asked.\n\n\"While I'm tending to your animals, he will not interfere,\" Willi shrugged.\n\nThat left open what the future held for Willi after I left town and the stableman could exact his punishment on the young boy. I paid for our meal, hefted my saddlebags, and watched with sadness as Willi carefully walked to not spill out any of the food snuck away in his shirt.\n\nAfter escorting me to the hotel, Willi walked back towards the stable. I notice a small, barefooted child in a grimy burlap dress running up to him. She looked to be five years old. Her hair was blonde and her features were like Willi's. Willi dug out one of the dinner rolls from his shirt and handed it to her.\n\nShe held it in both hands as she slowly nibbled away at the bread with the acquired practice of someone familiar with going hungry. The two continued to walk side by side until I lost them mingling in the crowded street.\n\nI walked up to the hotel's front desk, ignoring the smugness of the hotel manager casting me a disparaging look. Well to do patrons carefully walked around me, irritated that I presumed to belong among them.\n\n\"I'd like a room and a hot bath,\" I informed the manager.\n\n\"Are you sure you can afford our rates, sir?\" He sneered.\n\nI went through the pretense of 'accidently' opening the flap of one of the saddlebags I laid on the counter. The view of countless gold coins changed the manager's attitude in seconds as he stammered his welcome.\n\nI took the key from his hand and told him that while I took my bath, I needed my clothes laundered and a barber for a haircut and shave. I also required a tailor for a presentable business suit. He assured me that he would personally see to it.\n\nThat evening, dressed in my new suit, I walked back to the stable to check on my horse. The stableman was conspicuously absent as I went to the stall. I blinked at the difference in my horse's appearance.\n\nHis coat gleaned in the fading sunlight, combed and curried with intense pampering. His hooves were buffed to a brilliant finish, accenting his new horseshoes, his brushed tail lazily swishing away as he ate oats from a feedbag. The stall was clean, with new hay.\n\nI thought after a few days of this pampering my horse would never be the same. I looked at my mule and noticed that he too had received the same quality of care.\n\nSuddenly, Willi was by my side, quietly describing his attention to my livestock and the attending costs of the stall, feed, and farrier's expense for the new horseshoes. I had forgotten to compute those costs and I dug out another $10-dollar coin for Willi, which he finally accepted with much protest.\n\n\"I will be sleeping outside the stall tonight to make sure that nothing happens, Herr Russell!\" Willi informed me, as though the second coin required him to extend even more services for me.\n\n\"What about your home, Willi?\"\n\nHe looked down, unable to catch my eyes, and didn't speak.\n\n\"Your parents?\"\n\nAgain, he remained disturbingly silent during the unsettling pause.\n\n\"The little girl I saw you with this afternoon?\"\n\nHis head instinctively swiveled up and I followed his gaze. There across from the stable, in the shadows, safely hidden away from the abusive stableman's attention, sat the little street urchin. The debris of an apple core laid by her dirty feet as she looked worriedly that Willi would suddenly disappear and leave her alone in the world.\n\n\"Your sister?\" I prompted.\n\nAfter a moment, he softly responded, \"Ja, Gretchen.\"\n\n\"You and she were going to spend the night in the stall?\"\n\n\"The stableman chases us out if he catches us, but he won't do anything while I am employed by you.\" Willi answered.\n\nThe concerned frown on Willi's face told me that he was worried that I would forbid him spending the chilly night huddled with his little sister in the drafty rented stall.\n\n\"Willi, I want you to go get your sister and follow me to the hotel.\"\n\nWilli walked over to Gretchen and she stood and walked by his side as they followed behind me, having a conversation in German. While I couldn't understand their talk; I could catch the gist that appearing at the hotel would cause trouble.\n\nSure enough, on sight of the two children, the hotel manager roared for them to leave and they were close to bolting when I demanded, \"I need two cots or bedrolls in my room for these children. They will be staying with me. Get both a hot bath drawn, and send me a seamstress that can dress the girl and that tailor that made my outfit. And a cobbler to make them some shoes.\"",
        "The seamstress quickly sized Gretchen with her practiced eyes and informed me that she already had a dress of blue calico that would fit her. The tailor said he could have denim pants and a cotton shirt for Willi quickly.\n\nSoon, dressed in our new attire, Willi led the way to a German restaurant he recommended. Gretchen pulled off her shoes and socks as soon as we were seated. She spoke to Willi and Willi informed me that she was unused to shoes and that they hurt her feet.\n\nEven after the charity I had displayed to them, it was evident they were concerned that her action would be an insult to me. Instead, I placed my order and the children followed, likewise.\n\nThe table figuratively groaned from the weight of bratwurst and sauerkraut. The weight of their world temporarily lifted, the children soon began a running conversation that included smiles and laughter. Gretchen's sky-blue eyes accented her new dress as she appeared in angelic innocence. They both moaned ecstatically, \"Strudel!\" with the appearance of the dessert.\n\nWilli continued to translate and interpret for me so I could understand what Gretchen talked about. We staggered out from the restaurant, stuffed from eating, and made our way to our hotel room. Before I blew out the lantern, they both bade a goodnight to Herr Russell and I saw Gretchen clutching and caressing the unworn shoes to her chest.\n\nI woke in the morning and the children were gone, the cots made up and Gretchen's shoes were on top of her blanket. I dressed and went to the stable to find Willi already hard at work. Gretchen was feeding my horse an apple.\n\nI told them I would be gone for most of the day. I gave Willi some money for lunch and set off to find someone I could deal with.\n\nThe first manufacturer I visited listened to me and informed me of an incredible offer. Another individual had the same idea that I had and had commissioned two Conestoga wagonloads of shovel-heads, pickaxe-heads, hammerheads, saws, and other assorted tools.\n\nDue to not installing the wooden handles for the implements, more could be shipped and at a lesser cost. Unfortunately, the financing for the buyer didn't pan out, so he was stuck with two wagonloads of unsold merchandise sitting on a railcar scheduled for transportation to Independence, Missouri, all of which was hemorrhaging money from the manufacturer.\n\nI told the manufacturer that I could strike a deal, subject to an inspection. He rushed me to the rail yard, and I saw that the Conestoga wagons he had described were twice the size of a regular Conestoga. They were well built and already customized for the long trip. The tools were of good quality and matched the description given by the manufacturer.\n\nWe went back to his office and began negotiating. I even got a small discount due to paying cash on the barrelhead. We drew up the contract and signed it. It was with relief that I walked out without the saddlebags' weight, and still with working capital for expenditures.\n\nThe next stop was the stable yard. Willi was still tending to my horse, so I saw the stableman and asked him who owned the adjacent stockyard. He led me to a weasel-looking fellow. I informed him I was interested in buying a dozen oxen of good quality and selling a pack mule.\n\nHis eyes lit up as he led me to look at twelve prime creatures that could easily pull my wagons. We struck a deal and he said he would see to renting a cattle car for me and transporting the oxen to it. We shook hands on our deal, and I told him that I would pay him that evening after I got the remaining saddlebag out of the hotel's safe.\n\nAs Willi, Gretchen and I set off to go to supper, I explained to Willi the day's events. After I told him of the purchase of the livestock, he immediately got upset.\n\n\"Herr Russell, you are in trouble. The stockyard owner is notorious for selling his prize oxen and then delivering sick and lame oxen to the unsuspecting buyers in their place. They only find out when they unload the oxen at Independence. He has done that ten times that I know of.\"\n\nI was angry that I had been so easily taken in by a fraudulent scoundrel. \"Hasn't anyone come back to complain?\" I asked Willi.\n\n\"Ja, three time,\" Willi replied, \"All three times, the men were discovered in the streets with slit throats the next morning.\"\n\nI thought my predicament over. I could renege on the deal since no money had exchanged hands. I could find oxen at Independence, albeit at a higher price, and not near the quality. Still, I wanted these animals and I also wanted to teach the stockyard owner a lesson.\n\n\"Willi, suppose I go ahead with this deal. Is there any way you can think of that I would be assured of arriving in Independence with the oxen I legally purchased?\"\n\nWilli sat and weighed his response to my question.\n\n\"It could be done. It would have to be done carefully. They would be watching you, so you couldn't help on the switch. It would also be dangerous for whoever did the switch. They would investigate and they would discover who did it and make them pay.\" He calmly replied, looking to see whether I understood the consequences of his unspoken offer.\n\n\"Willi, have you ever thought of you and Gretchen going to California?\"\n\nThat evening, I went to finalize the deal for the oxen. When I drew out the detailed bill of sale for the oxen including exact descriptions of each animal, the owner almost balked before his greed took over and he signed my original copy.\n\nThere was no sign of Willi and Gretchen. The stall was empty, my mule already led away to its new home. My horse was already put up in a railcar for the train leaving for Independence at daybreak. I settled my bill at the hotel so I could leave quickly next morning.\n\nAs soon as the train slowly moved out of the station, I left my seat in the passenger car and went to the cattle car. Willi and Gretchen were already tending to the oxen as I entered. I looked and, sure enough, the animals I had contracted for were the ones in the car. I asked Willi how he had managed to smuggle out the correct oxen right under their noses.\n\n\"They load the oxen at midnight into the cars. The stockyard owner has his prize oxen taken into a different pen at the close of business and the sick animals into the prize oxen pen. The stable-yard man is too lazy to do the work himself, and hirelings transports the animals to the rail-yard. I waited till night and moved the prize oxen back into their regular pen and the lame oxen out. The hirelings weren't smart enough to notice the difference.\"\n\nI laughed at the simplicity of Willi's solution and congratulated him. I asked if he and Gretchen wanted to move to the passenger car. They discussed it in German and Willi informed me they would be staying with the oxen.\n\nWe arrived in Independence, and as soon as we began to disembark the oxen, the town marshal showed up with an irate well-dressed man waving a telegram.\n\n\"There they are, Marshal! Arrest the thieves!\" he yelled.\n\n\"Who are you calling a thief? I bought these oxen legally!\" I yelled back.\n\n\"You liar, this telegram sent from St. Louis this morning proves you stole these animals!\"\n\n\"Marshal, I've got a bill of sale for these animals with a detailed description of each one.\" I explained as I handed him the paper.\n\nHe carefully read the bill of sale, ignoring the protest of the man still waving the telegram. He studied each animal in detail matching each one to its description. Finally, he said, \"There ain't no proof these animals are stolen.\"\n\n\"What do you mean, Marshall! I've got this telegram!\" the man screamed.\n\n\"Lawyer Dobbs, that ain't no warrant and it ain't no writ, so I have no legal authority to confiscate these animals,\" the Marshal responded as he walked away from the screaming lawyer.\n\n\"Don't worry, Marshal. In 30 minutes, I'll have a writ of replevin filed at the Courthouse, as well as a warrant of arrest for these lying thieves!\" he yelled at the Marshal's back.\n\n\"Lawyer, when you come back with those papers, come back armed,\" I warned.\n\nMy statement startled him.\n\n\"What do you mean?\" he stammered.\n\n\"You called me a liar and a thief and I'll kill you for that if I ever see you again. You come back here, I'll presume you're armed and I'll shoot you on sight. So, ask yourself if they're paying you enough to die over it.\"\n\nThe man swallowed hard and ran after the Marshal. There was no sign of him thirty minutes later as we drove our wagons to the rendezvous point of the wagon train.\n\nWe pulled upstream from the bulk of the wagon train. I hadn't noticed before but Herman Kohrs had followed behind in my path along with several of his friends. I groaned, realizing my gruff behavior hadn't deterred the earnest Kohrs from befriending me.\n\nWilli had unyoked the oxen and Gretchen was leading them to water.\n\n\"Komm, damn hell beasts!\" she yelled as the untethered placid docile oxen obediently followed her command without fail. I winced once again, hearing her cursing the animals. Willi had explained that much of her English had derived from listening to the muleskinners' profanity at the nearby stockyard.\n\nI pulled out the stake poles for my make shift lean-to tent, drove them into the ground, pulled away the attached tarp to the wagon, connected the tarp to the stakes and our tent was already up.\n\nHerman Kohrs had studied my actions and stopped his family from pitching their tent. They soon had their tent up in similar fashion. Well, maybe he was capable of learning, after all, I thought as I prepared our campfire.\n\nAfter eating our rudimentary meal, one of the Kohrs' children shyly came over and asked if Willi and Gretchen wanted to come over to their wagon. Until that moment, every night, Willi and Gretchen had remained steadfast by my side, but I could see them watching the other children playing each evening by the campfires.\n\nI told them to go ahead and play if they wanted to. They hesitantly followed the child back to the Kohrs and began socializing with their children. As I watched them, I began getting out the bedrolls. I made my routine check of the livestock and the wagon train.\n\n\"Harlots, Jezebels, Whores of Babylon!\" screeched the fire and brimstone preacher, Jim Jeffers, addressing his tirade to a wagon that consisted of six unaccompanied females and a driver. Some were embarrassed by the attention drawn to them; one moderately attractive lady with a large nose stood with her hands on her hips and outright guffawed back at the minister, \"Hey Preacher Jeffers, bring me a dollar tonight and I'll show you what this whore can do for you!\"\n\nLaughter burst out among the small congregation drawn to the spectacle of drama, instead of faith. It only served to incite the man to new heights of invective ranting, \"Thou shalt not suffer a witch to live, says the Good Book,\" he thundered. The woman reposed, \"Let him without sin cast the first stone.... That leaves you high and dry, Preacher Jeffers!\"\n\nI soon grew tired of the farce, went back to my tent and laid on my bedroll. I stayed awake until I heard Willi and Gretchen preparing for bed. My accustomed four hours of sleep would pass soon and the remainder of the night, I would sit and stand vigil.\n\nI woke in the still of the night, concentrating on whether I had alerted to some peril. After a few minutes, I rose to take stock. Everything was quiet, our fire had died down, so I got up and checked on the livestock while my eyes were better suited for night vision. Everything was well, so I went back to the campfire and built up for breakfast.\n\nThe aroma woke Willi, and blinking awake, he began preparing for his tasks. Gretchen soon followed, stretching awake and smiling at me as I pulled the hot biscuits from the skillet into my hands, which caused me to flip them from hand to hand due to their heat causing me pain, until I dropped them on the plate. I tried to softly curse which caused Gretchen to chuckle.\n\n\"Good morning,\" the soft melodious voice said. I swiveled, irate and discombobulated, being caught by surprise. Standing behind me was one of the ladies that was the focus of last night's drama. I rose from my kneeling stance and faced her.\n\nTall, with red hair that draped over her shoulders, blue eyes that sparkled from the light of the campfire, high cheekbones that drew attention to her eyes, her alabaster skin accented her hair even more. Cupid lips, so naturally red that you were mistaken to think that lipstick was applied and could keep a man staring at them for hours. I strained not to openly ogle her exquisite figure; her tits, large and full, how her torso narrowed to her waist and then broadened to her hips. She was dressed in a white blouse and a full-length skirt that concealed all, and yet, promised everything.\n\nThe quizzical look on my face must have been a surprise to her.\n\n\"Oh, I'm sorry... I thought Gretchen would have told you... She invited me to breakfast... I didn't realize I was intruding... I'll just leave,\" declared the flustered woman.\n\nShe started to turn and walk away. Gretchen looked at me with a look that said, fix this! \"Ma'am,\" I said, \"Please, excuse me, would you like to stay and eat with us?\"\n\n\"Are you sure it won't be any trouble?\" she asked.\n\n\"Not at all,\" I said as I started putting more rashers of bacon on the skillet. I went to the wagon and drew out a never used plate and cup for our visitor. Our guest took my spot by the fire and forked the crisp bacon off the skillet.\n\nI poured her a cup of coffee, she thanked me and held it in both hands while she blew to cool the hot coffee.\n\nThere was a slight awkward pause between us.\n\n\"I'm Zebulon Russell,\" I announced to break the silence.\n\n\"Nice to meet you, Mr. Russell. I'm Megan Kelley.\"\n\nGretchen turned to Willi and said something in German.\n\nWithout hesitation, the woman turned to Gretchen and answered her in rapid fire German. She spoke at length, and finally Gretchen turned her face down in a sad look.\n\n\"I'm sorry, I didn't realize that you didn't speak German. Gretchen told me last night that the invitation came from you. Had I realized that you were not aware of it, I would have turned it down. Please forgive my intrusion, Mr. Russell.\"\n\n\"That's all right, Miss Kelley. In the short time I've known Gretchen, I've come to realize that she doesn't let much stand in her way,\" I joshed. \"I'm surprised that an Irishwoman would speak fluent German.\"\n\nShe laughed, \"My mother is from Hannover, I grew up with her speaking it.\"\n\nWe continued to talk and eat. When we were finished, I was surprised that the entire camp was active. I had remained focused on our conversation and hadn't paid attention to Willi and Gretchen preparing for our departure.\n\nShe stood up and awkwardly motioned behind her, \"I guess I better return to my camp. Thank you for breakfast, Mr. Russell, and again, I'm sorry to intrude on your hospitality.\" She held her hand out towards me.\n\n\"Not at all, Miss Kelley. Glad to have made your acquaintance, and please call me Zeb.\" I took her gentle hand and felt the warmth of her grip. I held it a moment too long and we were both awkwardly flustered as we broke contact. As she walked towards her wagon, pausing to ruffle the hair of Gretchen, I continued staring at her. When I looked away, I saw Gretchen smiling at me. That day's drive passed quickly as I continued to focus on little details about Megan Kelley.\n\nSuch as when she laughed, she brushed an errant tress of hair behind her ear. Her eyebrows would rise while she focused on listening to me. When she spoke of herself, she would cast her eyes down in humility. When she spoke to Willi and Gretchen, her entire demeanor was animated from enjoying their company.\n\nAs we set camp that evening, I found myself looking for Megan Kelley, and I was sourly disappointed not to find her. Gretchen just smiled at me as she prepared to lead the oxen to water. \"Stupid whore bitches, follow!\" she commanded, promptly leading off, her loyal troops obediently following her.\n\nOnce again, after supper, Willi and Gretchen went to play with their new friends. Soon Gretchen came back, took me by the hand and bade me to follow her. While walking through the camp, hand in hand, I had the incongruous thought that I was no better than one of Gretchen's animals.\n\nShe frowned and shuddered as we passed by Preacher Jeffer's wagon as he forecast everlasting torment to everyone. We continued walking until we arrived in front of Megan's wagon.\n\nFour of the women, including Megan, were sitting before the campfire enjoying their meal. Gretchen broke from me and ran to Megan, who stood up and swooped Megan into a hug. Gretchen squealed as Megan laughed and swung her around before setting her down.\n\nThe attractive woman with the large nose who taunted Preacher Jeffers last evening stood up and said, \"Well, Megan said you were a tall cool drink of water! If she didn't have designs on you, I'd take you into the wagon at no charge!\" She laughed as she saw how it flustered me and Megan.\n\n\"Hush, Kate,\" barked Megan, \"That's no way to talk in front of a guest and a child!\"\n\n\"You're right, Megan. I'm sorry, mister. I meant no offense. My name is Katherine Horony, I'm headed to Arizona to marry a dentist, and I guess you know what I do for a living. Megan is my friend and I want to tell you she ain't involved in the trade, so treat her nicely or you'll answer to me!\"\n\nA man appeared from behind the wagon, \"Mister, it'll cost you a dollar to visit with Kate,\" he warned.\n\n\"Relax, Mike, he's just here to visit Megan.\" Kate told him.\n\nMike scowled, \"Ain't no time for visitors; it's bad enough that only you, Kate, are attending to customers this trip. Can't believe that I agreed to take five women West that refused to work for me!\"\n\nI scowled back at Kate's pimp, and I was ready to have words with him when Megan took my arm and led me away with a concerned look on her face. We walked back to my camp. An unsettling silence hovered as Gretchen left us.\n\n\"...Guess I should tell you how I came to be traveling with Kate and the others.\" Megan started.\n\n\"Yeah, I'd like to hear that,\" I agreed.\n\n\"My stepfather paid for my conveyance. I hadn't met any of the others and had no idea about Kate's profession or about Mike. Now, I'm stuck with them because all the others on the wagon train calls us 'kept' women and won't have anything to do with us except for the men creeping in late at night to visit Kate. I want you to know, and it's important to me that you believe me, Zeb.\"\n\nMegan placed the palm of her right hand on my chest. If she wasn't careful, she'd feel my heartbeat racing away from me.\n\nI covered her hand against me.\n\n\"I believe you, Megan. It doesn't matter that others think that ya'll are 'kept' women. What matters is that you don't let folks like Preacher Jeffers upset you. You have any problems with anybody thinking you're a kept woman, you come see me about them.\"\n\nShe smiled at me, I began to lean towards her and her posture shifted to welcome my approach to a kiss.\n\nWhich glorious moment was utterly spoiled by Gretchen running up, grabbing Megan's hand and speaking in rapid German to follow her as she tugged her away from me. Megan looked back at me with a smile of rueful regret as she was led away.\n\nThe next morning Megan appeared for breakfast, and we all lapsed into a comfortable talk until it was time to leave. She looked at Gretchen pulling a thorn out of her foot as we prepared for the day's journey.\n\n\"Doesn't that child have shoes?\" She looked at me in disapproval.\n\n\"I bought her some in St, Louis,\" I protested, \"She said they hurt her feet, but I think she doesn't want to get them dirty.\"\n\n\"Well, it's too bad you can't find her some comfortable shoes somewhere in this prairie.\" Megan said wistfully at Gretchen.\n\nThat evening I took my saddle horse for a long overdue ride. We went upstream from the camp and I pulled my Henry repeater out of the scabbard on the saddle. I only waited a short time for a large whitetail deer to appear out of the thicket to graze at the river.",
        "The 44-caliber slug killed it instantly. I loaded the carcass on the horse, took the reins and walked the horse back into camp. It served as an attraction to all the young boys following me and peppering me with questions as I dressed out the deer.\n\n---\"Are you a pistoleer, mister?\"\n\n---\"Can I see your guns?\"\n\n---\"Is that a real Bowie knife?\"\n\nThey looked in fascination as I prepared the hide for tanning, sheering the hide with the razor-sharp knife crafted long ago by James Black of Washington, Arkansas.\n\nI sent Willi to Herman Kohrs' wagon with a ham from the freshly killed deer to trade for some milk from their cow so I could marinade the venison. I sent Gretchen with an invitation to Megan and Kate to join us for supper.\n\nThey arrived as I was pulling the steaks off the fire, bearing the gift of a large can of peaches. I was pleased to hear both women praising my cooking as we speared out the peaches during dessert. Willi and Gretchen took turns slurping the syrup out of the can.\n\n\"Zeb Russell, if you pleasure a woman half as good as you cook, then I'm proposing right now!\" Kate declared.\n\nThen she turned to Megan, \"Don't worry, honey, I'm not poaching your man; leastwise, not until you throw him away!\"\n\nKate turned to me with kind tears in her eyes, \"Thank you, Zeb for your invitation. You don't know what it means to a woman with a reputation of being kept...Well, I guess I better be heading back. Mike gets antsy when I'm not making money. God knows what he thinks he's going to spend it on out here,\" she griped.\n\nAs I strapped the deer hide to the ribs of the Conestoga wagon's cover to cure, I watched Megan produce a tortoise shell comb, sit Gretchen in her lap and began brushing her hair. Gretchen snuggled happily in her lap as Megan sang a soft Celtic song. The domesticity struck me as I looked from my vantage point.\n\nWilli was smiling as he re-spliced a rope needed to lash the water barrel securely to the wagon. Gretchen got out of Megan's lap, took the comb from Megan and began combing and fussing over Megan's hair as she sat still at the fire with a beatific smile.\n\nI realized I wanted this. I wanted this more than I wanted riches. I wanted the love of a good woman and family. I wanted to enjoy each day in their company. I wanted to hold and kiss this beautiful Irish lass. I wanted to feel and taste her as my hands caressed her. My cock, always hardened at Megan's appearance, strove to more painful stiffness and I knew my relief would be to sneak in the woods late at night and jerk off as I fantasized about Megan.\n\nI climbed into my bedroll that night and saw that Gretchen was still awake. In the quiet dark, I heard her soft whisper, \"Mutter.\" It didn't take much to realize what that translated to in English.\n\nFor the next two weeks, we were in a blissful pattern. Megan would appear for breakfast. She would cook while Willi and I attended to the wagons and Gretchen to the oxen. During the evening, she would come back, sometimes with Kate and spend the evening with us. She would leave with a goodnight kiss to Gretchen and Willi. She would drop her face when she saw me staring at her. She knew I wanted a kiss as well. They would watch her depart, as would I. We would all be a little sadder at her being gone.\n\nThe next evening, Gretchen sat in Megan's lap for their now accustomed grooming session. I walked over with the cured deer hide, placed the hide on the ground, and held Gretchen's feet on it. I then carefully traced her feet with my sharp knife cutting through the hide with ease.\n\nWithout permission, I unbuckled Megan's shoes and pulled them off her feet. The unanticipated treasure of seeing her dainty bare feet wanted me to seize the moment and undress her.\n\nI barely heard her shocked protests and was intent on ignoring them as I fought the temptation to move my hand up her calf, to her thigh, to her... I shook myself to focus to the task at hand and traced her feet on the hide with my knife.\n\nI went to a neutral corner as Megan grumbled while she re-buckled her shoes and went back to attending to Gretchen. As the evening wound to a close, Megan was saying her farewells to the kids. She glared at me as I approached, still unforgiven for my unpermitted touch.\n\nI held out the two pairs of moccasins, one for Gretchen and the other for Megan. Megan's eyes lit in surprise. Gretchen squealed as she took them from me, put them on and began running around in delight.\n\nMegan walked to my side, my trespass against her forgiven as she watched Gretchen prancing about.\n\n\"Zeb, look how happy she is!\" Megan's arm came around my back as she held on to me. She looked up at me and gazed into my eyes. I pulled her into me and her lips parted preemptory.\n\n\"She's welcomed. She's very welcomed.\" I said as I kissed her. The touch and taste of her lips were exactly as I imagined. A taste of heaven.\n\nI moved harder and deeper to her as the flames of my passion ignited. We kissed again and again as she firmly clenched me. When we broke for air, we were surprised by Willi and Gretchen grinning ear to ear. We reluctantly separated and said goodnight to each other.\n\nAs Megan left she went to Gretchen and asked for Gretchen's moccasins. Gretchen complied, even though under protest, and Megan left with them.\n\nI looked at the beaming couple of kids and said good naturedly at them, \"Shut up,\" as I handed Willi his pair of moccasins. That night in the still darkness, I heard Gretchen whisper, \"Vater und Mutter.\" That didn't need translation, either.\n\nBreakfast came and we all waited for Megan. She walked in wearing her moccasins. She held Gretchen's out to her and the child gasped. Colorful beadwork adorned them in a pattern reminiscent to how Comanche women dressed theirs. Megan's were done in the same pattern. Megan had spent the entire night preparing Gretchen's gift.\n\nGretchen gave a yell that likely woke the entire camp. She scrambled to put them on and then put her foot side by side to Megan's. She said, \"Thank you, Mutter!\" and then impulsively kissed her. Megan choked up at hearing Gretchen calling her mother.\n\nGretchen ran to her oxen and stuck her foot out and pointed at her moccasin. \"Look, bastard ochsen!\" she demanded. The oxen obediently moved around her and lowered their great heads to admire Gretchen's footwear.\n\nMegan and I stood watching Gretchen interact with the oxen. They soon walked off following Gretchen, marching them to the creek calling them goddamn fool-beasts.\n\n\"She thinks they are her pets!\" Megan said in wonder.\n\n\"They think they are her pets!\" I replied as I watched Megan. \"I'm glad you like the moccasins.\"\n\n\"Yes, they are so comfortable!\"\n\n\"Maybe you'll be wearing them when we get to California and I sell my goods and start my store. After that, I intend to see you wearing a band of gold I'll give you.\"\n\nWell there it was. I wasn't suited for high-falutin honey talk. I fumbled out my proposal out as quick as I could. Then I waited. Each heartbeat was an eternity.\n\nMegan blanched and looked away worried,\n\n\"I...I...I have to leave!\" she weakly stammered and quickly walked, then broke into a run away from me. That night, Megan didn't show at my wagon.\n\nI was in a foul mood the next morning. Megan failed to show at breakfast and the kids were tentatively around me. They quickly went to their daily tasks as I put away the camping gear I used to cook a breakfast that tasted like ashes to me.\n\nHerman Kohrs walked up to me. During the past few weeks, I had warmed up to him and others as Megan worked a miracle on me. Now, I sourly waited to see what he had in store for me.\n\n\"I have to talk to you, Herr Russell. It is about the wagon of kept women on this wagon train. You know that all are headed west to be married.\" He spoke it like a question.\n\n\"Yes,\" I bitterly answered, \"I just had my teeth kicked in last night proposing to one.\"\n\nKohrs winced, \"Ja, the beautiful one. Everyone watched the two of you for weeks wondering what would happen once you found out.\"\n\n\"Find out what, Kohrs!\" I sniped at the scared man.\n\nYou mean you don't know? The girl... she is already married!\"\n\nThe shock stunned me. I staggered back to lean on my wagon for support. My eyes teared up in pain and sorrow.\n\n\"She married before setting off on the wagon train. She married a Mormon businessman and is going to Utah to be with her husband. He has two other wives to do all the housework. The girl is supposed to be just his bed partner.\"\n\nKohrs continued to rattle on about the prosperous lecherous sixty-year-old man marrying Megan by proxy while she still lived with her mother in Chicago. The husband deemed that he couldn't waste the time to go to Illinois, so a ceremony in absentia was performed. Then Megan was ordered to Missouri to join the wagon train to take her to her husband.\n\nTo this day, I don't recall anything about that day's journey. The fog of shock shut down my system. I remember crawling directly into my bedroll without even preparing supper. Willi and Gretchen looked worried about me. Late that night, I heard a whisper that woke me.\n\n\"Zeb?\" Megan whispered again standing outside my tent. She had to know I was awake from the break in my breathing pattern. I remained still and silent. A few minutes I heard her sob and walk away. Then I heard Gretchen crying from her bedroll. I stayed awake the rest of the night.\n\nAt morning, I resolved to put it behind me, but the listless attitude pervaded in all three of us as we muddled through the day. That evening we had a guest.\n\n\"I need to talk to you, Zeb,\" said a concerned Kate. We walked to the outskirts of the camp.\n\n\"Meagan is heartbroken, she is crying all the time, and she isn't eating.\"\n\n\"Not my problem, Kate. You need to talk to her husband.\" I lashed out.\n\n\"Why, you stupid sonuvabitch!\" Kate roared. \"That girl loves you! I suspect she fell in love you the first time she saw you. All day long she kept talking about that good-looking man with the two kids.\n\nShe never told you why she had to marry. Her father had a partner. When he died, her mother married the partner. Well, stepfather ran the business into the ground and was facing bankruptcy.\n\nStepfather was friends with a Mormon businessman named Lee Young. He had sent a bunch of letters over the year extolling Megan's beauty to Mr. Young. When the stepfather got in trouble, Young told him he'd payoff the business debts as a dowry in exchange for Megan. She was pressured to go through that ceremony. She doesn't love that man! Hell, she never met him!\"\n\n\"Dammit, Kate! Why didn't Megan say something at the beginning! Why did she wait so long for me to find out?\" I grasped Kate by the arm.\n\n\"I don't know, Zeb. I just know that it isn't too late. All you should do is go talk to her! She loves you!\" Kate said with an effort to calm both of us down. \"You can fix this, Zeb!\" Kate turned to go back to her wagon.\n\n\"Kate,\" I called to her back and she turned to face me. \"Megan isn't the only one heartbroken.\" Kate nodded her understanding of my hurt as she left.\n\nThe next evening I sought Megan out. When I approached her at her wagon, she tensed up. I said, \"Can we talk?\" She briefly nodded and walked with me out of earshot of everyone but still in Kate's view. We stood looking at each other and then glancing away. Both of us were too afraid to start the conversation.\n\nI finally gave in. \"Do I call you Megan or Mrs. Young?\" Kate reacted as though I had hit her with a hammer. She gulped air as she contemplated her response.\n\n\"Zeb, I never meant to hurt you,\" she started, \"Being around you and the children have been the happiest days of my life. You don't know how I dreamed for your proposal and then woke up to the nightmare of my reality when you actually proposed.\"\n\nShe hesitated and saw I wasn't ready to speak.\n\n\"I grew up in a well to do family, Zeb. My father spoiled all his children and he told us that we would never want for money. But, then he died and my mother married his partner and all the money slipped away under his stewardship. We weren't told anything until he said that he would be forced into bankruptcy unless I agreed to marry a man I never met.\n\nThe family pressured me to accept the proposal, so I signed some documents, there was a ceremony and I was told I was Lee Young's wife. I would catch a steamship to St. Louis and then to a wagon train departing from Independence, Missouri.\"\n\nI interrupted, \"But why didn't you tell me from the start, Megan? Why did you let me go on thinking that you were single and available?\"\n\n\"I was scared and alone, Zeb. Everyone was looking at me, and whispering under their breath that I was a kept woman. Kate was the only friend I could talk to. And then Gretchen extended her invitation and I was suddenly around people that liked me and I didn't want that to stop, so I kept up my pretense. It was better for me to have the fantasy that I could have a life with you!\"\n\nKate closed her eyes and her lips grimaced as she relived her anguish of the past few days. I wanted so bad to hold and comfort her.\n\n\"So, what now Kate? Will you divorce him and marry me? You know I love you and that I'd be good to you.\"\n\nKate began crying and still refused to look at me.\n\nIn desperation, I said, \"Kate, you don't belong with a man that has two other wives, a man too old to give you the children or a family of your own.\" I insisted. \"Why, Kate, why in God's name would you willingly go to him?\"\n\nShe finally looked at me with tears flowing down her face and said, \"Because, if I don't Zeb, my little sister will be forced to take my place.\"\n\nI stumbled away from Megan, tormented with the hellish bargain she was forced to keep to protect her sister. I looked for a resolution and couldn't find one. The closest I came up with was abandoning my wagons, riding to Salt Lake City and killing the bastard in cold blood.\n\nThen, I would be lynched, Willi and Gretchen would be all alone in the middle of the wilderness. My wagons would be looted, and Megan would simply become another Mormon's trophy when she was delivered to Salt Lake City. I would have to look for another solution.\n\nAs I headed out the next morning, I became concerned with some particularly rugged terrain. I told Willi to stop his wagon, I saddled my horse and scouted around for an easier path.\n\nAs I scouted, the wagon train caught up with my wagons. Cutler insisted on the train going forward despite Willi warning him of my concerns. By the time I got back, the first twenty wagons through the trail had broken every wheel off. I told the people of my discovery and they detoured around.\n\nDespite facing an irate crowd, Cutler was insistent on moving forward and abandoning the wagons and their families. Now the entire camp was in open revolt and the upshot was the camp voted to stay in place for one week to allow repairs to all the busted wheels, and Cutler was kicked out and my old friend, Herman Kohrs took his place. Cutler was furious at his demotion.\n\nThat afternoon, faced with the down time, I took Willi down to the river and stripped some tree branches to make fishing poles. We sat there, silently glad to decompress from the stress of the past week. Slowly our catch was becoming sufficient for a scrumptious meal of trout.\n\nWilli asked, \"Do you want to invite Megan?\" as a bridge for a topic we had been avoiding.\n\n\"If you and Gretchen like, then by all means. You know I'd never stop you from seeing her.\" I replied. \"In fact, I know how close you and Gretchen feel about her.\n\nMegan loves you both and would do anything in the world for the two of you. In fact, there may come a time when y'all would prefer to be with her. If that happens, I just want to let you know that all I ever wanted was what was best for you and Gretchen.\"\n\nWilli nodded, \"Frau Megan has told us the same thing. Gretchen and I talked about this. We wish there was some way that we could stay with both of you. But if Frau Megan decides to leave the wagon train for Utah, I must come up with a decision for what to do for me and Gretchen....\n\nI cannot risk Gretchen's future to the whims of an old stranger if we appear with Frau Megan in Utah without notice. He might decide to kick us out to live on the streets again. We decided to stay with you. Gretchen is telling her of our decision as we speak.\"\n\nI patted Willi's shoulders to acknowledge that I knew how tough it was to weigh such a heavy decision on kids his and Gretchen's age. We got up and walked back to the camp.\n\nA stranger was peering in the back of my wagon. I handed Willi the string of trout and approached the back of the man. I gripped the butt of my pistol.\n\n\"Want to tell me what the hell you're doing mister?\" I warned.\n\nThe man swung around and gave me an oily smile that didn't help the mercenary look in his eyes. I thought for a second he intended to draw his gun but he saw I had the advantage of clearing my holster before he could. He carefully kept his hand away from his holster.\n\n\"Just curious to see what you got there, friend,\" he said in a cheesy voice.\n\n\"You ain't my friend. Get away from my wagon, now.\" I commanded.\n\nHe chuckled as he retreated, never turning his back to me. I had a bad feeling about him.\n\nA poker game started that evening. The stranger had drifted into camp while we were fishing and had explored the surroundings. He announced that he was Michael O' Rourke and he would be dealing the game right after supper. He kept pulling out bottles of whiskey and plying and encouraging the players to drink.\n\nOne by one, he busted players and another took a seat in the game. O'Rourke kept running a patter of jokes and taunts that served to agitate the poor pioneers pitted against him.\n\nWild bets by flushed drunk novices filled the stakes as O'Rourke continued to fleece his sheep. He would laugh when a man got up after losing his life's earnings and stumbled stunned back to his crying family.\n\nThe final participants as midnight approached wound up being a drunk ranting Mike the Pimp, and William Cutler. Mike the Pimp's stakes dwindled away as he cursed his luck.\n\nO'Rourke kept teasing him about what was he going to bet when he ran out of money. Mike told him that he had a whore that he could wager. O'Rourke cast his eyes on a frowning Kate and shook his head.\n\n\"Don't rightly care for that one,\" O'Rourke said, \"Now, you want to throw in that redhead then we might be able to work something out.\"\n\nMike swore, but a light came into the desperate man's eyes and I knew he was falling prey to O'Rourke's suggestion. Kate and Megan both started yelling sharp objections.\n\nMike stood, fists clenched, \"Shut the fuck up! I know what I'm doing!\" He screamed at Megan and Kate as O'Rourke chortled while he swept in another victorious jackpot.\n\nI knew it was time I sat down at the table.\n\n\"Ohh! New blood at the table!\" O'Rourke taunted as he shuffled the cards. \"Sorry, you waited so late. This is going to be the last hand of the night.\" He announced as he dealt the cards in a hand of five cards draw.\n\nI looked at the three kings I was dealt as Mike happily opened the bid for $50 dollars. William Cutler called and raised the bet for another $50. I called, and O'Rourke made a big production of studying his cards. Finally, he said, \"I call and raise a thousand.\" He pushed the money into the waiting pot.\n\n\"A thousand!\" screamed Mike, \"I ain't got that kind of money!\"\n\n\"Well, friend you better find something to sweeten the pot!\" O'Rourke continued to stare at Megan.\n\n\"Okay, you got a deal. One night with the girl!\" Mike said.\n\nKate and Megan huddled together screaming their protests. The rest of the camp was dead silent as the drama continued to unfold.\n\n\"One night!\" O'Rourke sneered, \"You think that pussy is gold plated? Nope, if you're betting her, you're betting her for keeps! That means I keep her. When I leave, she leaves with me!\"",
        "Mike didn't hesitate as he jumped up, grabbed Megan by the wrist and started dragging her despite her objections. Kate started beating Mike on the back trying to get him to let Megan go. He turned and punched her in the face. Blood was pouring from Kate's nose as she went down on her hands and knees, stunned by the blow.\n\nMegan was roused, Mike slapped her face and Megan collapsed to the ground.\n\n\"I see your thousand!\" Mike triumphantly crowed as he sat back down at the table.\n\nCutler desperately looked around asking people to loan him the money for the bet. He insisted that he held the winning hand. Either nobody had the money, or, more likely, wasn't inclined to loan him the money. Finally, he folded his hand in disgust.\n\nO'Rourke looked at me and smiled in anticipation.\n\nI surprised him when I drew out the last of my gold coins and called his bet.\n\n\"That's interesting,\" he said, \"I was figuring you'd bet your wagons,\" he said as he asked for cards. Mike told him, he'd play his original hand. I asked for two cards and threw my discards away. I didn't bother looking to see what I was dealt. O'Rourke took three cards as I carefully watched him.\n\n\"I'm the last bettor, so I'll raise another thousand!\" O'Rourke announced with glee.\n\nNow, Mike the Pimp joined Cutler as he begged and pleaded for money, offering Kate for free sex for the rest of the trip. Nothing would entice the crowd to help the pimp. Facing the inevitable, he folded and collapsed in his chair.\n\nEveryone looked at me.\n\n\"Tell you what friend, I'll accept your wagons for a bet!\" \"O'Rourke declared.\n\n\"They're worth ten times that much,\" I quietly stated.\n\n\"Maybe so,\" he replied, \"but that's all I'll accept for your bet.\" He smugly stared down at me.\n\nI paused as though weighing his offer.\n\n\"I call and raise you a bullet,\" I said, and I drew my Colt Navy pistol out of the holster and placed it on the table.\n\nA collective gasp went through the audience as though a current of electricity had shot through them. Excited murmurs rose and they edged away from the table in case trouble arose.\n\n\"What do you mean you raise a bullet?\" O'Rourke looked over at me with a frown. Both his hands were on top of the table to show that he wasn't visibly threatening me.\n\n\"Just that, a bullet.\" I replied. \"You see, I finally recognized you. I've ran across you in a dozen Texas and Kansas cow towns. I never gambled against you so you'd have no cause to remember me, but, I've watched you cheat at cards in every gambling joint you've played in.\n\nBack then you weren't called Michael O'Rourke. They called you 'Johnny-Behind-The-Deuce', a gambler mean as a rattler and just as lightning-lethal. I've watched you do the same thing you've just done here. You cheated so obviously that you wanted someone to accuse you so you could kill them.\n\nYou must have killed ten men playing the same type of hand. You'd deal one fella like Mike here four jacks, then another fellow like Cutler here four queens, then another fella like me four kings. Then you'd bottom deal yourself four aces.\"\n\nI let the realization sink into O'Rourke that I was on to him.\n\n\"See, I haven't even looked at my cards but I know you dealt me that fourth king so I'd go chasing after the pot and lose my wagons to your four aces, Johnny. And it's pretty evident that Mike and Cutler had to fold their hands from the upset reactions they're showing after I described what you did.\"\n\nIndeed, the agitation of both drunken men would have been interesting to watch had it not been that I had to continue focusing everything against O'Rourke. I could tell he was livid at being found out. He was going to try to kill me any second now.\n\nHis eyes glared into mine as he said, \"So what's to stop me from killing you? You've accused me of cheating. After all, you've placed your gun on the table. All I've got to do is draw and shot before you reach for your gun!\" He sneered.\n\n\"Johnny, you didn't know about my ace in the hole. While you've got both your hands on the table, I've got my second pistol drawn and hammer cocked under the table aimed right at your belly.\"\n\nO'Rourke blanched as he realized my left hand had remained hidden the entire time we've been talking. There wouldn't be any way he could stand and draw before I had fired a couple of shots into him at point-blank range.\n\n\"Those .36 caliber slugs would tear into your liver before you've had a chance, Johnny. That's an awful way to die. Slowly bleeding and in pain while you screamed for relief.\"\n\nI shook my head to accent that he didn't want to go up against an unwinnable situation.\n\n\"Now, there's two ways this could end,\" I announced. \"One, you call my bet and I'll have Mike turn over his four jacks, then, Cutler will turn over his four queens, then, I'll turn over my four kings, and then you'll turn over your four aces. When that happens, I'll kill you for being a card cheat.\"\n\nI allowed a couple of minutes to pass as O'Rourke shook in fear. Sweat poured down his face as he struggled to find a way out of his predicament. He didn't want to die today.\n\n\"You said there was another way.\" O'Rourke broke the silence as he desperately looked for a way out.\n\n\"Why, Johnny all you've got to do is fold your hand because you've been bluffing all along. You really don't have those four aces. You lose this hand, you get up and ride out of camp and you don't look back, Johnny.\" I warned.\n\nHalf a minute passed and he finally threw his hand in conceding defeat.\n\n\"When you get up, Johnny, I want you to be real slow. I want you to turn around facing away from me. Then draw your gun out of the holster with two fingers. Just drop it on the ground, Johnny, and leave it there. I'll have Willi bring your horse here and you can go without saying goodbye to anyone.\"\n\nThe camp cheered as he rode out in the night. Mike moved towards the jackpot.\n\n\"What do you think you're doing, Mike?\" I moved my hand to block his way to the money.\n\n\"He cheated. You proved he cheated, so I'm getting my money back,\" he declared.\n\n\"No Mike, I didn't prove he cheated. He folded his hand just like you did right before he did. All I proved was he bluffed. And, Mike, my hand still beats yours so I'm collecting all the stakes.\"\n\nI looked intently at Megan as it dawned on her what I was saying. I scooped up all the money and gripped Megan's arm as I led her away. Mike continued to protest and threatened me. I turned back to face him.\n\n \"If you've got a problem with that, well, my pistol is still out on the table anytime you want to try me, Mike.\"\n\nThe very second, we got inside my tent, Megan turned and slapped the shit out of me. I grabbed her biceps and shouted, \"What the hell did you do that for?\"\n\nShe looked furious as she said, \"You think you've won me and now you can do whatever you like to me?\"\n\n\"In case you've forgot, the man driving your wagon just put you up for a bet and punched your friend in the face! Do you really think I'll let you go back to that?\" I bitterly spat.\n\n\"No, I've won you and I'm going to keep you! Keep you here, so you'll be safe. Keep you, so Willi and Gretchen won't worry about you, and you're going to earn your keep! You'll be responsible for the meals from now on. You're going to be responsible for those kids. When we start back on the trail, you'll be driving the second wagon, instead of Willi. And Gretchen will be sitting beside you instead of running 10 miles cursing those damn oxen every day!\n\nAnd by God, do something about her language! I'm tired of hearing her cursing like a drunken sailor! Do you understand me, Mrs. Young?\" I hissed.\n\nI stormed out of the tent and literally bumped into Willi and Gretchen, bug-eyed from eavesdropping on the conversation. Megan began wailing inside the tent.\n\n\"Get in there and take care of her!\" I ordered. They rushed inside to begin consoling Megan. I went to every wagon owned by someone who played poker that night. I hailed until the person woke and came outside so I could quietly talk to them.\n\nI returned their money as best I could remember they lost to O'Rourke with the admonition not to tell anyone what I did. I spent a lot of time gruffly rejecting profuse thanks. By the end of the night, the only ones I hadn't reimbursed was Mike the Pimp and Cutler.\n\nFuck them.\n\n\"Kate, you awake?\" I whispered loudly.\n\nI heard a stirring in the wagon and Kate's head popped out. Even in the pale moonlight, I could see the damage from Mike's punch. Kate would be sporting a couple of black eyes from her broken nose.\n\n\"Is Mike around?\" I asked.\n\n\"No, that sorry bastard is passed out drunk!\" She said in a pissed off tone.\n\n\"I want you to gather yours and Megan's things. You're coming to stay with us.\" I told her.\n\n\"Are you sure, Zeb?\" she asked in grateful relief.\n\n\"One thing, Kate. I don't want Willi and Gretchen exposed to your business.\" I warned.\n\n\"Don't worry, Zeb. Any man that wants to fuck me while I look like this will be horny enough to take me to his place,\" she sourly chuckled.\n\nWhen Kate entered the tent, a round of cheers erupted for the reunion as excited voices overlapped in conversation. I dug my saddle out of the wagon and dropped it near the campfire for warmth and put my head on the hard leather pillow. 'So, glad my plan to improve my life is going so well', I sarcastically thought as I drifted off to sleep.\n\nBreakfast was not a rousing success. People kept drifting over, thanking me and giving me small gifts despite my admonition from last night not to do so. In a state of pique, I refused to tell a curious Megan.\n\n\"I don't know and it's none of your damn business, Mrs. Young!\" I informed her after the fourth request for information. That shut her up in a foul mood to match mine.\n\nA hungover Mike the Pimp bumbled up and demanded that Kate return to his wagon. She screamed her refusal and I had to shove him away, forcefully warning him not to come back.\n\nThat was enough for me. I invited Willi to go back fishing with me, but he hesitantly said that he, Gretchen and Megan had something planned. I spent the whole day fishing. Didn't get a single damn nibble. Strangely, I was okay with that. The serenity of being alone with a nearby waterfall gushing water allowed me to soak in the quiet till the sunset.\n\nAs I walked in camp I heard a ruckus. First, I thought it was just a couple of men getting into a fight. That was a common enough event during this journey. As I got closer I discovered it was a different matter altogether.\n\nGretchen was lying prone on the ground crying. Lying on top of her was Willi trying to protectively cover his sister. On top of Willi was Megan, huddling defensively as a man lashed her bare back with a riding crop.\n\nMegan's ripped blouse lay on the ground besides her. The torn fabric was intermeshed with blood. The same blood pouring from lashes drawn across her back as the crazed man continued to strike her over and over.\n\nPreacher Jeffers reared back and delivered another lash as he moved to the side to strike Willi and Gretchen. His stroke found Willi's ribs, and the boy winced from the pain as he continued to protect his sister.\n\n\"God damns all Papists!\" Jeffers thundered as he delivered Willi another stroke of the bloody crop. Jeffers moved again to find flesh untainted from the riding crop. There was another strike on Megan as she screamed in pain.\n\nGod damns the Whores of Babylon that serves the Papists!\" Jeffers delivered another lash as he declared, \"God has anointed me as His Avenger to punish the Spawns of Hell!\n\nKate screamed in protest as Meagan arched her back in reaction to another painful lash. Kate couldn't intervene because Mike the Pimp was holding her to prevent her from aiding her friend. She fought Mike, trying to break free but it was no use because he was too strong for her.\n\nThe rest of the crowd was yelling in objection but William Cutler held them at bay holding a shotgun threatening to kill the first person that interfered. I couldn't risk firing a shot in the back of Cutler. Not because I had any moral concern of shooting an unsuspecting man in the back, but because my shot might miss and hit someone in the crowd.\n\nI drew my gun, ran across to Cutler and clubbed him with the heavy pistol on the back of the head just as Mike the Pimp shouted a warning to him. Cutler dropped stunned to his knees and the angry crowd rushed and disarmed him of the shotgun. Then they swarmed Mike the Pimp and rescued Kate.\n\nThey left the unsuspecting Jeffers to me.\n\nThe crazed preacher was reaching to strike his helpless victims again when I turned him around and stuck him in the face with my pistol. He staggered back holding his arms out to protect himself. I moved inside the range of his arms and struck him again with the pistol. Blood spurted from his cheek.\n\nHe screamed, trying to retreat from the onslaught. The angry crowd pushed him back to face me. He began to whine, begging me not to hit him. I responded by launching a haymaker with my pistol that caught him flush on the mouth.\n\nHis lips split open from the painful blow. It chipped his front teeth, and now the nerve exposed to the air caused him agony as he began to cry. Still, he begged me and still I continued to methodically pistol-whip him till he barely resembled anything human.\n\nAs I reared back to hit the defenseless man again, my hand was stopped. Herman Kohrs looked at me with concern as he calmly said, \"He's had enough, Zeb.\"\n\n\"The hell he has!\" I growled trying to free my arm.\n\n\"No, Zeb. He's had enough.\" Herman tried to rationally convince me. \"You don't want to kill him.\"\n\n\"The hell I don't!\"\n\n\"I'm banishing him, Mike, and Cutler from the wagon train,\" Herman pronounced.\n\n\"The hell you are! Fetch me my bullwhip! I'll kill every one of the fuckers!\" I ranted.\n\n\"Zeb, you don't want their blood on your hands.\" Herman continued to try to get me to see reason.\n\nI looked Herman directly in the eyes. \"Herman, you have no idea how much blood is on my hands.\" I coldly stated. \"These three sorry fuckers won't make that much difference.\"\n\nHerman threw his last argument at me.\n\n\"Zeb, you're scaring Megan and the kids.\"\n\nAt the mention of their names, I instinctively looked over to them. Still huddled on the ground clinching each other they all had frightened faces of seeing a side of my character they never expected existed.\n\nMy anger instantly dissipated at the thought of causing them hurt. I fumbled my pistol back into the holster. I took a solitary step towards them hoping they'd forgive my homicidal rage they had witnessed with their own eyes.\n\nI reached an arm out in supplication. Willi and Gretchen ran to me crying and wrapped their arms around me. I stood there consoling them as best I could as I kissed the top of their heads.\n\nI moved to Megan still on the ground looking at me in hopeful anticipation. The angry red welts on her torso and the still bloody lashes on her back remained exposed to all.\n\nDespite being topless, I had little interest in studying her exquisite tits just then. My concern was to get her away from this place so I could tend to her. I carefully picked her up; trying not to injure her any more than she already suffered and carried her to my tent.\n\nShe held her arms around me and buried her head to my side as I walked. I told Willi to find me a jug of moonshine. He ran to comply with the request. Gretchen walked by my side, grasping the side of my blue jeans, in need of a physical connection as she watched Megan in concern.\n\nWe walked Megan to my tent. I told Gretchen to stay outside. I carried Megan inside and gingerly placed her on a cot. She continued to cry and moan from the pain. I studied the scarring across her back, Megan kept her head cast down away from my view.\n\nThe tent flap opened and Kate came in with two bottles. One, was the bottle of moonshine I requested. The other was a bottle of salve to treat the wounds. Kate said that the Kohrs would be taking care of Willi and Gretchen while Megan recuperated. Kate then left me alone with Megan.\n\nI took the bottle of nearly pure alcohol and told Megan to drink as much as she could stand. Megan would take a gulp and then grimace, concentrating to keep the drink down. She continued to imbibe while she explained what happened.\n\n\"When you left to go fishing, a lady came by and gave Gretchen a small gold crucifix as thanks for returning her husband's money that he lost at the poker game. I didn't think anything about it as I put the necklace on Gretchen and admired it.\n\nWe were walking through camp and Preacher Jeffers saw us. When he spotted the necklace, he went crazy, calling Gretchen a minion of Satan, and he struck her with his riding crop. I slapped him and he struck me. Willi charged him and tried to fight him, and he hit Willi.\n\nThen he went on a rampage, trying to beat Gretchen with the riding crop. Willi fell on top of her to defend her and take the blows. I came back at him and he grabbed my blouse and ripped it right off, while he lashed me over and over. I dropped on top of Willi and then you came to our rescue,\" she hiccupped.\n\n\"Megan, I don't mean to hurt you, but I have to put alcohol on your wounds or they'll get infected. It's going to hurt bad,\" I warned.\n\nMegan nodded and braced herself for the pain that was coming. I poured moonshine liberally on my kerchief and then gently began dabbing Megan's wounds.\n\nShe continued to jerk and flinch when the alcohol made contact. She moaned her pain and I spoke in a low calm matter trying to console her. I ordered her to keep drinking the moonshine hoping it would anesthetize some of the hurt.\n\nI applied the salve, dipping a finger in the gel and tracing over the welts. Megan began trembling at my touch. I thought how I had longed to touch Megan, and now under circumstances I wish I hadn't.\n\n\"I wish you knew how I been wanting you to touch me, Zeb. I spent every night dreaming that you would touch me, hold me, kiss me, make love to me,\" Megan slurred her tearful words as the moonshine took effect. I dressed the wounds with cotton gauze when Megan passed out. Then I sat vigil over her, ready to do whatever I needed to do to help the woman I loved.\n\nKate relieved me in the morning over my protests. Herman Kohrs' wife came by with some soup for Megan. Slowly, I became aware that every woman that had disparaged Megan and Kate had now accepted them in friendship. There was a constant barrage of visitors assisting Megan's needs. I was shunted to the side while Megan mended.\n\nHerman Kohrs decided that the wagon train would need to spend an additional week in camp to continue the repairs on the wagons. That was all right by me. It allowed me to go hunt for much need supplies of meat to replenish our larder.\n\nI was back fishing when she came to me. I was sitting on a large granite slab downstream from the waterfall, enjoying the residual heat of the rock. Megan sat by me and then nuzzled up to me.\n\n\"You look better,\" I said with a lump in my throat.\n\n\"I feel better. I just had to get away and find you!\" she said, looking up to me.\n\nI dropped my fishing pole and by mutual unspoken consent we moved together and kissed. We continued kissing. I was conflicted because I really wanted to touch her and caress her body but I didn't want to cause her pain from her injuries. Megan decided that issue when she took my hands and placed them on her tits. She watched my face to see how I would respond.\n\nI began to softly rub and squeeze those glorious mounds. She brought her arms around me and pulled me tight to her. \"Make love to me,\" she gasped.\n\nOur passion continued to mount as I furious kissed her and nuzzled her neck. I gently bit her earlobe, and a soft moan of pleasure erupted from her. I moved my position, my hands eased her legs open and I stroked them.",
        "When I got the palm of my hand rubbing against her pussy, she gasped, and then she hurriedly began to tug my pants off.\n\nMy cock sprang free, she gripped it and began stroking it as she moved her head down to my lap. She moved her lips and slowly slid my cock into her warm inviting mouth and then...\n\n\"OUCH!!!\" I screamed. \"What the hell did you bite it for?\" I yelled at Megan.\n\nA flustered discombobulated Megan started stammering, \"I didn't know! I was just following Kate's advice!\"\n\n\"Just try to be careful, Megan, that's some tender spot right there,\" I said as I moved her head back.\n\nShe cautiously slid my dick back in and began softly licking it and applying suction. I groaned in approval and offered some suggestions to her. She happily complied.\n\nI broke away and undressed her, greedily taking in her beauty. Her tits were perfect as they swayed with her motions. The large pinkish-red areolas chilled in the air drawing her nipples taut, begging to be sucked. Her flat abdomen twitched to my touch as I trailed to caress her soft downy auburn pussy.\n\nWe continued to kiss as our hands roved across each other. I grabbed her mane of fiery hair and pulled gently. Her head drew up to me in compliance and I growled at her, \"You belong to me and to only me!\" She responded by enthusiastically kissing my face and chest, and, thankfully, gently nibbling at my nipples.\n\nI laid down on the rock and maneuvered her until she was in the 69 position as I began licking her pussy. She groaned in pleasure and went back to servicing me. I began feeling the sensation of her body shaking against me as her orgasms began. We continued through the afternoon until close to the sunset hour when I moved her on top and she straddled me.\n\nSlowly she slid my engorged dick deeper and deeper into her until I was finally fully in her warm confines. She slowly began to stroke her body against me at the pace she desired. Her eyes closed as she focused on the pleasures resonating in her.\n\nWe continued as our sweat-slicked bodies slid freely against each other. I rolled on top of her in the missionary position. She mewled like a feral kitten as I thrust into her, her legs actively climbing against my thighs trying to get better access to what was causing her pleasure. When I came, I held fully in her and felt her shaking through her last orgasm. We began kissing and caressing each other, gasping to recover our breath. A half hour passed, and then we took a dip underneath the waterfall, cleansing each other.\n\nWhen we came back into camp, Willi and Gretchen giggled at us. Others gave us a knowing smile. When a mischievous Kate asked how we spent the day, I told her that her lessons lacked some very important details. I walked on while Megan stayed behind to talk to Kate. Suddenly, I heard Kate erupt with a howl of laughter.\n\nFor the remainder of the week, we returned to our rock and Megan practiced Kate's lessons avidly.\n\nWe broke camp and began our westward trek again. Megan now drove our second wagon, with Gretchen by her side. Willi rode with me. We soon settled into a harmonious pattern, and things couldn't have been better when the rider rode up with news that impacted our lives.\n\nGold had been found in nearby Colorado, and there was a rush of miners desperately headed that way. I had the chance to be the first to sell them supplies. The possibilities of profits skyrocketed, and all I had to do was turn south and leave the train. That night, I discussed this at the campfire, carefully watching to see how Megan would respond. Would she go with me to Colorado? Would she continue to Utah to become the dutiful third wife of Lee Young, or would she continue to California with Kate?\n\nShe continued to look at me as I talked and then said, \"You won me fair and square, and now you have to keep me, Zeb!\" I rushed to her and kissed her over and over as the children cheered.\n\nWe gave the news of our decision to everyone the next morning. We were surprised that Herman Kohrs and close to a hundred others had also decided that Colorado would be their homestead. Kate told us that she was interested in continuing to California and then to Arizona to meet her dentist that she was interested in, so we said our farewells.\n\nBefore she left, Kate hugged me and Megan and wiped a tear from her eyes. \"I'm so glad for the both of you, and that y'all put aside that nonsense of Megan being married to that old fart in Utah. Y'all seemed to have forgotten that polygamy is illegal in America, and, no marriage is legal until it has been consummated... I've fucked enough lawyers to find that out!\" She laughed, \"At least y'all got that consummated part worked out!\n\nWe waved goodbye, telling her that she would always be welcomed in our home. Willi and Gretchen ran alongside her wagon saying goodbye to their Aunt Kate. She kept laughing and crying as she waved back until she was no longer in sight.\n\nWe drove to a community called Golden, and we fell in love with the beautiful terrain. I set up my wagons for business, and soon sold every item I had to miners rushing in to strike it rich. I sent a telegram to St. Louis to replenish my wares and set out to build a store in the boomtown in the meantime.\n\nWe also settled on a large grassy plateau for our homestead, and Willi and I began building our house. Herman Kohrs settled just a few miles away, and he continued to rave about how pure the water was as he built his business.\n\nA year later, I was riding up to the store in the early morning. It was a crisp morning of October 15<sup>th</sup>. As I hitched my horse in front of the rail in front of my store I saw a group of men slowly walking towards me. One of them shouted at me and I focused on them.\n\nThe old scabrous man yelled at me, \"I'm here to kill you Zebulon Russell, for stealing my wife!\"\n\nLee Young continued to approach me, even though he was suffering from the end stages of syphilis. I shuddered to think of how close Megan came to being infected by this degenerate villain.\n\nYoung was accompanied by others walking side by side with him. All of them brandished shotguns aimed my way. As they closed, I recognized William Cutler, Mike the Pimp, Preacher Jeffers, and Johnny-Behind-The-Deuce. I had no idea how this Devil's Brew came to being, all I knew was that each one was hellbent on killing me.\n\nThey intended to give me the same chance McCluskie had when he was shot down in Tuttle's Dance Hall, which was none. I intended to give them the same chance Jim Riley gave McCluskie's killers, which was none.\n\nThey were 50 yards away when I pulled the Henry repeater out of the scabbard. Their eyes widen as I levered in a shell and aimed at them. I fired the first shot and a crimson bloom appeared on Lee Young's white shirt. The impact spun him around and his finger twitched on the trigger of his shotgun as it discharged.\n\nBuckshot from the 12-gauge shotgun cratered into the side of Preacher Jeffers' chest. As he fell, I noticed his right arm was hanging on by a slim thread of sinew. I rapidly fired two more shots into Lee Young's chest causing the whole front of the shirt to go red. He collapsed in the dirt.\n\nJohnny-Behind-The -Deuce made a desperate run to get close to me so he could obliterate me with his shotgun.\n\nHe didn't get close enough, fast enough.\n\nI fired and the 44-caliber bullet struck him in the forehead, killing him instantly.\n\nI felt the sting of expended shotgun pellets fired from Cutler too far away to harm me. He was fumbling open the breech of the shotgun trying to quickly reload his weapon. His desperation caused him to drop a shell in the dirt. When I took aim, he screamed and threw his shotgun down and brought his arms up to shield himself.\n\nMy shot had no problem penetrating his pitiful defense. He flew back as the bullet smashed in his chest and stopped his heart. He collapsed to the ground and weakly lifted one arm to the sky before it feebly fell across his chest.\n\nI turned my attention on Mike the Pimp. He threw down his shotgun and cried at me not to shoot him. The sheriff came out on the street and promptly arrested him and took him to jail as he still begged for mercy, throwing all the blame on the others.\n\nI carefully walked up to the four men lying in the street to confirm they were dead. Preacher Jeffers was alive, barely. His rapid breaths blew bloody red frothy foam from his chest. His unfocused eyes slowly settled on me and then somehow, he recognized me.\n\n\"We looked for you in California; you weren't there.\" He gasped.\n\n\"That's right.\" I agreed, looking down at him.\n\n\"My partner shot me!\" he complained about the inequity of it.\n\n\"The Lord works in mysterious ways, Jeffers. Enjoy Hell.\" I pronounced as he sounded his death rattle and died. I turned to open my store.\n\nEight years quickly passed by, and we thrived and prospered. Willi was eighteen and a full partner in our mercantile store. He did the bulk of the work and I left all decisions with him.\n\nI had gotten to the point that I could afford to grubstake miners that I thought would strike it rich for a percentage if they did. Enough did and honored our agreements that I was a millionaire without having to toil in the mines.\n\nMegan was employed as a teacher at a school, three miles from our ranch. Each morning she would load the wagon with our children; Gretchen, now thirteen, Katherine, six, named after her Aunt Kate, Rachel, five, named after Megan's sister, and James, four, named after my friend Jim Martin who died in that awful shootout in a bar in Kansas that prompted me to turn my life around.\n\nThe three toddlers adored their big sister Gretchen and all wanted to be close to her when they could. They would scramble to climb into her lap as Megan set the wagon off to school.\n\nAs soon as the wagon set off, an ox would start trailing the wagon, arrive at the school while classes were attended, wait patiently until the classes were dismissed for Gretchen to come out and ride it bareback to Gretchen's destination; whether it was home or the store.\n\nWe had tried to keep it corralled in a pen or the barn, but Willi and I got tired of repairing the damage every day, so we allowed it free range to follow Gretchen. Needless to say, she was talked about by everybody in our community, and I began to worry when interested boys started sniffing around her at our church's social picnics on Sunday afternoon.\n\nEligible girls would prepare a picnic basket lunch. Eligible boys would bid on the lunches. The bid winners would enjoy the meal and the company of the girl that afternoon. I had agitated Megan and Gretchen by warning that I would outbid every fellow interested in Gretchen.\n\nGretchen would run to her brother to protest my statements, but he just laughed and reminded Gretchen how she had me wrapped around her finger.\n\nWilli also enjoyed the church socials. He had continued to exclusively bid on Herman Kohrs' daughter's lunch basket. Only once was he unsuccessful, when he didn't anticipate a rival's bid. The grim look he held as the girl looked helplessly back at Willi while the rival led her off to the picnic grounds, was an indication of what he felt for her. The next Sunday, the rival, sporting a black eye and broken nose, failed to make a bid. Willi, with his split lip, was pleased as he once again accompanied his sweetheart to their picnic.\n\nHerman Kohrs told me that when our kids entered into matrimony he intended to have Willi work in his brewery. I told Herman that if Willi was happy I had no objection to having him working in a brewery that was establishing a great name for Herman's beer.\n\nAs I reflected on my life, all in all, I was satisfied how everything turned out.\n\n\"STOP DAMN IDIOT BEAST!\" Gretchen screeched outside my store.\n\nOf course, there were always a few projects to work out.\n\nHistorical footnotes:\n\n\"Seeing the elephant\" was a phrase popular during the Civil War. Due to the novelty of seeing an elephant, young men eager for war equated the imagined glory of war with that novelty as they pursued it, only to find out the grim reality of combat.\n\nEarl Van Dorn, as noted, was an incompetent Confederate general. He was indeed killed by an irate husband who was not prosecuted for Van Dorn's murder.\n\nGeneral Order Number 11 was an edict issued by a Union general that caused the eviction of everyone in four counties in southwest Missouri during the Civil War. All their property was either confiscated or destroyed.\n\nAdolph Herman Kohrs migrated from Prussia to Golden, Colorado, and started a very successful brewery. He later Americanized his name to Coors.\n\nSheriff Henry Newton Brown was a contemporary of Billy the Kid, and participated in the Lincoln County War in New Mexico. He was later appointed Sheriff of Caldwell, Kansas, one of the bloodiest cow towns in the Old West. Brown's death as described in the story pretty much tracked the actual events.\n\nThe Shootout at Hyde Park was the deadliest single encounter in the Old West. Yes, it even beat the Gunfight at the OK Corral. Jim Martin was an innocent victim of the shooting, and James Riley did ride off into the night, only to disappear from the pages of history.\n\nKatherine Horony was better known in the West as Big Nose Kate. She was a prostitute and the common-law wife of a dentist in Arizona. The name of that dentist was Doc Holliday.\n\nThe Bowie Knife, named after the Alamo hero, Jim Bowie, was created by blacksmith James Black in Washington, Arkansas. The secret of his technique of creating Damascus steel has been lost from the pages of history. To date, no one has fully duplicated Black's results.\n\nJohnny-Behind-The-Deuce/Michael O'Rourke was a cardsharp and gambler best known for being an associate of the Earp's faction in Tombstone, Arizona.\n\nThe Mormons settled into the Utah territory in 1847 and openly practiced polygamy. As a quid pro quo to gain statehood they outlawed polygamy and became the 45<sup>th</sup> state in 1896.\n\nFinally, to write this story, I had to mix up details both chronologically and geographically out of sequence. So, for example, if you jump my case saying the Llano Estacado was nowhere near the Oregon Trail or that Billy The Kid was already dead when Henry Newton Brown met his demise, all I can say is guilty as charged. Otherwise, I hope you enjoyed the story. "
    ],
    "authorname": "oshaw",
    "tags": [
        "literotica writers go west story",
        "wagon train",
        "cattle drive",
        "st louis",
        "gold",
        "whores"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/kept-2"
}