{
    "title": "Reflections from the Snow Ch. 03",
    "pages": [
        "I started by calling the Brigham and Women's Hospital HR department. But they wouldn't give out any information about employees over the phone. That didn't really surprise me, but it meant that I had to go to the place and just start asking.\n\nI began my search with the ER. This was an emergency, after all! But no Beth Viscoli. Then I tried the patient wing. I went to each floor and asked at each nurses station if they recognized the name. There were three stations on each floor and sixteen floors, so this took quite a while. And in the end it was fruitless. I took the elevator back to the main floor, trying to remain positive. As I passed through the main lobby and saw the information desk, I thought that I would give that a try. There were several people in front of me making inquiries and I looked around the lobby as I waited impatiently. There was a tremendous bustle in the lobby: doctors, nurses, patients, visitors. This place was like a small city.\n\nWhen it finally came my turn, I asked the information clerk, \"I'm looking for Beth Viscoli.\" \n\n\"Is that a patient?\"\n\n\"Um, yes.\"\n\nThe clerk typed the name, which then appeared in green phosphors on the terminal screen.\n\n\"Nothing, I'm sorry.\"\n\n\"Are you sure you spelled it right? That's Beth Viscoli, V-I-S-C-O-L-I.\"\n\n\"Yes, I spelled it correctly, sir.\"\n\n\"Oh, did I say 'patient'? I meant 'employee'. I'm looking for an employee named Beth Viscoli.\"\n\n\"Do you know what department she works in? I can't give out employee information, but I can connect you with her department.\"\n\n\"No, I don't which department she's in. If I did, I'd just bloody go there, wouldn't I?\" I answered crossly.\n\nThe clerk gave me a you're-being-a-jerk look.\n\n\"Never mind,\" I said, and abruptly walked away.\n\nI needed to get outside for some fresh air. I would have liked to sit down, but the best I could find was a raised concrete planter with some flowers and bushes in it. I perched on the edge of the planter, leaned forward, and put my head in my hands. I felt I was so near, but this was so daunting! And the task was clearly fraying my nerves, based on that last little hissy fit. It seemed so doable when I was just imagining it, but this place had countless clinics and offices and nooks and crannies where a nurse could be working. There was no way I would be able to inquire at all of them! They'd probably peg me for a creep before long and either throw me out or throw me in jail.\n\nI sensed someone near me and looked up. A middle-aged nurse with a craggy face had sat down a few feet away and was fishing in the pockets of her scrubs for something. She pulled out a pack of cigarettes and lighter, extracted one cigarette from the pack, lit it, took a deep drag and then let out a long plume of smoke.\n\n\"Vile habit,\" she remarked without looking directly at me. \"You'd think a medical professional would know better.\"\n\nShe took another drag on her cigarette. \n\n\"Care for one?\" she asked, finally looking at me as she extended the pack.\n\n\"No thanks. I'm not a smoker.\"\n\n\"Wise choice,\" she responded, burying the pack back in the pocket of her scrubs.\n\nShe took another long drag.\n\n\"You here visiting someone?\" she asked me.\n\n\"Sort of,\" I replied. \"More like looking for someone.\"\n\n\"Would that be Beth?\" she asked casually.\n\nI sat bolt upright like someone had sent a high-voltage current through me.\n\n\"You know Beth?\" I demanded. \"And how do you know I was looking for her? Can you help me find her? Where is she?\" The questions poured out of me.\n\nThe craggy face regarded me coolly, then took another puff on her cigarette.\n\n\"I overheard you pestering that poor information desk clerk about a Beth Viscoli. There probably aren't too many of them around. And yes, I know her. But the more important question for me is, how do you know her?\"\n\n\"We were . . . friends once, a long time ago. But we lost track of each other over the years. Our paths almost crossed recently and I'm just trying to renew the connection.\"\n\n\"How did you know to look for her here?\" she asked.\n\n\"Well, that's kind of a long story,\" I explained.\n\n\"That's too bad,\" she replied, looking at her watch, \"because my break is over in a few minutes.\"\n\nI slid closer to her.\n\n\"Can't you just tell me how to get in touch with her?\" I pleaded.\n\n\"Not gonna happen 'till I know more about you, sweetie. Those of us that call Beth our friend are very\"-she dragged out the word 'very' for emphasis-\"protective of her.\"\n\n\"Well, can you at least give her my phone number, let her call me?\"\n\n\"Nope. I'm not going to let some obsessive jerk from her past get her all upset right now.\"\n\nI replied heatedly, \"I'm not an obsessive jerk! You don't know the first thing about me! How dare you . . .\"\n\n\"OK, sorry, sorry! Don't get your panties all in a wad! That came out a little harsher than I intended. But you're exactly right about one thing-I don't know the first thing about you. And until I do, you're staying away from Beth.\"\n\nI fumed silently for a few seconds.\n\n\"What is it you want from me then? What do I have to do?\"\n\n\"Well, I think we need to have a proper chat sometime.\" She looked at her watch again, then dropped her cigarette on the ground and snubbed it out with her shoe. \"But I don't have time for that now. Have to get back to my shift. But call me and we'll set a time to have a coffee. Call the main hospital number, then ask for extension 1467. Ask for nurse Sally. Got that?\"\n\n\"Yeah, got it.\"\n\nShe stood and started briskly walking back to the hospital entrance. But after just a few steps she paused and said, \"Oh, and it would help your cause if you could bring some evidence. Something that shows you and Beth were on good terms. Letters, pictures, something like that.\"\n\nShe turned to go, but hesitated and faced me once again.\n\n\"And don't bother trying to find her on your own. She hasn't gone by 'Viscoli' in years. You'd never find her.\"\n\nFinally she turned and hurried back into the building.\n\nI sat there dumbfounded for several minutes, trying to process what had just occurred. On the one hand, it seemed a miracle that a chance passerby would overhear me mentioning Beth's name, actually know who she was, and then take the trouble to follow me and talk to me. On the other, there she was acting like the gatekeeper to the fucking queen of the universe and I had to pass some test to prove myself worthy.\n\nI shook my head in dismayed amazement. It seemed that every time I got closer to finding Beth, I really got farther away. But there was no alternative now to going through this \"nurse Sally.\" So I turned my attention to satisfying her demands.\n\nWhen I got home, I took stock of my on-hand Beth memorabilia: zilch. I did still have a lot of things in storage that I hadn't decided what to do with, but I was reasonably sure that there wasn't anything there that would be of any use, either. I needed to turn to an expert, so I called my mom.\n\nAn hour and fifteen minutes later I had a sore ear and a lot of unnecessary knowledge about our neighbors' children and dad's athlete's foot, but I had also secured a promise that she would go through my box of high school 'memories' (as she called it) and send me anything related to Beth, whom she still remembered fondly. I made her also promise to mail it to me Fed Ex Overnight. I had a little difficulty explaining the urgency of that request (and I certainly hadn't tried to explain the whole convoluted story of almost-Beth over the last ten months), but in the end I think she just kind of took my word for it.\n\nSure enough, three days later I came home to find a substantial Fed Ex package waiting for me. It contained my senior yearbook (Beth's remembrance simply said \"You'll always have my heart.\") and three photos. That was it; that's all she could find.\n\nI looked at the photos. They were all small-3x5s or 4x6s. One I think mom herself had taken of the two of us standing arm in arm in front of my home. It was sweet. The second must have been taken at some party. It was somewhat out of focus and showed the two of us sitting on a couch laughing. I couldn't even place the event in my memory.\n\nBut the third one . . . The third one almost stopped my breath. It was taken during our ski trip. The photographer was undoubtedly Maureen. She was a real shutterbug and I remember her going through roll after roll of film on that trip. This particular photo was a close up of the two of us, cheek to cheek, somewhere on the slopes. Maureen snapped this one on the third day, the day after Beth and I first made love. You can see it in our eyes, hers green, mine green mixed with brown, burning with lovers' passion. And the smiles so intense, so profound, that the sorrows of the whole world would not have the power to break them. I remember how I felt that day. Every moment with Beth was a crucible of overwhelming tenderness, burning away every experience but the unshakeable core of our bond. I felt so protective of her that day, I would have, without hesitation, jumped into a lake of fire to protect her. And every shred of feeling we held for each other at that moment shined through our faces.\n\nI set the photo down and fast-forwarded through my emotional life since that time. Had I ever felt that way about another woman since? I had certainly been in love with other women since then. I loved Val, my ex wife, for many years. But I don't think it was ever with the white-hot purity I felt for Beth that day, and truly, for all the days she was with me. But was that because it was Beth, or because Beth was the first, or because I was eighteen and, well, that's how eighteen-year-olds feel? Or could it be all three?\n\nI called nurse Sally the next day and we set a meeting time for the day following. I met her at the coffee shop she had specified near the hospital.\n\n\"Let's hear your three riddles,\" I said, once our coffees had arrived.\n\n\"What on earth are you talking about?\" the craggy face asked.\n\n\"It's an old Chinese legend. Suitors have to vie for the hand of the princess by answering three riddles. If they fail, they are beheaded.\"\n\n\"Sounds grim. But I hope you're fate is a little less dramatic. Nonetheless, you do have to tell me how you met your princess.\"\n\nI had carefully considered how I would tell this strange, forbidding woman my history with Beth. Truth be told, I had never really shared our story with anyone beyond those who already knew us both at the time. I didn't exactly relish recounting such an intensely personal part of my life with a complete stranger. Yet, this might be my one chance to finally see Beth again. So I started from the beginning and gave her the whole story of that glorious winter and spring. I withheld a few of the more graphic details, but the gist was clear.\n\nAfter I had finished, nurse Sally said, \"Well, that sounds a bit more than the 'friends' you mentioned a few days ago!\"\n\n\"True,\" I admitted. \"But I didn't know you then, either. I wasn't about to rattle off some long tale about my love life to a stranger. For that matter, I still don't know you, but you've rather forced my hand. So take it or leave it.\"\n\n\"Fair enough,\" she acknowledged. \"Do you have anything from Beth at that time?\"\n\nI pulled out the photo and showed it to her. Nurse Sally regarded it for a long time. \n\n\"She looks so young,\" she almost whispered.\n\n\"And beautiful,\" I added.\n\n\"Yes, and beautiful,\" she agreed.\n\n\"So how did you come to the conclusion that Beth works at Brigham and Women's?\" she asked.\n\nI launched into my second twisted tale, the tale of the hat and the wind, of the bartender and the note, of the disconnected phone and its mysterious owner, and of the tote bag and the shoes.\n\n\"You mean to tell me,\" nurse Sally said after hearing my story, \"that you pieced together all those clues over all those months, just on the chance that you could find Beth again?\"\n\nI stared back at her thoughtfully for a few seconds.\n\n\"When you put it that way, it does seem perhaps exceptionally determined,\" I said.\n\n\"Obsessive is what I'd call it,\" she retorted. \"Still, you've clearly got a history with her. I'll ask her if she wants to see you.\"\n\nAlthough I was relieved to hear this news, I was also still feeling resentful of the control this woman was exerting over my life. I needed something in return.\n\n\"You can at least tell me her name,\" I demanded.\n\nNurse Sally regarded me thoughtfully, then said, \"No, I still don't feel comfortable with that. Not until Beth gives me the OK. But I will solve one mystery for you. You see, Viscoli was the name of her first husband. He was quite a bit older than she, about 15 years or so. He had a son from a previous marriage, but Roger and Beth never had children of their own. Roger died in a car accident a number of years ago, and Beth eventually remarried. She goes by that name now.\"\n\n\"The name you won't tell me.\"\n\n\"Yes, the name I won't tell you.\"\n\n\"Well, then who is Bernard Viscoli?\"\n\n\"That's Beth's step-son, Roger's son.\"\n\n\"Why did Beth leave me Bernard's phone number when she left her note? And why was the phone number out of service when I called it just a couple of months after she left it?\"\n\nNurse Sally made a wry face.\n\n\"That's complicated. I'll let Beth explain that to you, if she wants to.\"\n\nNurse Sally looked at her watch.\n\n\"Time for my shift. I'll take this and show it to Beth, if you don't mind,\" she said, taking my photo.\n\n\"I'll want it back, no matter what!\" I exclaimed fiercely.\n\n\"Don't worry, you'll get it back. Call me tomorrow, you know the number.\" \n\nTwo days later, I was riding the elevator to the fifth floor of Brigham and Women's. The day before, nurse Sally had said she'd meet me by the fifth floor elevators at 2:00 pm. I had tried to get more information out of her, but all she'd say is that Beth had agreed to meet me and to be there at 2:00. I was about ten minutes early, but nurse Sally was there waiting already. My breathing was shallow and my hands trembled. I felt I couldn't catch my breath.\n\nNurse Sally took me by the elbow and began to slowly lead me around the corner and past the nurse's station. One of the very nurse's stations I had been at just days before, inquiring for a Beth Viscoli!\n\nNurse Sally began to speak in a low voice as she led me.\n\n\"Now, I don't want you to be dismayed when you see her. She doesn't look her best right now.\"\n\nI stopped.\n\n\"What? What are you saying? She does work here, doesn't she?\"\n\n\"Yes, she does work here. She works as a nurse in the NICU.\"\n\n\"NICU?\"\n\n\"Neonatal intensive care unit. But she's not here, on this floor, as a nurse. She's a patient.\"\n\nI was stunned to silence. Once I had determined that Beth was a nurse, I had no longer considered that she might have been a patient, too.\n\nNurse Sally took my arm and continued to lead me and speak in quiet tones.\n\n\"She's had surgery recently and is still quite weak. So please be careful not to tire her. If I say go, you go. Is that clear?\"\n\nI nodded.\n\nNurse Sally steered me into a room a few steps down the hall, just a few steps from where I had stood mere days ago. The name on the door said \"Elizabeth Morris.\"\n\nLying in a bed was a figure covered in blankets. Tubing emerged from machines that clicked and whirred and seemed to extend everywhere. The barely eaten remains of a meal rested on a rolling tray next to the bed. Tucked under the plate was the picture of me and Beth on the mountain. \n\nI approached the bed. Beth's head was turned to one side on her pillow, facing away from me. She appeared to be sleeping.\n\n\"Beth, Beth,\" nurse Sally called quietly. \"Someone's here to see you.\"\n\nShe stirred and turned her head towards me. Her eyes seemed to take a few seconds to focus, but then a sparkle of recognition ignited in them.\n\n\"Robbie!\" she said weakly, extending her one hand and arm not encumbered by tubes. \"It was you! I wasn't dreaming after all.\"\n\nI rushed to her side and grasped her hand with both of mine.\n\n\"Beth, how are you? What's happened to you?\"\n\n\"Oh, I must look a fright! Sally, call my makeup artist!\" She gave a quiet chuckle and a smile momentarily broke nurse Sally's stern visage.\n\nIn fact, Beth's appearance alarmed me. She looked thin and drawn. Her complexion had a yellow tinge to it. She looked very, very sick.\n\nI glanced at nurse Sally with alarm in my eyes. She raised her eyebrows and tilted her head as if to say \"it is what it is.\"\n\nI turned back to Beth.\n\n\"Whatever it is, I know you. I know what kind of strength you have. You can beat this.\"\n\nBeth just squeezed my hand and smiled in response.\n\n\"Can you hand me that cup of water?\" she asked. \"I'm so thirsty. Thank you. Now, I need to hear some good news. Tell me about your life. How long have you been here?\"\n\n\"I've been in Boston about ten years. I got a job with a financial services company whose headquarters is here.\"\n\n\"See?\" she said. \"I always knew you'd be successful.!\"\n\n\"Well, I don't know about that,\" I replied.\n\n\"And to think we've been sharing the same town for all this time and never knew it! Married?\"\n\nI hesitated. \"I was. Fourteen years. But it didn't work out.\"\n\n\"Oh, I'm sorry to hear that. You deserve to be happy.\"\n\n\"Well, I'm not sure what I deserve, but I do know that being here with you makes me very happy.\"\n\nBeth smiled but didn't answer.\n\nNurse Sally stepped up.\n\n\"Beth, sweetie, you're looking tired. Let's let you rest for a bit.\"\n\nBeth nodded very slowly and closed her eyes. Nurse Sally gently took my arm and guided me to the door. Once outside, I quizzed her urgently.\n\n\"What's wrong with Beth? What's happened to her? Why is she in here?\"\n\n\"Cancer,\" she replied. \"She's been dealing with it for over a year. She went through chemo last year. In fact, it was probably around the time she stumbled across you.\"\n\n\"Or I stumbled across her-literally.\"\n\n\"Whatever the case, the original diagnosis was breast cancer, but the lesion was very small and they decided to treat it with radiation and chemo. No surgery. But recently an MRI revealed a small spot on her pancreas.\"\n\n\"Pancreatic cancer?\" I exclaimed in dismay. I didn't know too much about cancer, but everything I had heard about pancreatic cancer was that it was pretty much a death sentence.\n\nNurse Sally placed a sympathetic hand on my arm, the first conciliatory gesture she had made towards me.\n\n\"It's not quite as bad as it sounds. They caught it very early. They took off about half her pancreas. It looks like they got it all. She was very lucky.\"\n\n\"Some luck! That poor girl!\"\n\nNurse Sally regarded me almost with tenderness, I thought. Then she slowly shook her head.\n\n\"She still is a girl to you, isn't she? That beaming eighteen-year-old you showed me in the photo. You have to understand, she's not that same carefree youth anymore. She's not had any easy time of it. And the cancer isn't all of it. You'll have to take that into account.\"\n\n\"What? What else has happened to her?\" I asked anxiously.\n\n\"That's not for me to say. You'll have to let Beth tell you in her own time, in her own way. Just tread lightly, that's all I'm asking. I can tell you care for her. But I'm afraid you may be caring for someone who isn't there anymore. I don't want to see you build her hopes up then dash them because she's not the fantasy you've been constructing in your mind for the last twenty years.\"\n\n\"I . . . I wouldn't do that!\" I protested.\n\n\"I have no way of knowing that. But I can't protect her forever. At some point she has to make her own choices, take her own risks again. There is one thing that speaks in your favor, however. I haven't seen Beth's eyes light up like I saw when you stood before her, or like when she looked at the photo of you two you gave me, in a very long time. Whatever you two had, it has left a mark. Just don't waste it!\"\n",
        "I returned every day to visit Beth. We spent much of our time reminiscing. \"Do you remember when . . .\" conversations. I was vastly relieved to observe that over the course of my visits that Beth seemed to steadily improve. After about one week her color had returned to normal and she was able to walk on her own, albeit slowly, up and down the hall, an activity I dotingly aided her in.\n\nAfter returning to Beth's room from one such expedition, she sat in the large lounge chair in her room rather than the bed. She looked much stronger. I felt I dared broach a subject I had been postponing until she was more resilient.\n\n\"Tell me about the day you saw me, last November,\" I said.\n\nBeth took a long time to respond, as if gathering her thoughts and organizing the facts she had to convey.\n\n\"It was November 9th. Funny that I can remember the day, but it had been one of my chemo days. It was my second treatment, so it wasn't hitting me so hard yet. After about the third or fourth one, they really start to kick your butt. I still had most of my hair, but it was already starting to come out, so I wore this big knit cap that covered my whole head.\"\n\n\"Yes, I remember Mel mentioning something about you having a cap on.\"\n\n\"Mel?\"\n\n\"The bartender you talked to, Mel. He owns the bar. He was the link that kept our chain from breaking entirely.\"\n\n\"Well, I had had my chemo earlier in the afternoon and still had to take care of some errands. They say it's good for you to stay active right after a chemo session, keep the blood circulating and all that. So I had done some shopping and was heading home. The weather had turned and it was turning into a nasty evening. I just had my head down trying to walk home as quick as I could. Then out of nowhere I see a hat go skittering past me on the sidewalk and a man stumbled after it. He kind of bumped me a little and it startled me. I glanced down but just caught a glimpse of his face as he kept chasing after his hat. I could have sworn it was you. It made me gasp, but you-I still can't believe it was you!-just kept walking. I just stood there, trying to talk myself into believing it was you. Not much had gone right for me that year and I had trouble believing that something with happy memories attached to it might actually come my way. Finally, I said to myself, 'Beth, if you don't check this out, you'll regret it.' So I ran after you. But you had gone down into the subway and by the time I got there you had already caught your train.\n\n\"So I just decided to go back home. But when I had gone a couple of blocks, some little voice inside said I shouldn't give up. I knew it was silly, but I just couldn't give up. So I went back to where you lost your hat. I thought maybe I had seen someone come out of one of the shops along there and thought maybe that had been you. I figured it must have been that bar, so I went in to see if anyone remembered you, knew you.\n\n\"I felt such a fool talking to that bartender. To Mel. He must have thought I was crazy. I remember him telling me that everyone wears hats in November. I was ready to skulk out of there, but he offered to take my name and number in case you showed up. That was sweet of him.\"\n\nI squeezed her hand and smiled. \n\n\"Can you tell me about the phone number you left? I did call it, eventually, when Mel finally made the connection that I was the guy in the hat. But it was a couple of months later.\"\n\n\"Um, I was kind of in-between right then. My second husband, Randy, had left me not long before that. Kicked me out, may be more accurate. He had found a younger woman and was anxious to trade me in for a newer model. You know what it's like finding affordable housing around this place. I needed some place in a hurry so I was staying at my step-son, Bernie's, apartment.\"\n\n\"Bernard Viscoli,\" I elaborated.\n\n\"That's right. He had graduated from Boston College in the spring and just that fall had landed a job in Philadelphia. His lease went to the end of the year, though, so he let me move in until then. I just kept his phone and utilities, it would be such a short time.\"\n\n\"So when I finally called, in mid-January, you had already moved out and disconnected all the utilities, is that right?\"\n\n\"Yes, that's what happened.\"\n\n\"And when, in the summer, I looked for Bernard Viscoli in the phone book, he was in Philadelphia, not in Boston.\"\n\n\"Yes, that's where he was, in Philly.\"\n\n\"So how long were you married to your second husband.? Randy?\"\n\n\"Yes, Randy. I don't even like saying his name, it leaves this taste like dust in my mouth. We weren't even married two years. Saying yes to him was not one of my prouder moments. Roger had passed away about a year earlier, and Randy was just so insistent, and seemed so energetic and glamourous. And he had lots of money. That seemed so exciting to me. Roger didn't, he was just a hard-working guy who managed to make ends meet. But Randy would pick me up in his fancy cars and we lived in a nice house. He wanted me to quit my job, but I wouldn't do it. I think that was the start of his disenchantment with me, when he realized he couldn't manipulate me. He was very manipulative. I don't know what he wanted with a boring old nurse anyway.\"\n\n\"It's those eyes,\" I said. \"They could enchant a blind man.\"\n\n\"Well, aren't you the flatterer!\" she smiled. \"Anyway, I'm better off without him and hope I may never see him again!\"\n\nAfter she had recounted these events to me, I could see Beth's eyelids grow heavy. I knew I had to let her get some rest.\n\n\"Here, let me help you get back into bed. I think you need a little beauty sleep right now.\"\n\nBeth smiled wanly and nodded. I helped her into bed and tucked her in.\n\n\"I had better go now,\" I said, leaning in close. \"I have to warn you that I'll be gone for a few days on a business trip, but I'll be back soon, I promise. OK?\"\n\nShe nodded a little sleepily and grabbed my hand.\n\n\"Come here,\" she said with a little thrust of her chin, and I leaned in close. She reached up, placing her hand at the back of my neck and pulled me even closer. Whispering in my ear, she said, \"I'm so glad to have you back in my life,\" and then gave me a little peck on the cheek.\n\nI kissed her forehead and smoothed her hair. \"Me too. Now, I'll see you in a few days, right?\"\n\nShe nodded, eyes already drifting closed.\n\nMy business trip lasted three days, so four days later I returned for a visit. I confidently strode into her room bearing flowers, but to my bewilderment, the room was empty. The bed was made and there was no sign of Beth or her belongings.\n\nI ran to the nurses station.\n\n\"Where is Beth Morris?\" I inquired anxiously.\n\nThe nurse there didn't even have to consult her records. \"Beth's been in ICU for the last two days,\" she said.\n\nI bolted for the elevator without waiting for more.\n\n\"She can't have visitors!\" the nurse shouted over my abandoned flowers at my retreating back.\n\nWhen I got to the ICU, I ran up to the main desk.\n\n\"Beth Morris,\" I stated, out of breath from my harried dash.\n\n\"Are you a relative?\" she inquired coolly.\n\n\"Look, she'll want to see me. Can you just ask her?\"\n\n\"No, I'm afraid not. There's a reason she's in ICU.\"\n\n\"What's wrong with her?\"\n\n\"I'm sorry. If you're not a relative . . .\"\n\nI pounded my fist in frustration.\n\n\"Can I use that phone?\" I asked, pointing to a handset on the counter.\n\nThe nurse nodded her permission and I dialed Sally's extension.\n\n\"Sally, this is Robert,\" I blurted out when Sally came on the line. \"What on earth is going on with Beth? Why is she in ICU?\"\n\n\"She's had a setback,\" Sally answered.\n\n\"Setback? What kind of setback?\" I demanded.\n\n\"Hang on, I'll be down in a few minutes. It will be easier to explain.\"\n\nAbout 15 eternal minutes later nurse Sally walked up.\n\n\"Tell me, what's happening?\" I asked desperately.\n\nSally led me over to a waiting area and we both took seats.\n\n\"Beth has developed an infection,\" she explained. \"It's a risk after surgery like this, and this one has proven very stubborn. She hasn't responded to the first antibiotics they gave her. They're going to try another round of a different type. We won't know for a while if they're working.\"\n\n\"And what happens if they don't?\" I asked tremulously.\n\nSally's mouth drew to a thin line and she slowly shook her head. \"Let's just hope they do,\" she said finally.\n\nI felt my eyes burn and tears began to streak my cheeks.\n\n\"No! No, this can't be!\" I slapped the arm of the chair in frustration and sudden despair. \"I can't lose her again, not now!\"\n\nSally patted me consolingly on my back.\n\n\"None of us can bear the thought of losing her,\" she said. \"But it's out of our hands now. We just have to have faith.\"\n\n\"Can I at least see her? Please, please! Let me be with her!\"\n\n\"I'll see what I can do,\" Sally said, rising.\n\nShe talked for several minutes to the nurse at the ICU desk. The nurse made a phone call, and the two of them talked a little more. Then Sally returned to me.\n\n\"She won't be responsive, and you can't touch her. But follow me, we can see her for a little while.\"\n\nI followed Sally into the ICU. We both donned surgical masks and used sanitizer on our hands. Sally led me over to a curtained area, held open one edge of the curtain and beckoned me in.\n\nBeth lay inert on the bed, a breathing mask on her face, an IV drip in her arm. Her complexion was sallow, her breathing shallow and irregular.\n\nI looked imploringly at Sally. \n\n\"Try talking to her,\" she suggested.\n\nI turned back to Beth.\n\n\"Beth? Beth, I hope you can hear me. Beth, I know you. I know you can pull through this. I know what kind of strength you have. I've seen it. I've seen your fearlessness. Use that, Beth, tap into that spirit that I know you still have in you.\"\n\nI looked at Sally.\n\nShe mouthed silently, \"Keep talking!\"\n\n\"Beth, sweetheart. You know, I spent a lot of time and trouble finding you. And we've only had a week together. You've got to give me a little more chance than that! Think of all the things we can do once you're better. We could go skiing again! Wouldn't that be a hoot? And this time you'll know that you really don't need to look out for snow snakes! Beth? Please stay with me. I don't know if I can endure losing you again. Can you try, Beth? Can you do that for me?\"\n\nI went on this way for another several minutes before one of the ICU nurses came back to shoo us away.\n\nI called work the next day and told them I was taking an indefinite leave. Then I parked myself in the ICU waiting room. Sally got me in to see Beth a few more times over the next two days, but nothing much changed.\n\nOn the third day, after a tedious day alternately sitting in and pacing around the waiting area, Sally came rushing in.\n\n\"There's news!\" she said. \"Follow me!\"\n\nI hurried after her. Sally spoke in quietly urgent tones to the nurse at the desk, then motioned me to follow her into the ICU. After putting on our masks, we nearly ran over to Beth's bed. Sally pulled the curtains closed around us and walked over to Beth. \n\n\"Are you with us, sweetie?\" she asked gently.\n\nBeth opened her eyes and took us both in. She still had on her breathing mask, and she tried to reach up to pull it down, but couldn't. Sally pulled it down for her.\n\n\"Just for a few seconds sweetie, just for a few seconds.\"\n\nBeth's eyes fixed on mine.\n\n\"You're here,\" she said so faintly, I almost couldn't make out her words.\n\n\"Yes, of course I'm here,\" I said, coming over to her. \"Of course I'm here!\"\n\nShe gazed at me a few seconds longer, then closed her eyes and sank back into her pillow.\n\n\"You're here,\" she said one more time.\n\nSally gently restored her mask and said, \"We'll be back. Now you just rest.\"\n\nBeth's recovery from that point on was rapid. Another day later she was back in a regular room, and a week after that she was released. I visited her every day until she was back in the small apartment she rented in a quite frankly not great part of town and we had lunch or dinner regularly after that. \n\nBeth was able to resume part-time work about a month later and was working back to resuming a normal full-time schedule towards the end of the year. Our relationship had evolved to that of very close friends. Some unspoken agreement-or perhaps it was a barrier-between us kept our relationship platonic. I yearned for something more, but knew that the time wasn't right.\n\nAt Thanksgiving I got to meet her step-son, Bernie, who was a delightful young man. Much more mature than I was at his age, I decided. Beth's parents had both passed away some years ago, and her one sibling, a much older sister, lived in Florida. Bernie was the only family she really had, at least nearby.\n\nAs Christmas approached, I sensed an increasing distance, almost moroseness, from Beth. I thought perhaps the holidays might have been particularly difficult for her, given how life had tossed her around over the last several years. I tried to think of doing something that might lighten her spirits when I recalled my good old friend Charlie, whose family owned a rustic cabin in New Hampshire in the area of the White Mountain National Forest. Val and I had spent a few days there with him and his then wife one winter. It was a small but cozy place tucked in the woods and would make a terrific getaway. \n\nI asked Charlie if it would be available anytime over the holidays. He said he would check with his family and came back with good news.\n\n\"It's available for four days right after Christmas,\" he told me. \"It's yours if you want it.\"\n\n\"Thanks pal!\" I thanked him. \"I owe you one!\"\n\n\"Hate to break it to you my friend, but you owe me three or four by this point. But don't worry, I'll collect later.\"\n\nI approach Beth about the idea. Could she get off that many days in a row?\n\n\"If I work Christmas day and New Year's, I can probably manage to trade my shifts. Let me see what I can do.\"\n\nEventually it was all worked out and on the morning of the 26th, we were on our way north. The cabin was as I remembered-charming and private. Recent snows truly made it look like a winter wonderland.\n\nI had brought provisions and we made a light lunch once we got unpacked, then went for a long walk along a quiet country road. There were snowshoes among the permanent store of equipment Charlie's family kept at the cabin, and I had planned a little snowshoeing expedition the next day to a nearby patch of national forest.\n\nThe cabin was a two-bedroom affair with a large central room featuring a fireplace faced by a plush leather couch liberally sprinkled with pillows and throw blankets. I made no presumptions. I threw my bag in the smaller bedroom and got Beth set up in the larger one. That evening we had a nice dinner with wine, chatted comfortably by the fire until we got tired, and went to our respective rooms. \n\nThe snowshoeing adventure the following day was a complete success. Beth took to snow like a squirrel to nuts. Her cheeks flushed a healthy pink and the sunlight reflecting off the snow gave her eyes an animated gleam. A smile never left her lips.\n\nWe treated ourselves to dinner at a nice restaurant in a nearby town and then went back to the cabin. I made a roaring fire and served up two big mugs of hot chocolate to cap our day. Beth snuggled up under a blanket at one end of the couch and sipped her chocolate.\n\n\"Do you know what this reminds me of?\" she asked, raising her mug.\n\n\"A certain ski trip, I do believe,\" I answered.\n\n\"And a certain secluded corner of a lodge deck,\" Beth added.\n\nI smiled in remembrance. \"You were such a rascally little tease back then.\"\n\n\"I just liked making you happy. Nothing teasing about that.\"\n\n\"And you did. You made me very, very happy.\"\n\nBeth was quiet for a long while, sipping her chocolate and gazing at the fire.\n\nFinally she spoke again.\n\n\"What happened to us, Robbie?\"\n\nI stared into my mug, hoping to find a good answer there, but none surfaced. This was the moment that I knew was coming, the moment that I dreaded. But I also realized that this was the bridge that we had to cross. On the other side lay a treacherous landscape of memories, feelings, hurts, and betrayals. If we had any hope of a future together, a future that I had come to realize I fervently desired, we had to find a way to navigate around those obstacles together.\n\n\"I wish I had an easy answer for you, Beth,\" I answered finally, my face burning with shame. \"But I don't. I can tell you one thing, and I hope you can forgive me for it, but it was all my fault. You did everything you could to keep us going. I was the one that . . . well, that just let things go.\"\n\n\"Didn't you love me?\" she asked.\n\n\"Of course I loved you! You can't doubt that!\"\n\n\"Then why . . . I just don't understand why you gave up so easily.\"\n\nI tried to formulate a reasonable sounding response, something that made my actions appear rational, understandable. But there was nothing rational about it.\n\n\"There may be reasons, but I want you to know that I understand they're not excuses.\"\n\nI paused before going on. Beth clutched her mug of chocolate, alternately looking at me and intently studying a spot on the blanket covering her legs.\n\nI plunged forward.\n\n\"Back then, when I was with you, you were my whole world. I couldn't imagine wanting anything else than to be with you. But once you left, left for a home all the way across the country, I had difficulty keeping that clarity of feeling. There was a world in front of me, and it called me. I just lacked the . . . I don't know what to call it-the imagination, the determination-to keep things going over such a long distance. I was young, Beth, and I wasn't a mature youth. I'm sorry I failed you. I'm sorry I hurt you. I have regretted it many times since, believe me! But it was nothing inherent in you, nothing wrong with the way I felt about you. I was just . . . flawed, weak.\"\n\nBeth continued to study her spot. I anxiously let her process what I had said, hoping she wouldn't just throw her mug of chocolate in my face and demand to be taken home.\n\nShe finally spoke.\n\n\"The way I felt about you-I had never felt that way about anyone before, have never felt that way about anyone.\" she said. \"It just . . . it just . . . I felt abandoned. I thought it was a fault in me.\"\n\nHer eyes brimmed with tears, as did mine in sympathy.\n\n\"No, Beth. Nothing could be further from the truth! The memory of you, the memory of us, in that time, has always been the ideal that I have used to measure my life against since. And as I've gotten older, I've come to realize how rare it is to find what we had together. I was a fool to let that slip from my fingers. A young fool, but a fool nonetheless.\"\n\nI leaned forward and gathered one of her hands in my own. She set down her mug and grasped my hands in return.\n\nI looked her in the eye. \n\n\"Can you find a way to forgive me?\"\n\nBeth gazed at our hands for a long while, then met my eyes.\n\n\"Since you've come back into my life, you've been a like a shaft of sunlight in my darkened room. But I've been afraid to believe that we could find what we once had. I'm afraid to open that door.\"\n\nTears streaked her cheeks. She reached under the blanket and fished a tissue out from somewhere. She dabbed her eyes and blew her nose.\n\n\"You know, we've never really talked about it, but Sally told me what you did to track me down. I didn't know you had so much of the detective in you!\" She laughed quietly, then blew her nose again.\n\n\"Once I had found you-well, sort of found you-I wasn't going to let you slip away again,\" I replied. \"I just couldn't!\"\n\n\"You really wanted to find me that badly?\"\n\n\"I didn't know how badly I wanted you back in my life at first, but I just couldn't let go of the possibility . . . The possibility of what we had, and maybe could have again.\"",
        "Beth let the tissue drop to the floor. Her eyes were dry now.\n\n\"Kiss me, Robbie.\"\n\nI gathered her into my arms and hugged her to me tightly. Then I took her face in my hands and looked her in the eye.\n\n\"I love you, Beth.\"\n\nWhen our lips met, a flood of feelings and memories washed over me. The taste of her mouth, the smell of her hair, the gentle cushion of her lips-these sensations transported me back twenty years to our first kiss in the bracing cold of a moonlit Reno night. My pulse raged and sparks seemed to dance over my skin. I could imagine no moment but now, no desire but to bond with this beautiful person holding me.\n\n\"Then love me, Robbie, and let me love you. Like we were meant to do!\"\n\nShe began unbuttoning my shirt and soon our garments were strewn along the couch and floor. I pressed her breasts to my chest while my hands explored her body-not the firm young body I had experienced as a callow youth, but every inch of it desirable and aching to merge with mine.\n\nOnce we had really heated up, Beth pushed me away from her slightly, which caused me immediate alarm.\n\n\"What is it, Beth?\" I asked anxiously.\n\n\"You know, back when we were eighteen, a couch to make out on seemed a luxury. But now that we're all grown up and all, don't you think we can find something better?\"\n\nI laughed in relief, leapt off the couch and scooped her up in my arms. She shrieked and kicked her legs in the air. Then she wrapped her arms around my neck and whispered huskily in my ear, \"Robbie, you he-man!\"\n\nI deposited her at the foot of her bed and pulled back the covers. She leapt in and I dived in after her. Our bodies entwined, my hands fondled and explored her breasts, still sensual and alluring twenty years later. As I caressed her neck and shoulders, however, I felt a noticeable scar on her upper right chest, just below her shoulder.\n\nSensing the hesitation in my ardor, Beth spoke.\n\n\"You feel the scar?\"\n\n\"I thought the only surgery you had was abdominal. Sally said you only had chemo for . . . for your other cancer.\"\n\n\"That's partly true,\" she answered. \"You're feeling the scar from my port.\"\n\n\"Port?\"\n\n\"When you do chemo, they put in a port. It's like a permanent IV connection that's just under the skin. When they're reasonably sure they won't need it again, they remove it, but it leaves a scar.\"\n\nBeth shivered and I could feel, rather than see, a cloud come over her face.\n\n\"I'm afraid you ended up with a pretty used model,\" she said.\n\nI kissed her tenderly.\n\n\"The model I ended up with is the most wonderful woman I can conceive of and I count myself the luckiest man alive because of it.\"\n\nBeth kissed me, also with great tenderness, and pulled me close. Our bodies fit like two puzzle pieces. Perhaps there were still a few misshapen edges left from trying to fit where we didn't belong, but I could already feel our souls melting in to fill the gaps.\n\nBeth hugged me close, then whispered, almost inaudibly, into my ear, \"Take me, lover.\"\n\nAnd I did.\n\nEpilogue\n\nWe had a July wedding. We managed to keep the ceremony itself small and simple, but the reception got out of hand quickly. We didn't let it bother us, though. Nothing much did.\n\nWe risked an outdoor venue for the reception and were rewarded with one of those breathtakingly beautiful New England summer days with just a few puffy clouds floating across an impossibly blue sky, and just when you thought it was a getting a bit too warm, a cool, salty, tangy breeze would waft in from the east.\n\nThe grounds were open and grassy with trees irregularly dotting the landscape. Charlie (who else?) had found the place. He came to congratulate us with his new girlfriend-no, fiance- in tow. She, Kathy, was a pediatric nurse from the hospital, a friend of Beth's. She and Charlie were now inseparable.\n\nAfter they had offered us their congratulations, I pulled Charlie aside. Gesturing at the fairytale scenery around us, I said, \"Charlie, I'm losing count of how many I owe you. I'm afraid that some years from now, you're going to walk into my house and demand my firstborn for payment.\"\n\nWe chuckled, but he replied, \"Rob, you don't need to worry about that. Your debt is washed clean and I think I'm now the one in the red.\" He glanced over at Kathy and Beth, who were talking and laughing with champagne glasses in their hands.\n\n\"Let's just call it even, what do you say?\" I suggested. We gave each other a brief man hug, and Charlie went to retrieve his new love.\n\nWe had a traditional multi-tiered wedding cake, but Beth had secretly made arrangements for a groom's cake. It was a large, chocolate sheet cake, but decorated to look like a track, with light brown frosting in an oval around the perimeter for the track and green frosting for the infield. There was even a high-jump and a long-jump in there!\n\nI was exclaiming over the clever decoration when who walks up but Maureen and Paul! How Beth tracked them down I will never know. I don't think it involved bartenders, though. Maureen and Paul lived in Salt Lake City and had three beautiful children. Paul was as talkative as ever, but Maureen made up for his reticence.\n\nAnd speaking of bartenders, we invited Mel, who, to my surprise, actually made an appearance. He didn't stay long since he didn't really know anyone there, but we welcomed his brief presence. I didn't know it at the time, of course, but I found out later that he brought us a present: a case of Johnny Walker Black! I didn't have much need of the stuff anymore, but I could probably find uses for it eventually. Come to think of it, I had probably drunk about that much in my years of frequenting his bar, so, in a way, I'd already paid for it.\n\nWhen nurse Sally greeted us, she gave Beth about the longest public hug I've ever witnessed. Sally gave me a brief hug, also. It was the first overt display of affection she had ever shown me, apart from the dark days when I was visiting Beth in the hospital. After releasing me from her iron grip she looked at the two of us, then winked at me. \"I liked him from the moment I first saw him,\" she asserted. When she had walked out of earshot, Beth and I gave each other a silent well-what-do-you-know look with raised eyebrows and the corners of our mouths downturned, then broke out in uncontrollable laughter for a good five minutes.\n\nPerhaps my favorite moment of the afternoon was when Amy, an old sorority sister Beth hadn't seen in years, appeared. The two of them squealed and stamped their feet, then hugged and jumped up and down. She looked like a schoolgirl again. It seemed to me at that moment that the weight of the world had finally released its burden from her shoulders and she was free to inhabit the lightness and joy that was her true nature.\n\nBeth brought Amy over to introduce us.\n\n\"Ames, I'd like you to meet my husband, Robert Stearns.\"\n\nShe said it with such pride and formality; such a contrast to her girlish antics just seconds ago.\n\nTurning to me, she said, \"This is my dearest friend from college, Amy.\"\n\n\"Well, any friend of Beth's is a friend of mine,\" I said, extending my hand.\n\n\"So pleased to meet you, Robert,\" she said, pumping my hand.\n\n\"Please,\" I replied. \"It's 'Robbie' to my friends.\""
    ],
    "authorname": "thezinger",
    "tags": [
        "true love",
        "love",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/reflections-from-the-snow-ch-03"
}