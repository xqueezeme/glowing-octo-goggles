{
    "title": "How I Married a Porn Star - Finale",
    "pages": [
        "Author's Note\n\nThis is the final chapter of \"How I Married a Porn Star\". I had a great time writing this story and I hope you've all enjoyed it.\n\nFew things though, just on the off chance that someone in the adult industry reads this, or even one of the women named in the series, I want to make something clear. I have nothing but respect for your work and art. This story is meant to be a fantasy only. I want to make clear that of course, most adult actors don't fall into orgies and whatnot. This was all meant for fun and fantasy. If any of you were offended, please accept my apologies.\n\nFor everyone else, enjoy the finale!\n\n*\n\nSaturday Morning\n\nI woke up still laying on my back, which never happens. I looked down and saw Cassandra still laying in the position she had nestled into last night. I stayed still so as not to wake her and just kept admiring her. She looked angelic as she laid on my chest, her breasts crushed against me.\n\nI knew had strong feelings for this woman, stronger than I'd felt before. It wasn't just that she was hot, we were really connecting as people, and she seemed to really like me too. But I also felt that with Sara last night as well.\n\nAlso, she was a porn star. How would I feel knowing that when she went to work another man would be doing unspeakable things to her? I'm not dense enough to believe that it translates to actual affection, but that doesn't mean that it wouldn't affect me.\n\nThen I realized I was getting way ahead of myself and stayed in the moment, sighing contentedly. This was apparently enough to wake her up. Her eyes fluttered open and she realized where she was. She looked up at me, smiled and gave me a loving kiss on my chest.\n\n\"Morning,\" she said with a broad smile.\n\n\"Good morning,\" I said returning her smile.\n\n\"I can't remember sleeping so well,\" she said snuggling up tighter to me. \"How about you?\" I told her about my sleeping on my back and she smiled even more. Then the look she was giving me turned a little more serious.\n\n\"Can I talk serious with you for a minute?\" she asked me. I nodded my head in acceptance & nervousness. \"Sean, I'm gonna be honest with you. I've never felt about anyone even a fraction of what I feel for you.\" I was stunned into silence. \"I'm probably scaring the shit out of you right now cause I know we just met, but I felt like maybe you felt somewhat like that with me too.\" \n\nI could tell just by looking at her face that she was very nervous saying what she was saying.\n\n\"If I'm wrong, just tell me to shut up and I'll drop the whole thing because I'm really scared right now that I'm blowing any chance at something, and I don't want to do that and...\"\n\n\"Cassandra,\" I kept repeating her name until she stopped rambling. \"I was thinking the same thing before you woke up,\" I admitted. If the sun wasn't shining through the window, her smile would've done it.\n\n\"Really?\" she said in a very excited voice.\n\n\"Yeah,\" I continued. \"I know its weird, but I've really felt like we vibe well. You're smart, funny, beautiful, and really fun to be around. I just didn't know you felt that way about me.\"\n\nShe started kissing me all over my face, practically smothering me. At a certain point, it was like she was wearing me like a coat. After a minute, she finally let off.\n\n\"Sean, you have no idea how happy that makes me!\" she said beaming. \"I thought I was going crazy and was the only one who felt this! So, are you serious?\" she asked me still happy, but with concern as well, \"do you really want to give this thing a try?\"\n\nThere it was. The question I had asked myself ten minutes previous was now staring me in the face. What the hell was I gonna say? Was I really going to be ok dating someone I knew was having sex with other guys? We needed to really talk this out if she was serious. Before I could speak, Cassandra spoke back up.\n\n\"Oh and just so you know,\" she said excitedly, \"I am totally done with boy/girl scenes.\" She said it so matter of factly, I was shocked. \"The only real cock I'm gonna have in me is yours.\"\n\n\"Really?\" I replied, \"are you sure about this?\"\n\n\"Yeah, I've been thinking about going strictly girl/girl or solo for a while now, and this is the final straw. I still do wanna perform because the money is good and I do feel so empowered when I do it, but it'll only be by myself or with another girl from now on. I promise!\"\n\n\"I mean, that's your decision,\" I stated. \"If you wanna keep performing, it wouldn't be right if I tried to stop you.\"\n\n\"That's so sweet!\" she said giving me another kiss. \"Plus, it'll have great benefits for you too.\" I raised an eyebrow in confusion, and she snuggled up closer. \"Well of course I'm gonna share the girls with you. I'm not a complete hypocrite. If I get to fuck 'em, you should too if you and they want.\"\n\nMy dick was rising at our conversation.\n\n\"Besides,\" she said sliding up my body, \"I know some of the girls want a run at you. I kinda wanna show off what's mine now.\" Now my dick was really hard, and Cassandra noticed.\n\n\"Wanna preview?\" she asked as if she needed an answer. She immediately started sucking on my dick with perfection. I indicated to her that I wanted her to swing her pussy over and we were soon 69ing on the bed. Her pussy scent was strong but good as clearly, she was deeply aroused.\n\nShe had my dick down her throat and bobbed her head furiously on it, clearly loving the sensation. I licked her slit all over, teasing her lips and clit. I even licked her asshole which made her shove herself harder against my face.\n\n\"You like my tight little ass, huh?\" My answer was continuing my all over assault. \"Mmm, I really love that.\"\n\nA few more minutes of this and she got out a condom, climbed aboard my dick reverse cowgirl, and rode me hard and fast. Not so much love making, more of an itch scratching. I took a chance and laid a light smack onto one of her ass cheeks.\n\n\"That's it, Sean! Smack my dirty ass! Smack it while I ride your huge cock!\"\n\nI grabbed hold of her hips and began thrusting hard into her making her practically scream.\n\n\"FUCK!\" she managed to grunt out, \"pound that pussy!! Oh GOD!\" By now, she was back as close to me as possible as she kept riding. I could reach up and squeeze her tits as she suddenly came hard.\n\n\"OOHHH FUCK!!!!\" as her pussy gripping my cock so I could feel every spasm.\n\nI withdrew from her as we changed over to missionary, getting in between her legs when she stopped me.\n\n\"Do you trust me?\" she asked.\n\n\"Yeah,\" I replied slightly confused.\n\n\"I trust you,\" she said full of emotion then looked down at my cock. \"Take it off.\"\n\nI looked down and saw the condom and quickly looked back at her.\n\n\"I'm on the pill and was tested 2 days ago, I wanna feel you raw in me.\"\n\nI hate to admit it, but when she said it, my cock got even harder. I took the condom off and sunk my dick deep into her. It felt like a tight, velvet glove was welcoming me.\n\n\"Ungh!\" Cassandra responded to my invasion. \"That feels so much better,\" she said kissing me deeply. I decided I wouldn't fuck her this time, pure love making. \n\nWe mauled each other as I gently thrust inside of her, letting each other know that this was a tender act. Her hands made their way to my ass where she got a tight grip on me and tried to modulate my pace.\n\nI started sucking on her neck which I quickly found out was a major turn on for her and got a quick response.\n\n\"Oh God!\" she moaned. \"Keep doing that! Oh, fuck you feel so good!\"\n\nWithout the condom on, my dick could actually feel her getting wetter as I kept going. A few minutes, more and the box was unlocked again.\n\n\"I'm cumming!! Oh GOD! You make me cum so hard!\"\n\nHer pussy clamped down on me and I knew I couldn't last any longer. Understanding she was on the pill, but not having gotten permission, I decided to pull out and came on her stomach. She soon spooned some up with her fingers and gave it a taste, while rubbing the rest of it on her body.\n\n\"That was great, Sean,\" she said snuggling back up to me.\n\n\"You were great,\" I countered.\n\n\"I know...\" she said as almost a throw away comment that made me chuckle. \"You could've cum inside me, you know,\" she said softly into my ear.\n\n\"I didn't want to be rude.\"\n\n\"Aww, you're too sweet,\" as she leaned over and kissed me. \"You can creampie me whenever you want though.\" \n\nJust then my phone rang. I rolled my eyes assuming it was Chet but found that it was actually Kevin. Cassandra saw it as well and indicated I should answer it.\n\n\"Hello?\"\n\n\"Sean! Good morning to you! How's it going?\"\n\n\"Great,\" I told him honestly, while looking at my new girlfriend. \"You?\"\n\n\"Fantastic, but busy. Look, I talked to Kelly last night. Total misunderstanding! I completely forgot to tell you about the party. Gonna do some gambling around 7 then head up the suite. You in?\"\n\nCassandra was listening on the call and nodded her head.\n\n\"Sure, but do you mind if I bring Cassandra with me?\"\n\n\"Of course not! Shit! I was supposed to call her too! I'm so far behind. Look, I'll see you around the blackjack tables here around 7, ok?\"\n\n\"See you then, good luck!\"\n\n\"Thanks buddy!\" as he hung up.\n\n\"I'm sure all our group will be there too, but if I see anyone through the day, I'll mention it.\" She looked at the clock on the table. \"Guess I should shower and go back to my room.\"\n\n\"Or we shower here and have breakfast together?\" Her face lit up yet again.\n\n\"Dating for less than 12 hours and already full of such good ideas,\" she said giving me a kiss.\n\nWith that, we got up and took a quick shower, ensuring that all our important parts were clean. I got dressed and she threw on what she had last night so we could get to her room. Amazingly, we saw and encountered no one in the hallway on the way to her room. She quickly changed into attire for the convention, and we headed down.\n\nI asked if she wanted to have breakfast in the VIP section of the convention, mentioning that I'd seen a brunch on there. She said that would be perfect and we headed toward the convention center.\n\nOf course along the way, we had to run into Chet.\n\n\"Dude! There you are! I haven't seen your ass all weekend. You coming to the breakfast? Some of the dudes are hitting up the Denny's before the convention.\"\n\n\"Nah, you go ahead,\" I said as nice as possible. \"I got something else planned.\"\n\n\"That's cool, dude. Do your own thing.\" Then he saw who was next to me. \"HOLY SHIT! You're Cassandra Calogera!!\"\n\n\"Chet! Keep it down huh?\" I cautioned him.\n\n\"Oh my fuckin' God, you are a goddess!\" Chet continued.\n\n\"Thank you,\" she said reservedly.\n\n\"Sean, how did you get hooked up with her?\" Chet asked rather dismissively. I was getting angry, and Cassandra could see it in my eyes.\n\n\"Well, I am his girlfriend,\" Cassandra said flippantly. Chet's jaw was on the floor. \"We should get going,\" she added pulling me along.\n\n\"See you later, bud!\" I said waving to him, while he still had a shocked look on his face. \"You enjoyed that, didn't you?\" I asked once we got to our table.\n\n\"Didn't you?\" she replied with a smirk.\n\nWe ordered and had a lovely breakfast. We talked about dating and long distance and how it would all work. Every word seemed to make Cassandra more excited about the prospect of us being together.\n\nOnce breakfast was done, she needed to head to the convention center for her last day. I gave her a kiss and sent her off, smiling to myself. At that point, I really didn't want to go to the convention. It seemed like it had all been too much overload. I decided to walk around the casino for a bit, played a few games, and didn't win a thing.\n\nI walked around the strip for a while, and saw some of the sights, hotels and whatnot. Mostly I was lost in a daze about all the things that had happened to me this weekend. Sex with porn stars? Parties? Dating a porn star? This was getting to be insane.\n\nCassandra was texting me through the day. I told her I wasn't at the convention and had decided to walk around. She told me that she missed me and that she would meet me at the casino later. I also got phone calls from Sara, Gianna, Sunny and Roxy (who I didn't even give my number too) all making sure I would be there at 7. I reassured them all.\n\nSomehow the day flew by, and before I knew it, it was time to head back and get dressed. I took a shower and got as cleaned up and looked as nice as I was gonna look. I had texted Kevin and asked about attire. He stressed that button down and jeans would do fine. \n\nI wandered down to the casino around 7 and headed for the blackjack tables. I saw Kelly Kline and Kelly Madison with their respective spouses around one table. I also saw Roxy and Nautica who gave me a wave and a smile. Suddenly, someone came up on me from behind and wrapped me in a hug.\n\n\"Miss me?\" I heard from Sara whose grip on me seemed to be tightening.\n\n\"Of course,\" I said while trying to wriggle my arms free. She placed a kiss on the back on my neck.\n\n\"I didn't see you today,\" she told me while still having me wrapped up. \"Where were you?\" I told her that I'd decided to walk around for a bit. \"Smart,\" she said. \"Rest up for tonight...\" she added while flicking her tongue at the back of my neck.\n\n\"There you two are,\" Cassandra said coming up, seemingly unfazed with what Sara was doing to me.\n\n\"Hey babe!!\" Sara said as they wrapped up in a big hug, kisses and all. Cassandra then came over to me and kissed me square on the lips.\n\n\"You two are so cute,\" Sara said with a beaming smile on her face.\n\n\"You two looked pretty cute yourselves,\" Cassandra countered.\n\n\"Hey!\" Roxy said as she came over, smiling and dressed to party. She kissed the girls lightly and gave me a big old kiss. \"Miss me?\"\n\n\"Clearly,\" Sara said pointing to my crotch and a slight chub. Roxy giggled.\n\n\"I'll have to help you with that later,\" she said with a wink. Cassandra sidled up to me closer.\n\n\"She's a good helper,\" she said loud enough for everyone to hear and laugh. I started thinking, 'what the hell I was in for tonight?'\n\n\"There's my bitches!\" Gianna said as if she needed an introduction. She kissed everyone and just shoved my face into her cleavage. She then released and kissed me. \"Heaven, isn't it?\"\n\n\"Comfortable, definitely comfortable.\"\n\nShe laughed and slung an arm around me.\n\n\"So we gonna win some fuckin' money tonight?!\"\n\n\"Absolutely!\" Kevin said greeting everyone. \"Let's get some blackjack going around here!\" Kevin handed chips to everyone, and we all hit the tables. I found a $10 table with Sara and Cassandra flanking me. I lost about $20 bucks after 30 minutes, Cassandra won $30, and Sara broke even. The entire floor could hear Gianna when she won or lost at the $20 table. Guessing by the happy and sad swearing, she was probably down about $100.\n\nI decided to try the craps table with some of the chips that I got from Arthur, Sara and Cassandra joining me with Sasha finally showing up and Roxy close behind. Apparently, I'd finally found my game, cause I left up about $400, with most of the girls winning too. By then, Kevin and Kelly Madison were all trying to corral everyone up to the suite so we could eat and start the party.\n\nWe all crammed into the private elevator, Kelly Kline and Richard, Sunny, and Hannah joining all of us. We exited into a luxurious suite we later learned Kevin got from Arthur. It made the one from 'The Hangover' look like a Motel 6. Huge balcony, hot tubs, full bar, and Allen Testeverde sent some of the girls from his club to act as hostesses. I looked around and figured out there were about 30+ women here and maybe 5 guys. \n\nSome of the girls started dancing, others went for straight for the bar while I went for the food, a might peckish from all the walking around during the day. A few wings and shrimp and I felt better. Suddenly, Cassandra was there handing me a drink with Sara quickly coming behind with their drinks.\n\n\"Oh, thanks,\" I said appreciatively.\n\n\"Of course!\" Cassandra said batting her eyes a bit.\n\n\"We gotta take care of you,\" Sara said with a wink. I glanced over at Cassandra who just smiled sweetly too. There was a weird vibe that I didn't quite understand.\n\n\"HOT TUB!\" Gianna screamed out seeing it on the secluded balcony. \"We gotta hit that shit!\" she declared as she started stripping.\n\n\"Wanna go in?\" Cassandra asked me.\n\n\"Sure,\" I said as her and Sara let me out there.\n\nThe hot tub was huge and looked like it could easily accommodate 20 people. Kevin was in there with Roxy and Sasha, Kelly Madison and Ryan, Kelly Kline and Richard. Gianna then came out completely naked and got in. It wasn't till then that I realized everyone in the hot tub was nude.\n\nI looked at Cassandra and Sara and they started stripping out. Sara looked over at me as she was taking off her bra.\n\n\"Come on, Sean,\" she said almost seductively.\n\nI took off my clothes and folded them up as neatly as possible, placing them near the mess of clothes that Gianna had left in her wake. Cassandra and Sara were now nude as we walked over and got in the hot tub. Gianna commented on my naked state as only she could.\n\n\"Damn, boy!\" she said looking at my genital region. \"You weren't kidding, Sara!\"\n\nThough no one could tell with the heat of the hot tub, I could feel my face getting flush. Cassandra just leaned against me and smiled.\n\n\"Isn't it though?\" she said slyly.\n\nThe three of us joined the rest in the hot tub, sinking into the waters. Cassandra and Sara were flanking me on either side and Kevin, Roxy and Sasha were directly opposite of us. Kevin was just smiling away.\n\n\"So Sean,\" he said with his arms around Roxy and Sasha, \"how've you enjoyed your first expo?\"\n\n\"It was definitely an experience,\" I told him earnestly. \"Unforgettable comes to mind.\" Kevin smiled at that.\n\n\"Good!\" he said with confidence. \"I think it was our best yet! High marks to try and beat next year. Can't wait for you to see that!\" I looked at him curiously. Kelly Madison looked at me and pipped up.\n\n\"Oh, you have to come next year,\" she insisted with Ryan and everyone else agreeing.\n\n\"Absolutely!\" Kevin said. I was stunned at the graciousness of it all and nodded at him in both acceptance and appreciation. He just smiled.\n\n\"So, Sean,\" Roxy said, looking at me with a smile, \"did we all live up to your expectations?\" she said with a grin.\n\n\"We?\"\n\n\"Porn stars,\" she clarified.\n\n\"Absolutely,\" I said confidently. \"Everyone's been very nice and welcoming.\"\n\n\"I bet,\" she said with another grin. Sara spoke up looking at me and Cassandra.\n\n\"We certainly did our part!\" she said with a smile. \n\n\"Absolutely,\" Cassandra said concurring. Thanks again for the hot tub for hiding my flushed face. I then noticed Sara and Cassandra both rubbing up on me.\n\n\"FUCKING ASSHOLE!\"\n\nWe all turned and saw Tera Patrick enter the room and come out to us. It was obvious she'd been crying.\n\n\"I'm fuckin' done with him!\" she said distressed.\n\n\"Are you ok?\" I asked her with concern.\n\n\"Fuckin' Evan! He's been 'auditioning' women all weekend! I caught him ass fucking some webcam slut in our room!\"\n\n\"Oh, babe,\" Kelly Madison said getting out of the spa. \"I'm so sorry!\" Kelly wrapped her in a hug even though she was dripping wet. Tera didn't seem to care as she cried into her friend.\n\n\"Is there anything we can do?\" Kevin asked, also concerned.\n\n\"Two things,\" she said getting her act together it seemed while wiping away some tears, \"get me a drink and let's party!!\"\n\nAll the girls cheered, and Roxy hopped out to get the girl a drink. Even Sara and Gianna seemed to feel sympathy for her. Tera took a hard pull off the drink and relaxed a bit. She then looked at all of us in the spa.\n\n\"Do you mind if I join you guys?\" she asked somewhat sheepishly. Everyone enthusiastically agreed and Tera stripped out of her clothes, joining us in the spa. She sat right next to Sara.",
        "\"Guys, I am so sorry for how I acted earlier this week,\" looking at Sara, but clearly addressing everyone. \"I've been so stressed dealing with this nut fuck that I acted like a total bitch. I really hope you can all forgive me.\"\n\n\"Of course,\" Sara said genuinely hugging Tera, making a very erotic sight as their boobs pressed into each other.\n\n\"Gianna, I owe you an apology more than the rest,\" Tera said hesitantly. \"Evan really screwed you over and I didn't do enough to stop it. I'm so sorry,\" she said again, now clearly in tears.\n\n\"Fuck that guy!\" Gianna said loud and proud. \"We're here, we've got booze, and some real fuckin' men!\"\n\n\"Fuck yeah!\" Nautica said, finally coming out and joining us, slipping out of her clothes and sitting over near Richard and Kelly Kline. Sara broke the hug with Tera and Tera looked and saw me.\n\n\"Guess I look pretty pathetic, huh?\" she said trying to be self-effacing.\n\n\"Pretty,\" I said, \"not pathetic.\"\n\n\"Thanks, Sean,\" she said, clearly appreciating the complement. \"You're a sweet guy.\"\n\n\"The best!\" Sara and Cassandra said simultaneously. I looked back and forth at the two and they just smiled and shrugged. I took another hit off my drink.\n\n\"It's a good thing I don't have an ego,\" I quipped, making both girls smile.\n\n\"We'll fix that before the evenings out,\" Cassandra said with a grin.\n\n\"Absolutely,\" Sara concurred.\n\nI was now completely confused when Kevin spoke up.\n\n\"Nothing wrong with a healthy ego as long as you don't turn into a complete narcissist.\"\n\nI nodded in agreement as Sasha crossed the spa over to us.\n\n\"So Sean, how was partying with porn stars?\" she asked boldly. She was trying to get me embarrassed and I wasn't taking the bait.\n\n\"I don't know,\" I replied. \"When will the 'stars' get here?\" I said looking around. Laughs and splashes ensued from all sides.\n\n\"You are such a brat!\" Cassandra declared while kissing me on the cheek. \n\n\"But he's our brat,\" Sara opined, smiling at Cassandra. \n\nI was noticing a weird vibe going on between Cassandra and Sara, but I had no clue as to what was driving it. I finished my drink and Sasha immediately offered to get me another, leaping out of the jacuzzi to head to the bar. She quickly returned with my drink, kissing my cheek and practically shoving her onion shaped ass in my face as she sat back down.\n\n\"Time to get the fuckin' shots going!\" Gianna declared. I was about to object when Tera spoke up.\n\n\"Goddamn right! I need it!\" she declared as she got out of the spa as well. \n\nEveryone else seemed to be getting out as well, wrapping themselves in towels as they went back into the suite.\n\n\"Come on,\" Sara said to me and Cassandra as she threw towels at us.\n\nWe got out and joined everyone inside. Gianna was getting the shots ready, predictably not bothering to wear anything once inside. Everyone else was in a towel of some kind either up top or around their waist. Gianna handed everyone a shot and toasted.\n\n\"To porn stars and getting fuckin' wasted!\" she declared. Every gulped down the shot and started sitting on the couches, not bothering to recover their clothes. I managed to get myself a club soda with no one watching to keep my wits about me. If left to Gianna's devices, I'd be drunk within a half hour. I joined Cassandra, Sara and Roxy on the couch.\n\nEveryone talked about different stories from over the weekend. Creepy guys, girls offering 'extra services' to various people, and vendors trying to get girls to do live demonstrations. Even with all that, everyone agreed that it was the best expo they'd been to yet. I noticed Sasha and Nautica getting closer and closer to Kevin on the couch, placing their arms around him.\n\nI also noticed that Cassandra and Sara did the same, Roxy also getting closer to us. It was definitely a weird vibe.\n\nGianna apparently sensed it to as she took over the music player and started with loud party music.\n\n\"Time to fuckin' party!\" she said starting to dance around, still completely naked. The girls adjusted their towels and joined her, allowing for one hell of an erotic sight. Kevin came over and sat next to me.\n\n\"Doing ok?\" he asked warmly.\n\n\"Yeah,\" I said toasting him with my drink. \"Thanks for having all of us over.\"\n\n\"It's my pleasure!\" he said gregariously. \"I love these girls and it's nice to see them have them having a good time.\"\n\n\"Yeah, they're pretty great,\" I said in agreement.\n\n\"Just relax and enjoy!\" he said on his way over to the bar, giving me a paternal pat on the back as he left.\n\n\"Sean!\" Cassandra bellowed with Sara and Roxy close by, \"come dance with us!\"\n\nI got up, adjusted my towel, and joined them. With all the moving around, some of the girl's towels had fallen, no one bothering to reclaim them from the floor. I danced as best I could, but I'm a white Irish guy after all. All three grinded up on me, ensuring that their towel wrapped bodies were pressed as closely as possible.\n\nOnce she saw I was up, Gianna also came up on us, shoving Roxy's face into her bare breasts, Roxy giggling the whole time. Gianna grinded her large ass right up against my towel covered crotch definitely trying to get a reaction from me. It was working.\n\n\"Think I'm getting a rise outta Sean?\" she said to anyone listening.\n\n\"If you're not, you're not doing it right!\" Roxy said with sarcasm.\n\n\"I think it's working!\" Sasha said pointing to the slight tent coming from my towel. My cheeks went red again.\n\n\"We gotta see this shit!\" Gianna said, ripping off my towel. My erection was now exposed to all, and cheers and hoots filled the room. Even Kevin chuckled.\n\n\"That's better!\" Roxy said, wrapping her hand around it. \"Very nice!\"\n\n\"Isn't it?\" Sara said with a smile.\n\n\"Mind if I have a taste?\" Roxy asked.\n\n\"Go ahead!\" Cassandra said with ease. Roxy got to her knees and took a few licks of my mushroom head.\n\n\"Ooh, he tastes good,\" she said with a smile, looking more at Cassandra and Sara then myself. Sara got on her knees now and took a few licks.\n\n\"He certainly does,\" she said with a smirk. Roxy then leaned over and started kissing Sara, her hands still wrapped around my dick. Cassandra then started kissing me, her full body being pressed against me. My head didn't know what to make of all this, but apparently my dick did, still rock hard in Roxy's hand.\n\n\"Let me have a taste!\" Sasha said loudly, down on her knees with Roxy and Sara. Sara stopped her and looked at Cassandra.\n\n\"Should we let her?\" Sara said with a smile toward Cassandra and a wink.\n\n\"Oh, I guess,\" Cassandra said breezily before resuming her make out session. The head of my dick then met with the back of Sasha's throat. 'So much for the little taste,' I thought.\n\nSasha was full-on face fucking me as Roxy and Sara played with each other and groped Sasha. Her deep throat skills were quite impressive, her tongue even managing to make contact with my sack. I opened my eyes a bit and noticed I wasn't the only one receiving attention.\n\nKelly Kline was going down on Richard, Kelly Madison was going down on Ryan, with Tera joining in and Kevin receiving happy time from Nautica and Hannah, who'd come out of nowhere. Cassandra must've sensed I was losing focus on what was going on as she whispered in my ear.\n\n\"Sasha's really good at giving head, huh?\"\n\nA frank admission on her part, but I knew how to save the situation.\n\n\"Not as good as others,\" I said softly so only she could hear. Cassandra smiled as she started to pleasure herself as she watched.\n\n\"Can I try him?\" Sasha asked Cassandra, again ignoring me from the picture. Sara got up and whispered something to Cassandra who nodded in agreement.\n\n\"I think Roxy should have first crack if she wants it,\" Cassandra said declaratively.\n\n\"Yes!\" Roxy shouted in victory as I was suddenly led to a couch, Sasha pouting a bit in disappointment. I was placed down with Sara and Cassandra flanking me on either side, Sara holding my cock straight up as Cassandra rolled a condom onto it. \"I've been waiting for this,\" Roxy said as she slid herself down onto me.\n\nHer pussy was tight, but not as tight as Sara and Cassandra's was. Even through the condom, I could feel how wet she was as she started on a steady riding pace. Cassandra moved behind her and seemed to be giving her a rim job as Sara fondled her breasts, encouraging me to do likewise.\n\n\"Oooh, he feels really good, guys,\" Roxy stated as she started riding harder. She was a smaller girl so I felt like I should just hang onto her while she started flailing on top of me.\n\nOut of the corner of my eye, I could see Richard and Hannah fucking, Kelly being eaten out by Hannah. I also heard groans coming from Kevin's direction, so I figured he was occupied by another girl as well.\n\nI was now officially in my first orgy.\n\nCassandra was still licking Roxy's backdoor, the spit from her efforts dripping onto my leg. Once Cassandra moved off, Roxy slid off and repositioned, taking me deep into her asshole.\n\n\"That's it,\" Roxy said while still riding. \"Fuck that slutty arse.\"\n\nShe was riding me just as hard as she had been when I was in her cunt. I then saw to my side that Sasha and Sara were 69ing, both seeming to enjoy the taste of each other. Cassandra had moved next to me and was both kissing me and playing with Roxy's pussy, causing an orgasm pretty quickly.\n\n\"FUCK!\" she said as her muscles squeezed and contracted, finally stopping her aggressive ride. She then gave me a deep kiss, her tongue aggressively stroking mine. \"That was great!\" she said as she started to slide off.\n\n\"My turn!\" Sasha said quickly, decoupling from Sara. Cassandra took off the condom I had and replaced it with a new one. Sasha then quickly climbed up and got on me with no preamble.\n\n\"Mmmm!\" she said once I was bottomed out in her, \"I likey!\"\n\nWith that, she started bouncing hard on me. At least Roxy had started off slow, but Sasha was fucking me like she had no time to waste. My hands grabbed her onion shaped backside as I was trying to hold on for dear life.\n\nRoxy had then moved over between Cassandra's legs and started to eat her out. Sara was making out with me, pressing her breasts as tight to my body as possible. Richard was now taking his wife from behind pounding her hard. Kevin was being ridden by Nautica with Tera was making out with Kevin. Ryan and Kelly were 69ing each other not far away.\n\nSasha must've noticed that I wasn't paying full attention to her, cause she pulled me into a kiss and decided to ride me harder.\n\n\"Fuck me, Sean!\" she said in between kisses, \"make me cum!\"\n\nI started thrusting harder into her while now noticing Hannah and Sara start to make out and fondle each other next to me. Sasha soon was howling in orgasm.\n\n\"YES! You're making me cum so hard!!\" as my condom covered cock was now coated in Sasha's juices. Sasha slid off me and gave me another kiss, also whispering her thanks as she went to the bar a tad shaky.\n\nBefore I could even process that, Sara handed Hannah another condom to replace the other, sliding it onto me. Hannah then climbed on me with a smile.\n\n\"My turn!\" she said before impaling herself down. She was riding me slow, her bountiful breasts swaying gently. I couldn't resist taking one of them in my mouth, sucking and nibbling on one of her nipples.\n\n\"Ooh, I like that,\" Hannah said softly. Cassandra apparently heard her and took the other breast into her mouth, Roxy still between her legs and Sara now eating out Roxy. Cassandra released Hannah's boob only when she came from Roxy's artful oral work and Hannah now shoved both her tits right into my face.\n\nIt's kinda hard to pay attention to anything else while Hannah Hilton has her tits surrounding your senses. After a few minutes, Hannah screamed in orgasm as she finally allowed me to breath and gave me a deep kiss.\n\nI managed to then look around to see Gianna now eating out Cassandra and Sara scissoring with Roxy. Sasha was now being fucked by Richard while Tera and Kelly were going crazy on Ryan. Gianna then got in my face to ensure she had my attention.\n\n\"You ready to ride the fuckin' champ?\" she said aggressively while her hand searched for my dick.\n\n\"Show her who's boss, babe,\" Cassandra said confidently while replacing the condom on my dick. Gianna then plopped herself down on my dick and started gyrating around.\n\n\"Ooh,\" Gianna said with a smile, \"this shit's legit!\"\n\n\"Fuck her hard!\" Sara said having just had an orgasm with Roxy.\n\n\"Show her who's boss!\" Cassandra said while frigging her clit. Both to not let the side down, and to show Gianna something. Unlike the other girls who'd ridden me, I thrusted hard into her. Her tits were bouncing all over the place and I even grabbed one and lightly slapped it, something I'd never done before.\n\n\"Atta boy!\" Gianna said encouragingly, \"show me something!\"\n\nI took heed and grabbed and pulled at her tits, Gianna now descending on me to give me a deep kiss. I then released one of her tits from my hand and smacked her ass hard. Like harder than I'd ever done ever.\n\n\"Ungh!\" Gianna responded with a smile, \"hit that shit!\" I delivered a few more smacks to her ass before I got back to wrecking her pussy. A few minutes more and she went over. \"MOTHERFUCKER!\" she said, her pussy vibrating hard on my dick. She came off of her orgasm and looked down at me. \"Nice fuckin', bud! Good job, girls!\" she said to both Cassandra and Sara. \n\n\"Thanks,\" both replied as they rubbed up on me. Gianna went to go find more fun elsewhere. Nautica came from the bar and walked toward me seductively.\n\n\"Sean...\" she said slowly walking over. Cassandra and Sara both giggled and another condom was soon on me. Nautica than straddled me and sunk down on me. \"Mmmm,\" she said with a smile.\n\nShe than leaned over and started kissing me as she started humping me. Not fast at all, more of a love-making session almost. I was feeling almost guilty, but then I saw my girlfriend and Sara going to town on each other, fingers and tongues flying.\n\nNautica started grinding on me faster, my hands going to her ass to steady her on me. I could hear her panting.\n\n\"Oh, fuck, Sean,\" she said quietly. \"Baby, you feel great. Keep going.\"\n\nI kept up my steady pace with her and she kept bouncing and making out with me. When a few minutes later, Nautica came on top of me, I could hear Sara and Cassandra getting off too. Nautica gave me another kiss and walked off, waving to the two girls entwined with each other.\n\n\"Thanks, guys,\" Nautica said, walking off. Sara and Cassandra waived at her as the came and sat next to me on the couch.\n\n\"Having fun?\" Cassandra asked me.\n\n\"Definitely an experience,\" I replied, still not believing all that was occurring. I looked at my cock and was amazed it was still attached to me. \n\n\"Good,\" Sara said, kissing me on the cheek.\n\n\"So,\" Cassandra said to get my attention, \"we wanted to talk to you about something while you are on 'break'.\"\n\n\"Everything ok?\" I asked, concerned that I'd already screwed up a relationship that was one day old.\n\n\"Oh, everything is great!\" Cassandra responded, obviously trying to alleviate any worry that I may have had. \"Sara and I have been talking about what we discussed this morning.\"\n\n\"Yeah,\" Sara said, snuggling up closer to me. \"I got a little jealous. You know, her getting you all to herself.\"\n\n\"So, we started talking about how to rectify the situation,\" Cassandra said her hand circling around my cock.\n\n\"It was a brilliant idea,\" Sara said, her eyes dancing with desire.\n\n\"What are you guys talking about?\" I asked truly not knowing what they were driving at.\n\n\"Well, Sara wants to be your girlfriend,\" Cassandra said, \"and now she is!\"\n\nI was now completely lost, and both saw it.\n\n\"I'm also Cassandra's girlfriend,\" Sara said, thinking that explained it all.\n\n\"And of course, I'm your girlfriend,\" Cassandra said as she leaned over to kiss me. My mind was still not fully understanding what they were talking about, and really couldn't while Cassandra was inspecting my tonsils with her tongue. Sara then got hold of my chin and pulled me in for an equally deep kiss, her hands starting to cup my testicles.\n\nThen the two started kissing each other, their tongues fully visible for all to see. Sara was still fondling my balls as Cassandra stroked my shaft. They then broke the kiss, turned and smiled at me.\n\n\"I think you should ride him first,\" Cassandra told her. \"You haven't had him raw yet.\"\n\n\"Thanks babe,\" Sara said as she now straddled me, Cassandra holding up my dick for her use. Sara crashed down on my dick in quick motion, then leaning over so that her breasts were covering my face. \"So much better...\" Sara said as she began to ride me.\n\nCassandra managed to get one of Sara's nipples into my mouth, telling me to suck away. Sara then took a free hand and started playing with Cassandra's pussy, fully completing the circle of pleasure. Sara was riding me slowly and softly, all the while making out with Cassandra as I played with her boobs.\n\nSara then yelped a bit, and I could feel Cassandra's finger now exploring Sara's ass. Sara quickly smiled and cooed, enjoying the double penetration from her two lovers.\n\n\"Oh my God, that feels so good!\" Sara said enjoying the attentions of both me and Cassandra. \"God, I love you guys!\"\n\nIt wasn't long before Sara started panting hard and I could feel her getting tighter. After all the attention I'd received over the last hour, I knew I wasn't far behind either. As if she had a sixth sense, Sara immediately made clear what her desire was.\n\n\"Cum in me, Sean!\" she bellowed. \"I wanna feel you!\"\n\nAs she said that, my cork popped and started expelling into her pussy. This seemed to be more than enough to put her over the top and she clamped down on me hard. She then took my face and started kissing me, hard. Passion poured through each other as I felt Cassandra's hands on my back. When the kiss was broken, Cassandra and Sara started kissing with what looked like the same passion I had just enjoyed. They broke the kiss and smiled at me.\n\nSunday Morning\n\nI woke up the next morning in my bed, my hangover making itself known. After the threesome with Sara and Cassandra, Gianna had prodded us into taking more shots. I still really don't know how I got back to my room, but I did. I opened my eyes and found I was on the far left side of the bed. Amazingly, I saw my clothes on a pile, sitting on a nearby chair. I also saw other clothing on the floor, knowing full well it wasn't mine.\n\nI slowly turned and looked at the rest of the bed, finding Cassandra and Sara both sleeping soundly, Sara's arm draped over Cassandra. I slowly rolled onto my back, trying to take in all that had happened. In the course of a single weekend, I'd gotten a job offer, rubbed shoulders with some of the most powerful people in Vegas and the adult industry, had sex with more women in a single weekend then my entire life, and now apparently had two girlfriends, sleeping soundly next to me. In a thousand years, I couldn't have believed this would happen. \n\nMy head was throbbing pretty good still and I remembered I had some Advil in my toiletry bag. I slowly got up and headed for the bathroom, quiet as I could possibly be. I closed the door gently and took four, washing them down with tap water. I also ran a hand towel under the tap and applied it to my face, trying to reset myself after a night of hard partying. I dried off and left.\n\nWhen I got back into the main room, I found that I had not been as quiet as I'd intended as Cassandra and Sara were now awake, caressing each other with light kisses. The floor must've creaked a bit, cause they both turned and looked at me, smiling away.\n\n\"Morning,\" they both said almost simultaneously.\n\n\"Morning,\" I replied, rubbing my forehead. \"I think I may've had a bit too much last night.\" Both girls giggled at me.",
        "\"We tried to get you to take some ibuprofen when we got back,\" Cassandra explained, \"but you were already passed out when we came out of the bathroom.\"\n\nI nodded and then remembered about the clothes.\n\n\"I didn't walk through the hallways naked, did I?\" Again, both were giggling at me.\n\n\"No, you got your clothes on before we left Kevin's,\" Sara said.\n\n\"I didn't make a fool of myself, did I?\"\n\n\"Absolutely not!\" Cassandra said emphatically. \"You were so nice and sweet. You let Tera cry on your shoulder for a half hour when she was down about Evan. She was so touched by it. Then of course we had you fuck her brains out.\"\n\n\"Not to mention,\" Sara interjected, \"that you kept telling people that Cassandra and I were the two best girlfriends ever.\"\n\n\"Well, I certainly think he was right,\" Cassandra leaning over, giving Sara a small kiss.\n\n\"Me too,\" Sara replied contently.\n\nAfter letting me in on a few more details from last night, they both decided to go to their rooms so they could pack up and check out, agreeing to come back to my room after. They both kissed me goodbye and said that they wouldn't be long. \n\nI took a quick shower and dressed for my trip home when I heard a knock on the door. I opened it to find Chet grinning like he just won the lottery.\n\n\"Dude!\" he said coming in, alcohol clearly still on his breath.\n\n\"Come on in,\" I said, not really having a choice in the matter.\n\n\"Last night was fucking epic!\" he said, clearly excited.\n\n\"I'm glad you had fun,\" I said, finishing my packing. \"You better get packed so we can get home.\"\n\n\"Yeah,\" he said pensively, \"that's what I need to talk to you about.\" I looked at him curiously. \"I'm not going back.\"\n\n\"What?!\" I screamed.\n\n\"Yeah...\" he said, still rubbing his neck, \"the guys I hooked up with offered me a job in LA. They think they can get me work out there. Big money, dude! I'm gonna try it out.\"\n\n\"Are you crazy?\" I asked, worried about his sanity and not for the first time, \"we've got class on Monday!\"\n\n\"I was flunking out anyway, dude,\" he said forlornly. \"This could really be a new start for me. Don't worry, I'll still pay my half of the rent until the end of the semester. From what I'm gonna be making, it'll be chump change!\"\n\n\"Well...\" still trying to wrap my head around this, \"what about all your stuff?\"\n\n\"I'm good with what I have for now,\" he said confidently. \"I'll come out in a few weeks and get the rest once I get a line on a place,\" he replied, while answering a message on his phone. \"Ooh, gotta go, bro,\" he said rushing out, \"boys are waiting for me!\"\n\n\"Well, good luck!\" I managed to get out as he left. I stood dumbfounded for a few minutes, not fully believing what had happened. Of all the things that had happened that weekend, it may have been one of the most incredible. I shrugged and continued packing.\n\nSara and Cassandra came back to my room not long after I told them what happened with Chet. They rolled their eyes and wished him luck, not really thinking much of his chances either.\n\n\"Well,\" I said looking over both these incredible women, \"I guess this is goodbye for a bit.\"\n\nBoth looked confused at each other and then back at me.\n\n\"What are you talking about?\" Sara asked.\n\n\"Well, we're all going home today,\" I said as much in an obvious tone as I could.\n\n\"Exactly,\" Cassandra smiling as both came up to my side. \"So, go get the car and let's go home.\" Sara came up and hugged me, smiling evilly and seductively.\n\nThat car trip involved road head, the girls 69ing in the back seat, and me nearly running the car off the road on the highway.\n\nEpilogue\n\nI graduated a few months later. Cassandra and Sara were there, obviously along with Roxy, Sunny, and even Gianna. That was some graduation celebration that night!\n\nChet came home a few weeks later to get his shit. He was amazed when he saw Cassandra and Sara in the house, now fully understanding the situation. He made a not-so-subtle pass at both girls to get some work experience, but they politely declined. He eventually got some work in the industry, but not much. When he came back, I gave him the card that Dennis gave me, deciding I really didn't need it. Dennis later told me, before he died, Chet had an amazing night and he eventually hired him as a bartender for a while. I don't hear from him anymore, but last I heard, he opened up a strip club somewhere near Portland with Allen as his benefactor.\n\nTera divorced Evan not long after the convention. She's doing well, producing her own movies and branching out. She comes and visits every so often, the girls now always glad to see her.\n\nWe've kept in touch with Roxy, even after she got out of the industry a few years later. She eventually married and settled down, working as a physical therapist. I never had the heart to tell her husband about some of the fun nights we had with her when she visited us back in the day.\n\nSunny still does webcam and some stuff with various stars. She wound up dating Dennis for a while and we fell out of touch after a while. She still can't find her \"one\". \n\nHannah got out of the industry soon after the convention. She moved to the Midwest, raising her son as attentively as a mother can.\n\nWe hear from Sasha now and then. She got married and divorced in the span of a year and stayed with us for a while before moving out to L.A.\n\nGianna is still Gianna. She's slowed down in recent years, mostly doing webcam and OnlyFans, but keeps her finger in. She moved to Vegas and visits us all the time.\n\nI wound up taking Arthur's job offer, finding a real career in it and moved to Vegas. He eventually made me his Chief Technology Officer over his entire empire. Kevin is mostly retired now, but we still see him anytime he comes into town.\n\nAs the title of this whole thing suggests, I did marry a porn star. Cassandra and Sara flipped for it, Cassandra winning. Sara was her Maid of Honor, and we had an unofficial ceremony to \"marry\" us all to each other. The girls continue to do webcam, OnlyFans type things, but kept to their word on other male performers. In a touch of irony, Sara was actually the first to get pregnant with our daughter, Cassandra following close after with our son.\n\nEvery so often, Sara or Cassandra will get recognized somewhere, someone with a sideways glance or something. Mostly we just find it funny.\n\nNo one knows what life holds for us or the direction it will take us. One weekend changed my life forever. Just imagine what life could hold in store for you.\n\nThe End\n\n \n"
    ],
    "authorname": "rumpleminty",
    "tags": [],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/how-i-married-a-porn-star-finale"
}