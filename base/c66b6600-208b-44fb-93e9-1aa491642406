{
    "title": "Mia Mine Ch. 12",
    "pages": [
        "Note to the reader: As you can see by the numeric chapter, this is part of what has grown into quite a series. If you haven't read rest of the story, I strongly suggest you start at the beginning and follow the story to this major point in Mia's life. Just a suggestion, of course, but I think it would be well worth your efforts. I want to thank Josie and Dreamweaver for all their support, guidance, editorial mastery and pushing me on to finish this work of love.\n\n*****\n\nMia felt herself breathing, it was dark, she wondered if her eyes were closed. She was in a fog, \"where am I?\" she thought. Then she could see an outline in the fog. She realized the outline she saw was her! She was running in a meadow, but it was still too foggy to see completely. She started seeing sparkles of light and figured the sun must be working its way through the clouds. She could see herself a bit better and noticed she was naked. Running free and naked in a beautiful meadow, her head thrown back, her arms thrown back and running without a care in the world. Oh how wonderful the wind in her face, in her hair felt. She could see herself smiling, but for some reason she couldn't feel the smile. \n\nSuddenly, ahead she could see another outline. It was a man, with his arms held out to her. More sun broke through the fog, and she could see it was David! He too was naked in this wonderful meadow, running towards her with his arms out for her. Oh how the sun sparkled in his smiling eyes. His entire face was now lit up in the growing light. His smile melted her, and she felt her body, every inch of her, wanting this man, her man, and she continued her bouncing run to him.\n\nShe felt herself gasp, as the sun now had lifted all the fog and she could see herself clearly now and was so happily surprised with what she saw. Well, it was what she didn't see that pleased her so much. She no longer had a penis, and she saw a freshly shaven, beautiful vagina. She chuckled as she could see the little drips of moisture as the sight of her naked man running to grab her had already made her wet. She looked up at David again, to see his penis proudly standing at full attention for her. It too seemed to glisten with some sort of lubricant, and she felt herself now running full speed towards her love. As she reached him, his arms held out for her, she jumped right at him, he wrapped his arms around her, she wrapped her legs around him. The kissed deeply, passionately letting all the love they had move freely through their lips and flickering tongues. \n\nMia tried to loosen her legs just a bit so she could slide down David to meet his now raging cock with her new and fully moistened pussy. She could feel David's arms lower to hold her ass and guide her to her promised land. Suddenly she could feel the hardened tip at her pussy lips and she slid even further. A gasp escaped her as for the first time, she felt her lover's manhood enter her now fully woman's body. Oh, the joy, the completeness, the wondrous melding of two into one. She felt she wanted to stay just like this forever. As she started to become more accustomed to the feelings and felt herself open herself fully to him, he began to thrust. Oh, the power of the thrust was taken in by her and given back again as she raised and lowered herself on him. And then, she could feel the wonderful beginning of an orgasm. She thought she heard herself say \"yes, yes, I am cumming\".\n\nThen the world opened up in a crashing sense in her mind, yes the world opened up to the Universe and she felt she knew herself, why she was there, and what a beautiful thing it was to share lovemaking with the man she truly loved.\n\nShe started to laugh out loud, but OUCH! That hurt! Wait a minute, what the hell is going on here?\n\nShe finally realized she was not in a meadow, not running naked, not making love, but in the hospital bed. She could feel her arms and hands but that seemed to be about all. She could sense her body in pain, but really couldn't feel it. She started to cry, but then felt the pressure on her hand. She slowly turned her head which was a chore with all the things attached to her face, mouth, and arms. She realized her eyes were still closed and with much effort she slowly lifted her eye lids. There before/beside her was her man! She knew it was him, she sensed him more than saw him, for her eyes were still not focusing very well.\n\nThen she heard that beautiful, strong but sensitive voice, \"Welcome back my love, my beautiful woman.\" She felt his strong hand squeeze hers again, so softly, but it sent wondrous shivers up and down her body. His light kiss to her forehead was so tender, so loving, her eyes began to water.\n\n\"The doctor said everything went astoundingly well, he was quite pleased with his work and assured me that we would be as well. Once again he said you are by far his best patient. I do think I could hear quite a bit of pride in his description as to how well the entire process went.\"\n\nMia wanted to smile, but the oxygen tube was still taped to her nose and mouth, so she couldn't say anything. She just squeezed his hand back and tried to give him her most loving smile with her eyes.\n\n\"Well, I see someone is awake. Welcome back Mia, let me get some of this stuff off you and get you into a more comfortable position. Now, here is your button for the pain med, just push it and it will travel into you from the intravenous tube in your arm.\"\n\nMia waited while the recovery room nurse removed much of the apparatus from her, undid the oxygen tubes, and raised the top part of her bed a bit. She felt the pain starting to increase and pushed the button.\n\n\"Would you like to suck on some shaved ice?\"\n\nMia nodded, as she wanted this busy bee to go away. After she left, she was able to look over at David, still standing at her side, still holding her hand. She tried to speak, but no sound came out so she mouthed a slow, long \"I Love You.\"\n\n\"Oh I love you so much too Mia, it was so hard waiting outside while the surgery was going on, and I had to really fight my way in to the recovery room, making all sorts of promises. I just had to be with you, and wanted you to know I was there for you while you awoke from the heavy anesthesia.\"\n\nMia mouthed \"Thank You\" and saw that the nurse had brought a small cup with a little bit of shaved ice. She took a few of the shavings and let them melt on her tongue and run down her sore throat. After doing this a couple times she felt she could try to talk again. \"How long have I been out?\"\n\n\"All tolled, several hours honey.\"\n\nMia looked down, and ran her hands over her pelvic region. There was a lot of bandaging and ice packs under the light blanket and her gown, and she really couldn't feel her touch. She looked up again at David, who was still smiling that wonderful, caring, loving smile. \"Now the real work begins, to get you going.\"\n\nIt wasn't long before she was signed out of the recovery room and rolled back into her room. She was amazed at all the flowers and balloons that decorated the room.\n\nDavid saw her look, \"Wait till you see who sent you best wishes, you will be both touched and surprised. But let's get you settled and see if you want to take a little rest.\" He could see her push on the pain button had started her to begin slipping away again.\n\nMia smiled, loving that her man was taking care of her so well in her hour of need. It was something they had both learned about each other (and themselves) that to make a great couple you have to let the other do things for you, and not feel self-conscious about it, knowing that the favor would be returned ten-fold.\n\n******\n\nMindy knew she was screwing up. She thought of Jonathan often, and always with love. This frightened her to no end, as she was so scared that her love would push him away. She wasn't used to having so many good, no, wonderful things happen to her. She could not get past her old reaction of waiting for the hammer to fall, ending all that she thought was good, and sending her back to that oblivion she had found herself living in for so long. She had all but forgotten all the threats from Pain, saying he was going to get her if she didn't pay him his cut for her work before she left. \n\nShe had thrown herself into all the work that had to be done once she got into all the things the foundation could offer. She was amazed at how well organized Christine was, and how well they had put together a network of professionals to help at every step, and at every level. They had taken care of getting her name changed, which was really a lot easier than Mindy had thought, but they had people everywhere that knew what had to be done and how to do it. They got her birth certificate, and everything else needed, the lawyer did all the work pro bono, and she was now legally Mindy Burke. \n\nWith the help of the psychiatrist that helped the foundation, she had her driver's license sex changed to female. That was such a huge step for Mindy and she could not believe how wonderful all these people she was meeting were. After she got the court order for her name change she was able to get a new Social Security card with her new name on it. She could now go into any job interview or college entrance program without having to suffer through all the hassle at best, and downright mean spirited hatred as the norm. She was beginning to feel like a 'real person- dare she let herself- a real woman'. \n\nShe had enrolled and been accepted at the little four year school in town, and was waiting for spring quarter to start so she could begin school. She had gotten a part time job at the dress store she loved so much. They were happy to have her there and her energy and quick learning made the owners very happy to have her on board. They even had her model some of the new spring arrivals and her pictures were uploaded onto the store's website. \n\nShe loved the talks and lessons with Christine that covered the entire spectrum of life itself, but especially life as a transgendered person. She was beginning to realize she was learning how to feel comfortable in her 'own skin' and was gaining confidence every single day. This both overjoyed her and scared her a bit. She spent so much time now with people doing things with her and to her, that she just didn't feel like she wanted to be with Jonathan right now. She felt safe, knowing he was still there, still calling, still texting, still sending her his amazing pictures. She felt bad about not returning his overtures with enough passion, but she just didn't feel ready. \n\nShe remembered her conversation with the nurse on her first day. She had told her that her meds were now going to be the full dose possible, and they would be administered correctly and completely. She was told this could very well affect her emotional state, and she should be ready for this major change to start. She had a long talk with Christine about it, and was relieved to hear that this was actually quite common, and she would make her way through it. But Christine also told her she was going to have to be open and up front about this with Jonathan.\n\n******\n\nJonathan was trying to hide his aching for Mindy with extra work. He had seen in his company's listings that they were going to be starting a new web based information and search engine type program. He had noticed it because he had seen where they were going to be using a lot of photos. He jumped at the chance and put his resume in to be considered for this new direction for the company. He was excited when they called him in for an interview and got his portfolio together, putting some of his most prominent and favorite shots together in a large art carrying case he bought just for the occasion. The interview went more that well, for the leaders of the program could see his IT background with the main company, and his very talented work with his cameras and editing software actually made him not exactly what they were looking for, but to be one of the heads of the new venture. Not only was he going to be able to work at his true love, he was going to be getting a considerable pay increase as well!\n\nHe couldn't wait to get home to call Mindy and tell her the good news so he called her from his car on the way home. As usual, she didn't answer so he left her a voice mail and told her to please call as soon as she got this message because he had some really exciting news he wanted to share with her.\n\nHe hung up, feeling that horrible feeling that had been plaguing him lately with Mindy's cold shoulder treatment. He wanted so badly for her to be happy for him, as he had been for her for each new step she had taken. He found himself daydreaming of their first night, and how he had seen her partially naked body. He could feel himself growing hard as his mind's eye brought back the lovely picture of her with her top and bra off, standing there as he helped her off and then later, on, with her pants. He remembered her pert little breasts, and how hard her nipples were as they stood out for him. He knew it was probably the cold emergency room, but hoped they had hardened because she was showing them to him. He tried to get his thoughts elsewhere without success until the Bluetooth phone rang through his car's radio. It was Mindy!\n\n\"Hi Jonathan, sorry I missed your call, and I sure do want to hear your news. I also want to see you and have a talk with you. Is there any way you could come over soon?\"\n\n\"Sure! I am changing jobs so I am going to get a week off starting next Monday, so I could come over Friday after work, get a motel room and stay for the week if that would work.\"\n\n\"Great hon, that sounds wonderful, I have missed you so much and I think I have as much wonderful news to tell you as you have to tell me. Let's leave it until we are together to share it ok?\"\n\n\"Ok Mindy, that will work, although I feel I am going to burst before that,\" Jonathan chuckled, although there was some truth to his little joke as well.\n\n\"Text me what ferry you are going to be on Friday so we can start planning our \"date\".\n\n\"Will do! Bye for now sweet one.\" Jonathan loved the sound of hearing her say \"date\".\n\n******\n\nDavid had swung it so he could stay the night, next to Mia. It was a little uncomfortable sleeping in the chair, but it wasn't too bad, and it beat the alternative of being away from her. He loved that he could be there when she woke up, which was several times during that first night. It was difficult for her to get used to having a catheter and she always had to be reminded it was ok to use it, for she was still not to get up and disturb the stent and her stitches. He knew it was easier for her to hear that from him, and the look in her eyes when she could look over and see him there was simply priceless.\n\nMia felt the same way, for she would awaken with a start many times, and to be able to look over and see David's peaceful face asleep, next to her, with his hand right there that she could hold was her greatest medicine.\n\n******\n\nChristine had worked out a way to come over to be with Mia after her surgery. She had swung a deal with Jonathan to pick her up at the ferry dock and drive her up to the hospital on \"pill hill\". Jonathan arrived a little early and had to wait, all the while thinking of his upcoming \"date\" with Mindy. When Jonathan saw her walking to his car across the street from the ferry terminal, he was taken aback at her beauty. \n\nHe had never really looked at her, for every other time in her presence she was talking, and her intelligence, wonderful sense of humor, and beautiful dulcet toned voice had made her seem so beautiful to him. But as he saw her walking to him, he could just focus on how physically beautiful she was. Her long pure white hair, framed such a youthful, beautiful face. Her continuous smile was infectious and added to her beauty. \n\nBut just seeing her walking, her piercing blue eyes shining in the sunlight, he could tell where Mia had gotten her good looks. He had seen pictures of her on Christine's desk and had actually followed her as much as he could on all the articles he could find about her on the internet. In some ways he felt he already knew Mia, and was certainly impressed and amazed at all her accomplishments.\n\nHe could only imagine the \"wars\" she had to get through to do almost anything, let alone start a multinational software company. He hoped that the foundation would put some of that type of confidence back into Mindy. He just knew there was a beautiful, intelligent, and vibrant woman waiting to flower from inside the frail little girl he had picked up out of the curb.\n\n\"Hi Jonathan!\" Christine's greeting with her infectious smile was simply wonderful.\n\n\"Hi Christine, so wonderful to see you again, and I must say, you are one of the most beautiful women I have ever had the honor and pleasure to meet.\"\n\n\"Woah there Jonathan, don't try your lines on this old lady, I have seen and heard them all.\"\n\n\"I'm sorry, it wasn't a line, just the truth, I had never seen you without being in a conversation with you, so as I watched you walking to the car I actually got a minute to see and appreciate how beautiful you are.\"\n\n\"Thank you Jonathan that was very kind, I knew you weren't feeding me a line, I was just pulling your leg, and actually trying to deflect your praise a bit, I'm not quite used to it these days.\"\n\n\"That's a shame, you should be getting praise on a regular basis, all the wonderful work you are doing, plus being such a beautiful woman, inside and out.\"\n\n\"Ok, ok, Jonathan, that's quite enough now, thank you very much but we need to change the subject here,\" Christine's smile looked like it had a hint of sadness to Jonathan, so he didn't press on any further.\n\n\"So here we are, and it looks like there's room here in the main parking garage.\" Jonathan maneuvered the tight turns inside the multilevel parking garage until he found an open spot. The car parked on the right had really missed his spot a bit so Jonathan let Christine out before he pulled in.\n\nThey walked in silence for a bit, found the elevators and got up to the eleventh floor, as Christine had said Mia was in room eleven twenty six. They found the room, opened the door slowly and peeked inside. David turned around to see them and gave them the 'hush' sign, and quietly walked to the door to meet them.\n\n\"She's asleep right now, so we should talk out here for a bit, and go back and check in a little while.\"\n\n\"How's my beautiful future mother-in-law doing?\" David said as he picked Christine up giving her a big hug.\n\n\"David, put me down, good lord, right here in the hospital hallway!\"\n\nHe did as he was told and they both had a laugh together. Jonathan could see and feel the love the two had for each other, and the ease and openness they displayed it. He was a bit jealous and hoped something like this would be in his future, for it looked and felt so wonderful.\n\n\"Everything went extremely well according to the doctor, I think he is very proud of his work, which Mia and I really appreciate. She is still having quite a bit of pain, and they still have her hooked up to the pain med drip so she can self-medicate. We should go back in a check in a little bit.\"\n\n\"David, I want to introduce you to Jonathan. Jonathan is our first foundation guest Mindy's friend. He basically saved her life, picked her up literally from the gutter after being beaten and thrown out of a moving car by the main pimp and his gang over here in Seattle.\n\n\"Jonathan, this is David, Mia's fiance.\"\n\nThe two men shook hands. David knew he liked the young man right away. There was a no nonsense directness in his demeanor. Not overly aggressive but obviously comfortable with who he was.\n\n***\n\nJonathan knew he liked David right away as well. There was something about him that reminded Jonathan of a cross between his father and grandfather. There was a kindness and openness in this man that just by shaking his hand and looking into his eyes was made very evident to him. He could also feel the self-assured strength in the handshake.",
        "***\n\nChristine smiled as she saw the two men shake hands, and could sense a real beginning of something she hoped would be able to grow.\n\n\"Christine, why don't you go and take a look to see if Mia is awake, I don't want her to awaken alone. Jonathan and I can stay out here and get to know each other a bit better while you get some alone time with your beautiful daughter.\"\n\nChristine blew David a kiss as she crept into the room. Once she was gone, David turned back to Jonathan and smiled. \"Pulled her out of the gutter did you?\"\n\n\"Yeah, it was weird, I had worked late and was not watching the road very well and this big Lincoln in front of me all of a sudden just slowed way down. I almost rear ended it, but noticed the passenger door open and something being thrown out. When I realized it was a person, I had to stop. I called 911 while I ran to see if I could do anything. I just covered her because I was afraid she could possibly have a neck injury, and held her hand and tried to talk to her.\"\n\n\"Well, you are a very kind person Jonathan, I know a lot of people would have just kept on driving. You should be very proud of yourself.\"\n\n\"I feel I was paid ten times over for helping, because I got to meet and be with Mindy.\"\n\n\"Did you know she was transgendered?\"\n\n\"Not right away, but I found out when I overheard the medics talking.\"\n\n\"I hope you don't mind me prying Jonathon, but I am just interested. When I first set my eyes on Mia, I had no idea. She told me quite early, but by then, I had pretty much already fallen in love with her as a woman, so it really didn't faze me. It did sort of surprise me about myself and I was just wondering how it happened with you.\"\n\n\"I got sorta educated about the transgendered life by my older brother, who became my older sister while I was still in middle school. I had idolized him most of my life, and still did when he became the woman he always felt he was. I guess being that young and having so much love already, it all just came almost naturally to me. I lost her a couple years ago, and it hurt me so much. She told me of all the hatred and bigotry she had to deal with on almost a daily basis, and my heart really went out to her. I was the only one she could really talk to, so I learned a lot about how difficult it is for the transgendered, especially in the early part of their transition.\"\n\n\"Oh I know, Mia told me just a few of her horror stories, and my God I got so pissed off I wanted to deck someone, anyone.\"\n\nJonathan smiled, yes his first impression of this man was correct and he felt a real bond with him.\n\n***\n\nDavid smiled back, and was pleased to see his first impression of this fine young man was true as well.\n\n***\n\n\"So I guess we are quite similar in that I too, fell for the woman I saw in Mindy right away, and my feelings for her seem to grow every time I see her now, and see how she is growing in so many wondrous ways. But I am very concerned because she has been a little stand offish lately and I don't really know what to make of it.\n\nChristine told me it is quite common for young tg girls to go through some major emotional changes as their hormones and bodies go through the transition. I know Mindy had been using mostly street meds and I'm sure those were less than designed for her. Living at the Foundation and getting real meds prescribed by a doctor is really accelerating her transition, so I can certainly understand there would be some emotional changes that would be hard to deal with. Just getting her off the streets and into a place where everyone wants to help her rather than harm her is hard enough to get used to for her.\"\n\n\"I can believe that, some of the stories Mia has told me about her early transition were quite incredible. I hope things work out for you Jonathan, I can see you are a good man, and it would really do Mindy a world of good to have you at her side.\"\n\n\"Thanks David, that is very kind of you, I appreciate it very much. I have to admit to being a little down during this time where she wants to keep to herself. But I keep trying to tell myself she is going through a wonderful process right now, a very large growth potential, and if we are meant to be, we will be together.\"\n\n\"I like your style Jonathan, and I am sure Mia when she recovers would love to help you anyway we can.\"\n\nWhile they gave Christine and Mia some precious mother daughter time, the men kept talking out in the waiting area. Jonathan was telling David of his new job beginning the week after next and how he was going to stay at a hotel for the week he had off so he could be closer to Mindy.\n\n\"So you are going back over tonight?\" David asked.\n\n\"Yes, I am taking Christine back and then checking into the hotel. Mindy and I have a date to talk about things later this evening.\"\n\n\"Well, look, I am going to be staying here with Mia at the hospital for quite a few days to help her recover, why don't you stay at our house?\"\n\n\"Oh, thank you, but I couldn't do that.\"\n\n\"You could and you will, if you don't agree to me, I'll sick Christine on you and you don't want to see her in her 'persuasive' mode.\" David laughed, \"and if Mia found out I didn't offer you our guest room, man, she'd be after me with both barrels, so it really would be you doing me the favor!\"\n\nThe two men got all the particulars down with the address, directions, keys, and some of the tricks of the house. David told Jonathan where the guest room was and told him he would have to go shopping for anything fresh for they had cleared out all the fruits and vegetables that could go bad before they left for the hospital.\n\nChristine popped her head out of Mia's room to call them in. As they entered the room, Jonathan was taken aback at Mia's beauty. Even in her 'just out of surgery state' she was quite radiant. Jonathan told David he was a lucky man.\n\n\"I thank the universe every day for bringing this beautiful woman into my life,\" was David's response.\n\n\"Hey, you are going to make me blush you two, stop it!\" cried Mia.\n\nDavid could see that Christine had helped her with a little makeup, just a touch, and her rest and seeing her mom had brought a lot of her color and energy back, it was so good to see.\n\n\"Hon, Jonathan was saying he was going to be starting in a new position at his job in two weeks and was going to be staying over in town to be close to Mindy next week at a hotel..\"\n\nBefore David could finish, Mia broke in \"I wont have it, he can stay in the guest room at our house, it would be nice to have someone there looking after things while we are over here.\"\n\nDavid and Jonathan simultaneously broke out into laughter.\n\n\"What the hell is so funny you two?\"\n\n\"You didn't let me finish, I was going to tell you I had offered the same thing to Jonathan.\"\n\nChristine jumped in with a warm hug and that wonderful smile, \"Great Jonathan, we can go back over together tonight. The Foundation is really quite close to their house, so I can help you with settling in. Have you told Mindy you were coming over?\"\n\n\"Yeah, we talked earlier, I was so excited to tell her about my new job, and that I had a week off and that I wanted to spend it over there, to be close to her. She told me she had some great news and wanted to meet for a \"date\" and have a talk.\"\n\n\"She'll be overjoyed to hear you'll be staying at Mia and David's house, she loves it.\"\n\nDavid held Mia's hand as the two of them smiled as they listened to Jonathan and Christine making plans for the ferry trip. David loved seeing the excitement in Jonathan's face and hoped that all would go well with him and Mindy.\n\nJonathan had a ferry schedule in the back pocket of his jeans, and they settled on the one they were going to catch. He then texted Mindy with the news as he had promised. She texted right away and seemed absolutely thrilled, and asked if they could pick her up before going over to the house.\n\nJonathan checked this with Christine who thought that would be a wonderful idea, and he texted Mindy back with the time to expect them to be at the Foundation. \n\n******\n\nMindy started getting herself ready as soon as she got Jonathan's text. She loved the excitement she felt at being able to see Jonathan again. She had been doing a lot of soul searching as she had begun to come to a manageable equilibrium with her body and emotions in her med regimen. She realized she really wanted Jonathan in her life. He was worth the risk of getting hurt again, and she wasn't going to let the old ghosts of all her previous problems with relationships get in the way of seeing where this one would go.\n\nShe put on her favorite black, tight skirt that showed off the new shape in her hips. She loved the feel of the fabric and how it accented her hips and ass. She chose her favorite lavender blouse to go with the skirt. The silky sheen of the lavender was wonderfully set off by the darkness of the skirt and the color went well with the makeup she chose. She let herself laugh a bit as she had to hold her hand while putting on her mascara. She was so excited and nervous her hand was shaking a bit.\n\nShe finished her preparation and was pleased with her little spin in the mirror in front of her. She grabbed her jacket and ran downstairs to await Jonathan and Christine. She couldn't wait to see Jonathan's reaction to seeing her in her outfit. She had learned so much about fashion and makeup while working at the little dress shop, and getting the employee discount really helped in building her new wardrobe. She could feel her heart pounding as she sat waiting impatiently.\n\nJonathan and Christine enjoyed each others company on the ferry ride. They talked with ease about what Mia would be going through in her recovery, what a great couple they made, and how much Jonathan enjoyed getting to meet both of them.\n\n\"They are quite a pair aren't they?\" Christine asked with pride.\n\n\"They sure are, I find myself being both very happy for them, but also a little jealous of the depth of their love.\"\n\n\"I can see where you could feel that, but give yourself a chance. I have gotten to know Mindy pretty well in the time we've been together at the foundation, and I think you are going to be a bit surprised and happy in the changes she has gone through. She is a very hard working girl and has a lot to offer. She is just beginning to realize that about herself and gaining some needed confidence. It is a tough time in any young woman's life, but especially for a transgendered girls. I say girls because there is a major maturity problem with so many. In a way they are always 'little girls' inside because they were never allowed to mature as females, they never had a female childhood to experience and then grow and mature from the child to the woman.\"\n\nJonathan listened intently to what Christine had said. He thought it through and realized not only how caringly intelligent she was, but how there was so much truth in it. He had never really gotten that point but was really moved by how hard that must be to get over as a young transgendered girl strives to become the woman she dreams of being.\n\n\"I shared some of what I learned about those hardships from watching my sister's transformation with David. He is so understanding and is so easy to talk to. What was it like for you helping Mia through her transformation?\"\n\nChristine filled the rest of their trip telling Jonathan about how hard it was fighting off the feelings of helplessness while trying to help Mia. She told of all the information she had learned and all the help she had gotten so she could be more support for Mia, but there were certain things that no one could really help prepare another for. She couldn't say enough about how proud she was of how Mia had worked her way through so many battles and how she had made such a wonderful career. But she had always had a pang of sadness, feeling that Mia needed love in her life, as well as her career. She finished by remembering the sheer joy she had when Mia told her she had met someone, and how she knew it was something special. \n\nJust as she finished, Jonathan had pulled up into the Foundation's driveway. He loved the smile he saw on Christine's face. But before he could even get his door open Mindy came bounding down the walkway to the driveway, her face alive with a huge smile. He loved that smile even more.\n\n******\n\nMia and David settled in for a low key evening. David decided to order from the hospital kitchen so he could eat in the room and not have to leave Mia while he went down to the cafeteria. Mia picked a little at what they had given her, David devoured his long awaited meal.\n\n\"You must have been famished, you haven't eaten all day!\"\n\n\"Yes, it was funny, I didn't notice how hungry I was until the food was in front of me. Sorta pigged out a little, hope it wasn't too ugly.\"\n\n\"I enjoyed watching you eat, and just enjoy your being here, next to me. You know, you were a large part of the reason I finally decided to have this done.\"\n\n\"I will take that as an honor my dear, if I had anything to do with you finally completely becoming the woman you always have been inside, I am proud to be a small part.\"\n\nMia just smiled and reached out for his hand, she slipped back into another little cat nap, while David held her hand.\n\nWatching the tv while Mia slept, David noticed an advertisement for an exclusive interview between Diane Sawyer and Bruce Jenner. They were making quite a big deal about his agreeing to talk of his decision to finally start his transformation into womanhood. When Mia awoke he told her the premise of the show, and they both decided to watch it.\n\nWhile it was on, they were both a bit quiet, almost riveted to what they were seeing. When it was finally over Mia started with, \"Well, I suppose it is a good thing to have all this publicity and get out some actual knowledge about what it is like being transgendered. I do fear a bit that we will all be thrown into a large group that society can put in an orderly way and feel they know \"transgendered\" now. I hope there is some understanding that this is just one person's story, and it is so different from what most of us had to go through. It is just like everything else, we are individuals, with our own beings, thoughts, dreams, visions, and goals. We can't be lumped into a neat little package that society thinks they now understand.\"\n\n\"I agree honey, and although I could never be known as a Kanye West fan, I thought the quote Bruce used about his reaction was wonderful and fitting to your fears, 'He says to Kim, 'Look, I can be married to the most beautiful woman in the world, and I am. I can have the most beautiful daughter in the world, and I have that. But I'm nothing if I can't be me. If I can't be true to myself, it doesn't mean anything.'\"\n\n\"You are so funny, yet it is so wonderful how you remembered that, and found it to be so important. Being true to one's self is definitely at the very core of positive existence. I love you so much David, you have helped me be true to myself from the very moment I met you, and I feel you have been true to yourself about me and our relationship also from the very beginning. I am so blessed to have you and your love.\"\n\nDavid leaned over to give Mia a kiss to seal this beautiful moment. She gasped a bit as she felt his tears land on her cheeks as he kissed her. She could not remember a moment in her life that was filled with so much love, joy, and being as one with another human being. She knew she would treasure this moment forever.\n\n******\n\nThe drive to Mia and David's house took only five minutes from the Foundation House. Christine had jumped out of the front seat so Mindy could sit next to Jonathan, and the three chatted merrily for that short drive. As Jonathan pulled into the driveway, he noticed his headlights had lit up a For Sale sign on the house next door, and thought to himself, 'hmmm, could be a sign'.\n\nChristine and Mindy gave him the royal tour of the house, showed him the guest room first so he could dump his bags. They checked to make sure there were clean sheets on the bed and were satisfied at their finding.\n\nThey showed him the guest bathroom, got the fresh towels and wash cloth out of the hall closet and got him all set in there.\n\nThen they took him through the Master Suite, and he was taken aback by the lovely view of the water, as it flowed quite quickly through the little inlet they lived by. He loved seeing the ripples of the water illuminated in the lights from the surrounding houses on the opposite shore.\n\n\"Must be a tide change by the speed of the water going through the inlet. This is just fantastic! I would love to have a room like this with such a wonderful view. There is something so peaceful about seeing the movement of water and the lights that flicker on the waves.\"\n\nMindy just smiled and put her arm around Jonathan's waist. She pulled herself as close to him as she could as they both stood there letting the wonderful view envelope them and take them to a beautiful and serene place.\n\nChristine broke the moment though, \"Alright you two, let's get back to the rest of the tour so Jonathan can take me back to the foundation and you two can be alone together, finally!\"\n\nJonathan and Mindy didn't need any more than that to get them moving. The two ladies showed Jonathan where just about everything was and how everything worked.\n\n\"I think I have passed the crash course in house sitting, so Christine, if you're ready, we can head back to the Foundation.\"\n\nThey drove the short bit back to the Foundation and David and Mindy got out to walk Christine to the front door, when they all turned their heads towards the street as they heard the horrible sound of tires squealing. They saw a huge white Lincoln skid around the corner towards the house. Then the added sound of tires squealing again as the car skidded to a stop right in front of them. The back passenger door flew open and before any of them could even make a move, a body was thrown out. Then the sound of tires squealing again as the Lincoln thundered off at maximum speed.\n\nAll three of the astonished bystanders got their wits back at the same time and all went running to see what or who had been thrown out of the car. As they approached Jonathan heard Mindy scream \"Vivian!! What have they done to you!!\"\n\nJonathan had already gotten his cell phone out and was telling the 911 operator the story of what had just happened, complete with a description of the car and its license plate. He had remembered that he hadn't gotten it the night he found Mindy and swore he would never let that happen again. As he approached Vivian he told the operator they were going to need an aid car or ambulance for the young woman was badly beaten and unconscious. He did not, however, tell the operator about the cardboard sign that hung around her neck.\n\nMindy was beside herself, on her knees trying to hold her friend. Christine had run into the house to get some blankets and hot water and towels. They did their best to clean and cover the poor unconscious girl. Jonathan warned against trying to move her, for they didn't know what kind of neck, back, or interior injuries she might have had inflicted on her, and they shouldn't move her in fear of aggravating any such injury.\n\nFinally the aid car came, soon followed by a police car. The medics jumped out of their rig and went right to work. They checked the vitals and did a thorough once over and decided it would be safe to move her onto their wheeled stretcher to get her over to the patient end of their truck. The slid her ever so gently into the space in the back, and then hopped up to get busy with even more thorough work. \n\nThey kept Mindy out of the truck, and Jonathan had to hold her trembling body close to him. Christine wrapped blankets around all of them as the policeman came to take their statements. Jonathan had talked Mindy into giving the policeman the cardboard sign that had been strung around her neck. The message was clear and frightening.",
        "\"This is all on you! You owe me big time Mindy, and you pay up or more of your kind will be thrown at your feet.\"\n\nIt was no mystery who was behind this horrible act. Pain had finally put action to his earlier threats. He was well aware of Mindy's remarkable turnaround after leaving the scene, his scene, and he was pissed as hell. He didn't want word to get out to the 'girls' there was a safe haven for them to actually become vibrant and involved women in the 'real world'. Mindy's communication with several of the girls had become known to him. She was really trying to get as many as she could over to the Foundation so they could get started on their new and wonderful lives, away from the daily horror they lived in. She was trying to take away some of his money, and no one, no one, did that.\n\nThe policeman had turned away and was talking to someone on his communications device.\n\nThey overheard a \"Great!\" as he turned back and walked back over to them. \"Luckily these Seattle guys don't realize how small we are over here. Thanks to Jonathan's heads up play of getting the license plate, we got the car and the three thugs inside are now on their way to the city jail to be arrested and booked.\"\n\nMindy was elated until she gave Pain's description to the cop and he checked with his dispatcher and none of the three that were arrested fit that description.\n\n\"Shit, he just sent his minions, didn't make the trip himself the sleazy bastard.\"\n\n\"Just how much do you 'owe' him Mindy, and why?\"\n\n\"Well, even though he wasn't officially my pimp, he said I worked in his territory so I owed him a cut of all my liaisons. The amount will change if I give him anything. Right now he's probably talking about two or three grand. But if I pay him that, he will say oh no, that's just the start and it will go up to five, ten, who knows.\"\n\n\"My God! So you can't even pay your way out of this, it will just keep growing and being more?\"\n\n\"That's the world I came from, that's how it works. They win, I lose, and nothing I can do can make it stop.\"\n\nChristine jumped into the conversation. \"Let's just see what the police can do to track down this Pain fellow and try to find a way to link him to this disgusting act. But I am also going to call David too, for I know when Mia was having her trouble with her ex business partners and then her father, he mentioned knowing some private investigators who were ex Marine's and were very good at getting to the crux of a bad situation, and getting their objective either incarcerated or as they say, just plain gone.\"\n\nMindy was at a loss, the medics had told her it would do her no good to go to the hospital right now. Vivian was in very bad shape and was going to be in emergency surgery right away and then probably in intensive care. It would be hours until there was any news.\n\nJonathan tried to console her as best he could. He tried to entice her into going to get a bite to eat to forget about the horror they had just encountered. She finally agreed, halfheartedly at best, but she supposed it would be better than sitting for hours in a hospital waiting room. Christine agreed and told them to go, she would take care of the rest of the investigation questions, and anything she couldn't answer Mindy could fill them in when they sent an actual detective by.\n\nSo Jonathan and Mindy went to a restaurant right by the water and the ferry terminal. It was nice, had great food and service, and a wonderful view of the water and the little dock and moorage section.\n\nAs they sipped at their wine Mindy finally broke the silence. \"So are you going to tell me the news you thought you wouldn't be able to keep quiet about or what?\" \n\nJonathan loved the smile she used when she spoke to him, it made him feel she just might feel the same way about him as he felt about her.\n\n\"Well, I was not too busy at work one day and was looking through the company website, when I saw they were accepting applications for a new search engine type of feature they wanted to try, and saw they were planning on using a lot of photos within the site. So I applied, and they not only wanted to hire me, they want me to be a part of the department heads in charge of the photo work! I got a huge raise and next week off before I start on the new adventure.\"\n\nMindy was speechless at first, taken aback at how wonderful Jonathan's news was. She quickly gained her voice and shouted \"That's incredible! I know you are going to do a great job and you'll be doing what you love! That is the best news I have heard and it couldn't have come at a more needed time.\"\n\nShe got up and reached for him to give him a huge hug and plant a wet kiss on his lips. Now it was Jonathan's turn to be a bit surprised, but he too regained himself quickly and thanked her for her wondrous support. \"So tell me your news too, I want to hear what has been happening to you to explain all these wonderful changes. You are looking more beautiful than ever, radiant really.\"\n\nMindy blushed and began to tell Jonathan about all the things the foundation had been able to do for her. \"And with all their help, with my name change and sex change on my license, I applied as my new legal name at the local college and will be starting taking classes this coming spring quarter! I was even able to get into a painting class so I will be able to start painting again.\"\n\nThey chatted about all the new things coming in their lives as they tried to eat dinner. But Mindy just couldn't get Vivian out of her mind.\n\n\"I'm sorry, I know they said we wouldn't be able to talk to her for several hours, but I just can't seem to relax. I feel I should be there for her, for after all, it's all my fault.\"\n\n\"Now just hold on there, it certainly isn't your fault,\" Jonathan broke in rather sharply, making Mindy jump back a bit in her seat.\n\n\"Sorry, didn't mean to get so loud, but I just can't sit here and let you say what happened to Vivian was your fault. I think people like Pain, the pimps of the world actually have some sort of an inner hatred of women. Then throw in transgendered women on top if it and they feel they have every right to be any way they wish, violent in his case. It is so ironic, for someone in such a socially unacceptable role, to use undue social disapproval of a certain segment of persons as their ticket to inflict as much pain and suffering they can to these poor people.\"\n\n\"Yes, but if I hadn't told all the girls about the foundation, and paid him what he said I owed him, Vivian wouldn't be in emergency surgery right now.\"\n\n\"That may or may not be true, who knows what he is capable of and how he would treat her or any of the girls at any time. He is blaming you to make you feel guilty, when it is he who is really the guilty party here, in so many ways.\"\n\n\"I suppose you're right, and thanks for trying to make me feel better,\" Mindy said in almost a whisper with her head looking down at the dinner she had only poked at.\n\n\"Ok, I can see you won't be at ease until we are at the hospital, let me get the check and I'll take you over there right now.\" Jonathan waived at the waitress and made the sign for the bill, she nodded and began working on it for him.\n\n\"Thank you Jonathan, I am sorry, I didn't want to spoil our date, but this has been such a horrible thing. It's just like I am used to thought, just when I think things are going to get better or be right for a change, BAM!, down comes the damn hammer. I guess I just don't have any right to feel good about myself.\"\n\n\"Hey, stop it Mindy! I am not going to stand by and let you downgrade yourself. Shit happens, bad shit, to everyone. It isn't a sign that you don't deserve the best, it is just the way things work, we take the good, the bad, and work on each the best we can.\"\n\nMindy reached and took his hand as they walked out of the restaurant.\n\n******\n\nBack at the Foundation, Christine thought again about the detective that had come after the kids had left. \"Detective Robinson\" she said softly to herself. She remembered the little spark she felt as they brushed hands together as he gave her his card while introducing himself. She hadn't felt anything like that in such a long time. It felt good she thought and smiled and almost instinctively brushed her hair with her hand. \n\nShe shook her head, a little angry with herself for letting those thoughts and feelings get in the way of the business at hand. She picked up her phone and called David and told him of the evening's event. She told him she remembered he had mentioned some private detectives that could do \"special work\". She had shared her thought that this might be a little beyond what the police would be able to do.\n\n\"I'll make a few calls and get right back to you,\" he said in a stern voice. He had taken his phone with him out into hall when Christine had told him to so after he answered her call. He was glad he had, for he certainly would not want Mia to see the look on his face and in his eyes right now. He walked around the halls and made a couple of calls. He was able to get through to a couple of his friends and they were both interested in working on the job and would make their way to Seattle and look forward to hearing all the details.\n\nDavid walked around a little more taking deep breaths to try to calm himself down. This was the last thing Mia needed to hear right now, and he didn't want even a trace to show in his demeanor when he returned to the room. Luckily, Mia was peacefully asleep, so he got into his chair next to her, took her hand in his, and tried to get some rest.\n\n******\n\nChristine was pacing in the main room of the Foundation. She was worried about Vivian, but was also worried about Mindy. She knew Mindy's new found confidence was fragile at best, and knew her tendency to think the worst about herself was still just a wheatie flake away from the surface. She hoped Jonathan was helping her, and was pretty sure he would be. She liked him a lot now and he impressed her more each time she got to see him. He had shown a kind heart and a loving intelligence. His understanding of the plight of transgendered girls was impressive and she knew it came from his heart, from the love he had for his sister. She kept trying to think of something she could do and finally decided to take the detective's card out and give him a call.\n\n\"Detective Robinson here, how can I help?\"\n\n\"Yes, Detective, this is Christine Shaw from the Eraew Foundation, you just helped us with that poor girl beaten by those thugs and thrown out of the car in front of our house.\"\n\n\"Yes, of course, how can I help you Ms. Shaw?\"\n\n\"Christine, please, I know you've arrested the three thugs that committed this horrible act, but what kind of protection can we expect from the police for our house in general, but for Mindy specifically? I know of this Pain guy from stories Mindy has told me, and he is one scary and seemingly very powerful bad guy. I know you have just a small town budget for the force here, but are we going to be able to get more protection here or am I going to have to hire some extra help?\"\n\n\"I can only advise you of what I and the force can do Christine. I can't advise you about getting your own help. Yes, we do have a small town budget, but all of the dispatchers are, and will be aware that our patrol car's rounds will include several passes by your Foundation during every shift. I can't offer any twenty four hour surveillance or anything like that. I think this Pain fellow will be a bit surprised that his men were apprehended, and I don't think he will be doing anything in the near future. I have been in contact with the special prostitution unit the Seattle force has in place. They are very well aware of his power and his resources. The three men we caught are low down on his chain of command so I don't think he expected much from our force. But thanks to your young man, the description and plate number mixed with the few streets here made it pretty easy for our guys to get them.\"\n\n\"I imagine they'll have them bailed out in no time,\" mused Christine.\n\n\"Probably so, but we will escort them to the next ferry and make sure they get on it.\"\n\nChristine smiled as she thanked Detective Robinson \"thank you Detective I hope to see you soon, er, so we can talk more about the case.\" Christine was surprised by her forwardness. She found him rather attractive in a different sort of way and was happy she felt that way, for with all the work and concentration on the Foundation, her personal life had taken a very back seat lately. She remembered how much she liked the sound of his \"phone voice\" so powerful yet with a hint of kindness in it. She thought it might be fun to see him socially.\n\nDetective Robinson was stunned by Christine's remark. \"Why yes, um, I was going to come to see you to get more details about the case. Well you and the young lady he threatened\". He tried not to let it show how much her remark had affected him. He too had let his personal life wane, and was a bit shaken by this beautiful woman saying she hoped to see him soon. He cleared his throat (again) \"perhaps tomorrow after my shift?\"\n\n\"That sounds wonderful Detective, I will look forward to it, and l will also let Mindy know.\"\n\n******\n\nJonathan and Mindy were sitting in the hospital waiting room, silently, as they awaited any news about Vivian. Jonathan had tried to start a conversation a couple times but Mindy was not in the mood to talk. She did reach for and grab his hand and had been holding it since they sat down. The head duty nurse had promised to let them know of any news at all about Vivian and assured them all the doctors involved in the case also knew they were quite anxious to hear.\n\nThey both turned their heads every time an elevator door opened or they heard footsteps in the hallway.\n\nFinally Mindy broke the long silence. \"You know, I was working so hard with Vivian, for her to get her shit together and apply to the Foundation. I bet that's why Pain took it out on her, cause she told me she was just about ready. I just get so fuckin pissed at what we have to go through. It's so hard to get a \"normal\" job without proper ID.\n\nYou can't imagine how incredibly uncomfortable and basically downright embarrassing it is to go into a job interview as a woman, but if they ask for your ID which is all male, you can't imagine the response we get. That's why so many end up like we did, working the streets. And then, you get beaten within an inch of your life when you try to get out of it. What a world we live in.\"\n\nJonathan sighed, \"I'm right there with you Mindy, but things are changing, look at Mia and how far she's gotten. There are so many transgendered girls and women coming out and speaking freely, or at least more freely. The word is going to get out and people are going to have to accept change.\"\n\nMindy smiled, Jonathan's constant optimism was one of her favorites of his long list of traits that had swung her heart. She just looked at how concerned he looked, his honesty and care were so prevalent in his face, and she knew, in his heart. 'I love this man' she thought.\n\nBefore she could say anything, a young doctor was talking to the head nurse and they saw her pointing their way. They both jumped up and walked over to him. \n\n\"I'm Doctor Winthrop and I hear you are friends of Vivian?\"\n\n\"Yes Doctor! How is she doing?\"\n\n\"Well, there was quite a bit of damage, but luckily there was no major internal damage. She was beaten pretty severely and has a concussion. We also set her broken arm and dislocated shoulder. \n\nShe has a couple of cracked ribs, and a bruised kidney. Since there wasn't major internal damage, she wasn't put under as deeply as we at first thought we would have to. So she also won't have to stay in intensive care. You will be notified as soon as she is moved from the recovery room into her hospital room and you'll be able to see her there.\"\n\n\"Thank you Doctor! How long do you think she'll be in the recovery room?\"\n\n\"I don't think more than forty five more minutes or so, but the nurse knows to alert you as soon as they begin to move her.\"\n\nMindy sighed a huge sigh of relief. \n\nIt seemed like forever, but finally, they were shown into Vivian's room. She was quite heavily bandaged, had her arm in a cast and her shoulder was strapped to her chest. She managed a little smile when she saw Mindy.\n\n\"Oh Vivian, I am so, so sorry. I had no idea what was going on with Pain, and am so sorry he took it out on you.\" Mindy was crying as she bent down to kiss Vivian's cheek.\n\n\"Hey, it's ok, the doc says I am going to be fine. Do you think I can just go right into the Foundation after I get outta here?\"\n\n\"I wouldn't have it any other way, there is no way I would let you go back over there after all of this. I'm sure Christine is probably getting your room ready right now. You deserve the best care and that is what you'll get there. I can't even list all the wonderful things they can do. You'll love it and I'll love having a friend there with me too!\"\n\n\"So, this must be Jonathan?\" Vivian asked with a little lift to her voice.\n\n\"Yes, Jonathan, this is Vivian, my very best friend.\"\n\n\"Nice to meet you Vivian, I sure wish it would have been on better terms, but I agree with Mindy, you'll love the Foundation and Christine. They'll have you up and around and building your new, exciting life in no time.\"\n\nVivian's eyes gave Jonathan the slow once over, \"Man Mindy, this guy is definitely a keeper!\"\n\nBoth Mindy and Jonathan blushed.\n\nMindy and Jonathan both jumped a bit at the officious tone of the nurse entering the room. Nurse Villeneuve by her name tag, was a rather plump woman with a sort of jovial face that was completely overridden by her take charge voice, \"Ok you two, it's time to say your good nights, this poor girl is going to sleep for the night, so we're going to have to ask you to leave.\"\n\n\"Don't worry, she is in very good hands, and I will personally make sure she is given the very best care. My heart goes out to her, for no one should be treated like this.\" Her jovial face turned very warm and Mindy knew Vivian would be in good hands.\n\nMindy walked over to the bed and bent down to give Vivian a kiss, \"Ok Viv, we have to go but Nurse Villeneuve has promised to make sure you are given the very best care. We'll be back in the morning, luv you!\"\n\n\"Thanks for everything Mindy\" she turned and looked at Jonathan, \"you take good care of this girl, she is the best!\"\n\n\"I know, I think so too, good night Vivian, it was nice to meet you, and we'll see you in the morning.\"\n\nVivian gave Mindy a little wink and a smile as she waved with her one good arm as they left the room.\n\n\"Amazing how they were able to patch her up so well, she looked so scary when we first saw her,\" Mindy mused as they walked down the hall. \"You sure have spent your time in hospitals today, I'm so sorry about all of this. I just want to thank you again for being with me Jonathan, you can't believe how much having you with me means to me.\"\n\n\"I wouldn't want to be anywhere else Mindy, you have become such an important part of my life now, and I hope an even more important part.\"\n\n\"You certainly know how to get right to a girl's heart, Jonathan. I feel so lucky that I didn't lose you during my little \"weird period\" adjusting to all the effects of the hormone changes and the emotional roller coaster the new meds brought on in me. I have to tell you, it took some getting used to. It sure made me wonder about what was in the street drugs I was taking, it must have been mostly baking powder or something, because I never went through anything like what I have been going through with this new regimen. There were times I didn't want to be with me let alone try to be with anyone else, especially someone I care for as much as I do you.\"\n\n\"Thanks Mindy, Christine sorta gave me a little explanation about what you were going through and to try to give you some time to adjust. She told me you would be talking to me about it when you were ready. I do have to say it was hard Mindy, I got to know how much I care for you though, missing you so much. But I do have to say, even though the emotional changes were difficult for you to go through, the physical changes are remarkable. I was attracted to you right at first, I saw something inside you, a spark if you will. But the subtle changes to your body and the radiance in your demeanor now make you absolutely gorgeous!\"",
        "Mindy gave him a playful slug to his arm, \"Come on, it's still just lil ole me.\"\n\n\"Well, I am falling for 'lil ole me' in a big way,\" Jonathan whispered into her ear as he put his arm around her shoulder as they walked out the hospital doors into the night air.\n\n\"How 'bout we go finish getting you settled in at Mia and David's house?\"\n\n\"Sounds great!\" Jonathan felt himself begin to harden at the husky overtone in her question.\n\nAs they drove the short bit from the hospital to the house, they were both lost in their own thoughts. Mindy decided to text Christine a short \"I'm with Jonathan, Vivian is ok and in good hands- as am I lol. Don't worry if I don't make it home tonite.\"\n\nShe smiled to herself as she slipped her phone back into her purse. She tried to scoot a little closer to Jonathan but the center console made it a little difficult.\n\nThey pulled up to the house and Jonathan used the garage door opener and they pulled in and got out.\n\n\"This is so cool,\" Jonathan giggled. Mindy laughed out loud, \"You are like David! Mia gets such a big kick out of how much he loves having a garage with an electric door opener. What is that some sort of guy thing or something?\"\n\n\"I guess it is, especially for guys that never had a garage, let alone one with an electric door, it is just so cool!\"\n\nThey were still laughing as they walked into the house. Jonathan hadn't even gotten to the light switch before Mindy basically attacked him. She pressed into his body so hard, she had him pinned against the wall. Not that he minded in the least, and he got into the act by reaching out and pulling her even tighter to him. Their mouths were locked in that wonderful kiss of passion, love, and lust. Tongues were dancing within each others mouths, bodies were pressing against each other as if trying to make one being. Mindy's legs began to tremble, \"Let's go up to my room before we put a hole in their wall,\" Jonathan managed to whisper.\n\nMindy felt his strong arms picking her up and cradling her. She just let her body go limp and feel everything as he carried her up the stairs and lightly placed her on the guest bed. He started to reach for her, to take off her blouse, but she sprang up and said \"No! I want to undress you first!\"\n\nMindy got up and playfully pushed Jonathan onto the bed. He played along and exaggerated his fall onto the bed, much to Mindy's glee as she giggled and laughed. He was amazed at how nimbly Mindy was able to disrobe him. Her eyes were ablaze in lust, and every movement she made to expose him more was met with a kiss to the body part just exposed.\n\nJonathan was in heaven, albeit a bit of a split heaven, for part of him wanted to throw his head back and enjoy the expertise of Mindy's disrobement, but the other half wanted to stay up and watch her every movement as she prepared him for what he had been dreaming about since the first night he saw her.\n\nAs his t-shirt was lifted over his head, he could feel her tongue and teeth with his little nipples. As the shirt was thrown aside she was able to really attack his nipples with all the built up lust and passion that she had within her. Just as her eyes were ablaze, it appeared all of her glowed and Jonathan could not help but to reach out to try to feel her. She once again playfully pushed his hand aside, \"All in due time my love, all in due time. Just lay back and relax and let me make love to you in all the ways I've been dreaming about.\"\n\nJonathan did not need to be advised twice, and laid back and let himself totally give in to the pleasures in store for him. He had never been seduced before, not even close. There had been a few awkward attempts at lovemaking in his college days, but mostly he had stayed alone, especially after he lost his sister. What Mindy was doing was such a turn on, he hoped he could withstand this pleasure and not lose control before they were both actually in the act. Mindy's practiced fingers and hands had his shoes and pants off in no time. \n\nShe giggled as she tried to pull his tighty whiteys off when they got caught on his now rock hard, throbbing penis. She laughed again as she set his cock free of his jockies and his cock sprang free and slapped him in the lower stomach. \"Oh Mindy, I can't believe what you are doing to me! You have me harder than I can ever remember. I want you so badly, please, please Mindy, I want to make love to you now!\"\n\n\"Shhhh my love, just relax and let Mindy show you how much she loves you.\"\n\nAnd with that, off came the socks and Jonathan was now completely naked. She kissed him on the mouth and then let her kiss trail down his chin, neck, and then chest. She played a little more with his nipples. She enjoyed seeing his body lift to every one of her kisses. She could tell he had wanted this as much as she had. She finally made it down to his raging penis and let her tongue flick and play with all the precum that had been generated by her talented undressing ability.\n\nHer last flick stopped at the bottom of his penis head, and she did the trick where she rolled her tongue to encircle his hardon. Jonathan moaned and threw back his head. He had unconsciously raised his midsection up to his love. As she took him completely into her mouth Jonathan almost screamed. He reached for her and tried to pull her away, \"I'm going to cum!\"\n\n\"That is the point my love, go ahead and let it go.\"\n\nMindy went back to work on his rod, and in no time she could see his toes curl, his body spasm, and finally shot after shot of his seed sprayed into her mouth. She took him all in, lifted his head to make sure he was watching and made a little show of swallowing all of his seed.\n\n\"My God! I have never felt anything even close to that intensity.\" Jonathan croaked. \"Give me a couple of seconds to get my bearings here and I want to do the same for you.\"\n\nMindy smiled, and kissed him, fully, as she laid down on the bed next to him.\n\nJonathan wanted her to be naked before him so badly that she had to remind him to be gentle a couple times as he started trying to undress her. His fingers, normally were very nimble, but tonight, he felt like he was barely in control of them. He fumbled a lot with the buttons on her blouse. He loved finally getting if off and made a big scene of throwing it onto the floor. He did a little better undoing her bra, and gasped as he set her \"little girls\" free. He didn't know or care where he dropped the bra, all he wanted was to have his mouth all over these gorgeous globes that he could only dream about for so long. His tongue, his teeth, his fingers were all over her newly developed breasts and Mindy loved the feeling.\n\n\"Oh yes Jonathan, take them into your mouth, play with my hard nipples, I want you so badly!\"\n\nJonathan finally regained a bit of composure and started his way down her stomach, making his way down but felt Mindy's hand on his head.\n\n\"You don't have to do this,\" she said in a husky whisper.\n\n\"I want to make love to you, all of you,\" and with that Jonathan resumed his erotic adventure, kissing her stomach, circling her navel with his tongue, enjoying the moans escaping from her mouth and the movement of her body as she writhed in pleasure at his every touch. He reached down to pull away her panties, and slipped them all the way off, enjoying the fact that she too was now completely naked for their combined enjoyment. \n\nHe slid down a little further, and slipped between her legs. She felt his movement and spread her legs to open herself to her lover. \n\nAlthough Jonathan was a bit unsure and totally unpracticed, he didn't let that stop him and he let his one hand cup her sac, and started stroking her now semi hard penis with his other. Mindy was in paradise, as she had always been the one to make the moves and very seldom got any pleasurable attention in return. \n\nHer head was thrown back as she gave herself completely to him. He took her hardening penis and gently kissed the tip. He let his tongue circle it and felt her hips buck. He let her motion slide her completely into his mouth, and then he slid back out to take just her head into his mouth and let his tongue circle the bottom of the head.\n\nMindy's moans were getting louder and this only pushed Jonathan on. He let his hand release her sac and let his finger find her puckered opening and he teased her by circling it in time with his tongue circling her penis head. He sensed her ensuing orgasm and began bobbing his head on her shaft in earnest. He plunged his finger to its hilt into her canal. Mindy was in heaven, and with a huge scream released her load into Jonathan's waiting mouth. \n\nShe impulsively reached down to lift his head to her, so she could kiss him. In so doing mixing their love's juices together in the most passionate kiss either had been a part of.\n\n\"Oh my God Jonathan! No one has ever done that to me. You took me to a place I've never been, but sure want to go back as often as I can!\"\n\nJonathan couldn't help laughing, and once he started Mindy did too. They pulled their faces apart so they could both see the shared joy in the others face. Then they hugged and quietly just enjoyed the feeling of the others body so close.\n\n******"
    ],
    "authorname": "cliptoe",
    "tags": [
        "transgender",
        "srs",
        "oral",
        "love"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/mia-mine-ch-12"
}