{
    "title": "The Blackheart Stone",
    "pages": [
        "Chapter 1\n\nBeth took the necklace out from its packaging. The chain was silver, the pendant some dark stone she couldn't identify. From a distance it seemed as opaque as onyx, but when she held it up to the light she thought she could see smoke writhing inside it. She laid it in a copper bowl surrounded by five candles, a pentacle connecting the candles. As per the instructions, the pentacle and surrounding runes were drawn in blood. It had been an awkward conversation convincing the local butcher to give her a pint of pig's blood. He thought she was going to try and make her own black pudding as a treat for her husband. Beth had a whole different treat in mind.\n\nShe tore open a firework casing and carefully tipped some of the contents into the bowl. Then, she took the knife and cut her fingertip, allowing several drops to fall into the bowl. She began to incant the phrase she had rehearsed earlier, took a match, and threw it into the bowl.\n\nThe pyrotechnic powder flared explosively. White sparks and blue flame erupted from the bowl. Chemical smoke started to fill the room. And then, the small amount of firework fuel began to fizzle out. Beth chanted harder, faster, fearing she had been duped by a wily shopkeeper and that instead of surprising her husband with an amazing anniversary gift like she had promised, she would be left foolish and naked in a bedroom filled with smoke and pig's blood. Her heart raced.\n\nThe flames turned a deep red. The stone glowed, giving off an unearthly black light. It pulled the shadows toward it, darkened the candles, and made the red fire seem like the only light source in the universe. Beth looked deep into the flames. The aroma turned from the smokiness of cheap fireworks to exotic spices. Slowly, the fire rose up and contorted. From the bowl came a dancing figure and a low, silky voice.\n\n'What do you want, human?'\n\n'I want to be more beautiful,' Beth replied without hesitation. She wasn't a bad looking woman, but now, in her mid-thirties, time had taken its toll on her as it did to all women. Subtle lines had begun to creep in, once proud breasts needed a lot more support, and her stomach muffin-topped over her jeans. Meanwhile, her husband had gone from boyish good looks to rugged manliness. A couple of years ago he had started hitting the gym and it had paid off. He looked good. Really good. And other women had noticed.\n\nJake seemed happy with her, but now and then she would catch some waitress or stranger flirting with her husband. So far the girls were doing all the flirting, but Beth was anxious. Surely it was only a matter of time before her looks went further south and Jake fell into bed with some barely-twenty-something bombshell bimbo. So she wanted to win him back before she even lost him, and keep him close. She wanted the quick-fix only occult magic could provide.\n\n'There's a price,' the silky, feminine voice in the fire said.\n\n'Name it,' Beth asked. According to the shopkeeper, she was only dealing with a lesser demon. An imp, really. The price should be affordable, and not at all like giving over her soul or unborn child or something equally undesirable.\n\n'I wish to feel the sun on my face. The wind in my hair. I wish to have a face and hair to feel these things, and more. I want to be inside your body, in total control, for seven days in every month.'\n\nBeth paused. She hadn't expected this. 'So, you possess my body?'\n\n'Yes.'\n\n'And then you leave? How do I know you will leave?'\n\n'That will be the promise. The compact between us. The stone will honour our agreement.'\n\n'A week is too long. A day.'\n\n'Two weekends.'\n\n'One weekend.'\n\n'Fine,' the demoness said with some irritation. 'The last weekend of each month. From Friday 6pm through to Monday 6am.'\n\n'Deal.'\n\nThe red-and-black flame hissed and sputtered. It shot up into the air and floated level with Beth's face. She gaped in confusion. Before she could react, the fireball flew forward and leapt down her throat. She instantly blacked out.\n\nWhen she woke up it was late. Her husband was due home soon. They had a restaurant booked. She put the light on. Her body was still the same. She felt no different. Had the smoke gone to her head, made her hallucinate and black out? She sighed, cleared away the candles and blood, and then caught sight of herself in the bedroom mirror. She was still naked. Still aging and sagging.\n\nShe ran her hands over her stomach and imagined it firm. As she thought about it, a change came on. Creases and folds receded, fat faded, and skin became taut and smooth. Beth gasped. Her hands trailed upward, to her breasts. She cupped them, supported them, made them seem perky and full. Then she let go. Her breasts stayed exactly as they were, as if supported by invisible hands. \n\nShe grinned, and as she did, teeth turned radiant white. Eyes gleamed. Hair grew, cascading over her shoulders like a silken waterfall of lustrous auburn. Elsewhere, hair receded, leaving her pussy perfectly smooth. The sag and cellulite in her buttocks vanished, leaving a round, peachy bottom with the springy youthfulness of a teenage gymnast.\n\nThe changes rippled through her until she stood in front of the mirror beholding an idealised version of herself; she wasn't just young and beautiful again, she was better than she had even been, a best case scenario of what she could be. \n\nPerfect fingernails brushed back her mane. It nearly reached her buttocks. Jake would like that. He always had a thing for long hair, but hers had always turned to split-end central by the time it reached her shoulder blades. \n\nThoughts of Jake came to the front of her mind as she heard his key click in the lock downstairs. In a moment he was about to get his surprise gift.\n\nChapter 2\n\nThe room was dark when Jake entered. 'Beth?' he called out.\n\n'I'm on the bed. Get undressed and join me.'\n\nShe heard him undress, clothes falling to the floor, and then felt his weight on the bed as he searched for her. Questing hands landed on her thigh, and moved up to her stomach. There was a brief pause and then his curious fingertips traced her flat belly. 'You feel good,' he murmured. A hand went down to her snatch. 'Wow, you waxed. You've never done that before. Is this the surprise?'\n\n'It's only part of it, darling. Kiss me.'\n\n'Ok,' his weight shifted. She expected his face to come down on hers; instead there a sudden kiss on her clit, followed by a deft tongue flicking and licking it. Sparks erupted behind her eyes and she gasped. She had never been that sensitive before! She wondered what other surprises the demoness had thrown in. \n\nJake continued to expertly lap at her clit. She quickly came to a screaming climax, and before she could catch her breath, her husband had positioned his cock over her dripping wet slit. 'Put it in me, please,' she begged. \n\n'Christ,' Jake grunted as he pushed his cock in. 'That's fucking tight.'\n\nBeth could only burble some nonsensical reply, but she seemed happy, deliriously so. Her cunt was virgin-tight again, and way more sensitive that it had ever been before. Every thrust threatened to make her explode with sexual pleasure. Jake rammed away, savouring the tightness and coming to a quick orgasm, but not before Beth had come two or three times. The demoness had really delivered.\n\nThey collapsed to catch their breath before the next round. Jake leant over and put the bedside lamp on. \n\n'Surprise,' Beth grinned. Jake's jaw hit the pillow. He propped himself up on one elbow to get a full view of his supercharged wife.\n\n'What the hell happened?' he ran his eyes up and down her. This morning she was a normal thirty-four year old woman, maybe carrying a little extra timber and sagging around the edges, but in his eyes still good looking. Now she was a fashion magazine pin-up; glowing with youth, vitality, and firmness. Her body bordered between lithe athleticism and a gentle hourglass shape.\n\n'Do you like it?'\n\n'Of course!' he gave her bottom a playful spank and she giggled. 'But this isn't surgery or make-up. What science is this?'\n\n'Not science. Magic.'\n\n'Magic?'\n\nShe told him about the deal with the demon. Jake became upset. 'You didn't have to do that, Beth. I loved you the way you were.'\n\n'And now you love me more,' she reached out and grasped his cock. It was rock hard. 'See.'\n\n'Yeah, well, I can't argue with the results, but what happens when the demon takes over.'\n\n'You'll look after me. And if she's a total hell-bitch, then I cancel the deal. It just means I go back to looking like before. And I lose this wonderful ass,' she positioned herself on the bed on all fours, presenting her ripe, peachy buttocks to him. Her proud cunt was on display, promising more screaming loud orgasms.\n\nJake grasped her buttocks, taking each cheek in his strong hands. He squeezed. They were so firm. So juicy. His cock throbbed. 'Alright. We'll give her a chance.'\n\n'Shut up and put that thing in me,' she wiggled her backside provocatively.\n\nJake gripped her hips hard and yanked her toward him as he thrust forward. More sparks flew behind Beth's eyes. They never made their restaurant booking. It didn't matter. It was a long, happy anniversary night for them both.\n\nChapter 3\n\nIt was the last Friday of the month and not long until 6pm. \n\nJake loosened his collar, poured himself a whisky and sat down in the easy chair. He frowned and sipped his scotch. Beth sat on the edge of the bed. She stood up again and flitted to the other side of the room.\n\n'For God's sake, keep still. You're starting to make me nervous,' he growled.\n\n'Sorry,' she sat back down on the edge of the bed, toying with the necklace. It had to be worn at all times. That was part of the deal. It connected her to the demon, kept the magic flowing between them. Kept her beautiful, and also chained her to the inescapable debt.\n\nJake and Beth had enjoyed her new looks - God knows, the rampant sex proved that much, and girls vying for Jake's attention were left blown away when Beth turned up - but now it was time to pay the price. It was only for a weekend, and Jake would keep her safe.\n\nAn alarm on Jake's phone briefly chimed the hour. Beth gripped the edge of the bed tightly, afraid of what was to come. Jake noticed it first. A wisp of black smoke leaked from the stone. It grew and coalesced around the necklace. When it had become a small cloud, a tendril rose up and homed in on Beth's face.\n\nShe leaned back, futilely trying to avoid it. It invaded her eyes, nostrils and mouth, filling her with thick, inky darkness until she had breathed it all in. Beth fell back on the bed. White smoke poured from her mouth and trickled into the stone. \n\n'Beth?' Jake leapt off the bed and rushed to his wife.\n\nEyes that were not his wife's opened to greet him. There was a flash of red there, then gone. But her brown eyes seemed different - darker, more like Cherrywood than chestnut in colour. The demoness smiled lasciviously. 'Hey there, stud.'\n\nJake stood over the bed, unsure of what to do or say. It was subtle, but he could see that the woman that looked like Beth was not Beth - the way she moved her body, her facial expressions, and even her intonations were all slightly off. It may have fooled a friend or acquaintance, but not Jake. 'So. You're the demon.'\n\n'Let's not make this difficult. Call me K'Yara. Help me up.' Jake took her hand and pulled her up. K'Yara smiled. 'I can see why she made the deal. You look like you're worth fighting for.'\n\n'What are you going to do? I won't let you do anything bad to my wife...'\n\n'Relax. I just want to have a little fun,' K'Yara unbuttoned Jake's trousers with lightning speed and precision. Surprised, he stepped back, tripping over his trousers and landing in the easy chair. The demoness crawled over to him and her hands and knees and brought her face up to his cock and balls. \n\nA long tongue caressed and stroked his bell end. Had Beth's tongue been that long before, he wondered. It was hard to tell. She didn't really enjoy giving him blowjobs. When she did it was always with that look on her face, like it was a chore. But not K'Yara. He looked down, and her eyes met his. Her eyes were fire and lust as her hot mouth enveloped his manhood, swallowing it inch by inch until she had taken it all. Her slender neck bulged as she rocked back and forth, deep throating him to an intense orgasm.\n\nBeth normally coughed and spluttered at this point. The demoness grinned as spunk poured from her mouth. The long tongue came out and licked it all up. 'Now let's have some real fun.'\n\nShe stood up, shimmied out of her skirt and leant over the bed, offering herself up. Jake took his cock in hand and positioned it at the entrance to K'Yara's cunt. Her deft hand moved back and repositioned. 'Not there. There.'\n\n'Er...' Jake hesitated. Beth never gave him anal. \n\n'Come on, stud. I'm not Beth. I'm a fucking demon who has been trapped in a stone for a long time. I need your cock now.'\n\nJake parted her cheeks and slid his cock into her asshole. He was fucking Beth's ass. He couldn't believe it. Beneath him, K'Yara, in his wife's body, howled with ecstasy. It was so wrong but he was loving it. \n\nIt was only the start of a fuck-filled weekend. \n\nChapter 4\n\n'So. What happened? How was it? Did anything bad happen?'\n\nJake yawned. It was Monday morning, a little after 6am. His wife had woken up and nudged him awake. He was exhausted. Jake rolled over.\n\n'My God. Look at you. You're scratched to pieces. And is this a bite mark? I'm so sorry. She must be some sort of crazy monster.'\n\n'Yeah. She was a bit wild. She calmed down. She was just excited to be free.'\n\n'So what happened?'\n\nJake rolled back over and met his wife's concerned look. An unbidden image of his wife's lips wrapped around his cock flashed in his mind. It was a better look than the one she wore now. With some obvious guilt, he replied, 'Look. I'm not going to lie. We had sex.'\n\n'Ok. But just you and her, right? Not you and someone else, or her and someone else?'\n\n'No. Just us two.'\n\n'Well that's okay. It's not like you're cheating on me. You're still having sex with your wife, sort of.'\n\n'It's a strange way of looking at it.'\n\n'Well how else can I look at it? I'd go crazy otherwise. As long as it's just you two, I don't mind.'\n\n'Ok.'\n\n'So... anything else?'\n\nJake shrugged. 'Not really. She's been trapped inside a stone for however long. Just having a sense of touch and taste was enough for now - she went around the house like...' a bitch in heat, he almost said. There were very few surfaces left that they hadn't fucked on. '...like a puppy, y'know, just looking at and touching things.' Things like his cock. It was practically red raw.\n\n'Well, good. As long as she behaves, we'll keep to the deal,' Beth climbed out of bed to go to the bathroom. She winced in pain and hobbled slightly. For some reason her backside hurt.\n\nChapter 5\n\nWhen K'Yara had visited for the first time, it had been tense for Jake. The sex was wild and unexpected but he had been on edge, watching a stranger puppet his wife's body, worried that the demoness might do something weird or dangerous. But the weekend had passed without any such incident, and in the weeks that followed he had time to reflect.\n\nFor a start, the sex had been awesome. Really awesome. Blowjobs, anal, titwanks, fucking on the dining room table - nothing had been off-limits. All the things Beth turned down, or performed grudgingly, K'Yara went at with happy glee. \n\nTwice Jake had asked Beth for a blowjob since K'Yara's first visit. Twice she refused. When he playfully tried to pull up her skirt in the kitchen she elbowed him in the ribs and walked out. He didn't even bother asking for anal. \n\nSo it hardly surprised him when he realised he was looking forward to K'Yara's next visit. Not that he still didn't enjoy sex with his wife. It was still frequent, and she was gorgeous to look at, but the demoness had infected his system and left him feverish for what she could offer.\n\nThey waited in the same positions as before, Jake in the easy chair and Beth on the bed. Unusually, they had come home and had quick, aggressive sex. Jake suspected it was Beth trying to leave her mark on him before the other woman arrived. She wore one of his button-up work shirts and a pair of panties. Jake wore nothing. He didn't see the point in dressing. \n\n'What's it like, when you go inside the stone?'\n\nBeth shrugged. 'Sort of like being half-asleep. I'm only vaguely aware of stuff. It seems to pass slowly, but then also it ends really quickly.'\n\n'Right.'\n\nThe exchange happened at 6pm. The inky black smoke coalesced and invaded Beth's body. Her own soul flowed into the blackstone pendant. The demoness sat up, a lewd smile on her face. 'Hey there, big boy. Did you miss me?'\n\n'Not as much as you missed me.'\n\n'Oh, aren't we cocky.'\n\nJake glanced down at his naked prick. 'You could say that.'\n\n'Take care. I could become more than you can handle.'\n\n'I managed fine last month.'\n\n'Well then, let's up the stakes.'\n\nK'Yara ran her long tongue around her lips. Jake watched in astonishment as the lips, already fulsome from the previous enhancement, swelled to pillowy, bee-stung proportions, and turned glossy apple-red as the tongue ran over them.\n\nMake-up and eye shadow appeared, giving K'Yara's face a highly contoured and incredibly sensual look. Jake very nearly failed to spot the bulge growing beneath K'Yara's shirt. The pert breasts ballooned upward, straining against the fabric of his button-up shirt. The fabric tensed and a button popped away from the thread. It was sent flying across the room.\n\nIt was a damn good thing Jake was naked, otherwise his cock would have torn through his trousers and sent buttons flying back. His wife's modest breasts were now a plastic surgeon's Holy Grail - as big as a schoolgirl's head, round, full and smooth, without scars or any care whatsoever for gravity.\n\nThe demoness picked up a discarded piece of his wife's clothing, a pair of work trousers, and tore them effortlessly into shreds. Then she kept one of the bigger pieces, gave it a magician's flick of the wrist and transformed it into a plaid miniskirt. She shimmied into it. Another of the scraps were transformed into sexy stockings, and finally she morphed a pair of dull bedroom slippers into a parody of schoolgirl shoes. \n\n'Oops. Now I barely look like your wife, and you're lusting over me. Aren't I a naughty little demon for leading you astray? I should be punished,' the demoness placed a finger against her lips and made a mock-quizzical expression. Jake noticed that the fingernail was long, manicured, and a garish red to match the lips. His wife would never wear such slutty make-up. It was making him hard as hell. When K'Yara began to suck on her finger, he nearly lost it entirely.\n\nHe leapt up from the easy chair and spun K'Yara round with aggressive force, bending her over the bed. The six inch heels arched her legs and arse perfectly. He flipped the slender skirt over her bubble-butt and delivered a single, hard spank.\n\nThe sound echoed around the bedroom, followed closely by K'Yara's slutty pant of excitement. 'Yes, Daddy. Harder!'\n\nJake grinned. His wife never went for roleplay. He delivered another firm, open-palmed slap. The big round buttcheek went bright red where he spanked it. K'Yara shuddered and howled and gripped the bedsheets tightly in her hands. \n\n'You're a bad little slut. You shouldn't be teasing me. I'm a married man,' he gave her another spank.\n\n'I'm sorry, Daddy. I didn't mean to drive you wild. I didn't mean to make you forget about her.'\n\nJake hesitated. This wasn't right. The demoness had turned his wife's body into a pornstar parody. Would it go back to normal when she left? The worst part was, he really liked the way his wife - the demon, whoever - now looked. Was this crossing the line? Was he being unfaithful?",
        "K'Yara noticed the change in Jake. She spun round and planted a deep, wet, soul-stealing kiss on Jake's lips. Her long tongue quested hungrily in his mouth and the two sparred like sloppy teenagers. K'Yara's eyes flashed red and she grinned with horny abandon. She whispered into Jake's ear.\n\n'Will you take my virginity, Daddy? It will be our little secret. I won't tell Mummy.' Then she let go, fell to the bed and pulled up the hem of her plaid skirt. Jake watched as the impossibly large breasts grew the extra cup size needed to finally destroy every seam on the shirt. It fell away from K'Yara's body at the same time as the last shreds of Jake's resistance. He leapt on her, prick in hand.\n\nK'Yara's words hadn't just been mere roleplay. The demoness had returned virginity to the body. They both gasped as Jake's manhood found initial resistance in K'Yara's cunt and then burst through. \n\nJake had never deflowered a woman before. It had never bothered him. He always figured it would be a painful, messy experience, and not at all like the porn shows where the girl looked like she was about to die from pleasure.\n\nThis was like a porn show where the girl looked like she was about to die from pleasure. K'Yara howled and screamed and cried, digging her nails deep into Jake's flesh as he pounded into her. After that, he never thought about his wife again all weekend.  \n\nChapter 6\n\nIt was nearly time for the demonesses' third visit. Jake tried to hide his excitement. By now, his wife was relaxed. After the second time he had again reassured Beth that nothing of interest had happened, apart from some fairly vanilla sex. \n\nJake nearly laughed out loud. The sex had been crazier than the first time. The bedsheets had to be thrown out and replaced. Not even dry cleaning could have removed all the semen and 'virgin' blood from them. Fortunately (or unfortunately, Jake wasn't really sure), the demoness' extensive modifications to Beth's body had been undone when she left, and when Beth woke up on the Monday she was her normal self. \n\nOr rather, her normal enhanced self.\n\nSo now Jake wondered what was going to happen this time round.\n\nThe exchange happened as it had done before. Thick smoke poured from the stone. It seemed darker and fuller than the earlier times, while Beth's white smoke looked fainter. There wasn't time for Jake to dwell on this, as the demoness took over Beth's body and happily stretched out as if waking from a long, restful sleep.\n\nJake began to undress. K'Yara laughed, her eyes glowing a sensual red. 'Not so fast, stud. You're meant to wine and dine a lady first.'\n\nJake gave her a confused look. K'Yara rolled her eyes and walked over to the wardrobe. \n\n'I look forward to fucking your brains out, darling, but I haven't left the house once. I want to see the world outside.'\n\n'Well...' Jake hesitated. It seemed a simple enough request, harmless in fact, but it conflicted with the pent-up sexual feelings of the past month, and the fact that he knew it wouldn't be a good idea to be seen around town with a beautiful woman who wasn't his wife.\n\nK'Yara picked out one of his wife's plain floral dresses, tutted, and gave it a casual flick. It shimmered and rippled as it changed shape and colour from top the bottom, transforming into a bright red, contour hugging, backless dress. She put it on. \n\n'I'm not bad, I'm just drawn that way,' K'Yara giggled, put her hand on her hip and threw her massive chest out in a Jessica Rabbit pose. Her hair colour exploded into fiery redness to match the look. Jake was even more inclined to keep the demoness home: she had a body that needed to be fucked right now, and every head in town would be turned to look at her, and then him. By tomorrow everyone would think he was having an affair.\n\nAs if reading his mind, she sashayed over, wrapped her sensual around him and kissed him. 'It's fine, lover. We'll go out of town. Find a nice club. Have a few drinks and go dancing.'\n\n'I suppose...'\n\n'Have you ever had a threesome?'\n\n'What?' Jake was taken aback by the question. 'No.'\n\n'Poor boy. Do you think I really care about dinner and dancing? I like women too, you know. So let's go pick one out from a club and bring her back.' K'Yara's eyes sparkled mischievously. Jake was dumbstruck, so she continued. 'I'll take that as a yes. Get dressed and call a cab, lover.'\n\nJake drove instead of calling a cab. He didn't have the confidence that a cab driver would be able to keep his eyes on the road with K'Yara reflected from the back seat in the rear view mirror. There was another reason it was a good choice. K'Yara gave him a slow, sensual blowjob as he drove north out of town toward a country club he knew of. By the time he pulled up into the car park, K'Yara worked her magic and released his pent-up orgasm. The climax nearly wiped him out.\n\n'Come on, lover. Let's pick up a treat for tonight's entertainment.'\n\nThey entered the club and sat down at a table that afforded them a view across the floor. Together they sipped drinks, played with each other under the table, and watched the girls go by. Jake wasn't entirely sure what the demoness had in mind but he went along with it. She glanced and nodded at a blonde girl that was passing by. 'Fancy fucking that one?'\n\nJake shook his head and pointed to a woman at the bar. 'No. Too tall. How about that one?'\n\nK'Yara sneered. 'We can do better.'\n\nThe waitress came over. 'Can I get you anything else?'\n\nK'Yara looked the waitress up and down. The waitress smiled nervously, suddenly aware of how beautiful K'Yara was. She felt like a rabbit pinned in headlights as the gorgeous demoness stared at her. It was as if K'Yara was stripping away her clothes with her eyes, and for a fleeting second the waitress felt utterly naked in the middle of the nightclub.\n\nThe demoness glanced over at Jake with a smirk. 'Thinking what I'm thinking?'\n\nJake stroked his stubbled chin and appraised the waitress. She was young and lean, with a body well-toned from some sport or other, and had a skilful way of applying make-up that gave her an edgy, confident look when she wasn't being mentally stripped naked by a demoness. Her breasts were a good handful, though Jake was losing perspective on tits and ass now that he had a pornstar demoness for an illicit lover. \n\nSpeaking of ass...\n\n'Turn around, babe,' Jake ordered the waitress.\n\n'My name is Tia,' she huffed, suddenly annoyed by the treatment she was receiving. \n\n'Fine. Turn around, Tia,' Jake made a spin motion with his finger. \n\n'That's better,' she retorted. She gave a slow spin, her head a little fuzzy. Why was she letting these two ogle and order her around? Any resistance melted when she completed her spin and her eyes landed on K'Yara. Those eyes... they were a smoky, blazing fire that entranced and drew her in...\n\nTia blinked. She was in a car, driving back into town. The rugged, good looking guy who had been admiring her was up front behind the wheel. She looked around for the woman. Suddenly she turned and found her face up close against a pair of mammoth mammaries.\n\n'Looking for something, sugar?' a silken voice purred.\n\n'Where am I?' Tia asked. The last half hour was a blur. She vaguely recalled agreeing to go along with these people. Why would she do that?\n\n'We're going back to our place for a little fun, my pet.'\n\n'What? But...'\n\n'Hush. Here. Focus on these,' K'Yara's hands pulled down her dress. For a moment, the dress refused to come down over the plump pair of tits, but with a sudden pop the dress tugged free and the huge breasts bounced exquisitely. They filled Tia's entire vision and her gaze focussed on two stiffening nipples. They were thick, puffy and delicious looking.\n\nDelicious looking? I've never considered tits to be delicious before, Tia's mind protested.\n\nThe protest didn't last long. K'Yara's hand snaked around the back of her head and drew her in. Instinctively she began to suck and lick. For a second she was startled when milk expressed from a nipple and she nearly drew back. But then...\n\nOh my fucking God, it's so delicious. Oh God, now I'm horny. Why am I so hot and horny?\n\nShe lost focus and drifted out in a haze of drugged bliss. When she blinked and looked around, she was in a bedroom. The man was there, naked and holding his cock. Cock. That was what Tia needed. The demon milk had acted as a supercharged aphrodisiac, and now she wanted to be fucked more than anything else she had ever wanted in her life. Her snatch was a gushing waterfall, a torrent of girl juices, and yet so thirsty. Thirsty for only what a cock could offer. She practically pounced on Jake.\n\n'Easy, my pet. We've got all night,' the demoness held her back, pushed her down to her knees. Together they crawled to Jake and approached his cock, taking it in turns to kiss and caress and suck it. 'So, is this how you pictured your threesome turning out?' K'Yara winked at Jake.\n\n'Sure. But I've got a few other ideas in mind as well,' Jake smiled. \n\nChapter 7\n\nIt was Monday again. Beth woke up feeling groggy and exhausted with no idea why. No idea at all that her body had been used and abused all weekend for ceaseless sinful sex in every hole. The Demoness had cleaned up after herself, so all the stains and smells of the weekend had been washed away, the bruises healed and the red welts sent away. But still, there was a deep ache in her cunt and anus from the cock pounding she had received - or rather, the Demoness had received. Beth received all the pain with none of the pleasure.\n\nJake slept on beside her. Beth noticed that he was fully erect. The bedsheet was practically a tent propped up by his massive pole. Had it always been that big? She wondered. Just what exactly do he and the Demoness get up to while I'm gone? \n\nBeth felt a momentary pang of jealousy and then sent it away. It had been her choice, after all. And it was a small price to pay. Better she lose him to another woman for a weekend each month than lose him entirely. Besides, she really liked the attention, and not just from Jake.\n\nIt was as if she was a sexy newcomer in town and at work. Men who previously ignored her now turned their heads as she strolled past. The customer service she received in shops and bars was now lightning fast - with extra portions, free drinks, discounts offered with a cheeky wink and the occasional phone number. And at work she was now next in line for a promotion that before had been well out of reach. \n\nSo yes. It was worth the strange aches she had after every possession, worth losing Jake for a weekend each month. She had never felt so sexy and empowered. She rose, worked out the kinks in her body with a few stretches and went to dress. \n\nHer underwear didn't fit.\n\nShe tried on three sets of bras and panties.\n\nHer breasts spilled over the cups of her bras.\n\nHer panties rode up between her butt cheeks like they were thongs.\n\nShe studied herself in the mirror. She didn't look much bigger, so it could only have been an extra size or two. But still. She frowned. What the hell was K'Yara doing to her? This was her body, dammit. Before she had been perfectly sculpted and beautiful - now she was approaching... approaching what? The sort of porn star Jake liked to ogle?\n\nShe hefted her breasts. They spilled out of her hands. She let go. They floated on her chest unsupported, kept up by the Demonesses' dark magic against gravity. So she didn't need a bra. With a loose blouse she could get by. \n\nBeth returned to her underwear drawer, wondering whether to go commando or not. Wearing a thong all day sounded uncomfortable. Then she noticed a pair of lacy pink panties that she didn't recognise. Pink wasn't her colour. She held them up suspiciously.\n\nStrong hands suddenly closed around her waist and moved upward. She slapped them away and whirled on Jake.\n\n'Where did these come from?' she snapped.\n\nJake shrugged. 'I can't remember where you bought them.'\n\n'These aren't mine,' she shouted.\n\nJake weighed up the situation. They belonged to Tia. K'Yara and Jake thought they had dressed the girl up in all of her clothes before sending her home in a taxi, but somehow her panties had escaped and wound up in the laundry along with Beth's clothes. Before the weekend, he would have broken down and confessed. But something about ordering Tia around like his own personal fucktoy had made him realise his own masculine power. K'Yara, Tia, Beth - they were his to do with as he fucking well pleased. \n\n'They're yours, babe. You're still half asleep. Come back to bed and wake up properly,' he took her hand.\n\nShe broke free from his grasp. 'I don't like pink.'\n\n'Yes. You do. You love pink. And you should wear more of it. Pink nails and lips would look really hot on you.'\n\nBeth blinked in confusion, her rage suddenly fizzling out. She never thought she liked pink but Jake seemed so cool and certain about the whole thing. Maybe she really did like pink. The panties did look kind of cute. And pink nails to match? It sounded hot just like Jake said.\n\nHe took her hand and guided her back to bed, back to his still erect prick. Within seconds her mouth had enveloped it. Gosh, swallowing this much usually chokes me, but now it's like so easy, she thought. And I really should get some pink lipstick... \n\nChapter 8\n\nThe fourth possession was nearly upon them. Beth sat on the end of her bed and toyed with the pendant. She looked down morosely at her pink fingernails. They seemed wrong and right at the same time, just like the whole of the last month running up to now. Jake had been different towards her - manly and cruel. It made her so wet, the way he decisively ordered her around, the way he would just bend her over when was doing the dishes and fuck her senseless, explode inside her and then walk off, leaving her dazed and happy. But it also scared her. Things didn't used to be like this. She felt as if she was losing herself, and losing Jake. The whole point of the pact had been to keep him close. Maybe it was time to end the whole thing. \n\n'Jake, honey. I don't think I want to keep doing this. It doesn't feel right anymore.'\n\n'But I like the way you look now, babe. Aren't you happy with how you look? How it feels? How this feels?' he caressed her cheek with an open palmed hand and she felt a surge of electricity course through her. The sensation ramped up in voltage as his hand moved down, over her neck, and rested on the huge shelf of her breasts. She bit her lip.\n\nSuddenly, he tore away her nightgown, exposing her thick, curvy body, and flipped her round so she was knelt doggy style on the bed. She leant forward and rested on her huge tits, bracing for the impact she knew was about to come.\n\nThey were both so lost in the savagely intense fucking that neither of them noticed the thick black some pouring out from the stone. It wreathed Beth's head and filled her mouth and eyes, staining the lips black and turning the eyes into darkest obsidian. The faint trail of white smoke seeped from Beth's mouth and entered the stone.\n\n'Oh fuck, what a way to arrive!' K'Yara howled. Her first sensations of taking over Beth's body were of being pounded hard by Jake. She grinned. 'Here come the tits and ass, baby!'\n\nJake stared in wide-eyed amazement as the round bubble-butt he had been holding onto ballooned outward in cartoon proportions. It was the stuff of imagination and photoshopping. \n\nThe same was happening up front with K'Yara's tits. They swelled and spread across the bed, cushioning her nicely as she rocked back and forth against Jake's cock. \n\nK'Yara clenched her cunt muscles and brought Jake to an intense finish. He collapsed, momentarily exhausted, against the luscious flesh of what had been, a few minutes ago, his wife's body. K'Yara wriggled free and gasped slightly as Jake's cock popped out. It trailed a thick, long string of cum. More man juices oozed from her gaping snatch. \n\n'My, we've already made a mess. We spend so much time cleaning up, don't we? Luckily I have a solution for that.' K'Yara smiled. There was a knock at the front door. 'And right on time!'\n\nK'Yara bounced out of the room - almost literally, her huge breasts and ass rolling and bouncing and swaying with fluid motion as she strode away. Moments later she returned with Tia in tow. Jake noticed how glassy eyed and dazed Tia looked, as if she was under a spell. \n\n'Now, my pet. Clean that up first, and then make us something nice to eat. We'll need to keep our energy up for the weekend. And while you do that, I want to make some alterations.'\n\nJake propped himself up to see what K'Yara was up to but Tia blocked his view as she attended to the 'mess'. She gripped his shaft and began to lick away the slick coating of cunt juices and man milk. He fell back and relaxed as the lithe young waitress worked him back to hardness. \n\n'My wife is thinking of cancelling the contract,' he said to K'Yara, who had gone into the walk-in-wardrobe to admire herself in the mirror.\n\n'Convince her otherwise, my lover, otherwise you will miss out on pretty little me.'\n\n'I dunno, she seems so unhappy lately,' Jake pushed Tia away. The girl mewled in disappointment and left to prepare food.\n\nK'Yara emerged from the wardrobe. The cartoon porn star figure was gone. Instead, K'Yara had shrunk the tits and ass down to more modest proportions - as far as breasts the size of her head and an ass that could support a crate of beer were modest - and grown up in height. Her legs had lengthened out, making her as tall as Jake. But that wasn't caught Jake's eyes. At least not at first.\n\nK'Yara had changed the hair to a night black mane that ran down her back and stopped just before the curve of her buttocks. The colour matched her lips, fingernails and nipples. If she had bothered with cunt hair, that too would have been black, blacker, blackest - a black so dark it sucked in all light and attention and returned only waves of lust and sin.\n\nTwo small, sharp horns pierced the hair high on the sides of her forehead and curved back round.\n\nHis wife's once tanned skin was now alabaster white. The Demoness was almost a monochrome image, with the exception of the fiery red eyes. Jake realised there was no pupil in those eyes, only smoke and unholy fire. \n\nK'Yara strutted toward him on long, muscled legs that were like sculpted columns of marble. She seized his shaft with her hand, her razor black talons encircling them with their promise of pain and pleasure to come. 'You do love me, don't you, darling?'\n\n'What?' Jake sat upright sharply. 'I love...' my wife, he was about to say. He never finished.\n\nK'Yara tightened her grip and darted down, plunging his cock head into the hot, wet embrace of her mouth. It felt like a dozen tongues were rolling around his cock and shaft and he gasped. The heat was intense. The Demoness released him and his manhood slipped out. Disappointment hit Jake as the cold air hit his cock. It screamed for attention.\n\n'I want you to love me and not her, my darling. Be all mine.'\n\n'Look, this is great, but I love my wife.'\n\n'Why? Is the sex better?'\n\n'It's not just about the sex. We do other things.'\n\n'Aren't I better in every way? Don't you look forward to these little fuck sessions of ours?'\n\n'Yes, but...'\n\n'And I can seduce a hundred sluts to cook and clean and run chores for us, and for you to fuck.'\n\n'My cock is about to fall off from all the sex we have, let alone fucking anyone else.'\n\n'Poor baby, here, let me help,' K'Yara spat on Jake's cock. The saliva was thick and black, like oil, and it absorbed into his manhood. The veins turned black, and the glans turned the same sinful colour as K'Yara's lips. It throbbed and Jake gasped. Pain shot through him as his cock throbbed harder, growing with each beating pulse. It thickened and stretched and grew and lengthened until K'Yara needed two hands to hold on to it. ",
        "Jake marvelled at it. It felt ironhard, like he could easily fuck a hole in a brick wall, or tear into a hundred sluts without letting up. Beneath the armour plating it boiled with heat and screamed for release. He grabbed K'Yara hard with both hands and yanked her toward him. She grinned, steadied the impossible shaft and positioned herself over it.\n\nWhen it went in even K'Yara, a sex demoness from the pit of hell, screamed at the size and force of it. \n\nIt nearly killed Tia when she returned later on, with a tray of food, and was pulled straight into bed by Jake. No matter how often he came the pressure never eased off.\n\nChapter 9\n\nK'Yara's question weighed on Jake's mind. It wasn't that he loved the demoness. It was just that things were strained between him and his wife. Beth was moody all the time. So too was Jake, though mainly because their sex life had plummeted to zero.\n\nThe monster cock had been fun over the weekend but K'Yara hadn't returned it to normal size, and it was a struggle squeezing it into Beth. It was as if the Demoness had booby trapped Beth's body, so that her body chemistry made her constantly tired and irritable and her cunt too small to accept anything larger than a finger. \n\nJake needed release badly. Beth refused sex on all fronts. After their second painful attempt was aborted, he suggested anal or a blowjob - even a tit wank or hand job would have given him some satisfaction - but all Beth could do was curl up and sob. \n\nTwice Beth had tried to summon K'Yara to call off the deal. Both times she had fallen asleep part way through the ceremony. Jake figured it was another booby trap, some sort of mental trigger that put Beth to sleep whenever she tried to call on the demoness.\n\nJake could have completed the summoning for her, but instead he put away the blood offering and incense and carried Beth to bed. Both times he had barely restrained himself from lubing up his shaft and fucking her passed out body.\n\nHe was a man in torment on several counts. Something had to give. Realistically, they needed to end the demonic pact and go back to how things were. But. But the sex he had with the demoness was like nothing else. It was a drug and he was addicted. He counted the days to the next session. Saving his wife should have been the obvious choice but instead he was on a dark road toward sacrificing her in favour of the demoness.\n\n'Give her to me, my love. If I have her entirely we will always be together. Every day and every night can be like this one,' K'Yara whispered into his ear. It was the fifth visitation, sometime in the early hours of the Saturday, when both Jake and K'Yara were spent and lying in each other's arms. Tia and her friend were somewhere else in the bed. Jake couldn't remember Tia's friend's name - only her expression as she was lured to the house by Tia and then seduced by K'Yara. She had gone from confused to cock-hungry in under a minute.\n\n'Every day you can come home from work to a tidy house, a cooked dinner, and three dripping wet slits to put your hard cock into,' K'Yara kept whispering into his ear, punctuating her point by lazily tugging at his cock in a slow, sensual motion. 'What have you got right now? A so-called modern woman who expects you to work and do half of the house chores? And what sex do you get in return? Nothing. I can give you everything. Every hole, any girl. Just give her to me.'\n\nJake thought it over. The current arrangement was hell. The waiting was too long, the weeks in between full of arguments with Beth. Nor could he go back. If he helped Beth to cancel the pact then the sex would be a pale imitation. Barely even sex at all.\n\nThe two slave girls stirred, as if bidden by their dark mistress, and began to tease his cock and balls with their hungry mouths. His release was building but kept at bay.\n\n'Okay,' he said.\n\n'Good boy. Now you may cum, and then get some rest.'\n\nHis cock exploded, showering the two girls in torrents of sticky fluid. Exhausted, Jake passed out. \n\nWhen he woke up the room was lit by candlelight and suffused with the aroma of incense. There was a low chanting sound. He looked up and saw K'Yara and the two girls stood around a circle of runes and arcane symbols. In the centre of the circle, the copper bowl was supported above a candle. \n\n'Join us, Jake,' K'Yara commanded. \n\nHe rose and moved toward the circle. He stood where K'Yara pointed. There was a pentagram at his feet, with each of them stood at a point. One point remained empty. The chanting continued. Tia and her friend appeared hypnotised, their eyes blank as their mouths ceaselessly mumbled the cant over and over. \n\nK'Yara pivoted and presented her ass to Jake. She wiggled the gloriously round and full ass at him. 'Put it in but be gentle, my pet. I want you to last.'\n\nHe was already putting it in. K'Yara's snatch felt tighter and hotter than ever; her muscles massaged his cock as he slowly drove it back and forth. The chanting continued.\n\nK'Yara took off the blackstone pendant and put it into the heated copper bowl. It hissed and seemed to emit steam. A white mist fizzed out and concentrated over the fifth point of the pentagram. It took shape. A shape Jake recognised all too well. It was Bethany, his wife - or rather, her soul.\n\nBeth stared in horror at the scene of her husband fucking the demoness while two naked sluts looked on. K'Yara was putting on one hell of a show, too. She massaged her enormous melons as she slammed her massive ass back into Jake's cock; her face twisting in whorish ecstasy.\n\n'Say you love me, Jake,' the Demoness hissed.\n\n'I...' Jake hesitated and slowed down. His wife looked on in silent horror.\n\n'Say it,' the Demoness insisted. She squeezed her cunt, gripping his shaft and working it toward an earth-shattering release.\n\n'I love you.' Jake gasped. Right then, he would have said anything to unleash the torrent of boiling hot cum that was backed up inside him.\n\n'Renounce the other woman.'\n\n'I love you and no one else.'\n\n'Prove it. Give me your wedding ring.'\n\nJake struggled to take it off while he continued to thrust. It eventually slid off and he passed it to K'Yara. The Demoness threw it into copper cauldron. The candle flame turned black as it burned with hellish fire. The ring melted.\n\n'Now you may cum, my pet.'\n\nAt that, Jake went off like a cannon. Gallons of pent up juices flooded K'Yara's cunt, filling her up all the way to her womb. She moved forward and Jake's cock slopped out of her. \n\nThe Demoness clenched her cunt tight and carefully walked over to the bowl in the centre of the pentagram. She squatted over it, releasing an oozing gush of sticky white semen. It hissed when it hit the hot copper. Then she dragged a sharp talon across her hand to spill blood into the bowl. \n\nThe offerings were complete. The sacrifice had been made. The host body had been forsaken. The soul was lost. Now K'Yara owned the body.\n\nBeth screamed noiselessly as her soul was pulled back into the stone, never to return to her body again. K'Yara stood and kicked the offering bowl over, breaking the ritual. The two girls collapsed like marionettes with their strings cut. Jake had fallen to his knees and he looked up as the Demoness towered over him. She spread her legs slightly and parted her pussy lips with her fingers.\n\n'Worship me, my pet. Show me how much you love me.'\n\nHelplessly, Jake obeyed. He was addicted and he knew he would do anything K'Yara commanded. Anything it took to get the sex he needed.\n\nK'Yara ruffled his hair condescendingly as he ate her out. He would be the first of her many slaves.\n\nEpilogue\n\n'Oh, hey, this is really something.' Robyn held up the pendant necklace to the light. On the velvet shop display the black stone appeared like heavy obsidian, but when she held it up it took on an angry, reddish hue. It seemed to emanate heat and power.\n\nByron, the shop owner, nodded and said nothing. It had been sold to him a few weeks earlier by a haggard looking man who went on to buy some expensive jewellery for 'his mistress'. It was a strange world and Byron was not one to judge, not as long as they were a paying customer. \n\nBut this item. He had never liked it. There was something odd about it. It pulsed with silent rage. It was not a pleasant item to own, and few showed interest in it. Unlike the girl in front of him, a plain-looking teenager. She would need more than a pretty pendant to catch a boy's attention.\n\n'How much is it?' she asked.\n\nHe told her the price and she appeared disappointed. Byron hesitated. 'Try it on. This is a very special piece that deserves a very special owner. If I think it suits you then I might just offer a discount.'\n\n'Oh, ok.' With Byron's help, Robyn tried it on. It nestled against her chest and glowed a smoky red. Robyn stared at it in the mirror, nearly falling into a trance as she watched the pulsing glow. It felt hot against her skin.\n\nTo Byron's eyes it looked a thing of malice and evil; the stone was definitely angry at something. All the more reason to get rid. He offered her a knock down price, little more than what he paid for it. The girl gushed a happy smile and paid up. He breathed a sigh of relief when she left the shop.\n\nRobyn didn't want to take it off, not even when she went to bed. The stone soothed her to sleep, whispered strange things to her, and made her dream of looking like a stunning goddess. Men would fall to their knees and worship her, women would either run away in tears or serve her. All she had to do was give in and let the stone take over."
    ],
    "authorname": "EddieFuggles",
    "tags": [
        "demoness",
        "possession",
        "female possession",
        "erotic horror"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/the-blackheart-stone"
}