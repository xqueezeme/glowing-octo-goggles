{
    "title": "Play Testers Wanted Pt. 18",
    "pages": [
        "Booker-Katria Forgemaster Je'Daii Master\n\nKyanna-Syn'Kar-Mirialan Je'Daii Protector\n\nAoki- Kalla-To the Master Slayer-Twi'lek Gunslinger\n\nHK-47: Assassin Droid\n\nDP-69: Bodyguard Droid [Ebony Chassis]\n\nWhisper -- Darth Talon Clone [Pilot]\n\nExomorph -- Apex Predator [Guard 'Dog']\n\nLeft -- Claims to be an ancient Hyperborean Wizard\n\nBroken Chains Brothel:\n\nOn the ass end of a forgotten hyperspace lane, you will find Nova Secundus. It lay on the very edge of a supernova remnant and orbited a friendly yellow V Class main-sequence star explorers had registered as Nova 25D-4R-96 or Nova Secundus Prime. The only other celestial body in the system was a habitable planet one and a half times the diameter of Corellia. The gravity was a bit harsh for newcomers, but you hardly felt the difference after a period of adjustment. What had once been the home of a forgotten near-human species that the scientists called the Ava'nichi now was home to the best little whorehouse this side of Nar Shaddaa. The owner and madame that ruled the world with an iron fist was a former slave named Juuana Qel-Droma. She was a descendent of the famed Jedi Ulic Qel-Droma. His connection to the infamous Sith Lord Exar Kun left me wondering where her loyalty might lay. Was she light or dark or worse still, not even Force-sensitive at all?\n\nWhisper followed the hyperspace beacon and came in on a path that gave us a good long look at the planet and its topography and plant life. We made a long pass over the main complex and the golden forest surrounding it.\n\n\"Challan Trees,\" Whisper called out from the pilot's seat. \"They were once quite prolific upon the world of Dathomir. The Nightsisters used the leaves and sap for their Sith magic. A plague struck the planet and killed off the Challan trees and other rare plant life. There are legends that a rival group of Darksiders engineered the plague to kill off all life on Dathomir. The virus failed and only affected a handful of plant species. I am surprised to see them here.\"\n\n\"I've never heard of them,\" Aoki said as I ordered a delay and pointed to a surprisingly round lake north of the brothel. \"That can't be a natural formation.\"\n\n\"My thoughts exactly,\" I agreed with her. \"Look,\" I said as we passed over the lake. \"It is made of a series of concentric circles. Interesting. Okay, we've delayed long enough. It is time to make a fashionably late entrance.\"\n\nThe former complex now brothel was hexagonal in design. Six domed landing bays surrounded the six-sided central dome. Four of the six docking bays possessed an oxygen-based atmosphere. The other two had more exotic gasses to welcome alien clientele to the Broken Chains. I found the architecture of the long-dead race both beautiful and mysterious. While many species used rectangular bricks to fashion homes and temples, this race used alternating angled polygons for the exteriors of their structures. The bricks interlocked at a forty-five-degree angle, forming a near-perfect fit. Each block staggered from the long end, being on the bottom to the top. There was no sign of mortar sealing the bricks into place. It was worth making a mental note of and examining it at a later date.\n\nI left Whisper and the droids to guard the ship for now. I dressed in civilian garb and urged the others to follow suit. Just in case we ran into trouble, I strapped two hold-out needlers to my forearms and offered a pair to Aoki. At first glance and even under intense scrutiny, the weapons appeared to be nothing more than decorative armbands. Kyanna, as a full-fledged former Jedi Master, could take care of herself. The ramp dropped, and that is when it happened. The Exomorph whimpered and whined as we prepared to leave.\n\n\"Fine, come along,\" I said and patted my leg. The apex predator gleefully joined us. Who knew if shit went sideways for some reason, we might need her.\n\n\"Ghostfire,\" the Force tree spoke. It had been silently aboard the Wraith for months of in-game time and never uttered a single word. \"Be attentive.\"\n\n\"For what?\" I asked, and the damn thing returned to its tranquil nature once more. \"I thought Yoda was annoying.\"\n\nWe left the ship, and I felt it. It was so faint I nearly dismissed it, but I stopped and reached out for it after the word of warning. My students had sensed it too.\n\n\"So much for relaxing,\" Aoki laughed. \"Hey, no sign of Jha's ship. Did we beat them here?\"\n\n\"Must have, or maybe something came up,\" Kyanna offered with a grin. \"I am sure they will show up.\" I noticed that both of my students were walking with an edgy posture. They were expecting trouble too. \"The first round is on me,\" Kyanna declared as we walked down the tunnel connecting the docking bay with the central portion of the brothel. Ultimately, the three of us reached the titanic doors that posed the decisive barrier before entering the Broken Chains. The portal opened with a rumble of ancient machinery, and the blend of music and voices greeted us. The interior could have been confused with any gothic church with its great arched dome decorated with alien mosaics and stained glass panels depicting the race that once inhabited this world.\n\n\"It is in reverse,\" I said as Juuana greeted us warmly.\n\n\"Welcome to the Broken Chains. Yes, the former owners of this planet had keen eyesight and raised the most important art at the peak of the dome. Moreover, DNA analysis hints at an avian ancestor.\" Juuana stood nearly two meters in height, had a mane of raven black hair, and the most piercing blue eyes I had seen in a long while. She wore a cloth of gold kimono and clasped around her waist a belt of rare electrum dotted with gemstones. Juuana smiled and gestured for us to follow her.\n\n\"If the race is extinct, how did you manage to acquire a DNA sample?\" Kyanna asked before I could.\n\n\"We invited Jedi Historians to investigate a site not far from here,\" Juuana replied. \"They found mummified remains and collected bone marrow. Then, cracked them open like a nut.\" Kyanna was disturbed that Jedi would swoop in and violate the remains of an extinct race. The high-handed attitude angered her. You could see the clenched jaw and fists.\n\n\"I see,\" Kyanna growled. \"Were there any other revelations learned from the natives?\"\n\n\"Funny you should ask,\" the Corellian replied. \"There were clear signs of genetic tinkering. I do not have the details, but uh, something so disturbed the Jedi they sealed the tomb and placed security droids to keep thieves out.\" Kyanna did not attempt to hide her shock at the actions of the Jedi Historians. It was one of the reasons she left the Order. The disdain the Jedi showed when it came to non-Force users. It reminded her of the Europeans that came to North America and practically wiped out the indigenous tribes. She closed her eyes and found her balance.\n\n\"Let it the fuck go,\" Kyanna whispered.\n\nA petite olive-skinned human female joined us, and Juuana introduced her as Sada Kun, a descendant of the famed Sith Lord Exar Kun. Sada, while in great physical shape, came off as a bit bookish and socially awkward. We learned later that she was Juuana's secretary and accountant. Sada was the bulwark between the brothel and the Hutts. The slug-like creatures were trying to pressure Juuana into selling the Broken Chains for a substantial financial loss. Sada managed to broker a protection deal with the Trade Federation for a modest annual fee. The Hutts, not wanting trouble, backed down--something almost unheard of at this time in the galaxy.\n\nI accepted a drink from a server and frowned when my glove/scanner chimed in. Aoki and Kyanna dropped their hands when they heard the familiar tone. Juuana took my drink and sipped it.\n\n\"The alcohol is derived from the leaves of a local tree. You might have seen them on your approach. The Challan Trees are rare and only the best for my guests,\" she explained. \"I suggest you sip it.\"\n\nI took the tall fluted glass back and took a tentative sip. I let the liquid settle on my tongue to take in the subtleties of flavor the beverage offered.\n\n\"Ooh, that is good,\" I gasped in surprise. The wine teased my tastebuds. A single sip hinted at the potency of the alcohol.\n\n\"Damn, that has a kick,\" Aoki commented after she took a mouthful of the golden liquor.\n\n\"Let's top you off, and I will give you a tour of the dome,\" Juuana offered.\n\nWe accepted, hoping that Ruatha and the gang might show up by the time we returned to the main gallery. A server was at hand and poured from a dark glass bottle and refilled our glasses before we followed Juuana as she introduced us to celebrities and commoners alike. Kyanna touched my arm, and I followed the Mirialan's gaze to Juuana's wrist. Clearly on display was a tattoo of an ebony star. Juuana had once been a slave and owned by the notorious Black Sun crime syndicate. Being the direct descendent of the famed Jedi must have brought a steep price to her owners. I could only imagine the state of Juuana's former masters when she finished with them.\n\nMy HUD chimed and announced that a crossover event was about to begin. However, unlike any other notable occurrence, there was no title attached to it. That was damn strange, I thought. The sudden bustle of the movement took me off guard, and it began. Juuana attempted her best to isolate me from Kyanna and Aoki. A gaggle of loyal sycophants slipped between my students and me. Juuana lightly grabbed my wrist and tried to lead me away from the others. I grounded myself and effectively anchored my feet to the ground. I became an immovable object, and this displeased Juuana. She let go and faced me. The corners of her mouth turned down as her eyes narrowed. Juuana found herself in a rare position. Someone stood up to her. I smiled when I realized the Exomorph had used its natural camouflage and vanished.\n\n\"Why are you smiling?\" Juuana asked.\n\n\"My guard dog has disappeared,\" I replied with a soft chuckle. Juuana touched her earpiece, and the color drained from her face. I suspected her head of security just confirmed the worst-case scenario. The lean 227-kilogram beast was nowhere on their scanners. I turned my back on Juuana, showing my disdain, and addressed her lackeys. \"This won't do,\" I said, making my displeasure known. \"Move,\" I growled at the people between my students and me. \"Or else.\" The invisible predator and my demeanor made them falter. Sada Kun took this moment to make herself scarce.\n\n\"Surely, they can find,\" Juuana began and faltered when I spun to face her. \"I see.\" She gestured, and all five of us continued together. Besides Juanna, Aoki, Kyanna, and myself, a solitary albino Twi'lek was never far off. She carried a bottle of the local wine and kept her eyes downcast so as not to offend. \"She is new to my stable,\" Juuana explained. \"The weight of her chains is still upon her. Don't fret. I have every confidence she will recover and find a happy life here with us.\" I knew that pale Twi'leks were uncommon. However, they were not nearly as rare as the scarlet-skinned Lethans like Whisper or Talon.\n\nThe Corellian madam began to relay snippets of the planet's history and the race that once called this world home. They were tall and thin, nearly high enough to look a Wookie in the eye. They evolved from avian stock and were predatory by nature. Their facial features still held their raptor heritage with large bright eyes, a hooked beak-like nose, and vision unmatched by any current sentients alive today. Their technology was an odd blend of advanced and traditional ideals. When something caught their attention and excited them, they focused upon it exclusively. The entire race would work on nothing else.\n\n\"Take this dome for example,\" Juuana said. She raised her arms and made a sweeping gesture. \"There is nothing in the Republic like it.\"\n\nThough we had only taken a hundred steps, the area around us was empty of guests or any other being besides ourselves. Even the sound of music or voices had vanished. The open dome should have been visible from where we stood, but it wasn't. I held out my hand, and my palm smacked into a plain white wall. It was smooth, and a mild vibration ran through the barrier.\n\n\"The Ava'nichi were masters of dimensional engineering,\" Juuana said. \"It was their highest form of art and architecture. Well, one of their many paths to enlightenment and extinction. That is what the Jedi told me.\"\n\n\"Speaking of the Jedi, where are they?\" Kyanna asked, her voice cold and lethal.\n\n\"Gone,\" Juuana said, and while she was not lying, I sensed she might be leaving out critical information. \"When I discovered the tomb annex, I sent word to Coruscant. The high council sent a ship with Jedi Sentinals.\"\n\n\"How did you know they were Sentinals?\" Aoki asked. Her features were serene as she reached out with the Force, and the area around us reacted. \"The Ava'nichi were Force users.\"\n\n\"That is why the Sentinals were sent,\" Juuana remarked. A sly grin creased her lips as we moved to the next room. One moment we were in the nondescript white area, and the next, we were outside or at least in a large enough space to feel like outdoors. A footpath led through a grove of trees possessing sapphire-hued geometric leaves. Juuana continued to lead but slowed her pace so we could enjoy our new surroundings.\n\n\"Look,\" Aoki exclaimed. She pointed to one of the nearest trees. A soft creaking began as the edge of the leaves curled upwards, and the limbs rose skyward. We all looked up. The sun began to grow in size, or so it seemed. A second star was rounding its orbit and coming into view, a binary star system, and the plants reacted to the arrival of the secondary sun. Juuana guided us along the path and pointed out the notable plant and animal life. This world was rich with it in all its myriad forms. The trail continued, but up ahead, the way had grown thick from bushes bearing silver fruit. We pushed our way through, and our surroundings changed once more. Before us was a balcony crafted from rust-colored bricks, and it looked out over a saffron courtyard. The plaza floor bore the design of what appeared to be a giant blue finger or thumbprint.\n\n\"What is that in the middle?\" Kyanna asked. \"Something is hovering there.\"\n\n\"Treasure?\" Aoki asked. That one word kindled the thrill of the challenge in all of us.\n\n\"There appears to be an entrance to the design over there,\" I said, pointing to the northeastern corner. \"Let's go.\"\n\n\"How do we get down? The balcony is enclosed.\" Aoki asked.\n\n\"Through the slots,\" Kyanna suggested. Six tall thin openings were just wide enough to climb through. Juuana grinned until Aoki hopped up lightly and pushed through the opening nearest her.\n\n\"There is a weak forcefield,\" Aoki grunted as she wiggled through. Juuana's mouth fell open as the three of us passed through to the courtyard. Kyanna also had some difficulty getting through the barrier. I had no such challenge. When I vaulted through the gap, nothing inhibited my forward momentum. I landed smoothly and using the energy to roll up into a standing position. All three of us raced to the opening and examined the design and the shimmering fields rising from the path. It reminded me of a blacktop highway at the height of summer with its hazy distortions.\n\n\"Let's walk around it first, get a better look,\" I suggested. \"There is no use rushing in just yet.\" Someone bumped me from behind, and I spun to see the Exomorph standing there excited for a new adventure. \"Alright, you can follow us for now.\" The beast stalked next to me like a hunting hound itching for a fight. Did she sense something I didn't?\n\nWe slowly walked the perimeter of the thumbprint-like design. Parts of the path were straight, others possessed gentle curves, and others were extreme curves forming the whorls, arches, and loops. Unfortunately, the multiple distortion fields made viewing the object floating in the center impossible to discern. Nevertheless, Aoki and Kyanna were eager to attack the challenge.\n\n\"I wonder how this ties into the crossover event?\" I asked, and my students looked puzzled. But then they checked their HUDs and were surprised by the message that failed to alert them to its existence. \"Mine doesn't have a title or description.\"\n\n\"Yeah, hold on a sec,\" Kyanna brought up a virtual keyboard and performed several tasks. Then, her expression darkened until she surrendered. \"I can't ping the devs or get a response from the help screen. I am thinking a glitch.\"\n\n\"Maybe an update went wonky,\" Aoki giggled. \"What's the plan?\"\n\n\"This thing screams death trap. Did you see Juuana's expression when you went through the gap?\" I said.\n\n\"I was too busy pushing through the barrier,\" Aoki replied.\n\n\"I caught part of it,\" Kyanna said. \"She looked genuinely shocked, so did the albino. So, yeah, she likes you unless I am wrong. Her red eyes have been boring into your back like crazy.\"\n\n\"Nah, it couldn't be,\" I muttered as I remembered the last time I encountered a Twi'lek with smooth milky skin. \"She must be dead by now.\"\n\n\"She, who are you talking about?\" Aoki asked. I hesitated. I didn't want to spoil possible adventures, but the odds were damn slim of them running into her. \"Was she a lover?\"\n\n\"Oh yeah, she was also a shapeshifter,\" I explained. \"Well, not at first, but before we parted, she was. I am dancing around the answer. Listen, I hope this does not spoil any future storylines you encounter.\"\n\n\"Damn it, Ghost,\" Kyanna snapped, saying Ghost instead of Katria. \"Quit pussyfooting around. Who the fuck was she?\"\n\n\"She was Xim, Xim the Despot,\" I blurted out in response to her frustration.\n\n\"Whoa, you fucked Xim the Despot?\" Kyanna exclaimed.\n\n\"Who is this Xim person?\" Aoki asked. \"I never heard of her.\"\n\n\"She was the most infamous warlord ever to live, that's who. She was a genius. Her personality was magnetic. And she could, well, she was an amazing lover.\"\n\n\"Don't forget about her ship,\" Kyanna added excitedly. \"The warship was larger than anything ever encountered and crewed by... aw fuck,\" she faltered as she made the connection. \"Wait, the Pride of Korriban wasn't her flagship.\"\n\n\"No, but remember when we left the Rakatan system, there was another capitol-sized craft,\" I reminded her. \"Cast your mind back to the holotapes that showed the war droids that bore her mark, the blue skull.\"\n\n\"But the time difference,\" Kyanna said. Her eyes squinted shut as logic and memory warred inside of her. \"How long has this been going on?\"\n\n\"For me, since I began things,\" I replied. Aoki just looked back and forth between Kyanna and me.\n\n\"The anomaly,\" Aoki offered. \"It shifted us and ships to their destined places in time and space. Have you resolved your temporal ransom?\"\n\nI staggered back as her words hit home. \"Temporal ransom, of course, you are a genius.\"\n\n\"Have you?\" Kyanna asked.\n\n\"Yes, Ghost, my love, have you paid your price?\" Xim asked as they approached. \"I have missed you so much. I should never have abandoned you on Tython.\"\n\n\"You look good,\" I said as we clung to each other. Then, finally, I kissed Xim, and she surrendered to the moment. \"You still take my breath away.\"\n\n\"Good, your friends need no introduction. I am thrilled to see such strong females at your back. I am here for you.\" Xim said, placing her head on my shoulder.\n\n\"What is going on?\" I asked. Xim pointed at the design. She said it opened a way to the Ava'nichi tombs since only Force-sensitives could walk the path and reach the temple beyond. Then Xim went onto explain how she had rescued Juuana from the Black Sun. Xim and her followers wrecked the prison ship and freed those on board. As a result, Juuana was the first to walk the thumbprint, and though she was untrained, her passage through the gates awoke her innate Force gifts. \"The Jedi Sentinals had particular abilities enhanced by their mastering the pathway. \"If you want to see the tombs, that is the only way. Please do not stop, whatever you do, you cannot pause at any point, or it will destroy you utterly. See you on the other side.\"",
        "\"I will go last,\" I said. \"If you falter, I will try and help. But, remember, eyes on the prize. You do not have to do this.\" I squatted down and looked the Exomorph in the eyes. \"You need to wait. This challenge is something you cannot pounce and kill.\" The predator walked to the edge of the design and lay down. It felt she was saying. You go. I will wait here. I stood and saw the determination in Kyanna's gaze. If the sentinels survived the test, where were they? Is that why she was so intense?\n\n\"Pfft,\" Aoki made a rude noise. \"Let's do this.\"\n\nI closed my eyes and honed my focus. Kyanna took the lead, and the former Jedi Master was all business. Her face was a mask of serenity. Aoki waited until Kyanna reached the first significant turn before taking her first step. I waited until I could no longer see Aoki before I placed my foot on the design. The bottom of my feet tingled as I took my first steps. After that, it was easy going for a long while. I began to think the entire trial would be this effortless. I was wrong. The third severe turn was a bitch when the resistance ramped up without warning. That taught me that the test took no prisoners and was not fucking around. It could and would lull you into a false sense of security before striking. I could see the center when I dared to lift my head, and it looked so far away as the slow spiral altered course without warning--a straight line and then a tight corner leading into the next loop.\n\n\"Booker, I would like you to meet Nick Shaw,\" my father spoke from the grave.\n\n\"A pleasure to meet you, young man,\" Nick said as he shook my hand.\n\nThe next day they were both dead, and I was in the hospital--the sense of suffocating as they put me in the life support tube. I was floating as I pushed forward along the ever-changing path. Past and present collided, merged, and blended to where they were indistinguishable. My only coherent thought was placing one foot in front of the other. I set my tempered willpower against this test. I refused to falter because hesitation meant failure and death.\n\n\"One more step,\" I uttered my mantra repeatedly.\n\nNew and foreign memories trickled in now. It began with the image of a Nautolan, an amphibious humanoid race from the planet Glee Anselm, walking in front of me. I glanced up long enough to see him dressed in Jedi robes. Was he one of the Sentinals that had come here to investigate the tomb? His struggle became mine. His thoughts infiltrated my consciousness--images, and sensations of the water world and the pure joy of swimming. The test struck out, and I was once again floating in the cylinder. My life support took the form of a breath mask feeding me oxygen and an intravenous line in my arm, giving my body enough nourishment to survive. It took an enormous effort of will to maintain the path.\n\n\"I have to fight it,\" I growled as a solution presented itself. \"Access denied,\" I spat as I erected a mental barrier against the unwanted assault. My mind was quiet and my thoughts my own. While the test tried to batter at my defenses, I progressed towards the center. The unceasing pressure remained unrelenting, but at least I was free of the distractions. Cracks began to appear in my shield, but it was too late. I was rounding the last whorl, and I could see the heart of the design. Something hovered at eye level, but the barriers were so thick they distorted the air and made it impossible to make out more than a rough outline. Thinking it was the equivalent of the tape at the end of a race, I reached out and snatched it out of the air as I crumbled to the ground.\n\n\"Congratulations, Katria Forgemaster, you have reached my heart,\" a soothing male voice declared. \"You may now fast travel anywhere. Where shall I send you?\"\n\n\"Anywhere,\" I gasped as the strain on every muscle in my body screamed in pain.\n\n\"Anywhere,\" it repeated patiently.\n\n\"I guess I will have to trust your judgment on this one,\" I replied. \"Take me where I am most needed.\"\n\n\"I see why they adore you,\" the voice snickered. \"Off to where you are most needed.\"\n\nTeleportation always leaves a loud popping sound in your ears as a portion of the air surrounding your body comes along with you. That is why in the comics, there is a bamf that accompanies Nightcrawler when he teleports. This one did not have that. One moment I was on the ground. The next, I was in a clear glass tub filled with hot water and fragrant flowers. The aroma of the petals acted like a healing balm, and the ache in my limbs slowly faded. My gear, in its totality, had been deselected for this transition. I closed my eyes and focused on regenerating. My HUD showed that all my bars were just above red. I had beaten the challenge but at one hell of a toll.\n\n\"Can I join you?\" Kyanna asked, and I gestured for her to do so, and even that simple act hurt like hell. The water level rose and splashed over the sides. \"You beat me. How in the hell did you pull that one off?\"\n\n\"Noneuclidean spatial dispensation,\" I threw out a bunch of nonsensical words.\n\n\"Yeah, I thought as much,\" Kyanna laughed. \"What is that clenched in your fist?\"\n\n\"What is what?\" I groaned as my muscles burned when I lifted my arm and opened my eyes. \"It looks like a pendant or jewel of some kind.\"\n\n\"Black star sapphire?\" Aoki offered as she staggered into view. \"Please. May I?\"\n\nThe tub altered its shape to become a triangular tub. Each of us leaned against one of the corners, and our feet overlapped in the middle. I looked at the faceted ebony gem, and like Aoki thought it was a star sapphire. A five-sided clasp held the stone in place, and each claw bore a character stamped into the silvery metal. I looked at the jewel at different angles, and the flaw in the center changed. The single line multiplied until I looked at it from the intended side with a gasp of understanding. Hovering at the heart of the gem was a three-dimensional copy of the thumbprint design.\n\n\"Ooh, can I see it?\" Aoki asked excitedly. Her eyes were wide with delight until I extended my hand, and a dark spark leaped from the stone and warned her off. She snatched back her hand and rubbed the tiny burn near the tip of her middle finger. \"Protective isn't she.\"\n\n\"She?\" I said and put the necklace around my throat. The jeweler used only the finest silver when they crafted the chain, and upon closer inspection, I saw that the links bore similar characters to those on the claw. The challenge was a crossover event, and if the necklace had magic, it could be Sith sorcery at work. That might be why it attacked Aoki when she tried to touch it. My walking the design must have imprinted me to the necklace. The three of us enjoyed the bath as our bars slowly restored themselves. My vampiric nature allowed me to recover faster than the others. I stayed and kept them company.\n\n\"What do we know about the Jedi Sentinals and their work here?\" Kyanna asked. An old, dilapidated sphere-shaped droid trundled over to her. Its brass-like exterior glittered despite its archaic design hinting at a great age. Its art deco-style depiction was as much a servitor as a work of art, and unlike other ball droids, this one unfolded and transformed into a humanoid torso gliding upon a complex servo system. It offered Kyanna a platter covered with Flemsiplast scrolls. The thin translucent material was quite popular during the time of the Old Republic. Flemsiplast was also durable and could last for thousands of years before breaking down. During the formative years of his training, I seemed to remember that Darth Bane delved into the ancient Sith archives contained on Flemsiplast sheets during his time on Korriban.\n\nI was more intrigued by the droid's construction than the information contained on the scrolls. So, as Kyanna and Aoki split the stash between them, I ordered the droid to fold and unfold several times to discover the mechanics behind the process. Once I was sure I could replicate, if not improve upon the design, I sent it away to bring us refreshments. It was a gorgeous bit of engineering. I had to admit. It made me rethink plans and put more effort into their appearance as much as their functionality. However, the DP-69 model was as attractive as it was efficient.\n\n\"Why didn't they transmit this data back to the Jedi council?\" Kyanna exclaimed. Her brows furrowed as she moved from one scroll to the next.\n\n\"This is monstrous,\" Aoki agreed. \"To sacrifice so much for so little.\"\n\n\"They inscribed their work here on scrolls, not data chips or even a Holocron,\" I said before they explained what they had discovered. \"The only reason to do that was to limit the access to that data.\"\n\n\"The Sentinels were not the first Jedi sent here,\" Kyanna stated. She held up one of the scrolls to emphasize her words. \"A Nautolan historian and his associates arrived here to perform a general inquiry of the tomb. The cursory plans fell by the wayside as they discovered the relic. It is a Force-based technology not dissimilar to the Star Forge. The test killed three older and more experienced Jedi before Nakata Kisto survived the trial. He entered the tomb, discovered other artifacts of the builders, and declared the information as toxic. After reading this portion, I have to agree.\" I had a flash of memory regarding the Nautolan and his memories of home. I kept silent as my students discussed the information on the scrolls.\n\n\"Same here,\" Aoki added. \"The natives to this world seemed to be hell-bent on tapping into the Force. So much so they created a three-pronged process of creating Force-sensitives.\" She paused as her hand shook, and the scroll tumbled into the bath. While the translucent sheet floated atop the water, she continued. \"I won't go into detail for obvious reasons, but I can say this much. The first stage involved selective breeding, while the second stage involved drugs and further genetic tinkering. And we all experienced the last step in this grim little experiment. The trial not only weeded out weak candidates but also strengthened those that survived.\" Aoki pulled down her HUD and exclaimed as she pointed to a portion of her character sheet. \"I am stronger after the test,\" she said, maintaining immersion. We all had grown more powerful. In my case, I had gained twenty Force points which are about four levels worth of growth. When I explored my skills and talents, I found minor improvements and one skill raised by five points. I hid my glee as my crafting reached the level I had been shooting for since I took it up.\n\n\"What do you think?\" Kyanna asked me about the native's attempt to create Force-sensitives.\n\n\"Ah, artificial Force users would upset the Jedi, but the Sith might see it as a means to an end,\" I mulled over what they had shared. \"It might explain the race's extinction, though. They pushed the Force to do their bidding, and the Force lashed out.\"\n\n\"That makes as much sense as anything I can contemplate,\" Kyanna admitted. \"These scrolls the gilded droid provided speaks a lot about the builders.\" She paused and laughed. \"You look at it the way you did at us.\"\n\n\"Yeah, you did,\" Aoki laughed. \"I felt a twinge of jealousy, to be honest.\" Her laughter echoed off the domed ceiling. \"That's odd.\" She said, and we all looked up. \"It looks like the bathwater is reflecting off the roof. Wait, oh shit, are we underwater?\"\n\n\"She's right,\" Kyanna exclaimed. \"I think we are beneath that lake we flew over before we landed at the brothel.\"\n\n\"Clever security device,\" I said as my keen vision spotted the iris at the middle of the dome. \"In case of danger, that vent opens, and tons of lake water comes rushing in.\"\n\nI closed my eyes and waited for them to finish recovering. They followed suit, and the three of us cleared our thoughts and patiently waited for the next phase to begin. Just before Kyanna's HUD chimed that she was at full strength, I heard the soft melodic sound of the sphere droid returning. A scantily clad human female accompanied it. I opened my eyes, and a female Iridonian was standing next to the tub. Her skin was fair and heavily marked by the natural whorls and cursive patterns often mistaken for tattoos. The horns on her head protruded from the short-cropped hair the color of sunkissed wheat. Her posture was demure as she openly refused to make eye contact. The young woman radiated fear and acceptance in equal measures.\n\n\"Mistress, I am honored if you feed on me to sate your thirst,\" she urged. The woman shook as she offered me her wrist. I sat up and gripped her by the throat. The female let out a surprised squeal as I turned her head to the right and examined her odd sweaty pallor.\n\n\"You are drugged,\" I remarked and let her go.\n\n\"Just a simple sedative to ease my fear,\" she replied.\n\n\"The bitch is lying,\" Kyanna snarled defensively. \"The tests keep on coming. They know who you are, Nocturnal.\"\n\n\"Yeah,\" I said. I kept a mental note of Kyanna's use of the name Nocturnal instead of Katria or Ghost. What was more interesting was the young lady's reaction to the title? I sensed her fear accompanied by a surge of rage. I exploded out of the tub as the golden-hued lightsaber blade clove water and transparent alloy. My only option was defensive as I realized my opponent was one of the Jedi Sentinals. Her anger gripped and blinded her as she attacked using form four, Ataru, with its aggressive elements fully realized in the mastery of this practitioner. Aoki and Kyanna weren't idle. Their plan seemed to coalesce fully realized. Kyanna tapped into her elemental ability and telekinetically caused the water in the tub to leap from its containment and wash over the stone floor. I caught the flash of sparks as Aoki attacked the water with Force lightning. I backflipped up and away as the hyperfocused Sentinal went down in spasms as her body refused to respond to her commands.\n\n\"Perfection,\" Kyanna praised Aoki.\n\n\"Teamwork wins again,\" Aoki replied.\n\n\"I am so damn stupid,\" I cursed as I landed and disarmed the whimpering figure of the Jedi. \"How else did she get down here. She passed the test. Quick thinking, both of you.\"\n\n\"Pain will release you,\" the Sentinal murmured in her half-conscious state. \"Sweet delicious agony.\"\n\n\"I don't sense the Dark Side in her,\" Aoki remarked as she scanned the other woman.\n\n\"It took away my fear, my pain, and showed me the truth,\" the woman informed us. \"You'll see. You will all see.\"\n\n\"Get dressed, gear up, and remember your training,\" I ordered, and they gleefully followed my commands.\n\nI tried to use the Force to heal her mind but found it beyond redemption. The thought of killing her crossed my mind, but a sense of foreshadowing took hold. It wasn't quite a Force vision, more an echo of something half-remembered. \"Left?\"\n\n\"I am here, boss,\" the parasite giggled. \"Nice moves back there.\"\n\n\"Thanks, any ideas?\" I asked, and I sensed the mental shrug from Left. \"This is a crossover but with what.\"\n\n\"If you want my opinion, the fancy-looking droid is an Elder Scrolls mock-up,\" Left guessed. \"That test has me pondering. I liked the thumbprint design a lot.\"\n\n\"Me too,\" I admitted. \"Let's get going. Loadout triskelion, I think.\"\n\n\"Interesting if diverse,\" Left commented. \"Loadout complete.\" I loaded the Sentinal's lightsaber into my inventory just in case. It might prove handy. Then again, it might not.\n\nTriskelion focused on speed and a few surprises. It was time to enter the tomb and see what darkness lurked within. I cast one backward glance into the eyes of the broken Sentinal. Someone or something had shattered her psyche. She was a clear and present warning from the game. Tread lightly, or you would end up like her or worse. I took the threat seriously. The others met me at the entrance to the burial crypt embossed with elegant scrollwork and loving detail. The builders had pushed their craft to its limits when they carved this from the local quarry. The theme seemed to center around a pyramidical shape, surrounding that were three crescent-shaped panels. The first was a mass of intertwined chain links. It reminded me of Celtic knotwork but more busy and complex--the second held figures writhing around in either pain or pleasure or perhaps both. The last was a field of blades protruding from earth and sky. Some were straight, while others were curved, bent, and wicked to capture and cut.\n\n\"A sadist's monument,\" Kyanna purred. \"Surrender all ye that enter here.\"\n\n\"Lovely,\" Aoki flinched. \"Not a fan of the rough stuff.\"\n\n\"A hint of things to come,\" I said. \"Even the stone is unusual. Look at those flecks of blue and green, reminds me of granite. So let's get this bad boy open.\"\n\nThe door measured one hundred feet high and twice that wide. It was monumental and added to its eccentricity. A deep rumbling filled the air and resonated through our feet, and it began opening on pivots on either side and tilted backward. As we watched, it did the impossible and finished the process moving vertically without ever switching mechanisms to do so.\n\n\"What the fuck,\" Aoki spoke for all of us. \"How the hell did it do that?\"\n\n\"My head hurts,\" Kyanna added, and I agreed with both of them. I took the lead.\n\nJust beyond the open portal was a stone ramp leading down into darkness. Frescos and murals depicting the long-dead race covered the floor, walls, and ceiling. Aoki summoned a small round droid from her inventory. It produced a bright clear light as it hovered above us.\n\n\"I got him while digging in the ruins of Mimban III,\" she explained with a smile. \"He has a decent sensor array and lights the way nicely. If there are any traps, he should pick up on them.\"\n\nThe art showed a race at its height. It displayed their successful engineering, mastery of the Force, and a hint at something else. Behind the central theme was subtle darkness hidden and yet there if you dared to look. I stopped to examine one of the panels. It depicted two of the Ava'Nichi kissing. It was an intimate moment and yet innocent. There, in the background, was a third figure spying on the other two. The next panel had two of the Ava'Nichi holding one another. The shorter of the two had their head resting against the chest of the other. It was a heartwarming scene until, once again, you looked at the background, and there was a third figure. This time the female, well, I assumed she was female, was naked and pressing her body against a window displaying her anatomy for the viewer. The panels degenerated from thereon as the acts of depravity took over, and the gentle Ava'Nichi moved to the background. The savagery of the later carvings made me cringe.\n\nAs we descended the ramp and it spiraled, the nature of the art degenerated. It wasn't just the subject of the images but the quality of the panels as well. The once smoothly fitted slabs were now loose and poorly attached to their surfaces. I halted when one of the overhead pieces creaked ominously. We moved apart to avoid being struck by falling pieces. After a hundred feet or so, the growing sense of dread went from a slight shiver in the spine to heavy cold sweat. The shadows created by the droid's limited lighting seemed to shift and crawl as we moved ever deeper into the tomb proper. Another door appeared, and it blocked our path forward. The jumbled image was a clear sign of a riddle to be solved.\n\n\"Puzzle door,\" Aoki said nervously. \"Let's get moving. I hate it here.\"\n\n\"Another test,\" Kyanna growled. Her typically pragmatic attitude showing its frayed ends. \"I hate it too.\"\n\n\"I have an idea. We tap in and out of solving the puzzle. Suppose one of us gets bogged down or can't find the next move, then tap out. Also, if someone watching sees a solution, you can tap in. Agreeable?\" They both nodded, and we studied the puzzle before anyone touched it in case there was a time limit. Aoki was eager to be busy went first. The moment she shifted the position of one of the pieces, a timer appeared above our heads. We had twenty minutes to solve the challenge. Aoki went for a full minute before she was stumped. Kyanna dove in and manipulated the puzzle for nearly ninety seconds. I took over and used my ability to tap into the digital ether to slow things down. Something was causing this uneasiness, and I wanted to find out what it was. I figured a different perception might serve that purpose. Though I only stood there for a minute, I solved twice as many portions as the others.",
        "Aoki tapped in and spent less time solving than her first attempt. The same was true for Kyanna. We found it harder to find moves. I solved the last few solutions on the board when I took my turn.\n\n\"Teamwork,\" Aoki exclaimed as the door slid into the floor and out of sight. \"The oppressive feeling is less, well, not so intense.\"\n\n\"Holy shit,\" Kyanna cursed. \"Look at all of them.\" Thousands of sockets containing the mummified remains of the native's honored dead covered the tomb walls. It was a monument to the deceased. \"It reminds me of a beehive. The honeycomb design makes it feel like they will swarm us any second now.\" At the center of the colossal tomb was a tall spire of rock cast in shadows.\n\n\"Why are the panels transparent?\" Aoki asked, clearly creeped out.\n\n\"They revered their dead,\" I suggested. \"There is no natural light down here to hasten the decomposition process.\" I paused and looked around. \"So, where is the light coming from?\"\n\nWe walked around the area surrounding the pillar. Occasionally a thin shaft of light would fall across one of us. It was Aoki and her gift for spatial awareness that solved this little puzzle. She held up a hand, and we halted our movement. Aoki took baby steps until she discovered one of the hidden lamps. I walked behind her and witnessed the eerie way space warped around the hovering device. While it constantly emitted light, one had to stand within this narrow channel to observe it directly. Just as the brothel possessed pocket dimensions, so did this tomb. We were in grave peril, and I warned Aoki and Kyanna to be cautious. If the lights were all but invisible, so could hidden enemies stand quite close and remain unseen.\n\n\"That would explain that sense of being watched I have been feeling,\" Aoki admitted. \"You could hide an army in here and not see any of them.\" The soft hissing sound echoed her words--a host of sibilant lips laughing in the dark between dimensions. \"Aw fuck no,\" Aoki cursed as the guardian legion of the dead race whispered to us from beyond.\n\n\"Get ready to defend yourselves,\" I called to Aoki, but she was gone and snatched away from this tridimensional realm to God only knew where. \"Kyanna...\" Too late, she too had fallen prey to the damnable things. The army of the dead greeted me as I realized I was alone and moved unrealized into the hellish realm. The stench of ten thousand open graves greeted me as the slow-moving corpses rose to greet their solitary victim. I readied my weapons as I regarded my surroundings. The maddening geometry was worse than the smell. The hexagonal windows oozed glowing green ichor, but it was the size of those windows that had changed and defied normalcy. They had all once been the same size. Some of them were titanic in breadth, yet they interconnected without fail each to the other. My vision began to blur as my mind went numb under the assault of alien geometry. I tore my eyes from the walls and focused on the shambling dead.\n\nThe host had once been a distinct species. They had once been a bright and brilliant race. Now, however, they were singularly unique in their hideousness. Nothing connected them but the rampant change that been inflicted upon them by the Force, I theorized. They had attempted to impart their collective will upon it if the records are correct, and this was the result, a nightmare army. The lure of knowledge drove them to this end. They looked deep into higher and lower planes of existence. Here, down in the depths, the Force lost its sanity. They had sacrificed hundreds to create a single Force-sensitive citizen. It took thousands of them to delve so deep and far away from the light. They must have hoisted millions onto the profane altar to meet their needs. To appease the lost, they built this tomb to house their physical remains. But here, down in the pit of hell, the souls of the forfeited endured. The laws that bound the world I knew of no longer applied. I just hoped my weapons could harm them.\n\n\"Join us,\" the solitary voice of the masses spoke. \"The Force is strong with you.\"\n\n\"Fuck no,\" I growled as my grip tightened on my unlighted weapon.\n\n\"If you won't, surely, they will,\" the host laughed. \"We will infect you, and with your power, we will break free and contaminate the galaxy!\" I heard the faint echo of Kyanna's and Aoki's voices.\n\nWhat kind of crossover is this? The legion vanished and the dimensional maze manifested in their place--cyclopean walls depicting hundreds of worlds outside living and going about their lives unaware of the growing threat. An invasion not from orbit or landing craft. No, the very fabric of reality would twist and shred, releasing the army of madness. I navigated the maze, and with each step, I crossed light-years of distance. There were planets I was familiar with and just as many I had yet to visit. Myriad species were experiencing their mundane lives, never guessing the danger hiding behind a thin membrane of folded space/time. The floor of the maze rose and fell as I walked its intricate passageway.\n\n\"You idiot!\" I chastized myself as I lifted the gem around my neck and gazed into its familiar depths. Then, when I focused my attention on the design at its center, I felt it respond. An indescribable rightness welled up inside of me, granting me strength and a sense of purposeful direction. I knew the way out. Hope burned in me where I had felt only despair. \"I can do this. We can do this.\" I hollered, and they responded. \"I feel you! I have strength enough for this.\" I cried through clenched teeth. The weight of their consciousness slowed me down, but there was no way I would abandon my students. There was no rush, just one foot in front of the other. It was a replay of sorts of the thumbprint test. Only, this time all three of us were striving to solve the maze. I fell forward onto my knees. The abrupt loss of resistance sent me sprawling. I felt someone land on top of me.\n\n\"We,\" Aoki whispered through chattering teeth. \"We made it.\"\n\n\"I can't move,\" Kyanna gasped. Her sweat and spittle splashed my cheek as her sun-cooked body desperately attempted to cool itself. Though all my bars we deep in the yellow, I sent out healing energy to them. I stopped only when my life brushed crimson. We knelt and clung to each other as we meditated and restored ourselves.\n\n\"I love you,\" I said, and they knew I meant both of them. \"Do you feel it?\"\n\n\"Something has poisoned the Force,\" Kyanna gasped.\n\n\"I have felt this before,\" I admitted as I recalled the trip through the anomaly. \"When we left Lehon and journeyed through the tear, it felt like this. Souls of Jedi and Sith that could not join with the Living Force. There was madness there too. We need to heal it if we can. I am going to try and give back for all that I have taken. It is only right to repay the Force.\"\n\n\"It could kill you,\" Kyanna hissed in fear. \"You could end up like them, those things.\"\n\n\"There is no fear, only acceptance,\" I muttered as I continued to meditate. \"There is no surrender, only the path. There is no faltering, only the will of the Force.\"\n\n\"You are making that up,\" Aoki laughed. Something stirred around us. \"They don't like humor.\"\n\n\"So, no shit, there I was,\" I launched into a bawdy story about a backward world, a curvaceous princess, and how I had turned certain death into a tickling contest. \"Who knew ears could be so damn sensitive.\" We all laughed, and soon we were back in the Green. We rose to our feet and looked at our surroundings. The flat plane seemed to stretch on forever. Occasionally a flash of sourceless light glittered off a spinning mirror-bright object. \"We are beyond the maze.\"\n\n\"A red sparkle,\" Aoki pointed, and after a short pause, we all saw it. \"Holocron?\"\n\n\"Must be, watch your step,\" I urged as we linked hands. We moved slowly and dodged the rotating panes of glass. They held no images this time as they had within the confines of the path here, wherever here was. Though the area we walked along appeared to be level, the Holocron and the pillar below it came into view over the horizon. The terrain changed again. This time there were a series of concentric irregular bluffs, depressions, and alternating landscapes. It made holding hands impossible. I lead the way, and the others walked close behind. There was nothing but hard-packed earth beneath our feet. We circled the obelisk from a cliff that overlooked it.\n\n\"I hate this place,\" I cursed. \"One moment, the pillar is rising from the horizon. The next, it is below our feet.\"\n\nThe towering slab of rock was hexagonal. Each side was twenty feet across and etched upon its surface a different set of symbols. We walked around the base of the faceted sides of the obelisk. Most of the characters were unfamiliar to us, save two. One was, in fact, the full-spectrum alphabet of the ancient race below the surface of Lehon. The other I knew from the world of Tython. It belonged to the giants that called it home before the Je'Daii arrived. I had walked among those ruins many times and failed to decipher the language. \"Two deep core species on the same spire, coincidence, I think not.\"\n\n\"Two?\" Kyanna exclaimed, her curiosity kindled. I explained my time on Tython and my training with the Je'Daii. Aoki cried out and grabbed her head. Kyanna held her as I strode forward to protect them both. The air buckled, stretched, and finally tore open. Bright blue-green fluid gushed from the rift, and the water propelled a pale-skinned figure onto the ground. The flow ebbed and ended, allowing a second being to enter the area. The hooded entity looked at us from beneath their cowl and regarded us silently.\n\n\"Istari!\" Kyanna exclaimed and rushed to the fallen woman. I recognized her race instantly once I got a good look at Istari. She was from the same species I took on when I encountered the Mandalorians and the Brotherhood on Tatooine, an Arkanian Offshoot. \"Is she okay?\"\n\n\"If I didn't know any better, I would swear she was suffering from hibernation sickness,\" Kyanna replied. The Mirialan dipped her fingers into the colored mud and sniffed them. \"Strong chemical scent. I am unfamiliar with it.\"\n\n\"Titrocit Megas,\" the stranger said. \"It is refined from a fungus found on Kerallis V. When mixed with a specific regiment of minerals and botanicals, you get a strong regenerative. Istari was barely alive when I rescued her.\" The woman reached up for her hood and spoke. \"Come now, Ghost, have you forgotten me already?\" The regal Corellian female winked at me, and I felt a spark of familiarity.\n\n\"Xim,\" I hissed. She had switched from the albino Twi'lek to a human since our last encounter. \"What are you doing here?\"\n\n\"She said we would see her again,\" Aoki said as Kyanna used Force heal on Istari.\n\n\"I was Xim,\" the former dictator replied. \"Now, I am a nameless, faceless shadow wandering the galaxy in search of excitement. After fleeing a particularly one-sided fight, ship damaged, I made a blind hyperspace jump and ended up here. I will uncover the secret of that Holocron.\"\n\nThen it hit me, how was she able to open that portal? It wasn't obvious, but she had aged since we last saw her. Was time as warped as space down here? It might explain her demeanor, body posture, and a lingering wrongness surrounder her.\n\n\"Why? How? You aren't force-sensitive,\" I said as she changed her shape and took on the playful aspect of the Twi'lek I had last seen her as when she departed Tython and before we entered the thumbprint challenge. \"Stupid me. You lured the Jedi here to do the heavy lifting. I guess Istari reached this point but was wounded. She had enough strength to open a portal, and you patched her up for future opportunities.\"\n\n\"I like your current shape,\" Xim purred, ignoring my words before continuing. \"So Ghost, what does this damn thing say? My best translators have failed to crack the code.\"\n\n\"If Istari was in stasis, how did you open the portal?\" Aoki beat me to it.\n\n\"Yes, how did you get here?\" I asked. \"You aren't a Force-sensitive.\" The sense of wrong grew exponentially by the second until Xim replied.\n\n\"I wasn't one you mean,\" she said. Xim's voice was now deep in the male register as her form became fluidic and shifted a second time. She was facing away from me as she continued. \"Xim went to Korriban. She wanted to unlock the secrets of the Force. So confident since she had eluded death and let the galaxy believe her destroyed. She wanted to be like you, be with you.\" He turned to face us, his fingers brushing the sparkling gem at his throat. \"There are many uses for Kaiburr crystals some might find unnatural.\"\n\n\"Darth Andeddu!\" I exclaimed. \"I saw images of you in the Valley of the Dark Lords.\" His skeletal visage matched the colossal statue of the first Darth and God King of the Sith order. He was death incarnate. I wondered why he was so damned reserved. This guy wrecked whole armies single-handedly. What the fuck was going on? The answer was simple, he needed us alive, for now.\n\n\"Andeddu,\" Kyanna cursed. \"I have read about you in the Jedi archives. The histories hinted that you had mastered spirit transference.\"\n\n\"You mean,\" Aoki said as her hands drifted to her blasters. \"That thing stole Xim's body.\"\n\n\"I did indeed,\" Darth Andeddu bragged. \"Though I was not sure you would win through to Karcher, the Black City.\"\n\n\"Karcher,\" I whispered. Recollection escaped me until a slumbering memory flashed freshly to my thoughts--a dead city of dark pillars and something older than humanity. The image of a strange scepter blazed in my mind's eye--the question-mark-shaped device held in my hand. A dark sphere hung in the air pierced by a hundred thin wires that wove from the inner curve of the relic, through the stone, and anchored on the other side expertly. Somehow I knew that the tool could manipulate gravity and was vital to raising a thousand pillars standing around me. \"The Talon of Tiamat.\"\n\n\"What?\" The Sith Lord asked. \"I have never heard of such a thing.\" He paused as I recovered. \"I will make a deal with you, Ghost. If you get me the Holocron, I will give you Xim's spirit in exchange,\" Andeddu bartered as he stroked the Kaiburr crystal containing Xim's soul.\n\n\"Agreed,\" I snarled. The Dark Lord's eyes fluttered shut. \"If you renege on this, you will wish you were still sleeping among your kindred on Korriban or wherever they buried your ass.\"\n\n\"Ooh, your hatred is so potent,\" he moaned. \"I see why the legends of your exploits are so popular.\" A momentary pause before he continued. \"What does the pillar say?\"\n\n\"Let's take a look,\" I replied and adjusted my visor to cover the entire electromagnetic spectrum. While I had little faith in any chance of deciphering the writing, it gave me time to think. I had no skill with spirit transfer. So, even if I did get ahold of the crystal, Xim was still trapped. I hated the thought of the dark lord parading around in her flesh. As Traci and I worked on the translation, I heard the faint tinkling sound like wind chimes. So, why did my skin crawl when I listened to it? The more I listened to it, the more I realized it wasn't chimes but metal chains. In my mind's eye, I saw thousands of chains hanging from a darkened roof or ceiling. Someone or something moved through the chains causing the links to strike the others and give off cacophonic music. I could almost imagine a carefree hand brushing against the lengths and soft demonic laughter.\n\n\"I am coming,\" the demonic voice sang.\n\nI tore my mind away from the vision and stumbled as I recovered with a titanic effort of will. It was sheer luck that I spotted it. I was standing at precisely the right angle to see the second set of symbols. There were two of them. One was the obtuse alphabet of the Lehon aliens, and the other was plain old Galactic basic. I straightened and took a snapshot for Traci to use for the translation. I went around and found the other Rosetta stones and captured them for future use. If I return to, no, when I returned to Tython, I would make a pilgrimage to the giant's city and see what I could learn. For the first time since entering this damned area, I felt a genuine sense of hope.\n\n\"We will get out of here,\" I said aloud.\n\nNo one spoke or agreed with me. The atmosphere of this place was affecting them, or perhaps infecting them would be closer to the truth. If I had to be the sole spark of inspiration, then so be it.\n\n\"Pleasure... pain... it's all the same,\" she sang. The demon whispered to me, to all of us. \"Welcome to the maze of carnal desire, the Labyrinth of Pain,\" she whispered in my ear. \"I am the illumination of your deepest, darkest desires. Show me your true self, Ghostfire.\"\n\nI shifted with little effort to the form of the Zabrak I had used on Tython. The shape I had fucked senseless a few of the female students and instructors. The need to pound the living hell out of Kyanna and Aoki was becoming overwhelming.\n\n\"Got it,\" Traci chimed in cheerily. \"You okay, boss? Your hormones are off the scale.\"\n\n\"Yeah, fine, show me,\" I stammered weakly. I had barely escaped having my way with my students, whether they wanted it or not. Andeddu was next to me, demanding a translation.\n\n\"What does it say?\" He snapped a hint of desperation in his voice.\n\n\"He who wins shall lose, and those that lose shall win.\" I deciphered the rest, and it became clear why Andeddu was here. Despite the longevity granted by Xim's body, time was catching up to him. \"It also states that whoever solves the Holocron will be given immortality.\"\n\n\"Whose is it? The Holocron, who made it?\" Andeddu asked.\n\n\"Darth Cruentus.\" I looked at the text, but it wasn't clear. The honorifics were all wrong. My best guess was the Mistress of Pleasure and the Lord of Pain. It was the nearest thing I could come to a sadist.\n\n\"I approve,\" Andeddu laughed.\n\n\"Look,\" Aoki pointed at the nearest spinning mirror.\n\n\"Yes, I saw that,\" Kyanna said. \"Someone needs to solve the Holocron,\" Kyanna continued. \"The door to the tomb closed behind us.\"\n\nShe was correct. The multi-ton door had slid upwards and sealed us in; we turned our attention to the Holocron and our survival. I demanded to know the nature of the attempts to acquire the relic. Darth Andeddu revealed how he had lured not just Jedi Sentinels but also a single Jedi Shadow to his cause. The Shadows were elite members of the Jedi Order that actively pursued dark siders and Sith artifacts, like this Holocron. Istari was that Jedi Shadow.\n\n\"Only one of the Sentinals survived the trials, and she is insane,\" Andeddu purred. \"However, the Shadow failed but endured long enough to be placed in a healing tank.\" Istari groaned as she gained consciousness.\n\n\"Battlemaster? What are you doing here?\" Istari asked as she shifted to a sitting position. \"By the blood, I am back here.\"\n\n\"As enticing as it would be to have you run around naked, it would prove too much of a distraction,\" I said. I pulled clothes for Istari to wear from my inventory.\n\n\"Katria Forgemaster, your reputation precedes you,\" Istari replied as she dressed. \"I do not recognize the style of these robes.\"\n\n\"They are the equivalent in rank to that of a Jedi Knight,\" I told her. \"They belong to the Je'Daii. Wear them with honor.\" I looked at her hands and recognized the pattern of calluses. \"Here, it is a double-blade lightsaber.\"\n\n\"You are too generous,\" Istari blushed as she attached the weapon to her belt. \"I will not let you or my master down. What is our attack plan?\"\n\n\"After you tell me what happened to you, we will hold a council of war,\" I stated and listened intently to not just her verbal account but her body language as she spoke. I looked at the obelisk while I took in the actions of the Jedi Shadow. Finally, I got an idea to look for a weak spot in the Holocron's defenses. My inventory held a slew of things, both practical and mundane. Among those everyday items was a bag of sand from Korriban. It should do the trick. \"We need a visual on what is defending the pillar and the Holocron. My idea is simple. The same way certain aerosols reveal laser beams, I believe this sand might expose our goal's security. Get ready to help levitate and spread out the sand.\"",
        "Using a modified version of telekinesis, what I thought of as aerokinesis, I conjured a whirlwind to lift the bulk of the sand into a vortex which the others took portions of the grains and sent them towards the stone post. Once the last of the sand was airborne, I helped blanket the area. Since Korriban was a dark side nexus, my theory was that the sand should interact with any Force-based ritual or technology protecting the Holocron. The particles formed a thin curtain that slowly drew closer to our objective. As I had hoped, the sand began first to shimmer and then glow like embers in a fire. All but one narrow corridor, and that would be our launching-off point. We raised the curtain and discovered the Holocron was unprotected. If we could get that high, then we could claim Andeddu's prize.\n\n\"Even I can't jump that high,\" Aoki declared honestly.\n\n\"Did you see the distortion?\" Kyanna asked.\n\n\"The dimension of the pillar is much taller than it appears from out here,\" Istari followed up.\n\n\"It will take all of us to reach it,\" Darth Andeddu announced as if it were his idea. Then he preceded to proclaim the Order we would act as a human chain with himself as the last link. I altered his plan in only one way.\n\n\"I will be the anchor,\" I demanded. \"That way, I can help all of you smoothly channel the Force into a cohesive shape.\" The Sith lord did not like being second-guessed. Since he was still at the end of the sequence, he did not bitch too much. I levitated Kyanna into position. She, in turn, lifted Istari, then Aoki, and finally, the dread dark lord Andeddu was in a position to grapple the Holocron and seize it for himself. His cry of success surprised me. This challenge was too damn easy, but I reminded myself we were piggybacking on the failures of a dozen Jedi Sentinels. We reversed the process, and before Kyanna's feet touched the ground, the Sith was deep into his examination of the relic. I took out a bottle of wine I had saved for special occasions and poured a glass for everyone but Andeddu. He was too self-absorbed to drink.\n\n\"This is very unlike you, Ghost,\" Kyanna noticed. Her dark eyes narrowed and suspicious.\n\n\"Yeah, I was about to say the same damned thing,\" Aoki muttered. \"This is a nice drop.\"\n\n\"I got that from a thankful Corellian diplomat,\" I replied, ignoring the comment about my typical curious nature. The moment Andeddu touched the Holocron, I recognized the aura surrounding it. While it was out of phase with this dimension, I could not detect it. Now, oh yes, I knew it intimately. I had used the very same Sith sorcery to ensnare the members of the Brotherhood using the orb. Andeddu was deep into its insidious nature. I wanted no part of it. \"What I don't get is how this is a crossover event.\"\n\n\"Beats me,\" Aoki chuckled. \"I am just glad it is nearly over. Once the asshole over there solves that pyramid, we can move onto more pleasant things. I won't lie. The imagery from this little soiree I would rather forget.\"\n\n\"I concur. This one feels wrong on so many levels,\" Kyanna sided with Aoki.\n\n\"Istari? What are your thoughts on the matter?\" I asked. The Jedi Shadow looked at Kyanna before answering.\n\n\"It was sheer luck and my training that allowed me to survive my first attempt,\" the Arkanian replied. Her lovely features became a mask of fear and dread. \"We should leave as soon as the Holocron is solved.\" The lie stood out and surprised me. If Kyanna were her master, why would she lie? True, Istari was afraid, terrified even, but something about how she survived was a blatant untruth. Kyanna's expression told me that she, too, had detected Istari's falsehood.\n\n\"When did you fall?\" Kyanna asked, causing Istari to stand and move away. I refilled my glass from a second bottle and walked away. Whatever the reason Istari lied, it was not my concern. It was between Kyanna and her former padawan. Aoki joined me, and we walked around the pillar.\n\n\"What do you think?\" Aoki asked as she examined the obelisk. \"Hold on, what the hell is that? Is it bleeding?\"\n\nThe pillar began to glow. The ruby light looked strangely diffused, but something happened to us. That unnatural arousal lashed out and was impossible to resist. Aoki groaned and staggered to her knees. I focused on the pillar and the pool of blood forming around its base. The sense of the Dark Side came out of nowhere. The paralysis struck swiftly as my feet left the ground. I dropped my wineglass and watched it tumble from my grasp and shatter on the floor. Kyanna rounded on me, and she was the source of the attack. Her long dark hair moved as if by an unseen wind, and her eyes burned orange with the Dark Side.\n\n\"Weak, pathetic, you belong to me now,\" Kyanna shouted. \"So hungry.\" She gestured and ripped my robes from me. \"Ha, you feel it too.\" Kyanna licked her lips as she closed the distance between us. Aoki stood and confronted her friend and lover. If I expected reason, I was sadly mistaken.\n\n\"Ours,\" Aoki managed. The power had infected her as well.\n\n\"Can you feel it?\" Istari cried out as she staggered into view. \"Yes, more pleasure to experience.\" It hit me then. When they arrived here, the Dark Side corrupted the Jedi, unaware of the raw power sleeping within the pillar. They must have awoken it too. I fought the pleasure, but I failed. The Double Dragon manifested quickly and to the three females delight. Why couldn't I remember their names? Green, Blue, and White went on the attack. I fell to the rocky floor of the cavern, and they pounced. Blue and Green each took an erection for their own. White straddled my face and ordered me to do what was perfectly natural.\n\n\"Lick me, slave,\" White hissed. \"Just like the others.\" The others? Where were the other Jedi? The thought left me as I used the serpent technique and slid my tongue deep into her. I lightly teased her sapphire-hued clit while I tongued her mercilessly. So, not only were her eyes, lips, and tongue blue, but her pussy was as well, delightful. Green was deepthroating me while Blue playfully licked and stroked me.\n\n\"Think he can feel both at the same time?\" Blue asked.\n\n\"Unn Duh Noo,\" Green moaned back.\n\n\"...is having a great time,\" Blue chuckled. \"She is screaming like a banshee.\"\n\nGreen wasted little time on foreplay and mounted me like the worthless thing I was. I groaned as my cock sank deep into her. White climaxed and sat there shaking while Green joined Blue and faced away and took her prize. I tugged White's hips so that my tongue could slither into her puckered asshole. Sure enough, even her back door was painted blue. Once my tongue was as far as it could go, I let it thicken until she howled and begged for more.\n\n'Worthless,' the demon sang. 'You are only good for one thing,' it rejoiced. 'Surrender to your fate.'\n\nI did. I gave in. I let the energy fill me and lend me the strength to satisfy my betters. I was born to bend and kneel. I spun upon the broken wheel. Useless as the coming dawn. I am a slave, the maze's pawn.\n\n\"I was born to stand and rule. I hold the lash both sharp and cruel. Faithful to the darkest night. I am Mistress to the maze's might.\" Someone spoke aloud the countermeasure to my thoughts.\n\n\"Labyrinth of cold hard steel, perpetual wounds that never heal. I carry darkness in my soul, ever faithful to....\" Her orgasm interrupted the poem. The other followed suit soon after. Blue and green were satisfied for now. I withdrew my tongue from White's ass, rolled her onto her shoulders until her cunt was facing skyward, and plunged both erections into her. A part of me found the strength to rebel. Double penetration never felt so intense. I moved with slow leisurely thrusts instead of following the urge to hammer her into the ground brutally.\n\n\"I am my own master,\" I choked out the words. \"You belong to me, say it!\"\n\n\"No, if I do, she will kill me,\" Istari screamed. I began pulling out, and that frightened her more than the threat of death. \"I belong to you. Make me cum again, please. Hurt me. I am worthless.\" I thrust into her until we both climaxed. One by one, I grappled with Blue and Green and put them in a submissive position before making them climax. Once all three submitted to me, the fog lifted, and I could remember their names.\n\n\"I had to,\" I said. \"If not, well, we would have ended up like the Jedi. Istari, what happened?\"\n\n\"Answer him,\" Kyanna snapped, still broiling with more negative energy than positive.\n\n\"Calm yourself, seek your center,\" I urged. \"Istari, our survival hinges on your story.\"\n\nIt took her what felt like forever to speak. \"We all arrived here together. I was posing as a Sentinal per my orders. I swapped out my signature crystal for a yellow one. We traveled from Coruscant to Nar Shaddaa. One of my contacts was able to provide a cloaking device for the Jedi research vessel. We made three jumps after that to test the validity of its stealth capabilities.\"\n\n\"How did you test it?\" I asked as Kyanna collected herself.\n\n\"I pretended to get drunk at one of the cantinas. I bragged about the ransom I had to deliver for a kidnapped Corellian businessman,\" she explained. \"I returned to my ship after that and made the first jump to hyperspace, waiting to see if they tracked us or not. They didn't.\"\n\n\"Who sent you here?\" Aoki asked as she skooched closer and reached for my upper cock. She discreetly stroked me while we waited for Istari to answer.\n\n\"A fellow Jedi Shadow delivered the message, and his name was Yoda,\" Istari informed us. You could have knocked us over with a feather. Yoda had been a Shadow, interesting. So, he wasn't always a diplomat. I liked the addition to the lore. Aoki gave up subtlety when she went down on one erection and stroked the other. \"Damn, that looks tasty. Oh, where was I?\"\n\n\"Cloak,\" I said through clenched teeth.\n\n\"Oh, yeah,\" Istari continued. \"That vile bastard pretended to be the servant of Qel-Droma. That name carries a lot of weight in the Jedi Order. Just as you must have been, we were directed to the maze and, with some difficulty, mastered it. Like you, we made our way to this horrid city and seized the Holocron. That is when it began. First, it was just sex. It developed into bondage within hours. After the first few days, we were choking and cutting one another. Then I used my lightsaber to burn a fellow Jedi, and she climaxed so hard she nearly broke her jaw. In the end, we tore each other apart. I hadn't even solved the Holocron by then.\" Istari fell silent and refused to say anything worthwhile save this. \"If you want to restore your friend, Xim, solve the Holocron.\"\n\nThe blood had vanished from the base of the pillar. I suspected it hungered for pleasure and pain. Without the cruelty factor, it weakened. I held no doubts that it was still dangerous, just less so for now. I conjured a cloud and rain for us to clean up our messy affair. We dressed in clean robes and attached our weapons for an inevitable conflict. Andeddu still strove to unlock the Holocron.\n\n\"Looks like he has hit a snag,\" Aoki laughed openly now. It felt good to hear laughter after the insidious attack earlier.\n\nShe was right. The dark lord's frustration showed as he gripped one of the pyramid's corners and tried to shift it to no avail. He attempted to move all of the available angles as we watched, and none of them budged. That is damn strange, I thought. He is doing what I would have as Kyanna cooked a meal for us using her portable stove and an impressive selection of food items. I provided the drink for our supper. I handed the first bottle of Corellian wine to Kyanna before slowly approaching the Sith. Darth Andeddu cursed as he raised the Holocron above his head to dash it on the ground. I got my first good look at the crimson surface of the device. The markings weren't Sith. They seemed to remind me of tribal tattoos I had seen in another life. Once more, whorls and spiral designs dominated a challenge.\n\n\"Perhaps you are applying pressure in the wrong spots,\" I suggested. \"The fingerprint design seems to be a recurring theme.\"\n\nThe dark lord's left thumb circled over one of the hurricane-shaped ellipses. We both heard the soft yet satisfying click. Andeddu's eyes narrowed as he attacked the puzzle with renewed passion. I fled when I recognized the connection and altered my loadout with silver ammunition for my needlers. A stillness came over the lurid landscape. The spinning mirrors slowed until they halted altogether, and we abandoned our meal. Kyanna and the others formed up around me as I sensed a boss battle about to erupt. I imagined a hoard of warped individuals pouring from the mirror portals. We would soon be knee-deep in the carnage.\n\n\"Ghost, what is going on?\" Kyanna asked as we watched the Sith solve the puzzle.\n\n\"I finally made the connection between the Holocron and another similar shape. The crossover takes the form of a cube,\" I said as Darth Andeddu thrust his fist high, and the red pyramid had altered its shape into a gilded box, a perfect block. A flash of gold and the thing leaped from the Sith's grasp. The light faded into shadow, and they arrived. The trio was as iconic as any other figures of legend or lore. The chattering heavy-set demon lumbered forward, and his empty eye sockets regarded Andeddu. The gorgeous female stepped into one of those slivers of illumination and revealed herself. Portions of her flesh had been surgically sliced, peeled back, and pinned into place. White gleaming bone shone from under the most significant piece of inverted scalp. Last to reveal herself was the leader and lady of the Cenobites. Hundreds of metallic needles pierced The entirety of her epidermis. \"Pinhead.\" The Lady of Pain's beauty was unmatched. She reminded me of the stone goddess from the Marvel side. Pinhead embodied perfection in not just her form but her movement, gestures, and her voice.\n\n\"Darth Andeddu,\" Pinhead sang. Sang! She was using Kiai-Jutsu! I felt its effects worm their way in and multiply. I hummed the counter song immediately to protect us from her attack. Not since Nightwind had I run into another user of this technique. Pinhead smiled at me, but her real attention was on Andeddu. He had unlocked the Holocron. He was liable for his actions.\n\n\"Don't attack unless provoked,\" I ordered the others, then I returned to singing.\n\nI reached out with the Force and snatched the gem holding the lifeforce of my one-time lover and friend, Xim the Despot. I clutched it protectively as the onslaught began. The soft tinkling sound of metal against metal registered in our ears. I remembered it from before. The sound haunted me then as it did now.\n\n\"How many have you sent to Hell Darth Andeddu? They called you God King of the Sith. There is only one God in this world, in the Labyrinth, and it is not you,\" Pinhead shrieked.\n\nThe chain shot out from the darkness. At one end, a wickedly sharp hook pierced the meaty upper thigh of the dark lord. He cried out in pain, but it was just the beginning. The mirror displaying the way out began to bulge outward and then bowed inward. The door was down the path out revealed.\n\n\"Move,\" I shouted. \"We are done here.\" I aimed at the Cenobites in case they tried to block our escape. They didn't. No, they were far too focused on their prey to worry about us. More chains and more hooks penetrated Andeddu's body.\n\n\"You came in search of immortality. We do not cheat our honored guests,\" Pinhead roared in delight. \"But where oh where will such power come from?\" A fourth figure emerged from the stygian darkness. \"Do you not recognize your own rotted corpse Lord Andeddu? We would reunite old lovers and even more ancient practitioners of the dark side.\" The Sith's screams of agony made the demons dance in an irregular rhythm. \"Tut-tut, dark lord, this is just the beginning. Now about that raw power to fuse spirit and flesh. Ah, we have a donor within our midst.\" Pinhead gestured at me, and I howled in anguish. A cloud of blood gushed from every pore in my body. I dropped to the ground, as did Xim. The pulsing stone in my grasp went dark as I hoped her soul returned to its home. We crawled towards one another. I reached out, and our fingers intertwined.\n\n\"Ghost?\" Xim whimpered in agony. \"Don't let go. Please. I have learned my lesson.\"\n\n\"Forgive me,\" I said as I used what little energy I had left and hurled her bodily through the shimmering portal and to safety.\n\n\"Damn you,\" Pinhead wailed. \"You have stolen our toy from us.\"\n\n\"Fuck you too,\" I said as I coughed up even more blood from my ruined shell. \"I win.\" I jumped to my feet, stumbled to the gate, and dove through its fractured surface. The song of the Cenobites filled my ears as once more my world went dark."
    ],
    "authorname": "Lost Boy",
    "tags": [
        "vr",
        "virtual reality",
        "fffm",
        "group",
        "double penetration",
        "anal",
        "tonguing",
        "group sex"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/play-testers-wanted-pt-18"
}