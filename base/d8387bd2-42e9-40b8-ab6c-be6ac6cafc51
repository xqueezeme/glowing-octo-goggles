{
    "title": "The Light At The End",
    "pages": [
        "THE LIGHT AT THE END\n\nDB86#5\n\nEdited by: Pat\n\nThey hold to each other till they find the light at the end of the tunnel.\n\n*******\n\nCHAPTER 1: LAURA\n\nHi, my name is Laura, Laura Lane. Yes, that's right, L.L. like Louise Lane, except that I'm not in love with a superhero. As a matter of fact, I don't have a love interest in my life at all.\n\nI'd been single since the end of my last relationship (go figure). I broke up with my last boyfriend (if you could call him that) three years ago. He was from a 'good family', meaning my parents approved him.\n\nToo bad I didn't.\n\nFrom his tan to his perfectly groomed hair to his manners, everything about him was fake. Whenever I met him, he'd plaster a smile, call me 'babe', and place his hand on the lowest part of my back. My marriage with him was being planned among our parents to be a business transaction. A melding of important families.\n\nCall me a romantic, but I always wanted to marry for love. They weren't happy when I broke up with him and told my parents I wasn't going to marry him.\n\n\"Mother, I don't want to marry someone who I'm not in love with. I want to be in love when I marry.\"\n\n\"Oh, poor silly girl,\" replied my mother, \"love will come later. You will learn to love the man you marry. You'll eventually have a wonderful life of luxury in your own house with your own servants.\"\n\nEvery guy my parents brought around was worse than the last. I've been avoiding them since then.\n\nMy parents... well, as you might have noticed, they are a sore spot. My dad would have killed for a boy. He didn't get one. Surprise! It's a girl!\n\nSince I was a kid, he pushed me so hard, God! He is a partner in a well-known law firm. He wanted me to be a lawyer like him. I studied arts instead.\n\nI started formal art training in college at the Art Institute much to my parents' dismay. I paired it with lots of additional classes in figure drawing and character design. I also attended the Concept Design Academy after graduating.\n\nI am happy with my job as a concept artist and illustrator, even when it's a lot of hard work. Luckily the effort always feels more palatable when it's something you're very passionate about.\n\nMy mother is a stuck-up snob. I have annoyed her all my life doing just the opposite of what she wanted or expected me to. She made it very clear, that the man I chose to marry would have to be approved by her. She had already planned my wedding which would be a monstrously ostentatious event at the church my parents attend. There will be hundreds of people there that I don't even know. My feelings and wishes won't matter at all. As you can see, my mother is the main reason why I'm still single. I would rather die than marrying someone she approves.\n\nThis year I'll be 28 and I'll be another year older and single. My biological clock is ticking and becoming louder by the day. I want what we all want, to find someone to love and be loved for what I am. However, Mr. Right is nowhere to be found. It doesn't help that dating scares me.\n\nIf love is a game, then I'm in search of a tutorial.\n\nMy interests are important to me, and finding someone who is like me is really hard. I love dancing. Hiking, bicycling, or doing pretty much all the cool stuff out there. I love cooking vegetarian recipes and listening to World Music. My friends use to say I'm crazy, in a good way I hope.\n\nI'm starting to think I'm not compatible with anyone. It's really hard to find a kindred soul. I don't find many people interesting. I wanted to have a family by now. I'm tired of attending everyone else's wedding.\n\nMy friends are always pushing me to meet someone. Most of them are already in relationships.\n\nOne day I said, \"why not?\" So I agreed to be paired with the single weirdo from their work or someone's cousin who just got divorced. Who knows? It could be fun.\n\nFun? Who am I kidding? Dates are nerve-wracking. I'll tell you one of my experiences.\n\nI was trying my fifth outfit when I received a text from my date, \"Sorry, I'll be 10 minutes late.\" Two Grey's Anatomy episodes later, he arrived. That was the start of a very disastrous date.\n\nAfter awkwardly stumbling into his pickup truck and landing face flat on the seat, I stuck my hand out and introduced myself. Our first stop was a bowling alley. During the drive, he apologized for being late, while I reassured him that it happens (but usually not two hours!). Upon arriving at the bowling alley, he realized we were the only ones in attendance above the age of 14, so we left the place and he proceeded to ask Siri where to take a girl on the first date.\n\nWe ended up at Applebee's and I finally got a good glimpse of him. He was the younger brother of a coworker's boyfriend. During the meal the conversation was easy. He talked and talked and I listened. He didn't ask a single question about me. His stories ranged from bar fights to his experience with a hernia he got trying to lift weights. He even showed me the scar.\n\nWe left Applebee's and decided to go to Sonic for dessert. Making our way through the parking lot he remarked, \"Did you see that? All the guys sitting there just turned to stare at your butt while you walked out.\"\n\nDid I instantly feel uncomfortable? Yes, yes I did.\n\nAt some point, he claimed that it was the best date he had ever been on. Not knowing what to do, I lightly chuckled and stuck a spoonful of cookies and ice cream into my mouth. During the drive home, he mentioned wanting to go on a second date. Again, I stuck a spoonful of ice cream into my mouth. We hugged goodbye and I promptly scurried up my driveway with yet another guilt-ridden spoonful of ice cream in my mouth to avoid a kiss.\n\nDating is going to make me fat.\n\n\n\nCHAPTER 2 PERCY\n\n\n\nHi, I'm Percy. I'm almost thirty and I'm still single. As a matter of fact, I've been single since I left college. I have dated a few ladies, got laid with some of them, but nothing serious. Not even a friend with benefits relationship.\n\nI know you must be asking yourself, 'what's wrong with him?' Well, nothing is wrong with me that I know. I'm not Brad Pitt, but I'm not ugly. I guess, I focused on my career and didn't try so hard on relationships.\n\nI'm in the construction business. When I first started my career as an apprentice, I wouldn't have guessed I'd end up as a contractor, but I am certainly glad I did. I first picked up a hammer back in grade school. From that point forward, my desire to learn and excel in my trade has only intensified.\n\nAs soon as I was done in high school, I wanted to pursue the dream of being a full-time contractor. I wanted to become the type of man that people called when they needed renovations or home improvement.\n\nAll these years, I've been fulfilled with my life as it was. After a long day's work, I felt more like putting on pajamas and crawling into bed than going out into the uncertain and anxiety-provoking world of dating someone.\n\nI was fine on my own. It never bothered me to be single... till it did. One day, I realized I was going to be thirty and all my friends were married or engaged. When I visited them, they had their wives, their kids, a dog, while I came home to a lonely place.\n\n\"When are you going to get married, Percy?\" Amanda asked me, she is Joe's wife. Joe is my foreman and a great friend. They invite me to have dinner with them once a week.\n\n\"I'm not sure I'll ever get married,\" I said, letting out a long sigh.\n\n\"Why not? You're a great catch,\" Amanda insisted.\n\n\"Because all the good ones are already taken and settled, or committed to someone.\"\n\n\"There are millions of amazing single women out there, Percy. My friend Laura is one of them,\" Amanda smiled at me.\n\nI didn't take the bait, \"But there aren't millions that are right for me. All the available girls are in the 'no-go' category: ugly, career-oriented, or divorced bitches.\"\n\n\"Career-oriented?\" Amanda frowned. \"I never thought you would be the machist type that thinks that women must stay at home.\"\n\n\"I'm not talking about her being employed. I'm talking about women who work more than 40 hours a week. Women who are so busy chasing a higher position in their companies, that they lose track of other things, like socializing, traveling, or enjoying a lazy day.\"\n\n\"I get what you mean,\" Amanda conceded.\n\n\"If many social studies are to be believed, professional women are more likely to get divorced, more likely to cheat, less likely to have children, and, if they do have kids, they are more likely to be unhappy about it.\"\n\nAmanda was still processing my words, looking for a crack in my reasoning, when my friend Joe asked me, \"What do you have against divorced women? Anyone can make a mistake.\"\n\n\"I said 'divorced bitches'. You know, the ones that come with a backpack of bad experiences. I remember I dated a divorced woman once. Every decision or idea that she came up with, was because she didn't like how it was done the 'first time'. She made me feel like our entire relationship was be based on how things went with her first marriage. It made me feel like I was a sloppy second. I was especially burnt by her.\"\n\n\"I'm starting to see why you aren't in a relationship, Percy,\" Amanda shook her head. \"You have high standards.\"\n\n\"Is it bad to have high expectations in a relationship?\" I answered.\n\nJoe supported me, \"I get Percy's point of view.\"\n\nAmanda gave Joe the kind of look that could only mean \"no sex for you tonight\".\n\n\"To be honest, I'm very close to giving up finding love, Amanda. In that way, I'll get rid of the pressure of finding anyone,\" I explained to my friends.\n\n\"My friend Laura is not like that,\" Amanda insisted. \"You should give her a chance.\"\n\nI knew Amanda would keep pushing till I agree to date her friend. So I gave up, making a mental note not to accept dinner invitations from them in the near future. Every time a married female friend invited me to dinner, I knew she had an agenda. And the agenda usually included some single or divorced woman she knew.\n\n\"Okay, I give up. Who is this hidden gem?\" I said in a light tone.\n\nAmanda was not amused.\n\n\"She is a great girl. She works as a concept artist, set painter, and illustrator. She does a lot of work for the advertising company I work for. She's a vegetarian. Keep that in mind when you chose a place for your date.\"\n\n\"A vegetarian artist, huh?\"\n\nShe noticed the expression on my face and quickly added, \"She can be a bit crazy but in a good way. She's a great girl. You'll see.\"\n\n\n\nCHAPTER 3: LAURA\n\n\n\nI met Percy at Amanda's home. She made the introductions. Percy had dark hair and was fairly good looking. He didn't look very enthusiastic about meeting me, but he was polite. He took a good look at my clothes. I had dressed in a nice summer dress. Nothing fancy or extravagant.\n\n\"Laura, meet Percy,\" Amanda said with a giggle. She was clearly enjoying the situation.\n\n\"Nice to meet you,\" Percy held out his hand to shake mine.\n\nI accepted his hand, smiling back. \"Nice to meet you.\"\n\nWe spent the first few awkward minutes doing small talk with Amanda.\n\n\"My car is parked just outside. Are you ready to go?\" Percy asked me.\n\nI agreed, took his arm, and followed him. Amanda quickly departed and teased, \"Have fun you two!\" And she giggled.\n\nPercy gained points when he opened the door and held it open while I got inside his car.\n\nHe drove us to a vegetarian restaurant which had, quite possibly, the best vegetarian cuisine I had ever had. He didn't look like a vegetarian, so I guessed Amanda told him about my eating habits. More points to him for doing his homework.\n\nWe engaged in the sort of casual conversation most couples endure on a first date. Percy had a nice personality and was easy to talk to. He was nice. I did my best to learn all I could about him. He asked a lot of questions about me and my work and he actually listened to my answers. We found our works had a lot in common.\n\nThen, we went to a bar that looked like an English pub. We drank brown ale, which Percy explained to me was sweet and low in alcohol. We played darts, and we challenged each other to a contest. I had a lot of fun. He later drove me home and kissed me on my doorstep. A nice kiss, I must say.\n\nAfter the kiss, he gave me a curious look. \"You're not quite what I was expecting.\"\n\n\"No?\" I replied. \"Is that a good thing?\"\n\nHe smiled. \"Yes, it is.\"\n\nA-plus date all around, a true gentleman, great company and conversation, and we tried something new.\n\nI'm not sure what I loved more, the amount of laughing we did, or how relaxed I felt with Percy. I was able to be myself to my fullest. It surprised me how easy it was to talk with him.\n\nThere goes my theory about having to go on seven dates with seven different men to find the right one.\n\nAs soon as he got home, he texted me to tell me how great of a night he had with me. He added he couldn't wait to see me again. I texted him back telling him I felt the same way.\n\nThroughout the next week, we texted back and forth every day.\n\n\"Don't get too clingy\", I said to myself. \"He is too good to be true. Wait till you find the skeletons in the closet.\"\n\nWe dated three more times and I found no skeletons at all. He was kind, caring, smart, and easy-going. That was the beginning of our romance. We started going steady and, one magic night, we had sex for the first time.\n\nThe more I got to know Percy, the more I realized what a special guy he was.\n\nWhen I was with him, he made me forget the world around me. He was enough, and, together, we were everything. I felt I had found the man of my dreams, even if I knew him just for some months. I was trying to play it off like my heart was taking it 'slow'. However, I had no clue what 'taking it slow' really entailed let alone how to actually put that action into practice.\n\n\n\nCHAPTER 4: PERCY\n\n\n\nLaura and I dated for six months. We became exclusive. I learned that Laura's favorite color was blue and she loved to dance in rain. We loved to curl up together and watch movies. She preferred romantic movies and used to fall asleep during action or superhero ones. She loved cats, plants, and flowers. We both loved onions and pizza.\n\nWe used to talk for hours. She was a fantastic listener. When I was with her I felt life was a good thing, and I felt like it might just go on and on this way.\n\nOne Friday night, Laura asked me to pick her up at a fancy neighborhood address. I used to pick her up at her apartment, so the change of place surprised me. Maybe she was visiting a friend.\n\nWhen I arrived there, I discovered with horror that it was her parents' home, and we were going to have dinner with them. I wasn't even dressed properly. Ambush, anyone?\n\nThe house was a two-story structure, painted yellow with brown trim. It screamed wealth with its polished white-marble floors and subtle gold accents.\n\nHonestly, I didn't think our relationship was at this stage. You know, meeting the parents is both a sign that you're taking the relationship seriously and a test to see if you and your partner's parents will get along. What was Laura trying to pull?\n\nI gave Laura a puzzled look when I greeted her, but she was too nervous to notice.\n\nMy first impression of Laura's parents wasn't good. They looked like snobs of the worst kind. The kind who put you down with just one look. They were country club people, I certainly was not. They gave me a cold welcome.\n\n\"Dad, I want you to meet my boyfriend Percy,\" Laura introduced me to her father, a short stocky man who never smiled.\n\nI offered my hand to him, \"I'm Percival Wittmore. Nice to meet you, sir.\"\n\nI rarely used my full name, but I thought I might impress him. My mom was a fan of King Arthur and the Knights of the Round Table. She used to call me Sir Percival.\n\nHe looked at me as if I were an annoying insect. I dropped my hand when he didn't offer his back.\n\nHer mother simply looked at me as if I was something she scraped off her fancy shoes.\n\nLaura did her best to alleviate the uncomfortable moment. She kept looking at me, apologizing with her eyes.\n\nDuring dinner, her parents gave me the third degree. They interrogated me about my politics, my religion, my social position, my diet, my community involvement, my job, and especially how much money I was making a year. My answers got shorter and shorter with each question, and I refused to answer the last ones.\n\nIt felt like that nightmare where you dream you're back in high school taking a test you haven't studied for.\n\nAt some point, Laura tried to stop them, \"You don't need to interrogate Percy like he's a criminal or something.\"\n\nHowever, her parents would have none of it.\n\n\"I'm in my right to know if this young man you brought to our home can provide for the lifestyle you are used to,\" her father said in an affected tone of voice. \"We have social obligations. We need to know if he'll fit.\"\n\nAs far as I knew, Laura was an artist living in a loft, not some princess in a palace. One thing she never talked about was her family. Now I knew why.\n\n\"I'm not sure he is the right person for you, Laura. I'm not your enemy, neither is your father. We are willing to give this man the benefit of the doubt. So long as he understands there are ground rules he must abide by,\" Laura's mother was doing her best to sound upper crust.\n\nI hope you noticed that they were talking about me as if I weren't there. At that point, I'd had enough.\n\n\"Ground rules?\" I asked wiping my mouth with a napkin and raising an eyebrow.\n\n\"Well, yes, young man, we have a social position in this community...\" her father started to say.\n\n\"There are only two people in this relationship, Laura and me,\" I interrupted him. \"We'll live our lives according to OUR rules, not yours. You and your wife have no say in OUR relationship. IF I marry your daughter one day, and that's a big IF considering the 'warm' reception you gave me tonight, you'll be the ones abiding by OUR rules, not the other way around.\"\n\nI don't like your tone, young man.\"\n\n\"I don't like yours either, so I guess we're even on that score.\"\n\n\"How dare you talk to me like that? Do you have any idea who am I?\" Laura's father exploded. His face was red with anger.\n\n\"A pompous asshole,\" I thought, but bit my tongue.\n\nI stood up. \"You're right, sir. This is your home, I apologize for my rudeness. However, I won't apologize for not letting you rule the way we live our lives. You may have money, but you certainly lack manners.\"\n\n\"How much will it take for you to go away?\" He asked me.\n\n\"I'll go for free right now.\"\n\nHe shook his head. \"I mean how much will it take for you to leave my daughter alone and never see her again?\"\n\nHe articulated every word as if he was talking with an idiot.\n\nI couldn't believe my ears. \"Are you trying to buy me off? Let me tell you I'm not on sale. I don't want your money. I didn't even know Laura was born into privilege at all till tonight.\"\n\nHe cocked his head to one side and pulled out his check-book. I shook my head. This wasn't about Laura anymore. This was about me standing my ground.\n\n\"Mr. Lane,\" I said with conviction. \"I won't accept ANY amount of money. If you think I have a prize you are completely clueless about the kind of person I am.\"\n\nI articulated my words in the same way he did a moment ago.\n\nI turned to Laura, not for help, but understanding. She had been caught off guard just like me. \"I don't appreciate you trying to buy my boyfriend off and out of my life, Dad. I'm not on sale either.\"\n\nNot bad, but not exactly the kind of endorsing support I expected.\n\n\"I'm obviously not welcome here. Since I've lost my appetite, if your royal highness excuses me, I'm leaving now,\" I took a sarcastic bow, and stormed towards the door without bothering to look back.",
        "\"Fuck this shit,\" I said, to myself, sternly.\n\nMy phone rang as soon as I left the house. It was Laura, of course. I needed to cool down before talking to her so I texted her exactly that, \"Not in the best mood to talk. Maybe later.\"\n\nI drove straight to my brother's home. He was surprised to see me.\n\n\"I need your advice, Tom,\" I told him.\n\nHe offered me a beer, and we sat in the living room. Then, I gave him a brief account of my relationship with Laura, and what had transpired that night.\n\n\"When you marry someone, you marry into her family, if her parents don't like you, I suggest you find someone else,\" my brother said. He was a straight forward person and I always appreciated it.\n\nI sighed. \"I came to the same conclusion. I realize there are a lot of things Laura and I didn't talk about. Our families, for example. For me, Laura was a fun girl to hang with. I like her and we were great together but that was it. It's not that I wasn't serious about us, but to me, we were just in the first stages of our relationship. I wasn't even close to proposing to her.\"\n\nTom nodded his understanding.\n\n\"Did she warn you about her parents before you met them?\" my brother asked me.\n\n\"That's the thing, she didn't! She didn't even warn me I was going to meet them! She asked me to pick her up at this address. And when I drove there I realized it was her parents' house, and I was expected for dinner. I wasn't even dressed properly for the occasion.\"\n\n\"That's really strange. From what you told me, she didn't look like the kind of girl who'd do something like this. Is it worth trying to make your relationship work?\" my brother was echoing my own concerns as usual.\n\n\"I'll have a long talk with her, but this looks like a deal-breaker to me. There's no doubt we come from different worlds. Her parents were looking down on me during the whole dinner. I'm not some kid her dad can boss around.\"\n\n\"Do you think they will accept you with time?\" Tom asked me.\n\n\"No, Bro. I don't think they will change,\" I answered sincerely. \"But the right question to ask is, do I think I will accept them with time? And the answer is a big fat 'no'. I want nothing to do with them\"\n\n\"Your relationship has no future then. Sorry.\" Tom concluded.\n\n\"Well, it was good while it lasted.\"\n\nI thanked my brother and went back home. I had vented my anger out, and I had a clear mind. It was time to talk with Laura. The old saying that we all have heard 'do not put off until tomorrow what you can do today,' was still valid\n\nI called Laura and we met at her place. When I saw her, I realized she had been crying and I felt really bad for her.\n\nShe apologized profusely for what happened. She kept saying we could get past this. I let her talk till she ran out of steam.\n\n\"Laura, I like you, but I don't see how we might find a way around what happened. Your parents probably have your wedding already planned, kids' names picked out, future house plans drawn and a prenup written. Sometimes love is not enough.\"\n\n\"Fuck them! I had them on my back most of my life. I live my life the way I want.\"\n\n\"You may live your life like a rebel, Laura, but deep inside you are still looking for your parents' approval. It seems to me that, even when you deny it, your family's opinion is very important to you.\"\n\nShe bit her lip. \"I just wanted to share with them how happy I was with you. I thought once they knew you, they'll see you as the great person you are. I never expected they would react the way they did.\"\n\n\"Then you don't know your parents as well as you thought. They are not going to change the way they are, and I'm not going to change the way I am. I'm very different from them. Get-togethers and social meetings will be battlefields.\"\n\n\"Please, believe me, Percy, I'm not like my parents at all,\" she begged me, her hands together as if she was praying.\n\n\"Laura, I'm not going to put you in a position where you have to choose between your family and me. It wouldn't be fair for you.\"\n\n\"For the record, I would choose you a million times. It would be my choice, not yours,\" she insisted.\n\n\"True, but the thing is it wouldn't be fair for me having to put up with people like your parents. They can't see past their own traditions, values, or prejudices. Social class is a very important thing for them. Whether you like it or not, having someone your parents approve of, will dramatically improve your chances of having a good marriage.\"\n\n\"I thought they loved me enough to accept you for who you are and respect my choices. I was really wrong. I never thought they would behave as they did.\"\n\n\"There is something that I don't understand, Laura. If you feel like this about your family, why did you introduce me to them? We were doing great by ourselves.\"\n\nThen Laura dropped the bomb.\n\n\"Percy, there's something I need to talk about with you.\" She took a deep breath and said, \"I did it because I'm pregnant with your baby, and I wanted my parents to meet the father of my child before delivering them the news.\"\n\nWhat?!\n\n\"You're kidding me, right?\"\n\n\"No, I'm not,\" she stated.\n\nWas she sure she was pregnant? Had she tricked me? I wanted to ask her all those things, but I looked into those bright eyes, awash with tears, and I couldn't play twenty questions.\n\n\n\nCHAPTER 5: LAURA\n\n\n\nDinner with my parents went horribly wrong. They did and said all the wrong things. I couldn't blame Percy for his reaction. I would have done the same if I were in his position, probably sooner than he did.\n\nOne day I woke up and couldn't hold down my breakfast. I moved to the sink to splash water on my face. I paused to take a breath, and calm the sickening sensation of panic that rose from my belly to my chest.\n\nIf this wasn't a flu bug or food poisoning, it meant I was actually pregnant. I had missed my period. Sometimes that happens. Different foods, even a change in water might cause the body to get out of its normal rhythm.\n\nI went straight to the pharmacy to buy a pregnancy test. <br >\n\nMy knees buckled. The next thing I knew I was sitting on the fuzzy blue bathmat, staring dazed and wide eyed at that plastic white stick. Two lines. Great! I was pregnant and fucked.\n\nNo. It couldn't be true. There had to be some mistake. I couldn't possibly be pregnant. Not me.\n\nPanic struck me, my heart hammering. What was I supposed to do? How was I supposed to feel? Thoughts clamored in my head, swirling around, trying to make themselves heard. I'd never been against having kids, but at the same time, the thought of having one right now terrified me.\n\nHave you ever done something you wish you could undo? What am I saying? Of course, you have. Everyone has regrets.\n\nBy the time I collected myself and emerged from the bathroom, I knew that I had to tell Percy. I had to tell my parents too. I knew they would want to meet my baby's father so I decided to kill two birds with one stone, and asked Percy to meet me at my parents' house. I wanted to show them my baby had a father, and he was a good man.\n\nHow stupid of me! I should have known my family better to anticipate how they would react to the news. Stupid! Stupid! Stupid! I had been avoiding my parents for so long, that I let my guard down.\n\nI know I should have told Percy about my pregnancy, before asking him to meet me at my parents' place. I know I should have warned him about my snob parents. However, at the moment, the idea of dropping the news at the same time sounded really appealing.\n\nWhy did I ambush Percy? You know why. I do too. I was afraid. Terrified actually. Because I knew what was going to happen when my parents knew I was pregnant and not married.\n\n\"I beg your pardon?\" Percy's eyebrows lifted and he leaned back in his chair. He was momentarily speechless, and his jaw dropped open in shock.\n\n\"I'm pregnant,\" I repeated. I gave him a few seconds to digest my words before I continued. \"I took a test.\"\n\nHe stared at me with those spellbinding blue eyes. \"I thought you were on the pill.\"\n\n\"I was,\" I explained. \"I don't know what happened. I didn't forget to take any.\"\n\nHe frowned at me. \"You must have. You were careless and forgot.\"\n\n\"It doesn't matter if I forgot to take the pill,\" I said, \"even when I didn't. All we can do is face the music. We have to decide how we're going to handle this.\"\n\nPercy sank back into his chair. \"Are you sure? Could the test be wrong?\" he asked me. \"Maybe you should go to the doctor to get it confirmed.\"\n\nI shook my head. \"A positive test result is over ninety-five percent accurate. I'm pregnant, Percy.\"\n\n\"Maybe you wanted this,\" he said.\n\n\"Of course not!\" I argued. Rage, hot and brisk, flooded my bloodstream. \"How can you think I got pregnant on purpose? I'm not that kind of woman! We were just getting to know each other. I like you, but not that much.\"\n\n\"I still don't believe it. How can this be happening now?\"\n\nI shook my head. \"I don't know.\"\n\n\"Actually I hate you.\" I wanted to say that and more, because I blamed him for everything, for the inconceivable magnitude of my disgrace. For the destruction and collapse of my world that was so good for me. Before meeting him, I had a great life, but I threw it all away for the dream of being in a relationship.\n\nI couldn't imagine that it could happen to me. I was smart. I was careful. I had a great future ahead of me.\n\nPercy pulled me in for a long and tight hug. \"Nervous?\"\n\n\"Of course. Terrified, actually. You?\"\n\nPercy just nodded, but he smiled at me and said, \"Everything is going to be okay.\"\n\n\"So what are we going to do?\" I asked.\n\nThere were a few minutes of absolute silence. Percy was deep in thought looking out the window. I had a pretty good idea of how he was feeling. He was probably in shock. That's how you feel when your whole life is turned upside down.\n\nMy head was whirling around. So many options. None of them sounded that great.\n\n\"I could get an abortion. The procedure would be simple and quick at this stage,\" I offered. I didn't want to get an abortion, I didn't even like the sound of it. I just wanted to test how Percy would react.\n\nPercy looked at me with murderous eyes. \"It's your body and, of course, your choice. But if I were in your place, I wouldn't like to live my life knowing that I killed my first baby. I'd never forgive myself.\"\n\nI gulped hard and nodded. \"We think the same way. I didn't give abortion serious consideration. Just stating it is an option.\"\n\n\"I'd never ask you to do something like that,\" Percy looked straight into my eyes.\n\nMy respect for him grew leaps and bounds. I offered him an easy way out of the situation and he didn't take it. I truly liked him, and I wanted our relationship to keep going.\n\nPercy reached for my hand, and I let him. I needed all the moral support I could get.\n\n\"I could have the baby and give it up for adoption,\" I said, thinking aloud. The idea was appealing to a certain degree. I imagined a happy little child, growing up as the doted-upon only child of a loving, formerly childless family so blessed to get it. And they would tell our baby that his parents gave him up because they wanted the best for him.\n\n\"There are plenty of families that are ready and want children but can't. Adoption is a wonderful thing, but could you live with that choice?\" Percy asked me. \"Whatever we decide, we'll have to live with this decision for the rest of our lives.\"\n\n\"We?\"\n\n\"Legally the father has the same rights to a child as the mother. So I have to give my consent,\" Percy explained to me.\n\n\"Would you give your consent?\"\n\n\"I might, if this is what you want, but we should have a very long talk about it. Maybe even talk with a counselor. I don't want to rush into a life-changing decision like this.\"\n\nThe choice I gave the least consideration to was getting married. However, it was the next thing out of Percy's mouth.\n\n\"Why don't we get married?\"\n\n\n\nCHAPTER 5: PERCY\n\n\n\n\"Are you crazy?\" Laura blurted out just as quickly as I suggested we should marry.\n\nThat surprised me. I thought she would be thrilled to know I was ready to step up.\n\n\"Why not? We are good together.\"\n\n\"Percy, answer me this: would you have proposed to me if I weren't pregnant?\"\n\n\"No, I wouldn't have, it would have been too soon,\" I reluctantly admitted.\n\n\"There's your answer.\"\n\n\"Well, you being pregnant with my child changed everything.\"\n\nLaura disagreed again. She could be really stubborn.\n\n\"We shouldn't get married solely because I'm pregnant. I mean, if this wasn't the plan before then, why is it now? You said it yourself. It would have been too soon.\n\n\"We've been together for around six months. Why would my pregnancy change that? Marriage is about the union of two people who love each other, and nothing else should impact on this decision,\" she explained.\n\n\"Laura, we aren't exactly strangers to each other. I like you, I like you a lot. I could easily see myself falling in love with you.\"\n\n\"I like you too, Percy. You're a great guy. You said you could fall for me.\"\n\nI nodded.\n\n\"Let me ask you this, do you love me? Please, be honest \"\n\n\"Love is a very loaded word, Laura. Maybe I'm not completely there yet. All I know is that I like and I care for you, and I want to be there for you and our baby.\"\n\n\"You can do that without us getting married. I've seen what happens to friends when they divorce, and it wouldn't have been nearly as messy if that slip of paper was not involved and they could have just walked away,\" she explained.\n\n\"We have a child in common; do you really think I would be able to just walk away? The slip of paper can be a nuisance, but it can also be an advantage. Marriage can help a couple's mind stay focused on commitment.\"\n\nI closed the distance between us, and my eyes met hers. \"Laura, are you afraid to make a permanent connection?\"\n\n\"I am not!\"\n\n\"Oh yeah? Prove it to me.\" I tipped her chin to meet mine. \"Marry me.\"\n\nLaura caught a deep breath and held it. \"What is your rush to get married? Usually, it's us, girls, who want to get married.\"\n\n\"Because my parents weren't married,\" I confessed.\n\n\"Why weren't they married?\" Laura asked me curiously.\n\n\"They believed in free love and all that crap. Children were the last thing in their minds. They were together for some years. Then, my father left to travel around the world in search of his inner self, or some hippie crap like that. I was four years old and my brother Tom was two when he left. I have some vague memories of him.\"\n\n\"I'm sorry Percy. I didn't know that. What happened to your mother?\"\n\n\"My mother was a wild girl, always on a high. One day, she forgot to pick me up at school. When I called her cell phone no one picked up, so I called Carol, my grandmother (my mother's mom). When my mother picked up the phone, I knew something was wrong. My mother was supposed to be on her way to pick me up, not at Grandma's house one hour away. An overwhelming sadness hit me because I realized she was leaving us too.\"\n\nI made a pause trying to collect myself. Laura held my hand and squeezed it gently.\n\n\"Ever since I knew her, my mother went from needing a little self-reflecting vacation to needing to try every guru, drug, or self-help group. She explained to me she needed a break from her 'normal' life and time to reflect and meditate about her goals in life. More hippie/new age crap. I started to cry inside because I was losing her too.\"\n\nLaura hugged me tight.\n\n\"My grandmother came to pick me and took me and my brother to her house. I was ten years old. My mother never returned. I never knew if she is dead or alive. Eventually, my grandma got custody of us. She raised us the best she could.\"\n\nI looked at her in the eyes.\n\n\"Do you understand now why I want to marry you? I don't want our baby to grow up without a father. I want to be there for my son.\"\n\n\n\nCHAPTER 6: LAURA\n\n\n\nPercy's story brought tears to my eyes. I held him tight for a long while. He finally collected himself. It was late and we both needed to do some serious thinking about our situation. His story helped me to understand his reasons. I knew he was never going to give up on our child.\n\nI think I was crazy for not saying yes immediately to his proposal. I can't explain why I said no. The triumph of reason over heart I guess.\n\nSuddenly, we were alone, and as his mouth sealed over mine, our tongues gloriously glided together. We both needed to cheer up. It had been a long and frustrating day. His frenzied hands gentled long enough to lower me to the couch. My bed was mere feet away, but we hadn't had the time nor the desire to make it that far.\n\nHis hard body covered mine, his hips falling between my open legs.\n\nThen my shirt was off in a matter of seconds, and my skirt quickly followed.\n\nHis finger curled in the top of my bra, tugging it down before taking my nipple between his lips. His warm tongue swirled and his teeth nipped, shooting sparks that rivaled any orgasm I'd ever had straight to my clit.\n\n\"Percy,\" I moaned, arching my back and pressing more of my breast into his mouth.\n\nHe growled, the vibrations coaxing me closer to the edge. His hair was too short to thread my fingers through, so I palmed the back of his head, holding him as though he were attempting to get away. He absolutely wasn't.\n\nI lifted my hips when I felt the tips of his fingers start their descent down my stomach.\n\nOur groans harmonized as he dipped his fingers between my legs and pressed in just enough to taunt me.\n\n\"Please,\" I begged.\n\nHis head popped up to catch my gaze. \"Given any more thought to that proposal?\" he asked with a wicked smile.\n\n\"Bastard,\" I told him, spreading my legs wide.\n\n\"I know,\" he whispered, holding my gaze as he slid two fingers inside me.\n\nI writhed, driving myself down, unable to get close enough.\n\nI needed more. I wasn't talking about sex. I wanted more of him, more of his soul and his gentle heart.\n\nHis hand worked me, pumping in and out, taking me closer and closer to the edge.\n\n\"Percy , I...\"\n\n\"Shh... It's okay, baby. My offer is on the table. Whenever you're ready, I'll be here. All you have to do is say yes.\" He dropped his thumb to my clit and skillfully circled.\n\nAs an orgasm so strong that I feared I'd never been able to recover rippled through me, I realized I was absolutely ready for anything and everything as long as it was with him.\n\nI finally felt at peace with my situation.\n\nAnd I made my decision.\n\n\n\nCHAPTER 7: LAURA\n\n\n\nThe next day, we had breakfast together and Percy went to work. He told me we'd talk more later.\n\nI went to see a doctor. The results confirmed I was almost five weeks pregnant. I couldn't tell what emotion was the strongest for me. I didn't know if was terror, disbelief, or happiness.\n\nIt was time to face my parents and deliver the good news. I was dreading how they would react to my pregnancy, given my parent's view on legitimate and illegitimate ways of having children.\n\nWhile I was driving to their place, I tried to find the right words to tell them about the baby.\n\nWhat about this? 'Mom... Dad... I'm pregnant, and the father is the man you despised last night.'\n\nMaybe like this? 'Good news! Remember you always wanted a grandchild? Guess what? I'm pregnant. You hated the father, but you'll get over it.\"\n\nOr, maybe I could just say: 'Guess what? I'm fucked and pregnant.'\n\nI rested my hand on my stomach and rubbed my thumb back and forth. \"We are going to be okay,\" I whispered to my tummy.\n\nOf course, things rarely work as you planned them. As soon as my mother let me in she started lashing me out.\n\n\"Laura, how dare you bring that man into our house?\" my mother blurted out. \"You can't be serious about him.\"\n\n\"I thought you'd both like to know the father of my baby,\" I blurted out.",
        "Smooth, wasn't it?\n\nBoth of my parents stared at me with their mouths opened, probably in shock.\n\nMy mother recovered first, her reaction was an irate scream.\n\n\"How could you do this to me!\"\n\nIt wasn't posed as a question, but I was prepared to answer it.\n\n\"Of course, you think everything is about you, Mother! Have you ever thought about someone else except yourself?\"\n\nMy mother looked at me as if I had gone crazy. She opened her mouth to say something, but then changed her mind and looked at my father.\n\n\"I can't believe it! I just can't believe it! Harold, say something! Are you going to let your daughter talk to me like that?\"\n\nShe looked at Dad as if she actually expected him to fix it. \"You say sorry to your mother immediately, Laura.\"\n\n\"I didn't do or say anything wrong. She is the one who should apologize to me,\" I looked at my father, defying him to say otherwise.\n\n\"How could you be so careless, Laura? You're 27 years old! Stop acting like a rebellious teenager,\" my father finally sighed. \"What a mess!\"\n\n\"Percy asked me to marry him,\" I told them.\n\nMy father nodded, Mom looked, if possible, even more distressed.\n\n\"You can't mean to marry this... guy,\" she said 'guy' with disgust. Somehow she made it sound like 'shit'. \"It's bad enough that he got you into this situation. It would be stupid to compound the mistake by tying yourself to this... this low-class bad seed. This guy is not good for you, you need to get rid of him!\"\n\nShe looked at my father again, and told him, \"Harold, call our lawyer. Offer him more money, and a confidentiality agreement, of course.\"\n\nI looked at my parents, \"I haven't known my boyfriend for long, but I do know for certain that when Percy does something, he does it wholeheartedly. The other thing I know is that I am pregnant and Percy is the father. If any of you think I'm going to stand here and let you pay him off so that your grandchild grows up without his or her father, you've got another thing coming.\"\n\nMom did not attempt to hide her contempt. \"I didn't raise you to make these kinds of mistakes! What are the Hamiltons going to think about us?\"\n\n\"You didn't raise me at all, mother. Nana Francine did. And fuck the Hamiltons and their arrogant asses too!\"\n\nMother's eyes widened, and her face grew red. For a moment, I thought she was going to have a heart attack. Then she started pacing back and forth, cursing me and my boyfriend.\n\n\"Percy is not low-class and he's not a bad seed,\" I declared. \"He is a kind, generous, caring person. Any woman would be proud to call him her husband and give birth to his baby. And I-I love him.\"\n\nThe words came out of my mouth before I realized I was saying them. I stood there, in surprise, taking all the venomous anger my mother could dish out. And I knew from long experience that when provoked, Nadine Lane could really dish it out.\n\n\"Of course you think you love him,\" Mom said with disgust. \"You're thinking with your vagina, Laura. \"Girls always fall in love with the wrong guys. It's part and parcel of rebellion. But I will not allow you to ruin your life by getting married to him and having his baby.\"\n\n\"I don't know how you will stop us,\" I said. \"I won't get an abortion and I won't give my baby away.\"\n\n\"Listen to me. We'll send you to the best home for unwed mothers money can buy. Preferably in Europe. We'll tell people you got a job overseas. You'll give the baby up to a nice childless couple, and come home to get on with your life as if nothing happened.\"\n\nI crossed my arms and shot daggers at her.\n\n\"No, I won't. Your days of ruling my life are over. Percy and I are going to get married,\" I told my parents. \"We are going to be a family and we're going to make it work. I don't care if you like it or not.\"\n\nMy mother was hysterical now.\n\n\"Getting married? Are you crazy? Harold! What are the people at church going to think? What will they think of how we raised her?\"\n\nMy mother's reaction didn't surprise me. Our family was the wealthiest in their church and the neighborhood. It was draining being in the spotlight at all times. Knowing that all of high society was watching your every move, just waiting for you to falter.\n\n\"How thoughtless of me not to think about you and your church group when I got pregnant by accident, mother! I should have told Percy's swimmers, 'don't you dare to get me pregnant because people at my mother's church are not going to like it!'\"\n\n\"Laura Lane, I will never forgive you for this!\"\n\nI opened my mouth to say something back, but I let out a cry instead. A soaring pain erupted suddenly in my belly. It was so sharp, for a moment it took my breath away. Just as swiftly, that terrible, spiking pain went and I was able to sit up gingerly. Black spots sprang up in my vision and nausea hit me, the back of my throat flooding with sour saliva.\n\nWhat was wrong with me?\n\nMy mother kept cussing and sputtering, but I wasn't listening to her anymore. My dad realized something was wrong, very wrong.\n\n\"Nadine, could you please shut up!\" he said in a firm tone. \"Laura, are you okay?\".\n\nI held my father's hand, trying to breathe slowly and deeply. \"No, daddy. Something's wrong. Take me to the hospital.\"\n\n\"Nadine, call 911. Quick!\"\n\nAgain, that terrible pain gripped me but this time it was worse. It made me double over, taking my breath away, preventing me from crying out, so only an animalistic whimper made its way out of me.\n\nThose spots in my vision seemed to grow suddenly and I wondered for a nanosecond if I would blackout, but the pain rushed in again with a vengeance, and this time I uttered a single, low guttural howl.\n\n\"Laura?\" My Dad was holding me in his arms. \"Stay with me! Help is on its way.\"\n\nI didn't have enough wherewithal to answer. I knew what was happening and moments later I confirmed it. Blood. It was pouring out of me, pooling on the Persian carpet of the living room floor. It was not like menstrual blood, typically dark crimson. This was bright red, like if you cut your own hand or arm with a knife when slicing bread. Lifeblood.\n\n\"Oh God, Laura. Laura!\" My father was shouting, pleading, but his voice seemed so far away. There were more shouts and I heard people who came running.\n\nAll I could concentrate on was the blackness that threatened to invade me.\n\n\"You'll be okay, baby. You'll be okay.\" And I wondered why he would say that because it was obvious I was losing the baby.\n\nThen I passed out.\n\n\n\nCHAPTER 8: PERCY\n\n\n\nI didn't hear from Laura the next day. I went to her apartment but no one answered the doorbell. I decided to give her some space. I texted her to contact me whenever she was ready to talk about our future. No answer.\n\nThe next day I texted her. Again I got no answer. Then called and it went straight to voicemail, I left a message. Still no reply.\n\nI called Amanda and asked her if she had any news from Laura. She told me she hadn't heard from her in a while. Her texts and calls got the same result as mine.\n\nI kept sending increasingly frantic texts but after getting no replies I went to her parents' home.\n\nLaura's parents weren't there. The guy who opened the door didn't know or didn't want to tell me anything about Laura or what was going on. At that point, I started to panic, thinking her parents had kidnapped her and taken her to Europe.\n\nThe next day I got a text from Laura. \"Don't try to contact me. I hate you! I don't want to see you anymore. I don't want to hear from you. I don't want to ever, ever talk to you again! I'll get a restriction order if necessary. Whatever you need, contact the family lawyer.\"\n\nThe text ended with the name and address of a legal firm.\n\nIt felt like being part of a Twilight Zone episode.\n\nI went to her parents' home again, but the doorman refused to let me in and told me that if I kept bothering them or Laura they were going to call the police.\n\nI decided to see a lawyer and explained to him the situation.\n\n\"It doesn't make sense. She's not like this. We were good. We were talking about it.\"\n\n\"Hormones can scramble a pregnant girl's brain pretty badly. Give her some time, maybe she'll come around,\" the lawyer explained to me.\n\n\"I want to be there for her and my baby.\"\n\n\"That's great, Mr. Wittmore, and speaks volumes of you as a person, but if she doesn't want you around there is very little you can do.\n\n\"You won't like this, but it's true and sometimes the truth hurts. If your girlfriend doesn't want to see you and her family has money, she's probably in another country now.\"\n\nI panicked. \"Is there anything I can do?\"\n\n\"If she decided to get an abortion, you can't do anything.\"\n\n\"Laura didn't want an abortion.\"\n\n\"Maybe she changed her mind. Maybe her family made her change her mind.\"\n\nI knew Laura would never kill our baby. Or would she? I thought she would never walk away from me as she did, however, she did. Did I know her at all? Was she some kind of mental case?\n\n\"What happens if she decided to keep the baby?\"\n\n\"Well, if she wants to give the baby up for adoption, she needs your consent. Of course, she could say she's unsure of who the biological father is, where he is, or how to reach him. In that case, the father will be listed as 'unknown' on the birth certificate. If she delivers the baby in Europe, for example, you'll never know. There are many ways to trick the law when you have money.\"\n\n\"Basically, you are telling me that I'm fucked.\"\n\n\"I'm afraid so. Traditionally, mothers retain most of the decision-making rights regarding an unborn child. I can contact her lawyer and offer him money to contribute to the cost of prenatal health care, but I'm pretty sure he'll refuse. The law generally views the right to make health care decisions as an individual right, so there is not much we can do.\n\n\"When or if the baby is born, and it's a big 'if' considering she might have changed her mind about getting an abortion, we can petition the court so you can have parental rights and you'll be granted visitation, once we get a paternity test.\"\n\nI shook my head, \"It doesn't sound like her. This whole situation doesn't make sense. She wasn't like this. She doesn't even like her parents.\"\n\n\"Blood is thicker than water, Mr. Wittmore. If you were in her situation, would you choose a guy you just dated for a few months or your own family? My legal advice is that you should move on. Fighting your girlfriend and her family will cost you a lot of money and, in the end, none of these things will make your girlfriend change her feelings towards you.\"\n\n\n\nCHAPTER 9: LAURA\n\n\n\nEctopic pregnancy, the doctor said. He explained it happens when a fertilized egg tries to develop outside the womb, in the fallopian tube.\n\nThey'd had to take my tube. They told me later I'd been very lucky, but I didn't feel lucky. In the hospital, I regarded the small scar next to my bellybutton. I wondered what it would do to my chances of having a baby when I wanted one and then marveled at the turnaround of my mind in less than twenty-four hours.\n\nThe doctor explained the most women who have had an ectopic pregnancy will be able to get pregnant again, even if they've had a fallopian tube removed.\n\nThere was a part of me that felt relieved the situation had been taken out of my hands. But curiously, at the same time, I felt horribly cheated. It had been my choice to make, yet before I could decide, it had been snatched from my hands.\n\nThey kept me in the hospital for a few days, for observations. I didn't want any visitors. Luckily my mother wanted the same thing, but for different reasons. The first words I heard from her when I woke up were, \"Thank God, this nightmare is over.\"\n\nI'm sure you've realized by now, that my mother wasn't exactly a caring and nurturing kind of person.\n\n\"Mother, where is my phone? I need to contact Percy. He must be crazy looking for me,\" my voice was hoarse, it rasped in my throat. \"I need to tell him what happened.\"\n\n\"He didn't want to visit you. He didn't care for you,\" my mother said. She didn't meet my eyes.\n\n\"Please, mother. The last thing I need is you lying to me. I know Percy and he's not like that. What did you do?\"\n\n\"I didn't do anything but look out for your well-being.\" She raised her chin in defiance.\n\n\"I seriously doubt it. Your idea of my wellbeing doesn't match mine. Give me my phone, Mother. I don't have the strength to fight you off anymore. As soon as I recover, I'll be out of your life for good. Now, for the last time, give me my fucking phone.\" I emphasized every word of the last sentence.\n\nMy mother took my phone out of her purse and threw it at my side.\n\n\"Suit yourself. Ruin your life if you want.\"\n\nI turned it on and went through my messages. There were a lot of text messages from Percy. Also voice mails. Only one text message had been sent from my phone to Percy. After I read it, I almost fainted.\n\n\"What have you done, mother? Are you really so insensitive? So self-centered' So selfish?\" I exclaimed in tears.\n\nShe tried to play dumb, \"What are you talking about?\"\n\n\"Can you explain this message, mother? Because I'm pretty sure I didn't send it.\"\n\n\"Oh, that message. I did what I thought was best.\"\n\n\"Best for me or best for you? Do you think about anyone else apart from yourself?\"\n\n\"How dare you talk to me like that?\" That's all she had to say, whatever.\n\nEnough was enough.\n\n\"Stop it! Don't say another word! This is typical of you. I don't need your drama draining whatever strength I have left. Please, mother, leave the room, leave the hospital, leave my life, I beg you. I have no strength to deal with you anymore. Don't bother to come back.\"\n\nMy mother left the room without a backward glance. I was tired and I felt like I was going to crumble into despair at any minute.\n\nI called Percy immediately.\n\nHe answered at the second ring.\n\n\"What do you want from me, Laura?\" he asked with a voice full of anger. \"You must need something from me because you didn't bother to answer any of my messages, and your family threatened me with a restraining order if I kept bothering you.\"\n\nI swallowed hard, I barely had the strength to deal with this, but I needed to do it before crumbling down. He was furious and rightly so.\n\n\"Percy, listen to me, please! I didn't write that text. My mother did. I'm at the hospital. I had a miscarriage some days ago. I had surgery and I was sedated. Could you please come in? I need you right now,\" I pleaded. Then I started to cry.\n\nThere was silence at the other end of the line and I thought that maybe he had hung up.\n\n\"Which hospital?\" he finally said.\n\nI texted him the information. I cried the whole time till he entered my room.\n\nPercy sat at my side and held my hand while I explained to him what had happened in detail. I had to stop several times because I felt the urge to cry my heart out. The doctor explained to Percy about the miscarriage and answered his questions. He did his best to stay strong for me, but I could see he was crushed by the news too.\n\n\"I could have died, you know,\" I said.\n\nPercy averted his gaze from mine as if he couldn't handle what I was saying. \"I was worried about you. I did everything trying to find you,\" he muttered.\n\n\"Yeah, my mother messed up bad this time,\" I shook my head.\n\n\"How do you feel, Laura?\" he asked me.\n\n\"How do you think I feel? I'm sad and angry and depressed, my whole life is turned upside down and I have no idea what I'm going to do with it,\" I said very quietly.\n\n\"Sorry, stupid question,\" he murmured. \"I'm here for you, Laura. Whatever you need I'm your first and your last call.\"\n\n\"Thank you, Percy. I truly appreciate it,\" I said squeezing his hand.\n\n\"What do we do now, Laura?\" he asked me.\n\nRight to the meat of the problem.\n\n\"I don't know. I honestly don't know.\" I could hear my voice falter and break. I took a deep breath. \"I need time to think about what happened, about what I want to do from now on. In the last few days I feel like I have been on an emotional roller coaster. I feel so tired of it all. A psychiatrist visited me and we talked for a while. She gave me some pills to deal with anxiety and depression. She also said I need to 'elaborate' what happened. Which is a fancy word to say I need to have my head screwed on straight.\"\n\n\"I don't think being around your family is going to do you any good, Laura.\"\n\nI looked at him feeling extremely sad.\n\n\"I'm well aware of that, trust me. I'm done with my family, especially with my mother. One day I'll be able to settle things straight with her for what she did, but right now I don't have enough strength left. I'm tired, Percy. I'm really tired... of everything.\"\n\n\"Move in with me. I'll take care of you. You don't have to be alone,\" he offered, squeezing my hand.\n\nGosh, this guy was really sweet.\n\n\"Percy, that won't help either. I need time for myself. I need to be alone to collect myself. I need to cry my heart out,\" I gulped hard. An idea started taking shape in my head \"I need a change of scenery. A change of place. This city is too crowded with memories. Besides my parents live here and I don't want anything to do with them.\"\n\nI could see the disappointment in his face, so I quickly added.\n\n\"I promise I'll call you when I feel better.\"\n\nI thought he was going to insist, but instead, he squeezed my hand, gave me a soft smile, and said, \"Don't worry, Laura, I get it. Whatever you need. Just remember I'm here for you. If you need anything or want to talk...\" his voice trailed off. I could see he was in pain too.\n\nI gave him a careful hug, \"I know. Thank you for being here.\"\n\n\"It'll all work out.\"\n\n\"How can you be so sure?\" I ask him.\n\n\"I'm not. Wishful thinking.\"\n\n\"Life isn't a sure thing. Nothing is.\"\n\nVisiting hours ended and Percy left. I felt overwhelmingly sad. I was completely drained, physically, and emotionally, due to the loss of blood and fluctuating hormones. I had only been pregnant for a short while, but I had been already brainstorming names. I had googled 'five weeks pregnant' and discovered my baby was the size of a poppy seed. At that time, I had placed my hand on my stomach and greeted, \"Hello, Poppy.\"\n\nI placed my hand on my tummy and whispered, \"Goodbye, Poppy.\"\n\nAnd I started to cry.\n\n\n\nCHAPTER 10: PERCY\n\n\n\nThe first days I was in shock. I felt numb. I had a great girlfriend. I treated her with love and affection, was always there for her, cared for her. Then she told me she was pregnant, and I started to imagine a future together as a family.\n\nAnd then all of the sudden I was alone again. I had no girlfriend and I had lost a baby.\n\nIt was nerve-wracking.\n\nHowever, my pain didn't enter anyone's mind. Even when I told Joe and Amanda what had happened the first words that came of their mouths were \"Poor Laura.\" My brother, Tom and Grandma said something along those lines too.\n\nAmanda tried to reach Laura but her calls went straight to voicemail.\n\nSo I gave Laura distance and time. Grandma said that if our love was real it will find a way. So I continued with my life, without her.\n\nDays turned into weeks. And weeks turned into months. I didn't hear anything from Laura. Not even a text saying 'I miss you'. I almost texted her a dozen times, but I keep waiting for her to take the first step. Every day I thought about calling her but decided it was better to give her space.\n\nThree months later, I started feeling she had moved on with her life and wrote me off along with the whole experience. I hadn't been with anyone since she left. Should I move on too? Should I keep waiting for her?\n\nThe truth was I felt lonely, very lonely. It was really weird. I'd been single for a long time and I had never felt alone. Now, I felt this sad emptiness without her.\n\nThen, one day, while I was going through my morning routine, my phone rang.",
        "\"Hello?\"\n\n\"Hello, am I talking with Percy?\" a woman's voice asked.\n\n\"Yes, Percy Wittmore speaking. Who's calling, please?\"\n\n\"You don't know me, Percy. I'm Molly Carter. I'm Laura's aunt.\"\n\nThat piece of information obviously caught my attention. My heart started racing.\n\n\"What can I do for you, Mrs. Carter?\"\n\n\"It's Ms. Carter, but please, call me Molly.\"\n\n\"You have my full attention, Molly.\"\n\n\"Look, Percy, I'm not sure how much you know about Laura's situation... about what happened to her...\"\n\n\"Let me tell you what I know. She got pregnant with my baby. We were talking about our options, I offered her to marry me. Then she had a miscarriage. I visited her at the hospital, and she told me she needed time for herself, and disappeared from the face of the Earth. Is Laura okay?\"\n\n\"Yes, Percy, Laura is okay, at least physically. She has been living with me. We are in a small town called Middletown. My sister Joan, Laura's mother, and I grew up here.\"\n\nI'd have never imagined Laura's mother was born in a small town. I got the impression that Nadine and Molly Carter were very different from each other. Molly sounded like a down-to-earth person, talking with her felt like a breath of fresh air.\n\n\"How is Laura really doing, Molly?\"\n\n\"I won't lie to you, Percy. She's not good. She has been depressed since she came here.\"\n\n\"How did you find me? Did she ask you to call me?\"\n\n\"Oh, no! She doesn't know I'm calling you. But she talks a lot about you.\"\n\n\"She does?\"\n\n\"Oh yes! One day, while she was resting I went through her contacts list and found your name, God forbid me. Please, Percy, don't think I'm the kind of woman who likes to pry into other people's business, but Laura has been feeling so low and miserable, so depressed... I don't know what else to do...\"\n\nIt took me just a second to make up my mind.\n\n\"Do you think Laura would be happy to see me?\" I asked. \"She never called me.\"\n\n\"That's because my niece is an idiot, Percy.\" I decided I really liked Aunt Molly. \"She hasn't given up on you. When she gets depressed she talks a lot about you. She says you probably forgot her and moved on with your life.\"\n\nThere was a short silence, and then Molly asked with a hint of concern in her voice, \"Have you given up on her, Percy? Have you moved on?\"\n\n\"I haven't, Molly. As a matter of fact, I miss her. I've been waiting for her call all this time.\"\n\n\"That's great news, my sweet boy, great news!\" I could hear the emotion in her voice.\n\n\"Molly, tell me exactly how to reach Middletown. I'll be there as soon as I can.\"\n\n\"Thank you, Percy. I truly appreciate it.\"\n\nLater that day, Molly sent me several photos of a map full of handwritten indications.\n\nIt took me some days to talk with my foreman, my crew, and make sure they could take care of all our current projects. I had no idea how long I was going to be out of the city and I wanted to be sure they could take care of everything.\n\nAmanda and Joe wished me good luck and asked me to keep them updated about Laura. My brother, Tom wished me the best too. I had already told him the whole story and he was glad that I was finally doing something instead of moping around.\n\nThe drive to Middletown appeared to be a pleasant tour on the maps Molly sent me. In reality, it took ten hours, the last one over some lonely back road. I nearly ran over a skunk, two opossums, a raccoon, and what I hoped was a dog, but had a sneaking suspicion it was a very large and well-fed wolf.\n\nFinally, a sign popped up at the side of the road. Squinting against the descending sun, I could just make out the faded letters: \"Welcome to Middletown.\"\n\nThen, the town seemed to appear out of nowhere, popping magically in front of my eyes. A beautiful valley surrounded by snow-capped mountains and woods. There was a lake not far from the town. I slowed down my car and headed to the gas station.\n\nA young man approached me wiping his hand with a piece of cloth, \"Good evening, sir. Gas?\"\n\n\"Fill up the tank, please.\"\n\n\"You don't look like a tourist, a camper, or a backpacker,\" the man said as he took a hose, took off the gas cap, and started filling the tank. \"We don't get many visitors round here. Are you lost? Need a map?\"\n\n\"Uh... Not really. I'm wondering if you can direct me to the inn.\"\n\n\"The inn?\" he repeated scratching his butt.\n\n\"Molly's place?\"\n\n\"Oh, yes! It's just a couple of blocks from here. Only bed-and-breakfast in town.\"\n\nI thanked him, paid for the gas, and drove to the inn.\n\nAunt Molly's inn clearly needed repairs. The wooden porch creaked as my boots stepped onto it. One of the supports for the porch was buckling and I was surprised that it had not fallen after being like that for what seemed years. A worn-out wooden sign hung over the door. It read 'White Fairypoppy Inn'.\n\nI felt the exact opposite of confident as I walked to the door.\n\n\n\nCHAPTER 11: LAURA\n\n\n\nI'd cried myself to sleep every night since I got to Aunt Molly's place. She is my mother's sister. Mom and Aunt Molly couldn't be more different. Molly was a very affectionate, nurturing, and supportive person. She made me feel welcomed from the moment I got to Middletown. She hugged me really, really tight. At that moment, I knew I had made the right choice coming here. This was the kind of nurturing affection that my heart needed and deserved.\n\nA few days after my arrival, the loss of my baby finally started to feel concrete, like it did happen. Time slowed down. In fact, I think it ceased to exist for me. I sat alone, waiting for something to wake me up, to change this hollow feeling. It was all too heavy, too much to handle.\n\nI asked my aunt not to tell anyone, especially my mother and father that I was staying with her.\n\n\"Don't worry. I get a card from her on my birthday and at Christmas and that's it.\"\n\nI just shook my head.\n\nOf course, my parents could hire a P.I. if they wanted to find me. However, I suspected they were relieved not having me around.\n\nSome weeks later, I started helping my aunt with the inn work. I did small chores like cleaning and placing clean sheets on the bed in a vacated room. I went to bed exhausted each evening. I closed my eyes tight and forced myself to think of anything but what had happened. The mornings usually came much too soon.\n\nFinally, I asked Aunt Molly to work as a receptionist. I was responsible for greeting guests as they arrived at the inn and checking them in and out. It was better than lying in bed all day feeling miserable and crying every night wondering if I would ever feel normal again. The pills the psychiatrist gave me helped me to cope with my situation. Even so, I was still feeling down and cried a lot, usually at night.\n\nThe inn was decorated with lots of lovely objects. Aunt Molly had traveled all around the world collecting things, and most of the objects she had collected were exposed. There were jade statues and ebony cabinets from Japan, sculptures of gods from Ancient Peru, and brightly colored vases and plates from Turkey. I loved them all.\n\nOne night, I told Aunt Molly the whole story from the beginning. We both cried a lot. Being able to get what happened off my chest and cry my heart out helped me to cope with my depression. I felt less alone.\n\nI looked out the window and sighed. It had been raining for three days straight and it had finally stopped. I was depressed. Not in the 'I'm going to go do something drastic to myself' sense, but more in the 'I still have no idea what I'm going to do with my empty life'.\n\nAs long as I didn't think about the past, it didn't hurt. But, some days I couldn't help it.\n\nI was already in bed, when Aunt Molly knocked on my door, taking my mind out of my thoughts\n\n\"Come on in,\" I invited.\n\nShe entered my room. \"Laura! You'll never guess who's here.\" She was so excited that she was bouncing on her feet.\n\nI didn't need to guess. Percy was standing behind her.\n\nHe appeared in the door frame and looked at me as if he had seen me for the first time. He didn't have it in him to look sheepish. But his face was doing its best. \"Hello, Laura. Surprise?\"\n\nI wanted to say a lot but I didn't. When I regained my power of speech, there was only one word available in my brain, \"Percy.\"\n\nHe was really here. Somehow he found me. My heart thumped in my chest. He smiled at me.\n\nI had a thousand questions, the most pressing being why he was here. The answer was kind of obvious. Aunt Molly, of course. She had called him.\n\n\"What are you doing here?\" I asked a little louder than I had planned.\n\nPercy looked as if I'd hit him in the face. I immediately regretted my words.\n\n\"Laura! Check your attitude, child. This poor man drove all the way here just to see you.\"\n\nShe was right, of course.\n\n\"I'm sorry, Percy. I didn't mean it in a bad way. I'm just didn't expect to see you here. You surprised me.\"\n\nSo much had happened since the last time we were together.\n\n\"I understand, Laura. Don't worry, I didn't come here to propose,\" Percy smiled at me again, and a sound between a laugh and a sob came out from my mouth.\n\n\"Could you stop staring at me like I have a bug on my nose and give me a hug?\" He opened his arms, and I ran to him with my arms trembling. He welcomed me into his chest and squeezed me gently. It had been too long. Too long without him.\n\n\"I missed you,\" Percy whispered, echoing my thoughts.\n\n\"I missed you too,\" I could feel the tears filling up my eyes.\n\nI knew today would be different. For the first time in months, I felt hope.\n\nWhatever crackled and sizzled between us was so palpable that Aunt Molly started to cry happy tears.\n\n\"See, Percy? I told you she would be happy to see you,\" Aunt Molly said wiping the tears from her eyes. Then she asked, \"Are you hungry, dear?\"\n\n\"Like a wolf,\" he admitted.\n\nDuring dinner, Percy talked about his work as a contractor. He suggested to Aunt Molly certain repairs and a few improvements for the inn.\n\nAunt Molly was delighted with his suggestions and gave Percy the green light to start with the renovations. I thought she was thrilled with the prospect of Percy staying in town.\n\nAfter dinner, Aunt Molly gave us some time alone. I fixed us two mugs of hot chocolate.\n\n\"Which are your plans, Percy?\" I asked him.\n\n\"I have one plan: You. I'm going to stay here as long as you need me. I don't have a time limit. I left people I trust in charge of my business.\"\n\nTears welled in my eyes.\n\n\"Why? Why would you do something like that?\"\n\n\"When you told me you had a miscarriage it destroyed me. I can't even imagine what you're going through, Laura. I want to be here for you. I need to be here for you. We are in the same boat. We both lost our baby.\"\n\n\"You have no idea how often I lay awake in bed, all hours of the night, just praying you'd come to me.\" I slowly lifted my gaze to his.\n\n\"I understand where you're coming from. I was sad without you. I used to watch my phone every five minutes, waiting for a text or a call from you.\"\n\n\"Really?\" I whispered, a sob catching in my throat.\n\n\"I couldn't stand knowing that you were feeling bad and I couldn't fix it.\"\n\n\"I'm sorry. I should have called you.\"\n\n\"You did what was best for you, Laura. Sometimes we don't do what we want, but what we can.\"\n\nI nodded. I knew exactly what he meant.\n\n\n\nCHAPTER 12: PERCY\n\n\n\nA few weeks passed, I started the inn renovations. Laura's mood improved day by day.\n\n\"I'm planning to paint downstairs this week, so there'll be plenty more flooring to keep us busy over the weekend,\" I explained to Molly, keeping my voice casual. I saw the pride in Laura's eyes as I talked.\n\nUsually, Laura spent most of her time helping Molly with the inn, but she did some jobs for me like painting a new sign for the inn.\n\n\"Can I help you with anything?\" Laura asked me one day.\n\n\"Of course you can.\" I smiled at her.\n\nThe thought of working side by side with her made the job of renovating the inn suddenly seem a little less like labor and more like fun.\n\n\"Great, just show me what to do and I'll help all I can,\" Laura said, I was surprised by her eagerness. She gave me a quick kiss on the cheek.\n\n\"I will.\"\n\nThen Aunt Molly said, \"Percy, I hope you don't mind but I was talking with the Mayor about you and the great work you are doing here at the inn. Simon, I mean the Mayor, is an old friend of mine, we went to high school together.\"\n\nMolly had the habit of fiddling with her hands when she was nervous. She was in her late forties, and she was lovely to behold. She had a slim waist that accentuated her generous curves. Her hair was a pale blonde, and she kept it short. The family resemblance with Laura was evident, especially in the eyes.\n\n\"Go on, Molly.\"\n\n\"Well, when the Mayor asked me about you, I told him you were a contractor, he immediately expressed interest in you. You see, he wants to renovate the historic town square and the courthouse clock. It went up in flames after being struck by lightning some years ago.\"\n\n\"Did he schedule an appointment for me?\"\n\nMolly laughed, \"Just ask for him in the town hall. He's expecting you.\"\n\nI had to go to the town center for supplies, so I decided to visit the Mayor. I needed several items in order to get all the floors, walls, and ceilings repaired and painted. Good thing I had brought the truck and some of my tools with me.\n\nMayor Simon Thompson was a man in his forties. He seemed pleased to meet me.\n\n\"Mr. Mayor,\" I greeted him shaking the hand he extended.\n\n\"Please call me Simon, Percy,\" he said with a smile.\n\nHe offered me a chair in front of him, put a check on his desk, and pushed it across with one long finger. I took the check, counted the zeros, and then looked back at the Mayor.\n\n\"I'll go straight to the point, Percy. Middletown needs people like you. Molly vouched for you, and I'm sure you're going to do a great job. She sent me some pictures of the work you are doing at the inn. That old building looks great. I think she explained to you we want to renovate the town's square and repair the clock tower. I have big plans for our town. I plan to upgrade the schools, loan to new businesses, and assist some of the old ones. Most of the young people here want to move to the big city. I want to revitalize our rural community and give them some reason to stay. We need fresh blood, like you in our community.\"\n\nI liked him, he wasn't bad for a politician.\n\n\"It'll be my pleasure to help, Mr. Mayor... sorry, Simon.\"\n\nI stood up and shook the Mayor's hand again. He was even kind enough to walk me to the door.\n\n\"Thank you, Mayor. I'll do my best not to disappoint you.\"\n\nI took a look at the clock and I knew I was going to need a welder to repair some of the metal pieces.\n\nWhile I was getting some wood planks I made a conversation with a young man called Red Harding. He was a redhead so his nickname made sense. He was renovating an old restaurant in front of the square. When he knew I was a contractor, he asked me if I could take a look at his place and offer him some advice.\n\n\"What a fine old building! It has good bones,\" I exclaimed as I looked around. \"They don't build them like this anymore.\"\n\n\"Thank you, Percy. I'm going to need some help with the electrical work and the plumbing.\"\n\n\"No problem, I'm staying at the inn. Here's my card, just give me a call.\" Red took it and put it in his wallet.\n\nAs I walked back to my truck, I saw a woman placing a poster on the church notice board. It was a flyer for a peer-led support group for people who had lost a child. The name of the group was at the top, in big black letters: 'Empty Arms'.\n\nThe woman finished placing the pins and turned around, finally seeing me.\n\n\"Hi, I'm Martha,\" she looked sad despite the smile on her face. \"Do you know someone who has lost a child?\"\n\nI nodded. \"I do. She had a miscarriage.\"\n\nThe lady offered me a flyer and said, \"A loss is a loss, no matter how much time you have your baby with you. I have lost a child too. She died at three months of age from SIDS,\" she explained to me. She placed a hand on my arms, \"Why don't you and your wife come to the next meeting? It's this Thursday at 7 PM.\"\n\nI didn't bother to correct her. \"I'll talk with her about it. Thanks for the invitation.\"\n\n\n\nCHAPTER 13: LAURA\n\n\n\nWhen Percy arrived back at the inn, I introduced him to our new guest, a tall Italian guy named Antonio Marino.\n\nThe guy shook Percy's hand, and asked him, \"Please, call me Tony.\"\n\nI liked Tony immediately. He had a sincere smile on his face and honest eyes. He was one of those persons who make you feel comfortable when you're talking to them.\n\n\"Mr. Marino is a chef, Percy. He offered to help us in the kitchen,\" I explained Percy unable to hide the excitement in my voice. \"He's looking for a job.\"\n\n\"A chef? What a coincidence! I was helping a guy, who is remodeling an old building in front of the town's square. He's planning to open a restaurant,\" Percy exclaimed\n\nTony was delighted with the news and asked Percy directions on how to reach the building.\n\nWhen he left, Percy showed me a flyer. As soon as I read the title I knew what the group was about. I stood there not knowing what to say. I knew I needed help, but on the other hand, I refused to talk about my miscarriage. Talking about it made it real.\n\n\"What do you think?\" Percy finally asked me, while he eyed me, trying to gauge my reaction.\n\nWhen I finally spoke, I looked at him and asked, \"Do you think I should go?\"\n\n\"I think it might help. I want us to go together. What do you think?\"\n\nI gave him a soft smile. \"We can give it a try. Together.\"\n\nNext Thursday we entered the church, through a set of double doors. The temple was much like the rest of the town, old but warm and cozy. All wood and natural light, with pews running up to the altar.\n\nA woman named Martha waved us over and guided us to the basement. There was a ring of folding chairs. Four other women were talking among themselves. I was the only one who had come with my... friend? Boyfriend? Partner? Boy! I guess it was too late now to settle what kind of relationship we were in.\n\nPercy smiled at me and squeezed my hand. Whatever relationship we had, I felt lucky to have him at my side.\n\nInitially, I didn't know what to expect, and I was scared of walking into a room with a group of women grieving about the loss of their babies. Despite the sad subject that had us all gathered there, there was a physical sense of both resolve and hope in the room.\n\nWe sat down and, after filling our information on a clipboard. A woman asked Percy, \"We feel honored to have a male among us. Are you her husband?\"\n\n\"He is the baby's father, but we are not married,\" I hurried to say, answering in his place.\n\n\"Yet,\" Percy added, which brought a burst of laughter from the group.\n\nSomehow he had managed to explain our situation in just one word.\n\nThen, the testimonies started. There were a lot of tears, of course, but also a lot of hope. It was just what I needed: to be with women who had walked in my shoes and showed me that there was a way out of my situation. If those women did, I could survive this too.\n\nI felt safe to tell them about Poppy. As I started to tell my story, tears began to roll down my cheeks. Percy took my hand in his and caressed it with his thumb.\n\nThe group fully understood my feelings, and as they listened, I began to realize that acknowledging my baby and my loss brought to me new healing in my spirit. It helped me just to talk about Poppy aloud with someone else. I realized the more I told my story, the better I felt, and the more right it seemed to share.\n\nI was surprised to find out that many of my feelings of guilt and denial were normal and that other women also felt the way I did. They also felt isolated and hushed by the world about something that was deeply a part of them. The realization that I was not alone in my feelings, in my fears gave me peace. I felt alive again.",
        "When I finished telling my tale amid the stream of tears, I felt like a great burden has been lifted.\n\nWhen I finished, Martha, looked at Percy, who was still holding my hand, and asked him, \"Do you want to share your experience with us, Percy? People usually focus on the mother, but you are the father, you have lost a baby too.\"\n\nPercy smiled at her and I could see his eyes started to get wet and shiny.\n\n\"Many fathers are unsure how to deal with the loss of their baby. You may feel that you need to be strong for your partner or that you should not feel as upset as you are. If you feel like you can also share with us how you feel, don't neglect your own grief,\" Martha explained to him.\n\nOh my God! Martha's words hit me like a hammer. That's exactly what I had been doing! I was so focused on my own grief that I didn't realize Percy had lost a baby too!\n\nI hugged him hard, hiding my face in his chest and saying, \"I'm sorry. I'm truly sorry. I never thought about it.\"\n\nPercy hugged me back and I could feel his tears wetting my neck. When I finally let him go, he wiped his tears with the back of his hand, cleared his throat, and said, \"Thank you. I needed that.\"\n\nI squeezed his hand.\n\nHe cleared his throat and said, \"This whole experience was surreal to me. As you heard our story, having a baby was... well, unplanned. I mean, you usually date someone, fall in love with her, propose, get married, and after a while you start talking about having a baby.\"\n\nSeveral women nodded at his words.\n\n\"We were just getting to know each other when our baby decided to come. It was a surprise, to say the least,\" Percy let out a short laugh. \"I thought I was content with being single but I clearly wasn't. Laura changed everything.\"\n\nThere was a general \"awwwwwwww\".\n\nHe smiled at me and I smiled back at him through my tears.\n\n\"Then Laura told me she was pregnant and I found I wanted this, a wife, a family...\"\n\nI shuddered. \"What are you saying, Percy?\"\n\n\"Laura.\" He took my hands in his own. \"I thought I was happy on my own until you came and prove me wrong... and now I've found what I never knew I always wanted. That's you....\" he looked down and swallowed hard,\"...a baby, a family.\"\n\n\"After all I did, you still feel that way about me?\" I asked him.\n\n\"You didn't do anything wrong, Laura. This situation took both of us by surprise. We did the best we could considering the situation. I'm trying my best here.\"\n\nThere wasn't a dry eye in the group.\n\nI looked at Percy with new eyes. So much has happened since we met. So many downs, some ups in between. Through it all, he had always been there for me when I needed him. Even now, he had left his work, his town, to be with me. Since he came to me he had been my rock, my comfort. Suddenly I felt so selfish, taking so much from him, giving back so little.\n\nI looked him in the eyes. \"I am certain. About you. About us. But this time, I want to do things right. No baby till we get married.\" I smiled at him and he smiled back at me.\n\n\"You got yourself a deal, Laura,\" he said shaking my hand.\n\nWhen we left the group, I had no doubt about what I wanted. I wanted Percy back. I was determined to make it happen.\n\n\"What are you thinking so hard about?\" I asked him.\n\n\"Us,\" he said. I didn't delve any deeper, but I couldn't help but smile.\n\n\"How was the group meeting?\" Molly asked us as soon as we entered the inn.\n\n\"It was really good. It helped us a lot,\" I said looking at Percy. He smiled back at me and nodded. I noticed I had started to use the word 'us' since the meeting.\n\n\"You had a great idea, Percy. It was really helpful, thank you.\" I gave him a quick kiss on the lips.\n\n\"Would you like to go out with me tomorrow?\" he blurted out.\n\n\"Going out... like on a date?\"\n\n\"Yes, exactly like a date. You know what I mean.\" he elbowed me.\n\n\"I'd love that, Percy,\" I said bumping my hip with his.\n\nMolly winked at us with a mile-wide smile on her face.\n\n\n\nCHAPTER 14: PERCY\n\n\n\nThe next morning, I was ready early. I had asked Tony to prepare a picnic basket for us and he was happy to oblige. When Laura came down, I was nervous as a teenager.\n\nThere was something about Laura that hit me deep in my core. I'd seen other women hold all the attention in a room before with their fake personalities, fancy dresses, and voluptuous bodies. Laura didn't need anything of that. She was the real thing. She was genuine. She could woo me wearing T-shirts and jeans, just with a smile instead of make-up.\n\n\"Should we invite Molly?\" I asked Laura.\n\n\"On our date?\"\n\nIdiot. I gave myself a mental slap upside the head.\n\nLaura, of course, didn't let it go so easily.\n\n\"Aunt Molly, do you want to crash our romantic date?\" she called.\n\nMolly emerged from the kitchen. \"Nothing I would love more than being an awkward third wheel,\" she said. \"But someone has to be in charge while you are out.\"\n\nWe went out of the inn to find two white horses neighing as if they were calling us.\n\nLaura looked at me surprised and I smiled at her.\n\n\"Surprise.\"\n\n\"How did you get these horses?\"\n\n\"Oh, I met them yesterday, I asked them if they wanted to ride with the most beautiful girl in Middletown and they said yes.\"\n\nThing was, I had made a call to Red Harding, the guy I was helping with the restaurant renovations, and he was happy to help me. His father owned a farm and he had some horses to lend.\n\n\"You outdid yourself, Percy.\" She grinned and swung herself up onto the saddle as easily as if she were mounting a bike.\n\nI, on the other hand, clumsily heaved myself onto my horse with enough grunting and sweating that I was afraid Laura'd take one look and call the whole thing off.\n\nWe headed west to the lake.\n\nOur reflections gleamed on the crystalline waters of the lake. The horses whinnied and the birds chirped while we ate our sandwiches. \"This is the sound of happiness,\" I thought.\n\n\"You still haven't told me how you found this place,\" Laura said. \"It's perfect.\"\n\nI didn't want to admit that Red Harding had saved me again, so I gave her a vague answer, \"Just stumbled on it. Good luck, I guess.\"\n\nThe hanging branches of the old trees and rainbow of wildflowers made it the perfect spot for a romantic picnic. I had to admit the guy had good taste in romantic date spots. Not far from us there was a weeping willow. Its branches hung down over the water, forming an aesthetically arranged curtain of willow twigs.\n\nLaura gazed out at the impossibly smooth water of the lake. \"Thank you for bringing me here, Percy.\" She leaned forward and put her arms around me, and hugged me tight. I pulled her closer to my body and kissed the top of her head. I liked that she wasn't afraid to touch me.\n\n\"I like that I can be myself when I'm around you,\" she said.\n\n\"I feel the same way about you, Laura. I've been thinking about you since you left.\"\n\n\"Thank you for coming here. It means a lot. You make me feel... special.\"\n\n\"You are.\" I took her hands in mines. \"Laura, you don't have to go through this alone. I want to take care of you. I want us to be a couple again. Like we were. Well, not like we were because I guess we're both different now, but I do want to be romantically exclusive again. Not that I've been with anyone else,\" I quickly added.\n\nShe smiled at me, fighting back the tears, \"This is so crazy, you know that? We have made everything upside down. First, we have a baby, then you ask me to marry you and now you want to date me.\"\n\n\"Let's go back to where we started. Let's get to know each other better, see if we are compatible. You already know I care deeply for you and my feelings for you grow every day,\" I said, earning a smile from her.\n\n\"I want this too. It feels right, Percy. I care a lot for you too.\"\n\nWe talked a lot about everything and nothing at the same time. It was a bonding experience.\n\n\"There's something I want to share with you,\" Laura said after we kissed.\n\n\"I'm listening.\"\n\n\"When I discovered I was pregnant, I started searching the net about pregnancy and all that and discovered that the baby was the size of a poppy seed. So I decided to call her 'Poppy'. Of course, the baby didn't have a sex yet, but I like to think about our baby as a she.\"\n\nI felt my heart melting. I wrapped my arms around her and hugged her tightly. \"That's very sweet of you, Laura. Thanks for sharing it with me.\"\n\nLaura, cried on my shoulder while I ran my fingers through her hair.\n\n\"I have an idea,\" I said. \"I'm sure you noticed your aunt's inn is called 'Whitefairy poppy'.\"\n\nLaura nodded. \"It was such a moving coincidence.\"\n\n\"Maybe it was destiny. A sign we are in the right place for us. Anyway, I had this idea: why don't we plant white poppies all in front of the building? In that way, each time we see the bed of flowers\", we'll think of our baby,\" I suggested.\n\n\"Oh, Percy! What a wonderful idea!\" she wrapped her arms around my neck and kissed me hard.\n\nWe walked hand in hand by the lake. We talked and talked and talked. And when the setting sun cast colors upon the scattered clouds, painting the sky with pink, orange and purple, we rode our horses back to the inn.\n\n\n\nCHAPTER 15: LAURA\n\n\n\nThis second chance with Percy was much different than the first time. We dated like he was trying to show my heart that he was here for me and he wasn't going anywhere.\n\nOur date at the lake ended with us together in bed. We kissed, and one kiss wasn't enough. Kissing turned into a heavy petting session, and that, of course, led to sex. I let him initiate it. Physical intimacy was the last thing on my mind after losing my baby. I was afraid penetration might hurt in more ways than one. Would it evoke flashbacks of what I had gone through?\n\nThe first time felt strange. Maybe because Percy wore a condom. But most likely, because it felt like something I simply had to live through to move on. For the first time in my life, orgasming was off the table.\n\nIt had never been a problem for me before. I used to enjoy playful, uninhibited, sex. My miscarriage had taken that from me.\n\nOf course, Percy noticed it.\n\n\"What's wrong?\" he asked me.\n\nI shrugged, \"Nothing. I'm probably tired from our date.\"\n\n\"Don't do that, Laura.\"\n\n\"Do what?\"\n\nPercy held me closer, kissed the tip of my nose, giving me no choice but to look at him.\n\n\"Don't hide from me. We're together in this. Talk to me.\"\n\nSo I told him, I told him how I felt. I told him I was afraid of getting pregnant again. I told him I felt my body had failed me.\n\n\"Everything will be okay, Laura. We will get through this. Things will be different next time. I'm not leaving you, Laura. I'm taking this seriously.\"\n\n\"Thank you,\" I kissed his lips softly, lovingly. It meant the world to me having him here with me.\n\n\"Just so you know, I'll be sleeping in your bed from now on.\"\n\n\"This is not exactly a queen-size bed,\" I said.\n\n\"Good. That means you won't be able to get away from me in the middle of the night. I like holding you in my arms.\" He said. That made me smile.\n\n\"I do like it when you hold me,\" I admitted.\n\n\"Come here,\" Percy opened his arms.\n\nWe cuddled, and he held me in his strong arms. I rested my head on his chest and I felt safe, secured in his love for me. His breath was warm and calming. I just wanted to stay like this forever.\n\nI felt his lips press against my forehead just as I was drifting off.\n\nWhen I woke up the next morning, Percy wasn't next to me. Suddenly, the bed felt empty. I missed the warmth of his body next to mine. I went to the bathroom to freshen up, and when I went out, a divine smell guided me down to the kitchen. There he was wearing one of Auntie's aprons, talking with her, cooking while humming a song.\n\nI smiled leaning on the door frame looking at him. I wolf-whistled at him.\n\n\"You look sexy in that apron.\"\n\nPercy looked at me, smiling. \"Good morning, Sunshine. I wanted to wear just the apron, THAT would have been sexy.\"\n\n\"Of course, I objected,\" Aunt Molly added. \"I have a reputation to keep.\"\n\n\"We need to find you a good man, Molly,\" Percy told her.\n\nHonestly, at first, I didn't expect Percy to stay. I thought the excuses would start tumbling out of his mouth after a while. But he didn't. He seemed to be settling here in Middletown.\n\nAfter two weeks of sharing a bed. I relaxed around him. I got used to his touches and his caresses. I got used to his warm body next to mine and his morning wood poking in my ass.\n\nI could tell when he was tired and when his eyes danced with joy because he had good news to share. I knew when he was hungry and even when he wanted to be left alone.\n\nMore and more, I wanted to hold him in my arms and never let him go. I wanted to build a life, a home, and a family with him and trust that everything was going to be okay.\n\nBut there was another part of me that wondered if Middletown would be not enough to keep him interested. What if I was not enough to keep him interested? I knew I'd changed. I was not the playful free-spirited girl I used to be anymore. I was moody, I still cried a lot. I also realized I needed to stop thinking so negatively.\n\nI kept going to the church group. Percy came with me most of the time, depending on his work schedule. He was getting really busy since he met with the Mayor.\n\nListening to the group's stories, some of them much heavier and sadder than mine, I started to feel my grief was unjustified because I never met my baby. I didn't even have a baby bump.\n\nOf course, they thought differently than me about this.\n\n\"This is not a competition, Laura. It doesn't matter how far along you were, nothing should stop you from grieving for the baby you and Percy made. No matter how many people say, 'it wasn't really a baby yet'. You felt in your heart that it was a baby the moment you conceived and no one can take that away.\"\n\nMartha looked at me and asked me, \"Before you lost your baby, was there joy? Were\n\nyou happy?\"\n\n\"Yes,\" I said. \"I was happy.\"\n\n\"Were there specific moments? Can you picture them? Can you not think, instead of always focusing on those sad days where you lost your baby, about the times that were joyful? When you first discovered you were pregnant, maybe? Or if you felt the baby move? Or even the morning sickness?\"\n\n\"I can,\" I say. \"I always thought it was better not to, though. Just put it out of my mind.\"\n\n\"When a close friend or family member dies, specifically if it's in a tragic accident or unexpected in some way, it's good to not think about death but to think about life. It's not that we can't mourn the hard things, but to honor someone's memory, to let it live on, we need to move past it. We should celebrate the life.\"\n\n\"My baby never had one.\"\n\n\"No,\" she said slowly. \"But she touched yours.\"\n\n\n\nCHAPTER 16: PERCY\n\n\n\nThe renovations of the town square progressed just fine. Red Harding introduced me to a welder, a man called Paul that was dating one of his waitresses, and together we managed to make the courthouse clockwork work again. After that, I offered him to keep working with me. We also repaired the plumbing and cleaned the old fountain. Then, we restored Pioneer Square's Historic sidewalks.\n\nThe Mayor was so pleased with our work, that he immediately assigned me a new project to renovate Middletown's primary school. I also started getting small jobs from the locals too. People commented about what wonderful work I had done with Molly's inn and the square. Without even realizing it, I was busier than expected and I had to assemble a local working crew with 'Paul the welder', as my new foreman.\n\nThe crazy, violent, and distracting big city life didn't appeal to me anymore. In the city, every time I put my feet on the ground I remained oblivious of the connection I had with the earth beneath my shoes. The concrete and the thick layer of tar obstructed my senses from going deep down.\n\nIn Middletown, I experienced myself as a part of nature again. The wild natural setting engaged all my primal senses. The air smelled like pines, lavender, and freshness. I listened to the movement of the trees and grass around me and smelled and felt the energy of the mountains.\n\nWhen I walked in the city, I walked with heavy, rushed, and unmotivated steps, with a strong desire to reach the destination as soon as possible. In the city, it was considered rude to acknowledge another person's presence as you were going about your business. In Middletown, it was rude if you didn't.\n\nLaura and I continued sharing a bed, but we were also sharing our lives. She used to fall asleep in my arms. I'd been awake for the last hour watching her sleep and thinking.\n\nShe was an early bird like me. I loved to lie on my stomach, watching her getting dressed. When she finished, she sat at my side and said, \"I know you are awake, Percy. You're not snoring. I want to talk with you before you go to work and I get busy with the inn.\"\n\nI got up, sat on the edge of the bed, held her hand, and looked at her.\n\n\"What's going on in that pretty little head of yours, Laura?\" I said, kissing her cheek.\n\n\"Many thoughts are running through my head right now.\"\n\nI leaned forward and kissed her nose. \"It's my job to make you happy and if I'm not doing my job then I need to know what's wrong so I can help you. Now tell me, Laura, what's with the frown?\"\n\n\"It's difficult to put it all into words, but I'll try.\" She looked at me and said with a voice full of concern, \"Do you truly want to stay here with me, or are you planning to go back to the city at some point?\"\n\nI looked at Laura pondering my words before answering.\n\n\"When I came here, I didn't have a plan, except helping you to get out of depression.\"\n\n\"I'm not completely out of the woods, but I think I'm seeing the light.\"\n\n\"I know, I'm truly happy for you.\" I wrapped my arms around her and gave her a tight squeeze. That said, the thing is I like it here. I'm working almost as much as I'd have worked in the city. The people here are nice and friendly. Middletown is a great place to grow a family.\"\n\n\"What are you saying?\"\n\nI looked at her into her eyes, \"I'm saying that I am in this for the long haul.\"\n\n\"Then it wasn't just pity or guilt? Because if so, I feel much better now. You can go back to your life.\"\n\n\"I'm here because I want to be with you. Thing is, I'm not sure I want to go back to my previous life. I won't lie to you, our relationship had a very rough start. The loss of a child is one of the hardest things life can throw at a couple. It has been an emotional roller-coaster. I get it, this isn't how it was supposed to be. One thing I learned is that life is messy, and sometimes things just fall apart. When that happens, you pick up the pieces and you keep going. I can understand the concept of running away and wanting to be alone with your pain. However, I'm glad we saw past that, and stubbornly held on to what was left of us.\"\n\nLaura hid her face in my chest, \"I'm sorry I left the way I did. I wasn't thinking clearly. I just couldn't stand being near my parents anymore.\"\n\n\"I was shocked at first when you didn't contact me, hurt too. The only thing in my mind since I knew we were having a baby was I wouldn't be like my parents. I wouldn't bail on my kid. Then, when Molly called me, the only thing on my mind was coming here to be with you.\"\n\n\"Do we have a future? I've been so afraid. I fear the bubble we have been living in is going to burst at any moment, and everything will come crashing down around us.\"\n\n\"Many couples break up after losing a child. Our relationship was strong enough to hang on. Over the past months, we started healing, and we are falling in love with each other again. I stopped hiding my fears of starting a family and falling in love with someone. For the first time in my life, I can see a future with someone else,\" I lifted her chin to look into her eyes. \"I can see a future with you.\"",
        "\"Oh, Percy!\" Laura held me tight in her arms. \"I want a future with you too. Everything has changed since you came here. It felt like the sun coming out after a hurricane. The nightmare is slowly fading.\"\n\nShe looked vulnerable, but I knew better. Laura was strong. She was a fighter. And she could rock my world with just one look.\n\nI kissed her on the lips and gave her a tight hug. Laura is the one woman that I could see myself falling in love with.\n\nI stood up and locked the door.\n\n\"I think we are both going to be late for work today,\" I said with a grin.\n\nShe grinned back, \"Sounds good to me.\"\u00b7\n\nI slowly started to undress her, both of us never taking our eyes off each other. First, the blouse, and then the bra. Her perfect round breasts were snow white. I slowly bent and kissed them all over. Laura sucked in a deep breath every time I planted a loving kiss.\n\nLaura started to remove the shirt I had slept in. I could feel the love in her hands when she caressed my tanned body. I slowly undid her jeans, pulling them down over her perfect ass and down her beautiful legs. Her panties were next, and, bending down, I kissed her belly all the way down until I could smell the sweetness of her wetness. I removed her panties in one sensual motion and opened her legs wide, moving down, kissing and licking her perfect mound. Laura was sighing and panting.\n\nI moved my body up and onto her. Her hands slid down my sides, pulling my sleeping pants and boxers down in the process. My cock was hard and dripping. I couldn't wait any longer, Laura guided my cock and rubbed it along her slit getting it very wet, and then I pushed into her and inside. Her warm wet, walls, caressed my pulsing shaft until I could go no further, both us letting out little moans as I made love to her.\n\nLaura moaned with every motion, with every loving thrust, I caressed her breasts and hips and thighs with hands that were both strong and gentle. Soon we were in a whirlpool of ecstasy as we both exploded at the same time. My thrusts became slower as the last of my release filled her.\n\nThen we held each other, enjoying the afterglow of our love. We both needed this. I've never craved sex the way I have these past few months. I guess what they say is true. Once you find your one, you know.\n\nLaura rested her head on my shoulder and snuggled into me. I closed my eyes and leaned into her.\n\n\"I love you, Laura,\" I said without really thinking. I just felt natural.\n\n\"I love you, Sir Percival. My knight in shining armor.\"\n\nCHAPTER 17: LAURA\n\nWe decided to take the rest of the morning off. I leaned my head on the pillow and turned my face toward the window. The morning sun shone through the window warming my face. My hand rested in Percy's lap, our fingers locked together.\n\nMy lips curved into a smile when I felt his hand caress my hip. Percy was different from any other man I'd met before. He was sweet. He was caring. He treated me with love and respect. He was attentive, caring, and didn't leave my side unless it was for work.\n\nWith Percy everything was different. Each caress was done with feeling. Each kiss was done with the intent to show me that he was real, that we were real. These feelings were building up inside of me till they exploded this morning.\n\nThrough it all, he had been my rock.\n\nI realized with surprise that I had fallen for him. Deeply. Madly. Truly. Funny how things like that could sneak up on you.\n\nOne day you're in hell, feeling the darkness closing around you, and then suddenly you're smitten, in love, and looking at the universe, through rose-tinted sunsets.\n\nThen a well known, dreaded voice, burst my bubble.\n\n\"Good morning, Laura.\"\n\nI turned around to face my father.\n\n\"Father, what the bloody hell are you doing here?\" I jump at the sound of my father's voice. He was standing in the doorway. He looked out of place here.\n\n\"It's good to see you too, Laura. You look good,\" my father said. He even managed to sound sincere.\n\nPercy was at my side, his arm draped possessively around my shoulders.\n\n\"What are you doing here, father?\" I insisted.\n\nMy father cleared his throat. \"I came to bury the hatchet.\"\n\n\"In my head?\"\n\nAunt Molly entered the room. She looked from me to Percy and back to me. Her eyes told me this was her doing.\n\n\"Harold called me a few days ago, Laura. He asked me if I had any news from you, and I told him the truth. I'm sorry. I just wanted to let him know you were okay. I never thought he would come here,\" Molly explained.\n\n\"It's okay, Aunt Molly,\" I reassured her. \"Where is my mother?\"\n\n\"She couldn't come,\" my father said avoiding my gaze.\n\n\"Meaning she didn't want to give up her book club or her charity group. Or coming back to her birthplace is beneath her?\"\n\n\"Don't talk about your mother like that,\" my father said, breathing heavily, and I knew my comment was spot on.\n\nAunt Molly stood in front of Dad and said with a firm voice, \"Harold, I'll let you stay as long as you are civil to my niece and her boyfriend.\"\n\n\"You'll let me stay?\" My father reacted. He wasn't used to people bossing around him.\n\nI gained a new respect for Aunt Mollie. She held my father's gaze and insisted, \"Yes, I'll let you stay. This is my inn, you have no say here. If you're in here, it's because I say so. Tough shit if you don't like it. You know where the door is.\"\n\nPercy clapped.\n\nI decided to help Aunt Molly, I stood beside her and faced my father. \"Well, father. Why don't you say what you came here to say and leave us alone? We were happy till you arrived. If you think for a minute that you're welcome here, you're sadly mistaken.\" My words had a bite but I didn't care.\n\nMy father nodded in defeat, taking the empty couch next to Percy.\n\n\"Before this goes any further, I think you owe Percy an apology,\" I said as he sat down. He needed to know I was serious.\n\nPercy's hand squeezed my shoulder, \"It's fine, love. I don't need a half-assed apology.\"\n\nMy father looked at him with a sad smile on his face, he made a pause and said, \"Percy, Laura is my baby. Someday you'll understand what that means, young man. I know I wasn't the best father, and I wasn't around for her, and I regret that. Someday you'll do something stupid like offer money to make what you think is a problem, go away. I hope you're the right man for Laura.\"\n\nI had to give my father credit, he was putting on a great performance for Percy's sake. But I wasn't buying it. I knew my father better than Percy. He was a good lawyer. He knew how to plead his case, and he knew how to talk someone into doing what he wanted. I knew he had a secret agenda.\n\n\"I love your daughter, and I've been doing my best to make her happy.\" Percy's voice was too calm. I looked at him briefly and knew he was holding everything in. Then he looked into my eyes and I smiled back at him. \"That is something, I can promise.\"\n\n\"Ever since you left, Laura, I knew I needed to get in touch with you and get our relationship back on track,\" my father sounded sincere. However, I believed none of it.\n\n\"Back on track? That means you say 'jump' and I ask you how high?\" I asked. \"Your days of trying to rule life are way over.\"\n\n\"I just want what's best for you. Surely you can understand that.\"\n\n\"You don't know what's best for me. That's the whole problem. You don't know me. You never did. You never had time for me. For the last time, father, what are you really doing here?\"\n\n\"I came here to mend fences and tell you that if you want to marry this man...\"\n\n\"This man has a name,\" I interrupted him. \"You better learn it, since I hope one day he's going to be your son-in-law.\"\n\n\"Unfortunately...\" Percy muttered under his breath.\n\nI squeezed his hand again. I knew exactly how he was feeling.\n\n\"I imagined that. Of course, a prenup has to be signed when the time comes and your mother will help you to plan your wedding...\"\n\nI raised my hand to stop him.\n\n\"Stop it! Now I know why you are here, damage control. When Molly told you Percy was here with me, you came all the way to Middletown to make sure I wasn't going to marry him before you could protect yourself. I made it very clear that your days of ruling my life are over. IF one day, Percy and I decide to get married, what's mine will be his and what's his will be mine. Which means no prenup.\"\n\n\"That wouldn't be wise,\" my father warned me.\n\n\"Tough shit, father. You can cut me out of your will if you want to guard your precious money. Apparently, it runs in the family, doing so when a daughter falls in love with the wrong person.\"\n\nPercy looked at me waiting for an explanation. I squeezed his hand and looked at Aunt Molly. Her eyes were open with surprise because she realized I knew her deepest secret.\n\n\"How did you know...?\" She started to say.\n\n\"I suspected what happened some time ago,\" I explained to her. \"I finally put the pieces together once I was here and got to spend some time with you. Everything became clear when I found myself in your situation. I always wondered why mom kept the bulk of Grandpa's fortune, while you inherit just this inn and a small-cap fund. I knew Grandpa enough to know you must have pissed him off very badly from him to do something like that. You never got married, probably holding a torch for someone you loved and couldn't have. That's what all the travels were about? Forgetting him?\"\n\nAunt Molly nodded. She had tears running down her cheeks. \"It happened a long time ago, Laura. I never cared for money. Your mother and I are very different about that amongst other things. I'm happy here in Middletown.\"\n\n\"If a man truly loves you, he won't have a problem with signing a prenuptial agreement,\" my father pressed on. \"Otherwise, he's a gold digger.\"\n\nPercy cleared his throat. He wanted to say something. Knowing him, this was going to be interesting.\n\n\"Mr. Lane, I'll sign a prenuptial agreement as long as you sign another agreement stipulating you won't use your money to interfere in our lives in any way. Your wife won't plan our wedding. You won't buy us a house, you won't gift us a car, or anything else above five hundred dollars without consulting with us first. That applies to our future kids too. You won't pay for a private school or the college you think they should attend.\n\n\"I'll provide for my family, not you. You and your wife will have no say in our relationship, the way we choose to live our lives or the decisions we make regarding our kids. You and your wife will be part of our lives as long as you respect that,\" Percy added, making me wish I could think quickly on my feet like him.\n\nLord, how I loved this man! He had put my father completely off balance.\n\nMy father's face was red now. No one had ever stood up to him as Percy did. \"That's preposterous! You're blackmailing me, young man.\"\n\nPercy gave an insolent shrug. \"Take it or leave it, old man. I think our lives will be better with yours and your wife's arrogant asses out of them.\"\n\n\"Who do you think you are talking to? I'm Laura's father,\" he exclaimed.\n\n\"Then act like it!\" I screamed. \"Stop trying to control my life. I am an adult! I can make my own decisions for myself!\"\n\n\"This was a mistake!\" my father said standing up.\n\n\"Thank you, Captain Obvious!\" I screamed. \"Did you realize that no even once have you asked me how I was feeling or how I was dealing with the loss of my baby? Aunt Molly and Percy have been here for me. When things got rough, it was Percy who anchored down and held us afloat. Where were you, father? Where was my mother?\"\n\n\"If I leave now you better forget about us, Laura...\" It was an empty threat. He knew he had lost the battle.\n\n\"Promise? Because every time that you or my mother try to meddle in my life you turn everything upside down. The sad part is that you almost ruined my chance with Percy. In the worse moment of my life, when I needed him most, you pushed him away for your own selfish reasons. Thank God he loves me, because if I didn't have him right now because of what you did... I don't know what I'd do. As far as I'm concerned you and my mother are both dead to me. I've been making changes in my life and I think you need to be one of them. I'm definitely not letting my future family be a part of this madness. Goodbye father.\"\n\n\"Your home is in the city with us. You know you won't be able to stay away. You'll come back begging us to take you back,\" his tone sounded more like a plea than a threat.\n\n\"That's where you're wrong, father. You don't have anything I need or want. Percy has it all. He's my home.\"\n\nMy father stormed out of the inn and we all breathed out a huge sigh of relief.\n\nPercy put his hand on my shoulder to calm me down.\n\n\"Thank you,\" I finally said to Aunt Molly and him, \"For not backing down with my father. It meant a lot to me.\"\n\nCHAPTER 18: PERCY\n\n\"I love you,\" I said, reassuring Laura that I was here and not going anywhere. It didn't matter how screwed up this situation was. I was in this for life.\n\nLaura must have sensed something of this because, all of the sudden, she went down on one knee, took my hand, and said, \"Let's get married.\"\n\nAfter saying the words, Laura sucked in a nervous breath, as though she was momentarily trying to pull the question back in, fearful of the answer.\n\n\"What did you say?\"\n\n\"You heard me, let's get married,\" Laura repeated with a nervous smile.\n\n\"Why?\"\n\n\"Why not?\"\n\n\"Because I think you only asked me to marry you to get back at your father. Laura, I love you, but proposing to me to defy your father is not the right thing to do.\"\n\nI could see her lips tighten.\n\n\"I hear what you're saying, but I'm not a teen anymore. I'm not proposing to you because I want to piss my Dad off. My father's visit made me treasure what we have built here. It helped to open my eyes and realize what I have here with you. You are sincere, loving, and I know that you truly care for me. I want us to start a family. When I look at you, I can see myself with you, and, as much as marriage scares me, I want it.\"\n\nShe paused to let her words sink in. Laura realized I still had my doubts, so she continued defending her case.\n\n\"I want to marry you because we love each other and I want to spend the rest of our lives together. Now, are you going to keep me hanging, or are you going to say 'yes'?\"\n\n\"You know I love you too, and I want to say yes. However, this is not the right way of doing this,\" I insisted.\n\n\"To hell with the right way! We've done a lot of things wrong since the beginning of our relationship and yet, here we are. What do you say? Will you marry me?\"\n\n\"I say you're crazy, but I think you're right. Yes, let's get married.\"\n\nWe melted in a long passionate kiss.\n\n\"I love you, Laura.\"\n\n\"I love you too, Percy.\"\n\nMolly took one of her golden rings off a finger and handed it to me. \"No proposal is complete without a ring.\"\n\n\"Thank you, Molly, I'll get a better one tomorrow.\"\n\nMolly waved my words away, \"It's my gift for you, for bringing so much joy into this old maid's life.\"\n\nI slipped the ring on Laura's finger, and we kissed again.\n\n\"Can I say something?\" Molly asked when our lips finally broke apart.\n\n\"Of course, you can,\" we both said at the same time.\n\n\"I know you may have doubts, but I've watched how Laura behaves around you, Percy, and you know what I saw?\"\n\nI shook my head.\n\n\"I saw a woman who loves her man with every bone in her body. You two make me believe that it doesn't matter how you got together, but what you do once you have each other is what counts. Whatever journey you and Laura are on, it's the right one. I can see nothing but happiness for you in the future.\"\n\n\"Thank you,\" I said with a voice full of emotion.\n\nLaura hugged Molly tightly. \"You're right.\"\n\nMolly gave Laura another squeeze. \"I usually am. Don't forget that!\"\n\n\"Thank you, Auntie.\"\n\n\"For what, Darling?\"\n\n\"For being here for me when I needed you. For bringing Percy back into my life.\"\n\n\"He makes you happy, Darling. That's something I haven't seen in a very long time.\"\n\nI held Laura tightly in my arms. \"You are beautiful, Laura. I love your smile and sparkling eyes. I love you with every fiber of my being.\"\n\n\"I love you too, Sir Percival.\" She gave me a sassy smile and said, \"We have a wedding to plan.\"\n\nOh boy!\n\nCHAPTER 19: LAURA\n\nFor the next few weeks, butterflies flew perpetually in my stomach, and on the day of the wedding, I was so excited that I could barely contain myself.\n\nOur relationship continued to flourish. I felt a sense of purpose and belonging that I'd never felt in my old life.\n\nWhen people in Middletown knew about the wedding, they all wanted to help. They made it a town event. Everybody just responded with total love. Molly was the brains behind the entire operation which was a huge relief for me.\n\nPercy's brother, Tom came to Middletown especially for the wedding; he brought most of Percy's belongings with him, including a tux. He was going to be Percy's best man, of course. Amanda and Joe came with him too, especially for the wedding. Percy made Joe his partner. He'll take care of business in the city while Percy works here in Middletown.\n\nThe church support group took care of the church decorations and making the centerpieces for all the tables. The flowers were cut from our neighbor's garden.\n\nPercy's crew stepped in and helped out setting the inn for the reception. They built us the welcome doors which we walked through for the reception.\n\nI was so overwhelmed with all the help we were receiving, I kept saying, \"I'm never going to be able to truly have people understand how much this town did for our wedding.\"\n\n'The Middletown Gazette' printed the invitations. I sent one to my parents, and some days later I got a letter from them.\n\nDear Laura,\n\n \n\nTo say that your mother and I were shocked by the news of your upcoming wedding and relocation to Middletown is a vast understatement.\n\n \n\nAre you really going to get married to that man? Why are you doing this? Are you ruining your life to punish us? What does it take to make this nonsense stop?\n\n \n\nWe have always wanted the best for you. We gave you everything we could and set a standard of excellence for everything you set out to do. \n\n \n\nFor you to return our love and devotion with such defiance has wounded us deeply. But, you are our daughter, and we will always love you. I beg you to return home at once. I have enclosed the money for your ticket. \n\n \n\nIf you were trying to get our attention, you have succeeded. If it is a marriage you seek, there are many fine gentlemen from wonderful families who would be overjoyed to have you as their bride. Surely you know this.\n\n \n\nIf the worst has happened, and in our delayed response you have gone through with this charade, then I still urge you to come home. We know the finest lawyers and can rid you of this marriage as though it never happened. If you have been tricked into this, and your 'husband' demands a ransom, we shall pay whatever he requires.\n\n \n\nWe just want you to come home to us, whatever the cost.\n\n \n\nLove,\n\n \n\nHarold &amp; Nadine\n\nThey couldn't even sign it \"Mom and Dad\". Oh well, I tried. I didn't bother to answer them. They were never going to understand. Their loss.\n\nWhen people knew what had transpired between my dad and me, at least six men offered to walk me down the aisle, including the Mayor himself. I finally chose Tony Marino, who had lived in the inn for a long time. He had always been kind to me and had taught me some cooking secrets.\n\n\"The way to a man's heart is through his stomach,\" he used to say. \"So be careful whom you cook for. Just kidding!\"",
        "\"Great choice,\" Red Harding, co-owner of the town's restaurant along with Tony, approved. \"The catering for your wedding reception is on us, of course.\"\n\nMolly was my maid-of-honor, and Amanda and the women from the support group were my bridesmaids.\n\nAs I got ready, for the small ceremony at the local church, I bounced up and down excitedly and felt like I was going to cry at any moment. I was almost positive that I wasn't going to make it through the ceremony without at least tearing up.\n\nThe music started and everyone got in line. Sabrina, Paul's adopted daughter, was our flower girl. Tony was waiting outside the room, wanting to give us our privacy. He looked incredibly handsome in his tux.\n\nAs we made our way towards my very soon to be husband, I felt my heart fill completely with joy. My bouquet was made of white poppies, of course, and it was shaking in my hands. Women at church used to say everything happens for a reason. Maybe, Poppy came into our lives to bring Percy and I together in a way we would have never imagined.\n\nThe ceremony was a blur for me. My mind cleared when Percy recited his vows.\n\n\"From this moment, I take you as my best friend for life. I pledge to honor, encourage, and support you through our walk together. When our way becomes difficult, I promise to stand by you and uplift you, so that through our union we can accomplish more than we could alone. I promise to work at our love and always make you a priority in my life. With every beat of my heart, I will love you.\"\n\nI nodded as I wiped away a tear. \"You say the sweetest things.\"\n\n\"You bring out the best in me.\"\n\nAs he leaned in to kiss me, the butterflies in my stomach began to race wildly. As I gazed into my husband's eyes, just before our lips met, I finally knew that I had met the love of my life.\n\nEPILOGUE: LAURA. Ten months later\n\n\"Percy! I hate you!\" I screamed at my husband. I closed my eyes and felt an excruciating pain across my stomach.\n\nHe held my hand and encouraged me, \"It's almost over, Love.\"\n\n\"How the hell do you know it, Percy? Do you have some magic Spidey sense telling you that the baby is almost here?\"\n\nMy husband's patience had no limit.\n\n\"You can do it.\"\n\nI steady myself and breathe. I look up at him and say two words. \"I know.\"\n\n\"You're going to be okay,\" Percy whispered.\n\n\"Okay? Nothing is okay. I'm in pain and our daughter is stretching my vagina as wide as the Grand Canyon. How is this okay?\"\n\nPercy closed his eyes and took a deep breath while I crushed his hand in a tight squeeze.\n\n\"Try to breathe as we learned in Lamaze class, Love.\"\n\n\"Breath? Do you think breathing actually helps with the pain, Percy?\"\n\n\"I don't know, Love. All I know is that I love you,\" he said kissing my forehead.\n\nMy body tightened as another contraction worked its way through my abdomen. \"It hurts,\" I whined. Tears, or maybe just sweat, rolled down my face. With each contraction, I was growling like a wounded lion.\n\n\"I'm sorry you're going through this, Love.\"\n\n\"You should be. It's your fucking Olympic swimmers that did this to me.\"\n\n\"Laura, we both agreed to have another child...\"\n\n\"You tricked me with your charming ways and your devil penis! I let you stick that thing in me and now look at me. I look like a beached whale.\"\n\n\"You're the most beautiful woman I ever saw,\" Percy said running his fingers through my hair.\n\n\"How are you feeling, Laura?\" the nurse asked me.\n\n\"I feel like I'm squeezing a bowling ball through the eye of a needle. I also need to pee.\"\n\nThe nurse lifted my blanket and put my feet into the stirrups. \"Looks like we're ready to start pushing.\"\n\n\"We\" Is she pushing too?\n\n \n\nShe went out to look for the doctor. He looked at my vagina, smiled at me, and said, \"Okay, Laura, on the count of three I want you to push. Push out your little girl so you can meet her.\"\n\nEasier said than done in my opinion, but it was clear no one cared what I thought.\n\nPercy helped me sit up. He held my hand as I pushed down.\n\nI pushed for what felt like forever. I could feel my baby's body moving down mine. I felt stretched and pulled.\n\n\"You're doing great. Another push, Laura.\"\n\n\"I can't do it,\" I sobbed, and my husband took my hand, held it tight. I'm sure I crushed Percy's fingers. I just wanted the pain to go away.\n\nI pushed hard, harder than I thought I could. I yelled as a burning sensation stung my vagina. I couldn't think. I could only groan.\n\n\"Almost there!\" the nurses crooned. \"You can do it, Laura!\"\n\nI did it again and again. Over and over. Each one was more taxing than the one before. Percy held my hand in between the contractions and pushing. He also wiped my forehead for me and moved my hair away from my face. He was doting when all I wanted to do right now was punch him in the nose. I never wanted to go through this again.\n\n\"I can't do this anymore,\" I said, out of breath.\n\n\"Yes, you can, Love. Just one more time,\" Percy encouraged me.\n\n\"What do you know? You're never touching me again with that penis of yours.\"\n\n\"Okay, Love.\"\n\nI started crying. \"Okay? You give up so easily? What, am I not sexy enough to have sex with now? Is it my fault my vagina is going to be as big as the Channel Tunnel?\"\n\n\"After delivery, the tissue will usually shrink back down to a state very close to the original. There are some pelvic exercises that help with that,\" the nurse by my head informed me.\n\n\"Percy, do you still love me?\" I asked him.\n\n\"Of course, Laura. I will always love you.\"\n\n\"Okay, Laura, your baby's almost here,\" the nurse interrupted us. \"One more big push, and you'll get to hold your baby girl.\"\n\nI nodded and bore down again letting out a loud scream and then, the pain was over. I fell back, onto my back, drained of baby and energy.\n\nThe doctor handed Percy a pair of scissors. Wailing started immediately and I felt I was already falling in love with our Lily. She was set on my chest while the nursing staff and doctors finished up with me.\n\nI was in shock as I stared at the baby, our baby. She was so real. Percy sat down beside us. He took my hand in his and brought it to his lips.\n\nHe looked at me, our eyes met for a moment. There was so much love and happiness in these few seconds of time. Our eyes were connected in one brief moment that contained so much.\n\nIt was only a brief moment but everything was there, all our history, and all our laughter, and all of the wonderful moments, and how we got through our loss, and how we had made it to the other side. This moment held everything I could ever want to say to him and everything I could ever want to hear back. It held a miracle.\n\n\"I'm afraid to touch her,\" Percy said. \"My hands are too big, too rough. I might break her.\"\n\nI smiled at him, knowing exactly how he felt. However, holding my precious baby came naturally to me. I couldn't stop staring at her.\n\nI ran my finger down her nose and over her cheek. She reacted by moving her head to where my finger was going.\n\n\"She's beautiful, Laura. Our Lily is gorgeous like her mother.\" He kissed me and then kissed our baby girl's forehead.\n\n\"Welcome to our lives, Lily,\" I said kissing her.\n\nI stroked my daughter's cheek and couldn't believe how soft it was. It was too soft to be real, like a cloud by Monet, all fuzzy edges and gentle colors. My heart swelled, and I tried not to let the postpartum hormones make me cry irrationally.\n\nInstead, I gently placed one of my fingers into Lily's closed fist. Her pink hand encircled my index finger. I leaned down to kiss her fist.\n\nI looked out the window, through soft creamy panels and could see it was still snowing. But despite the chill outside, I felt a warmth within, as if sunshine had flooded my soul.\n\n****\n\nFor all the mothers and fathers who never got to meet their babies, who've experienced the horror of miscarriage or stillbirth, or those who've experienced fertility problems. Because there is light at the end of the tunnel even if you don't believe it.\n\nTHE END\n\n \n"
    ],
    "authorname": "DB86",
    "tags": [
        "snob parents",
        "love story",
        "middletown",
        "miscarriage",
        "romance"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/the-light-at-the-end"
}