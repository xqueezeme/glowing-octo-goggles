{
    "title": "Necessity is the Mother of Obsession Ch. 02",
    "pages": [
        "The Gambit \u2013 Sportsmanship Matters \n\nAuthor's note: This story arc is my first attempt in the Erotic Couplings genre. My other attempts all seem to have devolved into Romance. I suppose this could be, too. This is Part 2 of a 5-part story arc. There is a lot of non-sexual moving the story forward at the beginning, then the more erotic stuff, including some bi/lesbian. Please vote/comment. Consider it like applause. It's how I know whether I'm pleasing my audience. Enjoy... \n\n* * * * * \n\nTuesday Early Morning \n\nTo Karen, 5am Tuesday came way too early. She was still a little giddy from the previous evening's fucking, and a lot sore. She hadn't been stretched like that for six months. Actually, for a lot longer than that, since Greg wasn't all that big. John was, though, and she felt it. \n\nShe also felt him curled up behind her when the phone rang. He still believed in wake-up calls for some reason. \n\n\"Would you be a darlin' and get that?\" he mumbled into the back of her neck. \n\n\"Owww...\" was her moaned reply as she leaned forward to pick it up. \"Hello?\" \n\nIt was the automated Chatty Cathy informing her that it was her wake-up call and wishing her a great day in beautiful, exciting Las Vegas. She slammed the handset back on its cradle. \n\n\"Wake up and make me happy,\" she said to thin air, hoping it would reach his ears. \n\n\"My, my, my...\" she could hear his smile. \"Take off Number 27 and look who gets her Dom on...\" \n\nShe reached behind her, groping for the steel bar she felt pressing into her butt. \n\n\"Alright, alright, alright!\" he hastily amended. \"Coffee and a great breakfast coming up!\" He scrambled out of the bed and headed for his bathroom, bobbing erection leading the way. \n\nHis bathroom, she thought as she lay there, a very happy woman. That's right. This is his room. I slept with him in his bed last night. She stretched like a cat unwinding. Awesome! Wonder where I'm working next week? \n\nShe also considered the relative distances between his bathroom and hers, and how badly she needed to pee, and decided his shower would do. She eased out of bed and waddled to the bathroom where he was still sitting on the toilet. Not stopping, she opened the shower, turned the water on full hot and stepped in, adjusting the temperature down as she relieved herself. She had it tolerable, on the hot side, and was letting the stream pound away at her neck and shoulders when he stepped in. \n\n\"Do you shampoo in the morning?\" he asked as he grabbed a sponge and body wash and began with her neck and shoulders, working his way down. \n\n\"Not usually,\" she told him. \"My hair takes too long to dry, usually. Shampooing is the night before. But after last night and given the time we have this morning, I probably will.\" \n\n\"No, you won't,\" he told her as he moved to her back and butt. To her surprised expression, he added, \"I will.\" He reached out to the vanity and grabbed the hotel's bottles of shampoo and conditioner. He then proceeded to give her a lesson in Heaven. \n\nI haven't been pampered like this since my 21<sup>st</sup> birthday, she thought, when Daddy treated me to a day at the spa... and out of nowhere, the rush of sadness surprised her. She fought to get it under control quickly, before John could notice. He was busy working the shampoo and conditioner through her hair, and washing and rinsing her... making her feel loved, maybe even adored. Her fantasies might have run wild with that one if it weren't for the memory of losing her Dad. \n\nThat's just the way it is, she thought. Sometimes you win, sometimes you lose, she sang in her head, and most times you choose between the two... I didn't choose that one, though. Daddy should've lived a lot longer. He was a good man... \n\n\"Earth to Karen, Earth to Karen...\" She heard his voice breaking into her thoughts. \n\n\"Yes?\" she answered, turning to look at him over her shoulder. \n\n\"You're all clean as a whistle, with the usual exception,\" he told her. \"If you want to finish yourself up and start drying off, I'll get finished and get breakfast started. Then we can hit the notes.\" \n\n\"What usual exception?\" She really, actually, didn't know what he meant. \n\n\"Your pussy,\" he explained. \"I thought you might be either a bit sore or a bit hinky about me rubbing you there, so I skipped it. There's a razor out on the vanity, if you want it.\" \n\n\"Don't you think if you are going to pamper your lover,\" she asked, wondering again where she was getting the bravado, \"you should wash and shave her as well?\" She smiled at his surprised expression. \n\n\"Where have you been all my life?\" he muttered as he stepped out to grab the razor. He figured the body wash would have to do for shaving gel. \n\n\"The last six months,\" she called after him, \"I've been right outside your door!\" \n\n\"How much do you love that landing strip?\" he asked as he stepped back in. \n\n\"Why?\" she asked, suspiciously. \n\n\"Well, it's nice,\" he admitted, \"but I'd prefer you bare. If I'm going to shave you, I can either do it my way or leave it the way you have it.\" \n\n\"If you prefer bare, make it bare,\" she decided. \"I'm your lover this week.\" \n\nShe grabbed the handicapped bar and steadied herself as she spread her legs and he smeared body wash all over her pussy as he knelt down to get a better look at what he was doing. Apparently he was an expert with a razor because it wasn't long before he'd removed all vestiges from her groin, including the little swirly spot where her lips came together that she always had a problem getting completely smooth. Plus, her landing strip was gone, replace by beautifully bare skin. \n\n\"After you're dried off,\" he told her, standing up, \"and before you get dressed, see me. I've got an aftershave that will take out any irritation I might have caused.\" She leaned forward and kissed him in reply. \"Okay, I'm out of here, off to make breakfast. See you in a bit,\" he told her as he finished putting things away. \n\nBy the time she was dry, except for her hair which she put in a towel, she could smell breakfast cooking. \n\nThis man is spoiling me, she thought. I'd better come through today... She walked out sans clothes to find breakfast almost ready. When he saw her emerge, he ducked into his room and came back with a small bottle of The Cool Fix from Shaveworks. She'd never seen it before. \n\n\"Allow me,\" he told her. \"Spread 'em.\" She laughed a little as she complied. \n\n\"I found out about this from my ex-wife,\" he explained. \"She was told about it by one of her black boyfriends. He swore it was great for razor bumps and I'd have to agree.\" \n\nKaren sat on her initial response, which would have been to ask \"black boyfriend? While you were married?\" Instead, she chose to keep her mouth shut, discretion being the better part of valor, or whatever the saying was. She did appreciate the cool, soothing feel of the gel as he applied it, almost as much as she appreciated the feel of his finger probing around down there. But this was a work day. \n\n\"Okay,\" he finally told her, \"throw on a robe or something. We have about two hours to eat and review our ammunition before we have to dress and drive over there. I'll set out a plate for you on the dining table. We can spread out there.\" Without waiting for her to answer, he went back to the kitchen and started putting together a plate for her. \n\nShe did as asked and threw on a robe, going to the table. He laid out breakfast for them and two stacks of papers. He dug in and apparently expected her to, as well, since he started flipping through the documents as he ate. She took her time eating, but watched him, closely. She knew what was in the files. She had put them together. She was just waiting for a clue as to what he wanted from her. \n\n\"Okay, so Morton Industries is privately held by a tight group of investors holding shares. Pearson, Mills and Morton own 68% of company. Pearson holds 20% and wants to retire and cash out his part but is staying for now because he objects to Mills' desire to downsize and divest their real estate holdings and some of their light manufacturing. Mills is currently holding 22%. Morton holds 26% and wants to keep the status quo, sort of, and leave a legacy to his grandkids. He's amenable to merging with Tikken, which owns 18% of Morton and in which we hold a controlling interest of 72%.\" \n\n\"Tikken wants to leverage some of the unused real estate to expand manufacturing, rather than downsize, although some repurposing may be in order. Pearson's the wild card. If he throws his stock at Mills, they end up with 42% and control of the company. If he throws in with us, we end up with 38%, and control. If he throws in with Morton, he ends up with 46% and control.\" \n\n\"We don't want to control the company, but we do want it to expand. So if we convince Pearson to split his shares and sell half to us and half to Morton, then Morton ends up with 34% and control, we're next with 28% and Mills comes in third with 22%. The other 14% is scattered across a small group of retirees, holding their shares as investors. Now, when Mills figures out what's going on, he going to try to acquire Pearson's shares by whatever means, which will include going after the 14%, which means the price will go up. Way up. So we need leverage to convince him not to do that. Rather, if Mills thinks he can work with us and our combined 50%, he may be tractable...\" \n\nKaren listened to John rattling off the situation and possible strategy and kept a running log of mental notes. She had already organized the background material by the interests of the three primary stockholders and she had a lot more on her laptop. She was going to end up being a \"facts and figures\" girl... the one John turned to for quick statistics. \n\n\"Today will probably be boring,\" John was telling her as they finished up. \"Morton will have his people presenting their status all morning long. We'll cover positioning and proposed solutions in the afternoon. There may be some quibbling about numbers, but I don't expect any major arguments until Wednesday. Today will be mostly sparring.\" \n\n\"Oh, and you're going to meet Lucretia Jenkins, my lead attorney on this merger, so play nice.\" \n\n\"What does 'play nice' mean?\" Karen wanted to know. It could make a huge difference to John. \n\n\"I don't want to prejudice you,\" he told her, \"and... Lu's a shark, used to swimming in a very big pool of sharks. She's bi, leaning towards lesbian and definitely oversexed. I think she takes some of her frustrations out through her lawyering. Definitely a Dom. Also a bit snarky about any woman I am, or have been, having a relationship with... none of them, to her mind, are good enough for me. I don't know where she gets off having that opinion. Maybe it comes with my charm. Or maybe it comes from having been balling buddies at one time.\" \n\n\"In any case, although I doubt there's any truth to the rumor that she was named after Lucrezia Borgia, it may look like she's taking an instant dislike to you. Don't take it personally. And don't torpedo her. She's going to need a 'facts and figures girl' just as much as I do. We're all on the same team here. Is that enough info to keep you from sabotaging her?\" \n\n\"More than enough, sir,\" Karen told him, dropping into her Personal Assistant persona. John noticed, and smiled. \n\n\"We aren't there, yet, Karen,\" he told her. \"You can still be you around here. Do you have everything you need for today?\" \n\n\"Only one question,\" she smiled. \"Do I pack enough lunch for three of us?\" John actually looked thoughtful at that one. \n\n\"Make it four,\" he told her. \"Orin Jacobs, who is our account rep with Tikken, will be there and we may as well all four of us go out together.\" \n\n\"Aye-aye, sir!\" she smiled and started clearing the breakfast dishes. \"You go get spiffed up. I'll get the dishwasher running and be right behind you.\" \n\n\"Aye-aye, ma'am!\" he smiled in return, and to her surprised look, he added \"hey! I know which side my toast is buttered on...\" Then headed off to get dressed. \n\nThis is going to be a very strange day, Karen decided as she cleaned up. I've never done anything like this before. Hell of a way to get on-the-job training. \n\n* * * * * \n\nTuesday Day \n\nThe day went pretty much as John had said it would. There were more than a dozen people at the meeting, lawyers included, but the only ones that made any difference were John, and the triple threat of Pearson, Mills and Morton. James Morton did, in fact, have his people give a fairly detailed view into the status of their company, with side comments about different ways they could take it including Mills' downsizing option. Nothing was said about Tikken's interests and Orin sat quietly next to Lucretia and just listened. \n\nLucretia, or just Lu, on one side of John with Karen on the other, was a story unto herself. Dressed in a tailored Armani creation that hid what Karen could tell were her sizable assets, she presented as being all business, all the time. Tall, at about 5'10\", medium build, dark brown hair pulled up into a bun, she was attractive in the way a statue is attractive. She wasn't at all friendly when John introduced Karen and in fact was a bit abrupt. Karen was a little prepared for it, and handed her a flash drive in lieu of a handshake. \n\n\"That's all of our background material, Ms. Jenkins,\" Karen told her, \"organized by party and interests. There's also some dirt, in case you need it. I can answer any questions you might have.\" \n\nLu Jenkins had taken another look at this relatively new Personal Assistant of John's. \n\nProbably John's type, if he ever gets her out of her clothes, she thought. Breathing and with a pulse. But... apparently organized. That's a plus. And John isn't constantly pissed at her. Probably good. We'll have to see how it goes. \n\n\"Thank you, Ms. O'Reilly,\" Lu had nodded as she took the drive. \"I'll take a look as we sit through the boring financials this morning.\" \n\n\"It's Karen, Ms. Jenkins,\" Karen had told her. \"Ms. O'Reilly just seems too stuffy for me. I'm not one of the power players that should get the formality.\" \n\n\"Actually, you are,\" John had stepped in. \"You just don't know it, yet. And Lu? You and Orin are going to join Karen and me for a working lunch. There's a little bistro near here where we can talk without being overheard.\" \n\nI am? Karen had thought. What kind of power player does he think I am? She didn't get much time to turn that one over in her mind as John was escorting her and Lu to the anteroom of the boardroom, to meet Orin. \n\nHe had turned out to be the corporate \"nice guy\" with all the charm and good looks a customer account representative should have. Although he rep'd for Tikken, everybody in Morton's group knew him and he was the one that made introductions, primarily of John and incidentally of Lu and Karen, to Morton's people. \n\nThe morning wrapped up with no surprises. All the financials lined up with what they already knew. Their performance was strong and holding steady, not growing and not shrinking. At lunch, John dropped the bomb. \n\n\"Lu, Orin, I think you should know that Karen is my mistress.\" The look of surprise on Orin's face was evident. Lu's expression, however, was inscrutable. Karen's was frozen. \n\nOkay, already got the clothes off, Lu thought as she kept her face expressionless. Need to keep a closer eye on this one. \n\n\"So along those lines,\" John went on, \"she and I are going to be wining and dining Pearson, Mills and Morton. What kind of maneuvering we do will depend partly on the assignments I'm about to give you. Pearson, I've got. He wants to retire. Mills is a problem. Orin, you know Tikken's interest in expanding. I need to know why Mills would object. What's his problem with it? And Lu, I want you to find out how uncomfortable we could make him if he tried to downsize the company. Any legal maneuvering that would cost him more than it's worth would be good.\" \n\n\"Morton wants a legacy to pass on. Orin, going back to Tikken's desire to acquire and expand, I need realistic expectations of how that would strengthen Morton's position, not expose it to risk. They're talking to us and not Tikken's Board because they think we're going to be pulling the strings. Lu, I want to know about Pam Morton's sex life. I know the rumors. Use your contacts. I want to know where she swings and when, and what kind of people. Pictures if you can. But do it quietly.\" \n\n\"Do you intend to seduce her, John?\" Lu asked as if it were just another business question. \n\n\"Not me,\" he told her. \"Her.\" He indicated Karen. \n\nWhy am I not surprised? Karen thought somewhat sarcastically as she kept her face as neutral as possible. That's what he was hinting at before. \n\n\"Okay, I'll get what I can,\" Lu nodded dispassionately. Karen saw her give her another \"once over\" and wondered what could be going through the shark's mind. \n\nI wonder what kind of experience she's got with older women? is what Lu was thinking. I'll need to get some girl-time with her and find out. \n\n\"Orin, get ahold of Pearson and tell him I want to take him and Gloria to dinner tonight. Find out if they have a favorite restaurant. Tell Karen and give her Pearson's mobile. Karen, go for eight o'clock reservations or whatever is close to that, then call Pearson and tell him.\" \n\n\"This afternoon they're going to be arguing about futures, expanding, downsizing, status quo. Their lawyers are going to have a lot to say. Lu, keep track. We can hook up later for a debriefing. They won't get into too many details because they won't have access to Tikken's financials. It should be generally boring but with luck, the sharks will give us an idea of the kinds of problems we'll be up against. Everybody good with that?\" \n\n\"Yes, sir,\" Orin agreed immediately. \n\n\"No problems, John,\" Lu told him. \n\nJohn turned to look at Karen when she didn't answer immediately. \"Karen?\" he asked. \n\n\"Well... I have a few questions...\" she told him with a straight face, then couldn't hold it. With a smile, she told him, \"sorry, couldn't resist. I do have a couple of questions but they don't have to do with this afternoon or evening, so I'm okay on my end.\" \n\nOh, Lord, she's teasing him! Lu thought. Guess it's gotten pretty serious. Definitely need to check her out. \n\n\"Then thanks, folks. If you liked lunch, thank Karen. If you like your paycheck, thank me. I've got the tab and the tip. When you're ready, let's head back.\" \n\nThe afternoon meeting went as John had predicted, Pearson had accepted and Karen had gotten eight o'clock reservations at Izakaya Go. The suits had fallen all over themselves trying to explain why one path was better than the others. Karen allowed herself to daydream a little about having John bend her over and take her in the middle of the meeting. She also noticed Lu surreptitiously watching her, like maybe she was trying to read her mind or something. \n\nIn the end, John expressed his appreciation for the effort put into the presentations, Morton thanked his people for the same thing and everybody left amicably. Orin and Lu took their leave and headed in different directions while John and Karen headed for their car. \n\n\"Next stop, dinner!\" John smiled at Karen. \n\n\"Nope,\" she disagreed. \"Next stop, hotel where you fuck the hell out of me and we get cleaned up, then dinner!\" \n\n\"Oh, how silly of me,\" John grinned. \"Of course!\" \n\n* * * * * \n\nTuesday evening \n\n\"Kanbanwa. Izakaya e yokoso! Welcome to Izakaya Go. How may I help you, please?\" ",
        "The very pretty Japanese girl in the gorgeous silk sheath dress greeted John and Karen as they entered. \n\n\"Wareware wa yoyaku o shita,\" John told her. \"Thompson.\" The girl smiled and looked at her seating chart. \n\nHoly shit! He speaks Japanese, too! Karen realized. Of course he does, she chided herself. And probably half a dozen others. He does business internationally, for Christ's sake. \n\n\"Thank you, Mr. Thompson,\" the girl looked up. \"Your table for four is ready. Do you wish to wait for the others in your party?\" \n\nJohn thought about it for a moment, then decided, \"no... they can join us when they get here. Their name is Pearson.\" \n\n\"George Pearson, sir?\" the girl asked as she perked up. As if she could get any perkier. \n\n\"Yes, actually...\" John told her, a little suspicious. \n\n\"Mr. Pearson and his wife are regulars of ours,\" the girl explained. \"I will bring them to you as soon as they arrive. My name is Etsuko, sir, if you need anything.\" She picked up a couple of menus and asked, \"would you please follow me?\" \n\nJohn skillfully maneuvered Karen in front of him as they followed Etsuko to their table. Karen noted it was a bit cramped inside, with many tables close together and most of them full. Popular place, she thought. The table they were taken to was a booth near the back, though, and not quite so crowded. They were seated and given the menus, which both took the opportunity to browse. \n\n\"Okay, so this is the first time I've run into a place that specializes in Japanese tapas,\" John chuckled, \"and good Lord, have they got variety on their menu!\" \n\n\"Sir,\" Karen told him quietly, \"I don't know what half of this is... more like 90%. I'm not a Japanese cuisine kind of girl.\" \n\n\"Then I'll order for us, if it doesn't offend your Dom side,\" he smiled and she almost blushed. Almost. She was getting better at keeping it under control. \n\n\"That would be fine, sir,\" she nodded. \"You should know, I'm not big on spicy.\" \n\n\"Got it,\" he mused, looking at the menu. \"How about a sushi sampler for an appetizer while we wait?\" \n\n\"That sounds good,\" she agreed, \"and no alcohol for me, please.\" \n\nJohn nodded, caught the waitresses eye and ordered appetizers and tea. Then they sat back to wait. \n\nIt was maybe ten minutes later that John saw Pearson being conducted to their table, accompanied by a somewhat elegant looking older woman whom he presumed was Gloria, George Pearson's wife. John stood at their approach. Karen decided to take a chance and remain seated. \n\n\"Bloody traffic!\" George exclaimed as he extended his hand to take John's. \"Sorry we're late. John, this is my wife, Gloria. Gloria, this is John Thompson, the fellow we're in meetings with regarding the future of Morton Industries. Also our host for the evening.\" John released his hand and took hers with a slight bow. \n\n\"Mrs. Pearson,\" he greeted her. \"I'm glad you could join us. May I introduce my assistant, Karen O'Reilly?\" he went on. \"Karen is my right-hand girl when it comes to business. She keeps me on-time, informed, fed and appropriately dressed.\" All said with that charming smile. \n\n\"Sounds more like a fianc\u00e9e or a nanny,\" Gloria told him, then turned to her. \"Pleased to meet you, Ms. O'Reilly.\" \n\n\"Please, it's Karen,\" Karen offered in reply. \n\n\"Then it's Gloria,\" Gloria decided. \n\n\"Please,\" John gestured towards their seats and George helped Gloria slide in first. \n\nEducated, refined, a sense of humor, stately grace... Karen mused as she watched the elder woman be seated. She'll be the behind-the-scenes driving force of their relationship. \n\n\"George, can I get you and Gloria anything to start?\" John asked as George was sitting. \n\nGeorge smiled what could best be called a Knowing Smile, and told John, \"allow me.\" He then turned towards a nearby waitress and said, \"Kasumi...\" \n\nShe turned and walked to their table. \"Sir?\" \n\n\"Anata wa, karera ga motte iru mono o motte jisan shite kudasai baai,\" he told her. \n\n\"Sugu ni, sei,\" she bowed slightly, then with a quick look at the table, turned and headed off. John just chuckled a little and he and George exchanged one of those Knowing Looks. \n\n\"Okay, I'll admit it,\" Karen spoke up. \"I'm the dunce of the group tonight. I don't speak Japanese. May I ask what just happened?\" \n\n\"George just told the waitress, essentially, 'we'll have what they're having,'\" Gloria explained softly. \"A thinly veiled reference to...\" \n\n\"When Harry met Sally,\" Karen smiled as she and Gloria finished the sentence together. \n\n\"And please don't feel like a dunce, dear,\" Gloria went on. \"George is just showing off. It's taken me forty years to catch up to him in that department, though now I think I can hold my own.\" \n\n\"I guess John was just showing off earlier, too,\" Karen answered. \"He was speaking Japanese with the hostess. I guess I'm just along for eye-candy.\" She shot a look at John and he got the feeling she felt belittled. \n\n\"Oh, you won't convince me you're along only as eye-candy,\" George spoke up. \"I was watching you during the meetings today. You were following right along and I could see the wheels turning. Until you spaced out during Brad's atrociously boring presentation. Honestly, I was tempted to take a nap myself.\" \n\n\"I don't know what you were thinking about, but from your wistful smile, I'd say it had to be pretty good. Maybe having something to do with eye-candy.\" \n\n\"George!\" Gloria interrupted. \"You're going to embarrass the young woman. Stop it.\" Then turning to Karen she added, \"He can be so crude sometimes. Don't let him bother you.\" \n\n\"Oh, I'm not embarrassed,\" Karen hurried to reassure her. \"At least, not by his comments. Maybe by being caught drifting during the meeting and then being ratted out to my boss, but that's about it.\" She turned to look at John, but he just shrugged with that smile of his. Then he sat up more and leaned into the table. \n\n\"George, I have a couple of things to say where the others can't hear, and then that will get the business part of this out of the way, after which we can discuss more pleasant things, like where you think you'll retire and what kinds of things you think you'd like to do with your time.\" \n\n\"Okay,\" George nodded. \"Shoot.\" \n\n\"First of all, we all know you're the linchpin in this. What you decide is how it will go. I want you to have a comfortable retirement. You've earned it. Every profit jump I've seen in the last twenty years was due to something you did, some direction you decided to go, and you forged ahead with Morton in your wake. You've got a right to be proud of your accomplishments.\" \n\n\"So, second, we don't want to see Morton downsize. It is a robust company in a good position to grow, with a little outside help. That helps your retirement bottom line, as well as knowing the company is still thriving. Problem is, we don't want Tikken running the show, either. They're good with production but shy on R&amp;D. You've got the R&amp;D that Tikken needs. We want that to happen.\" \n\n\"So, third, my best of all worlds scenario would be for you to split your stock between us. Between Sethridge and Morton. That way, Morton drives the R&amp;D, Tikken drives the production, business expands and profits go up. After the merger is approved and share distribution has stabilized, buy back in. Tuck some Morton stock in your retirement portfolio.\" \n\n\"Anyway, that's all I wanted to get on the table tonight,\" John finished up. \"Something to think about.\" \n\nGeorge Pearson looked at John Thompson with a critical eye. What he said made sense. And he didn't want to cash out of Morton just to see it go under with Mills at the helm, or flounder with Morton. It was definitely worth thinking about. \n\n\"You're usually a straight-shooter, huh?\" he asked. \"Laying all your cards out.\" \n\n\"Not always, and not all of them,\" John told him. \"In this case, it does me no good to play games. If you understand what we're trying to do, the logical thing for your best interests is to help us. Showing you all the cards helps us help you to see the logic. You will, in the end, do what you think is right.\" \n\n\"Actually, in the end,\" Gloria spoke up, \"he'll do what I think is right, which isn't public knowledge.\" \n\n\"Mrs. Pearson... Gloria...\" John turned his attention to her, \"I have nothing but admiration for how the two of you work as a team. You've obviously got a rock solid relationship and have for a lot of years. I want you to enjoy his retirement as much as I want to enjoy the obscene profits to be made by merging Tikken and Morton. If you've got any questions about what I'm laying out here, call Karen.\" \n\nHe pulled out a business card, flipped it over and had Karen write her cell number on the back. \n\n\"My number is on the front, hers is on the back, but you'll do better going through her. If she can't answer your question, she'll pass it to me and I will. Feel free to call anytime.\" \n\n\"Two in the morning?\" Gloria asked, dead serious. \n\nJohn took a breath, let it out and without looking to Karen for the okay, said, \"Any time.\" \n\n\"So which is she, John?\" Gloria asked. \"Fianc\u00e9e or nanny?\" There was something subtle going on between Gloria and John, and Karen was at a loss to understand it. \n\nJohn did glance briefly at Karen before answering Gloria, \"more like fianc\u00e9e.\" \n\n\"Then you better get a ring on her pretty soon, son,\" George interjected. \"Before some other lucky bastard beats you to it.\" \n\n\"We're a little gun shy in that area, sir,\" John turned to him. \"But believe me, I hear you.\" \n\n\"So, what are you going to do for retirement, Gloria?\" Karen had decided the conversation needed to be steered away from its obvious course. \n\n\"Well,\" she smiled slightly to Karen, \"despite George's overwhelming desire to spend endless days sitting in a small boat on a big lake and drown worms, it starts with the trip around the world he promised me the day we were married.\" \n\n\"That sounds awesome,\" Karen almost gushed. The idea of being able to travel all over the world really enchanted her. \"Where will you go?\" \n\n\"While George has been busy solidifying our retirement, I've been stitching together a series of cruises,\" Gloria smiled, obviously pleased to be asked. \"The short form is, the West Coast to Hawaii and then Japan, then down to Taiwan, Hong Kong, southeast Asia, India, South Africa and then somehow, to Europe. I can't decide if I want to take us via Suez and the Mediterranean, or around the Horn and up to Gibraltar and the Med. In either case, we can join any number of river cruises through Italy, France, Russia and Germany before going to the UK. Eventually, we come back to New York.\" \n\n\"That's when my piece kicks in,\" George leaned into the conversation. \"I want us to take a train cruise around the States. Go out the northern routes from New York to Seattle, then south to San Diego, back east to Miami and finally back up to New York. We can fly home from there.\" \n\n\"That sounds exhausting!\" Karen exclaimed. \"Thrilling, but exhausting.\" \n\n\"That's why we want to do it now, while we're still young enough and in good enough health to enjoy it,\" Gloria told her. \n\n\"It sounds wonderful,\" Karen nodded. \"Not very cheap, I'd guess. Not something I could do on my salary. And no, sir,\" she added to John, \"that is not a request for a raise.\" \n\n\"That's another reason to do it now,\" George admitted. \"Morton's doing well. I could probably do better by leaking it that I won't be selling to Mills and wait for him to drive the price up, but then if he wins, any future earnings go right down the crapper. You do know, John, that when he gets wind of me selling to anyone other than him, he's going to try to price you out of it?\" \n\n\"Yes, sir, we do,\" John confirmed. \"That's why it would need to be done quietly and be fait accompli before he got wind of the transaction. And we'd have to make sure he couldn't rally any support to challenge us. Being privately-held is an advantage, in this case. That's why we have lawyers and brokers.\" \n\n\"Okay, John, just so we're clear,\" George nodded. \"Have you decided what you're doing for dinner?\" \n\n\"Yes, and I'll be ordering for both Karen and myself. Her request,\" he smiled. \n\nDinner was ordered and enjoyed, and Karen had to admit that although some of the tapas looked strange to her, everything John ordered was excellent. And filling. Too filling. She found herself slowing down so she wasn't too stuffed for later activities. \n\nConversation drifted to fishing, with George, where John appeared knowledgeable, and to art, music and museums with Gloria, where Karen got a chance to shine. It was, in Karen's estimation, a wonderfully relaxed dinner. Which wrapped up around 10 o'clock, with both men pointing out they had a meeting in the morning. Karen's \"me, too,\" by way of apology to Gloria was met with a smile and the comment, \"I know, dear. Believe me, I know.\" \n\nJohn picked up the tab and the two couples went their separate ways, Gloria expressing an interest in seeing them socially some time, if their schedules ever permitted it. John was quiet on the drive back to the hotel and Karen didn't intrude. When they got there, Lu was waiting for them. \n\n\"Did you get my text, John?\" she asked as she saw them coming through the lobby and rose to meet them. \n\n\"Yes, I did,\" he acknowledged. \"A bit busy to respond. We're good, though. Come on up.\" \n\nOkay, so he didn't bother to check with me before telling shark lady to join us, Karen thought, a little irritated. Then she relaxed. I guess that's what high-powered executives do, she mused. Well, my room's got a door and I can hide and get out of these clothes while they talk business. \n\nKaren felt Lu watching her as they rode up in the elevator, then politely ignore her as they walked next to each other, following John down the hall to the room. On entering, Karen paused. \n\n\"John,\" she caught his attention. \"I'm just going to slip out of these clothes...\" she told him, indicating her bedroom. \n\n\"And into Number 27?\" he grinned and she blushed, damn near head to toe. The look on the lawyer's face was completely neutral. \n\n\"I was going to say, and into something more comfortable,\" Karen managed to get out. She knew her face was flushed and she was getting pissed that it was in front of shark lady. \n\n\"John, don't tease her like that,\" Lu unexpectedly spoke up, in a quiet but no-nonsense tone. \"She's on your side.\" Then she turned to Karen. \"I'm not going to screw up your night,\" she told her. \"I've got some info for John, and actually for you, too, if you want to join us.\" Then she turned and walked on into the parlor, leaving John standing in the foyer with Karen. \n\n\"Sorry,\" he immediately apologized. \"I guess I'm getting too comfortable around you. I'll try not to embarrass you again.\" That, and her reaction, surprised Karen. \n\n\"John, I don't want you to ever feel too comfortable around me,\" she hurried to tell him. \"You should be able to tease. I'm just not all that... um... practiced at it? You go ahead and tease. I'll try to get better at not letting it get to me. By the way, does she know what Number 27 is?\" \n\n\"Yes,\" he told her, watching her face. \n\n\"Oh.\" That would go a long way to explaining things, she thought. \"I'm going to go change. Um... is a robe okay? Or should I put on some casuals?\" \n\n\"Both are fine,\" he told her. \"But the robe will hide the wet spot better.\" \n\n\"What wet spot?\" \n\n\"Lu's going to want to share what she's found out about Pam Morton's sexual proclivities. If it's as good as rumor suggests, you might find it a turn on.\" Karen looked at him for a very long moment. \n\n\"This is you, being straight with me,\" she finally observed. \"You expect me to seduce Mrs. Morton.\" \n\n\"Let's just say, it's a distinct possibility,\" John told her and his expression was serious. \"Join us when you want, or don't. I'm opening a bottle of something white. Preference?\" \n\n\"Zinfandel,\" she told him. \"And thanks.\" Then she entered her room and closed the door. \n\nOh, my fucking God, what am I getting into? she thought in quiet desperation, while stripping out of her dress and carefully hanging it back up. I am not at all sure I'm ready for the Big Leagues... \n\n* * * * * \n\n\"Pam Morton is, for want of a better word, legendary.\" Lu was sitting on the couch with a lowball glass of something mostly clear. \n\nThe Zinfandel, Karen thought as she entered in her hotel robe, carefully cinched this time. Odd... she seems a lot more relaxed. \n\nLu was still in the black Armani skirt, but the jacket was gone, hung over a chair. Her hair was down now, cascading over her shoulders to about mid-back. Her ivory blouse was unbuttoned about halfway down and Karen realized she wasn't wearing a bra. The huge, firm tits were all her... unless they were implants. \n\nJohn silently handed Karen a lowball glass of wine while addressing Lu. \n\n\"Legendary how?\" he asked. \n\n\"The woman has a sex drive that is out of control,\" Lu explained. \"If you believe the rumors, she's done everything on two legs, and four.\" \n\n\"Let's presume the rumors are exaggerated,\" John put in. \"What do we know?\" \n\n\"We know she's bi, loves m\u00e9nages and being outrageous, and only Morton's money keeps it out of the gossip rags.\" Lu took another sip of her drink. \n\n\"She's a member of several swingers' clubs in the area, and in Southern California, and apparently Lake Tahoe \u2013 one of her favorite vacation spots. Her husband used to go with her, but cut way back after his heart surgery five years ago.\" \n\n\"He's coming up on sixty, she's ten years his junior. She particularly likes giving and getting oral with women, especially if it's a m\u00e9nage with a guy. A well-hung guy. She prefers big. Right up your alley, John.\" \n\n\"Any family complications, \u00e0 la Mills?\" John asked, obviously thinking. \n\n\"Not in the traditional sense,\" Lu told him. \n\n\"Explain.\" \n\n\"They have three children, two together and one his son from a previous. None of them participate or even seem to have an interest in the business. The rest depends on how much you want to believe the rumors.\" \n\n\"Go on...\" \n\n\"Rumor has it she's fucking her stepson. He often acts as her chauffeur and has escorted her to several galas when hubby couldn't make it. Read that however you will.\" \n\nKaren was concerned about the direction this was going. \n\n\"John, if you're thinking what I think you're thinking, I need to remind you, I don't have any experience with women, except for practicing making out with my girlfriends in 7th grade while fantasizing about rock stars.\" \n\n\"Not 8th grade?\" Lu asked softly, with just a hint of sarcasm and interest, mixed. \n\n\"By then, we'd discovered Freshman boys,\" Karen answered her with a bit of a blush. \n\n\"Did you like it?\" Lu asked. John was keeping quiet. \n\n\"What?\" Karen wasn't sure what Lu was asking. \n\n\"Did you like making out with your girlfriends?\" Lu iterated. \"Because you'd be Pam Morton's type. Young, pretty, nice tits, luscious lips and probably a sweet pussy from the attention John is paying you.\" \n\nNow Karen really did start to blush. She sat staring at the shark. \n\n\"Answer her question, luv,\" John told Karen softly. Not menacing... just a direction. \n\n\"Yes,\" Karen quietly admitted. \"They were my best friends and I liked them a lot. They were fun. Mostly giggly, but pretty exciting when we let it get serious. Which wasn't often.\" \n\nLu looked at her for several moments before getting up and walking over to where Karen was sitting. \n\n\"Please stand up,\" she asked her. Karen had a sudden twist in her gut and looked over to John. He just had that charming small smile on and he nodded slightly to Karen. ",
        "He wants me to do something with her, she thought, bordering on panic. She's going to come on to me and he wants me to allow it. Karen looked back to Lu for a long moment as she gathered her composure, then slowly stood. I am doing this for him, she thought as she rose. I am doing this for him... I am doing this for him... \n\nKaren gave herself the luxury of trying to look at Lu as if she wasn't a lesbian lawyer working for her boss. And when she forced herself into the alternate reality, she had to admit that Lu did look pretty good. You just had to get past the 'severe' part first. \n\nAs Karen stood before her, Lu looked into her eyes and Karen started feeling mesmerized. Lu had hazel eyes, but they seemed more like swirling clouds of green. Karen was finding herself fascinated as she gazed back. She almost didn't notice as Lu leaned forward slightly, tilting her head down and her finger, gently tilting Karen's up. \n\nAlmost. \n\nOh, God... why am I getting tingly? Karen wondered as she let the woman touch her. Lu eased forward until her lips were a hairsbreadth away and Karen could smell the sweet scent of the older woman's breath, warm on her lips. \n\nOh, God... I'm going to do this... went through Karen's mind in a distracted way as she realized what was about to happen. She was trembling. \n\nLu slowly slid her hand around behind Karen's neck and gently held her as she closed the gap and felt the heat of the young woman's full lips pressing hers. And the shock, and the trembling coursing through the young woman's body. \n\nNo tongue. No assault. Just a gentle sharing of intimacy to see how she would react. Beneath her snarky lawyer exterior and being honest with herself, Lu had to admit that this woman had a subdued sensuality that was getting to her, and hard. Almost as if she didn't know how attractive she was. It had been awhile since anyone, male or female, had tripped her triggers, but this Ms. Karen O'Reilly, Personal Assistant to Regional Vice President John Thompson, was making her get wet and swell in a most delightful way. \n\nRemember, you're checking her out for John, Lu tried to remind herself. We need to know if she can handle Pam Morton... \n\nThat was about the point where Karen had had enough. \n\nAfter the initial shock of the kiss and the massive shudder that had blown through her, Karen realized that whoever it was that was kissing her, it wasn't the snarky shark-lady. This woman was soft, and gentle, and felt and tasted wonderful. Then she realized that Lu Jenkins was being very careful not to freak her out. \n\nWell fuck this! was Karen's rebellious side piping up. If she's evaluating me for kissing a woman, let's get to it! She took Lu's head in her hands, pulling her down into the kiss and opening her mouth, probing at Lu's lips with her tongue, trying to force her way in. \n\nHoly Mother of God! was Lu's less than sophisticated response to Karen curling her toes. She was so surprised at Karen's sudden change from timid to assertive that she'd just gone along with her. And now she was really getting heated up by the little redhead. The little redhead that knew how to kiss passionately without making it feel like assault. Karen was teasing her with her tongue, running it over her teeth and lips, probing deep into her mouth, but only for a second before coming back to swirl it over her own tongue. Lu let out an involuntary moan. \n\nYES! thought Karen, I'm doing good! She was trying not to give in to her own part that wanted to moan, to melt into this incredible feeling before her. \n\nYou're doing well, her perfectionist side kicked in. \n\nOh, shut up! the side more interested in her nethers shot back. Take a hike! A long hike! \n\nShe was much more interested in the feeling of Lu's breasts pushing into her and very, very aware that the only thing between her and them was a piece of cloth already unbuttoned most of the way down. \n\nOkay, that's it! Karen decided. She'll stop me if it's too much... she broke the kiss, stepped back a bit, grabbed the shoulders of the shirt and yanked them down Lu's arms, exposing her abundant blessings and pinning Lu's arms to her sides. Before Lu could react, Karen leant down and began suckling Lu's magnificent mounds. \n\n\"Oh, GOD!\" It wasn't a moan this time. It was a flat out cry of desire. Backed by John's soft laughter. \n\nKaren came off Lu's tit long enough to glare at him and tell him, \"You're next, Buster!\" Then she went back to suckling Lu, alternating tits from time to time. \n\nOkay, he said he wouldn't put me in a position where I don't know what I'm doing, or can't figure it out, she thought as she delighted in how Lu's large nipples felt, drawn into her mouth. I guess this is where I start figuring it out. \n\n\"Karen,\" Lu interrupted her thoughts with another soft moan. \"You don't have to prove anything... I don't want you to do anything you don't want to do. I have my answer...\" \n\nKaren's response was to stop suckling, stand up and look Lu straight in the eyes. \"How much do you love that blouse?\" she asked with a dead level tone of voice. \n\nLu felt her pussy clench at the implied threat. The thrill reached every cell in her body. \n\n\"I, uh... I don't know... um,\" she fumbled for an answer. Karen didn't wait. She grabbed the front of the shirt and ripped it open, rending buttons every which way. Relieved of its closure, the blouse fell open and Lu easily shrugged it off. Then she reached for Karen's robe. \n\n\"Nnn-nnn,\" Karen growled softly as she pushed Lu's hand away. Then she fell to her knees and started looking for the skirt's zipper, neatly hidden at the back. It didn't take her long and the skirt fell, to reveal old-fashioned garters and a belt, with lacy panties. Lacy panties that appeared soaking wet. \n\nA stockings-and-garters girl like me! Karen smiled to herself, then reached up to ease down the light cloth masking the object of her mission. I have no idea what I'm doing, she thought. But if it's something I'd like, maybe she will, too. \n\nShe looked up at Lu to find her confusedly, maybe nervously, looking over at John. So Karen looked at John and saw that same bemused smile. That same mutable smile that got her wet. Over and over and over. \n\nHe's okay with this, she thought. It doesn't bother him a bit that I'm going after his chief honcho lawyer lady. Maybe he wants to see how far I'll go... how far I might go if Mrs. Morton hit on me. Well... \n\nThe panties fell to the floor as Karen stood up, quickly turned Lu so her back was to the couch, and pushed. Just enough that Lu lost her balance and was forced to sit down. Again quickly, Karen knelt and pulled one leg out of the panties, giving her access to... \n\nTo what? To something I've never dealt with before? \n\nBefore her was the most intimate center of a very powerful woman. One who could get her fired if she pissed her off. And yet, Karen felt like she was in control. She could do what she wanted to do. And not do what she didn't. What she wanted was to somehow pleasure this woman who held John's high regard. \n\nHe told me to 'play nice'... well, okay... \n\nKaren eased Lu's thighs apart, taking a good look at territory she'd only ever viewed with a hand-mirror. Lu was tall and a little thin, but her legs were well muscled and there was solid definition where her thighs met her groin and abdomen. And her labia were shocking. \n\nWell, maybe not shocking, but... well, pronounced. They were thick and a deeper pink than her other skin, and at the moment were glistening. Almost dripping. And her clit was poking well up from its hood, an even deeper pink, maybe purple, and a pretty good size. Like maybe a large grape. More astounding, though, was the piercing through the clitoral hood. A bright silver dumbbell, held proud by the fact that Lu's clit was so erect. Karen hoped she wasn't going to hurt something, playing with it. \n\nLu, apparently, had been holding her breath. Karen found that out when she screwed her courage to the licking point and went after Lu's clit. \n\n\"OH MY GOD!\" Lu virtually exploded as Karen's mouth descended on her, tentatively sucking and licking her engorged and very sensitive nub. Karen thought about what she liked when John went down on her and tried to replicate it. With quite some success. \n\n\"Oh, God! Oh, God! Oh, God!\" Lu sounded like she was redlining. \n\nKaren was very pleased to find that, first of all, she liked how Lu tasted. Kind of a sweet and sour taste, not salty at all, and a lot to lick up. And second, she liked that she could get this professional woman to react to her, to writhe in pleasure. Karen's sense of power swelled as she discovered that, thirdly, alternating long licks from Lu's anus to her clit, followed by sucking and tongue-flicking her clit, and the doing another couple of long strokes were enough to make Ms. Jenkins go ape-shit. \n\nLu really got Karen's attention, though, when she cried out, \"Oh, fuck, John! She's gonna... she's gonna... oh, FUCK!\" \n\nIf that means she's going to cum, Karen thought with some rational part of her brain, then let's up the ante... She slid two fingers into Lu's sopping pussy and went for where she hoped Lu's G-spot was. \n\n\"OH-MY-FUCKING-GOD!-CUMMING!!\" Lu shouted as she writhed and twisted on Karen's hand and mouth. \"OH-GOD-OH-GOD-OH-GOD!!\" Karen felt Lu's muscles clamp down on her fingers, pulsing hard, with Lu doing, effectively, stomach crunches as she seemed to cum again and again. She was cumming so hard, Karen was afraid she was hurting her, so she eased up. \n\n\"Oh, fuck, NO!\" Lu cried out. \"Get back there! Finger fuck my cunt, bitch! Fuck me till I can't fucking stand it anymore!\" \n\nKaren looked over to John in confusion and concern, but he just shrugged his shoulders as if to say, Give the lady what she wants. So she turned back and followed directions. She sucked Lu's clit deep into her mouth and started vigorously frigging her with first two and then three fingers. And Lu went off into a long moan that mounted to a howl, only broken by \"Oh, Fuck! Oh, Fuck! Oh, Fuck! Cumming!\" every time she went over. \n\nFor Karen's part, she just kept going, since no one had told her to stop. By her count, Lu was somewhere north of two dozen cums when she finally pled for mercy. \n\nShe didn't plead so much as she grabbed Karen's hair and pulled her off her pussy, and on up to a very, very deep kiss that felt like she was trying to swallow Karen whole. Karen, busy with the kiss, eased up on the fingering and slowly slid her hand out. A few moments later, Lu eased up on the kiss and held Karen back at arm's length, looking at her. \n\nTo Karen's eyes, Lu looked like a wreck. A very happy, completely sated wreck. Lu reached forward, grabbed Karen's robe and pulled it open, exposing Karen's pert young breasts. \n\n\"Oh, God...\" Lu breathed, then paused a moment before asking, \"John?\" \n\n\"Yes?\" \n\n\"She'll do.\" \n\nJohn laughed out loud, Karen blushed and Lu collapsed. Back into the couch. \n\n\"Ms. O'Reilly?\" she muttered from her puddle of quivering protoplasm. \n\n\"Yes?\" \n\n\"Remind me to return the favor...\" \n\n* * * * * \n\nJohn solved the logistics of the rest of the night by having Lu stay over with them. He promised her he'd have her up and out of there in the morning in plenty of time to get back to her hotel, get cleaned up and meet them at Morton's. \n\nThere was a brief moment of diplomatic maneuvering as who was going to sleep where was being discussed. \n\n\"John, this sofa is a pull-out,\" Lu told him. \"I'll just crash here and not intrude on you or Karen.\" \n\n\"The hell you will,\" Karen had confronted her. \"You can sleep with John in his room or with me in mine. You don't need to be sleeping in a damned hide-a-bed!\" \n\n\"But won't you want to sleep with John?\" Lu had countered. \"Of course, if you do, I could just use your bed.\" \n\n\"And have you stuck over there all alone?\" John stepped in. \"Bullshit. You come sleep with us. There's plenty of room.\" \n\n\"But you'll have to decide male or female,\" Karen added. \n\n\"What?\" \n\n\"If you want to sleep against a male, then John's in the middle, because I get one side of him regardless. If you want female, then I'm in the middle for the previously stated reason.\" \n\n\"Are you going to want to fuck him?\" Lu asked, considering her options. \n\n\"Well... I was sort of hoping to... before, um... you know,\" Karen told her. \n\n\"Then let's put him in the middle,\" Lu decided. \"You two fuck and if you want help, holler. Otherwise, I'll just stay out of it and jill off some more... God! you've got an incredible mouth!\" \n\nIn the end, that's what they did. Karen got her long, lazy fuck with John, and the two of them got occasional participatory assistance from Lu until all three passed out. \n\n[to be continued]"
    ],
    "authorname": "eidetic",
    "tags": [
        "erotic coupling"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/necessity-is-the-mother-of-obsession-ch-02"
}