{
    "title": "The Journey Ch. 04",
    "pages": [
        "Welcome, Friend, to Chapter Four of The Journey. If you haven't read chapters one through three, I'm going to have to ask you to check yourself before you wreck yourself. You'll have no idea what's going on here, so don't do that! Go read the first parts and then come back. I'll wait for you!\n\n*\n\nShow me that heaven's right here, baby\n\nTouch me, so I know I'm not crazy\n\n~~ Adams Morgan, Washington DC, May ~~\n\nI turned around and felt my eyes widen in shock\n\n\"Dr. May!\"\n\n\"Viv, if you don't call me Jane, I'll to have to walk out that door and find a nursing home to check into,\" she said, with her ever-present grin.\n\n\"Sorry... Jane.\" My face heated with embarrassment.\n\nDr. May... Jane... didn't look anything like she'd ever looked like in class. The professional woman was gone; a pair of bell-bottom jeans hugged her hips, flaring out below her knees with enough fabric to make a spare denim jacket. She had on a yellow and green tie-dyed t-shirt, covered with a leather vest which had a fringe of beaded tassels hanging off the bottom. Her hair was caught up over her head in one of her ever-present colorful head wraps, this one tied-dyed and matching her t-shirt. She'd recently shaved the sides and back even closer than I'd seen them before, and her ringlets formed an attractive tawny pile above her head. Her bell-bottoms must have been hiding heels or platforms, as I was usually a few inches taller than her, but tonight her eyes were a level with mine.\n\n\"What are you doing here?\" I asked dumbly.\n\n\"Seventies Night, what else? How have you been?\"\n\n\"Can I get you something?\" I heard the bartender behind me.\n\n\"I'll have what she's having,\" she said past my shoulder. \"I'm really happy I ran into you!\"\n\n\"Um, yeah. Are you, uh, are you here with someone?\"\n\n\"I came with some of my friends. They're dancing over there.\" She waved towards the mass of bodies on the dance floor. \"I got thirsty, only to find you here at the bar. Surprise!\"\n\nThis Dr... Jane... wasn't anything like my teacher from class. And not very much like the Jane I'd ridden home with all those times. Her personality seemed... bigger. More boisterous. She was clearly having a blast, shimmying her body to the music as she stood in front of me.\n\n\"So, are you out by yourself? With anyone?\" she asked me.\n\n\"No, flying solo.\"\n\nThe bartender came back with another margarita and set it next to mine. Jane picked it up and took a sip.\n\n\"So, uh, I didn't know you were... I mean, uh, what I mean is, are you, uh... you're...\"\n\n\"Am I gay?\"\n\n\"Yeah, sorry. This is like the last place I would have expected to run into you.\"\n\n\"Wow, your gaydar must be seriously broken.\"\n\nI flushed, \"Well, I...\"\n\n\"I'm teasing. Yes, I'm gay. I know I keep things pretty close to the vest in class. It's kind of important to keep a little distance between my personal life and my students. Things can get awkward fast if you let your interactions become less than professional.\"\n\n\"I see. So, how's your job at Howard going? Better than NOVA?\"\n\n\"Well, I'm a smaller fish in a bigger pond there. It's where I did my undergrad, so it's kind of like coming home, but also really weird being a professor at a place where I started as an eighteen-year-old student. I'm really happy though. How was your spring semester? You should have gotten your grades this week, right?\"\n\n\"I got a 3.79. Taking a full load now too.\"\n\n\"Nice! I'm proud of you!\" She held up her hand and I tentatively slapped it.\n\n\"I should thank you for giving me that A in your class.\"\n\n\"I didn't give you anything, Viv, you earned it. That was a fantastic final paper, I was really impressed.\"\n\n\"Well... Thank you anyway.\"\n\n\"Enough about school, want to dance?\"\n\nThis is the most whack thing that's ever happened to me. My professor is asking me to dance? I thought.\n\n\"Sure. Let's finish these first. I don't ever leave a drink alone when I'm out.\"\n\n\"Good idea. I like to think the chance of being roofied in a bar with only women is at least a teensy bit smaller, but you never know, right?\" We finished our drinks, then I tried (and failed) to not look at her ass as she led me to the dance floor. She was curvy in all the right places. She had a wagon, as the guys at work would say when they didn't think I was listening, and her wagon was working her bell-bottoms overtime.\n\nThat is a nice badonk-a-donk, I thought, then checked myself. Cut it out, Esparza, she's just being friendly. There's not a chance in hell your professor is picking up on you. She was so far out of my league, I couldn't see the fence around her field from where I was.\n\nWe got to the floor just as Diana Ross' I'm Coming Out started and I found that while seventies music wasn't normally my jam, it was still really good for dancing.\n\nI also found myself shocked at how good a dancer Jane was. As soon as the horns kicked in I started moving. She hesitated for maybe half a second watching me, then started mirroring my moves like we'd practiced together. We were in sync through the whole song, and didn't stop when Let's Groove followed.\n\nAfter five or six songs I still couldn't believe how well she was hanging with me. The last beat faded away and the DJ decided to slow things down, as the organ tones of Just The Two Of Us started playing.\n\nI slowed down, breathing heavily, and nodded my head back towards the bar. \"Want to get another drink or...?\"\n\n\"Or, we could keep dancing?\" She stepped a little closer to me and held out her hands. \"I'll let you lead.\"\n\nI can't believe this is happening, I thought, as my hands found her waist. She wrapped her arms around my neck.\n\n\"Of all the things that I thought might happen tonight, slow dancing with my professor isn't one of them,\" I said looking into her eyes. She had closed the gap between us so our bodies were pressed together.\n\n\"Can I make a confession to you?\"\n\n\"Sure, I guess.\"\n\n\"I've been attracted to a student or two before, but I've never let myself act on it, and--\"\n\n\"You're attracted to me?!\"\n\n\"Do you think I call every student who drops my class to try to convince them to come back? Or any student, for that matter? Besides, I love a soft butch.\"\n\n\"Soft?\" I said with a nervous chuckle.\n\n\"Just soft enough for me,\" she said with a wink, \"But like I said, I never act on it. I thought it would just be a passing crush that I'd get over. But the more you and I talked, the more I liked you. I like the way your mind works. But I was your teacher. So... I couldn't do anything.\"\n\n\"I see.\" I have to find something more original to say.\n\n\"But, I haven't taught at NOVA for an entire semester. I'm in no position of authority over you anymore.\"\n\n\"I... wait, is that why you didn't want to mentor me?\"\n\n\"That was one of the reasons. I told you I'm teaching two classes and writing a book, right?\"\n\n\"If you want to call that busy.\"\n\nHer laugh was musical.\n\n\"Some might. Not me, though. So, having gotten all that out in the open... are you enjoying our dance?\"\n\n\"I am, actually.\"\n\n\"Me too.\"\n\n\"So, if you were interested in me...\"\n\n\"I was really tempted to call you after the semester, but it felt unethical to use your contact info that I had access to from being your professor, so I just decided to fondly remember our rides after class together. I never thought I'd see you again. But then I spotted you by the bar and thought 'thank you, fate, for giving me a chance'.\"\n\n\"I have to admit, I missed riding home with you this semester. Partly because it takes me forty-five minutes longer, but also for the company.\"\n\nShe shook with laughter. \"Are you always this honest?\"\n\n\"I think the kids call it being blunt.\"\n\nShe giggled again, and pulled me closer so she could lean her cheek against mine as Lovely Day started playing.\n\n\"So, you're a big disco fan, huh?\" I said in her ear.\n\n\"Seventies R&amp;B, really. My parents loved this music and I grew up listening to it. Their seventies vinyl collection is kind of legendary. When I saw The League was having a seventies night, I told my friends I'd be dragging them out.\"\n\nI pulled away from her a couple inches and looked around. \"Should we be ignoring them if you're the one who brought them here?\"\n\n\"I saw them all heading out the door about ten minutes ago,\" she said, amusement in her voice. \"I'm usually not one to pick up a date in a bar, and I think they wanted to give me space since I'm clearly having a good time.\"\n\n\"You're an amazing dancer.\"\n\n\"I've had lots of practice. I was a member of the Showtime Marching Band dance team as an undergrad at Howard.\"\n\n\"No shit. Is that a big deal? Sounds like a big deal.\"\n\n\"It was a pretty big deal, I can't lie. Tryouts were pretty cut-throat.\"\n\n\"You're a woman of many talents, apparently.\"\n\nThe song was nearing the end. We'd been on the dance floor for more than an hour, and I knew most girls didn't have the stamina to hang with me. I could stay on the floor all night if the DJ was good, but that wasn't the case with most women I met.\n\n\"You want to get another drink, or go somewhere and get a bite to eat or something?\" I asked her, as the chiming intro to Ain't No Mountain High Enough tinkled through the room.\n\n\"You can go drink if you want. I'm not done dancing!\" A huge smile split her face and she held her hand out to me as she started moving her feet to the rhythm.\n\nI gripped her hand and we circled each other, throwing down our best Soul Train moves. I could tell this was going to be a long, fun night.\n\nDespite that knowledge, there was a little part of me that was immediately sad.\n\nI don't think I've ever been with a woman who can dance this well. It's a fucking shame we're from two different worlds. I've been hoping to find someone to date, but there's zero chance she'd be interested in me for a long haul. I have nothing to offer her. Maybe she just wants to get some. Still... if she wants to break off a piece of me, I'm down. She's HOT. And she can DANCE.\n\nI tried to squash that voice, and just enjoy the moment. I could worry some other time about how... whatever this was, would end.\n\nTowards the end of September, she finally had had enough.\n\n\"Okay, now I'm ready for a drink,\" Jane said, theatrically wiping her brow and making me laugh. I pulled out my phone to check the time. We'd been dancing for two hours.\n\n\"Let's go, I'll buy.\"\n\nWe had another round of margaritas, and then, at her suggestion, we walked through the cool evening air to the late-night eatery, Madam's Organ, where we shared a shrimp basket and an order of spicy string beans. Talking to her, I realized how much of herself she'd been holding back during our car rides. We talked about dancing, music, my bowling team, her yoga obsession.\n\nThe third time the waitress asked us if we needed anything else we realized we'd been hogging her table, our food long since eaten. I looked at the time on my phone again, weighing our options. For some reason I sensed trying to get her to take me back to her place wouldn't go well for me. And I never brought anyone back to my place unless I knew Manny wasn't going to be home.\n\n\"I rode the Metro and the last train is less than an hour from now,\" I said, trying to figure out what she wanted to happen next.\n\n\"Perfect, I rode with my friends, so I'm going to Metro home too.\"\n\nOkay, we'd at least share a Metro ride to Springfield. We walked across the Duke Ellington Bridge and down the escalator to the Woodley Park Metro station. A train came in right as we reached the platform, which I almost regretted. Less time to hang out with her.\n\n\"Can I have your number? I'd like to see you again,\" she said as we pulled into the tunnel.\n\n\"But you already have my number,\" I said, as I hung onto the overhead handrail.\n\n\"Humor me, tell me your phone number.\" She took out her phone.\n\n\"Uh, okay.\" I rattled off my digits and watched as she randomly touched the black screen of her locked phone.\n\n\"Now I have your number from you, instead of the class roster, so I won't feel guilty calling you.\"\n\nWhen I stopped laughing, she asked, \"Would you like to have dinner? What's your schedule like?\"\n\n\"I'm driving nights this semester so I can do morning classes. I'm basically unavailable Monday through Friday unless you want to eat after one A.M.\"\n\n\"That's no good. Are you free Saturday night?\"\n\n\"Next weekend? I have no plans.\"\n\n\"Seven o'clock? I'll text you the address.\"\n\n\"Works for me.\"\n\nWe passed through Metro Center. The next stop was where we'd transfer to the Yellow Line to head down to Springfield.\n\n\"I had a really nice time tonight. You're a really good dancer,\" she said.\n\n\"I can say the same about you. This is our transfer stop.\"\n\n\"I have another confession to make,\" she said, as the train rattled into Judiciary Square station.\n\n\"What's that?\"\n\n\"I don't live in Springfield. I live in Northeast DC, off Florida Avenue.\"\n\n\"You... what? But you drove me home every week! You're telling me you drove down to Springfield then all the way back into DC twice a week for three months?\" The doors of the train opened behind me.\n\n\"I told you I really liked you,\" she said with a bashful smile that was just fucking adorable, \"I'm glad we ran into each other.\" She leaned over and kissed me on the cheek. \"Better go, you don't want to miss the last train home.\"\n\nI stepped out onto the platform, staring at her, while the doors slid shut between us. She lifted one hand, waving her fingers at me as the train moved out of the station. I touched my cheek where she'd kissed me as I watched the train's lights disappear down the tunnel.\n\nThe entire night was replaying in my mind on fast-forward. My freakin' professor had picked me up, in a lesbian bar, danced with me for hours, invited me to go out again, kissed me on the cheek, and then casually mentioned how she'd driven an hour or more out of her way to take me home, every night, for half a semester.\n\n\"This was, without a doubt, the weirdest night of my life,\" I mused out loud.\n\n\"What?\" said a guy I was passing on the platform.\n\n\"I said this was the weirdest night of my life!\" I shouted at him, then grinned at the dude's bewildered expression as I made my way down to the Yellow Line platform.\n\n~~ Lorton, Virginia ~~\n\n\"So, you'll need to be at the rehearsal like thirty minutes before. We'll all go together to the rehearsal dinner after. You and Abuela can ride with me and Vee.\"\n\nSunday morning found myself and Diego helping Abuela with her weekly tamale order, as usual. We were discussing the plans for his upcoming wedding next month.\n\n\"I don't need the monkey suit for the rehearsal, right?\"\n\n\"No, just wear something nice.\"\n\n\"Like how nice?\"\n\n\"Second-date-nice maybe? No Doc Martens.\"\n\nI sighed. \"Fine.\"\n\n\"Sabes que no me gusta que uses un traje de hombre para la boda, cari\u00f1o,\" said Abuela.\n\n\"It'd look weirder if I wore a dress to be his best man, Abuela.\"\n\n\"It's no proper!\"\n\n\"Abuela, it's fine,\" Diego said, \"Virginia and her family are fine with it. Please don't keep making a fuss.\"\n\n\"!Multa! \u00a1Qu\u00e9 importa lo que piense una anciana?!\"\n\nI bit my tongue and placed another tamale on the pile as a knock sounded at the door. Abuela glared at me then left the kitchen to answer it, and we soon heard her having a rapid-fire Spanish conversation with her next-door neighbor.\n\n\"Well, Rosario should keep her occupied for a while. Is your insistence on wearing a tux instead of a dress your idea of coming out to her?\"\n\n\"Dee, shut the fuck up!\" I hissed, glancing towards the kitchen doorway. \"You and I both know she'd flip her shit. She already flipped her shit the one time I hinted at being gay. I'm not going another ten rounds with Father Esteban.\"\n\n\"If you ever went to mass with us, you'd know Father Esteban retired last month. There's a new priest, Father Danny. Young guy. Seems cool.\"\n\n\"Whatever. You know I can't go Sunday nights, and Sunday mornings are for tamales,\" I gestured at the pile of wrappers in front of us.\n\n\"It's cool. I'm sure the Lord can hear your prayers at the bowling alley.\" He smirked at me.\n\n\"As long as the Lord says who I am isn't worthy of salvation, the Lord can get fucked.\"\n\n\"Viv!\" It was Diego's turn to hiss at me. \"You want her to flip out, let her hear you saying that!\"\n\n\"Whatever.\"\n\n\"By the way, Virginia is insisting on holding open space for your plus-one, so if you end up having someone you want to bring, feel free to let us know at the last minute. Not that you'd ever have a date.\" He rolled his eyes at me and almost didn't catch my blush. \"Whoa! Are you seeing someone?\"\n\n\"No! Well... no, I'm not dating anyone. Yet. I have a date next weekend.\"\n\n\"That's awesome! Tell me about her, quick before Abuela comes back.\"\n\n\"No.\"\n\n\"Why not?\"\n\n\"Because it has no chance of being anything but a flash in the pan.\"\n\n\"What? Why?\"\n\nI mulled it over. Oh, what the hell...\n\n\"Remember the professor from my first semester I told you I liked? Dr. May?\"\n\n\"Yeah, you... wait. You're going out with your professor? Isn't that like... unethical or something?\"\n\n\"No! No, she quit teaching at NOVA after that class and she said she wouldn't have ever called me because she had my number through school and it didn't feel right. I hadn't seen her in four months, until we happened to run into each other at The League last weekend.\"\n\nHe laughed. \"So, you finally went back there and it got you a date with a college professor? I'd say you should have gone back a long time ago then!\"\n\n\"Whatever.\" I gave Dee my best eye roll.\n\n\"If things go well you should bring her to the wedding!\"\n\n\"No way!\" I said looking toward the door. \"I don't want you to have to deal with her having a meltdown at your wedding.\"\n\n\"Just tell her she's a friend.\"\n\nI looked at him sourly. \"Your advice to me, if things go great with Jane, is that I should bring her to your wedding, and then pretend to everyone we aren't gay or dating. Do you know how insulting that would be to her? Or how humiliating to me?\"\n\n\"I... uh, oh shit Viv. I'm sorry, I--\"\n\n\"Don't worry about it. There's zero chance she's going to be interested in me for anything other than a fling, so you don't have to worry about me fucking up my huge masquerade at your wedding and letting it slip in front of our granny that your sister is a homo.\"\n\n\"That's not fair. You know I didn't mean anything by it. Virginia and her family know, and they don't have a problem with you.\n\n\"Great, so the only person I do have to worry about finding out who I really am is one of the two family members I have left in this country, while the other one recommends I just pretend to the first one I'm not who I am.\"\n\n\"Viv, I'm really sorry--\"\n\n\"Whatever, man. You finish up here, I gotta go.\"\n\nI stood and walked out of the kitchen, wiping my hands off on the seat of my pants.\n\n\"Viv! C'mon!\" Diego called after me.\n\nAbuela and her neighbor were still gossiping at the front door.\n\n\"I got called into work Abuela, I'll see you later.\"\n\nI'd already brushed past her when I realized she'd been holding out her cheek for a kiss. I pretended I hadn't seen it.\n\n\"Adi\u00f3s cari\u00f1o! \u00bfTe veo la pr\u00f3xima semana?\"\n\n\"Sure... just like always.\"\n\n~~ Washington, DC ~~\n\nI'd followed the instructions Jane had sent me by text and taken the Red Line to NoMa-Gallaudet-U Metro Stop, then started walking west, following the GPS on my phone to the address she'd given me.",
        "As I walked down a row of neatly kept townhouses, it finally dawned on me that I wasn't looking for a restaurant.\n\nMadre de Dios, I'm an idiot. I stopped walking half a block from the address, pulled up her last text and typed in a reply.\n\nViv: am I coming to your house?\n\nI stood on the sidewalk, chewing my lip. Almost immediately I saw the dots indicating she was typing.\n\nJane: Yes. I'm making pasta, is that okay?\n\nGod, I was such a dumbass. My thumbs flew across my screen.\n\nViv: thought I was meeting u at a restaurant for some reason\n\nJane: Are you close?\n\nIt was already five past seven. I looked up and saw the sign for a Whole Foods at an intersection two or three blocks down her street, where the townhomes gave way to businesses.\n\nViv: running a little late - maybe ten more minutes\n\nJane: No rush! See you soon!\n\nShe punctuated it with a winking emoji.\n\nAs I walked past her address, I looked up at the townhouse and the cheerfully lit windows. It looked really nice. And expensive.\n\nIt took me a minute to find a bottle of wine at the Whole Foods. Especially since I knew next to nothing about wine and had to ask one of the clerks what would go with pasta, who then asked me what kind of pasta and sauce, which led to me stammering like an idiot, which led to him recommending what he said was a nice Chianti and walking away. And I had no idea what Chianti even was. By the time I got through the checkout line and backtracked to her home, it was almost seven thirty.\n\nThere were two doors on the front porch, the one for the ground floor was labeled WILLIAMS. I rang the bell for the one labeled MAY. About ten seconds later I saw her through the big glass window in the door, trotting down the steps to let me in.\n\n\"Hey! I hope you found me okay!\" she said, as she held the door open for me.\n\nShe had her hair up over her head in one of her usual head wraps, this one a soft peach color with red roses printed on it. Tight white jeans and a soft, peach colored shirt completed her outfit, one side of the wide neck hanging down her left shoulder exposing a white satin bra strap. Her feet were bare and it looked like she'd done her toenails for the occasion with light purple polish.\n\n\"Yeah, sorry I'm late. I ran down the street to get this.\" I offered the bottle of wine to her.\n\n\"Oh, that's so sweet, you didn't have to do that!\" She kissed me on the cheek then led the way back up the stairs. My fingertips touched where her lips had brushed across my skin. I tried (and failed) to not stare at her ass as I followed her up the steps towards the sounds of soft, soulful music and the smell of cooking garlic.\n\nThe top of the stairs opened up to a surprisingly spacious room that appeared to take up the entire front half of the second floor of the townhouse. A cozy kitchen was along the back wall, with a big marble-topped island separating it from the living area. A well-filled, floor-to-ceiling bookcase ran along the wall opposite the steps, from the kitchen's pantry to the front windows. The kitchen cabinets were white on the uppers and dark blue on the lowers, which I'd never seen before but looked cool as hell. The other side of the room had a rather awesome-looking leather sofa with its back to the stairwell, facing a nice TV in its own built-in cubby in the book case. Two retro-looking end tables and a matching low coffee table in the middle of the room completed the decor.\n\n\"Can I get you something to drink? How about I open the wine you brought?\" she asked as I followed her into the kitchen.\n\n\"Sounds good. It smells amazing in here.\"\n\n\"Thank you, it's my grandmother's recipe. The secret is green olives and capers in the sauce.\" She pulled two glasses out of a cabinet, a corkscrew out of a drawer and started working on the bottle.\n\n\"This is a really nice place,\" I said after she handed me a glass. I walked over to the bookcase to peruse the photos and books displayed there. There was a record player spinning on one of the shelves and music was coming from two small, high quality speakers, one at either end of the bookcase. \"I like the music.\"\n\n\"It's the Trouble Man soundtrack. And before you say anything, you should know I owned this album before all the Marvel stuff.\"\n\n\"What Marvel stuff?\"\n\n\"You know, when the Falcon tells Captain America that it's one of the things he has to listen to? To catch up after being frozen since World War Two? It was in the Winter Soldier movie.\"\n\n\"Oh. Sorry, I don't watch those.\"\n\n\"You've never seen a superhero movie?\" She seemed surprised.\n\n\"Maybe one or two, when they were on cable and there weren't any sports on, but I couldn't tell you which ones.\"\n\n\"I didn't think that was possible.\"\n\n\"If they ever put one out with a Hispanic hero, I'll go see it. As long as we're relegated to being the comic sidekick, I'll pass.\"\n\nShe smiled. \"I know what you mean. When Black Panther came out it was the first time I got to be as excited as every white kid in America got to be for the first twenty movies. Shuri's my hero.\"\n\n\"I bet.\" Who's Shuri? I thought, as I walked back over to stand across the kitchen island from her. She set a bowl full of salad in front of me then resumed stirring the sauce, while I took a sip of the wine and tried to hold back a grimace.\n\n\"Oh no, is the wine not any good?\" She picked up her glass and sniffed it.\n\n\"Honestly? I have no idea, I don't drink wine.\"\n\nShe gave a full-throated laugh. \"Why didn't you say so? Do you want a beer?\"\n\n\"That'd be great, thanks.\"\n\nShe opened a large white wooden cabinet door, which turned out to be the refrigerator, and reached in to retrieve a green bottle.\n\n\"Glass or no glass?\"\n\nI almost said no glass, not wanting to trouble her further, but I realized it was probably classier to use a glass. I looked at the bottle after I poured it out into the pint glass she'd set on the counter for me. The label said Yuengling.\n\n\"Young... ling? I've never tried this.\"\n\n\"'Ying-ling'. It's from Pennsylvania, the oldest brewery in the country. My dad drinks it, that's why I keep some around. By the way, this is very good wine.\"\n\nI took a sip of her dad's beer and felt my eyebrow raise in appreciation. \"Good, I'm glad I got lucky with my wild-ass guess.\"\n\nHer laugh filled the room again. I realized I loved making her do that, even when it was because of my naivety. She plated two bowls of spaghetti, ladled on generous amounts of sauce, then flipped the record before joining me at the counter. We sat side-by-side in her wrought-iron bar stools and dug in.\n\nThe food was amazing, but also, I found myself surprised at how down-to-earth she seemed. The formidable college professor shell was completely gone and we just talked. When I mentioned bowling she seemed genuinely interested, asking me about how I started and how league scoring worked. We talked about her yoga and running obsessions again. I'd noticed one of the bottom shelves of her bookcase was filled with rolled up yoga mats and small weights. We talked about our favorite places to go, things to do. She was clearly more sophisticated than me, talking about some of the museums and cultural things she liked.\n\nThen she asked if I liked the WNBA. My stomach dropped a little. I used to go all the time, but the last game I'd gone to was when Addison had caught me cheating on her.\n\n\"Uh, I mean I've been once or twice, but I'm not hard core or anything.\"\n\n\"I played high school ball. I love the Mystics, I go whenever I can. I wish I could afford season tickets.\"\n\n\"I don't mean to be nosy, but it seems like being a professor pays really well,\" I said, looking meaningfully around her apartment.\n\nShe suddenly looked embarrassed. \"Um, college professors actually aren't paid that great, honestly. Especially if you're not tenured. I can't take credit for this place.\"\n\n\"What do you mean?\"\n\n\"So... this is a little embarrassing, but my parents bought this townhouse for me.\"\n\n\"Damn, really?!\"\n\n\"Yeah, I know. When I graduated from Howard with my undergrad, this place was my graduation present. My dad wanted me to have a nest egg, so he helped me come up with this plan once it was clear I'd be staying in DC for my PhD. We found a run-down townhouse that we got fairly cheap in a sketchy neighborhood, but an area that was coming up pretty fast. My parents put up the down payment and gave me some money to renovate it. I used that to renovate the exterior and the lower floors into rental units. There's a two bedroom on the first floor and a one bedroom in the basement. The two rental units pretty much cover the mortgage and paid for me to renovate my own unit up here last year. This is a lot nicer now than when I was working on my PhD. It even has a garage in the back alley so I don't have to park on the street.\"\n\n\"No shit. That's... wow. Pretty awesome for you. How'd your parents afford to do all that?\"\n\n\"My dad's a sports medicine physician and my mom is an OB-GYN. They're, um... well... they're pretty well off.\"\n\nJesus fuck, she's smart AND rich? Both her parents are fucking doctors? What the fuck am I even doing here? Why did she even let me into her home? I realized she was talking again and I jerked my attention back to her.\n\n\"--worked out great because I can walk to Howard from here. It's like a half mile away. But, like I said, being a first-year professor pays okay, but I don't have season ticket cash. After they set me up here I won't let them pay for anything else. Trying to be on my own and all.\"\n\n\"I see.\"\n\n\"What do your parents do?\"\n\nHere comes the buzzkill. \"My dad was killed when I was twelve, and my mom was deported when I was in high school.\"\n\n\"Oh my God! Viv, I am so sorry! That's terrible! Where is she now?\"\n\n\"She's just outside of Mexico City, helps run her cousin's restaurant. There's a lot of cooks in the family. My Abuela has a tamale business, selling to local markets, and runs the tortilla machine at Los Fenix in Lorton. She raised my brother after mom left.\"\n\n\"Not you?\"\n\n\"Well, yeah, I guess she did. I was in eleventh grade when mom got kicked out, so I was out of high school just over a year after.\"\n\n\"When was the last time you saw your mom?\"\n\n\"In person? Not long after ICE picked her up. They raided the restaurant she was working at. Diego and I got to see her a few times during the hearings. The last time I saw her was when the judge ordered her deported.\"\n\n\"You haven't gone to Mexico to visit her?\"\n\n\"Never been able to afford a trip like that.\"\n\n\"Viv, that's really awful. I'm so sorry.\"\n\n\"It's fine. The thing that pisses me off is that she and three other workers were deported and not a goddamn thing happened to the restaurant owner who was paying them less than minimum wage. I talk to her a couple times a week or so. Now that FaceTime is a thing it's nicer than when we just talked on the phone.\"\n\n\"I can't imagine going through that. It must have been really hard.\"\n\n\"Life is life, and sometimes life is hard. Hey, the food was delicious, by the way.\" I wanted to change the subject and I think she sensed it and let me.\n\n\"Thank you. Let's do the dishes and we can move to the couch.\"\n\nI helped her clean up, rinsing the dishes while she stacked them in the dishwasher then put the leftovers in Tupperware. She offered me another beer, which I accepted, and we headed to her sofa.\n\n\"Want to watch a movie?\" she asked.\n\n\"Sure, your choice.\" Although I was hoping it wouldn't be some egg-head history movie, or Masterpiece Theater or some shit. Instead I was surprised when she pulled up a Spider-Man movie.\n\n\"You want to watch a cartoon?\" I asked.\n\n\"I was thinking about something you said earlier. This isn't the Peter Parker Spider-Man. The main character in this one is named Miles Morales.\"\n\n\"No shit?\"\n\n\"For real. And the soundtrack is great.\"\n\nI was a little startled when she called out \"Alexa, it's movie time,\" and half the lights went out while the other half dimmed. I was even more startled when she snuggled herself up under my arm with her feet curled up under her. Didn't even have to do the yawn and stretch move.\n\nI'd wondered at first if she'd put on this movie just to have an excuse to make out or something, but within the first few minutes, I was totally sucked in. A young Hispanic kid with a black dad and a Hispanic mom, gifted with super powers? Color me there. I laughed. I got tense. When Miles' dad made his speech at Miles' dorm room door, telling him about the spark he sees in him, I actually found myself tearing up. Fortunately, she was as into it as I was, and I think I was able to rub my eye without her noticing.\n\nWhen the credits rolled, she reached for the remote and turned off the TV.\n\n\"What did you think?\"\n\n\"That was really good! And you're right, the soundtrack was bangin'! I'm gonna hafta add that Familia song and some of the others to my playlists.\"\n\n\"I'm glad you liked it,\" she said, turning to face me. The glow of the street lights outside her windows made her eyes shine in a way that gave me a lump in my throat.\n\nWe looked at each other for a long moment. It felt like she wanted me to make a move on her. Instead I found my mouth trying to ruin things.\n\n\"Jane... what am I doing here?\"\n\nShe sat back a little. \"What do you mean?\"\n\n\"C'mon. You're Dr. May. You live in this high dollar townhouse in this hip neighborhood. You teach freakin' college. You like wine and have a vinyl collection. I drive trains, live in a shitty apartment in Springfield and bowl in a beer league on weekends. So... why am I here?\"\n\nShe looked at me for the longest time. So long, I thought I must have royally pissed her off. Which was apparently my stupid brain's idea in the first place.\n\n\"Viv, I--\"\n\n\"And why do you call me Viv now? You called me Vivian the entire semester.\"\n\n\"I call you Viv now because I know that's what you prefer, and I called you Vivian when I was your teacher because I was petrified that you, and every other student, would see that I was into you, so I needed to cover myself. Keep some distance. And it's true that I was drawn to you because you're my type. Physically, I mean. I told you I like a soft butch.\"\n\n\"If that's the only--\"\n\n\"But I don't really pick women to date based on appearances,\" she said, talking right over me. \"I told you before, I like the way your mind works.\"\n\n\"I barely graduated from high school and I'm a freshman at twenty-nine.\"\n\nShe rolled her eyes. \"Going to college right out of high school isn't an indicator of intelligence, it's more of a marker of privilege. You're not stupid, Viv. I can see it. In every class half the students wouldn't have done the reading. But you always did. I could see it on your face as you listened to me that you knew where I was going to go. And I could always see when you had something to say, even though you didn't want to speak up, so I'd call on you and it was always almost exactly something I would've wanted someone to say to keep the discussion moving in the right direction. Except sometimes you'd add a little twist that I wouldn't expect, that would subtly change where my lecture was headed. Most classes you'd only say something once or twice, but almost without fail it was one of the most insightful things any student would say that night.\"\n\n\"But... we don't have much in common. Or, anything in common, really.\"\n\n\"How do you know?\"\n\n\"What?\"\n\n\"How do you know? We barely know each other. Which is why I asked you to come to dinner. We both love to dance, we already know that. I want to find out if there's more.\"\n\n\"But...\" I trailed off helplessly.\n\n\"But what?\"\n\n\"You're like this... super smart woman. You're a college professor. You're writing a book, for fuck's sake. Shouldn't you be, like... dating some other professor or something?\"\n\n\"Academia is just a part of my life. I don't want it to be every part of it. And have to tell you, I've had no success dating fellow eggheads. I think it's because I don't want to be an egghead all the time. I don't want to work all day, teaching and researching and writing, then come home and talk about teaching and researching and writing. I don't want to talk about crime statistics or the latest demographic data. I want to come home and listen to music, and have good food and conversation about things that aren't important, yet still matter to me. I want to watch movies, go to street festivals and farmer's markets. I want to go dancing and maybe learn to bowl someday.\"\n\nI snorted. \"Bowling? Really.\"\n\n\"I like doing things I've never done, and when you talk about it you make it sound fun. So, I don't know if you and I would be a good fit or not. But I'm interested in finding out. If you're not interested, I understand. But if you're interested in finding out too, then I say we give it a go. Together.\"\n\nI licked my lips as my feelings warred with themselves. There was no way this could go anywhere. I didn't belong in her world. But... she was so... comfortable to be around. And so pretty. And she sounded like maybe she actually meant everything she'd said.\n\nShe smiled at me. \"And besides... you might be the only woman I've ever danced with who could keep up with me.\"\n\nI gave a surprised bark of laughter. \"Like hell, you kept up with me!\"\n\n\"Well, I hope we have another opportunity in the future to battle that out on the dance floor.\"\n\nI took a deep breath. \"So... what do we do now?\"\n\n\"I'm not a fast mover. I'm not one to jump in bed with someone right away.\"\n\n\"Oh... Okay.\" My attempt to fuck things up notwithstanding, I felt suddenly disappointed. I'd been more than half convinced she just wanted to get with me tonight.\n\n\"It might be a while before I'm ready for a sleepover.\"\n\n\"Oh,\" I said again, cursing my tongue for being so tied. \"So, should we say goodnight then or--\"\n\n\"But I would very much like to make out with you,\" she said, and leaned towards me.\n\nI leaned back in surprise and she followed me, slowly, insistently, until I was laid back against the armrest and she languidly stretched her body out atop mine. My eyes didn't close at first. Hers did, as her lips softly pressed against mine.\n\nThe feeling was... amazing. I'd never been kissed like this. She didn't open her mouth at first, our lips melded together. After what seemed like an eternity, but was probably only a few minutes, I felt her tongue reach out. I mirrored her motions. This wasn't kissing. She was making love to my mouth. Feasting on me.\n\nWhich raised other doubts in the back of my mind. I normally wasn't the 'make love' type. I was more the 'throw down and fuck' type. This felt almost... wrong. Like there was meaning behind it. Meaning that she surely didn't mean. Meaning that couldn't be meant for me.\n\nBut, God... it was so good. My hands wrapped around her to caress the small of her back, as I luxuriated in the faint floral smell coming from her hair which had fallen over my forehead. One of her hands gently traced a line along my neck, as the other curled under my shoulder to pull me, insistently, closer to her.\n\nOur tongues danced. She liked to flit hers around mine. I liked to suck on hers when she'd let me catch it. She tasted so good. I could feel the heat between my legs increasing every moment and I couldn't believe how wet I was getting just from kissing. I felt pretty confident in my dancing skills, I'd put my moves up against any woman I'd ever met on the dance floor. But her tongue was dancing circles around me, leaving me feeling like... a clumsy amateur.\n\nAt one point she laid a series of soft, wet kisses down my cheek to my neck. I felt like I was in uncharted territory. I was the one who was supposed to dominate, be in control. Yet... she wasn't dominating me. She was just... leading. Like in a dance. Loving on me. I felt both wildly out of my depth and adored at the same time.",
        "I pulled the overstuffed pillow out from underneath my head and dropped it on the floor, then I wrapped her up tightly with one arm and rolled us off the couch, catching our weight with my other arm. She landed softly with her head on the pillow and a pleased noise of surprise. I took the opportunity to kiss down her neck, then back up to her ear. I quickly learned she liked her earlobes sucked. As I nibbled on one, I could hear her breathing quicken and I slowly slid my hand up her side. She grabbed my hand inches before it reached her breast.\n\n\"Make out, not foreplay,\" she breathed.\n\n\"You're kidding me,\" I mumbled, then her lips attacked mine again.\n\nI lost track of time. It was an endless loop of kissing, licking each other's necks, ears, her collarbone at one point, where her shirt was down off her shoulder, with her maintaining the clear lines beyond which I must not go. After a while, I couldn't distinguish between the smell of her breath and my own, as our mouths took on each other's essence. Finally, as we both paused for breath, she said, \"Can I say something terribly unromantic?\"\n\n\"There's nothing you could say to spoil my mood after that.\"\n\n\"I have to pee and you're lying on my bladder.\"\n\nI barked with laughter as I rolled off her, then I stood and helped her to her feet.\n\nShe excused herself and I stood in front of her windows, looking down at the street, my mind racing. Even as a teenager, I'd never had a make out session like that. I'd felt more depth and connection in the last hour with than with probably any woman I had fucked in the last ten years. It was scary. Not that I wouldn't drag her into her bedroom the second she came back if I thought she'd let me. But I had the sense that any attempt to do that tonight could be the premature end of... whatever this was.\n\nI picked my phone up off the coffee table as she came back and looked at the time. We'd been kissing for almost an hour.\n\n\"I'm going to have to head out to make the last train home.\"\n\n\"Can I drive you?\"\n\n\"I think you did that enough when you were my professor, don't you?\" I said, moving to collect my empties for her recycling.\n\n\"I don't mind.\"\n\n\"Thanks, but I think I could use the walk back to the station. I need to cool off after that.\"\n\n\"When can I see you again?\" Her voice sounded eager.\n\n\"Next weekend? Saturdays are kind of my only free days.\"\n\n\"I'd love that.\" She led me down her steps and I tried (and failed) to not look at her ass. Outside, we stood together on her porch.\n\n\"What do you want to do next week?\" I asked.\n\n\"You choose,\" she said, \"Challenge me.\"\n\n\"What?\"\n\n\"You pick something to do that will show me what Viv's world is like.\"\n\n\"Wow, no pressure there.\"\n\n\"No pressure! Really! Just, you know, pick something you want to do that will teach me something about you. Then next time, it'll be my turn.\"\n\n\"Okay. I'll think about it. You may have to drive though.\"\n\n\"Just let me know where and when.\"\n\nShe wrapped her arms around me and kissed me again. And again. Then again, but slower.\n\n\"Okay,\" I murmured, \"you're gonna have to stop doing that or I'm going to miss the last train and get stranded.\"\n\n\"If you do, call and I'll come pick you up.\"\n\nI pecked her on the lips once more and walked away in a daze.\n\n~~ Lorton, Virginia ~~\n\n\"Hey Viv!\" Diego looked up from the kitchen table with surprise.\n\n\"S'up, man. Buenos d\u00edas, Abuela.\"\n\n\"\u00a1Cari\u00f1o! \u00a1Diego dijo que no cre\u00eda que vendr\u00edas!\"\n\n\"Sabes que nunca me perder\u00eda el d\u00eda del tamales, Abuela.\" I gave Diego a warning glance and he shrugged. I washed my hands then sat down and got to work rolling tamales.\n\n\"Hey, I'm really sorry about last week,\" Diego whispered.\n\n\"Forget about it, man, I have,\" I said, pitching my voice low and glancing at Abuela at the stove.\n\n\"Is that why you didn't answer any of my texts this week?\"\n\n\"I just needed to cool off, that's all.\"\n\n\"Okay. I'm sorry anyway. I was being a dick.\"\n\n\"You weren't the only one. Push the masa closer over here wouldya?\" I asked after stretching across the table for a spoonful.\n\n\"You look rough. Tie one on again last night?\"\n\n\"Not really. I got just home really late.\"\n\nThere was a knock at the door. Abuela bustled off to the door, and we soon heard another neighborhood gossip session taking place.\n\n\"So, how'd the date go?\"\n\n\"It was... it was good.\"\n\n\"Nice! You like her, huh?\"\n\n\"A lot. Still pretty sure it'll be a flash in the pan, but she's pretty cool.\"\n\n\"You seeing her again?\"\n\n\"Next week.\"\n\n\"Glad to hear it. If things go well, you wanna bring her to dinner with Virginia and me? Maybe after our honeymoon?\"\n\n\"Whoa, dude, slow your roll. We've been on one date.\"\n\n\"Okay, okay! You just seem more excited about this one than any girl you've gone out with since the lawyer chick.\"\n\nGut punch. Why the fuck did he have to bring up Addie?\n\n\"Well, like I said. One date. Chill out.\"\n\n\"Sensitive much?\" Diego teased me as Abuela came back. \"What are you up to today, besides rolling tamales?\"\n\n\"A friend's picking me up to go watch the Nat's game this afternoon at Smitty's.\"\n\n\"Sounds fun.\"\n\n\"She's a freakin' Pirates fan.\"\n\n\"Oh no, for real? Well, I hope Scherzer no-hits 'em today.\"\n\n\"You and me both, man.\"\n\nTwo hours, and a couple hundred tamales rolled later (a few of which had found their way into my belly), my phone pinged with a text. I kissed Abuela goodbye on the cheek, and went outside to find Connie sitting in the apartment parking lot in her bright red Jeep Renegade with the steel cargo cage on the roof. I hopped in the passenger seat and we took off.\n\n\"You have the most dyke car of any woman I know.\"\n\n\"Thanks,\" she said drily. She was wearing a t-shirt that said I'm lesbian! You can too, ask me how!\n\nI hung my elbow out the window, enjoying the warm spring air as she cranked up the stereo.\n\nThat girl thinks she's the queen of the neighborhood!\n\nI got news for you, she is!\n\nThey say she's a dyke, but I know she is my best friend, yeah!\n\nRebel girl! Rebel girl!\n\nRebel girl, you are the queen of my world!\n\n\"What is this crap?\" I asked from the passenger seat of Connie's car.\n\n\"Hey now, don't be dissing my lesbian rock.\"\n\n\"Your car, your tunes,\" I said, raising my hands placatingly.\n\n\"Band out of Portland, Oregon called Graviton,\" Connie said, slapping the steering wheel along with the beat. \"I was out there on business last month, and there's a killer new gay bar called Thirsty on Main. Graviton is the house band.\"\n\n\"Nice to support local musicians, I guess.\"\n\n\"Lucia Alvarez, the guitarist, was the drummer in the band Insanity Hall.\"\n\n\"Oh, I heard of them. Didn't the singer get coked up and wrap his car around a tree or something?\"\n\n\"Stupidest way possible to go out, right?\"\n\n\"I'll say. Get drunk or high all you want, but stay the fuck away from getting behind the wheel. That reminds me, are you going to Uber home?\"\n\n\"Nah, I have a friend picking me up after the game for a bar-b-que at her apartment pool tonight. I'll leave my car at Smitty's and come get it later after I sober up.\"\n\n\"So... wait. This Alvarez chick was the drummer in the first band and now she's the guitarist in this band?\"\n\n\"Same thing Dave Grohl did with Nirvana and Foo Fighters.\"\n\n\"I guess that only happens when the singer of the first band dies a tragic death, yeah?\"\n\n\"Hope that's not the only way,\" Connie said, laughing.\n\nI listened to the harsh rock chords blaring from her speakers.\n\n\"You can't dance to this.\"\n\n\"The hell you can't, I'll dance to this all day.\"\n\n\"Head-banging isn't dancing, white girl, but I'll give you a pass since the guitarist is a fellow Chicana.\"\n\n\"Awfully big of you.\"\n\nWe pulled into Smitty's and were lucky to find two seats at the end of the bar with a reasonable view of the TV. The Pirates were batting in the top of the second and the Nats were already up one-nothing.\n\n\"Fuck, we're already behind?\" Connie griped.\n\n\"Bet you the first round that Trea Turner scored in the first. Beer and a shot, two times, Jim!\" I yelled, holding up two fingers as the bartender looked our way.\n\n\"No bet. How'd the date go?\"\n\n\"Jesus, you and my brother. It was one fuckin' date.\"\n\n\"C'mon, that was a big deal date. Didn't go well?\"\n\n\"It went too well.\"\n\n\"What's that supposed to mean?\"\n\nJim returned with two beers and two empty shot glasses, He filled Connie's with whiskey and mine with tequila. We each took a small sip, then chased them with a gulp of beer.\n\n\"In addition to her being a genius, I found out she's fucking loaded. She owns a townhouse near U-Street in Northeast off Florida Avenue. It has two apartments she rents out so she can live on the top floor rent free. How do I compete with that?\"\n\n\"Jesus, Esparza, you're not in a competition with her money, just the same as you're not in a competition with her education. Just fucking be with her and see what happens.\"\n\n\"I know, you're right.\" I sighed and reached for my mug.\n\n\"Hey, maybe it'll work out for you. She could rent you one of the apartments in exchange for a daily rug-munching session.\"\n\nI snorted beer all over the bar-top. \"Oh, fuck you for that!\" I said, coughing, sputtering and reaching for the stack of bar napkins to clean up my mess.\n\n\"Seriously though, quit worrying about that class bullshit. If she likes you, she likes you. If you like her, don't get in your own way. Was she good in the sack?\"\n\nI had started taking another cautious sip and burst into another coughing fit. \"Fuck you again, that's twice already! Not everyone has sex on the first date you know.\"\n\n\"A certain mutual Mindy comes to mind.\"\n\n\"One time does not make a trend,\" I said, while thinking If she only knew.\n\n\"Fair enough. When are you going to see her again?\"\n\n\"Next Saturday,\" I sighed. \"She wants me to pick something to do that will 'challenge her'.\"\n\n\"What is that supposed to mean?\"\n\n\"Hell if I know. I think maybe she was trolling for me to take her bowling? She asked me all about it. She said we should do something that would teach her something about my world.\"\n\n\"Welp,\" Connie said, then took a swig, \"from what I know of you, you got four things going on in your world.\" She started counting off on her fingers. \"One, you could take her for a train ride, but you already told me I'm not allowed to ride up in the control compartment with you.\"\n\n\"You told me you wouldn't be able to keep yourself from pushing the buttons! Besides, it's illegal.\"\n\n\"Details. Two, you're a college student, but you have nothing to bring to that which she won't already know.\"\n\n\"Thanks,\" I said, dryly.\n\n\"Three, the aforementioned bowling. Four, take her dancing.\"\n\n\"We've already been dancing, remember? That's how we met. I mean, how we re-met after our class was over.\"\n\n\"How was it?\"\n\n\"Fuckin' amazing. She might be the best dancer I've ever--There it is!\" I yelled, pointing at the TV as Juan Soto launched a home run to right field. The bar erupted in cheers, as Connie grumbled.\n\n\"Goddamn it! C'mon Bucs! Get it together!\" she yelled out, magnificently indifferent to the glares of the mostly Nats fans around us. She slammed what was left of her whiskey, then slapped the heavy shot glass upside down on the bar with a loud thwack, nodding at Jim for another. \"Take her dancing then. Sounds like you both like that.\"\n\n\"But how does that show her about me?\"\n\n\"You said you met at seventies night, right?\"\n\n\"Yeah, at The League.\"\n\n\"One of my favorite meat markets. So, take her dancing somewhere that says something about you then.\"\n\n\"Hmm... there's a thought.\"\n\n~~ Annandale, Virginia ~~\n\n\"You said dress for dancing,\" Jane said, a little crossly, \"I feel like I've missed the mark.\"\n\n\"Don't worry, you look perfect. We'll get to dancing later. Food first.\"\n\nShe did, indeed, look perfect. Jane was wearing a tight, black, sleeveless sheath dress that ended six inches above her knees. The flat, black suede boots that came up to her knees were a perfect complement, as was the matching black head-wrap with a rhinestone heart that gathered her ringlets up over her head.\n\nI'd done my best to impress too. I was wearing my nicest pair of black slacks, with a dark blue sleeveless button-down shirt tucked in tight. After the hour I'd spent ironing everything until I could cut someone with the creases, I'd spent nearly again that long working on my flat-top until it was perfectly even. I'd even forgone my Doc Martens in favor of a pair of black gladiator style sandals. A gold medallion belt worn low around my hips completed my look. Together, we could have easily been on a date to a museum or a fancy-schmancy party.\n\nWhich was why I think Jane was a little put off when I directed her to pull into the parking lot for El Escondite. The place was no one's idea of fancy. In fact, the best descriptor of the exterior of the building would be a dump, the building likely a re-purposed convenience store.\n\nShe parked and while she was getting herself together, I hustled around the car and opened the door for her.\n\n\"M'lady.\"\n\nShe giggled, and held out her hand for me. Her skirt rode up, giving me an eyeful as I took her hand while she stepped out.\n\n\"Okay, this place may seem a little rough, but don't worry. I know the cook. Decent guy. And the food cannot be beat.\"\n\nWe walked through the smudged glass door into a white room with a linoleum floor, harshly lit with fluorescent lights. Cheap travel posters of different places in Mexico adorned the otherwise plain, white walls. A dozen tables were lined up in a grid, ten of them occupied.\n\n\"\u00a1Si\u00e9ntese donde sea! Estar\u00e9 contigo en un segundo,\" the harried looking waitress called out to us as she was heading into the kitchen. I waved acknowledgement and led Jane to one of the empty tables in the corner.\n\n\"So, this is some hidden gem?\"\n\n\"The hidden gem. This is the best Mexican food in Virginia.\"\n\n\"What do you usually get?\"\n\n\"Depends what the special is. You want a beer? Or do you want to wait until we get to the club? The club has the best mojitos you've ever had.\"\n\n\"I'll wait then since I'm driving.\"\n\n\"Good call, I--\"\n\nThe waitress bustled out and over to our table with a bowl of chips and a veritable tub of pico de gallo.\n\n\"\u00bfQu\u00e9 puedo conseguirte?\" she asked us.\n\n\"\u00bfCu\u00e1l es el especial?\"\n\n\"Bistec ranchero con pud\u00edn de ma\u00edz y ensalada de aguacate.\"\n\nI turned to Jane. \"The special is beefsteak ranchero with avocado salad and corn pudding. Sound good?\"\n\n\"That might be a little heavy for me before dancing. Is there a menu?\"\n\n\"Actually, no. They only have a few things and everyone knows what they are. Can I order for you?\"\n\n\"Please,\" she said, gesturing for me to take the lead.\n\nI ordered myself the special and Jane the street taco platter with an iced tea for her and a corona for me.\n\n\"So, what led you to bring us here?\" she asked as we dug into the chips and pico.\n\n\"You said you wanted me to show you something of my world. This is my world.\"\n\n\"An episode of Diners, Drive-Ins and Dives?\" she said with a grin.\n\nI found myself frowning. \"You could call it a dive. I call it the best diner in Little Mexico, in the middle of the biggest Mexican immigrant population in the metro area.\" I felt myself getting angry and decided I should take a breath before I said something I'd regret. \"I have to hit the bathroom before our food comes. Be right back.\"\n\n\"Viv wait, I--\" she started, but I didn't hang around to listen.\n\nI locked myself in the one-hole ladies' room and found myself staring at the mirror.\n\n\"What the fuck are you doing?\" I asked my reflection.\n\nI took a few deep breaths, then washed my hands. I was debating what to say when I got back to the table when I felt my phone buzz in my pocket. I pulled it out and read the text waiting for me.\n\nJane: This is the face of a professor who teaches about unconscious biases and still can have blind spots of her own. Look at this dummy face.\n\nAfter that she'd sent a close-up, fish-eye lens selfie of her face. She was making puppy-dog eyes and her bottom lip was stuck out in a pout so exaggerated and comical I couldn't help but laugh. The curls of her ringlets drooping down over her forehead were sexy enough to get me over the hump of being mad.\n\nJane: You'd better come back out here because otherwise I'm going to eat this entire bowl of salsa before you get back\n\nGod, she was adorable. I stuffed my phone back in my pants, squared my shoulders and gave myself another look. Grow up, and get over it.\n\n\"I'm really sorry about my stupid joke,\" Jane said as I rejoined her at the table.\n\n\"It's cool.\"\n\n\"Really?\"\n\n\"Yeah, sorry I got a little sensitive. You wanted to learn more about me. Besides bowling, driving trains and being gay, being Latina is the biggest part of me and I thought...\"\n\n\"You're showing me your world, like I asked you to, and I made a stupid joke. I'm really sorry, Vivian.\"\n\nI made a face. \"Okay, you're forgiven for the joke, but not for calling me that.\"\n\nShe laughed as our waitress showed up with our food.\n\n\"Where's the cheese and lettuce?\" Jane asked, looking at her tacos.\n\n\"This isn't Tex-Mex. This is Mexican food. Big difference. Give it a try.\"\n\nHer tacos were chicken and chorizo with no toppings except onions and cilantro. She picked one up and took a tentative bite while I cut into my steak.\n\n\"That's... Oh my God, that's so good!\" she almost moaned, then took another, bigger bite.\n\n\"Right? The cook here is a wizard with his marinades. Here, try this,\" I held out my fork with a piece of the bistec towards her. She chewed and swallowed her mouthful, then daintily took the bite I was offering, holding her hand under her chin.\n\n\"Oh my God!\" she said again, \"That's the best steak I've ever tasted! Now I'm mad I didn't get the special.\"\n\n\"I was kinda hoping you'd say something like that,\" I said as I cut a third of my steak off. I transferred it to her plate, then helped myself to one of her three tacos.\n\nShe laughed with delight. \"So that's how this relationship is going to work!\"\n\nI laughed too, but part of me was slightly shocked. Relationship? I can't believe she-- stop it. Stop sabotaging yourself. Just enjoy the moment, Esparza. Enjoy the moment.\n\nDinner went better than I could have hoped after how it started. Our conversation was non-stop, interrupted by us stealing bites off each other's plates. Afterwards, we got back in her car and I directed her a few blocks away. The night club was a windowless grey building, this time a repurposed warehouse, with red neon along the roof and a large sign that said La Zona De Baile.\n\nIt took us a while to get inside, the crowd was pretty big. The men were all Latin and hot (hot for men anyway) and the women were all gorgeous. Jane looked a little intimidated while we were waiting to pay the cover. She shouldn't have worried. She was the hottest woman in the building to me.\n\nInside, On The Floor was absolutely pounding out of the speakers and I took Jane's hand to lead her straight to the huge dance floor.\n\nI started slow, simply grooving a bit while we held hands and she took in the place. The blue and green club lights made her skin glow.\n\n\"This is great!\" she yelled.\n\nI leaned in closer so she could hear me over J-Lo's voice. \"Yeah, I love it here. Fair warning, this might be the only song in English you hear all night.\"\n\n\"Fine with me!\" she said with a grin and picked up her moves.",
        "\"Also, I'm not responsible for what my hips do if they play Suavemente.\"\n\n\"I don't know what that is, but clearly I'll have to go to the DJ and request it later.\"\n\nThe vibe between a dance club full of... ordinary folks? ... and a Latin dance club were almost not comparable. Everyone here could dance. I mean really dance. J-Lo was followed by Rikity, and Jane and I whirled each other around to the beat. At one point, when Paradinha was playing, I took her hand, held it up over her head and spun her a half dozen times. I'd expected her to come out of it dizzy, but she flung herself away from me, holding my hand, then spun back into my body as I wrapped her up, then we went straight into some salsa moves, our bodies pressed together.\n\nAfter probably a dozen songs, our energy started to flag. Jane pulled me to her and spoke in my ear.\n\n\"Did you say this place had the best mojitos?\" She started leading me towards the bar.\n\n\"I did in fact, let's--\" I stopped, as Elvis Crespo's voice came over the speakers.\n\nSuavemente, b\u00e9same! Que quiero sentir tus labios! Bes\u00e1ndome otra vez!\n\n\"Oh, shit! Drinks can wait!\" I grabbed her hand and pulled her back to the dance floor. My hips went into overdrive as I circled her like a crazed flamenco dancer, while she watched me giggling. I grabbed both her hands and we started whirling around each other as we tangoed to the horns. Halfway through the song, she leaned in close.\n\n\"Tell me what the words mean.\"\n\nI pulled her tight, our legs sliding between each other's knees. We swayed back and forth as I focused on Elvis' voice.\n\n\"He's saying 'Kiss me softly, slowly and calmly. Give me a deep kiss, that reaches my soul. Give me one more kiss, made for my mouth, give me a kiss slowly, give me a soft kiss'.\"\n\n\"Okay then.\" She lifted up her chin and kissed me. I held her tight, savoring it for a moment, then pulled away.\n\n\"So, uh, just FYI, the Latin community isn't necessarily the most accepting of gays. We might get some stares.\"\n\n\"I see. Well, I don't mind a few stares. Unless you think someone might start something.\"\n\n\"You never know. It's not unusual to see women dancing together but they're usually scoping out guys. Kissing, well...\"\n\n\"Got it,\" she said, \"So let's dance.\" Tu Mueves came on as the DJ slowed things down. She wrapped her arms around me and held me tight. \"Tell me what the lyrics mean,\" she said again.\n\nI laughed nervously.\n\n\"Okay, she's saying 'This romance between you and me, nobody will do it better. Without giving it away, you love how I move it. It's already moved away, but you haven't been able'.\" I paused and nervously cleared my throat.\n\n\"Keep going, I love this,\" Jane said in my ear. At least she couldn't see my face right now.\n\n\"'Not feasting on me makes you restless, addicted to my moans, and you live in your lie. When you move, you move, you move like this'.\"\n\nShe pulled away just far enough to be able to look into my eyes. \"I think I really like Latin music. I may have to learn Spanish so I can appreciate it even more.\" She said it so matter of factly that I had no doubt that if she set her mind to it, she'd be fluent in no time.\n\n\"Ser\u00e9 tu profesora.\"\n\n\"What?\"\n\n\"Nothing. Ready for a drink now?\"\n\nWe left the club at last call, our legs wobbly from dancing. Jane insisted on driving me all the way home as we could see a thunderstorm to the west, headed our way. The storm moved in quickly, and by the time we got to Springfield it was raining sideways. Jane pulled into the space she'd pulled into almost every time she'd driven me home from class. It made me keenly aware she'd once been my professor.\n\n\"Tonight was really fun, Viv. Thank you for taking me there.\"\n\n\"You said that's what you wanted. I guess that this means next time is your turn.\"\n\n\"That sounds great. Next Saturday again?\"\n\n\"Yeah. Yeah, sounds good.\" I looked through the downpour towards my apartment, judging if there was going to be any kind of break in the rain soon, or if I was just going to have to go for it.\n\nAs if reading my mind, Jane reached out and grabbed my hand. \"You don't have to go. Wait until it lets up.\"\n\n\"Thanks,\" I said, the relief plain in my voice.\n\nWe sat there, watching the rain, holding hands.\n\n\"What was the name of that song you loved so much? Suavemente?\"\n\n\"What?\"\n\n\"The one about kissing.\"\n\n\"Oh, yeah, that's it. Elvis Crespo.\"\n\nJane pulled her feet up, then turned, lifted her knee over the center console and straddled my lap. \"I liked that song.\" She cupped my face with her hands, kissing me. \"I liked that song a lot.\" Another kiss. \"I liked it when you whispered the lyrics in my ear.\" Another. \"I'm not normally into making out in a parked car, but I think the rain will keep anyone from seeing us.\"\n\nI still had a hard time believing she was this into me, but I sure as hell wasn't going to pass up the opportunity.\n\nAs we kissed, my hands circled her waist, then I slowly slid them down her hips. When she'd straddled me, her dress had ridden up and I could feel bare skin under my hands. Getting no sign at all that this was unwelcome, I continued until I cupped my hands under her magnificent ass, giving her cheeks a soft squeeze. She was either wearing a thong or had gone commando. Her only reaction was a soft hum of pleasure into my mouth.\n\nI realized the incessant drum of rain on her car's roof had faded to a soft murmur. I looked into her eyes.\n\n\"I think the rain is letting up.\"\n\n\"Do you want to go?\"\n\n\"Not on your life.\"\n\n\"Good.\" She started kissing me again. I let her. I gripped one of her knees and moved her leg so she straddled only one instead of both my legs, then I lifted my knee to press up gently between her thighs. She let out a soft gasp, then ground herself down onto my knee. Immediately, I felt her heat through the thin silk of my pants. I moved my attention back to her butt, letting my hands get more adventurous.\n\nA thong after all, I thought as my fingers slid under the slim strap of silk that ran down between the cleft of her cheeks. I made no move to remove it, remembering her limits as to where I could take my hands the first night we'd made out, but the way she was grinding on my knee and the speed with which she had started panting into my mouth told me tonight was going to go a little further. Her hips were moving in small circles.\n\nShe stopped kissing me and leaned her forehead against mine, her hand on the back of my neck pulling us together. \"Yes... yes...\"\n\nI decided to be a little bolder, letting one of my hands wander from her butt, along her thigh and to the top of her leg. She spread her knees wider, which I took as an invitation. I used one hand to pull her skirt just a little higher as my other slid down between her legs, then inside the silk of her panties. I felt my fingertip run through a triangle of curls and then between her lips. She was soaking wet, and she gasped louder as I found her clit. I rubbed it slowly, in time to her body's rocking on my knee.\n\nHer panting got louder. \"Yes... Viv, yes... yes...\"\n\nTime stretched out... Jane rocking herself rhythmically as she ground into my leg... I watched her as I stroked her wetness...\n\nWhen her orgasm came, I was surprised by how quiet, yet intense it was. Her body clenched, her knees tight to my sides, and I felt her nails tenderly dig into the sides of my head. Watching her was exquisite.\n\n\"Oh! Oh! Oh, my-- yes! Yes!\" she whispered, as her body quivered.\n\nJust as she started to relax, the headlights of a car pulling into a nearby parking spot swept over us. Jane threw herself back into her seat, her foot getting tangled under my knee, making her sprawl across the seats. She started laughing hysterically.\n\nI grinned at her, then looked out to see one of my neighbors get out of his car several spaces away and trudge towards the building, his head ducked against the lingering sprinkles. I doubt he'd seen anything.\n\n\"I feel like a teenager who just got caught making out in the driveway by my dad!\" Jane said between peals of laughter.\n\n\"That sounds like an extremely specific story that I need to hear.\"\n\n\"Maybe after a dozen more dates.\" She was still fighting the giggles.\n\nI felt a warm flush go through me. She's thinking a dozen dates ahead?\n\n\"So, um, do you want to...?\" she glanced meaningfully towards my apartment.\n\nMy mind said Hell yes! Then another part of my mind stopped and thought about it. I looked over and saw Manny's truck sitting under the streetlight where he liked to park. I thought about the state of catastrophe I'd left my room in while I'd gotten ready for tonight.\n\nI pulled her upright in the seat and thoroughly kissed her. \"Not tonight. I don't usually like to bring a date home if my roommate's here. Thin walls, you know.\" Also, I have a feeling you aren't a fast mover, and you'll respect me more for not giving in and dragging you into my bed on our second date, even though you're offering.\n\n\"Do you take a lot of dates home?\" she asked. Surprisingly, I sensed zero judgment or jealousy in the question. Just curiosity.\n\n\"It's been awhile, but there was a time when it was probably more than I should have.\" The honesty just slipped out, easily without any fear of judgement. This girl was getting to me.\n\n\"What about me taking care of you before you go?\" she asked, sliding a hand over my thigh.\n\n\"It's okay. Tonight was my turn to run the show. And believe me, that was quite a show. You can take a turn next time.\"\n\n\"I like the sound of that,\" she said. I could see her cheeks color in the dim parking lot security lights.\n\nI looked out of the windshield, to see the rain had completely stopped.\n\n\"Text me and let me know when and where next Saturday,\" I said. I kissed her again then opened the door. I heard her rustling around behind me. As I turned, she straightened herself up in the driver's seat.\n\n\"I will. I had such a good time tonight, Viv. Thank you.\"\n\n\"You're very welcome.\" I made to shut the car door, but she stopped me, holding out her hand.\n\n\"Wait! For you. To give you something to think about until next time. Good night.\" Her cheeks were even pinker now.\n\nI shut the door and she quickly started her car and backed out. I watched her drive off. She usually waited for me to reach my door before she backed out. I looked down at the black thong she'd balled up and pressed into my hand. I held it up to my nose and took a deep sniff, smelling her rich, earthy scent.\n\n\"God damn, that is one sexy chick,\" I said to the empty parking lot.\n\nThank god Manny was asleep when I came into the apartment, as I started stripping off my clothes on the way to my room. I couldn't get naked fast enough. I threw myself across my bed, reaching for the drawer on the far side table, to pull out Se\u00f1ora M\u00e1gica,<sub> </sub>my vibrator (as I called her) and quickly switched her on. I put the tip against my clit and sucked in a breath, holding Jane's panties against my cheek with my other hand.\n\nI dipped the tip of the buzzing cylinder into myself. I was as wet as I could remember ever being. With a single plunge, the vibrator slid straight into me, almost all the way to the control knob at the end. I could almost never do that at once, it usually took me a while to adjust to the length, but tonight... My body was hungry. The vibrations spread through my g-spot and towards my clit, through my pelvic wall. I gasped and then bit my lip. The headboard of Manny's bed was literally less than a foot away from mine. I hadn't lied about our walls being thin. Thank god Manny was a deep sleeper.\n\nI dropped Jane's panties on my chest and started stroking my clit with my hand, adding to the mix. Slowly at first, then quicker, then almost frantically. My orgasm came fast and hard. I turned my head into the pillow, trying to keep silent. I was mostly successful. As I came down, I quickly realized that wasn't going to be enough.\n\nThree orgasms later, my vibrator ground to a halt, the battery dead. Unfortunately, I still hadn't taken the edge off and I was wired. I lay in bed, reliving, relishing every moment of our date tonight. I grabbed my phone and looked through my texts, to the photo Jane had sent me at the restaurant, making the exaggerated pouty face. God, she's fucking adorable. I saved the photo as her profile photo in my contacts so it would come up anytime she called or texted me.\n\nLooking over, the clock next to my bed told me (rather smugly, if you ask me) that it was almost two A.M. I sighed. I needed to get to sleep, or I was going to be late to Abuela's tomorrow for tamale day. Time for my go-to sleep aid.\n\nI threw on a pair of gym shorts and the first t-shirt I could find from the pile of laundry at the foot of the bed and went out to the kitchen. I poured myself a glass of water, then set it on the counter. It took me a minute to find the bottle of Cuervo I kept on top of the fridge, mainly because I didn't want to turn on a light and I was being extra careful not to make any noise.\n\nI took a big gulp straight from the bottle, wincing as it went down. That would have been much better with a lime, I thought. Not the best tequila, but it was cheap and what I could afford to keep around the house.\n\nI looked out the window, down at the empty parking space where Jane had... mounted me, basically.\n\n\"Holy fuck, that woman is hot.\" I whispered. I couldn't wait to see what next Saturday brought. Then my brain spoke up.\n\nHow long do you think she'll string you along before it's over?\n\nFuck you, brain. I took another big slug of tequila. It made me hiccup twice as I put the bottle back on top of the fridge, then I collected my water and headed to bed.\n\nHopefully without dreams.\n\nTo Be Continued...\n\nThe character Lucia Alvarez, and the bands Insanity Hall and Graviton, are an homage to the Literotica stories ADSR and The Beast In Me, and used with gracious permission by AwkwardMD.\n\nI have updated Viv's Dance Party Mix playlist. You can find information about it in the Bio section of my author page.\n\nThank you to my beta-readers, ArmyGal33, GinnyPPC, and Bramblethorn. An extra special thank you to AvidReader223, who I have come to rely on to check my priors on race, and help me keep as authentic and respectful as possible to Jane. Jane and Viv are really important to me and I want to get them as right as I can. And, as always, thanks to AwkwardMD, for her outstanding editing."
    ],
    "authorname": "BrokenSpokes",
    "tags": [
        "lesbian novella",
        "lesbian romance",
        "gay novella",
        "gay romance",
        "meet up",
        "latina",
        "hookups",
        "dating",
        "romance",
        "dancing"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/the-journey-ch-04-5"
}