{
    "title": "Group Think",
    "pages": [
        "Your comments inspired me to continue exploring these characters. Finding time to write, especially when it has to be in secret, is challenging. At some point I will move on to other story lines and personalities. But first I must finish what I started in \"Group Project,\" and continued with \"Group Discount.\" I am curious to see how far I get with this edition.\n\nChapter One\n\nSex with Claire had been amazing. Experiencing her charms, having her long legs wrapped around his body, had been amazing. At nearly six-feet tall, she was like a blonde goddess. There was the added excitement that night of Bethany, who was not only involved, but directing the action. Grant was enthralled with both women, as well as with Jennifer, the other member of their group. And he enjoyed the benefits that came with the friendship they shared. Grant had experienced those benefits at various levels. Jennifer had been first. The dark-haired beauty was basically the same age and height as Claire, but with a husband and two children. Grant was captivated with Jennifer's wit, flirtatious comments, and loyalty to her family. Despite that loyalty, she had been the one who awakened and released his sexual desire.\n\nTheir encounter in Grant's car was now weeks in the past, but he remembered it in vivid detail. Recognizing his need, she offered to give jerk-off instructions. Jennifer had insisted there be no touching. However, she had willingly complied when he asked to see her breasts. Jennifer 'tits out' was still the most erotic experience of his life. Her large breasts and saucer-sized areolas were enough by themselves to make him squirt a geyser of sperm on the dashboard.\n\nNot counting his sexual encounter with Issa, who was outside their group, the next member of the quartette he experienced was Bethany. Younger than the other two women, and nearly thirty years younger than Grant, the lithe brunette surprised him. She was the aggressor, and the administrator of their threesome. It wasn't really a foursome, because Jennifer only watched the action. Although she managed to expose herself and masturbate to climax, she had touched no one but herself. That happened as Bethany was orally pleasuring Claire. It was Claire's first girl-on-girl encounter. Grant was invited to join the action by fucking Bethany from behind. He had never felt so sexually free as when he shot his cum into Bethany's pussy in view of two other sexy women.\n\nIn the days that followed, Grant managed to have an incredible night with Bethany, whom he now called B. While he was willing to have sex with her as often as she would invite him, he knew no real relationship was possible. The same was true of Jennifer. Although entranced by her, a husband and children made her unavailable. From their group, that left Claire. Blonde, beautiful, and just an inch or two shorter than he was. The night the two had been alone, B asked why he hadn't tried to date Claire. But then she distracted Grant by fucking his brains out. Not long after that encounter, Grant found himself under B's spell again. This time Claire was included in the action, while Jennifer was not present. B had basically seduced them both. Claire had obediently eaten out Bethany. Then Grant had fucked Claire for the first time, while B sucked and licked his balls. He euphorically emptied himself into Claire.\n\nIn the aftermath, Grant wondered if he should ask Claire out. The statuesque blonde was far closer to his age than Bethany, but still maybe 15 years his junior. He was attracted to her personality, which was at times overshadowed by Jennifer. Surprising no one, he was also attracted to her body. He wondered how long these amazing sexual experiences would continue, and if his 51-year-old stamina would hold out. Grant was getting more action than he'd ever had in his life. He had only slept with two girls prior to meeting Katie. And he had been faithful to her throughout their marriage. Until she'd gotten sick, their sex life had been healthy, with the usual ebbs and flows. In the months after her death, when the grief had eased, loneliness took its place.\n\nThe Triple Threat, as he now referred to Jennifer, Claire, and B, thrust him out of emotional isolation, into ball-draining ecstasy. But it was more than sexual. There was a level of caring and connection that warmed him from within. Jennifer's time with the group was understandably more limited because of her family. But the four of them had lunch together most weekdays, and the occasional drink after work.\n\nLunch today was a food truck that served surprisingly good barbeque. After getting their orders, the foursome walked half a block to a park. They shared an empty bench in the sunshine. It was cool enough that the sun felt good. They were about half-way through when Bethany broke some news.\n\n\"They're raising my rent. And I won't pay more for that place, even if I could. I've got to find something I can afford, and soon. You guys know of anything?\"\n\n\"I haven't apartment hunted in years,\" Jennifer said, shaking her head.\n\n\"Me either,\" added Grant. \"Can I ask what you're paying?\"\n\n\"It's going to be almost $1,300 a month. And the place is a hovel. I don't feel safe there, and pest control spends more time in my building than I do.\"\n\n\"You can definitely crash with me for a while,\" Claire said while reaching over Jennifer to pat Bethany's hand. \"The only reason I wouldn't offer to make it long term is because my condo is so small. It's just right for me, but you can only sleep on a couch for so long.\"\n\n\"Thanks Claire. That's so sweet of you. I won't take you up on that unless I can't find a place by the end of the month. I might have to look for a new job.\"\n\n\"We don't want to lose you,\" Grant chimed in. He spoke quickly and sincerely. \"If we're talking about space, I've got plenty of it. Three bedrooms, two of which sit empty. A pool and spa I don't use nearly enough. You've seen it...\"\n\nThere was a moment of silence as all of them flashed back to their various sexual exploits on the sectional in Grant's living room, or on his king-sized bed.\n\n\"Long term?\" Bethany sounded incredulous.\n\n\"Sure. Or until you piss me off,\" Grant said with a smile.\n\n\"How much is the rent?\"\n\n\"I don't need to charge you anything,\" scoffed Grant. \"The room is just sitting there.\"\n\n\"I appreciate it, but I have to pay you. If I'm not a tenant, it'd be like I'm your girlfriend or...\" she cleared her throat, \"...daughter.\"\n\n\"Ok,\" Grant nodded. \"How does $500 a month sound? Utilities, laundry, and fiber optic wifi included. That would more than compensate me, and you'd be able to save at least that much each month from what you're paying now.\"\n\n\"That sounds more than reasonable,\" agree Bethany. \"Do we share cooking duties, do our own thing, or what?\"\n\nGrant shrugged. \"It doesn't matter to me. But is this a tenant/landlord negotiation? It's starting to sound more like a relationship. I don't want to cramp your social life.\"\n\n\"What social life? You guys are it,\" then looking at Grant, Bethany asked, \"What about your social life? How are you gonna bring dates home when you've got a 'daughter' in the next room?\"\n\n\"I don't need to bring anyone home,\" Grant explained, \"and I don't really feel like dating anyway.\"\n\n\"What happened to Issa?\" said Jennifer, finally jumping into the conversation. \"And there was that other gal, the Spanish teacher.\"\n\n\"Valentina,\" supplied Grant. \"I like them both. But I'm not all that interested in something serious with either of them. I'd rather spend time with any one of you...and I'm not talking about sex. I have fun with you guys.\"\n\n\"I don't know whether that's sweet or just sad,\" smirked Jennifer. \"Damn, I wish I had shorts on instead of pants,\" she stretched her long legs out in front of her. \"I could be tanning right now. What are you thinking, Claire? You've been quiet.\"\n\n\"I don't know,\" she replied, with a shake of her blonde head. \"About what? Tanning? Sex? Rent?\"\n\n\"I know what I'd be thinking if I were you,\" Jennifer said with a sly smile.\n\n\"What?\" Claire seemed genuinely curious.\n\n\"I'd be thinking about selling my condo and moving in with Grant and Bethany.\"\n\nGrant started to laugh, but was interrupted by Bethany's enthusiastic response.\n\n\"That's a great idea! Don't you think so Grant?\"\n\nHe transitioned his laugh into a stifled cough. \"Gee. Sure, I'd be fine with that, if Claire wants to.\"\n\nClaire's face had a look of intense concentration. She was clearly thinking this through.\n\n\"You guys should be a throuple!\" volunteered Jennifer, with a note of glee. \"It's not like the three of you don't know each other...intimately. Why not move in together?\"\n\n\"Throuple?\" Grant was bewildered. \"Did you just make that up?\"\n\n\"G-man, you're out of the loop,\" Jennifer said teasingly. \"You ought to trade in your set of encyclopedias and use this new thing called the internet.\"\n\nClaire spoke up. \"A throuple is when three people are in a relationship together. They aren't just roommates. It's a consensual romantic bond between all three.\"\n\n\"Thanks for that clinical definition, Claire,\" spouted Jennifer. \"It's more like when three people decide to have sex with each other, whether in couples or as a threesome. The three of you have already checked those boxes.\"\n\n\"That takes it further than I was thinking,\" admitted Bethany. \"But I know that if the three of us were under one roof, we'd end up fucking at some point.\"\n\nGrant shifted on the bench as he felt himself harden. B using the \"f\" word brought back lots of hot memories. He looked at Claire and noticed her cheeks reddening slightly.\n\n\"In all honesty,\" Claire was hesitant. \"There's...uh...nothing...everything we've...I...um...there's nothing we've done I wouldn't like to do again.\" She looked at Bethany when she spoke. It was clear that Claire was taken with her first bi-sexual experience.\n\n\"I'll pay $750 a month,\" she said to Grant as she got off the bench and turned to face him. \"I'll take up more space with my stuff. My sofa can replace your sectional. You wanted to get rid of it anyway because of all the stains.\"\n\n\"True,\" Grant found it hard to believe how quickly his life was changing during one lunch hour. But he didn't feel hemmed in. he felt excited. \"Are you saying this is going to happen?\"\n\n\"I'm in,\" replied Bethany.\n\n\"So am I,\" agreed Claire, and she leaned down and kissed Grant on the lips. It was soft and sensuous, and he returned it readily. Then Claire bent towards Bethany and kissed her.\n\n\"I'm feeling like a fourth wheel over here,\" Jennifer announced. \"You guys should get a room.\"\n\n\"I think we just did,\" replied Bethany. And then she sealed the deal with a kiss. This time Grant was the beneficiary.\n\nChapter Two\n\n\"I told hubby about this throuple thing,\" Jennifer said, as the four of them had lunch at Mario's.\n\nIt had been three weeks since the idea of Claire and Bethany moving in with Grant had emerged. Now it was a reality. Bethany had moved out of her apartment in a week. Claire was in the process of moving now. She'd decided to rent her condo, and had quickly found a prospective tenant.\n\n\"Danny doesn't usually ask a lot of questions,\" she continued. \"In fact, he doesn't talk that much at all. But when I mentioned this,\" Jennifer circled her finger in the air, \"he wouldn't shut up.\"\n\nGrant smiled. What little he knew of Danny, he liked. Not to mention his taste in women. If he was in Danny's shoes, he'd have a lot of questions too, and probably some jealousy.\n\n\"What's he want to know?\" Grant asked. \"Like how can some senior citizen be in the same house with two young, gorgeous babes?\"\n\n\"He didn't phrase it quite that way,\" Jennifer replied, \"but that was the gist of at least one question. He wanted to know, 'Do they all have sex together?' 'Does he take them one at a time?' 'Does he just watch?' 'Does he take any medications?' 'Is he wealthy or something?' You know, the usual stuff.\"\n\n\"Hate to disappoint Danny,\" said Bethany. \"Nothing too scandalous has happened. Unless you count moving furniture among your list of thrills.\"\n\n\"We did start a new tradition that I'm rather fond of,\" remarked Grant. \"On Bethany's first night in the house, we shared a bed. Then on Claire's first night, the two of us got together. The next night, I think the ladies had some alone time.\"\n\n\"So the three of you haven't connected in a tangle of sweaty, conscious throupling?\"\n\n\"No Jen,\" Claire smiled. \"You're trying to live vicariously through us, aren't you?\"\n\n\"I don't deny it,\" Jennifer admitted. \"And I'm not alone. Hubby wants to be Grant. Since he knows the three of you, but especially you two girls, it's like an aphrodisiac. He's been all over me like a rutting rabbit. Obviously Danny's got a thing for tall women, like me. So Claire's in, because she's not only a hot Amazon, she's blonde and fair, as opposed to my dark and swarthy. Add in Bethany, whose youth is only overshadowed by her girl-next-store sex appeal, and Danny's a puddle lustful jealousy.\"\n\n\"Well, Danny's doing more than fine being married to you,\" Grant said, with a tinge of longing.\n\n\"Why G-man,\" countered Jennifer, \"that's a smooth compliment. But it sounds a little curious coming from a guy living with two hot women.\"\n\nGrant didn't know how to respond.\n\n\"Hey,\" broke in Bethany. \"Why don't you two come over for dinner?\"\n\n\"Yeah!\" Claire added. \"You could see what we've done to the place. And Danny's never been. He wasn't there the night of my party.\"\n\n\"He was away on business,\" recounted Grant. \"Your mother was with the kids. Without that, there might not have been an...after party.\" His thoughts immediately returned to the scene that was forever etched in his memory. Claire and Jennifer side by side on his couch. Their long legs spread wide. Jennifer's incredible tits jiggling as she frigged herself to orgasm. Bethany on all fours, perched over the easy chair, as she devoured Claire's pussy. Bethany's delectable bottom wiggling at just the right height. When she'd invited, no, commanded Grant to fuck her, he'd ravaged her. Plunging his steel hard member in and out of Bethany from behind, Grant had stared into Jennifer's eyes. She'd returned the lustful look, as her fingers brought her to satisfaction. By the time Grant exploded into Bethany's tight pussy, it was the greatest night of his life.\n\n\"Is that a real invitation,\" said Jennifer, shaking Grant out of his reverie.\n\n\"Uh, absolutely. I'll grill some salmon.\"\n\n\"How 'bout this Saturday?\" suggested Bethany. \"If you came in the afternoon, we could go swimming.\"\n\n\"Can you get a sitter for the kids?\" Grant asked a little too eagerly.\n\n\"For the chance to see these two girls in swimwear,\" Jennifer quipped, gesturing at Claire and Bethany, \"Danny would give the kids up for adoption.\"\n\nSaturday was scorching hot. Danny and Jennifer arrived at 4:00, bringing two bottles of white Pinot Noir. Claire delighted in showing them around. Since moving in, she'd made some changes to the d\u00e9cor. There were different window coverings, some impressionist art on the walls, and a few pieces of her furniture replaced some of Grant's.\n\n\"I like your couch, but what happened to the other one?\" Jennifer said with a wink only Claire could see. \"That was nice too.\"\n\n\"It's in the garage for now,\" answered Claire. \"Do you want it? It's a little stained.\"\n\n\"I guess it depends on what the stain is,\" Jennifer said with a sly smile. \"What do you think honey?\"\n\n\"I don't know,\" Danny replied. \"We don't really have room for another couch anyway.\"\n\n\"Guess you're right, sweetie.\"\n\n\"Come on out here guys,\" Grant called from the covered porch. \"I've made a whole pitcher of Hurricanes.\"\n\nThey went out through the French doors. The porch had two fans installed in the ceiling. At one end was the barbeque grill. The other end had a small flat screen TV mounted on the wall. In front of it was round coffee table, surrounded by two matching love seats and two arms chairs. The pool and spa sparkled invitingly.\n\n\"All the comforts of home,\" Danny said admiringly. \"Not our home of course.\"\n\n\"The pool's a lot of work, for how little I use it. Maybe it will see more action, now that the girls are here.\"\n\n\"I'm sure there will be more action,\" commented Jennifer with a grin.\n\nGrant gestured them to sit. The married couple shared one of the love seats. Claire and Bethany took the opposite one. Grant poured drinks and brought them over on a serving tray. Then he sat in the arm chair that faced the pool.\n\n\"Delicious,\" Jennifer said after a sip. \"What's in this?\"\n\n\"Three different kinds of rum, passion fruit syrup, lemon juice.\"\n\nBethany raised her glass. \"A couple of these, and you feel like a hurricane hit you.\"\n\nThe five of them chatted, finished their drinks, and decided to go for a swim. Grant directed Jennifer and Danny to change in his room. Grant was already dressed to swim, wearing trunks, flip flops, and a t-shirt, so Claire and Bethany went to their rooms to change.\n\nThe girls emerged first. Both were in bikinis. Claire's was solid blue on top and a floral print bottom. Grant's eyes traversed her body, admiring every inch. Bethany's bikini was red. Her bottoms covered much less than Claire's. It was nearly a thong, with most of the material disappearing between her toned cheeks. Grant let out a low whistle.\n\n\"Danny's not going to know where to look.\"\n\nAt that moment, Danny appeared. He was shirtless and in decent shape. He was wearing board shorts that were black with blue swirls. Jennifer stepped out from behind him. Grant couldn't help but stare. She was wearing a white one-piece suit. The legs were cut high, making her long legs seem even longer. Her large breasts filled out the top. Grant felt like he could see the dark shadows of her areolas and her pubic hair, but maybe it was just wishful thinking. He realized his mouth was hanging open, so he shut it, and thought of something to say.\n\n\"There's a whole rack of beach towels over here,\" he pointed in the general direction, but didn't take his eyes off of Jennifer and Danny, but mostly Jennifer. \"Feel free to use whatever you want.\"\n\nClaire and Bethany stepped out from under the covered porch toward the pool.\n\n\"It's hotter than Hades out here,\" exclaimed Claire. \"I'm jumping in. Come on!\" She grabbed Bethany's hand, walked over to the deep end, and together they hopped in feet first.\n\nWhen they surfaced, Bethany reported that the water felt great, and that the others should join them. They swam and chatted and had another round of Hurricanes. Grant strung up a net across the middle of the pool and they played volleyball. First, it was the married couple against the throuple. After a couple of games, Jennifer demanded switching up teams, guys against girls. Danny and Grant gave it their all, but they were no match for the women. With the two Amazons in front, and Bethany getting to everything that went over their heads, they crushed the two men.\n\nGrant had to admit that he spent more time gazing at all the gorgeous wet flesh jumping up and down than concentrating on the game. Jennifer's suit was translucent. And he absolutely could see what he'd only previously imagined was visible. Danny also seemed distracted by the view on the other side of the net. The men finally surrendered, and Grant excused himself in order to start dinner. He declined all offers to help, and left the four of them in the pool. Soon he had the salmon on the grill, coated in grape seed oil with some sea salt. He also roasted some potatoes, red and yellow peppers, and broccoli. When it was just about ready, the others got out of the pool and toweled off. Claire and Jennifer put on cover-ups, Bethany didn't bother, Danny pulled on a t-shirt, as had Grant.\n\n\"This is great,\" Jennifer said between bites. \"You've got lots of different skills, G-man.\"\n",
        "Danny raised his eyebrows, and shot his wife a curious look. She didn't seem to notice.\n\n\"I agree,\" Claire added. \"Roasting the veggies and potatoes makes them even more delicious.\"\n\nThey were into the second bottle of wine, when Danny had a question.\n\n\"What's it like, the three of you living together? I mean, how do you deal with jealousy? Aren't someone's feelings going to get hurt?\"\n\nBethany spoke up first. \"I'm not sure we're into this long enough to answer that. But we're comfortable with each other. No one is possessive. I think there's a lot of mutual trust and respect.\"\n\n\"We're still figuring things out,\" Grant said, and paused to take a swallow from his wine glass. \"But I'm just enjoying the ride, and whatever happens, it won't diminish how I feel about these wonderful women.\" Grant hoped his comment didn't make it too obvious that the 'wonderful women' included Jennifer.\n\n\"Save room for dessert,\" Claire announced. \"I whipped up something a little special. It's a chocolate fudge cake. Actually, I made two. One regular, and one...cannabis infused.\"\n\n\"Sounds good,\" commented Jennifer. \"I'll definitely have some cake, but without the edible. I don't handle that stuff very well, and besides, I can be the one to drive us home.\"\n\nOnce they finished dinner and the wine, Grant went in to make a pot of coffee, while Claire cut the cake. Grant also opted out of the edible version. By the time they'd finished dessert, it was getting dark. Grant turned on the pool lights and invited the group to get in the spa while he cleaned up. Again, he refused all offers to help. He scraped down the grill, and covered it. Then he took in all the dishes, rinsed them, and put them in the dishwasher. He mixed up some pineapple rum cocktails, put them on a tray and carried it out to the pool.\n\nJennifer and Danny were sitting on one side of the spa opposite Bethany and Claire. The married couple were holding each other close, but they were watching the two women make out. Bethany and Claire seemed oblivious to everyone else. Open mouths passionately explored each other. Claire cradled Bethany's head in her hands, while Bethany encircled Claire in her arms. Their breasts pressed together just below the surface of the bubbling water.\n\n\"I brought drinks,\" announced Grant. \"Pineapple rum cocktail anyone?\"\n\n\"Interesting choice,\" laughed Jennifer. \"Drink up honey, I like how it makes your sperm taste.\"\n\n\"Even if that folk lore was true,\" Danny replied, \"it would take another day to get into my system. I don't want to wait that long, if you're offering a happy ending to this date.\"\n\nJennifer snuggled up to her husband, and massaged his chest with one hand. Danny kept his eyes on the two women in front of him. The spa was only six feet wide. The knees of the two couples were nearly touching. One of Bethany's hands had disappeared under the water, and from the way Claire was squirming, the others could guess what was happening. After delivering drinks to Jennifer and Danny, Grant walked around to the other side of the spa. He gazed down at his two roommates. He could see the swell of Claire's breasts as they pressed against Bethany. The young brunette was clearly fingering the tall blonde as they kissed.\n\nClaire leaned her head back and opened her eyes. \"Come and join us barkeep. We'll make room in the middle.\"\n\nWithout hesitation, Grant set down the tray and got in the water. He wanted to get out of view quickly to hide the tent that had suddenly occurred in this swim trunks. Sliding in between the two women, he felt Bethany's hand move away from between Claire's legs. A second later, he felt that hand on his own crotch, caressing his throbbing organ. He gave B a surprised look, and in response she kissed him.\n\n\"Dinner and a show,\" quipped Jennifer. \"We'll be sure to leave a good Yelp review.\"\n\nDanny said nothing. Though embracing his wife, his eyes were locked on the threesome opposite them.\n\nBethany broke off her kiss, and turned Grant's face toward Claire. She smiled, licked her lips, and took her turn. She closed her eyes briefly, but as the kiss intensified, she opened them and seemed to gaze into his soul. Grant felt a nervous excitement in his stomach. With his arms around both women, he soon felt two hands on massaging his cock. He wondered if the others could tell what was happening under the water. Then realized he didn't care. He pulled away from the kiss, leaned his head back on the side of the spa and savored the experience.\n\n\"You two are too much for me,\" he whispered. He reached around to cup Claire's left breast with one hand, and Bethany's right breast with the other. Grant felt for the nipple underneath the bikini top. He rubbed and teased as the girls nestled closer to him. One of them stroked his shaft, while the other fondled his balls. Grant opened his eyes and saw Jennifer and Danny were absorbed in making out. Between the bubbles, it looked like Jennifer might have her hand between her husband's legs as well.\n\nJust as the girls seemed ready to strip his bathing suit off, Grant moved his arms from around them, and pushed their hands away. Ignoring their quizzical looks, he grabbed Claire's right leg with one hand, and Bethany's left leg with the other, and hoisted them onto his lap. B immediately understood what he was doing, and spread her legs wider. Seeing that, Claire followed suit.\n\nGrant reached between them simultaneously, searching for the heat that must be radiating from the center of their sex. With a minimum amount of fumbling, he fingered the smooth fabric covering both pubic mounds. With light pressure, he pushed between the folds. Since they were already underwater, he couldn't feel additional wetness, but he definitely felt the warmth. Bethany's bikini bottoms were smaller than Claire's, and her legs spread wider. Within seconds, Grant felt the right side of her labia was uncovered. The tight cloth split her in two, exposing half of her pussy to his touch. Bethany released a low moan. This seemed to ignite Claire, who reached down and pulled her swimsuit bottom aside to allow him inside.\n\nAs their fervor increased, so did the sounds of their pleasure. Suddenly, Grant heard a splash that made him open his eyes. Jennifer stood up in the spa, facing her husband. She bent down. His eyes took in her bottom, and water dripping from her crotch. She was close enough that he could have reached out and touched her, but his hands were otherwise occupied. With a jolt, he realized what Jennifer was doing. She was taking off Danny's swim trunks. When she finally wrested them free, she tossed them on the pool deck where they landed with a sloppy wet thud.\n\nJennifer stood up and turned around. Grant didn't meet her eyes at first. He was too busy staring at everything on display through her soaking wet, white bathing suit. Her nipples poked through, the large, dark shadow of her areola clearly visible behind them. She slowly sat down on her husband's lap, facing Grant. Lowering herself into the water, she wiggled in a way that Grant could tell she was impaling herself on her husband's cock, ever so slowly. Her eyes were closed, and she bit her lip as she slightly raised and lowered herself several times, until at last she settled all the way down. Her eyes fluttered open and fixed on Grant.\n\nNone of this exhibition was lost on Claire or Bethany. The blonde unhooked her bikini top, and cast it aside, revealing her beautiful breasts and ghost-like nipples. Bethany responded by pulling off her bottoms, dangling them above the water for all to see, and then tossing them on the deck next to the drink tray. Together, the girls quickly removed his suit. The hot, churning water felt glorious on his erection. Bethany stood up, moved between his legs, and turned her back to him. She mimicked Jennifer's move and lowered herself toward Grant's throbbing shaft. Claire leaned in and put her right breast in Grant's mouth, as her hand grabbed onto his cock, ready to guide it into Bethany's approaching aperture.\n\nAs if Grant didn't have enough to overwhelm his senses, he could still see Jennifer riding her husband. She seemed to be enjoying the view in front of her, as well as the physical sensation inside of her. For his part, Grant was determined to hold off any ejaculation for as long as possible. He gently bit down on Claire's nipple, just as Bethany's pussy lips reached the engorged head of his penis. As soon as he was inside her opening, she teased him. Squatting over him, she gently gyrated on the tip of his cock.\n\nClaire pulled her breast from his mouth. She stood up, watering streaming from her sleek body, and circled around in front of him, kneeling in the water on his right side. Claire's mouth was on level with Bethany's breasts as she bounced up and down. He felt Claire's hand find his scrotum under the churning spa water. She held his tight sac in her hand and squeezed. It was almost at the point of pain, but it increased his pleasure.\n\nClaire released him, as her fingers traced up his shaft, and around the place where Bethany was plunging herself up and down on his stiffness. Grant could tell when Claire turned her attentions completely to Bethany's clitoris. Bethany gasped, opened her eyes, and beamed a smile down at Claire. He felt B's vaginal walls contract around his penis, gripping him even more tightly, as her movements became more languid. While Claire's right hand was busy underwater fingering Bethany, her left hand pulled down Bethany's bikini top and groped one breast, while her mouth explored the other.\n\nGrant slightly leaned his head around the gyrating bodies to the left in order to see what the married couple was doing. Jennifer's eyes immediately found his again.\n\nShe licked her lips and said, \"Fuck me, honey.\"\n\nSince she was sitting on Danny's cock, there wasn't much more he could do in response. Jennifer was in control, and savoring it. She continued moving up and down, impaled on her husband's erection, her hands on his thighs. Then, taking away one supporting hand, she reached up and began to pull down her bathing suit top.\n\nGrant was trapped between wanting to shout for her to stop, and shouting for joy. He wanted to see her tits again, more than almost anything. But he was afraid that the mere sight of her breasts would make him immediately ejaculate. He was already struggling to withstand all the sensations and sights in front of him. Seeing more of Jennifer's magnificent body could be his undoing. Her eyes never left his, as her hand pulled away the soaked white material from her breasts. First one, then the other was exposed to view. Her swimsuit was bunched up underneath, supporting and holding up her tits in a way that made them seem even larger and more sensual than he thought possible. The air was colder than the spa water. It made her nipples stiff; and her areolas contract and pucker into darker, smaller, irregularly-shaped circles.\n\nJennifer reached up and began teasing her nipple, smiling at him in a way that was more than he could possibly endure.\n\n\"Fuck, I'm going to cum!\" He made this announcement as he thrust himself upward into B's vagina, and shot load after load off sperm into her womb. Once he stopped trying to hold himself back, he just let himself enjoy the orgasm. The feeling of total freedom was something inexplicable. His unsheathed genitals were deeply embedded inside a lovely young woman. He was sharing his intimate genetic material with her. Unprotected. Without hesitation.\n\nAs Grant tried to regain his senses, several things happened at once. Claire began rubbing Bethan's clit more vigorously, and talking to her.\n\n\"Did he come in your pussy, baby girl?\" Claire asked, looking up from B's tit and into her eyes. \"How 'bout you come for me now? I want to feel you come while Grant's dick is still in you, and my finger is on your clit. Can you do that for me baby?\"\n\nBethany's answer was limited to a slight nod of her head. Grant felt her body tense, and become rigid, as her breath came in gasps. Her vaginal walls contracted tightly around his still mostly erect penis. It made him glad to have maintained enough stiffness so that she could feel him inside her.\n\n\"FUCK, FUCK, FUUUUUUCK,\" she screamed, as her body began convulsing.\n\nFor the first time Grant wondered about the neighbors. He had visual privacy for his pool, but he was sure someone could hear Bethany's expletive of ecstasy. But that train of thought was quickly replaced by what was happening on the other side of the spa. Danny reached his limit, expedited by all the sounds being made a few feet away. He didn't say anything. It was just his panting and groaning that gave him away. Grant watched Jennifer's naked breasts jiggle as her husband emptied himself into her.\n\nThere was silence, and lots of heavy breathing. Bethany lifted herself off of Grant. His penis was not flaccid, but semi-erect. A glob of his semen dropped out of her, as she moved away. Grant scooped it out of the water and throw it over onto the lawn. Bethany squeezed between him and Claire. First she kissed him on the lips, and then turned to kiss the tall blonde. The kiss between the two women lasted a lot longer. And then Grant heard Bethany whisper something to Claire. He couldn't make it out, but it sounded like a question.\n\nNow with his view of the other couple completely unobstructed, he watched Jennifer move off of Danny's lap and sit beside him. She had already pulled her bathing suit back up to cover her breasts. Danny smiled sheepishly at Grant, but quickly turned his attention to the two naked women opposite him. Actually, Claire wasn't yet completely naked, and it was if in that sudden realization, she stood up, pulled off her bikini bottoms, and tossed them onto the pool deck alongside Bethany's. She smiled at the group, and lowered herself back into the bubbling spa.\n\n\"Good thing we're on the pill,\" Jennifer said above the sound of the churning water. \"I think this water has enough sperm in it to impregnate all three of us.\"\n\n\"Normally, I might say, ewww,\" Claire responded, \"but right now, that sounds sexy as hell.\"\n\n\"To me too,\" replied Jennifer. \"That's most likely because I haven't had an orgasm yet.\"\n\n\"Me neither,\" said Claire. \"Bethany's the lucky one tonight.\"\n\nBethany said nothing. She simply began sucking Claire's left breast while fondling the other. Grant could see Danny's eyes widen at the sight. In most situations, staring would be a terrible mistake with your wife sitting next to you. But Danny couldn't help himself, and Jennifer didn't seem to mind. Instead, Grant could see her hand move between her husband's legs and begin to stroke him underwater. Grant could hear Bethany noisily suckling on Claire's tits, even though he couldn't see it.\n\nMoments later, the sounds stopped, and Bethany turned to him. Her sweet, hot breath was in his ear.\n\n\"If you want to do something with Jennifer,\" she whispered, \"this will be your chance. Don't fuck it up.\"\n\nChapter Three\n\nGrant felt sick to his stomach. Or maybe he was just nervous. He didn't know what to do. He felt transfixed to his seat in the spa.\n\n\"What did Bethany mean that this was his chance with Jennifer?\" he wondered, \"she was full of her husband's sperm, just as Bethany was dripping with Grant's jism.\"\n\nBefore he could whisper a question back to Bethany, she turned away from him and stood up. Her tanned, toned, and wet body was mesmerizing. Even though he had just ejaculated inside her, Grant felt his cock stir to life. Bethany reached her hand toward Claire. The blonde took the hand extended to her, and raised out of the water. The two women stood side-by-side. At nearly six feet tall, Claire seemed to tower over her younger partner. Grant looked Claire over with great appreciation. Her fair skin, firm bottom, lanky, athletic frame were something to behold. It was still hard to believe that he had known both of these women in the most biblically intimate of ways. His erection fully restored, he still didn't know what to do.\n\nHand in hand, the two women took two steps toward the Danny and Jennifer.\n\n\"We couldn't help but notice,\" Bethany said, \"that your husband seems to like us.\"\n\nDanny's face was already flushed, but Grant could see it get redder. Jennifer never stopped stroking her husband, even as he seemed to try and shrink away from her grasp.\n\n\"Can't say I blame him,\" smirked Jennifer. \"What's not to like?\"\n\n\"That's sweet, Jen,\" Bethany replied, looking her co-worker in the eyes, \"but what I want to know is, how would he feel if he saw his wife kissing another woman?\"\n\nIt was hard to tell who was more surprised, Danny or his wife. For the first time, Jennifer seemed to be at a loss for a quick comeback. Seizing on that moment of hesitation, Bethany leaned forward, and kissed Jennifer's lips. Jennifer pulled back slightly, breaking contact, and then tilted her head back toward Bethany and with a smile, returned the kiss passionately. Bethany and Claire continued holding hands, but Bethany's other hand began groping Jennifer's breasts through her swimsuit.\n\nGrant felt very lonely on the other side of the spa, as well as increasingly horny. He wrapped a hand around his erection, amazed at its rock-hardness so soon after climaxing. Danny was also just a spectator, but a lot closer to the action. His penis was still being stroked by his wife, though less attentively than moments earlier. His mouth agape, Danny didn't seem to know where to look or what to do with his hands.\n\n\"Hey Jen,\" interrupted Claire, \"looks like you could use a little help with that.\" She pointed at the spot where the head of Danny's cock bobbed in and out of sight in the turbulent spa waters.\n\nJennifer broke away from kissing Bethany. She looked from Claire, to her husband, to Bethany, and back to Claire.\n\n\"I've been doing just fine on my own, haven't I honey?\" It was more of a statement than a question.\n\n\"Um, yeah, you've been...great,\" Danny gulped.\n\n\"Well, he looks a little needy, and I'm a little needy, so maybe we could help each other out,\" Claire said in a tone that sounded reasonable, logical, and convincing.\n\n\"We'll give him back to you when we're done,\" Bethany's voice was playful. \"We promise.\"\n\n\"I don't know if Danny wants to be with two women,\" Jennifer said in a way that could have been sarcastic or sincere.\n\nDanny's eyes seemed to bulge. He didn't know the right answer, but Grant could tell what the guy wanted to say.\n\n\"And what am I supposed to do, watch?\"\n\nClaire gestured toward Grant. \"He's pretty lonely. Maybe while we have some playtime with Danny, you could cheer up Grant.\"\n\n\"You wouldn't mind that, would you Danny?\" Bethany asked.\n\nThis was a question Danny felt he could answer. He looked at Grant and then back to Jennifer.\n\n\"Um, no, I guess that would be ok.\"\n\nBethany helped Jennifer up, and then took her place beside Danny. Claire sat on the other side of the elated but befuddled husband. Again he didn't know what to touch, and looked up at his wife. Jennifer just smiled, shrugged her shoulders, and turned toward Grant. Even though Jennifer was blocking his view of the threesome's activities, Grant wouldn't have looked anyway. He was more fascinated with the woman coming toward him. So Grant didn't see Claire and Bethany handling Danny's penis, while sharing a three-way kiss. Grant didn't see how quickly Danny lost himself in the experience of having two naked women clinging to him, forgetting that his wife was headed toward another man.\n\n\"Do you have room for me, big boy?\"\n\n\"Always and forever.\"\n\nShe stood in front of him, their legs touching. Jennifer was so tall, he had to crane his neck up at an uncomfortable angle in order to meet her gaze.\n\n\"We're already breaking your rule about naked touching,\" he said pointing to their legs, \"I hope you're ok with that because I feel like there might be more of that happening soon.\"",
        "She laughed. \"You're probably right, G-man. I'll allow it.\" She straddled his legs and sat down on his lap so they faced each other.\n\nHe reached up and moved her long, dark hair away from her face, tucking it behind her ear. Then, cupping his hand behind her neck, he pulled her lips toward his. The kiss felt like an electric charge in his body. As much as Grant wanted to continue to stare into Jennifer's beautiful eyes, his eyes involuntarily closed as he savored her mouth. Their tongues entwined and explored. He sucked on her bottom lip, plumped with her feverish excitement. He released her lip and plunged his tongue into her open mouth. She moaned so deeply that it made his jaw vibrate.\n\nJennifer suddenly pulled away. Grant looked at her inquiringly.\n\n\"I want you to take this off of me,\" she said, pointing at her swimsuit. \"Can you handle that, G-man?\"\n\n\"We'll find out. I've seen your breasts three times,\" he responded. \"And every time I came immediately. That includes tonight.\"\n\n\"Well buckle up, because I need you around longer than immediately.\"\n\nGrant pulled down the straps of her bathing suit simultaneously. Then he tugged the wet material over her breasts. He couldn't help himself, but grabbed them with both hands and buried his face between the damp mounds of flesh. His cock throbbed between them as he smothered himself with her tits. Coming up for air, he flattened his tongue and ran it over the areola of one breasts. He slathered the area with his saliva, and felt the hardness of her erect nipple with each pass. He repeated the process with her other breast, savoring every sensation.\n\n\"You like my titties, Grant?\" He felt her pelvis shift, and begin grinding herself on his left thigh.\n\n\"I love them, and everything about you,\" he said with great sincerity.\n\n\"Keep making love to them,\" she said breathlessly, \"you're going making me cum just from that.\"\n\nGrant gave all his attention to teasing, licking, sucking, and worshiping the breasts he had fantasized about for so long. He hungered for them as if they were the only food he had ever tasted. The more he did this, the more his actions became frenzied, out of control. Grant realized the need to harness his energies, direct his wildness, in order to bring Jennifer pleasure. Slowing the movements of his mouth and hands, Grant returned his focus to her areolas. Still slick with his saliva, Grant licked one, while gently squeezing the other breast. Then he pulled the hard nipple between his lips, and continued tweaking the other nipple with his fingers.\n\nThe pressure of Jennifer's grinding increased. She began to pant and moan. She grasped his head and pulled him into her chest. Trapped between her large boobs, he did his best to suck them, while struggling to breathe. His cock was sticking straight up, and Jennifer was not only grinding downward on his thigh, but thrusting forward to wedge his rigid member between them.\n\nAlthough finding it difficult to catch his breath, Grant had no intention of changing a thing. He wanted to make her come, more than he wanted to live. If he could pick how to die, this would now be his first choice. Suffocated in the bosom of this incredible woman. He loved all three of his co-workers. But there was something about Jennifer that he couldn't define.\n\nAnd that's when she began to orgasm. It wasn't loud and explosive, as Jennifer often was in everyday life. It was quiet. She made sounds like a helpless kitten. Her body convulsed over and over again. He could feel or maybe hear her heart beating out of her chest. He felt a flood of wet warmth on his thigh, as her juices seeped from her body. Grant pried himself away from those glorious breasts in order to glimpse her face. It was still etched in beautiful agony. He would never forget that look. Her eyes fluttered open, caught his, and a smile rose like the sun. A smile that filled her eyes, and stretched her mouth.\n\n\"I've wanted that so much,\" she said. \"It was worth waiting for.\"\n\n\"You're the most beautiful woman I've ever seen,\" he made the announcement like it was indisputable fact. \"I can't believe I get to be with you.\"\n\n\"There's more to come,\" she replied, and glanced over her shoulder at the threesome which included her husband. \"I'm not stopping. Now I want you in my mouth.\"\n\nGetting off his lap, she guided him to sit on the edge of the spa. The water streamed from his body, as his throbbing hardness was exposed to the air. She knelt in the water between his legs and licked her lips. Grant couldn't help but glance across to see if Danny was troubled by what his wife was doing. Danny, however, wasn't looking. His face was buried between Claire's beautiful thighs. Grant assumed the blonde was enjoying the attention, but he couldn't see, because she was straddled by Bethany, who was riding her face.\n\nKeeping her eyes on him, Jennifer kissed the tip of his cock. She licked the slit at the top, gathering a string of pre-cum with the tip of her tongue, and then swallowing. She pressed the engorged member between her lips, and then slowly, firmly, plunged down his length. He saw her nose nestle into his public hair. Her tongue massaged the backside of his penis. And as she held that position, he felt the warm wetness of her salvia drizzle down to his testicles. Then she began to move her mouth up and down the length of his shaft. Her movements were slow, and made a suctioning sound.\n\nGrant never wanted this to end. He caressed her head, combing his fingers through her long, dark hair. He relished every sensation. Randomly, he regretted never having installed a camera in the pool area. How wonderful it would be to have captured this scene in order to replay it over and over. Dismissing the thought, he gave himself to enjoying all that Jennifer was doing.\n\nFinally, she came up for air, and they kissed. Again, their tongues explored each other.\n\n\"My cock was in your mouth,\" he murmured through the kisses.\n\n\"It was,\" she said, adding with a gleam in her eye, \"and I believe that was Bethany I tasted on you.\"\n\nGrant didn't know whether he should be ashamed, or apologetic. So he just spoke the truth.\n\n\"I wanted it to be you. I always have.\"\n\n\"No worries. Besides, she tastes pretty good. If I didn't know better, I might want to try switching teams sometime. But right now, I need you inside me. I want you to shoot your load into my pussy.\"\n\nGrant glanced over at the threesome a few feet away. Jennifer looked over as well. Danny was on the edge of the pool facing them, but his eyes were shut tight. He was experiencing a double blow job. The asses of the two women servicing him were out of the water, luridly exposed to their view.\n\n\"He more or less has a hall pass tonight,\" she commented, \"although it was never stated, it looks like he's all in.\" She turned back to Grant. \"And that's where I want you....all in...me.\"\n\nWith that, she took his hand, stood up, and led him over to a padded lounge chair. He helped her settle back on the cushion. She put a leg on each side of the chair, spread-eagled before him. Her finger found the hood of her clit, and she gently rubbed it. Then with her other fingers, she splayed open her labia, and gave Grant a look of unadulterated lust.\n\nGrant was mesmerized. He wanted to experience everything about her body, but the sight was so overwhelming, he was transfixed. Jennifer misread his hesitation.\n\n\"Don't worry, my love. You aren't getting sloppy seconds.\"\n\nGrant gave her a puzzled look, and at the same moment, remembered how her husband had ejaculated into her earlier. This realization made her words more baffling.\n\n\"I gave hubby an early Christmas present,\" she explained. \"I let him cum in my ass. Do you know why?\"\n\nGrant shook his head, still confused.\n\n\"I let him cum in my ass,\" she cooed, \"because I wanted you in my pussy.\"\n\nGrant found it hard to breath. The way his heart was beating, he wondered if he was having a panic attack, or worse. Again, it felt like a great way to die. His response was to get between her open thighs and cover her pubic mound with his mouth. Foreplay was long over. There was no time to waste. He heard Jennifer gasp as he sucked her entire sex. Then he thrust his tongue into her wet opening. As he enjoyed the silky texture of her vagina, his nose was rubbing against her engorged clit. He increased the friction as best he could, while his tongue plunged in and out of her. He could feel her climbing toward orgasm.\n\nReaching up, he gripped a breast in each hand. He sensed that she wanted him to be rougher, and he squeezed them tightly, pinching the nipples. At the same time, he moved his lips to her erect clit, and sucked it in. This orgasm hit her like a train. She shuddered and gasped for air. She twisted and turned in a way that made it difficult for him to hold on. He stopped his ministrations, but kept as much contact with her as possible. While she regained her senses, he caressed her body. His hands moved carefully over her belly and breasts, up to her neck and back again. She was slick with sweat.\n\nJennifer opened her eyes and sat up, forcing Grant to raise himself to his knees on the chair. His cock was rigid and throbbing. She gripped it and looked into his eyes.\n\n\"It's your turn to put this beautiful thing in me,\" and then she swallowed him again.\n\nGrant's balls tightened against his body. He felt totally weak and completely powerful at the same time. He lifted her head, and she released his erection from her mouth with a pop. She smiled wickedly as she leaned back on the lounge chair and spread her long legs wide. The angles were tricky and Grant fumbled to figure out how to arrange himself. He ended up straddling the chair, lifting her hips and pulling her toward him. Her hand guided his pulsating cock into her dripping slit.\n\nAs he slid into her, it was like a dream. His fantasy had collided with real life.\n\n\"You are so wet,\" he groaned.\n\n\"You made me wet...I've wanted your cock in me for so long.\"\n\n\"You feel so good. I don't think...I can...last...so good...\"\n\n\"Take your time, baby. I want you to enjoy it.\"\n\nGrant looked at the woman who had opened herself to him completely. Her hair was spread out on the chair back like a dark, tangled halo. Her face glistened with perspiration. Her lips plumped from all the passionate kisses. He was lost in her eyes that glinted with desire, or something more.\n\n\"I love you, Jennifer,\" he whispered as he rammed his penis deeply inside her.\n\nHer eyes opened wide, either from the force of his thrust, or from his declaration. She put a finger to his lips.\n\n\"Hush, now,\" she said, \"and fuck me.\"\n\nNo further instruction was needed. Grant plunged in and out of Jennifer; rhythmically, exuberantly, and without reservation. After a few moments of abandon, he stilled himself to forestall the inevitable. Slowly he withdrew his shaft until just the head remained inside her. He paused, pulling back still farther as she pushed her hips toward him, begging for him to re-enter. When he could stand it no more, he sank his penis into her again, reveling in the sound made when their loins slapped together.\n\n\"I'm going to cum in you,\" he stated, as he returned to thrusting himself in and out of her sopping, warm, and welcoming hole.\n\n\"I...want...\" she grunted as each thrust pushed the air out of her lungs, \"...you to....fill my...pussy...with your cum!\"\n\nStill staring into her eyes, Grant managed one final plunge, and released his sperm inside her. Even though he'd already climaxed earlier, his emission seemed endless and copious. Jennifer wrapped her legs around his back and crushed herself into him. As Grant continued to shudder, he recognized she was close to cumming again. He squeezed his buttocks tightly, and forced more blood flow into his penis. Feeling his cock swell again, however slightly, pushed Jennifer over the edge. Her body quaked, and he collapsed on top of her.\n\nNeither of them could move. Neither of them wanted to.\n\nIn the background, Grant could hear some moaning. He hoped it was going well for the three of them. Nothing could top what he had experienced with Jennifer. He touched her face, she opened her eyes, and smiled. They shared a lingering kiss.\n\n\"I do love you, you know,\" he sighed. \"It's not just lust. You are everything I could ever want in a partner.\"\n\n\"I love you too, G-man. But savor this, because...it can't continue.\"\n\n\"Why? I mean...\" he stammered, \"we can work out something.\"\n\n\"You should know,\" she said with a solemn look, \"it took a lot to make this happen.\"\n\n\"What do you mean?\"\n\n\"Your girls love you so much,\" she answered, \"and they love me so much, that they planned it all.\"\n\nGrant was dumbfounded. It had all unfolded so naturally, innocently. Or so it had seemed to him.\n\n\"I was in on it, of course,\" she continued, \"but they were willing to make Danny so blind with lust, that it didn't matter if his wife was fucking you.\"\n\nGratitude mingled with a dose of manipulation in Grant's brain. However it happened, it had allowed him to indulge in his greatest fantasy. Intimacy with Jennifer is what he craved. Deep down, he knew that this had not put out the fire. It had merely stoked it. He lifted her breasts and planted a kiss on each nipple.\n\n\"Don't start something you can't finish, baby,\" she breathed.\n\n\"Oh, I'm going to finish it,\" he declared confidently. \"The only thing that can keep me away from you, is you. Until you tell me to go away, I'm yours forever.\"\n\nJennifer sighed, and smiled. She ran her fingers through his hair as he continued kissing her breasts. She felt him growing hard against her leg.\n\n\"Maybe,\" she said thoughtfully, as she felt her own desire stirring again, \"maybe, we can find a way to do this...oh, right there...maybe the girls...will join in...maybe I should taste pussy...you seem to like it...so...you're hard...\"\n\nGrant mounted her again. The sound of her gasp drove him crazy with desire. He would fuck her now. The only way it would be for the last time, was if the world exploded at midnight."
    ],
    "authorname": "LexicalFantasy",
    "tags": [
        "tit sucking",
        "erotic coupling",
        "oral sex",
        "pussy eating",
        "ball sucking"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/group-think"
}