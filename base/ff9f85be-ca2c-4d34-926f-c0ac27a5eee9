{
    "title": "The Lunar Life Ch. 10",
    "pages": [
        "\"Will, I've found Thane.\" Varek said as he shook Will awake from his sleep. At the sound of those words, Will's brain shot to attention, leaving behind all the fog and blurriness of his sleep. Have you ever woken up, only to realize you overslept, and you get this sudden burst of energy? Yeah, it was the same for Will. \n\n\"Where?\" Will spoke as he sat upright, his body immediately ready to head out at a moments notice. From the look at Varek's face, Will knew the answer wasn't good. \"Varek, where is Thane?\" Will reiterated, panic slowly rising. He was afraid that the next sentence Varek was going to speak was that Thane was gone. \n\n\"He's being held at The Spire.\" Varek said, and Will almost sighed in relief. He was glad that at least Thane wasn't dead, but with him being held at The Spire, there was no room for relief to set in. Of course it was expected, that Dart would keep Thane under his own care, and what more secure place on Lunaris than his own tower. \n\nOverrun with security droids, a state of the art surveillance system and force field fenced perimeter that encased the entire building, including underneath it, getting into the building without clearance was a feat in its own, not to mention that the pair had to infiltrate the building and somehow find Thane without raising any alarms. \n\n\"What's the plan?\" Will asked, throwing himself out of bed with the agility of a feline. Even in his sleep deprived state, his pistons were firing on all cylinders. \n\n\"Follow me. I'll brief you as we go.\" Varek said, turning and heading out of the room. Judging from the bags under his eyes, Will knew the older elite hadn't gotten much sleep either. He would have asked Varek about it, cajole him into getting some sleep first, but he knew that Varek would have brushed it all aside for Thane. \"As I'm sure you know, getting into The Spire, isn't going to be easy, it's impossible by normal standards, but of course we're not normal people now are we.\" Varek smirked, shooting Will a small smile. It comforted Will, knowing that even in the midst of all this, Varek could remain calm enough to joke. \n\n\"I'm assuming you have an idea?\" Will asked, following Varek into the living room. \n\n\"Kind of, but I've run into a little bit of a problem. You see I've managed to hack into the city network, so I have access to street cameras and stuff like that. The problem is that The Spire runs on a separate network that cannot be breached from the outside. In order to gain access to its network, I need to plug my tablet into a network port within the building itself.\"\n\n\"But we can't pass through the force field.\" Will stated. \n\n\"Exactly, so I've been combing around for possibly a weak point, or perhaps a security flaw somewhere, anything that could get us through that force field.\" Varek said, sitting down at his tablet. Will looked at the screen and noticed something like a blueprint displayed. \n\n\"Is that a blueprint for The Spire?\" Will asked, taking a seat beside Varek. \n\nVarek nodded, passing the tablet over to Will so he could peruse it. \"I've spotted some blind zones in surveillance in these two spots.\" Varek said, pointing out two separate tunnels underneath the structure, leading directly to the core of The Spire. \"If we can get in there, we should be able to go in undetected. That force field is the only thing in our way.\" Will thought about it, trying to find a way to get pass that fence.\n\nHe knew that there had to be some way to get through it, or else Dart himself would not be able to enter or leave. That's not to mention the hundreds of security droids that patrol the area. Then it hit him. \n\n\"You said you had access to the street cameras?\" Varek nodded at the statement. \"Can you bring up the cameras surrounding The Spire?\" Will asked, handing the tablet back to Varek. Varek did as he was asked, typing away at the screen before handing it back to Will. This time the screen showed live feed from four cameras that surrounded the building. In each of them, cars drove past it without a care, unknown that it was the locations of a kidnapped hostage. Beyond the cars were little droids that paced up and down the sides of the building, just behind the barely visible force field. The force field was clear, but gave off a sort of mirage effect that was a lot more visible up close. \n\n\"What are you looking for?\" Varek asked, looking between the screen and Will's concentrated face. \n\n\"I'm just waiting for...there.\" Will said, pointing to the screen, finger hovering just over a droid. \n\n\"Okay? That's a droid. What about it?\" Varek asked.\n\n\"It's a droid alright, but that's not what I'm referring to. Look at it and tell me what do you see.\" Varek turned his attention back to the screen, watching as the droid paced up the path, before turning and pacing back in the opposite direction. It was a few seconds later that Varek caught it, the droid walking through the mirage, essentially walking through the force field. \n\n\"The droids can pass through it.\" Varek said, suddenly enlightened, and slightly kicking himself for not thinking about it. \"But how does that help us?\"\n\n\"Well, I'm assuming that the force field is selective, meaning that should an individual with the correct source code approach it, they can pass through without harm.\"\n\n\"That's correct, it's programmed into the BIC, the same way a person opens their house door, but the thing is, this one is encrypted so it can be duplicated.\" \n\n\"Okay but I'm pretty sure the droids don't have BICs, meaning that the codes to pass through is hidden somewhere within their programming code. All we need to do then, is get that code from the Lunaris Programming Centre and we should be able to get through.\"\n\n\"Probably, but like I said Will, the code is encrypted. We won't know which is the correct one.\"\n\n\"We don't have to. We just take the entire file and load it into our BICs. It should help us get through.\" Will said. Varek thought about it for a minute. The plan did have a few technicalities here and there, but it was the only plan they've got. \n\n\"It's worth a shot. I can remotely download the file from here but it's gonna take some time; probably an hour. After that, we can leave.\" Just as Varek finished speaking, Trevor walked into the room. \n\n\"You guys are leaving already?\" He asked, walking down the stairs. \n\n\"Soon. We need to get to Thane as soon as possible. Who knows what Dart is doing to him.\" Will said, turning away from Varek to look at his father. \n\n\"Are you gonna be safe?\" Trevor patted Will worriedly on his shoulder. He knew Will needed to do this, but he also knew that this was probably very dangerous and he didn't want Will to get hurt. \n\n\"I don't think I can be safe anywhere Dad, not with Dart on my case.\" Will rubbed his face in frustration. \"I wish we had some weapons or something, so we weren't helpless.\" Lunaris had many laws, and one of those laws was the prohibition of any sort of firearms. There just weren't any guns on Lunaris, including on security droids. They did however, have a mean Taser, which could knock you unconscious within seconds, but droids were the only one authorized to wield them. Sure, you had knifes and all that if you were really desperate, but knifes weren't very effective against droids. \"Is it possible for us to get our hands on some Tasers?\" Will turned, directing the question to Varek. \n\n\"Impossible. Tasers are manufactured within The Spire itself. Probably a precaution devised by Dart himself.\" Varek never took an eye off his tablet as he spoke, continuing with whatever he was doing. Will sighed, somehow knowing that it wasn't going to be possible getting their hands on one. \n\nIt was just then that Something clicked in Trevor's brain. No, he wasn't able to help them get a Taser, but he had the next best thing. \"Hold on.\" With that, he disappeared up the stairs, leaving Will confused by his father's abrupt departure. \n\nIt was five minutes later when Trevor returned, holding what looked like a coil of wire in his right hand. Will looked at the object, unsure of what it was. As Will got closer though, he realized that one end of the coil tapered off, gradually getting thinner in diameter before ending at a dull point. The other end of the wire led to a metallic handle with a single button on its side. Trevor held out the object to Will, waiting for his son to take it. \n\nWill took the whip into his hands, unsure why his father even had the thing. He gave a confused look to his father, wordlessly asking for some form of explanation. \"All animal handlers had a whip like this while we still worked within the forest domes. Once the animals were put in stasis, the whips were no longer needed.\"\n\nWill looked down at the coiled wire in his hand, wrapping his fingers around the handle. With one flick of his wrist, he uncoiled it, letting the wire fall to the ground with a metallic slap. Upon closer inspection, Will realized the whip wasn't actually made of a single thick wire, but small segments of metal that joined together to form the body of the whip, each piece interlocking with the next to give it flexibility. He ran his thumb over the handle, running circles around the single button there. \n\n\"Be careful with that. Push the button and it electrifies the whip. Rotate it to adjust the voltage going through it. Give it a whirl.\" Trevor said, stepping back slightly to stay a safe distance from the whip. Will clicked the button and immediately the whip crackled as electricity arced between the connected segments of the body. He rotated the button, seeing the intensity of the arcs decrease and increase, depending on the direction he rotated the button. \n\nThe light buzzing sound that emanated from the charged whip seemed to attract Varek's attention. \"Oh, you have an electric whip?\" Varek walked over to Will, observing the contraption as Will lightly swung it left and right. \"The body is made up of alternating cathode and anode segments, allowing the electricity to follow through the length of the whip.\" Varek explained, out of habit more than anything. He had been teaching Will so much through his lessons that the need to explain how things worked came almost instantly. \n\n\"I thought it would have been helpful.\" Trevor said, looking up at Will, who turned the whip off and began coiling it back up.\n\n\"Thanks Dad, I'm sure it can prove useful. Hopefully we won't need to use it.\" Will strapped the device to his belt, letting it hang by his side. \n\nDuring the hour long wait for the droid programming to be downloaded, every detail and precautions about the plan was thought about and deliberated. There were some details in the plan that were iffy, but not for a lack of trying, rather the fact that they just didn't know if it would work. One of these details was their deactivated BICs. \n\nVarek knew for certain that he could transfer the programming files into the dead BIC, simply needing to copy it over to the memory storage within the device, much like a flash drive. What he didn't know was how the force field would read that information. Normally, BICs used a sort of near-field-communication technology to unlock house doors and such, but he didn't know if that was the case with the force field, seeing that droids weren't built with the same technology in them. He was hoping that the field would be able to read the programming codes from it simply being on the device. \n\n\"So best case scenario, we go through the field without so much as a stutter. Worst case scenario, the field burns us to a crisp.\" Varek mentioned, connecting the electrode from his tablet onto his BIC. \n\n\"That's not very reassuring Varek.\" Will stated as he watched Varek transfer the downloaded files into his BIC. \n\n\"I know it's not, but I won't be able to tell until one of us goes through that field, or should I say, tries to get through that field.\" Will shook his head. Yes their plan wasn't full proof, but when time was of the essence, you had to deal with what you had. \n\nSometime during the downloading process, Sarah had entered the room, her features plastered with a layer of worry. Trevor shared a similar look, although slightly better hidden beneath his tough exterior. Once everything was transferred and prepared, it was time for Will and Varek to leave. Will turned to his parents, looking at them one last time, knowing that if things didn't turn out right, it could very well be the last time he saw them. \n\n\"So I guess this is it huh.\" Will said, as he looked both his parents in the eyes. \"I just wanna say that, whatever happens today, I love you guys.\"\n\nAt those words, Sarah immediately broke down, sobbing as she ran towards Will, wrapping her arms around her son. She wanted to ask him to stay, to let Varek handle the situation, but she knew Will's mind was already made up, and nothing would be able to change it. \"I love you Will, and I'm so...so proud of you.\" \n\nWill in turned, tightened his grip on his mother, feeling his own tears welling up in his eyes. \"I'll be okay Mom. I'll come back. I promise.\" Will choked back the sobs that were threatening to come out. \n\n\"I'll hold you to that promise Will, just...please be careful.\" Sarah looked into her sons eyes, her tear soaked eyes blurring her vision. At this point, Trevor walked over to the pair, placing his hand onto Will's shoulder, squeezing slightly in his show of support for his son. Nothing was said between the two men, and nothing needed to be said. Both understood the gravity of the situation and both knew the risks involved. \n\n\"I'll be here, waiting for you to get back. Okay?\" Trevor mumbled, his voice tightening as he too held back his emotions. Will nodded his head, placing his hand over his father's and returning the squeeze. \n\nFinally, they broke apart, taking deep breaths to steady themselves. It wasn't the place for tears. Tears were for goodbyes, and Will was determined that this wasn't going to be his last goodbye. He was going to do everything in his power to keep his promise. \n\n\"The car's here Will. I'll meet you outside.\" Varek said as he exited the house, heading for the vehicle parked out in front. Will nodded before taking one last look at his parents. \n\n\"I'll be back. I promise. I love you guys.\" Will said, turning and following Varek out the door. Behind him, Trevor held Sarah as they watched their son leave, in their hearts praying that their son would safely return to them. \n\nWill stepped into the hovercar, taking one final deep breath to stow away any leftover emotions. He needed to focus on the task at hand. \"You don't need to come you know?\" Varek spoke from beside him. \n\n\"What?\"\n\n\"I can do this. You can stay here with your parents.\" \n\n\"Wha...no! I need to...I can't live with myself if anything...if anything happened to Thane and I sat behind, not doing anything.\" \n\n\"Are you sure?\" Varek asked one more time. He really didn't want Will putting himself at unnecessary risk. Will nodded his reply, making Varek sigh. He turned to the driver, directing him to their destination. \n\nThe Spire. \n\nVarek fished out a couple of devices from his pocket, holding one out to Will. The devices were small and curved into a C-shape with one side covered in a gel material. \"In-ear communicators, in case we get separated.\" Will nodded, grabbing the device and inserting it into his right ear. \"Testing. Can you hear me?\" Varek spoke and Will heard him both in person and through the tiny ear speakers, nodding his response. \n\n\"So, these tunnels that lead into the tower...\" Will started.\n\n\"Power and sewage tunnels respectively. For obvious reasons, we're gonna use the power tunnel. There is an access hatch in the building to the north of The Spire, we'll enter through there.\"\n\n\"Any security we should be wary off?\" \n\n\"We'll have to steer clear of the street cameras but other than that, there should be no immediately danger within the tunnel.\" Will took that as Varek trying to be as comforting as possible, but this was Dart they were talking about. With him holding Thane there, he must expect that they would eventually try to rescue him, and as such would take every precaution to ensure that they would not succeed. He needed to be prepared for anything. \n\nThe ride to the city centre felt longer than it ever felt before, feeling paranoid that someone might be following them and at anytime, catch them by surprise. Looking out the window ever so often, Will found out it was not the case. Elites went about their daily business, oblivious to the fact that someone was being held hostage in President Dart's tower. \n\nAs the tall structure got bigger as they approached it, so did the nerves Will was feeling. By the time they pulled into the building adjacent The Spire, Will was just about shaking. Adrenaline coursed through his veins, preparing his body for anything that might be thrown his way, but strangely, nothing happened. Making their way into the underground tunnel had been smooth, something Will was thankful for, but not what he expected. \n\n\"I thought Dart would have had the place crawling with security by now.\" Will muttered as they made their way down the tunnel, in the direction of The Spire. \n\n\"It's peculiar yes, but I'm not complaining. Hopefully it's just a case of complacency with him.\" Varek said, slowing to a snails pace. \"We're almost to the force field. Watch your step, wouldn't want to accidentally trip into the damn thing.\"\n\nBoth of them kept their eyes peeled for the distinct mirage effect created by the field, almost indiscernible if not paying attention. It was just then that Will spotted it, the slight warping of the air just a few meters ahead of Varek. He pulled onto the older elite, bringing him to a halt before he collided with the fence of energy. Bending down, he picked up a small stone and tossed it down the path ahead of them. The stone flew through the air before colliding with an invisible wall, a slight sizzle and spark emanating upon its contact. \n\n\"I guess we're here then.\" Varek said as he looked to Will. Now was the moment of truth; the time to find out if their plan was going to work. \"I'll go first, if I end up dying, you need to think about something else.\"\n\n\"No!\" Will shouted, his voice echoing down the tunnel, making Varek stop in his tracks. \"I'll go. If you die, I'm pretty much useless. You on the other hand, will still be able figure out another course of action. I'm not arguing about this Varek.\"\n\nThe commanding tone in Will's voice was undeniable. He wasn't taking no for an answer. Varek frowned at the younger man but conceded to his request. Will turned to face the invisible wall, walking up to the edge of it. The field was almost invisible and gave off no sound, but at his close proximity, he could definitely feel it. It felt like standing next to a statically charged pole, the hairs on his body standing on ends, as he got closer. Under normal circumstances, that alone would have made him back away, but he had a mission. \n\n\"Well, here goes.\" He brought a hand up, bringing it to the surface of the field. The air almost buzzed around his fingers as he approached, setting goose bumps erupting across his skin. With one final breath, he pushed his hand through, bracing for any pain he might have felt, but there was none. He held his hand there, partly through the field, feeling the thin film of static that danced across his skin. It worked. \n\nHe walked through, feeling the wall of static run over his body. As quickly as it came, it disappeared once he made it through completely. Clenching and unclenching his fists, he checked to seeing everything was okay. Not noticing anything wrong, he looked up and saw Varek watching him. He gave a thumbs up, Varek nodding in response as he too took big steps towards the field. \n\nAs Varek passed through, the air sizzled around him, as if the field was only partially allowing him to enter, but still he made it through. \"That felt weird.\" Varek voiced as he stepped through the field and stood next to Will. \"I'm assuming the field must only be barely reading the code from our dead BICs, hence the strange static.\"",
        "\"We can discuss the implications of that later. What matters now is that it worked.\" Will said, trying to remind Varek their purpose of coming to The Spire in the first place. Varek nodded, continuing down the path with brisk steps. The pair continued down the dark tunnel, only the sound of their feet upon the rock floor reverberating through the silence. Will remain on high alert while Varek had his eyes glued onto the blueprint of the building, directing them left, right and centre, to lead them to the centre of the entire structure. \n\nWill kept expecting something to spring up and catch them; security droids, traps or even just an alarm, but there were none. Logically, it should have made him relieved, but all he got was more tensed. The Spire wasn't supposed to be easy to infiltrate under normal circumstances, and with Dart holding Thane there, Will expected security to be multiplied ten folds. Something about how easy it was to get in, made him have a strange feeling in his stomach. \n\nVarek stopped abruptly, causing Will to bump into him. Will jumped back in surprise, not expecting Varek to halt without so much as a warning. He was jumpy enough as it was and he didn't need any more surprises. \"Why did we stop?\" Will asked, looking ahead past Varek, only to see the reason. It was a dead end, the brick wall blocking any further advancement. \"Did we take a wrong turn somewhere?\"\n\n\"No, we're here.\" At Varek's words, Will raised a questioning eyebrow. \n\n\"Um...it's a dead end Varek.\"\n\n\"It looks like that, but...\" Varek ran his hand along the wall next to him, lightly tapping each brick as he went, finally coming to rest on a single brick. The smile that Varek gave was even more confusing. It looked like any other brick, so why was Varek so happy. \"...looks can sometimes be deceiving.\" With that, Varek pushed in the brick, the block receding an inch before sliding to the side and out of view behind an adjacent brick. \n\nBehind it was a small metallic square, with nothing more than two small LED lights and a small port of some sort. \"How did you know that was there?\"\n\n\"It's all in the blueprint...well that, and the brick facade was made of plastic.\" Varek smiled, making Will shake his head at Varek's seemingly too calm exterior. \n\n\"What is it anyway?\"\n\nVarek took out his tablet as well as a cable as he spoke. \"It's one of The Spire's network ports.\" While he spoke, Varek began connecting one end of the cable into his tablet, and the other end into the port. \"While plugged in like this, I should be able to hack into The Spire's systems.\"\n\nWill watched quietly as Varek did his thing, fingers moving so fast across the tablet screen they were a blur. Suddenly a sound came from Will's left, startling him for the second time within the last ten minutes. The once dead end had parted to show an elevator behind it. \n\n\"There, that should lead us right to Dart's quarters, Thane is up there somewhere.\" Varek said, disconnecting his tablet from the port. Just as he did so, the elevator closed. Will looked to his left, trying to spot any sort of button to open the doors. \"Damn, I was afraid of that.\" Varek said. \n\n\"Why, what happened?\"\n\n\"I can only control the system if I'm plugged in. Once I disconnect, the system auto locks out to prevent any sort of unauthorized use.\" Varek said, once again plugging his tablet into the port. \n\n\"Can't we leave the tablet here and go?\" \n\n\"We can, but I don't know what the situation is up there. If anything goes wrong I need to have access try to get us out. I won't be able to do that if I leave the tablet here.\"\n\nAt those words, Will knew what had to be done. \"You stay here then, monitor the situation while I go up and look for Thane.\"\n\n\"What?! Will, no. We need to stick together.\"\n\n\"We don't have a choice Varek. We need to rescue Thane and if that means I have to go up there alone, then that's what we'll do. We'll communicate through our in-ears.\" Varek sighed, knowing that Will was right. There was no time think about something else. \n\n\"I'll do what I can to help you in any way possible.\" Will nodded, turning and heading into the elevator. \"Please...be careful, Will.\"\n\n\"I will.\" Will looked at Varek as the door closed. The look on Varek's face told him just how much he meant to the older man because he saw the exact same look on his parents' faces just earlier that day. There was no telling what was going to happen once Will got up there, and Varek knew it could very well be the day that he lose not only Thane, but Will as well.\n\nAs he felt the elevator ascend, Will took a deep breath, trying to calm himself down. This wasn't the time for emotions; he needed to be focused. So he tried not thinking about Varek, his parents, or that this could be his last few hours alive, putting those thoughts to the back of his mind. He focused on the task at hand, and only one person. Thane. \n\nThe elevator ride felt like it went on forever. Not only was it a pretty high climb to get to the top of the tower, it didn't help that time seemed to stretch when you were counting the seconds go by. With each passing second, Will had to fight the ever increasing nerves that were bubbling within him, seemingly proportional to the height of the elevator. \n\n\"You're almost there.\" Varek's voice came from his in-ear communicator.\n\n\"What am I to expect once I get there?\"\n\n\"I have no idea. Dart's quarters are devoid of security cameras, I can't see what's happening in there.\" Will sighed, already expecting the answer. \"I've been scanning the rest of the security feed and most of the security drones are located near the base of The Spire. That means, if Dart were to call for reinforcements, it would take some time for them to get to you.\"\n\n\"Let's just hope he doesn't already have reinforcements deployed in his quarters.\"\n\n\"Yes, I guess that too. Only one more floor Will, prepare yourself.\" Varek muttered. Will exhaled sharply, shaking away his nerves, his right hand hovering over the whip secured to his belt, in the event he needed to draw it quickly. The elevator slowed, coming to a smooth halt, it's metals door parting with a hiss. \n\nWill peered out of the elevator, looking for any signs of movement, any sound, anything that might indicate signs of hostile forces. There were none. \n\nCautiously, Will stepped out, his feet light on the tile floors to avoid any sound that might alert someone to his presence, his hand standing at the ready by his whip. The room was circular, completely white and strangely, completely empty. \n\n\"Varek, I'm in.\"\n\n\"Okay, according to the blueprint, there should be a room to your left. From the system's maintenance mainframe, I see a surge in power consumption in that area. My guess is that that is where Thane is kept.\" As Will listen to Varek, the frown on his face increased. \n\n\"What room?\" Will asked, confused. All he saw was a single large empty room. No doors anywhere, except the elevator behind him. \n\n\"On the left, the door right next to the elevator.\" Will raised an eyebrow. \n\n\"Varek, there is no door. It's just one big empty room.\"\n\n\"What? No, according the blueprints, your in a hallway after exiting the elevator, with doors on either side and the living room in front of you.\" Varek spoke. \n\n\"Varek, I'm looking at the room right now and I can sure as hell tell you there is no hallway.\" \n\n\"No...it can't be. Something's not right. You should get out of there now.\" Varek shouted. \n\n\"What about Thane? We can't leave him here.\"\n\n\"Will, listen to me! Turn around and head back to the elevator. I think Dart is up to something.\" Will wanted to stay and find Thane, but Varek was telling him to go. He was so close, already inside Dart's quarters and he had to turn back? With a huff, he turned back to the elevator.\n\nA few feet away from the entrance, the doors slid shut. \"Varek, open the doors.\"\n\n\"I...can't. I don't have control over it anymore. Shit...something's wrong, you...\" \n\nVarek's voice cut off abruptly, the signal going dead. \n\n\"Varek?\" Will called out, scared for Varek's safety. \n\nThe sound of slow clapping captured Will's attention, spinning around so fast his head became dizzy. There, standing in the middle of the room, was Dart, dressed in all white, almost blending into the background. \"Hello William.\" Dart laughed, all the while continuing his slow clap. \n\n\"What did you do to Varek?\" Will growled, the sight of the president immediately setting his anger off. \n\n\"Varek is here? Oh good, saved me the trouble of needed to search the city for him.\" Dart said. That brought some comfort to Will, knowing that the disconnection wasn't caused by Dart. \n\n\"Where is Thane!?\"\n\n\"Oh of course, you're here for Thane. Well, it would be rude of me to deny you.\" Dart smiled, waving his hand to the right. Will turned in that direction, seeing the white tiles parting, revealing a hole in the floor. From this hole, two metal beams came up, each with lights running down them. As the platform continued to rise, Will noticed something else, something between the two beams. \n\nSeeing Thane brought emotions running through Will. For one, he was happy that Thane was alive, but then he felt sadness, when he saw the bruises that covered Thanes face. Seeing his semi conscious state however, replaced all emotions with anger towards Dart. Thane hung from his wrists, large bracelets encircling them, floating seemingly in mid air by what Will could only assume were electromagnets. \"Will...\" Thane breathed out, hardly able to talk in his dazed state. \n\nWill began to run towards Thane, wanting nothing but to hold the man close to him, but Dart stopped him. \n\n\"Ah ah ah, don't want to do that. It might be a little...painful.\" Dart smirked. With a wave of his hand, a holographic interface appeared in front of him, much like his special BIC hologram but bigger. At the same time, the force field that surrounded Thane became visible momentarily, looking like an electrically charged egg. \n\n\"What do you want Dart!?\" Will shouted. \n\n\"What do I want?\" The smile on Dart's face slowly fell, replaced by the scowl that could terrify children. \"I want to rid the colony of this plague we call homosexuality.\"\n\n\"So what? You want to kill us?\"\n\n\"Oh William, you need to think of the big picture here. You know, this may have been difficult, tracking you down, but I knew you wouldn't let Thane here suffer, so I guess I have to thank you, for coming to me instead. I've got to say though, I thought you'd have wised up to the idea when you realized how easy it was to get in.\" Will's scowl fell. It was a trap, and they fell right into it. \"You didn't actually think it would have been that easy getting in did you? For your information, I let you in.\"\n\n\"If you wanted to kill me, why not do it if you knew I was coming? Why wait till I get here?\"\n\nThe laugh that Dart let out sent a chill down Will's spine. \"Why? Because I don't just want to kill you, William. I need to plan for the future, make sure something like this doesn't happen again. Back before the migration, scientist gave up in trying to find the 'gay' gene. Well with the technology we have now, I'm sure we can get more conclusive results. That's why I need you both, to find out which parts of your genome code for the same thing. Once we find what makes you tick, we can find a way to snuff it, nip it in the bud.\"\n\n\"So what, you make sure a few elites won't be gay, what about the rest of Lunaris? natals are not genetically altered.\" Will stated, unsure of what good arguing would do. \n\n\"Oh, so naive. Do you honestly think natals are not altered? We've been doing it all along. Sure we don't make you guys all perfect, but we tweak a little here and there.\" Will frowned, unsure if Dart was telling the truth or simply lying. Dart however, apparently caught on to Will's thoughts. \"Oh it's true. How you ask? Well it was quite simple really, and the answer lies on your wrist, all locked away in your tiny BIC. Nano bots, my personal design. Little robots that enter your bloodstream from your BIC. Right from conception, these nano bots do everything that is required, to eliminate any defects that might arise. \n\n\"Of course, there are many other applications. I'm sure you know of the rumor surrounding me being the former CEO of Highland. Well, I'll put those rumors to rest by saying, yes I am. You see these nano bots can do so much more than just alter genetic material. They can even repair cells, essentially making them live forever. Making me, live forever. Of course, no one Lunaris knows this other than me, what with immortality being such a taboo subject and all, but seeing that you're going to take this to your grave, I thought you should at least know.\"\n\n\"You're sick, you know that. No one should live forever, especially not someone like you.\" Will spat out. It all made sense now though, why Dart didn't look elite. Why he had the wrinkles that other elites didn't possess. He wasn't made perfect, just altered and kept alive after the technology allowed it. \n\n\"Oh but I'm not the sick one here Will, you two are. Which leads me to the next use of these nano bots. It seems only logical that with the ability to repair cells, they also have the ability to destroy them, causing cell lysis and leading to spontaneous necrosis. A demonstration perhaps? Maybe on...you?\" Dart smirked evilly, never looking as dangerous as he did just at that moment. Will didn't have the time to react as Dart, pushed a couple buttons on his interface and looked up knowingly. \n\nWill stood there, waiting for something to happen but even after five seconds, nothing. The answer came right to Will. His BIC was deactivated; Dart had no control over him. \"It's dead Dart. You can't do anything to me.\"\n\nDart's eyes narrowed as he realized his plan failed, but he wasn't going down without a fight. \"Oh that's a shame, I was so looking forward to you writhing in pain. No matter though, I think I'll enjoy Thane in pain just the same.\" Will eyes bulged at the statement, watching as Darts finger swiftly ran across his control centre. \n\nThe cry that emanated from Thane wracked Will with panic. Thane convulsed against his restraints, thrashing his body around from the intense pain that was filling his body. Every inch of his body burned from the nano bots slowly destroying him for the inside, the tiny robots breaking every cell they encountered. Seeing Thane tossing around like that made Will want to throw up. \n\nHe couldn't take it. He needed Dart to stop. \n\n\"Stop it! You can have me, just let Thane go.\" Will pleaded, anything to get Dart to stop. \n\n\"It's too late for that now Will. You think you can play god? Only I can do that, and you won't get any kind of mercy from me.\"\n\nThe sounds of Thane's screams pierced every fiber of Will's being, unhinging him slowly. He needed to make it stop, do something to stop Thane's pain. With all the strength he could muster, Will grabbed the whip at his belt, releasing it with one swift flick. Turning the knob to maximum, Will pressed the button on the handle, the whip immediately crackling to life with electricity. \n\nDart watched Will, seeing the look of utter rage written across his face as he reeled his arm back, ready to send it in Dart's direction. Dart on the other hand, had a look of complete calm on his face, the least bit worried that he was about to be assaulted. Will wanted to see Dart convulse under the electricity of the whip, make him feel whatever pain he was causing Thane. \n\nHe wanted Dart dead.\n\nThane's cries fueling his body, Will threw his arm forward with everything he got, sending the sparking whip flying towards Dart. The coil of metal snaked towards Dart, slicing through the air, crackling ominously, ready to wipe the smirk off Dart's face. \n\nThere was a loud crash, as electricity arced from the whip after coming into contact with a solid object, the resulting flash of light blinding Will in the process. Will expected Dart to be on the floor, unconscious, but the old man stood as if nothing had happened. Residual sparks of electricity danced across the invisible egg of energy surrounding Dart, surrounding him in a safe cocoon. \n\nHe was shielded too. \n\nWill assaulted the shield with a barrage of whips, wishing that just one would penetrate the armor, giving Dart his just deserts, but every strike Will unleashed ended in a burst of sparks and light as they collided with the force field. \n\nWill's fist clenched in frustration. \"Wi...Will...can you...hear...\" Varek's voiced sounded through his in ear communicator, static laced. \"Will, are you okay?\"\n\n\"Varek, he's hurting Thane. He has a shield around him that I can't get through.\" Will stated as he darted his eyes over to Thane, his screams abruptly cutting off as the elite lost consciousness. Panic boiled up in Will stomach, praying that Thane wasn't dead. \n\n\"Ah, Varek's back I see.\" Dart said, noticing Will's conversation with himself. \"Almost forgot about him. Well I think I should send a welcoming party for him don't you think.\" Dart laughed, fingers typing on his control centre, sending drones searching for Varek. \n\n\"I'm already working on bringing the shields down.\" Varek spoke. \n\nWill's eyes were locked onto Thane's motionless body, hoping to see any signs of life. Anything, a twitch or something. Something to show him that Thane wasn't dead. \n\n\"Oh he's not dead...not yet at least.\" Dart smirked, drawing a teary eyed glare from Will. \"See Will, it's pointless. All your resistance, your little futile attempts to save dear Thane. It's all pointless. You never had a chance, wouldn't have even gotten into the building had I not allowed it. It's cute, when you actually believed that you had a chance to stop me.\n\n\"I had such high hopes for you too, it's such a shame really. You were the first natal elite transition. You could have been so special, so full of promise. Turns out I was wrong. You're not special, it was simply serendipity that you were thrown into your current life. \n\n\"After all this though, at least you could say that you tried, but then again, who is gonna hear you say it. You're gonna be dead soon anyway, and I will still be here, living forever. Face it Will, you lost. You can't touch me.\" Dart smirked. \n\nWill clenched his fingers around his whip so hard, his knuckles turned white. Anger was pouring out of him, seething with rage, wanting nothing more than to torture the bastard in front of him. He wanted to see the man suffer, wishing that he had some way around that shield. \n\nAs if luck was on his side, Varek screamed into his earpiece, \"Will, shields are down! Shields are down!\" \n\n\"Fuck you Dart.\" Will shouted, once again sending his whip towards Dart. This time though, instead of colliding with the invisible wall, the whip coiled around Darts arm. The man didn't even have time to realize his shield had failed before 1000 volts of electricity coursed through his body, sending his body convulsing before collapsing into a heap on the floor. \n\nWithout a stutter, Will ran to Thane's limp body, hanging against the restraints that held him upright. Recalling his training he received when he interned as a nurse, he quickly brought two fingers to Thane's neck, checking for any signs of a carotid pulse. \n\nThere was none. \n\n\"Varek, he doesn't have a pulse.\" Will cried out, his voice cracking as he battled to keep his emotions in check. \n\n\"Shit...um...I'm gonna release his restraints. Be prepared to catch him.\" Varek said.\n\nWill wrapped him arms around Thane's body, supporting his weight onto himself. \"Thane, please wake up.\" He whimpered as he held his head against Thane's chest. A second later, the restraints unlocked, Will bearing the full weight of Thane as he slowly brought him down to the floor. \n\nAs a precaution he checked for a pulse a second time, hoping that he would feel even the slightest sign that Thane was alive. Nothing. ",
        "\"Will, you need to reverse the nano bots. Dart said that they had the ability to heal cells too.\" At Varek's words, Will turned his attention to Dart'ss console, sprinting as fast as he could to the interface. He stared at the screens, trying to make sense of what was in front of him. To the right, he spotted Thane's vitals chart, seeing the line that correlated to his heart rate. A small comfort to Will was noticing that it wasn't a flat line but a ventricular fibrillation, basically meaning a quivering heart. He wasn't totally gone yet. \n\nScanning the screen, he finally saw the small button at the bottom of the screen, tapping it and revealing a long list of options to perform on Thane's BIC. He spotted the option labeled NB, Will assumed referred to the nano bots, clicking it which led to another list of options. Frustration built up in Will, feeling like this was taking forever, time being a luxury that Thane didn't have.\n\nScanning the list, he finally saw the option labeled repair. He clicked it, looking up to Thane's body, expecting, hoping to see something happen. Thane's body stayed motionless. \n\n\"Shit, I can hear security approaching Will. I don't...\" Varek abruptly cut off. \n\n\"Varek?\" Will asked, but there was no reply. He was alone again. \n\nHe brought his eyes to the vitals chart, wishing that the VF rhythm would correct to a normal sinus rhythm with the help of the nano bots. When nothing happened, he knew he needed to do something; standing there wasn't helping. He had learned a lot as a nurse, surely he could apply what he knew. \n\nRunning over to Thane's body, he knelt down beside him, immediately commencing CPR. He started his chest compressions, giving a couple breaths after each cycle. By this time, tears were starting to flow from Will's eyes, dripping onto the fabric of Thane's shirt. \"C'mon Thane, you can't leave me like this. You can't die on me.\" \n\nChecking Thane's pulse again, he felt himself snapping when there was still none. He cursed the fact that there wasn't a defibrillator around; an AED or something. Like having an epiphany, he remembered the whip lying behind him. \n\nGrabbing the apparatus, he brought it to him, smashing it onto the ground with as much force as possible. The whip broke apart, each segment of the whip disconnecting from the next, wires running though the centre unraveling. He recalled Varek mentioning that the segments comprised of alternating cathodes and anodes, so he figured that if he did this correctly, he could fashion a crude AED. \n\nHe brought two adjacent segments, placing one by Thane's right collarbone, the other at the base of Thane's left rib cage. He dialed down the voltage on the whip, not wanting to overload Thane's body, which could inevitably kill him instead. Taking a deep breath, Will pressed the button on the whip, sending electricity coursing though Thane, his body twitching slightly from the jolt. \n\nDesperation climbed to levels Will had never felt before. He needed this to work. The thought of losing Thane scared Will so much, even more than losing his own life. Checking for Thane's pulse, Will hoped that it worked, wanting only to be able to feel a pulse, but still, nothing. \n\n\"No, c'mon Thane. Fight for me.\" Will cried, turning the knob on the whip, increasing the voltage, pushing the button once again, sending Thane's body jerking slightly. \"You have to come back. \n\n\"I...I love you.\""
    ],
    "authorname": "musicfreak",
    "tags": [
        "gay romance",
        "sci-fi",
        "science fiction",
        "hunks",
        "coming out",
        "love",
        "acceptance",
        "young love"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/the-lunar-life-ch-10"
}