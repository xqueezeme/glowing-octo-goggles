{
    "title": "The Old Man and the Sea",
    "pages": [
        "I honestly don't know why I've gotten off on this Hemingway kick. And, I can't think of any story that would be harder to adapt than the Old Man and the Sea. Nevertheless, I like writing challenges. So of course I had to try it. \n\nThis is a long piece. I needed the room to develop the story. I could have placed it in \"romance\", or even in \"supernatural\" but I enjoy the comments that I get when I post in the fiery cauldron of \"loving wives\" so I am putting it there. \n\nOne bit of housekeeping, I appear to have had a problem with my profile. Which explains why I stopped getting e-mail in the early fall. I apologize to anybody who wrote to me and didn't get a reply. I was not intentionally trying to be an asshole. I do that very well without any conscious effort on my part. \n\nIt's all fixed now and I will try to answer any message sent to me. I hope you enjoy - DT \n\n*****************\n\nKey West Today\n\nI was drinking a Papa Doble and sitting in Captain Tony's thinking about life. The hundreds of autographed bras hanging from the ceiling ought to tell you all you need to know about the ambience of the place.\n\nThe building itself has been everything from an ice-house to a whore-house. \n\nThe current incarnation dates back to Hemingway's day. It was originally called Sloppy Joes. But the landlord raised the annual rent a buck. \n\nSo the owner took the entire saloon, lock, stock and name, down Greene Street to the present location. \n\nThe legend goes that Hemingway stayed put in the original building, which eventually came to be named after Tony Tarracino who was an even bigger Key West character than Ernie. \n\nThe legend also has it that Martha Gellhorn paid the bartender twenty bucks to be introduced to Hemingway there. \n\nThat led to a flaming affair, while the two of them were covering the Spanish Civil War. \n\nAnd that affair was what ended Hemingway's marriage to his second wife Pauline Pfeiffer, who had stolen him in turn from his first wife Hadley Richardson. \n\nSo obviously the 1960s didn't invent fucking around on your spouse. \n\nI was living on my boat, which was tied up at a slip down at the Conch Harbor Marina. I chose that spot because it was easy walking, or sometimes crawling distance from my customary watering holes up and down Duval. \n\nThe boat itself is a C&C 40 which is a handful for solo cruising. But I am an excellent sailor and I wanted the room. \n\nI brought it down the Atlantic Inter-costal three years earlier. And short of a Cuban invasion I was planning on staying put. \n\nMy buddy Buster was my sole companion. He also happens to be my best friend. \n\nHe weighs about 120 pounds and he looks like his former job was guarding the gates of Hell. But he is utterly sweet, gentle and loving beneath his scary exterior. \n\nThe best part about my big smelly buddy is that he would never leave me. Which is more than I could say about any of the women in my life.\n\n________________________________\n\nParadise Lost\n\nIt all started at an elite Midwest University. I didn't get into that place because I was rich or smart. I got into it because I was very fast in the water. \n\nI would have rather been outstanding in any other sport. But unfortunately I was a fish. So I spent hours marinating in chlorine, building up long smooth muscles that made me look streamlined, not powerful. \n\nI wasn't a lion. I was a sea-lion.\n\nAnd because the sport of swimming requires extraordinary physical endurance I had to spend every waking hour stroking up and down a pool while some sadistic bastard yelled insults at me. \n\nHe called it \"coaching.\"\n\nI have to admit that the sport ensured that I didn't carry an ounce of fat. But at six four. I was built less like a Greek god and more like a human torpedo. A\n\nnd since the aim was to reduce drag I had in effect also invented the skin head.\n\nNeedless to say I was not likely to be voted king of the homecoming court. Or even find a date.\n\nScholarship athletes were all housed in one dormitory. And my luck being what it was, I drew a football player. \n\nStory of my life. I could have gotten a fellow swimmer, or a soccer player, or a gymnast. Or anybody else besides an arrogant asshole. \n\nBrad was not hard to live with. That was because he spent his days hanging around at the local jock fraternity with his fellow Neanderthals. \n\nBut when he WAS around the room he treated me like an inconvenient piece of furniture. I especially enjoyed the nights that he decided to get laid. \n\nVery early in our association he informed me that if he had his tie hanging on the door I was not to enter. So most nights I would sit and study in the common room until 2 AM, while the moans and shrieks wafted down the hall. \n\nAnd then I was allowed to fall asleep to the pervasive odor of pussy. \n\nHis argument was that he would do the same thing for me. Which was a laugh since I had never actually had the pleasure. \n\nLike I said, being a gangly human torpedo has its drawbacks in the sexual experience department. \n\nI had a few girls who would condescend to go out with me. But there were rarely second dates. I am not sophisticated. And I had nothing to recommend me beyond the fact that I was a scholarship jock. \n\nThe problem was that I was in a sport that was anything but glamorous.\n\nEvery Saturday afternoon, Brad, who was the university's quarterback, would do heroic things in front of 100,000 screaming fans. \n\nYou watch swimming every four years at the Olympics. It mostly involves people standing around. And it typically draws as many viewers as the bike racing. \n\nPlus, the only thing that anybody sees is splashing and the occasional view of a face frantically gasping for air. \n\nPerhaps you can understand why Brad was fucking a lot of hot coeds. And my romantic moments were limited to my hand. \n\nThe one good thing about my situation was that I was never under the illusion that I would be doing anything other than going to work after college. Swimming was just a means to an end. So I hit the books, while Brad spent his time socializing. \n\nBrad, was thinking about the millions he was going to make in the NFL. Needless to say he ended up selling life insurance.\n\nToward the end of my junior season I came back from the library. And there was the ubiquitous tie. \n\nI had a meet the following day. And I was not in a mood. So I banged on the door. \n\nThe urgent moaning stopped and a couple of seconds later I heard Brad's voice yell, \"I'm busy. Go away!!\" \n\nI was pissed. So I yelled right back, \"I have a meet tomorrow and I need some sleep. Take it someplace else. You have five minutes.\" \n\nI heard a questioning female voice and grumbling from him but it sounded like they were getting their shit together preparatory to putting it on the road. \n\nSo I just leaned on the wall and waited. \n\nDisheveled doesn't begin to describe what emerged. \n\nBrad gave me a pissed off look. I didn't care. I am a half-a-head taller than he is. So it was never a matter of physical intimidation. \n\nI said as sarcastically as possible, \"thanks' and started into the room. \n\nThat was when I really looked at who he had been fucking. \n\nMost of Brad's conquests are the usual sorority skanks and football groupies. They wander the campus in herds. Every one of them is hot. But their faces tend to blend together into a universal blur of \"pretty\". \n\nThis was a completely different breed of cat. \n\nShe had thick copper hair that disappeared down her back in healthy waves. The totally perfect state of her hair was amazing in itself, given the fact that she had been getting seriously fucked a mere five minutes earlier. \n\nI think it was her eyes though. \n\nI am not usually a fan of pure redheads. That milky skin and all of those freckles scare me. But when I looked into her superb emerald eyes there was real heat and intelligence. She almost seemed amused. \n\nShe gave me an appraising nod. Then she and my roommate executed an archetypal walk of shame toward the elevator. I was sure my roomie was headed for Plan-B, the jock fraternity. \n\nI fell asleep to the accustomed smell of sex. \n\nIt was more disturbing than usual. It must have been her pheromones. But I almost felt jealous of the moron. \n\nI didn't run into her again until the last few days of that semester. \n\nI was at the classic fraternity kegger. I lived in the dorms because I was on scholarship. But the fraternities like to have varsity athletes around as display items. And there were even a couple of houses that courted swimmers as affiliate members. \n\nNeedless to say they were the minor fraternities. Not the prestigious jock houses, or the snooty frats that my social betters hung out at. \n\nI was standing in my usual party position, which was holding up a wall with my back. \n\nI had one of those 16 ounce Solo cups full of a yellow foamy substance, which I was praying was beer. It was hard to tell. \n\nShe walked in with some species of frat-rat. \n\nI had only gotten a passing glance at her as she and my roomie exited the building. But I was impressed by her twitching buns. Now that I had a chance to fully check her out I was blown away. \n\nShe was gorgeous. But then again, most of the coeds you see around a frat party are by-and-large attractive. \n\nNevertheless, it was something in this one's manner that set her apart. She radiated total self-assurance and absolute femininity in the way that she walked and held herself. \n\nThen she started to dance with the dude. \n\nShe was only about five foot two but she had extraordinary muscled legs and very tight round hips. The rest of her was lithe and nubile but it was that perfectly proportioned face and those sparkling green eyes that had me mesmerized. \n\nA cooler guy might have gone over and tried to cut-in. But I am socially retarded, hence my little virginity problem. So I just stood there staring at her. \n\nI believe that women are equipped with some sort of special antenna that tells them when they are being scanned. \n\nShe was in the middle of putting her arms over her head and grinding her pussy on her date. It was like she had lifted the move out of a \"Step Up\" movie. \n\nThe date looked blissful to say the least. \n\nAnyhow, she glanced up alert, like she had sensed something, and looked directly at me. \n\nI was not looking into the typical vacant coed eyes. She knew exactly what she was doing. She was like a cat toying with a mouse. \n\nSomething passed across her face. I am sure she was used to being stared at. So it wasn't the gaping. But I got a sense that I had disturbed her. \n\nI am not socially equipped to deal with angry females. If she was going to give me outrage I was going to get the fuck out of there. \n\nSo I circulated out of the main room and moved to a chair in a little side room. Later in the evening that room turns into the make-out spot so it was dark. The only light came from the open door. \n\nThe night was still young so it was just me and my beer at that point. \n\nI was trying to decide what my next move ought to be when she poked her head around the corner. It gave me the impression that she was looking for somebody, probably her date. \n\nNo such luck. \n\nI was sitting there doing my best \"lone wolf\" imitation. When she spotted me. Then she very purposefully marched over to confront me. I rose from the couch. It was a protection move. \n\nShe stood in front of me in that classic aggressive female posture; feet apart, with hands on hips thrust slightly toward me. \n\nShe silently looked me up and down. Actually it was kind of funny. I was a full 14 inches taller than she was. So she was checking me out like she was appraising a horse. I almost expected her to pry open my mouth and count my teeth. \n\nNot a word was said. \n\nThen she spun around and marched out of the room leaving me standing there gawking. I was totally blown away by the power and spirit in those eyes.\n\nI eventually got my act together and followed her. But when I got into the main room she was back to dry humping her date. I headed home.\n\nI had never met a female who troubled me so much. I mostly go with the flow. But I couldn't stop thinking about her. \n\nSo the next day I asked Brad.\n\nI said, \"I ran into that hot little red-head you fucked last month. What's her story?\"\n\nHe laughed and said, \"She's a freak. That's her story.\"\n\nI said, \"Freak? What do you mean by THAT? Is she kinky?\"\n\nHe said in his usual dismissive tone, \"Any woman who isn't grateful after I've fucked her is a freak. \n\n\"She was an absolute animal when we were together. Then when I called her up for a rematch she totally blew me off. It was like I was bothering her.\"\n\nSince that is the way Brad treats all of his conquests I wasn't sure who had conquered who.\n\nI said, \"Do you know her name?\"\n\nHe said, \"Kari Winter, but you aren't going to have a chance with her.\"\n\nI said, \"Why not? I know I'm not YOU but I have had the occasional woman.\" \n\nI was lying of course.\n\nHe said, \"Because she only dates awesome guys like me, not dweebs like you, no offense.\"\n\nI said, \"None taken.\" \n\nWhat could I say? Brad was a conceited prick. I would have done better arguing with an orangutan.\n\nHe said, \"She's probably fucked eight guys that I know of beside me. And everybody says that she's the hottest piece of ass they've ever had. She is way out of your league.\"\n\nI smiled sardonically and said, \"Just asking.\" And I filed Miss Kari Winter away in the big pile of women who I knew to \"avoid at all costs.\"\n\nEarly in my senior year I was stepping up on the blocks for the 200 fly, which is definitely NOT my best event. \n\nAs I customarily do I looked into the sparse crowd. \n\nAnd who should I see sitting there but Kari Winter. \n\nShe waved. \n\nI false started. \n\nActually I more-or-less fell face first into the pool.\n\nAfter that ignominious beginning I dragged myself back on the blocks and set an individual, pool and conference record. \n\nI knew what the motivation was. But there was no way I was going to admit it. \n\nOf course, I had to acknowledge her presence later that evening. \n\nI came out of the locker room and she was standing there. I am not totally dense. I knew that I would have to say something. So I walked over toward her.\n\nShe turned and sashayed away before I got there. \n\nAs she turned to walk away she said over her shoulder, \"Follow me.\" \n\nThere wasn't the slightest question that I would NOT follow her.\n\nShe was wearing a pair of beaten out jeans that probably cost 300 bucks to get the tears in the right place. \n\nThe most strategic ones were the 4 inch horizontal rips right at the place where her big round butt cheeks joined her muscular legs. \n\nI followed along watching those rips move up and down. It was hypnotic.\n\nWe were walking into a little ornamental park between two of the dorms. She got to a secluded bench and sat down. I came up and stood in front of her. \n\nIt was one of those unspeakably beautiful early fall evenings in Michigan. Still warm with a soft breeze wafting the scent of burning leaves. I could hear the katydids and crickets busily chirping in the manicured shrubbery and smell the freshly turned earth beneath it. \n\nI looked at her inquiringly. She said, \"Sit down, we need to talk.\"\n\nI looked at her even more questioningly and said truly puzzled, \"Why?\"\n\nI was aware that the woman was campus royalty. Anybody who has ever attended college knows what I'm talking about. 20,000 students knew her name. Every female wanted to be like her. And every male just plain wanted to HAVE her. \n\nI sat.\n\nShe said in a reproachful voice, \"Are you gay?\"\n\nI spluttered, \"WHAT??!! OF COURSE NOT!!\"\n\nShe said, \"Then why haven't you made a play for me? Why haven't you asked me out?\"\n\nThis conversation was a waste of time. \n\nI cut right to the chase. I said, \"Women like you don't date guys like me. You're miles out of my league and we both know it. So why should I give you the satisfaction of turning me down?\"\n\nShe looked disgusted and said, \"I'm supposed to decide that - not you. What makes you think that I wouldn't want to go out with you? I've been attracted to you from the moment we met.\"\n\nOkay, so where was the camera? I knew that I was on an episode of Punk'd.\n\nNeither Kutcher nor Goldberg stepped out of the bushes.\n\nKari just kept on talking. She said, \"I assume you know my reputation? The moron that you are living with must have filled you in about me. \n\n\"I admit that I have kissed a lot of frogs over the past four years. And so far I haven't found any princes. Just randy frat boys and jocks. \n\n\"I was hoping that maybe you'd be different.\"\n\nShe actually looked vulnerable. That had to be an optical illusion. \n\nI said, \"Brad's a well-known dumb shit. I wouldn't listen to a word that he said. \n\n\"But I also know that you are considered to be the hottest female on campus. You could have any guy eighteen to eighty in the surrounding tri-county area. \n\n\"So what is it about me that you find so interesting?\" \n\nMy tone of voice conveyed my ultra-skepticism.\n\nShe said, \"You are a star athlete but you don't seem to know it. You spend your time in the library preparing for life, not going to parties. You are big and good looking. And I like completely bald men.\" \n\nThe last was said with a kittenish smile. \n\nI knew that everybody called me the \"bald eagle\" behind my back because of my big nose and shaved head.\n\nShe added, \"What isn't there to like?\"\n\nWell, that was an astonishing state of affairs. \n\nI said, \"Let me get this straight. You want to try out a real boy-girl date because you think I'm interesting? \n\n\"I know that sounds a little self-doubting but I am still not believing what I am hearing here.\"\n\nShe looked appraisingly at me and said with irony, \"And, the boy is delightfully insecure.\"\n\nI took a good look at her. From the top of her thick copper hair to the tip of her bright red painted toenails, this woman was a movie star. \n\nNotwithstanding her legendary performances in bed she was also clearly smart, confident and very comfortable in her own perfect skin. \n\nWith all of that faultlessness the only question was, \"Why me?\" \n\nShe was looking at me quizzically, like she wanted an answer.\n\nSo I thought to myself, \"Stop being such a weenie and just ask her out!!\" \n\nI sucked it up and said, \"Okay, let's go out. I'll pick you up tomorrow and we can try this on for size. \n\nBut I am warning you that the instant you don't show me the proper respect I am taking you home.\"\n\nShe said a little irritated, \"Respect? What does that mean?\"\n\nI said, \"You know what I'm talking about. You are going to be hit on multiple times while we are together tomorrow. When you do, I want you to remember that you are with me.\"\n\nShe actually looked impressed. She said, \"So no flirting or leading other men on, I promise.\" And she gave me an impish grin.\n\nI picked her up at her apartment the following evening. She had rich parents and so she lived in an off campus apartment by herself. \n\nI didn't want to think about the events that might have gone on in that place. \n\nI wanted to do my happy dance. Not be eaten up by jealousy even before I rang her buzzer.\n\nShe greeted me at the door. She was in a little clubbing dress that would have been demure on my sister. But the way she looked in it set off indescribable waves of yearning in me. \n\nShe is not well endowed. But what she had was full and neatly gathered in two beautiful little mounds on her chest. \n\nNevertheless, her long waist and lithe round hips and perfect muscular legs were all anybody would notice. And the dress displayed her assets without looking the slightest bit slutty. \n\nHer four inch heels only made those legs look rounder and fuller. \n\nBut of course it was her face and those eyes that captivated me. ",
        "She said lightly, \"Are you going to stand there gawking, or are we leaving?\" \n\nI said, \"We're leaving but you are absolutely stunning.\" \n\nShe dimpled - God! She even had cute dimples - snatched her little clutch purse and we left. \n\nWhat can you say about the evening when you meet \"The One\"? \n\nWe talked all the way to the restaurant. It turns out that she was the daughter of two LA lawyers and she was at the University to do the full Law School route. \n\nShe also turned out to be very smart, intellectually curious and she had a fabulous sense of humor. \n\nShe said that she dated slugs like Brad because they were the only guys who asked her out. \n\nUnfortunately I could see what she was talking about. I'm a normal guy. And I wouldn't even consider approaching a woman like her, let alone dating her. \n\nShe said that any guy who she DID go out with got one date. And if they were not interesting or sufficiently clever then that was it. \n\nWhich explained her one time with Brad. \n\nShe said that the kind of date that she had with Brad didn't happen often. But it DID happen. Which was why she had run up the score with all of the local studs. \n\nI wasn't buying any of that. It sounded like a rationalization. \n\nSo I said, \"Do you always fuck them on the first date?\" I was being an asshole but I was certain that I would never see her again.\n\nShe looked a little hurt and said, \"I know it seems that way. But I could go out with a different guy every day of the week and twice on Sundays. \n\n\"Brad is yummy and he was very insistent. Plus I was drunk. I would never have fucked him otherwise. He just doesn't cut it in the grey-matter department. I didn't even consider a second date with him.\"\n\nI kind of understood all of that. Kari was just THAT attractive. And she was white-hot. You could tell that in every move she made. \n\nHer sensuality was obvious. Even in the simple things that she did from getting into the car to the way she held the menu at dinner. \n\nA lot of women are either neutral about sex, or they don't like it. Kari radiated total mastery of the bedroom arts. And there was nothing about the act of sex that frightened her. She was supremely self-confident.\n\nI could see where lesser women would want to burn her at the stake\n\nIt was obvious to both of us that we were connecting on a lot of levels. She was such a delightful companion that her extreme beauty and sexuality quickly faded into the background. \n\nWe were both dedicated students. We both had a long term perspective on life. We cared about serious matters. And most important of all Kari loved to laugh. She was openly passionate in the way she enjoyed every aspect of life. \n\nI couldn't have asked to spend the evening with a better friend, or more interesting companion. And for a short time I believed that she felt the same way. \n\nThat was until Rayford Johnson dropped by our table. He was frat-boy extraordinaire. Alpha dog in the pack of self-important over-entitled douchebags who inhabited that school. \n\nAnd he made it obvious that he had a long and very sweaty history with Kari.\n\nHe came smirking up to the table and without even looking at me said, \"Hi, Kari, we're having a party at the house tonight and there are a lot of guys who would LOVE to see you there.\" \n\nI didn't have to be a savant to read between THOSE lines. The top off my head almost blew off like one of those cartoon thermometers. \n\nShe gave me a quick secret glance and then looked up at him bewildered, like she couldn't place him. \n\nFinally, she got one of those head-smacking d'oh looks on her face and said, \"Oh yes, your name is Ray isn't it? \n\n\"What would make you think that I would want to waste my time with the boys in your silly little fraternity Ray? \n\n\"When I can be out with a REAL man? \n\n\"Ray meet Danny.\" \n\nI rose to shake his hand. The one advantage that I have over most guys is my height. And I was well over a half foot taller and maybe 30 pounds heavier than he was, just big enough to be intimidating. \n\nI stuck out my paw in a friendly fashion and said, \"Pleased to meet you Ray. I'm sorry but I'm planning to take up Kari's time from now on.\" \n\nWhere in the heck did THAT come from?!!\n\nHe looked me up and down and sneered, \"All you're going to do is join a long line of guys who have fucked her.\" \n\nThen without shaking my hand he spun and walked away. He was pissed. How delightful.\n\nI sat back down and said as sarcastically as I could, \"Nice fellow.\"\n\nIf Ray was pissed, Kari was absolutely foaming at the mouth. \n\nShe said, \"He's a total asshole. I don't know what I was thinking. Like I said, I have kissed a lot of frogs looking for a prince. That one was more like a horny toad.\" \n\nThen her face softened. She reached across the table and took my hand. \n\nShe said with genuine emotion playing across those incredible emerald eyes, \"And I think I've finally found him. Can we skip the dancing and just go back to my place?\"\n\nWhich created a major dilemma. \n\nI'm not bad looking and I am tall and well-built if you like them aerodynamic. \n\nYou almost wouldn't believe that I was a 22 year old virgin, would you? \n\nBut as I said, I was either studying, or swimming and I am not exactly the most self-confident guy in the world. Especially when it comes to women. So I had never shed my amateur status.\n\nI am sure that Kari would expect a performance similar to what she had gotten from the dozen or so guys who had taken advantage of her gorgeous body. \n\nAnd I didn't even know how to step out on stage, let alone act. \n\nWe went back to her place and she got me a beer. We sat on the couch in her living room and talked some more. She kept looking expectantly at me.\n\nI finally decided that it was time to lay my cards on the table. \n\nShe had been brutally frank with me. And I needed to give her the same respect by confessing my total LACK of experience with no less ruthless honesty. \n\nI said, \"I know what you are thinking. And I have a secret that I have to get off my chest first.\" \n\nShe looked at me in horror. It was like she thought that I was about to confess that I really WAS gay. \n\nI moved closer to her on the couch and took her little hand in both of mine. I hesitated. I didn't want the time with her to end. \n\nIn the meantime she was backing away with anxiety written all over her face. I could see that she was thinking that I was going to tell her that I'd like to see her hogtied in a rubber suit, or something like that. \n\nI said,\" I hate to admit it. But I'm still a virgin.\"\n\nI could tell by her response that was the last thing she expected me to say. \n\nI probably could have announced that I was really from the planet Hoth and I would have gotten a less surprised reaction. \n\nHow could a modern college male make it all the way to his 22nd year and not have had sex at least once? I was mortified.\n\nThen she began to laugh. First the mirth came into her eyes. Then it took over her entire face. And finally her whole body was convulsed in uncontrollable paroxysms of laughter.\n\nOkay, that was roundly insulting!! I didn't come here to be laughed at. \n\nI started to rise in a huff. But she grabbed my hand and pulled me back down. \n\nI was off balance so I fell face first on her big couch. \n\nAs I fell, SHE was arranging herself so that I would fall on top of her. Her legs were spread incredibly wide. \n\nI immediately pushed myself up on my arms to take my weight off of her. In the meantime she was frantically scrambling around with her hands in the area of my zipper. \n\nThe next thing I knew I felt an extremely hot and wet sensation on a part of my anatomy that had never experienced such an amazing, out-of-this-world feeling before. \n\nShe grabbed the back of my head and pulled me down to an open mouthed kiss that duplicated the wonderful phenomenon that I was feeling at the other extreme. It was like she was totally open to me on both ends. \n\nI had watched enough porn that I had the process in concept, if not actual practice. So I began the age old motion stroking in and out of that fiery three centimeters of paradise. She went absolutely nuts.\n\nShe threw her head back, mouth wide open making extreme effort noises. It was like she was choking to death. \n\nThen she let out an unearthly cry and threw her legs around my hips and her arms around my neck in a way that she was plastered to me from shoulder to pussy like a spider monkey.\n\nI don't use a word like \"abandoned\" very often. But that was how she gave herself to me. \n\nI was probably lucky that I had never had sex before because I didn't know what to expect. And the fact that I wasn't distracted by how she was reacting slowed my own release a lot. \n\nMaybe ALL women acted like that? \n\nOn the other hand Kari would buck shout, and quiver wordlessly. Then she would go right back to throwing her hips up at me. \n\nThat motion is very similar to what you do in the water and I have the endurance that you get from all those years of doing it. \n\nSo I just kept on-and-on and she kept bucking, shouting and quivering. \n\nI finally looked at her face. She had the drawn expression of somebody who was s right on the ragged edge of losing it. She was exhausted. \n\nShe started saying with urgency in her voice, \"Cum Danny, You have to cum in me NOW. I can't take it any longer. Please cum. PLEASE!!\" \n\nThose must have been the magic words because what followed was an experience that made all of those lonely nights of self-flagellation seem like a firecracker next to the detonation of a hydrogen bomb. \n\nI pounded on her like I was trying to break her. She took me to the hilt making hoarse grunting noises as I came. \n\nI rolled off her the moment I got some rationality back. I am easily 100 pounds heavier and well over a foot taller and I didn't want to smother her.\n\nShe was lying on her back, legs spread wide and pussy leaking cum like a river. \n\nThat sight would have appeared wanton except she was out colder than that proverbial mackerel. I thought, \"Great, I've met the girl of my dreams and killed her!!\"\n\nI rushed frantically into her bathroom and got a cold wash rag. She was still just lying there. \n\nHer delectable chest was rising and falling with great intensity and her nipples were like little pink acorns. I considered that a good sign. \n\nI pushed her gorgeous legs together, while examining her fertile hips and hard stomach. \n\nI'm a GUY. I notice those things. \n\nAnd I began to gently bathe her forehead. She came back to me slowly, like she had been someplace long ago and far away. \n\nThose incredible emerald eyes focused and then she gasped. She said with wonder in her voice, \"What did you do to me? I have never experienced anything like that in my life.\" \n\nI shrugged lamely and said, \"I don't know. I've never had sex before.\"\n\nShe smiled weakly and said, \"Well whatever you did I want you to do it to me over and over again. When you make a woman cum like that, she wants to be yours for life. \n\n\"Now lie down here with me and hold me. I obediently turned on my side and she snuggled those big round rock hard buns into me, she wrapped my arms around herself and went right off to sleep.\"\n\nI lay there for a little while sensing her enticing smells and feeling her little jerks as she slept and I was scared shitless. \n\nThere would never be another woman for me. But I had only known her for a day and I had no idea what to do next.\n\nThat was answered for me the next morning. \n\nI awoke on a bright sunny fall morning. Her apartment was the ground floor of one of those old mansion-like houses in town. So the windows were 19th century floor to ceiling large, not the dinky little openings you see in modern houses. \n\nAnd the sun was just streaming into the room.\n\nShe was lying in my arms in the same position that I had been holding her when we fell asleep. \n\nBut there was a new feature. I was sporting a hard-on that must have been using up 90% of the blood in my body. And it was jammed in the crack of her exquisite round ass.\n\nI was trying to figure out a way to shift her onto the couch without waking her up when she moved. And what had been an embarrassing poking of her butt-crack became an extremely stimulating poking of her nether lips. \n\nI swear she was sound asleep but as soon as I touched the entrance to her hole she moaned loudly and said sleepily, \"Ahhhh yesss that's it!! Fuck me!!\" and she arched her back, pushed her ass at me and I was suddenly hilted in a very hot and totally wet pussy. \n\nThat produced a snort of epic proportions and her head turned back toward me eyes wide open in surprise. \n\nShe moaned loudly and threw her top leg over mine and her body back against me so that she was lying mostly on top of me. \n\nThen SHE began to thrust herself back against me in a frantic bucking motion that ended perhaps 30 seconds later in her loudly yelling, \"Oh God YESSSSSS!!\" \n\nAnd the high frequency quivering started again. It was like she was being electrocuted. As she worked through her orgasm her butt cheeks were frantically clenching on top of my lower stomach and her passage was fluttering with little nips and ripples. \n\nFinally she just lay limply on top of me panting. \n\nI was still hard as a rock but I had no desire to cum. I just wanted to worship her. I couldn't imagine the kind of inner fire and feminine spirit that could generate that kind of sexuality. \n\nI slowly withdrew. She moaned loudly all the way out.\n\nShe rolled off me to lie on her back on the broad couch. I propped myself up on one elbow. \n\nI looked into the perfect face and she was looking back at me with apprehension. \n\nI said, \"You are a dream girl, far more wonderful than I deserve. I'll understand if this is the only night. Since I will cherish what we shared for the rest of my life.\"\n\nShe looked at me like I was an idiot and said merrily, \"What gave you the idea that you will EVER get away from me? YOU have no choice in this matter. \n\n\"I have finally found my prince. You are mine and I will never let you go. We are going to be together forever.\"\n\nI know it was na\u00efve and impulsive but we were kids. And we absolutely believed that we would die in each other's arms. \n\nI never spent another night in the dorms. She had a lovely spacious place and I just packed my things and moved in that same day. \n\nWe married at the end of the semester and we spent the following three and a half years living a blissful married life.\n\nI would occasionally run into Brad on campus and he would give me a look like he couldn't figure it out. \n\nBrad couldn't figure most things out so that was not rare. \n\nI cared not a damn that he and a dozen others had fucked my wife. I knew that I was the last man who was going to fuck her. \n\nHow did I know that? \n\nShe spent our entire time together trying to find better and more creative ways to show me how much she was mine. \n\nFor instance, after we were married I still had to travel overnight for away meets. \n\nBy all rights Kari should have stayed home and partied with her friends. \n\nBut she wanted to show me that she was devoted to me and me alone. \n\nSo she spent her parent's money to travel to watch me and stay in the same hotels. The coaches patrolled the halls. Consequently we were chaste the nights that we were on the road. But it was the thought that counted.\n\nWe graduated together and celebrated her admission to law school with two weeks in Jamaica. \n\nBecause she was still in school I decided to go all the way in my field too. So, I got into a doctoral program. \n\nWe attended class all day, studied all evening and fucked all night. \n\nShe was my princess and I was her prince. \n\nThat was why it was so profoundly tragic when she was killed two days after she graduated. \n\nYou never think about the anguish that any given day might bring. \n\nYou kiss your beloved wife as she goes out the door for her daily run. And the next time you see her is in the morgue. \n\nAll of that beauty, all of that energy, all of that potential and all of that love of life lying broken on an uncaring slab. \n\nThat's the way things really work. There are never any guarantees. \n\nOne-in-a-million circumstance - perhaps. But that's life. We ping off each other like so many random billiard balls. \n\nSometimes you win. Sometimes you lose. Sometimes you lose big-time. \n\nHe was a drunken package delivery guy who claimed he didn't see her. His blood alcohol level was 0.19. He did three and a half years for vehicular homicide. And I got $1.6 million dollars in blood money from his company. \n\nThus ended my happiness.\n\n________________________________\n\nMarch or Die\n\nWe buried her in a beautiful little spot on a hill in southern California. It was near where her parents lived. I flew out with her and I went through the whole tear filled ceremony. \n\nDanny Jones was nothing more than a ghost now. I might as well have been buried with her.\n\nHer parents were sympathetic, nay loving. They knew what we meant to each other. But they had their own special grief. Kari was their only child, their hopes, dreams and immortality. \n\nThey had the same haunted, despairing, tortured look that I had.\n\nI plodded along after that because life is ruthless. You either march, or you die. \n\nI was afraid of dying so I marched. Albeit VERY unwillingly.\n\nNonetheless, all of the fairy tale certainties were behind me now. \n\nI had honestly believed that my life would work out. Through fantastic good fortune I had met and married my soul mate. Our children would be beautiful and our lives would be fulfilling. \n\nBut the Gods laugh at human pretense. \n\nInstead, I fell through all nine levels of Dante's hell.\n\nLooking back over 50 years I NOW know that you move through a series of distinctly separate rooms in life. \n\nThe room you are in is your present reality. And it seems like you have always been there. Even if the room that you were FORMERLY in was poles apart. \n\nIt isn't a matter of forgetting your past. It is more a case of the demands of human existence perpetually overwriting your situational memory. \n\nThat was the case with me. I had closed the door of paradise. Never to go back in my lifetime. \n\nBecause I had nothing to live for I threw myself into my work. Swimming had taken up a lot of time when I was an undergraduate. As a result I did okay academically, but not great. \n\nNow that I had all the time in the world and nobody to share it with I found that I was exceptional. \n\nKari was never far from my mind. So I dedicated the things that I did in life to her. Thus, after I got the Doctorate I did what all good little PhDs do. I started trolling for faculty jobs. \n\nI didn't need to work. Between insurance and the settlement I could have lived comfortably on the interest. It was just that I was agonizingly alone. I HAD to do something to keep my sanity. \n\nGiven the quality of my degree and my research I had my choice of places. But I thought that I could make the most difference inside the Beltway. So I eventually took a position at a university in Fairfax Virginia.\n\nEvery good school demands the traditional tenure death march. I did that. And by the time it was granted I was 35 years old. \n\nI recognized that I would be doing the exact same thing, year-after-year, for 40 or 50 years. Contemplating the emptiness in front of me was like looking at a trek through the Gobi Desert without water.\n\nThey say that you actually die when the last living person forgets you. \n\nThat's why people like Alexander the Great and Julius Caesar have \"The Immortal\" stuck in front of their names. \n\nMy only goal was to keep Kari's memory alive. \n\nShe was never far from my thoughts. Although my actual life passed in a blur of mundane. \n\nNo matter where I was and what I was doing she was still very much alive in the world I lived in. ",
        "I would sometimes even talk to her, just like she was standing next to me. \n\nI am sure that the tall, unmarried Professor with the odd habit of mumbling to himself caused the occasional rumor about my sanity. But I didn't care. She was always with me, and I felt what I felt. \n\nThen one day, after twenty-four long years I felt differently.\n\n_________________________________\n\nHumpty Dumpty\n\nIn my forty-ninth year I had transitioned from a young muscular slim, to a middle aged still-in- very-good-shape slim. \n\nI had grown my hair out as soon as I finished competing. And it was kind of unkempt and shaggy. \n\nIt was ironic that I had gone from being totally bald as a young man to a thick head of dirty blond hair in my middle age. \n\nI still swam at the University pool. But it was nothing like I did when I was a kid. I was simply trying to stay in shape. \n\nOne day I was stroking along in a relaxed backstroke, just to cool down after my workout, when a woman appeared on the pool-deck. \n\nShe was obviously planning to swim down the lane next to me. I only had a momentary glance as she set her swim goggles and dove in but she was stunning.\n\nKari was a little woman at five-two. This one was closer to five-ten. Kari had the silky white skin of the redhead. This woman was dusky and Italian looking. \n\nBut the main difference was in the size of her tits. \n\nKari had normal size, beautifully shaped breasts. This woman's chest would stop traffic. She was straight up and down, the word \"lean\" comes to mind. But her boobs were massive. \n\nI just assumed that she had extensive work done to get mountains as astonishing as the two objects that were underneath her TYR competition swim suit. There was no sag whatsoever. \n\nShe proceeded to glide past me with a beautiful relaxed stroke. I was more impressed by her swimming than her tits. Which should give you some idea of what a good swimmer she was.\n\nI had finished my workout. So I climbed out of the pool. But I had to pause a minute and watch her. \n\nShe was as sleek as a seal, long legs and waist and her powerful stroke indicated that she was probably another former college swimmer, with all of the physical benefits that imparted. \n\nI found myself hoping to see her again. \n\nThat was an astonishing reaction.I had no interest in women for the decade after Kari was taken from me. \n\nOnce you have experienced a woman like Kari the others pale by comparison. It would be like going from steak to oatmeal. \n\nIn the subsequent ten years I tried to get back to a normal life. It was an absolute waste of time. I had my one shot at the brass ring and fate had chosen to snatch it out of my hand. \n\nThere was simply no going back.\n\nNevertheless, this new woman piqued my interest. It was her freestyle stroke that drew me in more than her incredible body. But I felt some stirring in my soul on that common ground. \n\nHowever, notwithstanding the fact that I did my workouts at the same time, I did not see her again.\n\nI finally ran into her several weeks later at the most unlikely of places. \n\nI was attending one of those interminable faculty parties. I was there by command performance, personally requested by the Dean. Otherwise I would have been anywhere else. \n\nI was standing against my usual wall and holding the ubiquitous glass of sherry. They always serve sherry at events like that. I guess they figure that you won't get too drunk at the rate of two ounces per drink. \n\nI was gazing vacantly at the room wishing I could be any place but where I was. When the Dean appeared in front of me. \n\nHe looks like a hamster and is about as smart as one. But he is a true savant at faculty politics and political ass-kissing. So you had to take him seriously. \n\nHe had a woman in tow. \n\nHe said, \"Danny, I want you to meet Janet Lucca, she was just hired in your Department and since you are an old hand I want you to show her around - maybe mentor her a bit.\"\n\nI shifted my gaze and it was the mystery woman from the pool. \n\nThe Gods spend a lot of time laughing their asses off at me. \n\nShe was taller than the Hamster with thick dark auburn hair cut into a preppy bob. She was also wearing the full preppy regalia, cashmere cardigan sweater over the obligatory white button-down oxford shirt, grey pencil skirt and 3 inch heels. \n\nShe looked like she had just stepped out of the J.Crew catalogue. And she was stunning.\n\nShe was clearly working as hard as she could to understate that body. But that would be an impossibility. Her chest was just too big. \n\nThe impressive string of black pearls around her long neck was pointing in my general direction rather than toward her feet as they should. \n\nI said, \"Sure boss.\" And the Hamster wandered off, his duty done.\n\nI turned to her and I stuck out my hand. Trying to keep my voice neutral I said, \"Danny Jones at your service.\"\n\nShe looked amused and said, \"I saw you at the pool so you don't need to act like you don't know me.\"\n\nI grinned and said, \"That was an impressive stroke, did you do that in college?\"\n\nShe said, \"I swam four years at Berkeley.\" \n\nWell-well-well a fellow traveler. I said, \"I did the same thing in Ann Arbor. But it was probably ten, or fifteen years before your time.\" \n\nShe said, \"I was an undergrad twelve years ago.\" \n\nSo - it was more like fifteen.\n\nWe then launched into an hour long series of war stories. Which led to an evening at the Willow restaurant down Fairfax from the campus. \n\nBy the time the evening was over I knew that she had an exceptional sense of humor and that she was an expert in the policy end of tradecraft. She also had a degree from the Ridge School, which is in Erie Pennsylvania. \n\nIt's a top school in the field but seriously, Erie??!!\n\nI also knew that she was gorgeous. \n\nWhen I tore my gaze away from her bouncers I was looking at a perfect oval face and very dark, almost black eyes. Those eyes held the same kind of intelligence that my Kari had. Her mouth was lasciviously sensual. \n\nShe was like the hottest preppie ever born. \n\nFor the first time in 24 years I sensed an attraction. \n\nShe was a new-hire and had only been in town for three weeks. She was still living in a long-stay hotel while she looked for a place. That search was complicated by the fact that she had no idea where anything was. \n\nThe next day was a Saturday and I made arrangements to meet her for breakfast at the IHOP down from the Ballston stop on the Metro. \n\nI chose that place because it was easy for her to get to from Clarendon. But coincidentally it is also a regular clandestine meeting place for the big-shots at the alphabet agencies in the area. \n\nShe was dressed in preppy casual today, archetypal chinos and one of those distinctive cardigans with the blue, red and yellow diamond pattern over a light blue turtle-neck, topsiders on her feet. Light gold chain around her neck. \n\nShe was striking in a Xena-Warrior-Princess-goes-to-Wellesley kind of way.\n\nShe had gone all-out with the makeup and I had to upgrade the face from gorgeous to unearthly. That was mainly because of her eyes. Those eyes were huge, dark and hypnotically seductive.\n\nI had managed to actually find a spot in their parking lot. So after a little coffee and chit-chat we set off to find her a place. \n\nI told her that the smartest thing she could do would be to find an apartment near a Metro stop. So we cruised the Orange Line for most of the afternoon. \n\nAnd she finally settled on a neat little place in West Falls.\n\nWhen we finished the apartment shopping I took her back to her hotel in the Clarendon area. \n\nShe seemed hesitant and moody as we drove back. So I asked her what the problem was. \n\nShe said, \"Now that you've done your duty will I see you again?\" \n\nI said, \"It is a real pleasure, not a duty. And we will see each other around campus a lot. My office is not far from yours in the same building.\" \n\nShe said, \"That's not what I meant. Will we see each other socially?\" \n\nI said, \"I have not had a date since my wife died. You were probably in high school then.\" \n\nShe looked aghast and said with horror in her voice. \"Your wife died? How did that happen?\" \n\nI was trying to keep the pain out of my voice as I said, \"She was hit by a drunk driver while jogging. We had only been married three years. \n\n\"Her untimely death cut my heart out and stomped on it. I have not even looked at a woman since that day twenty-four years ago,\" \n\nThen I hesitated and tentatively added, \"Until now.\"\n\nShe looked aghast and said, \"What do you mean by that?\"\n\nOkay - I had totally screwed-the-pooch! I hastily walked THAT statement back before she thought that I was some kind of psycho stalker. \n\nI said, \"What I mean is that I find you attractive. And for the first time in forever I have a desire to get to know a woman better. I don't know what it is about you, all of the common ground I suppose, but I want to explore our relationship further if you are willing.\"\n\nShe did that thing that only women do where they kind-of melt. She took my one hand in her two and said with sincerity, \"I would like that very much.\"\n\nCompound interest being what it is, the blood money from Kari's death had grown into a big bag of cash over the past 24 years. I would never spend the settlement. That was Kari's money. But the interest was a grey area and it was substantial. \n\nSo I got myself something to sail. \n\nIt was a pure survival mechanism. Being on the water was the only way I could wrestle with the crushing feelings of ennui and cosmic resentment that continually swept over me. \n\nI thought that Kari would approve. I had to survive to keep her memory alive. \n\nJanet and I still had a lot of talking to do before any decisions were reached. A day on the boat seemed like neutral way to kick that off. So I invited her to go sailing with me the following weekend. \n\nI had run into her several times during the succeeding week. She had been completely professional in her dealings with me. \n\nShe was a smart girl. She had been around academia long enough to know that faculty types have the same approximate maturity level of junior-high-schoolers. \n\nEspecially, when it comes to chit-chatting about matters of the heart. \n\nI was a senior guy and she was brand new and an assigned mentoree. We both could foresee all kinds of career ending gossip falling out of that situation. \n\nShe was still making the arrangements to move into her apartment. So I picked her up at her place in Clarendon. She was dressed for the boat in a demure pair of white boat shorts, Topsiders and a dark blue polo shirt with a little alligator on it. \n\nThis was the first time since the initial time at the pool that her body was truly discernable. It was spectacular. \n\nYou don't compete at the collegiate level without having handsome muscular legs. But the round ass and lithe hips in those shorts were also a work of art. \n\nGiven the challenge that the exceptional size of her boobs posed to casual attire. The Izod polo shirt was perhaps the classiest compromise possible.\n\nShe was wearing the shirt tails-out. So it kind of hung down off her front. Which left you with the impression that she was smuggling watermelons underneath. But at the same time she looked athletic and utterly asexual. Or at least as asexual as somebody built like her could look. \n\nI kept the boat at the James Creek Marina back behind Fort McNair. The 7 mile drive took the usual forty-five minutes in DC traffic. \n\nAll the way to the marina we talked about her first week. She was amazingly insightful in her appraisals of her peers. And it was clear that she had a first-class mind, particularly in her ability to maneuver through the swamp of faculty politics.\n\nWe got to the boat and she just stood there gaping. \n\nI don't know what kind of vessel she THOUGHT I was talking about when I invited her out. But it was clear that she didn't expect what she was seeing. Maybe she thought I was talking about a Sunfish.\n\nI had to admit that the C&C 40 is an impressive boat. It's a masthead sloop with the fifty foot mainmast anchored slightly forward of center. From where we were standing it seemed to go up to the sky. \n\nCompared to the true racing sloops, the boat itself is sturdy, almost a little tubby, Its broad beam makes it an excellent cruiser. \n\nJanet stepped on board still gazing around like she had never been on a boat before. She said, \"Is this yours?\" \n\nI said, \"It's over thirty years old but she's still a very well-preserved old girl.\"\n\nWe stowed our gear and the groceries. Then I cast off and took us out into the Anacostia River and shortly thereafter into the Potomac. \n\nWe were under motor at that point because there is just too much traffic on the river to reliably go under sail, at least until you get around Hallowing Point and into the wider part. \n\nShe sat next to me glorying in the sun and the hustle and bustle. I pointed out the landmarks as we cruised by from Alexandria, to National Harbor, to Mt. Vernon. \n\nI wasn't going too far but I wanted to raise the sail to give her the experience. \n\nI set the autosailor when we got around the Point and told her to hold onto the halyard line while I took the cover off the mainsail. \n\nShe was tugging on the halyard like she thought she had to raise the sail by hand. And she almost seemed strong enough to do that. \n\nI went back to stand behind her and reached around her to loop the line over the top slot in the winch and she leaned back into me. It was an exquisite sensation. One that I had not experienced in two decades. \n\nThe power winch pulled the mainsail up the mast. She was clapping her hands with glee. \n\nThen as I was attaching the line to the cleat the wind shifted off the nose, the sail cracked and filled and we lay over on a beautiful port tack. \n\nI rushed back to take over the helm and told her to coil the line at the cleat. As she bent over to do that I could see the most perfect apple shaped ass ever fitted on a woman. \n\nShe came rushing back to where I was sitting with her eyes positively glowing. \n\nShe said, \"That was the most exhilarating thing I have ever done.\" \n\nI said, \"Yeah - sailing a big boat does that for you.\"\n\nWe cruised for a while, tacking back and forth, just to give her a sense of it. \n\nOnce I was sure we were away from any ship traffic I let her handle the helm. I told her to just steer by feel, the ship, the wind and the helmsman are one and the same organism. She looked positively ecstatic.\n\nI finally maneuvered us to where I wanted to anchor, which was Belmont Bay on the Virginia side. It is surrounded by Mason Neck State Park. \n\nEven though there is a marina on the southeast side and a bunch of yahoos in powerboats and jet skis, the bay is big enough that our anchorage on the far side was both private and also semi-secluded.\n\nI dropped anchor fore and aft and she looked at me in anticipation. \n\nWhy do women always do that? It was like she expected me to make a romantic move, which was a long way from happening. \n\nI felt closer to this woman than I had to any female in two decades. But Kari was the only person I had ever been intimate with. And that intimacy was still very precious to me.\n\nI said, \"Let's sit here and talk. I have told you about my life, or at least what there has been of it since my wife died. Tell me about yourself. Have you been married before?\"\n\nHer face darkened. She almost looked panicked. \n\nI said gently, \"You don't have to tell me anything about yourself if you don't want to. I was just hoping to get to know you better. I'm interested. That's all.\"\n\nShe looked like there was a wrestling match going on inside her head. \n\nFinally she said, \"I started developing very early and these were the result.\" She gestured disparagingly at her tits. \n\nShe continued, \"I was thrilled at first because every boy I knew wanted me, even the older ones. Then I figured out that was all that they EVER wanted. \n\n\"None of them appreciated the fact that I was smarter than most people and also a better athlete. All they ever wanted was to get their hands on these.\" And this time she actually cupped them.\n\nShe added, \"I managed to hold them ALL off until I was in my first year at Cal. \n\n\"That's where I met Prince Charming. \n\n\"James was everything I had ever wanted in a man, suave, good looking. He seemed to care about me. And he had literally inherited gold, silver and uranium mines from his dad. So he was also fabulously wealthy and powerful. I was only nineteen at the time. \n\n\"He was eight years older than me. We met at a club in San Francisco and James thought I was his age because of the way I looked.\n\n\"We lived together throughout college and in my senior year he asked me to marry him. \n\nGetting married was something that all of the girls in my social set were doing and it just seemed like the right thing to do.\n\n\"I wish I had spent a little time thinking about that, rather than just jumping into things. But I was still only a girl and James was very convincing.\n\n\"The problem was that the minute we were married I became one of his possessions and he morphed into a psycho control freak. \n\n\"He had done a good job of keeping that little obsession hidden from me during the courtship. But once we were married he started to lay down the law, sometimes in pretty physical terms.\n\n\"So I was literally the princess in the tower. \n\n\"Living with him was my worst nightmare. He didn't want me doing anything but being at his beck and call. \n\n\"My life was dictated to me. I was not allowed to have meaningful conversations with men. And God help me if I flirted or danced with one. \n\n\"In fact he also got jealous of my women friends. So I had to jettison them too. \n\n\"He had a lot of money and so I dedicated myself to spending it for him. It was my way of getting revenge for the way he treated me. \n\n\"I bought everything a girl could imagine from expensive coteur to cars. \n\n\"And the more I spent the deader inside I got . \n\n\"He was willing to pay as long as I never expressed an opinion, or did anything that involved free-will. And he expected me to perform any sexual trick he could think of on demand. \n\n\"The word \"prostitute\" comes to mind. \n\n\"Sex was often disgusting and degrading. But I didn't have a choice. He totally owned me. It was a living hell. \n\n\"I was allowed to continue swimming because it kept me in the shape required to boost his raging ego. But it was only in our pool in our place in the Santa Monica Mountains. \n\n\"I couldn't divorced him. He had his hands around my throat, sometimes literally. \n\n\"And his 'body guards' constantly kept an eye on me. I was essentially under house arrest for all seven years we were married. \n\n\"Then - fortunately, or unfortunately as the case may be, he found a new bimbo. \n\n\"She was as well-endowed as I am and only 20 years old. And apparently she even liked the kinky things that he inflicting on her.\n\n\"The problem was that we had an iron clad pre-nup. \n\n\"Adultery was the main feature. So he made plans to trade in the old slut for a new one by setting me up. \n\n\"One of the guys who was keeping an eye on me started helping me to get away for a few hours. \n\n\"It was just walks on the beach and coffee at Bobby's. But it was freedom. \n\n\"He seemed to be kind and sympathetic. I actually began to trust him. In fact I started to crush on him. \n\n\"I know how na\u00efve that sounds. But I had been sheltered my entire life. And I was afraid that my husband was going to kill me. It was the Stockholm syndrome. \n\n\"One night my friend was the only guy watching me. He came into our home theater with drinks and some popcorn and offered to watch Steel Magnolias. \n\n\"That alone should have told me it was a trap. No guy is capable of sitting through that movie, no matter how devoted. ",
        "\"Well - it turns out that he didn't need to sit very long. \n\n\"We were just in the beauty shop scene when my vision started getting very fuzzy. The next thing I knew it was morning and I was naked in my bed with my supposed friend lying next to me. \n\nI vaguely remembered a long erotic night featuring multiple screaming orgasms. It was rape pure and simple.\n\n\"But thanks to my jailor-lover I couldn't even go to the hospital to get a blood test. \n\n\"Of course James had all of the video evidence he needed to break the pre-nup. \n\n\"I left our house with the clothes on my back and a substantial lump sum settlement. It was enough to restart my life in Portland, which was where I eventually drifted. \n\n\"I had a good degree so I got a job doing basic marketing work for a company in Gresham. But I was planning to never trust another male for the rest of my life. \n\n\"I worked there for a year and tried to rebuild my wounded psyche and self-confidence. I didn't date or even look at men. They had been my problem in the first place. \n\n\"I did form a couple of friendships with women though. One of them had just gotten out of the Army. She was stationed north of there at Joint Base Lewis-McChord doing intelligence work and after a year of talking to her about that field we both decided to get credentialed. \n\n\"So Margot and I packed all of our things and drove 2,500 miles to Erie. \n\n\"That started the best three years of my life. We roomed together in an old house downtown. I lived the life of a grad student and at age 33 I finally had some direction in life. \n\n\"I even started dating again but it was totally different from my college mixer and club days. And all of the men I went out with were younger than me. I was never serious about any of them anyhow. Men had been the cause of my problems. \n\n\"But Margot finally met a man who was perfect for her. He was a vet too and an honest hard working guy. She married him when we all graduated and we parted company. \n\n\"I found my way down here and met you and that is the end of my story.\"\n\nShe sat back looking at me like I was going to take her home now that I knew all of her dark secrets. It was very endearing. \n\nI said, \"So we have both been screwed over by life. I lost my wife for no good reason and you were totally used and betrayed by your former husband. I guess that makes us a perfect pair.\"\n\nShe got that look again. It was somewhere between melting and smoldering sexuality. I have never understood what goes on in the jungle of the female mind. \n\nShe marched over to me, threw her arms around me and tilted her head back and looked up into my eyes. There was a lot of emotion playing behind hers. \n\nI was uncomfortably aware of the feeling of those big breasts moving around between us.\n\nShe said with a certain amount of irony in her voice, \"From the minute we met I have had the sense that you are the first man I could ever even consider trusting. \n\n\"Is that true, or am I mistaken?\"\n\nI said, \"You can trust me to be your friend. You can trust me to be your advisor. You can probably never trust me to be your sexual partner because I have not had sex with a woman since my wife died. \n\n\"In fact you are the first woman I have held in my arms in two decades.\"\n\nShe looked flabbergasted and said, \"How is that possible? How could you do that?\"\n\nI said, \"It's easy when you are broken. We're both broken. Maybe we can help each other put Humpty-Dumpty back together again.\"\n\n_________________________________\n\nParadise Found\n\nThat was not the beginning of a wild sexual frenzy on the boat. But nonetheless, a few things DID happen that night.\n\nI went down to the galley and fixed the stuff we had brought and we ate and talked for several hours sitting in the cockpit. \n\nWe watched the wildlife, ducks, geese and the occasional heron. I drank a little of the wine and she drank a lot. \n\nI eventually got out one of the sleeping bags that I stowed in the sail locker and we lay on the foredeck watching the sunset and then just holding each other as we gazed up at the stars. \n\nShe was snuggled next to me with those big tits resting on my chest and her head on my shoulder. Occasionally she would raise up and scrutinize me as we talked. \n\nOne of those times I looked into her face and I saw the depth of emotion in her infinite dark eyes. Her lips were hovering close to mine. And what happened next was natural, even after two decades of having nobody. Her lips touched mine and we kissed.\n\nShe moaned loudly and opened her mouth. You forget a lot in 24 years. But my reaction was like riding that proverbial bike. I caught on quickly.\n\nShe grabbed me with all of her strength, threw her leg between mine and just plastered herself against me, hunching her mound on my leg as she did. \n\nAfter a couple of minutes I rolled her over on her back, still kissing her deeply and her legs shot wide open. Then she wrapped them around my butt with such considerable force that she literally pulled me closer to her. \n\nHer legs were so long it almost felt like she could wind them around me several times. \n\nBoth of us were still fully clothed. But I think that it was a more passionate embrace than if we were actually doing the deed. She was making whimpering little effort noises as she thrashed underneath me. The power in that female body was indescribable.\n\nI also noted with some satisfaction that no silicon was involved in the making of her huge tits. They were all Janet. \n\nThen she loudly gasped, \"OH NO!!\" And came like a freight train. \n\nHer heels were literally drumming on the deck as she worked her way through a monster orgasm. I held her as she bucked and writhed beneath me making a loud keening wail. \n\nThe contractions passed and she was still. Then she looked up at me with wonder and said, \"I don't know what just happened but I have never experienced anything like that in my life.\"\n\nI had to admit that it was erotic in the extreme. And for the first time in forever Keri was not sitting in the front window of my mind. \n\nI just lay between Janet's widely spread legs panting. Feeling her hard stomach and those huge tits rising and falling with her exertions. \n\nI looked into that deep intelligent face and said, \"Maybe we were meant to heal each other.\"\n\nThere was no subsequent night of endless passion on the boat. I still had a very substantial ghost to deal with. And Janet had her own set of demons. All of those things weighed against our falling instantly into bed, or even in love. \n\nBut what we had done was broken the intimacy barrier. A woman's body was special to me for the first time in over two decades. \n\nI almost felt like Kari's spirit had graciously withdrawn from my consciousness so that I could be happy with another woman. \n\nAnd I think that Janet was actually surprised at how easily and comfortably she and I bonded into a couple.\n\nWe worked together as colleagues while we were on campus. But the evenings were different \n\nA dozen years earlier I had bought a condo in Georgetown. I had gotten it after I was promoted to Full Professor. It was a lot bigger and nicer than her place. And so Janet eventually started living there. \n\nThe period of transition between dating and permanent residency was touching. And it illustrated how deeply wounded she was. \n\nIn my case I had been on my own for so long that I had to re-learn how to live with somebody again. \n\nIn hers it convincing herself that I was not her husband.\n\nShe was like a feral animal. Most of the time we were at ease and loving with each other. But the smallest difficulty would send her skittering back to her apartment. \n\nNevertheless, we eventually settled-in with each other. That is the only way I can explain it. It was simply a matter of getting completely comfortable with a stranger. \n\nWe lived the minutia of life and our union built out of humble day-to-day things. I saw her in every possible situation, from morning hair to dressed-up to kill. We shared breakfast newspapers and TV nights. We went everywhere and did everything as a couple. \n\nAnd inevitably the daily hum-drum made us closer until we finally came together as lovers. \n\nIt wasn't instant passion, like it was with Kari. It took a period of several months for us to take the final steps to cement the union. \n\nIt all began with her sleeping over. That made perfect sense. We were completely confident in each other's motives at that point. And so her sleeping with me was not a stretch. \n\nBut actually fucking was a bridge too far for either of us to contemplate. We liked each other so much that neither of us wanted to cross that irrevocable line between friendship and whatever problems sexual intimacy would represent. \n\nI was still not ready to put Kari behind me. Even though my wife had been in her grave for twenty-five years. \n\nJanet acted like a rape victim, which she probably was. At any rate she had clearly been traumatized by the manner that her husband had used her body. \n\nShe would sleep with me in a pair of panties and a long California football jersey, with those monsters unrestrained underneath. We often awoke entwined with each other. \n\nFrankly the thought crossed my mind. You would have to be a Rapa-Nui statue NOT to get hard waking up with one of her muscular legs lying across yours and a huge liquid breast mashed against your chest. \n\nBut I never acted on it because I still thought of Kari as my wife. I would recall a similar situation 25 years earlier and everything down there went soft. \n\nAnd Janet was clearly having the same ambivalences. It was like the second we became intimate she knew that I would morph into the monster her husband had become.\n\nThat problem was solved because liquor is quicker. \n\nOne night we were uptown on M street. And we had both had a lot to drink. So we came rollicking back to the condo, which was off the C&O towpath. \n\nI normally sleep in a t-shirt and boxers but the room was a little wobbly. So I just stripped off all of my clothes and scooted under the covers.\n\nJanet was watching me. And so she did the same thing, giggling all the way. It was like copycat was funny. \n\nI had seen her naked before. But it was the way a lot of married couples do as part of daily routine. I had never really looked at her because I knew where THAT would lead and I was not ready to go there yet. \n\nBut in the condition I was in it was inevitable that I would take the time to appraise her body. And I was drunk enough not to care what that meant. \n\nShe was incredible. Swimmers tend to be slim like me. Janet was power, not aerodynamics. She was totally round, with wide shoulders and a tiny waist that flared out into the muscular hips and legs of a world-class athlete. \n\nI knew she was strong. We had enough of our heated, not-quite-going-all-the-way sessions to leave that imprinted in my mind. In fact she had nearly cracked some of my ribs during her frequent orgasms. \n\nBut really looking at her nude body now, all I could think about was fucking her. She climbed into bed next to me still giggling. \n\nI propped myself up on one elbow and looked into her eyes. She looked back at me. She was utterly in heat. \n\nI mashed my mouth on hers and she opened to me like a flower. I put one hand on her massive left tit and she gasped, then began to moan as I manipulated her nipple. \n\nShe has nipples like gum-drops, very pronounced and hard and as I began to suck on the one in front of me she had her first orgasm. It was just a lot of heavy breathing and a sigh with a little \"eeeee\" on the end. But I could tell that this woman was hot-hot-hot. \n\nI moved the same hand down her rock hard stomach to her shaven and sopping wet pussy. It was a place that I had never entered before. The minute I stuck one finger into her she gave a loud shout and her hips began a rapid-fire bucking. \n\nIt was uncanny. They were almost a blur of activity. \n\nThen I looked into her eyes. She was willing me to put it in her. So I rolled over on top of her. \n\nShe shot her legs wide as she always did and then slammed her heels back against my butt with a strength that drove me to the hilt inside her. \n\nShe let out the loudest, most satisfied groan and started muttering, \"So long! So long!\" \n\nI was pretty sure that she was talking about the duration of time between when she last had sex. Not making a commentary about my physical attributes. \n\nThen the age old rocking motion began. She gasped and threw her legs straight up in the air. I put my arms behind the back of them to hold her in that position and just pounded her. \n\nWe are both much stronger than the average person. So the hammering that I was giving her and the thorough fucking that she was absorbing from me must have looked like Tarzan and Jane mating. \n\nOnly with a tad bit more animal enthusiasm.\n\nJanet claimed that she had not had sex except one time in her 2nd year in graduate school. That was three years ago. And it would be hard to believe that she had much fun with her husband. Since his idea of great sex featured a lot of pain and humiliation for her. \n\nOf course we had elected three two-term Presidents since I had been inside a woman. \n\nIt was obvious that Janet had learned a lot from her ex-husband. And she was very aggressive. She draped her legs over my shoulders and grabbed my forearms in a death grip that was aimed at pulling herself into an almost perfect bow. \n\nShe was obviously trying to get me as deep inside her as she could. \n\nHer mouth was making the widest \"O\" possible and her eyes were unfocused. Then they rolled up in her head and she shouted and came again. \n\nThere was considerably more thrashing this time. \n\nAt that point, she reversed herself on the bed and put herself in a scissors position, one leg between mine and the other straight up in the air. That got me even further in her. It was so far I could feel the head of my cock invade her cervical opening.  \n\nThat sensation set off a monumental shriek, which was followed by more desperate high frequency bucking. And then she began to vibrate as every muscle in her body tensed. She yelled, \"OH MY GOD YESSSSS!! CUMMING, CUMMING!!\" \n\nAnd she went off on a frenzy of writhing. Since I was essentially lying to one side of her I could observe every aspect of that amazing event. \n\nHer mouth was twisted into a rictus of pure sensation. Her stomach was rippling like the ocean. And those huge tits were quivering like two Blanc-Manges in an earthquake. \n\nIt took several seconds for the thrashing to die down. Then without missing a beat she reversed out of that position and into a hands-and-knees doggy-style. \n\nThe sight of those broad fertile hips, attached to that tiny waist and those huge, round, magnificent buns almost made me drool on her dimpled ass. \n\nAs I slid into her she let out a long low moan. It was from the bottom of her soul. That was followed by a lurid groan and she shoved herself violently backward. \n\nI started to enter her cervix again. She seemed to like it as deep as possible. \n\nI beat as hard as I could on that strapping ass. It rippled every time I made contact. Her knees were splayed wide. She was making loud grunts and animal growls of effort and shoving herself backward every time I hit bottom in her. \n\nOur mutual sweat and the smell was viscerally erotic. \n\nShe had been whipping her hair back and forth as she shook her head from side-to-side. It kind-of resembled a dog shaking after it gets wet. That couldn't go on very long without something cataclysmic happening. \n\nWhat occurred would have made Vesuvius's eruption seem like a sunny day in Campania. I could sense the orgasm gaining momentum from somewhere around the North Pole. It felt like I was swelling up like a balloon and her insides were fizzing like a shaken up bottle of soda pop. \n\nSuddenly she gasped and threw her head backward. She bent her long beautiful back into such a deep arch I was afraid that she would hurt herself. \n\nThat led to a very low pitched animal shriek. Then she threw herself face first on the bed, ass still elevated to get the maximum penetration. \n\nShe held herself, arms over her head fingers frantically scrabbling at the covers. Her back was bowed, and her ass was straight up in the air. Her shoulders started to shake violently while her buns were frantically clenching independent of each other. \n\nShe was totally silent but it was evident that the muscles in that powerful body were gritted. \n\nIt was like every part of her was locked in the grip of an utterly unearthly orgasm. She was actually slobbering as it happened. Her insides went wild, clenching and spasming around me. And of course that pushed me over the edge. \n\nI held onto those wide muscular hips while my reproductive system temporarily underwent the China syndrome. It was like two decades of life-force were draining out of me. \n\nShe collapsed as we came together and I fell on top of her. We she lay there, with me feeling the rapid heaving of her sweat soaked back. \n\nShe is bigger than average for a woman but I was still probably 70 pounds heavier than she was and I was afraid I might smother her. So I threw myself sideways making an audible sucking sound as I withdrew. She moaned longingly in complaint. \n\nWe had been lying there for several minutes saying nothing when she spoke in a timorous voice. \n\nShe said, \"Are you going to change now?\" \n\nSon-of a bitch, I knew it!! \n\nI said with conviction, \"Yes I am my dear.\" I heard a gasp of anguish\n\nI said, \"I am going to change into the most loving, considerate, and dedicated husband you ever had.\" \n\nThere was a long pause as she took in that new information. Then she screamed with absolute delight, \"HUSBAND???!! Does that mean you want to marry me???\" \n\nI had been thinking about it for some time. This had supplied the missing piece.\n\nI said, \"As soon as possible my love. I am willing to put a ring on it to make sure that everybody understands that you are mine.\"\n\nShe threw herself on top of me weeping. She said, \"Oh God, I have never wanted anything more in my life.\"\n\n_______________________________\n\nOriginal Sin\n\nAnd so we were married. It was a surprise to all of our colleagues. Since we had been conducting our relationship under the radar. \n\nBut they could see how much we loved each other and a few of them seemed sort-of happy for us. The rest didn't care. \n\nWhat can I say? Academics are slightly more self-absorbed than cats. \n\nWe settled into the routine of faculty life. We taught our classes. Did our research and wrote. \n\nWhen we weren't doing that we enjoyed each other's company. Extended bouts of fucking often ensued from there.\n\nA dozen years passed in a blur of joy, quietude and love. I was still able to answer the bell as I turned the corner on my sixty second year. And Janet was as beautiful and sensual in her forty-seventh year as she had been at thirty-five. \n\nShe still swam as often as she could. And that lovely face and incredible body hadn't changed one iota. But the inner woman had expanded to fill out all of the corners of her potential. \n\nPart of the problem with marrying somebody who is much younger than you are is that they are always in a different room in their life. \n\nThere was never any conflict about our personal goals. And we fit together beautifully. But Janet was not the same woman I had married twelve years earlier. And I was definitely NOT the man that I had been back then.\n\nHer intelligence and strength of character put her in leadership situations in both academia and also in policy circles. \n\nWhereas I had reached the point in my career where I was beginning the summing-up process. \n\nI wasn't ready to head for the pasture yet. But you build up a lot of capital over your lifetime. And eventually you want to start sorting through it. Just to put things into perspective. ",
        "So while Janet continued to expand her empire I was happy to sit-back and decide which of the stuffed moose heads and other items of junk in the attic of my mind were worth saving. \n\nI was an elder-statesman by then. So I still had a lot of speaking engagements and requests for articles. But I was summarizing and recapping, not exploring new territory. \n\nI was happy with my situation. Your immortality is in your words, not your deeds. And I wanted to lay down a legacy of ideas that people would read and wonder about long after I had departed this earth. \n\nThe fact of human impermanence was imprinted on my psych very early thanks to Kari,\n\nI was pretty sure that Janet's career was her priority. But she was always very loving and deeply respectful to me in our married life. And the sex was still exceptional. \n\nI could still remember the energetic cut-and-thrust of my middle forties, when the thrill of new worlds to conquer hung in the air. And an important aspect of being married is helping your partner be happy.\n\nIn that respect I think that I had come to represent Janet's safe-harbor. Our marriage gave her a protected space that she could retreat into and recharge. It was comforting for her and secure. \n\nBut Janet was clearly happiest when she was conquering new worlds. The problem with empire building is that it makes you look outward not inward. And you can lose track of the things that are important in life. \n\nGetting your priorities confused will color your actions. I never doubted that our marriage wasn't important for Janet. But people can get delusions of grandeur when they are on a long winning streak. \n\nAnd Janet simply lost track of her own mortality. \n\nShe came to think that she was invincible.\n\nBelieve it or not the first clue of trouble in paradise was provided by one of the students. \n\nStudents will do anything to establish a personal link with you. It isn't that they are trying to get you to like them. It is just that they think that they will get a break if you know who they are.\n\nRichard Bowen was a nerd's-nerd and I already knew him. But he was also a world-class suck-up. So there was never a part of my life that he wasn't trying to connect with. \n\nHe worked part time as a busboy at 1789, which is a fancy restaurant tucked up next to the Georgetown campus. \n\nOne day he was sitting around my lab more-or-less interrupting what I was doing.\n\nHe said, strictly in order to make conversation, \"I saw Professor Jones last night.\"\n\nI said, \"That's nice.\"\n\nHe added, \"She was having dinner with Professor Willis.\"\n\nHe had gotten my attention, but I didn't react. Janet was supposed to be in Baltimore for a session on counter-terrorism. She got in so late that I was already asleep.\n\nI said, \"Are you sure it was her?\"\n\nHe said, \"Oh yeah, I'd recognize Professor Jones anywhere. She is so beautiful and she had everybody's attention in the dress she was wearing.\"\n\nBy that I assumed that the little weasel was referring to Janet's obvious assets in something low-cut.\n\nIt puzzled me. She had gone off to class mid-afternoon in her typical preppy attire. She had not told me anything about deviating from her original plan, which was to sit in on a seminar at Hopkins. And why would she change into a slinky dinner dress. More important WHERE would she do that?\n\nAlso, the man she was allegedly out with was a junior guy who we had hired at the beginning of the prior school year. \n\nNorbert Willis was a forty-something expert in geospatial-intelligence, fresh out of Duke and the local campus phallic symbol. He was perhaps 6 years younger than Janet.\n\nHis classes were packed, less because of the knowledge he was imparting and more because of the way he was imparting it. \n\nHe was very good looking in an affable, east-coast, prep-school, sixth form, boyishly angelic, choir boy kind of way. \n\nHe clearly came from money. Not many freshly minted Assistant Professors have a place out on the Palisades and drive a SLK Mercedes. And he definitely had an eye for the ladies. \n\nAs the senior guy in the Department I had to give him the obligatory sexual harassment lecture, after one of the female students complained. \n\nAnd he was definitely treating me like his dad during the talk, which I was old enough to be. \n\nEverybody knew that he was a pedigreed cock-hound. And I might be 60 years old but my brain had not totally calcified. Janet stood out among every other female on that campus in both the beauty and sexuality department. \n\nSo I assumed that he had spent a lot of his spare time barking up her tree. \n\nNormally I would have blown off Bowen's little tidbit since it made no sense whatsoever. \n\nBut, if what he said WAS true then it was something I needed to look into. Since Janet had obviously not bothered to tell me about her change in plans. And we did not have that kind of relationship. \n\nShe was sitting at our kitchen table grading student papers when I got home. She was wearing a big baggy Georgetown sweatshirt and yoga pants and her auburn hair was pinned up into a rough bun. \n\nShe was chewing on the eraser of a pencil, something she did when she was concentrating. It was altogether an endearing look. \n\nThere might be a good explanation for why she was not where she had led me to believe she was. So I wanted to give her the consideration of not charging in and yelling, \"What the fuck Janet!!??\" \n\nNonetheless, I WAS going to get the story.\n\nShe turned her mouth up for the usual tongue-heavy greeting. I got a cup of rose-hip tea and sat down opposite her. When we do that we always banter back and forth. It is a pleasant way to reconnect after a long day in the salt-mines of academia.\n\nShe was sitting across from me, no makeup or any other of the tricks that women use to seem more attractive. And she was still a stunningly beautiful woman.\n\nOh well, in for a penny, in for a pound!!\n\nI said as lightheartedly as I could, \"So how was the seminar in Baltimore? I can't think of anything I would rather NOT do than drive all of the way up there in order to listen to somebody wax-on about tradecraft.\"\n\nShe looked up and with nothing but eagerness and honesty in her face she said, \"Oh it was very interesting. I even stayed after to talk to Dr. Ostrovski. It's a long drive back from Baltimore. It was 2 AM when I got in. You were sawing logs.\"\n\nOkay - there it was. Either she had just looked me in the eye and lied to me. Or Bowen was having delusions. \n\nI didn't react. \n\nFrankly, my first thought was not \"infidelity.\" It was more along the lines of puzzlement. Our relationship had never been anything but honest and forthright and there was probably a logical explanation. \n\nJanet had never given me the slightest inkling that she was unsatisfied with your lives together. But why would she lie about something as innocuous as having dinner with a colleague, even a well-known horny one?\n\nI am not the sort of person who sneaks around spying on their spouse. I had a range of electronic options given what I do for living. But it is the ultimate in disrespect to bug our wife. So if there was a problem I wanted to know about it. \n\nI just looked at her and said as casually as I could, \"Do you remember Richard Bowen? You might recall me mentioning him? He's the one who is the brown-nosing pain in the ass in my pen-testing class.\"\n\nShe laughed and said, \"Of course I remember him. You complain about him every other day.\"\n\nI continued with, \"He said he saw you last night all dolled up at 1789. He's a busboy there.\"\n\nHer face didn't change in the slightest as she laughed merrily again and said, \"He must have been mistaken. I grabbed a bite before the lecture at Sterling's. They have great crab. We ought to eat there some day.\"\n\nOkay, Bowen was brown nosing again. It was typical of his behavior to make something up just to try to be one of my cronies. Or maybe Bowen just had the day wrong.\n\nBut I also knew that Janet had a very strong and agile mind. Even blindsided she could talk her way out of things. \n\nA couple of months went by. Our relationship was as outstanding as ever. We talked and laughed and made spontaneous love. \n\nThen I ran into the Hamster in the hall. We did the usual polite colleague-to-colleague thing, which you have to do when you can't avoid somebody. \n\nHe asked me if I was going to the IACA Conference. It was in Chicago that year. I told him that Janet was going but that I had way too much to do here. I was on deadline for a chapter I was writing for an anthology on cybercrime profiling.\n\nHe looked pleased. Dean's always like to hear about faculty publication. It reflects well on their leadership. \n\nHe said, \"In that case Janet and Norb will do a good job of representing us.\"\n\nIf it hadn't been for Bowen that little tidbit would have flown right past me. I was suddenly very interested in their travel arrangements. \n\nI nodded and said conversationally, \"Are they the only two going?\" \n\nHe said, \"They were the only ones to apply for travel funds. There might be somebody else going on their own dime but I doubt it.\"\n\nI said something humorous about academics and prostitution and walked off down the hall thinking, \"Why didn't she tell me about that?\"\n\nWhile were having dinner at Filomena's that night I asked her about her trip. \n\nShe looked up and her dark eyes were luminous in the candle-light. She was gorgeous. She said, \"I got a request to Chair a session. Dave Whipple had to drop out so I told him I would cover.\" \n\nI said, \"Who else is going?\"\n\nShe said, \"Nobody from here.\" That was said matter-of-fact without a moment's hesitation and without any apparent emotion. It was a simple statement.\n\nThat was another lie. Unless she didn't know that Willis was going. That is not an odd situation. Since faulty types are rarely in the same place at the same time. Maybe she really didn't know.\n\nBut it was enough of an anomaly that I decided to take action. \n\nI am maybe too straightforward in the way I live my life. But my only response to things that I don't understand is to confront them and find out. This was a situation that needed to be resolved, not left to fester.\n\nI said, \"Professor Willis is going too. Did you know that?\"\n\nShe hesitated for one killer second and said, \"No, I didn't know that. Perhaps we can get together when we are there. Do you know whether he is staying at the conference hotel?\"\n\nOkay, she was doing an excellent job of lying. \n\nI said, \"I think you DID know that and it makes me wonder what else you haven't told me. \n\n\"I hope there is nothing going on between you two. You are a beautiful woman and I don't blame men for pursuing you. \n\n\"I know that Willis is the current campus rock-star. But he is also a well-known harasser of coeds and an AKC pedigreed cockhound. \n\n\"One of these days he is going to get caught by somebody who gives a shit. And that will be it for his career.\n\n\"So I hope and expect that you will respect our marriage and keep things professional when you two are together.\"\n\nShe looked almost hurt, or was it wary? Perhaps she was reacting to my comment about the coeds.\n\nShe said, \"You are the man I love. All I ever want to be is married to you. Norbert is nothing compared to you. And we mean way too much to each other for me to risk anything with him. \n\n\"I truly didn't know he was going to be there until you told me.\" \n\nThat sounded convincing. \n\nMaybe I had answered my own question. Perhaps she didn't want me to know that she would be in Chicago with the guy because I knew about his reputation. And she didn't want to deal with the complication of me drawing the wrong conclusion. \n\nAfter all, a lot of men and women attend conferences. And there would have been no worries if she had been there with any other man, the Hamster for instance.\n\nOf course, that little incident a month earlier was hovering in the background. And there was enough reasonable doubt associated with the entire sequence of events that I wanted to confirm once and for all that there was no problem.\n\nSo I did something sneaky myself. \n\nI could see that there was no way I was going to get irrefutable truth out of Janet short of waterboarding her. So I decided to investigate directly. \n\nAnd HUMINT is always the best way to go when you want to get a reliable sit-rep. \n\nSo I booked a first class ticket from DCA to ORD. I planned to get to the hotel before Janet arrived and find out who she arrived with. \n\nI would be back in DC that night and she would never know I was there. \n\nI left the condo at sunrise on the day of the conference. I told her that I had to go in for a very early meeting at the NCTC. \n\nThe flight from DC to Chicago is a little over an hour and a half. I was on the first plane out. So I was at the Thompson on Chicago's Gold Coast in time to indulge myself in an excellent breakfast at Nico Osteria. \n\nThen I got myself comfortably situated in a nice wing chair in the lobby. I could surreptitiously observe the check-in desk from there.\n\nI had timed my arrival based on Janet's travel plans. I hoped that I had cut it so that I wouldn't have to wait too long. \n\nAn hour later I was reading the sports page of the Sun-Times when she wheeled her roller bag up to the desk. \n\nShe was a study in strong energetic woman. Tall and beautiful, with that marvelous body, looking nowhere near her actual age. The sex appeal just dripped off her. \n\nI had positioned myself so that she couldn't see me as she finished checking in. \n\nShe turned toward the elevators with happy anticipation. She was joined there by a handsome early forties guy. He was also pulling a bag. \n\nSide-by side they wrestled their bags gleefully into the elevators. And as the doors closed I saw her just step into him for a kiss.\n\nI put the paper down and walked determinedly over to the check-in desk. \n\nI could have simply demanded that they give me a key. Since the credit card would be in my name. But I knew that the hotel would give me grief if I did. No hotel wants a confrontation. \n\nSo instead I walked up looking harried and said, \"Did my wife check in yet? God!! I couldn't find any place to park around here!!\" \n\nThe desk clerk looked unconvinced and asked for my ID which I gladly supplied. He clicked around on his terminal and saw that Janet had indeed checked in and that the card I had given him was the one she used. That seemed to satisfy him. \n\nHe turned on the fake sincerity as he burned me a keycard and said, \"Have a wonderful stay.\"\n\nI was pretty sure that it would actually be a short and memorably unpleasant stay.\n\nI went up to the third floor and walked down the hall to room 317. They had preceded me on the elevator by only fifteen minutes. \n\nI was planning to confront them straightaway. So no listening at the door or anything weasely like that. \n\nBefore I crossed my personal Rubicon, I said a little prayer that it wouldn't be what it seemed. There would be a logical explanation. \n\nI inserted my card. The light blinked green and I quietly opened the door. I didn't have to be clandestine.\n\nI found it hard to believe that they would have had enough time to get themselves in flagrante. \n\nBut one should never underestimate the power of love, or perhaps the correct term is \"lust\". \n\nShe was lying on the bed, head thrown back, one forearm over her eyes, and naked legs spread wide. \n\nEverything she had been wearing was strung between the door and the bed like a trail of bread crumbs. It was as if her clothes had fallen off her as she walked.\n\nHe was lying with his lower half naked but his shirt and tie on. \n\nIt seemed rather ungentlemanly to NOT undress fully before eating the lady. But maybe they were in a big hurry.\n\nHe was nestled between her outwardly bent legs lapping with the same intense effort that my old dog uses when he drinks out of the toilet. \n\nShe was moaning and muttering in a rapt guttural voice that sounded like she needed to be exorcised, \"Ahhhh Yes, that's it baby!! You make me so crazy!!\"\n\nThen she went off on a loud series of bucking, thrashing orgasms, mauling her own pendulous tits as she came. \n\nI had been standing there with my phone filming the last 30 seconds of that exhibition. \n\nThere was no need to be covert. Shithead was focusing on his meal. And she was so far out of it that I could have been using one of those old fashioned Hollywood cameras with a crank. \n\nJanet would have never noticed.\n\nThen, without missing a beat she dragged him up her body and inserted him into her hungry hole. \n\nThe smell of sex was getting pervasive as she shot her legs wide and he began to push himself up in her to the hilt. \n\nShe let out a loud groan of satisfaction and said with passion in her voice, \"God I love your cock!! You fill me up so much!!\" \n\nThat was when I started a slow clap. \n\nIt took a couple of seconds for that to register. Then they both startled and looked in my direction. \n\nI said as ironically as I could, \"Bravo!! What a scintillating performance!!\" \n\nThat set off a frenzy of activity. Willis pulled out of her like her pussy was on fire. Then in a frantic effort to get to his pants he fell backward off the bed. \n\nHe scrambled on his hands and knees over toward where his pants were. Only to find me standing on them. \n\nI was looking down at him from almost six feet over his head. He seemed justifiably frightened as he said in a humbly pleading voice, \"Please?\" \n\nHe was still sporting a monster hard-on. Which made his situation even more humiliating.\n\nI laughed and stepped off of his pants. He snatched them, jumped up and disappeared out of the room frantically hopping into them as he went. It was true slapstick.\n\nI turned quizzically to Janet. She was clutching the sheet to her breasts. She looked distraught, but she wasn't crying. \n\nShe is an intellectually strong and very willful woman. She knew what she had done and she knew that there was probably no walking back. \n\nBut her pride wouldn't let her snivel. She was going to face me without hysterics and try to salvage the situation. \n\nKudos for her!!\n\nShe said with self-hatred in every facet of her voice, \"I suppose there is no way you can forgive me for this? I would spend the rest of my life trying to make it up to you if you did.\"\n\nI was angry beyond belief. But this was a heavyweight match. The first one who broke down wouldn't be able to look at themselves in the mirror after this. \n\nI said with total conviction in my voice, \"Not a chance!! The only discussion left is how we are going to end this. I don't even care why you did it.\"\n\nShe was starting to sniffle, as cracks began to appear in her fa\u00e7ade. \n\nShe said, \"You know that I love you with all my heart. This was just a momentary dalliance, a little illicit excitement. \n\n\"It was insignificant compared to our love for each other and it wouldn't have gone on for very long. He pursued me ceaselessly and he is so young and charming. I never thought you would find out.\"\n\nThat was the usual cheaters crock of shit.\n\nI said with profound sadness and regret, \"But I did find out my dear and there is no forgetting what I saw, or forgiving it - not now - not ever. \n\n\"I even understand that it was hubris that made you do it. You over-reached plain and simple. You thought that you were too smart to EVER get caught. \n\n\"But there is far too much unpredictability in the cheating equation. You can't control everything. Eventually the evidence adds up. And so here we are.\"\n\nIt was really very understandable. She had spent her first marriage pushing every sexual boundary imaginable. And the sex itself was probably extremely stimulating even if it was debauched. The whole thing was just so tantalizingly naughty. \n\nConsequently, whatever the first step was I am sure that their affair was fueled by its forbidden nature. In fact her self-loathing was probably part of the overall turn-on. ",
        "I was also sure that her unhappiness with what she was doing would have quickly brought her back to me. And there was good reason to assume that she would never do it again. \n\nBut she had forced me to face the fact that I had never really loved her, or at least not like I did Kari. There was no devastating sense of outrage and profound despair over her loss - no extreme hatred of her or her paramour - no regret at what I had discovered - just melancholy.\n\nI said with despondency in my voice, \"I am going home now. And I am going to ask you to move out as soon as you get back. You recall that the condo is solely in my name, right? \n\n\"I am certain your fuck-buddy would be more than happy to take you in. What you were doing looked pretty hot. I'm sure he will want a lot more of that. \n\n\"Just tell me when you need to get your stuff and I will help you pack.\"\n\nAt that, she started to wail. She kept repeating, \"I love you Danny. I didn't mean for this to happen. Please-please-please can't we work something out? Don't throw away twelve wonderful years. I'll do anything!!\" \n\nThen she broke down into soul wrench sobs.\n\nI said with the weight of the world in my voice, \"YOU threw it away not me. I wasn't the one who opened her legs to that horny piece of shit. Frankly, I don't love you enough to forgive you for THAT betrayal!!\"\n\nShe said with spite and bitterness, \"You'd forgive HER. I know you would. I could never compete with her, EVER!! THAT was why I did it!!\" \n\nI understood what she was saying. And she was absolutely right. \n\nI said gently and with sadness, \"I know.\"\n\nThen I turned and walked out, closing the door on the penultimate room of my life. \n\n_____________________________________\n\nAfter the Fall\n\nI hired a lawyer to untangle the mess. Most of what we had in asset form was brought into the marriage. So sorting out our worldly goods was a relatively quick and straightforward process. \n\nJanet tried every trick of persuasion in an attempt to get me to take her back. But in the end she showed me how smart she was. She accepted that she had crossed the line that no woman ever returns from and signed the papers. \n\nIn many respects I was punishing myself more than I was her. Nobody wants to die alone and that was what I was sentencing myself to. I was not going to find another woman. \n\nWhereas Janet married Shithead almost as soon as the divorce was final. \n\nI got a dog instead. As far as I was concerned I was getting the more loving and faithful of the two creatures. \n\nI had a conversation with the Dean the day after I got back. \n\nThe pictures on my phone led to Shithead's immediate termination. It was easy to invoke the faculty morals clause with him because he was not tenured. \n\nJanet was tenured. So nothing happened to her. At least immediately. But the promotion to Full Professor would never happen in her lifetime now. \n\nOvernight, Janet went from being a rising superstar, to a pariah. It crushed her. \n\nI felt bad about that. It meant that her career would end in ignominy. But there was no way I could torch Dr. Norbert Willis without burning my ex-wife. \n\nI ran into her several times. It couldn't be avoided. We worked in the same place. \n\nShe always gave me the saddest look. It was a potent cocktail of regret and yearning mixed with shame. \n\nI didn't want her to suffer but I had no answers. She'd created the problem. \n\nWillis was totally ruined in academe. No place will hire a faculty member with a morals dismissal on their record. \n\nHe had a lot of money, all of it inherited. Janet had no place to go so she moved in with him. I saw them around Georgetown from time-to-time. \n\nNeither party looked like they wanted to be with the other. But circumstances being what they were they were stuck now. \n\nI hear from the faculty grapevine that he still fucks around a lot. \n\nIt might be karma but it actually hurt me to know that Janet had to put up with that. I still loved her in my own way.\n\nI taught for another three years and retired at sixty six. I had a good pension and with Kari's money I had the freedom to do whatever I wanted with the rest of my life. \n\nI bought a small RV and Buster and I traveled around for three years, visiting every place I'd ever wanted to see in the U.S. and Canada. \n\nBut I was getting sick of cold weather and I didn't want to spend the remainder of my life on the road. \n\nAccordingly, Buster and I sailed the boat down to Key West. I was planning to hole up there for the duration. \n\nI expected that to be another decade or so, since I was still a healthy and hearty seventy-one. Which brings me back to the present day. \n\nPresent Day: 1500 Hrs. on a Monday Afternoon\n\nIt was a bright blue-sky day in Key West. I had been on the island for the past three years and it fit my lifestyle. \n\nAll I ever wanted was the feeling of peace and contentment that I had in those years with Kari. \n\nI remembered those times like they were yesterday. Even if it had been a half century ago. \n\nThe easy-going life of a boat bum was as close as I could get to earthly paradise without her. \n\nIt was a little disturbing to realize that I was only thinking about Kari, not my former wife. \n\nJanet was correct. I had never loved anybody but Kari. And I had probably done Janet a huge disservice by marrying her in the first place. \n\nBut you do stupid things when you lose track of life's ultimate goals. \n\nI knew what I wanted now. So all I did was sit in the sun with my faithful old friend and wait. \n\nI was also back to talking to her, which probably explained why all of the tourists gave me a wide berth. \n\nNevertheless, as I moved into my seventies Kari was more and more on my mind. \n\nI was relaxing with a cheap scotch and rocks at Captain Tony's. That was Hemingway's REAL drink, not the daiquiris that they sell to the tourists. \n\nI was enjoying the view of the weather outside in the street. There had been weather problems elsewhere in the Caribbean. But it had been a particularly tranquil summer in the Keys. \n\nThe sun was tropical hot but if you know how to manage it you get to enjoy the lushness of your surroundings. \n\nAnd if you are at the daily sunset celebration in Mallory Square you understand the sheer enjoyment that the citizens of the Conch Republic get from their beautiful island.\n\nThe verdant greenery and the ocean are soothing to the eye. And if you are in the shade with a cool drink it is like you don't have a care in the world. It was one of the few times since the divorce that I felt content.\n\nUnfortunately, that situation was about to change... drastically! \n\nAt that exact moment, a huge tropical depression swept down off the Sahara. \n\nIn the global mixing bowl of the earth's weather these disturbances almost always presaged serious Atlantic storms. \n\nThis front featured the lowest barometric readings that the National Oceanic and Atmospheric Administration meteorologists had ever observed on the GOES system. \n\nThe front moved past Dakar and made its way out into the South Atlantic sucking up enormous amounts of heat and moisture as it headed for the Cape Verde Islands. \n\nBy the time it had passed over Santiago at 2015 local time, it had already escalated into a major Atlantic storm. \n\nThe Cape Verde Islanders had their capitol of Praia buttoned up tight. During that part of the season they lived with those kind of storms. But even they were amazed by the force and power of the wind. \n\nBy 2300 the National Hurricane Center issued its first tropical storm warning. Then, around 0330, the storm got a name, \"Susie\". The fact that NOAA had almost run through the alphabet showed what kind of year it had been for Atlantic hurricanes. \n\nAs they attempted to get a fix on the storm's track the scientists at NOAA were also seeing a rare drop in the westerly steering winds that normally guided storms of this type toward Mexico. \n\nWithout those winds, the tendency of cyclonic storms to drift toward the earth's Poles was accelerating the track northward. \n\nThe initial GOES data indicated that the target might be anywhere from Cuba to North Carolina. \n\nThe weather had been exceptionally warm that year. So as Susie churned her way across that Atlantic it was going up the scale toward force 2. \n\nFinally, around 05:30 one of NOAAs hurricane hunting P3 Orion's got a definite fix on the storm and its track. \n\nThe news was not good. Susie was now a force 4 killer and it was aimed due west. \n\nEven worse, as most hurricanes approach land they tend to recurve back into the ocean. Susie, on the other hand, was on a dead straight course toward the Windwards Cuba and the Florida Keys. \n\nThe last time a force four hurricane scored a direct hit on the Keys was in 1935 and it killed over 400 people.\n\nPresent Day: 1300 Hours on a Tuesday Afternoon\n\nThe NOAA C-130 had plowed its way through the leading edge of the hurricane and was in the eye itself. \n\nIt was a beautiful day in the eye, completely surrounded by the hurricane wall. The pilot always thought that that was one of the oddest phenomena of a cyclonic storm. \n\nThe four Allison T56A 15 turboprops had practically come off the wing getting them there and the pilot was in no mood for the return trip. But he had found out what he needed to know. \n\nSusie was indeed force 4. And she was pissed.\n\nAs she began to push up against the Windward Islands and the southeast cast of Cuba Susie finally began to recurve north. It was now packing 115 mile an hour winds, which downgraded it to a Category 3 on the Simpson scale. \n\nBut that still meant that the anything in its path would experience a storm surge of 25 feet. The highest point in Key West is 18 feet above sea level. So a lot of that place was going to be under water soon. \n\nAnd the storm itself was now moving much faster than predicted. \n\nPresent Day: 1730 Hours on a Tuesday Evening\n\nI couldn't sit in harbor in Key West. Not if I wanted to keep the boat. The only option was to get out to sea and outrun the thing, or try to ride out the storm surge in the open ocean as far north of there as I could get. \n\nThe worst effects were still predicted to be a day away. The closest and by far the most logical safe harbor was Marco Island. \n\nThat was about 90 nautical miles north on the rhumb line. Which was a nine to ten hour voyage on the engine. \n\nGiven the time I had available I was certain that the run up to Marco would get me into a protected harbor in plenty of time. \n\nThe eye of the hurricane was predicted to track closer to Cuba anyhow, so I knew that would give me some leeway. \n\nI didn't want to lose my boat. Its tanks were full of diesel fuel. And Marco was the obvious choice. So I immediately cast off and set a course East of North on a bearing of 020 across the open ocean, direct for safety. \n\nThe rest of daylight hours were spent battening down the boat. I got all of the lockers and hatches secured, and made sure that everything that moved belowdecks was tied down. \n\nThe sky was an odd blue white with apple greenish overtones and high altitude wispy clouds. The ocean was nearly flat. It was the calm before the storm. \n\nThe Volvo diesel on my C&C is a very powerful and we were making closer to 10 knots on a glassy sea. That meant that with luck we would be pulling into Marco well before sunrise. \n\nThere have been far too many times in my life that I have looked back at thoughts like that with grim irony. This was one of them.\n\nPresent Day: 0230 Hours on a Wednesday Morning\n\nWe had motored to a point about 30 nautical miles south and west of Marco when the wind picked up out of the northeast at about 40 knots. \n\nWe had been averaging 9 knots up to that point but there was no way I could make progress against the huge waves that the increasing wind was whipping up. \n\nSo in order to keep headway I had to fall off the rhumb line and run closer to zero-four-five. \n\nTo the best of my reckoning I was headed for the area south of Cape Romano. I could probably lay up in the Dismal Islands off shore of Lake Okeechobee if things got worse. \n\nI knew that I had outrun some of the hurricane's force but not enough of it. The waves were still killers. \n\nThe sun had set four and a half hours earlier and the waves were in the range of 10-12 feet breaking over the port bow. I told Buster that I wanted him in the cabin. \n\nHe told ME in his most eloquent dog fashion where I could stuff my good intentions. So I put a life jacket on my brave, but stubborn old buddy and we set forth to battle the storm together. \n\nAt that point I battened the cabin shut, effectively making the boat water proof no matter what hit it. \n\nThe boat was doing the roller coaster thing on the swells but still riding relatively sound when the first of the really big waves hit us square on the port quarter. \n\nWe were in relatively shallow water at that point. I knew that because those kind of rollers are an artifact of the depth. \n\nWe went up perhaps 15 feet and crashed down bow first burying the boat up to the forepeak. We popped back up just as we ran into the second roller. It was probably 20 feet high. We went up and down and this time the boat dove to the front of the cabin. \n\nWe must have been taking water because I could hear the bilge pumps start up. I had lashed both Buster and me to the helm stantion using lines to our life jackets. \n\nThat was a good thing because Buster sailed right past me when we dove and if I had not hooked him to something solid he would have gone over the side. \n\nHe shook himself and said, \"Gott im Himmel!\" \n\nDid I mention he was mostly Rottweiler? \n\nI was holding onto the wheel for dear life and I said to him, \"You've got that right buddy!\" \n\nWe continued that way for another hour. The waves were rollers, not breakers. So we would travel up to the crest and then plunge twenty or thirty feet into a trough. \n\nThe rain stung my face like bee-bees even through my insulated foul-weather suit and goggles.\n\nI eventually lashed the wheel. At that point steering was out of the question anyhow. \n\nBut my trusty old Volvo engine was still giving us a enough headway to stay on the course we were following. The wind was blowing so hard that I had to shelter in the lee of the cabin. \n\nThe kind of pitching and rolling that we were doing might be barely survivable in a 40 foot powerboat. But it is not anything a sailing ship can withstand for long. \n\nShortly thereafter the entire mainmast came down. I could see that I was about to lose it when I heard the stays snap one after another like shots. \n\nThen, the mother of all waves dropped us so far on the other side of the crest that the boat literally stood on its nose up to the cockpit, dragging the mast with it. \n\nI knew for sure the next one was going to get us. \n\nThat was when I saw her. She was standing in middle of the cockpit, in her familiar pose, with a hand on one hip. \n\nShe was looking at me with the slightly amused smile that I remembered so well. \n\nShe was dressed in the outfit that she was wearing when she went off to jog. It was like she had been waiting for me, frozen in the moment from that fateful day. \n\nOddly, the boat had stopped pitching and the rain had ceased. It was perfectly calm. Maybe we were in the eye of the storm? \n\nShe walked slowly to me with adoration written on her perfect face. She wrapped her arms around my waist, just like always, and fastened those incredible emerald eyes on me. \n\nThere were tears running down her cheeks. She said with profound emotion, \"I've been waiting fifty years for this moment my love, and now it has arrived.\"\n\nThen she turned those luscious lips up to me and we kissed. \n\nIndescribable peace descended on me. Our souls fused into a single entity and we were bonded as one spirit within an eternity of blinding light. \n\nMy last thought was, \"So THIS is Heaven!!\"\n\nEpilog: Hotel Echo Three Five Four Niner\n\nThe hurricane had blown through the night before and as frequently happens with cyclonic storms the sky was now clear and bright. \n\nCoast Guard Sikorsky S-61R HE-3549 out of United States Coast Guard Station Islamorada was looking for survivors. \n\nThey had gotten an SOS from several boats in that vicinity and they were doing a sweep of the area looking for survivors. \n\nThe Sea-King was at the limits of its search quadrant when the crew saw a large debris field along with a life raft. The raft was completely buttoned up. \n\nThe S-61 went into a standard hover at 25 feet and the rescue diver was deployed. He unzipped the outer shell of the raft and then started waving for an airlift. \n\nThe crew chief dropped a body harness from the rescue hoist. \n\nThe diver grabbed it. What followed was a perplexing amount of fiddling around in the raft. \n\nThere was even more puzzlement when the diver gave the thumbs up to hoist the occupant. \n\nThe occupant was a big dog. He was complaining loudly all the way up to the helicopter. \n\nAs they swung him aboard the crew chief noticed that he had one of those dry erase boards that scuba divers use attached to his collar. \n\nThe message said, \"This is my dog Buster. Please take good care of him. No need to look for me. I'm with her now.\""
    ],
    "authorname": "dtiverson",
    "tags": [
        "endurance",
        "betrayal",
        "commitment",
        "hot wife",
        "big tits"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-old-man-and-the-sea"
}