{
    "title": "Jake and Jed Meet the Thespians",
    "pages": [
        "I'm warnin' you all right now, forget the spellin' and shit. Jake weren't much on book learnin', he never made it past first grade. It's his story, you can blame him for all the mistakes. LYG.\n\n*****\n\nMe and ol' Jed, was sittin' outside the general store one day jus' mindin' ever body else's bidness. It musta been past my dinner time cause my belly was a rumblin' somethin' fierce. I was decidin' which it'd be today, chili beans at Pedro's or beef steak down to Lily's.\n\nNow Jed, he was practizin his tobacca spit aim on the old hound dog that was layin in the street. The dog didn't seem to be rightly happy about bein' a target for ol' Jed, he kept growlin' and showin' Jed how sharp his teeth was. Now you gotta understand about ol Jed, he's none too smart, and he ain't much to look at neither. Me n' ol Jed been ridin' together for as far back as I can recollect, and it's widely known here in these parts, that I'm the brains of this here outfit.\n\nThe old hound, he don't seem none too smart neither, but sometimes I gotta admire him. Well he hiked up his back leg and commenced to lickin' his nuts. I'm a thinkin he does that jest to make Jed jealous. \n\nJed looked over at me with that two tooth shit eatin' grin of his, \"Jake, I purely wish that I could do that,\" he said, pointin' down to where the hound was.\n\n\"Now god dang it Jed, how many times have I told you, if you was to lick that dog's nuts, he'd plumb bite the shit outta you,\" I said with some wisdom. \"What would you want to do a fool thing like that for anyhow? The dang hound looks like he's a holdin' his own, he likely don't need your help nohow.\"\n\n\"No ya dern idiot, I was wishin' that I could lick my own nuts,\" he said.\n\n\"Shit fire Jed, if I was you, I'd take my chances on them dog balls, they'd likely be a site cleaner,\" I returned.\n\n\"Oh fuck you Jake and that mangee old horse of yers too,\" he said turnin' red in the face.\n\n\"Not on yer best day pard, and don't you go badmouthin' my stud neither, or I'll hafta kick that skinny ass of yours,\" I told him in no uncertain terms.\n\n\"Heckfire Jake, you know that roan ain't no stud. I was with you the day you tried to jump that barbwire fence on im,\" he whined.\n\nI winced at the thought of Roanie's family jewels hangin' from the top wire of that dad blamed fence. Now it might not seem real important to you folks that Roanie is a little light in the britches, but if I was him, it'd be purdy danged serious to me. That's why I haven't told him yet, so keep yer yaps shut.\n\nTryin' to change the subject, \"Hows about me an you mosey on down thata ways and get some vittles?\" I asked.\n\n\"You buyin?\" Jed asked as usual.\n\n\"You go an spend all yer wages down at the cat house again?\" I questioned, already knowin the answer.\n\n\"Well shoot Jake, what's a feller to do?\" came his reply.\n\n\"What's a matter Jed, that old ewe of yers pissed off at you again?\" I said with a laugh.\n\n\"Dang it Jake, why you have to keep teasin' me about that ol' sheep? I only did it seven or eight times, and it ain't like the sheep minded no how. You didn't hear her complainin' none,\" Jed flustered.\n\nWe sauntered on down the dirt street a piece to Pedro's cantina. Now if the truth be known, ol' Pedro, he don't really own the joint no more. I think the new honcho's name is Manwell or some dang thing, just as well anyways, the food is better since he took over. \n\nWe saddled up to the bar and Manwell was right there to take our order, \"Two chili beans Manwell,\" I told him.\n\n\"Si, dos frijoles,\" he replied.\n\nJed had to stick his two cents worth in, \"No Manwell, we don't want no free holes, we wants beans and Jake's payin\" he pointed out to Manwell.\n\nI decided to keep my mouth shut because I was purdy hungry. But Jed, did I mention Jed's not right in the head, ah shoot it don't matter much no how, he kept right on pesterin' Manwell about the free holes. Any how, after I finished eatin my beans, I went on out and helped Jed up off the street where Manwell had chunked him. Ya see, after the third or forth time, Manwell got tired of talkin' to ol' Jed. Dang if that little guy ain't tuffer'n boiled owl shit, he musta tossed Jed nigh on thirty foot. Jed landed on his head, don't recon it'll hurt him much.\n\nI handed Jed a tortilly that I'd stuffed with beans, didn't want him to go a starvin' on me. We shuffled on back to the general store, they was a heap more daylight to kill. It's hard work, but I recon we could handle the chore. I leaned my chair back on two legs and fished my tobacca pouch outta my shirt pocket. I folded the cigarette paper down the middle and poured a good bit into the fold. Rollin cigarettes is one of them things that you gotta learn with practice. After a couple a tries, I got the dang thing jest right and put it in my mouth and lit it. I love that first drag after a good meal.\n\nI watched a few tumble weeds roll from one end of town to the other, Jed had pert near perfected his spittin' aim on the hound, when our attention was drawn to the clatter of hoofs comin' down the road.\n\nIn these here parts, it's a rare occurrence to see a wagon beatin' hoofs into town. It's even more rarer to see one all painted up purdy with writin' on the side. You might not be able to tell right off, but I ain't much on book learnin, but I know my letters.\n\nWhen the wagon pulled up in front of ol' Jed an' me, I took to figurin' jest what the writin said. T H E S P I A N T R O U P E is what was painted on the wagon. Now this had me plumb buffaloed for a spell and ifin it weren't for Jed, shoot, who knows how long I'd a set there figurin.\n\nWhen the driver got down, wearin his fancy suit an' all, Jed just come right out and asked the fancyman what it said.\n\n\"Hey fancyman, what's that there say on the side of yer wagon?\" asked Jed.\n\n\"Thespian troupe, my good man,\" answered the fancyman.\n\nWell let me tell you right now, I mostly fell off my chair. Some while back, I was down to the saloon oilin up my gizzard, when this feller comes struttin in and after a few drinks, he percedes to inform me about a particular kinda woman from over the seas called a thespian. Now these thespian ladies is supposed to like to diddle with other ladies, don't that beat all. Bein' from around these here parts, I ain't never heard of such nonsense, but this here feller keeps a sayin he ain't lyin. Now, I never put too much stock into what the feller told me, not until now that is. Hell, it says so right on the side of that there wagon that them thespian women are real.\n\nAs I was waitin' for them thespians to get outta the wagon, I was getting some real funny pictures in my head about how one woman could go about diddlin another. It jest didn't make no sense to me how they could get the job done. Ifin you been around cows at all, you seen one cow mount another cow but it don't amount to nothin, jest a little humpin and then they mosey off in their own direction.\n\nI kept on a wonderin if them thespians was built funny, but they looked like regular girls when they stepped outta the coach. They was three of em in all. They looked like they was built normal to me, but with them fancy dresses on I couldn't be too sure. \n\nThe first one was real tall and skinny like corn stalk and she was so ugly, I bet she could plumb scare the mud offin a shovel. The next one was purdy enuff, but she was older than my grandma. Now the last one, she was somethin else, she had the face of an angel but musta weighed in at three hunerd pounds. Damn, the kinda gal you would ride with yer spurs on and I reckon you may dern well need em ifin you don't want to get bucked off.\n\nWell ol Jed, he ain't bashful, \"Jest what is it you thespians do?\" he asked.\n\n\"We perform on stage if we are able to find a proper venue,\" the tall one replied.\n\nThis time I did fall off my chair, but my lips was movin before I even got to my feet, \"You mean you do it in front of people?\" I asked, not believin what I heard.\n\n\"Well of course, where else would we perform?\" said the old woman.\n\n\"Well I don't rightly know, but I didn't figure you'd do it in front of other folks,\" I retorted.\n\n\"What's this here venue thing?\" Jed butted in, \"Maybe they got one of them in the gen-ral store.\"\n\nThe bean pole moved in closer to Jed and touched his face, \"You poor, poor dear, a venue is a stage. A platform for us to perform upon,\" she said. \n\nThe fancyman piped up and asked, \"There wouldn't happen to be a stage in this fair city, would there?\"\n\n\"Nah, the Fargo stage won't be a comin til some time next week,\" Jed let on.\n\n\"You mean like the one over at the oprey house?\" I pitched.\n\n\"Excellent, that is precisely what I had in mind,\" said the fancy man.\n\nWell now, this was gonna be one show I wouldn't miss for all the tea in China. Me, bein' the natural curious type, was gonna find out exactly how them thespians furnicate one another. I didn't rightly know what ol' Jed was suspectin' but he was likely to be stuck dumb, and maybe even blind.\n\nThe next couple a days went on by purdy slow. I was thinkin' plenty about them nekkid thespians up on the bandstand. I don't mind tellin' you, I had to make two or three trips to the outhouse to polish the rust offen my spike. If this kept up much longer, I'd have to make a trip on down to the cathouse. My rough ol' hands was plumb wearin' the hide offen my tallywacker.\n\nSo the big event finally was set for that night. I got there early with ol' Jed in tow. I was gonna get me a seat right up front even if I had to thump a few noggins to do it. As luck would have it, me and Jed got the best dang seats they was. Jed was his usual smelly self, but I had forked over a dollar to get a hot tub bath and a haircut. I purt near as excited as kid in a candy store. My whanger had a notion or two of it's own, he was wanderin' around inside my long handles lookin' for a way out. The pertrusion was plumb obscene, and I had to cover it up with my Stetson.\n\nAfter a big to do and a long speech by the mayor, the show was gonna begin. I was glancin' around the room, the whole dern town musta been there. I had to chuckle a might, thinkin about how them fine upstandin' church folk was gonna react to them thespians thespisin. I figured the parsons wife might jest get the vapors and croak and the school marm was apt to piss herself. It was gonna be one hell of a show.\n\nSo grandma thespian struts out on to the stage and she starts a jawin' about this Wilbur Shakey Spear fella. I weren't to clear about what she was goin' on about, I jest wanted the thespisin to begin.\n\nWell then it happened, the shit done hit the barn door when the fancyman come walkin' out. He was all dressed up in this silly assed get up with long socks and baggy drawers. He had a fancy coat and the stupidest dang hat I ever saw. Jed purt near shit hisself, and commenced to laughin'. He was kickin' his feet and the dern fool kick over a kerosene lamp. Well, you probbly can guess, the fire started a burnin' purdy good. The fancyman was tryin' to stomp out the fire and his pointy shoe started burnin'. He was a dern fine dancer, but I don't reckon it was a purpose.\n\nThe women was a screamin and the men was shoutin. I was beatin the crap outta ol' Jed for ruinin' the thespian show. Jed was still laughin' at the dancin' fancyman and the fire was getting bigger by the minute. The sheriff was yellin for everyone to get out, I let loose of Jed and ran to the back to see about the thespians.\n\nThey was a might flustered, so I took charge of the sitiation. The tall one, still in her bloomers, was the closest so I heaved her over my shoulder and made for the door. I dumped her out the door and went on back, I passed the fancyman still a hobblin some but he was headed in the right direction. Now grandma she was worried about her clothes, seemed kinda funny to me since she was a fixin to strip on down in front of the whole dern town. I told her I would save the dresses ifin she would get the heck out. \n\nIn the shuffle I realized that I had forgot one, the fire was lookin like the gates of Hadeys now but I reckoned ol' fatty needed my help. I jumped into the horse trough and soaked myself to the bone, I reared back and ran like a dang fool into the blaze. I looked high and low for her fat ass and came up short. I was startin' to feel like rare roast beef, dang it was hot. The fire was burnin' real good and there was jest no way for me to get back out through the front door. I made a mad dash for the back door and hit it full steam, wouldn't you know, the door weren't hardly shut and I continued at a full gallop until I crashed into the outhouse.\n\nNow for your information, a growd man runnin full tilt at a outhouse door don't stand a chance at a good result. The only thing that saved my hide was that fatty was sittin inside with her bloomers round her ankles doin' her biddness. I ended up purdy much sittin' in her lap, but the force of me collidin' with the little shack... Well it was creakin and groanin and I saw the surprised look on the thespians face jest before the cave in. \n\nThough the muck was soothin after bein in the fire, well, they jest ain't no way else to say it, it smelled like SHEE-IT. I had no other thought on my mind but to get the hell outta that stink hole, but every time I got a foot hold that blamed woman pulled me back in. With all the commotion from the fire, it didn't hardly make no sense to cause a ruckus, so we sat in that honey water until dawn. A man gets a real apperciation for flowers while spendin the night sittin in shit. \n\nIt took two mules to drag that thespian outta that hole, and I spent the day and the best part of a ten dollar gold piece tryin' to get the stink off. \n\nI figured to see how ol' Jed made out but I couldn't locate the varmint. The barkeep at the saloon told me I might oughta go see the sheriff. Well, it seems that they locked him in the clink. The sheriff tells me its fer his own good seein hows he a idiot an all. He also persuaded me to get outta town at the end of his six gun, said he don't want no lynchin' party to spoil his supper.\n\nWell, bein fond of breathin', I hitched up ol' Roany and headed east into the sunset. Now you might reckon that this is where the story ends. Well, you'd be wrong. Bout an hour or so down the trail, I ran smack dab into them thespians fixin to make camp for the night. \n\nThey was down right hospitable and asked if I'd like some supper. Not bein' the type to turn down a meal, I said \"shure,\" and set out to gather some firewood. \n\nI noticed right off that the fancyman weren't with em. I reckoned he holed up a few days to let his burnt up foot mend a might. After the fire was a cracklin', I tended to the horses and got em bedded down for the night. The thespians made a right tasty stew and I ate my fill. I reached in my pocket lookin' for my cigarette tobacca, but I reckoned that I'd lost it in the shitter.\n\nSo jest as I was feelin' low about not havin' an evenin' smoke, the skinny bitch pulls out a little bitty cigarette and hands it to me. Shit fire, that was some smoke. My throat felt like I'd been on the trail for a week with no water, and my head was a buzzin' like I'd went and drank three bottles of rotgut. \n\nThe fat one and the skinny one headed down to the creek, grandma and me set a spell by the fire and smoked another tiny butt. Now I'd heard tell about the weeds that some Injuns took to puffin', this musta been it. I was feelin' bout as stupid as Jed, and I had a grin from ear to ear. Them tiny cigarettes was bout the dangedest thing I'd done since Ma smacked me in the head with a cast iron skillet when I was a youngun.\n\nNow I want y'all to listen close to the story cause we's jest getting' to the good part.\n\nGranny thespian grabbed me by the arm and we went stumblin' down to the creek. When we was about there, she held a finger to her lips to signal to me to be quiet. We kinda snuck up on the other two, least ways if they heard us, they didn't pay us no never mind. \n\nNow this was some sight, the two girls was a playin' in the water without a care in the world. They didn't have one stitch of clothes on between em. Their bodies was all wet and kinda glistenin' in the moon light. Holy horse turds, this was the mother lode, I was gonna get to see the thespian show after all.\n\nI was so busy watchin' them girls in the water that I clean forgot about grandma. Well, she hadn't forgot about ol Jake, I'll gar-un-tee. While I spied on skinny and fatty, she was unhitchin' my britches. As I watched fatty suckin' on the others nipples, granny was undoin' the back flap on my long johns. I'd long since forgot to breathe, this was way better than the rodeo at Sedona. It was sure-nuff excitin', I jest wished that ol' Jed was here to see it cause there ain't no damn way anybody is gonna believe this here shit goin' on right in front of my eyes. \n\nSo, jest as I figured the answer to all my ponderin' over how two women diddled was about to become clear, it had come apparent to me that grandma was fixin' on some diddlin' of her own. She'd poked her arm plumb through my legs and was a workin' away on my pump handle. Lord almighty, the pump was primed and she was 'bout to hit a gusher. She was churnin' my butter for all she was worth, and I don't mind tellin' y'all, right then I didn't give a hoot if she were two hunerd year old.\n\nI started bellerin' like a bull calf with a hot iron to his ass. As my cream hit the surface, my legs give a way and me and grandma went ass over tea kettle down into the creek. The cold water woke me plumb sober, this was the second bath I'd had that day. All three of them fool thespians was bustin' a gut, I failed to see the humor. \n\nMy pride was no where to be seen. Then fatty took the bull by the horns and picked me outta the water like a baby. Without one word spoken, she carried me clean up the hill and sat me down pretty as you please next to the fire. By that time the others had joined us, as fatty striped the wet clothes offen me. Skinny was doin' the same to granny, as we was soaked to the bone.\n\nWe musta made some sight, all nekked and such. The cracklin campfire was warmin' me up and I felt sorta good just bein' outta my wet duds. The thespians didn't appear to be in no hurry to get their clothes back on neither. I perched myself on a rock and with out much fore thought, I spread my legs wide as I could to let the fire dry my privates.\n\nThe warm fire and that powerful tobacca from earlier, made me all nice and fuzzy inside. I had my head back and my eyes shut while enjoyin' the cozy feelin and derned if it didn't jest keep getting' better. I could feel some strange goin ons down where little Jake makes his home. When I opened up my eyes Mary, the skinny one, was kissin' little Jake. I'm not lyin', now I knew why that old hound dog always licked his nuts, I was purely in heaven. \n\n\"What's that there you're doin',\" I asked.\n\nMary took her mouth away, \"It's called fellatio, do you like it?\" she queried. \n\nWell it didn't take much thought and I knew little Jake was happy as a pig in shit, \"Shoot Ma'am, like doesn't begin to cover it,\" \n\nMary went back to work on little Jake with her mouth and tongue. Lordy, how could it get any better? Well, I'm fixin to tell ya. You all know how I was lookin' to find out how the thespians diddle each other, as I looked over at the other two I found out. Grandma was on her back and Bertha, the fat one, was doin fell- a-chio to her. Bertha was lappin' at her hoo-haw and Grandma looked almost as happy as me.\n\nLittle Jake couldn't see the action, but somehow he knowed what was goin on. He twitched two or three times and jest got harder. Mary commenced to swallow him down to the root. Bertha had her big ol' ass up in the air and it was pointed right at me. Her hairy crack was open and I think it was winkin' at me. It was mezmerizin', Mary seemed to know too what was goin' on. She took hold of me and walked me right up behind Bertha. I ain't lyin' I swear.",
        "With both hands she aimed little Jake right at Berthas gappin' hole and pushed him in. I'm no expert, but I had a good idea what to do next. Mary seemed to be the odd man out, but not for long. She had her beaver on top of Wilda's mouth, that's grandma, if you ain't figured it out. \n\nNow me and Bertha and Mary and Wilda was all moanin', and oohin' and ahhin'. The fuckin' and suckin went on most of the night. I ain't lyin'. They wasn't no part of no one that didn't smell like pussy the next mornin'. \n\nAfter breakfast, and a little more fuckin', I got to feelin' purdy bad about ol Jed jest sittin there in jail. Ifin they was a man on earth that could apper-ciate all this thespisin, it would be Jed. We all talked things over and agreed that another hard dick would be helpful if this thespisin was to continue. I told you all before that Jed wasn't much in the brains department, but the girls all got purdy enthused when I explained to them what Jed lacked for in smarts, he made up for in cock. I seen him nekked once, and it weren't no wonder that ol sheep of his didn't want much to do with him.\n\nBreakin' Jed outta jail wasn't gonna be easy. It would require brains and cunning, I had some brains and them thespians had cunts. I told the girls to stay put, I knew jest what we needed and where to get it. Diny-mite, me and Jed run across a couple of cases at an old abandoned mine. I never used the stuff but how hard could it be.\n\n\"PSST, Jed you in there?\" I whispered into the bars in the back side of the jailhouse.\n\n\"Who's there?\" he asked.\n\n\"It's me, Jake, we're here to bust you out,\" I said.\n\n\"What fer?\" he asked.\n\n\"Don't you want out?\" I asked, getting' kinda puzzled.\n\n\"Never really thunk much about it, they feed good in here,\" he said.\n\nHe was lookin' out the window at me now, \"Well, Jed ifin you would rather stay in there and miss out on all this free pussy...\" I said jest as Mary raised her dress and showed hers to him.\n\nJed was shakin the bars and kickin, maybe we wouldn't need no diny-mite jest pussy to get him out. \n\nAfter a few minutes, it didn't appear that the bars was gonna give, so I said, \"Stand back pard, I me some diny-mite here to get you out,\"\n\nI asked Wilda, her bein the oldest and all, \"How much should I use?\"\n\n\"You've no experience with explosive? My lord, I thought you knew about this,\" she replied.\n\n\"Not yet, but I'm fixin' to learn,\" I said.\n\nJed chimed in, \"Use it all,\"\n\n\"You reckon?\" I said.\n\n\"Girls, we should retire to a safer location,\" said Mary, as they hurried down the alley.\n\n\"OK pard, stand back,\" I said as I struck the match on the wall and lit the fuse.\n\nI figured it wouldn't be a good idea to stand there and watch so I took off after the girls. I made it about half way. WHOOOM! 'I think maybe I used too much,\" I said to myself as I went squirtin' out of the alley face first. After findin' my hat and pullin' my boots back on, I made my way back to where to jail used to be. The girls was on their way with the wagon.\n\nJed was standin' there with the door to his cell in his hands, the rest of the jailhouse was blasted to dust. He had confused look on his face, jest like normal. \n\n\"Come on we got to high tail it,\" I yelled.\n\n\"Huh?\" was his reply.\n\n\"Let's beat it Jed,\" I yelled even louder.\n\nJed didn't act like he heard me so I latched on to one ear and started to run, he followed.\n\nWhen we got back to camp Jed started to get some of his hearing back. He didn't appear to be any the worse for wear cept his ears, well and most of his hair was burnt off of course.\n\nI was thinkin 'bout a little celebration fuckin when I heard the hoofs off in the distance. It sounded like quite a few riders, maybe ten or twelve. How many are in a posse these days? I hadn't figured on them chasin' us, but I never expected to blow the shit outta the jailhouse neither. We was sure to be in a heap of shit in about a minute or so.\n\nThe girls were actin' kinda funny and takin' off their duds. Couldn't they see we was about to be caught? I tried to explain the situation to grandma, but she told me not to worry they had things under control. \n\nJed and me got hid in the bushes about the time the sheriff come along with his posse. That fat ol' sheriff pulled his horse up short jest in time to see Bertha pullin down her drawers and pointin' her hairy crack in his direction.\n\n\"Looking for something sheriff?\" she asked with a big ol' smile on both sets of lips.\n\n\"Well... we was... ah... huntin'... what the hell was we doin' boys?\" he looked mighty confused at the time.\n\nMary and Wilda finished strippin' off, now they was all three nekked and smilin' at the posse.\n\n\"If you boys would like to get a little more comfortable, I'm sure that we can come to some sort of an arrangement,\" said Mary.\n\nThe whole dang posse was dismounted and outta their clothes before I could blink twice. They was lined up and hard and the dust hadn't even settled yet. The sheriff was sinkin' his pecker balls deep in Bertha while Mary was doin' that fell-a-chio shit on one of the deputies. Grandma musta had a bunch more experience, while one was puttin' it to her from behind, she had a hard cock in each hand. Jed's eyes was 'bout the size of silver dollars as he watched the show.\n\nI knew it was time to make a move, all eyes were focused on the nearest pussy. \n\n\"Let's go Jed,\" I said\n\nI ran out and started scoopin' up clothes and six shooters. That dumb ass Jed shucked his clothes and shinnied up in line behind the nekkid posse. Did I tell you Jed weren't too smart?\n\nThe head honcho was ruttin' and gruntin' like a bull elk when I stepped up and threw the hammer back on the .44 I had in my hand. I positioned it right between his beady little eyes.\n\n\"OK sheriff, hands up,\" I barked\n\nI waited for them all to get acquainted with the notion that their guns and clothes were missin'. That stupid ass Jed figured I had the drop on him too so he was the first to raise his hands.\n\n\"You all get back to fuckin', jest keep your hands up while I talk with the lawman here,\" I ordered.\n\n\"Dang it Jake, it ain't right pointin' a man's own gun on him,\" he whined.\n\n\"Would it relax you any if I pointed this one at you?\" I asked, holdin' up the pistol in my other hand.\n\n\"I reckon,\" he said.\n\n\"Ok then,\" I said as I aimed the left hog leg at his forehead, \"Sheriff, we seem to have a small problem here. I reckon you ain't too keen that I busted Jed outta jail,\"\n\n\"Did ya have to go and turn the dern place to gravel? Why didn't you jest go through the front door? It weren't locked,\"\n\n\"I suppose I never give it a thought, I'm right sorry sheriff that I went and ruined your jail but you had no call to lock Jed up it the first place,\" I said.\n\n\"That weren't my doin' Jake, that was the Mayor dun that,\" he said pointin' over his shoulder with his thumb.\n\nI saw the Mayor over yonder 'bout to slide his skinny little pecker into that canyon between Bertha's thighs, \"Hey you, asshole,\" I said pointin' the sheriff's pistol toward the Mayor, \"You get your ass on over here,\" \n\nThe Mayor reluctantly made his way towards us, \"Ah Jake, I was about to get my first piece of ass in twenty years,\" He was almost bawlin' his eyes out.\n\nI felt real bad for him, wouldn't you? No pussy for twenty years, \"If you promise me not to do somethin' stupid, how 'bout we sit down over a cup of coffee and settle this mess after you're done fuckin'?\" I offered.\n\n\"Sure Jake, sure, anything you say Jake,\" he said as he trotted off only to find he had to get back to the end of the line. \"You too sheriff, and I apologize for interrupting' mid fuck, that weren't fair,\" \n\nThe lawman smiled and joined the crowd. I fixed a big ol' pot of cowboy mud and sat down by the fire and waited for the girls to soften up the posse. It was near sun up when the fuckin' ended. Them thespians sure knew how to make a man agreeable. Only one that was left standin was Jed, he still had his hands in the air thinkin I still had the drop on him. What a dumb ass.\n\nThe posse was all pussied out and the Mayor agreed to forget about the whole thing. I had to chuckle a little at how he was gonna explain the smell of fuckin, to his wife. The sheriff told me he was glad we worked it all out since he didn't have a jail left to throw us in.\n\n\"To be or not to be, that is the question.\" Scuse me, I was jest rehearsin' my lines for the play. You see me and Jed, after all this shit, are real live thespians now. Shoot, a week ago I couldn't even spell it, now I is one.\n\nSee ya round the bend Pard. Maybe next time I'll tell you how me and Jed come to be scouts for General Custer. "
    ],
    "authorname": "leapyearguy",
    "tags": [
        "posse",
        "sheriff",
        "fire",
        "western"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/jake-and-jed-meet-the-thespians"
}