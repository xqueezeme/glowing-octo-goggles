{
    "title": "I Love Women in Panties Ch. 07",
    "pages": [
        "It was nearly midday as I drifted into consciousness. Sally was still asleep lying on her front next to me. One of us must have gotten too warm in the night, as the covers were more off than on us. I lay there contemplating the previous 24 hrs admiring the white satin mound that was my sister's panty covered ass realising what a monumental list of firsts I had encountered. \n\nI had thought Hilary's orgasm in the disco was a watershed moment but that paled into insignificance compared to the rest of the night! I had made love to two gorgeous young women both of which had seemingly enjoyed my inexperienced ministrations. I had slept all night with a woman for the first time all be it that woman was my sister! This was something I was still wrestling with. If I wasn't before, I was definitely now a dyed in the wool panty freak, I absolutely adored the look and feel of a pussy or an ass in panties and my favourites were always going to be bikini briefs, cotton, silk, satin or nylon I was hooked!\n\nThe sight of Sally's lovely ass encased in white satin did nothing to disavow me of that opinion either. I did have concerns about the line Sally and I had crossed though and hoped that we would both be able to deal with it sensibly. I knew or thought I knew, that I felt incredibly close to Sally probably closer than ever before but also knew it would go no further than it had done and would remain a one off. These thoughts however did not stop me from moving closer to Sally and gently stroking her satin covered ass, the firm roundness of her cheeks under the softness of the satin were wonderful. \n\n\"Mmmm that's nice, what are you after eh Mike?\" Sally sighed half asleep. \"You seem to have a thing for my ass little Bro.\" \n\n\"I'm not after anything Sis,\" I replied. \"But I will admit, you now have a lifelong admirer of your ass.\"\n\nSally laughed \"Well you'll have to keep that to yourself Brother dear because last night and today are our secret I don't want anybody spoiling what we've experienced between us!\"\n\nI had heard the shower going earlier and could now hear movements around the flat and a lot of giggling. \n\n\"I wonder what those two are up to,\" I asked. \n\n\"I don't know, but I guess we should think about getting up and having a shower ourselves,\" Sally replied. \"First though how are you feeling after last night Mike?\"\n\n\"A little self-conscious I guess, being in bed with my half naked sister!\" I replied. \"But then again, she is an absolute babe! So, I guess pretty much okay, if a little concerned or confused I'm not sure which or both. What about you, how are you feeling? I asked.\n\n\"You know what Mike, I feel good, I feel like I've got something out of my system, scratched an itch or something like that. I am comfortable I can deal with what happened and I don't regret any part of it.\" She replied.\n\n\"I think I can too, although I guess I will always be a little bothered that we let it happen, on the other hand it seemed fate dealt us a hand that we had little choice but to play out?\" \n\n\"It's going to be a special memory Mike, we will be closer than ever now, last night will bind us together like never before.\" Sally said with a catch in her voice and taking me in her arms and holding me tight.\n\n\"I love you Sis, I love you so much.\" I said \"Oh yeah and I love your panty covered ass as well!\" I chuckled.\n\n\"Well enjoy it now Bro because it's all mine after today! Time for a shower methinks and let's see those other two tarts are up to?\" Sally said Laughing and moving to get off the bed.\n\nSally slipped in to a short silk robe that did little to cover much but did look very sexy, her panties visible through the thin material, her nipples pushing against the silky robe. \n\n\"Come here Sis,\" I said. \"I need a hug!\"\n\nSally sauntered over to me looking sexy as hell, her robe a little loose at the front showing plenty of cleavage and the front of her panties clearly on view. I took her in my arms, one hand going straight to her ass, the silkiness of her robe sliding over her satin panties, a sensation I will never tire of, panties felt through the softness of a slip or robe or silk dress is one of the joys of being a panty lover.\n\n\"A Hug! More like a grope!\" Sally laughed. \"You just wanted to get hold of my ass again!\"\n\n\"Not just your ass.\" I chuckled as I also took her satin covered breast in my hand. \"You are beautiful and I want to remember this moment forever.\"\n\nMy cock had been twitching for a while now, however the feel of Sally's breasts through the satin of her robe tipped the old fella over the edge causing him to stand smartly to attention.\n\n\"Jesus Mike what are you going to do with that?\" Sally asked, \"I need a shower right now not to be skewered by your dick!\" She was laughing as she said this, but this did not stop her taking hold of it giving a quick stroke.\n\n\"I need a shower too Sal, maybe I could join you to save time? I said this with no real expectation of her agreeing to this.\n\n\"And how will showering with me get rid of that?\" She asked pointing at my cock.\n\n\"I don't know Sis, but I do know you and I both need a shower, the girls are already up and about so let's just get on with it huh?\"\n\n\"Alright then, come on let's go clean up.\" She said opening the bedroom door and stepping across the landing to the bathroom.\n\nI followed Sally into the bathroom closing the door behind me, Sally was turning the taps of the shower on adjusting the temperature. She untied her robe and slipping it off her shoulders, put her fingers in the waistband of her panties sliding them down over her thighs and on down her legs. As she stepped out of them, her breasts hung provocatively as she bent forward, seeing Sally naked was nothing new, however since last night there were things I noticed that I simply hadn't before.\n\nShe turned and stepping into the bath moved under the stream of hot water, wetting her hair and taking the soap in her hand she started to lather herself. I stood watching for a moment before taking my pyjama bottoms off and joining her. My erection had subsided a little, my cock now only semi hard, I took the soap from Sally and began to lather myself.\n\n\"Let me do your back,\" I said and not waiting for a reply I started soaping her back all the way down over her ass and down her the back of her legs. On the way back up I paid some more attention to her ass enjoying the feel of the slippery soap moving over those glorious firm mounds of flesh.\n\nIt seemed instinctively Sally parted her legs, so I moved my hand between them soaping her warm pussy as the water flowed between her legs. After a minute or so I stood up putting my arms around her, soaping and massaging her tits, with my cock no longer at half-mast it was pressing hard between her ass cheeks.\n\n\"Mike,\" Sally moaned, \"We came here to shower not screw!\"\n\n\"I'm not trying to screw you Sis, honest!\" I replied. \n\nTruth was, I had not intended to do anything other than have a shower, however, the one thing a guy my age has no control over is his cock or when it might rise to the occasion! Sally turned round and taking the soap away from me started to wash me...\n\n\"We've had our moment Mike,\" Sally said looking me in the eyes and taking my cock in her hand started soaping it. \"Now what on earth are we going to do with this, have you got no control over it all?\"\n\n\"It appears not Sis, and if you keep that up, there's going to be an accident,\" I chuckled.\n\n\"Mike, right now there is nothing more I would like than a hard cock inside me, I'm just not sure that it's what we both want at this moment?\" Saying this didn't stop her working my cock or moving her pussy toward the head of it.\n\nThe water was still pouring over us, putting my hand down I cupped Sally's pussy, two fingers sliding easily inside her. The warmth and dampness I was feeling had nothing to do with the shower, it was obvious she was very aroused.\n\n\"Mmmm Oh my god Mike what are we doing?\" She moaned.\n\n\"Nothing at the moment Sal, nothing we can't stop anyway.\"\n\n\"Shit Mike, I don't think I want it to stop, I want you inside me. Is that wrong? I don't believe I ever thought this would actually happen.\" \n\nSally had lifted herself up on her toes and was now rubbing her pussy on the head of my cock, which was teasing the entrance of her passage partially slipping in only as far as our standing position would allow. \n\nWith water still cascading down on us Sally seemed to have made her decision as she turned and leaning forward took my cock between her legs and guided its head to the entrance of her pussy. She moved back a little, and that was it, I was sliding into my Sister as she let out a long throaty moan.\n\nSally pushed hard against me meeting every thrust of mine the feeling very intense and in no time both of us were gripped by our impending climaxes. With a final frenzy of thrusts I came, my legs almost buckling under me as I held Sally's hips pulling her hard onto my erupting cock. Sally was moaning and shuddering as she experienced her own orgasm, As my climax subsided I leaned forward lying my head on her back and taking her hanging breasts in my hand allowing the water to flow over us and maybe wash away our sins?\n\n\"Oh my god Mike that was beautiful! Probably wrong but beautiful none the less,\" She said with a tremble. \"Now where's the soap got to, I think maybe it's time to finish what we came here to do!\"\n\nI slid out of Sally's wet pussy as she slowly stood and turning round held me tight kissing me as the water continued to flow over us. Bending down Sally picked up the soap and started to wash my rapidly diminishing cock...\n\n\"Ah Mike don't you love me anymore?\" She teased.\n\n\"Obviously more than I should Sis,\" I replied \"How wrong is what we've just done Sal?\" I asked.\n\n\"Last night and just now stays between us Mike and leaves any judgement calls right here with us, you and I both know it's wrong but as we've already said it felt right and natural to us and that's fine by me!\" she said. \"Now if we don't get out of this shower soon I'm going to turn into a prune, so come on bro hurry up!\"\n\nTurning the taps off Sally stepped out of the shower and grabbed a towel starting to dry her hair, I followed her out and taking another towel went over and started to dry her...\n\n\"Right or wrong Sal, I don't care I love you and will remember all of this with no regrets.\" I said softly drying her all over.\n\n\n\nBoth dry now and with towels wrapped around us we hopped across to the bedroom to get dressed, although dressed was a bit of a misnomer as we intended to slop around for the rest of the day. I put a t-shirt and trackie bottoms on while Sally pulled on a pretty pair of white cotton panties and a longish t-shirt although not so long as to hide her ass cheeks as she walked in front of me as we went out to find Diane and Julie.\n\nWe walked into the lounge to find Sally's small dining table had been set for breakfast even though it was well past midday.\n\n\"Hey sleepy heads you ready for something to eat?\" Diane called from the kitchen.\n\n\"Absolutely starving!\" I called back \"You want a hand?\"\n\n\"No, everything's under control here hand here, just sit yourself down, we'll be out in a minute.\"\n\nJulie was the first one out of the kitchen a jug of coffee and orange juice, however it was a while before I noticed what was in her hands. She was wearing a white chiffon babydoll nightdress, I say wearing, as this is an overstatement, the minute piece of material she was almost wearing, was completely see through and impossibly short. The edges and hem of the babydoll being trimmed with white satin, with a white satin tie at the front just under her boobs and was open beyond that. Underneath she was wearing what I assumed to be matching white satin panties, and was looking an absolute vision of sexiness. Certainly, she had to be up there with the very horniest breakfast waitress on the face of the earth! That was until the next vision of loveliness walked in with a couple of plates of food!\n\nDiane was attired very differently and swept into the room like a Greek goddess, she was wearing a stunning soft yellow full-length nightdress and matching peignoir, (I have since learned that is what they are called!) I am unsure of the material, however it was both delicate and semi-transparent, enough for me to see that she was wearing panties of some sort. The only way to describe Diane's entrance into the room was that she floated in on a wave of elegance that completely took my breath away, you couldn't choose two more contrasting outfits one overtly sexy and the other elegant and classy but still incredibly sexy!\n\n\"My god you both look stunning,\" I stammered. \"This is a hotel I'll be recommending to my friends if these are the staff uniforms!\"\n\n\"Put your tongue a way and close your mouth,\" Laughed Diane. \"Anyone would think you'd never seen a woman in her nightdress before!\"\n\n\"Yeah well, nothing like you two that's for sure!\" I said. \"You've never worn anything like that when you've stayed with us in the past and I don't think I've ever seen my Mum or Sally in anything similar, have I Sis?\"\n\n\"I do have one or two nice things I guess you've just not noticed them before. I must say I'm feeling just a little under dressed right now! Maybe I'll change after we've had breakfast, what do you think girls?\" Sally said grinning.\n\n\"I think you definitely should!\" I said\n\n\"I wasn't asking you bro, I wanted the ladies here views not yours.\" Sally replied.\n\n\"Oh I think the occasion maybe calls for a little more effort on your part, so yes I think you should change after brekkie.\" Julie sniggered. \n\n\"Yep I'm with Julie, definitely something more than a t-shirt is necessary.\" Diane said.\n\n\"You'll have to do better as well Mike.\" Julie said.\n\n\"Well pardon me for not bringing my silk pyjamas and smoking jacket!\" I huffed, \"So I'm afraid what you see, is what you get ladies!\"\n\n\"Silk pyjamas! Why didn't I think of that?\" Giggled Diane. \"I just happen to have a satin pair with me you can borrow.\"\n\n\"Just one minor point Diane! The last time I looked I was a man and therefore women's pyjamas are of no use to me!\" I said firmly.\n\n\"Let's eat breakfast before it gets cold, then we'll decide what you are, or are not, going to be wearing young man!\" Diane said with a mischievous grin.\n\nDiane floated back out to the kitchen returning with Julie and the rest of our breakfast. Despite my hunger, I struggled to concentrate on my food with Diane and Julie sitting at the table like a pair of Sirens drawing me to them, my eyes drawn like magnets to their breasts as they both sat nonchalantly eating their breakfast. \n\nWe finished eating and started to clear the table, I followed Diane & Julie out to the kitchen like a lapdog completely entranced by their respective outfits fascinated by the differing appeal of each. Julie's babydoll screamed, \"Hey! I'm one sexy honey come and get me!\" Whereas Diane's said, \"Hello darling, come up and see me some time.\" I loved them both.\n\nOnce everything was cleared away, we went back into the lounge where Sally had put some music on but was still wearing her t-shirt. \n\n\"Sally, why don't you go and find something a little more alluring to wear, then we can see what we are going to sort out for Mike.\" Diane said as Sally disappeared down the corridor to her bedroom.\n\n\"Whoa! Stop right there ladies, I have already said I don't have anything else to wear and I am not wearing any of your clothes! I'm not a poof for heaven's sake!\" I protested.\n\n\"Mike, come and sit next to me here,\" Diane said softly but firmly. \"Now tell me, did you enjoy your birthday yesterday?\"\n\n\"Silly question Di, it was mind blowing, I have never had an experience like it, utterly amazing! I can't thank you enough!\" I said.\n\nAt that moment, Sally came back into the room wearing an ivory coloured satin nightdress, very short and delicate with string straps revealing a serious amount of cleavage. Whilst not quite as short as her t-shirt had been, it would still have the ability to show off her panties if she were not careful. \n\nShe sat down next to me on the sofa and immediately the hem rode up her legs exposing the front of her white panties. Julie had pulled one of the floor cushions over and lounged in front of us.\n\n\"Looking good Sal, very sexy!\" Julie purred.\n\n\"So tell us Mike, what you learnt, from all your new experiences yesterday?\" Asked Diane.\n\n\"I'm not sure what you mean or what you are really asking.\" I replied.\n\n\"Well to start with, do you think we three are lesbians?\"\n\n\"No, of course not why would I?\"\n\n\"Because we've all had sex with each other in the past, last night you saw us together, so surely we must be?\"\n\n\"Well... ah...no, you were just enjoying the moment I thought it was very natural.\" \n\n\"So, what makes you think that wearing my satin pyjamas makes you a poof?\"\n\n\"It's pretty obvious isn't it? I'm a bloke and they are YOUR satin pyjamas, why would I wear girl's clothes?\" I said.\n\n\"Men have silk pyjamas, what's the difference?\" Giggled Julie.\n\n\"Because they are men's silk pyjamas, NOT women's!\" \n\n\"Touch Sally's boob and tell me what it feels like.\" Diane asked.\n\n\"What?\"\n\n\"Please Mike, do as I ask, caress Sally's breasts.\"\n\n\"But she's my sister!\" I stuttered.\n\nOh Please Mike,\" Diane sighed. \"Julie and I are your sister's closest friends, and if you think we are unaware of what happened between you two last night then think again!\"\n\nI was horrified and speechless, and looking between Julie and Diane I slowly turned to Sally who nodded with a wry grin.\n\n\"Sally,\" I groaned. \"Why didn't you tell me they knew?\"\n\n\"Mike, what happened between us last night was not planned, but I'm also not surprised that it did, and neither I am surprised that these two guessed. Particularly as Diane has had her own experience with her brother.\" Said Sally.\n\n\"It's true Mike, Diane replied, her hand stroking my leg. Live and let live is my motto and we are so close you are like a second brother to me!\" \n\n\"Yeah its cool Mike, really it is,\" Julie said smiling sweetly. \n\n\"Right, now that's all sorted? Mike please caress Sally's boob!\" Diane said with some authority.\n\n\"If you insist,\" I said. \"But I still don't get what you are up to?\"\n\n\"I want to try and prove a point Mike, just humour me please.\"\n\nGiving in I turned and gently caressed Sally's breasts and as earlier the feel of the soft satin and her firm breasts underneath was glorious, especially as her nipples reacted to my touch. \n\n\"How does that feel Mike? Do you like the feel of satin covered boobs, hmm?\"\n\n\"Yes, it's a lovely sensation.\" \n\n\"You just carry on, I'll be back in a minute.\" Diane said.\n\nThe next thing I knew was Diane standing behind the sofa with a pair of silky type panties in her hand which she started to rub over my face and neck.\n\n\"Does that feel nice Mike?\" She asked.\n\n\"Yeah sure it does, but what's your point?\"\n\n\"Why should you have all the fun? Why shouldn't we enjoy feeling you through soft and silky material hmm? I want to feel your hard cock in my pyjama bottoms, in fact I think you should put my panties on first!\" She sniggered.\n\n\"No chance!\" I said. \"Maybe! Just maybe! I might have indulged you with your pyjama bottoms and that's still very unlikely, but your panties? No chance lady! No chance at all!\"\n\n\"Mmmm, I think I'd like to play with you wearing Diane's panties.\" Chuckled Julie.\n\n\"Well you can just keep thinking about it because it's not going to happen OK!\" I blustered. \n\nI was starting to get more and more nervous about where this was going and whether I actually had any real control over these women! Worryingly I was starting to be aware of the fact that for all my protestations, I was also just a little curious as well. \n\nDiane was leaning over me now her hand down the front of my t-shirt rubbing her panties over my chest, I could feel her breasts on the back of my neck.",
        "\"Mmm Mikey, what have we got to do to get you to fulfil our fantasy eh?\" Diane whispered while nibbling on my ear. \"You know you'd love the feel of your beautiful cock encased in my soft satin panties and pyjamas.\"\n\n\"Maybe we should give him a chance one way or the other with a game of cards or spin the bottle or something?\" Julie Said.\n\n\"What do you mean give me a chance?\" I protested. \"I don't need any chances! I'm not going to be wearing any women's clothes!\"\n\n\"I'm not sure how much of a say you have in this Bro,\" Sally laughed. \"Three of us against one of you! Come on you have to admit, we have all made an effort to look sexy. I'm not sure trackie bottoms and a t-shirt quite cut it.\"\n\n\"Bloody hell! You're asking me to wear women's underwear for fucks sake that's not fair!\"\n\n\"Look upon it as just having some fun, after all, we're all family now aren't we?\" Diane purred. \n\nDiane was still behind the sofa and had obviously collected her pyjama bottoms when she fetched her panties, she draped them over me and dropped them into my lap. They were black satin with a ribbon tie, so at least being black, they were not completely gay! Did I really think that?\n\n\"Yes, very nice Diane, I'm sure they'll look great on you, not me!\"\n\n\"Time to stop messing around here!\" Julie piped up. \"Sally, get the cards out, Mike we'll have a few rounds of poker or highest cut, rules to be agreed but basically if we win you wear Diane's panties and PJs, if we lose then....what happens if we lose girls?\"\n\n\"You'll do what I ask you to do!\" I suggested.\n\nAs I said this, I realised the mistake I had made, I had now tacitly agreed to the deal, which might see me wearing Diane's panties! Although I did have a lifeline, I rarely lost at cards whenever we had played in the past so maybe I was safe after all.\n\n\"Hah! He's in ladies!\" Giggled Julie. \"You know how much you like our panties Mike, so it won't be all bad.\"\n\n\"I like your panties when worn by you not me, they were designed for women not men and you've all missed one obvious point, they're hardly going to fit me are they? So win or lose, I will win! I said feeling very smug.\n\n\"You forget Mike, I'm taller than you, I have a nice round ass and good child bearing hips, so I think they'll fit just fine Mike, don't you worry about that!\" Diane replied laughing.\n\n\"Wonderful! I'm so pleased!\" I grinned weakly.\n\nI was a little worried now, if things went the girl's way I was going to be seriously embarrassed! Wearing women's clothes, particularly underwear was not an area of my development I wished to explore. I simply did not see myself as that sort of guy, I suppose I could understand the appeal of the material sensation but I didn't need to be slipping girls Panties on to experience it! \n\n\"Oh shit! I could be in trouble here!\" I thought to myself.\n\nThe cards were out and we all agreed to play highest cut, the rules were agreed, if I lost five hands in total before two of the three girls had lost three hands each then the girls won. Each individual losing hand would have a forfeit decided by the winner of that hand.\n\nSally won the first hand with Diane losing, Sally asked Diane to remove her peignoir leaving her in just nightdress and panties. I won the next hand and Julie lost so I asked her to come and give me kiss. I took advantage of this and had a delightful feel of her satin covered ass. We played on for a while with wins and losses evenly distributed between each of us, with all of us undertaking relatively tame forfeits, although when Julie won a hand and asked Diane to kiss Sally they went at it like a pair of sex-starved lesbians, which was very hot. Diane had her hand down the front of Sally's panties and Sally lifted Diane's nightdress to expose her soft yellow nylon panties and had her hands down the back of them taking a handful of her glorious ass.\n\nI was feeling more confident about the outcome of the game now, Julie had lost three hands, Sally and Diane two apiece, and I had lost three but had not lost two hands in a row. So surely, I was home and dry wasn't I? One of the girls had to lose a hand before I lost two. \"Home and dry,\" I thought, grinning to myself.\n\n\"Feeling confident Mike?\" Diane asked.\n\n\"You better believe it sister!\" I laughed, \"It's in the bag!\"\n\n\"We'll see Mikey boy! We'll see!\" \n\nIn the next round, the gods of card playing decided to have a laugh, and dealt me a two of clubs and Diane an ace!\n\n\"Hah hah! Now what shall I get you to do eh Mikey? Diane said gleefully. \n\n\"Nothing that involves me wearing your underwear, I haven't lost yet and I have no intention of doing so!\" I said with absolute confidence.\n\n\"Just one more loss Mike and you'll be wearing my knickers and PJs so in anticipation of that I will give you the choice of which panties you're going to wear. You have my white ones by you on the sofa and I have some more in my bag in the bedroom so pop along and get them for me then you can choose which ones to wear.\"\n\n\"This is a waste of time Di, the odds are in my favour, and you know I am not going to lose the next hand, either you or Sally will and then it's game over!\" I laughed.\n\n\"Humour me Mike, now off you trot and get my panties.\" She replied pointing at the bedroom.\n\nI hesitated for a moment, however I had no problem with the idea of rummaging through Diane's panties, so I stood and set of for the bedroom. Turning round I asked...\n\n\"Hey Di which is your bag or shall I have a root through both Julie's and your panty collections?\"\n\n\"Mine's the blue rucksack but if you want to root through Julie's panties I'm sure she won't mind? They'll be a little snugger for you than mine though.\" She replied chuckling.\n\n\"Feel free Mike you're most welcome to delve into my knickers anytime you like!\" Julie called out.\n\nThat made me smile as I entered the bedroom, there was a blue rucksack and a white leather bag on the floor, I'd been given permission so I decided to have a look in Julie's bag. I found jeans, t-shirts a couple of bras and a finally a selection of panties, \"However many pairs of knickers does a women need for a couple of days away?\" I thought to myself. There were about six pairs in the bag mostly cotton and a couple of a nylon silky material. Diane's bag contained much the same items but had a larger pile of panties, again a mixture of cotton, satin and nylon, I took them out one at a time and will freely admit was enjoying handling the girls panties and was starting to feel a significant twitch in my groin.\n\nIt was then that I heard the movement behind me and turned to find all three girls quietly sniggering as I knelt on the floor panties in each hand and two or three pairs in my lap.\n\n\"Well well well, you really do like our panties don't you Mike,\" Diane chuckled.\n\n\"I'm only doing what you asked me to do,\" I replied meekly, \"However many panties do you need for heaven's sake, you must need a separate case when you go on holiday if this bag is anything to go by?\"\n\n\"Don't change the subject Mike! Look at you you're in panty heaven! So have you made your choice yet or do you need some help?\"\n\nI was difficult to argue with her, as she was right, I was becoming more and more fascinated by this item of female apparel. \n\n\"I am not going to be wearing any of them, as you well know, so I wouldn't know or care which ones to choose.\" I said with a very smug attitude. \"So go ahead and choose whichever you like!\"\n\nDiane came over and knelt down beside me and delved into Julie's bag taking out a pair of her light blue nylon panties, she rubbed them all over my face then held them up to me.\n\n\"Mmm these are nice and soft Mike, but maybe a little small for you don't you think?\" She said obviously enjoying the moment.\n\n\"If you say so!\" I replied.\n\n\"I think we'll have to concentrate your choice on my panties and I definitely want you in something silky so put the cotton ones away Mike.\"\n\nI folded and put the cotton panties back in Diane's bag leaving four pairs from her bag and one pair in the lounge to choose from, I also folded Julie's and put hers away.\n\n\"My my, look at him folding and handling your panties girls, you're right Di it would certainly appear that my brother is definitely a panty lover!\" Sally said smiling.\n\n\"Ok ok ladies, have your fun now if you must, but it'll all be over in a couple of minutes when I win the next hand.\" \n\nSally was right though, I had enjoyed handling Diane and Julie's most intimate item of clothing, imagining each pair encasing their lovely asses and pussies. However, I was definitely not having any thoughts around my hairy ass and cock being tucked into Diane's panties, that was for sure!\n\n\"Come on then Mike back to the lounge with your panties, your time approaches!\" Diane laughed.\n\nI picked up the panties as instructed following the girls out of the bedroom and back into the lounge. It was only a short distance, however the sight of three beautiful women dressed like sex goddesses (in my eyes anyway!) swaying their asses in front of me was divine. Had I been a film director and had this scene to direct, I would have ensured one of those moody slow motion pieces as three delectable panty-clad asses swayed seductively in front of me! \n\nDiane, Sally and me settled back onto the sofa, Julie pushed the floor cushion in front of us and knelt beside it and taking the cards she started to shuffle them...\n\n\"Ok guys this is an important round so as I'm out already, I'm going to deal this one.\"\n\n\"Fine by me.\" I said.\n\n\"Me too.\" Sally and Diane said together.\n\n\"Right anyone else want to shuffle?\"\n\n\"Yeah, I will.\" I Said. \"I'd hate to think anything untoward was going on,\"\n\n\"As if!\" Julie sniggered. \"I can't believe you'd think that of us Mikey!\" Julie sat holding the cards out to me with a big pout on her face.\n\n\"Yeah well I'm not taking the risk!\"\n\nI shuffled the cards thoroughly and handed them back to Julie, she cut them once and laid out one for each of us on the cushion.\n\n\"Ok Mike you will turn yours over first then Sally and finally Diane.\"\n\nThe tension the room was palpable, which was ridiculous as we were just four friends having a fun game of cards, weren't we? \n\nThere was nothing serious going here? Well actually there was! My bloody manhood was under threat for one thing! Moreover, it was very apparent that Diane was desperate to win this one! We all sat for a minute staring at the cards in front of us.\n\n\"Go on Mike! You can't put it off any longer, your fate lies in those three cards!\" Challenged Diane.\n\nI leaned forward, took the edge of the card, and looked Diane in the eye smiling, I was still confident of the outcome as I turned the card over.\n\n\"Oh holy shit! Oh bollocks!\" I moaned. \n\nI had turned over a five, the five of fucking hearts! For fucks sake, how could that happen? Never mind, ever the optimist, there were still twelve cards that could save me plus three more fives that would force a re-deal.\n\n\"Whoohoo! Go on Sally your turn!\" Diane said clapping her hands and bouncing up and down on the sofa.\n\nSally looked at me raising her eyebrows and smiling she leaned forward and turned her card over, an eight! Shit I was getting nervous now, although there was a part of me that was sure they wouldn't actually make me go through with it if I lost! \n\nThen I looked across at Diane who was grinning like a kid in sweet shop and my optimism drained away!\n\n\"Ooh Mikey, it's not looking good now is it? Not good at all!\" She said with absolute glee oozing from her.\n\n\"Just get it over with will you!\" I said, sounding more than a little stressed.\n\n\"Hmm, maybe I'll pile on the agony a little more, what do you think girls?\"\n\n\"Put him out of his misery Di, I think he's suffered enough,\" Sally said putting her arm around me. \"Look at him he's a wreck!\"\n\n\"Ok Mike you ready for this?\" Teased Diane.\n\n\"As I'll ever be,\" I sighed.\n\nShe leaned forward and flipped the card over, I didn't have enough swear words to deal with the jack of spades that was staring up at me. Diane punched the air and jumped up dancing a jig, the only advantage of this was seeing her boobs bouncing away under her nightdress. She then scooped up all her panties dumping them in my lap and knelt in front of me...\n\n\"So which ones will it be Mikey?\" She said, taking a pair in each hand and dangling them in front of my face.\n\n\"Look you're not really going to make me do this, are you?\" I stammered. \"I mean, we were only kidding weren't we?\"\n\n\"You can't renege on the deal now!\" Squealed Diane \"That's just not right!\"\n\n\"What's not right, is you expecting me to wear your underwear, I mean seriously, your panties were never meant to be worn by me or any bloke!\"\n\nI was feeling very nervous now, Diane had a deadly serious look on her face, Julie had picked up another couple of pairs of panties also dangling them in front of me, Sally was my only chance salvation now.\n\n\"Come on Sis help me out here, tell them it was all a joke, please!\" I pleaded.\n\n\"I'm sorry Mike, but you did agree to the rules and you lost, so you can't back out now.\" \n\n\"Right, that's settled which of these are you going to wear for us or would you like us to choose for you?\" Diane said with a much kinder voice and smile.\n\nGroaning I started to look at my options, there were two candy pink pairs so they were out straight away, this was going to be embarrassing enough as it was but pink was a step too far! One pair were what I now know to be tanga briefs, and had nowhere near enough material at the front, so it was down to a choice of two. A pair of light blue satin and a pair of white soft nylon or at least I think that's what the material was. \n\nAs I sat with the two pairs of panties trying to make up my mind, which would be the least degrading, I was also aware of a worrying sensation going on, as my cock appeared to be looking forward to nestling in Diane's panties. This was not good, I could not be seen to enjoy wearing a pair of girl's panties, that would be just too humiliating.\n\n\"Blue or white, which will it be then Mikey?\" Julie asked. \"You never know you might enjoy it!\"\n\n\"Oh jeez Julie, don't you see, I can't enjoy it for fucks sake! How on earth can I accept the fact that I enjoyed wearing women's underwear?\"\n\n\"Hey fella, chill out! This is just between us and we'll help make sure it's not an unpleasant experience!\" Diane said smiling softly, her hand stroking my leg. \"We're not trying to humiliate you Mike, this is a fantasy we've had for a while, so try just going with the flow and enjoy the experience!\n\n\"Ok ok I give in,\" I sighed heavily. \"I can't believe I'm going to enjoy this! So unless you object? It's the white ones, they look the most neutral!\"\n\n\"Good choice! They'll look great under the black pyjamas.\" Julie purred.\n\n\"Shit I had forgotten about the pyjamas!\" I groaned.\n\nJulie climbed up on to my lap and stroking my face whispered...\n\n\"I can't wait feel your gorgeous cock under all that soft silky material Mike, I'm getting wet just thinking about it!\" \n\n\"Mmmm, me too!\" Diane added. \"Honestly Mike this won't be all bad!\" \n\nI was beginning to realise that this whole scenario wasn't all about humiliating me, these girls really wanted this as much for themselves as anything else.\n\nWith a deep sigh, I said \"Right I suppose I'd better go and change?\"\n\n\"No Mike, don't worry, we'll dress you.\" Julie said. \n\nStill sitting on my lap Julie leaned in to me, taking my face in her hands, she kissed me, her tongue searching mine, my hands resting, and caressing the satin of her panty clad ass. \n\n\"Sally, I think the bedroom would be nicer for this, can we go to yours as it has a double bed?\" Asked Diane.\n\n\"Sure, why not.\" She replied.\n\n\"Put him down for a minute Julie, let's go and make ourselves comfortable in Sally's room.\"\n\nWith a final kiss, Julie climbed off me her breasts hanging invitingly as she backed off me, Diane picked up her pyjamas and the panties I had chosen and walked ahead of Julie, Sally and me. We walked into the bedroom as Diane was standing with her back to us laying the pyjamas carefully on the end of the bed and putting the white panties on top giving them a gentle pat before turning and sitting on the bed. She had looked stunning standing there, her yellow panties peeking through the haze of her flowing nightdress. \n\n\"Come over here Mike, stand in front of me.\" Diane said crooking her finger seductively at me.\n\nThis was the point of no return, there would no turning back from this once I joined Diane over the by the bed. Julie gave me a little pat on my ass urging me towards Diane. It was not the prospect of the attire awaiting me that took me towards the bed but the vision of Diane beckoning me towards her divine body. \n\n\"Let's start by taking your t-shirt off shall we?\" She said lifting the front of it up. \n\nWith some help from Julie, my t-shirt was off over my head, her arms now wrapped around me and travelling down toward the waistband of my trackie bottoms. She continued her downward journey taking my trackie bottoms with her, my cock was swollen but not hard, as it sprung into view, Julie now below me was removing them fully.\n\nSally patted my ass and moved round to sit on the side of the bed, Julie moved out from behind me and sat next to Diane. Following the events of the previous night, I was not worried about being naked in front of the girls but remained very apprehensive of what was going to happen next. Diane picked up the white panties from next to her and leaning forward a little stroked my cock with them, this would have been nice if I hadn't known where they were heading.\n\nDiane stood, with the panties still in her hand, put her arms round me kissing and stroking my face with the panties moving them slowly and sensually over my body, down my back and over my ass. She kissed her way down my body, even planting a lingering kiss on my cock, still rubbing the panties on my ass she moved on down stroking the back of my leg until at my feet there was only one thing to be done! \n\nDiane looked up at me and smiled kindly, with little choice now, I lifted one foot then the other as Diane slowly drew her panties up my legs. Finally, she pulled them over my ass and tucked my cock in at the front, the first thing I noticed was that they weren't quite as tight as I thought they might be. \n\nDiane had her hands all over my ass stroking it and moving round to the front cupped my balls stroking up and over my cock.\n\n\"Oh this is lovely! Diane sighed, \"Come on girls have a feel, his firm ass feels gorgeous wrapped in the soft material!\"  \n\nJulie hopped of the bed and started to caress my ass while Diane continued to stroke my cock. Even Sally got up and took a turn at stroking my ass... \n\n\"Hey these look really cute on you,\" Diane said. \"And they feel great!\"\n\n\"The last thing I want to hear is that your panties look cute on me!\" I groaned.\n\n\"I have to say I agree with Diane, they do look pretty cute Bro!\" Sally was stroking my ass as she said this.\n\n\"No doubt about it!\" Julie giggled, as she now had handful of my cock. \"And I love the feel of your cock all soft and silky.\"\n\nMy cock might have felt silky but it certainly wasn't soft, following all the attention it was getting! I don't care how manly you are, that much attention from three women would break any man's resistance! I really did not want to be enjoying this but I was! After a few more minutes of \"admiring\" me in my panties Diane picked her Pyjama bottoms and started to rub them all over my body, over my cock and my ass.\n\n\"Time to slip into something more comfortable,\" Diane simpered.\n\n\"Do I really have to put those on?\" I asked.\n\n\"Absolutely, that was the deal,\" Diane replied. \"Now pop your feet in here and let me get them on you.\"\n\nDiane was bending down at my feet holding the legs of the PJs open for me to step into which with some reluctance I did. She slid them slowly up my legs until they were up to my waist and covering the panties. This is where I tried to convince myself that if anyone walked in they would see a guy wearing men's silk pyjamas, who was I kidding? They looked just what they were, Diane's pyjama bottoms!",
        "Diane stood and pulled me in close, her firm breasts pressing into my chest and her hands roaming all over my ass.\n\n\"Oh my, this feels good, I love the way the satin slides over his panties,\" Diane purred. \n\nNow I will not deny that I was experiencing some very pleasurable sensations but somehow I would much happier if I could find a way of getting these two items of female attire off me. However as I now had my hands all over Diane's ass, I could understand the enjoyment she was getting as I felt her panties through the material of her nightdress.\n\nJulie was behind me running her hands up and down my thighs and brushing my cock, which despite all my efforts and desire not to be seen to being enjoying this dressing up was rock hard.\n\n\"Your panties Diane! Yours not mine! I'd just like to make that clear!\" I said as I started not to care what I was wearing given all attention I was receiving. \"How about you let me take them off now, surely you've had your fun by now?\"\n\n\"Not so quick Mike, I don't think we've finished just yet! Up onto the bed with you.\"\n\nAs instructed I climbed onto the bed, lying on my back with my head on the pillows. I felt a little like a slab of meat as I lay there, my cock leaving no doubt as to its intentions creating a sizable if a little restricted bulge in the front of Diane's PJs. Diane was the first to join me on the bed kneeling beside me and leaning forward over me started to kiss me.\n\nThe temptation of her pendent breasts was over whelming as I cupped them in my hands, her nipples soon reacting to my touch. \n\nI sensed an additional weight on the bed and soon felt a pair of hands on my legs travelling over my thighs and up to my cock, which was ready to burst. Julie was doing no more than gently stroking and handling my cock, which was a genuinely pleasant sensation. I would like to have denied it, but the truth was, I was enjoying the tactile experiences I was being subjected to although I still felt very uncomfortable about wearing female panties and satin pyjamas!\n\nDiane's hand had now joined Julie's roving over my cock, Sally joined us on the bed lying with her head up on the pillows next to me, content, for now, it seemed, to be an observer. Julie had now started to rub her face all over my cock her lips brushing it as well.\n\n\"Ooh! You've got to love the feeling of this,\" Julie murmured. \"A lovely hard cock under all this silky satin.\" Sitting up she removed her babydoll, which in fairness hardly seemed worth the effort of wearing in the first place! Then leaning forward, her breasts hanging, she let them brush over the stiffness of my cock.\n\nI wasn't sure how involved Sally wanted to be, however, she did slide down the bed and started to cup Julies' breasts as they moved over my crotch, the back of her hand brushing my stiffness. Diane and I were still kissing her hand journeying under the waistband of the PJs stroking my panty-covered cock.\n\nFrom what I could see from my position, Julie had straddled Sally who was feasting on her breasts, Diane lifted the hem of her nightdress and moved to straddle me lowering herself to a point where her pussy was lightly brushing my still covered cock. I slid my hands up her thighs on to her firm ass covered with the soft material of her panties. She was still moving, slowly rubbing her pussy on my cock, after a short period enjoying the feel of her panty-clad ass, I moved my hands further under her nightdress up over her soft skin and up onto her glorious breasts. I felt more pressure on my cock as Diane lowered herself fully onto me, grinding her pussy into my crotch.\n\nThe feeling of Diane's nightdress brushing over me was a pleasant sensation as was the two handfuls of her breasts I was kneading, her darks nipples firm and erect under my fingers. Leaning forward and kissing me...\n\n\"I want you to lick my pussy dry Mike,\" She whispered, her voice oozing desire and need. \"Make me cum, and cum and cum!\"\n\nWith this, she raised herself and moving up the bed stood over me lifting the hem of her nightdress over my head enclosing me under it. I could see how wet she was by the damp patch on her panties as she slowly she lowered herself and her soaking pussy to my face. I breathed the glorious mustiness of her wet pussy as I put my hands round her ass and licked and sucked her through the soft material of her panties. In response, she was moaning and grinding her pussy into my face, I was thinking of moving the leg of her panties to one side to suck her wetness when I sensed an urgency and desperation to her movements. Trembling she cried out as she came her hands now on the wall behind me to support herself as she continued shudder as her climax subsided.\n\nWhile this was going on I felt hands on my thighs and cock, I was getting desperate for my cock to be released from its pantied prison. As though reading my thoughts I felt the front of the pyjamas and panties being pulled down and a hand taking hold of my cock and slowly wanking it. I had exposed Diane's pussy now and was greedily sucking and lapping at her wetness, as she seemed to having little minor orgasms a constant stream of moaning and blowing coming from her. \n\nDown below my cock was now buried in the wetness of a mouth, whose? I had no idea! What I was sure of, is there was more than one person paying attention to my nether regions! I was struggling to pay attention to Diane's pussy with my cock being sucked and wanked eagerly, my balls also being caressed through the panties. I was rapidly heading towards a climax of my own and as it gained momentum my grip on her ass, tightened, Diane must have sensed this she pushed her pussy harder into my face.\n\n\"Eat me Mike, eat me hard! I want to come with you.\" She gasped, she was panting hard now as I sucked and flicked my tongue over her clit. \n\n\"Now Mike please! Cum now! Please cum with...aagh oh shit... oh my god!\n\nAbove me, Diane was in a world of her own, overcome by the intensity of her orgasm helped I am sure by the fact that I was shooting my load into someone's mouth and was being sucked dry. I was furiously sucking on Diane's clit as my orgasm took hold of me and she trembled and shook her way through her climax.\n\nMy cock was being milked by hand now, my ass off the bed as I thrust my hips up, with a final shudder I relaxed, however I continued to lap on Diane's pussy.\n\n\"Jesus Mike enough! I can't take any more please stop!\" She begged. \n\nI didn't! Holding her ass tight, I sucked hard on her swollen clit and in no time, she was moaning almost whining as she came again, her whole body quivering as the final waves of her climax subsided. Sliding back down my body, she took my head in her hands and almost in frenzy, devoured my mouth and lips her tongue searching mine. My cock was only semi hard but Diane was grinding her pussy into it any way, until once again with what sounded like a whimper she came again, my hands were on her back now, which had a sheen of sweat all over it. \n\nCollapsing forward onto me, she lay panting until finally she rolled off me sighing... \n\n\"Holy crap Mike, you should bottle and sell that tongue of yours, I have never had my pussy licked like that before! Why didn't you stop when I asked?\"\n\n\"You asked me to make you cum and cum and cum, so I was only doing what I was told!\" I chuckled.\n\n\"You berk, I hadn't stopped cumming from the moment I first popped my cork! Fuck me that was intense!\" \n\nStill lying on my back Diane rolled onto her side snuggling into me her hand resting and gently stroking my upper thigh. Julie took up a similar position to Diane on the other side of me her hand also resting on my thigh. Sally was spooning Julies her hand quietly playing down the front of Julie's panties. I was feeling it would be difficult to see where life could get much better than this. We all seemed happy lie in companiable silence and I was certainly happy for a break in proceedings, recovery time being something of a necessity for us fellas!\n\nAfter a while and with Julie very quietly but pleasurably moaning next to me her hand now stroking my limp cock, I decided I'd had enough of my female attire.\n\n\"Ok, can I please take these pyjamas off girls?\" I pleaded. \"I think I've been a good sport so far? Surely you've fulfilled your fantasy by now?\"\n\n\"Mmm, I'm not sure,\" said Julie, \"I love the feeling of your cock under the satin, what do think Di?\"\n\n\"I'm ok with the pyjamas but the panties stay for now!\" Diane replied.\n\n\"Well I guess that's a start!\" I said.\n\nJulie who still had Sally's hand down her panties moved slowly up onto her knees... \n\n\"Sorry Sal I just need to take care of this,\" She said leaning over me her breasts brushing my chest. \"I want some of that tongue later she whispered in my ear, you can taste my cum this time!\"\n\nThat answered the question of who was sucking my cock dry earlier! Shifting down, kissing my chest and stomach as she went, Julie arrived at the waist band of the pyjamas and giving her breasts one final rub over my satin encased cock took hold of them and started to pull them down. I lifted my ass allowing them to slide off easily, Sally now at the end of the bed helped them over my feet, however, she obviously had an ulterior motive for positioning herself there. \n\nJulie was on her knees ass in the air as she moved down the bed, Sally wasted no time in putting her hand between her legs and cupping her pussy, bending forward to rest her head on her back took one of her breasts in her hand. Then taking her hand away from her pussy, she slipped it down the back of Julie's panties and back through her legs to stroke her bare pussy.\n\nMaintaining that position for a couple of minutes I had the perfect view, Julie, her eyes shut enjoying Sally's handiwork in her panties and the caressing of her breasts.\n\n\"Oh my, you are wet! Is that for me or for Mike? Because you're not getting any cock until you've finished with me.\" Sally purred.\n\nAfter a little more fingering, Sally took her hand from Julie's panties and allowed her to stand at the end of the bed. Julie almost attacked Sally, feverishly kissing her, her breasts pressed hard against Sally's. Her hands lifting the hem of Sally's nighty, roaming all over the white cotton of her panties, and finally under the waist band to her bare ass pulling her tight in to her. Sally also had her hands firmly on Julie's ass, an amazingly horny vision, two women kissing, with hands on each other's ass. \n\nDiane got up off the bed and stepping round behind Sally, slipped the straps of her nighty down her arms and with the help of a slight wriggle from Sally, it dropped to the floor. Bare breasts now pressed together Sally & Julie continued to kiss, Diane beckoned to me to move off the bed. With this, Sally & Julie flopped onto the bed, Julie pushed Sally onto her back, and straddling her, she leaned into Sally's chest and suckled on her breasts. Slowly but surely Julie moved down Sally's body licking and kissing as she went until she reached her panty covered mound and started sucking and nibbling her pussy, Sally writhing and moaning under Julie's attentions.\n\nStanding at the end of the bed, I now had the same view of Julie Sally had had some moments ago, her ass was in the air panties stretched tight across it and her pussy. There was a large visible wet patch clearly indicating the state of her arousal, I was happy for the moment just watching the girls with Diane standing beside me. It wasn't long though before Diane's hand was stroking my now hardening cock, I turned towards her one hand going straight to her breasts the other to her ass as we kissed. The softness of Diane's nightdress as it slipped over her hardening nipples felt divine but I sensed it was time for bare flesh to be exposed. Sliding my hands to her ass I gathered the nightdress up until I had enough in my hands to start lifting it up, Diane aware of my intentions lifted her arms allowing me to slide it over her head freeing her full and firm breasts.\n\nThere was a shift of activity on the bed, Julie had her hands under Sally's ass and was manoeuvring to remove her panties, as she slid them down Sally's leg, her ass was approaching the end of the bed. I positioned myself to meet Julies ass with my still panty covered cock, Diane now behind me was cupping my ass, which I hoped would soon be released from its panty prison. Julie's ass docked with my cock and with a sensual whimper ground it into my groin as she continued to remove Sally's white cotton panties.\n\n\"Move down the bed a little Sal,\" Julie asked.\n\nSally shuffled down the bed and with her soaked and stained panties now on the floor moved her feet up towards her letting her knees fall open. Still standing Julie bent forward and buried her head in Sally's crotch and continued sucking and lapping on her pussy, her tongue flicking rapidly over her clit. I put my hand on Julie's ass and on down between her legs, her panties were sodden and as my hand cupped her pussy heard I her moan even with a mouthful of my Sister's pussy.\n\nDiane's breasts were brushing my back as she stroked my ass and cock which was now struggling to stay in the panties, finally, to my absolute delight I felt them sliding down my legs, I also felt Diane's breasts moving down my back and over my bare ass as she slid them off over my feet. I won't deny that I had experienced some very pleasant sensations wearing the panties and pyjama bottoms, nevertheless, I now felt markedly more comfortable without them. \n\nDespite the attention I was receiving from Diane, I was more interested in the wet patch Julie's pussy had created on her panties, I slipped my hand under the leg of them my finger slipping straight into the wet warmth of her swollen pussy lips. Sally was obviously enjoying Julie's tongue, her hips slowly gyrating and pushing into Julie's face. I knelt down putting my face up close Julies' ass and pussy desperate to taste her warm and wet womanhood, curling my fingers into the waist band of her satin panties I pulled them down her legs and off over her feet. Diane was now standing beside me her pussy at face level as I looked at her.\n\n\"I'm feeling very overdressed Mike, how about you help me and take my panties off?\" \n\nHow could I resist a request like that? Staring at her beautiful mound pushing the soft yellow fabric of her panties toward my face, I moved my hands round onto her ass, cupping her stunningly firm round cheeks, relishing in the feel of her ass in her panties, I slid them down her legs.\n\nDiane climbed up onto the bed and straddling Sally's chest and with little ceremony presented her pussy for attention. Sally seemed happy to oblige her arms wrapping round Diane's thighs as she started to lap on her pussy. I turned my attention back to Julie's and ran my tongue along her swollen lips, Julie positioned herself to give me best access to her now dripping pussy. I flicked my tongue up and down Julie's glistening lips wrapping my arm around her thigh and toyed with her love bud that felt as hard as my cock. The room was now filled with sounds of sex, soft and muffled moans mingled in with the \n\nsounds of the lapping and sucking of wet, swollen pussies. \n\nJulie was pushing back onto my tongue as I tried to get it as deep inside her as possible, I was desperate now to get my cock into the warmth of her pussy and unable to wait any longer, stood, the swollen head of my cock tracing the crack of her ass as I did so. Julie sensing my intentions presented her glowing pussy ready for me as I positioned my hardness at the entrance spreading her pussy lips apart, Julie was hard at it with Sally who from what I could detect looked on the verge of cumming. Diane had one hand on one of her breasts and the other down in her bush as Sally licked her, taking in this view was too much for me as I thrust myself hard into Julie causing a guttural grunt from her. \n\nMoving slowly but firmly in and out of Julie, my cock being swallowed up to its hilt, I noticed Sally had obviously reached the point of no return, her ass now off the bed thrusting up towards Julie's face as she started to shudder with her orgasm. The sight of this was incredibly horny and with my hands firmly holding Julie's hips, I intensified the urgency of my thrusts, my thighs slapping hard against her ass. Julie continued to suck and lap on Sally's cum juices, as she was still tense and trembling with the aftershocks of her climax. Now in full flow, I was plunging hard and fast into Julie's sodden hole, her ass pushing back to meet each thrust. I had never felt quite such animal lust and frankly was more like a rutting stag than a man making love. Julies back was glistening with sweat now as with a throaty cry she threw her head back... \n\n\"Harder Mike, deeper... oh fuck me!... come on Mike fuck me, fuck me as hard as you like,\" She panted. \"Oh holy shit! I'm cumming I'm...\" \n\nWith a final grunt she was overcome with wave after wave of orgasm flowing through her body, she buried her head back into Sally's crotch sucking hard as she came. Sally not fully finished with her own climax responded, crying out as a second orgasm built within her racking her body. Diane no longer able to rely on Sally was frantically working her clit with her fingers, I was still pumping Julie hard, until finally losing control, I erupted into her, grunting with every long hard thrust as I came, until, with a long strangled sigh I collapsed onto Julie's back, panting, and blowing hard. Completely spent I would have slipped out of Julie almost straight away, however, her pussy had a vice like grip on my cock an amazing sensation that I had experienced only the night before.\n\nAs Sally's orgasm subsided, she pulled Diane back down on to her face, Diane moving her pussy back and forth as Sally licked and sucked. Diane eyes closed, both breasts in her hands as she obviously approached her own climax, her breathing becoming more rapid and shallow as she panted and moaned, finally tensing as she came, her face creasing up into a pleasurable grimace as Sally sucked her pussy through the waning waves of Diane's orgasm.\n\nI for one felt utterly exhausted as Julie's pussy relaxed its grip on my cock allowing my limp and glistening cock to slide out of her. Without a word between us, we all settled ourselves on the bed, a mass of intertwined naked flesh as in companiable silence we fell asleep for the next couple of hours or so.\n\nWalking home later that evening I reflected on a Birthday weekend like no other I had ever experienced or ever would again I assumed. So many firsts, so many unbelievable experiences, I suspect I had always had an affinity for panties but this weekend had ensured that I would always, love women in panties!!\n\n\n\nAuthors note \n\nThese chapters have been my first attempt at writing, which has been an interesting and enjoyable experience, surprising for me as writing is not a pastime I have ever enjoyed! The story itself is actually based far more on fact rather than fiction, however, I did find that as I wrote, it made sense to allow the story to take me down whatever road seemed right as the story developed, touching on some taboo areas that I found difficult to write.\n\nPlease let me know if you have enjoyed this story, good or bad, any feedback would be appreciated. "
    ],
    "authorname": "lovethosepanties",
    "tags": [
        "panties",
        "panty",
        "white cotton panties",
        "satin panties",
        "sister",
        "nightdress",
        "breasts"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/i-love-women-in-panties-ch-07"
}