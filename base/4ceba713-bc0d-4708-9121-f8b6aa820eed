{
    "title": "Lessons Learned Ch. 02: The Plan",
    "pages": [
        "This picks up exactly where Chapter 1 left off. For Chapter 2 to make more sense, I recommend that you first read Chapter 1. Enjoy! (EDIT: Apr 28, 2020: I've submitted an edited copy, thanks to andyinoz for the help!)\n\nLessons Learned, Ch 2: The Plan\n\n\"Y-yeah,\" he said finally, and with that, the plan I'd been mulling over all weekend dropped into place.\n\nJust so there were no misunderstandings, I explained to my furiously blushing new friend that I intended to take his sexual confidence to a high he couldn't imagine at this moment. I laid out my ground rules, asked him to think about things over the weekend, and give me his decision after class on Tuesday. If he decided he didn't want to do this, we would just resume our regular classroom association and move on, no awkwardness. I assured him I would survive the rejection. If he decided to proceed, we would agree not tell anyone associated with the college about our project -- trust was paramount. We wouldn't see each other socially. This was strictly to be an experiment to see if I could improve Zach's sexual skills, and by extension, his confidence. We would both independently go to the student health center to be tested for STDs, and bring the report back to share the following week. If we were both clear, we would proceed with our experiment. We could see other people socially, even sleep with them but, in that case, we would have to use condoms. I was on the pill because of my periods anyway, and for other unspoken reasons, pregnancy was unlikely. We would discuss things openly, in detail, using any words we chose. We could ask each other any kinds of questions. Everything had to be consensual. We would not hold back. I told him where my sexual boundaries were, and asked him to think about his own. At the end of the semester, we would go our separate ways, me to my school out of state, and him to finish his degree here in spring.\n\nI was more anxious during the days before our next class than I had expected. Normally, I'm a pretty practical person, able to roll with unusual situations without getting hung up on things, but I wasn't sure how I would react if Zach rejected my proposal.\n\nI felt there was something about Zach that I could trust, but I also knew that young men liked to brag, especially if they lived with a dickhead, who often had dickhead friends visit. Faced with some of the low-level bullying I saw from them in class, I wondered if Zach would spill his guts about what had happened between us after class, even though I had specifically said that telling his roommate was off limits. If he did, and I found out about it, the whole partnership was off.\n\nI did get to the health center the next day, and was able to pick up my results on Tuesday morning. I wondered if Zach had followed through, or if he had allowed embarrassment to keep him from going there at all. I wondered if he even really wanted to do this with me.\n\nWhen I got to class, I didn't see Zach. I fretted internally that he had been disgusted by my suggestions, and had fled the class, or maybe even talked the instructor into giving him a new seat and partner, to get him away from the sex-crazed woman next to him.\n\nHis Neanderthal acquaintances were already and, had Zach spilled his guts, they'd be looking in my direction and sniggering. Right now, they were ignoring me.\n\nAs my brain was running multiple scenarios, Zach rushed in, head ducked down, breathless, and seated himself without looking my way.\n\n\"Hi, Brinna,\" he said shyly, after a significant pause.\n\n\"Hi, Zach.\" I smiled. \"Would you like to go work on our paper after class today? In my office?\"\n\n\"Yeah,\" he answered promptly. \"Yeah, I really would.\"\n\nI breathed a sigh of relief\n\nWe sat through another excruciatingly erotic video session, this time somewhat less clinical in nature. We watched a real couple's homemade 'sex lessons' tape, where they talked about what they liked to do together, and how to do it. They used words like \"stimulation\", \"vagina\", \"orgasm\", amongst others, trying to be 'professional amateurs', but really, we just watched them suck and fuck each other in a series of vignettes for over half an hour.\n\nMy pussy was dripping, and my nipples felt tight and hard. I hoped no one else knew. Then I decided that I wished Zach knew, but we had our rules about what we could discuss in the classroom. I wondered if he noticed I'd worn a low-cut blouse and knee-length skirt, just for him. Of course he wouldn't know that. He thought himself utterly unattractive, a failure with women in all ways.\n\nOh, but I throbbed with the desire prove him wrong.\n\nAfter class, we headed straight to my office, without talking. Zach immediately began to root around in his backpack, then set out his textbook, pen, and paper. Finally, he pulled out a white envelope I recognized. I had one, too.\n\n\"Here,\" he said, as he handed over his envelope, while trying hard not to reveal his embarrassment. I opened it and scanned the results. All negative.\n\nI silently gave him my envelope, and he read it closely. I noticed his hand slightly shaking as he fumbled the paper back to me.\n\n\"So,\" I said finally. \"Are you willing to be my test subject this semester?\"\n\n\"If you still want me to, yes.\" He took a breath. \"I hope I don't disappoint you, Brinna. I'm not experienced.\" He blushed so hard that the tips of his ears turned red, and he seemed to find the floor tiles fascinating. \"My only real experience is jacking off, usually in the shower in the morning.\"\n\nHis words planted an image in my head, and I felt myself grow warm.\n\n\"Do you enjoy it?\"\n\n\"Yeah.\"\n\n\"Do you fantasize while you do it, or do you just stroke yourself while you think about, I dunno, math?\"\n\nHe gave a little snort of laughter then, and it made me happy to hear it.\n\n\"Mostly fantasize.\"\n\n\"Did you fantasize about me at all this weekend?\" I held my breath.\n\n\"Yeah,\" he croaked. He cleared his throat. \"Yeah, I did.\" His eyes flickered around the room momentarily as he struggled to control his shyness. \"Are you grossed out?\"\n\n\"No,\" I said softly. \"It's actually turning me on.\" He sucked his bottom lip at that, biting it gently. \"Do you get hard in class?\"\n\n\"Yeah. Too much. It's embarrassing. I feel like everyone knows.\"\n\n\"Everyone else is getting horny, too. Don't worry about it.\"\n\n\"Do you? Get horny in class?\" Now his eyes flickered between me and the corner of the room.\n\n\"Yes, I do. Both watching the videos and thinking about you sitting next to me, feeling the same.\"\n\n\"Brinna?\"\n\n\"Hmm?\"\n\n\"What do I do now?\" He glanced at me, all nervousness and puppy eyes.\n\nI smiled at him, and led him to sit next to me. Looking in his eyes, I gave him some advice. I told him I thought he should visit the nearby bathroom, before each meeting in our office, and jack off so he could get rid of the pent-up energy from class. I explained that it would help him last longer during our experiments, and that I thought he should do it alone for now. I suggested he might even want a change of clothes, maybe some shorts or sweatpants and a t-shirt. He could leave them here to change if he wanted, or even go home first before coming to the office here.\n\nThen I handed him a book I had purchased over the weekend, just for him. It was an illustrated sex manual, with real photos of real couples engaged in real sex. There were some hand-drawn illustrations but, for the most part, it was full-color, full-on, up-close and personal pictures. He hastily stuck it in his backpack without even cracking it open. Really, it was kind of sweet how shy he could be.\n\nI told him to take it home, look through it during the week, and pick three things he wanted to master, with two alternatives, just in case he chose something we couldn't work out. I had already selected mine, but wouldn't tell him until he was ready with his.\n\nThen I gave him the second part of his homework. While he masturbated this week, he was to deliberately stop himself and wait five minutes before starting again. He would have to stop himself three times each time he masturbated. If he failed a time or two, he wasn't to get upset or worried, just try again to meet his goal the next time, and enjoy his orgasm even if he hadn't completed the homework.\n\nAfter setting his homework, I made him turn to the glossary in the back of our book, and asked him to start reading aloud the 'technical' terms for some of the things we were studying together out loud to me. He blushed furiously and mumbled through the first three words, until I touched him lightly on the knee.\n\n\"I can't hear you, Zach.\"\n\n\"What if I can't do this?\" he asked in a strained voice, \"I-I want to, Brinna. But I can't say these things to you.\"\n\n\"Yes you can.\" I thought over the problem for a moment. \"Let's turn our chairs back to back.\"\n\nWhen we had repositioned ourselves, I told him to begin again. He started quietly, with a lot of throat clearing and a bit of stuttering. By the time he had reached the letter D, his voice was more controlled.\n\n\"I like your voice, Zach,\" I said, leaning my head back so that it rested against the back of his shoulder. \"Keep going.\"\n\nAfter he completed all the M words, I let him stop and offered to read the rest to him if he would turn around and face me while I did it. He briefly hesitated then agreed, so we turned to face each other, and finished the remainder of the glossary, with him flushed and me focused on the book in my lap, with an occasional glance up at him from under my lashes.\n\n\"See, Zach? You said all those words with me here, and neither of us died from shame.\" I smiled. \"Now the hardest part. Can I have your hand?\"\n\nHe hesitantly offered it to me. I rested his right hand, palm up, in my left hand, and delicately traced around his palm with my right index finger.\n\n\"I want you to give me alternate words, slang, no more proper or clinical names. Give me another word for breasts.\"\n\n\"Wh-what?\"\n\n\"Breasts,\" I said patiently. \"What's your favorite slang term?\" I watched his Adam's apple bob while he swallowed. I continued slowly stroking his palm with my finger and saw that his eyes had locked onto our hands. \"Just say a word.\"\n\n\"Tits,\" he whispered at last.\n\n\"Good. Another.\"\n\n\"Boobs.\"\n\n\"Which word do you like best?\" My finger lightly stroked his wrist.\n\n\"Tits.\"\n\n\"Do you want to see mine?\"\n\nHe gulped, and nodded.\n\n\"From now on, every word you give me, I'll undo a button. Give me another word for penis.\"\n\n\"Dick,\" he whispered, and I withdrew my hands from his to undo the bottom button of my shirt as he watched.\n\n\"Another.\"<br >\"Cock.\" Another button undone.\n\n\"That one's my favorite. Good choice. One more.\"\n\n\"Prick.\"\n\n\"Sounds more like another word for your roommate,\" I joked, undoing another button. Three down, three to go. \"Another word for fellatio.\"\n\nHis eyes starting roving again as he struggled to give me what I asked for. He might have been uncomfortable speaking, but his body was responding to our little discussion if the bulge in his pants was any indication.\n\n\"Fellatio, Zach.\"\n\nHis hands gripped his knees.\n\n\"Blowjob,\" he mumbled, and his eyes darted to watch my hands undo another button.\n\n\"More.\"\n\n\"Head.\" He might as well have had a sunburn, he was that red. I was about to prompt him again for another word to undo my last button when he came out with it on his own. \"Hummer.\" Final button undone.\n\n\"Zach, if you can give me another word for cunnilingus, I'll teach you how to take off a woman's bra. It's a skill all men should have.\" The bulge was growing as I watched.\n\n\"Eat out,\" he said finally, and I shrugged my blouse off, casting it aside. Pushing my chair back, I stood in front of him, putting him at eye level with my breasts, encased in a silky black bra that just covered my taut nipples.\n\n\"This bra actually closes in the front, here,\" I touched my finger to the clasp between my cleavage, watching the way his eyes followed my finger. \"You sort of snap it in two, gently, then the two pieces lift apart in opposite directions. Unsnap it and take it off me. Take all the time you want.\"\n\nHe reached for my bra with shaking fingers, and sporting a cock that was making its presence known. Although he worked carefully, his fingers brushed the exposed skin of my breasts, causing me to break out in goosebumps. When he undid the clasp and pulled the cups away from my chest, he paused, staring. I felt his eyes absorbing every inch of me in as I shrugged the bra off.\n\n\"Are they okay?\" I asked, wondering if he was more of a large boob man. \"I think they're too small.\"\n\n\"No,\" he said absently. \"They're perfect. Better than I imagined.\" His hands had a death grip on his knees now.\n\n\"If you look at my face, and tell me another word for vagina, you can touch them if you want.\"\n\nHe sucked in a breath and held it. I waited patiently until his eyes finally lifted to mine. He licked his lips nervously, his gaze bouncing a couple of times between my chest and face before settling again.\n\n\"Pussy,\" he said hoarsely. I felt a shiver up my back at the heat in his tone. I leaned forward enough to pry his hands off his knees and placed his palms on my breasts, covering his hands with my own.\n\n\"Gently,\" I prompted, when he got a little rough, squeezing too hard. \"Some women like rough play on their breasts, but I like it soft.\" I sighed as he adjusted his grip. \"Like that,\" I encouraged, pressing myself against his hands.\n\nHis palms were calloused at the point where his palm met the base of his fingers. I enjoyed the feel of them on my skin. With my encouragement, he would cup my breasts, then knead them gently, push them together, then pull them apart.\n\n\"You have a nice touch, Zach. I want to show you something else. Lift your hands.\" He did, reluctantly complied. I brought my fingers up and pinched my nipples lightly. \"Not too hard,\" I instructed. \"This feels good. I feel it in my pussy.\"\n\n\"Brinna,\" he said with a small groan, closing his eyes.\n\n\"Are you getting too worked up? Should we stop?\"\n\n\"Keep going.\" He took a deep breath and opened his eyes again.\n\n\"And I like this.\" I rolled my nipples between my finger and thumb. The pleasure was a lightning bolt between my legs. I flicked them twice, just to show him there was more that could be done. His eyes never left my fingers. \"This is just what you can do with your hands. Tongues are a different element.\"\n\n\"God, Brinna,\" he breathed.\n\n\"Go to the bathroom and jack off for me. Do it and come back, then I'll let you touch me some more. Would you like to do that?\"\n\n\"Fuck yeah,\" he said with unguarded enthusiasm.\n\n\"And Zach? I want you to try to stop before you cum, and wait a few minutes before you stroke it again. Don't rush just to get back. I'll still be waiting. Will you try, for me?\"\n\n\"I'll try, but it's going to be hard. I'm...I've never...this is...\" He gave up and shook his head.\n\n\"This is just the start of our research,\" I reminded him. \"You're going to need some stamina.\" I reassured him again that I would be waiting, and sent him on his way.\n\nI briefly considered getting myself off as well, knowing it was too soon to count on Zach to be able to do much for me. I did allow myself to put my hand up my skirt and run a finger lightly over my damp panties, up and down my slit as I thought about Zach, stroking his big cock just down the hall, all because I got him hard.\n\nReluctantly, I pulled my hand away to stop teasing myself, and tried to focus on something else until Zach returned.\n\nHe came back, flushed, his hairline slightly damp with sweat. The tent in his pants was mostly gone, though it seemed he hadn't gone completely limp. I couldn't stop looking at him.\n\n\"Zach, do you stay kind of hard for a while, even after you cum?\"\n\n\"Uh, yeah, a lot of times. I know the book said it wasn't, like, normal, to get hard again fast, but I do.\"\n\nBe still, my pulsing pussy.\n\n\"I don't think the book covers a lot of things well, from what I've read so far.\"\n\n\"According to the book, I'm not normal. It kind of made me feel like a freak.\"\n\n\"Zach, I don't think there's really a normal. Researchers are just always trying to measure things, to quantify. You know, nerds love numbers and such.\" I grinned and he smiled back shyly.\n\n\"Can I touch you again?\"\n\n\"Please.\" I think I may have sounded a bit like I was begging. He resumed stroking my breasts and teasing my nipples. \"Zach, would you like to learn to use your mouth on me?\"\n\n\"What do I do?\"\n\n\"Take off your shirt. No, wait, let me.\" He dropped his hands, and I took my time unbuttoning his shirt. I worked slowly, but soon I had his white t-shirt pulled off over his head. I found that I liked undressing him. I liked his pale skin, and I skimmed my fingers over one of his shoulders. \"This next bit of instruction might seem a little unusual to you. But you know, women aren't the only ones with nipples. Men's nipples can be sensitive, too. So I'm going to touch you, and then I'm going to use my mouth. Sit on the edge of your chair.\"\n\nZach's skeptical look soon turned to shocked surprise as I ran my hands gently over his chest, teasing him as I'd taught him to do to me. Kneeling, I smiled up at him before I leaned in to kiss the nipple closest to his heart. He gave a small gasp, and I began to tease him with my tongue and lips, showing him what I liked by using his body. I stroked his other nipple with my fingers, and both hardened under my touch.\n\n\"How was that?\" I asked him, drawing back, looking up at him from under half-lowered lashes.\n\n\"Surprisingly sexy,\" he confessed.\n\n\"Would you like to try it on me?\" He nodded. I stood again, and watched as he leaned in to take a nipple into his mouth. I shivered when I felt him give a soft moan, vibrating my nipple tantalizingly, as he sucked and teased me. \"That's good, Zach,\" I breathed, cupping the back of his neck lightly. \"Really good.\"\n\nHis response was to lick, suck, and kiss each breast enthusiastically in turn while my fingers massaged the back of his head. He used a hand on one breast, and his mouth on the other, swapping after a couple of minutes.\n\nSoon, I was almost breathless with my own need, and he was hard again. He was proving to be a marvelous student, attentive, willing, and not offended by small corrections to his technique.\n\n\"Brinna,\" he groaned, stopping his ministrations, and pressing his forehead to my chest, tucking his face neatly between my breasts. His arms encircled my waist, and he sat breathing heavily against my skin. I stroked his bare shoulders and upper back, rubbing his neck and playing my fingers through his hair.\n\n\"I want to watch you, Zach,\" I purred to him. \"I want to watch you jerk off for me.\" He shuddered as I raked my nails lightly down his neck and spine as far as I could reach. \"Will you?\"\n\n\"If you want me to.\"\n\n\"Do you want to?\"\n\n\"Yeah,\" he whispered against my skin. \"I want you to watch.\"\n\nI disengaged from him and took a step back. There was a large wet patch of precum on the front of his pants. My mouth watered knowing how excited he had become.\n\n\"I'll just stand here. You can just pull your pants down, or take them off, sit or stand, whatever you want. You can touch me again if you want, or not.\" I cupped his chin in my hand. \"But I don't want you to cum until I tell you that you can. Agreed?\"\n\n\"Yeah, a-agreed.\" He stood and shoved his pants down past his knees before he sat back down hastily, never making true eye contact with me. He parted his legs as much as his lowered pants would allow and grasped his impressive erection in his right hand.\n\n\"I brought you something to make this easier,\" I said, and dug a fresh tube of lubricant from my backpack. He reached his trembling hand toward me, I squirted some of the lube into his palm, then set the tube aside.\n\nZack ran his hand up and down his hard shaft, liberally coating it with the lube I'd brought him. He switched back to his right hand, and massaged my breast with the lubed hand. My pussy contracted in anticipation, and not a little torment. I pressed my breast into his palm and covered his hand with my own.",
        "\"I'm wet, Zach,\" I whispered silkily, and he started fisting his cock with firm, steady strokes and a small moan. \"Don't forget to stop yourself before you get too close. Does it feel good?\"\n\n\"Yeah,\" he responded, eyes locked on my chest as he worked his cock.\n\n\"What are you thinking about?\"\n\n\"Cumming on your tits,\" he answered, eyes glazed with lust. I liked that look on him.\n\n\"You keep it up, and you might get your wish one of these days soon.\" He made a noise deep in his throat and worked his hand faster. When he began to work just the top of his shaft and the engorged head, I reached down and grabbed his wrist. \"Slow down, baby. Are you getting close?\"\n\n\"Yeah,\" he ground out, and released his cock to let it spring free of his grip. I longed to take it in my own hands, but I already knew how that would end. Instead, I held both of his wrists. \"Sorry.\" He was breathing hard.\n\n\"Look at me, Zach.\"\n\nHis eyes came up although he didn't lift his head. I leaned down and gave him a soft, almost platonic kiss on the lips.\n\n\"Which word do you prefer, penis or cock?\" He blinked, seemingly confused by the question. \"I'm finding I like saying words considered vulgar to you, Zach. But if it makes you uncomfortable, I'll stop. Which word do you want to hear?\"\n\n\"Cock,\" he said clearly. His fists clenched and released, then again.\n\n\"You have a nice, big cock, Zach. I like watching you stroke it.\" His eyes fluttered closed, and his fists kept clenching and releasing. \"What are you thinking about?\"\n\n\"Prime numbers,\" he said in a choked voice. That was a new one.\n\n\"Why?\"\n\n\"So I won't cum yet. You said not yet.\"\n\n\"I'll stop talking for a minute then. Because all I want to talk about right now is your cock and what I'd like to do with it.\" I grinned, but he didn't see me. \"Grab your knees, and I'll stop touching you. Let's say for two minutes.\" I released him and took a step back, fighting the temptation to continue touching him in some way or another. He wasn't the only one struggling with the need to get off. I let him think about his prime numbers while I counted the passage of time.\n\nWe repeated the 'stroke then rest' technique for another twenty minutes. He'd get going, and start to get close to his orgasm, and I'd make him stop to wait for two minutes. Most of the time he couldn't look at me during his 'rest periods', and I left him in peace, though I took advantage of the time to look and enjoy the sight of him.\n\nWhen I finally decided it was time to let him finish, it wasn't because I thought he'd had all he could take for the day, it was because I had.\n\n\"Go ahead and finish this time, if you want, Zach,\" I whispered in his ear.\n\nI thought he would immediately start to work on himself again, but he surprised me by spending a few moments giving my breasts more attention with his mouth and hands. The feel of his tongue circling my nipple caused a small moan to escape my lips. I felt him smile against my skin.\n\n\"You like that, don't you, Brinna?\"\n\n\"I like it a lot,\" I confessed, then he gave the same treatment to my other side. \"You learn fast.\"\n\n\"I like it a lot, too,\" he said simply, and with that, he released me and resumed stroking his cock at a steadily increasing pace. He seemed to be giving himself over to the task completely, and for once was managing without blushing or darting about with his eyes. \"Touch yourself for me?\" His breathing became ragged when I complied for him, cupping my breasts in my hands. \"I love the color of your nipples,\" he confessed, as I pinched them between my fingers. He began to concentrate on working the head and first few inches of his rigid shaft and I knew it would be soon.\n\n\"Tell me,\" I prompted, watching his hand work over his knob. \"I need to hear you say it, Zach.\"\n\n\"Ahhh, god, fuck, okay, I-I'm cumming, Brinna. I can't stop now.\"\n\n\"You don't have to stop.\" I pulled at my nipples and wondered how I would ever manage to get home before I had to relieve myself of the enormous tension in my body.\n\n\"It feels too good to stop, fuck yes, this\u2014ah god, I'm cumming,\" he moaned and before I could stop him, grabbed his t-shirt from the desk and covered himself with it. He gave a low, hoarse cry and continued to pump his fist over his cock, beneath the shirt. He held it and squirted into it, squinting his eyes shut as he shuddered.\n\nWhen his hand stilled, he was panting and his head hung down over his lap.\n\n\"Zach,\" I stroked his hair and he grabbed at me, drawing an arm around my back and pressing his damp forehead into my belly. I felt his lips press a kiss above my belly button, and his fingers stroked clumsily at my back. \"Zach, why didn't you let me see?\"\n\n\"I-I was afraid I'd get it on you again. I didn't want to gross you out.\"\n\n\"It's not gross, Zach.\" I continued stroking his hair. \"I like it. Next time I want to see you finish.\"\n\n\"Don't girls think cum is gross?\" he asked curiously, his lips brushing my skin lightly as he spoke into my belly.\n\n\"I don't. I love it. I love the way it feels inside me, and the way it looks on my skin. It's like the culmination of everything, the end product of desire. Mine, and yours. Does every woman like it that way? No. Some are grossed out. I'm not. Next time I want to see.\"\n\n\"Oh, Brinna,\" he whispered, \"you're not like anybody I ever knew.\" The t-shirt was discarded with a toss and the other arm circled me.\n\n\"Is that good or bad?\" I asked uncertainly. He laughed against my skin. He really did have a nice laugh.\n\n\"Good. Very good, I think.\"\n\nWe stood that way a couple of minutes more, until he took a deep breath and released me. Now he was back to avoiding my eyes as he pulled up his pants and threw on his button-down shirt. Back to buttoned up Zach, I thought. That wasn't good, so I made him help me dress, having him snap my bra closed on the reasoning he would get better and better at removal if he understood the whole process.\n\n\"Tell me another word for sexual intercourse and you can go for today,\" I teased, cupping his chin in my hand so he was forced to look at me.\n\n\"Fuck,\" he said, and went a nice shade of pink.\n\n\"Someday,\" I smiled, sending him on his way with the promise of seeing him Thursday.\n\n* * * * *\n\nThursday in 'our office' saw us grumbling together over a pop quiz from Dr. B, and reviewing Tuesday's activities, before proceeding to the private lesson of the day.\n\nThis time when Zach came, he didn't hide it, and he watched my face carefully as I cleaned off his belly and thigh with some wet wipes and paper towels I'd stashed in the desk. He stood to retrieve the sweatpants he'd discarded.\n\n\"Brinna, are you--,\" he paused and swallowed, \"I mean, do you get...get anything out of it?\"\n\n\"You mean, am I wet and does this get me off?\"\n\n\"Yeah.\" Here came the blushes.\n\n\"Zach, unzip my skirt.\" I turned and let him undo the zipper, then dropped the skirt around my ankles before kicking it out of the way. I stood before him wearing only a purple pair of silky panties. \"Give me your hand.\"\n\nHe did, turning his head away from me and inhaling sharply when I placed it between my legs. Smiling slightly, I pressed my near naked body against his.\n\n\"Can you feel how damp I am?\" He nodded. \"Don't get quiet on me, Zach. Can you?\"\n\n\"Yeah.\" He cleared his throat softly.\n\n\"Put your hand directly on me.\" I guided his hand between my skin and the soft material, until he was cupping my dripping sex in his hand. Since it was offered up to me, I took his earlobe between my lips and nipped it gently. I felt him suck in a quick breath. \"That's what you do to me, Zach,\" I whispered, and traced the rim of his ear with the tip of my tongue before nibbling the lobe again. \"Feel how wet I am for you.\"\n\n\"Can I see?\" he asked breathlessly, and I felt his fingers stir restlessly against my lips.\n\n\"Next week. Just feel. I'm soaked, Zach.\" I was still whispering in his ear. \"Today I'll go home, and I'll work my fingers inside my wet pussy until I cum.\"\n\n\"Oh god,\" he moaned softly, and his fingers began timidly stroking my flesh.\n\n\"Maybe I'll even call your name when I do.\" I kissed behind his ear, just below the lobe, and he shuddered. \"Would you like that, Zach?\"\n\n\"Fuck yeah,\" he growled, groping for my free hand. Once found, he guided it to his stiffening cock.\n\n\"Jesus, Zach, you just came for the second time like five minutes ago. How can you be getting hard again already?\" I tried for a lightly teasing tone, though really it came out as a bit cockstruck. The tips of my fingers teased his balls, and he moaned deep in his throat. \"You want to fuck me, don't you?\"\n\n\"Yeah.\" He buried his face in my neck. \"But I can't yet.\" He sounded pained. I squeezed his tool gently, and he strained against my hand. He was hard, right? I was ready for him, right? What did he mean?\n\n\"Can't?\" I said dumbly.\n\n\"I can't do it right yet, and I want it to be perfect with you. I want it to be good. And even if I want to bury my cock inside of you right now, it wouldn't be good. I'd finish too fast and it'd be over. I want you to teach me, Brinna. Like you said you would. I want to fuck you right.\"\n\nI don't think I'd been more turned on in years. It was all I could do not to grind myself against him and beg him to do it anyway. Jesus, if I was going to be the teacher here, I'd better get a grip on myself. The last thing I needed was to push Zach too far, too fast. I was pretty sure I would lose him to our little experiment if he suffered another humiliating premature ejaculation, like he had the first time I'd touched him. I didn't want that for him.\n\n\"All right, Zach,\" I conceded with grudging admiration. \"You're right.\" I kissed his cheek, not willing to touch his lips in the event I drove myself too far again. \"I'm sorry, I shouldn't have even said that to you.\" I left 'and that was such a sexy thing to say to me' out of my apology.\n\n\"I liked it,\" he said, his face still tucked into my neck. \"I love it when you talk dirty to me, Brinna. But I just don't want to fuck this up. Please?\" He closed his hand over the one I had wrapped around his throbbing prick. \"But no one said you couldn't have anything else you want from me.\" He made a sound then, and I'm sure he was trying not to laugh.\n\n\"Are you teasing me now?\" I asked, giving him a squeeze.\n\n\"Mmmm,\" he agreed, and I felt one of his fingertips probing my inner lips.\n\n\"But you're going to have to take your hand off my pussy now,\" I whispered, \"or I might lose control and take you by force.\" He did laugh then, and slowly withdrew his hand. \"Be a good boy now, and you can take these panties with you when you go home.\"\n\nHe nipped my neck gently, and I ran my thumb across his slit, causing him to gasp as I rubbed a large dollop of precum across the head.\n\n\"Hmm, Zach? We didn't get around to talking about the book I gave you. Did you start looking at it?\"\n\n\"I read it.\"\n\n\"The whole thing? In two days?\" I teased the crown of his glans.\n\n\"Mmmm, yeah. Lots of pictures.\" He began to kiss me across the top of my collar bone.\n\n\"Let's talk about it next week,\" I breathed, forcing myself to release him and step away. \"We have to stop now.\"\n\nI caught a brief flash of hurt in his expression, and felt bad for causing it.\n\n\"It's me, Zach, I'm the one who needs to stop. I'm sorry. I shouldn't\u2014\"\n\n\"You don't have to apologize to me, Brinna,\" he interrupted brusquely, turning his back to find his clothes. I watched him take an extraordinary amount of time to put on his three pieces of loose clothing before he turned back to find me still mostly naked.\n\n\"Will you help me get dressed?\"\n\nHe regarded me silently, his expression unreadable, then finally gave a brief nod.\n\nI didn't really feel forgiven until he was latching my bra behind my back, and I felt the backs of his fingers stroke my shoulder blades next to the straps. He planted a little kiss at the juncture of my neck and shoulder and I shivered a bit at the delicacy and care that went into the gesture.\n\n\"Are you going to wear these little skirts when the weather gets cold?\" he asked curiously as he buttoned up my skirt.\n\n\"Probably not, unless I want to freeze to death.\"\n\n\"I'd keep you warm,\" and with that, his cheeks pinked up and my shy, sweet research partner returned full force.\n\n\"See you Tuesday, Zach.\" I winked and pressed the panties I'd slipped off into his hand as we parted.\n\nTo be continued"
    ],
    "authorname": "M8dOvGlaz",
    "tags": [
        "research",
        "exhibitionist",
        "lessons",
        "masturbation",
        "voyeur"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/lessons-learned-ch-02-the-plan"
}