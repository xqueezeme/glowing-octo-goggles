{
    "title": "Claiming Treasure Ch. 26-30",
    "pages": [
        "Alpha Rori King's POV \n\nArrowhead Pack House \n\nI put down my phone as Chase was working on setting up the videoconference equipment in our office. \"She agreed to sell us the property,\" I told my mate. \n\n\"Good. We're going to need the room, and Spider won't be around to rebuild the home.\" \n\n\"There's a partial bag of cash in the safe room. I said we would retrieve it and ship it to Carson for her,\" I continued. \n\n\"Carson can't openly support her.\" He thought about it for a minute. \"Maybe it could fall off a truck?\" \n\n\"Or something,\" I said. \"Have you heard anything about Heather?\" \n\nChase shook his head no. \"She was still alive, and when I spoke to their Pack Doctor, he had four units in and one out. He was going to do five units of werewolf blood, the same amount we used on Frank.\" \n\n\"Frank's much bigger, is that too much?\" \n\n\"Frank lost a lot of blood, while for Heather, it's more of a bleed and feed. She was hypothermic, bruised, both bones in her right forearm broken, a severe bite in the same area, and a concussion. She didn't lose as much blood. The good news is that the blood has stabilized her for now.\" He had the software set up to connect us to the Council teleconference. The Alphas were live in the video link, while the Packs would be watching the live stream on another feed. \n\n\"How bad is this going to be,\" I asked him as we were on screen now, waiting for it to start. \n\n\"Anywhere between bad and thermonuclear war,\" he replied. \n\nAfter the last videoconference regarding the hacking of the Council website, we held our own with our allies. If it got that bad, we'd be ready. \"Ron, how is the mood of the Pack?\" \n\n\"Confused and pissed off,\" he said. \"They liked Spider Monkey, and Vic was a good Beta. Some are wondering why you were so quick to cut ties with them.\" \n\n\"They'll see soon, I bet. When this meeting ends, have them stay for a Pack meeting. We'll get it all on the table,\" I said. I looked at the spot for the Cascade Alpha; Carson was there, his face and neck covered in wounds that were still healing up. It was easy to tell that he was pissed, and he had demanded this meeting. \n\nWhile I was talking, the last of the world Alphas appeared, and the Council members walked into their places. They were at the Banff Pack, where internet service was back after over a week. They didn't look happy, either. \"This meeting is called to order,\" Chairman Coffey said. \"Under Council law, section fourteen, Cascade Pack is presenting a formal declaration of war. War is the final and most dangerous option for us to resolve inter-Pack conflicts.\" \n\nHe gave it a few seconds to sink in before he continued. \"As such, our Laws have a process set up to ensure wars do not spill over into the human world. Alpha Carson will have ten minutes to speak, the responding party will have ten minutes, and then the remaining Alphas will have twenty minutes for questions. After that, there are five options. The simplest is that the Cascade Pack withdraws the declaration. Second, both sides can accept binding mediation by the Council for their dispute. Third, both sides agree to have the dispute decided by the remaining Alphas on a majority vote, with the losing Alpha removed from his position and replaced by an Alpha selected by the Council. Fourth, the Alphas can battle in single combat, with the winner taking possession of the losing Pack. The last option is to recognize a state of war exists. If this is the case, other Packs must declare their allegiance to a side, or their neutrality to the dispute. Those that are neutral will not provide assistance or personnel to either side; the penalty for violation is expulsion from the Werewolf Council and removal of the Alphas. Those Packs that join the conflict will no longer be part of the Werewolf Council until the war is over. Any questions?\" \n\n\"Yes, who is he declaring war on,\" Alpha Blackledge said. \n\n\"I expect we'll find out soon,\" Chairman Coffey said. \"Alpha Carson Nygaard, the floor is yours.\" \n\nInstead of Carson, it was Alpha Sawyer Nygaard who spoke for him. \"As you can see, my younger brother is recovering from injuries sustained in an attack earlier today and requested I speak on his behalf. Nine men attacked Alpha Carson, his Beta, and Heather Rhodes. Alpha Carson and Beta Angelina will recover, but one got through and bit Heather Rhodes.\" \n\nI saw looks of shock and outrage among some of the Alphas at the news, while for others, it was a look of relief. None of those Alphas were a shock to me. It wasn't long ago that the Council formally recognized Heather Rhodes' sanctuary in the Cascade Pack, and it wasn't a popular decision. Many Alphas refused to accept that a human could be the mate of a werewolf. Now she was as good as dead. \n\n\"Who were the men,\" Chairman Coffey asked. \n\n\"We have recovered the bodies of seven of the nine men involved in the attack,\" Sawyer said. \"Six men in the attack; one each by Alpha Carson and Beta Angelina, the other four by Luna Heather. The seventh died when we stopped their vehicle.\" \n\n\"She's no LUNA,\" Alpha Martin Nemmers said. \n\nChairman Coffey banged his gavel. \"Save your questions for your time, Alpha. Alpha Sawyer?\" \n\n\"Thank you, Mr. Chairman. Here are the names and photographs of the people involved.\" The slide show was split-screen, with the names and ranks across the bottom. The left side was their photo, while the right showed their body before going on the pyre. \"One Beta, five Warriors, and three Omegas, all sent from the Blue River Pack to attack and kill Alpha Carson and Luna Heather.\" \n\nThe news that the attackers were from the Pack of his little sister was like a bomb going off in the proceedings. Alpha Coral sat expressionless as the Alphas and Council members shouted at each other until Chairman Coffey was able to restore order. \"You are declaring war on Alpha Coral,\" he asked in disbelief. \n\n\"No, he is not. The people involved were no longer members of the Blue River Pack at the time of the attack, and Alpha Coral did not order the attack.\" He paused and switched the feed to a video. \"The attack succeeded because they had a mole inside the Pack, who told attackers where and when the Alpha and Luna would be away from the Pack House. Beta Carl found the mole and arrested her. Pack warriors found the remaining people and took them all into custody. Well, all but the one who resisted arrest. She had an interesting story to tell.\" \n\nThe video played, and I gasped when I saw who it was. I'd talked to McKenna, the Alpha's secretary, many times. She had been crying and was shaking. \"You admit that you notified Beta Todd when Alpha Carson and Heather left for their picnic at Triple Falls?\" \n\n\"Yes,\" she said softly. \n\n\"Why would you do this?\" \n\n\"Why would he choose that human BITCH instead of ME,\" she said. \"She can't be a real Luna, and she bears another man's children! He was supposed to be mine, and he promised me he would be mine!\" \n\nWow. I didn't have words. \n\n\"How did you get involved in this?\" \n\n\"I asked my parents for advice when Carson claimed her. I love Carson; I have for more than a year, but he was so distant. My Mom told me to be patient. The next day, I got a phone call from my mother's old Alpha. He promised that if I called when they were away from the Pack House and unprotected, he'd make sure the bitch died. In exchange, the Council would force Carson to take a choice mate to stabilize the Pack. He said the Council would push him to accept me as his Luna.\" I was shocked; mating was something the Council stayed away from, as we believed it was the province of the Goddess. \n\n\"So, you called him back the morning of the attack?\" \n\n\"No, he gave me a number to call, and I did.\" \n\nSawyer paused the video. \"Beta Carl checked all incoming and outgoing messages from the time Alpha Carson announced he was taking Heather out at breakfast until the attack. We flagged a call to a burner cellphone and located it at a motel. Our men recovered the remaining attackers there.\" \n\nHe went back to the video. \"Who answered?\" \n\n\"A man I didn't know. I told him where Carson was taking her, and he hung up.\" She wiped a tear away. \"They said they wouldn't hurt him, and he almost DIED! Now Carson hates me, and my Pack hates me because I've betrayed them all! I wish I'd never agreed to this.\" \n\n\"Well, who was your mother's old Alpha?\" \n\n\"Councilman Oscar Millner.\" McKenna put her head in her hands. The meeting descended into anarchy again. \n\n\"SHE LIES,\" Oscar yelled as the Chairman tried to get things under control. It took almost a minute to restore order on the call. \n\n\"I have statements from the surviving attackers that they took their orders from their Pack's former Alpha and current Councilman, Oscar Millner,\" Sawyer said. \"They were told to break the Pack bonds, but when a Millner was back in charge at Blue River, their new Alpha would welcome them back and reward their loyalty.\" \n\n\"Your time is up, Alpha Carson. Blue River Pack will have ten minutes to respond to your declaration of war.\" \n\n\"We are not declaring war on anyone, Mr. Chairman,\" Alpha Carson said. \n\n\"Then why the declaration? If you had evidence against the Councilman, you should have come to me and filed charges,\" Chairman Coffey said. \n\nCarson leaned forward, his face showing his anger. \"The declaration was necessary because it forced this call to occur, a call witnessed by the Packs of the world. I didn't come to you because I don't trust the Council to deal fairly with this. I am taking this straight to the World Alphas. I demand a vote on the removal of Oscar Millner from the Werewolf Council for crimes against the Packs.\" \n\n\"YOU CAN'T DO THIS,\" Oscar replied. \n\n\"He can, and he will get his vote,\" Ivan Baronsky of the Beloretsk Pack said. \"Councilman Millner has a right to defend himself against these charges. I move for an immediate hearing on his removal; charges can wait until he is off the Council.\" \n\n\"I second the motion,\" Alpha Martin Smith said. \n\n\"This isn't the process for a trial, we have rules here,\" Chairman Coffey said. \n\n\"True,\" Sawyer responded. \"Among those rules is the right of the Alphas to remove Council members for crimes against the Packs. Your input is no longer needed or requested for these proceedings, Mr. Chairman. The motion is now an Alpha matter.\" There were a few things that were solely the purview of Alphas, and Council elections and removals were among them. \n\n\"What other evidence do you have of this conspiracy,\" Alpha Klaus Hapsburg of Austria said. \n\n\"The statements of the three captured men,\" Sawyer said. He played them; the first two said Beta Todd promised them higher pack rank and money if they helped him. They were to kill Alpha Carson and the human, then return after Alpha Coral was gone. \n\nThe final interview was with the former Blue River Beta, Todd Maxwell. \"Why would you do this,\" Beta Carl asked him. \n\n\"For the good of my Pack,\" he sneered. \"That Coral bitch doesn't deserve to be Alpha, but the Millner boy just turned eighteen. He isn't mature enough to challenge Coral for his rightful place just yet, and the Pack wouldn't support the challenge if he did. Saint Coral has all the Omegas in her pocket.\" \n\n\"Wait, if you're trying to get rid of Coral, how does killing Carson help?\" \n\n\"Oscar said they were taking care of Coral, but Carson had to die first.\" \n\n\"Who is 'they?'\" \n\nTodd shook his head. \"He didn't say.\" \n\nSawyer ended the video. \"The rest of this plan was revealed in the Blue River Pack. Alpha Coral, what happened after you heard the news of the attack?\" \n\nCoral's face came up on the teleconference. \"I was shocked, of course. I immediately arranged for a private jet to take Keith and me to the Cascade Pack. I had a Pack census taken and discovered the missing members. I provided the list to Beta Carl, then headed to the airport.\" \n\n\"You never left, though.\" \n\n\"No. The airplane's engine had an oil leak, and during the repair delay, the pilot found this.\" She held up a photograph of a device hidden in the cargo compartment, the size of a brick, with an electronic device on the side attached with wraps of electrical tape. \"The Canadian authorities deactivated the explosive, which they say was activated by an altimeter. If not for an oil leak, the plane would have exploded at twelve thousand feet over the Rocky Mountains, and I'd be dead now.\" \n\n\"To summarize,\" Alpha Sawyer began. \"Oscar Millner's son Henry is killed in a sanctioned challenge by Coral Sexson. The younger Millner boy can't mount a challenge and win against her. Councilman Millner arranges for men to attack and kill Alpha Carson and Luna Heather. Knowing the family would rush back to the Cascade Pack, he has an explosive device placed on the plane she was taking. Boom! Two Alphas down, and if I return to take over the Cascade Pack, he puts his son in Blue River and an ally in Donner.\" \n\nNo one said anything as they considered what he said. \n\nFinally, it was Oscar Millner who broke. \"This is ridiculous! I've done NOTHING wrong!\" \n\n\"Sit down, Mr. Millner,\" Chairman Coffey said. \n\n\"I DID NOTHING WRONG,\" Oscar yelled as he started to leave. Chairman Coffey and Councilman Kirk held him back. \"I'M OSCAR FUCKING MILLNER, GET YOUR HANDS OFF ME!\" He broke free and headed for the door. \n\nThe Council enforcers moved through the screen after him, and that's when it went to shit. Multiple gunshots rang out, but we couldn't see what was happening since it was a fixed camera view. Finally, Chairman Coffey came back in. \"Oscar Millner was killed resisting arrest. The proceedings are over.\" With that, the teleconference ended. \n\nCh. 27 \n\nWarrior Greg Bark's POV \n\nBeloretsk Pack, Russia \n\n\"Are you ready? We need to be at the Pack House in ten minutes,\" I said. I was thankful today was an English day. As part of our language training, odd days were in Russian, even days in English in our home. \n\n\"Da, yes, I'm ready.\" She came out of our bathroom, dressed in a cable-knit sweater and jeans. Tatiana was a beautiful young woman, and I loved my mate with all my heart. I hated the looks, the secret comments that were made over the link as we passed by others. Both of us had screwed up, and it would be years before it would die off. \n\nWe put on our jackets and boots and walked out of our small home, joining the others heading for the four-story log lodge that was the Pack House. We climbed the stairs and took a right inside, heading for the Dining Hall. \"Do you know what is going on?\" \n\n\"Father said there was an attack on the Cascade Pack, and Alpha Carson is declaring war.\" \n\nMy heart sank. \"That is where... my...\" \n\n\"Where your ex-lover and baby mama are, yes.\" \n\nI might never live down my actions with Heather Rhodes, and every day I cursed my failure to wrap that rascal the first time we made love. \"It wasn't her fault; it was mine. She never deserved this.\" \n\n\"Yes, just as my attack on her was my fault. Come on; we can sit with my parents.\" The lights in the room were down, but wolves had no difficulty seeing in low light conditions. We found seats at the table next, Tatiana placing me between herself and Vasili. The projector illuminated a giant screen on the long wall; the global conference of the world's Alphas was beginning soon. Along the bottom of the screen were two rows of small boxes, most filled now with waiting Alphas. The Council seal was in the center. \"\u043b\u044e\u0431\u044b\u0435 \u043d\u043e\u0432\u043e\u0441\u0442\u0438 \u043a\u0430\u0441\u043a\u0430\u0434\u0430 (Any news on Cascade),\" she asked him. He shook his head no and pointed to the screen. \n\nI was glad the proceedings were in English, although someone was running subtitles in Russian. I could see Alpha Carson; his face showed bruises, and stitches went down his left cheek and back towards his ear. I was nervous as the last of them joined, and then the conference started. \n\nThe Chairman talked about progress, but all I wanted to hear was whether Heather was all right. Finally, it was time for Carson, but Sawyer Nygaard spoke instead. \"As you can see, my younger brother is recovering from injuries sustained in an attack earlier today and requested I speak on his behalf. Nine men attacked Alpha Carson, his Beta, and Heather Rhodes.\" My stomach flipped. \"Alpha Carson and Beta Angelina will recover, but one got through and bit Heather Rhodes.\" \n\n\"NO!\" I jumped to my feet, my wolf surging forward at the news. Vasili was on me in a flash, holding me back with those big arms of his. \n\nTatiana was in front of me, her touch and voice calming me. \"Control yourself, love. You cannot do anything from here.\" \n\n\"My babies...\" \n\n\"I'm sorry, my love.\" I relaxed enough for her father to release me, and Tatiana pulled me down to the chair before sitting on my lap. \"I know you gave custody over, but they would have been your firstborn.\" I watched the rest of the proceedings as I bottled up my anger. When the conference ended, I felt cheated, like Carson must have felt when his revenge got taken away from him. \n\nHeather escaped the Arrowhead Pack after Tatiana's attack, and I never had a chance to speak to her. I never got to apologize for being the asshole I was, leading her on and then abandoning her by letter, and now I wouldn't have the chance. That hit me as hard as the loss of my children; I mentioned it to Tatiana over the link, and she leaned into my side. \"I won't get to apologize for attacking her, either,\" she said. \"You loved her.\" \n\n\"I did. I figured I'd come back after my penance and find a way we could be together. My wolf didn't like it, but I would have done it anyway.\" I kissed her head. \"Your parents tell you about how wonderful the mate bond is, but there's no way to truly describe how I felt when I found you, Tatiana. I love you, and my wolf loves you, more than life itself.\" \n\n\"I love you too, my mate.\" The room got quiet as Alpha Ivan and Luna Svetlana Boronsky walked into the room and onto the raised area at the front. I bowed my head in submission, as did the rest, while he stood at the front to talk. \n\n\"I'll translate for you,\" one of the warriors said over the link. \n\n\"Thanks, Ivan,\" I told him. My Russian was rudimentary, and I'd be unable to keep up with the Alpha's rapid-fire talk. I focused on his link as I held Tatiana's hand. \n\n\"Well, that was not boring,\" Alpha Ivan said to nervous laughter. \"First off, we have confirmed that Councilman Millner is dead. He took three silver bullets to the chest, and there's no coming back from that. Since Alpha Carson withdrew his proposed declaration of war, which was only a means to force the Council to hold the teleconference, the matter is now local.\" \n\n\"It's over, Alpha?\" \n\n\"As a matter for the Alphas, yes. Alpha Carson and Alpha Coral will deal with the prisoners, and they will work out any reparations between them. I doubt if the siblings will hold a grudge. It is unfortunate the human will not survive; our sympathies are with Warrior Barks for the loss of his unborn children, and the Arrowhead and Cascade Packs for the loss of their friend.\" Tatiana squeezed my hand as some of the others around me put their hands on my shoulders in support. Babies were treasured, and even though I had given their care into Alpha Carson's hands, they were still mine. \n\n\"There are many lessons to be learned from this tragedy,\" Luna Svetlana said, \"but none more important than honoring the mate that the Goddess made for you. Warrior Barks will be the first to tell you he made a mistake, falling in love with a human when his true mate was still out there. The Cascade Pack woman will die a traitor's death. Why? Because she thought she could press her Alpha into taking her as Luna, instead of waiting for her mate. Even Alpha Carson suffered for decades because his true mate rejected him for another male. The Goddess Luna's pairings are never wrong, and the price for taking on her role is high. Wait for the one who is yours.\" ",
        "I couldn't have said it better myself. \n\n\"What will happen on the Council,\" one of the warriors asked. \n\n\"The seat belongs to North America, and those Alphas will vote on a replacement. It could take anywhere from days to weeks until an election fills the seat.\" \n\n\"What about the hacked server? Was that related to Councilman Millner,\" another asked. \n\n\"That is still under investigation. The actual hack was performed by a human, who is married to the former Beta of Arrowhead Pack, Vic Knightly. I'll add to what my lovely mate said; a werewolf cannot mate a human, but a widow like Vic could choose to mate another widow. When he inevitably bites his wife in the throes of passion, she will die. In any case, both are wanted fugitives, and the American Packs and Council are actively searching for them.\" \n\n\"Will they out our kind to the humans? They have the Council's Genealogical Database; they know all of our names,\" another asked. \n\n\"They have already extorted money from Arrowhead, but we don't know what else they may do with the information. The Council and the Packs are working on contingency plans should our existence be revealed. I will be making this a priority with the Council. Any other questions?\" No one said anything. \"Breakfast is in twenty minutes. Dismissed.\" \n\nI stood up, setting my mate on her feet, and Luna Svetlana waved us over. \"Greg, we know this is a shock to you. If you wish, we will make arrangements for you to fly to the Cascade Pack for Miss Rhodes' funeral.\" \n\nI looked over at Tatiana; I wanted to go, but not alone. Alpha Carson, reeling from the loss of the woman he thought was his mate, might not want me on his land. \"I appreciate the offer, Luna, but I need to speak with my mate and Alpha Carson before I could accept. I don't know if my presence there would be welcomed.\" \n\n\"Let me handle that part,\" she said. \"You and Tatiana talk it over and let me know today.\" \n\n\"Of course, Luna. Thank you.\" She joined her mate, and Tatiana and I joined some of the younger warriors as we waited for the breakfast service to begin. \n\nColletta's POV \n\nCascade Pack House \n\nThe Alpha videoconference was like watching a train wreck in slow motion. In the end, the man responsible for the attack was dead, and our thirst for vengeance unsatisfied. I almost pitied the survivors in the cells. The Pack would want them to suffer even more before death now. \n\nFrank's reaction was a little different. Growing up human, he didn't have the same bloodlust we did. He was satisfied that Millner was dead, but there was something else. \"The bomb on Coral's plane; who thinks this is the first time they've used that?\" \n\n\"Charles?\" Rori's grandfather had died shortly after her Pack formed, and it was only in the past week that the wreckage of the private jet had been found and recovered in Lake Michigan. \n\n\"Has the family gotten any reports as to the cause?\" \n\n\"I don't think so, just that it is under investigation.\" I thought for a moment. \"Do you have contacts in the investigation?\" \n\nHe shook his head, no. \"The National Transportation Safety Board didn't get involved in DEA matters. I do have some FBI contacts, but not in the Chicago area.\" \n\n\"I have Hugh Patterson's private cellphone number in my phone. Maybe we should speak to the FBI Director and have him smooth the way.\" I had met Hugh in Washington, DC when I went to head off the investigation into the Packs and provide Spider Monkey's intelligence on the Sons of Tezcatlipoca. Hugh was the only one in government who knew about werewolves. \n\n\"Let's check with Rori first.\" I texted my daughter-in-law and asked her to call me back when she was alone with her mate. It was about forty minutes before she did. \"Hi honey,\" I said as I answered. \n\n\"Hi, Mom. Chase and I are in our office now. We just got done with the Pack meeting.\" \n\n\"I'll make this quick. Frank thinks the bomb they found in Coral's plane is related to the death of Charles.\" \n\n\"It's too much of a coincidence, and it means there's a bomb expert out there taking contracts on Alphas,\" Frank added. \n\n\"You're right,\" Chase said. \"The NTSB and FBI haven't said anything about the cause, but it's suspicious as hell.\" \n\n\"I want to run it past our law enforcement contacts, maybe find a way to get close to the investigation. I just wanted to make sure you knew and were all right with it,\" Frank said. \n\n\"I think the rot in the Council goes far beyond Millner. It's probably a good idea for you to get out of Cascade for a while, Frank. We don't know what information the mole passed along, so they may know you're there. They might even know you shifted. That makes you an even bigger target than if you were still human.\" \n\n\"We'll make the call, but I can't leave just yet. I need to be here for Heather's shift; I'm the only one who's been through it. I owe it to her to help her deal with everything, including the loss of her babies.\" \n\n\"Fine. Just stay out of sight and around the Pack House. I doubt if they have another team, but who knows what happens after today,\" Rori said. \n\n\"Thanks, honey. How are my grandbabies doing?\" \n\n\"Good, they're adjusting well, and I'm past morning sickness. How's my new sister-in-law doing?\" \n\n\"So far, so good, but why do you think it's a girl?\" It was way too early to find out. \n\n\"Frank has a boy already, and you're due for another girl,\" she said with a laugh. \n\n\"I'll let you get back to work. Love you both,\" I said. \n\n\"Bye, Mom. Bye, Dad,\" they chorused. \n\nI looked at Frank, who was stunned. \"They called you Dad,\" I said. \n\n\"They did.\" He wiped a tear away. \"Let's get the information on the investigation from Coral, then call the Director.\" An hour later, we were buying plane tickets to Chicago. Director Patterson was understanding of our interest, and given the targets, agreed to give Frank access to the investigation as a 'consultant' from his office. I was going because Frank wouldn't leave his pregnant mate behind. \n\nCh. 28 \n\nAlpha Carson Nygaard's POV \n\nCascade Pack House \n\nAs soon as Chairman Coffey ended the call, I started another one. It was a smaller videoconference, only the Alphas of our families. I watched the screen as Sawyer and Ashley, Coral and Keith, Rori and Chase, Michael and Margaret, and Martin and Rebecca joined the conversation. \"Well, that was fun. Thank you for handling that, Sawyer. I didn't have the patience for it.\" \n\n\"You'll get my bill,\" he said with a grin. \"Overall, it went well. I hoped we would get to punish Millner ourselves, but he's dead now. The question is what we do next.\" \n\nMartin was the most politically savvy of us, and he was first to understand the implications. \"In the short term, the attack will gain us some goodwill. You repelled a sneak attack from a Council member, and you handled it well. We should use this to galvanize support for our cause.\" \n\n\"Isn't it a bit early,\" Coral asked. \n\nMartin shook his head, no. \"I'm sure the jockeying for Millner's spot on the Council is already beginning. We represent a good chunk of the voting Packs, but we don't have a retired Alpha on the bench for a century to put up. Our allies do, and they will be lobbying for our support of their preferred candidate.\" \n\nHe was right. \"How should I handle it?\" \n\n\"You don't do anything,\" Martin said. \"Heather is your mate, and as far as they know, she is dying. No one expects you to leave her side, and it would hurt our cause if you did. Let Mom answer the calls for you.\" \n\nIt made sense, a lot of sense. \"Too bad we can't put Mom up. THAT would shake up the Council.\" \n\nMost of us laughed, but Sawyer didn't. \"Technically, there's no reason we can't.\" The rest of us stared at him. \"The laws for eligibility only state that the person cannot be an active Alpha of any Pack. They don't even require the person to have BEEN an Alpha. The idea that only long-retired Alphas are candidates is tradition, not law. Carson's right; Mom would be a hell of a Council member.\" \n\n\"We can't risk it,\" Margaret said. \"She's mated, it's a package deal, and we're trying to keep the Change secret for now.\" \n\n\"She's right,\" Coral said. \"It's too bad. I'd love to be with her when she and Frank walk into Council headquarters, and he lets his dominance out. Kirk and Coffey would piss themselves.\" \n\nIt was a fun thought. \"So I stay out of sight with Heather, Mom handles the calls, and we all work the other Alphas.\" \n\n\"Exactly,\" Martin said. \"Don't commit to anyone just yet, but talk about what we want in the next Councilman. Someone with honor and courage, open to human interaction, and new ideas.\" \n\n\"Let them bring forward their suggestions. We can talk again in a few days; we might find it to be an easy choice,\" Michael said. \"I have a few ideas as well, especially since Sawyer pointed out I don't have to restrict myself to fossils.\" \n\n\"Go to your mate, Carson. We got this,\" Chase said. \n\n\"Thank you all. I'll keep you posted on Heather's progress.\" With that, I ended the videoconference and headed out of my office. I sent a request to the kitchen to have food brought to the Clinic as I ran towards it. \"Mom?\" \n\n\"Carson? Are you all right?\" \n\n\"I'm fine. Mom, I had a quick talk with the rest of the family plus Michael and Martin about what to do next. They suggested that I stay with Heather, out of sight for a while.\" \n\n\"To be with your dying mate,\" she said. \n\n\"Yes, but we both know how strong she is. She will pull through. Can you stay in the office, answer the phone calls and deal with the condolences?\" \n\n\"Of course. Go to your mate; you've been away too long already.\" \n\n\"Thanks, Mom.\" I reached the Clinic, making my way to her bedside. She was still sleeping, hooked up to machines, but not pale like earlier. \"How is she doing?\" \n\n\"She's beginning to wake. I was going to call you in a few minutes,\" Doc said. I looked at the monitors; her vitals were back to normal. \"Temperature is just starting to rise. The fever will hit in the next hour or two, so you don't have much time before she'll be out of it again.\" The shift started with the worst case of flu-like symptoms; high fever, chills, nausea, muscle aches. For the first shift of a werewolf, an hour or two later, you were shaking out your fur and learning to walk on four legs. Frank's first shift had been long and painful, and only Colletta's mating bite gave him the strength to complete the change. \"Doctor Olson's plane arrived, he's been picked up and will be here in an hour.\" \n\nThat was good; the Oxbow Lake Pack Doctor had been there for Frank's change. Alpha Michael had put him on a private jet to Yakima as soon as he heard about Heather. I kissed Heather on the forehead, noting her flush. My wolf wanted to be next to her and protect her from the pain. \"Is it all right if I join her?\" \n\n\"Of course, Alpha. Be careful of the lines.\" Her left hand had the IV line, blood pressure cuff, and pulsox fingertip detector, so I moved to the right side where her broken forearm lay in a cast. I stripped down and lifted the sheet, sliding in next to her. Moving her arm over her stomach, I rested on my side with my arm below hers. \n\nShe started to move a few minutes later, and I gently took the fingers of her right hand as her eyes began to flutter open. \"You're safe, Heather. I'm with you.\" \n\nDoc turned down the lights, and she opened her eyes wide. \"How...\" She turned her head to me and tried to sit up. \n\n\"Just relax and breathe, love. You're in the Clinic. You took a nasty fall into the river, and your body hasn't recovered yet.\" \n\nShe looked at me for a moment before relaxing. Turning her head, she looked at Doc. \"Babies?\" she whispered. \n\n\"Alive for now,\" he said. Heather moved her right hand towards her lower belly, wincing in pain before she looked down to see the fiberglass cast on it. \"One of the attackers bit your arm, breaking both bones. They are healing well.\" \n\n\"For now?\" Tears were falling from her eyes, and I knew she had figured it out. \n\n\"Your injuries were extensive, and your heart had stopped when I pulled you out of the water,\" I said. \"The bite was going to kill you, kill all of you. We gave you my blood, werewolf blood, just like we did with Frank. It stabilized you and is healing you already, and you'll make the change soon if you want to.\" \n\nHer eyes got big, tears pooling in them. \"You said you couldn't change me because it would kill the babies. I don't want to hurt them.\" \n\nI put my hand gently on her cheek, my thumb wiping the tears away. \"There was no choice where I could save you all,\" I said. \"I'm sorry, my love. If you don't want to be like us, I will let you go. We will make you comfortable until you are gone.\" It tore my heart apart to say this, but I had to. She had so many choices taken from her in her short life, and I wasn't taking this one. \n\nShe closed her eyes and laid her head back as the sobs came. Her hands covered her belly, and my hand covered hers. \"I'm so sorry, love. It's all my fault; I couldn't protect you on my land.\" \n\n\"It wasn't your fault. The men were after me; you just got in the way,\" she said. \"No regrets. I was having such a good time, right until they interrupted our little moment.\" \n\n\"Another reason to kill them all,\" I said as I kissed her cheek. \"I get to first base, and they pull a pickoff move.\" \n\nShe didn't say anything for a few more minutes. \"Tell me if I have this right, Doc. I got bitten, so if you did nothing, I'd be dead soon.\" \n\n\"Yes, humans die within a day of being bitten.\" \n\n\"You gave me werewolf blood, which saved my life. It will turn me into one of you after a long, painful change that my babies won't survive.\" \n\n\"We think that is the case, but you're only the second try at this. You are correct in that your babies will not survive the change; they are too far along.\" \n\nShe turned her head to look at me. \"Do you want me to be your mate, Carson?\" \n\nI nodded. \"It's the only thing I want now, my love. Let me bite you and make you mine as I am yours.\" \n\n\"Can we run together?\" \n\n\"Of course, love. You and I, together always.\" \n\nShe pulled me down into a kiss. \"I want you to do it, Carson. I want to live.\" \n\nI kissed her deeply, ending with my forehead against hers. \"Thank you.\" \n\nShe turned her head towards Doc. \"You think my babies will not survive, but has a pregnant human ever turned?\" \n\n\"Of course not, Luna.\" \n\n\"Then you don't KNOW what will happen. Don't you give up on my twins, because it's not over until it's over. Carson, you do everything you can to save all three of us.\" \n\nWe talked for a while about what she might expect, and I could feel her fever starting in towards the end. Doctor Olson arrived, and she smiled at him as he walked in. \"Miss Heather!\" \n\n\"Hello, Doctor,\" she said warmly. They first met on the jet to Minnesota after Rori's team snatched her from the Orlando hospital. \n\n\"You need to stop getting hurt, so our meetings are more pleasant,\" he teased. He looked over Heather's chart and saw her temperatures trending up. \"It won't be long now.\" \n\n\"I've agreed to let Carson mate me,\" she said. \n\n\"That's wonderful. We'll give you some privacy.\" \n\n\"Now?\" Doc looked at his counterpart. \n\n\"It can't hurt. Heather's attacker already bit her, so another bite won't be any more harm. The mating bite now will strengthen her. Combine that with being in better physical shape than Frank was when he changed, and it might shorten the transition.\" Doc thought about it before he agreed, and they both stepped out. \n\nI smiled down at my mate. \"This isn't the romantic moment I had planned on when you agreed to be mine,\" I said. \n\n\"You can make it up to me. How do we do this?\" \n\n\"I'll shift my jaws and bite the junction of your neck and shoulder. It will hurt, at least at first. If you were a werewolf, you'd feel a rush of pleasure as our wolves connect.\" \n\nShe nodded, pulling the hospital gown off her left shoulder. \"Do it quickly,\" she said. \n\n\"I love you,\" I said before I kissed her. I held her in my arms, bringing her shoulder off the bed as my teeth shifted. I kissed her neck until she relaxed. I opened my mouth as wide as I could, put her neck in my mouth, and bit down. \n\n\"Ahhhhh, OWW SHIT,\" she said as her blood entered my mouth. I released her, licking at the bloody wounds as her tears fell. \"That hurts!\" \n\n\"I'm sorry, love.\" I called for Doc to come back in, and he cleaned the wounds and helped me hold pressure on them until the bleeding stopped. \n\n\"You better romance the shit out of me with your marriage proposal,\" she teased as she laid back in the bed. \"I'm hot.\" \n\n\"The fevers are coming on. Say what you need to, because the delirium will be here soon.\" \n\nShe looked into my eyes. \"Carson, if I don't make it.\" \n\n\"You're going to pull through this, Heather. I won't let you die.\" \n\n\"IF I don't make it, I want you to scatter my ashes on Arrowhead Lake. Invite my family and my Club friends, and have a blowout wake on my tab,\" she said. \"As for you, you live. You're a good man, and your Pack needs you. Don't follow me across because I want to watch over you here.\" \n\n\"I can't live without you now, Heather.\" \n\n\"You can, and you will. For me.\" I nodded, knowing she had no idea what she was asking. I could already feel the bond starting between us, tying our souls together for eternity. \n\nFive minutes later, her fever was over a hundred and four, and there was no more talking. All I felt was her pain over the thread connecting us. \n\nCh. 29 \n\nSpider Monkey's POV \n\nPortland, Oregon Steel Brotherhood Clubhouse \n\n\"Just follow my lead,\" I told Vic as we pulled up to the closed gate. A Prospect walked out to meet us, a young kid who looked like he just started shaving. OK, maybe I was getting old, but still. \n\nI rolled down the window as he looked in past Vic. \"This is a private club,\" he started to say. \n\n\"No shit, Prospect. Tell Thor that Spider Monkey and Vic are here.\" \n\nHis attitude changed when he spotted my Steel Lady cut. \"Welcome to the Portland chapter. You can turn around and park over there. I'll let him know you're here, Spider.\" The chain-link gate slid open, and a heavy-duty crash arm lifted out of the way. It looked big enough to stop a truck, with a T at the end to lock in and reinforce it against bending. \n\n\"Looks pretty busy,\" Vic said as he shut the engine off. The Clubhouse was in an industrial area of town, and an 8-ft high chainlink fence topped with razor wire surrounded it. Jersey barriers were placed about four feet out from the fence line to keep anyone from running a car through it. \"Better security than I expected,\" he said as he looked at the roof. Steel V-plates were at the corners with sliding firing ports, and more painted steel covered positions near the door. He took my hand and walked me towards the entrance. Concrete planters four feet high provided protection and firing positions, softened by shrubs. The entrance to the clubhouse bumped out in a T-shape, with poured concrete walls rising ten feet to the roof enclosure. In addition to keeping the doorway free of rain, it also protected the door from gunfire. \n\n\"After the attack on the Orlando Pack, the National leadership focused us on protecting our clubhouses,\" I said. \n\n\"They did a good job; you could hold off a company of men with the right people and weapons,\" Vic replied. \n\n\"We have lots of both,\" a big man said as he walked outside. \n\n\"SWITCH!\" I ran up and jumped in his arms, and he caught me and spun me around. \"I heard you quit the Club, Spider! What happened?\" \n\n\"Plausible deniability,\" I said. \"Turned out the Chapter 'lost' the paperwork and gave me my cut back.\" \n\nHe set me down as Vic came up, fisting his hands and a little upset at the attention I was getting. \"Switch, this is my Old Man, Vic Knightly. Vic, Switch is the Vice President here, I've known him since he was a Prospect.\" ",
        "\"Welcome to Portland,\" Switch said as he extended his hand. \n\nVic shook it, squeezing hard enough I could see his fingers going white. \"Hey, if you guys are done measuring dicks, which isn't much of a contest with Vic here, we should go inside.\" \n\nVic smiled and let go, and Switch casually put his hand behind him as he gestured for us to enter. \"We've got just enough time for a beer before Church starts,\" he said as we got to the door. \n\n\"SPIDER MONKEY!\" I barely got a step in the door before being engulfed in a hug. Due to my height disadvantage, that meant my face got smothered in Sif's prodigious bosom. She got her road name for two reasons; she was tall, muscular, and blonde like the Norse Goddess of her name, and she was Thor's wife. \n\n\"Hi Sif,\" I said when I could breathe again. \n\n\"Holy shit, girl, who's this hunk of man meat?\" \n\n\"Sif, this is my husband, Vic Knightly. Vic, this is Sif, she's Thor's old lady and President of the Portland Steel Ladies chapter.\" \n\n\"Husband? Damn, girl, you must have fun climbing this tree every night,\" she said as she looked him over. \"Come on, bitch, the other girls can't wait to see you.\" She grabbed me and pulled me towards a big round table in the back; I just rolled my eyes and told Vic to grab a beer as I was led off. \n\nThe Ladies were happy to see me, more so when they heard I'd gotten married. Sif yelled at a Prospect to bring shots, and her eyes got big when I refused. \"WHAT?\" \n\n\"What can I say, he's a potent specimen of male sexuality,\" I said. \"And I damn near wore that dick of his down to a pencil on our honeymoon.\" They all laughed and did the shot as I drank water. \n\n\"Time for Church,\" Thor said as he walked over to us. He looked like Dolph Lundgren, tall and muscled with a blond flattop. \"I'll bring her back,\" he said as he kissed Sif. \n\n\"Take care of her, she's pregnant, and her husband looks jealous,\" she told him. \n\n\"Later, Ladies,\" I said as I got up. \n\nI followed him through a hallway to a room with the Steel Brotherhood emblem; when we entered, the thirty-some patched members seated around a long table. I couldn't tell them the full truth, but Vic and I had discussed how far we could go. Thor gaveled the meeting to order. \"Spider Monkey has requested the protection of our Chapter and this Church session. I'll turn it over to her.\" \n\nI gave them a short version of what was going on as I was hooking up my laptop to the flat panel television on the wall. \"This has nothing to do with the Sons of Tezcatlipoca anymore,\" I started, which caused them to relax. \"That is over, and the Feds have everything I could uncover on them.\" \n\n\"That's why you resigned? To work for the Feds?\" The Brotherhood was a law-abiding Club but didn't always get along with them as the Orlando chapter found out. \n\n\"No, that deal was made later. I did a lot of not-so-legal things in the takedown, hacking their systems and accounts to take their money and expose their operations. The Nygaards swung the deal. Chase Nygaard also resigned, and kept the Brotherhood clean; we got immunity, and they got all the information I dug up. The Sons crumpled under the combined pressure.\" \n\n\"Good riddance,\" Thor said. \"Who is the problem then?\" \n\n\"My husband Vic worked for Rori and Chase up at Arrowhead Lake. About a year ago, her Grandfather, Charles Smith, disappeared in his private jet over Lake Michigan.\" I pulled up a news story on the recovered plane. \"Rori suspected a business rival in Canada might be behind it. She asked me to 'look into it' my way. I hacked their computers and copied a bunch of files, but they found out and tracked it back to me while we were riding our Harleys in southern California.\" I switched to a news story about the arson fire at my home in Arrowhead. It showed a before and after photo of the lake home. \n\n\"Damn, Spider,\" Rattler said. \"They burned everything but your bikes!\" \n\n\"Yeah, we don't have much. Total loss. The group behind this has suspected Canadian Mafia connections.\" \n\nThe thought brought out some laughs. \"I could just see that,\" Slick said. \"Pay up, or I break your leg, eh? Hoser?\" \n\n\"It's not funny. The Coffey family doesn't have the notoriety of the crime families in the States, but that doesn't mean they aren't dangerous. They know who I am, who Vic is, and they have no problem killing or destroying those who betray them. They are also loosely allied with other crime families, and I'm sure Coffey has put a bounty on my head.\" \n\n\"What do you need from us,\" Thor asked. \n\n\"Rori's place is being watched. Nobody outside her family knows I'm with Vic, or that I'm working with her on this. We should keep it that way to draw attention away from Arrowhead. I have the information I need, but a lot of it is phone conversations and other files. I need a quiet place to hide out for a few weeks to process it.\" \n\n\"That's easy. Anything else?\" \n\n\"Part of our trip was bringing some things from Vegas up to Rori's brother, Carson. He's in the mountains east of Mount Ranier. Vic can do it, but I don't want him going alone.\" \n\n\"Easily done,\" Thor said. \"Should I worry about blowback on the Club?\" \n\n\"They won't take on the Brotherhood,\" I said. \"They don't have the juice for that, and they don't want the attention after seeing what happened to the Sons. They may poke around the Chapters, knowing I'm a Steel Lady. There is no reason I'd pick this Chapter over any other, so that helps. If you let the Club know I'm hiding here and keep your eyes out for strangers, you should be fine.\" \n\n\"Slick, take her back to the bar, and bring Vic in here,\" Thor commanded. I got up and walked out with him; Vic was happy to see me and confused by his summons into Church. Five minutes later, they brought him back. It was another five before they brought us back in. Vic pulled me onto his lap as Thor stood up. \"The Brothers have voted to provide sanctuary and protection to Vic and Spider Monkey, as we would for any Member who was in danger. For now, you'll take one of the Clubhouse rooms; having the members around is best. Spider Monkey, you are not to leave the building. Vic may, but we have a problem with someone staying here who isn't Club. Stand up, boy.\" \n\nI looked at Vic as he stood me up and got up next to Thor. \"There are only two kinds of people allowed in this Clubhouse unless they are guests at a party; Patched Members and Prospects. Having a Steel Lady like Spider Monkey here next to a man with a cut, that's just unnatural. Spider has our protection; if you want it, you take this Cut and start the process like everyone else.\" Switch handed him a leather vest with PROSPECT for a name tag, and STEEL BROTHERHOOD PORTLAND OREGON on the back, without the Brotherhood emblem. \"Do you swear loyalty to the Steel Brotherhood, to obey Patched Members, and reveal nothing you see or hear in the Club outside the Club?\" \n\nVic nodded. \"I swear it.\" \n\n\"Then put on the fucking cut, Prospect, and go unload your shit.\" He banged the gavel to end the meeting, and the men all stood up and applauded. They slapped Vic on the back as they hurried him out of the room. \"Let's drink, boys.\" Thor picked me up, and I clung to his side like a toddler carried off by her Mom. He set me at the bar as one of the Prospects lined up shots and beers. The men and women in the Clubhouse surrounded me as the drinks were passed out. \n\n\"I can't drink,\" I reminded him. The Prospect slid me an orange juice. \n\n\"BROTHERS! A Toast!\" He waited until everyone had a shot. \"To Spider Monkey! Married to a Prospect and knocked up already!\" \n\n\"TO SPIDER,\" they responded as they knocked them back. \n\nVic got teased as he came in and out, carrying our stuff upstairs to the room we had. After the toasts, Thor, Sif, and Switch led me to a booth in the back. \"What else do you need,\" Thor asked. \n\n\"We have our motorcycles, but not many clothes,\" I said. \n\n\"Give me your sizes, and I'll take care of the shopping,\" Sif said. \n\n\"I'd like to get the car and trailer with its stuff to Carson; both belong to Arrowhead Resort, and he can get it back to his brother later on.\" \n\nHe thought about it. \"It's not warm enough yet to ride through those mountains. I can get a few volunteers to strap up and follow him in a couple of trucks. He can catch a ride back with them.\" \n\n\"That works.\" \n\n\"We can leave in the morning; if he's not healed enough to drive, I'll have another prospect do it.\" Prospects got tested by fighting; it was the Brotherhood way to see what kind of man you are. \n\n\"Thor? Don't put anyone in the ring you want fit to make the drive,\" I said. \"Vic is a literal beast.\" He'd never know just how true that statement was. \n\n\"Good. We haven't given Pipes a good fight in a long time.\" Pipes was the chapter's Master at Arms, a barrel-chested, bearded brawler of a guy with fists that hit like steel pipes. He was at the end of the bar, watching Vic with some interest. He was one of the few guys in the Chapter with a notable size and weight advantage over my man. \"BOYS!\" The Clubhouse quieted down. \"Prospect Check starts in thirty minutes. I need two volunteers to fight him. Pipes, you're the third.\" \n\n\"Fuck yeah,\" he said as he rubbed his left hand over his right fist. \"I'll apologize in advance, Spider Monkey. He won't be worth much in the sack tonight after I win.\" \n\n\"You know I rarely make it to the bed before I start fucking,\" I said. \"Watching my man beat people down gets me all worked up.\" \n\nBy the time we made it down to the ring in the basement, the bets were flying with the excitement of a new fighter. Vic was in one corner, borrowed blue boxing trunks on, and MMA-style gloves. In the other corner, Rattler was warming up with punches to the corner padding. He was a former Marine, the emblem tattooed across his muscled back. \"He used to box in the Marines, he's fast as hell on the counters, so watch out for his combinations,\" I told Vic as I handed him his mouthguard. \"Use grappling or MMA against him.\" \n\n\"Let's make this more fun,\" Vic responded. \"Hey Rattler, you're a boxer, right?\" \n\n\"Yeah. Rules are any discipline, though.\" \n\n\"Straight boxing. Five hundred says I knock your ass out in two rounds.\" \n\nHe looked at us like we were crazy. \"You got it, old man.\" The new rules inspired another round of betting, which I got in on. \n\nThor got into the ring; he'd be the referee for the fights. \"OK, boys, this fight is three two-minute rounds under boxing rules. Break when I tell you.\" The two men bumped fists and moved apart until the bell rang. \n\nRattler went on offense, moving Vic towards the corner as he used his jab to feel him out. Vic kept his hands up, moving his head and body to avoid the lightning-fast hands. He wasn't getting hit that hard, but he wasn't doing any damage either. Vic got in a few shots to the body before the bell rang for the end of the first round. In a real fight, he'd be way behind in points. He came back to the corner, and I gave him some water. \"Are you planning to hit him sometime today,\" I asked loudly. \n\n\"Take more bets.\" After seeing him fight, I was getting three and four to one odds on him now. When the bell rang, Vic held his left hand out for a bump. \n\n\"You're mine, old man,\" Rattler said as he touched it with his left. Rattler moved in, using his jab to force him to the corner where he could use his right hand, and that's when Vic countered. Ducking down and left, his left hand crashed into the side of Rattler's head like a sledgehammer. Rattler's mouthpiece flew out, his eyes unfocused, and he fell against the ropes as Vic moved to his corner. He gave me a sweaty kiss and a hug as Thor counted Rattler out. \n\nThe next fight was with Switch, who got his name because if he hit you, you went out like a light. He was a Mixed Martial style, which Vic copied. The odds weren't as good, and Vic didn't drag it out. He got him into an arm-bar submission hold in the first round, and Switch tapped out. \n\n\"Pretty fucking impressive,\" Thor said. \"What disciplines do you know?\" \n\n\"Boxing, wrestling, judo, Brazilian jujitsu, karate, Mixed Martial, Krav Maga. You learn a thing or two over your life,\" he said. I just snorted; hell, he was a great boxer in the days of Joe Louis. \n\n\"You'll need them all. Pipes isn't fancy, but he's strong as hell. If he gets you flush, you're going down.\" He waved Pipes forward. \"Two-minute rounds, no other rules.\" \n\nThe bell rang, and this time Vic was the aggressor. It became a classic boxer vs. brawler match; Vic landed punch after punch to his head and ribs, while Pipes waited for his chance. When he staggered Vic with a shot to the gut, Pipes charged forward and wrapped him up around the arms. Picking the big man up, he body-slammed him to the ground, his three-hundred-and-fifty pounds landing on top of him. \n\nWith his arms pinned and the weight on him, he wasn't going to be able to breathe long. Pipes started to smile as his arms squeezed tighter. Suddenly, Vic's head snapped forward, his forehead breaking Pipes' nose with a spray of blood. That was enough to loosen his arms, and Vic bucked Pipes off him. Moving quickly, Vic caught his neck in a leglock and started to apply pressure. \n\nThe big man struggled, but Vic's legs were stronger than his arms. He tapped out. \n\nVic released him, then stood up and pulled Pipes to his feet. Pulling off his gloves, he fixed his broken nose. \"Good fight,\" he said. \n\n\"Not bad, Prospect,\" Pipes said as they shook hands. \n\nI collected my winnings for the night. \"Drinks are on me,\" I said after I jumped into Vic's arms. A cheer when up. I handed Thor a wad of cash. \"Get them started; we'll be down in an hour or so.\" \n\nVic stepped over the ropes as I clung to him, and accepted the congratulations of the Club as he walked me out. He took the stairs two at a time, and let me down as we reached the door. Unlocking it, I pulled him inside and had his shorts down and his cock in my mouth before the door was closed again. \"Fuck, baby,\" he said as I took him deep. \n\nI moved up and down on his rapidly stiffening rod as he leaned back against the doorway. His cock was damn near perfect, long enough to reach deep into me, and wide enough to stretch me. I changed things up, swirling my tongue around the head, sucking him slow, until I had him all. I reached out with my tongue and licked his balls, making him moan with pleasure. Backing off, I took a breath as I swirled my tongue, then started down again. \n\nI was horny as hell, so I popped the button of my jeans open. Reaching my right hand in so I could touch myself as I sucked him, I put one, then two fingers in my wet slit. I was about to reach a peak whe he grabbed my hair, forcing my head back until I popped off him. \"Fuck me, baby. Please. I need you so bad,\" I begged as I looked up at him. \n\nHe stepped out of his shorts as he pulled me to my feet. I tossed my shirt and bra onto the floor, my hands squeezing them and pinching my erect nipples. He'd pulled down my jeans and panties then helped me out of my boots and socks before he tossed those aside too. \"Hold on,\" he commanded. \n\nI held on to his shoulders as he grabbed the back of my thighs and lifted until my legs were over his shoulders, standing and turning until my back was against the door. I had no escape as his tongue licked my wet sex from bottom to top, six feet in the air, helpless to stop him from taking what he wanted. \n\nThe thought made me hot as hell. I wrapped my fingers into his hair, and I pulled his face closer as he plundered me with his tongue and lips. It didn't take much; he sucked my clit into his mouth and bit down as his tongue flicked over the tip. I came hard, squeezing his neck with my legs. He didn't stop when I begged him. No, he just grinned and went back to work while I tried to catch my breath. He was still pinning me to the door while he ate me out like a starving man at a buffet. He gave me two more orgasms before my begging convinced him to let me down a little. \n\n\"Oh FUCK, YES,\" I screamed as he lowered me over his cock. He did it slowly, making me feel every inch, every ridge, and every vein as I slid down it. I wrapped my legs around his waist and held on to his neck as he rested me there. I wanted more, and I started squeezing him and rotating my hips. \"Come on,\" I begged him. \n\n\"You want it hard and fast,\" he asked me as his teeth moved over my shoulder. \n\n\"I need it, Vic. Take me. Show me how strong you are and fuck me until I can't walk straight.\" \n\nHe paused. \"The baby?\" \n\n\"Well protected, and the size of a dime. You won't hurt the bean,\" I told him. \n\n\"Then hang on, because you're in for a ride.\" He kept a hand under my ass, then moved my legs up one at a time until he'd bent me in half, my ankles up by my ears. When he pulled out and slammed back in, it took the breath out of me. He kept building the pace, and I was moaning like a bitch in heat as he did. I loved fucking like this; helpless, weightless, and used hard by a strong man with a big cock. Now that it was my husband doing it, I could let go of my worries. I trusted him to do anything with me. \n\nHe picked up the pace and force until I was being lifted up with each thrust. I hung on for dear life as he started pounding into me, the door thumping against the frame with every thrust. \"OH GOD YES KEEP FUCKING ME KEEP GOING OH FUCK I'M CUMMING I'M AAAAAAHHHHHHHHHHH FUCK!\" \n\nMy mind stopped working as he thrust into me one more time. He held me close as he jetted burst after burst into my satisfied pussy. Nothing existed in our world except each other, as the waves of pleasure washed through us. He moved his shoulders, letting my legs drop past them until they were on the floor again. My husband wrapped me against his bare chest, kissing my neck and shoulders as I caught my breath. \"I love you, Vic.\" \n\nI froze as there was a knock on the door. \"Hey Spider, if you're done playing around, we need more beer money and the Prospect needs to get his tight ass behind the bar,\" Sif said. \n\n\"Give us twenty minutes, we barely made it through the door,\" I said. \n\n\"He almost banged you right through the door, bitch!\" \n\nI started laughing. I loved our Club. \n\nCh. 30 \n\nAlpha Carson Nygaard's POV \n\nCascade Pack Clinic \n\n\"It's time to start the ice baths,\" Doc Olson said. \"Her fevers can spike dangerously high, so it's important we don't let it get out of hand.\" \n\nI sent a mental send to the kitchens; they had been making and storing ice since the attack happened. \"Where?\" \n\n\"Right here,\" Frank Grimes said as he pushed the door open. He and Colletta were carrying an old-fashioned clawfoot tub into the room. \"Rescued from the construction supply shed.\" \n\n\"Perfect,\" Doc Myers said. \"Put it over there.\" He pointed to the corner, where a floor drain existed for cleanup. They set it in place, then put a rubber plug in the bottom. I picked Heather up while Doc Myers moved the monitoring equipment on stands, and set her into the tub. \n\nColletta came back in, this time with a hose and sprayer. She started spraying her down while I grabbed a towel, folding it up and placing it behind her neck and shoulders. Frank rolled a stool over so I could sit behind her. \"It's going to be a long shift,\" he said. \"You had a chance to explain it all to her?\" \n\n\"I did, and she agreed to the change. She's quite upset that the babies will not survive,\" I said. \n\nMom leaned down and hugged me from behind. \"You need to save her life first, son. She will get through this with you by her side.\" \n\n\"I know.\" Doc looked at the monitors. \"The key is to hold her fever below a hundred and four. If she drops below a hundred, we'll remove her from the bath.\" She was at a hundred and three, so Colletta kept spraying while the Omegas started bringing in bags of ice. Six bags they poured gently over their Luna, then two big coolers were set down with more inside them. \"Thanks, ladies.\" ",
        "They bowed their heads, the bravest speaking. \"We are all praying for our Luna,\" she said. \n\n\"Thank you,\" I said. \n\nDoc Olson turned to them. \"This could take a long time,\" he said to her. \"Can you bring some food and drink? None of us want to leave the room.\" \n\n\"Of course, sir.\" The Omegas left, and I went back to massaging Heather's neck and shoulders. \n\n\"That's enough water,\" Doc Myers said, and Colletta shut the spray off and set it aside. He rolled over a portable ultrasound machine. \"I plan to check their status periodically,\" he explained. \"I want to know how much stress the change puts them through.\" \n\n\"Why is that?\" \n\n\"We never see the first shift with a pregnant werewolf. Every shift after our first one is almost instantaneous in comparison, and the damage occurs too quickly to see what happens when. If I understand the process, maybe we can find a way to save the child.\" He saw my reaction and showed his neck. \"I mean no offense, but if I can learn anything that can save others...\" \n\n\"I understand. Both of you. This change must be studied and recorded, and you must learn for others. What if Vic accidentally bites Spider Monkey? How many other humans are out there?\" I looked around at the others. \"Why is Luna doing this?\" \n\n\"Genetic diversity,\" Doc Olson said. \"We are all descended from the same fifty original werewolves, most of whom were related to each other. With every generation, the need for fresh genetic material becomes greater.\" \n\n\"It's a good theory,\" Doc Myers said. \"We always believed genetic diversity was one of the reasons Luna chose mates as she did. If you don't find mates outside your Pack, inbreeding will result. The finite nature of the original fifty would mean problems at some point.\" \n\n\"Well, Luna is getting her point across in a rather obvious way,\" Colletta said as she sat on the edged of the bed, her hand over her belly. \"I've talked to a half-dozen Lunas in the last week, all who desperately want a pup. All of them want to know if the blessing is real.\" \n\n\"What do you tell them,\" I asked. \n\n\"I tell them to open their eyes to who is getting blessed and who is not. Did you know Sawyer's pack had two more women announce their pregnancies last week?\" I shook my head, no. We had one Omega pair with a successful heat at Cascade. \"Coral's pack had the first successful heat in eight years, right after she found out she was pregnant in successive years. Rori is pregnant, her Beta too. If they want the blessings, they should do what we do. Live among humans. Value babies, no matter the parents. If one parent is human, bring them into Pack life instead of killing them, as mates and not slaves.\" \n\n\"Packs have tried to use humans as breeders before. The offspring were weak.\" \n\n\"Why would Luna bless the children of rape with strong wolves?\" Colletta shook her head. \"Frank is proof that a human can have a strong wolf, but I think he received that wolf because he was the choice mate of a Luna. I think Heather will have a strong wolf, too; not only is she a strong human, but she is the chosen mate of an Alpha. Luna will grant you the mate that you need by your side, Carson.\" \n\nFrank pulled his mate closer to him. \"When this gets out, humans will be in danger. Some of those Alphas would do anything for power, and creating Alpha and Beta level wolves with humans is too tempting for them to pass up. We can't let them kidnap and rape women to build their Packs.\" \n\nColletta leaned against him. \"I'm sure some Alphas will try, but it won't work. Their efforts to build an army by enslaving humans will never be successful. Luna will not allow it, and neither will we. When we bring the proposed laws to the Council, they will have to ensure humans are protected. Humans will wipe us out, with good reason, if we are using their women as breeding slaves.\" \n\nI was listening while watching Heather. Her temperature had come down, and she began to stir. I kept my head next to hers, holding her left hand. Colletta held her right arm and cast out fo the water. Her eyes started to flutter; her temperature was below a hundred and two now. \"She's waking up,\" I said. \n\n\"She may go in and out as her temperature cycles,\" Doc Olson said. \"Keep her calm and relaxed.\" \n\nI started to massage her neck and scalp as we waited. \"Mmmmm,\" she finally said. \"Carson?\" \n\n\"Welcome back, baby. You're fine; you were out for a bit as your temperature spiked.\" \n\n\"Cold,\" she said. I looked over to Doc Olson as he nodded, so I moved around and picked her up in my arms. Colletta helped dry her off before I set her down on the bed. She started to shiver, so I pulled the blankets over her, then undressed and slid in behind her to warm her up again. She snuggled back into me as her body sought the heat, and my wolf and I were happy to provide it. \n\n\"Keep her there for a bit, we need to take her cast off,\" Doc Myers said. \"She will hurt herself if she shifts in it.\" \n\n\"It's still broken,\" Heather mumbled. \n\n\"The blood and the impending change boost your healing rates far beyond what humans can experience,\" he replied. He cut away the cast, then used a portable x-ray to check the arm. I removed the lead shielding from her belly and got back in bed with her as soon as he finished. \"Looks like it's nearly healed. That's good; you'll have plenty of bones to break in your shift.\" \n\nI'd given her an idea, but the Doctor told her what she could expect from a medical standpoint. It was Frank who knew exactly what she was facing, and he didn't pull any punches. \"It's the most painful thing I've ever gone through. I was ready to die to escape the pain, but I couldn't. This woman here loved me, and it was her love that pulled me through. When it gets bad, hold onto that line. Carson loves you, we all love you, and we'll be waiting for you when you've shifted.\" \n\nShe looked up at me, and all I could do was kiss her gently. \"I wish I could take the pain for you because I would,\" he said. \n\n\"I know.\" She was flushed, and her temperature was beginning to spike again. \"Don't leave me, Carson.\" \n\n\"She needs to get back in the tub,\" Doc said as he watched the monitors. \n\n\"Don't fight the change, my love. Let it surge through you,\" I said as I picked her up again. I carried her over, this time sitting with her in the freezing tub. I arranged her between my legs, her head resting on my chest. A few minutes later, she was out again as her temperature climbed. \n\nThey dumped more ice on us, and I ignored the discomfort as I held my mate. The shift was starting to come; fur started poking through her skin, and her bones with the breaking and reforming needed to change forms. She would scream in pain, moving as she sought relief and finding none. The next break would have her screaming again. \n\n\"She's losing blood,\" Doc Olson said. I looked down at the tub, where bright red blood was coming from between her legs. \"Let us take her.\" \n\nThey picked her up and laid her on the floor where Colletta had spread bedsheets down. I got up, taking a towel from Frank and drying off. Doc Myers had his ultrasound probe on her stomach as her body convulsed and shifted. Her legs broke, and her feet and ankles extended, the toes changing to pads, the toenails to claws. Her screams became whines as her head and face lengthened, forming a muzzle. There was a sound like gunshots as her spine realigned, and a tail grew from her lower back. \n\nFor a werewolf's first shift, the whole process took seconds after an hour or two of the fever. For Heather, the first shift stretched on and on. I looked at the sheet under her hips, which were almost done shifting into wolf form now. It was red with her blood, along with the fur on her legs. Doc Myers kept moving the probe around, looking for something and smiling. \"What's going on with the babies,\" I asked. \n\n\"I don't believe it,\" he said. \"Look.\" He turned the monitor towards me; turning up the volume, I could hear the fast whooshing of their heartbeats. \n\nHeartbeats. The babies lived? \"The bleeding?\" \n\n\"The shift caused the damage, but the placenta reattached and healed. The twins are healthy and active.\" \n\nWith a few final bone snaps, Heather's shift finished. She was a magnificent wolf; she was big, clearly an Alpha, with glossy dark brown fur with white patches on her legs and chest, and sparkling golden eyes. Her eyes looked into mine, and our wolves connected in that instant. \"Mine,\" she said over the link. \n\n\"My mate,\" I said. \"I love you.\" \n\n\"Pups?\" \n\n\"Yes, pups,\" I said as I looked back to the ultrasound screen. You could see the little tykes moving around inside their amniotic sacs. \"Our pups.\" \n\n\"Tired,\" she said as her eyes rolled back, and her head went back to the floor. \n\nI laid behind her as the two doctors checked her over. \"We need to move her to a bed,\" Doc Myers said. \"We'll clean her up first. Congratulations, Alpha Carson. Your Luna and her pups are strong and recovering quickly.\" \n\n\"How?\" \n\n\"In a normal werewolf shift, it happens so quickly that our healing can't fix the damage in time. With our Luna, the change occurred over a much longer time. As her organs shifted, her healing was able to fix the damage. The babies were stressed but came through just fine.\" While he was talking, Frank and Colletta cleaned the blood from her legs and moved the soiled linens out of the way. Frank picked her up and set her on the bed, where Colletta had already changed the linens. I jumped up behind her, curling around her back as Doc Myers inserted an IV needle into her front left leg. \"Sleep will be good for her. Let her rest,\" he said. \n\n\"When can she shift back?\" \n\nColletta repeated my question to Doc Olson since he wasn't my Pack. \"She can't shift back without killing the babies,\" Doc Olson said. \"Her next shift will be normal speed. Her wolf will know this and refuse to shift, but you need to explain it to her.\" \n\n\"She's staying in wolf form until the twins are born?\" \n\n\"Yes. It will make things more interesting, but this has happened before. If necessary, we can deliver by Caesarean section.\" Doc Olson smiled at us. \"Congratulations, Alpha Carson. Doctor Myers and I will monitor her until Heather recovers.\" \n\nMom and Frank came over to our bedside, Mom kissing us both. \"What do you want to tell the Pack, Carson?\" \n\nI thought about it. The mole was gone, and it was going to be hard to hide Heather in wolf form. Everyone would smell her, and they already felt her join the Pack bond. \"I'll do it,\" I said. Mentally reaching out to the entire Cascade Pack, I got their attention. \"The blessings of Luna are truly with us today. Luna Heather has accepted me as her mate and has completed her first shift. The twins survived the change, and are healthy and active. To protect them, Luna Heather must remain in wolf form until the babies are delivered. The details of this are for Cascade Pack only; no one may reveal information about the Luna or her pups outside the Pack without my express permission. If asked, you may only say that Heather Rhodes is still alive. Questions?\" \n\nThere were a few, most of which centered around when the party would be. \"Send out hunting parties. We will feast in our Luna's honor tomorrow night.\" \n\nThe celebration was going to be epic. \"Mom, this affects us all. I think our allies should be here for the party.\" \n\n\"If it is safe, I will get them here,\" Mom said. \"Get some rest, I'll take care of everything.\""
    ],
    "authorname": "partwolf",
    "tags": [
        "biker",
        "luna",
        "motorcycle",
        "pack",
        "werewolf",
        "wolves",
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/claiming-treasure-ch-26-30"
}