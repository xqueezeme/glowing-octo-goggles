{
    "title": "Pool Boy Ch. 33",
    "pages": [
        "After leaving my folk's house with Thia standing in the open door still licking cum from her lips and fingers we discussed how Alexis was going to approach the next phase of \"Thia's awakening\", as I called it. The only thing set in stone at this point was that we would pick Thia up at noon tomorrow \"for lunch\". \n\nAlexis thought bringing Thia into an orgy with a number of gorgeous women would lead to Thia and me getting it on, which is what Thia had asked for. I wasn't so sure the orgy was the right way to go. I didn't want to totally freak Thia out. Alexis countered that Thia was comfortable with Lesbian sex as long as she was being led into it.\n\nI was surprised when Alexis told me that Thia had never initiated sex with another woman; she had only allowed herself to get 'picked up'. That didn't seem like Thia's personality at all. I had read that people's professional personalities and sexual personalities could be completely opposite. Strong, dominant professionals were often extremely compliant in bed. I guessed that must be the case with Thia.\n\nWe decided that we would have a conversation with \"Swami-Emma\". She knew all, saw all and did all. She would provide some good insight; as always. We drove in silence again. I was thinking about Thia. Yesterday, I could hardly stand her. Today, she'd sucked cum from my cock and tomorrow we're supposed to fuck. Holy shit, what a transition? Well, I liked her better today than yesterday and I probably would like her even better tomorrow. The same was probably true of her feelings about me. At any rate, she was good with Mom and Dad and that's what mattered most to me.\n\nWhen we got home, Olivia's and Sophia's cars were gone and Jarrod and Dee were just coming down the driveway. We stopped and talked through the driver's side windows. Jarrod said that they were just going into town to do some shopping and they'd be back in an hour or two. We all nodded and we continued on our way.\n\nEmma was relaxing in the study with a cup of coffee when we walked in and sat down on the sofa. Emma asked about my visit with Noah and I confessed that I was concerned about him. Emma smiled and sipped her coffee and then said, \"Noah is a dear boy and that about sums it up. You and he are the same age and I would never refer to you as a boy.\"\n\nI said, \"I think he needs a kick in the ass to get his motor started.\" Emma smiled that knowing smile of hers and said nothing more about it. \n\nEmma turned to Alexis and said, \"How's Thia? I assume you guys went shopping or to lunch or something.\"\n\nAlexis gave her a devious smile which prompted Emma to pull back from her cup and looked over at me and then back at Alexis with a look that said, \"What did you do?\" I deferred to Alexis and shrugged my shoulders.\n\nAlexis told her mother the whole story from the car ride home from the Airport to a half hour ago. She even went back to the night in the bathroom when I was eleven. She didn't leave out any of the details and my cock was hard again from reliving her story. Emma didn't interrupt once but she did ask a few questions when she was done. They were insightful questions that made Alexis and me think about the potential consequences of our actions. In the end though, Emma agreed that Thia was a troubled young lady and based on the responses so far, we probably had done some good.\n\nEmma thought that since Thia had got to the critical point of asking about intercourse with me with just the three of us involved that we should continue along that path. Emma was always up for an Orgy, so she thought maybe, when Thia was fully engaged with me and Alexis that other's might 'accidently' get involved without freaking out Thia. \n\nAs Jarrod and Dee walked into the Foyer from the backyard, Alexis and I agreed we would follow Emma's advice. Emma said that she'd bring Dee and Jarrod up to date with the plan in case the 'orgy' part of the plan came to fruition. As Dee and Jarrod walked into the Study, Alexis said, \"We're going to take a nap. What time is dinner?\"\n\nEmma said, \"The usual; seven o'clock.\" I checked my watch. It was a little after four o'clock. We said, \"Hi and bye,\" to Jarrod and Dee as they came in and we went out. \n\nWe started our \"N-A-P\" with a long hot shower the way we like it except in reverse. We started with me sitting in the middle of the expansive tile floor under the streaming water. Alexis stood in front on me with her feet on either side of my hips. I dragged my fingertips up the inside of her thighs and she trembled and steadied herself with her hands on my face. Her inner thighs were another erogenous zone of hers. As my fingertips approached her sex, her lower lip dropped open and she hunched forward. She clenched her teeth and seethed air and out through them. She closed her eyes and tipped her head back into the cascading water. I sat up straight and dragged the tip of my tongue around her navel. Alexis groaned and pulsed her hips forward as my index finger found her erect and very sensitive clitoris.\n\nI scrunched my posture lower so I could drag my tongue down Alexis' flat tummy and into her sex. Her breathing increased as I got closer to my goal. I gently clamped my spread fingers on the perfect globes of her ass and pulled her hard into my face as I drove my tongue across her clitoris and into her pussy. Her entire body surged forward and snapped back as she groaned, \"Oh fuck. The 'hooded-monk' is really sensitive.\" I giggled into her pussy. I knew the term but I hadn't heard her use it before.\n\nMy cock was rock hard and bobbing up and down in my lap. I ignored it. I wanted to get Alexis off where she was before she slid down my body to take me inside her. I held my hands on her ass and flicked my tongue like a feather on her clitoris and then pushed it into her pussy. I ran my little finger to her anus and pushed the tip inside and Alexis let out a scream of pure pleasure. She bent down at the waist to rest her tits on the top of my head. She gasped and whimpered, \"Baby. Oh fuck. I'm gonna cum. I want you in me. Please.\" I ignored her request and drilled my tongue in as deep as I could and pushed a little more of my little finger into her anus. She surged back up to a standing position with her hands behind my head with two fists full of hair in her hands. \n\nHer entire body began trembling. She was driving my face around in her sex with her hands. Her tits were firmed up with hard nipples. Her chest was flushed red from blood coursing through her. She was breathing very raggedly with sudden gasps for air seething through clenched teeth. \n\nThen it was there and her hips started firing. Her legs started to go but I held her up by her ass-cheeks. Her pussy shoved my tongue out and I pushed it back in. We did this for a minute or so before her clenches began to lose power. Her vaginal juices were flooding out of her. I lapped up what I could and the rest drooled down her thighs to the tile floor. \n\nI pulled my face back and looked up at her. Her face hung with her chin on her chest. She was desperate for oxygen as her chest heaved carrying her tits along for the ride. I slowly let her slide down my front until she got what she wanted. I guided her right onto my cock and she screamed as her pussy engulfed my glans. She was so wet she didn't need any lubrication and my cock slid right in. I put the brakes on as she settled onto the fattest part and then I let her drop into place sitting on my balls. She groaned hard and her mouth opened in an \"O\" as she moaned, \"Oh my gaaawwdd. That's awesome.\" She didn't move and neither did I other than to flex my cock eliciting another moan. Her head pitched forward and rested on my shoulder. I kissed her on the neck and nibbled her ear and she groaned and used her legs wrapped behind me to pull herself on to my cock as far as she could. I flexed again and she giggled into my neck. She whispered, \"You are an evil, evil man.\" I flexed again and she flexed her vaginal muscles back. \n\nI placed my hands on Alexis' tits and moved them around in a circular motion dragging her nipples around in my palms. She moaned from that action. I couldn't tell how close she was but I was getting close. As my balls cinched up tight to my body and my cock hardened, Alexi's knew I was about to blow. She started rocking her hips driving my cock in and out and I locked up into a mass of muscles as a groan slowly escaped my throat. Alexis rocked her hips so I was fully imbedded and a \"GGGAAAAHHHHHHH,\" burst from me as I launched a series of long powerful ropes of cum into Alexis' pussy. The increased girth pushed her over the top of her orgasm and we were spontaneously humping all over the shower floor. \n\nI was in the process of pumping my load into her when I suddenly felt the urge to change positions. I gently pushed Alexis backward to the floor and swung my feet around and got between her raised knees and drove my cock in as hard as I could and Alexis let out a scream, \"YEEESSSSS. YESSSS. YESSS.\" My cock never came out of her. I was pushing as much cum out of her as I was pumping cum in. My muscles were still clamping hard and releasing. I launched at least ten salvos of cum. Alexis' pussy clamped and released many times as if she were milking my cock. \n\nWater was pouring down on my back and it was starting to get cold. I leaned down and kissed Alexis passionately and whispered, \"I love you.\" She smiled and kissed my nose. We stayed like that until the water was cold and we pulled ourselves up and shut the water off. I threw a plush terry towel around Alexis and hugged her naked body against mine. \n\nWhen we were dried off we got into Alexis' bed. We had spent nearly an hour in the shower. We had come up here for an \"N-A-P\", which was code for afternoon sex followed by an actual nap. We had the sex and it didn't take long to drop into a nap.\n\nI woke to the sound of a truck in the driveway. That incessant beeping when a truck is in reverse is very annoying. I lifted Alexis' hand off my flaccid cock and went to the window that looked out onto the driveway. I guy, probably in his mid-forties, with huge burly arms was stepping down to the pavement. He slammed the driver's door and \"Grove's Specialty Equipment\" was printed on the door. The guy went to the back of the truck and slid up a garage type door and pulled himself in. I could see a large box push out the back. The guy jumped down and pulled the box out. It didn't appear very heavy as he easily lowered the box to the pavement as it slid from the truck. He gauged the center of gravity and carried the box toward the front of the house. I lost sight of him then. \n\nCuriosity was getting the best of me so I pulled on my clothes and quietly left the room. As I was coming down the stairs Emma was leading the guy and box up the stairs. I backed up and stood out of the way as the box turned the corner heading down the hall to Emma's bedroom. Emma stood to the side as the guy turned the corner. She grinned at me. She had an excited look on her face. She said, \"An early Christmas present to myself.\" She followed the box down the hall and disappeared into her bedroom. \n\nI stepped around the top balustrade and came down the stairs. Jarrod and Dee were standing by the table in the center of the foyer looking at a piece of paper. It was an invoice and when Dee saw what it was for, her eyes went wide and she raised her hand to her mouth. She mumbled through her fingers, \"Oh my God. Mom's gone around the bend.\" I looked over her shoulder and read, \"Contents: Deluxe, 4 strap Sex Swing w/tubular steel frame Qty: 1\". I smiled down at Dee and headed for the kitchen thinking, 'Emma. You never cease to amaze me.' \n\nJarrod came into the kitchen heading for the coffee maker. He smiled and said, \"My Mother-in-Law is fucking awesome.\" I just nodded and leaned against the counter while Jarrod poured his coffee and then we both walked past Dee, who was still standing in the Foyer with her hand to her mouth gazing up the stairs. Jarrod said, \"Dee, get used to it. Your mother is a freak.\"\n\nI added, \"And I love her for it,\" was we went by. Dee broke her gaze from the stairs and followed us back into the study. Emma had discussed Alexis' plan for Thia for tomorrow and we talked about it for a while. They knew that they were kind of on stand-by if the circumstances worked out. I or Alexis would let them know when and if the time was right. I could tell that Jarrod was hoping they would get involved. Dee had disengaged from the conversation and was sitting there staring at the ceiling like she had X-Ray vision watching what was going on in her mother's bedroom.\n\nIt had been nearly an hour since the box went up the stairs and the guy had not come back down. Without a spoken word, we got out of our chairs and headed for the stairs to see what was going on. I brought up the rear and as I got about halfway up, a loud scream pierced the silence. Dee took the last five stairs in a blur and raced down the hall to Emma's closed door. We were right behind her. Dee grabbed the door handle and was turning it when another scream came from behind the door. Dee pushed the door open and we all followed immediately behind it.\n\nWe all came to a stop about three feet into the room as we saw a naked Emma inside a black metal frame with her ass in a sling, another sling was under her shoulder-blades and one strap each going down to her calves. She was laid out horizontally at the guy's crotch level, slightly bent upward at the waist. The delivery guy was standing with his back to us. His hands were on Emma's lower thighs swinging her forward and back as he drove his cock into her pussy. He was groaning as hard as Emma was. She was completely trapped in these straps and completely at the mercy of the delivery guy. Her eyes were closed and she had a delirious look on her face as she swung forward and back.\n\nThe guy must have sensed our presence and turned toward the door. He let out a yell when he saw us and immediately pulled his cock from Emma. She pulled herself up by the straps to see what the problem was. Dee yelled out, \"Mom! What the fuck are you doing?\" Jarrod and I looked at each other and grinned. It was pretty obvious what Emma was doing.\n\nEmma stayed right where she was and said, \"What does it look like I'm doing? Delivery Guy here, (I don't even want to know what his name is) set this thing up and I couldn't make heads or tails out of it. He is showing me how it works. Do you mind?\" Dee started to protest but Jarrod took one of her hands and I took the other and we basically dragged Dee out into the hall. As I stepped back to the door to shut it, Emma had stretched forward in her sling and grabbed the guys cock and pulled it back toward her pussy. I apologized and gently shut the door. In seconds, the groaning started again.\n\nDee didn't go willingly. We had to pull her down the stairs. She kept looking back and saying, \"What if he hurts her. She can't protect herself like that.\" Her points were valid but we deposited her on the sofa in the study anyway. She kept staring at the ceiling again listening for any unacceptable sounds. I admit that I was paying extra attention too.\n\nAlexis appeared in the study doorway. She had sleep lines and a confused looked came on her face. She looked at us and then at the ceiling like Dee was doing. Alexis said, \"If you two are down here. Who the hell is upstairs fucking Mom to death?\" \n\nIn perfect synchronized stereo Jarrod and I said, \"The 'Delivery Guy'. \n\nDee turned away from the ceiling and said, \"He could be hurting her.\" I walked out to the Foyer and pulled the Invoice off the table and handed it to Alexis. She glanced at it quickly and then did a double take. Her eyes went wide as she read the invoice out loud as if her ears had to confirm what her eyes just read. Jarrod and I just laughed.\n\nNever ceasing to amaze me, Alexis looked up with wonder on her face and said, \"Baby. We have to try it.\" Jarrod exploded in laughter and I immediately followed. Alexis' face burst into a grin. She looked down at the invoice again and then lifted it to show me, like I hadn't seen it already. \n\nAs if on cue, another loud scream drifted down from above. Emma was screaming, \"DON'T YOU FUCKING DARE. I'M ALMOST THERE. FUCK ME.\" Moments later Emma screamed, \"OH GAAAWWDD. YESSS. I'M CUMMMINGGG. KEEP GOING.\" We all giggled. We were pretty sure Emma was in no danger from 'Delivery Guy'.\n\nSeveral minutes later we heard the back end of the empty box thumping down the stairs. Seconds later 'Delivery Guy' appeared in the study doorway with one end of the box in his hands. He was gasping for oxygen and said, \"Sorry about that, but whatever the customer wants, they get. We at 'Grove's Specialty Equipment' aim to please. No request is ignored.\" He gave us a stupid grin and seconds later the front door opened and slammed shut. We just looked at each other and burst out laughing. In a mimicking voice, Jarrod repeated his last sentence, \"No request is ignored,\" and then he mimicked the guy's parting grin. We exploded in laughter again, just as Emma, dressed in a bathrobe, walked in as nonchalant as if she were bringing in a bowl of popcorn. We went silent and grinned at her. She grinned back with a look of 'what are you guys grinning at?'\n\nWe all started talking at the same time. It was total chaos. Dee went to her mother and hugged her. When she went to kiss her on the cheek, she pulled back and said, \"Mom you've got cum on her face. How did you get cum on your face? Emma dragged her fingers along her cheek and smiled as she stuck her fingertips into her mouth to clean them. She went back for more.\n\nEmma said, \"Well. After he set it up, he was showing me how the swing worked and I just couldn't get it.\" She grinned and stuck her fingers back in her mouth. \"So, he was giving me a live demo when you assholes burst in. After that he had me right there on the edge and he said that he didn't want to cum in me and started to pull out. Anyway, I had a mind-blowing orgasm and he pulled out. Then he spun me around in the swing and showed me another position as he guided my head back and he pushed his cock into my mouth as she swung me on and off his cock until he came.\" She scooped some cum off her chin and pushed it into her mouth. \"Huuuummm, not bad.\"\n\nTrue to form, Alexis burst out, \"When can I try it?\"\n\nEmma looked at me and grinned, \"You are going to have a lot of problems with this one,\" as she pointed at Alexis.\n\nI smiled at Emma and then at Alexis and said, \"Nothing I can't handle. She's just like you and I love her for it.\" Emma got the compliment and blew me an air-kiss.\n\nEmma turned back to Alexis and said, \"You can use it anytime you want. It kind of lets you lie back and luxuriate in the sensations. You're partner moves you where he or she wants you and you can make effortless adjustments. Getting into it and out of it is a bitch though.\"\n\nEmma stood up and said, \"Well, if we are going to have dinner on schedule you guys will have to get it started. I need a shower.\" As she got to the stairs she shouted back, \"I was planning on open-faced turkey sandwiches.\"\n\nI looked at Alexis and groaned, \"I'm turkeyed out.\" Alexis smiled and headed for the kitchen with Dee right behind her. \n\nJarrod said, \"We've got to be the luckiest bastards on the planet for stumbling into this family.\" I laughed and thought back to how that happened. So much had happened since that day but it all seemed like yesterday.\n\nWe talked about sports and whether he was still working at the Pizza Shop. He was. He really enjoyed meeting different people. I asked if he ever had another encounter like that night that he delivered Pizza's to us at Dee's condo and got pulled into a mini-orgy with Dee and Alexis and me. \n\nJarrod said, \"Once. She was a middle aged woman maybe Fifty. She answered the door in the nude just like Dee did that night. She was pretty good looking for her age. Her body was primo. She dropped right to her knees and pulled my cock out and blew me right there on the front stoop. She collected my cum in her mouth and then opened the pizza box and drooled cum all around the pizza. I zipped back up and she handed me the money. I took it. As the door swung shut I could hear her yelling in a smoker's gravely voice, \"Yaahhh Ma. It's the pizza guy. Hold on to yourself, I'm coming.\" I remember thinking as I walked down the steps to the sidewalk, 'I think I did the coming.\" I burst out laughing from his story. He had mimicked the woman's voice as he told it. Jarrod continued, \"I told Dee about it when I got home that night and she nearly freakin' raped me, she was so hot.\" We both laughed.",
        "We went out to the kitchen to see how things were going without their mother driving things. As expected it was total chaos. If it had been one or the other of Dee or Alexis doing everything it wouldn't have been nearly as bad. Jarrod and I looked at each other and went back to the Study just as Emma was coming down the stairs. I said to her, \"You'd better get in there if you want a functioning kitchen tomorrow.\" She giggled and blew past us into the kitchen. We were half way across the Foyer when we heard Emma yell out, \"Holy Shit. What are you two doing? Get out of here and go take care of your men. I think they need a beer.\"\n\nAlexis appeared around the doorframe of the Study with a lip-dragging frown on her face and handed me a beer. Dee was right behind her looking pretty much the same and handed Jarrod a beer. They sat beside us and Alexis was mumbling, \"We were only trying to help.\" \n\nI leaned down and kissed her on the hanging lower lip and said, \"Well, I thought you were doing a great job.\" Jarrod lurched forward in his chair and spit his mouthful of beer back into the can. \n\nHe coughed and gagged and when he could, said, \"Holy shit. You sound like you've been married for ten years. What a pussy.\" I chuckled and when Alexis turned toward him, I nodded over her head. We both laughed. Neither Alexis nor Dee got any of it and they just shrugged and went back to their sulking.\n\nAfter dinner the women went in the living room and chatted. Jarrod and I turned on the TV in the Study and watched a College Football game. Jarrod asked if I knew whether we would be chosen for a bowl game or not. I didn't know anything more than he. When the game was over, I shut off the TV and we went to the Living room to see what was going on. No one was there. We walked through the Kitchen to the Foyer. The ladies were not downstairs. We walked up the stairs and stood in the hallway listening. We heard soft moaning coming from Emma's end of the hall and we looked at each other and grinned. Jarrod said, \"They're trying out the swing.\" I nodded as we walked to the closed door and listened. I quietly turned the doorknob and eased the door into the room.\n\nNeither of us was fully prepared for what we encountered. They were all naked. Dee's ass was in one sling as she lay out horizontally with her shoulder in the upper sling. Her head was tipped back with her mouth on Alexis' pussy. She was standing behind Dee with her hands on a set of taught straps holding Dee in place. Dee's legs were perched in another set of soft leather slings that opened her sex wide. Emma was standing between Dee's legs where the delivery guy was standing earlier. She had a strap-on dildo on and she was driving her hips forward into Dee's pussy. Dee and Alexis were moaning constantly. Dee's long moan was interrupted by each of Emma's hip thrusts. \n\nFrom where we were standing we couldn't tell that the dildo strapped around Emma's waist and thighs was actually a double ended dildo and she had the other end in her own pussy. Her head was tipped back seething air through clenched teeth as she rhythmically drove her hips forward and back. \n\nMy cock was going to burst out through my zipper. Jarrod had his zipper down already and his fingers were wrapped around his cock stroking it. I got my cock out and the next thing we needed to decide was what to do with them. Jarrod moved in behind Emma and I moved over behind Alexis. Both had their eyes closed and neither knew we were there until our cocks pushed up between their legs.\n\nEmma's eyes came open and she turned her head and grinned at Jarrod moving his cock up between her thighs. She reached down and pulled her half of the dildo out and Jarrod pushed his cock in. Jarrod let Emma set the pace because she was still fucking Dee's pussy with the dildo. Jarrod ran his hands up Emma's side and cradled her tits as he pumped his cock into her. \n\nDee wasn't aware of anything. Her eyes were looking between Alexis' thighs as she licked and sucked her pussy and clitoris. When I moved in behind Alexis and pushed my fatty up to her pussy she jumped a foot. I pushed my cock past her pussy and into Dee's mouth. She accepted it as she saw it approaching between Alexis' thighs. I fucked Dee's mouth several times and then pulled out and angled it up into Alexis' pussy. \n\nAlexis bent forward as every ounce of air exploded from her lungs as I drove my cock in. Dee was now in a position to suck on my balls as she swung forward between Alexis' thighs being propelled by the combined fucking motions of Emma and Jarrod.\n\nAfter several minutes, Dee groaned hard and exploded into her orgasm. Her screams of passion pushed Emma over and her clenching pussy pulled Jarrod over the top. The groans from everywhere were catching and Alexis' and I were crushed by our mutual orgasms. I poured cum into Alexis in long power jets and she screamed with each one. We were all using Dee, wrapped in the sling, to stabilize ourselves so we wouldn't fall down. Other than Dee, we all used the straps to control our collapse to the floor in a gasping heap of bodies. \n\nAs we were beginning to come around and get our breathing back to normal, Dee, perched a few feet above us said, \"Can someone help me get out of this fucking thing?\" We all chuckled and Jarrod got up to assist his bride. I stood up to help. She was swaying back and forth in the swing powered by her efforts to extricate herself. Her legs were splayed wide with the cushioned straps under her knees. Her head hung back supported by a strap across the back of her head. Her hands were clutching the metal half-moon frame above her torso. She was one incredibly erotic sight in that position. Jarrod was working on figuring out how to get her to sit up in the swing seat across her ass. I was between her legs trying to lift her legs up and slide them out of the straps.\n\nDee was struggling to assist and then realized that neither of us was helping anymore. Jarrod's cock was up again and slapping Dee in the face. Dee was trying to grab the bouncing cock with her mouth but then realized that she could release her hands from the frame without falling and she grabbed Jarrod's cock and dragged it across her face a few times before stuffing it in her mouth. The sultry look on Jarrod's face and his cock driving all the way into Dee's face until his balls were resting on her nose caused my cock to spring up out of its flaccid state and slap off one of Dee's thighs.\n\nJarrod was gently swinging Dee on and off his cock as she eagerly sucked on it. In her position, I could clearly see Jarrod's cock slide in and out of her throat. I watched them for a few moments as I stroked my rock hard cock. It was still slick from Alexis' lubrication and my cum. I inched forward and guided my glans to her vagina and let the swinging action drag the bottom of my cock along her clitoris, which was flushed red and puffy from her elevated heart rate. She tried to wrap her legs around behind me to pull me in but the straps prevented that. She humped her ass up off the swing sending me her invitation. I inched in closer and on the next swing back, I grabbed the straps and pulled us together.\n\nDee emitted a muffled groan around Jarrod's cock when my glans pushed past her labia and into her pussy. I waited for the next swing of the pendulum to push more of my fatty into her. She groaned again, which caused Jarrod to groan too. He looked like he was praying to God as his head was tipped up with his eyes closed.\n\nEmma and Alexis had moved around to get a sideways view of the action. Alexis sat Indian style with her fingers in her pussy. Emma was cuddled up behind Alexis with her legs out straight with knees up. She was cradling Alexis' tits and tweaking her hard nipples.\n\nBecause my cock was longer than Jarrod's, the swinging motion that I set up to accommodate my full penetration caused Jarrod's cock to more that bottom out in Dee's throat and bump him backwards slightly on the other end of the pendulum. It was a slow languid pace but the sensation was incredible. I looked down at Dee's body stretched out in the straps. Jarrod's cock was moving rhythmically in and out of her throat. \n\nMy mind's eye suddenly changed up the scene. I was guiding the straps and controlling the pace as I fucked my cock up into her pussy except it was Thia in the straps. Jarrod was gone and she was looking down the length of her body watching my cock slide in and out. She had a delirious smile on her face and then she groaned hard and burst into an orgasm. I came back to reality as I realized that Dee was bouncing her ass around on the swing seat and flailing her legs in a huge orgasm. Dee wasn't sucking Jarrod's cock anymore and he was just thrusting his cock into her open mouth which emitted an \"AAAWWWKKK AWWWKKK AWWWKKK\" noise. \n\nJarrod's body humped up to begin his orgasm and he pulled his cock out of Dee's unresponsive mouth and came on her face and tits. Dee was oblivious as her pussy continued to clench hard on my cock. My orgasm came on in a rush and I pulled out of Dee's pussy to lay down a load of cum from her pubic hair to her neck. Dee was continuously moaning as her orgasm continued well past ours.\n\nI pushed my still hard cock back into her pussy and Dee thrust her hips up to greet it. I started fucking her again and in seconds, she was screaming, \"OH FUCK YEAH. HERE COMES ANOTHER ONE. JESUSSSSS.\" Her hips were gyrating everywhere in the swing, which caused a circular swinging action. That sensation was different. I was nowhere near cumming so I let go of the straps and just stood there allowing whatever motion Dee set up to control the fuck. \n\nApparently Dee wasn't done because she started pumping her body in the swing like kids on the playground. She had lifted her head to watch my cock slide in and out of her and the vision of Thia popped into my head again. Dee smiled at me and said, \"One more time?\" I grinned back at her and put my hands down on her hips and took control of the swing again as I slammed her on and off my cock. Dee held her head up to watch as long as she could and when she exploded into her third orgasm, her head slowly dropped as her teeth clenched tight and she seethed air into her lungs.\n\nHer pussy clenched hard as her hips gyrated on the seat. I was trying to cum but the continued visions of Thia distracted me and when Dee settled down and said, \"Oh my God. I'm done,\" I eased my granite hard cock from her pussy and backed away. She just dangled there still in the same predicament she was in when we started this second round.\n\nJarrod and I finally got Dee out of the swing and we carried her seemingly lifeless body to Emma's bed. Jarrod was concerned and he climbed up on the bed beside Dee. He kissed her lips and she kissed back but otherwise didn't move a muscle. The rest of us retrieved our clothes and left the room. \n\nIt was late and Alexis and I went down the hall to her room. My cock was still hard and she was stroking it as we walked. Emma went downstairs to make one circuit to make sure everything was locked up. Alexis and I were in the shower in her room when Emma appeared shucking off her clothes. She stepped in and we all hugged under the hot water. The water felt great and so did my cock as mother and daughter wrestled over who would have control of it.\n\nI maneuvered to the side wall and sat down on the molded plastic built-in seat. Alexis and Emma went to their knees fending off the others hands. Emma finally gave it up but she had her own plans as she stood up above Alexis and used her fingers to spread her labia offering her pussy to me. I leaned forward and dragged my tongue across her clitoris and Emma groaned and used her index finger to pull the hood on her clitoris back and she groaned again. \n\nEmma lifted her right leg up and draped it over my shoulder and I drilled my tongue into her sex. Alexis wasn't about to be outdone. She wiggled her stretched lips around my glans and slowly pushed it into her throat. I groaned into Emma's pussy and pulled out. I mumbled, \"Oh fuck babe. You're really getting good at that. Oh Jesus. Ohhh. Ohhhh.\"\n\nEmma pulled my head back into her sex and I flicked my tongue a couple time on her clitoris and then continued fucking her with my tongue. Alexis grabbed my attention back when she started throat-fucking me. My head hung limply as I mumbled, \"Oh Jesus,\" over and over again. Emma was not about to be left out and she pivoted her hips up into my face driving my nose onto her clitoris. She let out a little scream and then groaned as my tongue returned.\n\nEmma's body began to tremble and her one standing leg quaked twice. I grabbed her hips to hold her up. She was hanging on with her leg over my shoulder when her torso heaved up tight and suddenly released. A flood of liquid gushed from Emma's pussy. I was caught by surprise but I had learned to always be ready for Emma's squirts. This was a convenient spot. Her squirt hit me squarely in the face and sprayed down over my body and Alexis as she was furiously sucking up and down on my cock. She noticed the new spray because we had move out from under the shower spray when I sat on the seat and dragged them with me. Alexis looked up and got a face full. She ignored it and went back down on my cock. \n\nI like the taste of Emma's squirts, well any squirt, I guess. I was trying to slurp as much as I could into my mouth and continue tongue-fucking her at the same time. It lasted several seconds before stopping and then she starting again. Emma's body seemed to throb through the whole thing. When her orgasm and squirt subsided, she lifted her leg off my shoulder and her body slowly collapsed to the tile floor, face up in the streaming water. \n\nI would have helped her but Alexis was about to receive her prize and she ramped up her efforts as though she was desperate to receive it. I pumped jizz into her mouth and down her throat for what seemed like forever. After about eight long streams of cum, Alexis looked up at me with wide eyes. She was getting behind and the sheer volume was overtaking her. Her lips slid back off the glans and she clamped them over the 'eye'. This worked momentarily but in the end, she pulled off and the last two strong blasts splashed off her tits. She swallowed what was still in her mouth and coughed to clear her throat. \"Jesus Christ. That was a load. I don't know how you cum so much after cumming so many times.\" I shrugged my shoulders and slid down off the seat and cuddled up with Alexis.\n\nEmma pulled herself up and joined us until the water started to get cold. We got up and shut off the shower and stepped out. We each grabbed plush terry-cloth towels and dried each other off. I was glad neither of them was getting frisky again. I was exhausted and my balls ached. We all got into Alexis' bed with me in my usual position in the middle and I promptly fell dead asleep.\n\nWhen I woke, bright sun was streaming in. I had obviously slept way longer than I normally do. I must have been more tired than I thought. I looked to my left and Emma was gone. I felt a weight on my right thigh but no movement. I lifted the covers to look down. Alexis was curled up at the bottom of the bed under the covers with my limp cock between her lips. She was asleep and I couldn't believe it but she was puffing air past my slowly rising cock. I didn't have my usual morning woody, which I thought would have been perfect for the occasion.\n\nI lowered the covers so Alexis face was exposed to the cool morning air and I touched her cheek. She shrugged my hand away like it was an offending flying insect. I touched her cheek again and she started to come around. Before even opening her eyes she pulled her head back off my cock and took a deep breath. She opened her eyes and said, \"Oh my God. I fell asleep with your limp cock in my mouth. Oh my God.\"\n\nShe sat bolt upright and wiped saliva from her lips with the back of her hand. \"I woke up and I thought it would be a nice surprise for you, but you didn't wake up and neither did your cock. I flicked my tongue around the glans for a while and I guess I fell back to sleep.\" I motioned for her to come up to me and she did. She climbed right on top of me and laid her head down on my chest as I wrapped my arms around her back and squeezed her firmly. Her legs fell off to either side of my hips and my cock, which had risen to full size flopped down in the crack of her ass. She giggled when my cock settled between her cheeks. Neither of us moved a muscle for at least a half hour. My cock had softened and slid slowly down her ass to the top of her thighs. She giggled as she felt it going.\n\nI hated to be the first to move but I had to piss real badly. She lifted her torso and I slithered out from under her. She dropped right back down with her face turned to the side on the sheets. She smiled and mumbled, \"I can smell you. Umm. Hurry back.\" By the time I got back, Alexis was asleep again sprawled face down with arms and legs splayed wide. I pulled on a pair of gym shorts and a tee shirt and went barefoot down the stairs. I stopped to listen at the stairs to see if Jarrod and Dee were at it again. There was total silence.\n\nI quietly descended the stairs to the Foyer. I headed for the Kitchen for coffee and found Emma sitting at the breakfast nook table with her legs up in a second chair. She was wearing her robe which was loose in front displaying her ample cleavage. I never got tired of looking at Emma's cleavage so I looked at her as I made my way across to the Keurig machine. She noticed me looking and knew exactly what I was looking at. She opened her robe a little more and grinned at me. I grinned back and said, \"Those look nice this morning.\"\n\nShe looked down at her cleavage and smiled at me, \"These ole' things?\" We both laughed. I retrieved my cup and sat down across from her. She said, \"You slept late this morning. I guess you had quite a workout yesterday.\" I nodded and sipped my coffee. Emma said, \"Do you think the swing would help with Thia today?\" The visions I'd had of Thia in the swing instead of Dee last night flooded through my mind. Emma noticed the blank look in my eyes and said, \"You've already thought about it haven't you?\" I cleared the visions from my mind and looked up at her smiling face. I smiled too and nodded. \"Oh fuck. Sweetie, you're getting into this aren't you.\" I nodded again. She put a hand on mine and leaned toward me exposing all of her tits. She said, \"I know you're torn about it. I totally understand. Consider the pros and cons for Thia, but don't forget about the pros and cons for you.\" I nodded and glanced at her fully exposed tits before looking up at her face and pursed my lips in an air-kiss. Emma smiled and got up from the table and took her cup to the sink.\n\nIt was an unusually warm day for late November. I walked down the walkway to the covered pool. I was barefoot in shorts and a tee shirt and it was beautiful out. I picked a lounge chair out of sight of the house and pulled the cover off. I sat down to finish my coffee and think. An hour later, a cool breeze picked up which overpowered the warmth of the sun and I recovered the chair and went inside.\n\nThe kitchen was buzzing with activity as Dee and Alexis were cooking again. I winked at Jarrod as he was leaning against the counter near the coffee maker. He grinned. I gathered that Dee wasn't much of a cook either and Jarrod didn't mind any more than I did. We found Emma sitting in the Living Room. She said, \"I'm letting them go. I'll deal with the mess later.\" Jarrod and I started laughing and we got Emma going too.\n\nBreakfast turned into Brunch and the eggs were a little brown and the toast was a little black and the bacon was hard and brittle. We ate like it was a gourmet meal as Jarrod commented on how good it was. I mumbled, \"Pussy,\" as I shoveled a forkful of egg into my mouth. Jarrod gagged as a piece of toast went down the wrong hole. When he recovered he grinned at me and said, \"Touch\u00e9.\" Alexis and Dee were looking at each other wondering what we were talking about.",
        "At noon, we pulled into my folk's driveway. Mom met as at the front door with a big hug and a kiss for each of us. She said, \"Your father and I want to thank you both for whatever you did. We have had a wonderful time here visiting with Thia. We haven't seen her like this since...Well, ever I think. She's out in the garage working with your father on a project of his. I can hear them laughing from in here and I break out in tears every time.\" Tears were bubbling to the surface as she talked about it. \n\nI hugged Mom tight and said, \"I'm glad Mom; for you and Dad mostly and Thia and for me too. She had become pretty hard to deal with these past few years. I hadn't been looking forward to seeing her. We are going to take her out for awhile and visit.\"\n\nMom said, \"I know. She's very excited about it too. She just adores you, Alexis. She can't stop talking about you.\"\n\nAlexis smiled and said, \"I think Thia is wonderful and I can't wait to visit some more. I'll go and let her know we are here.\" Alexis didn't get to the back door before it swung into the hallway with Thia and Dad right behind it. Thia was giggling about something Dad had said. When she saw Alexis, she hurried to her and hugged and kissed her. Alexis reciprocated with a big smile.\n\nIn the car, Thia said from the backseat, \"Where are we going where we will have privacy? I've thought about nothing else but this since you left yesterday. I've masturbated three times thinking about what we did.\" She looked at me in the rearview mirror and said, \"We're still on aren't we?\" I looked at her in the mirror and smiled. Until that moment, I wasn't sure if Thia was ready for this.\n\nI said, \"We are taking you back to Alexis' 'house-of-sex'.\" Thia's face instantly burst into a grin.\n\nAlexis elbowed me in the ribs and said, \"Oh stop it. Thia, don't listen to your brother. Once in a while he feels the need to prove that he's basically an asshole.\" She glared up at me.\n\nThia sat back against the seat and looked out the side window as she mumbled out loud to herself, \"House-of-sex sounds good to me right now. I'm so fucking horny.\" We heard what she said and we exchanged glances. I don't think either of us anticipated Thia's fervor.\n\nAt Emma's house we introduced everyone. The ladies all commented on the family likeness and how beautiful she was. Thia blushed a little but I thought she liked the compliments from someone as gorgeous as Emma, Dee and Alexis. She seemed to warm to Jarrod but she was cautious. Maybe it was just Jarrod but I suspected she was this way with virtually all men until she got to know them a little. She was loose and warm and gracious with the women.\n\nAfter several minutes of visiting Thia whispered to Alexis, \"Where can we go? I love your family but I've been sloshing around in a soaking wet pussy for nearly a day.\" Alexis grinned at her description of her condition. She could relate as she had felt the same way early in her's and Hunter's relationship. Alexis nodded to me and then motioned toward the upstairs with another nod of the head. I smiled and headed in that direction.\n\nAlexis, Emma and I agreed that we would use Emma's bedroom with the new article of furniture. Emma was betting that she would want to try it. I wasn't so sure. Alexis offered no opinion either way. I was at the top of the stairs when Alexis and Thia arrived at the bottom. I looked down at Thia who was marveling at the beauty of the Foyer and curved staircase. She was already biting her lower lip. She hurried up the stairs leaving Alexis behind.\n\nAt the top of the stairs, I reached out my hand to Thia and she looked at it and hesitated a moment before taking it. She was obviously excited but she was scared too. Alexis arrived behind Thia and wrapped her hands around her waist and then moved them up to her breasts as she stretched up and kissed Thia on the side of the neck. Thia groaned and tilted her head more to the side to give Alexis unfettered access. Alexis worked her way up to her ear and flicked her tongue on her earlobe and then lightly nibbled on it. Thia's free hand covered one of Alexis' on her tits and held it there as she moaned, \"Oh fuck, you're good.\"\n\nI pulled the two of them, still entwined, down the hall to Emma's room. The door was open and Thia's eyes lit up with awe when she entered the room. Her eyes scanned everywhere. She was intrigued by the sex swing because it seemed so industrial in this incredibly beautiful room. Alexis used the distraction to start undressing her. Thia didn't resist and let Alexis do whatever she wanted. It became quickly obvious that Thia had come prepared. She wore no bra and no panties. When her blouse came off, Thia's nipples were as hard as nails. Alexis couldn't resist a gentle suck on each one. She didn't linger even though Thia tried to hold her there. Alexis dropped Thia's skirt and grinned at me when she discovered no panties. Thia was correct in her earlier description; she was sopping wet with anticipation.\n\nThia was a little nervous but she had already made a pact with herself that this was going to be different than her previous experiences with intercourse. She didn't know how or even what the experience would be like but she decided it was going to be good and she was excited to be getting on with it. If this could be good with her brother then there must be other good out there for her.\n\nThia toed off her heels and stood there before us completely naked. She seemed to be a little self conscious being the only one so she turned to undress Alexis. The more items of clothing that Thia removed, the hornier Alexis got. She was nearly gasping for air by the time she was completely naked. Thia stepped in close to her and bent down and sucked each of Alexis' nipples onto her lips one at a time and then went around again. Alexis' looked down at Thia's face as she flicked her tongue around and around each nipple. Alexis' head rolled back on her neck and her mouth hung loose as she let out a moan of pure pleasure.\n\nThia was pleased at Alexis' reaction and she started to lower herself to her knees but Alexis took Thia's hands from the sides of her tits and stopped her. She leaned down and whispered, \"We have to undress Hunter.\" Thia stood and smiled at Alexis and then turned to face me. My cock was straining the front of my pants and Thia glanced down but immediately returned her gaze to my face. She smiled and brought her hands to her tits and cupped them as she rolled her nipples between her thumbs and index fingers. I could see the glimmer of wetness halfway down her thighs.\n\nAlexis maneuvered Thia toward me. Her nerves were more obvious now as she trembled a little. Alexis whispered to her, \"You saw everything he has yesterday and you wanted it and you took it. Today is no different. Undress him.\" Thia gulped hard and moved toward me. I was already groaning from the uncomfortable position of my cock in my pants. I was anxious for it to be released. Alexis hung back and watched. She could see the discomfort on my face and knew exactly why. She snickered when Thia started unbuttoning my shirt first. \n\nFinally, Thia got to my pants. She hesitated and I groaned to encourage her to continue. She placed her open palm on the crotch of my pants and turned back to Alexis and said, \"Holy Shit. He's so hard.\"\n\nAlexis said, \"You should get it out of there before he starts crying.\" She looked up at me and smiled. Thia unzipped my pants and my cock sprang through the opening right into her hand. She was startled for a moment and then looked back at Alexis and smiled. She wrapped her fingers around as much of the girth as she could and used her other hand to unbuckle my pants and let them fall to the floor. I had already kicked off my shoes. I stepped out of my pants and stood there looking down at Thia wondering what she would do next. \n\nThia was squatting and her face was at my crotch level. She wrapped the fingers of her other hands around the top half and she started jerking me off. Alexis let her go even though that wasn't what we were here for. I wasn't about to stop her. I let out a groan and my hips rocked toward her when she dragged her thumb around the velvety softness of my glans and discovered the sensitive bundle of nerves at the base of the glans. She grinned at my reaction. Thia tentatively lowered her lips to my cock and kissed the velvety head and looked up to see my reaction. I was staring down at her. She continued to look at me as she wiggled her lips over the head and down my shaft. She grinned around my shaft as I let out a groan and rolled my head back on my neck. Alexis stood and watched but she had her fingers going in her own pussy now.\n\nI had a strong urge to put my hands on the sides of Thia's head but I remembered that this was the exact action that all those guys had done to forcefully face-fuck her and she would likely freak on me even if I didn't force her. I left my hands dangling by my side. Thia couldn't take anymore of me than she did yesterday but her blowjob felt great. \n\nAlexis moved down to scooch in behind Thia. She cupped Thia's tits and fondled her nipples as she leaned in and kissed Thia on the neck again. Thia moaned around my cock and rolled her head to the side taking my cock with her. Alexis pulled aside Thia's hair and ran her tongue along her neck to her earlobe. Thia pulled off my cock and moaned, \"Oh my God, Alexis. You drive me crazy. Oh fuck. Yes.\" Thia pushed my cock back in her mouth, flicking her tongue on the nerve bundle that she had just discovered. Alexis ran her hands down from Thia's tits to her sex and discovered that Thia was nearly dripping, she was so wet. Alexis ran her fingers down through Thia's pubic hair and across her clitoris, which elicited a moan, to her pussy. She spread her labia and gently pulled on her outer lips. Thia moaned around my cock again.\n\nI was perfectly content to cum in Thia's mouth because I knew I could get my cock back up again to do what we were here to do. Alexis knew all that too and she wasn't trying to stop Thia. In fact, Alexis had had enough of watching and she moved around beside Thia and made it known that she wanted some too. Thia didn't give it up right away so Alexis went low and sucked one of my testicles onto her lips for a moment and then sucked it into her mouth and pushed it around with her tongue. My legs were trembling from their two pronged attack and Thia gripped my thighs. If I was going to go down, there was no way she was going to stop me. I struggled to get control back to my legs. \n\nThia had watched Alexis go underneath and suck my scrotum to her lips. When Alexis pulled off, Thia pulled off my cock and did the same thing she had seen Alexis do. Alexis pushed her lips over my shaft and pushed my glans right down into her throat. Thia saw her do that and she muttered, \"I don't know how you do that.\" Alexis' lips curled into a smile as she held my cock in place with her teeth. My pubic hair tickled Thia's nose as she flicked out her tongue to taste my balls. She pulled back and giggled. She went right back in and sucked the testicle closest to her into her mouth. She giggled again when she realized that it was moving on its own. \n\nAlexis was sucking my orgasm out of me and she pulled back looking up at me the whole time. Alexis pulled back and sucked the glob of saliva that followed into her mouth. She licked her lips and said to Thia, \"He is getting ready to cum. If you want to take his load in your mouth, you will have to start swallowing with the first shot. He cums a lot and you can't hold it all in your mouth. If you wait until your mouth is full it's too late. Okay?\" Thia nodded and pulled my testicle from her mouth with a 'pop'. She giggled at the sound. Alexis was stroking my cock aiming it at Thia's face waiting for her to stretch her lips over it again.\n\nThia took up her position again and even though Thia's blowjob was not as intense as Alexis' throat-job, my orgasm crashed over me and I was suddenly launching my hips and rope after rope of cum into Thia's mouth. Her eyes watered and she pulled back so her lips were locked on the very tip of my cock. The first strong salvo fired into her throat because she didn't know to block it with her tongue. Her plan to swallow immediately was out the window at that point as she started gagging and coughing. She pulled back from my shaft and two blasts exploded into her face. Alexis was pretty quick and she took my cock from Thia and guided it to her mouth. She got caught with a blast of cum up her nose before she could get her lips around my glans. She caught the next stream and swallowed immediately. \n\nThia cleared her throat and reached for my cock and pulled it from Alexis' lips and pushed hers back on the tip to receive four more long surges of cum. Her eyes went wide again when she discovered that trying to swallow cum and actually swallowing cum were not the same and she was blown off again with a splatter of cum down her chin and across her tits. Alexis stayed were she was and giggled at Thia's predicament. As my final shots of cum drooled from my cock, Thia was still struggling to swallow the thick gooey cum. When she was done, she opened her mouth and stuck out her tongue to show Alexis and then me. She closed her mouth and swallowed again and started laughing. She said, \"Wow that was harder than it sounded.\" Alexis giggled and moved in and locked lips with Thia and moments later they were engaged in open mouth, tongue-searching, passionate kissing.\n\nI sat down on the edge of the bed to relieve my trembling legs. As I watched Thia and Alexis kissing and groping each other's tits, my cock surge right back to full size. I started jerking myself off. When their lips separated they both went to the floor on their backs lying side-by-side gasping for oxygen. Alexis muttered, \"Holy shit girl. That was hot.\"\n\nThia waved her hand like a fan to her face and muttered, \"Wheeeewwww. No kidding.\" Thia was looking right up at the sex swing and said, \"What is this thing?\" Alexis lifted her head to look over to see what Thia was asking about. \n\nShe laughed and said, \"That is my mom's sex swing.\" She dropped her head back to the floor and resumed her search for oxygen. Thia kept looking at it like she was trying to figure out where all the straps and slings went.\n\nThia turned toward Alexis again and said, \"Do you know how it works?\"\n\nAlexis looked over again and said, \"Mom had the delivery guy give her a demo and then Dee figured out how to get into it and we all took turns fucking and sucking her in it. It's pretty cool. It lets you lay back and enjoy the ride without having to expend any energy. Dee was delirious before we finished with her.\" Alexis' breathing was returning to normal. Thia was staring at the contraption above her again. I could see the wheels turning in her mind. Emma was exactly correct. Thia had become infatuated with what the swing could add to her experience.\n\nAlexis rolled over to her front and pushed herself up to her knees. She smiled at me and mouthed the words, 'The swing is in.\" She got to her feet and offered her hand to help Thia up. Alexis kept Thia's hand and started to lead her toward the bed but Thia couldn't take her eyes off the swing and she was offering resistance that stopped Alexis. She looked back and said, \"Are you having second thoughts about having intercourse with Hunter? It's okay if you are.\"\n\n\"No. No,\" Thia said, \"I want to, I need to. More than ever.\" She looked back at the swing again and then said, \"Can we use this?\" She pointed at the swing. Alexis looked at me and I shrugged and kept on slowly stroking my cock. \n\nAlexis stepped back toward the swing and said, \"Sure. I'm sure we can figure it out. We got Dee in it last night. She didn't want to get out of it.\" Alexis looked over at me and winked, \"How many orgasms did Dee have in this thing last night anyway?\"\n\nI said, \"I counted five but it could have been more if you count all the smaller ones.\"\n\nDee turned back to the swing and then turned back to Alexis and said, \"Would Dee mind showing me how to use it? Or your mother?\" I grinned at Alexis and let my cock go. It was going to be a while before I'd need it again.\n\nAlexis was playing her part with skill. I was impressed. She acted like she wasn't sure but then said, \"I'm not sure, but I can ask them. Hold on and jerk your brother off while I go find out. Okay?\" Thia was grinning and bobbing her head so hard I thought her neck might break. Alexis headed for the door still naked. Thia came over and pawed through the straps and slings before sitting next to me and grabbed my cock and started jerking me off just like Alexis had told her to. She paid no attention to my cock; she was staring at the swing imagining herself in it.\n\nTwo minutes later Alexis pushed open the bedroom door and walked in. Emma and Dee followed closely behind. Jarrod made his way into the room after the conversation got started about how to use the swing. Emma, Dee and Jarrod were fully clothed. Dee and Emma went straight to the swing and began lifting straps and slings and explained to Thia, who was still jerking on my cock, what went where. \n\nAlexis came over to the bed and pulled Thia up causing her to abandon my cock. Emma maneuvered Thia into the middle of frame and held open a leather sling and told Thia to sit in it. Thia did as instructed. Dee helped Thia to lay back and put her shoulder blades in another sling that she slightly adjusted so Thia's torso was laying horizontally supported by her ass and shoulders. There was another sling to put the back of her head into and Dee adjusted the straps so her head was supported perfectly in line with her torso. Emma lifted one leg and slipped a heavily cushioned sling over one foot and adjusted the straps so the sling held her leg just above the knee. She did the same to the other leg.\n\nThia was suspended above the floor with her entire body on a horizontal plane with her legs splayed wide and feet hanging slightly lower. Alexis bent over Thia's face, which was beaming out a huge grin. Alexis said, \"Are you comfortable? Dee handed over the sleep-mask and Alexis said, \"To make it like a sensory deprivation experience, it comes with a mask.\" Alexis fit it over her face and set it in place. Thia was getting a little nervous now. She wasn't sure about the mask and pushed it up to her forehead. Alexis bent down and whispered in Thia's ear, \"It's okay Thia. I promise you an amazing experience. I guarantee you everything will stop the very second you say \"STOP\". That will be your safe-word. Okay? Thia smiled and nodded. She pulled the mask back on. Her breathing was increasing either from being horny or being anxious; or both. Alexis said, \"Thia I'm going to start you off. Put your hands on the straps above you and experiment with how you can control your position.\" Thia smiled under the mask and Alexis got on her knees and kissed her way up Thia's thighs to her sex. Thia immediately groaned out, \"Oh fuck. This is amazing.\"\n\nDee, Emma and Jarrod stripped out of their clothes to be ready for their parts. Alexis drove Thia into a screaming orgasm and then stood up and positioned her sex at Thia's dangling head and Thia eagerly began working her tongue in what she presumed was Alexis' pussy.\n\nI lay back on my side as Emma lay perpendicular to me with my cock in her mouth. Jarrod laid on the other side of the bed parallel with me, facing the opposite direction, and perpendicular to Emma, tongue-fucking her pussy. Dee closed the square as she lay parallel to Emma and pushed her pussy into my face and settled down with Jarrod's cock in her mouth. In less than a minute, groans and screams of pleasure filled the room.\n\nThia pulled her tongue from Alexis' pussy and said, \"It sounds like everyone is having as good a time as me.\"\n\nAlexis giggled and said, \"This group always finds ways to have a good time.\" Thia went back to drilling Alexis' pussy until she groaned out, \"Oh my gawwddd. I'm cumming.\" Thia was furiously slurping Alexis' juices. ",
        "Emma pulled her head off my cock and said, \"You're up. Show Thia what good fucking is all about.\" I rolled out of the square and Alexis took my place sucking on Dee's pussy and Emma licked up her juices and flicked her tongue into Alexis' still pulsing vagina. \n\nI bent over Thia and kissed her lips. She kissed me back and said, \"Fuck me, baby brother.\" I moved between her splayed legs and pulled a strap that lifted the entire contraption higher in the tubular steel frame to accommodate my height. Thia was anxious and she was rocking her hips searching for my cock. I laid my cock down on her sex and pushed her suspended body forward so my cock dragged the full length of her pussy from clitoris to thighs. She groaned loudly from the contact on her super-sensitive clitoris. The action on the bed stopped and they were sitting up watching me getting myself ready to fuck my sister.\n\nThia's hips were still searching for my cock and she finally said, \"Hunter. Please fuck me now.\" My hesitancy disappeared with her plea and I pushed my glans to her pussy. She gasped just from the touch and then used the straps to surge her body forward onto my cock. She screamed when the fattest part wedged into her vagina. I stopped her progress and let her adjust to the size. Then I pulled the straps toward me and dragged Thia's pussy onto my cock. I went slowly because of her professed lack of experience with anything other than basically, rape.\n\nThia was holding her breath as she slid onto my cock and I whispered, \"Breathe Thia.\" She sucked in a lungful of air as I pulled back out and gasped it out again as I pushed back in. I whispered again, \"Breathe Thia.\" She smiled up at me from under the mask and took a breath. \n\nThia grunted, \"Fuck, baby brother; your cock is huge. It feels amazing. I've never cummed this way. Can you make me cum with it?\" Dee, Emma and Alexis burst out laughing at Thia's question. I grinned at them on the bed and worked the straps so Thia moved off my cock and then back on again. I steadily increased the pace and in minutes Thia was surging her hips up out of the seat using her legs in the slings to lift herself. Thia was thrashing around in the swing as her orgasm crushed her. She screamed out, \"OH MY GAAWWD. YESS. FUCK. YESSS. I'MMM CUMMINGGG ONN MYY BROTHER'S COOOOCCCCKKKK. OH JESUSSSS. AMAZING.\" Her head flailed from side to side and she stuck three of her fingers into her mouth like she was sucking on a cock. Jarrod could not have had a better cue than that. He sprang off the bed and moved to Thia's head. Thia was actually perched too high for Jarrod to offer her his cock so he pulled on a couple of straps and Thia's shoulder strap dropped as did the strap holding up her head. She was now angled from her pussy perched higher clenching on my cock to a lower position of her torso to accommodate Jarrod's height. \n\nJarrod laid his cock on the side of her face until she realized what it was. She pulled her fingers out of her mouth and felt for whatever it was that was lying on her cheek. Her fingers closed around Jarrod's cock and she immediately pulled it into her mouth. Jarrod looked at me and grinned. We had talked about this possibility but neither of us knew it would actually happen. Thia was all in on a combined fuck and blowjob. She was able to take much of Jarrod's cock into her mouth before gagging on it and this position opened her throat to make it even easier to deep-throat. I was pummeling her pussy and Thia screamed hard around Jarrod's cock and then pulled off and yelled out,\"FUCK. YESS. CUM IN MEEEEE. BOTH OF YOU, CUM IN MEEE.\"\n\nJarrod and I had worked this with Alexis, Dee and Emma several times and we had our communications down pat. We gave our signals back and forth until we timed our ejaculations. Both Jarrod and I groaned at the same time and launched our cocks into Thia as cum fired into her mouth and pussy at the same time. She screamed around Jarrod's cock and gagged on his cum. She discovered the hard way that you can't scream and swallow cum at the same time. \n\nThia was frantically humping her hips up off the swing trying to get more cock in her. She wanted to clamp her legs around behind me but the straps prevented her. She pushed herself away from Jarrod's cock trying to clear her throat of his cum. Jarrod was committed and he blew all of his half-dozen ropes of cum up Thia's face to her tits. \n\nDee and Alexis looked at each other and sprang off the bed to attack Thia's tits in search of Jarrod's cum. I fired at least ten long powerful surges of cum into Thia's clenching pussy. Her body was a mass of muscles growing taught and releasing over and over again. Thia was gasping for air and then explosively muttering, \"Oh fuck. Oh fuck. Oh fuck,\" as she held Dee's and Alexis' heads down on her tits.\n\nJarrod pulled back away from Thia's head and Emma slid off the bed and dropped to her knees to suck Jarrod's gooey cock into her mouth. She lashed his cock with her tongue and drilled her tongue into his eye to collect any remaining cum.\n\nMy cock was spent but it was still rock hard so I left it in Thia's pussy as she continued to spastically clench her pussy as she recovered from her massive orgasm. She was still on a downward angle from hips to head. She pulled the mask off and was looking at Emma standing at her head after she had licked Jarrod's cock clean. She took her hands off the straps and reached over her head and pulled Emma's hips to her face. Emma reached down and spread her labia with her fingers. Thia pushed her tongue into Emma's pussy and Emma lunged forward with a gasp. \n\nEmma grabbed the straps going to Thia's head and pulled them to her pulling Thia's tongue deeper into her sex. Emma's head snapped backward as her hips fired forward. Alexis and Dee had finished cleaning Thia's tits of Jarrod's jizz and they were amazed at Thia's sexual stamina. Dee and Emma were the only ones who hadn't got off with Thia's pussy or mouth and it looked like Emma was about to succumb to Thia's tongue. \n\nTwo minutes later Dee was the only one left as Emma's pussy started clamping on Thia's tongue. Emma was assisting with her finger strumming on her clitoris. Emma stepped away from Thia and sat down on the chair by the bed as she gasped for air.\n\nThia had liked the looks of Dee from the moment she met her. They were about the same age and Thia would confess later that she thought Dee made her particularly horny. Thia was glad that Dee was still ready to go. Thia pulled herself up in the straps and looked at me. My cock was still buried in her pussy. She said, \"Can you turn me around upside down in this thing?\" I had no clue but it looked like it would be feasible. I pulled my cock out and unhooked one leg and then the other. Jarrod and I picked her up and flipped her over so she was facing the floor. She wanted her face to be a foot or so off the floor so Jarrod adjusted the straps to accommodate her request. She wanted her hips three feet off the floor so I made that adjustment. Her knees were almost touching the floor as her legs dangled out of the straps. She asked me to put her legs back in the slings at her knees. She bent her knees and held her feet up in the air. \n\nDee got where she was going and she got down on the floor on her back and maneuvered her pussy to Thia's dangling face. Before she dove in to Dee's crotch she looked back at me and said, \"Doggy?\" She could reach the floor with her hands and she rocked herself to drag her tongue along Dee's pussy. I got down on my knees and maneuvered in between Thia's spread legs. Cum was drooling out of her pussy onto the floor. I stroked my cock a few times to get it up to full size and I dragged my cock down over Thia's ass and touched my glans to her anus. She wasn't going for that and she struggled away from me. She abandoned Dee's pussy and looked back at me and said, \"You guys may have brought me a long way today but I'm not ready for that; especially not with that baseball bat between your legs.\"\n\nI grinned at her and said, \"Just checking.\" I dropped my cock to her pussy and pushed my glans into her. She was still looking back at me trying to watch but she couldn't see anything so she returned to Dee's pussy. My fucking motion was driving Thia into Dee's pussy who was groaning. Thia was moaning constantly from every long penetration. Then I changed it up and pulled my cock out and started short-stroke piston fucking her and she had to abandon Dee's pussy again as she burst into another orgasm. She groaned out, \"AHH AHH AHHH AHHH\" as each \"AAHHH\" was punctuated by a hard thrust of my cock into her pussy. Each penetration was forcing more cum from her. She mumbled, \"Jesus. I love your cock.\"\n\nEmma giggled and said, \"Yeah. Well get in line sweetie.\" Alexis laughed and nodded at her mother. Dee was being left high and dry and she started fingering herself. Thia recovered from her orgasm enough to realize that Dee's pussy was inches from her lips. She went back to work and the combination of Thia's tongue and Dee's fingers drove her over the top of her orgasm as she screamed and moaned. Dee seemed to melt into the carpet and just laid there. \n\nMy cock was still hard as a granite post and I went back to full length strokes from glans to balls. Thia put her hands on the floor to brace herself against the onslaught of my cock. I could feel my second orgasm about to blow and when it did, Thia let out another whole round of screams as she humped up in the sling. I poured another load of cum into her and then slowed and stopped and pulled my softening cock from her. Her head hung almost to the floor. Alexis liked the looks of Thia's large tits hanging just far enough off the floor for her to get her head under them and suck on her nipples. She groaned and reached for Alexis' tits. \n\nThings slowed way down and Jarrod and I helped Thia out of the swing. We all got on the bed and cuddled into a huge pile of naked bodies. Someone found my cock and kissed my glans. I didn't even look up to see who it was. I watched Emma and Dee leisurely sucking on Jarrod's cock. Thia and Alexis were in another embrace. \n\nIt was another half hour before all forms of sexual activity stopped. Thia, Alexis and I got into Emma's shower and Emma, Dee and Jarrod went to Dee's shower. Alexis and Thia apparently weren't done yet and they dropped down to a sixty-nine position with Alexis on top. I sat down on the molded seat and watched as I slowly stroked my cock. They both had small orgasms that left them gasping for air again. Hips pulsed a few times and they both groaned into the other's pussy.\n\nAlexis rolled over on her side and looked at me. The sultry look on her face told me she still wasn't done. She watched my hand moving in a slow, languid motion. Thia looked to see what Alexis was looking at and she sat up beside her. They looked at each other and Alexis whispered something to Thia. I didn't get any of it as the streaming water drowned their words out. \n\nThia and Alexis both started scooching over closer to me. In unison, they got up on their knees and pushed themselves to the outside of each of my thighs. They rested their tits on my thighs and positioned themselves within easy reach of my cock. Alexis held out my cock to Thia and she took it and stretched her lips over my glans. She worked her way down as far as she could and took a dozen or so cycles of her blow-job. She pulled off and guided it back to Alexis who wiggled her lips on and pushed down until my glans moved into her throat. She took another dozen or so strokes of her throat-job and blow-job. She passed it back to Thia, who repeated her previous actions and passed me back to Alexis. I was in absolute heaven. I thought after cumming so many times that I could wear them out. As it turned out, I was wrong. I heard Alexis say, \"Let's wear it when he cums,\" and Thia nodded and smiled.\n\nI started groaning long before I finally exploded into my first shot. Alexis pulled my cock from lips and aimed it at Thia's tits. Cum splattered everywhere. Alexis aimed the second and third shot at her face and tits. Thia got to laughing and grabbed my cock and aimed the next three shots at her face and then Alexis' face as they both got laughing. All the rest of the shots were really just drools and Thia sucked my cock into her mouth to receive the small amounts. Alexis was rubbing cum into Thia's tits in with her hands like it was skin cream. \n\nI stood up and grabbed the liquid soap and started to lather myself and them up. They both allowed me to wash anywhere I wanted and giggled when I paid too much attention to their tits and pussies. Then they took their turns and paid particular attention to my cock. I was done and my cock didn't rise to the occasion. \n\nWe toweled each other off and I snapped my towel lightly on Thia's ass. Alexis saw it coming and she burst out laughing, \"Good, another target.\" Thia just glared at me and moved in close to me and kissed me on the lips. She said, \"Thank you little brother. For everything.\" She kissed me passionately. She turned and kissed Alexis and said, \"Thank you most of all. I have a family again; thanks to you. You all showed me that straight sex can be amazing but I still like sex with women, especially when they look like you guys.\"\n\nAlexis kissed Thia and said, \"Believe me, we all enjoyed sex with you. You are one smoking hot babe.\" Thia's face blushed from Alexis' compliment. \n\nWe all dressed and went downstairs. Emma, Dee and Jarrod were in the living room with drinks in their hands. Thia kissed them all and thanked them and they thanked her. We hadn't eaten on our 'lunch date' so we stopped at our fast food joint and grabbed a quick bite before dropping her off at home. We visited with Mom and Dad for an hour or so. Mom wanted to know what we did. Thia told her that we were just talking about the old days. Mom said, \"Well, whatever it was you guys seem to be floating on clouds.\" Thia burst out laughing. Mom hadn't seen Thia laugh much over the years. Mom smiled at us and it was nice to see her happy.\n\nI offered to drive Thia to the airport but Dad said that he and Mom wanted to drive her and get in the last of her visit which was ending so much better than it had started. We kissed Thia again and she held me close for a long time before releasing me. She squeezed my cock in my pants when Mom and Dad weren't looking and snickered. I did the same to one of her tits and she \"OOOO'd\" as she grinned. She said, \"If you ever can, come visit me, okay?\" I nodded and we kissed again. It was a brother-sister kiss. We didn't want to freak Mom and Dad out.\n\nOn the way home Alexis commented on how things couldn't have gone any better. We followed Emma's playbook and it worked perfectly. We were quiet for a moment lost in reverie. Alexis said, \"Your sister is a freak.\"\n\nI laughed and said, \"She fits right in with this bunch of freaks, don't you think?\" Alexis grinned at me and nodded."
    ],
    "authorname": "BigZeke13",
    "tags": [
        "swing",
        "swinging",
        "group",
        "group sex"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/pool-boy-ch-33"
}