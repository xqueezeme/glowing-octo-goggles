{
    "title": "Rain Falls Ch. 07",
    "pages": [
        "When he woke me up it was still dark. \n\n\"Get dressed, Baby.\" He nudged me. \"We're going to Austin.\"\n\n\"Now?\" I grumbled. \"What time is it?\"\n\n\"Five-ish,\" he replied. \"It will be easier to get out of town before rush hour.\"\n\n\"Did you sleep?\"\n\n\"Yes.\" He rolled off the bed. \"A little. I'll be fine.\"\n\n\"Seriously, Eric.\" I squinted at him accusingly. \"Are you on crank?\"\n\n\"A little,\" he admitted.\n\n\"Well, shit,\" I groused and climbed out of bed, defeated. There was no way that I'd convince him to sleep if he was doing speed. \"The least you could do is share.\"\n\n\"Do you want some go, Baby?\"\n\nI looked down at my body as I padded toward the bathroom, wondering if my oft abused system could handle the stress. \"Yes,\" I yawned.\n\n\"Ok.\" He followed me into the bathroom. \"After you eat something.\"\n\n\"Did you eat?\" I asked, emptying my bladder.\n\n\"A little,\" he smirked and left me to my morning routine.\n\nI speculated on how he managed to keep his body looking like that with the rate that he was going. He hardly ate, slept less, and did uppers. It was always such a fight for me to try to prevent my body from becoming grossly emaciated. The way he was living had to take its toll on his body too.\n\nHe served me an omelet, which I ate out of reflex, not even paying attention to what it was stuffed with. I was half asleep and trying to focus on what he was doing. Crank was so unstable that street people didn't mess with it so I didn't have much experience with it. He removed an aluminum foil wrapped package from the freezer and opened it. It was full of blue drying crystals. Buried in the rocks were tiny ziplock bags full of an off-white, chunky, powder. He took a mirrored placemat, the kind with the little rubber feet, off the top of the fridge and chopped up two lines for me. As soon as he was ready, I set my plate down. I hadn't finished the omelet but I knew that I had very little time. The drug would start to melt very quickly. I snorted both lines and then stuck my fingertips under the faucet. Bringing my wet fingertips to my nose, I inhaled the water droplets, trying to quench the searing fire in my sinuses. \n\n\"Feel the burn,\" I quipped and rolled my eyes. The taste coated the back of my throat and mouth almost instantly. The taste of crank wasn't as bad as ecstasy but it was harder to get rid of. The taste of coke wasn't as bad as crank but coke numbed your throat and it was impossible to get rid of. I had convinced myself that whoever invented Jolly Ranchers was a cokehead.\n\nThe other thing about crystal, the other reason it wasn't as popular as coke among the street rats, it didn't make you fuzzy. It made everything clear and sharp. In my opinion, it didn't make me feel like I was on drugs. It just made me feel AWAKE. Cocaine made me feel invincible and euphoric. Ecstasy was really my poison of choice. It gave me tracers and the same general happiness of cocaine but with the added bonus of amplifying all of my senses. Every sound, sight, and touch was intense and surreal. Pot brought me down gently and provided me with the serenity that I often couldn't find on my own. I stayed away from heroin. I'd seen too many people die on the nod. I had almost no experience with pills. They weren't that common on the street, or possibly, they weren't shared as much. They only time I took drugs was if someone gave them to me. I had never paid for them myself and I wasn't about to start.\n\nAfter cleaning the kitchen, we headed out. Eric picked up an overnight bag on our way out the door. \"What's that?\" I asked.\n\n\"I figured we'd stay the night. Austin can be fun.\"\n\n\"What about your project?\"\n\n\"I'm in a holding pattern,\" he explained. \"I want to give the wood more time.\"\n\n\"How long does that take?\"\n\n\"A few weeks to dry it completely but it was already dried indoors. I'm very careful about where I get my supplies. I want to be sure of what I'm working with. I destroy enough of my work on my own. It really pisses me off when I lose something to shoddy material. Sometimes it can't be helped. There will be flaws in the wood or stone that aren't apparent until you get into it. If you get lucky, those flaws can add to the beauty of the piece, if not, they can destroy the whole thing. If I bring home something that gets ruined because I didn't examine it carefully enough I feel like I deserve what I got. If my work is ruined because the material wasn't handled properly in the first place, it makes me homicidal.\"\n\n\"Can't you eliminate the possibility by doing all the prep work yourself?\"\n\n\"Yes. In theory,\" he replied. \"It's not very economical. If I only worked in one medium it would make more sense. I could haunt the quarry or the mill yard. I would need a lot more space for storage and it would cause more forced delays on my projects, but it could be done.\"\n\nI remained quiet until we passed through downtown and got underway on I-35. \"Do you ever read?\"\n\nEric visibly flinched. \"What number are we at?\"\n\n\"I have ten left.\" I smirked at his grimace. \"I find it completely fascinating that you can talk about your work all day long but the second I ask anything personal, you panic.\"\n\n\"Not panic,\" he argued. \"I just don't like talking about myself.\"\n\n\"Why not?\" I asked.\n\n\"If I answer that it counts,\" he warned.\n\n\"Ok. But answer the reading question first.\"\n\n\"I don't read very often and, when I do, it's non-fiction.\"\n\n\"How boring,\" I opined. \"I read to escape life. The last thing I have any interest in doing is reading about reality.\"\n\nHe smirked. \"I don't like to talk about myself because it makes me feel like people are just looking for a reason to disagree with you. They're searching for flaws or chinks in the armor.\"\n\n\"I'm not,\" I told him. \"I'm just trying to learn things about you.\"\n\n\"What good does it do you to know if I like to read?\" \n\n\"If I wanted to buy you a birthday present I now know not to buy you a mystery novel,\" I pointed out.\n\n\"When is my birthday, Rain?\" he asked softly.\n\nI knew that he was trying to prove his point but I wasn't going to let him think that about me. \"I haven't gotten to that question yet,\" I told him. \"I'm saving that one for later.\"\n\n\"Why?\"\n\n\"Because it's very generic and it's possible that I can learn that without wasting a precious free question on it,\" I explained. \"It's like asking your favorite color or food. I could learn those by careful observation. I've only got eight more questions and I want to use them to learn as much about you as possible.\"\n\n\"You asked me my favorite food,\" he pointed out.\n\n\"That's because I hardly see you eat. Besides, you didn't really answer.\"\n\n\"Sure I did.\" He smiled at my raised eyebrow. \"Ok. Coffee ice cream,\" he smirked. \"Quid-pro-quo.\"\n\n\"You can ask me anything you like. I will always answer you to the best of my ability,\" I promised.\n\n\"What's your favorite movie?\" he asked.\n\n\"Butch Cassidy and the Sundance Kid.\"\n\nHe laughed, \"They die!\"\n\n\"I know,\" I sighed. \"Life sucks and then you die. They went out with flair though.\"\n\n\"I was always sure that they had a three-way going on with that chick,\" he remarked which made me laugh.\n\n\"It was a common theme,\" I replied. \"Did you ever see Paint Your Wagon?\"\n\n\"No.\"\n\n\"It's a musical starring Clint Eastwood. It's about the debauchery of gold miners,\" I told him. \"The two main characters buy and share a wife.\"\n\n\"Are you fucking kidding me?\" he laughed. \"My mother loves that movie.\"\n\n\"We didn't invent sex, Eric,\" I teased. \"Your parents had sex at least once.\"\n\n\"Ack!\" he exclaimed. \"Stop or I'll make you run alongside the car.\"\n\n\"Eric Unger is a prude?\" I taunted.\n\n\"No,\" he chuckled. \"I just don't need that worm planted in my head. The last thing I want is for that thought to pop up the next time I get you into bed.\"\n\n\"Ok,\" I snickered. \"I'll stop. I guess I lucked out. I never have that particular worry.\"\n\n\"What's your favorite book?\" he asked, changing the subject.\n\n\"Too many to name,\" I replied.\n\n\"Pick something,\" he suggested. \"I'll keep in mind that it's one of many.\"\n\n\"Interview with a Vampire,\" I said. \"By Anne Rice.\"\n\n\"A vampire story?\" he grinned. \"And you complain about the biting.\"\n\nI grinned. \"It's about vampires but it's more about the homoerotic relationship between the two main characters.\"\n\n\"Homoerotic?\" he chuckled.\n\n\"Yeah. The main guy, Louis, is straight but the guy who turns him, Lestat, is so obviously in love with him. Only, Louis is this tortured soul that never figures out that Lestat is desperately in love with him. He thinks Lestat is just psycho crazy.\"\n\n\"Sounds like a tragedy,\" he commented.\n\n\"It is, in a way.\"\n\n\"So, no happy endings for you, huh?\" he joked.\n\nI shook my head. \"Life doesn't really work that way.\"\n\nHe chuckled. \"I thought you were reading to get away from real life.\"\n\n\"Yes but... MY life,\" I explained. \"I prefer my escapism to be realistic. Suspension of disbelief and all that. I need to be able to get into a story. Get invested. And in real life there are no happy endings.\"\n\nHe glanced at me before returning his attention to the road. \"There can be.\" \n\n\"If I ask about your parents does it count?\" I asked.\n\n\"I guess not.\"\n\n\"Good.\" I smiled. \"Do you get along with them?\"\n\n\"I'm pretty sure that's about me,\" he smirked.\n\n\"It's borderline.\"\n\n\"Ok. I'll let it slide.\" He paused, thinking. \"I love them. They're pretty cool, as parents go. I didn't have all the trouble with them that other kids had with theirs. So, yes. I get along with them.\"\n\n\"What do they do?\"\n\n\"My dad is a lawyer. My mom is an OBGYN.\"\n\n\"Wow,\" I breathed. \"You said that you were from Plano. I guessed that your parents had money but fuck. A doctor and a lawyer?\"\n\n\"My mom comes from family money. She didn't have to work but she chose to anyway. Having money doesn't really makeup for being absent.\" \n\nI didn't know how to respond to that. I wanted to comfort him but, considering where I came from, it seemed ridiculous. \n\n\"They're better now,\" he went on. \"They've calmed down over the years. They aren't so dedicated to their practices. You'd probably like my mom. She's a big reader too.\"\n\n\"Would they like me?\" I asked.\n\n\"You personally or our relationship?\"\n\n\"Either... Both.\"\n\n\"They'd like you. You're sweet.\" He took a breath and let it out. \"As far as us? I don't know. They're pretty conservative but not bible thumpers. I'd like to think that they will accept it, eventually.\"\n\nHe'd said 'will' not 'would'. As if it was a forgone conclusion that they would be presented with the issue. Did he had plans to introduce me to his family as his lover? The idea was daunting. It was too soon to be thinking along those lines. We had only been together for five days.\n\nAs hyper as I was, leg bouncing, fingers twitching, I didn't want to ask him any more questions. I decided to lean back in the comfy seat and watch the sunrise.\n\nWe got into Austin a little after nine. We went straight to the courthouse but it took hours to get to the right people and fill out all the paperwork. Which I had to do twice because the first time I had used my address.\n\n\"Use mine,\" Eric said.\n\n\"Why?\"\n\n\"Because what's the chance that you'll still be living there in eight weeks?\"\n\nI wanted to tell him that it was pretty fucking high since I couldn't get any other place with no identification. But I didn't because I knew what he was getting at. He'd only told me to move in with him about fifty times in the last five days. \n\n\"Besides, it's safer. Wouldn't you rather have these documents going someplace that you don't have to worry about them getting lost or stolen?\"\n\n\"What if we aren't together?\" I snapped.\n\nHe looked hurt that I would suggest such a thing. \"I would still make sure that you got them,\" he replied. \"I wouldn't keep them from you. No matter what happens.\"\n\nI couldn't fight the logic and I didn't want to see that hurt look in his eyes again. It devastated me that I had put it there. I was crashing and irritable but it didn't excuse what I had said. I found myself wanting to comfort him again but the capitol building was not the place for guy on guy PDA. Instead, I got up and retrieved another copy of the forms to fill them out again.\n\nOn our way out of the building we had to stop to look at the structure. Not as a whole, up close and personal. Eric was standing on the grass running his fingers over the granite blocks that made up the building. \"This was done by hand,\" he informed me. \"Can you believe that?\"\n\nHe was referring to the blocks themselves. Each of the huge granite blocks had a border around the perimeter that was smooth as silk. The area inside the border was left rough. Having absolutely no point of reference, I had no idea why that was such a big deal. I just wanted to get out of there. But then, as I said, I was bitchy.\n\n\"Do you have any more of that crystal?\" I asked once we got in the car.\n\nHe shook his head. \"Not with us.\"\n\n\"Well fuck,\" I sighed.\n\n\"Are you jonesing?\" he asked.\n\n\"Yeah.\"\n\n\"I'm sorry, Baby,\" he said. \"I didn't think about it. I just use it as a pick-me-up on occasion. I don't make a habit of it.\" He looked me over, trying to judge my condition. \"I just want to make one stop and then we'll find a hotel and take a nap. Ok?\"\n\nWe didn't go very far. We went down the block and stopped at a Half Price Books. I grinned at him. \"Are you trying to find a driving instruction manual?\"\n\nHe chuckled. \"Something like that.\" \n\nWe separated in the store. He sent me off to find something to keep me entertained while he worked. I browsed around, steering away from the more erotic stuff that I liked to read. If he was going to cut me off while he was working I didn't need to get myself all hot and bothered. I picked up some sci-fi/fantasy and some suspense.\n\nI had found five books that I wanted and was sitting on the floor in the fantasy section, with books stacked all around me, when Eric found me. \n\nHe squatted down behind me and whispered in my ear. \"Are you having fun, Baby?\"\n\nI turned my head to see him with a smile on my face. \"Yes.\"\n\nThe move brought my lips inches from his and he didn't shy away. He kissed me right there in the middle of the store. It was just a gentle brush of the lips but it was clearly a kiss to anyone who had seen us. He didn't even glance around to see who might be watching first. The sheer bravado of the man constantly floored me. \"I'm ready to go anytime you are. I'm not in a hurry though. Take your time.\"\n\n\"No.\" I gathered up my choices and put the rest back in their proper homes on the shelves. \"I'm done. Let's go lay down.\"\n\nHe arched his eyebrow suggestively. \"I like the sound of that.\"\n\nWe got to the counter and I chanced a look at what he was buying. He had chosen a cookbook, a book on wood carving, a career aptitude book based on a test by Jung, a copy of Interview with a Vampire, and a Texas Driver's Manual. Although, to be fair, the driver's manual was free. I had to fight the urge to laugh. \n\n\"There's a part two coming out this year,\" the cashier told Eric when she rang up the Anne Rice book.\n\n\"I haven't read it,\" Eric admitted.\n\n\"It's good.\" The girl smiled coyly at him, blatantly checking him out. \"You'll like it.\" \n\nI rolled my eyes. Could I not go anywhere with him without him getting hit on? I appreciated the fact that he was gorgeous. I appreciated that fact as often as humanly possible. But I wanted to just go one place where I didn't feel like I had to fight for him.\n\n\"My boyfriend suggested that I read it,\" Eric told the girl. He reached over and took the books out of my arms and slid them across the counter to go on his tab. The girl and I both just blinked at him, though, I'm sure, for totally different reasons. \"Is that it, Baby? Just five?\"\n\nI nodded and then realized that I was acting like a simpleton. \"For now,\" I replied when I found my tongue. The girl seemed to snap out of her trance at the sound of my voice and she rang up the rest of our purchases without any further flirting.\n\n\"Did that bother you?\" he asked when we were back in the car.\n\n\"No,\" I assured him. \"It just surprised me. You're always surprising me.\"\n\n\"How?\" He started the car and pulled onto the street. \"In a good way or a bad way?\"\n\n\"In a good way. You're just so open. It's like you don't care what other people think. Like you're not afraid of anything.\"\n\n\"I don't care what most people think,\" he replied. \"Why should I? I don't even know those people and I'll probably never see them again. If they want to waste their time and energy worrying about what we may be doing, let them. Makes no difference to me.\" \n\n\"This is the bible belt, Eric. Those people can become violent.\"\n\nHe quickly glanced at me. \"I'd never let anyone hurt you, Rain. Ever,\" he swore. \"But if it bothers you for me to be affectionate in public, I'll stop. I may not care what they think but I do care what you think.\"\n\n\"It doesn't bother me. I like it. I love the fact that you're not ashamed to let it be known that we're together. But it does scare me,\" I admitted. \"I just wish that we lived someplace where there was no need to be afraid. Where everyone could be who they were and love who they love.\" It was the first time that the big scary 'L' word had been thrown out there. Even though the context was more universal than referring to us specifically, I watched Eric's reaction carefully. He had none.\n\nWe spent the rest of the short car ride in a pensive silence. We pulled into the parking lot of a hotel, not a motel. Even though I now knew there was far more money backing Eric than I could even comprehend, I couldn't help but cringe at the wasted expenditure. I looked around at the room thinking that I could live in, what was to me, the lap of luxury, for a month for what he's heedlessly paid for one night in that room. He set the overnight bag down on a padded bench and wrapped his arms around me.\n\n\"I have wanted this for so long,\" he murmured against my neck before he grasped my hand and pulled me into the bathroom. He turned on the water and quickly divested us both of our clothing before pulling me under the warm spray with him. To be honest, I wasn't in the mood. I was tired and cranky and hungry. But I wasn't going to stop him. I couldn't count the number of times that I had put out for total strangers when I didn't feel like it. I wasn't about to deny someone that actually mattered to me. \n\nI started to relax the moment he tilted my head back and began running his fingers through my hair. He watched my face while he washed my hair and massaged my scalp. Once he was satisfied with my hair, he moved down to my body. There wasn't a single centimeter of my skin that his fingers didn't explore and bathe. He reached around my body to wash my back, never turning me, so that he could continue to watch my face. He got down on his knees in front of me to wash the lower part of my body but he still looked up, into my eyes. I braced my hands on his strong shoulders and lifted my legs to allow him to wash my feet. \n\nWe didn't utter a single word the entire time. I couldn't tell what he was thinking either. His face was so hard to read some times. Or maybe it wasn't. Maybe I was just in denial of what was so clearly stamped there for anyone to see. As soon as he set down my feet he used his hands to urge me to turn. He spread my cheeks with his hands and laved my hole. The touch of his tongue to my entrance sent me from zero to Oh My Fucking God in less than a heartbeat. It had never happened to me before and I couldn't make sense of it. I hadn't even gotten aroused while he was bathing me but the second he had his tongue on my ass I was ready to pop off. I widened my stance and put my palms on the wall in front of me to give him better access. \n\n\"I'm going to come, Eric,\" I groaned. He'd had his mouth on me for less than a minute.",
        "\"Come for me, Baby,\" he pulled off long enough to say. He snaked his tongue deep in my channel and reached around to grip my cock. That was all it took. My orgasm ripped through me, leaving me panting. It was pretty mild, probably the least powerful orgasm I had ever had with Eric, and it left me wanting.\n\nAs I came down from my high, he stopped up the garden style Jacuzzi tub and let it fill with hot water. He guided me to sit between his legs and recline against his chest. He hadn't adjusted the temperature and, the water that was just fine as a shower, was too hot for my skin submerged. I didn't comment on it. I knew it would cool off soon. Eric wrapped his arms around my chest and held me flush against him. Even with the temperature of the water, I could feel the heat from his engorged cock pressing into my spine and I ached to do something about it. I pushed my body up his, planted my feet on either side of his thighs and raised my hips out of the water. He knew what I intended and reached between our bodies to hold his dick up for me. I tried to lower myself on to him but, as wet as bathwater is, it's not lube. It had been too long since I'd had his big dick inside me and I couldn't get my ass to accept the penetration. \n\n\"Wait,\" he husked after a couple minutes of me trying to force him past my guardian ring. He lurched up on his knees, taking me upright with him. Grabbing the tiny bottle of conditioner, he slicked his cock and slowly pushed it inside of me, groaning loudly at the entry. \"Fuck, Baby. You're tight.\"\n\n\"Fuck me, Eric,\" I panted.\n\n\"No.\" He held me tight to him and, careful not to dislodge his cock from its place inside me, he lowered us back into the water. \"I liked what you were doing. Fuck yourself on my cock, Baby.\"\n\nHe spread his legs to trap my feet between his powerful thighs and the walls of the tub, keeping me from losing my footing. With my head back on his shoulder and my shoulders on his chest, I arched my back, raising my hips. His breath hissed in my ear as I lowered my hips, impaling myself on his thick cock. I was going slow, testing the water, so to speak. It was on the second down stroke that I realized that this position was doing unspeakable things to my prostate. I saw stars. White lights flashed behind my closed eyelids.\n\n\"I'm not going to be able to keep this up. It's too intense.\" \n\n\"Take your pleasure, Rain,\" he murmured in my ear. \"Use my body. It's all yours.\"\n\nI nodded and rose up again. The water had washed the conditioner off and I could feel my channel catching on his skin. It should have hurt but it didn't. My body was trying to hold on to him and I understood. He was leaking enough pre-cum to keep my insides slick enough to ride him but only if I did it slowly. I couldn't move fast enough to get him off but I was starting to climb. I don't know if it was the change in my breathing or the way my body would start to tremor but he seemed to have some sixth sense that told him when I was about to come. He gripped my cock and began stroking me.\n\n\"That's right, Baby,\" he crooned. \"Fucking come for me. You're so fucking hot. Come for me, Rain.\"\n\nEven with as slowly as I was moving the water was sloshing over my hands with their death grip on the edges of the tub. The floor was getting soaked and I honestly couldn't have cared less. I was in another world. My body was wracked with spasms. It felt like something vital was being forced out of me as I exploded and ribbons of cream decorated my body.\n\nI must have blacked out again because the next thing I knew I was waking up in bed. How Eric had managed to get us both out of the tub without breaking our necks I will never know. I was trapped by his larger body again but, for the first time, I wasn't overheated. I figured out why as soon as I tried to wiggle out of his arms. The room was frigid. I stuck my head out of the cave-like shelter of his body and, discovering the room to be an icebox, I snuggled, gratefully, back into the warmth of his embrace. He hadn't stirred from his slumber and I was soon lulled back to sleep by the soothing sound of his steady breathing.\n\nI was jerked awake by something and it only took me a second to realize what it was. I was cold. \"Eric?\" I called, trying to snuggle deeper into the soft bed.\n\n\"I'm here,\" he replied and crawled back into bed. I immediately curled up to the heat of his body. \n\n\"Why is it so fucking cold in here?\"\n\n\"I turned down the thermostat last night. You said that you were hot. I forgot to turn it back up before I fell asleep,\" he explained, spooning me back into the cocoon of his larger frame. \"If this is what happens when you get cold I'm going to have an industrial AC unit installed in the bedroom.\"\n\nI didn't remember telling him that I was hot but I remembered being hot so I took his word for it. \"I didn't take you for a snuggler,\" I mumbled under the blankets.\n\n\"I never was before I met you.\"\n\n\"Aren't you freezing?\"\n\n\"No.\" He held me tighter. \"I hardly ever get cold, or hot for that matter, unless I'm sick.\"\n\n\"Lucky. I feel the cold more than most.\"\n\n\"Probably because you're underweight,\" he replied. \"I ordered food. That's why I was out of bed. It's here. Are you hungry?\"\n\n\"Starving,\" I admitted. \"But I don't want to get up. I'm starting to get warm.\"\n\n\"I'll get it,\" he offered.\n\n\"No!\" I exclaimed. \"You're the heat source. Stay.\"\n\nHe chuckled. \"The food will get cold.\"\n\n\"Better the food than me,\" I argued.\n\n\"I turned it back up,\" he said. \"It will warm up.\"\n\n\"When?\"\n\n\"Probably sometime after we've checked out,\" he laughed.\n\n\"Did you open the door for room service naked?\" I asked, feeling the heat of his bare skin against my ass.\n\nHe hesitated. \"Are you going to be upset if I say yes?\"\n\n\"Not as upset as the waiter probably was.\"\n\n\"It was a waitress,\" he admitted.\n\n\"Oh geeze,\" I grinned. \"Did she give you her phone number?\"\n\n\"Actually, she didn't bat an eyelash. She probably sees that kind of thing all the time.\"\n\n\"Nobody sees this kind of thing all the time,\" I teased, arching my back and pinning his cock between our bodies. \"Except me.\"\n\nHe kissed the top of my head. \"I think it's adorable when you get all possessive. I'm all yours, Baby. You have nothing to worry about.\"\n\nThe movement must have woken my internal organs because my tummy chose that moment to grumble and my bladder started screaming for attention. I groaned and Eric laughed.\n\n\"Stay here,\" he said. \"I'll go get the food and you can eat in bed.\"\n\n\"I can't. I have to piss.\"\n\nHe chuckled. \"You're on your own there, I'm afraid. I can't do that for you.\"\n\n\"Well shit,\" I sighed. \"Ok. Go.\"\n\nHe crawled out of the bed and I jumped up and hurried to the bathroom to take care of my bladder then scooted back under the covers. He brought a covered tray in and set it on the nightstand before sliding back in bed with me. After much grousing on my part, Eric settled behind me, leaning against the headboard while I sat between his legs and fed us both from the tray. It was almost the exact position that we had been in before I started riding him in the bathtub.\n\n\"You didn't get off last night, did you?\" I asked between bites of pancake.\n\n\"No, but it's fine.\"\n\n\"No it's not.\"\n\n\"It really is,\" he assured me. \"Don't worry about it.\"\n\n\"I'll make it up to you,\" I promised.\n\nHe chuckled. \"There's no need. I get more pleasure out of you coming than me.\"\n\n\"That's crap.\"\n\n\"It's not,\" he replied. \"I know it sounds like it. I'm sure it's bullshit for a lot of guys but it's not for me. Making you come, that's the ultimate high for me. I get such a rush from that. When you come for me it's like... I don't know how to describe it. The sounds that you make, the way that your body reacts, everything in me craves that moment when you let go and fall apart in my arms.\"\n\nWhat he said sounded like love to me but I knew better than to suggest it. If he loved me he was going to have to tell me, unprompted. I held my breath for a second, waiting. I was disappointed.\n\n\"We're going to have to get going soon,\" he said instead. \"Do you want to shower?\"\n\n\"Yes.\"\n\nWe spent much too long in the shower but, regardless of what he'd said, I needed to make amends for leaving him hanging the night before. After taking me hard against the wall, he clutched my body tightly to his. \"I'm going to miss this.\" His voice was barely a whisper as he fought for breath. \n\nMy heart rate was recovering more quickly than his, as he had done all the heavy lifting. \"You have a thing about water.\"\n\n\"Yes,\" he hissed through his teeth. \n\n\"You could get a hot tub,\" I suggested, innocently. \"I'm sure it would fit in the mortuary. Especially if you were to, say, finish the statue and move it.\"\n\nHe chuckled breathlessly and shook his head, grinning.\n\nI remembered something after we had checked out and gotten in the car with our coffees and sodas for the trip. \"You wanted to go out last night!\"\n\n\"It's ok,\" he replied. \"We were both tired.\"\n\n\"I'm sorry,\" I sighed. \"I should have tried harder to stay awake.\"\n\n\"It's fine, Rain,\" he repeated. \"I was tired too. We'll do Austin right the next time we're in town.\"\n\n\"We could stay another night, if you wanted.\"\n\n\"Nah.\" He shook his head. \"I'm really itching to get to work.\"\n\n\"Ok.\"\n\n\"Do you mind if I read while you drive?\" I asked.\n\nHe glanced at me sharply. \"You can read in a moving vehicle?\"\n\n\"Sure.\" I shrugged. \"Can't you?\"\n\n\"Hell no,\" he said. \"Nobody that I know can either. It makes people sick.\"\n\n\"Sick how?\" I asked. I had never even heard of such a thing. People read all the time on busses.\n\n\"Headaches, vomiting. Sick.\"\n\n\"Well, I don't have a problem with it,\" I told him.\n\n\"Then will you read to me?\"\n\n\"Seriously?\"\n\n\"Yeah.\"\n\n\"I'd love that.\" I grinned at him and fished around in the back seat until I found the Anne Rice book. I locked the door and got cozy leaning half on the door, half on the seat. I started reading. \"I see... said the vampire thoughtfully, and slowly he walked across the room towards the window.\" I read through the entire drive, pausing only to moisten my throat and when we stopped for a restroom break. By the time we made it to Dallas, I had just gotten to part three where Louis and Claudia move to Paris.\n\nI closed the book. \"Are you stopping?\" he asked.\n\n\"For now. We're almost there.\"\n\n\"Will you read to me while I'm working?\" \n\n\"If you like but...\" I paused.\n\n\"Why don't I like the sound of that?\"\n\n\"I was wondering if you would take me home,\" I told him.\n\n\"I am taking you home,\" he replied.\n\n\"You know what I mean,\" I sighed. \"To my own apartment.\"\n\nHe took a couple of shaky breaths. \"Are you upset with me?\"\n\n\"No,\" I assured him. \"I have to pay rent tomorrow and you want to start working. I don't want to interrupt you once you start. I think it's best if I stay at my own place tonight. Besides, I haven't been there in a week. I should check up on it.\"\n\nHe didn't respond but he passed the exit to his place and got off the highway at my exit. \n\n\"Rain? Are you going to come back?\" he asked me quietly when I opened the car door to get out.\n\n\"Yes.\" I gave him a reassuring smile. \"You have most of my clothes.\"\n\nHe chuckled. \"When?\"\n\n\"Tomorrow I guess,\" I said. \"Unless that's too soon for you.\"\n\n\"It's not too soon.\"\n\nI got out and then stopped and leaned in the car. \"How will I get in?\"\n\n\"Use the code.\"\n\nI laughed. \"I don't know the code.\"\n\n\"Ten thirty-one,\" he replied.\n\n\"Halloween?\" I smirked.\n\n\"My birthday,\" he responded.\n\nI smiled. \"And that's one less question I have to ask.\"\n\nHe laughed. \"Asshole.\"\n\n\"Your asshole.\"\n\n\"Mine,\" he nodded.\n\nI closed the door and watched him drive off. I was his, that much was a given, but I couldn't help but wonder if he was mine.\n\nAll I did that night was think about Eric. I knew that I was in love with him. I knew that I had probably always been in love with him but had never acknowledged it. What was the point? It was like falling for a movie star, futile and impossible. But, by some twist of fate, I had attained the unattainable. Eric loved me. Or did he? He hadn't said it but the way he treated me spoke volumes, right? Action speak louder than words. He didn't like to talk about himself, that's all it was. If I wanted to know how he was feeling then I would have to pay attention to him. It's what a lover should do anyway. Even though I was alone, I didn't have a problem sleeping. I had made the decision to be with Eric. I was going to move in with him. It would mean giving up my independence but Eric was worth it, right? I would have to rely on someone else for the first time in years. I was terrified.\n\nAt sunrise, I walked to Target to buy a new backpack. The one I had was falling apart and it was at Eric's. When I got back the manager was in so I paid two weeks of rent. It was a lot of money to me but I had no idea when I would be able to come back for my stuff. I cleaned my apartment and organized everything so that I'd only have to run in and get it when Eric brought me back. Then I packed the rest of my clothes, except the suit, in my new backpack, donned my cowboy hat, and set off for the nearly seven mile trek to Eric's.\n\nIt had to be around noon when I got there. The sun was bright and hot and directly overhead. I was thankful for my cowboy hat. I had no idea what my ancestry was but I tanned really well and almost never burned. However, living with Eric would mean that I would be doing the Goth thing more often than not and a Goth with a tan was just weird.\n\nI turned the corner and walked up to the gate with a smile on my face. My hand froze as I reached for the keypad. There was a car parked next to Eric's and I was certain that it belonged to that girl, Irish. I stood there for I don't know how long, staring at that dark green convertible something-or-other until the warehouse door slid open. They were laughing, Eric and that girl. I watched, rooted to the spot, as the man that I loved bent his head and captured her lips in a kiss. I didn't move. I didn't even breathe. He, eventually, pulled back and said the words that I ached to hear.\n\n\"I love you, Irish.\"\n\nI felt sick, physically ill, and I could hear the blood pounding in my ears while my heart shattered. I turned and walked back the way that I had come. \n\n\"Rain!\" I heard him shout as I walked away. \"Fuck! Rain! Stop!\"\n\nI kept going. No matter how much I wanted to, I didn't run. I knew from experience that he couldn't open the gate from that side. He'd have to pull a car onto the pressure plate or use the opener that was locked in his car. How had I let this happen to me? I knew. I knew from the get-go that I could never aspire to be his. No. That wasn't true. I had been his all along. He had just never been mine. I'd had a week with him. I should be happy with that. It was more than I had ever hoped for. Far more than someone like me would normally ever have. I had gained so much and lost so little. He had my best clothes but I was sure he'd give them back. He'd have no reason to keep them. The only thing I'd lost was my heart. It was of little consequence. Whores had no use for a heart.\n\nI had gone maybe four blocks when a car pulled up behind me, on the wrong side of the street. There was only one reason anyone would go to such lengths to get my attention. I wasn't in the mood to party but I would need the money. I didn't even attempt a smile, hoping the brim of my hat would hide the despair on my face. \n\n\"If you're hoping that he'll chase you, he won't,\" she said. It was the first time that she had acknowledged my existence. I wasn't sure how I felt about it but at least it wasn't a John.\n\n\"I don't expect that he will.\" It was true. I hoped he would but I had learned a hard lesson about hope.\n\n\"Get in the car,\" she ordered.\n\n\"Hundred bucks,\" I snapped at her.\n\nShe glared at me. She was beautiful even angry. I could see why he would want her. \"I'm not looking for a date. I just want to talk to you.\"\n\n\"I have no desire to talk to you,\" I replied. \"I don't even know you, Irish.\"\n\n\"It's Jessica,\" she told me. \"Only he calls me Irish.\"\n\n\"Well, I'm sure that you can understand if I don't say it's been a pleasure meeting you.\" I turned and resumed walking. I could hear the distinctive sound of her getting out of her car. I whipped around. \"What are you doing?\"\n\n\"If you won't get in then I'm getting out.\"\n\n\"You can't leave your car like that. It's in the middle of the street and facing the wrong way,\" I pointed out.\n\n\"Do you see any other cars around here?\" She held out her arms and spun around, indicating the deserted street. The area was full of old industrial buildings that had long since closed. Some of the buildings, like Eric's, had been converted into apartments but it was a new trend that hadn't really taken off yet. Most of the local denizens were shady, at best.\n\n\"Jessica, that's a nice car.\" I lowered my voice. \"If you leave it there it's going to be jacked in about five minutes.\"\n\n\"Then it would be so much easier on everyone if you would just get in the damn car,\" she demanded. \"I will even take you wherever you decide that you want to go... After you hear me out.\"\n\nI sighed, defeated, and got in her car. It was way down on the bottom of my list of things that I wanted to do but I cared about Eric too much to let his girlfriend risk herself or her car. The headliner was low so I had to take off my hat. I set my backpack on the floorboard and my hat in my lap.\n\n\"Cowboy hat?\" she asked as she got behind the wheel.\n\n\"Don't judge,\" I snapped. \"It's a nice hat.\" It was a Stetson and it was a quarter of a size too big for me but that was ok. It rode low on my brow and didn't smush my hair too badly. A John had given it to me as a tip after a wild ride. He'd said I was the best fuck he'd ever had. I believed him because cowboys didn't just part with their hats. It was unheard of.\n\n\"It's Rain, right?\" she asked as she pulled the car onto the right side of the road.\n\n\"Yes.\"\n\n\"Ok. I wasn't sure if that was just what he called you.\"\n\n\"Like Irish?\"\n\nShe grinned but kept her eyes on the road. \"Yes. He calls me that because of the freckles.\"\n\nI studied her profile. \"I don't see any freckles.\"\n\n\"I cover them up,\" she admitted. \"He started calling me that when we first met, before I was old enough to wear makeup. We grew up together.\"\n\n\"Oh.\" How nice for them. Childhood sweethearts. I never stood a chance. I looked out the window. I didn't know where we were going but I didn't care either. Maybe she'd drop me off the highest bridge of the mix-master. Eliminate the competition, so to speak. Not that I thought I was competition. She had already won.\n\n\"What you saw back there...\" she said. \"That's all there was. He spent the whole night talking about you.\"\n\nWhat I got out of her statement was that they had spent the night together. I was ready to throw myself off the bridge if she didn't do it for me.\n\n\"I wanted more but he turned me down. He's never done that before,\" she went on. \"He's got it bad for you.\"\n\n\"He loves you,\" I argued. \"I heard him.\"\n\nShe pulled into the parking lot of the farmer's market, shut off the car, and turned her body to face me. \"He loves me,\" she agreed. \"But not like he does you. He told me that we could never be together again. He was with you. He's never denied me before, no matter who he was dating. What does that tell you?\"\n\n\"Not as much as that kiss,\" I mumbled. \"Actions speak louder than words.\"\n\nShe nodded. \"It was a goodbye kiss, Rain. We've been lovers on and off since we were kids. We're best friends too but now, it's all we are. He won't come back to me even if you leave him. He'll just self-destruct. I know that you have known him for a while but I don't know if you know that about him. He's not going to chase you. He's made his choice and you have to make yours. He's never given his heart to anyone like this. If you walk away from him, he'll just let you. He'll believe that you didn't want him and it will kill him but he won't try to change your mind. He's never really believed that he was worthy of being loved. I blame his parents for that. They were never around. Their jobs were more important than their son and he never really learned how to bond with people.\"",
        "\"He bonds with people all the time,\" I argued. \"He has tons of friends.\"\n\nShe shook her head. \"He knows how to behave in social situations. He was trained to put on a good show for parties. He doesn't have friends. He has acquaintances.\"\n\nI thought about what she said. It was exactly what I had been thinking about since Vinyl had left.\n\n\"Then there's the other thing here, the elephant in the room,\" she continued. \"The gay thing.\"\n\n\"He doesn't seem to have a problem with it,\" I told her. \"He's constantly kissing me in public.\"\n\nShe looked like she'd been poleaxed. \"He kisses you? In public?\"\n\n\"Yes.\" I blushed. \"Among other things.\"\n\n\"Well.\" She shook her head in disbelief. \"He doesn't even do that with his girlfriends, Rain.\"\n\n\"I didn't know that,\" I admitted. \"I haven't known him to have a girlfriend. I've only known him for a year. He's been single that whole time.\"\n\nShe shook her head again. \"No he hasn't. In the past year he's had three steady girlfriends. He's only been single for the last few weeks. He broke up with the last one... Amanda?... Something like that... three or four weeks ago.\"\n\nI was too stunned to respond. He'd had girlfriends the whole time that he'd been paying me for sex? None of that made sense to me. I wasn't concerned about the infidelity. Most of my Johns were married men. What shocked me was that I had never known. I saw him out all the time I had never realized that one of those girls hanging on his every word was probably his girlfriend. The girlfriend that he was likely ditching somewhere to hook up with me. How could I have not known that?\n\n\"But we've been...\" I stuttered.\n\n\"Having sex?\" she supplied. \"So have we. This is what I'm trying to tell you. He has never given himself to one person before. Never. A few weeks ago he started on this downward spiral and cut everyone off. He wouldn't even see me and he always had some excuse to get off the phone when I called. I got tired of it and showed up the other day.\"\n\n\"Sunday.\"\n\n\"Yes.\"\n\n\"I was there.\"\n\n\"I know,\" she smirked. \"I saw you.\"\n\n\"You didn't even look at me,\" I accused.\n\n\"I didn't know who you were. He had never mentioned you to me until last night. I didn't mean to come off as rude. It never even occurred to me that you might be his boyfriend. He's never dated a guy before.\"\n\n\"What am I supposed to do with this information?\" I asked.\n\n\"Do you love him, Rain?\"\n\n\"Yes,\" I answered. \"How could I not?\"\n\n\"Then go back to him.\" She said it like it was simple. \"I love him and I will always be in his life but he's chosen you as a lover. I will respect and support that decision. I will never try to come between you two. I don't know you from Adam but if you're the person that he's fallen in love with then you have to have some redeemable qualities. I'm offering you my friendship. And, as a friend, I'm telling you that if you don't go back to him, right now, it's going to be the worst decision of your life. He's going to die inside. If you truly love him, you won't be able to live with yourself when that happens.\"\n\n\"He's not the only one dying inside,\" I whispered.\n\n\"Then I guess it's not a tough decision,\" she said as she turned and started the car.\n\nShe stopped on the street in front of the gate and fished around in her purse. \"Here.\" She handed me a business card. It read Jessica Gold, Public Relations. \"I meant what I said about us being friends. When he starts driving you crazy with his stubbornness, give me a call.\"\n\n\"Gold?\" I said. \"That doesn't sound very Irish.\"\n\n\"It's not,\" she smirked. \"I'm German. He's just a dork.\"\n\n\"Public relations?\" I chuckled. \"I had no chance, did I? You convince people to do what you want for a living.\"\n\nShe smiled at me. \"You didn't take much convincing. This is what you wanted to do anyway.\"\n\n\"You still owe me a hundred bucks,\" I teased.\n\n\"Get out of my car,\" she snarled at me playfully.\n\nI slipped the card into the front pocket of my backpack and opened the car door. \"Jessica? I'm not sure what this cost you, emotionally, but I'll always be grateful. Thank you.\"\n\nShe nodded. \"You're welcome.\"\n\nI slid the unlocked door open to see him sitting on the couch with his head in his hands before he bolted up at the sound of the door.\n\n\"Rain,\" he breathed.\n\nI closed the door behind me and locked it. I never had figured out why he didn't lock it. Even with the prison style fencing, it was still a rough neighborhood. He stood stock still as I closed the distance between us. I dropped my backpack on the floor and tossed my hat into the chair.\n\n\"Rain, I didn't,\" he whispered.\n\n\"I know,\" I replied. I stopped on the opposite side of the coffee table. \"But you and I need to talk. Really talk. Not like, talk for two minutes and then fuck for two hours.\"\n\n\"Ok.\"\n\n\"So far you've talked to Sheldon about us and Jessica about us. The person that you haven't talked to about us is me. That needs to stop.\"\n\n\"What do you want me to say?\" he asked.\n\nI moved my hat to the coffee table and sat in the recliner. If I got too close to him I'd lose my conviction and crawl into his lap. \"What am I to you?\"\n\n\"My boyfriend. My lover. My friend.\"\n\n\"Boyfriend like your girlfriends?\" I asked. \"Is this just sex to you? Don't tell me what you think I want to hear. Be honest with me. I can handle it if that's what this is to you but I need to know.\"\n\nHe sat down and leaned forward with his elbows on his knees. \"No. Maybe you could handle it but I can't. This isn't just sex to me. It never has been.\"\n\n\"Never?\" I asked. \"I just found out that you've had girlfriends and other lovers the entire time we've known each other.\"\n\nHe looked shocked for a split second. \"You've been talking to Irish.\"\n\nI nodded.\n\n\"Yes,\" he admitted. \"But doesn't that say something positive about us? I always set everything and everyone else aside to be with you.\"\n\n\"Why me, Eric?\" I asked, perplexed. \"You could have anyone. Why were you paying me?\"\n\n\"Because I wanted you,\" he admitted. \"I watched you for months before that first night. I thought the craving would go away, that it was just some passing fancy, but it didn't. It's just gotten stronger. I need you like I need air. I didn't know any other way of being with you. You never dated. I know, I paid attention. It would have made me crazy to find out that you were dating someone but it also would have given me a chance.\"\n\n\"But you kept seeing other people.\"\n\n\"Yes.\" His focus dropped to his hands clasped together between his knees. \"I thought that I could just work you out of my system. I invited all those people over hoping that you'd come, and it worked, you did. Then it took me hours to get rid of them. I felt like I was going to spontaneously combust. Then all I had the courage to do was... It wasn't enough. It made everything so much worse. I had to seek you out again. I needed more. Then, the next time, I... I was like an addict. Every time I saw you I tried to stay away from you but I couldn't. I kept trying to prove to myself that I wasn't gay. I kept fucking girls. It got to the point that I couldn't even get off unless I was with you or imagining that I was with you. The last time I was with you... like that... It was a breaking point for me. I couldn't go back and I couldn't move forward. I couldn't work and I couldn't sleep. I dumped my girlfriend, locked the door, unplugged the phone, and tried to get a grip on myself. I decided that I had to quit denying what it was. It wasn't just sex and it wasn't a phase. I quit fighting. I pulled myself together, decided that if I was going to be gay then I wasn't going to be ashamed of it, got dressed, and went out to find you. Only, in the interim, while I had my head buried in the sand, you started working at that hotel.\"\n\nHe dropped his head back into his hands. The tips of his hair touched the floor between his feet.\n\n\"You knew what I did for a living,\" I prodded. \"Why did that bother you so much?\"\n\n\"Because you didn't need me anymore,\" he mumbled into his hands before looking up at me again, finally. \"I had come to terms with the fact that I was in love with you and, suddenly, you didn't need me anymore. I had nothing to offer you.\"\n\nI got up and sat on the coffee table in front of him. We were so close that our knees overlapped. \"Say it again.\"\n\n\"I had nothing...\"\n\n\"Not that.\" I shook my head.\n\nHis lips turned up in a slight grin. \"You didn't need me,\" he taunted.\n\n\"Don't be an ass, Eric,\" I scowled. \"Say it again.\"\n\n\"I was in love with you.\" He grinned for a second and then sobered. \"I love you, Rain.\"\n\n\"That's all you ever had to offer me, Eric. That's all I ever wanted.\""
    ],
    "authorname": "Trahi",
    "tags": [
        "gay romance",
        "gay anal",
        "gay blowjob",
        "the 80s"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/rain-falls-ch-07"
}