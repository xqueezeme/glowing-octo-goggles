{
    "title": "Carol's Christmas",
    "pages": [
        "<p align=\"center\">Carol's Christmas</p>\n\nThe following was inspired in part, by an email from a reader, and is offered with all due respect to Charles Dickens.\n\nI would like to thank those who took the time to give this a beta read, and those who have offered comments and constructive criticism on my previous stories.\n\nAnd now, the disclaimers:\n\nFor those who want to say this or that would never happen, remember this is my universe, a place where nearly anything can, and often does, happen. At least on paper... In addition:\n\n<ol><li>Characters in this story may participate in one or more of the following: Smoking, consumption of adult (meaning, alcoholic) beverages, utterance of profanities.</li><li>All sexual activity is between consenting adults 18 years of age or older.</li><li>Statements or views uttered by the fictional characters in this story do not necessarily reflect the views or opinions of the author.</li></ol>\n\nPlease refer to my profile for more on my personal policy regarding comments, feedback, follows, etc. (Yes, I DO moderate comments) And please remember, this is a work of fiction, not a docu-drama...\n\n...\n\nMonday, December 20, 2021:\n\nCarol Beck sat back in her large comfortable office chair and turned her head to the speaker in the ceiling above her. As she listened, the strains of yet another Christmas song assaulted her ears.\n\n\"Dammit, if I have to hear another fucking Christmas song, I'm going to scream,\" she said softly. Closing the door to her office, she turned on a portable radio on the credenza behind her and tuned it to a classic rock station. She turned the volume up, hoping it would drown out the racket coming from above.\n\nShe sat back into her chair and kept working on the spreadsheet displayed on her large monitor. Some time later, she heard a knock on her door.\n\n\"Enter,\" she barked. The door opened and she saw the face of Jake Callahan, the current CEO of Callahan and Son Manufacturing. He was the \"son\" in the company's name and took over as CEO from his father about seven years ago. Prior to that, he was the company CFO and was the one who hired her into the Accounting Department after she graduated from college.\n\nHe was about sixteen years older than her, but at 51, was in great shape and still sported a full head of dark hair with just a bit of gray at the temples. The two of them had developed a strong platonic friendship over the years but after his wife died in a freak car accident eight years ago, they had gotten somewhat closer.\n\nOver the years, he developed strong feelings for her and wanted something more than a platonic friendship, but he wasn't willing to risk a sexual harassment claim or a lawsuit for alienation of affection. So, he took it slow and easy.\n\nCarol wasn't stupid and knew he wanted something more from her than a sympathetic ear and a sisterly shoulder to cry on. Even though she liked Jake a lot, she wasn't about to risk her marriage for a bit of strange dick, no matter how substantial it was. And yes, she noticed the bulge in his trousers but never said or did anything that wouldn't pass the husband test.\n\nThe truth was that she loved Raymond, her husband of 12 years, and she dearly loved their 9-year-old son, Tim. Even though they were going through a rough patch at the moment, there was no way she was going to jeopardize that relationship. But, she admitted to herself, she had fantasized about her boss more than once over the years. And she had been fantasizing about him a lot more in the last few months.\n\n\"Is it safe?\" he asked. She smiled and nodded her head.\n\n\"Of course, Jake, come on in, please. I just can't stand listening to that crap being piped through the offices,\" she said. He entered the office and closed the door behind him. \"Please, have a seat. What can I do for you today?\"\n\n\"I was wondering if you were going to the company Christmas party this year, or if you were going to blow it off like you did last year?\" he asked. She remembered the annual party was coming up on the 23<sup>rd</sup> and everyone would be off work until Monday, January 3. That meant she only had a few short days to get everything finished.\n\n\"I don't know, Jake,\" she said. \"You know how I am with Christmas.\"\n\n\"That's right, you and Christmas are like oil and water,\" he said.\n\n\"Yeah, and I still have all these reports to get finished,\" she told him.\n\n\"That's what you have employees for,\" he said. \"Delegate this out to them. Let them do their jobs.\"\n\n\"I guess you're right,\" she said.\n\n\"Of course I'm right,\" he said with a smile. \"That's why I'm the CEO. I delegate stuff to you, and you're supposed to delegate to them. See how that works? Why don't you shut down, take off your leash and join me for lunch. We can talk there if you want.\"\n\n\"The usual?\" she asked.\n\n\"Of course,\" he said. The usual was a quaint little sandwich shop and diner not too far from the plant. This time of day it wasn't too busy and they could eat in peace. It was something they had done three times a week for the last several years.\n\n\"What the hell,\" she said. \"Let me just task some of this stuff out and I'll meet you there in, say, 20 or 30 minutes?\"\n\n\"Sounds like a plan,\" he said. \"See you there.\"\n\nA little less than a half hour later, Carol parked her BMW and entered the diner. Jake sat at a table, waiting for her. He smiled and waved her over.\n\n\"I hope you don't mind, but I ordered your usual,\" he said.\n\n\"Pastrami on rye?\" she asked.\n\n\"Of course,\" he said, feeling proud of himself for placing her order. Of course, she had eaten the same thing at this diner for months, so it was a pretty safe guess.\n\n\"Thank you,\" she said. The waitress brought their drinks and scurried off to her station. Jake considered her as she took a sip of her coke.\n\n\"Okay. Out with it, little sister,\" he said, using his pet name for her. She smiled and set her drink down. She didn't mind him calling her that. She was an only child and the idea of being someone's \"little sister\" appealed to her.\n\n\"Whatever do you mean?\" she asked.\n\n\"Don't give me that,\" he said. \"I've known you for too long. This isn't just your normal Christmas time 'bah humbug' attitude. What's wrong? Is it the nerd?\" That was Jake's nickname for Raymond, his way of showing disrespect for Carol's husband, and she hated it.\n\n\"Please, I've asked you not to call him that,\" she said with a hint of irritation in her voice.\n\n\"You're right,\" Jake said. \"I shouldn't have said it and I'm sorry for that. But let's face it. He's a computer repair guy while you're a top executive. You deserve a lot better than that.\"\n\n\"Actually, Jake, Ray is a senior supervisory field engineer. He designs multi-million dollar network infrastructures all over the world. He's damn good at what he does, he's highly sought after and he's held in high regard,\" Carol said.\n\n\"All right. But still, you make what, three or four times what he does?\" Jake asked.\n\n\"Something like that, yes,\" she said.\n\n\"Doesn't that bother the two of you?\"\n\n\"No, not really,\" she said. \"I know what you're thinking -- that I'm the main breadwinner stuck at home with a child while he's running around the country doing what he does.\"\n\n\"Exactly,\" Jake said. \"Hell, it would bother me if my wife made three times more than I do.\"\n\n\"Ray pulls his weight,\" she said. \"And he adores little Timmy. He's a great husband and father.\"\n\n\"Who's gone all the time,\" Jake said. \"Look, little sister, I'm just concerned about you. You were there for me when my wife passed away, and I want to do the same for you. I worry about you.\"\n\n\"Thanks but I'll be fine, Jake, really,\" she said.\n\n\"But there's something else eating at you, isn't there?\" he asked. She swallowed her food, then thought for a moment before speaking.\n\n\"This Christmas Eve, it will be 15 years since my mother died of a heart attack working herself to the bone to take care of us,\" she said quietly, tears coming to her eyes at the memory of her mother. \"And it will be 25 years since my father died. He died on Christmas Day when the plane he was on crashed. He was on a trip back east and was rushing to get home to us. I was maybe nine years old at the time.\"\n\n\"After all these years working together, this is the first time you've told me all that. No wonder you hate Christmas so much,\" he said.\n\n\"Every time Raymond gets on an airplane to go to a job site, I keep thinking that maybe that's the last time I'll ever see him alive,\" she said. \"I don't know if I'm strong enough to handle that kind of loss and I don't want to end up like my mother. To be honest, I don't know how much more I can take of him being gone like this.\"\n\n\"You don't think he's having an affair, do you?\" Jake asked.\n\n\"Ray? Have an affair? Get real. No, Raymond may have his faults, but infidelity certainly isn't one of them,\" she said.\n\n\"Well, little sister, just know that I'm here for you, okay? You and little Timmy are always welcome in my home if it ever comes to that,\" he said. She smiled as she looked at him.\n\n\"Thank you, Jake, that means a lot to me,\" she said, putting a hand on his arm. Inside, she wished that it was Ray sitting here instead of Jake, but she would take what she could get. If only Ray understood how she felt...\n\n\"It's my pleasure, Carol,\" he said with a smile. They finished their meal and Carol looked at her watch.\n\n\"Oh my, I'd better get back to the office before they send out the National Guard,\" she joked.\n\n\"It's alright,\" he said. \"No one's going to dock your pay for being out to lunch with the CEO.\"\n\n\"I know,\" she said. \"It's just that I have a lot to get done. Hopefully, my people made some good progress. I'll see you later. Thanks for lunch and for letting me vent.\"\n\n\"Of course, Carol. Any time. And I'm serious. If there's anything you need... Anything at all. Let me know, okay?\"\n\n\"I will, Jake, thanks,\" she said. He watched her walk out of the diner and to her car. Ray is an absolute idiot for leaving her here alone like this, he thought. But, he added, Ray's loss could very well be my gain. He smiled at the prospect of getting between Carol's shapely legs.\n\nCarol got to her car and looked to see a dirty, raggedy-looking homeless man with tattered clothes and unkempt hair begging for change and cigarettes by the street. Everyone who walked by gave the man a wide berth, avoiding him like the plague.\n\nShe shook her head in disgust. Why can't these people just go get a job like my mother did, she asked herself. She got in her car and headed out, not giving the man another glance.\n\nShe got to her department and got caught up on the progress everyone made on the reports. Pleased, she took what she needed and went into her office. Hearing the Christmas music from the speaker overhead, she called the IT department and asked if someone could PLEASE come and do something about it.\n\nAs she sat, one of the IT guys showed up with a small ladder and turned the volume knob until the speaker was silent. Silence, she thought. Blessed silence.\n\n\"Thank you,\" she told the young man.\n\n\"You're welcome,\" he said with a smile. \"And Merry Christmas,\" he added, causing her to grit her teeth.\n\n\"And you as well,\" she said politely as he left. Why can't people just treat December 25th like any other day, she wondered. Why can't they say, \"Merry April 17<sup>th</sup>,\" or something? She closed her door and turned to her work.\n\nBefore she knew it, her employees were waving goodbye. She looked and saw it was already 5:00 pm -- time to leave work. She took a deep breath and let it out. There was no way she could go home with all this on her plate. She waved back and watched as they put their coats on and headed out. Soon, she was the only one left in the department.\n\nShe picked up her phone and called Ray's parents, since they were watching Timmy. She hated leaving the young boy with them, but they loved having him over and he enjoyed spending time with his grandparents. Ray's mother, Alice, answered the phone.\n\n\"Hi, Mom,\" Carol said. She always got along well with Ray's parents and had taken to calling them \"Mom\" and \"Dad\" shortly after she and Ray got married.\n\n\"Well, hello there, Carol,\" Alice said. \"Still at the office?\"\n\n\"I'm afraid so,\" she said. \"End of the year stuff. You know how it goes.\"\n\n\"Yes, unfortunately, I do,\" she said.\n\n\"How's my boy doing?\" Carol asked.\n\n\"He's being a little angel,\" Alice said. \"He's in the other room with his grandfather right now. He really misses his dad.\"\n\n\"I know,\" Carol said. \"So do I.\"\n\n\"Here, I'll let you talk to him,\" Alice said. A few moments later, she heard the sweet voice of her little boy on the phone.\n\n\"Hi, Mommy,\" Tim said.\n\n\"Hi, Timmy,\" Carol said. \"Are you having a good time with your grandparents?\"\n\n\"Oh yeah! Grandpa's reading a book to me right now.\"\n\n\"That's nice, sweetheart. How was school today?\"\n\n\"It was okay,\" Timmy said.\n\n\"Did you get your homework done?\" Carol asked.\n\n\"Yes, I did and Grandma even checked it over for me like you do,\" Timmy said.\n\n\"That's good,\" Carol said.\n\n\"I miss my dad,\" Timmy said. \"Do you think he'll call me tonight?\"\n\n\"I'm sure he will, sweetheart,\" Carol said.\n\n\"I hope so. Will he be home for Christmas?\"\n\n\"I believe he will. You know how much your dad likes spending Christmas with you,\" she said sadly.\n\n\"I like spending Christmas with him, too,\" Timmy said. \"Well, I know you're probably busy, so I'll let you go. I love you, Mommy!\" She couldn't help but smile. Even at such a tender age, Timmy was becoming so much like his father, so sweet and considerate.\n\n\"I love you too, sweetheart,\" she said. \"Give Grandma and Grandpa a kiss goodnight for me, okay?\"\n\n\"I will. Bye!\" She heard him pass the phone back to Alice.\n\n\"Are you gonna be working late again tonight?\" Alice asked.\n\n\"I'm afraid so, Mom,\" Carol said. \"In fact, I'll be working late every night this week. I've got to get all this done before the party on the 23<sup>rd</sup>. That's just in a couple days. Would you mind watching over Timmy unless Ray gets home first? I really hate to ask, but I'm under the gun here and with Ray gone...\"\n\n\"Say no more, Carol, I understand,\" Alice said.\n\n\"Thanks, Mom, I appreciate it more than you know,\" Carol said.\n\n\"Not a problem. We love having little Timmy here with us. He's so much like Ray and George just loves having him around,\" Alice said.\n\n\"Thanks again.\" They ended the call and Carol felt sad. She was grateful that her in-laws were kind enough to look after Timmy, but she felt somewhat ashamed that she couldn't work and take care of her son at the same time. If only Ray were home... She shook the thought out of her head and turned to her work.\n\nWhen her phone rang, she looked and saw it was Ray calling her. Why was he calling so late? It was 7:20 pm, but then she remembered the two-hour time difference between Dallas and Seattle. She answered the call.\n\n\"Hey, sweetie,\" she said. \"How are things up in Seattle?\"\n\n\"Crazy,\" he said. \"I just took a break for dinner and tried calling the house. I figured you were still at work when I got the answering machine.\"\n\n\"Yeah, end of the year stuff. You know how it goes,\" she said.\n\n\"I know. Timmy over at Mom and Dad's, I take it?\" he asked.\n\n\"Yeah, your folks have been a Godsend,\" she said. \"Little Timmy really misses you.\"\n\n\"I miss him, too,\" Ray said.\n\n\"He's not the only one,\" she said. \"I miss you so much, Ray. How much longer is this going to go on?\" This was an old argument, and one Ray hated. But he didn't want to argue with his wife. Not tonight. Not this close to Christmas.\n\n\"I miss you terribly as well. I honestly don't know. Hopefully not too much longer, but we've talked this to death. It's part of my job. I can't help it,\" he said.\n\n\"I know, I know,\" Carol said. \"I just don't know how much more of this I can handle.\"\n\n\"Join the club,\" he said.\n\n\"Are you going to be home soon? Will you be here for Christmas, at least?\" she asked.\n\n\"Oh, you've developed a love for Christmas, have you?\" he asked with a chuckle.\n\n\"Of course, I want you home right now, but it's Timmy I'm worried about. You know how much he loves spending Christmas with you,\" she said.\n\n\"And I love spending Christmas with the two of you as well, even if you hate Christmas,\" he said. \"I'm doing everything I can to get this wrapped up soon so I can get out of here and get home for good.\"\n\n\"So, you're burning the midnight oil as well?\" she asked.\n\n\"Yeah, I've been working 16 hours a day to get this finished. It's a really big project and I'd like to get it done ahead of schedule.\"\n\n\"I understand,\" Carol said. \"Just do me a favor and call your son. He really misses you.\"\n\n\"I will,\" Ray said. \"And Carol?\"\n\n\"Yes?\"\n\n\"I love you, more than you know,\" he said.\n\n\"I love you too, sweetheart,\" she said. They ended the call after exchanging sweet nothings and Carol turned back to her work. She kept at it for a little more than an hour before realizing just how tired and hungry she was. She shut down her computer, looked around her spartan office devoid of decorations, put her coat on, then turned out the lights and headed out.\n\n\"Goodnight, Mrs. Beck,\" the night security man said when she checked out of the building.\n\n\"Goodnight, Charlie,\" she said, grateful that he didn't tell her to have a Merry Christmas. Most of the employees here knew how she hated the holiday. She got into her car and headed home.\n\nHer house was easy to spot -- it was the only one on the block without any Christmas lights or decorations. Ray liked to decorate the place every year, and if she turned him loose, it could probably be seen from orbit. He would tell her it was for Timmy's benefit, but the truth was, it was also for his. He loved Christmas and Timmy got that love for the holiday from him.\n\nBut Ray had been in Seattle for much of the last six weeks, coming home only on weekends to catch up with her and Timmy. Except for last weekend, that is. He ran into a snag and his entire team worked through the weekend to get it ironed out. At least he called every night to say hello and talk to them for a bit. But it just wasn't enough.\n\nShe pulled into the garage and closed the door. She went into the house and turned off the security alarm. The place was dark and quiet. Too quiet, actually. She walked into the living room and was grateful that Ray hadn't had time to put up any decorations or trim a tree. That was something he loved to do with Timmy, but he just didn't have the time this year.\n\nShe saw the note on the kitchen table with the day's mail. It was from Alice, letting her know that she had put a lasagna in the oven since it was too hot to put in the refrigerator. She smiled at that. Alice was such a good woman and she reminded Carol a lot of her own mother. She looked through the small pile of mail -- bills, ads for credit cards, and Christmas cards from Ray's family.\n\nOf course all the cards came from his family, now hers. She was an only child, as were her parents. Her grandparents had died before her mother, so she was left with no one to call \"family.\" No aunts, uncles or cousins. Just... her. So, Ray's family became hers by extension. He came from a large family and they were all so close. She envied him for that.\n\nShe found the lasagna in the oven where Alice had left it. It was still fairly warm, so she cut herself a small chunk and sat in the living room to watch a bit of television as she ate. She ate her lasagna, enjoyed a glass of wine, locked the house up, then headed upstairs for bed.\n\nOn the way up, she stopped at a photo on the wall. It was taken when she was about seven years old, and showed her with her parents. They all smiled in the photo and seemed so happy, so full of love. She wiped a tear from her eye as she looked at the picture.\n\nIf there was any justice in the world, they would still be alive, she thought. \"Just a little justice. Is that too much to ask for?\" she said quietly before going into the master bedroom. She removed her clothes, put them in the dirty clothes hamper and slid under the covers, naked, the way she had done every night for the last 12 years.",
        "Ray slept naked as well, saying he loved the way her soft skin felt against his as he cuddled with her. She held his pillow close and inhaled his fragrance.\n\n\"Why can't you be home with me?\" she asked the pillow. \"Don't you know how much I need you right now?\" The pillow didn't answer, so she put it back on Ray's side of the bed. She thought back to what Jake had said earlier that day.\n\nYes, Ray is a good husband and father. But he's never here. It seems like lately, he's always gone. One week he's in Miami, the next in Kansas City, and now, Seattle. Where will he end up next? And for how long?\n\nAnd yes, even though he makes a good salary, she makes far more than he does. It never bothered either her or Ray before, but now... As she reflected on Jake's words, her mind began to wander and for the first time in 12 years, she actually wondered what it might be like if she took Jake up on his offer.\n\nShe knew several women -- some within the company, even -- who had stepped out on their husbands. A few of them were in situations very similar to hers -- husbands married to their work, gone all the time, leaving them at home alone to keep the home fires burning.\n\nBut she wasn't exactly Suzy Homemaker, baking cookies while her husband brings home the bacon. If anything, SHE was the main breadwinner. In that regard, Jake was right. She had encouraged Ray to do more with his career in the past, to push for advancement. But he kept telling her that wasn't the way things were done in his field.\n\n\"It will happen when the time is right,\" he said the last time they discussed the issue, which was before his trip to Seattle.\n\n\"And when will that be?\" she pressed.\n\n\"I don't know. I don't have a crystal ball,\" he said. \"Look, things are different in my line of work. Guys like me can be at the same level for years before they get promoted. That's just the way it is. You don't understand. Things change all the time, and if you don't stay up with the changes, you can left behind so fast you're head spins.\"\n\nWell, she thought, if things don't change for the better soon around here, they will. And it'll happen so fast, your head will be left spinning, Carol thought. I'm tired of waiting at home all the time. Tired of telling our little boy that his daddy will be gone for weeks at a time.\n\nShe thought about those other women and the way they talked about their extra-marital affairs. As long as their husbands didn't know, no one was hurt. Or so they said. She thought of Jake and wondered what it would be like to slip into his bed naked, what it would be like to offer herself to him the way she did with Ray.\n\nIt would be so easy to do, she thought. With Timmy gone and with Ray in Seattle, she could easily call Jake and spend the night at his place. No one would ever know.\n\nFeeling a tingle between her legs, she pulled a vibrator from her nightstand drawer and turned it on. Spreading her legs, she ran the vibrator over her sensitive skin as she rubbed herself. She slipped the vibrator inside herself and began running it in and out, the way Ray usually ran his cock in and out of her pussy, teasing her to orgasm.\n\nExcept this time, she wasn't thinking about Ray the way she normally did. Her mind was on someone else -- Jake. The more she thought about having Jake's big cock inside her, the harder she drove the vibrator into her soaking wet pussy.\n\n\"Fuck me,\" she repeatedly moaned to the empty room. She threw her covers off, spread her legs wide and pummeled her pussy with the vibrator, imagining it was Jake's big hard cock fucking her. By now, all thoughts of her absent husband were gone. He wasn't here to see to her needs, but Jake was.\n\nIn her mind's eye, Jake's organ had grown to massive proportions, dwarfing her husband's. It was slick with her juices and kept hammering at her, stretching her out as it filled her channel. She imagined it flooding her pussy with hot cum as it exploded deep inside her.\n\n\"Oh, fuck,\" she cried out as her orgasm hit. She lifted her ass off the bed as her fluids gushed from her pussy, soaking her bed. She trembled for a while longer as her body collapsed on the bed. For now, she was sated, but she knew in her mind the time was coming when she would have to sample the real thing. That is, unless Ray stepped up to the plate first.\n\nAfter she caught her breath, she put the vibrator away, and got up to change the sheets, which were now soaked. There was no way she could sleep in the wet spot she had just created. She quickly changed the bedding, putting the old sheets in the washing machine.\n\nShe made herself a cup of tea and sat in the front room wearing only her robe as she thought about her options. This was, after all, the first time she had ever even thought about cheating on her husband. Could she really bring herself to do it? There was another issue, however.\n\nWhat if Ray found out? What would he do? Would he divorce her? Or would he understand her needs and let her have her trysts with Jake when he was gone? It's not like they had ever directly discussed the issue before. It wasn't by design -- it just never came up and they each had simply assumed the other would remain faithful. She really didn't know how he would react. She ultimately decided to take it slow and easy, and see what happened after the holiday.\n\nWhen the wash cycle finished, she put the sheets in the dryer and went back upstairs. She got back into her bed and fell asleep, wondering if she really could pull it off.\n\nThe next two days were basically repeats of that Monday. She got up early, took a shower, dressed, wolfed down a bagel and a cup of coffee, went to work, stayed late, came home, brought herself off with her vibrator, then went to sleep.\n\nShe spoke with Timmy, Ray and his parents every day. On Wednesday, she went to George and Alice's house and had dinner with them so she could spend time with Timmy, who was very happy to see her. During those two days, she tried to avoid Jake as much as possible. He offered to take her to lunch both days, but she refused, using her workload as an excuse.\n\nAfter she got home from seeing Timmy that Wednesday, her phone rang -- it was Ray, so she answered.\n\n\"Are you really at home?\" he asked.\n\n\"Of course,\" she said. \"Actually, I just got home. I had dinner with your folks and Timmy tonight.\"\n\n\"That's what they told me. So, I take it you got all your year-end stuff finished, then?\" he asked.\n\n\"Pretty much. I just have some last-minute formatting stuff to do, then I'm finished,\" she said. \"So, how are things with you up in Seattle?\"\n\n\"Going very well, actually,\" he said. \"We got everything in place, and plan to make the switch-over tomorrow afternoon. If all goes well, we'll be finished tomorrow evening.\"\n\n\"So, when do you plan to come home?\" she asked.\n\n\"The earliest I can get outta here is 2:00 pm on the 24<sup>th</sup>. There's a two-hour layover in Denver so it might be fairly late by the time I get home from DFW,\" he said. \"But at least I'll be home for Christmas.\"\n\n\"Promise me?\" she asked.\n\n\"Of course,\" he said. \"God willing and the river don't rise,\" he added in a bad John Wayne impersonation. She laughed at that.\n\n\"Well, you'd better be home, buckaroo,\" she said. \"There's a little boy here who misses you something fierce. And I miss you too.\"\n\n\"I miss you guys too,\" he said. \"More than you know.\"\n\n\"I love you, Ray,\" she said quietly.\n\n\"I love you too, sweetheart,\" he said. \"Are you going to the party tomorrow?\"\n\n\"Yes, you know they expect me to be there for the whole thing,\" she said.\n\n\"You planning to spend the night there?\" he asked.\n\n\"Maybe, depends on how I feel,\" she said.\n\n\"Well, you be careful. I'd hate to see you in an accident,\" he said. They ended the call and Carol went to bed, her mind going in all directions. She loved Ray deeply but a part of her still wanted Jake.\n\nShe finished her reports by noon the next day, printed them out and hand-delivered them to Jake. He took them from her and glanced through them quietly.\n\n\"As always, Carol, you have impressed me with the detail of your reports. I'm sure the Board will agree,\" he said. \"Good job. Why don't you call it a day, give your people a little break for all the work they've done. You are going to the party this evening, aren't you?\"\n\n\"Yes, I'll be there,\" she said.\n\n\"Your husband coming with you?\" he asked.\n\n\"He's still in Seattle. He won't be able to leave until tomorrow afternoon,\" she told him. Jake nodded his head and handed her a card. \"I've taken the liberty of reserving a room for you just in case. I'd hate to see you get nailed for a DUI. You can check in any time this afternoon.\" This wasn't unusual -- executives and Board members were generally expected to stay for the whole event, and they usually got together for a short meeting after the party.\n\n\"Thank you for thinking of me,\" she said. \"I take it you reserved the penthouse suite as usual.\"\n\n\"Yes, I did. Comes complete with a hot tub and has a wonderful view of the city,\" he said. \"Maybe after the meeting you and I could, you know, take advantage of the hot tub. Feel free to bring a swim suit if you wish. Or not. I'll leave that up to you.\"\n\n\"Why, Jake Callahan, are you trying to seduce me?\" she asked with a smile. He smiled back.\n\n\"Would I do that?\" he asked. She smiled as she shook her head.\n\n\"Your incorrigible, you know that?\" she asked.\n\n\"I've been told that a time or two,\" he said. \"I'll see you tonight.\"\n\n\"I'll see you then,\" she said. Taking the card key, she left the office, sent her people home and left to get ready for the party. After having her hair and nails done, she went home and packed a few things for the night, including a tiny bikini she bought last summer and a pair of pajamas. She normally didn't wear pajamas, but she felt compelled to bring them anyway.\n\nShe put on a pair of blue jeans and a sweater, grabbed the dress she had dry-cleaned for the party and a pair of high heels and packed everything up. She loaded everything into her car and headed for the hotel downtown where the party would take place. Carrying her things, she walked into the lobby and was headed for the front desk when she heard a man's voice behind her.\n\n\"Excuse me, miss, I think you dropped your keys,\" the man said. She turned to see an attractive man with the strangest set of eyes she had ever seen. They were a piercing sky blue and had a gold speck on the outboard side of the pupils. The specks seemed to pulsate. He held a set of keys out to her. Sure enough, they were hers. She took them from the man and she felt a shock as their hands touched.\n\n\"Sorry about that,\" the man said. \"Must be static.\"\n\n\"Must be,\" she said. \"Thank you.\"\n\n\"You're welcome. Merry Christmas,\" he said with a smile before walking away.\n\n\"Yeah,\" she said. \"You too.\" She checked in and headed to her room on the fifth floor. Once there, she put her things away and soaked in the tub, being careful to not get her hair wet. She looked at her fully-nude figure in the mirror after she dried herself off and smiled.\n\nNot bad for a 35-year-old wife and mother, she thought. Thanks to her time working out in the gym over the last few years, she had managed to maintain her figure without any signs of sag. Her C-cup breasts still stood out proud, her nipples erect. Raymond loved fondling and kissing her breasts -- the same breasts that fed little Timmy when he was a baby.\n\nLooking down, she noticed the hair between her legs. She normally kept that shaved, since Ray loved going down on her hairless pussy. But it had been more than a week since she and Ray had been intimate, and in that time, she had let it go. She grabbed her razor and shaved herself clean, wondering if Jake would also like it.\n\nWhen she finished, she admired her work, and slid a couple fingers inside herself, slowly working her way to a much-needed orgasm. Dammit, Ray, why couldn't you be here, she asked herself. Don't you know how much I NEED you right now? Don't you know how badly I need your cock fucking me right now?\n\nWhen she finished, she had another thought. Tonight, she would probably cheat on her husband -- for the first time since they had become exclusive over 12 years ago. For a moment, she felt guilty. But her guilt soon turned to anger. If Ray was here, she wouldn't even be having these thoughts. But he's not here, she said to herself. And Jake is.\n\nShe looked at her face in the mirror and was instantly taken aback. For a moment, it appeared that her mother's face had somehow transposed itself over hers. She let out a yelp and jumped back, but her mother's face disappeared as quickly as it appeared. What the hell is going on here, she asked herself. She shook her head and splashed some water on her face to clear her mind.\n\nShe collected her wits, then fixed her makeup. She began to get dressed and seriously considered not wearing panties. She chose to put them on anyway, not wanting to give herself away. She might become a cheating whore tonight, but she wasn't going to advertise it. She put her dress on, not bothering with a bra, since the dress had one built in. She looked at herself again and liked what she saw.\n\nThe dress screamed \"sexy executive.\" It had a slit up one side, left one shoulder bare and hugged her curves nicely. It was sexy but not slutty. She smiled as she looked at herself in the mirror. Eat your heart out, Ray, she thought. If you were here, THIS is what you'd be escorting tonight. She slipped on her heels and looked at her watch.\n\nShowtime. By now, the room would be filling up with employees and their guests, so she decided to head down and make her presence known. The first person she saw when she got to the room reserved for the company dinner was Philip Carson, the Chairman of the Board of Directors.\n\n\"Why, Mrs. Beck, you look lovely tonight,\" he said with a smile.\n\n\"Thank you, Mr. Carson,\" she said.\n\n\"You've met my wife, Camille, haven't you?\" he asked, indicating the attractive woman with him.\n\n\"Yes, of course,\" Carol said, extending her hand. \"It's a pleasure to see you again, Mrs. Carson.\"\n\n\"Please, call me Camille,\" the older woman said. \"Where is your husband? Isn't he here with you tonight?\"\n\n\"No, Ray got stuck on a project up in Seattle. He's set to fly back home tomorrow afternoon,\" Carol said.\n\n\"I certainly hope he doesn't run into any bad weather,\" Philip said. \"I hear there's some snow storms coming through Denver over the next 24 to 48 hours.\"\n\n\"I hope so too,\" Carol said.\n\n\"By the way, I looked over your executive year-end summary. Good job, by the way,\" he said with a smile.\n\n\"Thank you, Mr. Carson,\" she said.\n\n\"You're very welcome,\" he said. \"I guess we'd better go and mingle. It's good seeing you again, Mrs. Beck. Merry Christmas.\"\n\n\"Merry Christmas to you as well,\" Carol said through gritted teeth. She grabbed a drink and walked around the room, saying hello to the employees and their guests, and finally ran into Jake. His eyes nearly popped out of his head as he took her in.\n\n\"My God, Carol, you look good enough to eat,\" he said.\n\n\"Thank you, kind sir,\" she said with a smile. \"And may I say you look quite dapper yourself.\"\n\n\"Well, thank you,\" he said. \"I've been told I clean up fairly well. Maybe after we eat, we can enjoy a dance or two.\"\n\n\"Perhaps,\" she said with a smile.\n\n\"We'd better take our seats. They're beginning to start things up,\" he said. Carol took her reserved spot, and found herself sitting next to a couple of the girls from her office. Jake took his place at the head table, next to Philip and his wife. The other board members were also at the head table with their dates. Jake stood and tapped his glass with a spoon, getting everyone's attention.\n\n\"Good evening, everyone, and welcome to the annual Callahan and Son Christmas party,\" he said. \"Philip asked me to keep this short and sweet so we can get right to the filet mignon, so here goes. After reading the year-end report provided by Mrs. Carol Beck, our esteemed CFO, I am relieved to announce that your bonus checks won't bounce,\" he said, prompting laughter throughout the venue.\n\n\"All kidding aside, it has been a challenging year, not just for us, but for everyone in this economy. Nevertheless, this has been a banner year for our company, and that's all because of your hard work, dedication and attention to detail. On behalf of the executive team, the Board and our shareholders, I want to personally thank each and every one of you,\" he said to applause.\n\n\"And I know next year will be even better. So once again, thank you. Merry Christmas to all. Enjoy!\" He looked at Philip before continuing. \"How was that?\" he asked. Philip smiled and gave a thumbs-up to even more laughter.\n\nCarol turned to her dinner and engaged in small talk with the others around her. More than one asked about Ray, having noticed his conspicuous absence. After dinner, she noticed the others were already heading for the open bar and the dancing floor. She got up just as Jake approached her.\n\n\"Nice speech,\" she said.\n\n\"Well, thank you, little lady,\" he said. \"Since it seems we're the only ones here without a date, would you care to dance?\"\n\n\"Sure,\" she said, taking a swallow of her wine. She let him lead her to the dance floor and noticed the eyes watching them. Jake held her, but not too close and not too tight. Even though everyone knew they were friends, they didn't want to give anyone the wrong impression.\n\nThey danced with various partners over the course of the night, stopping only for a drink from the open bar. Eventually, though, they found themselves dancing together more often, looking into each other's eyes as they moved across the dance floor. More than once, she felt Jake's manhood pressed against her, causing her to get excited.\n\n\"You are so beautiful, Carol,\" Jake whispered in her ear as they danced to a nice slow song. She looked up into his eyes and was about to suggest they find someplace more private. But something happened. Her head suddenly felt like it was about to explode and she collapsed to the floor, screaming, all thoughts of sex with Jake -- or anyone else -- leaving her mind.\n\nEveryone stopped what they were doing and looked at her, concerned. Jake knelt down next to her and held her head. Putting one hand on her forehead, he noticed she had a slight fever.\n\n\"Maybe we should call an ambulance,\" Philip said. Carol shook her head.\n\n\"No,\" she said weakly. \"I'm sure it's just a migraine. Just get me to my room so I can lay down, please.\"\n\n\"She's been working a lot of hours lately, so maybe she just needs some rest and something for her head,\" Jake said. He motioned to one of the attendants, who brought a glass of water and a packet of Tylenol. Jake opened the packet and gave her the pills, holding the glass so she could take a drink of water.\n\n\"Why don't you let us take her to her room, Mr. Callahan,\" Jennie, one of Carol's female employees said. Jake nodded his head and let Jennie and Connie, another of her employees, take her upstairs. He watched, concerned, as they guided her to the elevator. A half-hour or so later, they came back down and reported that they had put her to bed.\n\n\"Is she okay? Do you think we should call a doctor?\" Jake asked.\n\n\"I think she'll be okay,\" Connie said. \"Her fever seems to be easing up and she's sleeping now. I think she's just exhausted. She's been working herself to the bone every night this last week.\"\n\n\"Okay,\" Jake said. \"Thanks. I'll check on her in the morning. Maybe she just needs a good night's sleep.\"\n\n...\n\nCarol woke up in a dark unfamiliar room and wondered where she was. She looked down and saw that someone had put her into her pajamas. Then she remembered Jennie and Connie helping her into the hotel room. They also helped her change into her pajamas and put her into the bed. She looked at the clock -- 12:30 am.",
        "She swung her feet out of the bed and stopped to collect her thoughts. Then she saw a light form at the foot of her bed. She turned and saw -- her parents. Or rather, ghostly images that looked like her parents did when she was much younger.\n\n\"Momma? Daddy?\" she asked. \"Is that really you?\"\n\n\"Yes, pumpkin, it is,\" her father said, using the nickname he used when she was little.\n\n\"How can that be?\" Carol asked. \"You're dead. How do I know you're not just a dream or the result of a piece of under-cooked meat or something?\" Her mother laughed.\n\n\"No, sweetheart, it's really us,\" she told Carol. \"And yes, our bodies are dead. But that which makes us what we are -- call it our souls or our spirits -- live on.\"\n\n\"It's... complicated,\" her father said. \"One day, when you come to join us, you'll understand.\"\n\n\"Why are you here?\" Carol asked. \"What do you want with me?\"\n\n\"We want you to be happy,\" her mother said. \"And we're here to help keep you from making the same mistake I did so long ago.\"\n\n\"Mistake? What mistake?\" Carol asked, confused. The image of her mother looked at the ghostly man next to her before turning back to Carol.\n\n\"My mistake,\" her mother said. \"The one that cost your dear father his life. The same mistake you're about to make with Jake Callahan.\"\n\n\"Jake?\" Carol asked, surprised that her dead parents would know about that.\n\n\"We're dead, sweetheart. We're not stupid,\" her father said with a smile.\n\n\"That's right,\" her mother said. \"At least be honest with yourself. You want his attention. That's why you're leading him on.\"\n\n\"I'm doing no such thing,\" Carol said. \"That's not a fair statement.\"\n\n\"I beg to differ with you, Carol. Tell me something. Do you remember how old you were when your father's plane went down?\" her mother asked.\n\n\"About nine,\" Carol said.\n\n\"The same age little Timmy is now,\" her mother said. Carol reeled from that. Oh my God, she thought. That's right.\n\n\"Do you remember where you were that Christmas?\" her mother asked.\n\n\"With Grandma and Grandpa,\" Carol said.\n\n\"Again, that's right. Did you wonder where I was at the time?\"\n\n\"I wondered, but all Grandma said is that you were busy with people from your work,\" Carol said.\n\n\"Actually, it was just one person from my work,\" her mother said. \"A... man.\"\n\n\"You mean, you cheated on Dad?\" Carol asked, shocked. Her mother slowly nodded her head.\n\n\"Yes,\" she said. \"Your Grandmother called your father and said he should get home as quickly as possible. He got on the first plane he could and rushed back to be with us. Only... he never made it.\"\n\n\"Oh. My. God,\" Carol said quietly, the realization of it hitting her.\n\n\"You see, like you, I was angry with your father for being gone all the time. I never stopped to think that he worked so hard so that we wouldn't have to. He worked to put a roof over our heads, food in our mouths and clothes on our backs. But I was too selfish and self-centered to care,\" her mother's ghostly image said. \"I wanted what I wanted and that was all that really mattered to me.\"\n\n\"Sound familiar?\" her father's image asked, reminding her of the way he spoke to her when he corrected her for something she had done wrong.\n\n\"Oh, God. Yes, it does,\" Carol said quietly. \"And you forgave her for what she did?\"\n\n\"Where we are, there is no anger, no need for vengeance or retribution,\" he said. \"She was forgiven, and that's all that matters. So, yes, I forgave her.\"\n\n\"And this is... what, exactly? Some kind of intervention?\" Carol asked.\n\n\"You could call it that,\" her mother said.\n\n\"Well, you certainly got my attention,\" Carol said. \"I promise, it'll never happen to me. I love my husband and my little boy.\"\n\n\"I'm sure you do, Carol,\" her father said. \"But that's not the only issue you have, is it?\"\n\n\"I... suppose not,\" Carol said. \"So, what happens now?\"\n\n\"You will be visited by three beings,\" her mother said.\n\n\"Don't tell me, let me guess. The ghosts of Christmas past, present and future, right?\" Both of the ghostly images chuckled at that.\n\n\"No, pumpkin, this isn't a Charles Dickens story,\" her father said. \"Although the principle is somewhat similar.\"\n\n\"The first being will visit at 2:00 am. The second at 3:00 and the third at 4:00 am. They will show you different things to help you understand that your actions have long-lasting consequences,\" her mother said.\n\n\"Why? Why are you going through all this for me?\" Carol asked.\n\n\"Well, you asked for justice,\" her father said. \"Obviously, we cannot be brought back from the dead. But perhaps, we can help you avoid the mistakes we made. Not only for your sake, but for Raymond and little Timmy.\"\n\n\"Timmy?\" Carol asked.\n\n\"Of course,\" her mother said. \"Everything you do affects him as well.\"\n\n\"I... never thought of that,\" Carol said.\n\n\"Our time here is nearly up, Carol,\" her father said. \"We have to return, but remember that we're always watching over you.\"\n\n\"Can I... have a hug? Please? I've missed you both so much,\" Carol pleaded.\n\n\"We've missed you too, dear,\" her mother said. \"And we'd love to give you a big hug. But unfortunately, we cannot come in contact with each other. Just know that we love you, and we always will, no matter what.\"\n\n\"I love you,\" Carol said, tears in her eyes.\n\n\"And we love you, too, pumpkin,\" her father said with a smile. And with that, they disappeared back into the darkness. Carol reached out to the empty space where they had appeared, but felt nothing. Shaken, she got back under the covers and looked at the clock -- 1:00 am. Surely this was just a dream, she thought. But if it wasn't, she had just one hour before her first visitor arrived, so she closed her eyes and tried to sleep.\n\n...\n\n\"WAKEY WAKEY!\" Carol jumped at the sound of the voice that rousted her from her slumber. Sitting up in bed, she rubbed her eyes to see who had the audacity to wake her up. She looked at the clock in her room and saw it was 2:00 am. Oh, crap, she thought. She looked and saw a man in her room with eyes that seemed to glow. Something about him seemed familiar, but she couldn't quite place it.\n\n\"Up and at 'em,\" the man shouted. \"Rise and shine. We got places to go and people to see.\"\n\n\"Who the hell are you?\" she asked.\n\n\"Well, I'm certainly NOT the ghost of Christmas past, if that's what you're thinking,\" the man said. \"My friends call me Cam, so I guess you can too. C'mon, let's get a move on.\"\n\n\"Can I at least go to the bathroom?\" she asked.\n\n\"Well, if you must, but make it quick,\" he said. \"Hurry up now! Jeez, what is it with you women, always having to go to the bathroom, anyway?\" he sarcastically asked as Carol closed the bathroom door. A few minutes later, she came out and looked at him. Then she remembered where she had seen him before.\n\n\"I know you,\" she said. \"You're the guy who handed me my keys in the hotel lobby.\"\n\n\"Right you are,\" he said with a smile. \"Now, grab hold of my arm and hang on tight. It's time to take a little trip down memory lane.\" He looked like he was typing something on an invisible keyboard and suddenly, the two of them were in what looked like the living room of a small house.\n\nA man and a woman sat on a couch, watching a young girl play a song on an old upright piano. Next to the girl sat a small dark cat. When she finished, the man and the woman clapped their hands and the man gave the girl a hug.\n\n\"That sounded so good, pumpkin,\" the man said. \"You're really good at this.\"\n\n\"Thank you, daddy,\" the girl said, her smile lighting up her entire face. Carol wiped a tear from her eye as she watched.\n\n\"You remember this?\" Cam asked. Carol nodded her head.\n\n\"Yes. I was maybe eight years old. I wanted to take piano lessons, so my parents bought an old upright piano from a church that had just bought a new one. I took lessons for a little more than a year. I used to love playing for my daddy,\" she said. \"I know I sounded horrible, but to hear him talk, it was like listening to Liberace or something.\"\n\n\"The cat really seems to like it as well,\" Cam said.\n\n\"Twix! I almost forgot about her,\" Carol said.\n\n\"You named your cat after a candy bar?\" Cam asked. Carol laughed.\n\n\"Yeah, it just seemed to fit her,\" she said.\n\n\"How long did you have her?\"\n\n\"We lost her about six months after my father died,\" she said. \"It was a nice sunny day, so I thought I'd go ride my bicycle. She ran out of the house when I opened the door and got hit by a passing car. The guy tried to avoid her, but he couldn't. She... died in my arms,\" she added tearfully. \"Please,\" she pleaded, looking at Cam. \"Don't make me relive that.\"\n\n\"I won't,\" Cam said. \"Is that why you never let Timmy have a pet?\"\n\n\"Yes, it is,\" she said. \"He's such a sweet and sensitive boy. I don't think he could handle the loss of a pet like that.\"\n\n\"Interesting,\" Cam said, looking at her. \"What about your music?\"\n\n\"I gave that up after my father died,\" she said sadly. \"I love music, but it just didn't have the same appeal to me.\"\n\n\"Maybe you should start taking lessons again,\" he said.\n\n\"I'm too old for that,\" she said. \"Besides, I have a high-stress job with a lot of responsibilities.\"\n\n\"Nonsense,\" he said. \"As long as you're breathing, you're never too old. And if something is important enough, you can always make time for it.\"\n\n\"Yeah, but it doesn't pay the bills,\" she said softly.\n\n\"Uh huh,\" he said. \"So, you remember the way your mother struggled with the finances, then.\"\n\n\"Yes,\" she said as the scenery in front of them seemed to move in fast-forward mode, like a movie. The next thing Carol saw was her mother sitting at the kitchen table, a pile of envelopes and papers in front of her. She put her head in her hands and began sobbing quietly.\n\nCarol saw a teenage version of herself sit in the chair next to her mother. She looked at the bills on the table for a minute before putting an arm around her mother.\n\n\"If it'll help, Mom, I'll get a job too,\" she said. Her mother shook her head and looked at Carol.\n\n\"No, sweetheart,\" she said. \"Your job is to get an education so you never have to go through this.\"\n\n\"But I'm 16 now. I'm old enough to get a job. Please, Mom, let me help,\" the young Carol said. Her mother hugged her tight before speaking.\n\n\"Thank you for offering, Carol,\" she said. \"That's really very sweet. But it'll be alright. We'll manage. I want you to focus on your grades so you can get into a good college. If you really want to help, you can maybe do a bit more around the house. I've been thinking about getting second job anyway.\"\n\n\"But Mom, you're already working 10 hours a day,\" the young Carol said. \"I'm worried about your health.\"\n\n\"I know, and I appreciate it, but Mr. Harper said I can come and work a few hours at the nursery, maybe on the weekends. He's offered to pay me well for my time,\" she said.\n\n\"Alright. If it'll help, I'll take care of things around the house for you, okay?\" the young Carol asked. Her mother smiled and nodded her head.\n\n\"That would be a huge help, sweetheart. Thank you.\" Cam looked at Carol, who had tears in her eyes as she recalled the memory playing in front of them.\n\n\"Your mother died five years later, didn't she?\" Cam asked. The tears fell freely down Carol's face as she remembered that Christmas Eve. \"It's okay, I won't make you see that again.\" She nodded her head.\n\n\"Thank you,\" she said. \"Those last years before she died, she worked two, sometimes three jobs. She was determined to see me finish college. Even though I got a student loan, she made sure I had everything I needed.\"\n\n\"Your mother had a very strong work ethic. And she instilled that in you, didn't she?\" Cam asked.\n\n\"Yes, she did. I don't ever recall her going out for a date after Dad died, or doing anything just for herself. Even after the doctors told her she needed to slow down. She worked herself into that heart attack,\" Carol said. \"I promised myself I would focus and do the best I could. I wanted her to be proud of me.\"\n\n\"And I'm sure she is. But your whole life wasn't that sad, though, was it? You did have some happy memories, didn't you?\"\n\n\"Yes,\" she said as the scenery moved forward in front of them. \"I met Ray during my last year in college. He was a godsend to me. Always so happy and supportive. I couldn't help but fall in love with him. I just wish my parents could've met him. They would have loved him.\"\n\n\"Yes, they would have,\" he said as the scenery continued to fly in front of them. \"And then there was your marriage. I'm sure that was a happy memory, along with your wedding night,\" he added with a wink and a sly grin. She smiled and her face turned red as she saw her handsome husband carry her over the threshold into the hotel room where they spent their first night together as husband and wife.\n\n\"Oh, yes,\" she said.\n\n\"And then there was the birth of your son, Timmy,\" he said as the scenery showed her and Ray in a hospital room with a tiny baby. Ray smiled broadly as he watched his wife breast-feed their young baby boy. Carol also smiled as she watched her younger self tending to her newborn son.\n\n\"Oh yes, I'll never forget that,\" she said. \"Ray was so wonderful.\"\n\n\"You know, my wife and I are about to have twins in a few months,\" Cam said.\n\n\"Congratulations,\" she said.\n\n\"Thank you,\" he responded. \"So, after college, what happened?\"\n\n\"Well, Ray got a job with Apex International IT Solutions as a network engineer and I got a job in the accounting department at Callahan and Son,\" she said as the scene before them changed. \"At that time, Ray made more than I did, and we were doing okay. As time went on, he grew in his career and his company started sending him out to more complex jobs, some of them out of the area.\n\n\"Neither one of us liked the fact that he had to travel, but we managed to deal with it. After Timmy was born, he didn't have to travel quite as much, but as he got older, things picked up and soon, Ray was gone one or two weeks a month, depending on the workload.\n\n\"Jake and I worked together, but there was never that much interaction between us during the first three or four years of my employment. It was the typical employer-employee relationship. His wife died in an accident eight years ago and that's when he started opening up to me. He seemed to appreciate the fact that I let him vent his frustrations, but nothing untoward ever happened.\n\n\"Then his father retired about a year later and he took over as CEO. Since I was the senior person in the department, I became the interim CFO and Jake later made it permanent. Since then, we became friends,\" she said as the scenes in front of them sped by.\n\n\"So, when did he start expecting more than just friendship from you?\" Cam asked.\n\n\"A couple years after his wife died, I guess,\" she said. \"We started going out to lunch and talking about things. It always seemed so innocent at the time. He would let me vent about Ray's work and I would listen to his frustration at not being able to find someone he could share his life with.\n\n\"Then the little digs started coming. He never really liked Ray. I don't know why. Started calling him a nerd or 'just a computer guy.' I told him that Ray was much more than that, and he would back off a bit. But then the digs would keep coming.\n\n\"Look, I'm not stupid. I know he wanted more from me than just a platonic friendship. But I always thought I could keep things under control. He's my boss, after all.\"\n\n\"But the digs and the taunts started affecting your relationship with Ray, didn't they?\" Cam asked as the scenes continued to shift in front of them.\n\n\"Yes,\" Carol said. \"Ray and I started arguing about things -- his crazy work schedule, the bills, you name it.\"\n\n\"And that's when you started fantasizing about Jake? I have it all here in chronological order,\" Cam said. Carol nodded her head as she watched herself with a dildo in her bed.\n\n\"Yes,\" she quietly admitted. \"But I never did anything with Jake, though. I wasn't going to do that to my husband.\"\n\n\"Until tonight,\" Cam said as the scene changed before them. Carol watched herself get ready for the party, and saw the look on her face as she shaved her pussy for Jake. \"In fact, if I hadn't intervened when I did, you'd be in his bed right now, wouldn't you?\" She looked at him, shocked.\n\n\"You? You gave me that migraine?\" she asked as the scene showed her in Jake's arms on the dance floor.\n\n\"Yes, that was me,\" Cam said. \"I hope it didn't hurt too much. I had to act fast.\"\n\n\"Well, you certainly kept me from making a big mistake,\" she said. He nodded his head.\n\n\"Perhaps this time,\" he said. \"But what about tomorrow? Or the day after that? Or the next time your husband is out of town? Or the next time you feel slighted?\" Her face paled as she listened to him.\n\n\"I wouldn't,\" she began.\n\n\"That's what you told yourself before,\" he said. \"And look at what nearly happened? You do understand he was playing a long game with you, don't you? This wasn't the result of a momentary infatuation. He's been working up to this for years. And I don't think he'll stop now.\"\n\n\"Oh my God,\" she said quietly.\n\n\"Our time is about up, and I need to get you back before your next visitor arrives,\" he said. \"Seriously, if I were you, I'd spend some time re-evaluating my priorities. Maybe speak to a counselor.\"\n\n\"Maybe you're right,\" she said. He nodded his head.\n\n\"C'mon, let's go,\" he said. The images in front of them faded to black and she found herself back in her room, next to the bed. Cam was gone and she looked at the clock -- 01:55 am. She closed her eyes and tried to rest for a few minutes. But her rest was short-lived.\n\nShe felt a change in the room's atmosphere and looked up. It seemed as if the very shadows in the room moved and took another form -- the form of a tall man wearing western-style clothes, complete with a beat-up Stetson and a floor-length duster. When the shadows stopped moving, she found herself looking up at someone who looked as though he just stepped out of an old movie.\n\n\"Who... are you?\" she asked. The figure smiled as his eyes flashed.\n\n\"Name's Peace, ma'am. Justice O. Peace. Mah friends call me Eli,\" he said in a distinctive Texas drawl as he tipped his hat. \"And you must be a Carol Beck.\"\n\n\"Yes, I am,\" she said. He nodded his head.\n\n\"Ah reckon you ought to stand now so we can git moving,\" he said. She stood and watched as he produced a long rope from out of nowhere. One end had been tied into a lasso, and he put the loop of rope around her body. What is he going to do to me, she asked herself.\n\n\"Don't worry, ma'am,\" he said. \"Things might get a bit bumpy. Don't wanna lose ye.\"\n\n\"Where are we going?\" she asked.\n\n\"Here and there,\" he said. \"I understand you have a little problem with Christmas.\"\n\n\"It's not my favorite time of the year,\" she said.\n\n\"So I've been told. Mah pa used to tell me that he was once sorry for himself because he had no shoes. Then he met someone who had no feet,\" he said. \"Understand what I'm sayin'?\"\n\n\"I... I think so,\" she said. He smiled and tugged the rope.\n\n\"Hang on now, little lady,\" he said. \"Don't worry about nothin'. I got ya.\" She saw a bright flash of light and found herself standing on rocky ground outside a small adobe house. Justice stood next to her, looking at the house.\n\n\"Where are we?\" she asked.\n\n\"About seven or eight miles outside Hard Rock, Texas. Christmas Day, 1854.\"\n\n\"1854?\" she asked, shocked. He nodded his head.\n\n\"Yup,\" he said. \"Hear that singin' goin on inside?\" She listened and could hear several people singing old Christmas songs. She could make out the familiar tune to \"Silent Night\" and tears came to her eyes. They sounded so happy and content.\n\n\"Yes, I hear that,\" she said.\n\n\"Mah pa wasn't really all that religious, but he enjoyed a good ol' family sing-along from time to time,\" Justice said. \"'Specially on Christmas. Mah brothers and I used to compete to see who could sing the loudest.\" Carol looked and saw several men on horseback approaching the small homestead.",
        "\"Who are those men? Are they... Native Americans?\" she asked, shocked. Justice looked at the men on horseback and nodded his head.\n\n\"We called 'em Indians, but yes, that's exactly who they are,\" he said.\n\n\"Weren't you scared?\" she asked. He chuckled as he shook his head.\n\n\"Not at all,\" he said. \"This was originally their land. Pa worked out a deal with 'em when we first came. They let us homestead here, work the land, tend to our animals, and we shared the fruits of our labor with 'em. Most of the original tribe here had already gone south by the time we got here, but some remained. Every so often, they'd come by and we'd break bread and celebrate with 'em. Ma always cooked up a bit extra just in case they showed up.\" The door of the small adobe opened and four men came outside to greet the new arrivals. The man in front greeted the visitors and invited them inside.\n\n\"That was mah Pa,\" Justice said. As they watched, one of the four men laughed at something one of the Native Americans said. Carol looked at the man, then at Justice.\n\n\"That was you laughing, wasn't it?\" she asked.\n\n\"Yup,\" he said. \"That feller I'm with over there was Windrunner. I never could pronounce his real name, but I was told that's what it meant in English. He could run like no one I'd ever seen before.\"\n\n\"So, what's so funny?\" she asked.\n\n\"An old joke. He was telling me about a white woman he had seen in town. A fairly hefty woman, if you know what I mean. Told me he wanted to marry her. I asked him why. His answer was always the same: 'Big, strong woman. Pull plow good.' He must've told me that about 100 times. I laughed every time.\" Carol chuckled at that.\n\n\"What's happening now?\" she asked as the men went to the corral instead of the house.\n\n\"That year was pretty hard on everyone in these parts. Pa decided to give them a couple extra cows that year to help get them through the winter,\" Justice said.\n\n\"And what's that?\" she asked as one of the riders handed something long and thin to Eli's father.\n\n\"A pipe. Made specifically for mah pa,\" Justice said. \"It smoked pretty good, too, as I recall.\" When the men returned to the house, two women came out. \"That's mah Ma and mah wife, Lizzy. They came out to let us know dinner was ready.\" As they watched, all of them piled into the small house.\n\n\"So, why are we here?\" Carol asked.\n\n\"To show you that Christmas isn't about feelings or buying presents or any of the other things modern society has made it. People are born and die every day of the week -- even Christmas. This here's a day where we celebrate life and love. A day we remember the birth of a very special person -- someone who literally gave his life for all of us. Mah pa recognized that. And he made sure we understood as well.\"\n\n\"I thought your father wasn't a religious man,\" she said.\n\n\"Nope,\" Justice said. \"He wasn't. He didn't get into all that book-learning or sermonizing. He even got mad at God a time or two. But he knew how to treat people right. How to give respect, and how to help those who needed it. You don't just get that from breathing the air.\"\n\n\"I guess not,\" she said. She looked and thought she saw a tear form in the corner of his eye. He wiped his face and turned to her.\n\n\"We'd better get back. I'm not normally allowed to do this and I can't stay here long. Besides, I have more to show ye,\" he said. He tugged on the lasso and Carol found herself next to Justice in a bar. The place looked familiar and then she remembered it was a bar Jake like to frequent from time to time. He had even taken her there a couple times. She looked down at the pajamas she had on.\n\n\"Don't worry none, they can't see ya,\" Justice said. \"Just watch and listen.\" She heard loud conversation from a table of about six men. One of them was Jake, and he was talking to a friend of his, Alan Michaels.\n\n\"So, you still trying to get into the Ice Queen's panties?\" Alan asked. Carol turned red at that. She knew that several men -- and a few women -- called her that, but they never said it to her face.\n\n\"Now, be nice,\" Jake said. \"Carol Beck is a good, decent woman. Show some respect, willya?\"\n\n\"Oh please,\" Alan said. \"You've been trying to get between her legs for years now. Think you might get lucky at the Christmas party this year?\"\n\n\"I don't know. Maybe,\" Jake said. \"You never know what might happen.\"\n\n\"Her husband still outta town?\" Alan asked. Jake nodded his head.\n\n\"Yeah, the nerd is stuck up in Seattle,\" he said.\n\n\"Well, there ya go. Hubby's out of town, wife's here all by herself probably crying her eyes out. Sounds to me like you've got a good chance to score. Need something to melt that ice in her panties? I can score some good stuff if you need it,\" Alan said with a smile.\n\n\"No, I don't need any of that,\" Jake said. \"Save it for your dates,\" he added with a chuckle. Everyone else laughed at that.\n\n\"Seriously, Jake, you really trying to bed Carol?\" another man asked. She looked and saw it was Bill Fredericks, a lawyer who worked with a firm the company used. She didn't deal with him very much, but she had seen him around more than a few times. \"I mean, it's really no secret that the two of you go out to lunch fairly frequently. People have noticed, you know.\"\n\n\"It's more than that, Bill,\" he said. \"I'm looking for something long-term. I've about had it with these one-night stands. And you know me. When I set out to do something, I succeed, no matter how long it takes.\"\n\n\"Yeah, well, you be very careful,\" Bill said. \"If her husband gets evidence that you've screwed her, he could screw you and the whole company over pretty good. Remember, it's my job to protect the company from shit like this.\"\n\n\"What if I married her?\" Jake said.\n\n\"Assuming you and the company survive the fallout from any affair you might have with her? Well, you couldn't keep her on as CFO. You know the corporate bylaws don't allow for spouses to work together. You'd have to let her go and replace her. You sure you're willing to lose the best CFO the company has ever had?\"\n\n\"Good point,\" Jake said. \"I'll keep it in mind. Thanks for dumping cold water all over my dreams, buddy.\" They all laughed at that.\n\n\"Probably a good thing,\" Alan said. \"I bet if you did manage to get your dick in her, it'd probably freeze and drop off.\" There was more laughter at that. Embarrassed, Carol turned to Justice.\n\n\"Get me out of here, now,\" she angrily hissed. He looked at her and nodded his head.\n\n\"All right,\" he said. \"There's a couple more things I think you should see.\" He tugged on the rope and they found themselves in the penthouse suite Jake reserved for the night of the party. Carol looked and saw Jake in the king-sized bed.\n\nBut he wasn't alone. With him was Brenda Spencer, the head of marketing and sales. Her head rested on Jake's shoulder and one arm was draped over his chest. Brenda was recently divorced, having been caught multiple times cheating on her husband. The room reeked of sex and Carol could see small globs of goo on her face. She felt like she was going to throw up.\n\n\"I've seen enough,\" she told Justice.\n\n\"Well, then, there's one more thing you should see,\" he told her. He tugged on the lasso and the scene changed to another hotel room, this one much smaller and cheaper than the penthouse suite they had just visited.\n\nCarol looked at the bed and saw her husband on his back, softly snoring. Tears came to her eyes as she looked at him. She looked around the small room, and saw the small digital frame she gave him for his birthday.\n\nAs she looked, pictures of her and Timmy flashed across the screen. She looked at the way the frame sat on the dresser. It was placed so that Ray could see the photos from the bed. It dawned on her why, just as Justice spoke up.\n\n\"He loves you so much he wants your faces to be the first thing he sees in the morning and the last thing he sees when he goes to sleep,\" Eli said. Carol broke down sobbing as the realization hit her. She came \"this close\" to hurting a man who loved her and their child with all his heart just for some strange dick from a man who saw her as a prize in some kind of sick competition.\n\n\"How could I be so stupid?\" she asked between her sobs.\n\n\"It happens to the best of us,\" Justice said quietly. \"Come, let's go. Your third visitor will be along soon.\" One last tug on the lasso and Carol found herself back in her hotel room, tears falling down her face. She grabbed some tissues and wiped her face just as another flash of light caught her attention. She turned and saw an attractive, petite blonde woman standing before her.\n\n\"Who are you?\" Carol asked.\n\n\"My name is Adrestia Rhamnousia,\" the woman said. \"I know that's a mouthful, so please, just call me Dr. A.\"\n\n\"You're a real doctor?\" Carol asked.\n\n\"I have doctorates in a number of disciplines,\" Adrestia said. She held out her hand to Carol. \"Please, come with me.\" Carol took her hand and the two of them were suddenly looking down a long hallway with what appeared to be portals on both sides.\n\n\"What is this place?\" Carol asked.\n\n\"It's something I call the 'Hall of Possibilities.' Here, I can show you what could happen under certain circumstances,\" Adrestia said.\n\n\"I don't understand,\" Carol said.\n\n\"You see, Carol Beck, normally, by the time I get involved, the evil has already been done. With this, I can present possible outcomes in hopes of staving off disaster. Nothing you see here is carved in stone, but will happen if the status quo remains. Do you understand?\"\n\n\"I... I think so,\" Carol said. Adrestia nodded her head.\n\n\"Good. Then let's get started, shall we? Please, come with me to the first portal. Do not be alarmed. All you have to do is step into the alcove and the scenario will play out in front of you. You will not be able to interact with anyone or anything and no one will interact with you. You may experience a bit of vertigo, so keep one hand on the side rail at all times. When you feel you have seen enough, simply take one step back. Any questions?\"\n\n\"None I can think of,\" Carol said.\n\n\"Good. I will monitor your progress and answer any questions you may have. Please,\" she said, motioning to the first portal with one arm. Carol looked at the portal and carefully stepped into the alcove, her hands on the rails. As soon as she stepped inside, she instantly saw her and Ray, arguing in their home.\n\n\"How could you do this to us?\" Ray asked, his face red with anger.\n\n\"It... just... happened,\" the Carol in the scenario said. \"I'm sorry. I didn't mean to hurt you. You weren't here and it just... happened.\"\n\n\"Just happened? Are you kidding me right now? What, did you trip on something and just accidentally fall on Jake's dick, since it just 'happened' to be erect? What kind of an idiot do you think I am, anyway?\"\n\n\"I don't think you're an idiot at all,\" she said. \"Look, we've talked about this. You're always gone to God-only-knows where, for days or weeks at a time. Yeah, you call every day, but dammit, I'm the one left alone here.\"\n\n\"What, you don't think I miss you when I'm gone? For the love of God, woman, what do you think it's like for me being away from you and little Timmy? You think I don't miss you? Yes, I do miss you, but I'm not going to go and 'accidentally' fall into some woman's pussy. No, this was no accident,\" he said.\n\n\"What are you saying?\" she asked.\n\n\"I'm saying Jake has been after you for years. Ever since his wife died, he's had his eye on you. You think I don't see it? You think I'm an idiot or something?\" He stopped as something dawned on him. \"Oh my God. You screwed him during your company Christmas party, didn't you? While I was in Seattle.\" She shook her head.\n\n\"No, I got a terrible headache and ended up going to bed early,\" she said.\n\n\"You expect me to believe that?\" Ray asked.\n\n\"Please, Ray, you have to believe me. I never meant to hurt you,\" she said.\n\n\"It's not just me you've hurt, Carol,\" he said. \"It's our son, Timmy. Did you ever once think of him while Jake was seducing you?\"\n\n\"I...I,\" she stammered. Ray cut her off.\n\n\"I don't want to hear your pathetic excuses,\" he said. \"I'll be filing for divorce. And know this. I'll be asking for custody.\"\n\n\"No, you can't do that. Please, can't we get past this?\"\n\n\"There's nothing to get past,\" he said. \"You've been giving me nothing but crap for months about my work. And now you do this. Well, I certainly hope it was worth it to you. I'm going out for a couple hours. When I get back, I expect you to be gone.\" He grabbed a suitcase sitting in front of the couch and left, leaving her wracked with sobs. She stepped back out of the alcove, tears in her eyes.\n\n\"No, no, no, please, no,\" she said as she cried.\n\n\"Actions have consequences, Carol,\" Adrestia said. \"Please, step into the next alcove.\" She grabbed the handrail and stepped inside. This time, she saw herself and Jake at the diner.\n\n\"So, the nerd's filing for divorce, is he?\" Jake asked with a smirk.\n\n\"Yes, he is,\" she said. \"And he's asking for custody, maintenance and child support.\"\n\n\"Really?\" Jake asked. \"Maintenance? What a loser.\"\n\n\"And my attorney says he could get it, since I make so much more than he does,\" Carol said. \"According to the paperwork, he says he can also show that I'm not an attentive mother since Timmy had to stay with his parents while he was in Seattle.\"\n\n\"That sucks,\" Jake said. \"Look, why don't you move in with me. It'd be a lot better than staying at that motel. And you can bring Timmy over when you get visitation.\" She looked at him as she considered her options.\n\n\"Yeah, what the hell. I'll check out of the motel and come over. Most of my things are still in storage, so I'll need some help getting them out.\"\n\n\"Okay,\" he said. He looked around for a few moments and then came close to her. \"Carol, listen, I know you're going through a lot right now, but the truth is, I've fallen for you. And I know you have feelings for me as well. After your divorce, would you consider marrying me?\"\n\n\"That was fast,\" she said. \"The papers haven't even been signed yet. You're right, I do have feelings for you, otherwise I wouldn't have slept with you in the first place. Let me get through this divorce first, and then we'll revisit it, okay?\" Jake nodded his head.\n\n\"Okay, I understand. I've waited for you this long, I can wait a few more months.\" The scenario ended and Carol stepped back from the alcove, her head reeling. Adrestia motioned to the next portal and Carol stepped inside, holding the handrail.\n\nThis time, she saw herself at the front door of the house she once shared with Ray and Timmy. She knocked on the door and saw Ray's mother, Alice.\n\n\"What do you want, Carol?\" Alice asked coldly.\n\n\"I'm here to pick up Timmy,\" Carol said. \"It's my day for visitation.\"\n\n\"I'm sorry, Carol, but Timmy doesn't want to see you,\" Alice said.\n\n\"I'd like to hear that from him, if that's okay with you,\" Carol said.\n\n\"Have it your way,\" Alice said, stepping aside. Carol walked into the room and saw Timmy sitting on the couch, looking straight ahead without acknowledging her presence.\n\n\"Timmy, I'm here to pick you up,\" she said. \"Are you ready to go?\"\n\n\"I'm not going anywhere with YOU,\" he said angrily. Carol reeled back, having never heard her soft-spoken son talk like this before.\n\n\"But Timmy, it's me, your mother. I've missed you so much and I really want to see you,\" she said.\n\n\"You don't get it, do you?\" Timmy asked, his face flush with anger. \"You hurt my dad. I hate you and I never want to see you ever again.\"\n\n\"Timmy, please,\" Carol began. Timmy got off the couch and looked her in the face. She had never seen such anger and hatred in his face before.\n\n\"NO! I'm not going anywhere with you! Ever! I HATE YOU! You're NOT my mother anymore! GO AWAY!\" With that, he stormed up the stairs to his room. She heard his bedroom door slam and started to climb the stairs before Alice stopped her.\n\n\"I think you should let the boy be, Carol,\" she said. \"You heard him. He doesn't want to see you.\"\n\n\"You turned him against me. You BITCH! How dare you turn my son against me,\" Carol said. Alice folded her arms and looked at Carol as though she were an errant child throwing a tantrum.\n\n\"I understand you're upset, so I'll ignore that outburst. This time. But never again. Ray and I have both done everything we can to make Timmy realize that you're still his mother. This is his decision,\" Alice said. \"I think you had better leave now, Carol.\" Carol looked at Alice, then slowly got up and left the house. When she got back to her car, she put her hands on the steering wheel and cried like a baby.\n\n\"What have I done,\" she said through her sobs. The scenario ended and Carol stepped back, tears freely falling down her face.\n\n\"How accurate are these scenarios?\" she asked Adrestia.\n\n\"Keep in mind, they're based on an assumption that the status quo has not changed. I have found them to be just over 99 percent accurate. I know it can be painful sometimes, but as I said before, your actions have consequences,\" Adrestia said. \"If you would please, step into the next alcove. This scenario is somewhat piecemeal, but I think it adequately conveys its message. It's essentially an executive summary of the next few years of your life.\"\n\nCarol stepped into the alcove and suddenly saw herself and Ray with their attorneys in a courtroom. The judge prepared to render his decision in their divorce.\n\n\"After carefully considering all the information and evidence brought forth by both parties, I hereby grant the plaintiff's motion for divorce. Plaintiff Raymond Beck will retain sole physical custody of the minor child Timothy with visitation allowed to the defendant. Plaintiff will also retain full use the family dwelling.\n\n\"Defendant will pay child support in the amount equal to 20 percent of her net monthly income. Defendant will also pay maintenance in the amount of $5,000 per month for a period of not more than five years unless the defendant remarries in that time frame. Defendant will also pay one-half of the mortgage on the family dwelling for the same period of time.\n\n\"Both parties may retain their own retirement accounts, however, all other marital assets are to be divided with plaintiff receiving 60 percent of the assets. Defendant is required to surrender her wedding rings per the agreement and will also revert to her maiden name.\n\n\"Court adjourned,\" he said, banging his gavel. A stunned Carol turned and walked away from her attorney.\n\nThe scene changed and Carol saw herself in a small chapel wearing a wedding dress while standing next to Jake. They exchanged vows, kissed and gleefully walked down the aisle to their new life. They enjoyed a two-week sex-filled honeymoon in Hawaii before returning. When Carol walked into her office, she was met by Philip Carson.\n\n\"Good morning, Mr. Carson,\" she said with a smile. \"What may I do for you?\"\n\n\"Good morning, Mrs. Be... excuse me, Mrs. Callahan,\" he said. \"Congratulations on your marriage. I hope you had a good honeymoon.\"\n\n\"I did, thank you,\" she said.\n\n\"Unfortunately, we're going to have to let you go,\" he said.\n\n\"What? Why?\" she asked.\n\n\"Corporate bylaws prevent spouses from working on the same team,\" he said. \"You and Jake are both on the executive team, so we've got no choice but to let you go. In light of your 12 years service to the company, however, we will give you a very generous severance package. I want to say thank you for your hard work and dedication, and I'll be more than happy to provide you with a glowing reference if necessary.\"\n\n\"Uh, okay,\" she said. \"Thank you.\" Just then, Jake showed up at her office.\n\n\"What's going on here?\" he asked.\n\n\"Well, Jake, I'm just giving your bride her walking papers. You know the rules about spouses on the same team.\"\n\n\"Yeah, but, we need her,\" Jake said.\n\n\"We'll find someone to fill her shoes,\" Philip. \"We've got another problem, however. Bill Fredericks tells me the company just got served with a lawsuit accusing us of not enforcing our employee morals clause. I've also heard that some of our long-time customers aren't too pleased with what they have heard.",
        "\"The board will hold an emergency meeting tomorrow at noon to discuss this issue. In the meantime, Jake, you can consider yourself under suspension until we reach a decision. Good day,\" he added before walking out. Jake and Carol looked at each other, shocked.\n\nThe scene changed again, and Carol stood in front of the door to the new house she and Jake bought after he was forced to sell the large home originally built by his father, the founder of Callahan and Son. The five years since that last day at Callahan and Son had been tumultuous ones.\n\nThe board fired Jake, quickly replacing him with a new CEO. Unable to find a job he was willing to accept, Jake had started drinking and was forced to sell the large house. Carol was also unable to find decent work and found herself taking any job she could get just to keep the two of them afloat.\n\nEven with Philip's glowing recommendation, she quickly learned that a lot of companies weren't too willing to give a job to someone with her reputation. To cut down on her expenses, she sold her expensive car and replaced it with a two-year-old Corolla.\n\nGiven the amount of alimony and child support she was ordered to pay, her nest egg quickly diminished to almost nothing and her meager salary couldn't even begin to cover what she owed. She tried reasoning with Ray, but he was adamant that she pay what the court ordered. If she didn't pay, or file to get the order amended, he would file charges against her, he said.\n\nThe court reluctantly reduced her payments, but she still found it difficult to make ends meet. Now that five years had passed, she no longer had to pay maintenance, but the child support still put quite a dent in her budget.\n\nAs for Timmy, she continually tried reaching out to him, but he refused her calls and her cards and letter all came back unopened. The stamp on the envelopes burned a searing hole in her chest: \"Return to sender. Refused by addressee.\"\n\nAll this because she wanted some strange cock, she thought to herself before she unlocked the door of their small, older home. As soon as she walked into the small ranch home, she could hear it -- the sound of sex from their master bedroom.\n\nShe walked into the room and saw Jake balls-deep in a younger woman. They stopped only long enough to look at her, then returned to what they were doing. The smell of pot and sex filled the room, making her sick to her stomach. After she retched in the toilet, she came back into the room and lit into both of them.\n\n\"Get out of my house, you fucking whore,\" she screamed at the woman, who didn't look to be more than 19 years old. The young woman, seeing the look of murder on Carol's face, jumped out of the bed, threw her clothes on and ran out of the house. She could see that Jake was stoned and began pummeling him with her fists.\n\n\"You fucking bastard! I destroyed my family and my marriage to Ray to be with you, and THIS is how you repay me? Get out, you slimy piece of shit! Get the fuck outta my house and don't ever come back,\" she screamed. He put his hands up and tried to calm her down, but she wasn't hearing it.\n\n\"Shut up! Just SHUT THE FUCK UP! You destroyed my life, you cocksucking asshole. You won't even lift a finger to do shit around here or get a fucking job, but you have time to go pick up some floozy off the street to fuck her in MY bed! Don't say a fucking word! Just GET! OUT!\"\n\nBy now, she had gone into their closet and had tossed his clothes onto the floor. Enraged, she went into the bathroom and threw his toiletries into the bedroom as he nervously tried to pack them all up.\n\n\"Don't even bother packing your shit. JUST LEAVE,\" she screamed. After a couple hours, he left, his things crammed in the back of his car. She sat down on the couch and cried her eyes out, wishing she had never met Jake.\n\nThe scene changed yet again and this time, Carol saw herself walking into a church. She saw a notice in the paper that Raymond Beck was getting married to a Katherine Hollingsworth. They looked so good in the photo the paper published.\n\nShe took a seat in the back aisle and watched the couple exchange vows. She was shocked when she saw Timmy, who was serving as Ray's best man. It had been two years since she caught Jake in their marriage bed with that young girl and seven years since her last day at Callahan and Son. At 16, Timmy was a very good-looking young man who was the spitting image of his father. Tears fell down her cheeks as she looked at the two men.\n\nAfter the preacher instructed Ray to kiss his bride, he had them face the audience.\n\n\"I'm proud to introduce for the first time, Mr. and Mrs. Raymond Beck,\" the preacher said. Everyone clapped and Timmy turned to Katherine. What he said to her tore Carol's heart out.\n\n\"Welcome to the family, Mom,\" he said, giving her a big hug, which she returned. No one paid any attention to the 42-year-old woman who ran out of the church, sobbing. She made her way back to her tiny one-bedroom apartment and sobbed as she contemplated ending her life.\n\nCarol stepped back from the portal, shocked and shaken. She nearly fell down, but Adrestia took hold of her and kept her on her feet.\n\n\"How much more of this must I endure?\" she asked.\n\n\"There's only one more scenario, then we're done,\" Adrestia said. \"It's a bit disturbing, so I'll join you.\"\n\n\"More disturbing than what I've already seen?\" Carol asked.\n\n\"I'm afraid so,\" Adrestia said. They walked to the next alcove and Adrestia took Carol's hand before they walked in. \"Just so you know, the accuracy rate decreases the farther into the future we go. Still, it's at least 85 percent accurate, assuming no other changes.\"\n\n\"How far ahead are we going?\" Carol asked.\n\n\"This scenario is dated twenty years into the future,\" Adrestia said.\n\n\"You can predict things that far in advance?\" Carol asked.\n\n\"As I said, assuming nothing changes in the status quo, yes. But only with an 85 percent accuracy rate,\" Adrestia told her. \"Come now, let's take a look.\" Carol braced herself as they stepped into the alcove.\n\nThe first thing she noticed was the cold air. A digital clock on a nearby building read 2:15 am, December 25. Christmas Day. She could tell they were downtown and the only other person on the street was a homeless woman pushing a cart with a few belongings.\n\n\"You brought me here to see a homeless woman downtown?\" Carol asked.\n\n'You know, Carol, looking at this scenario, I can't help but be reminded of something Charles Dickens once wrote: 'Bleak, dark, and piercing cold, it was a night for the well-housed and fed to draw round the bright fire, and thank God they were at home; and for the homeless starving wretch to lay him down and die. Many hunger-worn outcasts close their eyes in our bare streets at such times, who, let their crimes have been what they may, can hardly open them in a more bitter world.'\n\n\"What was it you once thought when you saw a homeless person? Oh yeah, why couldn't he get a job like your mother did,\" Adrestia said, a slight edge to her voice. \"Looking at that woman, seeing what you've seen this night, do you still feel that way?\"\n\nCarol looked at the old woman and saw her pleading with someone who wasn't there. She sat down on the cold concrete, her hand out.\n\n\"I... I don't know. What's wrong with her?\" Carol asked.\n\n\"She's dying,\" Adrestia said.\n\n\"What's she dying from?\" Carol asked.\n\n\"From several things. An undiagnosed cancer and malnutrition for starters. She also suffers from mental issues. And on top of that, she's lonely and her heart's broken,\" Adrestia said.\n\n\"Where's her family? Can't they do something?\"\n\n\"She has no family left,\" Adrestia said. \"She burned that bridge down 20 years ago.\" Carol looked at her, shocked.\n\n\"Can't you do something?\" Carol asked.\n\n\"I am doing something,\" Adrestia told her. \"I'm trying to prevent it from happening in the first place.\" The woman moaned and fell on her side before rolling over on her back.\n\n\"We've got to do something,\" Carol said, walking up to the woman. Adrestia joined her. When Carol got to the woman, she looked and saw her face. It was wrinkled and dirty and her hair was gray and disheveled, but Carol recognized her. It was her. But she was no longer breathing and her lifeless eyes were wide open.\n\nIn the old woman's hand was a locket on a chain. The locket was open and Carol looked at the faded picture. It was an old picture of her, Ray and Timmy in happier days. Ray had given her that locket when Timmy was just five years old. She fell to her knees and began shaking.\n\n\"No. Please, Dr. A. Tell me this isn't real. I'm begging you. Tell me this won't happen. Don't let this happen to me. Please,\" she begged as hot tears streamed down her face. Adrestia looked at her but said nothing.\n\n\"Please! Make it stop! No more! I can't take it anymore,\" Carol cried as her body shook with her sobs. Adrestia pulled her up and they stepped back out of the alcove. Carol fell to her knees, sobbing uncontrollably.\n\n\"Is this what's going to happen to me?\" she asked.\n\n\"That's up to you, Carol. It's your choice. It's your life. Make it a good one. Make it count.\" Adrestia poured a cup of tea at the desk near the alcove and handed it to Carol. \"Here. Drink this. It'll help calm you down.\" Carol sipped the hot liquid and felt better.\n\n\"Is all that stuff really going to happen to me?\" Carol asked.\n\n\"If things continue as they are now, I'd have to say yes,\" Adrestia said. \"Only you can change the course of your life.\"\n\n\"Then that's what I'll do,\" Carol said. \"I promise you, Dr. A, I'll be the best wife and mother a man could ever want.\" Adrestia smiled.\n\n\"I certainly hope so, for you and your family's sake,\" she said. \"Come on, it's time you got back.\" Adrestia helped her to her feet and the next thing Carol knew, she was back in her hotel room. Exhausted, she crawled back into the bed, the images of everything she had seen still swirling in her head. Yes, she said to herself, there would be some major changes in her life. Soon, she was fast asleep.\n\nShe woke up and saw it was just a few minutes before 8:00 am. Sunlight poured into the room and she got up, wiping the sleep from her eyes. After using the bathroom, she made a cup of coffee, using the courtesy coffee pot the hotel set up in the room. She thought about her next move, and remembered something she had seen in a local paper a few days ago.\n\nShe pulled out her phone and did a quick Internet search. She found what she had seen in the paper and saw it was still active, so she pulled up her email app and sent a quick message to the address listed in the ad. Having done that, she went into the bathroom, took a shower and dressed in the casual clothes she brought the night before.\n\nHer phone buzzed right as she finished brushing her hair, letting her know she got an email. She looked and saw it was a response to the email she sent earlier. She smiled as she read the message. She sent her response and looked up as she closed out the app.\n\n\"Thank you,\" she said to no one in particular. She started packing her things from the previous night and heard a knock at the door. Looking through the peephole, she saw Jake. She took a deep breath, counted to ten, and opened the door.\n\n\"Good morning,\" Jake said with a smile. \"Mind if I come in?\"\n\n\"Good morning, Jake,\" she said. \"Of course, come on in. I was just packing up from last night.\" He stepped into the room and closed the door.\n\n\"You look much better this morning,\" he said. \"You gave us all quite a scare last night.\"\n\n\"I feel much better, thank you,\" she said.\n\n\"You wanna go down and get some breakfast?\" he asked.\n\n\"Actually, I'm just packing up to get home,\" she said. \"I have a lot to get done today before Ray gets back.\"\n\n\"Oh,\" Jake said, somewhat disappointed. He spoke again after a few awkward moments. \"Um, Carol, can I talk to you for a minute? I have something I need to get off my chest.\" She stopped packing to look at him.\n\n\"Of course,\" she said. \"What's on your mind?\"\n\n\"Well, Carol, the truth is, I'm really feeling an attraction to you,\" he said. \"I'd like to see if maybe we can get together and possibly explore our feelings for each other.\"\n\n\"Have a seat, Jake,\" she said after a few moments of silence. \"Please. We need to talk.\" He sat down in the chair next to the desk in the room, wondering what she was going to say. He didn't like the tone of her voice. She wasn't angry, but she wasn't overly friendly, either. She sat down on the bed, facing him.\n\n\"I have to admit that I felt an attraction to you as well,\" she began. \"In fact, I came... too close... to acting on that attraction last night. I came to realize last night that it would have been the biggest mistake of my life.\"\n\n\"But,\" Jake began before she held up her hand to cut him off.\n\n\"Please hear me out, Jake,\" she said. He closed his mouth and waited for her to continue. \"Yes, we've worked together for a long time. And yes, I've thought of you as a friend and a mentor. But I'm married to a man I love with all my heart. A man I promised to love, honor, cherish and forsake all others for until death do us part. And I fully intend to honor that promise. I also have a son who would be destroyed if our marriage broke apart. I can't do that to him. I won't do that to him.\"\n\n\"So, I guess the better man won after all, eh?\" he asked.\n\n\"There was never any competition, Jake,\" she said. \"And yes, he won my heart over 12 years ago. Besides, it didn't take you long to find someone to fill your bed, did it? How long have you and Brenda Spencer been an item?\" He looked at her, shocked.\n\n\"How did you know about her?\" he asked.\n\n\"I'd tell you, but you'd never believe me,\" she said with a smile.\n\n\"Honestly, last night was the first time,\" he said. \"We both got a bit drunk after you went to bed and, well, things just progressed from there.\"\n\n\"I hope things work out for the two of you,\" Carol said. \"Just be careful. The company has rules about things like office romances, you know.\"\n\n\"Yeah, tell me about it,\" he said with a chuckle.\n\n\"And while you're here, I suppose it's only fair I give you a heads-up,\" she said. \"I'll be turning in my official resignation on January 3<sup>rd</sup>.\"\n\n\"What? You're leaving the company? After all this time?\"\n\n\"I've decided it's time I get my priorities straight,\" she said. \"And part of that means leaving Callahan and Son. I've enjoyed working with you and Philip and all the others, but it's time for me to make a change.\"\n\n\"You realize you're one of the highest-paid CFOs in the area? You'll be turning your back on a very lucrative career,\" he said.\n\n\"I've come to realize there are things a lot more important than money or power,\" she said.\n\n\"What's gotten into you?\" he asked. She smiled as she considered her response.\n\n\"Again, I'd tell you, but you'd never believe me,\" she said.\n\n\"Alright, if that's the way it has to be,\" he said. \"Good luck. I hope everything works out for you. Can we at least part as friends?\"\n\n\"I think so,\" she said. \"But nothing more, you understand?\"\n\n\"I understand,\" he said. \"I don't like it, but I understand. A hug for old times sake?\"\n\n\"How about a warm handshake instead?\" she asked in response, holding out her hand. He looked at her hand and nodded his head.\n\n\"A warm handshake it is,\" he said, standing up. They shook hands and Jake started for the door.\n\n\"Oh, Jake? One last thing,\" Carol said, causing him to stop and turn back to her.\n\n\"What?\" he asked.\n\n\"Merry Christmas,\" she said. He looked at her, shocked.\n\n\"Merry Christmas to you as well... friend,\" he said with a smile. She watched him leave the room and exhaled. She felt as though a giant weight had been lifted off her shoulders. After a few moments, she turned back to gathering her things, then headed downstairs to check out.\n\nShe got to her car and put her things in the trunk. She looked toward the street and saw a young couple with a baby next to a car in the parking lot with the hood up. The woman cried as she held the baby and the man with her held her in his arms.\n\nShe froze for a moment, considering what she should do. Ordinarily, she would've just ignored them and continued on her way without a second thought. Then she remembered what she had witnessed that morning and made her decision. Rubber, meet road, she thought as she gathered her purse and walked to the couple.\n\n\"Excuse me, is everything alright?\" she asked. The two of them looked at her and she saw the tears and the expression of sadness in their faces.\n\n\"No, ma'am, it's not alright,\" the man said.\n\n\"What happened?\" Carol asked.\n\n\"Our car just broke down,\" the man said. \"We were on our way to Wichita Falls from San Antonio. My father is dying and we wanted to get there before Christmas to see him before he passes away. I just spent the last bit of money we had to get gas and the belt broke before we could make it to the freeway. I'm supposed to start working in his shop to help the family out but we can't get there now.\" Carol thought about the situation and pulled out her phone.\n\n\"Hang on, let's see what we can do,\" she told them. She went through her contacts and found what she was looking for. She hit the speed dial and waited for an answer.\n\n\"Mike's Towing and Auto Repair. This is Mike speaking,\" a man said at the other end.\n\n\"Mike, this is Carol Beck,\" she said.\n\n\"Good morning, Mrs. Beck. What can we do for you today?\" he asked.\n\n\"Listen, Mike, I'm with a couple on their way to Wichita Falls, and their car is broken down. The man says the belt is broken. Can you get someone here to fix it, please?\" she asked.\n\n\"What kind of car is it?\" he asked.\n\n\"Hold on,\" she said. She looked at the man in front of her. \"What kind of car is it?\"\n\n\"It's a 1986 Celebrity, 2.8 liter V-6,\" the man said. Carol repeated the information to Mike.\n\n\"Hold on,\" Mike said. \"Yeah, I got a serpentine belt for that here. Where is the car at?\" She told him where the car was located. \"Okay,\" Mike said. \"I can have someone there in say, about 45 minutes to an hour. Will that be okay?\"\n\n\"That'll be perfect, Mike. Thanks. And put this on my account, okay?\"\n\n\"Are you sure, Mrs. Beck? Our guys also do a quick check and top off fluids as well. It may need some coolant also,\" Mike said.\n\n\"Whatever it takes to get them to Wichita Falls safely, Mike,\" she said. She and Ray had used Mike as their mechanic for years. He did excellent work and she trusted him.\n\n\"Yes, ma'am, we'll take care of them for you,\" he said enthusiastically. She ended the call and looked at the family. They looked as though they hadn't eaten a decent meal in some time.\n\n\"The mechanic will be here in about an hour,\" she said. \"Don't worry about a thing, I've already got it covered. It's getting a bit chilly out here. Why don't we go inside and I'll get you some breakfast while you wait, okay?\"\n\n\"Are you sure?\" the man said. \"We can wait out here.\"\n\n\"Nonsense,\" she said. \"Come on, it's warm inside.\" She turned to the hotel and they followed her inside. When they got in, she led them to a table close to the window. A waiter came up as they sat down.\n\n\"Are you folks guests here?\" the waiter asked. \"The dining room is reserved for guests only.\"\n\n\"I was a guest here last night,\" Carol said. \"The Callahan and Son party. You're not going to deny a family breakfast on Christmas Eve, are you?\" The waiter looked embarrassed for a moment.\n\n\"I... suppose not,\" he said. \"We have a breakfast special on right now -- Denver omelet, hash browns, toast, bacon, juice and coffee. Will that be okay?\"\n\n\"Yes,\" Carol said. \"Two of them, and some oatmeal or cereal for the baby, please.\" She pulled out her credit card and handed it to the waiter. \"On me,\" she said. After the waiter left, she pulled out two $50 bills and handed them to the man. \"This should get you to Wichita Falls with no problems.\"",
        "\"Ma'am, I can't repay you for this,\" the man said as he took the money.\n\n\"Don't worry about it,\" Carol said. \"You take care of this lovely family and maybe one day you can pay it forward.\" The young woman looked at Carol with tears in her eyes.\n\n\"Thank you so much,\" she said. \"We've had a really hard year. God bless you.\" Carol felt the tears welling in her eyes as she recalled what she saw when she was with Justice.\n\n\"He already has,\" Carol told the woman.\n\n\"Merry Christmas,\" the woman said. The man echoed the sentiment.\n\n\"And a very Merry Christmas to you as well,\" Carol said. She left and walked back to her car, fighting tears the whole way. When she got inside her car, she looked up and saw Justice, Dr. A and Cameron looking at her with smiles on their faces. Cam gave a thumbs up.\n\nShe smiled back at them and nodded her head. She put her key in the ignition and looked back up, but they were already gone. She looked around, but didn't see any sign of them anywhere. That's odd, she thought. She pulled out and headed for home.\n\nBy the time she reached the street where she lived, she felt like a whole new person. She saw Alice's car parked out front and knew her in-laws had probably brought Timmy back home. She pulled into the garage and went inside.\n\n\"Mommy!\" Timmy exclaimed when she walked in. The boy threw his arms around her and kissed her on the cheek. She held him tight and looked up to see Alice and George.\n\n\"Thank you for looking after him,\" she said.\n\n\"It's our pleasure,\" Alice said. \"Are you alright? You seem a bit... different this morning.\"\n\n\"Actually, I feel better than I have in a very long time,\" Carol said. She looked around the house, taking in the lack of decorations. There wasn't even a tree in the front room. Something about that just seemed wrong to her. She looked back at Timmy.\n\n\"Sweetheart, do you know where your daddy keeps the Christmas decorations?\" she asked. George and Alice looked at each other, surprised as Timmy looked at his mother with shock. They hadn't used the decorations for some time now.\n\n\"Yeah, I do,\" he said.\n\n\"Would you like to put them up?\" Carol asked. Timmy's face lit up as he smiled.\n\n\"Yes, I would,\" he said.\n\n\"Dad, would you mind helping Timmy with that? And maybe some outside lights as well?\" Carol asked.\n\n\"Uh, yeah, I'd be delighted to,\" he said.\n\n\"Timmy, do you know which Christmas CD your dad likes the best?\" Carol asked.\n\n\"Yeah, I do,\" he said, walking to the music cabinet. He looked through the CDs and pulled out one of the Mannheim Steamroller disks Ray had bought years earlier. He handed it to Carol. \"He really likes this one. Are you going to let us listen to it?\"\n\n\"Of course, sweetheart. It's Christmas, isn't it?\"\n\n\"YAY!\" Timmy shouted. George and Alice looked at them and at each other, more surprised than ever as Carol put the CD in the player. She hit play and soon music filled the room. Carol smiled wide as the music played.\n\n\"Are you sure you're alright dear?\" Alice asked.\n\n\"Oh yes, Mom, I'm sure,\" Carol said. \"Now Timmy, go with your Grandpa and do as he says, okay?\"\n\n\"I will, Mommy,\" he said, grabbing George's hand. Carol heard her phone buzzing and looked to see that Ray had sent her a text message.\n\n\"Got a seat a bit early. Leaving Seattle in a half hour. See you soon. Love you!\"\n\n\"That's wonderful. Love you too,\" she wrote back.\n\n\"Ray got an early flight out of Seattle,\" she told Alice. \"Would you mind helping me make some cookies and hot chocolate, please? I'm afraid my cooking skills have taken a hit lately and I could use the help.\"\n\n\"Uh, yeah. What's going on, Carol? I've never seen you so... happy and bubbly.\"\n\n\"I'll tell you later,\" she said. \"It's... unbelievable.\"\n\n\"Okay. This I gotta hear,\" Alice said as they went into the kitchen.\n\n...\n\nRay was glad that he was able to leave Seattle early. As it turned out, a storm was building up over Denver and they missed it by about a half hour. He got into DFW, loaded up his truck and headed home. He pulled onto his street and was surprised to see Christmas lights on his house.\n\nHe saw his father and Timmy standing outside with a few of the neighbors and wondered what was going on. He pulled into his garage and went out to see what the fuss was all about. He was also surprised to hear the Christmas music coming from his front room.\n\n\"Daddy!\" Timmy screamed as he ran to meet his father. Ray picked the boy up and held him tight as he walked to the front yard. He looked at the lights and decorations on his house in shock.\n\n\"Dad,\" he said. \"What's going on? Carol is going to have a fit when she sees all this.\" George looked at his son and laughed.\n\n\"Whose idea do you think this was, son?\" George asked. Ray looked at him, not knowing what to say. Carol opened the front door and ran out to meet her husband.\n\n\"Sweetheart, I'm so glad you made it okay,\" Carol said. \"I've missed you so much!\"\n\n\"I've missed you too,\" he said. \"What's all this? And the music. I thought you hated Christmas. Okay, who are you, really, and what have you done with my wife?\"\n\n\"That was the old me,\" Carol said. \"The old Scrooge-wannabe ice queen is gone. Forever. Meet the new, improved me.\" Ray looked at her closely. Yes, she sounded like Carol. Even looked like Carol. But this woman was... happy. Cheerful. Bubbly, even. And he had to admit, more beautiful and sexy than he ever remembered.\n\n\"Alright,\" Carol announced to everyone. \"Cookies and hot chocolate for everyone. Please come in.\" Ray looked at his father, stunned, before welcoming everyone inside. Alice and Carol handed out the cookies and mugs of hot chocolate.\n\n\"You made all this?\" Ray asked.\n\n\"Well, with your mother's help,\" Carol said. Ray took a bite of a soft chocolate chip cookie and his face lit up.\n\n\"This is delicious,\" he said.\n\n\"Yes, it is,\" Timmy said, sitting at Ray's feet.\n\n\"Could I have your attention please? I have an announcement,\" Carol said from the middle of the room. Everyone looked at her, wondering what she had to say.\n\n\"I have an interview Monday morning for a new job. I'm resigning from Callahan and Son after the first of the year,\" she said.\n\n\"When did this happen?\" Ray asked, surprised. \"And why?\"\n\n\"Today,\" she said. \"As for the why, let me just say, I felt like it was time for a change. We'll talk more about it later,\" she told Ray.\n\n\"Well, in that case, I have an announcement as well,\" Ray said. Everyone turned to hear what he had to say. \"We finished the job in Seattle, ahead of schedule and below budget. The client is thrilled with our work and so is my boss. He was so thrilled that he gave me a promotion. Starting January 3<sup>rd</sup>, I'm the new manager of the local Technical Operations Center. What that means is a nice big raise and better yet, almost no travel whatsoever.\"\n\n\"Are you serious, Ray?\" Carol asked. \"No more travel? Really?\"\n\n\"That's right, sweetheart. Think you can handle having me home every day?\"\n\n\"Oh sweetheart, that is wonderful news,\" she said, throwing her arms around Ray. \"I'd love to have you home every day.\" Ray hugged his wife, then hugged his son.\n\n\"Congratulations, Ray, that's terrific news,\" George said, slapping Ray on the back. A couple hours later, everyone drifted back to their homes. George and Alice said their goodbyes but not before making sure Carol, Ray and Timmy would be over the next day to celebrate Christmas.\n\nRay put Timmy to bed and read him a story, then went into the master bedroom. After making sweet love to his wife, he held her close to him.\n\n\"You want to explain all this to me?\" he asked. \"What happened? Really?\"\n\n\"You want to know the truth? Alright, here it is. The truth is, I realized that I've been an ungrateful bitch to you for months. I came this close to destroying the best thing in my life last night,\" Carol said, holding her thumb and forefinger very close together. Ray looked at her, shocked.\n\n\"Nothing happened. At all. But it almost did,\" she said. \"And I'm so terribly sorry for that.\"\n\n\"Jake Callahan?\" he asked.\n\n\"Yes,\" she said.\n\n\"What happened?\"\n\n\"I guess you could say a guardian angel stepped in,\" she said. \"I got the worse migraine headache ever, and ended up going to bed. Alone. Then I got the mother of all wake-up calls. I realized what was going on, and I saw Jake for what he really is. All those years he acted like my friend. In reality, all he wanted was to fuck me and ruin our marriage.\n\n\"I also learned the possible consequences to our family, and I just couldn't handle it. That's when I decided to make a change. I told Jake this morning I was leaving the company,\" she said.\n\n\"That explains the strange text I got from him earlier,\" Ray said.\n\n\"What text?\" Ray grabbed his phone off the nightstand and showed it to her: \"The best man won. Congratulations -- JC.\" Carol laughed as she read the text.\n\n\"I wondered what the hell he meant by that,\" Ray said. \"Tell me, woman, do I need to go kick his ass?\"\n\n\"No dear, I have a feeling he's going to end up hoisted on his own petard soon enough,\" Carol said.\n\n\"So, what's up with this new job?\" Ray asked.\n\n\"I remembered seeing something about a nationwide non-profit that was looking for a new CFO. I verified the ad this morning and sent an email expressing interest. I got a response saying they know of me and would love to see me Monday morning,\" she said.\n\n\"Yeah, but you could be just one of many who applied for the job,\" he said.\n\n\"No, not really. Turns out one of the board members of the group is married to Callahan's COO so she knows me already. I got an email saying they got responses from a couple of people, but they weren't impressed with them. The interview Monday is pretty much a formality.\"\n\n\"What kind of non-profit is this?\" Ray asked.\n\n\"They work to help homeless families get back on their feet,\" she said.\n\n\"You? Working with the homeless? That's different,\" he said.\n\n\"Like I said, Ray, I had a major wake-up call this morning,\" she said. \"Until now, all I really cared about was myself. I never really took time to look around me or consider other people. This morning, for example, I came across a couple making their way to Wichita Falls. Their car broke down and they were stranded. Stranded, hungry and cold. And no one stopped to help them. So I did.\"\n\n\"You did?\"\n\n\"Yes,\" Carol said, wiping tears from her eyes. \"I paid to have their car fixed and bought them breakfast.\"\n\n\"Wow. That is different,\" Ray said.\n\n\"That was the first time I have ever helped anyone, Ray. And you know something? I liked doing it. It made me feel... good to know that I actually made a difference in someone's life. That's the kind of person I want to be from now on.\n\n\"I want to be the best wife and mother you could ever want. So from now on, the old, bitchy Scrooge Carol is gone. I'm so terribly sorry for any hurt I've ever caused you. You didn't deserve any of that. You're the best man I know. And I promise I'll never, ever forget that. I'm so grateful for what I have and I'll never forget that.\" She got on top of Ray and looked him in the eye.\n\n\"I love you with all my heart, Raymond Beck. And I intend to be with you until the day I die,\" she said. \"You understand me?\"\n\n\"Yes, I do,\" Ray said, wrapping his arms around her. \"And I accept your apologies. I am curious to know something, though. What made all this happen?\" He listened quietly as she told him the Reader's Digest version of what she experienced.\n\n\"That's quite a story,\" he said. \"I'd like to meet these guardian angels of yours one of these days.\"\n\n\"Who knows. Maybe you will. One day,\" she said.\n\n...\n\nThey got up early the next morning, opened their presents and went to spend the day with George and Alice. Ray couldn't believe the changes he saw in his wife. She seemed happier now than she had in the last several years. Both George and Alice also saw the changes in her.\n\nFull of turkey, dressing and pie, they finally got home about 5:00 that evening. As they pulled into their driveway, Ray spotted a basket on their front porch. He pulled into the garage and the three of them went to investigate the basket.\n\nInside was a red blanket and inside the blanket was the cutest puppy any of them had ever seen. As soon as the pup spotted Timmy, he smiled and raised a paw. Timmy petted the dog and saw a card in the basket. He handed the card to Ray, who opened it and read it with Carol.\n\n\"Merry Christmas,\" the card read. It was signed, \"Cam.\" Underneath was a post-script: \"He's already been fixed and he has all his shots.\" Ray knew that \"Cam\" was one of Carol's \"guardian angels.\"\n\n\"Can I keep him, Mommy?\" Timmy asked. \"Please? I'll take really good care of him, I promise.\"\n\n\"You'll feed and water him? You'll take him out for walks every day?\" Carol asked.\n\n\"Yes, Mommy, I will,\" the boy said. \"He can even sleep with me if he wants to.\" Carol considered the pup as she thought about it.\n\n\"Every boy needs a puppy, don't you agree?\" Ray asked Carol.\n\n\"Alright, you can keep him,\" Carol said.\n\n\"Yippee! Thank you, Mom! You're the best Mom ever! I love you so much,\" he squealed, throwing his arms around her. They gathered up the basket with the dog and went inside. Carol made them some hot chocolate and they sat on the couch to watch some television and relax.\n\n\"Ray, do you think a piano would look good over there in that corner?\" Carol asked.\n\n\"A piano?\" he asked. \"What, are you planning to take lessons or something?\"\n\n\"I used to play when I was a little girl. I've been thinking about getting back into music,\" she said.\n\n\"What would you like to learn?\" he asked.\n\n\"I was thinking that maybe I could learn to play 'Silent Night.' It's a beautiful song. Maybe if I get good enough by next Christmas, we could sing it. Together. As a family,\" she said.\n\n\"Interesting idea,\" he said quietly. \"I think we can swing that.\"\n\n\"Thank you, sweetheart,\" she said. \"That means so much to me.\" A movie began to play on the television -- \"A Christmas Carol.\" It was one of Ray's favorites. After the movie ended, Timmy turned to them with a smile on his face.\n\n\"God bless us all, Mommy,\" he said. \"Everyone.\" Carol looked at her son's face and for a moment, thought she saw her father's face superimposed on Timmy's. The face smiled and winked at her before disappearing. Carol felt a tear form in her eye.\n\n\"God bless us, my precious son,\" she said as she wrapped her arms around him.\n\n...\n\nFade to black...\n\nNotes:\n\nJustice O. Peace first appeared in my story, \".\" He has appeared in several other stories as well.\n\nAdrestia Rhamnousia first appeared in \",\" and has appeared in several other stories, including her own series, \"The Cheater's Gallery.\"\n\nCameron Drake first appeared in \",\" and is the main character in that series.\n\nTo my knowledge, there is no such town as Hard Rock, Texas, so please don't waste any time Googling it...\n\nTo the nitpickers, I exercised a bit of artistic license in the divorce court scene, so please take that into account before you say this or that wouldn't happen. This IS my universe, after all.\n\nFinally, this will be my last submission for 2021. I intend to take a few days off to be with family and friends, but will be back in January for more fun and madness. In the meantime, Merry Christmas to those who celebrate it, Happy Holidays to those who don't, and to everyone, a good night.\n\nST"
    ],
    "authorname": "saddletramp1956",
    "tags": [
        "cheating",
        "wife",
        "divorce",
        "justice",
        "christmas 2021",
        "dr a"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/carols-christmas-3"
}