{
    "title": "Let it Be",
    "pages": [
        "As always, there are snippets of my life in my stories, and I have (poorly) self-edited this one too, so try to ignore the mistakes. I do want to give a shout-out, and thank you, to KRD19254, a comment left after he read \"Parallel Lines\" told me something I didn't know about SIDS. I have incorporated a little of that into this story.\n\nLet It Be\n\nBy: NYSwede\n\n\"And in my hour of darkness, she is standing right in front of me, speaking words of wisdom, let it be.\" Let it Be, released in 1970, was written by, and lead performed by, Paul McCartney.\n\n*****\n\nMy grandmother was from Manchester, they had a little grocery shop there. I remember her telling of the troubles they had making ends meet, but she always finished the story the same way;\n\n\"Oh it was nothing, we just said, \"let it be\" and got on with our lives.\"\n\n*****\n\nIn 1964, The Beatles came to New York for the Ed Sullivan Show. In '65, they came back and played at Shea Stadium to a sold-out audience of 55,000 screaming fans... I didn't care at all.\n\nFor me, it was more of an added inconvenience than anything else.\n\nThe Shea Stadium subway stop was called Willets Point back then and was also the stop for the Worlds Fair.\n\nOver fifty million people came into our neighborhood over the two years (1964 and 1965) the World's Fair was held.\n\nI don't want to complain, but we lived on 112th Street in Corona, about a half-mile from Shea Stadium and the main entrance to the Fair. It was the middle of August, and for maybe six hours before and four hours after, the subways were packed, the streets were blocked, every road was backed up. People tried to park in our driveway. When that didn't work, they double-parked all the way down the block, of course blocking any car that was parked along the curb.\n\nRoosevelt Ave was a mess. That meant getting back and forth from anywhere, meant walking, or my dad driving and fighting the crowds. I liked The Beatles as much as any 16 year old, but having the concert so close was a pain.\n\n*****\n\nThey came back to Shea in 1966, also in August. Things were different. First of all, the World's Fair was gone, second; I had a job. I sold souvenirs at a concession stand at Shea Stadium! If you're not from New York or never went to Shea Stadium, I'll try to explain;\n\nThe number 7 subway is elevated above Roosevelt Ave from just outside of central Flushing. It runs above ground to where Queens is separated from Manhattan by the East River. It goes underground there, on its way into the city.\n\nAt Willets Point, there was an elevated walkway leading from the subway platform to the stadium; along that walkway was a circular platform with three staircases leading in different directions. The concession stand I worked at was on that platform.\n\nWhen the Mets were playing, we'd sell shirts, banners, bobbleheads, baseball caps, and any other Mets-themed items they could think of. We got free food and a pretty good hourly rate.\n\nWith The Beatles in town, we restocked with posters, banners, and all sorts of little things that had one or all four Beatles on them. Most of the shoppers were girls. We'd get their attention with a picture of Paul or Ringo and see what we could sell. It was hard work but fun with lots of eye candy.\n\nIt was also probably the worst place on the planet to chat up or meet a girl. They were there to see The Beatles or one particular Beatle; anyone else was just in the way. I did manage to catch the eye of some girls from school, they were friendly enough, but I'm not a Beatle. I thought... It is what it is, just let it be.\n\nAs the crowds coming off the trains thinned, the noise in the stadium increased. At some point, our boss said, that's it for now. If you're around when they come out, you can get another hour or two on your timesheet if you want, but you don't have to stay until it's over.\n\nAfter locking up, I walked down the stairs from the platform and started to walk around the stadium on the Roosevelt Ave side; and thought, \"why not?\"\n\nAs I mentioned, I lived nearby, so I knew how to get into Sea Stadium faster than anyone with a ticket. One spot along the wall where the inside walkway handrail was only about 12 feet off the ground was one of the easiest ways in.\n\nI ran straight at the outside wall, put my foot on it, and jumped. I grabbed the railing with one hand, pulled myself up, and hopped over; it was something I had done a dozen times to see baseball and football games. I was in the walkway leading to the field-level box seats.\n\nThe Ronettes had just started, which would mean The Beatles would be up next. The screaming just intensified from there. I stayed through the Ronettes first number but couldn't hear a thing;\n\nI thought,\n\n\"I'm out of here.\" turned, and headed back down the ramp to the exit.\n\nOnce outside, I continued my walk home. As I got to the small ticket booths that were away from the stadium, I couldn't believe it; I could hear the Ronettes singing. I stopped and listened. I heard the good and the bad; I'm sure they couldn't hear each other, so once in a while, they'd go off-key, or be out of sync. I guessed the placement of the speakers allowed the\u00a0music to echo through the tunnels and exit ramps, out to that spot.\n\nI moved closer to the stadium but couldn't hear as well; I backed away and found I heard it best with my back to one of the small ticket booths. So, I decided to stay awhile. I trotted back a few steps, turned and ran straight at the booth, planted a foot on the wall, one, two, three, and I was sitting on the roof of the kiosk. I started to enjoy the concert; I may also have been the only person who could hear it.\n\nI was up there for maybe three or four minutes when I saw Danielle Simpson. She was a girl I knew from Flushing High School, coming from what we called the front of the stadium; she was crying.\n\nI called to her; \"Hey, are you alright?\"\n\nShe looked around for a little bit,\n\n\"John, what are you doing up there?\"\n\n\"I'm listening to the concert; why are you crying?\"\n\nI hopped down and walked over to her. We knew each other, but I wouldn't have said we were close, but as I approached, she practically fell into my arms and started to cry out loud.\n\nI didn't know what to say or do, so I just held her like I would a child, with enough strength so she'd know I was there, but gently enough, so she didn't feel threatened.\n\n\u00a0\n\nEventually, the crying became sobs and then sniffles.\n\n\"I, I...\"\n\nShe couldn't get it out and started to cry again.\n\nI can't imagine what we looked like; I'm the whitest guy you will ever meet. 6'2\" and I've had pure white platinum blonde hair since I was born. Back then, I wore it pretty long. I had a \"golfers\" tan, that was more red than tan, from working outside all summer, which made my hair look even whiter.\n\nDanielle was a perfect combination of her parents, with a great smile. She was tall enough to put her head on my shoulder, so I'm guessing 5'10\" or so. She had light caramel color skin that I was finding to be very soft. Her hair was long, it looked and felt like black silk.\n\nEventually, she calmed enough to explain that she had come to meet Dave Petersen, a guy we knew from school. It was supposed\u00a0to be their first date, but when she arrived at Gate E, he introduced her to his girlfriend.\u00a0\n\nHe had told Danielle he had broken up with her, which I guess was true for a few hours. They had gotten back together that afternoon. He said he had called her house, but she had already left for the concert. He was sorry, blah, blah, blah, but had no problem leaving her standing there, alone, without a ticket.\n\nShe was sad, embarrassed, and felt stupid for trusting someone who wanted \"to meet at the gate\" rather than picking her up at her house. She was walking back to the subway when I saw her crying.\n\nWe stood there for a while; I let her talk and cry, cry and talk. I felt bad for her but was also glad she hadn't gone with Dave. He was a well know dickhead, and was always looking for some type of angle.\n\nI wasn't very confident with girls, my family was poor, and we lived in what was considered a not so great, part of town. I had no problem being friends and even speaking with girls in a social or school setting, but if I, or they, became interested, I choked up and backed away. This was different; I was helping someone who was sad and needed a little kindness.\n\n\"I have an idea; come sit with me for a bit; we'll hear some of the music, and I'll make sure you get home.\"\n\n\"You want me to sit up there?\"\n\n\"Yes, it's easy, here....\"\n\nWe walked over to the kiosk. I bent my leg at the knee, I pointed to my thigh:\n\n\"Step on that with your left foot....\"\n\nI held her hands,\n\n\"Now step onto my shoulder with your right, and now your left foot on the other shoulder... Okay, now I'm going to lift you a little; when you're high enough, turn and put your buns on the roof.\"\n\nShe giggled and repeated \"Buns\" but was sitting right where I had been. I took a few steps back and was quickly sitting next to her.\n\n\"I can't believe it; we can really hear them, and so clearly.\"\n\n\"Crazy, right? I discovered it by accident when I was walking home from work.\"\n\n\"I thought I saw you, up at that round platform, you were selling all that Beatles stuff.\"\n\n\"Yep, that was me. I've been working there all summer. Last year I worked the Willets Point information booth at the World's Fair before it closed.\"\n\n\"We went to the Fair, the lines were long, but it was interesting.\"\n\n\"I was only allowed to work part-time but went to the Fair, pretty much every day. I rode in a new Mustang convertible in the Ford Pavilion, saw GE's Carousel of Progress at least 50 times, and I know this isn't cool, but I really liked the robotics; I think they called it Animatronics, in the Hall of Presidents.\"\n\n\"We didn't see any of those; my dad isn't a big fan of crowds or standing in line.\"\n\n\"The Fair's gone, but there's no game tomorrow, so I'm off. We can walk around the park, I can show you where everything once was and tell you what I know about all the pavilions and exhibits. You'll, sort of see, the whole Fair in a one day, and with no lines.\"\n\n\"That sounds nice; I can pack a picnic lunch; let me just check with my folks when I get home.\"\n\nWe sat there and listened; I held her hand.\u00a0\n\nEven though just like The Ronettes, The Beatle screwed up now and then, it was still great to hear them. They had just finished Paperback Writer and were starting on Long Tall Sally when I said,\n\n\"We'd better get going.\"\n\n\"Why? This has\u00a0been so nice?\"\n\n\"It has, and I wouldn't have missed being here with you for anything; I'm just imagining what it's going to be like when 40,000 people start to leave a few minutes from now.\"\n\n\"Oh! I hadn't thought about that, but it makes sense; how do we get down?\"\n\nI hopped down and held my hands up, \"jump to me.\" Danielle didn't hesitate and jumped. I caught her at the waist and gently let her down, maybe a little closer to me than needed.\n\nI was going to walk her to the train station but ended up taking her home. It was about 11:00, her parents were up, and while it was a little tense at first, once Danielle explained who I was and why I was bringing her home, everything changed.\n\nI had seen her parents at school. At their home, her dad seemed even larger than I remembered. He supervised a bunch of Army recruiters, so he was still in his uniform; he was a Green Beret Sargent with a ton of medals.\u00a0\n\nHe shook my hand to thank me for taking such good care of his daughter; my\u00a0hand in his looked like a small fish in a brown bun. It almost made me laugh.\n\nHer mom looked like a model; she was tall and slender, like Danielle with the same soft-looking skin, only lighter, and the same long hair. They met in Vietnam when he was sent as an advisor to the French. That was 1950; Danielle was born in '51.\n\nHer mother said;\n\n\"Please come, sit down; we have chocolate cake; would you like some?\"\n\n\"Mom, he was just doing me a favor....\"\n\nI think I surprised her when I said;\n\n\"I would love some, do you have milk?\"\n\nHer father patted me on the back.\n\n\"Just the way I like it... hey, you're pretty solid; do you play ball?\"\n\n\"No sir, I was a quarterback growing up, and according to Coach Wilson, I'm the best high school quarterback he's ever seen, but... I know him and his whole family pretty well, including his son, who is in my grade.\n\nDanielle quietly said, \"Michael Wilson.\"\n\n\"Right, Mike. Well earlier this summer, Coach Wilson came over to our house to speak with me and my father. He was sad. He confided in us that he had worked as a coach all these years just so his son could get a scholarship and get a free ride for college. Unfortunately, the best position to ensure that would happen; is quarterback. So his son is going to be the quarterback in the fall....\"\n\n\"That doesn't seem fair.\"\u00a0I liked that her dad thought that.\n\n\"It doesn't really matter, I have already enlisted, I won't be going to college, so I told him I understood, he suggested I could be a halfback, but I'm not that guy, so I quietly left the team.\"\n\nHer dad quickly changed the subject;\n\n\"Army?\"\n\n\"Haha, sorry, no, Navy\".\n\n\"Well, I won't hold that against you.\" We all laughed.\u00a0\n\nI stayed for cake and even had some time to sit out on their back porch with Danielle.\n\n\"John, all the girls, and a couple of the student teachers, have mad crushes on you, a couple said they practically threw themselves at you, but you never date? Everyone thinks you're dating someone from your neighborhood or church.\"\n\n\"Haha, and at church, they think I'm dating someone at school; I don't know why I feel safe telling you this... but the truth is, I don't have any money, and would never ask my parents; I'm sure they'd say no anyway.\"\n\n\"Oh, I didn't know; I don't think anyone does.\"\n\n\"You're the only person I have ever told, but it's more than that, I also haven't a clue how to act romantically or like a boyfriend, so I keep it friendly, distant, and casual.\"\n\n\"...and run away when it gets serious.\"\n\n\"Well, more like fade away, but yes.\"\n\n\"You better not do that to me. You saved me, turned a nightmare into a dream, brought me home like a gentleman, and I can tell my parents really like you. Trust me, dad never likes anyone. John, I have always liked you; you have always treated me, I don't know, the way you treat everyone.\"\n\nShe leaned in closer and closed her eyes. Even though I'm pretty clueless about girls, I knew she wanted me to kiss her, but I did what I always do and backed off.\n\n\"Danielle, you're amazing, and I had a great time tonight, and I'm looking forward to showing you The World's Fair Park, tomorrow....\"\n\n\"Oh my gosh, I forgot to ask my folks; I'll be right back.\"\n\nI heard her and her mom talking, laughing, and even giggling. She was talking over her shoulder as she came back out to the patio;\n\n\"Yes, dad, I'll get the details right now, thanks.\"\n\n\"I'm guessing they want to know what I have planned for their daughter.\"\n\n\"Yes, do you mind speaking to them?\"\n\n\"Not at all.\"\n\nWe went back into the house, and I explained that I had been an employee so I knew the park very well, we would take the subway, start early, and I'd show her what I remembered about where everything was. There's a lovely garden near the Hall of Science Museum where we'll break for lunch, and then I'll try to describe all the littler exhibits and stuff that was out of the way, on the way back to the subway.\n\nHer father reached out to shake my hand; he looked me in the eye and asked;\u00a0\n\n\"Will you look after my daughter?\"\n\n\"You can count on it.\" He smiled.\u00a0\n\n\"Are you sure you don't want to be in the Army? You're going to be a great asset to this country.\"\n\n\"I've already signed up on a delayed entry; I leave for basic at the end of the school year.\"\n\nWe had a great day at the park; I showed her the Aquacade, near the lake, it was leftover from the 1939 World's Fair. When we were younger, we used to go there and swim before they built the new Fair.\n\nI stood in an open area with my arms out and said,\u00a0\n\n\"This is where they had the log flume ride; kids used to stand, on a little bridge, just about here, to get sprayed when the logs came down the slide.\"\n\nThe New York State Pavilion was there but wasn't being used; I had heard they were planning on putting a restaurant up in the towers. We walked past the heliport; there was a restaurant with a nice view of the park. I was pretty sure helicopters still landed on the roof.\n\nThe New York City Pavilion was also a leftover from the'39 Fair. I explained that it used to be an ice skating rink on one side and a roller skating rink on the other. It was renovated, and the insides were rebuilt for the Fair.\n\nThey built a simulated helicopter ride around the city inside. There were moving seats that circled a large three-dimensional map of New York City. We went in and took a ride. It was very detailed, and we were both able to find our houses.\n\nThe centerpiece of the World's Fair was still there too. A large fountain with what they called the Unisphere in the center. It was nice to sit there for a little bit and be cooled by the mist coming off the fountain spray.\n\nIt was around 6 when we got to her house; there was a note from her mom;..\u00a0\n\n\"I hope you had a nice day, we went for pizza and a movie; see you later.\"\n\nDanielle made us soup and sandwiches for dinner, and we sat out on the patio in one of those seats that go back and forth; I think they're called a glider. When the sun went down, it was still warm, but there was a cool breeze. Danielle snuggled up against me, I backed into the corner, and she laid her head on my lap. I stroked her hair and closed my eyes.\n\nI heard her before I saw her and felt her before I opened my eyes; Danielle's mom was covering us with a light blanket.\n\nHer dad was asking,\n\n\"Is that a good idea?\"\n\n\"Shh, you'll wake them; it's innocent and far less than you and I would have done.\"\n\n\"Haha, or going to do, come here, woman....\"\n\nThey were laughing when they went back inside.\n\nThe next time I woke up, someone was kissing me softly. My hands had their own mind and started to search for softness. I found it at her waist where her blouse had ridden up.\n\nShe stopped kissing me and said,\n\n\"That feels nice, but no farther, okay?\"\n\n\"Your body, your rules.\"\n\nWe \"made out\" for a half-hour or so, and I knew I was going to be \"aching\" to get home. There was some noise in the kitchen, so we sat up and held hands under the cover her mother had given us.\n\nAfter some dessert, I went home and took care of my urgent needs. I called Danielle to say goodnight. She was so happy that I had thought to do that; I just thought it was the right thing to do.\n\nAfter I left, Danielle told her mom about our day and all we saw. She said it was almost like being at the Fair again. I showed her all over and described the pavilions. She told her mom she was in love with me but knew it was too much too soon and how much she was looking forward to the school year.\n\n*****\n\nThere was a doubleheader on Thursday and one of those long, dragged-out games on Friday. Saturday, I was back at work for a doubleheader. Sunday, it was church, and then work. We did speak every evening, and I think we were getting close but drifting apart simultaneously.\n\nIt all kind of ended when she told me they were going away on vacation that Monday.\n\n\"That's nice; where are you going, when will you be back?\"\n\n\"We're going to see my mother's family in San Jose, California; we'll be back around Labor Day.\"\n\nThe school year would be starting the day after labor day;\u00a0\n\nThere wasn't anything we could do;\n\n\"I have enjoyed getting to know you John, thank you for being, well, you; I'll call you when we get back.\"\n\n\"I had a good time too. Have a great time; I'll see you at school.\"",
        "I was disappointed, but thought, \"just let it be\".\n\nDanielle had hoped we would talk every day while she was in California. I did miss her but didn't know what to do. I kicked myself for not getting the address; at least I could have written her. As time went on, Danielle decided that I couldn't have liked her as much as she thought.\n\nShe thought \"he's just like everyone else\", sighed thinking;\n\n\"Out of sight, out of mind\".\n\nShe kept it to herself, on the outside she still talked about getting back to see her guy, and tried to enjoy the family. Over time, and I guess because she kept it in, her sadness and disappointment turned to anger.\n\nShe'd think, \"He never cared about me.\"\n\nOr \"I can't believe I fell for his \"nice guy\" routine.\"\n\nSummer ended, I knew she was back from vacation, but she hadn't called. Then school started; I was two grades ahead of her, so we didn't have any classes together. When I saw her in the halls, she would pretend that she hadn't seen me or act like she didn't even know me.\n\nDanielle was sure I would come crawling back to her, begging her to take me back.\n\nAs I said, I'm not good with romance. I did learn later that she was \"mad\" at me because I hadn't called her in California. I admit I did think about asking her for a contact number, but only for a second. I knew I couldn't afford to call long distance once, let alone enough to stay in touch. I guess she forgot the part about my family living in a not-so-great neighborhood and me being broke.\n\nI was sad; I wasn't feeling like myself, everyone noticed it; I made a decision; I went to see the Dean, I was going to ask about graduating early.\n\nWhen I got to his office, he wasn't alone; there was a policeman speaking with him. He saw me speaking with his secretary and called me,\n\n\"John, come in; I was just going to page you. This is officer Johnson.\"\n\nI nodded to him and asked,\n\n\"Yes, Sir, what's up?\"\n\n\"It seems Dave Petersen has filed a criminal complaint against you.\"\n\n\"Hmm, I saw him fall, but I can't imagine what he would be complaining about.\"\n\n\"He is claiming you pushed him down the stairs.\"\n\n\"That's ridiculous; I tried to catch him.\"\n\nThe officer spoke,\n\n\"Why don't you tell us what happened.\"\n\n\"I was going to my next class with Amber and Mitch,\" the Dean wrote down their names, \"we were at the top of the landing, Dave was coming up the stairs. He looked up, he was with two of his friends and smiled (it was more like a smirk, but I didn't mention that). As he got to the top step, he said something or at least started to say something just before he put his foot on the landing.\n\nIt wasn't clear, but it was something like, \"Did you get any, off that N....\"\n\n\"What do you think he was going to say?\"\n\n\"Nice girl? Knockout? I only heard the first part, the NNN.\"\n\n\"Who was he speaking about?\"\n\n\"I can only guess he meant Danielle; she was supposed to go to a concert with him in the summer but ended up sitting with me instead.\"\n\n\"Okay, go on, what happened next....\"\n\n\"I was reaching for the handle railing; as he began to stumble, I guess he missed the landing, his feet were tangled, he started to fall back. His friends just moved out of the way; I reached out and grabbed him, but only got his shirt, a piece was torn away and still in my hand when he fell... and he fell hard, landing on his back, he hit his head too. I turned and told Amber to get Miss Ingram and for Mitch to get the nurse. I used the fabric from his shirt to press against the back of his head; it was bleeding a lot. Miss Ingram said she had called the nurse; the nurse had called an ambulance.\n\nWhen the nurse got there, she asked if I was hurt because of all the blood on me. I told her no and that I was going to clean up, and go to my next class.\"\n\n\"As I said, he claims you pushed him.\"\n\n\"What does everyone else say?\"\n\n\"Your description of the events aligns with everything else we heard, even from his friends.\"\n\n\"Okay, then we're done, right? Ahh, Dean Wagner, I came to speak with you.\"\n\nThe Dean asked,\n\n\"Officer, are we all done?\"\n\n\"Yes, Dean, I think we have someone trying to blame his mistake on the only person who tried to help him... I do have one last question.\"\n\nHe turned back to me;\n\n\"Yes, Sir\"\n\n\"Is Miss Danielle an African American?\"\n\n\"Yes and no, her dad is, but her mom is Vietnamese.\"\n\nHe held out his hand, and shook mine, quietly saying,\n\n\"Then you did the right thing, trying to \"help\" your friend.\"\n\nWe both smiled, and he left.\n\nI was finally able to ask the Dean about early graduation. He said it was technically possible, but it would ruin my grade point average; I'd only be able to graduate with a General Diploma instead of an Academic one. He also said that the yearbooks, program, and arrangements for the mid-term graduation were in place.\n\nI told him, but he knew me well enough to know that I didn't care about any of that. He looked at me and said;\n\n\"You have been an asset to the school; you're smarter than you think and can do or be anything you want to be in life. I know you've enlisted; they called here to make sure your grades were correct, so be careful,\u00a0son. As my dad said to me when I went to Korea, \"keep your ass down and don't volunteer.\" Good luck, John, may God be with you.\"\n\nI thought to myself, \"Let it Be.\"\n\nI didn't return to school after that day. I went to see the recruiter. He was more than happy to make the arrangements. I would report for duty in a week.\n\nOn September 17th, 1966 my father was up early to make me breakfast.\n\nAt Danielle's house, Danielle was beside herself; she'd heard what happened to Dave and learned that I was taking early graduation. She was planning on speaking to me the next day, but I never came back to school.\n\nA week later, she still didn't know what to do. So she told her mom everything,\n\n\"This is all my fault; if I hadn't played those stupid mind games, John would be here with me, I mean us, right now.\"\n\nAfter getting all the details of what \"mind games\" meant, her mom told her dad, who picked up the phone.\n\nMy dad answered.\n\n\"Weston residence. Oh, yes, he told us about meeting you, one moment... Its' Sargent Simpson, he'd like to speak to you.\"\n\n\"Hello, Mr. Simpson. Is everything alright?\"\n\n\"Yes, John, sort of; we heard you'd left school early and have moved up your entry date.\"\n\n\"Yes, that's right, my father is going to drive me to\u00a0Fort Hamilton; we're leaving in a few minutes.\"\n\n\"Danielle was waiting for you to call;.\"\n\n\"Sir, Danielle told me she would call me when you got back; she didn't. When I saw her in school, she acted like she didn't even know me. I even sat down across from her in the cafeteria to find out what was going on; she got up and left me sitting there. I'm not too smart about these things, but I can tell when I'm not wanted.\"\n\n\"I didn't know any of that; when we were away, all she could talk about was getting home to see you. Once school started, she said you'd had a misunderstanding. She doesn't talk to me about these things, but my wife and I talk, and it seems she was waiting for you to do something to show you cared and missed her.\"\n\n\"I don't know what more I could have done. Please tell her I am sorry if I misunderstood what she wanted from me. She knows I'm no Romeo, and, wait; you know what, please tell her I liked her a lot and was looking forward to this year. I was hurt when she ignored me. Truthfully, I was only coming back to school this year, to see her...\n\nI'm sorry about all of this, but we have to get going. I never meant to hurt anyone, especially Danielle. Thanks for calling.\"\n\nAs I was hanging up, I heard him say, \"Wait for a second, she...\".\n\nAs we closed the door, the phone was ringing again.\n\nI thought, \"Let it Be.\"\n\nIronically, on the way to Fort Hamilton, The Beatles were on the radio; it was the extended version of \"Hey Jude\" and then \"Yesterday\". We didn't talk much; my dad told me to be careful and not to volunteer. We laughed when I told him Dean Wagner had the same advice.\n\n*****\n\nI was never very good at taking advice... After boot camp and more than two years of advanced electronics, and combat training, I volunteered.\n\nI was assigned to a joint task force, I was doing 'getting ready' work on SIDS for a couple of years when some Air Force General decided I needed to be their eyes and ears on the ground;\n\n*****\n\nEarly 1970\n\n\"Weston\"\n\n\"Yes, Sir?\"\n\n\"We need to have a better idea as to the accuracy of our SIDS data; we need someone familiar with the way they work to be in the field....\"\n\n\"You mean in the shit,\" I thought to myself.\n\n\"... to analyze and evaluate their performance in real-time. You had all that combat training when you were with the SEAL team in Key West....\"\n\n\"Sir, I was not \"with\" the SEAL Team; they taught me to dive and how to use some weapons, but I was not a SEAL...\"\n\n\"...but you were trained in close order combat and had top scores in your weapons training, that makes you the right guy for this job.\"\n\nTwenty-four hours later, I had left my comfortable and safe quarters in Thailand and was with a Marine patrol planning on crossing the border from Vietnam into Laos. The jungle is thick there, and the going was slow.\n\nWhile Vietnam is a country, it was made up of hundreds of small towns and villages generally self-ruled. Before we reached Laos, we came across one that was only just recovering from an NVA attack. We had seen it before. All the leaders and older men were executed, the young men were conscripted and sent for minimal training, and any female over ten years old was raped.\n\nWe stayed overnight and did what we could.\n\nThey begged us to take and protect the young women and children.\n\n\"L\u00e0m \u01a1n, b\u1ea1n c\u00f3 th\u1ec3 gi\u00fap h\u1ecd v\u00e0 gi\u1eef h\u1ecd an to\u00e0n.\"\u00a0Which loosely translates, \"Please you can help them, and keep them safe.\"\n\nOur South Vietnamese guide quietly told them;\n\n\"Kh\u00f4ng ph\u1ea3i n\u01a1i ch\u00fang ta s\u1ebd \u0111\u1ebfn, ch\u00fang ta kh\u00f4ng th\u1ec3.\"\u00a0(It is not safe where we are going.)\n\n\"Ch\u00fang t\u00f4i s\u1ebd tr\u1edf l\u1ea1i v\u1edbi s\u1ef1 gi\u00fap \u0111\u1ee1\"\u00a0(We will come back to help.)\n\nWe moved on until we were within range of \"The Trail\". The Ho Chi Minh Trail was created when the USA set up a blockade of the ports and stopped river traffic for inspections.\n\nNo matter what your political point of view, The Trail was a pretty amazing feat of engineering. Nearly 10,000 miles of trails, mostly built, cleared, and even repaired after bombings, by student volunteers. It allowed heavy traffic to come down from North Vietnam with troops, and supplies for the NVA troops, and the Viet Gong, in South Vietnam.\n\nHa, and I was there to stop them, what were they thinking?\n\nThere was some brush to use for cover, but we all agreed higher ground might be a better option. We were able to set up a camouflaged observation platform, well up in the trees.\n\nSargent Miller said,\n\n\"Our orders are to leave you here; it sucks to be you, Swabby.\"\n\n\"Sure does; you guys take care and watch your backs heading out of here. If all goes well, I'll see you in a week.\"\n\n\"Keep your head down... here, take my Kev liner; maybe you can use it to protect your ass when the shit hits the fan.\"\n\n\"Thanks, Miller\"\n\nWith that, they were gone.\n\nThe following week was just your typical run-of-the-mill, same o, same o nightmare in 'Nam; the SIDS detected and reported movement along The Trail, and the combination of shelling and bombs raining down all around me, made the nightmare all too real.\n\nIn theory, I was far enough, and well away from any targets, but bombs don't always fall where they're supposed to. As for the shelling, they would start on a coordinate past the target, then\u00a0\"march\" the fire, in a line, toward,\u00a0and beyond the target; it always seemed to be coming in my direction.\n\nI was hit three times with shrapnel, nothing serious. The shock waves threw me to the ground more than once. The third time I was blown off my perch, I decided to stay on the ground. I was half-buried and covered in dirt when the Marines returned.\n\nTheir medic patched me up enough so we could cross back into Vietnam. We passed the village where we had been asked for help; it was burnt to the ground.\n\n\"Miller, what happened here.\"\n\n\"We were able to get 20-25 young women and all the children onto choppers. We came back the next day for the rest and found it like this. There were two older women still alive; they told us the NVA had come back for a little more fun. They got so angry when they found the girls gone; they raped, then beat the older women with bamboo rods, and left them for dead. We did what we could for the survivors and buried the rest.\"\n\nThe trip back was quiet.\n\nOnce on base, I had my wounds redressed; I thought it odd when they used waterproof wrapping. Then I was debriefed, had a pretty good meal, and was just getting out of the shower when Miller showed up and said,\n\n\"40 hours\"\n\n\"What?\"\n\n\"You've got 40 hours before we head out.\"\n\n\"I started to say \"What the f....\", but said \"let it be\" instead.\n\nI slept 39 hours and 5 minutes, had some food, and was ready to go at 0400.\n\nWe boarded a PBR at the Binh Thuy base and headed out. I had heard of the Mekong River and Delta, but I'm not even sure the rivers and canals we traveled had names. There was the Song this and the Song that, we were definitely on the Song Dung for a while, and that's when I figured out that Song must mean river in Vietnamese. We had traveled a couple of days and ended up on the Thach Han, north of Quang Tri, and then went farther north on the Canh Hom. We were well north of Dong Ha, which meant we were way too close to the DMZ for my taste.\u00a0\n\nUnlike the jungles across most of Vietnam, there were dunes on both sides of the river up here. We got to the coordinates after sundown.\n\nWhile the plan was for me to be invisible, I was still armed. I checked my gear; I had my Colt 1911 sidearm with three extra clips, a 1964 Winchester 70 with a scope, suppressor, and 50 rounds of 30-06, in a waterproof pouch, a Gerber knife, rations, field pack; check, and double-check. I slipped over the side.\n\nAs the PBR disappeared into the night, I decided my best option was to bury myself in the sand along the river's edge. There are maybe a dozen snakes in Vietnam that can kill you. Different types of Vipers, Kraits, and Cobras, it was like they all had the same idea and slithered or swam, across, around, and over me. I stayed very still.\n\nI ate and slept that way for five days, tracking sampans and junk traffic. I had an idea that could prevent some other sorry ass from having to do this. I spent some time designing a detection device similar to the SIDS but could work in and around waterways.\n\nDay five, they were due back; they didn't show. I decided to give them 48 hours; if the guys hadn't returned by then, they probably weren't coming. I was pretty much out of rations and knew they wouldn't leave me hanging. The only other possibility; they were dead, which meant no one would be coming for me. I would be on my own.\n\nAfter 48 hours I thought, \"let it be.\"\n\nI estimated that I was about 50 klicks, or a little more than 30 miles, from a safe place to head toward Dong Ha. I planned to take my time and make it to the Gio Linh FireBase; the goal, three days.\u00a0\n\nOn the second day, maybe three hours into my trip, there it was. I saw the wreckage across the river. I only hoped they had gotten out. The boat had been hit by rockets and heavy machine-gun fire. It was burnt badly; there would be nothing left to salvage. Even so, I thought I owed it to the guys to see if they were there and to at least grab their dog tags.\n\nThe Canh Hom is about a hundred yards wide there. I had just finished securing my gear on the opposite bank and was getting ready to swim across when a squad of 10 NVA soldiers came over the dunes, maybe 300 yards away, on the other side. They were laughing and joking around, even taking pictures of the destroyed PBR. I inched my way onto the sand behind my gear, hollowed out a makeshift fox hole, and slowly got the 70 ready, attached the suppressor, chambered a round, aimed, and fired.\n\nI worked my way from back to front; I had five kills before the guys in front realized they were under attack. They had no idea where I was. I fired again, another down. The four that were left were speaking loudly but hidden behind the PBR wreckage. I waited; I'd see a foot and fire. He'd scream and roll, puff, another headshot, three to go.\n\nI could tell they were planning on going for the top of the dune; they stood to run, another one dead. The 9th died ten steps from the top of the dune, and the last one died next to the first one, just as he was thinking, \"I made it.\"\n\nI hadn't won a battle that day, but it made me feel like I got my guys a little payback. I waited a bit, swam across, and was able to retrieve three tags. I hoped that meant the others got away. I stayed too long, checking in the water around the boat to see if the fourth crew member and \"my\" two Marines were there. I ended up leaving with just the three tags.\n\nOn the fourth morning west of Gio Linh, I came out of the water and went cross country toward Dong Ha.\u00a0\n\nI heard it coming before I saw it, so I was undercover when I saw a truck approaching.\u00a0I waited to be sure and then waved them down.\n\n\"Hey Squid, what are you doing out here looking like a fish out of water.\"\n\n\"Just taking in the scenery and general sense of the country, I'm heading down to Dong Ha; I'm hoping to get a ride south; can you give me a lift?\"\n\n\"Sure, we're heading there now; hop in the back.\"\n\nThere were a couple of guys sitting on crates; they grabbed my gear and helped me up. We had an uneventful trip.\n\nThey dropped me off at the base headquarters.\n\n\"See ya, Squid, I hope you find your ride.\"\n\n\"Ain't no big thing.\"\n\n\"I hear that.\"\n\nDong Ha was a combat base with a major airfield; they had self-propelled M107 guns, which are 175mm artillery. They were used in support of Marine, Army, and ARVN forces.\n\nMost Fire Bases look more like anthills with artillery ordinance, surrounded by a junkyard on the top of a mound. As a combat base, Dong Ha was big, spread out, and busy. Luckily I came during a slow period. Dong Ha got hammered in '68 and then again in the '72 Easter offensive.\n\nThe base was only \"tested\" a couple of times while I was there.\n\nDuring a mortar attack, someone in the bunker said,\n\n\"They're just making sure we're paying attention.\"\n\n*****\n\nI caught a ride on a Huey to Tan Son Nhut Air Base near Saigon; after a few days in the hospital, I was cleared for duty. As my primary role was still doing the make-ready work on SIDS, I went back to Ubon Airbase in Thailand.\n\nI turned in the dog tags and made my report regarding the PBR crew and missing men. I headed for the barracks and my rack. While sailors always have a seabag, I also had a footlocker, so I cleaned my Colt and Winchester, left them partially assembled, and wrapped them in oilcloth. I stowed them and all my ammo in the bottom of the footlocker and used my Navy issue combination lock to secure it.\n\n(The Navy sent 6 PBRs from Task Force 116 out of the Delta to retrieve the bodies of the three crewmen. I never heard from, nor learned what happened to the last crewman or the Marines.)\n\n*****\n\nIt was only a few days later when it all started again. My training was \"needed,\" so again I did the occasional fieldwork that always seemed to put me right in the middle of a shit storm.\n\nI had told my CO my idea for a water/shoreline seismic sensor, he reported it up the chain of command. Of course, it landed on the desk of the same Air Force General who kept trying to get me killed. Naturally, he decided I was the best-qualified candidate for doing the water and nearshore inserts of \"my\" sensors. He wanted to build a team that would be on the ground during an ongoing initiative called Operation Commando Hunt, where B-52s would continually bomb targets known as either part of the Ho Chi Minh trail or where SIDS, and now inserted sensors, detected activity.",
        "I trained a dozen other \"volunteers\" on how the devices worked, and we headed to the smaller rivers and canals in the Northern and Western parts of South Vietnam. I won't bore you with the details of what it was like trying to sneak around the Northwest of South Vietnam, with the NVA and VC constantly on our tails. Firefights, booby traps, and land mines (theirs and ours) were part of everyday life. In the six weeks, I worked the rivers and canals, I think I was on an existing US base for only one night.\u00a0\n\nWith the B-52s doing 20 plus bombing runs a day, we took our share of injuries and casualties. While I suppose a lot of guys would have cashed in their ticket home, our team took care of ourselves.\n\nOne day out we got boxed in by an overwhelming force of NVAs. They were coming at us from two sides, and seemed to keep coming no matter how many we took out. We were keep down and laying down overlapping fire patterns, but they kept coming. We'd drop back, leapfrogging back while the line kept firing. I was had been with these guys long enough to know their routine, and was hanging in there, that is until an RPG exploded, maybe six feet behind me. It threw me a few feet, but set up and started firing again. I didn't realize it at first, I had broken three vertebrates in my lower back; the L3, 4, and 5. At first, I couldn't feel my legs, or any pain, so I got up, took up my position back in the firing line. We were seriously outnumbered and it didn't look like we had many options, so the marine lieutenant in command called in a bombing run on top of our forward position. We covered up, most of us survived.\n\nThe assault slowed, but didn't stop, a second bombing run was called in. We should have been taking cover, instead, we boogied during the second bombardment, heading toward higher, more defendable ground; I sat down on an ammo box for a second and realized I couldn't get up. My legs wouldn't work. The pain the adrenalin had been masking was now causing me to spasm and fall every time I tried to stand. I rolled into a prone position, I was going to die fighting.\n\nThe second strike must have done some real damage as the assault stopped. It gave us a chance to regroup, with a small clearing behind us.\n\nWe had several guys who were in pretty bad shape, a few that were wounded and needed to be patched up by a doctor, and then me. Other than sniping, I was useless. They called in a Dust off Crew to medevac the wounded.\n\nThe guys that flew the Hueys for the Dust Off Crews had balls of steel. The rotors of a Huey officially need 100 feet of clearance; our LZ only had about 50; this cowboy put it on the ground like he was landing at the heliport at JFK. Later I checked and found the rotor diameter of a Huey is 48'2\" so he put that beast down with 11 inches to spare on each side.\n\nI was loaded on the chopper with three other guys, I looked out the door as Vietnam moved away from me and knew I wouldn't be back. I thought, \"Let it Be\".\n\nI was looked over before being loaded onto a Douglas C-9A (they called it the Medevac Cadillac). A\u00a0corpsman used weights to set up something like traction but decided I needed a heavy dose of morphine to hold me over. They put me on an IV, with a morphine drip, that kept me under most of the trip.\n\n****\n\nI woke in Oak Knoll Naval Hospital in Oakland, California. It was May 1970, there were a lot of guys from 'Nam there.\n\nI was in an orthopedic ward, still in traction and still in pain. The medication kept me pretty buzzed; I was there a few weeks before they felt I was stable enough for them to work on me.\n\nWhile I had thought of her often, now I dreamed, more than once, that Danielle visited me in the night. The dreams were so real; she'd sit next to me, hold my hand, and we'd talked about love and getting married. I'd wake happy, but sadly it was only a dream.\n\nI had three operations on my back; while painful at first, they helped. Along with repairing the broken vertebrate, I had compressed discs playing havoc on my sciatic nerve.\u00a0The discs were fused. It would limit my mobility, but I was in a lot less pain.\n\nPhysical therapy took forever, but after a few months, I could walk without pain and sleep without medication. I still dreamed of Danielle; we'd talk about our days, plan our wedding as if it was real; I'd wake up hopeful, remembering how nice it felt to see her and hold her hand.\n\nOne morning the doctor stopped by and asked about the injury;\n\nI asked, \"What do you mean?\"\n\n\"Well, it doesn't make sense; it says here, you were injured on a training mission in Norfolk, VA.\"\n\nI didn't know if it was a test, but it had drummed into us that our mission was Top Secret, we could never, ever speak of it to anyone, so I said;\n\n\"I'm sure they wouldn't get something like that wrong.\"\n\n\"It doesn't make sense; you've got shrapnel wounds that I'd call recent, and why would they send you across the country when there's an excellent Hospital right there.\"\n\n\"Doc, I have been in the Navy long enough to know; nothing they do makes sense.\"\n\n\"I guess you're right; oh, by the way, you're being discharged, someone will come by to confirm your Naval disability and advise you of your rights and services available through the VA, and of course, get you signed out.\"\n\n\"Thanks, doc; when can I leave?\"\n\n\"It's too late for today, get the paperwork done, relax, sleep well; you'll be a civilian tomorrow.\"\n\nI went around the ward, told the guys I was leaving, wished them all well, and made promises, most of us wouldn't keep, to stay in touch.\n\nI was dreaming of Danielle, music was playing softly, it was a song that seemed familiar;\n\n\"And in my hour of darkness she is standing right in front of me, speaking words of wisdom, let it be.\"\n\nBut this was different; this time I woke up, I wasn't dreaming, she was there, sitting beside me, holding my hand.\n\n\"Hello\"\n\n\"Holy shit! What are you doing here.\"\n\n\"I've been here most nights, for months. I moved to San Jose as soon as dad found out where they sent you.\"\n\n\"I've been dreaming about you... wait, how long have you been here? Was it all real?\"\n\n\"Well, yes and no, you were fairly well sedated, so it may have felt like a dream.\"\n\nShe leaned over and kissed me,\n\n\"I have been wanting to do that again ever since that night on the patio.\"\n\n\"Me too; I was so looking forward to you coming home from vacation.\"\n\n\"I'm sorry we drifted apart for a while there.\"\n\n\"I was so confused, I just....\"\n\n\"Shh, it doesn't matter anymore. I'm here, you're here, and I'm not going to let you get away this time.\"\n\n\"But I'm being discharged tomorrow....\"\n\n\"I'm a volunteer; I'll let them know I'm leaving tomorrow too.\"\n\n\"Where will we go?\"\n\n\"I'm living with my mother's family; they are all looking forward to meeting \"my sailor\" and helping with the plans.\"\n\n\"Plans?\"\n\n\"Our wedding silly, we've been talking about it for months.\"\n\n\"I thought that was a dream....\"\n\n\"I know, it was just so nice to think about; we can let them know you were dreaming and call it off.\"\n\n\"NO!, No, no, Danielle, I want, I want...\" I sat up and took her hands in mine, \"Danielle Simpson, will you marry me?\"\n\n\"Haha, I've already said yes six times; why would I change my mind now? Yes, I'll marry you.\"\n\nShe kissed me again; the guys all had something to say about that.\n\n\"We can change anything if you'd like.\"\n\n\"No, no changes, in my dreams it was so real, and sounded perfect, we should,\u00a0\n\n...let it be."
    ],
    "authorname": "NYSwede",
    "tags": [],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/let-it-be-1"
}