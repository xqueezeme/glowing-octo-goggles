{
    "title": "Catering Girl Ch. 05",
    "pages": [
        "Sorry y'all, there's no sex in this chapter. There will be more in the future.\n\nOkay, I don't know what to do with you if you haven't read the prior chapters yet. Maybe if you're really nice to Little Miss Madison, she'll share a juice box with you while you learn all about her mommy and her mommy's friend. \n\nChapter Five\n\nWhitney\n\nThe garage door creaked and groaned while it closed behind me as I turned off the engine. Sort of like what my soul was going through right now. 'A break,' she had said. Is this a pause? A short intermission? Or are we done?\n\nWe had been doing so well. I had thought Jennifer would like how I was taking such an interest in the wellbeing of Madison. Lord knew I cared for her little girl. Almost as much as I cared for her.\n\nI sat down in my chair, and Skipper came over and hopped into my lap. The desire to cry was there, to let it all out, but I was too dumbfounded to do so.\n\nWas Jenn right? Was everything I had done for her out of pity and not out of love? Instinctively, my phone was in my hand, and I began texting.\n\nMe: Help\n\nMolly: What's wrong?\n\nMe: I think we broke up.\n\nMolly: Think?\n\nMe: She said she wanted a break\n\nMolly: On my way\n\nAbout thirty minutes later, my doorbell rang. \"The ice cream lady is here.\" Molly had four grocery sacks in her hands. She handed a couple to me as we headed for my kitchen. \"Don't eat this all at once, I cleared out the shelf. So, what happened?\"\n\nI produced a couple of spoons, and we both dove into a pint. But the gooey core was not doing it today.\"I don't know, Molly. I thought we were doing so well. But Jenn was grumpy all day at Madison's surprise party, and at the end we broke up.\"\n\n\"Are you sure that's all?\"\n\n\"Well, she thinks I did it out of pity, threw the party that is.\"\n\n\"You threw the party, not her?\"\n\n\"It was a surprise for both of them. I thought she would like it.\"\n\n\"Whitney, Whitney, Whitney....\" She set her pint and spoon down and began to rub her temples. \"So, you didn't include Jennifer in your plans for her daughter? Don't you see how it could be a problem for her?\"\n\n\"Now that you put it that way.\" How could I have been so stupid? \"Why do I keep doing stuff like this?\"\n\n\"I don't know. You get an idea in your head, and you go with it. Often, you don't consult others. I know it made Heather mad many times. You've done it to me more than once as well.\"\n\nUgh, I buried my face in my hands. I could feel the tears starting to flow as I sobbed. It was my fault. Molls gave me a hug.\n\n\"Text her, or maybe call her. Tell her you're sorry. But don't expect this to get over for a while. She might still want to be with you. I know how much she likes you. It was pretty clear up on the island how she feels about you. And you have a secret weapon in the munchkin. I think she totally adores her mom's girlfriend.\n\n\"Yeah, but she is also starting to connect to her daddy. I saw Jenn watching Dallas a lot as well. I worry she might be having second thoughts.\"\n\n\"You think she might return to her old boyfriend?\"\n\n\"I don't know. I think I'm worrying about everything right now.\"\n\n\"Well, worry about the things you can control, and let everything else go. It's all you can do.\"\n\nShe was right, of course. Didn't make it any easier though. Molls hung around for a while and kept me company. I curled up in bed. The smell of Jenn on her pillow caused me to cry some more. My phone buzzed and, hoping it was Jenn, I looked at it, but it was the phone company texting me, saying my monthly bill was ready. I scrolled through the various pictures of us I had on there. My thumb hovered over the message app, and moments later my fingers started to type.\n\nMe: I'm sorry. I should have made the plans with you. I can be bullheaded at times. When you're ready, can we talk?\n\nThere was no response from Jenn. Sleep came hard, and when it did, my pillow was rather damp from all the tears.\n\nThe next week at work was not easy. I had some meetings scheduled with the Maritime accounting team and had set them up to be over at their office, mainly so I could have an excuse to chat up Jenn. But now it was going to be uncomfortable going in and out of there. If I went in the side door and she noticed, I would be avoiding her, and if I went in through the front door, she might not want to see me.\n\nPutting my big girl panties on, I did what I had to do and went through the front door. I was prepared to stop and chat, but Jenn was on the phone and simply gave me a small finger wave as I passed. Well, at least I got something from her.\n\nMaintaining focus during my meeting was not easy. Every little noise had me looking at the door. And the topic of the meeting, planning for the visit from the auditors, was one I wanted to be distracted from. There was a reason I was in tax, not audit, back at the firm. I kept wondering, would Jenn pop her head in? Alas, it never happened. But my colleague did notice my unease during the meeting.\n\n\"Whitney, you look a bit distracted. You okay?\" I looked at her and exhaled. I try to keep my personal life separate from work. Partially to be professional, and partially due to wanting to keep my distance as the future head of the company.\n\n\"Trying to be. Got in a, erm, disagreement with my girlfriend over the weekend. We sorta broke up.\" I rolled my eyes and had a glum look on my face.\n\n\"Oh bummer. But why were you looking at the door all the time?\"\n\n\"Well, I was half expecting, no wanting, her to come in. She is sitting in the reception area as we speak.\"\n\n\"Why would your ex-girlfriend be in the lobby?\" Then it dawned on me she didn't know Jenn and I had been together.\n\n\"That's where she works.\"\n\n\"Wait, you were dating our Jennifer?\"\n\nI nodded my head.\n\n\"Why am I the last person on the planet to know these things? I didn't even know she was gay. I knew you were. I remember you bringing a girlfriend to the company picnic when you were in high school.\"\n\n\"I remember, Marci and I got busted by my dad for making out behind the groundskeepers' shed at the park. We weren't doing anything inappropriate at the time, just a little tonsil hockey.\" Mainly because we hadn't been there long enough to do something inappropriate, I thought to myself. But hey, we were both eighteen at the time; we could do what we wanted.\n\n\"Back to my question, you and Jennifer?\"\n\n\"Yeah, I'm hoping we can figure things out, but she's not talking to me right now. I think I need to give her some space. But I miss her already.\"\n\n\"I really like working with her. I did notice she was a bit more subdued this morning. But we don't interact much, a hello in the break room or when I come in and out. I'll have to say hi and try to cheer her up. But I won't mention you, unless she asks.\"\n\n\"Thanks.\" We wrapped things up, and when I left, her desk was empty. Must have been on break or something. I trudged back to my office. The weather matched my feelings. It was pouring rain and gloomy as all heck.\n\n<p align=\"center\">_|/_</p>\n\n\"I'm headed over to Maritime for another meeting. I should be back in an hour or so.\" Vicki, the receptionist for the corporate office, looked at me as I started to open the door.\n\n\"Third time this week there, huh? You've been busy this week.\"\n\n\"Yeah, that's the understatement of the day.\" I left the building for the walk down the block to Maritime. It was audit season, and there was a lot of prep to do. And I didn't know these auditors very well. They were a couple I had met at various conferences and meetings but had not worked with them. Due to the head of Mitchell and Lombardi being married to the CEO of Whitney Enterprises, aka my Mom and Dad, my old firm could not issue an opinion on the financials of Whitney Enterprises. They could do the taxes and provide other consulting services, which they did. But not an Independent Auditor's report, and that is what the bank wanted for our financing package.\n\nAs I walked in the front door, Jenn barely looked up from her computer as she was on the phone with someone. Like the two previous days, I got a small finger wave as I walked past. I won't bore you with the details of my meeting. Suffice it to say, there were a lot of spreadsheets and checklists reviewed. Really tedious accountant stuff.\n\nWith our meeting wrapped up, I slung my packed computer bag over my shoulder and headed towards the front door. As I passed her desk, I glanced over and saw that she didn't appear to be on the phone.\n\n\"Hi,\" I said rather feebly.\n\nI saw her eyes dance around the room, but we were alone for the moment. \"Hi.\" There was no life in her voice.\n\n\"Can we talk for a moment?\"\n\n\"Is this work related or--?\"\n\n\"About us.\"\n\n\"I'm not ready to talk to you yet.\" She tried to make eye contact with me, but then broke away.\n\n\"I'm sorry.\"\n\n\"Me too.\"\n\n\"Okay, let me know.\" I turned to head out the door.\n\n\"Whitney?\"\n\nI turned back towards her. I loved the sound of my name from her lips.\n\n\"Soon. Okay?\"\n\nI nodded and headed out the door.\n\n<p align=\"center\">_|/_</p>\n\n\"Come on girl, it's Friday night, and you're getting out of the house and coming with us.\" Molls was pulling various outfits out of my closet and tossing them on my bed.\n\n\"Where are you trying to take me tonight?\" I grabbed a sweater which had been tossed on my bed. I realized it was the same green one I had worn when Jenn and I first met for coffee.\n\n\"My cousin has a gig tonight, and we are going to support her. She is doing a solo set at this new coffee shop. I saw some pictures of the place --a converted auto repair shop. It's way cool what they did to the place.\"\n\n\"Is she getting back on her feet?\" I knew Megan's history. She was four years younger than Molly and other than their looks, it was hard to believe they were related. Megan had been a hell raiser. Instead of going to college, she was in an all-girl band and poised for a meteoric launch when fast living caught up with her and she imploded. It had been tough to watch such a talented girl make so many bad decisions. And then she found out she was pregnant while she was in jail.\n\n\"I think so. She doesn't have many options available to her. It's hard for a felon to get a normal job, you know. She got a job in a call center and has been picking up some extra income busking. This is the first paying gig she's had since she got out six weeks ago.\"\n\n\"Has she seen her daughter at all yet?\" I inquired.\n\n\"No. The last time she saw her was in the delivery room. She got about twenty-four hours with her until the welfare officer picked her baby up to go to the baby's paternal grandparents. But they have cut her off completely from her own daughter. I guess they don't want her to follow in her mother's footsteps.\"\n\n\"Rough.\"\n\n\"Yeah, but I think she hit rock bottom then. She stayed out of trouble for the most part and got released early.\"\n\nI finished slipping on my boots, and we headed downstairs where Dylan was waiting for us. We piled into his car and drove to the coffee shop.\n\nI followed Molly and Dylan into the joint. A bright neon sign hung over the door. The letter O in the middle of the sign was in pink, clearly hinting at part of the female anatomy.\n\n\"Lube Job Cafe,\" Dylan chuckled as he held the door open for us.\n\nWe found a table off to the side. I held it as Dylan went to the coffee bar to get us some drinks while Molly went up to check on Megan. She was much skinnier than I remember. Gone was her trademark plaid skirt for the slutty schoolgirl look and instead she was in a simple black skirt and dark blouse, but was still rocking the Doc Martens.\n\nMegan had a simple setup, an acoustic guitar plus a foot drum kit in front of a stool. A mic was positioned to pick up the guitar and a second for her to sing with. I watched her give Molls a hug before she returned to our table as Dylan got back with some drinks. A moment later an announcer came up to the mike and gave Megan an introduction.\n\n\"--Ladies and gentlemen, please give a big Lube Job welcome to Megan York.\"\n\nShe started with a slow shuffle and morphed into a classic blues tune from John Lee Hooker. I was floored by her voice. I had heard her sing years before, before the drugs took control of her life. Back in the day she screamed into the mic in order to be heard over her indie metal band.\n\nWhat I was hearing tonight was different. Her voice was low, something akin to Marlene Dietrich. But more melodic. She sang the words with power and put little scoops and accents as the words rolled off her lips.\n\nHer setlist progressed, and she moved into songs I had heard her perform before. But all arranged for an acoustic solo act. I was impressed by how she could sing, play her guitar and play the various pedals of her drum kit. When she sang Phil Collins, I Wish it Would Rain Down, many people pulled out their cell phones to give her a small tribute. And, for as much emotion as she unleashed there, it was nothing compared to what came next.\n\nThere was no introduction for it, but the room went silent as words poured from her soul. Megan tossed her head back as if she was trying to make someone hear her in some faraway space.\n\nAnd now you're trembling on a rocky ledge<br>\n\nStaring down into a heartless sea<br>\n\nCan't face life on a razor's edge<br>\n\nNothing's what you thought it would be\n\nAll of us get lost in the darkness<br>\n\nDreamers learn to steer by the stars<br>\n\nAll of us do time in the gutter<br>\n\nDreamers turn to look at the cars<br>\n\nTurn around and turn around and turn around<br>\n\nTurn around and walk the razor's edge<br>\n\nDon't turn your back<br>\n\nAnd slam the door on me\n\nI could see the tears running down her face, they were running down mine as well. I sang the words silently with her. It was as if I was singing to myself and to someone I desperately wanted back at the same time.\n\nThe room remained silent, stunned, as Megan set her guitar down. Having had a moment to absorb what they heard, the audience broke into loud applause. The announcer came forward and thanked Megan for her performance and encouraged everyone to visit the bar again.\n\nMolls and I went forward to help Megan pack up her gear and safely put it to the side. We hung out for a while, mostly Molls and her cousin catching up. Dylan and I looked at each other a few times and let them carry on. Over the course of the evening, a number of people stopped by to thank Megan for her music and to find out when she might be playing again.\n\nThat night, as I lay in bed and stared at the ceiling trying to go to sleep, the words of the song kept playing over and over in my head, \"Don't turn your back, and slam the door on me.\" Eventually, sleep overtook me.\n\n<p align=\"center\">_|/_</p>\n\nI didn't think Saturday morning would suck as much as this one did. The rain and general grayness of a Seattle March I could deal with. But I was missing what had been a ritual around this place. Friday night dinner and a movie with my two favorite people, and once the munchkin was safely tucked in her bed, some adult playtime with my girl. But the better part was on Saturday morning waking up and snuggling in bed until the aforementioned munchkin came barreling in to wake us up.\n\nI hadn't realized until it was gone how much I wanted domestic life. When I was in college, it was never, nope, not going to do it. After a while with Heather, I thought maybe someday. Now, after having Madison around, it was something I wanted, maybe needed.\n\nI looked in my fridge and realized my recent diet of take out followed by a pint of Ben and Jerry's needed to stop. Partially because I was going to get huge and partially because there was no more ice cream in the freezer. I grabbed the carton of almond milk to pour on my cereal and realized some idiot had put it back in the fridge empty. I thought I would complain to the management of this establishment, maybe they would have some sympathy for me.\n\nUnfortunately for me, the only response I got from the management was \"purr,\" so I figured I was on my own. I slipped into an oversized hoodie and headed to the market. The place was full, and navigating the aisles was slow with all the people. I turned down the cereal aisle, and I froze in my tracks.\n\nOf all the people who could be here today, it had to be her. My stomach started to turn, and I could feel the acid creeping up. I turned and got out of the aisle before she spotted me.\n\nWhy was she, of all people, doing this to me? We were over. Done. That ship had sailed. Next thing I knew I was in the frozen section staring at Ben &amp; Jerry's again. I was reaching in for some Brownie Batter Core when a familiar voice came from behind me.\n\n\"Hello old friend. Hopefully you're not reaching for Ben &amp; Jerry because of me still.\" I turned and looked at my old girlfriend.\n\n\"Hi Heather, and um, I do eat this at times when things are okay.\" I was at a total loss for words. What I was seeing was not something I had expected to see.\n\nShe smiled a knowing smile at me. I had missed her smile, but it was not what I was staring at. I was looking at the large swath of dark green fabric wrapped around her, with a pair of small feet sticking out. I pointed to them.\n\n\"Um, yeah. We should talk. Got a few?\" Got a few? I thought I needed hours to figure out what was going on. This was the first time in almost fifteen months I had seen or had any communication with her. She had walked out of my life right after Christmas and it had been as if she never had existed.\n\nWe pushed our carts over to the coffee stand and found a table.\n\n\"You're not alone I see.\"\n\nHeather peeked inside her Moby Wrap. \"Kyle is still sleeping. Um, yeah, I'm a mom now.\"\n\n\"Care to tell me more?\" I watched her rub her eyebrows, obviously thinking about how she should explain this. I saw a large rock on her finger. Somewhere in the last year she got married.\n\n\"Well, he was born seven months ago. Named after his father, my husband.\"\n\n\"Um, husband? Wait, did you say he is seven months old?\" One thing about being an accountant is that we draw correlations and do math quickly. This means she was two months pregnant when she left me.\n\nI could see little feet starting to wiggle, and she pulled him out and cradled him. He was cute, can't blame him for his mother being a cheating bitch.\n\n\"I wanted to tell you, but I didn't know how. Kyle and I had met at the coffee shop in my office building, and it was like nothing I had experienced before. He swept me off my feet. I felt so bad for going behind your back, but I couldn't stop myself. I was trying to figure something out and then I missed my period.\"\n\n\"Instead, you left me. Left me wondering what was wrong, what I had done. I don't know how many times I texted you, tried calling. I even showed up at your parents' place trying to find you.\"\n\n\"Yeah, your timing was terrible. I was inside telling them I was pregnant. Dad was none too happy you showed up. He thought you were going to go postal or something. I had just admitted to cheating on you and his mind went to a crazy place. That was fun, 'Mom, Dad, your lesbian daughter has gone straight and has gotten knocked up. And now the woman she cheated on is pounding on your door.\"\n\n\"I wanted to get answers, Heather. You left me out in the cold, I had nothing to grab onto.\"\n\n\"I'm sorry Whitney, really I am. I attempted to call you several times, but as time went on, it got harder and harder to even think about what I might say. Then I got busy getting ready for a wedding and having a baby. Life got crazy, you know?\"\n\n\"I guess.\" I didn't know what to say.\n\n\"Are you still mad at me?\"\n\n\"Mad, not sure. Hurt, wounded, disappointed? Yes, yes, and yes.\" Little Kyle started to fuss, and Heather started making googly eyes at him to cheer him up. \"So, are you happy? Is married life and motherhood what you wanted?\"",
        "\"In hindsight, I think so. I'm happy. Kyle is a good man and a great father. And um, Junior is going to be a big brother, we found out last week I'm expecting again.\"\n\n\"Congratulations?\" This day kept getting weirder and weirder.\n\n\"Thanks. Kyle was surprised. We had just started being intimate again and...\"\n\n\"La, la, la,\" I plugged my ears. \"Sorry but hearing about you having sex with someone other than me is not something I expected to hear when I woke up this morning. Hell, this whole conversation, seeing you, is something I didn't expect.\"\n\n\"Yeah, life has a way of making funny turns on you, huh?\"\n\nI didn't know how to answer her right now. We both sat there for a moment, each lost in thought.\n\n\"Heather, can I ask you a question? Was I bad at taking charge when I got an idea in my head? Like not letting you have any input?\"\n\n\"Sometimes, yes. There were a few times I almost broke up with you over it. The surprise trip to Cancun was a bit much.\"\n\n\"Sorry Heather, I guess it's more a part of me than I thought.\" She knew me all too well and could read my face.\n\n\"Problems? I know you better than anyone, except for maybe Molly. Is she doing okay, by the way? More importantly, are you doing okay?\"\n\n\"Molly is doing great, new boyfriend. Do you remember Dylan from my old office? Yeah, they hooked up and are doing awesome. I have a feeling sometime in the next year I'm going to be in a bridesmaid's dress. As for me. Who knows? But yeah, not doing well. One of my surprises backfired on me, and she dumped me. Frankly, I feel like shit.\"\n\n\"Hence the Ben &amp; Jerry's. I knew you were not well when I saw you reach into the freezer.\"\n\n\"I guess some things are predictable.\" Little Kyle started to make a fuss and began poking his head into her chest. \"Looks like someone is hungry. I better let the two of you go, besides, Ben is going to melt here soon.\" I got up from the table while Heather pulled a hooter hider out of her diaper bag. \"See you, good luck to you.\"\n\n\"You too, call me sometime, ok? I still have the same number, and I've unblocked you.\" She nodded her head as a little one started to nurse. Of all the shitty things which possibly could have happened that day, I couldn't imagine it being any worse than this. After picking up a few more items, I texted Molly about what had happened as I left the store.\n\nMolly: Can't hang today, with Dylan at his folks house all day. Sucks about Heather.\n\nMe: Yeah, have fun with D\n\nThe sun was setting when my phone rang. I pushed an empty pint carton away, reached around a bottle, and poked at the accept button before I remembered I had to swipe it.\n\n\"Jello,\" I snickered. \"Whitbey's phone.\"\n\n\"You're drunk Whit.\"\n\n\"Whaaa, little ole me? I've only a few shots had.\"\n\n\"Shots? You never drink anything more than a glass or two of wine since 'The Incident' our senior year of college. How many and what have you got?\"\n\n\"Wodka. Just a f-e-e-ew shots.\"\n\n\"You're slurring your words. Why do you do this to yourself? I can't help you out this time. Are you at home?\"\n\n\"Yes--\"\n\n\"Stop and go to bed, please, before you hurt yourself?\"\n\n\"Oba kaybe Mollby.\"\n\n\"Go to bed Whitney. I'll check with you in the morning. Night.\" I don't remember much more of the evening. I think I passed out on the couch.\n\n<p align=\"center\">_|/_</p>\n\n\"Blech!\" I spit again into the toilet, trying to get the awful taste out of my mouth.\n\n\"Here, take a sip.\" I glanced up at the offered glass of water.\n\n\"Whaa! How did...\"\n\n\"Drink first, barf some more if you need to, then we'll talk.\"\n\nI took care of some more business; it was nice to have my hair held out of the way for me. After a little more water, I looked up at my nurse. \"Where's Madi?\"\n\n\"Still sleeping in your guest bed. You look like you got keel hauled under a tug.\"\n\n\"Keel hauled? Haven't heard that in a while. Wait, you're talking to me now?\"\n\n\"For the moment. You're still in the doghouse with me. And for future reference, ice cream and Grey Goose don't go as well together as you think. Or at least that much vodka. Do you know how much you drank yesterday?\" I shook my head, which was a mistake, of course. It made things hurt even more. \"Well, probably twice the amount I would have served to a single person when I was working at the tavern. Better start drinking some water. Today is going to suck donkey balls for ya.\"\n\nI tried to laugh at her joke but ended up with my head in the toilet some more.\n\n\"Mommy? Is Miss Whitney okay?\" A little head poked its way into the master bathroom.\n\nFuck, did the little one have to see me like this? If there was a rock bottom for me, this had to be about it.\n\n\"Go watch some TV Madi. Miss Whitney will be fine, she's sick. Hopefully she will be feeling better later today.\"\n\n\"Thanks Jenn.\" I was a mess. I'm not sure how I had a tank top on or shorts, but was glad I was somewhat decent. Jenn helped me up off the floor and got back to my bed.\n\n\"How did you get here?\"\n\n\"Molly called me last night. She told me about your run in with Heather and how you answered the phone drunk as a skunk. She was worried sick about you. Me being here is partly a favor to her. Your place was a mess when we got here. I put Madi down, and then got you to bed. You were passed out on the couch. I'm not surprised you don't remember anything from last night. At least I got you awake enough so you could sleepwalk up your stairs and into your own bed. I couldn't have done that by myself. Thanks, by the way, for not changing the security code, otherwise you would have been on your own.\"\n\nWe both sat on my bed for a bit. \"I'm sorry. When I figured out what a jerk I had been to you, I felt terrible. I kept wanting to talk to you, but--\"\n\n\"Well, I didn't make it easy for you, did I? Some of it was Vicki's idea. We receptionists haveta stick together, you know. She'd call me when you left your building and stayed on the line until you were well past the lobby.\"\n\nWhat a sneaky thing. Then she made me melt. \"Did you have to do that?\"\n\n\"Do what?\"\n\n\"You know, your thing. Tuck your hair behind your ear. Turns me on every time.\"\n\n\"Is my Whitney sexually frustrated?\" I felt her fingers brush some hair from my face. I whimpered in response. \"You know, the last week hasn't been easy for me, either. But I needed the space. I'm still mad at you. I needed some alone time. Still do.\"\n\n\"So why did you come over, then? Why not just let me lie in my own vomit?\"\n\n\"Well, part of me still loves you. The other part of me wants to strangle your neck.\"\n\n\"Oh.\" I got a whiff of her cucumber smell. She was right there next to me. I wanted to reach out and take her hand. To make this better. Make us better. But I wasn't sure how it would be taken.\n\n\"But the main reason is that we need to talk. I told you I was close to being ready. I think I am now.\"\n\nI gulped. What was coming next? Was this just going to confirm our breakup? \"Okay,\" I said meekly.\n\n\"Do you know why I'm mad at you?\"\n\n\"Because I threw a surprise party for Madi?\"\n\n\"Sort of, but not really. I'm frustrated that you didn't tell me or include me in the planning for my daughter's birthday party. But that's not the core problem.\"\n\n\"It's not?\" What was she getting at? My head hurt, and this conversation was not helping.\n\n\"I hadn't quite put it together when we fought after the party, but it's about control. I feel like I was losing control of my life, of my daughter's life. You were starting to take over, and I had no say in what was going on.\"\n\n\"That's not fair, I don't want to run your life.\"\n\n\"Are you sure about that?\" Her voice was a soft whisper. Not threatening in tone, but very threatening at the same time.\n\n\"Jennifer, how can you say that? That is not what I want to do.\"\n\n\"But I see you trying to do it. Trying to always have your way. Like trying to sneak your credit card in on me at the car parts store.\"\n\n\"I said I was sorry.\" Ugh, this was not going the way I wanted it to. I rubbed my throbbing temples.\n\n\"I know, but it feels like you don't respect me.\" I watched her bite her lip.\n\nI reached out and put my hand on hers. She didn't flinch. \"That's not who I want to be.\"\n\n\"I know. Deep down you're a good person. A great person. Someone I fell in love with. Someone I still want to be in love with. But I haven't felt like I'm being treated as an equal.\"\n\n\"I'm sorry I made you feel that way.\"\n\n\"Yeah.\"\n\nWe sat there for a minute, neither sure of what to say next. \"So where do we go from here?\"\n\n\"Where do you want it to go?\"\n\nWas that a longing look in her eyes? I wasn't sure. But I did know one thing. \"I don't want to lose you, Jenn. Can I get a second chance?\"\n\n\"I'd like to give you one. I don't want to lose you either. But I'm a bit scared. I was seeing signs of behavior that I don't want to be around. So this time we need to progress things a little more slowly. And can we talk about what we are going to do more before we do them and no more surprises?\"\n\n\"No more surprises.\" I hugged Jenn. Oh, it felt so good to have her in my arms, if for a moment. It almost let me forget the pounding in my head.\n\n\"Well, we better go downstairs. Someone wants to see you badly. She has been a total Grumpy Gus since her party. She misses her Whitney. I have had more fights with her than we have had in a long time. Wouldn't brush her teeth or go to bed on time. It was a fight for everything.\" True to form, as soon as we entered the living room, I was tackled by an exuberant bundle of energy.\n\n\"Are you feeling better Mommy said you were sick I've been playing with Skipper and watching tv are you and Mommy still mad at each other I missed you--\"\n\n\"I'm feeling a bit better, and much better now with you and your mommy here.\"\n\nJennifer\n\nThe next few weeks were much better than the previous one. Whitney and I were talking regularly again. We would have lunch together once a week and one or two evenings we would get together for dinner. I'm not sure you could say we were a couple, but we were being friends again. The slower approach was good for me. The time apart had given me an opportunity to think about my life and absorb some of the changes.\n\nIt was a good balance of my previous life, of just Madison and me, and also having Whitney around. Part of my realization had been that I needed some mother daughter time I hadn't been getting before. We resumed going to the library and playing in the park, just the two of us at times. For her part, Whitney was giving us some space and when we did things together actively solicited my opinion on what we should do. And every morning Madison would sit by the kitchen window eating her breakfast, waiting for Whitney to run past and wave to her. I know it was a small daily bonding moment for the two of them.\n\nIt was also during this time when I got more comfortable with who I was. A few of my coworkers had hit on me when I started working at Maritime, most not realizing I was in a relationship or who it was with at the time. But during our slowdown, as I was calling this time, one of the quieter men offered to take me out to dinner. He was a mate, or a second captain on a tug, and Captain Eriksen spoke highly of him. I was flattered, of course, but politely declined. The realization had come to me, regardless of what would happen between Whitney and me, I had zero interest anymore in men. Not this gentleman, Dallas, or any of the others.\n\n<p align=\"center\">_|/_</p>\n\n\"Can you please take this over to the corporate office when you get a moment?\" My boss Ginny handed me a thick manila envelope, sealed and addressed to the Payroll Department.\n\n\"Sure, happy to help.\"\n\n\"Thanks, no rush, just sometime before two.\"\n\n\"Got it.\" I took it over at lunch. It always felt good to get away from my desk and stretch my legs.\n\nI waved to Vicki at the front desk and dropped off the packet in the payroll office. As I was coming back into the hallway, I heard a familiar voice.\n\n\"Whitney's not here if you're looking for her. She's downtown talking to the accountants today and having lunch with Ben.\"\n\n\"Oh hi Mrs. Mitchell, thanks. I wasn't looking for her though. Just dropping off something. She did mention it to me though. How are you?\"\n\n\"Well, thank you. Say, do you have a few minutes? Can we talk in my office?\"\n\nI gulped and stood there for a moment. What was this going to be about? \"Uh, sure.\" I followed her down the hall to her office. It was large, with the windows overlooking the water, and could see past the Maritime office and down the canal to the shipyard. Across the room from her desk were a couple of sofas and a chair around a low table. I sat on an offered sofa while Mrs. Mitchell sat in what looked like her chair.\n\nShe looked at me and smiled. \"Can we chat as friends for a minute? Or at least can I be the mother of your friend and not the old boss lady for a bit?\"\n\n\"Um, okay?\" Where was this going? My heart started to race.\n\n\"How are you and Whitney doing? I know things have been a bit rocky, but I hear you're mending things and getting back together?\"\n\n\"Yeah, something along those lines. I don't think we've defined our current status.\"\n\n\"Good.\" Then she winced. \"Sorry, that didn't come out right. I'm glad you two are trying to work things out. It might not have seemed like it at first, but I do like you. I see the influence you have on my daughter. You balance her. Ben and I have talked a lot about you two, and I can tell she is seeing things differently than she did before she met you. She had every advantage in life given to her, and I think through you, she is seeing what most people go through.\"\n\nMrs. Mitchell shifted in her chair and continued, \"I have to admit, I was a bit disappointed in her when I found out what happened between you two. That took some courage on your part to call her out. She needs that from time to time.\"\n\n\"Um, thanks.\" Where was she going with this?\n\n\"You probably have realized this by now, but Whitney had a lot given to her growing up. We tried not to spoil her, but some was inevitable. I think every parent wants to give their child a better opportunity than they had. I see that in you and how hard you try to provide for Madison. I'm impressed by what you do to take care of her. It had to be\"--I could see her eyes looking around, searching for the right word--\"humbling to go back to catering and then find Ben and I at the event you were working.\" A pleasant, but concerned motherly smile was on her face.\n\n\"Yeah, it wasn't fun. But life happens and sometimes you just need to get a bit more to make ends meet.\" I wondered if she really understood what that truly meant. Did ends ever not meet for her?\n\nI watched her ponder things for a moment.\n\n\"I was meeting with my brothers and Whitney the other day, going over departmental reviews, and saw the marketing pieces you worked on. Those were exceptional. If I might be so bold, it looks like you have some talent in marketing. I know you were thinking of continuing your education. Have you considered marketing?\"\n\nI nodded my head.\n\n\"Regardless of what you choose, I want to encourage you to keep going. Are you familiar with our employee tuition reimbursement plan? It should cover what you need for going part time to the U. They have a good evening program for working adults, and a number of our employees have participated in it over the years.\"\n\n\"I've thought about it. But not much more than that.\"\n\n\"Well, look into it. I'd be more than happy to write you a personal recommendation. I know the dean, we're old friends, and I'll make sure he knows you are thinking about it. And, Jennifer, if you need someone to look after Madison in the evening, and Whitney isn't available. Call me, okay? I'm sure Ben and I can have her over and watch her for you. We both like her.\"\n\nI think I felt my jaw hit the floor. \"That's very nice of you, Mrs. Mitchell.\"\n\n\"Please call me Edith. Mrs. Mitchell was my mother-in-law. And sometime, we should have Madison over, just so you and Whitney can have some time alone. I remember when she was little it was always nice to get a break and spend time with Ben.\"\n\n\"I think we can work something out. I'm also going to be getting some breaks here when her father can come across the Sound and take her for a few hours. I'm looking forward to the simple things, like getting my hair cut without someone in tow.\"\n\nIt was then that Edith's assistant popped her head in and reminded her of a scheduled call. I excused myself, and as I walked back to the Maritime office, I thought about our conversation. Probably a good idea to look into the business program. I didn't think I wanted to stay behind the receptionist's desk my whole life.\n\n<p align=\"center\">_|/_</p>\n\nGinny came by on the first of April to deliver my paystub. I was rather looking forward to it as I was getting off of my probationary period and thus was getting a three dollar-per-hour pay increase. My medical was also kicking in and it felt good to know I was getting Madison and me off the state insurance plan. The benefits package at Maritime was good, and they covered all of mine, and half of Madison's insurance.\n\nI opened the stub and was shocked. I had been expecting it to be substantially more, but as I started to read it, I realized how much Madison's insurance was really costing me. My overall check was bigger, but not by much. Talk about a downer.\n\nMy phone rang, distracting me from my momentary depression. However, listening to a pissed off customer who insisted on yelling at me without letting me direct them to the people who could solve their problem didn't help.\n\nThe day continued with general crap coming my way for no apparent reason. Little problems that I normally would have shrugged off and dealt with, like the copy machine breaking down, just weighed on me. I got a chance to step away midafternoon and was out walking around the parking lot trying to clear my brain when I saw a familiar brunette walking by.\n\n\"Hey, what's up? Are you okay? You look down.\"\n\n\"Meh, one of those crappy days, you know? Whatca doing?\"\n\n\"Heading back to my office. Had a meeting over at the shipyard.\" She gave me a hug. \"Are you interested in coming over to my place for dinner tonight? You look like you could use a break.\"\n\n\"I could, but Madison didn't sleep well last night, and I think she could use a calm evening.\"\n\n\"Maybe I could come over with some takeout then? You don't look like you are up for cooking much.\"\n\n\"Yeah, takeout does sound good.\"\n\n\"Thai?\"\n\n\"Oh, Madison would love some Pad Thai.\"\n\n\"And let me guess, you want some Panang Curry.\"\n\nI smiled at the sound of my favorite dish. \"You know me all too well. Come over when you can this evening, okay? I think I better get back to being yelled at on the phone.\"\n\nShe gave me a hug and a word of encouragement before I headed back in.\n\nI needed it, too. The phone was lit up that afternoon, and I hardly got a break. When five o'clock rolled around, I made a dash for the door. It was Friday night, and I wanted to escape from a crappy day. But the crappiness continued to pile on when I picked up Madi. The head of the preschool let me know that two other kids had gotten ill and were sent home by lunchtime. Late in the afternoon, Madi had started to show signs of getting sick as well. She was curled up in a corner pretending to read a book, and it was all I could do to pick her up and get her to the car.\n\nI got her to lie down on the couch and made sure she had Nani with her. My new neighbors were yelling again on the other side of the wall. I thought about going over and asking them to keep it down, but I heard one of them tell the other to do so, and the general response back was to \"fuck off.\" I hadn't met them yet, but they sounded like jerks.",
        "Sitting next to Madi doing a sudoku on my phone, I heard a knock on my door. It was Whitney, and the smell of dinner started to fill the apartment. She did surprise me, though, but in a good way.\n\n\"I got you some flowers, and your favorite dark chocolate. You look like you could use some cheering up.\" I could see Madison smile at Whit when she gave them to me.\n\nWe walked into my kitchen. I think I have an old juice pitcher I could use as a vase. \"These are pretty Whitney, thanks.\" I gave her a peck on the cheek. It was the first time I had kissed her since the day of Madi's birthday party.\n\nThe muffled voices from next door started to get louder and more boisterous. I couldn't make out much of what they were saying other than more F bombs than I heard from our deck hands. Whit and I looked at each other, not quite sure what we could do.\n\n\"Are they always like this?\"\n\n\"They moved in a couple of weeks ago. They've been loud, but this is something else.\" I started to get up from my chair to bang on the wall when I heard gunshots. I instinctively ducked and when I looked up again, I saw a large hole had come through our joint wall. Madison screamed as a shotgun went off and a larger hole appeared right above her head.\n\nI leaped across the room and grabbed Madison. Whitney was opening the door and then slammed it shut. I saw her lock and hurriedly threw the deadbolt.\n\n\"Kitchen,\" she yelled. I pulled Madi from the couch and carried her into the U-shaped kitchen. In her fright she had dropped Nani, and her doll was left on the floor by the couch. I cowered in the corner of the kitchen, clutching Madison, trying to calm her down. Whit was there with us, phone in hand.\n\nI listened to her call the 911 dispatch and tell them what was going on. Apparently, she had seen someone fleeing the apartment next door and saw them gunned down on our sidewalk. She set the phone between us as she flipped it to the speaker phone.\n\n\"Ok, are all three of you safe at the moment?\"\n\n\"We're hiding in the kitchen.\"\n\n\"What have you got between you and the neighbors?\"\n\n\"There's the kitchen wall, and the fridge and dishwasher.\"\n\nThe dispatcher said we should stay there for the moment until the police arrived and could survey what was going on outside. We heard a few more shots fired and a lot more screaming. I held my baby and Whitney was holding me.\n\nWe were there for what felt like an eternity. There was a lot of commotion outside. We could hear police talking to the gunman and some occasional shots being fired out of the neighboring apartment.\n\n\"Whitney,\" the dispatcher said on the phone, \"are you still there?\"\n\n\"Yes,\"\n\n\"Okay, the situation commander is looking to get you three out. Do not leave your shelter until we say so. The gunman is shooting at anything that moves in front of your apartment. Do you understand?\"\n\n\"Yes.\"\n\n\"Ok, stay on the line with me. I'm going to keep this open for you as long as is needed, okay?\"\n\n\"Okay.\"\n\n\"But I'm going to go silent for a couple minutes. I'm going to try to patch the situation commander into your call. He is going to have some instructions for you.\"\n\n\"Okay.\" We both looked at each other. Whit smiled at me. \"We're going to get out of here.\"\n\nThe phone crackled again. \"Whitney?\"\n\n\"Here.\"\n\n\"This is Sergeant Nicklesen from the SWAT team. You're in the north apartment, right?\"\n\n\"Yes.\"\n\n\"We see a large window on the north side, looking up the street, but not directly onto the street. Is that correct?\"\n\n\"Yes, it's next to the kitchen area in the dining room. We're right next to it.\"\n\n\"Great, here is the plan. We are going to back up an armored truck and break the window. We're going to break the window and evacuate you through it.\"\n\nI looked across the kitchen, out the corner of the window and could see the big navy-blue truck backing up. It was angling in, trying to stay out of the sight line of the neighboring apartment.\n\n\"Okay, we have officers in place. Are you clear of the window?\"\n\n\"Yes.\"\n\nMoments later we heard glass shattering. A large officer covered with body armor vaulted through the opening. He was a hulk of a man and looked like he could have played for the Seahawks. But the smile and flash of his white teeth against his dark skin was pleasantly reassuring.\n\n\"Come on, I got you.\" I could feel him pull me from the corner and lead us to the window.\n\n\"NANI!\" Madison screamed as she saw her doll lying on the floor. Her little arms reached out, and she started to wiggle out of my hands.\n\nThe officer grabbed Madison from me and got her out the window into the arms of another officer. He helped me out and then helped Whitney. It was two steps, and we were in the back of a big vehicle, looking like something out of a war movie. I tried to hug and calm Madison down, but she kept screaming for her Nani doll. As soon as we were in, the other officers piled in with us.\n\n\"GO GO GO!\" yelled the black officer as he climbed through the back door of the truck and closed the door. \"Is this your Nani?\" He had Madison's doll in his hands and was holding it out to her. She took her and hugged her Nani.\n\nThe truck swayed a bit as we could feel it drive off the curb. A minute later, the truck came to a stop. The officer opened the door, and we were escorted outside. I stood there in my socks. Both Madison and I had taken off our shoes when we first got home and were now standing in our stocking feet.\n\nLooking around, I realized we had been taken around the block to where the police had set up a command station in a lot under construction. Several officers checked us out to make sure we were physically unhurt and began to ask a lot of questions. Whitney was pulled to the side, as a man in a suit asked her more questions. I think he was from homicide or something. She had seen the man shot on the street. That was my guess, at least.\n\nSomeone produced a blanket and wrapped it around me as I sat on a large rock holding Madison. Finally, a few minutes later, Whitney joined us.\n\n\"Remind me not to come over for dinner next time you have a crappy day,\" she joked.\n\n\"Yeah, really.\"\n\n\"Are you alright?\" I looked at her and shrugged. No, not really. I wanted to cry. But I had to be tough for Madison. Her little body was shaking, and she was clinging to me.\n\n*BOOM*\n\nA loud explosion rocked us. Even around the block we could feel its concussive wave. The sound of shattering glass and people yelling filled the air. Car alarms began to blare. We both stood up and walked to the end of the block. Flames were pouring out of all the windows of our apartment building. The sounds of sirens could be heard getting closer, and one fire truck was already on the scene. I looked over at an officer in disbelief.\n\n\"They must have broken open the gas line and lit it. There's not going to be much left I think when it's done. I'm sorry ma'am.\"\n\nWhitney barely caught me as I collapsed. She and the officer helped me back to the command post and got me to sit back down on the rock. I clung to Madison, who had her head buried in my shoulder, and looked at Whitney. At least the two most important people were still with me. I don't know what I would have done if I lost either of them.\n\nWhit held me. There was nothing more I could do now. I cried for a bit, and Madison did as well. Fire trucks and ambulances filled the street. Several neighbors were being treated for minor injuries. I saw another family I recognized who lived in the building, also in total disbelief.\n\nFrom the questions asked of me earlier, the police believed the people were running drugs out of the apartment and tonight's fracas was likely caused by a fight between a couple dealers.\n\nCuriosity got the best of me, and we walked back down to the corner of the block and could see the fire was out. The roof was mostly gone, and if anything survived, it was probably not going to be in any useful shape.\n\n\"Ms. DeLuca?\" an older woman in a red jacket with reflective stripes on it was walking over, a rugged tablet computer in hand.\n\n\"Yes?\"\n\n\"Hi, I'm Emily with the Red Cross. I understand you lived in the apartment building. Is there anything we can do to help you? Do you have a place you can go to tonight?\"\n\nI stood with a blank look on my face.\n\n\"Jennifer and Madison can stay with me.\" Whit put her hand on my shoulder as she spoke. \"Okay with you?\"\n\nMy puffy red eyes blinked, and I nodded. My emotions were in overdrive, and I couldn't form words.\n\n\"And you are?\"\n\n\"Whitney Mitchell.\"\n\n\"And what is your relationship?\" Emily was busy typing on her tablet. She was filling out some form and wasn't looking at us at the moment.\n\n\"Friend,\" she replied.\n\n\"No,\" I piped up. \"Girlfriend.\"\n\nWhit looked at me. The smile on her face was a ray of joy in all the sadness of the moment.\n\n\"Significant other?\" Emily looked up at us both.\n\n\"Yes.\" I leaned over to her and gave her a kiss. Just a simple I love you kiss, but that night had helped me realize again she meant the world to me. Emily asked a lot more questions of me. She must have had a database or something she had to fill out to track their disaster response.\n\nShe gave both Whit and me a card with her contact info on it and moved over to the Martinezs who were standing nearby. They lived in the apartment at the far end of the building. Fortunately the only other one in our building was empty at the moment. So it was only them and us who were homeless.\n\n\"Jenn, don't worry. Anything you need I'm here for you, okay?\"\n\n\"I know.\" I began to walk down to what was left of my apartment. The fire department was cleaning up their gear, and the police were swarming all over the place. We stood on the edge of the barricade tape and watched for a bit.\n\nI could look through my kitchen window a bit and saw nothing but black. The remains of the flowers Whit had given me peeked above the charred ceramic thrift store pitcher. I sat on the grass, ignoring the dampness left from the spray of the firefighters. Gone, it was all gone. The realization kept playing through my head. I had been down to hardly any possessions, but never to this depth. There were always a few clothes and personal items for Madison and me. Now we had nothing, just the clothes on our backs. At least Madison still had Nani.\n\nI gently brushed some hair out of Madison's face. Her eyes were as red as mine felt. Arms wrapped around me and I caught a whiff of lavender amongst all the smells of fire and scorched furniture. Somehow, I managed a small smile to my girl.\n\nThe SWAT officer who had grabbed Nani walked over to us. He had taken his body armor off and was now in a windbreaker and ball cap.\n\n\"I'm glad we got you out when we did. Are you all okay?\" Impressively, none of us even had a scratch.\n\n\"Is Nani going to be okay?\" He brushed a lock of hair out of Madison's face.\n\n\"Yeah, but she is scared,\" Madi mumbled.\n\n\"I'm not surprised. This was a scary event. But you have your mommy and friend to take care of you so there's no reason to be scared anymore, okay?\"\n\nMadison slowly bobbed her head up and down. We looked around some more. I could see my car parked right in front of the apartment building and, even in the light of the streetlamps, I could see a few bullet holes in the car. It was probably a loss as well. Whitney's Jeep was parked further down the street, and I wondered if it was okay, but I couldn't see from here.\n\nSince there were still a number of emergency vehicles still in the street, there was no way we were getting it out anytime soon. We walked back to the command post and let the officer in charge know we were walking over to Whitney's. Emily checked in with us again to make sure we were good. I assured her I was in good hands.\n\n\"Do you have your phone or is it still in the apartment?\" Whit asked.\n\n\"No, it's gone as well.\"\n\nWhit texted her parents as we made our way to her townhouse. Moments later, her phone rang.\n\n\"Hi Mom--Yes, gone--That's Jenn's place in the news. Yes, they're safe, we all are. We were in her apartment when it started.\" She looked at me. I knew what Edith was thinking. A mom's job is to worry, even when her baby is almost thirty.\n\n\"Everything mom. Literally the only things they have right now is the clothing on their backs and Nani. At least they saved Madi's favorite doll--Oh, that would be lovely mom. They didn't even make it out with any shoes... I'll tell Jenn. Anything will be a big help. Okay, I will see her in a bit.\"\n\n\"What'd she say?\" I asked as we reached the house and went inside.\n\n\"Mom's going to call my Aunt Helen and see if she still has any of Amber's old clothing that might fit Madison. Hopefully, there's a change of clothing we can put together so we can get her to bed and go shopping tomorrow.\"\n\nSince this was the queen of all fuckupery, Whit pulled out some ice cream. We never did get to eat the Thai food Whit had brought over. But everyone was too exhausted to even eat ice cream. We took Madison up to the guest room and got her ready for bed. Whit pulled out a tee shirt for Madi, and I got her ready and tucked her into bed. I stayed with her for a few minutes as the doorbell rang.\n\nIt was Whit's aunt, with a couple of sacks of clothing. I thanked her for coming over so late. It wasn't much, but it would get us going. I headed upstairs and dumped them into the washing machine. Who knows how long they had been in the closet or boxed away. I was pressing the start button when Whit came over to me.\n\n\"Thanks for all your help,\" I said.\n\n\"You know I'm here for you. Anything you need?\"\n\nI took her hand. It had been a long time since I gazed into her beautiful brown eyes. \"I love you.\"\n\n\"I know.\"\n\n\"Hold me.\" She did, of course. I felt complete again being held by her. Everything was going to be okay. I let out a yawn and slipped from her arms.\n\n\"I think I need to go to bed now,\" I said. Wandering down the hall to her room, I looked over my shoulder. \"You coming? I think I need to be held some more.\"\n\nTo be continued...\n\n<p align=\"center\">_|/_</p>\n\nAuthor's note: Thank you for sticking around to the end of this chapter. I hope you enjoyed it. If so, please consider providing some feedback. Votes, comments, or PMs are all welcome. I have more chapters of this story in the works, so follow me to be notified when the next part is published. \n\nA special thanks goes to my friends, beta readers and editing crew, AwkwardMD, Bramblethorn, BrokenSpokes, and Rileyworks. They make me look like a competent storyteller, thank you.\n\nIf you are looking for something more to read, check out the authors I follow. Maybe you'll find something there you like."
    ],
    "authorname": "GinnyPPC",
    "tags": [
        "lesbian romance",
        "single mom",
        "romance",
        "drama",
        "lesbian drama",
        "love story",
        "romantic"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/catering-girl-ch-05"
}