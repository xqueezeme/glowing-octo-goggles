{
    "title": "See Through Me Ch. 17",
    "pages": [
        "Notes from the author:\n\nWell my lovelies, thank you so much for sticking with me through my first publication on Lit. I have been writing this story for over a year! I can't believe it. But I feel that the pace I set for myself (one chapter a month) has kept things alive and allowed me to store up creative juices for a while, and then share them with all of you. Otherwise, I very likely would have run out of steam and the story would have ended weakly, if at all. Thank you to all those who have been understanding and supportive and appreciative of my rather isolated genre of kink. I hate spoilers, so I will only say thank you for reading, and please let me know what you think in the comments! Happy New Year! -J\n\n*****\n\nIt's funny how life throws you curve balls. And how sometimes it throws you over a cliff with nothing but a sock to break your fall.\n\nAs I stared out at the thunderous ocean waves, I tried to clear my mind. I closed my eyes, letting the serene ocean's song penetrate my ears, the mist fill my lungs, and the vibrations run through me. And naturally, I thought of Joe. I had always sucked at meditation.\n\nWhen I awoke this morning I was stunned to find myself still clothed in the robe from last night. This was the first time I had woken up in Joe's arms not buck naked as the day I was born. He had held me close to him all night long.\n\nGod, Joe's arm had to be numb after hours in this position, I thought. But he seemed content as could be, sound asleep. I took a moment to appreciate his fuzzy warmth and panty-dropping musk before I snuck out of bed to enjoy the last pinks of the sunrise.\n\nWhen finally the blue had claimed the last of the sky, I heard the sliding door open as Joe emerged to join me on the balcony. \n\n\"Good morning,\" he greeted softly, taking the chair beside me.\n\n\"Morning,\" I replied, just as softly. \n\nMy hair was blowing all over the place, and I wrapped it up behind me to tame it. I couldn't look at him. And this time it was for an entirely different reason.\n\nWe sat there for several minutes in silence, just staring out at the rippling waves.\n\n\"You're letting me go, aren't you?\" I asked, although it was not really a question.\n\nA few moments passed before Joe answered. \n\n\"I think it's best.\"\n\nI swallowed the lump in my throat and took a deep breath. Just breathe Kate. Just breathe. You were expecting this. You knew this was coming and you made your peace with it. Right?\n\nNope.\n\nMy forehead and ears were buzzing, and tears were dangerously close. I needed to get out of here before I broke down in front of Joe. I couldn't let him see me cry.\n\nUnfortunately, I would not be able to get inside without passing him. I made a break for it.\n\nJoe must have sensed my distress, because he tried to snatch my hand as I scurried by him. I dodged him and shoved the door open as fast as I could, neglecting to shut it because I knew Joe was already on my tail. \n\n\"Kate!\" Joe admonished. \"Kate, don't be upset. This is for the best,\" Joe explained, trying to rationalize like I was a little girl.\n\nI ignored him, looking for something to wear other than the robe. I managed to find the long pink dress in the coat closet, which had a cleaning tag on it. Nice touch, I thought bitterly.\n\nWithout a word, I took the dress and locked myself in the bathroom to change. Fuck him. Fuck him. There was no way I was letting Joe watch as I changed from his fucking robe into his fucking dress.\n\nI looked in the mirror after shimmying quickly into the dress. My face was flushed. It was obvious that I was upset, on the verge of tears. That I was angry. \n\nAngry about what Kate? Angry that he doesn't want to marry you and take you away to his castle? Angry that he doesn't want to be tied down? That he doesn't need to be tied down? That he is too good for you?\n\nBreathe Kate. It's the only way you'll get through this. I sucked in air through my nose, and leaned my head back to look at the ceiling, blinking away tears.\n\nI brushed my teeth and splashed water on my face before emerging from the bathroom.\n\n\"Where's my stuff?\" I asked brusquely. I hated feeling like a pouty little girl, like I was the one being unreasonable.\n\nJoe winced, and just as I was expecting him to say he threw my stuff overboard, he reached up to the top shelf of the closet and pulled down a gold gift bag, handing it to me. \n\n\"Cute,\" I smirked as I took it from him and withdrew my phone, wallet, and key.\n\nRe-depositing them into my purse, I took a moment to remove the necklace Joe had gifted me with only yesterday. I loved it, but it wouldn't be right to take it.\n\n\"Kate, please keep it,\" Joe pleaded.\n\n\"Why Joe? So I can be constantly reminded of you? So I won't forget this disaster of a vacation?\" I scoffed. \"I assure you Joe, I will not soon forget you. I don't think it will be possible to forget you.\" The words were tender, but my tone was bitter.\n\n\"Jesus Kate, will you just be reasonable? I guarantee you'll be better off without me,\" Joe argued, becoming visibly agitated.\n\n\"Reasonable? I think I was perfectly reasonable before we met Joe. Before you fucking ruined me! If I am lacking reason at all, you have only yourself to blame. You take your fucking necklace, and I'll take what's left of my dignity, and my heart!\"\n\nWith that, I turned and stormed to the door.\n\n\"Kate wait!\" Joe snapped.\n\nI paid him no mind, and had just unbolted the door when he grabbed me and spun me around to face him. \n\nBefore I knew what I was doing, my hand had made sharp contact with Joe's face. I slapped him with all the force I could muster.\n\n\"Fuck!\" Joe cursed before pinning my arms, and forcing me against the door.\n\n\"Let me go you bastard! Just let me go!\" I screamed, all the while becoming moist between my legs at the feel of the hard cold door against my back.\n\n\"I don't want to let you go damn it! But I have to!\" Joe shouted back at me.\n\nI ceased my struggling, overwhelmed by his words.\n\n\"Don't you see Kate? I can't protect you. I promised to protect you, and I failed!\"\n\nJoe leaned forward and closed his eyes, our foreheads touching.\n\n\"I failed,\" Joe choked, his hands loosening on my arms.\n\n\"What do you mean you failed?\" I asked. \"Scott's attack on me wasn't your fault.\"\n\n\"Not from Scott,\" Joe replied darkly. \"From myself.\"\n\nMy eyes widened at his shocking declaration.\n\n\"You undo me Kate. You strip me of my control, and when you do, I am powerless to protect you.\"\n\nFor several seconds, there was silence.\n\n\"Maybe I don't want your protection,\" I whispered finally. \"Maybe what I want is for you to kiss me.\"\n\nBefore Joe could pull away, I leaned forward and kissed him deeply on the lips.\n\nSuddenly Joe released my arms, and I took the opportunity to wrap them around his neck, running my fingers through his hair. I enjoyed his muffled groan as I did so.\n\nJoe's hands moved to my sides, grazing my breasts and making me moan wantonly into his mouth.\n\n\"Kate don't,\" Joe gushed as he pulled away, clearly trying to regain his senses. \"I can't hold back. If you do this, I can't hold back!\"\n\n\"Don't hold back then,\" was my simple reply as I tangled my fingers in his hair and pulled his lips back to mine.\n\n\"Mmmmhhh,\" Joe groaned into my mouth, his hands lowering to my waist, pulling me against him.\n\nAnd once again, my body was aflame. I pressed my breasts into Joe's chest in encouragement, drawing a growl from him. God, I had missed that primitive growl.\n\nSuddenly my legs were cold, and I realized Joe was gathering my skirt. \n\nI gasped into Joe's mouth when I felt his fingers brush over my bare mound, dipping lower to feel my slick folds, drawing another intoxicating growl from him.\n\nJoe pulled free of my lips, and looked into my eyes. He was trembling. His eyes asked the question they had never asked, and I nodded. \n\nJoe shuddered as my hands went to his boxer-clad erection. I licked my lips and closed my eyes when I felt his rigid length, so hot and firm beneath the smooth cool cotton. On impulse, I squeezed his shaft gently through the material.\n\n\"Oh God! Yes Kate!\" Joe gasped.\n\nI was the one trembling now as I gently released his cock from the tight confines of his shorts. My pussy convulsed at Joe's sharp hiss of anticipation.\n\nJoe was ready, and lifted me like I weighed nothing. Pressing me against the door, he took over, guiding the head to my eager pussy lips. \n\nI wrapped my legs tight around him, and whispered, \"Don't hold back.\"\n\nNeeding no further invitation, Joe thrust in.\n\n\"Shit!\" Joe hissed as he bottomed out, my cunt clenching around him in desperation.\n\nHe drove into me with abandon, drawing all manner of sexual sounds from my lips. I whimpered when he thrust extra hard, and squealed when my pussy quivered and tingled in approval.\n\n\"Harder,\" I begged, drawing another pussy slickening growl from Joe as he complied, thrusting hard against my cervix.\n\nIt hurt, but I loved it. I wanted to give it to him. Give him my pain, my submission.\n\n\"Little whore,\" Joe rasped mid thrust.\n\n\"Yes!\" I purred, my walls clamping down on him in excitement.\n\n\"Ffffuck, your cunt's so tight! You want it slut, don't you?\" Joe berated, sending shivers all over me.\n\n\"Aaahhh!!\" I screamed, my pussy creaming all over Joe's cock. Nothing got me off faster than his harsh words. Still he kept thrusting.\n\nMy walls were now constantly gripping his shaft, the pleasure slowly transitioning into over-stimulation.\n\n\"Joe please! I can't take much more!\" I begged.\n\n\"You'll take it slut,\" Joe hissed, licking over his mark. \"You'll take what I give you.\"\n\nHis teeth grazed over my neck, causing me to shiver and my pussy to juice even more for him. I wanted it.\n\n\"Please Joe, please!\" I cried, grinding myself down on him, incapable of anything more articulate. \n\nI didn't want to hide anymore. To deny my desire for him anymore. I wanted him to mark me. Joe must have sensed this, because his body suddenly went rigid. As he cursed, I felt my nipples harden even more.\n\n\"Aaahh fuck...you tight little cunt!\" Joe howled, taking a final deep thrust. \"Aahhh! Aahhh! Aaahhh!!\"\n\nI felt his stiff rod twitching again and again as he spent himself inside me, his nails digging into my hips. I relaxed my pussy as best I could, trying to keep his cum as long as possible in my upright position.\n\nJoe trembled as he finished his release, and with the last of his strength, carried me over to the bed. We collapsed together into the messy tangled sheets, both thoroughly content, his cock still buried safely within my pussy. \n\n--\n\nChrist. This wasn't how it was supposed to go. But I'd be lying if I said I wasn't relieved. She wanted me. She wanted me. \n\nI was more than relieved. I was overjoyed. But at the same time I was terrified. I was still concerned for Kate's safety, in more ways than one. She had to know what she was getting into before we took things further.\n\nWe lay there together, both still recovering from our long overdue coupling against that damned door. We had both wanted it that first night, and multiple times over the course of this cruise, and finally it was. As cheaply as it could have been construed, our most recent fucking held such significance. She had embraced me. Invited me. She had consented.\n\n\"So you really want me?\"\n\nKate's sweet words broke my nervous train of thought, and I smiled warmly at her.\n\n\"Of course I want you Kate. I want you like I've never wanted anyone,\" I replied.\n\n\"Well I suppose you have made that clear,\" Kate giggled. \"But I guess what I meant was, do you really want to keep me? To be in a relationship?\" Kate re-iterated.\n\n\"I want you to be mine. Completely.\"\n\n\"Oh,\" Kate whispered, her eyes traveling down to my chest again.\n\n\"Kate?\" I prompted her.\n\n\"Huh?\" she replied, looking up at me again.\n\n\"Take off your dress. Then go get your necklace, and bring it to me,\" I commanded.\n\nShyly, Kate blushed and rose from the bed. After shedding her watermelon dress rather seductively, she walked away from me towards the dresser where she had left the necklace. I leered at her, savoring the view of my essence dripping down her thighs as she walked. \n\nAs she returned and handed me the necklace, I looked at her solemnly.\n\n\"Kate, I want you to wear this. But I don't own you. Not yet. You need to submit to me first, and to do so, you must profess that you want me and promise to obey me in all things. To succumb to my wishes, both sexual and non.\"\n\nKate blinked, clearly overwhelmed with emotion, though I couldn't tell if it was good or bad.\n\n\"I am committing to you,\" I declared. \"I want to give you all you desire, but it has to be a two way street. Do you understand?\"\n\nKate nodded, then frowned.\n\n\"What does this mean Joe? I mean, how will it affect my life?\" she asked.\n\n\"You will move in with me,\" I explained. \"You can keep your job if you like, but you must make yourself available to me when you are off work. You can see your friends and family anytime you wish, but I expect you to keep me informed, and I may decide to assign you an escort.\" Her eyebrows raised at that.\n\n\"And,\" I continued, \"I expect you to bear my child. Hopefully children.\" I reached out and stroked her naked belly, smiling when she shivered in response.\n\n\"Do you accept?\" I asked, my voice urgent even as I struggled to harness my desire.\n\nKate blinked, shaking her head slightly.\n\nI held my breath as several moments passed.\n\n\"Yes,\" Kate whispered, her eyes trained on the bed sheets.\n\nSwallowing the lump in my throat and breathing in deep, I lifted her chin with my finger.\n\n\"Kate?\"\n\nShe looked into my eyes, her expression unreadable.\n\n\"Do you want me?\" \n\n\"Yes.\"\n\n\"Do you promise to obey me in all things?\" \n\n\"Yes.\"\n\n\"Do you promise to succumb to my wishes, both sexual and non?\" \n\n\"Yes.\"\n\nShe had tears in her eyes, and upon her final \"Yes\" I drew her into my embrace and kissed her tenderly.\n\nAfter holding her in my arms for a while, I sat us up straight and instructed her, \"Lift your hair.\"\n\nShe blushed, and lifted her gorgeous locks up into a twist, baring her beautiful soft neck.\n\n\"This is a symbol of my ownership of you Kate. You're mine now,\" I declared as I fastened the necklace.\n\nLooking into her eyes, I re-iterated, \"This is not a game Kate. As long as you wear this, or anything else I give you, you are mine.\"\n\nShe nodded, blushing. God, I loved the blush of her cheeks.\n\n\"What do we do now?\" she asked.\n\n\"We eat. I'll order us some bearclaws and fruit. And then love,\" I continued softly, \"I'm going to impregnate you.\" \n\nAnother shiver.\n\nI called room service and asked them to deliver quickly if possible. If we sat here too long without observers I would not be able to wait til after breakfast. Hell, even with observers I was questioning my ability to resist. Yesterday had certainly tested my limits as far as that was concerned. Which gave me an idea for what to do after we had breakfast. It would be her first test of submission, now that she was officially mine. I grinned in cunning anticipation, and Kate noticed, responding with a wary expression. \n\n-\n\nDamn him. He was definitely exploiting my appreciation for bearclaws. Hell, it was more than an appreciation. At this rate I would be fat as a fucking pig. Joe didn't seem nearly as enraptured as I when it came to pastries, but he was definitely enjoying watching me eat mine. \n\nThe fruit salad was a perfect compliment to the delectable pastry, and I leant back in my chair thoroughly content, but thank God not stuffed. Perhaps that was part of Joe's plan all along. No big breakfast. No food coma. He had other plans. I groaned inwardly, but all the while my pulse was racing with excitement.\n\nI couldn't believe all that had transpired in the last hour alone. I had consented to be his. To do whatever he asked, or rather demanded. I had consented, fully, to submit to him. I prayed that I would not regret this decision tomorrow, because Joe seemed to have every intention of sealing this deal. And the thought had me soaked between my legs. Not just with his previous emission.\n\nJoe rose suddenly, and his voice deepened. \"Follow me.\"\n\nHe moved to the bed, and I followed. Commanding me to remove the robe I had donned when room service brought our breakfast, Joe turned and rummaged through his suitcase, palming whatever it was he was going to use on me as he came to the bed. I swallowed in fear and delicious anticipation.\n\nRemoving his boxers totally unabashedly, he looked at me with a conviction that made me weak in the knees.\n\n\"Do you want me Kate?\"\n\n\"Yes,\" I whispered, overwhelmed by his stern approach.\n\nJoe nodded in affirmation.\n\n\"Then you will prove it today. You will show me how much you want me. How much you share my desires.\"\n\nJoe shifted the pillows on the bed a bit and lay with his head propped up.\n\n\"Come and straddle me,\" he ordered, his tone gentle but brooking no argument.\n\nI obeyed, curious as to what he had planned. I crawled over the bed to him, straddling his waist. I had an idea of where this was going.\n\n\"Touch yourself Kate.\"\n\nOf course, I was wrong.\n\n\"What?\" I gasped.\n\nBefore I knew it, Joe had slapped my breast. Not super hard, but enough to get my attention and let me know that he meant business. I winced in mild discomfort.\n\n\"You heard me. Do it now.\"\n\nI had been stupid. I had professed to obey him, agreed to his explicit terms, and on his first challenge, I had questioned him.\n\nBut I knew not how to begin. I had never masturbated in front of anyone before. With the exception of yesterday, which was under duress. This was more intimate, and yet somehow I felt more vulnerable and self-conscious.\n\nTrying to be graceful while performing such a crude act was a challenge. I brought my fingers to my mouth and sucked briefly on them, tingling throughout at the fiery lust that shone immediately in Joe's eyes.\n\nResting my right hand on my thigh, I brought my left hand to my mound, slowly and softly roaming over it, appreciating the soft, baby smooth expanse of skin. Joe had shaved me here. He had demonstrated his dominance over me, choosing how he wished to have his property displayed.\n\n\"Mmmm,\" I hummed as I closed my eyes in recollection.\n\n\"Good girl,\" Joe growled. \"Now stroke your pussy lips for me.\"\n\nPanting, I slowly complied. My fingers slipped lower, almost afraid of what they would find.\n\nI inadvertently licked my lips when I felt the sopping wetness between my legs.\n\n\"You're wet,\" Joe stated. \n\nHe knew what a slut I was. How I wanted him. I could feel his cock nestled between my ass cheeks, his hair tickling my rear entrance, sending shivers through me, causing me to gently hump the air. My legs were shaking, held apart my Joe's warm torso. I was at his mercy, and my pussy clenched in desire.\n\n\"Circle your clit now, but don't touch,\" Joe rasped, his tone betraying his appreciation.\n\nI bit my lip, and proceeded to lightly circle around my already throbbing clit. I wouldn't need to touch it at all to cum. I would come apart momentarily under Joe's command, I had little doubt.\n\n\"Look at me Kate,\" Joe commanded. \"You will look at me while you touch yourself.\"\n\n\"Joe, please,\" I whispered, humping my hips towards him.\n\n\"Keep circling your clit, but do not cum,\" he ordered. \"You will not cum until you are milking my cock of its seed.\"\n\n\"I can't hold back Joe!\" I cried. \"Joe please!\"\n\n\"You will fucking hold back. Or else,\" he warned.\n\nMy cunt clenched at the air at his harsh words. I was so close. Didn't he know that threatening me would only push me further towards disobeying him?\n\nI breathed in deep, trying to get control of myself before I gave him a reason to punish me. I didn't want to fail on this first test of my promise to him, even though he was probably setting me up to fail. It was just his way. But I was determined to give it my best shot. Maybe this time, I would win.",
        "\"Tell me who owns you Kate,\" Joe demanded.\n\n\"You Joe, only you,\" I gushed.\n\n\"Beg me Kate. Tell me what you want, and beg me for it.\"\n\nI swallowed, and tried to avoid my clit in the constant rotations of my fingers.\n\n\"I want your cock Joe. I want to cum. Please let me,\" I tried.\n\n\"I'm sure you can do better than that cunt,\" he drawled.\n\n\"Please! I need it Joe. I need your cock to fill me! I want to feel it fill me up, hurting me, fucking me. I want to cum on your cock and milk your cum from you. I want to please you!\"\n\n\"Now those are some magic words cunt,\" Joe growled in approval. \"Okay then. Raise up a bit, and move over my cock, but don't put it in yet.\"\n\n\"Mmm,\" I licked my lips in excitement as I obeyed. His cock was so long and erect that I had trouble straddling it without penetrating myself.\n\n\"Listen closely whore,\" Joe instructed. \"You will not take me inside you until I say, and you will not cum until I say. You will look at me only, and let me see your desire.\"\n\nI nodded, my pussy practically leaking all over him.\n\n\"Rub yourself on my cock. Get it all nice and wet.\"\n\nIt was awkward, but I did my best. The problem was that it was hard to avoid brushing my clit against him as well. I hissed in desperation as his frenulum dragged over my clit a couple times. I very nearly came, and Joe saw it in my face. \n\n\"Easy pet. It's not nearly time.\"\n\nI nodded, panting, my eyes now watering from exertion.\n\n\"Please Joe, please,\" I begged again.\n\n\"That's my girl,\" Joe praised. \"Take the head inside you now.\"\n\nI exhaled in relief, and quickly lined his cock head up with my pussy, gently lowering myself, careful not to take more of his cock.\n\n\"Squeeze it,\" he ordered.\n\nI obeyed, and groaned at the sensation.\n\nJoe's voice was hoarse now as he went on. \"Circle your hips.\"\n\nI did my best to circle my hips without losing my balance, or taking more of his cock than I was allowed. It was an obscene whorish dance, purely to amuse him no doubt. But while I was annoyed at this, I was too busy trying not to cum to do much about it.\n\n\"Fondle your breasts.\"\n\nOh God.\n\nIt was an act of depraved contortion. Trying to balance myself over his huge cock, trying not to take more than the head while I gyrated atop him, trying not to cum from those sensations, and now trying not to cum from touching my tits.\n\n\"Joe, I'm going to fall!\" I whined.\n\n\"You may take a little more of my cock. Just a little.\"\n\nI shivered in relief, grateful to be able to relieve some of the strain on my legs.\n\n\"That's enough pet,\" he warned as I sank down on him, probably no more than an inch. But it was something.\n\n\"Keep circling your hips. And squeeze your nipples for me,\" Joe instructed calmly.\n\n\"Aaahhh,\" I groaned, my eyes scrunching closed in frustration.\n\n\"Eyes on me pet,\" Joe warned. \n\nPanting, I obeyed. I let him see my desire, and my need for release.\n\n\"Get your nipples harder,\" he commanded sternly.\n\nI grimaced as I pinched harder, flicking them with my nails.\n\n\"Good girl,\" he purred. \"Now, hold your tits out for me.\"\n\nOh no.\n\n\"We're going to play a game pet. A game of obedience.\"\n\nOh shit.\n\nSure enough, he held up the clamps.\n\n\"No Joe,\" I whispered. I regretted it immediately when he raised his eyebrows.\n\n\"Beg your pardon?\" he teased. \n\n\"Sorry, nothing,\" I said, hoping he would forget it.\n\n\"Good. Now, I am going to apply these, on the lowest setting. Depending on how much you want to cum, you will tighten them accordingly.\"\n\nHoly shit.\n\nJoe laughed at my shocked expression.\n\n\"I'm in a generous mood though. We'll start slow. Tighten them, twist gently.\"\n\nI hesitated, but as the strain on my legs intensified, I knew I had to get things going. I tightened the clamps ever so slightly.\n\n\"Now I know you can do better than that pet. We can start slow, but not that slow. You want to cum don't you?\"\n\n\"Yes I want to cum Joe, but it hurts!\" I whimpered.\n\n\"I know baby,\" he grinned, making me flush as I squeezed down on his cock.\n\nI tightened them a little more, hoping he would be satisfied.\n\n\"That's good enough for now. You may take a little more of my cock. Just a little now.\"\n\nHow Joe held his own during all this, I had no idea. Yes, he had cum not too long ago, but this was ridiculous. Apparently he enjoyed torturing me this way far more than he did ejaculation. Crazy.\n\n\"Move your pussy up and down on me. Don't take more than I say though, and don't cum,\" Joe warned.\n\nSomehow his commanding me not to cum just made me want it that much more. It made me tremble inside. Deep down, I think I wanted to cum early, just so I could find out what he would do about it. I smirked briefly at the thought.\n\n\"Something funny pet?\" Joe asked rhetorically. \"Tighten the clamps.\"\n\n\"Aaghhh,\" I groaned again. Not this soon. Surely not this soon.\n\n\"If you want to cum, you will tighten those fucking clamps Kate.\"\n\nI nodded, and shaking, tightened them again. It hurt, but it also made my pussy clench down on his shaft sending shivers through me all the way to my clit.\n\nJoe hissed in appreciation.\n\n\"You may take a little more of me,\" Joe granted. \n\nI could see that he was nearing his breaking point as well. Thank Christ. I mewed in delight as I sunk down more onto his twitching cock.\n\n\"Tell me what you want Kate,\" Joe prompted, intent on milking every last bit of humiliation out of me in his little 'game'.\n\n\"I want you Joe,\" I gasped. \"I want more of your cock. I want it to fill me.\"\n\n\"Tighten the clamps.\"\n\n\"Aahh,\" I whined. But I obeyed. The pressure on my nipples was intense, but it was starting to feel different. Being forced to tighten them myself was so humiliating, so thrilling, it almost felt...good.\n\n\"Take the rest of my cock in your pussy and ride me, slowly.\"\n\nA bit too eagerly, I let gravity pull me downward onto him. I winced as he hit my cervix, and after orienting myself, I began to hump my hips forward and backward, slowly as I could bear. I needed to cum so badly.\n\nMy jaw clenched and I trembled, riding him clumsily as I struggled to hold my orgasm at bay.\n\n\"How much do you want to cum Kate?\" Joe asked.\n\n\"I have to cum Joe, please! I need it so badly! Please!\" I pleaded, my begging not feigned in any way.\n\n\"We'll see. Circle your clit again for me,\" he ordered.\n\n\"Joe I can't! Please! I'll cum!\"\n\n\"I don't like your attitude Kate. Tighten the clamps.\"\n\nI sobbed, but reached up with trembling hands to tighten them. \n\n\"Please Joe,\" I begged one last time, but was met with only a stern glare.\n\nSlowing my hips, I adjusted them tighter, as tight as I could stand.\n\n\"More,\" Joe demanded.\n\nTears threatened to spill over as I obeyed, panting with...was it arousal?\n\n\"I can feel your cunt juices seeping down over my balls pet,\" Joe taunted. \"Your body wants the pain. You'll learn to crave it. You will beg for it again and again.\"\n\nMy breasts heaved as I responded to his dirty words, my hips thrusting faster on his dick.\n\n\"Mmmm, good cunt,\" Joe praised.\n\nI licked my lips again at his approval, embracing the pain, embracing submission.\n\n\"I'm getting close Darling, but I want you to know something before I get there. You are riding me.\"\n\nWell that seemed pretty redundant.\n\n\"And you are doing it of your own accord. You are grinding yourself down on my cock, knowing that I will soon cum in you. You are begging to cum, begging me to cum inside of you. You are not bound. You are not under duress. You. Want. It.\"\n\nHoly shit, he was right. I wanted it. I was the one bouncing up and down on his cock like a wanton slut. I was the one begging him, truly begging with all my energy to cum, and in turn, to receive his cum.\n\n\"Tell me cunt,\" Joe rasped, nearing the edge. \"Say it.\"\n\n\"I want you,\" I whispered.\n\n\"Again.\"\n\n\"I want you Joe. I want you to fill me up. Fill my pussy. Hurt me,\" I whimpered.\n\nA growl emerged from the previously composed male, and I knew it was nearly time. I prayed it was anyway.\n\n\"Touch your clit while you ride me, but don't cum yet. Not until I say,\" Joe gritted out.\n\nI doubted whether I could touch any part of me and not be thrown over the edge, but I had to obey him. My body wanted to obey him. I steadied myself, and gently touched my clit, careful not to apply too much pressure.\n\n\"Good girl, finger your clit. I want to feel your cunt milking me.\"\n\n\"Please Joe!\" I squealed, hovering dangerously close.\n\n\"Finger your clit harder, faster,\" he repeated, his voice coarse, beads of sweat forming on his brow.\n\n\"Jjjsshhh!\" I groaned as I rode him.\n\n\"Joe, I can't! I'm going to...I'm...\" I cried.\n\n\"Milk my cock Kate. Cum on my cock and suck my cum deep inside yourself.\"\n\n\"Aaahh!\" I screamed out, my pussy spasming in a guilty climax as I ground myself harder into him.\n\nThe guilt was quickly erased as I heard Joe curse and suddenly grip my hips, pulling me harder onto his cock. I screamed out from the force of it.\n\nHis claws sunk into my ass cheeks as he pulled me against him. Joe thrust hard, roaring loudly as he erupted within me, driving my orgasm to new heights. \n\nI could feel my pussy sucking his semen deep into my womb, and suddenly all the sensations came together in a single blissful moment. The pain, the humiliation, the raw carnal pleasure. It was all one.\n\nIt was heaven.\n\nI nearly lost my balance in the aftermath of my orgasm, and my hands went down to Joe's chest to brace myself from falling. Still Joe's hands were locked on my hips. Still he thrust in. I licked my lips in appreciation of the lingering sensation. The sensation of being owned. I gyrated my hips, grinding my clit down against his pubis.\n\n\"Such a good girl. So eager. So obedient,\" Joe laughed, stroking my cheek and making me blush.\n\nJoe took several deep breaths before his expression sobered.\n\n\"I'm going to take the clamps off now Darling,\" Joe said. \"Will you hold still?\"\n\nI nodded, but I was nervous. From what I could recall, it hurt when the clamps came off. \n\n\"It will hurt, but I'm going to make it better,\" Joe promised. \"Hold them out for me.\"\n\nI doubted the holding up my tits step was necessary, but he demanded it, and I wanted nothing more than to comply.\n\n\"Aahh! Aaahhh,\" I gasped, wincing in discomfort as Joe gently released the clamps.\n\n\"Sshhh, good girl. Hold your tits up for me.\"\n\nI obeyed. Joe blew softly on my nipples, and before I could say anything, he laved one with his tongue.\n\n\"Aaah! Joe!\" I hissed in a mixture of pain and pleasure. \n\nMy pussy convulsed again on Joe's cock, drawing a tortured groan from him. He had moved to my other breast, giving it the same attention. He would lick, and then blow cooling my nipples. Relief and torturous stimulation were one under his attentions.\n\n\"You keep squeezing my cock like that, you may have to ride me to completion again. Would you like that?\" Joe grinned.\n\n\"God no!\" I squeaked.\n\n\"Hmm. Well, lucky for you, I have other plans,\" Joe smirked knowingly.\n\nI looked at him quizzically. He didn't have the dangerous look in his eyes, just the confident calculating one. Almost equally pussy shivering.\n\n\"Come here,\" he gestured, pulling me down to his chest. \n\nTilting my chin up to face him, Joe's eyes softened.\n\n\"Kiss me,\" he requested.\n\nIt was a request murmured so sweetly I couldn't possibly deny him even if I wanted to. Immediately I pressed my lips to his. We savored each other's mouths as if it was the first time. It was a slow decadent kiss, and I purred into his mouth.\n\nJoe was so warm and gentle. His arms enveloped me and pulled me closer, deepening the kiss, but not forcing it.\n\nPulling free, Joe stroked my cheek, a look of complete vulnerability evident in his features.\n\n\"I love you Kate.\"\n\nI inhaled sharply at his confession.\n\n\"You don't have to say it back, I just wanted you to know,\" Joe explained.\n\nI was stunned. Elated, but stunned. I laid my head on his chest, playing with his fur as I tried to wrap my head around it.\n\n\"Are you alright?\" Joe asked.\n\nI nodded into his chest, and we lay there for a time in silence.\n\n\"Darling?\" \n\n\"Hmm?\" \n\n\"It's time for you to clean my cock.\" \n\n-\n\nThe look on her face was priceless.\n\nIt wasn't as though she had never tasted her pussy juice, or my cum, or my cock for that matter. But just the way I had phrased it had thrown her off balance. God how I loved to do that to her. Keeping her constantly off-balance just enhanced the pleasure all the more, for both of us it seemed.\n\nKate was frozen in place, but I raised my eyebrows at her and she snapped out of it.\n\nShe moved to my side, and shimmied downward on the bed.\n\n\"No,\" I corrected. \"Ass towards me. I want to look at your ass while you suck me.\"\n\n\"I thought you wanted my eyes on you always,\" Kate smirked.\n\n\"I do cunt,\" I retorted playfully. \"But this time, your eyes will be on a different part of me. I want all your attention focused on cleansing me with your mouth.\"\n\nShe licked her lips at that, and slowly turned, positioning herself so she was bent over my middle, her breast caressing my side, her ass sticking high up in the air for my appreciation.\n\n\"You may begin Kate,\" I granted, my lust for her causing my cock to twitch in anticipation.\n\nI felt her breath on me first. Her sweet exhale sent shivers over my cock, balls, and down my thighs. My fists clenched. I hoped I would even last. Then her tongue.\n\nHoly fuck, her tongue. She lapped at me like a kitten with cream. Did she know how wild that made me? She had to know.\n\n\"Uhhhhh...ohh fffuck,\" I hissed.\n\nThat seemed to encourage her as she took the head in her mouth, swirling her tongue over the glans.\n\n\"Jesus Kate,\" I gasped. She made me so crazy. I was such an idiot letting her suck me. Hadn't I learned by now?\n\n\"Mmmmm,\" she moaned onto my shaft as she slowly took more of me.\n\n\"How does it taste baby? Good?\" I taunted. \"Just nod your head Yes.\"\n\nImmediately she nodded. God she was such a born slut. And thankfully I had been lucky enough to claim her before anyone caught on.\n\nShe hadn't taken all of me, and already I was up and ready to go. Really ready. I needed to get my mind on other things before she broke what had become the most sacred of rules between us.\n\nI looked to my left, at her round ass hovering in the air as she hummed on my cock. I could see the juices still shining on her legs, her labia still seeping our combined cum. It was the heady mixture she was now devouring from me, causing chills to tear through my body. I needed a distraction.\n\nReaching up, I collected some of the juices from her thighs with my fingers, and fed them back into her pussy.\n\n\"Mmmmmmm\" Kate purred on my cock, and wiggled her ass at me in encouragement.\n\n\"Naughty slut,\" I admonished softly, causing Kate to suck with renewed vigor.\n\nI kept feeding juices back to her pussy, and more kept spilling out, coating my fingers. Hmm.\n\n\"Take me all the way slut,\" I commanded. And she did. For the most part. It was enough to keep her attention diverted.\n\nReleasing a mischievous growl, I gathered a good helping of our juices, and trailed my fingers up to prod at her asshole.\n\n\"Mmmm!!\" Kate squealed, causing me to shudder from the vibrations. She very nearly pulled free of my cock, but I wrapped my other hand in her hair and held her down.\n\n\"Uh-uh slut. You will cleanse me. And I will play with you. You are mine to do with as I please remember? You promised.\"\n\n\"Mmmm,\" came her pouty moan as she conceded.\n\n\"Good girl,\" I praised. \"Keep sucking my cock like a good little slut. I'm going to play with your ass now.\"\n\nGently, I probed at her clenching star. The pleasure of the hunt was always in the chase. Always.\n\n\"Let go baby, let me have your ass,\" I commanded softly.\n\nShe whimpered, and I could feel her opening loosen ever so slightly. I took the invitation and pushed a single digit in, all the way to the base.\n\nKate sucked in air through her nose in a silent gasp, and let out what sounded like a conflicted groan.\n\nI sunk my finger in and out of her, slowly, prolonging her humiliation. As soon as she seemed to adapt, and was very gently thrusting back against my hand, I pulled out to gather more of our juices.\n\n\"Remember you are mine,\" I warned as I fed two fingers all the way into her ass.\n\n\"Mmmmm!!\" Kate cried, though she kept sucking at a nearly unbearable pace.\n\n\"Easy pet, come off my cock and lick my balls for a while,\" I gasped, relishing her pants of desperation.\n\n\"Please Joe!\" she whimpered before I pushed her head downwards to get started cleansing my balls.\n\n\"Sshhhh...\" I purred.\n\n\"Mmmmmm,\" Kate whined as she sucked and licked at my sac.\n\nI slowly thrust in and out, my two fingers stretching her ass. For several minutes I did this, only once pulling out to gather more juices. Eventually her hips started to hit back, slowly but surely, with more urgency.\n\n\"Good girl,\" I drawled. \"Remember? You love my fingers in your ass. You want my cock in there too. But you can't have it. Not until you're pregnant. Until then, you will just have to make do. Go on, push your slutty ass onto my hand.\"\n\nKate obeyed, and began licking and moaning deliriously between my legs.\n\n\"You want it harder baby?\"\n\nI could feel her nod, and whisper, \"Please.\"\n\n\"Are you close to cumming?\"\n\n\"Yes Joe, please!\"\n\n\"You know the rules Kate. You are not allowed to cum until my cock is in you. Until I am ready to release my sperm into your womb.\n\n\"Please just a little more!\" Kate begged.\n\n\"Alright baby, just a little more. As long as you don't cum.\"\n\nKate nodded, and went back to work on my balls.\n\nMy brow furrowed in concentration as I collected more of our juices. Gently, I probed at her loosened sphincter. This time, with three fingers.\n\nKate tensed a moment, and I waited. She knew what I wanted, and she knew she could only obey. Only submit. And she wanted to submit. I watched her head fall back down to her task.\n\nI pressed in, feeding inch after inch into her tightest of holes. Kate's only reaction was a grunt and I felt her legs begin to tremble as I pushed home. She had ceased her attentions on my balls and was now panting over me. \n\nI thrust in and out a few times before I asked her, \"Is that enough for you, or do you want more?\" I teased her with a fourth finger probing gently at her opening.\n\n\"Enough Joe, please enough,\" she whimpered softly.\n\n\"Very well,\" I agreed.\n\nKate gasped as I gently pulled free of her ass.\n\n\"Now baby, lay on your back. Spread your legs,\" I directed.\n\nStill shaking all over, she did as I bade.\n\n\"Hips up,\" I directed.\n\nKate struggled to hold her hips up away from the bed, so exhausted was she from our two recent couplings. Turning to her, I quickly slipped a pillow underneath her hips.\n\nHer breasts heaved in anticipation, and I was momentarily distracted. But my cock twitched with urgency, and I moved between her legs, getting in position.\n\nI found myself trembling as well. It was a major feat to do what Kate had done, but it was also very physically and mentally challenging to dominate her as I had. It was what she needed, and what I needed, but it still took a lot out of me. I had to endure it. She was worth it.\n\n\"Aahh,\" I breathed as I pressed slowly into her.\n\n\"Mmmm,\" Kate chimed in, licking her lips and eagerly wiggling her pussy at me.\n\n\"Tell me,\" I commanded, my voice hoarse with restraint.\n\n\"I want you,\" Kate whispered. \"I want you inside me. I want you to shoot your cum deep into me.\"\n\nI stared deep into her eyes, urging her to say it. I wouldn't force her.\n\n\"I want you to make me pregnant.\" She shivered as she said it, her nipples going hard.\n\n\"Oh God Kate, yes!\" I groaned, and slid home. My dick throbbed from her words.\n\n\"Please kiss me Joe,\" Kate pleaded, wrapping her arms and legs around me, pulling me in deeper.",
        "\"Mmmhhh,\" I pressed my lips to hers urgently.\n\nI could feel her humping her hips into me, begging for more. I delivered, thrusting deeper, forcing my cock against her cervix.\n\nHer mews of pleasure transitioned into cries of sweet agony as I pounded her. Kate shifted her hips side to side, trying to escape, and yet wanting more. Understanding her need for distraction, I gifted her with my tongue. Kate sucked eagerly, wantonly, almost worshiping me. It was the greatest aphrodisiac. \n\nI pulled free and growled, \"I want to mark you.\"\n\n\"Yes, please Joe. I'm yours!\" Kate cried, tears forming in her eyes.\n\nHungrily, I pulled my cock free of her clenching sheath.\n\n\"No!\" Kate moaned.\n\n\"Patience pet,\" I warned throatily. \"I need to mark you, and I will choose where.\"\n\nI shifted downwards, and started to tongue her nipples. \n\n\"Aaahhh!\" Kate hissed even as her hips thrust upwards at me.\n\nI kneaded her breasts, sucking one nipple into my mouth at a time, feasting on them, savoring her moans of anguish and pleasure. \n\nIt wasn't long before I got hungrier, sucking urgently at her nipples, my teeth nibbling ever so lightly. I knew she was sensitive.\n\n\"Aahhh!!\" Kate cried, her pussy humping into my belly, her cunt juices matting my hair.\n\n\"That's right Kate, you want it,\" I encouraged before sucking her even further into my mouth.\n\nI began to maul her breasts, licking over them, sucking her plump swollen mounds with abandon. My cock throbbed in the knowledge that they would grow fuller, more swollen, more sensitive in time, ripe with milk for our young.\n\nAs thoughts of sucking sweet milk from her breasts filled my consciousness, I sunk my teeth into her breast flesh.\n\n\"Aaahhhh!! Joe!!\" \n\nI bit down harder still, waiting until I tasted a hint of blood before I released her, and slammed my cock deep into her waiting pussy.\n\nI rutted her, fucking her, forcing more desperate cries from her throat before I commanded her, \"Now Kate! Cum now!\"\n\n\"Aaaaahhhhhh!! Fuck! Joe!!\"\n\nI felt her clamping down on my throbbing prick, juicing all over my balls, milking me, and it was too much.\n\n\"Oh Christ! Kate, yes!!\" I cried as I rutted her like a man unhinged.\n\nI could feel my balls churning as they sent my sperm up my rod and deep into Kate's fertile pussy. In my mind I pictured my sperm racing through her, and finding her egg. It was like a fucking electric shock. \n\nI rode her through my whole orgasm, forcing as much cum as possible. Forcing it deeper as she screamed. I growled as I reached down and frigged her clit, drawing out her orgasm and forcing her to milk me harder. Kate convulsed and clamped down harder on my cock, and I roared as I emptied the very last of my seed into her.\n\nI collapsed before the tingling had receded, and lay atop Kate jerking, trembling, trying desperately to catch my breath.\n\n\"Are you alright Darling?\" I asked breathily. I was still twitching with fatigue and sexual delirium.\n\nKate nodded, still trying to recover herself.\n\n\"Good,\" I mumbled, collapsing again, this time on the mattress before I pulled her to me.\n\nWe both snoozed for about an hour before I grudgingly dragged her out of bed for a shower.\n\n\"You promise you won't molest me in there?\" Kate teased.\n\n\"No,\" I responded plainly. \"But I think you're pretty safe for the moment. I've got a healthy sexual appetite, but I'm not a mutant.\"\n\n\"Don't know about that,\" she giggled.\n\nI grinned deviously and swatted her ass, ushering her under the warm water. \n\nIt was official. She was mine. I had not been happier in my life.\n\n-\n\nJoe didn't molest me in the shower, though his attention to my ass had me on my guard for a few moments. He tenderly washed his mark on my breast, disinfecting it and applying ointment, just to be safe.\n\nAfter we were all dry, we cuddled for a while, just holding each other. Nothing really needed to be said. Later, we dressed and went for a walk. We took in an early dinner at the restaurant, and returned to the suite.\n\nJoe was gentle, but unwavering. He simply stripped me, took me to the bed, positioned the pillow below me, and made love to me. We said nothing, just enjoyed each other's bodies, kisses, and the knowledge that we would make a baby together. A baby we would both love and adore together. A baby that would unify us for all time.\n\n-\n\nJoe and I rode together in first class back to Chicago. He held my hand the entire flight, though he fell asleep about halfway through. I was too psyched about being in first class to sleep. I enjoyed a fruity drink and a funny movie, all while Joe slept.\n\nWhen the pilot announced we were beginning descent, I nudged Joe. He stirred awake and looked into my eyes again with that beautiful genuine smile.\n\n\"I love you Joe,\" I whispered.\n\nJoe's eyes closed tight, and he squeezed my hand before pulling me to him and kissing me softly on the lips.\n\n\"We'll celebrate when we get home,\" Joe whispered.\n\nHome. Our home.\n\nI was so happy.\n\n-The End-"
    ],
    "authorname": "joodle",
    "tags": [
        "bdsm",
        "impregnation",
        "oral",
        "edging",
        "domination",
        "non-consent",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/see-through-me-ch-17"
}