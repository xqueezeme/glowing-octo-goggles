{
    "title": "The Transformation",
    "pages": [
        "When I got home from work it was there, sitting innocently on the back porch where the UPS man left it. I smiled in anticipation as I picked it up. \"If only he knew what he was delivering,\" I mused to myself. I brought the box in and set it on the table. I purposely left it there and forced myself to do other things but always the knowledge was there \u2013 it was finally here! I finished my chores quickly so it was time for a reward. I picked the box up and mentally weighed the contents. It was not that heavy but it still made me feel powerful just holding it. I slid the knife I brought from the kitchen under the flap on the corner. I hastily sliced through the rest of the tape that kept me from my prize. I opened the box and there it lay, nestled amongst Styrofoam peanuts. My reward that I hoped would be my boyfriend, Jordan's treat!\n\nJordan and I are into erotica, both stories and the occasional movie. I had noticed that he seemed particularly fond of stories where the characters engaged in anal activities. I asked him if he was interested in being penetrated and he acted like it was no big deal, but his eyes were hot and I suspected he might like it more than he was letting on. Jordan is very much into giving pleasure. In the four months we've been together he always makes sure I'm satisfied and that I enjoy everything we do before he allows himself to cum. That makes for a wonderful time for me, but I sometimes wished he wouldn't be so conscientious. Just once I'd like to see him get so excited that he can't hold back. Just once I'd like to see him lose his cool the way he makes me lose mine.\n\nA few weeks ago we watched a movie where the couple invited a friend to join them. During the course of the movie, one of the girls played with the guy's ass while he was fucking the other girl. She put a condom on two of her fingers and proceeded to give his ass a finger fucking that soon had the guy shooting his load all over the other girl. Jordan never said a word during the movie but he was rock hard and oozing pre-cum long before it was over. You're thinking I could have just bought a supply of condoms and imitated what they did, right? Somehow that just didn't seem like enough. I wanted to really concentrate on giving him the kind of pleasure he gives me. I want to be directly involved and what could be better for that than a strap-on? The thought of making Jordan lose control really turned me on.\n\nI decided on a leather harness after some investigating on the internet. According to the ad, it could be fastened securely for hands free fun. Hands free is definitely what I had in mind! Jordan has a nice cock. It's about 6 \u00bd to 7\" long, a couple of inches thick and believe me, he knows what to do with it. I chose a cock that was about the same size. A bottle of lubrication completed my purchase. I took it all in the bedroom to the full-length mirror and quickly stripped. I wanted to see what it looked like and make sure I could fasten it without a lot of fuss when the time came to try it out. I looked at myself in the mirror. I ran my hand over my new cock. I pressed it against me and realized that it fit right above my clit. The ad said it had a clitoral stimulator and boy did it! I could hardly wait for Jordan to get home!\n\nI dressed in a sexy little outfit and finished fixing dinner. After we ate, I suggested we move to the couch to watch TV. We hadn't been there fifteen minutes before we were making out like teenagers. I finally straddled his legs and sat down on his lap. Our lips were hot and hungry by the time I unbuttoned his shirt. His chest is broad and I ran my fingers over it while I sucked on his tongue. I could feel him getting hard under me. I grabbed his hands and held them against his sides as I started placing kisses down his neck. I took one of his nipples in my mouth. He was groaning and I knew he wanted his hands free to touch me. I refused to give in and he finally sat back and let me have my way. I gave the other nipple a bath with my tongue as I rubbed myself against his erection.\n\nWhen he started to moan and his hips began moving I knew it was time to move to the bedroom. I stood up and peeled my top off over my head. I dropped my skirt leaving me in a half bra and matching panties. I bent down to give him a look at my full breasts then I whirled away and ran toward the bedroom. He jumped up and yanked off his shirt, letting it fall in the hallway. When he got to the bedroom door I was sitting in the middle of the bed. He kicked his shoes off and unzipped his pants. I crooked my finger at him as he dropped them where he stood. \n\n\"Come here, sexy,\" I said as he advanced toward the bed wearing only his boxers and socks. He placed one knee on the bed and pulled me up against him. I opened my arms to him and we fell back onto the bed. Our mouths were hot and wet as we kissed. His tongue plunged into my mouth and I moaned. His hands were already undoing the fastener on my bra. My hands roamed over his back and shoulders as he rubbed my breasts. His fingers found the sensitive tips and he rolled them between his thumb and forefinger. He knew just what he was doing and I nearly succumbed to the desire to let him have his way with me. When he rolled onto his side next to me I remembered my plan to seduce him for a change.\n\nI pushed him all the way over onto his back and threw my leg over him. I rose up so I was above him then lowered myself so his cock was just touching the outside of my pussy. I pressed downward and sandwiched his cock between our bodies. He tried to rock his pelvis against me but I wouldn't let him.\n\n\"Relax, baby,\" I whispered as our lips met again. I ran my tongue into his mouth and across his teeth. He bit down on it gently. \"Mmmmm,\" I moaned. I rocked my pussy against his cock and felt the answering push from him as I continue to kiss him. I knew he was as turned on as I was. I placed small kisses along his jaw and bit down on his earlobe. He groaned and I knew it wouldn't be long before he would try to take control again. I held his arms flat against the bed as I rained tiny kisses across his chest to his nipple. It was a hard little bud by the time I closed my lips over it. I sucked on it and ignored his attempts to lift his arms. I kept licking and sucking on it and finally bit down on it.\n\n\"Oooooo, baby,\" he moaned as I soothed it with more kisses. His cock was rubbing steadily against my panties. I was getting wetter with each pulse of his hardness against me. I moved to the other nipple and gave it the same treatment. He succeeded in pulling his arms up and cupped my taut breasts in his hands. He pulled on one so I had to lean over and let it fall toward his face. He nuzzled the hard tip as I braced myself above him. He opened his mouth against me and sucked as much of my breast in as he could. His other hand had the other nipple hard and aching by the time he moved to it. When his mouth began suckling that one his hands went on the move again. He ran them down my back and over my ass. His fingers began kneading my cheeks and then they were inside my panties against my buttocks. Again I almost forgot my purpose in buying the strap-on.\n\nI reached above his head toward the terry cloth belt I had fastened to the headboard earlier. I took one of his hands and while his lips were busy with my breasts, I slipped the loop over it. I tightened it up as his eyes snapped open in surprise. Tying someone up is all about trust and the anticipation of the reason behind the restraints. I looked into his eyes to see if he trusted me enough to let me do this. Silently he lifted his other wrist up for me to tie it, too. I smiled at him and slid down his body to kiss him again.\n\nBefore he could distract me with the deliciousness of his lips, I kept moving. I raked my fingernails lightly down his chest and heard the sharp intake of his breath. His eyes shot sparks at me as I got closer to his waistband. I straddled his thighs and raked my fingers under the waistband. In one motion I drug the boxers down over his hips. He didn't even have time to rise up and his cock rebounded against his stomach when it popped free. \n\n\"Ooooo,\" he sucked in another breath. I'm sure he expected me to place my mouth over it but that wasn't part of the plan. I stepped off the end of the bed and ran my fingers down his legs and back up the inside. As my hands got closer to his crotch he seemed to hold his breath. I bent down and licked the inside of one knee. He spread his legs apart inviting me to get between them but again, that wasn't part of my plan. I wet my lips and trailed my tongue across his skin, up over his knee, up his thigh and around his hips. His cock was beginning to throb with each breath he took. I didn't touch it but let him feel my hot breath above it as I licked his lower stomach. I opened my mouth on his hip and sucked his flesh until I had a nice love-mark there. The hickey glowed dark against his skin and he was moving against me by the time I finished. I watched a bead of pre-cum form on the head of his cock.\n\nI knew he was ready for the next phase. I nudged him with my hands and lips until he moved up onto his side. There was enough give in the belt for him to turn over without hurting his wrists. I had tested it on myself to make sure. I kept pushing until he was on his stomach. I reached down and made sure his cock was pinned between his body and the bed. I knew if he enjoyed what I did, the friction of his engorged penis against the bed would heighten his excitement.\n\nI reached down and pulled the harness out of its hiding place. I climbed up on the bed over his legs. I pinned them between mine and strapped on my new cock. He could hear me but he didn't try to look to see what I was doing. I popped the cap on the lubrication and laid it beside us on the bed. I put my hands on his knees and started pressing and rubbing his muscles as I worked my way up. He was relaxing into the bed and letting me have my way with him. I continued to knead my way up his thighs and over his firm buttocks. I kept the rubber cock far enough above him so he wouldn't feel it. I moved on up his back and to his shoulders. I crawled up so I was straddling his waist. I leaned forward and let the cock rest between his shoulder blades. It was cool to the touch and I knew he wondered what it was.\n\nI began to walk back on my knees and let the rubber phallus slide down his back. Finally curiosity got the better of him and he craned his neck to see what I had. I watched his reaction when he saw the flesh colored cock suspended from my hips. His eyes shot up to mine. He watched while I unfastened it from my waist. I brought it up to my lips and opened my mouth. He seemed fascinated as I ran it between my lips and sucked it in. I pulled it in and out of my mouth a couple of times. Then I strapped it back on.\n\nHis eyes appeared to go even wider when I picked up the lubrication. I squirted some into my hand and began rubbing it over the surface of my new toy. I thrust my hips forward imitating a man jacking off. He couldn't take his eyes off me as I turned my attention back toward his ass.\n\n\"Do you know what you're doing?\" he asked a little breathlessly.\n\nI winked at him. \"You're just along for the ride baby,\" I grinned. I squirted a generous blob out onto his crack. I leaned down and placed my lips against one firm buttock. I kissed and licked all over it as the lubrication sat quivering between his cheeks. I began kneading his ass and slowly spreading the cheeks apart so the lube could run down his crack. He was gently humping himself up against my hands as I continued caressing him. My fingers were moving in ever widening circles. I began running them into the valley that was slick with lubrication. When my fingers brushed his asshole I felt a definite rise of his hips. I let my fingers linger over it for longer and longer periods of time as I played.\n\nWhen I heard the first moan from him, I pressed one knuckle against his hole. I kept up the pressure and felt an answering push from him. I worked the knuckle around gently stretching him and pushing the lubrication inside. Finally I placed my thumb against it and when he pushed up, I let it slide inside. \n\n\"Uhhhnnnnn,\" he moaned. I pulled it back and pushed it in a little further. \"Ohhhhh,\" he groaned again as he lifted his ass toward me. I moved it in and out, widening the opening. He didn't resist at all. I moved closer to him and laid my rubber cock against his crevice. I couldn't resist lying against his back and allowing him to feel the press of my body against his. I moved my hips, gently rocking them against the firm curve of his ass. It felt so good we both moaned. Feeling his excitement was intoxicating. My nipples were hard little points and my pussy was as wet as it had ever been. I pushed myself up and ran my hands down his back again. When I reached his cheeks I grabbed one with each hand.\n\nI lifted a leg and used it to nudge his legs apart. He was only too eager to spread his for me. I got between them and used my hands to pull his cheeks apart. I pressed the head of my strap-on against the hole I had worked over just minutes before. I pressed firmly and watched the head begin to open up his tight little asshole. Jordan was breathing hard and moaning a little as it began to disappear. I was so excited I had to force myself to go slow. I knew he was enjoying it and I really wanted to make him cum hard. I kept up the pressure and felt his hips rising to meet mine. I knew the exact moment when the head finally slid past the tight ring of muscles at the opening. There was a gasp from Jordan followed by a long groan.\n\n\"Is it okay, baby?\" I asked.\n\n\"Oh God, yes,\" he whispered. I held myself still for a few seconds to allow him to adjust to the feeling of being filled. It wasn't long before I felt his butt rise up toward me. I slid forward a little and heard a tiny whimper from him. \"Oh, God,\" he groaned again. \"Pleeease,\" he begged. I pulled back and pushed forward a little more. \"Uhhhhnnnnnn.\"\n\nI had about half of my toy inside him and still he wanted more. I could hear his breathing catch each time I thrust forward. I grabbed his hips and pushed in even further. When I pulled back I felt him push into the bed and this time he rose up to meet me when I thrust forward. The combined force buried my rubber rod all the way inside him. He pulled his legs forward for leverage and began to rise up beneath me. I scooted my legs forward until we were in position for me to dog fuck him so I started doing just that. \n\nWhat a feeling of power! There was no doubt who was in control and how badly he wanted things this way. I bent over his back and felt between his legs. He groaned deeply when my hand closed over his steel hard cock. I felt the warm wetness of his excitement on my hand. It was glorious! I could feel the cock against my clit and I could feel his pre-cum leaking out of him. I had to release him and steady myself by holding his hips. It didn't take very many strokes to establish the perfect rhythm and soon after he was begging me to fuck him.\n\n\"Oh baby, you're gonna fuck the cum outta me,\" he moaned as his hips drove back toward me.\n\n\"That's just what I intended to do,\" I moaned in answer. My clit was swollen and throbbing. Each thrust of my hips drove that cock into his ass and pushed my clit against the base of it. It was the best of both worlds. His voice was getting tighter and I knew he was close. His hips were pushing frantically back against me. My panties were soaked by my own juices as I fucked him harder and faster with each stroke.\n\n\"I'm gonna make a mess,\" he warned me. \"Oh God, I can't help it,\" his voice begged me for understanding. \"I'm gonna cum! Oh fuck my ass,\" he begged me. \"Oh, oh, oh,\" he moaned with each stroke. \"Ohhhhhhhhhhhhhh.\" With that he lost what little control he had and starting shooting cum onto the bedspread. I wanted to watch but that was impossible. I couldn't stop until I was sure he had finished. God it felt so good pounding that cock into him and feeling it rub my clit. As he started to settle down I slowed the strokes to a few gentle thrusts. Finally he stopped moving and hung his head down on his arms. I could tell he was trying to get his breathing back under control. I pulled back and let the cock slide all the way out.\n\nJordan rolled over onto his side and I unstrapped my new toy and laid it on the floor. We both looked at the dark stripes his cum had left on the bed. I reached out a finger and dipped it into one puddle that hadn't been absorbed yet. His eyes followed my finger as I lifted it to my mouth and sucked the creamy deposit off it. Jordan's eyes were still glowing with lust when they met mine. He scooted closer and rubbed my leg with one of his. When it slid down I opened my legs so he could put his between mine. He pushed his thigh up so it was tight against my pussy. I knew he could feel how wet my panties were. I reached up and tried to untie his wrists. I had to move closer to him so I could loosen the knots.\n\n\"Where did you learn to fuck like that?\" he asked as his mouth took in an ample bite of breast.\n\n\"Who says anyone taught me anything? I just did what felt good,\" I answered as I freed one wrist. I worked on the other one as his leg began rubbing tighter against me.\n\n\"That was awesome,\" he said. His other hand was free and he immediately used them to push me over onto my back. His leg slid up and down between mine. He pinned my arms on either side of my head and lowered his face down to mine. His tongue licked across my lips and delved between them. I opened my mouth and sucked his tongue in. His leg felt so good rubbing my pussy I thought I'd cum right then.\n\n\"Ooooooo,\" I whimpered as he trailed his lips from mine down to my quivering breasts. I felt his hot breath on my nipples. I tried to push my chest up toward him but he was intent on teasing me the way I had teased him. His tongue licked my aureoles but he wouldn't touch the nipples themselves. His leg continued its motion against me. I wanted to feel his weight on me. I wanted to feel his cock inside me. If he would just stroke a little faster, I knew I'd cum on his leg. He knew it, too. His cock was gently pushing against my stomach with each move of his leg.\n\nWithout warning he bit down on one turgid nipple. I cried out at the piercing pleasure that ran from my nipple down to my clit. I was completely incoherent begging him to fuck me. He released my arms and grabbed the edges of my panties and ripped them down my legs. I tried to help kick them free but his hand cupped my mound. I didn't care whether they ever came off. I just needed him to make me cum. I was so over stimulated that my entire being was concentrated on my pussy. He rubbed the outside but refused to go in.\n\n\"Oh God, Jordan,\" I whimpered. My eyes closed and my head pushed back against the bed as I arched against his hand. \"Oh pleeeeeeeease,\" I begged. \"Touch me, love me!\" He let one finger slide between the lips of my cunt and it touched the hard little nub that was aching for him. \"I'm cumming,\" I squealed. \"Uhhhnnnn, uhhnnnn, uhhhhnnnn,\" I groaned as each spasm ripped through me. He knows how sensitive my clit gets after I cum so he moved his fingers down to my hole. He pushed two inside me and I knew he could feel my pussy sucking on them as my orgasm subsided.\n\nHis touch was gentle in total contradiction to the way his eyes were looking at me when I opened mine. He was gazing at me with unadulterated lust. I reveled in it. That was the look I had been waiting for. His lips were slightly parted and he was breathing quickly. I licked my lips and he groaned aloud. His lips mashed against my own. His tongue went deep inside. Immediately I felt my body catch fire again. \n\nHis fingers started moving faster, in and out and in and out. He drug them out and over my hip to grab my ass. He pulled me tight against him and I felt his cock throb against me. It was so hard and felt so hot. I pushed against him and his hips pushed back. We were like teenagers frantically dry humping in the back seat of a car. It was exhilarating. The polite, sensitive Jordan was gone. This sexy, uncontrolled Jordan was the one I had been waiting for.",
        "He shoved me over onto my back. His hands were rough as they grabbed my legs and spread them wide apart. He pushed my knees up toward my chest. He positioned himself at the entrance to my slit and with one thrust he slammed his cock deep inside me. I grunted with the force of his penetration and my pussy immediately clamped down on the wonderfully hard meat filling it.\n\n\"Oh God Jordan,\" I moaned. \"You feel so good inside me.\"\n\nHe started to drive into me with long, hard strokes of his delicious organ. I could feel the ridge at the rim of his head and I swear I could feel every vein pulsating down the length of his tool as he fucked me. My cunt was greedily squeezing him with each plunge. I was impaled on his rod and my pussy made wet, juicy noises with each probe. I was getting closer to a mind-blowing climax with each pump of his hips. \n\n\"Fuck me,\" I begged.\n\n\"Oh God, I can't stop,\" he moaned. \"Your cunt is so tight. It feels so good.\"\n\n\"Oh don't stop. Whatever you do, don't stop,\" I moaned. Our hips continued to slam against each other. I could feel his balls pressing against my ass as he strained toward his own blistering climax. I could feel the head of his cock pushing against the back of my pussy. He was so deep it was almost painful. I finally knew what people meant when they said it hurt so good.\n\nMy chest was heaving as I felt the quivering begin inside me. He was buried to the hilt when the first wave of my climax shuddered through me. \"Ohhhhhnn,\" I groaned. I didn't think it could get any better. Then he pulled back and slammed in one more time.\n\n\"Oh God, I'm cummming,\" he forced out through lips parted on a groan. I felt his cock jerk inside me as another wave rolled through my pussy. I could hear myself making mewling sounds like a lost kitten but I couldn't stop. Then I felt the splatter of his hot cum against my pussy walls. He held himself rigid above me as his cock pulsed and shot stream after stream of his creamy seed inside me. My pussy was clenched in the throes of my own orgasm and this only made him erupt more. It was the most intense orgasm I had ever experienced. Feeling him cum at the same time was the cherry on top.\n\nWe continued to grind against each other as the spasms gradually wound down. I could feel our combined cum running out of me and down the crack of my ass. It was still warm and sent little ripples of pleasure throughout my body. Jordan released my legs after one last thrust. I pulled him down on top of me and encircled his thighs with my legs. I just wanted to hold him against me.\n\n\"I'm too heavy,\" he protested.\n\n\"Never,\" I breathed and that is how we stayed as his cock softened and finally slipped out of me. Jordan is still as polite as ever when we go out to eat and have friends over, but when they leave... mmmmmmmmmmm"
    ],
    "authorname": "wyo_girl",
    "tags": [
        "strapon",
        "ass fucking",
        "pre-cum formed on tip",
        "tight little asshole",
        "hips drove into him",
        "lubed asshole",
        "mouth",
        "stretching open",
        "hands free"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/the-transformation-3"
}