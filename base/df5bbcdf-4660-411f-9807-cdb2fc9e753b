{
    "title": "Runaway Pt. 02",
    "pages": [
        "Authour's Note:\n\nThis is part two of Runaway, a story for the Highway Song event arranged by blackrandl1958. To fully enjoy the story, I suggest starting with part one, where Lacey leaves her small town on a quest to find her brother Sean. Along the way, she meets Noah, who appoints himself her guardian as she realizes life outside her small town is a bit more overwhelming than she thought.\n\nChapters have been marked throughout the story and it will be posted in four parts.\n\nSpecial thanks to the team of people who beta-read and edited this story: BarryJames1952, Bebop3, blackrandl1958, norafares, OneAuthor, and Steve M. This story would not be possible without them. Any remaining errors\u2014factual, grammatical, or otherwise\u2014are my own.\n\n**\n\n<center>Chapter Four</center>\n\nI hadn't really considered the implications of the sleeping arrangements.\n\nAfter my very long shower, we ate in the dining car before returning to the cabin. While we were gone, the concierge had turned the room over for us. \n\nWe knew there was only one bed, a double that folded down from the wall. The thing was, once the bed was folded down, it rested on top of the small sofa in the room. Not that the sofa was long enough for either of us to comfortably sleep on it, but still.\n\n\"It's fine,\" I said as we stood just inside the doorway to the room. \"We're adults. We can share a bed.\" \n\nThe words sounded impossibly immature coming out of my mouth. \n\n\"I can sneak out to the Economy car,\" Noah said. \"They won't even notice another person sleeping there.\" \n\n\"Don't be silly. We'll just share the bed.\" \n\nI used the bathroom first, brushing my teeth and washing up, and then settled in the bed while Noah took his turn. The TV was opposite me, so I flipped through some channels while waiting.\n\nI had a set of pyjamas with me, because of course I did. Noah, on the other hand, walked back out in his jeans and a T-shirt. I felt like I should tell him to just be comfortable, but after the conversation earlier, I didn't know that I could handle it. He crawled on top of the covers, leaning back against the headboard as I snuggled into the comforter. \n\n\"You don't have to do that,\" I said.\n\n\"I know,\" he replied. \"But I think we'll both feel better if I do.\" \n\nHe was probably right. Maybe.\n\nAfter turning the TV off, I lay awake for a long time. I had a double bed at home and it certainly seemed large enough, but with Noah's body just inches away from mine, I realized how small it really was. I could feel the heat rising off his body as I lay there, staring up at the roof and listening to the train slide along the tracks. \n\n\"You asleep?\" he asked after a while.\n\n\"No. Are you?\" \n\nHe chuckled. \"Yeah, I'm talking to you in my sleep right now.\"\n\nI was glad he couldn't see my face.\n\n\"Offer to go find a seat in Economy still stands,\" he said. \n\n\"No. I'd feel too guilty to sleep. Might as well stay here.\" \n\nHe shifted on the bed, rolling to his side to look at me. I turned my head towards him, his eyes reflecting the pale light shining in from the train window. \n\n\"Tell me something about you, Miss Lacey.\" \n\n\"What do you want to know?\" \n\n\"Tell me the craziest thing you've ever done, besides this.\" \n\nI laughed and looked back up at the ceiling. \"I was only 17 when I went to college. My birthday's in November. When my roommate found out, she bought a bunch of coolers and brought them to our dorm. We drank them, I puked my guts out, and when my birthday rolled around, I couldn't even stomach the smell of alcohol. I didn't drink again until a year later.\" \n\n\"That's the craziest thing you've ever done?\" \n\n\"I told you, I'm boring. You've been around for all the other crazy stuff.\" \n\n\"You really bought into that whole religion thing, eh?\"\n\n\"I had to. I didn't know anything else.\" \n\n\"Nothing wrong with having faith, but you know what your dad\u2014\" \n\n\"I don't want to get into it.\"\n\n\"Sorry.\"\n\nWe went quiet for another moment.\n\n\"What was prison like?\" \n\nHe chuckled that startled, barking laugh. \"That escalated quickly.\"\n\n\"Sorry. Too personal?\"\n\n\"No. Just don't think anyone's ever asked me that, to be honest.\" He thought for a moment before continuing. \"It sucked. I mean, obviously. The first couple weeks were bad. I was withdrawing. They don't really give a shit, it's not like when you go to rehab or something, so I was shaking and puking and sick and just completely out of my head. Then that stops and you wish it hadn't because you start living the same day over and over.\" He paused again. \"Sam was my second cellmate. First one OD'ed. Found him and told myself I wasn't gonna ever touch that shit again.\" \n\n\"I'm sorry.\"\n\n\"Don't be. Was what it took to get my life turned around. Well, as turned around as you can with a record.\" \n\n\"What do you mean?\"\n\nHe laughed dryly. \"Shit affects everything. Getting a job. Renting a place. You fuck up like I did, it follows you. Not that I had much to go back to when I got out, but I lost it all anyway.\" \n\n\"What did they arrest you for?\" \n\n\"Deal gone wrong. Guy fucked me over, I stole his truck, cops got me for both. Plead guilty. When my date finally came up, I'd already finished withdrawing and figured I'd just own up to it. Wasn't worth fighting.\" \n\n\"And... you said your mom...\"\n\n\"Drug trafficking.\"\n\n\"Sorry.\"\n\n\"Don't be. She warned me not to get involved with the same fuckheads she did, but I was desperate. It was deal or be homeless.\"\n\nI processed the information quietly, long enough that Noah shifted again.\n\n\"I'm not religious, but you think God would forgive me?\"\n\n\"Yeah,\" I said. \n\n\"Do you?\" \n\n\"Without question.\" \n\n**\n\nThe next day was Canada Day.\n\nHad my original plans with Roger gone through, I would have been in Montreal. As it turned out, we would spend part of the day right back where I had started: the Winnipeg train station. \n\nNoah and I spent most of the day in our suite, playing cards and watching TV. We ordered food to the room and blew through the voucher we'd gotten from the station in Edmonton, but we'd be arriving in Toronto the next day so it didn't matter too much. \n\nThe closer we got to Winnipeg, the more anxious I felt. We would be stopping there for a few hours and the concierge suggested we take in a nearby festival, but I refused to get off the train. Noah, on the other hand, said he wanted to pick some things up during the stop. After he left, I huddled in the suite, leaving only to wait in the lounge when the concierge came back to set the room to the nighttime configuration. \n\nNoah found me there just before we left.\n\n\"Doing all right?\" he asked.\n\nI shook my head.\n\n\"I know,\" he said. \"We'll be leaving soon.\"\n\nHe sat next to me and hesitantly wrapped his hand around mine. The terror that wracked my body started to evaporate as I gripped his hand tightly. Together, we sat in the lounge not speaking, not addressing the electricity that seemed to flow between our palms as we touched each other, until the train started to move.\n\nOnce it did, the trance was broken, and Noah slipped his hand from mine.\n\nWhen we re-entered the suite, I couldn't help but laugh.\n\n\"What the hell...\" muttered Noah. \n\nOn the table was a small bucket with a bottle of sparkling wine in it. \n\n\"'Happy Canada Day,'\" I read on the small card nearby. \"Sweet, free champagne!\" \n\nNoah shook his head. \"Never thought I'd be taking the train in a fancy suite with free champagne.\"\n\n\"I'm putting my pyjamas on,\" I declared. \"Then I'm going to sit in bed and drink champagne and pretend everything is all right.\" \n\nI showered quickly and dried my hair, changed, and was back in the suite in no time. Noah rolled his eyes at my excitement, but the corners of his eyes were crinkled as he tried not to smile. He opened the bottle for me and ducked into the bathroom as I poured myself a glass.\n\nCurling up in bed, I put on a game show and was playing along with the contestants when Noah came back. He was wearing a shirt that time, but had a brand-new pair of pyjama pants on.\n\nIf possible, he looked even more enticing in the T-shirt and baggy pants than he had when he walked out shirtless.\n\n\"I like your pants,\" I said lamely, then blushed.\n\nNoah smiled, his mouth tight. \"Figured I'd try to be a little more comfortable tonight.\"\n\nHe poured some water into the champagne glass.\n\n\"Not having any?\"\n\n\"No. I don't really drink.\"\n\nMy face went red as I stared down at the glass in front of me. Of course Noah didn't drink. He had said he was clean.\n\n\"I'm sorry. I didn't even\u2014\"\n\nHe leaned forward, clinking the glass against mine. \"Don't be.\"\n\n\"I should put this away.\"\n\n\"Not a chance. It doesn't bother me. Even break down and have a beer once in a while. I just try not to make it a habit.\" He smiled as he brought the bottle over, topping off my glass. \"Never had a problem with alcohol, just don't want to risk it.\"\n\nHe put the bottle back on the table and sat on top of the blankets with his champagne flute of water. \n\n\"Just go under the covers,\" I said.\n\n\"Lacey\u2014\"\n\n\"It's fine.\"\n\n\"You sure?\" \n\nI nodded, my heart pounding furiously.\n\n\"I trust you.\" \n\nHe pushed the covers back and crawled underneath them. \"Told you that was a bad idea.\"\n\n\"I know.\"\n\nI know what you're thinking. Innocent Lacey drinking champagne in bed with Noah, who she is fully and completely attracted to, can only lead to one thing.\n\nIf you guessed that one thing was falling asleep, you'd be correct. \n\nNothing happened while we sat there. After I finished my glass, Noah put the flutes away and emptied the rest of the champagne into the bathroom sink, and when he returned to the bed, I'd already fallen asleep. \n\nHe must have turned off the TV and the lights before falling asleep himself, because when I woke up a few hours later, it was dark in the room. \n\nI was warm. Incredibly warm. And unbelievably comfortable. Sleepily, I shifted my hips slightly, then froze as my eyes popped open.\n\nNoah was behind me. His breath tickled against my neck and I knew he was fast asleep. I could feel the weight of his body pressed against mine, his arm wrapped around my side. My arm was on top of his, holding it close against me, our fingers entwined. My legs were tucked up, as were his, and my ass was cradled in his lap.\n\nHis lap, where something very hard was pressing against me. \n\nI bit my lip. Noah was asleep. It didn't mean anything.\n\nThen again, he was curled up against me completely, and I had pulled him closer, held his hand in place. \n\nThat fluttering was starting in my stomach again. I told myself to wriggle away from him, to do the proper, responsible thing and move away. The flutter grew more insistent, and there was a spot between my legs that was becoming incredibly warm. \n\nFrozen with indecision, I lay there, listening to Noah breathe, pleading with my body to stop reacting to his. \n\nI tried to tell myself I would talk to Noah in the morning about my feelings. The flutter didn't listen. \n\nI reasoned that, whatever my relationship with God, whatever my religion did or didn't say, it was widely accepted that a physical relationship was meant for people in love. I had known Noah for a matter of days. Love wasn't on the table. What was happening to me was temptation, was something to be resisted... or at least, that's what my father would have said.\n\nMy father was wrong about a lot.\n\nI told myself I should run away like I did with all things that scared me. I told myself I didn't want to do anything inappropriate. \n\nI was an absolutely terrible liar. Even I knew that. \n\nI had just about convinced myself to at least let go of Noah's arm when it moved. Noah sighed as his body tensed, hugging me just a bit closer to him, the bulge behind me pressing firmly into my ass cheek. I couldn't help it; a small squeak left my throat.\n\n\"Wha...\" Noah said drowsily. \n\nHoping he would fall back asleep, I didn't respond. \n\nNoah shifted again. I felt the moment he woke up fully; like me, he froze, and his eyes probably popped open completely. The soft breath that had been tickling my neck stopped as he held it in.\n\n\"Please tell me you're not awake,\" he murmured.\n\nNot about to lie to Noah again, I winced.\n\n\"I'm awake.\"\n\n\"Shit,\" he hissed. His legs uncurled, pulling his hardness away from me. \"Fuck. Lacey, I'm sorry. I was... I was sleeping.\" \n\n\"I know. It's okay.\"\n\n\"I didn't mean... I must have just moved closer... Fuck, this is why I said it was a bad idea. I'm so sorry.\" \n\n\"It's okay.\" \n\nHe paused. Beneath my hand, his fingers flexed.\n\n\"Are you going to give me my arm back?\"\n\n\"Do you want it back?\" \n\nThe tension in the room was heavier than the blankets were around us. I could almost hear the thoughts flying through his mind, trying to figure out a response.\n\n\"I don't want you to think I'm taking advantage of you,\" he finally said.\n\n\"I'm the one who has your arm.\" \n\nHe groaned. The flutter in my stomach roared. \n\nSlowly, his body shifted back towards me. The bulge returned to my ass, pressed against me purposefully. I sighed softly and Noah's fingers slid from mine. His arm moved as his hand made its way to my side, then travelled down to my stomach.\n\nIf he noticed how fast my heart was racing, he didn't say anything. Fingers pushed underneath the hem of my tank top and suddenly his hand was gliding up my stomach. By the time his rough palm reached the underside of my breast, I was nearly shaking with anticipation. \n\nBefore he touched me further, his other hand travelled up my back. He brushed my hair to the side, exposing my neck. A shiver ran through me as the cool air hit my skin, only to be suddenly replaced by warm lips pressing against my neck. While kissing my neck lightly, he resumed the movement under my shirt, and a large hand cupped my breast.\n\nI bit my lip, trying not to make a noise as his fingers explored my breast. He found my nipple, stroking it lightly with his thumb and causing a shock of desire to rush through my body. I wanted Noah, wanted him to touch me everywhere, but I was simultaneously terrified. \n\n\"Do you want me to stop?\" he whispered, his lips moving against my neck.\n\n\"No,\" I said, though my voice was high-pitched.\n\n\"You sure?\"\n\n\"Mm-hmm.\" \n\nHe moved his hand off my breast anyway. \"Turn towards me.\" \n\nI rolled over obediently. Facing Noah, I was even more nervous. He didn't say anything, just touched my cheek lightly and brought my face to his, his lips pressing softly to mine.\n\nIt was my first kiss.\n\nMy mind went completely blank. I'd seen people kiss before, in real life and in movies and on TV. I knew, theoretically, how to kiss somebody. I knew I was supposed to move my mouth somehow, and close my eyes. But at that moment, any sense of what I was supposed to do evaporated from my head.\n\nNoah's eyes opened as he pulled back. \"You don't want this.\" \n\n\"Yes I do.\" \n\nHis hand moved away from my face. \"This was a bad idea. I'll go. We can talk tomorrow.\"\n\n\"Wait, no\u2014\"\n\n\"Lacey, it's okay. I don't want you to do something you don't want to do.\" \n\n\"I do want to!\" \n\n\"You say that, but you're lying there like you're made of stone, quiet as a mouse, and won't kiss me back. I don't\u2014\"\n\n\"I've never been kissed before.\"\n\nHe had been about to roll over, but stopped. In the dim light, I could see his eyes were wide. \n\n\"What?\"\n\nI hoped he couldn't see how red my face was. I was no longer trembling with anticipation, but with something that was a mix of vulnerability and fear. \n\n\"I'm a virgin.\" \n\nNoah stared. Full-out stared at me, frozen as he propped himself up on one elbow. It was a long, long moment of silence as he gaped at me.\n\nI had never felt more like a freak in my life. \n\n\"Nope.\" He shook his head suddenly, breaking his statue-like gaze. \"I can't. This isn't... I can't do this.\" \n\n\"Okay.\" \n\nThe sound of my heart breaking must have been obvious because Noah winced.\n\n\"Not because of you.\" He sat up, a respectable distance away from me. \"Lacey, you're... I can't do that to you if you've never... I should not be trusted with that responsibility. You deserve someone good.\"\n\n\"You are good,\" I whispered.\n\nThere were tears in my eyes, blissfully hidden in the dark. Under the blanket, my stomach was still exposed, and though I was completely wrapped in the comforter, I had never felt colder in my life.\n\n\"That's not...\" He sighed, shaking his head. \"Shit. Look, this isn't about you. I like you, Lacey. I really fucking like you. I think you're... I want to just...\" Again, he shook his head. \"Shit. Never mind. Look, your first time should be special, okay? You deserve that. I'm not...\" He paused again, swallowing hard. \"I'm not taking your virginity on a fucking train.\" \n\nI tried to joke about it. \"So not being on a train is still on the table, then?\" \n\n\"That's not\u2014\"\n\n\"I was joking,\" I mumbled, pulling the blanket up to cover my face.\n\nI was feeling particularly unattractive. I had never thought I was beautiful, but I had never thought I was so unattractive that Noah wouldn't even want to kiss me. \n\nHe said something, but I didn't hear it. I was focused on not crying, biting my lip hard as I tried to direct my attention to anything other than the sadness that was enveloping my heart. Inhaling steadily, I exhaled softly, pushing the air past my lips. Moments later, a yellow glow filtered through the blankets as Noah turned the lights on.\n\nThe mattress shifted as he sat back down on the bed. I couldn't see him. The only part of me not covered by a blanket was my forehead and my hair.\n\n\"Lacey,\" he said quietly. \"Please come out and talk to me.\" \n\n\"I can't.\" \n\n\"Please, Miss Lacey?\" \n\nThe tears I'd been working so hard to push down welled up in my eyes again. A soft pressure touched my shoulder. \n\n\"Don't cry,\" he said. \"Let's talk.\" \n\nI blinked hard, three times, then forced myself to pull the blankets away from my face and sat up. \n\nNoah was looking at me, his hair a tousled mess around his head and his face serious. My eyes met his and then flicked away, still too embarrassed to look at him. \n\n\"I'm sorry.\" \n\nI shook my head. \"It's fine.\"\n\n\"Don't lie to me.\" \n\nI winced, my eyes slamming shut at his words.\n\n\"Okay, it's not fine.\"\n\n\"Tell me what's going through your head.\" \n\nI fought the tears, even with my eyes closed. \n\n\"You don't want me.\" My voice was quiet, almost no louder than a thought. \n\n\"I do.\" His voice was miserable, just as quiet as mine. \"I do, Lacey. You're just... you aren't like anyone else I've ever met. I'm scared of breaking you.\"\n\nI frowned, my eyes opening back up. \"Breaking me?\"\n\n\"Ruining what makes you special.\"\n\n\"My virginity? I thought you said you weren't religious.\" \n\nHe sighed. \"No, not like that. I don't want to hurt you. I don't want you to do something like this just because it's convenient.\" \n\n\"It's not exactly convenient to be turned down like this.\" \n\n\"Lacey\u2014\"\n\n\"I want you because I like you, Noah. I want you because I trust you, because you've been kind to me, because you've followed me back and forth across the whole stupid country to make sure I'm okay. You've taught me so much and made me feel like I'm important. I care about you.\" A tear escaped my eye and fell off my cheek onto the blanket. \"I don't want you just because I'm turned on and you're the closest man around. I just don't know what I'm doing and I'm apparently really, really bad at this.\" \n\nHis eyes were on me. I could feel them, even as I stared down at the blankets. \n\n\"Okay,\" he finally said.\n\nI looked up at him. His expression was resolute and serious, his forehead creased as he stared at me. \n\n\"What?\"\n\n\"If this is what you really, truly want\u2014\"\n\n\"It is.\"\n\n\"\u2014I'm not going to... we're not having sex on this train.\"\n\nI bit my lip as my cheeks burned.",
        "\"I don't have any, uh, you know.\" Noah's stoic face cracked a bit and he blushed. \"I'm assuming you're not on the pill or anything, either.\" \n\nI shook my head.\n\n\"So not that. But if you want to just... it's not just about that, you know?\"\n\n\"Not really.\"\n\n\"We can do other things.\"\n\nThe flutter that had gone quiet in my stomach reared up again, though it was tentative. I looked down, embarrassed. \n\n\"I don't really know what to do,\" I said. \n\n\"Come here. I'll help you.\" \n\nWhen I moved towards him, Noah caught me by the waist and brought me onto his lap, my thighs on either side of his and my ass resting just above his knees. \n\n\"Close your eyes,\" he said.\n\nI did.\n\nA hand came to my chin. His breath was warm against my lips as he leaned forward. \n\n\"When I kiss you, kiss me back,\" he whispered.\n\nSoft lips pressed against mine. That time, I returned his kiss, trying to mimic the movements he was making. I felt him smile and risked opening my eyes for a moment. As soon as I did, Noah pulled back.\n\n\"Am I doing it wrong?\" \n\nHe laughed lightly. \"No, not at all.\" \n\nHis hand found mine and guided it up to his neck. Unable to help myself, I brushed my fingers through his hair.\n\n\"Kiss me again,\" he said.\n\nI brought my lips back to his. At the same time, he put his hand against my cheek, deepening the kiss until I felt dizzy. I pulled back that time, gasping for breath. Noah's eyes crinkled and I blushed.\n\n\"You're laughing at me.\"\n\n\"I'm not,\" he said. \"I promise, I'm not. But you're allowed to breathe, okay?\" \n\nWe worked on kissing for a while longer. It was a strange feeling at first. I had never been kissed before, and it took a bit of time to get used to the feel of his breath, the taste of his mouth. Strange, but not unenjoyable. Slowly, I relaxed, and as I relaxed, I explored with a little less direction from Noah. When his tongue slipped into my mouth, I flicked mine lightly against it. When his teeth gently nipped my bottom lip, I repeated the action on his. Soon, both my hands were on his head, his hair tangled between my fingers. \n\nThe hand Noah had on my hip moved up to my waist. Once there, both his arms slid behind my back and hugged my body closer to him. My breasts pressed against him and I was certain he could feel the hardness of my nipples against his chest. The pressure felt good and I longed for him to do what he had been doing before I admitted I was a virgin.\n\nWhen he pulled back again, I stopped playing with his hair and let my hands rest on his shoulders. \n\n\"Doing all right?\"\n\n\"I think so.\"\n\n\"Think so?\"\n\n\"Well, I mean, you'd be the better judge, don't you think?\" \n\nHe laughed. \"You're doing great. Are you feeling okay?\"\n\nI nodded.\n\n\"I'm gonna start touching you some other places, all right?\"\n\nThat was more than all right with me.\n\nHe brought his lips to my neck again as his hand moved back under my tank top. Unlike when he had first touched me, he moved slowly. His fingertips caressed my skin, trailing lightly across my stomach, zigzagging lazily upwards until he was tracing the spot where my breasts met my ribs. I bit my lip, a shiver running through me as his fingers tickled along a particularly sensitive spot.\n\n\"Still okay?\" His voice was muffled against my neck, where his tongue was gently tracing patterns. \n\n\"Yes,\" I breathed. \n\nThe lightness of his touch faded as he took my breast in his hand. He explored slowly, tantalizingly soft, my nipple brushing against the roughness of his palm. I clung to his shoulders, my head bowed against the side of his, struggling not to gasp as he found spot after sensitive spot to outline.\n\nWhen he finally took my nipple between his fingers and rolled it softly, I squeaked and jumped slightly.\n\n\"Sorry,\" I said quickly. \"Sorry, that just... feels nice.\" \n\nHe pulled his mouth away from my neck, meeting my eyes. \"Sorry? For what?\" \n\n\"For squeaking.\"\n\n\"Are you purposely trying not to make noise?\"\n\nI nodded.\n\nNoah struggled not to laugh. His eyes flicked away from mine for a moment as he pressed his lips together. I couldn't tell whether his reaction made me want to laugh or cry, although a giggle bubbled up from my chest at his expression. After he regained a bit of composure, he kissed me softly, then pressed his forehead to mine.\n\n\"Make noise,\" he said. \"I want to hear you.\"\n\n\"You do?\"\n\nHis thumb circled my nipple as he spoke. \"How else am I supposed to know what you like? You can tell me, or you can make some noise and I'll know to do it again.\"\n\nHe punctuated the sentence by pinching my nipple between his fingers again. I shuddered and let out the breath I'd been holding in, relaxing as a soft moan escaped with it. \n\n\"Fuck,\" he swore. \"Yeah, like that.\" \n\nHe did it again, and again. Each time, a shiver of pleasure ran through my body, ending at the dripping pool that had started between my legs. I couldn't help myself and wiggled slightly, not sure what my body was wanting but desperate to find out. \n\nNoah noticed and pulled his hand from my tank top. He slid up the bed a bit, his back resting against the headboard. \n\n\"Move up a little,\" he said.\n\nHe guided me closer to him, my thighs now on either side of his hips. He watched my face closely as I relaxed back onto his lap, and I figured out why as soon as I was settled.\n\nIt took a moment for me to decide how I felt about the hardness that was now pressing against my mound. Despite the layers of fabric between us, it felt incredibly intimate and wickedly arousing. More importantly, when I shifted my hips again, both Noah and I made soft noises of contentment. \n\nAs it turned out, I decided I liked it. \n\nNoah kissed me again as his hands moved to my hips, guiding me to roll them against him. Each time I did, the friction sent a wave of satisfaction through my body. As the wave subsided, I paused, waiting until I couldn't stand it anymore before doing it again.\n\nNoah pressed my forehead to his again. \"Can I take your shirt off?\" \n\nHis voice was soft but gruff. Goosebumps pricked along my arms at the sound of it. The idea of being naked in front of him was daunting, but I knew it had to happen sooner or later. \n\nI swallowed hard and nodded. \"Can I take off yours too, then?\" \n\n\"Of course.\" \n\nHe let me do him first. I pulled up the hem of his shirt, my eyes glued to the tight muscles and scrawling ink embedded in his skin. Brazenly, I stared at his chest, taking in each picture and symbol drawn there. Without thinking, I brought my hand to one of his tattoos and trailed my fingers along it.\n\nNoah patiently let me explore until I looked back up at him.\n\n\"Do you have any tattoos, Miss Lacey?\" \n\nI shook my head. \"Just all these stupid freckles.\"\n\nHe caught my hand in his and brought it to his lips, kissing one of the thousands of brown spots that covered my skin. \"I like your freckles.\"\n\nI couldn't keep from smiling. \"I like your tattoos.\" \n\nNoah let go of my hand and pulled me in for another kiss. As he did, his hands found the hem of my tank top and began guiding it up. I clung to his lips as long as I could, feeling as each inch of skin he revealed met the cool air around us. When he was about to uncover my breasts, he paused.\n\n\"You okay?\"\n\n\"Yes.\"\n\n\"Promise?\"\n\n\"I promise.\" \n\nHe pulled the tank top up the rest of the way. I lifted my arms to help him slide it off completely, shyly putting them back down as he tossed my tank top to the side unceremoniously. \n\nI sat back a bit as he looked at me, feeling more exposed and vulnerable than I ever had in my life. Reflexively, my shoulders hunched forward and my hands fluttered nervously, itching to reach up and cover myself. Something buried deep inside, some learned lesson from years past, told me to be ashamed, and I couldn't help listening to it. \n\nMy head was bowed, eyes cast down, so I didn't see when Noah pulled his eyes away from my breasts. Instead, I felt his hands come up to my shoulders, straightening them back, then sliding down my arms to take my hands in his. Still, I couldn't look at him. \n\n\"Talk to me.\" His voice was soft, comforting. \n\n\"I'm nervous.\" \n\n\"We can stop any time.\" \n\nI shook my head, my hair tickling along my bare shoulders. \n\nNoah released one of my hands and brought it to my shoulder, brushing the hair off it.\n\n\"It's okay to be nervous, but you don't have to be. You are beautiful, Lacey. Every bit of you.\" \n\nI didn't respond, just leaned forward and kissed him. His bare chest pressed against me, warm and smooth, and after a moment his arms wrapped around my waist. \n\nThe kissing was different that time. I didn't know which of us was responsible, but it was more urgent, more demanding than it had been earlier. All I knew was that I liked it. \n\nI liked the feel of his mouth against mine, his tongue sliding against my lips. I liked it when his arms held me close, when my breasts flattened against his chest, skin against skin. I liked the feeling of his hardness pressing against me, and liked it even more when it was pressing against the hungry place between my legs that wanted more and more. \n\nI just didn't know how to tell Noah that. Or what more even was, really. \n\nMaybe it was the way I was squirming against him or maybe it was the tiny noises I was making, but Noah seemed to know what I wanted before even I did. His hands began to move again, wandering up and down my sides and back, to my breasts and down my stomach, until his fingers were slipping beneath the waistband of my pyjamas. \n\nAgain, he paused.\n\n\"Still\u2014\"\n\n\"Yes.\" \n\nHe chuckled softly and nipped at my lip. \"Good.\" \n\nThe tips of his fingers moved into my panties. I was certain my entire body was quaking with the beat of my heart, forceful and nervous and exhilarating all at once. The rest of his fingers followed, and then his hand was cupping my mound lightly. A finger ran along my slit and Noah's lips twitched into a smile as he felt how wet I was. \n\n\"Damn, Lacey.\" \n\n\"Sorry.\"\n\nHe nipped at my lip again. \"This is not something to be sorry for.\" \n\nHis finger traced along my slit a couple more times. He didn't push it inside of me, but dipped it between my folds and teased along my entrance before moving up to the throbbing, sensitive center. \n\nI gasped when he touched me there. His fingers began to circle me, rubbing lightly, then increasing the pressure ever so slightly. He brought his other hand back up to my breast, fondling me for a moment before pinching my nipple again. I cried out, my eyes slamming shut at the intense pleasure Noah was giving me.\n\nI should explain something about growing up in a small town as the admittedly-naive daughter of a very conservative preacher. Sex was not a topic that was to be discussed, ever. I mean, I knew the biology of it. Insert this into that, baby comes out nine months later. Make sure you're married, enjoying it is a sin, all that good stuff. \n\nThe rest of what I knew about sex was very, very basic. It felt good, or so I had been told. I knew there were lots of different ways to do things. I knew that women could like it just as much as men. The thing to remember, though, is that up until four days earlier, I had been a by-the-book girl who followed all the rules.\n\nI had never watched a dirty movie. I turned my head during regular movies that had sex scenes. And while I had... explored myself a little bit, I had never truly masturbated or anything. \n\nSo when Noah's fingers began moving faster and the pleasure became more intense, I didn't know what to do.\n\n\"Lacey, relax,\" he was whispering. His forehead was pressed against mine again, his lips moving just a breath away from my own. \n\nI whimpered in response. My body was fighting itself. What he was doing felt amazing, but a complete lack of control was threatening to overwhelm me. I didn't like it, but I did like it. I needed more. I wanted less. \n\nIt was too much. My shoulders tensed, then my back, then the rest of me as I gripped Noah's arms.\n\n\"What...\" I tried to speak, but the word trailed out into a breathy cry. \n\n\"Relax,\" he said again. Unlike every other moment up to that point, he didn't stop, didn't pause. \"Just relax. Trust me, Lacey.\" \n\nThe effort required to unclench my muscles was monumental, but I managed it because Noah wanted me to. \n\n\"Look at me,\" he directed. \n\nI forced my eyes back open and tried to focus on his. His dark eyes were intense, focused on me as his fingers danced against my clit. I could feel what he was doing, feel him pressed against me, but my body was going somewhere else. It was like I was climbing, trepidatiously ascending at a rate I couldn't control, higher and higher, faster and faster, terrified I was going to fall.\n\n\"Noah...\" I whimpered.\n\n\"Trust me.\"\n\nI did, and I fell, and it was bliss. \n\nMy eyes squeezed shut again as a strange cry left my mouth. I didn't know when Noah took his hand off my breast, but he clutched me tightly as my body spasmed. Vibrations of ecstasy coursed through my every nerve, like the feeling of music that's too loud and too deep and so, so good. My head tilted back for a moment, my neck exposed to Noah before I hunched back forward, burying my face against his shoulder.\n\nWhen I finally regained control of my body, I was resting heavily against Noah. His hand was still in my panties, gently stroking my slit as he held me to him with his other hand. I could feel his breath against my ear, his face buried in my hair and against my neck.\n\nSitting up took effort, since every one of my extremities felt like jelly. Once I began moving again, Noah withdrew his hand from between my legs and helped support me as I sat back.\n\nI was panting, still shaking a bit, as I met his eyes again. Noah's face was serious, his eyes guarded as he waited for me to speak. \n\nI really didn't know what to say.\n\n\"What the fuck was that?\" I gasped.\n\nI had never seen Noah laugh so hard.\n\n\"Sorry, sorry, I'm not laughing at you,\" he choked between laughs. \n\nI couldn't help but giggle with him, knowing I was blushing, knowing how stupid I sounded, and not caring. Noah brought a hand to his face, wiping his cheek before pulling me in to kiss me.\n\n\"You really don't know what that was?\"\n\n\"I mean, technically I guess I know what it was. But I've never... I mean people said that it felt good to... well, you know, but I didn't know I could even do that.\" \n\nHis hand stroked my cheek lightly. \"You are the sweetest person I've ever met.\"\n\nI kissed him again, tenderly, before pulling back and glancing down. \n\n\"Now what about you?\"\n\nThe question seemed to make him conflicted. There was still a hard bulge tenting his pyjama pants, and I wanted to make him feel as good as he had made me feel. At the same time, I think Noah was worried about pressuring me to go further than we already had. \n\nHe didn't say anything right away, and I looked back up at him.\n\n\"I want to, Noah.\"\n\n\"Are you sure?\"\n\n\"I just need you to, well, to show me what to do.\" \n\nHe nodded solemnly, then took my hand in his. I let him guide me, watching carefully as he pressed my palm against his erection, letting him move it back and forth against him.\n\n\"You sure?\" he asked again.\n\n\"Yes.\" \n\nHe groaned softly, hesitating for just a moment before pushing the waistband of his pants down. I watched with poorly-hidden eagerness as he removed them.\n\nUnsurprisingly, I had never seen a penis before. Aside from diagrams in my science book at school, I barely had any idea what one was supposed to look like. I didn't know if Noah's was bigger or smaller than average, or how it compared to what any other man's looked like, but my first thought was that I really liked it. \n\nIt probably helped that I knew it wasn't going inside of me right then and there, otherwise I might have been stereotypically afraid.\n\nNoah took my hand again and brought it to his shaft. His hand covered mine as I wrapped my fingers around him. The heat of it surprised me, as did how smooth it was. Beneath my fingers, I felt him twitch slightly before Noah began guiding my hand up and down on him.\n\nHe sighed softly, and I looked up long enough to see he had tilted his head back and closed his eyes. A look of relief was drawn across his face, and I couldn't help but smile before looking back down at our hands. \n\nHe guided me for a while, then took his hand away. I kept stroking him at the same pace, adjusting only when he asked while I learned what to do.\n\n\"Grip it just a little harder,\" was one.\n\n\"Bit faster, please,\" was another. \n\nI understood then what he meant about noises being helpful. Noah was mostly quiet, but I got accustomed to the small groans he made when I did something he liked, the way his breathing changed when I changed the speed at which I stroked him. It was fascinating and intriguing, but I knew there was so much more I could do.\n\n\"Noah, can I ask you something?\" I said, slowing my hand just a bit.\n\nHis eyes opened again. \"Yeah, of course.\"\n\n\"Can you tell me...\" I froze, unsure of how to phrase what I wanted to say.\n\n\"Don't be shy. Ask me.\" \n\nI bit my lip, feeling heat rising in my cheeks as my nervousness began pumping through my heart. \"Can you t-tell me how to... wait. What should I call it?\"\n\nDespite my rambling, Noah was unbelievably patient with me. \"Call what?\"\n\n\"Your, um...\"\n\n\"My cock?\" \n\nI knew my face was red and I couldn't meet his eyes as I nodded. Noah laughed softly and pulled me towards him. A quiet, comforting kiss pressed against my lips as he tried to quell my embarrassment. \n\n\"You can call it whatever. Penis, dick, cock, whatever. I don't care. Say a couple of them, see what feels right.\" \n\nI murmured the words, considering each as I let the syllables roll through my mouth. 'Penis' felt too clinical. 'Dick' felt too juvenile. \n\n\"Cock,\" I said. Noah chuckled again. \n\n\"Sounds good. I say 'pussy,' is that okay?\"\n\nI nodded.\n\n\"Now, what was the original question you were going to ask?\"\n\nRight.\n\n\"I want to... I mean, your c-cock... can you tell me how to do it, um, with my mouth?\" \n\nHe looked incredulous. \"Are you sure?\"\n\n\"I want to try, if that's okay.\"\n\nA dry chuckle accompanied his disbelieving smile. \"Never thought I'd have a girl ask if it's okay.\" \n\n\"Is it not normal?\" \n\n\"That's not what I meant.\" He took my hand from his cock and pulled me in for another kiss. \"More than okay. Amazing. But you don't have to if you don't want to.\"\n\n\"I want to.\" \n\nI moved away for a moment so he could finish taking his pants off. Once he was done, I settled myself between his legs.\n\n\"So, uh, main things to remember,\" he started. \"You can kinda just... I mean, what you were doing with your hand, you can do that with your mouth. But you don't have to do just that, you can... I dunno, explore a bit. I don't know how to explain this.\"\n\n\"Just tell me if I'm doing something wrong when I do it, I guess.\"\n\nHe nodded. \"If I'm gonna, you know, finish, I'll warn you. Up to you how that happens, just move if you don't want... you know.\" He cleared his throat. \"And uh, teeth are not good down there.\" \n\nI had figured that much out, but didn't blame him for making sure it was said. \n\nI started out by exploring, figuring Noah could tell me what was and wasn't working. Wrapping my fingers around him again, I brought the swollen head to my mouth and licked it tentatively. There was something clear already leaking from his tip that left a salty taste on my tongue, although it wasn't unpleasant, and I spent some time licking the rest of it off him.\n\nNoah seemed to like that. I could feel him watching me, though I couldn't bring myself to look up at him. After licking the tip of his cock, I moved on to the rest of it. There was a vein along his shaft that throbbed, and I kissed it gently before working my way down to the base.",
        "From there, I licked back up the underside of his cock. When I reached the tip again, I took it into my mouth.\n\nNoah definitely liked that. \n\nHe tried to suppress the groan he made, but the throaty sound was accompanied by his hand flitting towards my head. His fingers brushed against my hair, lingered there, but moved after a moment.\n\nI bobbed my head on his tip a few times, stroking the rest of him at the same pace. It was another new, strange sensation, and I didn't feel like I was doing it quite right. Holding just the tip of his cock in my mouth felt like it wasn't enough. All it was really doing was making my mouth water, and I wasn't sure if Noah really wanted a bunch of saliva on him.\n\nIt really felt like I should put more of him in my mouth, so I stopped stroking him with my hand and carefully pushed my head down until his tip was pressing against the back of my throat.\n\nAs terrible as my instincts seemed to be about other things in my life, that one was correct. Noah groaned loudly, almost surprisingly so, and that time he couldn't keep his hands off my head. I glanced up at him, eyes wide to ask the questions I couldn't with his cock in my mouth.\n\n\"Yes,\" he panted. \"Yeah, that's... you got it.\" He stroked my hair gently, then lightly gripped it. \"Now just...\"\n\nHe didn't say the rest of it, just started guiding my head up and down on his cock. \n\nOnce I got the rhythm down, Noah's hands just rested on my head, fingers twisting through my hair. I couldn't help the wet sounds that escaped from my mouth as I moved and a couple of times, I pushed his cock just a little too far down my throat and choked, but he didn't seem to mind. Actually, he seemed to quite like the sounds I made when I gagged on him, but I didn't think I could do that too often without making myself sick. \n\nI wasn't sure how long it would take for him to finish, but when his breathing became heavier and the soft groans more frequent, I thought he was probably pretty close. Sure enough, a few moments later, he lightly pulled at my hair, his voice frantic and demanding.\n\n\"Lacey, you gotta move now if you don't want me to come down your throat.\" \n\nI glanced up at him, catching his eye as he looked down at me, and kept bobbing my head.\n\n\"Oh, fuck,\" he grunted. His eyes squeezed shut as his fingers tightened in my hair, and suddenly his cock was pulsing and my mouth was filling with a hot liquid. He tasted salty, a little bitter, but again, not unpleasant. I didn't know how much there would be and panicked for a moment, not sure what I would do if it didn't all fit in my mouth, but he sighed and tilted his head back, relaxing heavily against the headboard as his cock stopped twitching.\n\nFairly certain that was it, I moved my lips off of his cock. I wasn't sure what I was supposed to do with the mouthful of cum I now had, but remembering what he said about coming down my throat, I figured I was supposed to swallow it. Immediately after I did, Noah sat back up.\n\n\"Do you want something to spit into?\" he asked.\n\nI froze. \"Um... am I supposed to?\"\n\nHe smiled, eyes tired but warm, and pulled me towards him. \n\n\"Doesn't matter. You can swallow if you want, or spit it out. Some girls do. You do what you're comfortable with.\"\n\nHe kissed me lightly, his hand tenderly brushing through my hair as he flattened the spots he'd gripped.\n\nI knew I shouldn't need validation from him, but when he pulled back, I couldn't stop myself from asking for it.\n\n\"Was it okay?\"\n\n\"Yes, Miss Lacey.\" He helped me back under the covers, cuddling up tightly to me after turning off the light. \n\nMy eyes were heavy, body satisfied but tired, and I felt myself fading quickly towards sleep. I was nearly there when I felt Noah's lips press against my forehead.\n\n\"You're pretty special, you know.\"\n\nBefore I could respond with anything more than a smile, I fell asleep.\n\n**\n\n<center>Chapter Five</center>\n\n\"What are you thinking about?\"\n\nMy fingers were absentmindedly tracing along a feather tattooed on Noah's chest, just above his left pec.\n\n\"Statues.\" \n\nHe chuckled. \"Statues? Where'd that come from?\"\n\nI had woken up in Noah's arms. He was still naked, his body pressed against mine as his arms encircled me protectively, his face buried in my hair. There hadn't been a time in my life where I had felt so at peace, so content, and so unwilling to leave the comfort of another person.\n\nThere also hadn't been a time in my life where I'd needed to pee so badly, and there had been no way of extracting myself from Noah's grip without waking him.\n\nI had slipped my tank top back on while I was in the bathroom, and when I returned, Noah had put his pants back on but was still lying shirtless on the bed. He was lying on his back, rubbing his eyes, but extended an arm to me. I hurried back into the bed and lay next to him, resting against his chest as we both shook off the last traces of sleep.\n\nIt felt different than the night before. Had Noah wanted to kiss and touch me, I would have certainly been fine with it, but the sense of urgency and eroticism wasn't there. Instead, it felt quiet, tranquil in its coziness, familiar, but brand new. \n\nMy mind wandered as we lay there, just enjoying the peace. When he asked me what was on my mind, I answered without thinking.\n\n\"Yeah, statues. You're going to think I'm a total dork if I tell you.\" \n\n\"Tell me anyway.\" \n\n\"Have you ever heard of Saint Teresa of Avila?\"\n\n\"Wait, you're thinking about religious statues?\"\n\n\"I told you, it's kind of dorky.\" \n\nHe chuckled. \"I can't say I've heard of her.\"\n\n\"She became a saint because she had spiritual visions and she wrote about them. Then there was this artist, Bernini, and he made a statue showing one of her visions.\" \n\n\"What was her vision?\"\n\n\"I don't remember the exact wording, but it was about getting stabbed by an angel a bunch of times and being in so much pain she was crying out, but that the pain was from God's love and it was so strong that it felt good.\"\n\n\"That's a little fucked up.\"\n\n\"I know. When we talked about it in class, my professor said the stabbing was symbolic of having your sins torn from you and the pain was from the love of God taking their place. But when he showed us the picture of the statue that Bernini made, she looks like she's really enjoying the pain, you know? And he said that's what's called religious ecstasy, and there's a ton of other paintings and statues depicting all sorts of other saints going through this experience.\" \n\n\"And this is on your mind because...\"\n\n\"I'm thinking now that maybe they were all just having orgasms, but since sex was a sin, they said it was a spiritual vision to cover it up.\" \n\nNoah's laughter shook him so strongly that I was jostled beside him.\n\n\"What? The similarities are all there! Moaning, painful but in a good way, repeatedly being impaled, overwhelming loss of control...\"\n\nHe was wiping tears from his eyes when he finally calmed down. \n\n\"Jesus, Lacey. You're something else.\" \n\nHe brought me to him for a kiss that lingered just a little too long, leaving me just a little too light-headed. When we parted, he cleared his throat.\n\n\"Should probably grab breakfast. Gonna be in Toronto in a few hours.\" \n\n**\n\nThe lady at the train station in Edmonton had said buying our tickets to Montreal would be cheaper in Toronto, and she was right. However, if we had just bought the tickets when we were in Edmonton, we wouldn't have had to wait until two days later to get the train.\n\n\"It's busy on the long weekend,\" explained the man behind the ticket counter. \"Sold out, reduced trips. Best bet is to get the midday train on Monday.\"\n\n\"Maybe we should just rent a car,\" I said to Noah. \"It seems stupid to wait two days to take a five-hour trip.\"\n\n\"You ever drive in Toronto, Lacey?\"\n\n\"I've never been here before.\" \n\nHe shook his head. \"You've never seen traffic like here. I'm not willing to drive it. You shouldn't either. It'll take us at least six or seven hours to get from here to Montreal. That's only if traffic's good. Could be a full day of travel.\"\n\n\"Really?\"\n\n\"Barely gonna lose any time if we just stay here a couple days. We'll be there by Monday night on the train, Sunday night if we drive. I got a place we can stay.\" \n\nWhile Noah made some calls to figure out where we were going, I called Sean.\n\n\"I was starting to panic,\" he said.\n\n\"Sorry. We got delayed in Alberta but we're in Toronto now.\"\n\n\"When should I pick you up?\"\n\n\"Well, not until Monday night. The train is sold out for the next couple days.\"\n\nSean made a noise of frustration. \"Damn. I was all excited to see you today.\" \n\nA twang of guilt pinched my stomach. \"I'm sorry. I was, too.\" \n\n\"Not your fault.\" He hesitated, as if unsure how to proceed. \"You talk to Mom at all since you've left?\"\n\n\"No. I stopped answering my phone.\"\n\n\"She's worried, you know.\"\n\nAnother pinch of guilt, stronger that time. \"I'm scared to call. I don't want to talk to Daddy.\" \n\n\"I know. But I wanted you to know that Mom's worried. So am I. What about if I get you a plane ticket, eh? You could be here tonight.\"\n\nIt was tempting. An hour on a plane and I'd finally be in Montreal with my brother. \n\nAn hour on a plane, and that would be the end of my time with Noah. \n\nI bit my lip as I looked at Noah a few feet away, talking on his phone as I talked on mine. I very much doubted that the offer of a plane ticket would be extended to Noah, too.\n\n\"It's okay,\" I said. \"W-We already bought our tickets for Monday and have a place to stay.\"\n\n\"We, as in, you and that friend of yours no one seems to have heard of?\"\n\n\"He's got a name.\"\n\n\"Yeah, Noah, right?\"\n\nI didn't like the tone of Sean's voice and matched it with my own icy response. \n\n\"Yes, that's correct.\"\n\n\"Mom said none of your friends have ever heard of him.\"\n\n\"You told Mom?!\"\n\n\"Wha\u2014of course I told Mom! She's been... Christ, Lacey, do you even know how worried everyone has been? You disappeared, for all intents and purposes. Mom was ready to file a missing person report. She freaked the fuck out when I said you were with someone named Noah that she'd never heard of, convinced he was some serial killer who was going to\u2014\"\n\n\"\u2014leave me dead in a ditch somewhere?\"\n\n\"Uh, yeah.\"\n\n\"He's helped me, Sean. You'll understand when you meet him,\" I said quietly, hoping my voice wouldn't carry over to where Noah was standing. \n\n\"Promise me right now that he hasn't hurt you or manipulated you or done anything bad to you.\"\n\n\"I promise.\"\n\n\"Are you fucking him?\"\n\n\"Sean!\" \n\nMy face flushed instantly red, my breath catching in my throat as I gasped. Instinctively, my hand fluttered to my throat, looking for the missing cross around my neck.\n\nSean started laughing.\n\n\"Jesus Christ, Lace. A couple people in Vancouver might not have heard that, you wanna try again?\" \n\n\"What the hell, Sean?\"\n\n\"Hey, I'm not gonna judge you. You're an adult.\" He was still laughing. \"I was just teasing, I'm sorry. Look, if you are, whatever. Just be safe, okay? This whole thing seems really sketchy.\"\n\n\"I can't believe I'm having this conversation with you. I'm not... I don't even...\"\n\n\"Clearly,\" he interrupted. \"I don't think I've ever heard someone blush through the phone before. You're still the good one, Lacey.\"\n\nHe didn't say it unkindly, but the words still struck a nerve. \n\nI was tired of being the good one.\n\n\"You sure you don't want us to buy you a ticket?\" Sean asked.\n\n\"It's okay. I'll call you Monday when we're about to get in.\"\n\n\"All right. Love you, sis.\" \n\nHearing my brother say he loved me for the first time in years nearly made me cry, but I held it together. \n\n\"You too.\"\n\nNoah was done with his call when I walked back up to him. My face must have still been pink.\n\n\"You okay?\"\n\nI nodded, not trusting myself to say anything.\n\n\"All right. Okay, so I've got us a place to stay for the night. I've got some friends who live pretty close.\"\n\n\"Are they, um...\"\n\n\"Not like Sam and Pauline, no,\" Noah said hurriedly. \"Promise. They're good people. Might be a little more urban than you're used to, but it'll be safe for the night.\" \n\nWe took a bus to Noah's friends' place. Much like our trip through the mountains, my eyes were glued to the window nearly the entire ride. \n\nI had never seen a city like Toronto. Buildings towered over us, as large and grand as the mountains had been, and there were people everywhere. My experience with cities was limited to Winnipeg, mainly, and the small part of Edmonton I'd seen around the train station. Neither of those places were anywhere near as crowded, as bright, and as intimidating as Toronto was. Everything gleamed in the summer sun, shiny and modern and nothing like I'd ever seen before.\n\nThe people we passed looked so unlike people I had ever seen before. They hurried back and forth in clothing that seemed foreign to me, all angles and sharp cuts. To me, they seemed like clones, cookie-cutter people who walked at the same speed with the same looks on their faces. At one intersection, I saw a man with a sign preaching about the end of days. He tossed his arms passionately, preaching to crowds of people waiting to cross the street. Not a single person looked at him or even seemed to notice he was there.\n\nThat man made me shiver. The way he spoke, the passion in his eyes paired with the anger and the judgement of his sign, made me think of my father. In another world, a world far north of a city that was dwarfed in comparison to this one, I would have been sitting in a church attentively, listening to words like that spewing at me. \n\nHe looked at the bus just before we started moving again. I swore his eyes met mine, that he could sense all the things I had done and would do and that he condemned me for it, without ever speaking a word.\n\nThen, as soon as he had been in my window, he was gone, replaced by a street full of stores with full display windows showing everything from clothing to lingerie to computers.\n\nEven once the bus left downtown, I was overwhelmed. The city sprawled in every direction, buildings and houses laid out with the same vastness that I imagined the ocean must have. The closer we got to Noah's friends' place, the less shiny things began to seem. The height of the buildings sank and the people on the street became less identical.\n\nPast that, buildings began to appear more rundown. The gleaming buildings of Toronto's downtown were replaced with brick and stone that lent a dusted hue to the world. The smooth ride grew staggered as we drove onto roads that were less maintained, cracked and bumpy and bordered by boulevards of brown grass and cigarette butts. \n\nNoah seemed to grow more uncomfortable as we moved further away from downtown. When we finally got off on a street lined with older, rusted vehicles parked in front of tired-looking houses, he stopped me.\n\n\"I know this isn't the kind of place you're used to,\" he said.\n\n\"What do you mean?\"\n\nHe didn't meet my eyes, looking uncomfortably down the road. I followed his gaze, noting the wire fences surrounding small yards with patches of dirt, crumbling driveways and sidewalks, and scraggly trees.\n\n\"Don't have to humour me. I grew up in places like this. You probably drove through them with your parents telling you to lock the car door and not look out the window.\" \n\nI had no response. He wasn't wrong, exactly, but it hadn't crossed my mind that I should be worried.\n\n\"I'm sorry,\" he continued. \"If I could've found somewhere a little less, you know... a little nicer, I would've.\"\n\nNoah had pride. It wasn't the kind of pride people mean when they talk about the seven deadly sins, not the kind of vanity or hubris that makes people insufferable. No, the pride that Noah had was born of his humbleness, as contradictory as that would seem. He didn't want to accept kindness from people that he felt he couldn't repay. He didn't want to rely on others or be seen as dependent on anyone but himself. \n\nHe didn't want me to think less of him for what he could provide.\n\n\"Do you think I'm shallow?\" I asked. It came out harsher than I intended and I winced. \"Wait, not like... that came out wrong.\" \n\nNoah tried to smile, but it was the tight, reserved kind of smile that I had been seeing less of. \"Don't think you're shallow, just... you're used to a different standard. Don't want you to feel like you won't be safe here.\" \n\n\"I know I'll be safe. You're here.\" \n\nHe nodded solemnly, then led me down the street.\n\n**\n\nSix people lived in a house with three bedrooms and a studio-type space in the very small basement.\n\nJenny and Tom owned the house. When we entered, Tom embraced Noah heartily.\n\n\"Brother, it's been too long!\"\n\n\"Thanks, man. You saved our asses.\" Noah returned the hug.\n\n\"Who's this, then?\" \n\n\"Lacey, my friend Tom. Helped me get a construction job a few years ago.\"\n\nTom shook my hand. \"Lots more of those jobs for you if you settle down here, Noah.\" \n\n\"We'll see.\" He smiled tightly, though not coldly.\n\n\"Lacey, beautiful girl, this is my partner and my love, Jenny.\"\n\nA petite woman with a long braid that settled at the small of her back grinned at me and gave me the warmest, most earnest hug I had ever received. \n\n\"Welcome, Lacey. So nice to meet you.\" She grinned at Noah, nearly dancing in excitement as she released me from her hug. \"Noah!\" she stage-whispered. \"You take care of this one.\" \n\nI blushed and Tom's booming laugh filled the small living room at the front of the house. \n\nTanya and Shannon shared a room. They briefly said hello, but Tanya was leaving to work an evening shift at a hotel downtown and Shannon was going to get groceries. They shared a kiss quickly before stepping past us and disappearing into the street.\n\n\"We did a little juggling,\" said Tom as he led us to the other bedroom. \"This is Duncan's, usually, but he said he'd crash downstairs on Robbie's couch. Robbie had a friend staying over but it's probably about time for her to go home for a night or two. Although they might just chuck a pair of earplugs at Duncan, who knows.\" \n\nI felt guilty, of course. \"I'm sorry we're putting him out.\"\n\n\"Don't be! Duncan's not paying rent this month, he'll sleep where we tell him. Don't worry, Jenny washed up the sheets this morning so you got a clean bed, at least.\"\n\n\"Thanks, Tom,\" Noah said. \"I owe you.\"\n\n\"Never, brother. You've saved my ass before. You know you always got a place to stay here. It's nothing. You two get settled, grab a shower, whatever. Jenny's about to get dinner going and Shannon's picking up some beer. Duncan and Robbie and what's-her-name might pop by, we'll see.\"\n\nWe thanked him profusely before going into Duncan's bedroom. It was a small room, filled mostly by the bed and a small desk that had an old TV sitting on it, but it was clean and smelled reasonably fresh. \n\n\"Looks like we're sharing again,\" I said casually.\n\nNoah shook his head. \"Nothing will be happening here, Lacey.\"\n\nI busied myself digging through my backpack, hoping he didn't see the embarrassment written across my face. Of course, because it was Noah and because he seemed to know every minute thing about me, he crossed the room immediately and took my chin in his hand, tilting my face up to his.\n\n\"We need to talk about this, and we will. We get a good meal, a good night's sleep tonight in a room that's not moving across train tracks, and we talk tomorrow, okay?\"\n\n\"Okay.\"\n\nHe pressed his lips lightly to mine, but it was still enough to make me breathless. \n\n\"Tomorrow.\"\n\n**\n\nI showered first, but when I was done, Noah wasn't in the room. Shyly, I wandered to the kitchen, where Jenny was cooking something that smelled spicy and comforting.\n\n\"Is there anything I can do to help?\" I asked.\n\n\"Sure is!\" Jenny handed me a bottle of wine. \"Have a glass and keep me company. Shouldn't be too long now, but Tom's outside smoking with Duncan and they dragged Noah and Shannon along, so it's the perfect time for me to interrogate you.\" ",
        "Her laugh was musical and friendly, and I joined in as I poured wine for the two of us. \n\n\"What do you want to know?\"\n\n\"Well, I got the Cole's Notes version from Tom, who got a brief summary from Noah. Suffice to say, I know you're a sweet girl from some small town in Manitoba who had the fortune of finding your way into Noah's life. How'd that happen?\"\n\n\"Oh, that's... I don't even know where to begin.\"\n\n\"Well, how'd you two meet?\"\n\n\"On the train.\"\n\nJenny raised an eyebrow as she stirred a pot. \"Is a better question when did you two meet?\"\n\nMy stomach knotted as I bit my lip. \n\n\"Uh, well... today's the second so... um, six days ago.\" \n\nJenny turned to me slowly. She may have been a small person, but I had never felt so intimidated in my life. If the way that conversation was going was any indication of the one I'd have to have with Sean in a few days' time, I was screwed. \n\nWhen she burst out laughing, I was both surprised and relieved.\n\n\"Oh, girl. Now you gotta tell me the whole story. How the hell... I mean, I know Noah's a good kid, don't get me wrong, but six days?\" \n\nAs succinctly as I could, I explained how I met Noah. I started by telling her about the drugged drink on the train and told her about my screw-up that had us on the wrong end of the country, but glossed over running away from him in Hinton and losing my bag in Edmonton. I also didn't mention sharing a bed with him the previous evening, although Jenny asked as soon as I was finished.\n\n\"Shit, we thought when Noah talked about you that it was, you know, you two were... Girl, I can get Noah to sleep downstairs with the boys if you want, or in the living room.\"\n\n\"N-No, it's fine.\"\n\n\"You sure? Because\u2014oh.\" She grinned. \"You're just leaving out all the juicy bits, aren't you?\" \n\nI blushed horribly red as she laughed and slapped her hand against the counter.\n\n\"I thought that would explain it, but I just got more questions now.\" \n\nSipping the wine, I waved a hand in the air. \"Ask away.\" \n\n\"How'd you end up on that train alone in the first place?\" \n\nI stared down into my wine glass. For some reason, I was comfortable talking to Jenny, and the story spilled out without me even thinking about it. I told her about Roger tricking me into thinking he was interested and about what my parents were like, what they had done to Sean. Though I hadn't filled my glass very much, thinking I would sip it slowly, it emptied faster than I thought.\n\nWhen I finished talking and looked back up, Jenny was watching me with a guarded expression. Without saying anything, she reached forward and poured more wine into my glass.\n\n\"I feel very guilty complaining about all of this,\" I said suddenly.\n\n\"Don't, girl. Don't at all.\" She stirred the pot a few more times before lowering the heat to a simmer, then moved to the small kitchen table to sit next to me. \"Look, Noah's a good kid. I said that already, didn't I?\"\n\n\"Yes.\"\n\n\"He is, don't get that wrong. But you... well, you come from a bit of a different situation. How much has he told you about his background?\"\n\n\"I know he's been, um, in prison, if that's what you mean.\"\n\n\"That's part of what I mean, yeah, but it's good that you know that.\" She sighed and sipped her wine. \"There's no deep dark secrets or anything, not that I know of. Noah's had some trouble in the past, but he's grown up a lot. He lived with us here for a few months a couple years back. Tom does that with his company, you know. Tom had trouble with the law when he was young, got out of that life, started up a construction business. He hires a lot of kids like Noah, wants to see 'em succeed. Shannon's lived with us since before Noah did, does the books for the business now. Duncan's just getting on his feet now, too.\"\n\n\"I didn't know that.\"\n\n\"No reason for you to. Think Noah probably would've stayed, but he hates the city. Don't blame him. You grow up in the mountains, you want mountain life. But he keeps in touch, lets us know he's okay. He's looking for something. Don't think he knows what it is yet, but he's searching.\" She looked at me pointedly. \"You're a sweet girl. I can tell that by looking at you. Just remember, Noah's had a very different life than you.\"\n\nI promised her I would, though I wasn't entirely sure what she was trying to actually say.\n\n**\n\nWine flowed freely in Tom and Jenny's house, and even more so once we finished dinner. To my credit, I didn't drink excessively, but over the course of the evening, had enough to leave a tingling buzz in my head. \n\nNoah was more relaxed than I had ever seen him, although in fairness, I'd known him less than a week. Even still, he was as protective as me as ever, making sure I was comfortable and happy. \n\nI was relaxed, too. Jenny was one of the nicest people I had ever met, and though Shannon was guarded at first, she reminded me strongly of Noah. Tom was overwhelmingly friendly, earnest in a buoyant way, and so easy to like that I hoped our two-day stay wouldn't be the last time I would see him. Duncan was quieter, but he talked a lot with Noah, looking up to him like he was truly his brother. Even Robbie, who ended up leaving to spend the night with the girl Tom had mentioned earlier, was kind and welcoming.\n\nThe dynamic of that random assortment of people who I had never met before was more like a family than my own. \n\n\"Come out for a smoke, Noah,\" Tom boomed. \n\n\"I don't smoke, man.\"\n\n\"Good man. But come out, in any case. Duncan, you too.\"\n\n\"You need to quit that nasty shit,\" Shannon said, shaking her head. \n\n\"Don't judge me just because I sin differently than you,\" Duncan shot back.\n\nTom clapped him on the shoulder. \"You're learning. Good.\" \n\n\"You good?\" Noah asked me. I nodded and he touched my shoulder gently as he slipped behind my chair. \"Back in a few.\" \n\n\"How are you actually doing, Lacey?\" Jenny asked as the men closed the back door.\n\n\"I'm good. I really am.\" I smiled at her as I sipped my wine. \"I was just thinking that you guys are like a family.\"\n\n\"Not like, we are one,\" Shannon said. \"Even Noah. You too, now.\"\n\n\"Everyone who comes through these doors is part of my family,\" Jenny said. \"Tom and I, we never had kids. So we have you kids, instead.\" \n\n\"Still time to have kid-kids,\" Shannon said.\n\n\"Ah, time, but no time.\" Jenny filled her glass again. \"And no wine. That's a hard deal-breaker.\" \n\nI shouldn't have brought up family, because the next thought in my mind was of my own. Jenny noticed my smile fade.\n\n\"You thinking 'bout your parents?\"\n\n\"Am I really that easy to read?\"\n\n\"Like a book, girl.\" She patted my hand. \"You said you been ignoring their calls?\"\n\n\"Yeah. After my father yelled at me, I just couldn't.\" I took a breath, finally saying out loud what had been on my mind for days. \"I don't think I want to go back home. I don't think they'd want me back, but I don't want to live there anymore.\"\n\n\"You should try to talk to them,\" Jenny said. \"Not sayin' it'll fix anything, but to at least get yourself some closure.\"\n\n\"Call 'em,\" Shannon added. \"Now, while you're thinking it. Otherwise you're gonna stall and stall and never actually do it.\"\n\n\"Yeah,\" I said. \"I should.\"\n\nThey meant well with their advice, I knew they did. It wasn't Jenny and Shannon's fault that after a few more glasses of wine than I was used to, I decided it was good advice.\n\nI excused myself from the table and walked to Duncan's room. It was just after 10:00PM in Toronto, which meant it was just after 9:00PM back home. Certainly still early enough to call.\n\nI didn't turn the lights on. For some reason, sitting in the dark felt more appropriate. I perched on the edge of Duncan's bed and pulled my phone out. \n\n\"Please, God,\" I mumbled, though I wasn't even sure what I was praying for. \n\nForce of habit made me select the home phone number. It was only when it was ringing and I hoped that my mom would answer that I thought maybe I should have just called her cell phone. \n\n\"Lacey?\"\n\nI closed my eyes.\n\n\"Hi, Daddy.\" \n\n\"Let me guess, you're stranded somewhere and you're ready to come crawling home. My prodigal daughter, begging forgiveness. Or is it too much to think you've already learned your lesson?\"\n\nMy throat had gone dry. I wished I'd brought my glass of wine with me.\n\n\"Is Mom there?\"\n\n\"You can talk to me or you can hang up.\" \n\nI stayed silent.\n\n\"Where are you?\"\n\n\"I'm staying with friends.\"\n\n\"That boy? Noah?\"\n\nMy stomach twisted. Mom had told him what Sean had told her. \n\n\"I told you God would know if you sinned.\"\n\n\"I called because I wanted to tell you I don't want to come home.\"\n\nHe snorted into the phone. \"Where did I go wrong? That's what I'd just love to know. Your brother ends up a faggot. You end up a whore. Did I not tell you what happens to sinners? Did my children really turn out to be such morons when all I did was try to teach them how to live eternally?\" \n\n\"I don't want to be like you.\"\n\n\"I'm disgusted. I'm disappointed and disgusted.\"\n\n\"Goodbye, Daddy.\"\n\n\"If you hang up this phone, you can never come back. Understand? You are gone. You are dead to me.\"\n\n\"That's okay. I forgive you, Daddy.\"\n\nI hung up the phone without listening to his response, pressing it to my chest as I stared unseeingly in front of me.\n\nMaybe it was the wine. Maybe it was because I needed that closure, like Jenny had said. There was an unexpected lack of emotion in me as I finished the last conversation I would ever have with my father. \n\nI should have been upset. He did call me a whore, after all.\n\nI should have wanted to cry, mourn, grieve the loss of my family. \n\nI should have been panicked, knowing that there was a dwindling amount of money in my chequing account, that all my possessions were gone aside from the few days' worth of clothes that were in my backpack. \n\nInstead, I was numb. \n\nThe men must have come back in from the yard just a few minutes after I'd gone to the bedroom. Jenny and Shannon must have had just enough time to explain where I was for me to end the call with my father and stare blankly for a minute or two, because Noah entered the room almost instantly.\n\n\"Tell me you didn't call,\" he said.\n\n\"I called.\" \n\n\"Fuck!\" He sat down next to me on the bed. \"You shouldn't... you shouldn't call people when you've been drinking.\"\n\n\"I'm not drunk.\" \n\nWe could both hear the flatness in my voice.\n\n\"You okay?\"\n\nI nodded.\n\n\"What happened?\"\n\nA giggle burst from my lips, surprising both of us. \n\n\"I've been disowned for being a whore.\" \n\nNoah stared at me as I laughed uncontrollably. I flopped back on the bed, still clutching the phone to my chest as tears leaked from the corners of my eyes, laughing until I couldn't breathe. \n\nWhen I finally began to calm down, Noah lay down beside me, resting on his side so he could look at me.\n\n\"Are you actually okay?\"\n\n\"Yes.\"\n\n\"I don't believe you.\"\n\nI turned my head towards him. \"Maybe tomorrow I won't be. Right now, I feel relieved.\" \n\n\"Maybe we should\u2014\"\n\nI cut him off with a kiss, hard and demanding. It caught Noah off-guard and he nearly fell backwards off the bed. He was wearing his jean jacket and I grabbed the front, pulling him back toward me to kiss him again.\n\nHe kissed me back for a moment, but when I moved to wind my fingers through his hair, he moved away.\n\n\"Wait, Lacey\u2014\"\n\n\"Please, Noah?\" \n\nI reached for him again, but he caught my arm and held it tightly. I tried to pull it back from him but he held me in place, preventing me from moving at all.\n\n\"No.\" \n\n\"Noah\u2014\"\n\n\"You've been drinking and you just had a pretty big thing happen. This is not\u2014\"\n\n\"I've been disowned for being a whore, so why not? I might as well do what I'm being disowned for.\" \n\n\"You're not a whore. Stop acting like this,\" he growled. \"Lacey, stop. I'm not fucking you like this.\" \n\nHis words made me recoil and I stopped struggling. Noah let go of my arm and moved off the bed.\n\n\"Robbie isn't coming home tonight. I'm going to sleep downstairs with Duncan. You... you should go to bed now, okay?\"\n\n\"Okay.\" \n\nWhen the door closed softly behind him, I finally started crying, and fell asleep with tears still streaming down my cheeks.\n\n**\n\n<center>Chapter Six</center>\n\nGoing to bed before everyone else meant I was awake before everyone else.\n\nIt was also Sunday, and years of church-going meant my biological alarm clock had conditioned me to wake up just past sunrise on Sundays. \n\nThere was a short, blissful moment just after opening my eyes that I was free from worry, ignorant to the events of the previous evening. When I remembered where I was, what my father had said, and why Noah wasn't beside me, it all came flooding back, along with the realization that my head was pounding.\n\nApparently, I had been at least a little drunk.\n\nI was nearly catatonic with embarrassment. My stomach was tense, tightened knots of humiliation nearly making me curl up in a ball. My eyes were painfully dry and my cheeks tight with withered tears. Words swirled maddeningly through my head, echoes of what had started as one of the best nights of my life and ended as the worst.\n\nI'm disappointed and disgusted. Whore. \n\nNoah's had a very different life than you.\n\nI'm not fucking you like this. Stop.\n\nThere didn't seem to be any tears left in my body, so I was stuck simply listening to the imagined reiterations of those voices as they worked together to break my heart.\n\nI fucked up.\n\nI was a fuck up.\n\nWas it possible to die from embarrassment? Part of me wanted to find out, to simply stay in that bed forever and never leave. If I did that, Noah would eventually come to the room and find me. I very likely wouldn't be dead, because he'd come to the room and find me in just a few hours. Then I would have to talk to him, own up to what I had done. \n\nOr maybe he wouldn't. Maybe Noah would never want to see me again, and Jenny would be the one to come to the room, explaining to me that he had left, and I would have to walk out in front of all the new friends I had met and shamefully leave the house.\n\nEither way, the thought of Jenny and Tom and Shannon staring at me as I walked out was too much to handle. I didn't want to see their pity, their judgement. \n\nIt was time to run away again.\n\nThe problem in trusting Noah to get us here is that I didn't really know where I was or how to get anywhere else. I knew where the bus stop was, but not what number would get me where I needed to go or even how often it came by. I was running low on money, but taking a cab was my best bet. However, I didn't want to risk making a phone call to order one.\n\nIn my small town, Uber wasn't a thing, but Toronto was a city. I had never used it before, but how hard could it be?\n\nAs it turned out, not that hard. Even I was able to figure out how to work the app, and as the previous day's events had shown, I was an idiot. The most difficult part was deciding where, exactly, I wanted the Uber to take me. \n\nI could go to the airport. I could call Sean, tell him I wanted the plane ticket. He'd want to know why, and I would have to fess up to what happened. The thought of telling my brother about my idiotic actions made my stomach tense up all over again.\n\nThere was only one other place I knew in Toronto, one place where I knew I could wait for the next 24 hours. I could try to get tickets for the morning train instead of the midday one and maybe be in Montreal by the afternoon, where I could forget all about the previous day. I could brush off Noah's absence by saying he decided to stay at Tom and Jenny's and never have to speak of him again.\n\nA bottle of water sat beside the bed. I didn't remember bringing it to the room, but I used it to swallow an Advil, then splashed some on my face to wipe off the dried tears. I didn't stop to brush my teeth or use the bathroom, not wanting to risk waking anyone up. I packed up my backpack, ordered the Uber to pick me up at the end of the street, and waited until it said the driver was about three minutes away before dashing quietly from the room and out the front door.\n\n**\n\nIt was pouring rain. \n\nBetween the quick jaunt to the end of the road to catch my Uber and the frantic scurrying to get from the Uber to the train station, I was soaked. The hoodie I had put on was the only one I had, and I peeled it off once I got inside, draping it on the chair next to me while I shivered and tried to wring out my hair.\n\nThe station was comparatively quiet when I first arrived, but grew busier as the hours went on. Eventually, people stopped arriving wearing raincoats and shaking water from their umbrellas, and I looked out to see the sun gleaming brightly. By that point, my clothes had mostly dried, but I was still bone-chillingly cold. I thought about going out in the sun just to warm up, but the numb sadness that had defined the entire morning kept me from moving. I couldn't even bring myself to pray, let alone leave the bench. Instead, I turned back forward and closed my eyes, clutching my damp backpack to my chest.\n\nEven with my eyes closed, I knew it was him before he sat down.\n\n\"How did you find me?\" I asked.\n\n\"You know like, two places in Toronto,\" replied Noah.\n\nHis voice was serious, but I could hear a quiet thread of laughter as he spoke. The sound of it pricked painfully at my heart.\n\n\"Sure, laugh at me because I'm a moron.\"\n\n\"Not laughing at you. And you're not a moron.\"\n\nI sighed, opening my eyes. \"Just get the lecture over with.\" \n\n\"What lecture?\"\n\n\"'I was worried, Lacey,'\" I said, trying to mimic his serious voice. \"You're too dumb to run around Toronto by yourself. Now let's talk about your terrible decisions last night so you can feel even shittier about all of it'.\"\n\n\"I don't sound like that.\"\n\nI tried not to laugh, but the trace of a smile cracked through.\n\nHe hesitantly touched my arm. \"You're freezing.\"\n\n\"Doesn't matter.\" \n\nBefore I knew what was happening, he was shrugging off his jacket. \"Here.\" \n\n\"I don't need\u2014\"\n\nHe didn't listen, just wrapped the large jacket over my shoulders. It hung off of me loosely, delightfully warm from his body heat. I tried not to let the light scent of him relax me as the denim enveloped me, but it was very, very difficult. \n\nAfter a few long moments of silence, Noah spoke again.\n\n\"Jenny and Shannon wanted to apologize for pressing you to call your parents.\"\n\n\"Not their fault.\"\n\n\"No, but they feel bad. They didn't know the situation.\"\n\n\"I made my own choice.\"\n\n\"Still. I said I'd pass it on.\"\n\n\"Tell them it's okay.\" \n\n\"I wanted to apologize for\u2014\"\n\n\"Don't.\" My response was harsh, snapped in a way I didn't know was possible for me as my stomach curled and tensed.\n\nHe fell silent again. I closed my eyes briefly, my face contorting as the wounds from my embarrassment reopened and flooded me with shame. \n\n\"It's my fault, I'm sorry.\" The words were quiet, gravelly, unlike my voice. \"I feel so stupid.\" \n\n\"Walking away from you wasn't what I should've done,\" Noah said. \"Should've been there for you.\" \n\n\"That's not your responsibility.\" \n\n\"Promised to keep you safe.\"\n\n\"What, you think I'm a danger to myself?\" \n\n\"You hurting?\"\n\nThe words made me pause and I finally glanced towards him. He was looking back at me, his face open and unguarded, poignantly sincere. \n\nI couldn't think of anything to say but the truth.\n\n\"Yes.\"\n\n\"Then I'm sorry.\" \n\n\"Are you?\"\n\n\"Am I what?\"\n\n\"Hurting.\"\n\nHe seemed surprised by the question, and the fact that it surprised him made me feel worse. Noah had been there for me through the strangest, most complicated, most exhilarating and painful and freeing week of my life. The fact that it had been so one-sided was a failure on my part.\n\n\"No,\" he finally answered. \"I understand.\"\n\nI didn't have enough grace left in me to accept that without crying. ",
        "He pulled me towards him, letting my tears stain the plaid green shirt he was wearing. His arms held me tightly, his face and lips pressed against my hair as he let me heal in his arms. \n\nWhen I had regained control of myself, he let me go, gently using the sleeve of his shirt to wipe my cheeks. \n\n\"I'm sorry. Please forgive me,\" I said quietly.\n\n\"Will always forgive you.\" He brushed his fingers lightly through my hair. \"You wanna sit in this train station all day?\"\n\n\"Not really.\"\n\n\"Good, me neither. Come with me.\"\n\n\"Where?\"\n\n\"You trust me?\"\n\n\"Should I?\"\n\nHe laughed. \"Good answer. Come with me anyway.\" \n\n**\n\nI stopped in my tracks when Noah led me to a car in the parking lot.\n\n\"It's Tom's,\" he said when he saw I wasn't moving. \"Swear to God, he lent it to me.\"\n\n\"You said you hate driving in Toronto.\"\n\n\"I do. We aren't going far though.\"\n\nHe wasn't joking about that. Noah pulled into the parking lot of our destination just a few minutes later, though he managed to curse at two other cars during the short drive. Once we were parked, he reached into the backseat and grabbed a bag I hadn't noticed when I got into the car.\n\n\"C'mon. Let's go for a walk.\" \n\nThe juxtaposition of the tall, gleaming buildings in Toronto with the wide, blue expanse of water that bordered the park he led me into was jarring and surreal. Ferries glided back and forth from an island across the water, and the air smelled of freshness and rain and grass as sunlight glinted off drops still drying on the paved sidewalks. \n\nThe park was busy, though I was sure that was to be expected for a Sunday in the city when the rain stopped. I followed Noah through the park to a wooden boardwalk, then walked along it until we reached a relatively isolated spot. Every bench and picnic table seemed to be claimed, so Noah withdrew a blanket from the bag and spread it on the grass, then sat down. \n\nMy heart fluttered hopefully, but it was still tender from the past day's problems.\n\n\"What is this?\" I asked, still standing a few feet away from the blanket. \n\nNoah raised an eyebrow at me. \"Believe it's called a picnic.\" \n\n\"Why?\"\n\n\"Guess that's just what people call it when they eat outside.\" \n\nI tried not to laugh. \"No, I mean, why are you doing this?\"\n\nNoah looked up, his dark eyes studying me. He looked vulnerable, nervousness written across his tensed forehead. \n\n\"Wanted to do something special for you.\"\n\nThe hopeful flutter in my chest grew more insistent. Maybe it really was all going to be all right. I bit my lip as I smiled, not knowing what to say.\n\nNoah's nerves seemed to dissipate as I smiled. \n\n\"You gonna leave me sitting here like a fool? Come sit. Dunno what Jenny packed for us but it'll be good.\" \n\nMy stomach rumbled at the mention of food. I hadn't realized how hungry I was, but since my stomach had stopped clenching in embarrassment, I guessed it was starting to notice that I had skipped breakfast.\n\n\"Is this a date?\" I asked after we scarfed down the lunch Jenny had prepared. \n\n\"Well, uh... yeah.\" \n\nI picked at a napkin thoughtfully. Did having coffee with Roger at the Timmy's count as a date? It's not like he had put much thought into it, aside from texting me to ask if I wanted to meet for coffee. He hadn't made me feel like Noah did, making my heart flutter and unable to keep from smiling.\n\nI decided coffee with Roger didn't count as a date. Noah knew he had my first kiss, my first orgasm, and my first time away from home already. What was one more?\n\n\"That makes this my first date,\" I said softly. \n\n\"Didn't know that. Hope it's okay for a first date.\" Noah's voice was steady, but I could sense the trepidation behind it. \n\n\"It couldn't be more perfect. Thank you.\"\n\nI touched his hand softly and he twisted his wrist, catching my fingers through his. He brought my hand to his mouth and kissed my knuckles lightly. \n\nWe spent most of the afternoon in the park talking about little things, easy topics that didn't delve too strongly into the deep, dark secrets we already knew about each other. Appropriate topics for a first date, ones that helped us learn more about each other, things we had skipped over in the intensity and rapidity of our strange relationship. \n\nHis favourite colour was green. He had a dog named Rex growing up. He had once worked at an amusement park, but quit after a drunk girl had puked on his shoes. When he was a kid, he wanted to be a cowboy, and then a firefighter, and then an electrician. They had offered some trades programs while he was in prison, but he couldn't get into the electrician one so he did carpentry instead, which helped him meet Tom after he got out. \n\nWe sat on that blanket for hours, watching the ferries sail back and forth, watching people enjoy their day, and petting the occasional dog that came running up to us for pats. When we grew tired of sitting on the ground, Noah packed up the blanket and we walked along the boardwalk, strolling unhurriedly along the water in the late afternoon sun.\n\nWhen we reached the furthest end of the park, we stopped, looking out at the water. Noah leaned one elbow on the wooden rail, his body turned towards me.\n\n\"We didn't talk about what I said we'd talk about.\"\n\nThe tension in my body returned with a vengeance. I tore my eyes away from him, staring hard at the water beneath us. It lapped against the rocks below tumultuously. \n\n\"You change your mind?\"\n\n\"N-No, but\u2014\"\n\n\"If you have, it's okay.\"\n\nI shook my head.\n\n\"No, I still, um, want that.\" I could feel the residual embarrassment of my actions beginning to twist in my stomach. \"I just thought maybe you wouldn't after, you know. After last night.\" \n\n\"Doesn't do much good for me to forgive you if you won't forgive yourself,\" he said. \"Dunno if that's in the Bible or anything, but seems like you're punishing yourself over this more than you need to, Miss Lacey.\" \n\nIt was something I hadn't considered, and something that struck a chord in my heart. As I thought over his words, Noah brought his hand to my chin and gently tilted my face up to look at him.\n\n\"Need you to tell me, point blank, that this is what you want. Need to hear it. Not gonna be able to live with myself if I do something, then find out you didn't want this after all.\" \n\n\"I do,\" I whispered. \"I want this. I want you, Noah.\" \n\nHe kissed me then, his hand cradling my cheek as he ducked his head to meet mine. I kissed him back, feeling like my heart was flying, like my feet were lifting off the ground. We stayed that way for a moment, then a few more, and didn't part until a gaggle of teenagers hollered and cat-called from the other side of the boardwalk. \n\nAs we were walking back through the park, Noah's hand holding mine tightly, his phone rang.\n\n\"Just a sec.\"\n\nHe let go of me and took a few steps away, talking quietly so I couldn't hear him. I took the opportunity to look out at the water, trying to avoid eavesdropping on whatever it was Noah was doing.\n\nHe strolled back up just as the call was finishing.\n\n\"Thanks. I owe you,\" he said into the phone, and hung up. \n\n\"Everything okay?\" \n\nHis grin was surprisingly gleeful, a warm and genuine smile that lit up his entire face.\n\n\"Everything's great. C'mon, I'm getting hungry again. Let's get dinner.\"\n\n**\n\nI thought Noah had meant we would be going back to Tom and Jenny's for dinner, but I was wrong.\n\nHe parked the car in a lot just off Yonge Street and told me to bring my backpack with me, just in case. We started walking to a nearby cafe. Along the way, I pointed at a building with delight.\n\n\"That's the Hockey Hall of Fame!\"\n\nNoah checked the time on his phone. \"Closes pretty soon, but we can check it out if you want.\"\n\n\"No, I just thought it was cool to see the building.\"\n\nNoah grinned. \"C'mon. Dinner can wait.\"\n\n\"Really, it's fine. No point in paying admission if we'll just have to leave.\"\n\n\"Best time to go, as long as you don't mind we won't see the whole thing.\" \n\nI let him talk me into it. I wasn't the biggest hockey fan in the world, but we were Canadian. Canadians are born loving hockey. I felt less bad about it when Noah was able to get tickets for half the price considering the time. He refused to let me at least buy my own.\n\n\"Dinner is on me, then.\"\n\n\"Not a chance.\"\n\n\"Noah...\"\n\nHe shook his head. \"It's covered. I got this.\" \n\nThe building itself was a shrine to Canadian legend. The original Stanley Cup was regarded as the holiest of relics, and worshipers of all ages paid their respects as they walked by in hushed tones. In the Great Hall, I was awed by the portraits and the stories that wound through the walls. \n\nMy eyes were wide, my voice hushed as I excitedly pointed out an original game-worn jersey of Mario Lemieux's. \n\n\"He was my brother's favourite player,\" I said quietly. \"Daddy nearly cried when he raised a Penguins fan, but Sean couldn't be swayed.\" \n\nNoah listened patiently and tried to share my excitement, but at the end of the day, the Hall of Fame is a museum. Surrounded by a cathedral of hockey legacies and treasures beyond my wildest dreams, the thing that mattered most was that Noah was there to share it with me.\n\nI estimated we got to see about a third of the museum before it closed, which was fine by me. I could still say I had been to the Hall of Fame, and I had a picture with the original Stanley Cup to prove it. I was certain that Sean would be ravenously jealous, although after a moment, realized he'd probably been there already. After leaving, we continued on to our original destination, which was more of a cozy restaurant than a cafe, just a few blocks away from the Hall of Fame. \n\nIt wasn't a fancy place, and the prices weren't completely insane, but it was more expensive than anything we had eaten on the trip. \n\n\"I'm still pretty full from lunch,\" I said, pretending to muse over the menu. \"Maybe I'll just have some soup.\"\n\n\"Order a full meal or I'll order it for you,\" Noah said from behind his menu.\n\nI lowered mine to glare at him, only to see his eyes sparkling at me mischievously from above the menu. \n\n\"I don't\u2014\"\n\n\"Lacey, it's covered.\" He lowered the menu and looked serious. \"Don't worry about how.\"\n\nI didn't raise my eyebrows or even say anything, but Noah grimaced. \n\n\"I mean, it's covered, like with money. That was obtained legally.\"\n\n\"I didn't\u2014\"\n\n\"Yeah, you did, but that's okay.\" \n\n\"Noah, I absolutely didn't think that.\" \n\nI didn't know if he believed me, but it was the truth. In any case, I ordered a full meal, though I turned down the glass of wine the waiter suggested with it. \n\nInstead of teasing me, Noah waited patiently as I bowed my head to silently say grace. When I looked back up, he shifted.\n\n\"Never really said grace before,\" he said. \"Don't know what to do.\"\n\n\"You just thank God for the food,\" I said.\n\n\"That's it?\" \n\nI nodded and he looked down at his plate. Shrugging, he closed his eyes. \n\n\"Thanks for the food, God. Amen.\"\n\nIt was perfectly sweet, and I couldn't help smiling.\n\nThe rest of dinner was as easy and comfortable as the afternoon had been. We lingered at the table longer than we were probably welcome, but neither of us seemed to care. Once the waiter had stopped coming by to fill our water glasses, Noah paid the bill and we left.\n\nThe sun had gone down while we ate, but the street was as bright as the middle of the day. It wasn't nearly as busy, however, and I was starting to get a bit nervous when Noah pointed at a building across the street.\n\n\"Mind if we stop in there? That's where Tanya works.\"\n\nThe building in question was a hotel that looked out of place compared to the skyscrapers around it. Quaint might have been one word. Historic would be another. I wondered if Noah had booked a room there and was planning on surprising me, but wrote it off as soon as we entered the building. We looked as out of place as we had in the sleeper carriage on the train, and I hoped Noah knew me well enough to know that I didn't need something like this.\n\nI was happy wherever he was. \n\nTanya was working the front desk and waved brightly as soon as she spotted Noah. I followed him up to the desk, though I was taking in the sleek lobby around me. \n\n\"Nice to see you again, Lacey,\" she said kindly.\n\n\"Thank you, you too.\" \n\n\"Just wanted to pop in and say hi,\" said Noah. \n\n\"Good timing. You have some handyman experience, right?\" \n\nNoah glanced at me. \"I'm kind of on a date right now.\" \n\nTanya turned to me. \"Any chance I can borrow Noah for just five minutes? Our usual night guy is on his break and there's just the smallest little problem in one of the rooms. Won't take any time at all.\" \n\n\"Yeah, no problem,\" I said.\n\nNoah smiled tightly and I hoped I hadn't said something wrong.\n\n\"Thank you so much! Come on, I'll show you which room.\" Tanya started towards the elevators. \"You too, Lacey, you can come with us.\" \n\n\"Oh, okay.\" \n\nNoah and I trailed behind Tanya as she led us to a room on the fourth floor. Once we got there, she handed Noah a keycard. \n\n\"You'll see what I mean. Just bring the key back when you're done.\" \n\nWith that, she was practically sprinting back down the hallway to the elevator. I watched her, bewildered, as she caught the elevator just before it closed. She waved brightly again as the doors shut behind her.\n\n\"Well, that was weird,\" I said. \n\nNoah didn't say anything, just put the keycard in the door and pushed it open. \n\n\"Should I wait out here?\" I asked.\n\nHe laughed and shook his head, holding the door open for me.\n\n\"Nah. Come in.\" \n\nThe room was small and dimly lit, a soft golden glow emitting from a lamp in the corner. There were flickering candles lining a wooden dresser and roses in vases on each of the nightstands. Petals were strewn lightly across the hardwood floor and bed, not so many as to be a nuisance, but enough to set the cozy, romantic scene that lay before me.\n\nThe door closed softly behind me.\n\n\"Shit, she really went all out,\" muttered Noah.\n\nI couldn't speak as I stared at the room. It was like something from a daydream, the kind of fairytale setting that only existed in the hormone-addled fantasies of giggling girls at sleepovers. I should have been swooning, flattered, ready to be swept off my feet and onto the bed. \n\nYet the only thing I could think of was Noah's face when I insisted that I buy him breakfast; the way he'd looked so ashamed when we got off the bus near Tom and Jenny's house; the fact that he'd spent money on train tickets to places he didn't need to go, just to make sure I was safe. \n\nI didn't deserve Noah. I didn't deserve what he was sacrificing for me.\n\n\"Lacey?\"\n\nI didn't know if he had said something prior to that, or if he had noticed the stricken expression on my face.\n\n\"Hmm?\"\n\nHis dark eyes were clouded with worry. \"If you changed your mind, that's okay. Not a\u2014\"\n\n\"This is too much.\" My voice was barely above a whisper.\n\n\"It's okay, don't feel like you have to\u2014\"\n\n\"No, I mean this is too much. I don't... you didn't have to. This is just, it's... I'm not ungrateful, but how...\"\n\n\"You don't need to worry about that.\"\n\n\"Why are you doing this for me?\"\n\n\"You're special.\" He shrugged, looking down at the ground. \"You deserve a special first time.\" \n\n\"B-But it's\u2014\"\n\n\"Will it make you feel better if I tell you how?\"\n\nI fell silent, but nodded. Noah took my hand.\n\n\"I asked Tom this morning if I could borrow his car to look for you. Told him what happened between us.\"\n\nI cringed and Noah shook his head.\n\n\"He's a good man, Lacey. Was more worried about you than anything. Told him the whole... well, most of the story. 'Bout wanting to... to make it special for you. Jenny jumped in, wanted to give me some money to take you out. I said no. Don't want charity.\"\n\nHe laughed suddenly, shaking his head. \"Fuckin' Tom must've been scheming all along and jumped on the opportunity, told me he's got a job coming up in the fall that he could use a hand with. So I gotta come back in September for a couple weeks to earn back the salary advance he just gave me. Asshole'll probably try to pay me again then, too.\"\n\n\"But this is still... I would have been happy with you anywhere.\" \n\n\"Clean sheets or not, I wasn't gonna be doing this on Duncan's bed,\" he said firmly. \"Shannon mentioned last night that Tanya might be able to swing a deal on a room\u2014\"\n\n\"Wait, last night?\"\n\n\"Ah, yeah, I kinda asked to see if anyone had somewhere private we could... I didn't explain everything, just, you know... Anyway, this morning Tanya said she'd see if there were any spare rooms tonight. She's the night manager, can pull this kind of shit. Called earlier and said she had a room, told me to consider it an early Christmas gift and she'd uh, you know... romance it up a little.\" \n\nHe looked around the room again. \"You said you'd be happy with me anywhere, and I know that's true because you can't tell a fuckin' lie to save your life.\" Noah took my hand in his. \"I wanted this for you. You deserve more than I can do, but I needed it to be at least a little better than Duncan's nasty-ass mattress.\" \n\nA choked laugh surprised me.\n\n\"I haven't... I need to shower.\" \n\nNoah smiled and touched my cheek lightly with his other hand.\n\n\"There's no rush. Go, shower. Relax. You're in control, Lacey. You say what happens and when.\" \n\n**"
    ],
    "authorname": "MsCherylTerra",
    "tags": [
        "bed sharing",
        "blowjob",
        "canada",
        "female virgin",
        "fingering",
        "first kiss",
        "first love",
        "first orgasm",
        "highway song story",
        "train sex"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/runaway-pt-02"
}