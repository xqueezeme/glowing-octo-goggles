{
    "title": "Cheyenne's Revenge Ch. 05",
    "pages": [
        "Chapter 5 (Nicholas and Stacy)\n\n\n\nIt had been over a month since I'd first found Cheyenne in that hallway. You might say that things had progressed. They had definitely changed. For instance; I hate social functions. The girls loved them. What did that mean? Well ...\n\nThe party was going great. I didn't know anybody, but then, I work with a grand total of one other person, and he doesn't show up to parties held in apartments that cost less than one million dollars. I was nice enough to invite him and he was nice enough to have had previous engagement. That being said, I was doing okay. I wasn't drunk, I wasn't freaking out when people spilled drinks, or dropped and stomped food into the carpeting, and I was trying to be nice to people who were college educated, hot, and up-and-comers. I was the oldest guy in the room by a good five years.\n\nTwo women, Sierra's friends/co-workers, came up to me and asked me what I did. They had heard I was in security.\n\n\"Is that like being a security guard,\" giggled one. In her heels, she was taller than me, which made staring at her firm B-cup breasts difficult, considering the plunging neckline and spaghetti mesh top.\n\n\"No. I help people define their security concerns and provide and implement solutions,\" I smiled. Technically, that wasn't a lie. It sounded a lot better than leg-breaker.\n\n\"Does it pay well?\" her companion asked. She was the soberer one of the two, with raven-dark hair, thick and wavy, with an exceptional halter top and no bra. With the way her nipples were poking out at the world, I couldn't help but wonder what they felt like on the tongue.\n\n\"How much do you make?\" I countered.\n\n\"$88 K a year, plus perks,\" she smiled smugly.\n\n\"I pulled down $270K last year,\" I replied dryly. The girls jaw dropped, \"plus all my health and dental is free of charge. I don't have a nifty company car though.\"\n\n\"But ... but you live here?\" she wondered. I chuckled.\n\n\"Lady, ten more years of this and I'm retiring to an undisclosed foreign country where I'm going to own a nice spread and have some locals do all the work for me,\" I confided.\n\n\"What about you and Sierra?\" the first one asked.\n\n\"Do you think she can telecommute? If she can, she can come along. If not, I'll send the plane to pick her up on major holidays. I'm all for women in the workplace.\"\n\n\"Wait,\" the second one questioned, \"which one are you with?\"\n\nI didn't answer right away. I'm not sure how much I should be telling these women about our bedroom antics. She has to be back at work with these two Monday morning.\n\n\"He's with both of us,\" Sierra purred, coming up and putting an arm around each woman. \"He may not look like much, but he's Hell in the bedroom.\" I tried not to blush. I found it somewhat pathetic that I've gone from total loser in these women's eyes to jealous catch all because I've got a bank account, a dick, and the skill to use it.\n\n\"What's it like?\" whispered the first one to me as Sierra went off to mingle elsewhere, \"What is it like with the three of you?\"\n\n\"Usually it is the two of them, but they allow me front row seats and popcorn,\" I quipped. The first one was uncertain, but the second got the reference and snickered.\n\n\"I never knew she was that way,\" the second commented which I could tell she found both insightful and exciting.\n\n\"Sierra likes choices,\" I responded. \"She's very demanding, but she's worth every minute.\"\n\n\"Is she bossy in bed too,\" giggled the first one again. I made a note to make sure this one didn't leave here with car keys.\n\n\"I'll leave the blow by blow to her, but I think it is safe to say she's intelligent and creative.\" I looked into the second one's eyes. I made another note \u2013 this one for Sierra. This one was going to make a pass at her at work. \"What's your name?\" I asked the person of interest.\n\n\"Gail Roasch,\" she smiled. She brushes a non-existent crumb off my chest. If I was a woman, I could slap her face for feeling me up. \"Do you work out much?\"\n\n\"Daily; unless work intervenes. In my line of work, it pays to be in shape,\" I told her. \n\n\"Have you ever had to shoot someone?\" slurs the first girl. Check my earlier statement.\n\n\"Hey ...\"\n\n\"Lindsay,\" the second one provides.\n\n\"Lindsay, I'm taking your purse now,\" which I do, \"and I am taking your car keys because you are too drunk to drive.\" I put down my drink, and work her car key off her chain while Lindsay give me this childish pout, that probably was more suitable for wrapping guys around her finger in college. I pocket the key. \n\n\"That's not nice,\" Lindsay says.\n\n\"Hate me and stay alive,\" I reply. I move to leave when Gail grabs me by my arm. I stop and she runs her hand over me. She tests my bicep and works her way to my nipple. In the workplace, this would be a guaranteed sexual harassment suit. \n\n\"Who are you to Sierra?\" I inquire.\n\n\"I'm her manager,\" she grins. Sierra has busted her ass to be supervisor for her department and this bitch is standing over her. Sometimes I think all life's problems should be solved with hand grenades. I step in and move my body so that we are suddenly very close and shielded. I slip a hand up and firmly grab one of her breasts, catching that succulent nipple between the second digits of two fingers. I have very strong hands. I squeeze them together painfully. She bites her lower lip.\n\n\"My pleasure to meet you,\" I say evenly then I let go and break our near embrace. I don't think anyone caught that, but Gail is flushed.\n\n\"Do you like Sierra?\" she smiles wickedly.\n\n\"Yes, I value her friendship very much,\" I responded.\n\n\"I will keep that in mind,\" she grins. 'Oh fuck,' I think.\n\nI moved over to where Cheyenne is talking to one of her corporate cronies. He wanted to get into her pants and she was teasing him. She can still be a bitch. I'm not being egotistical concerning our relationship. Cheyenne has something that other people want, and she flaunts it. She can't help herself. In a way, it was his own damn fault because if you know a woman is seeing both man and a woman at the same time, what the hell can he be thinking? They will let you join in? Maybe in a porno, but from what Cheyenne told me he's got a small dick, is shorter and uglier than me, and has a habit of drooling while ogling her rack \u2013 not orgy material.\n\n\"Hey Babe,\" I said as I came up. He looks at me. He puts a hand on the small of her back possessively. It isn't like I met him at the door when he rang the bell and welcomed him into my place. Wait, I did.\n\n\"How are things going?\" she beams at me. Yes, she's being a bitch. She even moves slightly so that his hand drops a tad lower.\n\n\"I think I found the party lesbian,\" I comment dryly, \"and I took Lindsay's car keys away from her. She was giggling too much when no one was saying anything funny.\" Cheyenne looks down at my hand with the key I'm handing her in it.\n\n\"Taylor,\" Cheyenne sounds worried, \"did you hurt your hand.\" I would know it if I had hurt my hand, so I was curious as to where this was going.\n\n\"It is not much,\" I lied. Cheyenne picked up my hand and kissed my central knuckle.\n\n\"Oh baby,\" she crooned, \"does it hurt?\"\n\n\"You should see the other guy,\" I replied. It is an old line, but I like it. Cheyenne turned to her co-worker.\n\n\"Taylor beats people up for a living,\" she grins. I shrug. He takes his arm away from Cheyenne's waist. \"Only bad people, though; people that hurt other people.\" She gives me a winning smile. I lean in and kiss her on the ear opposite Mr. Arm (I think his real name is Gorman).\n\n\"Bitch,\" I whisper playfully. She responds by rubbing her hand up and down my crotch, something that Mr. Arm can't miss. \"Bitch,\" I repeat before pulling away. \n\n\"Your bitch,\" she whispers back. She turns and picks up the conversation with Mr. Arm as if I had never interrupted.\n\nI was looking around for Sierra when someone comes in on my side. I pivoted to face an auburn haired woman, around five foot four and a hundred and twenty pounds. She has a really nice face, somewhat childlike, but attractive. She's a B going to a C, if that matters, but I doubt it does for me. It's Nicholas' new girlfriend, the one he brought to parade before Cheyenne. Cheyenne, being a bitch, hadn't noticed. \n\n\"I just wanted you to know I think you treated Nick horribly,\" she laid into me. I don't know what he's said about me, so I decide to ask, but not here. I take her by her arm tightly.\n\n\"Hey!\" she squawks. I take her to the kitchen firmly but kindly.\n\n\"Stacy, is it?\" I inquired. She nodded. \"I'm Taylor, and it's nice to meet you. Now why don't you tell me what Nick says I did to him.\"\n\n\"You know,\" she hissed, rubbing her arm. It was an exaggerated gesture. I know about hurting people and how far to push things.\n\n\"No I don't,\" I emphasized with a shake of the head. \"I know what I think happened, but I don't know how Nick saw it. Since he hasn't bothered to tell me, why don't you?\"\n\n\"You stole Cheyenne from him,\" she growled. \"She cheated with you, he found out, and he threw her to the curb.\" All I could think was that Nicholas had a definitely different view of the truth than I did. If he, or she, told Cheyenne that, she'd clock their asses. She's a bitch after all.\n\n\"Stacy, I think we saw things differently. Yes, she cheated on him, but it wasn't with me. He threw her out at a very delicate time and I took her in because I don't like the idea of a woman being ... in that condition.\"\n\n\"But she's living with you now and I saw how she touched you,\" she said hotly.\n\n\"Stacy, you are an attractive woman and I know you know what effect you have on men, so you can understand what I had to deal with when I agreed to let Cheyenne stay with me while she got back on her feet,\" I explained. Every woman likes to be called attractive, even if it is by a man she despises.\n\n\"So, she seduced you too?\" she said, suddenly uncertain about her wrath.\n\n\"Stacy, if you ended up on my sofa, and you were feeling lonely and abandoned, would you consider it 'seduction' if you found some comfort with me?\"\n\n\"I ...you ...\"\n\n\"I'm not what you expected?\" I finished for her.\n\n\"No. She's still a manipulative bitch, but ... I think maybe Nicholas may have misunderstood you,\" she managed to say. I counted that as an opening victory.\n\n\"You do know that all this began when someone seduced Cheyenne, right?\" I continued. Stacy shook her head. \"She then pursued that relationship, which was totally wrong, but the other man wouldn't let up on her either. She didn't go out trying to gut Nick \u2013 she did it \u2013 but it was because she wasn't thinking clearly.\"\n\n\"She should have stopped it,\" Stacy insisted.\n\n\"Stopped what?\" Sierra asked as she stepped into the room. \n\n'Wow,' I thought, 'I think she's jealous ... of Stacy, with me? Shit, this has never happened to me before. \"We were talking about Nicholas,\" I said out loud.\n\n\"What about?\" Sierra asked suspiciously. At this point my 'Guy' part of my brain was telling me to get the hell out of the kitchen. The 'Be a Man' part convinced me to make a graceful exit.\n\n\"Nicholas \u2013 Nick \u2013 has explained his version of the events to Stacy here. I was trying to explain how things aren't so cut and dried,\" I responded.\n\n\"Did you tell her about Joe, and how Nick left Cheyenne?\" Sierra demanded.\n\n\"Joe?\" asked Stacy.\n\n\"My psycho ex-boyfriend who blackmailed Cheyenne, gang-raped her with some of his buddies \u2013 AND Nick \u2013 and then tossed her naked out of our apartment,\" growled Sierra with more venom than I had suspected she'd felt. I chalked some of that to the guilt she was feeling now that she had fallen for Cheyenne. Stacy took a step back, into the frig and had nowhere to go. Sierra, though smaller by a few inches, poked Stacy right between her boobs.\n\n\"But, that's not what Nick says happened?\" Stacy fired back.\n\n\"Fine, how about we ask him?\" snapped Sierra.\n\n\"How about we have this conversation after the party is over?\" I suggested. Sierra wheeled on me, clearly angry. She took a deep breath and nodded.\n\n\"Thanks Taylor. I wouldn't want to put Cheyenne on the spot,\" Sierra said before reaching up and kissing me on the cheek. She looked up at me, her grin widening, then put a hand behind my head and pulled me into a deep kiss. She broke it and left the kitchen, putting an extra bit of saunter in her step for my benefit. It was that great ass of hers.\n\n\"Wait?\" wondered Stacy, \"I thought you were with Cheyenne, not this ...?\"\n\n\"Her name is Sierra, and she was in the room when Nick and five other guys took turns with Cheyenne. She let it happen. Hell, she helped it happen. Sierra is in this for Cheyenne, not me. I'm what you call a fringe benefit.\"\n\n\"You guys are lying,\" Stacy accuses me. I can tell that is what she wants to believe. She probably has known Nicholas for a long time to be defending him so.\n\n\"Nicholas was enraged when he was in that room, Stacy. I'm not excusing what he did, only telling you where he was coming from. It is probably something he is very confused about,\" I told her. Remember, it pays to be nice. If I attacked Nicholas, she would withdraw into defending him. I would rather give her the information and let her decide what she wants to do.\n\n\"This couldn't ... things didn't happen that way,\" she insisted. I kept looking at her with a steady gaze. Patience is a virtue as is knowing when you've made your point and it is time to quit. What got her was that she didn't want to believe what we are saying, but she wanted to believe what her senses were telling her \u2013 which is that we were telling her the truth. About now she was regretting confronting me. For a simple guy, I'd made her life very complicated. Stacy moved around and walked out of the kitchen. \n\nI saw her making her way to Nicholas. He put an arm around her and kissed her on the cheek, but his concentration was on the two people he was talking with. Stacy remained indecisive, but as I left the kitchen, I could see her eyeing me warily. I was thankfully distracted by Gail asking me to help get Lindsay a cab, which I was more than happy to do. I made sure to tip the guy extra to ensure he got her inside her flat. I would drive her myself if I had faith in everything working out well in my place. Gail was very chatty on the way back to my apartment and I got the picture that she wanted me to paint a picture of Sierra's bedroom antics. I told her I was really gay, to which she laughed, winked and told me that would be a pity. I then couldn't figure out if this woman was a lesbian, or just sexually confused.\n\nBack at the apartment, Sierra was sending the last of the guests home. It was now Nicholas, Stacy, Gail, Cheyenne, Sierra and I. You might say things were awkward.\n\n\"We should get going,\" Nicholas said, taking Stacy by the arm. It is more of a directional thing, and not something forceful. Gail should definitely have gone, but she decided not to. What a bitch.\n\n\"I would like to talk with you, Nick,\" Cheyenne said demurely. Nicholas gave a start.\n\n\"I don't see about what,\" he countered.\n\n\"Please,\" she begged nicely.\n\n\"Fine,\" Nicholas relented. He stalked off toward the second bedroom. Cheyenne followed and partially shut the door behind her. I took the moment to turn on Gail.\n\n\"It is time for you to go,\" I commanded. I didn't ask, I told her to go. She looked at me somewhat startled. \"Let me show you the door.\" I put on my best steely gaze and Gail stepped back.\n\n\"Yes, it is time I got home. It was a great party Sierra. See you at work Monday,\" Gail said. Sierra nodded absently, clearly focused on the second bedroom and the action within. I took Gail's arm and led her to the door.\n\n\"Thank you for coming,\" I told her. She looked at me, testing my will. I don't play those kinds of games where my ladies are concerned. I was willing to commit bodily injury on Gail to get her to leave and something in her survival instinct told her that. She licked her lips and started breathing deeply. All I could think is to curse 'damn, the bitch is turned on by the rough stuff'. That was a problem I would deal with later.\n\nI heard a slap and Cheyenne's yelp. I grabbed Sierra around the waist before the impact of what happened registered with her. Nicholas came storming out of the room, Cheyenne with a burning cheek right behind him.\n\n\"Nick, I'm sorry, but ...\" she started to say. Nicholas turned on her and hauled back to slap her again. Sierra surged against me, trying to get free. Stacy gasped. I wasn't worried. If he hit her again, he would leave this place on a stretcher.\n\n\"You got what you deserved, you bitch,\" he howled. \"I wish they had kept you all night!\"\n\n\"Let me go,\" seethed Sierra. Her fingernails bit into my arm through my shirt as she tried to pry my arm away from her. Stacy gasped yet again. Nicholas pulled his hand back even farther and I saw a blow in the offing.\n\n\"Nicholas,\" I said in a cold, calm, even tone, \"we've had this discussion before. Say what you like, but if you hit her again, I'm going to put you in a world of pain.\" Sierra kept struggling.\n\nNicholas turned on me, his eyes red-rimmed and slightly bleary from too much alcohol. He couldn't decide whether to come over and hit me, or run away from me. He opted for bravado.\n\n\"Stacy, we are leaving,\" he barked. Stacy looked conflicted and hesitated. \"Come on!\" shouted Nicholas.\n\n\"Did you really leave her there with those men?\" Stacy said with a small voice.\n\n\"It doesn't matter,\" he told her.\n\n\"Oh, to hell you say!\" snarled Sierra. \"Taylor, get your god damn hands off me!\" I neglected to comply with her insane request. Sierra would do lousy in prison, and I sort of owed it to the female prison population to keep her on the outside.\n\n\"Answer the question,\" Stacy said in a steadier tenor.\n\n\"She was fucking them. She told them it was the best she ever had. She was begging for them to give it to her harder!\" he shouted back.\n\n\"Don't forget that she told them all about what a small prick you had, Fucker!\" Sierra shouted back. I stole a glance to Cheyenne who was taking in everyone's reaction in the room. She was surprised by what she was seeing. Nicholas was reeling from Sierra's verbal slap. What mattered in the end to him was being denigrated in front of other men.\n\n\"Nicholas, please,\" pleaded Stacy, \"tell me what really happened?\"\n\n\"They didn't tell me what was going to happen,\" he said suddenly deflated.\n\n\"Bullshit,\" snapped Sierra, \"Joe told me he had to play you the tape to get you to show up. He told you what was going to happen.\" Cheyenne looked even more shaken. Stacy looked like she was going to cry.\n\n\"She knew it all too,\" he responded. Sierra began to choke back sobs. I decided it was safe to let her go.\n\n\"Nicholas, my only problem is that you left her there with men who meant her harm. She walked into that room your fianc\u00e9. Even though you dumped her right there, you should have taken her out with you.\"\n\n\"You peed on her,\" Sierra growled. As she turned ever so slightly I could see tears on her cheeks.\n\n\"Oh god,\" Stacy groaned. She ran for the bathroom.\n\n\"Fuck all of you,\" snapped Nicholas. He stormed out the door, slamming it in his wake. All I could think of 'what a dick, he abandoned yet another girl.' Sierra ran into Cheyenne's arms.\n\n\"I'm so sorry,\" sobbed Sierra. Cheyenne stroked Sierra's hair and rested her cheek on the shorter woman's head.\n\n\"It's okay. We all made fucked up choices,\" she admitted. \"It is okay,\" she repeated. \"I think I can move on now.\"\n\n\"That's the best revenge,\" I told her softly; \"getting on with your life.\"\n\n\"I think I already have,\" she smiled back to me. Cheyenne gave me a wink and led Sierra back to the main bedroom, our bedroom. I waited in the living room. It didn't take long before I began hearing those delectable little noise the girls made when the cuddled together. I heard the bathroom door open, but the footfalls went the wrong way. I opted to let things play out. It took about two minutes before Stacy was padding around the hallway corner.",
        "\"I ...\" she looked back toward the bedroom clearly embarrassed. She was at a loss for words.\n\n\"They are comforting each other,\" I told her. \"They care for each other deeply, and no I'm not gay, but I know when they need a little time for themselves. \n\n\"I ...\" Stacy began.\n\n\"You stammer a lot. Relax. I won't do anything to you. I want to make sure they are both okay. So, how are you getting home?\" I asked. Her eyes grew large.\n\n\"He ... was my ride. I really don't even know where I am,\" she admitted.\n\n\"I can call you a cab if you like,\" I offered. \"If you like, you can wait and have a talk with Cheyenne when she comes out.\" She was about to say something when I heard a loud moan from Sierra from the back. Stacy was embarrassed and shut up. We sat, not talking, as Sierra began making more rhythmic sounds. Stacy crossed her legs once then crossed them the other way. Stacy broke the silence.\n\n\"She's awful vocal,\" she whispered.\n\n\"Have you ever taken pleasure with a woman?\" I offered. Stacy blushed and looked away. She developed a flush to her skin.\n\n\"No,\" she told me. I made a judgment call, based on what little I had reasoned out about Stacy's willingness to engage a wounded party then her reaction when she'd made the wrong choice.\n\n\"Go back there,\" I suggested. \"It will help.\" Stacy looked at me as if I had told her to drink Hemlock.\n\n\"I couldn't. I don't know how. She must hate me now,\" Stacy stammered.\n\n\"Those are excuses. My suggestion is that you don't be selfish. Trust me, if you go back there, you will be welcomed,\" I informed her.\n\n\"I don't know what to do?\" she pleaded with me. I took her by the hand and led her down the hallway to the bedroom, pushing the half-open door wide enough for me to drag Stacy in. Stacy resisted, but more out of form than any real desire to escape.\n\nSierra was only in her purple lace bra. The rest of her clothes were tumbled at the foot of the bed, undoubtedly where Cheyenne had stripped them off. Cheyenne had shed her skirt and blouse, but had on her black stockings, panties and bra. Sierra was lost in passion on the bed, shaking her head back and forth while Cheyenne teased a nipple through the bra and ran a finger along her asshole and pussy while massaging her clit with her thumb. Cheyenne stole a glance to Stacy then to me. First there was a question, which she saw mirrored in me. She went back to sucking on the nipple and gave a nod of assent.\n\nStacy caught that exchange and gave me a 'deer in the headlights' look. I went to her and kissed her softly on the cheek. She had been holding her breath until then. I began unbuttoning her blouse. Her hands came up to stop me. She held my hands in hers while her eyes sought answers in mine. She overcame some inner turmoil and moved my hands away. I was uncertain what she would do next. She could have gone either way.\n\nShe closed her eyes and took the plunge. Stacy's hands trembled as she worked free the remaining buttons. When she finished I could tell her breathing had quickened a pace. I took her shirt and pulled it slowly up from her skirt. Instead of stopping me, she began to push her skirt down and wiggle out of it. It dropped down to the ground and she kicked it away. Her shirt fell off her shoulders at the same time. Her shoes were next. She was left with a peekaboo white bra, white hose, and white panties that rode high up on her hips by design. As she turned to roll her hose down, I could see that they barely covered any of her ass cheeks, which turned out to be nice, firm, and only a bit smaller than I liked. It was perfect for her frame.\n\n'What now,' she mouthed to me. I took her hand and led her around the bed to the side opposite Cheyenne. I directed her to get on all fours on the bed and move toward Sierra's nipple. She was very hesitant in her first action, a gentle kiss on the bra-covered nub. Cheyenne reacted by reaching across to her and slowly pushing her face down while increasing her own suction on the nipple she was closest too. Stacy followed suit, and I had to say, once she started she became quite enthusiastic. Of course Sierra immediately knew that the person teasing her wasn't me. She opened her eyes to see Stacy nibbling down on her. Sierra quickly looked to me for assurance. I nodded and smiled. Sierra placed her hand on top of Stacy's head and began playing with her hair.\n\nAfter about thirty seconds, Stacy looked up to Sierra.\n\n\"Am I doing this right?\"\n\n\"Yes!\" Sierra insisted. \"Please continue.\" Those words of encouragement invigorated Stacy's performance on Sierra. Stacy place on a hand on Sierra's stomach and began tracing small circles on it, having each one slowly migrate down. Sierra responded by putting her head down, closing her eyes, and moaning.\n\nCheyenne looked up and gave me one of those smiles that made me feel good all the way to my toes.\n\n'I'll get you later, I promise,' she mouthed to me. I nodded then edged closer to Sierra until I could start planning kisses on her forehead, eyes, lips, nose and chin.\n\n\"No fair,\" she muttered. \"Everyone is ganging up on me.\" She gasped and writhed as Cheyenne stroked her clit for the first time. Stacy followed suit the moment Cheyenne moved her hand away, causing Sierra's breath to quicken even more. Stacy then surprised everyone by going down and planting a kiss right on Sierra's pleasure center. That earned her an appreciative moan from Sierra, which in turn encouraged Stacy to do more with her lips and tongue.\n\nStacy looked up to Sierra and I and said,\n\n\"I've never been with a girl before. This is fun.\"\n\n\"It is even more fun for me,\" panted Sierra, \"I guarantee it. Now get back to work. I'm getting close.\" Stacy dove back in with gusto, causing Sierra to arch her back. To make Sierra's sexual misery even worse, Cheyenne dipped a finger into Sierra's cunt, pulled it out, and began working it into her ass.\" At the last minute, I reached down and pulled Stacy up. Sierra squirted hard, dousing Cheyenne's hand with her juice. Stacy was about to say something when she saw how hard Sierra came. Then her mouth formed an \"O\".\n\nThe moment Sierra calmed down, she popped up and grabbed Stacy by the shoulders, planting a steamy kiss on her lips. Stacy tensed up, but Sierra didn't relent. She wore Stacy's resistance down with her heat. When Cheyenne felt the moment was right, she reached out and began rubbing the bottom of Stacy's panties. Stacy jolted, but Sierra wouldn't let her come up for air for the longest time.\n\n\"I ...\" Stacy stammered when she had the chance.\n\n\"Ssshhh,\" Sierra whispered, placing a finger on Stacy's lips. \"Go with it.\" In response, Stacy kissed Sierra back. Cheyenne moved around and unhooked Stacy's bra. She pushed it forward, moving her hands around to cup both of Stacy's breasts. The nipples grew even harder in her grasp.\n\nSierra detangled herself in order to reposition herself so that she was on all fours facing Stacy. Stacy needed no encouragement to meet her halfway to continue their kiss. Sierra slowly retreated, drawing Stacy to her until Stacy had to reach out with both arms to prop herself up. This brought Stacy's breasts out of Cheyenne's hands. Cheyenne looked at me with a wicked grin then sidled up behind Stacy. Her fingers traced down Stacy's sides until she wrangled a finger inside her panties waistline. Stacy wiggled uncomfortably and got goose bumps on her butt and back.\n\nCheyenne gave Stacy's ass a playful slap. Stacy looked behind her, a scared look on her face.\n\n\"Behave, or you'll get another one,\" Cheyenne teased. She hauled back her had to accentuate her threat. Stacy gulped and turned her head back to Sierra. Sierra had used the interruption to put one hand under Stacy and pull and pinch one nipple. Stacy gave a little shudder before kissing Sierra once more. Cheyenne put her hands back on Stacy and worked her panties down. This time Stacy used her thighs and knees to help Cheyenne work them off.\n\nThe most powerful sexual tool is not the dick or cunt, it's the brain. A month ago, what Cheyenne know about pleasuring a woman could have been written on one hand. Sierra had been a good teacher and Cheyenne a good student. Experience isn't knowing what you've been taught, it is applying that knowledge in your own way, and I could see now that Cheyenne had created her own style of play in just a month. He came out sex with an urgent, hungry style, whereas Sierra was more of a rolling, steadily increasing wave. Or, you could consider Cheyenne to be a tornado while Sierra was a hurricane.\n\nCheyenne took hold of Stacy's ass cheeks and pulled them apart, then plunged forward and began licking her ass. Stacy gasped but kept kissing Sierra. Sierra's tongue really was that good; I speak from experience. Cheyenne licked up and down with several strokes, before looking up to me and grinning. She leaned in and rolled her tongue into a tight point and plunged it into Stacy's asshole. Stacy tried to turn around and shift away from Cheyenne, but Cheyenne held fast to her hips.\n\n\"No! No one has ever ... it's dirty,\" she protested. Cheyenne wasn't listening. Stacy's struggles lessened, finally stopping and being replaced by moans. \"This is so wrong,\" she whimpered.\n\n\"Feel's weird, doesn't it?\" Sierra said voice full of sensuality.\n\n\"I ...its different,\" she whispered. \"I thought it would be different. Isn't it nasty to do?\"\n\n\"Want to find out?\" Sierra offered.\n\n\"Not really,\" Stacy stated.\n\n\"Maybe later,\" Sierra grinned. \"It gets better.\" Cheyenne was moaning behind Stacy and I saw her slip one, then two fingers into Stacy's snatch. She stuck them in deep and stirred them around. Stacy pushed back against her hand. Cheyenne press her forward, removed her tongue from Stacy's ass, and stuck one finger in. Stacy gulped as Cheyenne slowly worked the finger.\n\n\"Wow,\" she gasped. Sierra giggled and rolled over onto her back. She scooted underneath Stacy until she could inhale one of her breasts into her mouth. Stacy leaned down to make it easier for Sierra to suck on first one breast then the other. I was excited and pleased to see Stacy support herself on one arm and tickle her way down the chest of Sierra in the other. She flicked a nipple and headed further down. She gave a start when Cheyenne stuck a second finger into her. Her breath began to come in gulps and she was having little tremors all over her body.\n\nIt was Sierra's turn to gasp and wiggle when Stacy snaked a finger over Sierra's clit and start to rub it in rough circles. She might have made it farther but Cheyenne drove her other hand up against Stacy's pussy, sticking two fingers and pressing hard on her clit. Stacy came so hard she squirted. She would have collapsed onto Sierra if Cheyenne hadn't quickly reached around and grabbed Stacy by the hips. Sierra didn't seem to mind because she kept biting and sucking on a nipple.\n\n\"Please, please,\" pleaded Stacy weakly. \"I can't ... I need a second ... please.\"\n\nI reached out and pulled Stacy away from Sierra because that woman can be too demanding at times. It earned me a dirty look from Sierra as I settled Stacy into my lap and wrapped her in my arms. She gained more control over self then smiled up at me.\n\n\"Wow,\" she giggled. \"To think I almost missed this. It has been quite a night. I'm not where I thought I would be, that's for sure.\"\n\n\"The pleasure's been ours, Sugar,\" Cheyenne said while batting her lashes. I slowly detangled myself from Stacy and began gathering her clothes.\n\n\"What are you doing?\" Cheyenne asked.\n\n\"I'm going to take Stacy home,\" I responded. Stacy moaned, raised her head, and said,\n\n\"I thought you ... we ... were, you know.\"\n\n\"Haven't you had enough fun for tonight?\" I teased. \"You've crossed some serious barriers. Let's give you a chance to think before you jump into the bed of a man you met four hours ago.\"\n\nSierra chuckled. She rolled over to the end table and took up a pen. She took Stacy's hand and scrawled our number on it.\n\n\"Call us tomorrow night. Maybe we can go to a club, or something,\" Sierra offered. Stacy still looked confused, disoriented and now a little hurt. I sighed.\n\n\"Listen, do you have to be anywhere tomorrow morning?\" I asked. Stacy shook her head. \"How about you sleep in the spare bedroom tonight, and we can see what tomorrow brings. It is safe to say you are well liked here, but the Wonder Twins can be a bit exhausting.\" Cheyenne popped me one for the Wonder Twins comment. I suspect she did it to stop Sierra from hitting me harder.\n\n\"You two don't mind?\" Stacy inquired. Being a guy, with a dick, that liked women, it was assumed that I wouldn't have a problem with a good-looking lady staying the night. The fact that it's right is even more irritating.\n\n\"Not unless you mind us getting you up in the morning,\" Cheyenne winked. Stacy bit her lower lip.\n\n\"I'm okay with that,\" she said in a small voice.\n\n\"We need a quick shower,\" Cheyenne informed her. \"Come on.\"\n\n\"Boy,\" Sierra said regally as she scooted off the bed,\" change the sheets.\"\n\n\"Girl, your ass is going to take a pounding for that,\" I growled. Sierra looked over her shoulder and stuck her tongue out at me. She also put an extra bit of wiggle in her step as she exited the room. God, I love that ass.\n\nIn some long lost, nearly forgotten part of my life, I had learned the ever-so useful skill of changing a bed quickly. After I finished, I tossed the sheets in the laundry. Somehow my life as a bachelor had taught me how to do laundry, while Sierra and Cheyenne's stints as girlfriends had left them with some confusion as to what got bleach and that the dryer had more than one setting. The first time Cheyenne saw me ironing one of her shirts, she got all excited and we had sex right there on the floor. After that, I kept my bitching to myself, because, let's face it, the want of pussy makes men do all kinds of strange things. I got this sinking feeling that I was being trained. At least the girls didn't pat my head and rub my belly.\n\nIt wasn't that they didn't learn this stuff; it was only that it was like pulling teeth to make them remember. It wasn't totally one sided though. One day Sierra came in and was ragging on my for my domestic side, so I pushed her up against the washing machine and taught her the wonders of having sex during the spin cycle. She now affectionately called my washing machine 'Momma's little vibrator'. Sometimes I just can't win.\n\nWhen Stacy came out of the shower she was much more relaxed. She was wrapped up in one of my thick robes and was looking positively adorable. She came right up to me and kissed me on the cheek.\n\n\"Thank you,\" she whispered. \"Could you stay with me tonight?\"\n\n\"I really think you need a little time to digest what's happened tonight.\"\n\n\"I know. I only want someone to sleep beside me,\" she smiled warmly.\n\n\"You realize I'm not gay, right?\"\n\n\"Yes,\" she confirmed.\n\n\"Just checking.\"\n\nMy life is simple and uncomplicated. I've got two girls sleeping in my bed, I am sleeping with a third girl in another bedroom who I'm not going to have sex with tonight, and apparently I'm the biggest damn liar on the face of the Earth. At least I mostly lie to myself.\n\nFIN"
    ],
    "authorname": "FinalStand",
    "tags": [
        "group sex",
        "three women"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/cheyennes-revenge-ch-05"
}