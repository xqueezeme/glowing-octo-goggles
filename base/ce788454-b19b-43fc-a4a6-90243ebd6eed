{
    "title": "Boss Nanny Ch. 13",
    "pages": [
        "Matt spent every minute leading up to Mike's departure preparing for the greatest task he was ever given. Aidan excluded. When he wasn't in class, at work, or catering to Aidan, Matt was re-reading and studying every published piece he could find on forensic accounting. He even spoke with his TA and reviewed tips for spotting trends and indicators.\n\nEven though Seamus would end up hiring a professional to do a more thorough job if something came from it, Matt still wanted to prove that he could do this. He wanted to prove himself.\n\nMatt looked at his watch. It was an activity watch that counts your steps, but it was all black and made him feel official. He didn't know Mike's exact itinerary, but he would be boarding soon. Matt imagined Mike smirking as he headed for some tropical vacation courtesy of Seamus Ryan.\n\nHis skin was buzzing with anticipation. He felt dangerous, like James Bond. Which reminded him he wanted to name this whole thing, but he couldn't decide if it was a mission or an operation.\n\nMatt was in his room with Aidan, getting ready for day one of Operation Butter Biscuit? Okay, Matt really shouldn't be creative while feeding his brother. He heard Seamus come through the front door. Matt looked at Aidan and clapped quietly but excitedly.\n\nAidan was annoyed. He didn't like being dressed up. He frowned at the door and tried to tear the stocking cap off his little head.\n\n\"Leave the hat alone. It's part of the operation.\"\n\nAidan protested and tried again.\n\nSeamus stood at the bedroom door, laughing. \"What is going on here?\"\n\nMatt stood up and looked at himself, then at Aidan. They were both dressed in black from head to toe. He even bought a couple black beanies from the corner market. If you could get past the faint smell of stale weed, they worked just fine.\n\n\"We're getting ready to go undercover.\"\n\nAidan slid off the bed and waddle ran to Seamus, who laughed at the little ninja baby before swooping him up. The second Aidan was safe in Seamus's arms, he tore off the hat and flung it on the floor. His thin baby hair was all static and stuck straight out like crazy, making Matt and Seamus laugh.\n\nSeamus dangled his key chain. \"We're not breaking and entering. I have a key.\"\n\n\"Don't ruin this for us.\" Matt glared as he adjusted his own beanie. He grabbed Aidan's from the floor and put it back on his head. He whined and looked to Seamus to save him from his evil brother.\n\nSeamus snatched the hat from Matt and stuffed it in his back pocket. \"As cute as you two are, it's time to go.\"\n\n****\n\nThe office was on the other side of town, close to the dealership. It was in a small suite of offices, nestled behind the bigger businesses. Seamus unlocked the door and let Matt in. The office wasn't anything fancy. Mike had an enormous oak desk with two monitors. There were several filing cabinets along the wall and a small kitchenette with a coffee machine and microwave.\n\nMatt ran his hand along the back of the leather chair.\n\n\"Are you just going to stand there?\" Seamus asked.\n\n\"Give me a minute. I'm about to sit in another man's chair.\"\n\nSeamus took a nervous breath and set baby ninja down. Aidan had given up on the hat situation. He looked more like a hipster coffee drinker who was about to recite a poem than a stealth secret agent, and he was cuter because of it.\n\nMatt rubbed his hands together and finally sat down and booted up the system. \"I'm assuming you have the passwords?\"\n\nSeamus pulled something up on his phone. \"These should get you access to everything you need.\"\n\nIt took a minute to navigate the computer, but the accounting system was easy to locate. When he successfully logged in, his heart rate skyrocketed. It was really happening. Even though he was with Seamus, it felt like he was doing something wrong. He looked around the office in case there were any hidden security cameras.\n\nSeamus stood behind Matt and watched as he familiarized himself with the accounts. The hardest part by far was how many businesses he had and the fact they were all moderately mixed together. Matt had to figure out how each was set up and then look for patterns.\n\nWhile the time passed quickly for Matt, Seamus and Aidan were bored out of their mind. By hour two, Aidan had run out of fun things to do and was becoming restless. It's possible Seamus had underestimated how long it would take to do an audit. Yeah, he definitely assumed the fraud could be spotted immediately.\n\n\"If you want to head back to the house with Aidan, I can call a car later.\"\n\nSeamus thought about it but declined. As much as he wanted to take Aidan and leave, not abandoning Matt won out. Seamus tried hard to keep Aidan occupied but as the time went on, it became harder and harder. Matt was about to insist that Seamus leave, when Aidan fell asleep.\n\nWhile Aidan slept on the small loveseat, Seamus switched between thumbing through the filing cabinets and scrolling on his phone.\n\nIt was after midnight when Matt's brain started to burn as much as his eyes. \"I think that's it for tonight. We'll come back tomorrow.\" Matt left everything where it was so he didn't lose his place.\n\nOn the way home, Seamus asked if he found anything.\n\n\"I'm just trying to familiarize myself with it right now. I wouldn't know fraud if it bit me in the face.\" Matt was concerned the expectation might be too high. \"Two weeks isn't a lot of time to go through accounts for five businesses. Some audits take months, years even. On top of this, I'm going to school and working full time.\"\n\nSeamus reached over and squeezed Matt's leg. \"I appreciate that you're doing this.\"\n\n\"I know,\" Matt covered Seamus's hand with his own. \"I'm feeling pressure because I want to do a good job and I know there's not much time.\"\n\n\"There's no pressure from me. I know you liked the forensics class. I thought this was a way for me to see if my gut is right while you get to practice something you enjoy.\"\n\n\"It's exciting if a bit more boring than I expected. I'm excited to do it, I just wish I had more time.\"\n\n\"I could talk to Denise and see if you could have a few days off. I know she's pretty well staffed right now. I don't think it would be a hardship. I could even pay you for doing this so you're not out the money.\"\n\n\"God, please don't talk to Denise,\" Matt begged. \"That would be so embarrassing.\"\n\n\"Why would it be embarrassing?\"\n\n\"Everyone would think I'm using my boyfriend for favors.\"\n\n\"Do they even know we're dating?\" Seamus asked. \"I don't think anyone knows.\"\n\n\"I'm sure they know. If not, they definitely suspect. We're kind of obvious.\"\n\n\"I could tell her I was hiring you to do some accounting while Mike is away. She wouldn't suspect anything and I wouldn't be lying.\"\n\nMatt watched the passing streetlights as he thought about Seamus's offer. It wasn't a terrible idea and he could really use the extra time to investigate.\n\n\"As long as you can do it without making me look bad.\"\n\n\"You think I run all these businesses but I can't get you out of a few shifts without being suspicious?\"\n\n\"I mean, your accountant might be embezzling money from you, so...\"\n\nSeamus cupped his mouth. \"Ohhhhh. That was low.\"\n\nMatt leaned his head against the headrest and smiled.\n\n****\n\nWhen Matt got home, Seamus dangled the key to Mike's office. \"Denise was excited that you're filling in for Mike. You now have two weeks off.\"\n\nMatt couldn't leave the apartment fast enough. He kissed Seamus and Aidan, grabbed his hoodie, and headed out the door--in normal clothes this time. No more night ninja for Matt.\n\nAs much as he hoped Mike wasn't stealing from Seamus, he also wanted to be the one to find the smoking gun. He wanted to be the reason he got nailed to the wall. What a thrill. But yeah, he mostly hoped it was all in Seamus's head. Seamus was a good person. The thought of someone taking advantage of him curdled Matt's stomach.\n\nMatt spent the rest of the day at the office. Then the next. That's how it went. Every day that Matt wasn't in class, he spent hours in front of the computer screen. If Seamus was awake when he got home, Matt would read off a list of questions he had about employees, contractors, vendors, etc. Without having intimate knowledge of the day-to-day, Matt needed clarification to help move the investigation along.\n\nTo Mike's credit, he was really organized. Matt was able to find most information either on the computer or in the filing system.\n\nThe week passed in a blur. Matt survived on caffeine and a prayer. It got to the point where Matt didn't want to leave the office until he could give Seamus something concrete.The office was a wreck and there was no way he could put it back together without Mike noticing. He also didn't want to let Seamus down. The more he dug, the more he agreed with Seamus. Something was off. He was close--so close he could taste it. Matt went back and forth, comparing everything that was logged in the computer with everything he could find in the filing system.\n\n****\n\nSeamus watched Matt from the couch as he set his stuff by the front door. He was home early. There was only one reason Matt wouldn't be at the office.\n\nSeamus off the couch. \"What did you find?\"\n\nMatt touched Seamus's arm and motioned him back to the couch. \"Maybe nothing, but there might be something. We'll see.\"\n\n\"Matt, it's fine. If there's anything that might be sketchy, I'm hiring a professional. Just tell me what you think you found.\"\n\nWhen they settled on the couch, Matt turned to Seamus. \"First, Mike seems to have a very generous salary.\"\n\n\"Yes,\" Seamus nodded. \"He does a lot for the company. He has a base salary. Based on profits, he gets an annual raise of three percent. Every fifth year there's a cost-of-living evaluation. At that point, we adjust if needed. I believe he gets about eighty a year.\"\n\n\"Yes, I saw that in the contract between you two. The thing is, according to payroll, he's been getting an eight percent raise instead. He's making damn near twenty grand every month.\"\n\n\"What?!\" Seamus's eyes bulged right out of his head as he did the math in his head.\n\nMatt nodded. \"I thought it was crazy he'd make more than you.\"\n\nYes, Matt had seen what Seamus was taking home. He was actually impressed that Seamus was living so modestly. Judging by the profits, Seamus could've easily paid himself more. Substantially more.\n\nThis was coming strictly from an accounting standpoint, of course.\n\n\"We have a signed contract. It's not eight percent.\"\n\n\"I know.\"\n\n\"I have it at my office,\" Seamus reiterated. He was pissed. \"I can show you.\"\n\n\"I know, I saw it.\"\n\n\"That's stealing!\"\n\nWasn't that the whole reason Matt was peaking around?\n\n\"What else?\" Seamus asked.\n\nMatt moved on. \"All the businesses do daily deposits, which go straight to Mike, who then takes it to the bank. The thing is, there are almost always petty cash adjustments that equal the amounts of cash that should've been deposited. I wrote a list of amounts, dates, and what the petty cash was supposedly used for. You could easily talk to your managers and see if these are accurate, but I've worked at the Coffee|Bar for a year and we've never had group lunches, yet, according to petty cash, we do them all the time. So, either every manager is stealing, or Mike is pocketing the cash. I can't speak for everyone else, but I doubt Denise is.\"\n\nSeamus said nothing.\n\nMatt flipped to the next page in his notepad. \"Company credit cards. I went through the charges. Manager purchases align with the businesses. There really wasn't anything suspicious. Everyone is good at submitting receipts, except you,\" Matt shot a look and then laughed when Seamus glared at him. Matt raised his hands. \"As the boss, you get a pass here. Mike, on the other hand, I'm not sure what he would need a company card for but he makes more purchases than anyone and they are mostly personal.\"\n\n\"What kind of purchases?\"\n\n\"Everything. Fuel, groceries, meals, entertainment. As far as I can tell, he probably uses it for everything.\"\n\n\"Wow, okay. Anything else?\"\n\n\"There's some questionable vendors. Might be nothing but I noted them anyway. Other than that, I didn't see anything. That doesn't mean there isn't more. Given my lack of experience and the short amount of time I had to work, you should get a professional here asap. I would also make some big changes before he comes back. If he catches wind that you know or suspect what he's up to, he could really fuck up your finances. He's got his claws pretty deep.\"\n\n\"More than he already has?\" Seamus bit out. Then he sighed. \"I just don't know what to do. He does everything for the company. How the hell do I find someone who can step in at a moment's notice? Who can do what Mike does?\n\n\"You mean steal money from you?\"\n\nSeamus growled. Okay, it wasn't the time to joke. \"He's not just an accountant, he's my HR department.\"\n\nMatt shrugged. \"I talked to my professor. She knows a lot of people and said she might have a lead. I can probably help a little though it should really be your last resort, for obvious reasons. Regardless, you should spend tomorrow morning taking Mike off your accounts, the credit cards, and whatever else he's linked to. I don't know if he has remote access to the computer but I downloaded everything onto a drive, changed the online passwords, and even disconnected it from the internet, just in case.\"\n\n\"I should change the locks also.\"\n\n\"And let the property manager know that Mike isn't employed anymore,\" Matt added. \"If you are in fact terminating his employment.\"\n\n\"I'm definitely terminating that fucker.\"\n\nMatt sat on the couch as Seamus came to terms with everything. Seamus was angry and frustrated. There was also relief. He'd been suspecting it for a long time and now he knew.\n\n\"How are you feeling about everything?\" Matt asked.\n\n\"At twenty grand a month I'm feeling stupid that I didn't ask for help a long time ago. I almost asked you when you first mentioned loving your forensic class but I didn't want to bother you. I was still trying to impress you.\"\n\n\"You didn't think that someone shysting you of twenty grand a month would impress me?\"\n\n\"No.\" Seamus lip curled as he tried not to smile. \"I didn't think you'd find that to be a redeeming quality.\"\n\nMatt laughed, grabbed Seamus's legs, hauled them up to his lap, and started massaging his feet. As Matt dug in, Seamus melted into the sofa.\n\n\"Do you think you would've let him get away with this if he wasn't Kelly's best friend?\"\n\n\"I know so. The only reason he had so much reign is because Kelly hired him. I think Mike used my inexperience as a power play after Kelly died.\"\n\n\"Do you and Mike meet often? Do you guys go over stuff?\"\n\n\"Not really. I have tried over the years but he always tells me he has things under control. He's intimidating.\"\n\n\"Why?\"\n\n\"Probably because he took control and told me how things would be. He always said it like he was doing me a favor, but I've never felt like I've had authority when it came to him.\"\n\n\"That has to be hard. Atleast you won't ever let anyone do this again.\"\n\n\"I'll do everything in my power to avoid it,\" Seamus confirmed.\n\nSeamus was laying on the sofa with his eyes closed as Matt worked his feet over. The lights were low and the room was quiet and relaxing. Matt was watching Seamus when Seamus smirked.\n\n\"If only I had a super smart accountant boyfriend who knew his way around this stuff and could teach me what to look out for.\"\n\n\"Instead, you have a super smart baby accountant boyfriend who is hardly qualified to do anything.\"\n\nSeamus opened his eyes and looked at Matt. \"You don't give yourself enough credit. You managed to find shit on Mike just fine.\"\n\nHeat blossomed in Matt's chest. \"Just fine? I barely slept in over a week.\"\n\nSeamus softened. He pulled his feet from Matt's lap and sat up. \"You were so badass.\" He pulled Matt forward and kissed him. \"I should let my super-smart badass accountant boyfriend catch up on his sleep.\"\n\nMatt frowned and grabbed Seamus's hand before he could walk away. \"You're leaving? I've barely seen you all week.\"\n\n\"I've been here every night,\" Seamus laughed.\n\n\"But I've been busy. We need to celebrate.\"\n\n\"Matt, the circles under your eyes tell me the only celebration you need is a good night sleep.\"\n\nHe was so tired. The adrenaline and excitement were wearing off and the cloud of exhaustion was slowly creeping in like an early morning fog bank. Still, Matt didn't want to see Seamus go. He didn't want to beg him to stay, either. So, he walked Seamus out then took a quick shower then brushed his teeth.\n\nIt took a while to fall asleep. His brain was so focused on everything he'd compiled over the last two weeks.\n\nBut what really kept him up was Seamus.\n\nMatt had spent over a week digging through every aspect of Seamus's business financials. He knew exactly how much his businesses were bringing in; profits, expenses, payroll, etc. There was nothing he hadn't seen.\n\nIt was one thing to know your boyfriend was successful and another to see it on paper. Not only did he know exactly what Seamus made every month, he knew what Seamus could make every month--without even trying.\n\nNo wonder Kelly's family had fought him. No wonder Mike was skimming.\n\nMatt could see the parallels between Seamus and Kelly and Matt and Seamus. Even though the relationships weren't the same, the similarities were crazy.\n\nThen Matt wondered if it was partially his fault that Mike had gotten away with it. Seamus had spent the last year watching Aidan almost nonstop. Matt could have reduced the number of credits he was taking or used more of the life insurance money so didn't have to work as much. Letting Seamus take the brunt of the responsibility should not have been the answer.\n\nEven as Matt laid in bed worrying about it, he knew Seamus hadn't been forced to do anything he didn't want to do. He didn't have to volunteer in the first place. He'd proved that to Matt over and over. Even when Matt lined up daycare, Seamus all but demanded to keep Aidan.\n\nHe fell asleep trying to figure out why. Why would Seamus take on such a big responsibility? Especially when he didn't need to? He'll, he could've easily hired someone on Matt's behalf, he had the money. Instead, he toted Aidan around from store to store and dealership to dealership. Seamus took Aidan while Matt was in school, at work, or when he needed to study. There was never hesitation or an inkling of irritation from Seamus. He did what needed to be done.\n\nEven as Matt wondered why. He already knew.\n\n****\n\nWith no work and no class until one, Matt got to sleep in--as defined by a seventeen-month-old who never worked a day in his life and always woke up with the sun most mornings.\n\nStill, it was nice lounging on the couch with nowhere to be. Matt dropped Aidan off at daycare before his one and only class. He also got to pick Aidan up, which was a rarity.\n\nAidan was abnormally irritated as the evening wound down. It wasn't until he kept walking to the door that Matt realized Aidan was waiting for Seamus. Matt had barely talked to him all day. Seamus had been understandably busy with the Mike thing.\n\nMatt picked Aidan up and opened the front door. Aidan perked up and looked outside, half expecting Seamus to be there.\n\n\"See, he's not out here, buddy. He's busy tonight.\"\n\n\"Moose,\" Aidan whined as he waited for Seamus to pop around the corner.\n\nMatt carried his brother to the couch. Aidan sat on Matt's lap and they called Seamus on video. Aidan perked up when he heard the familiar ring that always meant he was about to see Seamus or Grandpa Brad.\n\n\"Aido Potato for brains!\" Seamus greeted happily as the call connected. It was only ever Aidan that Facetimed him. \"Why are you awake? Did you tell your dad you could stay up late again?\"\n\nAidan was all sorts of excited to see Seamus and started talking back in a language only he knew. Seamus smiled and nodded along. Aidan tried to slide off Matt's lap with the phone but Matt stopped him. Not being able to go anywhere, Aidan laid against Matt's chest, content to watch Seamus.",
        "\"How'd it go today? What all did you get done?\" Matt asked.\n\nSeamus adjusted the camera and smiled. He was at Mike's office. He looked tired. Exhausted even.\n\n\"I was on the phone most of the day. I talked to my lawyer this morning, called the banks, cards, and everything else I could think of. I even went to the police department.\"\n\n\"The police department?\" Matt asked, kind of shocked. Kind of not. \"I guess that makes sense.\"\n\n\"If what you found is true, then he's stolen a lot of money and that's a crime.\"\n\n\"I didn't think that far ahead,\" Matt admitted. \"Have you decided how you're going to confront him?\"\n\n\"With a police escort,\" Seamus smiled though Matt didn't think for a second he was joking.\n\n\"He deserves it for what he's been doing. What are you still doing at the office? Is everything okay?\"\n\nSeamus let out a breath and ran his fingers through his hair. \"Yeah. I just wanted to see for myself. And I figured it couldn't hurt to see if there was an account or two I missed that needed to be called or alerted.\"\n\n\"Was there?\"\n\n\"Yeah, there were a few I forgot about. Out of sight, out of mind, you know?\"\n\nMatt understood. \"You'll call them tomorrow?\"\n\n\"Yeah.\" Seamus yawned and stretched out. \"I'm pretty worthless anymore. How'd you do this for over a week straight? I'm toast.\"\n\n\"I'm young and have the energy to spare.\"\n\nSeamus smiled and Matt melted into the couch. Aidan was limp against Matt's chest as he watched him and Seamus talk.\n\n\"Are you coming over tonight?\" Matt asked.\n\n\"Probably not tonight. I still have a few more things to go through.\"\n\nMatt understood. He just missed Seamus. It had been a long month, first prepping for the audit then actually doing it. They hadn't spent any quality time together. Now they'd, Seamus, would be dealing with the aftermath.\n\n\"Maybe I can see if dad will take Aidan next weekend so we can do something?\"\n\nSeamus groaned. \"Yes, please.\"\n\nMatt laughed and he squeezed Aidan against his chest. It's all he could do to contain himself. Seamus said goodnight to Aidan and Matt before disconnecting the call. It took both of them a minute to come to terms with the fact Seamus wasn't there.\n\n\"Do you love Moose?\" Matt asked his brother. \"Because I think he loves you.\" And me.\n\nAidan held Matt's phone in one hand and slid off his lap before Matt could protest. A minute later he came back and whacked Matt's lap with a stuffed moose that Seamus had given him over the summer.\n\nMatt lifted Aidan and the stuffy on to his lap then grabbed a blanket from the back of the sofa until the three of them were snuggled in tight.\n\nAidan nuzzled the furry animal and his eyes fluttered closed. \"Moose.\"\n\nMatt smiled then scratched the moose's head with his fingers before smoothing Aidan's hair. \"I'll take that as a yes.\"\n\n****\n\nThe next morning was a total disaster. Aidan didn't want breakfast and he didn't want to get dressed. He didn't want anything except to make Matt's life a shitshow. Aidan screamed the whole way to daycare, screamed while being dropped off, and screamed as Matt left.\n\nMatt felt guilty but he had to leave or he'd be late for class.\n\nSeamus texted him to find out if he needed to pick up Aidan from daycare. You better believe that Matt wanted to have Seamus do it--he was over dealing with his devil brother, but Matt had to take some responsibility, so he told Seamus not to worry. And since Matt didn't have work, he had no excuse not to get Aidan. It was fine. He had it all under control.\n\n****\n\nIt was a lie. Matt had no control. Aidan was in worse shape than he'd been that morning.\n\nMatt was overwhelmed and hoped Seamus would come over. He couldn't. He was busy with his lawyer. Matt's professor had hooked him up with a professional criminal auditor. Seamus wanted everything lined up so when the audit came back, they could move forward with the charges.\n\nAs bummed as he was, Matt understood. He wasn't about to add to Seamus's load by being needy.\n\n****\n\nThe rest of Matt's time off work was all about Aidan and supporting Seamus as he tried to navigate the disaster Mike had created.\n\nHis two weeks off work came to an end. It was time to go back to work. Seamus was going to meet them at the cafe and take Aidan from there. With the promise of seeing Seamus, Aidan wasn't such a terror while getting ready. That didn't mean the walk there wasn't terrible. Aidan didn't want to be carried--he wanted to walk. He was a big kid now. He had mastered life on two legs. He wanted to explore.\n\nWhich meant Matt was sooo late to work.\n\nKase and Hilary didn't care, they were just happy to see him. The cafe was kind of quiet anyway. Matt still felt bad. He ran Aidan to the back where Seamus was then hustled back to work.\n\n\"I had a feeling you were showing up today,\" Hilary said with a secretive look on her face.\n\n\"Well, the schedule is a dead giveaway.\"\n\nKase laughed and bumped knuckles with Matt.\n\n\"So is the boss who only shows up when a certain employee is working.\"\n\nMatt ignored her and did a quick check around the cafe to see what needed to be done.\n\n\"I'm serious,\" she said. \"We barely saw him all summer. It wasn't until you started working again that he miraculously started showing up again. Nothing for two weeks while you were off. Then poof, he showed up thirty minutes ago.\" Hilary wiggled her fingers in the air, \"Magic I tell you. It's magic.\"\n\nMatt glanced at Kase who shrugged. Kase hadn't said anything to her. Whatever Hilary thought she knew, it had nothing to do with him.\n\nJust then Seamus came out from the back. He was smiling with a giggling Aidan on his shoulders. Matt was so frazzled about being late to work that he hadn't given Seamus a kiss or said hello. He'd tossed Aidan's stuff down and left. Now he regretted it. Seamus looked good and Matt was missing him hard.\n\nHis tongue felt big in his mouth as he watched the pair move through the cafe towards him.\n\n\"Can I get a medium Americano?\" Seamus set Aidan's sippy cup on the counter and smiled. \"And a whole milk for my friend?\"\n\nMatt licked his lips and got to work.\n\n\"Here you go,\" he said, sliding both drinks across the counter.\n\nAidan took his sippy cup and his head back so quickly he lost his balance. Seamus reacted before Aidan fell off his shoulders. Once Aidan was recalibrated and the sippy cup was safe, Seamus looked at Matt with panicked eyes. \"That was close.\"\n\n\"You had it under control.\"\n\nSeamus was spooked and on edge but slowly recovering. \"I think we're going to run a few errands. What time are you off? I'll drop him off then.\"\n\nHe'll drop him off then.\n\nMatt wanted to scream.\n\n\"Six but I might stay late and help with a deep clean if that's alright.\"\n\n\"Sounds good. See you when you're off.\"\n\nOnce Seamus and Aidan disappeared to the back, Hilary was on him like white on rice. Oh my god! She mouthed. \"I was just teasing before but you can't tell me nothing is happening between you two. You about tripped over yourself when he came out. And the way he looked at you,\" Hilary fanned herself.\n\n\"Whatever,\" he blushed.\n\n\"'Whatever', he says. Oh damn, this is really happening,\" Hilary said all vicariously and smug. \"How long?\"\n\n\"A while.\"\n\n\"And you didn't tell us?\" She asked. Then she noticed that neither Matt or Kase were looking at her. \"You sonsofbitches. You knew?!\"\n\n\"Of course I knew,\" Kase smirked. \"It was so obvious. Only the blind could miss it.\"\n\nHilary glared at Kase before asking Matt a million questions about him and Seamus. Mostly inappropriate ones. Matt resigned to giving her what she wanted. He'd held it from her for so long anyway. It felt good to share it.\n\n****\n\nIt was late by the time Matt was off. He was frustrated and missing his boyfriend.\n\nAll Hilary's questioning had reminded Matt that he and Seamus hadn't done much more than fall asleep on the same mattress in almost a month. The apartment was quiet. The television was on in the background and the sound on low. The overhead lights were off. Just a few lamps remained.\n\nSeamus came out of the hall with his finger pressed to his lips. \"He's looking for a reason to fight sleep,\" Seamus whispered. \"Don't give him one.\"\n\nThat was fine. Matt had other plans anyway. He walked straight up to his boyfriend, grabbed his shirt, and looked him right in the eyes.\n\n\"I'm going to take a shower. When I get out, you better be in bed and you better be naked.\" Matt let go and continued as if nothing had happened. He paused at the bathroom door and looked back at Seamus, who was still standing in the living room looking stunned.\n\n\"Why are you still dressed?\"\n\nSeamus quickly stripped off his pants as beelined it for the bedroom. Matt would've laughed but he was so fucking horny and desperate for his boyfriend that thought he might die. He took the world's shortest shower then went straight to Seamus's room.\n\nMatt went right to the bed where Seamus was laid out and crawled on top of his boyfriend. The kiss was demanding and they melted into each other as they made out.\n\n\"You're not leaving tonight,\" Matt said between kisses. \"I need you.\"\n\nSeamus responded by doubling down. Matt wasn't the only one who wanted more. Seamus dug his fingers into Matt's flesh to get it, making the younger man moan.\n\nMatt hiked Seamus's legs up until they were wrapped around his waist and began to move against him. Being naked with his smoking hot boyfriend and feeling his hardness pressed against Matt's hip was making his balls tingle. He didn't want that so he slipped down Seamus's body and buried his face in his crotch.\n\nSeamus grabbed Matt's hair and looked him in the eyes. \"Suck me.\"\n\nMatt planned to. Happily. Still holding Matt's head, Seamus fed him his cock.\n\nMatt almost forgot how good Seamus felt in his mouth. The way the girthy shaft and plump head stretched his mouth. He couldn't stop himself, he slobbered up and down that hard, velvety pole.\n\n\"Keep going,\" Seamus panted with ragged breath. Then he used his grip to move Matt up and down.\n\nMatt was up to the challenge. When Seamus let go, Matt stuck out his tongue and ran it along the engorged rim of the head, then blew on the head.\n\n\"Aargh, Matt,\" Seamus cried.\n\nMatt licked him one more time then moved up his body. The kiss was a little slower but every bit as needy as earlier.\n\n\"I got naked and waited in bed just like you asked,\" Seamus said. \"Now it's my turn to make demands. Get a condom and fuck me right now. If you're not inside me in three minutes--\"\n\nMatt scurried to the nightstand and grabbed what he needed. He ripped the condom open, tossed the wrapper to land where it may, and rolled it down his shaft. While he did that, Seamus busied himself--working himself open.\n\nWhat a sight.\n\n\"You have less than ninety seconds.\"\n\nMatt fumbled with the lube bottle, slathering some on his cock. With a little extra on his fingers, he tried to finish opening Seamus. Seamus refused, pushing his hand away and moving until he had Matt where he wanted him.\n\n\"Ten seconds,\" he growled.\n\n\"You're cheating, that wasn't eighty seconds.\"\n\n\"Eight seconds.\"\n\nMatt laughed but was unable to deny him. He lifted Seamus's ankles, lined himself up, and finished the count down. \"Three, two, one--\"\n\nIt was over after that. Matt could hardly hold himself back as he watched Seamus. To him, Seamus was too sexy on a bad day. Seeing him in the throes of pleasure, touching himself while Matt fucked him--well shit.\n\nThe tingles started in his toes and traveled to his balls. Seamus was close, too. Matt could tell by the way he was breathing, how his back arched, and how his legs did this twitchy restless thing when he couldn't decide what to do because the need to cum was overwhelming.\n\n\"Damnit, Matt!\" Seamus cried out as he came. The pressure around Matt's cock was all he needed. A few erratic thrusts and Matt quickly toppled down the hill.\n\nHe hovered a moment, catching his breath before slowly pulling out. Matt grabbed the closest shirt and cleaned them up. It was a lame attempt but it would have to do.\n\nBefore rolling off, he took a second to look at Seamus. He was completely debauched. They both were, but Seamus wore it so well. His dark auburn hair was a mess, his skin was flushed, and his chest was rising and falling as he tried to catch his breath.\n\nMatt kissed him because he could, because nothing in that moment was more important. He felt an overwhelming need to be with Seamus, like he couldn't get enough.\n\n\"I missed you.\"\n\n\"It's been two days,\" Seamus smiled, satisfied with Matt's words.\n\n\"I'm not talking about the last two days; I'm talking about the last month. I just feel like we've been so busy that I haven't really got to be with you the way I want.\"\n\n\"We can always have more sex. I'm okay with that.\"\n\nMatt growled and rolled off Seamus. \"I'm not talking about sex either.\"\n\nSeamus stopped Matt from retreating by rolling on top of him and pinning him down. \"I was so thankful for what you were doing that I didn't want to seem demanding by needing more from you, but I missed you, too. A lot.\"\n\nMatt gripped Seamus tight and breathed him in. \"I hope Dad will watch Aidan next weekend because I need to be with you. It's like I can't get enough and it feels like I can't breathe.\"\n\nSeamus smiled down at Matt. It was so radiant and consuming that it filled Matt's soul. \"I know the feeling,\" Seamus said. Then he stretched out next to Matt and the two tangled into each other.\n\nAidan was sleeping safely in the other room, Seamus was burrowed around him, his last year of school was going well, and he had just helped Seamus solve Operation Butter Biscuit.\n\nHe didn't feel totally deserving of the life he was living but he was grateful for it anyway."
    ],
    "authorname": "Mrsgnomie",
    "tags": [
        "drama",
        "novella",
        "gay novella"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/boss-nanny-ch-13"
}