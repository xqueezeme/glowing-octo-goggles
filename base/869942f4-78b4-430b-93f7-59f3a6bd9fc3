{
    "title": "The Women of Honey Hollow Pt. 12",
    "pages": [
        "Chapter 58 \n\nA few days later I went to the general store to restock my pantry and ran into Janice. We spent a few minutes in polite conversation and she said she would see me in the near future. I smiled knowingly and told her she was welcome and if she called first I would plan a dinner for us. She agreed and told me she would bring the wine if I let her know what dinner would be. \n\nI left and was about to turn in my driveway and noticed a bra hanging from the post that held a gate at one time. I thought it was strange but continued up my drive. I saw Kim sitting naked on my porch, a pile of clothes at her feet and her hand lazily playing with her pussy. \n\nI waved to her as I got out of the Suv and went to the porch and kissed her in greeting. After a hug and another kiss I returned to the car and got my groceries and brought them in the house. I put away the stuff that needed to be kept cold and shed my clothes to join Kim on the porch. \n\nI sat in the other chair after turning on the lights and we chatted about her birthday that she celebrated with her sister Carrie a week or so ago. She said she had a great time and wanted to thank me for the I-pad. She was sure it would be really handy when she went off to college and was having fun with it right now. All the time we talked her hands were busy in her crotch as if I wasn't even there. Watching her be so natural about it, I was excited and started to harden. I asked if she wanted something to drink and she just asked for water so I got our drinks and returned to the porch. We spent some time enjoying the sun and each other and I finally asked her if she wanted to come inside with me. Smiling she stood up and took my hand as we went into the house and she led me directly to the bedroom. \n\n\"Sit down on the bed with your back against the headboard\" she said and I did as she directed. She plumped some pillows at the opposite end on the bed and sat facing me, her legs spread wide, her pussy lips parted showing me just how aroused she had made herself waiting for me. \n\n\"I want you to see how I had to make myself cum the past few years waiting to get old enough for you to fuck me. Just sit there and don't jerk off and waste all that delicious cum.\" she said as she rubbed her pussy looking directly in my eyes. \n\nShe pulled her lips apart and pinched her inner lips pulling them out and spreading them wide. Her pink inside was almost blood red with arousal and her sex pulsed, dripping her tangy juice that I was going to lap up before long. She pushed a finger in her cunt and placed two fingers from her other hand on either side of her clit hood. She rubbed up and down like she was jerking it off as she fucked her other finger in and out of her hole. Her hips started to thrust in time with her actions and I knew she wouldn't last too long before she had an orgasm. It was only a few minutes before she tensed up and beat her pussy and clit, slapping at it like it was a bad child that needed discipline. She came hard and squirted a stream of girl cum at me wetting my lower legs. \n\nKim smiled at me and crawled up the bed, stopping to clean the cum off my legs as she got closer to my cock. She devoured my cock taking me deep on the first plunge. The head of my cock slipped into her throat and her chin nestled in my balls. I was close to cumming already and didn't want to limit myself so I warned her and she backed off just licking me around the head and nipping at the seam under the rim. \n\nShe stood up and presented her pussy to my mouth pulling her mound so I could suck at her clit easier. She was still really excited and it didn't take a whole lot to bring her to another climax. She stood there and her legs shook and trembled and she held on to me shoulders until she could support herself. She remained standing and I slipped two fingers in her gash, probing deep enough to find her g-spot. She slipped a few fingers alongside mine and we finger fucked her until she squirted all over me again. This time she fell on her knees and then down on my chest and I wrapped my arms around her as she got her strength back. \n\nKim moaned a few times and I felt her body shiver when she did. She must have been having minor orgasms as she rested in my arms. I played with her nipples and rubbed her ass as we cuddled on my bed. She nuzzled into my neck and sucked lightly, not hard enough to give me a hickey but it did cause some stirrings in my cock. I had not cum yet so I would be ready in just a few strokes when Kim wanted to continue. \n\nShe rolled onto me and her pussy sandwiched my cock between her lips. I loved the way she could masturbate me by wrapping her pussy lips around my cock and rub the length of it like she was fucking me. Her pussy was swollen from her cumming so many times and it felt like a warm wet pillow wrapped around me. She rubbed her tits on my chest letting me know she was ready to fuck again. This time she was going to get the cock she had been waiting for. \n\nKim rose up and squatted over me, reached down, aimed my cock at her pussy and dropped down impaling herself all the way to my balls. She grunted and gasped as her movements got more demanding, fucking me hard as she drove me like a fine tuned machine. I let her do her thing and then flipped her over, hooked my arms behind her knees and drove myself deep into her with short fast strokes. She met me with the youthful vigor I knew she had, looking at me with eyes full of lust and love. \n\nI fucked her hard thru an orgasm or two and finally felt my own orgasm building in my balls. I asked her where she wanted me to cum and she said to fill her up, she wanted to feel me squirt deep in her pussy. I continued to pump her and my cock spit its contents deep in her pussy and as it did she climbed the mountain and shouted from the peak. I had all I could do to hold on as she fucked me like an animal in heat. I thought Carrie was going to be the wild one but it turned out that Kim was the wildcat, that's not to say that Carrie was a tame little pussycat. \n\nKim was wiped out for the time being and after I recovered I got up and went to the bathroom to clean up. I couldn't get over how much all the women around here could squirt. My ex-wife had never squirted as far as I knew and she was a tiger in bed, she could fuck me into a coma without a problem. I had to wonder why everyone around here was so adept at that particular action. \n\nI went into the kitchen and was thinking about what to have for dinner when my phone rang. I picked it up quickly so it didn't disturb Kim and found Julie on the other end. \n\n\"Hi Mike, I was just calling to see if you had disabled Kim like you did Carrie\" she giggled \n\n\"No Julie she is resting now and I am sure I will be the disabled one when she gets done with me. I will cook her some dinner and bring her home when she is ready. If she decides to spend the night I will have her call you.\" \n\n\"Don't bother to have her call, I know where she is and won't worry about her, can't say the same about not worrying about you, I hope you survive and if you don't we will give you a nice send off,\" she laughed as she said that but I thought she was probably closer to being right than she thought. \n\nWe said our goodbyes and I went back to deciding what to fix for dinner. \n\nKim staggered out of the bedroom and stretched her muscles and asked what I was doing. I told her that I was looking what to fix for dinner and she came over to me and fondled my cock. \"I have my dinner right here\" she said and bent down and took me into her mouth. It only took a few seconds for my cock to get hard again and she sucked me deep like she had done before. I just leaned back against the counter and let her suck to her hearts content. She was becoming an expert at the sloppy blowjob and I had to wonder how she perfected her technique. \n\nI knew she wanted to have me to cum in her mouth but I warned her that I was going to cum and she just nodded in agreement as she bobbed her head faster and faster on my hard pole. She was taking me down her throat as she bottomed out on every stroke, my cock swelling with sensation as I got closer and closer to filling her mouth and belly with my cum. \n\nThe first spurt splashed the back of her throat and she swallowed quickly to keep from gagging and sucked me harder after withdrawing and just holding the tip between her lips. My cock spasmed about a half dozen times and filled her mouth to overflowing, she swallowed everything and kept sucking the residual cum from me. The head was unbearably sensitive to her sucking but she sucked and twirled her tongue until I thought I would pass out. \n\nKim finally stopped and looked up at me with a smile knowing that she had sucked me off as well as anyone ever had. \n\n\"How was that Mike? Did I do alright? Does mom suck you any better than me? How about Carol or Carrie? Are you going to tell me damm it?\" \n\n\"Kim, you should know by now that I don't talk about anyone else and how good they are at sucking or fucking. I can tell you that you are as good as anyone around here and I love your own way of doing things. You are as hot if not hotter than anyone I have ever had, so just be yourself all the time whether you are making love or just having a conversation.\" \n\nKim seemed to be satisfied with what I had said and just climbed in my lap and we cuddled and talked until I recharged my batteries. She felt completely at ease being naked with me and we went to the porch to take advantage of the last sun of the day. \n\nI fixed some supper and Kim asked if she could stay the night. I agreed and we sat down to a nice quiet meal of meat, potatoes and vegetables. I served some white zinfandel with dinner and she sipped it like a lady. I was glad because I didn't want to get her drunk, a few glasses of wine would be plenty to make her doze off after we sat quietly talking. \n\nAfter dinner we sat beside each other and I told her about my life before coming to the valley, quickly skipping through the still painful part about my wife leaving after 30 years of marriage. I told her what I had done for a living and how I was able to retire at a young age and how I ended up here in her arms. \n\nWe talked for a few hours and she was getting sleepy so I suggested we head for bed. We changed the sheets and climbed into the crisp clean sheets. We snuggled and soon I felt her relax and fall into a deep sleep. I got up and cleaned up myself and the dishes from dinner and joined her in bed holding her in my arms. \n\nI awoke to the warm feeling that Kim was sucking my cock as a wake up call and stroked her hair as she gently sucked me, bobbing her head taking me into her throat. I loved the feeling every time her throat closed around me and I tried not to drive my cock any deeper than she wanted. \n\nShe turned around and thru her leg over my head, lowering her cunt down to my lips so I could lick and suck her. We stayed in the 69 and sucked one another until we both had an orgasm. I pumped my cum in 4 or 5 strong streams as she swallowed everything she could get. The tangy nectar flowed from her opening onto my tongue, as I lapped her hot pussy as it spasmed in climax. We rolled apart and she came into my arms for a cuddle until it was time to get up. \n\nWe shared a shower and had fun washing each other, paying special attention to the special places. I dried Kim off with one of the fluffy towels I had bought for my \"harem\" to use when they paid a visit to me. Wrapping herself in the towel she went back to the bedroom and sat back against the headboard with her legs spread wide so I could see her pink flower. \n\nI wondered what she had in mind as she smiled at me and slowly palmed her pussy. I went to the bed and knelt between her legs, bent down and moving her hand kissed her freshly washed cunt. I pulled her down so I could suck her better, I looked her in the eyes as I stuck my tongue deep in her wet hole. She arched her back and gave me a better angle to orally take advantage of her, licking and sucking like I was a starving man. Her hands were tangled in my hair forcing my mouth against her. Clamping her legs around my ears prevented me from escaping her clutches. \n\nKim exploded in my mouth and I lapped up the sweet/tangy cream she flooded me with. She was shaking and quivering and I added a few fingers to her cunt. She went wild when I did that, arching her back again, curling her toes she orgasmed from the highest peak she could climb. I pulled out of her, got on my knees and plunged my cock deep into her with one push. She had just started to slip down the side of the mountain when I did that and she quickly climbed the peak again. I fucked her hard and fast with long strokes just leaving the head in on the outstroke. Her juices were squirting from her cunt every time I plunged into her. I could hear the squelching caused by the pressure of my cock displacing her fluids as they soaked my cock and balls. \n\nI could see her eyes rolling back in her head as she just jumped from peak to peak having one orgasm after another without a break. I started to slow down so she could catch her breath but her hips drove me and herself to another hard cum. She tensed one last time and fell silent on the bed, the only thing moving was her cunt spasming on my cock as I unloaded inside her. I rolled off and checked to make sure she was alive, laid down beside her and covering us up, took her in my arms and fell asleep for a much needed nap. \n\nI woke up alone in my bed and could smell coffee brewing so I got up, showered and without getting dressed went to the kitchen for a much needed cup of java. \n\nKim greeted me with a smile, a steaming cup of coffee and not much else. Her body had a rosy glow due to a hot shower or a good fucking. She was beautiful in her youthful exuberance as well as a being a blossoming young woman. \n\n\"Mike, I love you so much, not only as a lover but also as a father figure in my life. You have shown me that sex is more than just fucking, it is a commitment to the other persons pleasure putting your own aside. I would love it if you would teach me everything you can about being a better person. I love sex but I love being made love to even more, you have taught me that. Carrie told me the same thing and I am sure from overhearing Mom and Carol they feel the same also.\" \n\nI blushed a little and smiled as I said \n\n\"Kim you are a beautiful woman, loving and caring and I love you also. Your Mom and sisters are wonderful lovers and I love them also. I have adopted you all as part of my family, not legally of course but in my mind. I have lived here for about three years now and you know about the women I have taken care of. I deeply care about all of them, you know that, and that being said I hope you understand that I will keep doing what I can do for everyone.\" \n\nShe dropped her eyes down and I could see a tear roll down her cheek, she looked up and smiled at me. \n\n\"Yes I know about everything and I am not jealous about any of them. I just want you to know how happy you have made me the past two days. I don't expect you to drop anyone for me or to marry me.\" She winked as she said that and came to me, hugging me tightly to her body. \"I just want you to love me and make me happy like you did today. Now how about some breakfast now that it is almost noon?\" \n\nWe had something to eat and had a quiet talk about our lives here in the valley. She phoned her mother to say she was ok and Julie asked if she could come over. I nodded that it was ok and it was only a few minutes before she walked in the door. \n\nJulie took one look at Kim and took her in her arms kissing and whispering to her, telling her how happy she was for her. She knew that Kim was a woman now and had experienced what lovemaking was all about. \n\nChapter 59 \n\nI spent the next few weeks doing what I usually did, taking care of the property and my \"harem\". I had trimmed back the bushes to let them rest during the Fall and Winter seasons, not that the winters were bad here but I think it was a good thing to ease them into hibernation. I had to think about my nudity now that the weather was cooling down and decided to just dress in minimal clothing as much as possible when I was outside. The house was well heated so it wouldn't be a problem inside. \n\nI got a call from Julie inviting me for dinner on Saturday. I agreed and asked what I could bring and she said some wine would be ok and beef was on the menu so maybe a red wine would be appropriate. I had a few cases of assorted wines so I could just pick from my stock. \n\nSaturday came around and after lunch I took my wine and headed to Julie's house. I knocked to be polite and went inside. I chuckled to myself as I wondered if I should have brought a pair of boxers to hang on their mail post like they did with their bras outside my driveway. I looked in the kitchen and didn't find anyone there so I put the wine in the fridge and looked in the backyard to see if anyone was there. Julie and the girls were standing by the grill having a conversation about something. I opened the back door and was welcomed with broad smiles when the saw it was me. \n\n\"Hi girls, what's going on? Having a problem or have you just decided it was a good place to talk? I asked. \n\nJulie said she was planning on putting a roast on the grill but didn't know how to cook a big piece of meat on it. I asked if she had a rotisserie for the grill and she looked at me like I was nuts. I took it from the look she gave me that either she didn't know or didn't have one. She pointed to the shed and I went to look and see if there was one stuffed away in there. Carol came over with me and told me that there was a box of stuff that came with the grill that had never been unpacked. We found the boxes and low and behold there was just what we needed plus quite a few additional parts. I brought out what we needed and installed it on the grill. I asked how big the roast was and calculated when it would have to be started and added it to the menu list that Julie had made out. \n\nIt had started to get warm in the afternoon sun and because Julie's backyard was secluded we decided to continue the custom of being naked. We heard a car and soon Mary and her daughters came around the side of the house and seeing us naked stripped off their clothes and joined us in the freedom of being textile free. I had spent many, many hours being with Rachael and Jenny and seeing them nude today was as exciting as the first time I saw them. \n\nWe sat around the talking about the goings on in the town and the girls all had plenty of gossip, unfortunately a lot of it included me. I have always been closed mouth about what the \"harem\" liked or did with me but it seemed that the ladies didn't share the same philosophy. I laughed with them as they told what Lois had told them about our trip to Ottosburg and she related how they had all but killed me with their hot pussies. The girls thought that Lois had added to the story to make it more interesting but I said she told the truth and I had to leave them before I couldn't walk out under my own power. \n\nIt was time to start the roast so I left the girls and their stories to get it started. I mounted it on the spit, connected the power cord and making sure it worked as it should I closed the cover with the burners on high to sear the meat. I could hear the laughter coming from the story telling group and could tell they were having a good time, little did I know how much fun they were having in my absence. The meat browned up nicely and I turned down the burners to a slow cook, set the timer and rejoined the girls. \n\nJulie asked if I would make them drinks and I went to gather the ingredients I would need. I played bartender and delivered the ordered drinks to the naked ladies sitting in a circle. I had to suppress a laugh as it reminded me of the game we used to play as a kid called \"Spin the Bottle\", I knew that this group would love to play that game. I sat in a chair outside the circle and listened to their stories about who did what and to whom. ",
        "I noticed that as the stories were being told the girls would touch themselves on the breast or pussy, not so much to get off but just to keep themselves comfortable with one another. \n\nCarol was sitting next to Rachael and reached over pulling her face around and kissed her deeply on the lips. Rachael caressed Carol's breast, causing her to moan and return the favor. Rachael fell backwards on the grass and Carol followed her down never breaking the kiss they shared. I could see that this was going be the start of bigger things and I settled back to watch them visit the isle of Sappho. All of the women around here were Bi so it was no surprise to see any of them pair up with one another. I didn't feel threatened by lesbian acts because I was the only male around and I couldn't do all of them at the same time so they had to find their pleasure where they could find it. \n\nCarrie got up and went into the house and returned with an armload of toys for everyone to play with. She handed a dildo to Jenny and sat opposite her playing with her wet pussy. Their feet were sole to sole and they looked one another in the eyes as they fucked themselves with the fake cocks. They were pretty hot and I could hear their cunt juices squelching as they forced the rubber cocks in and out faster and faster as they approached orgasm. \n\nJulie and Mary had grabbed the double headed dong and were fucking one another, their legs scissor with each other, their clits banging together as they rode the sixteen inch cock burying it deep into themselves. They had gripped each other's top leg and used it to pull their partner against themselves harder and harder. I just stroked my hard cock slowly waiting for one of them to want a real cock fucking. I just hoped that they all didn't want me at the same time. \n\nThe timer on the grill went off and I got up, my cock swinging and bobbing in front of me as I went to check and baste the roast. I checked the temp and figured that it needed another half hour or so and it would be ready. I returned to the group just as Julie and Mary had a massive orgasm, squirting their sweet pussy cream on each other's cunt. \n\nI let them rest a few minutes and told Julie that the meat would be done shortly and we needed to get the rest of the dinner ready. Everyone was still going at it like they were possessed by some outside force and Julie, Mary and myself went inside to get the rest of the food ready. Julie had made a selection of salads and there were bowls of chips with dips along with a cut vegetable tray. \n\nWe had decided to eat inside so we set the table and Mary went out to tell the girls to get cleaned up for dinner. In the meantime Julie was amusing herself sucking my cock so I could get rid of my erection. She was a master of deep throat and took me to the root every time she bobbed her head down my shaft. Mary came back in and got on her knees next to Julie and asked her to share my cock with her. Julie slid off my cock and pointed it at Mary and she inhaled it just as Julie had done. Julie was fondling my balls as Mary sucked me and I could feel the cum starting its journey up my shaft. Mary took the first squirt and quickly shared my cock with Julie and she took the next spasm down her throat. She sucked me a few times and returned me to Mary who finished me off. I backed up until I felt a chair behind me and collapsed into it, my knees weak from the intense orgasm they had given me. \n\nA round of applause sounded from the doorway as the rest of the girls clapped for the show their mothers had performed on me. \n\nMary and Julie had poured a glass of wine and rinsed their mouth out with it, smacking their lips in appreciation of the fine taste of cum mixed with Merlot. I recovered and with a flaccid cock swinging between my legs I went to get the meat off the grill. \n\nThe roast was done to perfection and putting it on a platter I went back in the house only to find the ladies sitting in a circle again, leaning back on their elbows with a dildo's in their cunts. \n\n\"Jesus girls, how am I supposed to carve the roast with all of you so damm sexy all the time? How are you going to eat? It looks like you are already stuffed.\" \n\nJulie responded, \"Mike, just concentrate on carving the roast and be careful that you don't carve the important meat. We are just getting ready for dinner to served, keeping our meat warm so to speak.\" \n\nThey all got up and with their pussies stuffed they sat down at the table. I was having trouble concentrating on my job as I couldn't help looking at the seven sets of breasts before me. They were all well endowed and as much as they looked the same, they were as different as a box of chocolates. I managed to get done without any mishaps, serving the ladies before sitting down myself. \n\nWe all enjoyed the fine meal, joking with each other with light hearted banter. I noticed a lot of squirming among the girls and knew they were keeping themselves worked up for the activities' that was sure to follow after we finished eating. I didn't need any added stimulation to keep my cock hard and it bobbed and twitched under the table as I watched the antics of the girls as they got more and more excited. I wondered how they could eat and masturbate themselves at the same time. What I didn't know that the dildo's they had were also vibrators set low enough to be almost silent but give subtle stimulation. \n\nWe finished up the main meal and Julie asked me to get the dessert from the counter. I looked and saw a cake sitting on a cake plate, decorated with hearts and flowers. I took the plate to the table. As I set it down I realized that the hearts were really butts sticking up in the air and the flowers were miniature cocks nestled in mock pubic hair. I laughed and said that at least it looked like I was going to get a little help. \n\nI cut the cake making sure to give a butt and a cock to each of the girls. I thought the cake tasted a little strange as I chewed my first bite and the girls looked at me expecting me to say something. I decided to play dumb and forked another piece bringing it to my mouth. They girls ate their cake slowly watching me as I ate mine. My cock had resurrected itself as I ate and the girls all flushed a little as they got little orgasms from the vibrators in their cunts. I felt a little flushed myself and wondered what the hell they had included in the cake. My cock had been hard before but now it felt like it would burst. I asked what was going on and Julie just smiled and said that I had been wishing for some help so they had got me some. \n\nShe and Mary got up from the table and cleared the dishes and leftovers, the ends of the dildo's sticking out of them as they worked. The five other girls took my hand and led me into the other room sitting me down in an armchair, my cock waving in the air like a flag in the wind. \n\nRachael being the oldest took out her dildo and sat herself on my lap impaling herself on my shaft. She ground herself down until her cunt gripped me around the root, her juices streaming out of her wetting my balls. I could feel the cum boiling in my balls but it just stayed there boiling away. She fucked herself on me for a few minutes and I saw Jenny remove her dildo. Rachael groaned, stiffened out and with shaking legs got off my lap. \n\nJenny immediately replaced her and did the same thing, washing my balls with more cunt cream as she came pretty hard. She was a quick cummer and I enjoyed her ability to almost cum at will. Carol was next and she faced me as she sat down with her legs over the arms of the chair. Her position opened her pussy lips and I could feel her puckered flower teasing my cock. She let herself down and her hole opened to take my cock into her warm slippery tunnel. Her walls gripped my cock as she worked herself up and down on the shaft. I was amazed that I could stay with them and not cum as I was hard and plenty stimulated from watching them cum all during dinner. Carol gushed her juices on me as her eyes rolled back in her head, holding her breath she quivered and shook as her orgasm took her over. She slumped against me and after a minute or so she managed to extradite herself form my cock. \n\nCarrie and Kim must have flipped a coin to decide who was next and Kim must have won as she reached down, flipped her dildo out and jumped me aiming her cunt at my cock. I slid into her easily and she took right off fucking like it was going to be her last time. Kim hadn't straddled me like the others but had her feet on my legs and just fucked me until she came hard drenching me from belly button to mid-thigh. She slid off and sucked my cock for a minute cleaning me of her nectar. \n\nWhile Kim cleaned me, Carrie stood on the arms of the chair and fed her pussy to my mouth. I lapped at her cunt and as her clit emerged I sucked it hard strumming it with my tongue. She rewarded me with a little squirt and she looked down to see that Kim had finished so she slid down, took my cock in her hand and her pussy slid down over me like a velvet glove. I looked at the other girls and they were taking care of each other with fake cocks, fingers and tongues, whatever was available. \n\nCarrie was in no hurry to cum and she just reveled in the hard cock taking up space in her cunt. I knew from experience that Carrie was cumming almost all the time without going over the cliff. Her breath had changed and it was almost a gasp every time she bottomed out on me. I couldn't do much to help her because she had me pinned to the chair but held her hips and would pull her back on my cock every time she rose up. She finally let out a primal scream and came hard on my cock squirting all over me. She didn't get off of me but as she rose up a little I felt a mouth sucking my balls in another warm cavern. Carrie had another cum and sank down on me resting against me, her puffy tits against my chest. \n\nI still hadn't cum and I wondered what they had put in the cake. Mary and Julie had been patiently waiting for the girls to get done with me and they came over and sat on the arms on the chair. They snuggled on each side of me and their full tits were all over me. Carrie got off of me and staggered over to the couch to rest. Kim immediately grabbed her, spreading her legs so she could suck her sister's pussy. \n\nMary and Julie got up and took my hands leading me to the bedroom and pushed me down on the bed. I wiggled until I was in the middle of it and they laid down with me the filling of a beautiful sandwich. Their soft mature bodies were a welcome feeling, their hands rubbing me and exploring where ever they wanted to go. I could feel their nipples and they stabbed me on each side and I had to wonder what they had planned for me. I didn't have to wonder very long before Julie mounted my cock and Mary took advantage of my mouth, facing Julie so they could play with each other as I played with them. I knew they were kissing and massaging each other's breasts as I fucked one and ate the other. Mary was a tasty treat and I sucked and lapped at her sweet pussy licking with a flat tongue from taint to clit. My cock was filling Julie and she was swiveling her hips like a weed in the wind. \n\nIt felt like I was on a continuous cum without shooting my load and as much as I tried I couldn't get any closer. My balls were starting to hurt and I needed to cum bad so I tried to get to the top of my personal mountain. Julie had her orgasm and switched with Mary. I told them that I needed to cum and Julie got off my face as Mary got off and got on all fours. Julie took my cock in hand and aimed it at Mary's cunt as I pushed into her with a slow smooth stroke. I grabbed her hips and started to pound her pussy hard and fast. I was so turned on I was like a madman as I fucked her deep and hard. She was going as crazy as I was, fucking me back with as much vigor as I was giving her. She was squirting her juices out at me as I pounded her without stopping for a break. I felt her cum hard and she collapsed down on her forearms and head, her ass and pussy still pointing at me. I considered fucking her ass but since it wasn't my favorite thing to do I passed on the opportunity. I felt my cum start its journey up my shaft and as I stroked I blasted rope after rope of my seed into Mary's cunt. I was light headed and leaned on her ass and after I slipped out I just fell to one side to rest. \n\nI heard clapping and raised my head to see everyone smiling and cheering my demonstration. Carol came forward and put her head between Mary's legs slurping our mixed cum from her dripping cunt. Mary just moaned and raised her hips to Carol's mouth encouraging her to keep her tongue moving in her pussy. \n\nJulie lay down next to Mary and opened her legs, inviting anyone to lap at her wet gash. I was surprised when Kim came forward and got into a 69 with her mother. She lapped at her mother as she was lapped in return. \n\nRachael and Carrie went into the living room and pretty soon Carrie was rubbing Rachael's pussy while she licked at her clit. She had grouped her fingers and was finger fucking her friend hard and fast. Rachael pulled on her hips and Carrie swung around as Rachael fingered her in return. \n\nJenny came to me and sat in my lap and just snuggled against me as we watched her sister and Carrie taking care of each other. Rachael had four fingers in Carrie and I wondered if she was going to fist her. I didn't have to wait long as Carrie pushed her hand into Rachael and Rachael did the same to her. The both of them hunched down on the hand in their cunt's, their juices sloshing out of them coating their arms almost to the elbow. I couldn't believe that Carrie could take a fist but remembered that Rachael had small hands so she was probably the ideal person to do her first fist. \n\nThe girls were laying side by side, legs splayed wide apart, a hand buried deep in their cunt, their hips pumping in a fucking motion as they made love to the hand filling them up. Carries nipples were more aroused than I had ever seen them, the areola puffed out about an inch and a half, the nipple extended about another inch beyond that. Rachael's nipples were hard but her outstanding clit drew my attention, it was sticking out of its hood, a pink pearl wet and glistening, waiting for someone to suck on it. \n\nI motioned to Jenny to join me next to the girls and she knelt by Carrie and sucked one of her nipples hard while she pulled and twisted the other. Carrie moaned and screamed as she was tortured by the two sisters. I took Rachael's clit between my lips and sucked it hard holding it while beating it with my tongue. She raised her hips to me and joined Carrie in a cacophony of noise that could have led people to believe they were being murdered. They were begging us to stop and at the same time telling us to never stop, we didn't pay any attention to what they said and worked to send them over the edge of the cliff. The girls were screaming and crying as they fucked each other and in return were being teased and stimulated by Jenny and me. \n\nThe four other women came in to see what all the noise was about and they decided to join in and help us do what needed to be done. Mary and Kim came over to where I was sucking Rachael's clit and I backed away to let them take over. Mary went to her daughter's clit and took over for me. Kim sucked her nipples and reached past Carries hand and using the lube produced by her sisters hand stuck a finger up Rachael's ass. That sent Rachael over the edge and Carrie screamed as the cunt gripping her hand squeezed it harder that it had before. She knew enough not to pull it out so she wouldn't hurt Rachael. \n\nFeeling Rachael cum so hard sent Carrie flying to the heavens as everyone worked on her. I sat back and couldn't believe how intense these two women were cumming. \n\nRachael finally stopped moving and Carrie was able to retrieve her hand as well as sliding Rachael's from her. She held Rachael's hand with the one she had fisted her with and licked their juices from both hands. She was almost ready to fall over and I went to her and helped her lay next to Rachael, wrapping their arms around the other. I went and got a blanket and covered them up as they held each other recovering from their ordeal. \n\nJulie just sat back and shook her head disbelieving what she had witnessed. Mary was playing with her cunt watching over everyone. Kim and Jenny sat together hugging and kissing and I think they were planning a similar session for themselves. I know Jenny could take Kim's fist but I hoped that Jenny would take care to prepare Kim for the experience. \n\nBTW I never did find out what they put in the cake but I was ready to fuck for the next few days, not fully hard but more than willing to be. \n\nChapter 60 \n\nSummer was over and fall was taking over really fast. The temperature was cooling off and it put the brakes on my nudist adventures outside. I would have to wait until next summer to continue my freedom from textiles. I had looked into nudist camps in the south but I really didn't want to move from the valley. I would have liked to buy a large tract of land and establish a private camp where like minded people could indulge in a textile free life if only for a few weeks every year. Ideally I would establish a series of year round homes in a community for the dedicated nudist. I thought that I could make a good business selling the idea to that section of the population. \n\nI had given a lot of thought to families as well as childless couples and thought it would save a lot of trouble to have an adult's only community. I didn't have anything against kids and nudity but it could open a bag of worms at some point so why chance it. \n\nI didn't have the money to finance such an operation but it was nice to dream and do a what - if - plan. In the meantime I could maintain my own lifestyle in my own home and property. Not really mine as I rent the house and land but I didn't see Grace throwing me out on my ear right away. \n\nGrace would show up from time to time and would strip off her clothes as soon as she entered the house, not necessarily to have sex but just to experience the freedom of nudity around other people. Most of the houses that my \"harem\" lived in were pretty remote and I think they went nude around their own homes most of the time. I know Mary and her girls spent their time nude as well and Julie and her brood. When I went to their houses I stripped as soon as I entered the door for the same reason as Grace did although it did lead to some sort of sex more often as not. \n\nOur little valley was pretty much out of the way to mainstream traffic so we had a lot of privacy, most people just breezed thru without stopping. I often wondered what they thought when they saw a bra hanging from my post by the driveway as they drove past. I chuckled at the thought because apparently the girls had decided to have their own signal that I was \"busy\", \n\nsomething that I was unaware of for quite some time. \n\nIt was mid fall when I got a call from Amanda wanting to know if I was up for some company, I said I was and she said she would be along in a few minutes. True to her word, Amanda drove up to the house in just a few minutes, she must have called from town. Getting out of her car, I couldn't help but admire her figure, dressed to the nines and very form fitting. I knew from experience that her shape wasn't due to help from under things but a from a gym regimen. If anyone was to guess her age they would have thought early forties rather than the sixty plus she really was. \n\nI opened the door and greeted her with open arms and a warm passionate kiss. She responded in kind and my cock pressed against her belly, getting harder as she held me tight against her. We were both breathless as we broke apart and I led her to the couch in the living room, motioning her to sit and asking if I could get her something to drink. She asked for a glass of wine and I went to get it for her. ",
        "I returned with the refreshments and she had made herself comfortable, apparently when I met her at the door naked she must have thought I was ready for some bed time. I remembered that I had not talked to her since I decided to take a nudist attitude in my own home. I smiled as I took in her naked beauty as she sat demurely with her legs together on my couch. She asked what was so funny and I explained what I was thinking and she shrugged saying that she just wanted to be comfortable. \n\nWe talked for awhile and I asked what she had been doing since our last meeting and she said that she had been involved in her church and was going to run for town council. She told me that was the reason for stopping because she probably wouldn't see me until she was out of the public eye. I told her I understood and although I would miss her exuberant sexual antics I would not do anything to hamper her campaign for office. I knew that people would look for any flaw in her personal life but wouldn't find any here as far as I was concerned. She went on to explain that she had stopped to talk to Lois and explained the same thing to her. Lois said she understood and would miss her. She also told Amanda that she had found someone that she wanted to make a life with if he turned out to be a nice guy. That explained why I hadn't heard from her in the past few months. \n\nShe finished her wine and got up and put her clothes back on saying that as much as she wanted to fuck my brains out she was on a tight schedule and had to go. I took her in my arms again and kissed her as we parted for the last time. I was sad to see her go as she had become a good friend as well as a hell of a sex partner. I said that I would look her up if I was up her way and perhaps we could have lunch in a very public place so everyone could see that it was on the up and up. She had a tear in her eye as she turned away from me and went to her car. I guessed that I had closed the door on another chapter in my life. There were lots of memories to keep me remembering Amanda James. \n\nThe years passed by quickly and the younger set had left the valley, gone to college and found partners to share their life elsewhere. Most of my \"harem\" had found partners, some had married and some elected to maintain an alternative lifestyle. \n\nI was now in my early seventies and was grateful for the full life I had adopted since I moved here about twenty years ago I had made a lot of friends, had many lovers over the years and didn't regret any of it. \n\nGrace, Julie and Jasmine were the last of my lovers that still needed my services and I am sure if they wanted to find someone they would have no problem as they were beautiful women. I couldn't get over how full of life they were, always ready to try something out of the ordinary. \n\nI was sitting on my porch, naked as usual, the warm summer sun making the world around me like the paradise I always wanted. I heard a car turn in the drive and my small group of lovers got out of the car, stripped and joined me on the porch. I asked what the reason for the unexpected visit was and they said they had come to celebrate the anniversary of me coming to the valley. I had forgotten that it was this time of year when I discovered this little piece of heaven. \n\nI asked what they had in mind and they said that we were going to have dinner at Graces so we would have to get some clothes of for the short journey to her house. I made a face and they teased me about my penchant for nudism. I reached inside the door and found my shorts, a t-shirt and stepping in my loafers I was ready to go. I started to go to my car but they steered me to the one they came in so I just went with the program, I had learned a long time ago that when they wanted me to do something they usually got their way. \n\nI had sat in the suicide seat and before we got to Grace's someone from the backseat placed a blindfold over my eyes, whispering in my ear to relax and enjoy myself. We slowed down and pulled in the driveway, the girls opened the door and led me around to the back yard. I could smell food and the scent of cooking meat on the grill. Being totally confused I just went where the hand on my arm led me and sat down when I was told to. \n\nJasmine kissed me on the cheek and removed my blindfold and I was overwhelmed when thirty five or more people yelled surprise. I couldn't believe my eyes when I looked around and saw all the people that had left the valley over the years along with their spouses and children. I had the fleeting thought that I was glad my shorts were long enough so everyone couldn't see that I was commando under them. \n\nOne by one the women all came up to me and gave me a kiss and a hug. They weren't just cheek kisses but full mouth kisses with a little tongue thrown in for good measure. I could see their husbands or partners smiling as they came to me so I guessed they had permission to do what they wanted to do. \n\nMary brought two adorable little girls up to me and introduced them as her grandchildren from Rachael, Jenny hadn't produced any as of yet but she laughed as she said she was trying. \n\nCarol brought her little boy that she had adopted, Kim and Carrie had theirs in tow right behind her. \n\nI was almost in tears as I saw all my lovers in one place again. It had been years since everyone had been together and this was going to be a normal party for a change. I couldn't help but remember some of the wild parties we had on the Fourth of July, Memorial Day or Labor Day. Birthdays had always been special and no one ever was exempt from a celebration. I didn't know how much their spouses had been told about our life here in the valley so I let the conversation be led by the ladies. \n\nThe kids were old enough to listen to the conversations so everything was kept just this side of a PG rating. Everyone had many laughs being reminded of the great times we had together. \n\nI had a chance to talk with Julie's girls and they had told their husbands about the lifestyle here in the valley. They didn't care about what went on before they had gotten married so there was no need to hide my feelings for them. I did have mixed feelings for them, part father , part lover and part benefactor. I had paid for a good deal of their college education and they were very grateful for the help I had offered them as well was Julie who showed her appreciation many times over. \n\nIt seemed that everyone was above board about our community so I was able to relax and enjoy everyone's company. I had to admit that a party with other men included was a welcome relief, I was getting old and I was sure if I was the only man present and had to take care of a number of the women like I had been able to in the past I would have fell short of the goal. Looking at all the women present that I had made love to I had to feel privileged to be the male that had made their lives worth living for so many years. Many of the husbands approached me asking what my secret was and I told them that there was no secret, just honesty, respect and putting my pleasure second to theirs. I told them that I loved every one of them and wished nothing but happiness for all of them. \n\nThe afternoon was winding down, the kids were getting cranky, needing a nap or some quiet time so before they packed up to leave I called for their attention. \n\n\"I want to express how much I appreciate the effort all of you made to attend today's party. I know many of you traveled many miles to be here. I came here over twenty years ago and was welcomed with open arms into your community\" \n\nA few laughs and chuckles let me know that they were thinking arms weren't the only things open and I continued. \n\n\"I feel I was part of a family here. I tried to be a person that would listen to your problems and offer advice if I could and know when to keep quiet when all you wanted to do was talk. You all responded with love and respect not only for me but for one another. You all respected each other's needs and were never jealous of one another. I never thought I would ever find a group of people who were so in tune with one another. So in an attempt to keep this short and to quit while I am ahead I want to let you all know how much I love all of you and to thank you for loving me.\" \n\nI sat down with tears in my eyes and could see that I wasn't alone. They party started to break up and soon it was just me and Grace picking up the few items left to be put away or disposed of. \n\nWe had a chance to sit with a glass of wine as we enjoyed the warm evening. Grace snuggled into me and we just sat and enjoyed the time we had together. I remembered the journals and tapes that I had found that Grace's father had made and asked her what she ever did with them. She told me that she had destroyed them and I made a mental note to myself that I had to get rid of the DVD's that I had made from the tapes. They would do no one any good and would only cause hard feelings if they were made public. We were both tired and after relaxing with another glass of wine we went to bed and promptly fell asleep. \n\nThe bright morning sun woke me up, Grace snuggled against me her nipples hard from the cool night air stabbing into my side. I smiled to myself as I thought to myself how comfortable I was in my life here. She started to awaken and I bent down and gently kissed her lips. \n\n\"Good morning sweetheart\" she murmured as she sucked on my lower lip. I pressed my lips to hers a little harder and she reached up and pulled my head down to return my kiss. We held one another as we woke up, my hard on pressing into her as hard as her nipples were doing to me. She rolled over on me and her legs straddled mine, her pussy pressing my cock against my stomach. I could feel her wetness as she rocked against me, grinding her pussy and clit against my cock. Her breasts flattened against my chest, her cunt taking longer and longer strokes as her excitement escalated to a near fever pitch. I could feel my cock nudge her wet tunnel , she tilted her hips and I slid into her velvet glove. \n\nHer muscles clenched as she had her first small orgasm as I pumped my hard shaft in and out of her. I knew I wouldn't last very long so I had to do something to get her higher up the mountain. I reached around her and slid the tip of my finger in her ass, she groaned deep in her throat and pressed her pussy harder on me so her clit pressed against my pubic bone. I wanted to flip us over but she had me pinned down kissing me and fucking my hard cock. I kept moving my hips to match her motions and she worked herself to a strong climax. I could feel my own climax coming and let it shower her insides, flooding her until it ran out around my cock. \n\nShe let my cock soak in her cunt as she talked about how much fun we had yesterday at the surprise party they threw for me. I had to agree and told her how much I enjoyed meeting all the spouses, significant others and kids. I slipped out of her wet pussy, my cock slipping along her thigh as gravity pulled it downward. Grace got up and went to clean up and I considered following her for a little wash and tickle. I waited for her to finish up and she came out drying herself with a soft fluffy towel heading for the kitchen. I cleaned up and joined her for a cup of java and some breakfast. \n\nI sat quietly eating and Grace asked what was the matter. I told her nothing was the matter, I was just thinking about all the blessings I have had here in the valley, how many people made me happy and hopefully how I made them happy as well. I explained that it was a bittersweet moment to see everyone happy with someone else and felt a little left out, after all I was the center of attention for many, many years. \n\nShe smiled at me and told me that I had indeed made many people happy in their lives and because I had, it enabled them to search out the right person to want to share their lives with. She added that I had taught the younger women that intimate moments were important and love and lust were different but also a partnership to be enjoyed with equal gusto. \n\nGrace explained how Julie's girls had come to her and talked about how much I had schooled them in lovemaking. She laughed as she said she would bet their husbands were very happy in the bedroom and they probably were taught something that they weren't expecting from the girls. I had to agree and said they were defiantly tigers in bed. I knew that if they were to fuck me now I would have a lot of trouble keeping up with them. \n\nWe strolled outside and checked around to make sure everything was cleaned up and I offered to clean the grill before going home. Grace reminded me that I wasn't leaving until she was ready to take me home as I didn't have a car here. \n\nWe made love again before she took me home and I kissed her deeply before I got out of the car asking if she wanted to come in, she declined and said she would see me later in the week. \n\nI waved good bye, stripped off my clothes and went to my house to relax and rest from the party and great sex with Grace. \n\nI remembered that I was going to destroy the disks I had made years before and got them out of their storage place. I remembered all the facts that Jim had wrote in his journals and had to laugh to myself that he had just scratched the surface when it came to the sexuality of all the women that I had made love to over the past twenty years. I destroyed the disks and immediately felt a weight lift from my shoulders because I knew they would never fall into the wrong hands. \n\nIt was almost supper time when I heard a car drive up to the porch and was surprised when the front door opened and Carol and her sisters came in. They started to strip off their clothes and my puzzlement must have showed on my face. They explained that they had been naked in my house since they turned 18 and why would I expect anything else now. I smiled telling them to make themselves comfortable. They went to get towels to sit on and we talked for about an hour before I inquired about their kids and husbands. They said that Jasmine had stopped by and she and Julie were taking care of the kids and their husbands were sitting watching some ballgame. \n\nI asked how much of our relationship they were privy to and the laughed as they said that their husbands benefited from my tutelage in the sexual arts that I had taught them over the years. I had to admire how firm their bodies were after having their children, their tits still perky despite their fullness, tummies flat with just a slight pushin cushion. \n\nI remembered how great the sex was with these three sex bombs and was getting hard in spite of myself. Thy noticed my condition and teased me about being an old horn dog. I laughed and told them I had to agree with them but in defense of myself it wasn't fair to show me the goodies and not expect me to look at the menu. I was sure they were doing their best to tempt me as they sat with their legs wide apart showing me their delectable pussies. \n\nI asked if they wanted something to drink and they all asked for wine at the same time. Things sure haven't changed over the years with them thinking alike all the time. I wondered if they shared their husbands like they had shared me. It had been ten or twelve years since they had finished college and moved away and we had not been together since then. It seemed like yesterday when I was slamming my cock into one of them or the other. My cock was betraying me getting harder all the time, precum leaking from the end and pulsing with the beat of my heart. \n\nCarol looked at her sisters an asked if they were in agreement about what they had discussed, they nodded and the three of them attacked me, kissing and fondling me just like the old days. I was in heaven having three beauties trying to get close to me. \n\nCarol was on her knees between my legs, holding my cock and licking its head slowly. Kim was on my right and Carrie was on my left sitting close to me, twiddling my male nipples, whispering sweet nothings in my ear. I have to admit I was more excited than I had been in a long time. My cock dripped precum and Carol lapped at it eagerly smacking her lips to let her sisters know how much she enjoyed the taste. She slid her lips over the head, gripping me, sliding down the shaft until her nose was bumping my pubis. Her throat opened every time she bottomed out and I was sure I would shoot my load down her gullet if she didn't slow down. Kim nudged her and she held my wet cock out for her to take over. \n\nThe break was all I needed to regain some control over my orgasm and I sat back to enjoy the blowjob from Kim. Carrie had moved to straddle my face and lowered her pussy to my mouth. I lapped her sweet / tangy cunt cream as Kim sucked me bringing me to the edge of my cliff. She would stop just long enough to let me recover before starting again. \n\nCarol had come to my side and I had a few fingers buried in her pussy massaging her G-spot. I knew from experience that she would cum quickly and I added another finger to start filling her up. I tucked my thumb into my palm as she gripped my wrist and shoved my whole hand up her cunt tunnel. My forearm was pointing straight up and she took advantage of its position to fuck herself like she was riding my cock like a cowgirl. \n\nKim had stood up and straddled my lap, parted her cunt lips and drove my cock deep into wet gash in one steady stroke. She ground herself onto me with the same youthful abandon she had when she first came to my bed. I had a fleeting thought how much this was the same as it was almost twenty years ago. I just let Kim fuck herself on me as I gave her the occasional thrust when I caught her rhythm. \n\nCarrie was enjoying herself on my face, creaming me as she ground her hot wet cunt against my mouth. I was trying my best to stay with her swiveling hips and must not have done a good job because she grabbed my hair to control my head. I found her clit and sucked hard as she climaxed and rolled to the side. \n\nShe knelt to the side of me and faced Carol who was still riding my forearm, grabbing my hand she brought it to her pussy. I formed a pseudo prick with my fingers and slid them into her, driving them in as far as I could before tucking my thumb in my palm and fisting her sweet pussy as I was doing to her sister. I formed a fist and twisted it around in her so I would be stimulating her g-spot as well as everything else in her cunt. She reached for Carol and they hugged, hanging on to one another as they had one orgasm after another. \n\nKim was still fucking herself on my cock, rotating her hips round and round bringing me to a massive orgasm. She could feel my cock swelling inside her and told everyone in a very loud scream that I was cumming along with her. We reached out peak at the same time and the excitement of caused me to push deeper into the two sisters on my fists. They rose up until they were standing and held my wrists so I couldn't pull out of them, fucking my hand and forearm like giant dildos. They came at the same time and showered Kim and me with their powerful squirting girl cream. Kim lapped at their pussies trying to drink all the juice she could get. \n\nFinally we all were sated and lay in a pile on my bed resting in the afterglow of great sex. \n\n\"You sure haven't lost your ability to make love to all of us at the same time, you horny old bastard\" Carrie said with a laugh. Kim and Carol agreed with her and we all hugged each other as familiar lover do. I suppose I should have felt guilty making love to married women but I had a feeling that they were there with the blessings of all concerned. \n\nThe girls finally got up and dressed for the short trip back to Julies. Kissing my goodbye they left me with a lot of pleasant memories. \n\nI found out later that the girls shared their husbands with Julie as well as one another, exchanging partners often and sometimes for a weekend or more. I was pleased to realize that Julie had picked up my penchant for keeping private things private. ",
        "Epilogue \n\nA few years later Grace stopped to see Mike and found him in bed apparently sleeping. From the slight smell of decomposing flesh she knew that he wasn't sleeping but in fact had died in his sleep. She called for the authorities and they took the body away for examination. \n\nGrace called Jasmine and Julie and asked them to come to Mike's house right away. It was only a few minutes when they arrived to find Grace crying softly to herself on the porch. She was naked as was the custom in Mike's house and the removed their clothes also. \n\n\"What's the matter Grace, what's happened, where's Mike?\" they asked and Grace told them what she had happened. \n\n\"I guess I took my clothes off in respect to his memory, it just didn't seem right to be dressed and be in his house. I wanted you two to know before it was made public, I thought it was only right being that we have always shared so much.\" They all cried and held one another as they mourned the passing of their friend. \n\nAfter they pulled themselves together they thought they should go inside and look for anything the might give them some idea what Mike would have wanted to be done. As it turned out they found an envelope containing instructions on what was to be done upon his passing. There was a list of phone numbers for his kids and explicate directions what to do with his remains. He wanted to be cremated and if his kids didn't want his remains they were to be scattered here in the valley as they saw fit. \n\nThey decided to wait for the results of the autopsy before calling anyone because everyone would want to know what happened. It wasn't long before Grace got a call from the ME and it had been determined that Mike had suffered a heart attack and died quietly in his sleep. \n\nGrace let Julie and Jasmine know and they proceeded to make the phone calls that needed to be made. Grace called Mike's kids and had many questions about what happened. Grace said she would scan and e-mail the document she had found with Mike's instructions. They thanked her and asked if they should come out there to make arrangements or could they make them from back east. Grace said that if they wanted her to make the arrangements she would do that since she knew everyone that was available to make it happen and would let them know when things were set. They agreed to that and said they would arrive the day after tomorrow. \n\nJulie and Jasmine had called all the women that Mike had made love to over the past twenty years and everyone was saddened and shocked to hear the news. \n\nGrace had Mike cremated and arranged a memorial service. When she saw how many people were showing up she spoke to the funeral director and they decided they would need a bigger room than what he could provide so they decided that the town hall meeting room would be better. \n\nMike's children arrived and thanked Grace for all she had done and were amazed at the crowd attending the service. There was barely room for everyone as they listened to speech after speech extolling what Mike meant to everyone. His kids didn't know what to make of it and finally it was time for his son to talk to the crowd. \n\n\"I am sorry for your loss. It appears that our father was as much a part of your family as he was ours and in many cases probably more so.\" A chuckle spread thru the crowd as he said that and he suspected that there was more to the statement than he knew. \n\n\"I am gladdened to see how much our father was loved and respected in this valley that he loved so much. I think that he would want to stay here with all of you so we have decided to leave his remains here to do with what he wanted. Thank you all for accepting him into your lives.\" \n\nA few prayers were said and we broke up to attend a luncheon that had been prepared. We got a chance to talk with his kids and we said we would find a proper place to scatter his ashes and if they wanted to attend they would take care of it tomorrow before they left. They said they would like that and Grace said that she thought the land he took such good care of the past 25 or so years would be the perfect place. What his kids didn't know is that the funeral director had filled 30 or so envelopes with ashes and had given them to Grace before the service. She had given each of the women that Mike had made love to an envelope to do what they wanted to with it. \n\nThe women had decided that they would take Mike to their land and let him be a part of their lives forever. \n\nThe next morning when his kids showed up at Mike's house they were surprised to find everyone nude in his yard. They walked up to Grace and asked what was going on and she explained that Mike had adopted a nudist lifestyle and they were honoring his time on this earth. They were reluctant to join them but they soon felt uncomfortable being clothed and shed their coverings. \n\nGrace took the urn and stood apart from the gathered people, tested the wind direction and slowly let the ashes trickle from the urn. The breeze taking the fine powder where it wanted. \n\nEveryone clapped and cheered in celebration of his life rather than mourn his death. \n\nThe End"
    ],
    "authorname": "bourbononice",
    "tags": [
        "erotic coupling",
        "twins",
        "reunion"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/the-women-of-honey-hollow-pt-12"
}