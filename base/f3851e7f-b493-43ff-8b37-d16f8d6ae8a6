{
    "title": "Lucky Man Ch. 06",
    "pages": [
        "Kelly\n\nKelly was gyrating closely with Kara, the younger redhead's eyes closed and moving in time with the music along with her. She saw a large black man dance closely behind her new friend, and then felt the hand of someone on her own hip. She glanced back briefly as the newcomer placed a hand on her other hip and pulled her close, her ass pressing back into him. She glanced over at Duncan questioningly.\n\nShe knew that this would be a real test for the both off them. This wasn't a friend. This wasn't someone that they could trust. God knew what the younger man intended to do to her on the dance floor. She was surprised to find that the thought flashed in her mind and excited her.\n\nDuncan briefly looked concerned, but then grinned and even winked at her. Her excitement soared.\n\n\"Your husband is watching you with another man, whore!\" she thought.\n\nShe ignored the man behind her. With both hands, she pulled Kara close. Kara herself was staving off the advances of the black man behind her. The man behind Kelly reached up then and grabbed both of her breasts briefly, running his hands down her ribs and back to her hips.\n\n\"He's testing my boundaries,\" she realized. \n\nShe glanced up at Kara, who stared at her wide-eyed, still dancing to the thump of the music. The guy behind her had given up trying to put the moves on her and had moved on. He was replaced by two more, however, and Kara gave up trying to keep them off of her. Hands moved to her hips as both men took up a position on either side of her. She seemed to be able to ignore them, however.\n\nThe song seemed to pick up the pace a little and she could feel a stiff object hitting her in the rear every few beats. The young man behind her had gotten instantly hard when she hadn't pushed his hands away from her breasts. He moved them up again, brazenly groping for a few seconds before running them down her body. She turned then and faced him, shaking her hand in a \"no-no\" motion. He shrugged then and moved closer, his leg moving between hers.\n\n\"Kyle,\" he said, moving close. \"Sister?\" he asked, nodding over her shoulder at Kara, who had come up behind her and was dancing right up against her.\n\nKelly shook her head. She grinned then, a playfully naughty thought coming into her head. \"Lover,\" she yelled, turning and kissing a delightfully surprised Kara quickly on the lips before turning back around.\n\nThe young man looked at her in surprise and then smiled widely. He was obviously thinking it was his lucky night, envisioning a threesome with two gorgeous redheads.\n\n\"Poor kid,\" she thought, grinning. The song started to come to an end then and a new one was getting mixed in.\n\n\"I'm gonna go rest,\" Kara said, rolling her eyes at the guys that were pestering her. \"You okay?\" she asked.\n\nKelly nodded. \"I'm just gonna dance with this young man for another song or two,\" she said.\n\nKara smiled. \"Have fun!\"\n\nKelly grinned and winked. \"Always!\"\n\nThe young man smiled and moved close as Kelly turned away from him, letting him come up behind her closely again. He was a decent dancer, but seemed to be more concerned with letting his cock rub up against her butt. Kelly was no stranger to dancing. It had been one way that she rebelled against her mother after she'd moved out and gone to college. More than one man had tried what the young man was doing. She'd never let it go very far.\n\nHe moved one hand up and placed it directly on her breast, leaving it there, the other moving to her hip. He began to pull her forcefully back against him, causing her to giggle and wonder what he was trying to accomplish. She glanced over at Duncan and saw Kara sidled up close to him, the two of them watching her on the dance floor. She kept feeling Kyle's small, but very erect penis jabbing her in the butt. She rolled her eyes at her new friend and her husband. Both of them were laughing.\n\nShe continued dancing through the song, and then for a few more before spinning back around and placing both arms on his shoulders. She looked up into his face then, and saw that he was actually pretty cute. He was still rubbing his cock on her thigh though, and she was getting tired of his clumsy attempt to hit on her or have sex with her leg, whatever the hell he was trying to do.\n\n\"I'm gonna go rest,\" she announced finally, extricating herself, heading for her husband. Kyle obviously misunderstood and followed.\n\n*****\n\nDuncan\n\nDuncan grinned as Kara came up to him. He offered her a quick hug, and was surprised when she stayed underneath his arm.\n\n\"You okay?\" he asked. \n\nShe looked up at him and nodded. \"You're the only trustworthy guy here is all,\" she said, wrapping her arms around his waist. \"Doesn't that bother you?\" she asked, glancing back out on the dance floor.\n\nDuncan chuckled when he turned back. He saw the young man awkwardly thrusting into his wife, who was trying to dance with him. It almost looked painful for the guy.\n\n\"No, not really,\" he admitted. \"Is that weird?\"\n\nKara shrugged and squeezed into him. She looked up at him then and as he gazed down, he saw her subconsciously lick her lips, and then begin to chew on the lower one. \n\n\"She wants to kiss me,\" he thought. He felt himself getting erect then, and surreptitiously moved a hand to adjust his package so that it didn't push into her. He brushed against her hip as his arm descended to his crotch. She glanced down and saw him adjust himself.\n\n\"Did I do that?\" she asked, glancing back up at him.\n\nHe smiled and nodded. \"I really enjoy watching my wife out on the dance floor. I love to see her showing herself off and knowing that I get to have that when I get home. And then there's you. There's a hot little redhead that sidled up to me for protection, looking at me all seductively and clearly wanting to be kissed.\"\n\nShe blushed then. \"Is it that obvious?\" she asked.\n\nHe chuckled and patted her back. \"Don't be embarrassed, Kara. I want to kiss you just as much.\"\n\nShe smiled up at him then and turned back to the dance floor. He followed her gaze and the two of them burst out laughing at Kelly. She was awkwardly being thrust forward. The crowd was thick enough for her not to be noticed unless you were looking for her. She glanced over at the two of them and rolled her eyes and shook her head. They laughed and then lost her in the crowd.\n\n\"So tell me I was dreaming in the ocean today,\" she said suddenly, looking back up at him. He looked down into her blue eyes, the only clue that would give away that she wasn't his wife.\n\n\"God, you're beautiful,\" he said, causing her to blush and bury her head in his chest. \"Sorry,\" he said, lifting her face and chuckling. \"Dreaming about what?\"\n\nShe blushed again and shook her head, turning back to the crowd. \"Never mind!\" she said, still blushing.\n\nHe chuckled again and thought back to earlier at the beach. He remembered that she'd brushed against him when they fell and he suddenly knew what she was asking him.\n\n\"Oh!\" he said suddenly.\n\nShe turned and looked at him then. She saw that he knew what she was asking, and renewed her embarrassment, burying her face again. \n\nHe chuckled. \"Ask me again,\" he said, still looking down.\n\nShe turned her blue eyes back up to him again, but shook her head when she saw him looking and looked back to the dance floor.\n\nHe sighed, smiling as he saw his wife continuing to try and dance with the over-zealous young man.\n\n\"I guess you'll just have to wonder then,\" he said.\n\nShe looked up at him and glowered playfully while he smiled down at her.\n\nKelly finally emerged from the crowd then, followed by the young man. His face grew wide when he saw Kelly, his intended conquest, move up to and then kiss Duncan.\n\n\"I think we scared him off,\" Kara said, nodding at the retreating young man.\n\n\"What the hell was he doing to you out there?\" Duncan asked, a wide grin on his face.\n\n\"I was wondering the same thing. It almost looked painful!\" Kara agreed.\n\nKelly giggled. \"I think he was trying to fuck me with our clothes still on,\" she said, causing herself to blush as she realized what she'd said.\n\n\"Y'all wanna go sit down?\" Duncan asked, reaching for his wife's hand. Both girls nodded and followed him, their hands grasping at his. They moved back to their table and ordered another round of drinks. The girls on either side of him, Duncan smiled and put an arm around each of them.\n\n\"That poor guy,\" Kelly said. \"I think he thought that he was going to get both of us tonight,\" she said.\n\nKara laughed. \"I heard him ask if we were sisters. I didn't hear your response but I'm guessing it had something to do with you kissing me?\"\n\nKelly giggled and nodded. \"I told him we were lovers.\"\n\nKara laughed out loud. \"Well no wonder he thought he was getting some! That and how much you were letting him grope you!\"\n\nKelly shrugged. \"Duncan and I are learning to push our boundaries.\"\n\nKara was quiet for a few minutes while she processed the revelation, but then nodded. \"So are you guys swingers or something?\" she asked.\n\nKelly giggled. \"Funny you should ask that,\" she said, grinning up at him.\n\nDuncan returned her smile but shook his head. \"No, we're not swingers. We're thinking about it, though\" he said, turning and looking at Kara.\n\nShe smiled briefly, but tried to hide it. Duncan saw it though, and he was sure that Kelly did as well.\n\n\"I like to show Kelly off. I like watching other people lose their cool around her,\" he said. \"If they happen to get a squeeze of her breasts in, then so be it. It's all in good fun.\"\n\n\"It makes our sex life unbelievable!\" Kelly added.\n\nKara chewed her bottom lip subconsciously, listening in rapt attention.\n\n\"Kara had a question for me, but now she won't ask it,\" Duncan said.\n\n\"Stop!\" Kara protested, blushing and covering her face.\n\nKelly giggled and playfully slapped him. \"Stop embarrassing my new friend!\" she admonished. \"You can ask me and I promise I won't embarrass you.\"\n\nKara shook her head vigorously. \"I don't want you to be mad at me,\" she said.\n\nKelly smiled then and shook her head. \"Sweetie, unless you had sex with my husband without asking me, you aren't going to make me angry.\"\n\nShe glanced up at Duncan.\n\n\"He already told me that you accidentally groped him when y'all fell in the water this afternoon.\"\n\nKara blushed again then. \"Oh my God! I'm so sorry!\" she said hurriedly.\n\nKelly lifted her face then and shook her head. \"Sweetie,\" she said. \"Sweetie! It's okay. I was honestly hoping it wasn't an accident.\"\n\nKara lifted her face up slightly then. \"You aren't mad?\"\n\nKelly shook her head. \"Did you see Mr. Gropey out there on the dance floor having his way with my ladies?\" she asked, pointing at her breasts.\n\nShe nodded with a grin.\n\n\"Duncan didn't rush out there and pummel him, so it's a safe bet we're okay with a little bit of touching.\"\n\nKara nodded then, a curious little smile on her face. \"Come on then, let's go dance. I need to loosen up before I ask you my question.\" She pulled the two of them back out to the dance floor then. For the next couple of hours, the three danced together, the two girls on either side of him, Duncan spinning to face each. Finally, soaked with sweat, the three left the club and caught a cab back to the hotel.\n\n\"Y'all wanna go relax in the hot tub?\" Kara asked, surprising them both.\n\nKelly looked up at Duncan. He nodded with a smile. \"Five minutes?\" he asked.\n\nKara nodded. \"Let me just go check on Sam. I'll meet you at your patio.\"\n\nA few minutes later, Duncan and Kelly had stripped down and put on their swimsuits after slipping into a quick cold shower. As they exited, Kara was coming down the path behind the room.\n\n\"How is he?\" Duncan asked.\n\n\"Still out,\" Kara confirmed. \"I tried to wake him up to let him know I was back, but he was gone.\" She slipped the towel off, revealing the skimpy bathing suit that Kelly had bought her.\n\nKelly followed suit, and the three quickly went to the hot tub as Duncan turned on the jets. The trio relaxed for a few minutes, letting the warm water massage aching muscles.\n\n\"God this feels good,\" Duncan said. He leaned over and kissed Kelly. The warm water began to soothe their muscles, and for a good while, they sat in silence, looking up at the stars and just enjoying the peace.\n\n\"So your question...\" Kelly prompted, eventually.\n\nThe younger woman looked back at the two of them then and inhaled deeply. \"I was wanting to know if it was really as big as I felt,\" she said, exhaling the question in one breath.\n\nDuncan and Kelly both grinned. \n\n\"Yes,\" Kelly confirmed. She turned and grinned at her husband questioningly. He looked at her curiously.\n\n\"Would you like to see it?\" Kelly asked. Duncan was actually shocked at her brazenness.\n\nKara chewed her lip again nervously. \"If that would be okay,\" she said, eventually.\n\nKelly stood suddenly. \"First thing's first,\" she said, and began to undo her own top. \"There... now I feel better,\" she grinned.\n\n\"You're getting used to being naked?\" Kara asked.\n\nKelly nodded as she tossed the top onto a nearby patio chair. \"It's getting to the point where I really feel more comfortable when I'm in some sort of undress.\"\n\nDuncan looked at her doubtfully and shook his head. \"I really think it might be just this place,\" he said.\n\nKelly shrugged. \"Stand up, Baby,\" she ordered.\n\nHe couldn't believe she was asking him to do this. He turned and looked over at Kara. \"Are you sure? You have to work for me when we get back to Texas.\"\n\nKara looked up at him then and smiled. \"Oh yeah, I'm definitely sure.\"\n\nHe shook his head in amusement and did as he was bade, standing in the shallow hot tub.\n\nKelly moved to kneel beside him and reached up, untying the string at his waist. Kara stood then and hopped out of the hot tub.\n\n\"What's wrong?\" Kelly asked, suddenly growing concerned.\n\n\"Oh nothing!\" Kara exclaimed. \"If Sam asks, I can tell him that I wasn't in the hot tub with you when you got naked, and I won't be lying.\"\n\nDuncan began to have second thoughts then, but Kelly didn't, and quickly pulled off his trunks, his cock bouncing from its confines impressively.\n\n\"Holy shit,\" Kara said, practically leaping back into the hot tub. \"Jesus, that thing is big!\" she confirmed.\n\n\"So I hear,\" Kelly said with a smile. \"I've only seen a few, but my Baby is definitely the largest I've seen.\"\n\nKara slid close to his leg, her face tantalizingly close to his thigh. He glanced down and saw both redheads looking at his cock. It began to bounce to life then, quickly growing erect and curving upwards.\n\n\"God I love a good curve,\" Kara said, biting her lip again.\n\nDuncan began to get self-conscious then, and began to slide back into the water.\n\nThe girls stopped him quickly and bade him sit back on the edge of the hot tub.\n\nKelly quickly took it in her hands. \"I love the way it dwarfs my hands,\" she said grinning. \n\nKara looked enthralled. She turned and looked at Kelly. \"I know this sounds awful, but I just can't help it. I wish I'd come here alone so that I could plead with you two to fuck me,\" she said.\n\nKelly grinned. \"We might have done just that,\" she said.\n\nDuncan groaned as she stroked him up and down slowly.\n\n\"Another time,\" Kara said, smiling.\n\n\"Absolutely,\" Kelly agreed. \"Right now though, I think I'm going to take my husband to bed and fuck him,\" she said, a wide smile on her face.\n\nKara smiled then, pouting briefly but standing.\n\n\"You can stay and watch if you want,\" Kelly said, drawing surprised looks from the other two.\n\nWithout waiting for an answer, she pulled her husband from the hot tub and towards their room. She slid the patio door open and entered, quickly slipping off her bottoms. She pushed Duncan back on the bed and knelt on top of him. Her pussy was nice and soaked from the hot tub, and he slid deeply into her. He saw a movement from the doorway and grinned.\n\nDuncan groped her breasts roughly as she bounced on top of him. He pulled at her nipple rings, drawing moans of pleasure from her. The sheer pleasure that was being drawn from them was almost overwhelming. He released them then and playfully slapped her rump to get her moving again.\n\nGlancing over, he saw Kara hiding behind the curtain, watching quietly. Spinning her over to her back, he mounted his wife and slid into her again, his cock pushing in deeply.\n\nShe yelped in pleasure as she began to convulse on his cock then, her pussy contracting hard on him.\n\nHe groaned and began to cum then, his hips slapping against her thighs roughly, his cock shooting stream after stream of hot semen into her. He continued thrusting until the sensitivity made him stop moving, and the two finally held still. They glanced back over at the curtain and saw that Kara had gone.\n\nSmiling, Kelly reached over and grabbed a towel from the floor and began to wipe her husband's cock clean, and then herself. After wiping himself down, Duncan went and locked the patio door then, glancing out and seeing Kara's retreating form entering her own room before he did so.\n\nSliding into bed next to his wife, the two were asleep within minutes.\n\nThe next morning, light was peeking through the patio door and the sun was just above the horizon when Duncan awoke. Kelly was between his legs again, his cock in her mouth as she stroked him awake.\n\n\"This is definitely a habit,\" he joked.\n\nShe grinned. \"A habit I like,\" she confirmed. \"I can see why you like waking me up this way, it's fun giving you pleasure.\" She popped his cock back into her mouth and stroked more.\n\nHe heard his wife's phone go off and reached over to the bedside table and grabbed it. He clicked it open and saw a text from Kara.\n\nKelly glanced up and then back down when she saw that he had her phone, his cock sliding in and out.\n\n\"God I love sucking your cock,\" she said, pulling his cock out of her mouth for a moment. A naughty smile crept onto her face as he looked down. \"I wonder if it's just cock in general,\" she said. He glanced down at her in mild confusion.\n\n\"I mean, would I enjoy sucking any cock as much as I enjoy sucking yours?\"\n\nHe groaned in pleasure as the thought popped into his head, his wife on her knees in front of some stranger. \"Oh fuck,\" he groaned as Kelly quickly popped his cock out of her mouth and cum began to erupt from the tip. She stroked furiously and succeeding in spraying his chest and part of her face with the creamy liquid. \n\nGiggling, she reached for a fresh towel and began to clean herself off. He shook his head at her and took the towel that she proffered and began to clean himself.\n\n\"I'm thinking that was a fun thought to have pop into my head,\" she said, sliding up and kissing him on the lips.\n\nHe groaned in pleasure and pulled her on top of him, his cock probing gently at her pussy.\n\nShe pushed off of him though. \"Nope, no more for now. I'm going to make you wait again,\" she said, a playful look on her face. \"What did the message say?\"\n\nDuncan shook his head at her. \"You're going to make me have an orgasm at the beach if you aren't careful,\" he warned. \"It was from Kara,\" he said. \"She said she had fun, but that she needed to spend time with Sam today. She said he was doing better, but that they were going to take it easy. They might see us for dinner, or maybe breakfast.\"\n\nKelly pouted briefly, but knew that their two new friends definitely deserved some time alone. \n\n\"Gonna shower,\" she said, turning and heading towards the bathroom.\n\nThe two settled for breakfast on their patio, and then wandered around the town shopping and enjoying each other's company. They spent some time back in the hotel room, and then after lunch decided to head out to the beach.\n\n\"So did you want to try your idea from yesterday?\" she asked. He knew she was referring to him watching her from a distance, just to see what would happen.",
        "Duncan smiled. \"I'm game,\" he said. \"How frisky are you feeling?\"\n\nShe shrugged and blushed slightly. \"It's definitely gotta be something about being here,\" she said. \"I really wanted to let Kara have some fun with us last night.\"\n\nHe chuckled. \"I could tell. It wouldn't have been right, though,\" he said.\n\nKelly nodded. \"Oh I know, but still...\" she said. \"Did you enjoy watching that guy awkwardly hit on me?\"\n\nHe nodded, laughing. \"It's so weird to analyze and think back on, but yeah, I did,\" he confirmed. \"I enjoyed watching someone dance with my wife. Did you like being hit on?\"\n\nShe smiled. \"I mean, it was flattering, and it turned me on when he began to take a few liberties with me, but he was so awkward and his dick just felt so small.\"\n\n\"Well, Baby, not everyone is going to have a really big one,\" Duncan said.\n\n\"I know, I know,\" she replied. \"I'm just saying, it was the first time we've actually been trying to push our boundaries by someone we don't know getting a little friendly with me, and it would have been nicer to have someone that wasn't so goofy and awkward.\"\n\nHe chuckled and kissed her. \"No regrets though?\"\n\n\"No regrets,\" she confirmed, smiling.\n\nThey got dressed then, Duncan in his shorts and Kelly in her new bikini, and headed out to the beach.\n\nDuncan got her situated and waited until a group of younger guys sat near them then he made a show of looking at his phone and pretending to take a call. He stifled a laugh when he saw Kelly hiding her smile.\n\n\"See if you can get one of those guys to rub some oil on you. I'll head back to the patio. Take your sunglasses off if you need me or want the fun to stop.\"\n\nKelly nodded subtly.\n\n\"I'll be back in a little bit, Baby,\" Duncan said loudly. \"I've got to take this.\"\n\n\"Okay,\" she said, turning over to her back. \n\nThe beach was much less crowded today, and the temperature was very comfortable. He glanced over at her as he walked back toward their patio and ducked behind the lattice privacy fence. He glanced over at the group of younger guys. They were probably some college students on vacation. He chuckled when he saw them glancing over at her every few seconds. He saw one in particular being prodded more and more. The young man kept shaking his head and trying to play off whatever they were trying to get him to do.\n\nHe saw them glance back towards where he had disappeared to a few times. Finally, the group's prodding pushed the young man into action, and he rose to slowly walk towards Kelly.\n\nDuncan grinned.\n\n*****\n\nKelly\n\nKelly looked up at the young man as his shadow fell across her. She smiled.\n\n\"Hi,\" he said. \"I'm Jesse.\"\n\n\"Kelly,\" she said, waving her left hand and making a point to show her wedding ring. She wanted to make sure that the young man knew she was definitely married.\n\n\"Mind if I sit for a little bit?\" he asked.\n\nShe smiled and shrugged. \"I figured that's what your friends were wanting you to do,\" she said.\n\n\"Yeah, sorry about that. They keep trying to get me to talk to women and when we saw a woman as gorgeous as you out here by yourself, I guess they went a little overboard.\"\n\n\"Flattery will get you everywhere,\" she said playfully. \"I understand completely. My husband and I were in college once too.\"\n\n\"So you're married?\" he asked, his face a showing his disappointment.\n\nKelly grinned and held up her hand, showing her ring again. \"Six years,\" she said with a smile.\n\n\"What brings you guys to The Bahamas?\" he asked.\n\n\"My husband's company pays for vacations throughout the year. We just decided to come on this one,\" she said. \"This is their real big one that they have every year, so it's best not to miss it. Are you guys just here for the weekend?\"\n\nJesse nodded. \"Yeah, Dale's mom and dad are filthy rich and paid for the trip if we covered the rest. We're all staying in one room.\"\n\n\"Oh my!\" Kelly said. \"Six of you in one room?\"\n\nHe chuckled and seemed to relax a little. \"It's not so bad; we don't really spend a lot of time in it.\"\n\nShe smirked. Sitting up suddenly, she reached into her bag. \"Oh shoot,\" she said, pulling out the sunscreen. \"I totally forgot to put on sunblock.\"\n\nShe pulled the bottle out and stifled a grin as the young man tried to appear as though the thought didn't excite him. \n\n\"I have to be careful since I'm so fair-skinned,\" she said. \"Redheads don't usually go out in the sun like this without ample protection, but since it's February and I bought the strongest SPF you could, I figured I'd be out here for a little while without bursting into flames.\"\n\n\"Yeah, I imagine you'd burn pretty quickly if you didn't have protection,\" he agreed, laughing easily with her.\n\nShe caught a movement out of the corner of her eye and saw Jesse turn. One of his buddies was mouthing something to him and wiggling his fingers. She snickered quietly and wiped the grin off her face. He'd never get the courage to ask her that, she realized.\n\n\"Would you mind helping me?\" she asked, causing him to look at her in surprise. She offered him the tube of sunblock.\n\nHands shaking, he took the bottle and glanced over at his friends and then back at her. \"Of..of course,\" he stammered. \"Would your husband mind?\" he asked.\n\n\"That's so sweet of you to ask,\" she said, smiling at him. \"My husband would rather I didn't come back to him burned to a cinder. Just behave yourself,\" she said with a wink.\n\nIn truth, her heart was pounding in her chest and her mind was a blur of conflicting thoughts.\n\n\"Whore! You want him to touch you! How big is his cock? You're such a dirty slut!\"\n\nShe shook the thoughts away and laid down on her stomach as the nervous young man moved closer. She heard the bottle click open and then felt warm hands on her legs, massaging slowly and deliberately upwards. His fingertips pressed gently into her tender, pale flesh. She fought to control her breathing, as well as her excitement as the stranger rubbed the soles of her feet, her calves and up to her thighs. His hands had the strength of youth in them, and though he looked very nervous, he definitely knew how to give a massage. She sighed happily.\n\n\"That's nice,\" she said.\n\nHe squirted a little more into his hand and then tenderly and carefully rubbed the insides of her legs. His wriggling fingers pushed and prodded her muscles, sending exited little impulses of pleasure coursing through her.\n\n\"He can totally see your ass and your pussy!\" her mind was screaming at her. \"He knows you're excited!\"\n\nShe turned her head and saw the other five guys scooting closer to get a better view. \n\n\"Oh God,\" she thought. \"They're all watching you! Harlot!\"\n\nShe felt him move upwards then, past her buttocks. She glanced back at him then. \"You're going to have to get all of me,\" she said. \"I don't want a burned bottom! It's okay, really,\" she admonished.\n\nHe inhaled deeply and nodded as she lay back down. Her heart threatened to burst through her chest and into the towel beneath her.\n\nHe started at the sides of her hips and then moved towards the center, his hands rubbing in small circles more akin to a massage than rubbing in sunblock. He did move to the center though, and surprisingly slid a hand under the strings of her bikini bottoms. She felt the string slide gently across her asshole and pull at the fabric covering her pussy, which was tantalizingly squishy. She knew immediately that he could definitely see her asshole, and possibly some of her sex. The string of her bikini was still at the base of her pussy and the small patch of fabric was still covering her, or most of her at least. She sighed contentedly again.\n\nHis warm fingers rubbed the sunblock into her pale cheeks, pushing into her muscles and across to the other side. He ran a finger down her crack, and she could feel his hand shaking nervously as he quickly brushed it over her anus.\n\n\"Oh!\" she said in surprise.\n\n\"Sorry, the string doesn't really cover that part of you up,\" he stammered. \"I just thought...\"\n\n\"It's fine, Jesse,\" she said with a smile. Her heart was thudding in her chest and she wondered how he couldn't hear it. She was genuinely surprised at his boldness. A sudden thought entered her mind that nearly caused her to have an orgasm then and there.\n\n\"What if he pushes a finger inside of you? Whore!\"\n\nHe didn't push her any further, however, and quickly pulled the suit back into place and finished the rest of her back.\n\n\"There you go,\" he said, as he finished rubbing lotion into her neck.\n\n\"You've got very strong hands,\" she said with a quiet sigh. \"That felt amazing. Thank you!\"\n\nHe chuckled. \"No, thank you,\" he said with a smile. \n\n\"You behaved yourself too. I don't know if I could have trusted your friends to behave themselves like you did.\"\n\nHe blushed adorably. \"I uh..thanks,\" he stammered with a smile.\n\n\"Here,\" she said, gesturing towards Duncan's towel. \"Sit down next to me and tell me about yourself.\"\n\nAs they talked, she learned that Jesse was a nineteen year old from Ohio. He was pretty shy and unsure of himself when it came to women. His friends always tried to get him to come out of his shell; Kelly just happened to be the one there at the time that he decided he was tired of their prodding.\n\n\"I mean, you're very attractive,\" he said. \"I guess I just got tired of them always trying to get me to talk to women. I mean, I'm pretty shy, I guess. You're making it pretty easy to talk to you though.\"\n\n\"Oh come on, I don't buy that,\" she said flirtatiously. \"I mean, you're very cute and you've obviously been able to converse with a married woman.\" \n\nHe smiled at that. \"You've got a point, but it's just easier to talk to you than the girls in the clubs.\"\n\n\"You even gave me a wonderful massage to boot! You're very good with your hands,\" she said with a naughty grin.\"\n\nHe smiled widely.\n\n\"Speaking of,\" she said, starting to turn over, \"would you mind helping me with this side?\"\n\nHe looked at her in wonder.\n\n\"I think we can make your friends pretty envious of you, don't you think?\"\n\nHe smiled and nodded, anticipation clear on his face.\n\n\"Just try and behave yourself,\" she said with a disarming smile.\n\nHands shaking nervously, he glanced over at his friends again as she got situated on her back. She adjusted the bikini bottoms briefly, lifting them up ever so slightly and then laying them back down. \n\n\"He had to have seen my pubic hair,\" she thought. \"God I'm so wet! Fuck I'm being so slutty! I hope Duncan is watching!\"\n\n*****\n\nDuncan\n\nDuncan was watching, very closely. He decided to move a little closer then, and stepped from behind the lattice. He held the phone up to his head to complete the illusion that he was still talking on it and slowly walked down towards the group until one of the guy's friends saw him approaching and nudge the other four. All of them turned back to him, wide-eyed.\n\nDuncan quickly held a hand to his lips and smiled disarmingly, sitting down a short ways behind Kelly and the young man. Lowering the phone, he raised his finger to his lips again. He turned to the group and grinned widely, nodding at the two.\n\nThe five of them looked at each other and then back at him, still unsure. Sensing something amiss, the young man turned around and saw him.\n\n\"Crap,\" he thought. \"You blew it!\"\n\nThe young man began to back up and raise his hands defensively, but Duncan quickly held up one hand for him to stop, and quickly put another to his lips for him to be quiet. He then pointed back down at Kelly and gave him a thumbs up for him to continue.\n\nThe young man looked back at his friends for support, finally one of them pointed down at Kelly and nodded vigorously. Glancing back at Duncan, the young man looked at him for confirmation. Duncan waved his hands dismissively and nodded. He finished with another thumbs up and finally scooted down, seeing that the young man was simply too worried and nervous to continue.\n\n\"I think I spoiled our fun, Baby,\" he said, coming around and sitting behind Kelly.\n\nShe grinned at him from her back.\n\n\"Hi Honey,\" she said. \"Did you scare my sunblock applier away?\"\n\n\"Well I wasn't trying to,\" he said with a grin.\n\nSmiling, Kelly looked down at Jesse. \"You've got a job to do young man,\" she said, smiling disarmingly up at him.\n\nJesse glanced briefly at his friends and finally worked the courage up to continue.\n\n\"Please finish before I start to burn,\" Kelly said, smiling demurely. \n\n\"Please,\" Duncan agreed. \"I want to be able to get close to her tonight,\" he said.\n\n\"This is my husband, Duncan,\" Kelly said. \"Duncan, this very sweet and surprisingly well-mannered young man is Jesse, from Ohio.\"\n\nJesse nodded and squirted some lotion into his hand. \"Pleased to meet you Mr... Duncan,\" he said.\n\n\"I know, it's a little weird,\" Duncan admitted. \"Kelly likes it when I show her off,\" he said, drawing a smile from the young man. He glanced over at the young man's friends then. \"You boys can't see from there. Why don't y'all gather around so you can get the best view?\"\n\nKelly blushed then, but kept her sunglasses on. She subtly bit her lip for a second before relaxing. The five friends moved quickly around to get a better view, effectively blocking the rest of the beach out.\n\n\"Only Jesse gets to rub the oil in,\" she said quickly.\n\n\"Fair enough,\" one of them said. \"I just wanna see that incredible body.\n\nDuncan clicked open his phone then, thumbing through it as a sign of being preoccupied or bored as the young man began to massage Kelly's feet and legs. Moving slowly upwards, he saw Jesse glance at him every once in a while to affirm that it was still okay. Duncan didn't pay attention to him, not obviously. In truth, he was watching raptly with his peripheral vision.\n\nAs he neared her hips, he glanced up again. Seeing no protest from either of them, he flashed a quick grin and rubbed lotion on the sides of her hips and around to the front, being particularly careful around the top of the bikini, as tiny as it was.\n\nHe visibly relaxed a little and moved to his knees as he moved to her stomach, and then rib cage, gently working in the sunblock.\n\nDuncan turned then and lifted Kelly. \"Let's make this easier,\" he said, and began to untie her bikini top.\n\nKelly inhaled sharply. A smile found its way to her lips but was quickly covered. He glanced up at six sets of eyes that were glued to his wife's figure and pulled her bikini free.\n\n\"Damn,\" one of them said.\n\n\"Holy shit,\" said another.\n\n\"Now you can finish,\" Duncan said, smiling and picking his phone back up.\n\nKelly lay back down and looked to be trying to control her breathing. Duncan could tell she was turned on, her nipples were even harder than normal.\n\n\"I really like your rings,\" Jesse said, eliciting conversation among the group of young men about the subject.\n\nJesse squirted some more lotion into his hands and slowly worked upwards from where he left off. He rubbed her arms and then armpits, moving around towards the front. Duncan saw him glance up at the two of them and then grin as his hands moved to her breasts. Unable to stop himself, he gently pulled at the rings but quickly stopped.\n\n\"It's a common reaction when people see them,\" Duncan confirmed. \"They just beg to be pulled, don't they?\"\n\nJesse nodded. \"Yes sir, they do.\"\n\nHe spent a few more minutes massaging her breasts gently before moving to her shoulders. The guys around then made a show of relaxing as Jesse sat back on his knees.\n\n\"Thank you,\" Kelly said, laying back on the towel, her nipples rising to meet the sun. She sat up then and had Jesse sit on her towel. \n\n\"Here, now let me lay back. You can massage my shoulders.\"\n\nThe young man, clearly nervous, complied with what the gorgeous redhead was ordering him to do. He opened his legs to let her lean back against his chest and began to slowly massage her shoulders. The other young men made a show of continuing the talk about nipple rings, but were all clearly staring at his semi-nude wife and their very lucky friend.\n\n\"Think the sunblock is dry, Baby?\" she asked, looking up at Duncan twenty minutes later\n\n\"I'd think so. Gonna go for a swim?\" he asked.\n\nShe nodded. \"I think so. I'm getting a little warm,\" she said, sitting up. She glanced around at her admirers while she pulled her bikini top on. \"Anyone wanna go for a swim?\"\n\nSix young men nodded eagerly.\n\n\"What about you, Honey?\" she asked.\n\nHe shrugged. \"I might join you in a little bit,\" he said.\n\n\"You guys go ahead. I'll meet you out there in just a minute,\" she said. Obediently, her herd of admirers stood and headed to the water. As soon as they were a short distance away, they loudly began to cajole and congratulate their young friend on his accomplishment.\n\nDuncan smiled and leaned in close. \"Having fun?\" he whispered.\n\nShe giggled and smiled. \"I'm so fucking horny right now,\" she said. \"I'm going to cum if they take any liberties with me out there,\" she warned.\n\n\"Promise?\" he asked, and kissed her.\n\nShe fell into him then and kissed him roughly. \"Still okay with all of this?\"\n\nHe grinned at her. \"Hell yes. No regrets?\" he asked\n\n\"Not a one,\" she confirmed. \n\n\"Do try and behave out there,\" he said playfully as she rose and headed towards the group of young men that were splashing in the water.\n\nShe turned and winked at him and headed towards the water.\n\nDuncan watched as she walked the short distance down the surface, and then smiled as the group saw her approach. She playfully splashed one of them and the game was on. One of them returned the splash, and then all of them did. The seven of them laughed as they splashed each other in the surf.\n\nHe smiled and watched as they began to get friskier and friskier with her. An hour or so later, Kelly and Duncan waved goodbye to the young men as they walked back towards their room.\n\n\"I can't wait to hear what happened out in the water,\" Duncan said.\n\nKelly grinned. \"I can't wait to fuck you while I tell you,\" she whispered as they gathered up their things. \"God, I'm so horny.\"\n\nThey hurried back to their room and showered quickly. Kelly pushed Duncan down on the bed, eliciting a grin from him.\n\n\"Where would you like me to start?\" she asked. \n\nDuncan smiled as she knelt between his legs, taking his ragingly erect cock in her hand and stroking slowly. Her warm lips parted and took the head in briefly before letting it emerge with a parting kiss.\n\n\"Mmm,\" he moaned. \"Start from when I left.\"\n\nShe grinned and took the head of his cock in her mouth again, sucking gently and stroking. Popping out of her soft lips, he moaned again.\n\n\"When you left,\" she said, still stroking, \"Jesse came and sat down and introduced himself. We chatted for a bit and I asked him to rub me down. I got so turned on just thinking about him touching me and knowing you were back here watching me. It was like you were letting me misbehave.\"\n\nShe took him her mouth again and drew another moan from him as she popped him free again.\n\n\"He behaved himself up until he got to my ass. After I told him it was okay and that I didn't want my butt sunburned, he finally worked up the courage to rub it down. I think he was more interested in massaging it than covering it with sunblock.\"\n\nHis cock pushed into her waiting lips and she lowered her face on it, her red hair bouncing up and down in time with her face as his cock pushed into her mouth. She looked back up at him then.\n\n\"He lifted the string of my bikini and it slid a little to the side. I think he got a little view of my pussy, and I know he saw my butt. When he stopped, I told him that he needed to get all of my butt to make sure it didn't burn, he briefly rubbed his fingertip over my hole. I thought for a second that he'd push a finger inside my pussy, and I don't know that I would have stopped him.\"",
        "Duncan groaned loudly then and Kelly squeezed the tip of his cock, forcing his orgasm back from the brink. \"Fuck,\" he groaned. \"Thank you. I was getting close!\"\n\nShe grinned and relaxed her hold, stroking slower. \"After that, you showed up and caused all sorts of mischief. I was so fucking turned on when you displayed me like that,\" she said. \"I nearly came then and there!\"\n\nHe smiled down at her as she stared up at him for a second, her green eyes shining in the dimming light.\n\n\"We played even more in the water,\" she said, coming upwards and laying down as he moved between her legs. She moaned as he barely waited long enough for her leg to clear his head before his tongue split her pussy.\n\n\"Fuck,\" she groaned. \"We splashed around in the water for a little bit before one of them tackled another. That quickly devolved into a round of chicken fights, and of course all of them wanted me on their shoulders.\"\n\nDuncan flattened his tongue and rubbed it forcefully against her clitoris, drawing a guttural moan from her.\n\n\"It was obvious that they just wanted to feel my pussy on them, but I was thoroughly soaked,\" she admitted.\n\nHis tongue pushed into her then, drawing a long sigh from her.\n\n\"They would help me up when I inevitably was pushed from whomever shoulders I was on. That's when they got to take their liberties with me. They grabbed my breasts lots of times. A few even pinched my nipples and pulled at my rings.\"\n\nDuncan groaned then. \"God that's hot, Baby,\" he said, pulling his face away from her. He moved up her body then, his cock quickly finding its home, sliding snugly into her sopping pussy.\n\n\"Fuck yes,\" she moaned. She arched her back and lifted her legs to wrap them around him. He had to prompt her to finish with a kiss.\n\n\"After the chicken fight, it kind of devolved into manhandling me and throwing each other into the water. They would come up behind me and I could feel their erections pushing into my back. I'd go sailing into the air and into the water and they'd get a view of my nipples until I adjusted my top back into place,\" she spoke haltingly as his cock thrust into her repeatedly, pushing her to the brink of an orgasm. He pounded into her, his body shaking hers. \"Fuck me,\" she said lowly.\n\nHe groaned in pleasure.\n\n\"Finally, I couldn't take it, and reached back when Jesse was behind me. I briefly felt his cock and gave it a squeeze. He said he was just about ready to cum and that he should probably go take care of it. I thanked him for being polite and gave it a final squeeze before releasing him and heading back up to you. Oh fuck, Baby!\" she yelled.\n\nDuncan thrust deeply into her again as she began to come then, her pussy contracting hard down on him as he began to come himself, his seed bursting from his cock and beginning to fill her pussy. She groaned beneath him as her pussy squeezed over and over, her back arching and head back as her eyes rolled back. She made quiet squeaks as he thrust again and again into her, his cock slamming home repeatedly and driving her orgasm deeper, higher.\n\nHis cock seemed to find every ounce of pleasure as it pushed into her, its contents bursting from the tip to coat the insides of her pussy. His hands pulled upwards on her hips, smashing the two of them together a final time and then pausing as she continued to arch her back, her body tight in mid-climax\n\n\"FUCK,\" she yelled, finally coming down from the mountain of pleasure that she'd been on. Her breath came in ragged gasps for air, her chest heaving as he fell down beside her.\n\n\"Holy shit,\" he groaned.\n\n\"Wow,\" she agreed. Both were unable to speak for a long while, their chests heaving and working to catch their breath. Several minutes later, she finally turned and kissed him deeply.\n\n\"No regrets,\" she said, smiling.\n\n\"Not a single one,\" he agreed. He pulled her into him then, wrapping an arm around her. \"Marie was right. We've definitely been missing out,\" he said.\n\n\"I couldn't agree more,\" she said. \"I mean, I know we both loved our sex lives before, but now... I can't imagine going back to what we were doing.\"\n\nHe chuckled and glanced at the clock. \"I think we're going to miss dinner.\"\n\nKelly checked her phone but didn't see any messages from Kara. \"We can just order in,\" she said, smiling. \"No messages from your secretary.\"\n\n\"He must still be under the weather,\" he said. \"I'm sure we'll see them tomorrow.\"\n\nAfter ordering room service, the two enjoyed a quiet walk in the moonlight on the beach before heading back to their room to enjoy a much needed night of sleep. The next morning they went to breakfast with Kara and Sam, the latter finally feeling better.\n\nThey spent the rest of the day walking around the city, shopping and taking in the sites. That evening they had a nice dinner at a different restaurant and enjoyed a final restful night of sleep.\n\nTuesday morning, they had to catch their flight back home, and back to the reality of their lives. In truth, he knew something had changed in them. It seemed that the shyness of his wife had all but disappeared out there, and his was almost nonexistent. Sure, they weren't about to start sleeping around, but they were one step closer, he surmised. At work the next day, Duncan arrived before Kara did. When she walked in, she saw Duncan look up at her as she passed his doorway. She smiled and waved, blushing as she did so. There seemed to be an air of awkwardness until she came into his office a few hours later.\n\n\"Do you have a second?\" she asked, knocking lightly on the door.\n\n\"Of course,\" he said, waving her in.\n\nShe came in and sat on the edge of his desk. \"I just wanted to let you know that I really did have fun with you guys. I don't want there to be any more awkwardness between us.\"\n\nDuncan smiled. \"I kind of sensed a little between us today.\"\n\nShe shrugged. \"I guess so.\"\n\n\"I kind of expected it,\" he said. \"I'm okay if you're okay though. We can chalk it up to being on vacation and forget it all happened.\"\n\nKara smiled and nodded. She hopped off his desk and then surprised him when she leaned in to give him a quick peck on the cheek. \"Thanks Duncan,\" she said. Winking, she turned and headed for the door. Turning as she placed a hand on the door frame, she looked back at him. \"Just for the record, there's no way I'm going to forget that trip.\" With that she went back to her desk.\n\nDuncan sent Kelly flowers that day, followed by a romantic dinner that evening to celebrate Valentine's Day. The rest of the week was spent working followed by resting and recovering from the trip and work in the evenings. When Friday rolled around, Duncan felt like he needed another vacation.\n\n\"Heidi should be here sometime this evening,\" Kelly reminded him.\n\nDuncan nodded as he sat down on the couch to relax. \"Are we going to go eat somewhere with her? I don't know if I have the strength to cook.\"\n\nKelly nodded. \"If she wants to we can,\" she said, sliding down next to him. \"She might be too tired. How was work this week? Has it been awkward for you and Kara?\"\n\n\"You haven't talked to her?\" he asked.\n\nKelly shook her head. \"Been too busy, honestly.\"\n\nHe nodded. \"It was a little awkward on Wednesday. She came in though and assured me that she had a great time. I told her that we could forget it all happened but she said she didn't want to and gave me a little kiss on the cheek.\"\n\nKelly giggled and kissed him suddenly. \"You're such a good guy,\" she said. \n\nDuncan looked at her and shrugged. \"If you say so.\"\n\nA short time later, their doorbell rang.\n\n\"That's her!\" Kelly said. She clapped excitedly and hurried to answer the door.\n\nDuncan stood and headed to greet his wife's oldest friend.\n\nHeidi and Kelly had grown up together back in Katy, Texas. She was the same age as Kelly at twenty-eight, but that's where the similarities ended. You couldn't find two more opposite women if you tried, at least in Duncan's opinion.\n\nKelly was short and redheaded while Heidi was tall and had curly, shoulder length blonde hair and blue eyes. Heidi's face was without a blemish, while Kelly's would be categorized as adorable, with her pale skin, freckles and green eyes. Duncan grinned to himself when he thought of her other assets as Kelly unlocked the front door and opened it.\n\nShe had smaller breasts than Kelly, not much more than a 32 B he figured, whereas Kelly was larger and perkier. Heidi definitely had his wife beat in an ass contest, and Duncan had rarely seen a woman with a nicer posterior.\n\n\"That thing could win medals,\" he thought with a grin.\n\n\"Heidi!\" Kelly squealed, bouncing up and down and practically tackling her friend.\n\n\"KEL!\" she yelled in return, squeezing her friend of so many years. \"I can't believe it's been so long! God, you look good!\"\n\nKelly released her friend and pulled her inside. \"It's so good to see you! We've got so much to talk about!\"\n\nDuncan chuckled at the spectacle, causing Heidi to turn and smile. \"Hi big guy,\" she said. Heidi never really called him by his name, referring to him as \"Studly, big guy, or some other cutesy name.\"\n\nHe held his arms out for a quick hug and was surprised when she wrapped both of her arms around him and squeezed him tightly, holding him there for longer than was socially necessary.\n\nHe chuckled as she released him. \"Can I grab your bags for you?\" he asked, scooting past her and heading towards the door.\n\n\"No, wait!\" she said. She tried to close the door but his foot was in the way. Duncan had already peered out and saw that she was pulling a trailer behind her, and that her back seat looked like it was full of stuff.\n\nKelly turned and looked out, then turned and looked at her friend. \"What's going on hun?\" she asked, suddenly remembering that she'd sensed something wrong with her on the phone those weeks back.\n\nHeidi sighed and shrugged. \"Well crap, I didn't want to start the weekend this way,\" she said, tears coming to her eyes. \"Dale left me,\" she said, glancing over at Duncan and then Kelly.\n\nKelly's eyes began to well up with tears then and she hugged her friend. \"Oh, Honey,\" she said. \"I'm so sorry!\"\n\nDuncan knew better than to ask what the reason was, and figured that he should let them talk.\n\n\"I'll let you ladies be alone,\" he said. \"Can I get y'all some drinks?\" he asked.\n\nKelly mouthed him a silent thank you, but Heidi was shaking her head. \"Duncan, you should hear this too,\" she said, wiping her face.\n\n\"Okay,\" he said. \"Y'all wanna go sit down?\"\n\nThey headed to the kitchen where they sat around the table and Heidi told the story of what happened to her marriage.\n\n\"Dale and I were always an odd fit. He's so serious all the time, you know?\" She glanced over at Duncan. \"Do you think we could have some wine?\"\n\nDuncan nodded and headed to pour the drinks. He grabbed himself a beer and gave his wife and their guest their wine glasses.\n\n\"Thanks,\" Heidi said. \"I don't know if I know all of the reasons that he left me, but what I think the reason is, is a little humiliating.\"\n\n\"Sweetie, we won't judge you, you know that,\" Kelly said, taking Heidi's hand in her own.\n\n\"I know,\" she said. \"Dale and I are just different now. When we first got together it was sex constantly, you know?\"\n\nDuncan nodded in understanding. Heidi was always very blunt, very straightforward with her conversation. She didn't sugarcoat anything for anyone, even when it came to sex.\n\n\"Anyways,\" she said. \"We stopped having sex after awhile. I mean, I'll admit that my desires were different than his, not that we need to go into that,\" she said. \"Suffice to say that he didn't seem to want it with me anymore. I figured that he was cheating on me, and a few months ago, I caught him in his office getting a blowjob from one of his nurses.\"\n\n\"That son of a bitch,\" Kelly swore uncharacteristically.\n\nHeidi shrugged. \"I should have seen it coming, honestly. He always came home late, made excuses to be out and the like. I mean, I just wanted him to be honest with me and he tried to cover it up like I was some kind of idiot. We fought about it for a few days and then it got violent. He slapped me around a little and then punched me in the stomach one evening.\"\n\n\"That motherfucker,\" Duncan said, suddenly growing angry.\n\n\"Like a dumbass, I forgave him, but it didn't matter. He came to me a few days later and said that he needed a wife that he would be proud to have on his arm. He said I wasn't fit to be seen in public with him.\"\n\n\"Holy shit,\" Kelly said. \"That motherfucker!\"\n\nHeidi shrugged. \"Looking back on it now, I can see that it was doomed early on, but I tried to salvage it. He apparently had been wanting a divorce for a while, as he had all the lawyer stuff ready. He was very kind and gave me half of his money, but kept the house and his cars.\"\n\nDuncan felt a stab of anger. \"He's lucky he's so far away. He's got an ass beating coming.\"\n\nHeidi smiled but shook her head. \"I'm okay. I appreciate the thought though.\"\n\nDuncan wasn't convinced though, but stored the thought for a later conversation.\n\n\"So where are you going to stay? You headed back to your parents?\" Kelly asked.\n\nHeidi nodded. \"I've been living in hotel rooms for the past couple of months. I figured I could come here and find a place to live, and then find a job. Luckily Dale was loaded, as plastic surgeons are, so I've got plenty of money to last for awhile. I'll probably find a hotel tonight.\"\n\nDuncan was shaking his head. \"Oh hell no you won't. You don't need to stay in a hotel. Our house is your house, you're going stay with us as long as you need to get back on your feet.\"\n\nKelly was nodding at Heidi in agreement. \"Duncan's right. You're staying here. No arguments.\"\n\nHeidi smiled and hugged Kelly then, fresh tears beginning to flow. She reached her arm out for Duncan then, and he obliged her by coming over to wrap them both in a hug.\n\n\"Thank you so much you guys,\" she said, \"But I can only stay until next weekend if that's okay. I'm headed back home to see my folks and relax for a few weeks. I might come back this way and take you up on your offer, though.\"\n\nKelly sat back after the hug and glanced over at Heidi with a confused look on her face.\n\n\"There's something that I don't get. You said that he told you that he needed a wife that he could be proud of in public, but that he was the one that was cheating. What the hell did he imagine was wrong with you?\"\n\nThe blonde blushed at that and shook her head. \"I don't really think it's relevant,\" she said. \"How about you guys let me take you to dinner?\"\n\nDuncan was shaking his head. \"How about you let me put the trailer in our barn, and we can unload what you need for this weekend. Then, we'll take you to dinner. You've had enough of a painful time.\"\n\nKelly nodded in agreement. \"There really is a lot we need to discuss,\" she said. \"Things are different for us.\"\n\nHeidi nodded. \"Well, I'm ready then, if you two are.\"\n\nDuncan stood then. \"Let me change real quick and I'll be good.\"\n\nThey went to a quiet restaurant and talked. Kelly told Heidi about how they were trying to expand their horizons and try and be a little more adventurous. She didn't hold anything back, filling the dinner conversation with the stories of how they attended a swinger party, and flirting with the college guys on the beach. She told her about both times that they'd gone to the club, about all the new friends they'd made and about Duncan's new secretary that looked like her sister. Duncan figured that Kelly sensed that Heidi really didn't want to dwell on her shattered marriage and would like to have her mind on something else.\n\nHeidi was genuinely surprised to hear it all.\n\n\"I'm sorry if I just flooded you with all that,\" Kelly said as they drove home. \"I just didn't want you to be surprised if you noticed us behaving differently out in public. I'm not the same, shy little wallflower that you knew growing up.\"\n\n\"I'm getting that,\" Heidi said with a grin. \"I'm glad that you guys are getting a little more adventurous.\"\n\nThey drove home and Kelly helped Heidi get situated in her room while Duncan carried in the bags that she needed for the night. Afterwards, he backed her trailer into the barn and headed back inside.\n\nAfter saying their \"good-nights\", Heidi retreated to her room and the two of them climbed into their bed.\n\n\"Thank you for letting her stay, Baby,\" Kelly said, snuggling up to him.\n\nHe sighed happily. \"You knew I was going to say that,\" he said. \"She's family. She should've been here right after it happened.\" He turned and looked at her then. \"I can't believe she was staying in hotels!\"\n\n\"Oh that's just Heidi. She didn't want to be a burden to anyone.\"\n\n\"I still owe that asshole a beating,\" Duncan said. \"Don't think that I will let that go so easily.\"\n\nKelly snuggled up closely. \"I know you won't.\"\n\nThe week seemed to catch up with them then, and soon they were both asleep.\n\n*****\n\nKelly\n\nKelly awoke early that next morning. Giggling quietly to herself, she slid gently down in the bed until she could slide between her husband's legs. Slowly moving upwards, she stopped when she felt the warmth of his thighs close in around her, and extended her tongue and licked the tip of his cock as it hung downwards between his legs. Opening her lips, she quickly pulled the tip in and sucked forcefully, feeling the organ swell quickly in her mouth. Pulling the sheet back, she began to suck the tip of his cock gently, then slowly lowered her lips until the tip was brushing the roof of her mouth.\n\nThere was a soft knock at the door. \"Kelly?\" Heidi called softly, peeking in. \"Oh my God!\" she said quietly. \"I'm so sorry!\"\n\nKelly scrambled over her husband, covering him back up and giggling as he shifted, his eyes opening.\n\n\"Mmm,\" he muttered. \"Morning Baby,\" he said, his hands pulled her hips into place. He hadn't heard Heidi.\n\nKelly turned back around and looked at the doorway. A blonde head disappeared back around the door. Kelly stifled a laugh and then moaned quietly as Duncan pushed at her from below.\n\n\"Oh fuck, Baby,\" he groaned, his cock swelling to full size. She sighed softly in pleasure, his cock pushing up into her pussy gently, and then sliding slowly back out as she lifted her hips up. Starting the long trek back down, she squeezed down on his cock, her pussy sliding slowly down the thick organ as he pulled down on her hips. She groaned, grinding her sex down on him.\n\n\"Fuck,\" she moaned, sliding up and down faster and faster. She arched her back then, raising her arms above her head and lifting her hair up before letting it fall as he pushed upwards into her, his cock filling every crevice and sending fingers of pleasure rocketing outward from her succulent cunt.\n\n\"Cunt,\" she thought. The thought of the word repulsed and excited her all at the same time.\n\n\"Do you like fucking my cunt?\" she asked, leaning down and kissing him. He groaned in pleasure at her awful language, his cock pistoning faster and faster in her as he began to come.\n\nShe felt her orgasm crest and then fell down on top of him, her hips bouncing in time with his thrusts, his cock filling up her tight pussy.\n\n\"Cunt,\" she thought again, the foul word sending her even higher.\n\n\"Fuck my cunt,\" she said again, spewing the word as if it was a foul tasting morsel of food.\n\n\"Fuck,\" Duncan groaned loudly as he thrust one final time, his thick cock fully inserted and snug inside her pussy.\n\nShe felt her pussy as it filled with his warm seed, and collapsed into him. Briefly, she glanced back and could have sworn she saw a blonde head disappear again.\n\nAfter catching her breath, she pulled herself off of Duncan and went to take a quick shower. As she finished and got dressed, she found Heidi in the kitchen making breakfast.\n\nThe two exchanged knowing glances at each other and broke into laughter.",
        "\"Sorry about that,\" Heidi said eventually. \n\nKelly waved a hand dismissively. \"We should have been more tactful since we had a guest in the house. We'll refrain.\"\n\nHeidi was shaking her head. \"I can't expect you guys to put your sex life on hold just because I'm staying with you for a few days.\"\n\nKelly looked at her sympathetically. \"I'm sorry this happened to you.\"\n\nHeidi shrugged it off. \"Like I said, it was a long time in the works and I'm doing okay with it. I don't think I'll be dating anytime soon. It takes awhile to find anyone that can handle my sexual proclivities, anyways.\"\n\n\"You mentioned having particular tastes before,\" Kelly said. \"What's that about?\"\n\n\"Is Duncan asleep?\" Heidi asked, peering down the hallway.\n\nKelly nodded. \"He'll be asleep for a few more hours,\" she said. She tiptoed down the hall and checked just to make sure, nodding as she came back.\n\n\"Well, there isn't much to say. I'm just a very submissive person in the bedroom. I mean, Dale didn't want me because I'm a very, very sexual person. I know that doesn't sound possible,\" she said, seeing Kelly's look of doubt. \"What man in his right mind wouldn't want a woman that craves sex 24/7? You don't know the level of my depravity.\"\n\nKelly smirked. \"It sounds like you'll fit in just fine around here,\" she said, remembering that she'd mentioned Marie and the swinging situation.\n\nHeidi was shaking her head. \"I mean, for me it's not about wanting other people. I only want to please my...\" she hesitated. She glanced over at Kelly and cleared her throat. \"I'm a submissive.\"\n\nKelly looked at her, confused. \"I might be expanding my horizons, but I still don't know much about other sexual lifestyles,\" she said.\n\n\"I like submitting to the will of someone in a dominant role. It gets me off. See, Dale and I had a dominant/submissive relationship. He'd order me to do things and I'd do them, and if I was a good girl, he'd reward me. If Dale had ever wanted me to be with someone else, I would, but not because I wanted to, but because he wanted me to. I used to call him Daddy, and not out of some need for a father/daughter relationship, but as more of a power and control type thing. He'd tell me to suck him off and I'd say, \"Yes, Daddy.\" I mean I'm sure it was a turn-on for Dale, but it really didn't have anything to do with incest.\"\n\nKelly was genuinely intrigued. It actually sounded kind of fun to her. \"So it's like you follow his orders?\"\n\nHeidi bobbed her head from side to side. \"Kind of,\" she said. \"It's more of just conforming to what your Dom wants, doing things his or her way. At its core, it's really about someone having power over someone else. Dale was never very good at it. It mainly devolved into him ordering me onto my knees to... well... you know. Or he'd make me sit on the floor, or he'd come on my face when I was sleeping.\"\n\nKelly looked at her, wide-eyed and doubtful. \"That doesn't sound very exciting.\"\n\nHeidi grinned. \"It wasn't about being cummed on like that, it was about him using me without my consent. Doing what he wanted without thought for what I desired. Just the thought of him coming home and forcing me down to my knees...\" she closed her eyes and smiled.\n\nKelly giggled and nodded. \"I guess I can see how that would be fun. Was there anything you didn't let him do?\"\n\n\"Well, like I said, Dale was never very good at it. I think it made him ashamed of me, that I liked to be dominated, almost humiliated. It's strange though, being in humiliating situations wouldn't ever actually embarrass me. I'm just not wired that way.\"\n\nKelly smiled. \"So that's what you're wanting to find?\"\n\nHeidi nodded. \"Eventually. I'll settle for a friend with benefits for now. I'm not built to be celibate. I need to have sex on a regular basis.\"\n\nKelly drank some of her coffee then. \"So I thought I saw you peeking at us when we were having sex this morning.\"\n\nHeidi blushed. \"It's been awhile,\" she said. \"I guess I'm giving off this \"unfuckable\" vibe. I'm sorry.\"\n\nKelly shook her head. \"My good friend Marie is coaching us to be more risqu\u00e9 in our lovemaking,\" she said. \"She's watched us a few times and given us a few pointers. You're welcome to watch us whenever you want.\"\n\nIt was Heidi's turn to be confused. \"You guys know how to have sex. What's she teaching you?\"\n\nKelly blushed slightly. \"Well, Duncan and I don't really have sex very long. I mean... did you see the size of him when you peeked in this morning?\"\n\nHeidi blushed a little then. \"Why do you think I kept watching?\" she asked. \"You're a lucky girl.\"\n\nKelly smiled knowingly. \"Well, he knows how to make me come pretty quickly, and so he's never really had to work at it, or try and stave off his own orgasm so we only have sex for a few minutes. She's helping us by showing us new techniques to last longer, make it more pleasurable, not that we don't enjoy ourselves immensely. She showed us about sixty-nining last time she was here.\"\n\nHeidi snickered. \"I've forgotten how very sheltered you were growing up,\" she said with a grin.\n\nKelly nodded. \"It's actually been pretty great. She's been teaching me how to give better blowjobs, and been helping to get me out of my shell.\"\n\nHeidi smiled at her. \"I'm happy for you then,\" she said with a smile. \"You needed to come out of your shell more,\" she agreed.\n\n\"Oh, I forgot to mention the photo session!\" Kelly said suddenly.\n\nHeidi looked at her, intrigued.\n\n\"One of the people we we're introduced to at the swinger party has an artsy porn website and she takes erotic photography. She offered us a free session to take some photos of me.\"\n\nHeidi had a look of surprise on her face. \"Shy little Kelly posed for erotic photos?\"\n\nKelly blushed but nodded and smiled. \"I sure did, and the sex afterwards was pretty wonderful.\"\n\n\"Can I see them?\" Heidi asked.\n\nKelly glanced over, \"Are you sure you want to see that side of me?\"\n\nHeidi laughed. \"I already saw that side of you this morning, remember?\"\n\nGiggling as she remembered, Kelly went and fetched the laptop. Clicking it on, she headed to the bar in the kitchen and set it down. Quickly finding the email, she ushered Heidi over and opened the picture set.\n\nA few minutes later, Heidi looked at her in surprise. \"I can't believe you actually posed for all those!\"\n\nKelly grew concerned for a moment. \"You don't like them?\"\n\n\"Oh no, no!\" Heidi said. \"It's just not the Kelly I remember. I think they're great!\"\n\nSmiling, she glanced back down at the screen. \"I really liked doing it. I kind of wish I knew what other people thought of them.\"\n\nHeidi nodded. \"Well, let the photographer put it up on his website.\"\n\n\"Her website,\" Kelly corrected. \"I don't know about that,\" she said.\n\n\"Well let's look and see what it looks like. What's the address?\"\n\nShe shrugged. \"I don't actually know.\"\n\nHeidi thought for a second. \"Well, let's check the email, maybe the photographer put it in there.\"\n\nKelly nodded and opened up the email she'd gotten from Camille. Sure enough, at the bottom was a link with the web address in it. Kelly clicked on it and the browser opened.\n\nThe website had a very nice layout, soft colors and smooth transitions and was very easy to navigate. There was a very attractive blonde Kelly recognized from the party the other day, in a photo on the main page. The photo changed after a few seconds, showing another girl, and then another.\n\nHeidi clicked on the link to see a preview set of photos. They looked a lot like Kelly's pictures, but these were obviously the best of the set. They showed the girl in a variety of poses and positions. They clicked on the next set. This one featured a dark skinned black man and a pale blonde that Kelly didn't recognize. This series too showed a variety of positions for the two. The man would hold the girl in a variety of positions. Near the end, they got very close to each other's genitalia, but never actually touched.\n\nThe last preview was a video. It showed a very attractive tanned man and his partner was a brunette, just as tan as he. The video was about five minutes long and seemed to be a composite of a longer video. The couple went through a series of positions where they seemed to be erotically massaging each other. Kelly was surprised to see the girl briefly with her lips around the modestly well-endowed young man. The video ended with the girl's hands around the young man as he came.\n\n\"I mean, obviously you'd be doing one of the other types of sets. You wouldn't do the erotic sex video,\" Heidi said.\n\nKelly nodded. \"I like the website and the layout. I'll talk to Duncan and see what he thinks.\"\n\nStanding, Kelly closed the laptop and headed towards her room. \"I'm gonna shower, make yourself at home.\"\n\n*****\n\nDuncan\n\nDuncan heard someone moving around in his room before he opened his eyes. That wasn't right though, someone was in the shower. He looked up and saw Heidi. She was peering into the bathroom. He quietly slid on his underwear.\n\nSmiling, he realized that Kelly must be showering. Silently he slid out of bed and came up behind Heidi. She was briefly startled, but he quickly put a finger to his lips and bade her to remain quiet. She turned and started to leave the room, but he stopped her and ushered her back to the bathroom door.\n\nShe stifled a laugh and crept over with him. He moved so that she could be in front and came up close behind her. An intoxicating scent washed over him then, and he found himself momentarily distracted. He felt her warmth as she swayed briefly into him. He steadied himself on the door frame and peered in at his nude wife. The clear curtain gave both of them a tantalizing view of her as she washed and soaked her body.\n\nA short while later, they both left the room quietly. \n\n\"There's something wrong with us,\" she said, smiling.\n\n\"I agree,\" he said, laughing as he headed to the kitchen.\n\n\"Please, allow me,\" she said, moving past him. \"I'm glad to be able to fix you something since you're letting me stay.\"\n\n\"Oh, that's not necessary,\" he admonished. \"You're my wife's oldest friend and you're family. You don't need to pay your way.\"\n\nShe smiled. \"It's my pleasure, I promise.\"\n\nDuncan caught a whiff of her perfume again. \"Can I ask, what perfume are you wearing?\" \n\nShe smiled. \"Obession: Nights, for women. You like?\"\n\nHe nodded. \"There's something about it. It makes me... kind of forget what the hell I was doing for a second.\"\n\nShe giggled and nodded. \"That's what I like about it. What can I make you? Coffee? Eggs and Bacon?\"\n\nHe smiled. \"Whatever you're having.\"\n\nShe shook her head and looked straight at him. \"You tell me, what would you like?\"\n\nHe shrugged and grew a little uncomfortable as she continued to stare directly at him, silently waiting for his answer. He steeled his resolve and quietly reminded himself that he was a grown man. \"Bacon, eggs, and coffee would be very nice.\"\n\nShe smiled widely. \"Yes, Sir.\"\n\nHe chuckled and then glanced down the hallway towards his bedroom. Kelly emerged and made her way to the kitchen. \n\n\"That was an awesome shower!\" she gushed. \n\n\"It looked like it,\" Duncan said with a grin.\n\n\"I see you're taking advantage of our guest,\" she said, looking over at him.\n\nHe shook his head briefly. \"She uh..\"\n\nShe giggled and kissed him again. \"She made you tell her what you wanted, didn't she?\"\n\nDuncan nodded, shaking his head in mock dismay at his wife. He heard someone pulling into the driveway then, and glanced out the window, seeing Marie pull up.\n\n\"We didn't tell Marie we had company,\" he said, cocking his head towards the door.\n\n\"Oh, shoot,\" Kelly said. \"Well, we can still visit with her.\"\n\n\"I can make myself scarce,\" Heidi said. \"I don't want to interrupt y'all's normal routine.\"\n\nKelly shook her head. \"I think we're a little worn out to get any lessons in this morning.\"\n\nDuncan nodded in agreement. \"We were intimate a lot on that trip,\" he admitted.\n\nHeidi laughed and shook her head. \"You guys are so different than I remember!\"\n\nKelly looked at her inquisitively. \"How so?\"\n\n\"The old Kelly and Duncan wouldn't be so honest and forthcoming about sex,\" she said with a grin as the doorbell rang.\n\nDuncan chuckled and headed to let Marie in.\n\n\"Good morning, handsome!\" Marie said. \"Y'all have a good trip?\"\n\nDuncan smiled and gave her a quick hug. \"We did indeed.\" He ushered her into the kitchen then after shutting the door.\n\n\"Marie!\" Kelly said, moving around to give her a hug.\n\n\"Hey girl,\" she answered.\n\n\"You remember my friend Heidi?\" she asked.\n\nMarie nodded and waved at the blonde who was finishing up Duncan's breakfast. \"Of course, though it's been awhile. You look incredible!\"\n\nHeidi smiled and thanked her. \"You look pretty good yourself.\" She put Duncan's food on a plate and bade him sit down so she could serve him. After giving him the food and utensils, she went and poured both of them some coffee. \"Can I get you some coffee?\" she asked, glancing at Marie.\n\n\"Oh, no thank you, Sweetie,\" she answered. \"So how was the trip? I didn't get to ask you since work has been so crazy.\"\n\nKelly began to recount seemingly every moment of the Bahamas trip to Marie, and even though both Heidi and Duncan had heard it all at dinner the night before, they both listened closely.\n\n\"How turned on were you when those guys were watching you?\" Marie asked. \n\n\"Very,\" Kelly admitted. \"I couldn't get Duncan back to the room fast enough.\"\n\nAfter the conversation about the trip was concluded, the girls began to talk about other things, and Duncan beat a hasty retreat to go do some work outside. He spent all morning outside keeping himself busy. It was still technically winter in Texas, but it had warmed up considerably. He finished a little after noon and headed back inside. The girls were in the living room laughing loudly and still talking.\n\nHe peeked in and waved. \"Hey y'all. Need anything?\" he asked.\n\nKelly waved him over and stole a kiss. \"We're talking about the get-together tonight.\"\n\n\"Among other things,\" Marie said, causing all three to burst into giggles.\n\nHe smiled and shook his head. \"So what's the plan?\" he asked, as soon as they had stopped laughing.\n\n\"I think we're just going to hang out at our house,\" Marie said. \"We'll order pizza or something. Maybe some really long sausages.\"\n\nHer comment caused another round of giggling from the trio and Duncan rolled his eyes.\n\n\"Can I make some lunch for everyone?\" Heidi asked after the laughter died down.\n\n\"Oh, I need to get back and clean up a little,\" Marie said. \"Thanks though\"\n\n\"Heidi, you aren't our maid. You don't have to wait on us,\" Kelly told her.\n\n\"I'm just paying my way,\" she said. \"Besides, I kind of like being told what to do,\" she said with a playful grin.\n\nThe remark brought yet another round of laughing from the three and Duncan just shook his head and walked Marie to the front door. She stopped just before and turned, sliding up close to Duncan. She leaned in close to his neck.\n\n\"Fuck,\" he thought as the smell hit his nose. She was wearing Heidi's perfume.\n\nDuncan swayed backwards slightly and closed his eyes. He felt a hand slide down the front of his pants then and grasp his cock, which was quickly swelling to life.\n\n\"Don't think I've forgotten about this guy,\" Marie said, kissing him on the neck. \"Your wife said that if I'm a very, very good girl, we might get to play soon.\" She squeezed it once as he glanced down at her. He caught her winking over at his wife, who was giggling on the couch with Heidi, both of them watching him squirm.\n\nDuncan smirked and wrapped a single hand around Marie's neck and pushed her entire body back against the wall, hard. She gasped as he forced her to her tiptoes and looked up at him in surprise as she pulled her hand out of his pants and put both of them around his forearm. She was up against the wall, but he wasn't really choking her. He kissed her on the lips.\n\n\"I don't think that's behaving,\" he warned her. \"I'll be the one to tell you when I'm going to fuck you,\" he said. He saw her melt a little then, and rewarded her with one more quick kiss. She nodded once and settled to the floor, clearly very turned on. She stared at him, completely consumed with desire.\n\n\"Kelly,\" she called. \"Please...\" she begged. \"Let me just suck his cock...\"\n\nKelly giggled. \"Not with company here,\" she said. \"I told you that you were playing with fire teasing him like that,\" she said.\n\n\"Fuck...\" Marie said, pouting. Turning, she blew the three of them a kiss and left. \"Make sure y'all bring your swimsuits so we can jump in the hot tub!\" she called as the door closed.\n\nDuncan turned and shook his head, doing his best to cover up his erection. \"Sorry about that Heidi. I know we're very different than the last time you came down.\"\n\nHeidi smiled at him. \"It's a good thing,\" she said. She stood then and disappeared into her room.\n\nThat evening, Duncan, Kelly and Heidi all piled into his truck and drove to Ed and Marie's house. Everyone else had arrived by then, including the food.\n\n\"Hey!\" came the rousing call from the crowd of people. Duncan looked around and saw Ed and Marie, Drake and Molly along with some girl that he thought he should recognize, but didn't, and finally Mark, Becky and Rachel.\n\n\"Looks like we're the only ones that didn't bring a friend!\" Ed said with a smile. \"Come on in guys! We're just about to dig in.\"\n\nDrake and Mark both followed Ed over and shook Duncan's hand. \"Guys, this is Kelly's friend from back home, Heidi.\"\n\n\"Hello,\" she said, waving.\n\nMolly introduced the girl that Duncan thought he should have recognized. \"This is my little sister, Dana.\" Duncan saw Molly lean over and whisper to her sister before pointing subtly towards Duncan. Dana glanced at Duncan, and then his crotch, and then smiled back at Molly who winked at Duncan.\n\nShaking his head, he followed his wife and Heidi inside. Dinner conversation started as normal as it ever did, Kelly giving a mostly sanitized version of the trip to the Bahamas.\n\n\"You'll have to bring this secretary and her boyfriend around,\" Marie said.\n\n\"Oh, he's not kidding,\" Mark said. \"She's the spitting image of Kelly, except for the eyes.\"\n\nDuring a lull in the conversation, Marie suggested that they all climb in their hot tub. Ed had a top of the line model, very large with multiple massage jets that would easily fit the small crowd of people. He also had a large swimming pool, but the water would still be way too cold for swimming.\n\nDuncan glanced over at Heidi and Kelly. Heidi leaned over and whispered at Kelly, who giggled and nodded. They both looked up at him expectantly. \"Fuck. Heidi is getting Kelly to have me make all the decisions,\" he thought, realizing that his wife and her friend were playing some kind of game with him. \"This can't be good.\"\n\nHe sighed and smiled, nodding at the two. They giggled and whispered something to each other. He sighed and watched as the parade of women left the room to change into swim- suits.\n\n*****\n\nKelly\n\nKelly and Heidi finished changing and joined Duncan back in the living room. He looked up and smiled when she emerged. She saw him look her over and then glance quickly at Heidi's modest swimwear.\n\nShe winked at him when he glanced back over, no doubt making him feel guilty. She glanced over at Heidi to see if she'd caught it, but couldn't tell. She did see her friend smiling, which was the real goal for tonight, to make sure she had a good time.\n\nThe group headed outside and began to pile in.\n\n\"You gonna get in with all your clothes on?\" Molly asked him. Kelly glanced up and saw he hadn't changed. \n\n\"Naw, I'm okay,\" he said. \"I'll just sit out here.\"\n\nA cacophony of boos from the women set the men laughing. Duncan didn't budge however, and pulled up a chair and began to sip on his beer. Kelly came over and kissed him for a second. ",
        "\"You okay, Baby?\" she asked.\n\nHe nodded. \n\n\"You know it's okay to get in and have a little fun,\" she said.\n\n\"Oh I know, I just forgot my trunks,\" he said.\n\n\"Oh, well shit,\" Kelly said. She turned and whistled at Ed. \"Ed, do you have some trunks?\"\n\n\"Of course!\" he said, starting to stand.\n\n\"Duncan can just come in nude,\" Marie said, drawing laughs from the girls.\n\nDuncan shook his head. \"I don't think so Marie.\"\n\n\"Boxers then?\" Molly asked, almost sounding like she was begging.\n\nHe sighed and glanced over at the guys, who shrugged. \"Fine,\" he said, rolling his eyes.\n\nGiggling, the girls all began clapping.\n\n\"Yeah, yeah, shut up already,\" he said, playfully.\n\nA short while later, Duncan had slid down between Kelly and Molly's little sister Dana.\n\n\"Nice to meet you,\" he said, nodding at her.\n\n\"Likewise,\" she said politely. Dana looked like Molly, just slightly different. \"Not necessarily prettier, just... differently pretty,\" she decided.\n\n\"Okay,\" Marie said. \"Favorite sexual memory of your current sex partner!\" she said. \"Everyone give one example.\"\n\nThere were a few groans, but most of the people smiled and seemed happy to play the game.\n\n\"Who starts,\" Duncan asked.\n\n\"You,\" Marie said, grinning.\n\n\"Me? Um, well... okay,\" he stammered. \"Let's see...\"\n\nKelly glanced over at him, curious as to what he would say. A wide smile grew on his face then, and she knew he'd thought of something.\n\n\"He's got it now,\" Drake said with a grin.\n\n\"So Kelly and I were in the farm house for about year when this happened,\" he said, glancing down and grinning at her. \"I had to go into work on Saturday for some reason or another, and finished up earlier than I'd told Kelly I would.\"\n\nShe blushed suddenly, knowing what he was going to tell them. \"Oh God,\" she said, covering her face. \"This is so embarrassing!\"\n\nDuncan grinned and nodded. \"So I drive up and notice someone standing in the yard naked.\" The statement caused a few calls of \"What?\" and some laughs. \"I guess she didn't hear me, because I got out of the truck and I'm standing there watching this gorgeous woman. She's completely nude and has a water hose, taking a bath outside, complete with soap and everything!\"\n\nHe grinned. \"I pulled out my phone and took a snapshot, which caused her to open her eyes and nearly piss herself she screamed so loud. I quickly apologized as visions of sexy times under the water hose vanished.\"\n\nKelly was bright red, she was sure.\n\n\"Still though, that vision of her standing there naked as a jaybird and oblivious to everything else. Sexiest thing I've ever seen,\" he said.\n\nShe melted a little inside and kissed him.\n\n\"Your turn Kel,\" Marie called.\n\nKelly smiled and told them of the sex they had on the vacation, leaving out the part where they'd been so flirtatious on the beach. Heidi followed with a story about a guy in college that she'd been with. It went around the group then, everyone telling a story, even Dana.\n\nHer story had been about her ex-husband, and how small his penis was. He compensated in other areas however, and she told of how he gave really great cunnilingus. \n\nAs she finished she turned to Molly. \"I've never really seen a big dick,\" she said.\n\n\"Well, you know...\" Molly said, looking over at him. He suddenly sensed where the conversation was headed, and stood to leave the hot tub. \n\n\"No, no, no... You're not getting out of this,\" Marie said as several of the women pulled him back into the pool.\n\nMolly looked over at Kelly then. \"Kelly, since you showed us your impressive nipple rings that time, we thought it would be only fair that Duncan show us what he's working with.\"\n\n\"See that way there won't be any speculation about how big it is,\" Rachel said, smiling widely.\n\n\"Well I've had enough of the hot tub, what about you fellas?\" Drake commented, standing and hopping out, followed quickly by Mark and Ed. \n\n\"Party poopers,\" Becky called. \n\nDuncan shook his head. \"I'm not dropping my shorts in front of all you ladies,\" he said.\n\nKelly giggled and glanced up at him. \"It's ok,\" she said, as she reached her hand towards his crotch.\n\nHe jerked back, startled when he felt a hand on his cock. \"Kelly!\" he said.\n\nShe giggled, causing everyone else to burst out laughing. \"Come on, Baby, they just want to see how big your dick is.\"\n\nDrake was shaking his head. \"Not all of us,\" he said. \"This was y'all's idea.\"\n\nThe girls and Duncan were the only ones left in the hot tub at that point.\n\n\"Come on,\" Kelly said, pouting up at him. \"You let me show Kara.\" \n\n\"Goddamnit, Kara saw the monster?\" Mark asked. \"There goes my shot with her.\"\n\n\"You did get a consolation prize from my wife, though,\" Duncan said.\n\n\"Very true!\" Mark said. He turned and retrieved his phone to show Drake and Ed. Both men immediately began to ask for a copy of the picture of Kelly.\n\n\"Nope!\" Mark said. \"She gave it to me and it's mine! You convince her to send you one of her and you'll have your own.\"\n\nSighing, Duncan continued to resist Kelly, though she still stroked him under the bubbles of the hot tub, the effect of her moving arm causing a ripple.\n\nMolly leaned over and looked up at him. \"Dana's been divorced for a year now and hasn't had sex in all that time. She got married really young and he left her for a younger woman after seven years of marriage. Wally is the only guy she's ever been with and she's never really had good intercourse. Not like the rest of us,\" she said. Duncan saw her glance back at her husband, and knew she was playing to the rest of the guys' egos.\n\n\"Molly, it's okay,\" Dana was saying. She'd been trying to get them to stop pestering him the whole time, blushing profusely.\n\n\"Oh, don't act like this isn't for you too, Mol'!\" Drake called.\n\nDuncan glanced over at Kelly and sighed. She nodded. \"Go ahead,\" she bade him.\n\nSighing, he finally conceded and let Kelly pull his underwear off. He was still sitting and only semi-erect, so he let her play with him a little more.\n\n\"Well?\" Becky asked impatiently.\n\n\"I'm not completely erect,\" he said.\n\nAnother cacophony of protests filled the air as he finally raised his hands and began to surface, she knew he'd finally given in.\n\n\"You're a shower, not a grower, don't worry about being erect,\" Marie reasoned.\n\nHe glanced down at Dana, and then the other girls in turn as he surfaced. He settled on Molly as his dick broke the surface. She stared at him, wide-eyed. Kelly smiled and waited.\n\n\"Holy shit!\" Rachel said after a long silence. Kelly wrapped her hand around him and began to pump as he began to bob upwards to full staff.\n\n\"That thing looks like it would tear you in half,\" Becky said. \"How do you take that?\"\n\nKelly grinned. \"With pleasure.\"\n\nHe glanced down at her and rolled his eyes.\n\n\"Jesus Christ man,\" Ed said, glancing over. \"I mean I'm not bisexual by any means, but holy crap that is an impressive dick.\"\n\n\"Drake, Baby, did you see this?\" Molly called, her eyes glued to his crotch.\n\n\"Yeah, we went to college with the big-dicked motherfucker, remember.\"\n\nDuncan began to sit back down into the water then, but the girls protested and Kelly pulled him back up by his cock.\n\nShe glanced over at Dana, who was wide-eyed. \n\n\"Do you wanna touch it?\" Kelly asked. \"Did you really just ask that?\" she thought.\n\nDana glanced at her and then smiled, reaching up.\n\nDuncan inhaled sharply then, feeling the hand of a stranger on his cock. He glanced down and shook his head at Kelly. She grinned and winked up at him and then turned and nodded at Dana.\n\nMolly's sister was very close in appearance to Molly, and two years younger. Kelly glanced down and saw an ample bosom, and guessed that Molly's attributes weren't just due to having kids. Large breasts apparently ran in their family. \n\n\"Did you just look at another woman sexually, you whore?\" she thought.\n\n*****\n\nDuncan\n\nDana's small hand gingerly wrapped around his manhood as he watched. His cock immediately got more erect as it bobbed up to its full height.\n\n\"Fuck that thing looks like it's...\" Heidi said, but stopped, apparently losing her train of thought.\n\n\"As I said before, it looks like it could cure cancer,\" Marie said.\n\nThe spell seemed to break then as the ladies all began to laugh. Duncan slid back in the water, but he was surprised when Dana's hand didn't leave his cock, instead continued to stroke him under the water. Kelly reached over then and giggled when she felt the other woman's hand on his cock, but he felt her hand cover Dana's as the two women began to stroke him gently, in unison.\n\nDana slid closer to him as Becky let the men know that the show was over.\n\n\"Does anyone feel my underwear,\" Duncan asked as the two guys began to get in. \n\n\"I've got them,\" Becky said, holding them up. She slid forward then and held them open as he lifted one leg, and then the other. She slid them up his body then, coming right up against his crotch. He felt her hand encircle the tip and slide all the way down then, bumping into Kelly or Dana as she moved to pull the underwear over the large organ.\n\n\"God,\" she muttered, backing away as Kelly finished pulling his drawers on. He felt her hand drift back over, and then felt another. \n\n\"Dana,\" he realized. \"Maybe she doesn't know it was only supposed to be for a second.\"\n\nHe glanced over at Kelly as conversation resumed. \"So how did y'all's date go?\" he heard Marie ask someone.\n\n\"Oh, it was a mild disaster,\" Molly said. She took a swallow of her wine and set the empty glass on the side of the tub. \"So we met this couple on a swinging website, right.\"\n\nDuncan leaned over and nudged Kelly. \"She's still stroking me,\" he whispered to her.\n\nKelly stifled a grin. \"I know, just enjoy it you big doofus,\" she said.\n\nDuncan smiled and kissed her, turning and laying his arms on the back of the tub. Dana sneakily scooted slightly closer every few minutes as her sister told her story. Eventually she'd made it right up to his side. She had her right arm snug against his body and her entire fist wrapped around his cock, entwined with his wife's hand as they both slowly stroked up and down.\n\nShe leaned over at one point and got close to both of them. \"Thank you for letting me play. It's been so long since I got to pleasure a man. I can't seem to make myself stop. I'm so sorry!\"\n\nKelly winked at her. \"It's okay, we don't mind!\"\n\n\"So we'd exchanged a few emails then, and the couple seems to be pretty attractive. We sent some photos, G-rated of course. We set a date for this previous weekend and went out and...\" Molly continued.\n\n\"They were different people,\" Drake finished. \"It was so weird.\"\n\n\"He doesn't just mean they were different than they advertised, or how they said they were... they were actually physically different people.\"\n\n\"What?\" Marie said. \n\nDuncan felt his wife squeeze the tip of his cock roughly, forcing his excitement back down.\n\n\"Thank you,\" he whispered.\n\nKelly smiled and winked up at him.\n\n\"Yeah,\" Molly said. \"They sent us some fake pictures. They were different people altogether.\"\n\n\"What the fuck?\" Ed asked. \"That's seriously fucked up.\"\n\n\"You're telling me!\" Drake said. \"I mean they were on the heavy side, but it's not like they were unattractive.\"\n\n\"Maybe it was an old picture?\" Rachel asked.\n\n\"Oh no,\" Molly said. \"It was really different. It was like they didn't even try to find someone that looked like them. Like my husband said though, they were on the heavy side but it's not like I'm not in the same boat.\"\n\n\"Oh shut up, you're gorgeous,\" Marie said. \"They were seriously different people?\"\n\nMolly nodded. \"So anyways, we finished dinner but politely refused the offer of drinks back at their place. We said we'd email them.\"\n\n\"It was surreal,\" Drake said. \"But yeah, our first meet up was a mild disaster.\"\n\nMarie shook her head and went on to tell a story of her and her husband's first meet up with another couple, and how awkward it had been. Other stories followed as the hours passed by, and finally at some point, Dana finally stopped stroking his cock. She leaned in to whisper another thank you to the two of them. Kelly squeezed the tip of his cock roughly once again.\n\n\"It's getting late,\" Mark said, glancing at his watch. \n\n\"Yeah,\" Duncan agreed. He moved to stand and suddenly his cock was standing proud in front of everyone.\n\n\"Jesus Christ Duncan, put the beast away,\" Mark said, raising his hands to seemingly ward it off.\n\nDuncan smirked and hopped out of the water, grabbing a towel from a nearby cabinet next to the back door and wrapping it around himself and drying himself off.\n\nHe saw Kelly scoot back over close to Dana and talk with her for a little bit before hopping out of the hot tub.\n\nDuncan caught himself watching each of the girls as they got out, admiring the different body types that each had. Heidi definitely still won the \"Nicest Ass\" contest, but it looked like Molly and Dana had the rest beat in the \"Perfect Breasts\" area.\n\nKelly and the other girls retreated inside to change as Duncan and the other guys hung around outside for a second.\n\nAs he and the other guys changed, Duncan apologized again. \"I mean it guys. I'm sorry about all that.\"\n\n\"It's no big deal man,\" Ed said. \"We know how they get.\"\n\nTen minutes later, Duncan was in the truck with his wife who snuggled up beside him, and Heidi.\n\n\"Sorry about that craziness, Heidi,\" he said. \"I really didn't think that was going to happen.\"\n\n\"Don't think anything of it,\" she said. \"I had fun.\"\n\nKelly smiled and snuggled up against him. \"It's okay, Baby. It was all in fun.\"\n\n\"So what did you say to Dana after I got out?\" he asked Kelly.\n\nShe giggled. \"Oh... I just promised her that we wouldn't forget about her when I started letting you have sex with other women.\"\n\nHe chuckled but shook his head. \"If.\"\n\nShe smirked at him, but didn't say anything. Conversation returned to normal and they drove home without incident.\n\nThe next day they all took it easy, sleeping late and being lazy around the house. Late in the evening, after supper, Kelly approached Duncan as he was chatting idly with Heidi.\n\n\"What do you think about letting Camille publish those photos of me?\" Kelly asked, changing the subject.\n\nDuncan smiled and thought for a second. \"I mean it's going to be where everyone can see it, including your mother.\"\n\n\"Why else do you think she wants to do it?\" Heidi said with a grin.\n\nHe chuckled. \"I'm fine with it if you are. I've always loved the way you look and this is just another way to show you off. The real question is, what do you think?\"\n\nKelly snuggled up to him. \"Well, I showed Heidi the pictures yesterday and we looked at the actual website. It's not like a porn website, not really. It's very... artsy,\" she said.\n\n\"I'm fine with it, Baby,\" he said. \"It's your body, and I'm okay with others seeing it.\"\n\nShe smiled widely, but was pensively quiet for a few minutes. \"Mother be damned, I'm going to do it!\"\n\nHeidi clapped excitedly along with her to Duncan's amusement.\n\n\"I'm gonna go email her right now!\" Kelly said, heading to get the laptop. She fired off a quick email to Camille and was surprised to get a quick response back.\n\n\"Sounds great! You'll be pleasantly surprised by the feedback, I'm sure. I'll forward any emails I get directly to this address. Swing by and fill out that form I showed you and I'll get started! Thank you!\" she said, \"Look for them in a few weeks to a month! I'll go ahead and put up a promo to generate some interest about you.\"\n\nShe included a membership in the email so that Kelly and Duncan could log in and see the finished product.\n\nHeidi grinned. \"I can't believe you did it!\" she said excitedly. \"I mean, you've changed so much. I absolutely love the new Kelly.\"\n\nKelly giggled happily and gave her a quick peck on the cheek. \"Maybe you'll end up doing one too,\" she said, prodding her.\n\nHeidi shrugged. \"Maybe,\" was all she responded with, but she did smile.\n\nThey watched a movie that evening, and then said their good-nights as Duncan and Kelly retreated to their room and Heidi to hers.\n\nKelly immediately began to suck his cock as soon as they entered to room. He kicked at the door, hearing it click as he reached for the back of his wife's head.\n\nShe stood really quickly then and opened the door. Giggling, she pulled him into bed and began to suck the tip of his cock again. As they made love, Duncan glanced up and saw the sliver of a head peering around the door frame.\n\n\"Don't let on that you see her,\" Kelly whispered as he pushed into her. \"I think she just needs to see two people in love, making love,\" she said.\n\nDuncan smiled and kissed her, pushing his cock deep into her. He flexed his Kegels repeatedly, using some of the other exercises to help him stave off an orgasm. As his cock plunged repeatedly into her succulent pussy, Kelly began to come quickly then. He felt her sex squeezing tightly down on to him, her muscles rippling up and down on his throbbing erection. He squeezed his eyes shut then and fought off his orgasm.\n\nKelly's eyes were rolling back in her head as he lifted her butt up with one hand, the other steadying him. He felt her pussy relax a little, and her breathing return to normal but continued to thrust deeply into her, soon he felt her pussy beginning to contract around him again, almost threatening to draw him in further as he pushed his cock deeply into her magnificent cunt.\n\n\"Fuck me,\" she groaned, driving both of their arousal levels to a new height. \"Oh fuck, Baby,\" she groaned, her pussy clamping down hard on him as he began to come deeply into her, his warm seed splashing into her pussy again and again. His crotch slammed again and again into hers, her pussy squeezing tightly down on him and her yelps of pleasure filling the room.\n\nFinally spent, he crashed down to the side as her orgasm began to subside. \"Oh fuck, Baby,\" she repeated. \"That was amazing,\" she gushed. \n\nDuncan glanced up and saw Heidi peering in. She disappeared a few seconds later and he heard her door close a few seconds after that.\n\nWork was busy as usual that week, and Kelly got a call from Camille about doing another photo session while she was waiting for her first one to post on the website. Duncan gave her his consent when she came to ask him, especially since Camille offered to pay her $500.\n\nWednesday evening, Kelly and Duncan went to the session. This time, the theme was centered on Yoga, and Kelly seemed to thrive in that environment. Duncan thought she looked sexier than she did the first time.\n\n\"Very nice,\" Camille said as she handed Kelly a check. \"The preview I put up of you is getting a lot of attention. Most of the feedback is along the lines of not wanting to wait for the set to go up. We've really got to talk about doing more sets of you! If you like, we can also include your husband, if the rumors about his manhood are true.\"\n\n\"Oh they're definitely true. We'll have to discuss it after these sets get put up,\" Kelly said.\n\nThe rest of the week proceeded normally, until Friday rolled around. In the evenings, they relaxed and ate dinner with Heidi, sometimes out at a restaurant, but a few times at home. She seemed to just need a place to relax and decompress for a little while, before facing her parents at home.\n\nDuncan and Kelly arrived home on Friday at the same time. Kissing him deeply, Kelly smiled and looked up at him lovingly. \"I think we need to take Heidi out tonight. Dinner at least, maybe dancing. Do you think she'll want to go?\" she asked.\n\n\"Yeah, probably. You want to go ask her or should I?\" he asked.\n\n\"You can,\" she said, changing the channel to something she wanted to watch.\n\nDuncan stood and headed towards Heidi's door and saw that it was cracked open slightly. He caught a flash of movement and saw her naked form for a brief second. He couldn't help but notice her perfect ass as she slid some shorts over it.",
        "He knocked on the door and cleared his throat. \"Hey Heidi?\" he asked.\n\n\"Yes?\" she called. \"I'm almost dressed.\"\n\n\"Kel and I wanted to see if you wanted to go to dinner with us,\" he asked. \"Figured we better ask before you get too undressed.\"\n\nShe peeked her head out. \"Can we go to the club afterwards?\" she asked.\n\nDuncan glanced over at Kelly, who smiled and nodded happily. \"That's a great idea!\" she said, hopping up and coming over.\n\n\"Then yes! Give me a second to get all \"slutted\" up,\" she said with a grin.\n\nDuncan grinned. \"Kelly, why don't you go get something on a little naughty as well.\"\n\nKelly grinned widely. She'd started working out with Heidi in the evenings, doing yoga as she'd said she'd wanted to start doing a few months ago. It had only been five sessions of course, but she said she felt so much better already. She'd also started going to lunch with her, though she would mix it up with Kara, Kimber from Double D's and Erin, who had such a massive crush on her husband.\n\nHe was happy she was so popular, and all of them were incredibly hot, so that certainly didn't hurt things. The daily workouts she'd been doing with Heidi were definitely paying off, and she was even sexier than she'd been before, if such a thing were possible. She'd always been naturally flexible, but the yoga had pushed that even further in the short week that she'd been doing it. He couldn't imagine what she'd be able to do after a few months.\n\nKelly grinned and hurried to their room to find something slutty of her own to wear.\n\nDuncan chuckled and went to change.\n\n\"So where are we going?\" he asked a while later.\n\n\"Double D's?\" Kelly suggested.\n\n\"Sounds awesome,\" Heidi said.\n\nDuncan drove to the restaurant and when they went in, they were amazed to see Kara on the waitress board. Kelly quickly chose her section as the three of them sat down and waited.\n\nKara came around the corner, her top an emerald green color. \"Duncan, Kelly!\" she called.\n\n\"Kara!\" they both responded. \"What are you doing here?\" he asked.\n\n\"Working...\" she sighed. \"Sam left me,\" she said with a toss of her head.\n\n\"What?\" Kelly asked. \"Oh I'm so sorry!\" she said.\n\nKara waved the thought away. \"I'm over it. After I told him how much fun I had with you two and still behaved, he seemed okay with it. Then he decided that it was okay to go and sleep with one of my former friends.\"\n\n\"Oh, Honey,\" Kelly said, standing and hugging her.\n\n\"Wow, you weren't kidding,\" Heidi said. \"They could be twins.\"\n\nKelly smiled and turned. \"Kara, this is my friend from when we were kids, Heidi.\"\n\nThe two exchanged pleasantries.\n\n\"So why did you have to start working here?\" Duncan asked. He seemed to be eye-level with her ample cleavage and couldn't seem to tear his eyes from it.\n\n\"Well, we were living together, I have to be able to afford rent since he left.\"\n\nDuncan nodded. \"I can give you a raise, goofball, all you had to do was ask.\"\n\nShe smiled. \"Aww. I appreciate it. I'm not saying I don't want one, but I doubt it would be enough. Besides,\" she said, looking down at her outfit. \"The tips are really great. I love what I get to wear, and it's really fun! Besides, where else will I get a reaction like that?\" she asked, looking directly at him.\n\n\"Okay,\" Duncan said, grinning and raising his arms in surrender. \"You look incredible.\" She winked at him, and then took their drink order and disappeared.\n\n\"You should totally buy her top for an hour,\" Kelly said with a grin.\n\n\"That's so evil,\" Duncan said. \"I don't want her to feel awkward.\"\n\nSomeone from a nearby table must have heard them. \"I'm sorry, you can buy their tops?\" the younger man asked.\n\nKelly grinned and nodded at him. \"Our friend Erin works here too, she said it happens most evenings.\"\n\n\"New favorite restaurant,\" the young man said with a grin.\n\nKara reappeared then with their drinks. \"Y'all know what you want?\" she asked.\n\n\"Actually, not yet,\" Kelly said. \"We've been a little distracted,\" she admitted. \"Can we have a few minutes?\"\n\nKara grinned and winked and then went to check on her other tables. When she got to the young man that had spoken to them, she stopped and seemed to be talking quietly. Duncan saw her smile and nod as he spoke with her. The man pulled out his wallet and handed her what looked like a $100 dollar bill. Kara reached behind her and unzipped the constrictive green top that encased her perky breasts.\n\nDuncan could see her blushing as she freed them. Turning, she shook her head at him. \"You totally told him didn't you,\" she said coming over.\n\nHe looked up but felt his eyes drawn back down. \"Honestly...\" he said, \"I uh...don't remember.\" He looked back at her eyes then. \"Wait, what was the question?\"\n\nShe rolled her eyes. \"Men are so easy.\" Duncan smiled and tried to surreptitiously admire Kara's breasts. True to the theory that she and Kelly were related, Kara's breasts were astonishingly close to his wife's. Her nipples were erect as well, but he couldn't tell if that was from the cool air, excitement, or if it was just natural like Kel's.\n\nKelly giggled. \"I suggested that Duncan buy your top for an hour, but the young man heard me first. I guess it's not a well-known policy?\"\n\nKara smiled. \"I've only been working here for a week or so, but it's happened twice. This makes three.\"\n\n\"Are you getting used to it?\" Heidi asked.\n\nKara nodded. \"Actually, yes. I'm pretty shy by nature, but it's getting to where I don't think about it.\"\n\n\"You've got beautiful breasts,\" Heidi said with a smile.\n\n\"Thanks,\" Kara responded with a slight blush. \n\nA few minutes later, they'd ordered and resumed dinner conversation. Kara stayed in their section when she could, talking to the three of them and giving the young man that had purchased her top as much of a show as she could manage.\n\nEventually, the young man's party stood to leave and they gave her the top back. Duncan was a little sad to see it returned, but to his surprise, Kara didn't put it back on. Tossing it into his lap, she winked. \"I'll put it back on when you tell me to,\" she said.\n\nChuckling, he folded it on top of his lap and continued to eat.\n\nKara's breasts were works of art. The soft, pale flesh was naturally enhanced by her red-hair. Her areolas were a little larger than quarters and they seemed to puff out slightly. The curve of the breasts seemed to defy gravity and curve upwards, even more so when she arched her back or leaned backwards.\n\nShe definitely knew how to accentuate them with her posture. He chuckled as he saw her head over to check on another of her tables, this one filled with four business men. She cocked her head sexily and arched her back, drawing her breasts up and outwards even more than they were.\n\nShe felt him staring then and turned, blowing him a kiss. He chuckled and turned back to the meal. After they finished, he returned her top to her and got a kiss on the cheek in response.\n\n\"Y'all have fun at the club,\" she said, waving as they began to leave.\n\n\"You sure you don't want to come?\" Kelly asked. \n\n\"Yeah, I appreciate the invite but I'm already tired and I have to work late,\" she said, frowning.\n\n\"It was lovely to meet you,\" Heidi said, leaning in and kissing her cheek.\n\nKara smiled at her then. \"Likewise,\" she said.\n\n\"Have fun!\" she said, leaning in and kissing Kelly on the lips.\n\nGiggling, Kelly turned and took Duncan's hand in hers. Heidi came up on his other side and wrapped an arm through his.\n\n\"You ladies ready to dance?\" he asked.\n\n\"Hell yes!\" Heidi said.\n\nHe led them to his truck and drove to the club. After they entered and paid the cover charge, Duncan led them to the bar and bought a round of shots, followed by a round of drinks before they headed to sit for a few minutes. \n\nAs the alcohol kicked in, Kelly winked and headed down to the dance floor. \"Baby, will you keep my best friend company?\"\n\nDuncan smiled. \"Of course!\"\n\n\"Don't be afraid to get cozy,\" she said, winking at Heidi before disappearing into the crowd.\n\nDuncan and Heidi moved to the railing to watch. \"You can join her if you want,\" Duncan said as Heidi moved close.\n\nShe shrugged. \"I will in a little bit.\"\n\nHe nodded.\n\nKelly moved to the center of the dance floor and began to undulate sexily, and was quickly approached by several different men. She put an arm on the shoulder of one and began to get close to him.\n\n\"That doesn't bother you?\" Heidi asked, nodding down at her.\n\nDuncan had a bit of deja-vu then, and wondered how often he'd have to answer that particular question.\n\n\"Kara asked me the same thing in The Bahamas,\" he said. \"Look at her,\" he said, moving closer. He leaned close to her ear and smiled when she slid in front of him. He put his arms on the railing on either side of her and inhaled deeply. She was wearing that intoxicating perfume.\n\n\"God, you smell good,\" he said, his voice deep and resonant.\n\nShe leaned back into him, her eyes closed. He wrapped an arm around her waist and then pointed down towards his wife. \n\n\"I love when your voice gets so deep and throaty. It does naughty things to me,\" she whispered playfully.\n\nDuncan chuckled and kissed her cheek, then gestured towards Kelly as he pulled Heidi closer with one hand. He felt her inhale sharply as their bodies got close. \n\n\"She's always been gorgeous, and I've always noticed that people look at her and respond in a certain way towards her. Over the years that we've been together, I've gotten used to it.\"\n\nHeidi nodded and swayed backwards into him. He heard her sigh deeply as she brushed up against his bulging crotch.\n\n\"When we started to experiment with showing her off, I noticed that it actually excited me to see her being admired, physically and visually, by others, men and women alike.\n\nHe placed a single hand on her hip and pulled her tightly up against him, forcing his erection into her crack.\n\n\"Fuck,\" she whispered.\n\n\"Look at how sensually she's moving up against the guy she's dancing with,\" Duncan said, pointing downwards at Kelly. She'd turned around and was rubbing her butt up against the guy's crotch, his hands were groping her breasts openly. She leaned back then and wrapped both arms behind her head, around his neck.\n\nHeidi followed her example then and began to slowly move her ass back and forth against Duncan while she brought her arms up and around his neck.\n\n\"C'mon,\" he said. \"Let's go dance.\"\n\nShe turned and kissed him quickly then and pulled him quickly out to the floor. Not bothering to try and locate Kelly in the mass of people, Heidi picked a random spot and turned back towards him.\n\nHe was struck at how truly gorgeous she was. She kept her thick, curly hair shoulder length, and she was tall enough to come up to his chin. He reached for her as she took his hand and moved close, her eyes looking up into his as they danced.\n\nHer body moved in time with the music, her breasts jiggling and threatening to burst free from the sexy top she'd chosen. Her hand moved around grasping the small of his back and pulled his crotch roughly towards her. He felt the tip of his cock push up against the soft flesh of her panty-clad pussy. She'd moved them in such a way so that her leg was wrapped around him, her skirt lifting up and his cock pointing out from his jeans so that it was able to gently prod at her sex. He reached around with a large hand and easily lifted her up by a supple ass cheek.\n\nShe looked at him wide-eyed then, biting her lip and inhaling sharply. He thrust gently into her as the throng of people crowded around them. The tip of his cock pushed at the fabric of her panties and slid them upwards as he gripped the other ass cheek with his other hand and pulled her even more forcefully. Her eyes fluttered for a second and she sighed contentedly as the bulge he was sporting slid gently upwards against her clit, eliciting a moan of pleasure.\n\nShe lowered her leg then and spun around, arching her back into him and pulling both of his arms around her waist as she ground her ass into him. He ran his hands from her shoulders down, across her breasts and then to her waist, where he pulled her even more roughly up against him.\n\nHe turned, seeing a familiar flash of red and saw Kelly approaching, her dance partner in tow.\n\n\"Hi Baby,\" she said, turning as she reached his side. \"This is Malcom,\" she said, indicating the large black man she was dancing with.\n\nDuncan cocked his head in greeting as Heidi turned and saw Kelly. She immediately backed away from Duncan and began to dance much more subtly with him.\n\n\"Oh shit,\" Malcolm said, seeing that Kelly was married. \"Yo, I didn't know that this was your woman. That's my bad, man.\"\n\nDuncan shook his head. \"You're fine, keep dancing with her. She likes getting man-handled,\" he said with a grin. \n\nHe turned and winked at Kelly. She shook her head in mock disdain as Malcolm resumed dancing. Duncan smiled as he saw the large man pull his wife a little more roughly into him. He knew she must be feeling his cock pushing into her rear.\n\nDuncan felt a hand on his face, and turned towards Heidi as she forced him to look back at her. \n\n\"You're dancing with me right now,\" she said, grinning up at him. \"It's so exciting, being out like this with you two,\" she admitted. \"I've always been very attracted to you, but it's been so taboo, so wrong to even think about,\" she said, moving forwards and kissing his neck.\n\nHe chuckled and brought her hips roughly into him, driving his erection forwards and into her crotch again.\n\n\"Fuck,\" she moaned, closing her eyes and biting her lip. \"Is it wrong to want you to slide my panties aside and fuck me right here,\" she asked quietly.\n\n\"The thought has definitely crossed my mind,\" he said. \"You're so damn intoxicating.\"\n\nShe looked up at him and he saw her melt a little before his eyes. He chuckled and kissed her on the forehead. \"You know, you're part of our family. You're really welcome to stay, or to come back after you visit your folks.\"\n\nShe smiled at him then, \"You guys are the nicest people in the world.\"\n\n\"I can be pretty mean,\" he said playfully. He turned and looked at Kelly then. She'd undone one strap of her top and was displaying one of her nipple rings proudly to Malcolm, who was pulling it gently with his fingers.\n\n\"I mean it,\" Heidi said, drawing his attention back to her. \"I love you guys and I'll try my very best to make it up to you one day.\"\n\nDuncan brushed the hair from her eyes then. \"Don't worry about it. Family takes care of family. And you know we love you too.\"\n\nShe leaned into him then, smiling at Kelly as they danced. The DJ began to mix another song in then, a little faster than the last.\n\nHeidi looked back up at him then, but didn't say anything. Her deep blue eyes locked on his and didn't stray as they danced.\n\nKelly leaned over then and kissed her husband. \"You two look absolutely delicious,\" she said.\n\n\"Having fun?\" Duncan asked.\n\nShe grinned and winked. \"Tons.\"\n\nMalcolm spun her around back towards him and pulled her roughly into his chest. \"Hey, you're dancing with me right now,\" he said to her. He turned and looked at Duncan and grinned.\n\nDuncan grinned back and cocked his head in response.\n\n\"Oh, yes sir,\" Kelly said playfully, resuming dancing up against the larger man.\n\nAfter several songs, Kelly finally said goodbye to her dance buddy, but not before he'd given her his number. She chuckled and handed it to Duncan.\n\n\"Here's another one for the cork board, Baby,\" she said.\n\n\"You seemed to be having fun, you don't wanna keep it?\" he asked her.\n\n\"Well, he did ask what you thought about going home and tag-teaming the two of us girls,\" she said. She giggled then. \"I had to get him to explain what tag-teaming was, though.\"\n\nDuncan laughed. \"I would have figured it would be self-explanatory,\" he said with a grin. \"Y'all ready to go?\"\n\nHeidi was still close up against him, her hand finding his as he led the two of them off the dance floor.\n\nOnce in the truck, the two girls began to talk about the evening, and how sexy the other looked. As they pulled into the drive back at home, the two of them were being very \"handsy\" with each other, playing with each other's hair and making excuses to smooth clothes or fidget with each other's ear lobes and the like.\n\nSmiling, Duncan took them inside.\n\n\"Night guys,\" Heidi said, smiling and heading towards her room.\n\n\"Night,\" Kelly said, turning and pulling him back towards theirs.\n\nDuncan waved as Heidi blew him a kiss and then followed his incredibly sexy wife to their room as she began to strip, leaving a trail of sexy garments leading to their door. She'd gotten down to her panties as they reached the door, and seductively slid them off as she looked back wantonly at him. \n\nDuncan followed suit and stripped down quickly. Complete silence enveloped the house then, save only for the sound of their kissing. Kelly opened the curtains to let the moonlight in for a second, but then quickly jumped on top of him again. Her small hands reached for his cock, its tip finding its way to its rightful place in her mouth. Her warm tongue accepted his girth greedily as she pulled him into her.\n\nMoaning, he glanced up and saw Heidi peering around the door.\n\nKelly looked back then and saw her friend, and then turned to look up at Duncan. He immediately knew what she was asking, and nodded slightly in response.\n\nStanding, Kelly went to the doorway and held out her hand to her friend, silently leading her to their bed. "
    ],
    "authorname": "Mentalcase",
    "tags": [
        "wife",
        "voyeur",
        "husband",
        "blowjob",
        "exhibitionism"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/lucky-man-ch-06"
}