{
    "title": "Jessa Ch. 07",
    "pages": [
        "Jessa was toying with the remains of her breakfast. Torah sat next to her, tapping a finger in annoyance. \"Just eat it,\" he said in exasperation. \n\n\"I'm full,\" she replied, yet again. The children and Mia had gone off to program work. Horach, Bona and Torah were discussing some cropland that needed to be harvested, when he wasn't nagging her to eat. She was mostly staring out the window at the terraced gardens behind the villa. Torah pulled his ever present cell phone out of his pocket and glanced at the screen. He tapped it, put it up to his ear and said \"Hold,\" then strode from the room.\n\nJessa saw her chance to escape. \"I'm going back upstairs,\" she told Horach and Bona, who barely glanced at her. When she got back out into the atrium, she could see Torah through the front windows. He was pacing back and forth on the porch. She turned toward the stairs, but then glanced out the back again, at the gardens. They seemed much more inviting in the late summer sunshine than her molecular biology program. She wandered out back and began climbing among the terraces, expecting Torah to emerge at any moment, looking for her. She had come to understand that when he took a voice call, it was probably something important, but he was also usually quite terse, at least in her presence. Her fingers reached for the choker about her neck. It wasn't like he couldn't easily find her when he did finish his call. She reached the last terrace and continued to climb up the steep hillside. Above her, at the top of the hill she could hear the whir of the wind turbines, spinning deceptively slow in the gentle wind.\n\nWhen she topped the hill, she walked to the nearest turbine and leaned against the cool metal, studying the array of the wind farm. The blades were quite long, and the turbines fairly closely placed. If she remembered correctly, that meant the winds were mostly gentle in this area, without turbulence being a major concern. She wondered if Torah's family owned the wind farm and the power it produced. There was still so much she didn't know. They had talked about harvesting this morning. There were no fields in sight from where she was standing. How much land did they have? She found herself gazing off to the southwest, toward her home; what had been her home.\n\n\"You shouldn't be up here,\" Torah said from behind her.\n\nShe started and turned. She hadn't heard his approach over the sound of the turbines. He was breathing hard, like he had run all the way up the steep hill. But he didn't seem mad, as he watched her warily. She walked toward him. \"Is everything all right?\"\n\n\"No.\" He ran his hands through his hair. \"Come down off this hill. The turbulence can be dangerous.\"\n\nJessa bit her tongue. She had calculated the wind speed and the turbulence as she watched the blades turn. But it was obviously not a good time to argue the relative dangers. She obligingly joined him and followed as he led the way down the hill. \"What has happened?\" she asked softly, not really expecting an answer.\n\n\"I... We need to go back to Dusseldorf.\"\n\nShe trotted a few steps to pull even with him so she could see his face. \"Torah? What is it?\"\n\nThe strain in his face was obvious now that she was closer. \"One of my team members has been killed.\"\n\nIt felt like the information had been wrenched from him against his will. \"I'm sorry, Torah.\"\n\nHe glanced at her, his jaw working. For just the briefest moment, she thought she saw a flicker of anguish in his eyes, but then the ice cold persona was taking over his features. At least this time, it didn't seem directed at her. \"Servants are packing for us. We need to leave as soon as possible.\" He glanced at her. \"You should change into a gown.\" Then he sighed. \"And Mother has asked to speak to you before we leave.\"\n\nJessa almost stumbled in surprise. Shonah had barely spoken to her since her arrival. Jessa rarely even saw her except at dinner, when she mostly ate in silence, watching the rest of the family. Torah took her arm when they reached the top of the terraced garden. He trotted down the steps between the terraces, both pulling her along and supporting her from falling.\n\nWhen they reached the atrium, he pushed her toward the stairs. \"Go dress, then Mother is waiting for you in her sitting room.\" He headed off in a different direction. Jessa hurried up the steps and found servants packing, even as Torah had indicated. There was a small bag for him, as he had a full wardrobe at his apartment in Dusseldorf. There was a much larger bag for her. The thought of someone else picking out her clothes and underwear filled her with dismay, but she knew Torah would be mad if she wasted time to interfere with the servants' work, so she bit her lip and went to find a gown for the trip. She made hasty work of dressing, then hurried back down the stairs to knock timidly on Shonah's sitting room door. A servant opened the door to let her in, then left, closing it behind her.\n\nJessa bowed toward Shonah and waited for permission to approach. The frail woman waved her to a chair. Jessa knew that Horach was Shonah's older brother, yet she looked at least twenty years older than him. Her failing health, while it hadn't conquered her yet, had certainly beaten her down over the years. Jessa sat and folded her hands in her lap. \"My Lady,\" she said quietly. \n\nShonah's sharp eyes studied her. When she finally spoke, her voice was raspy but strong. \"I love my son.\" She paused to let that sink in. \"And you have confounded him at every turn.\"\n\n\"I don't know how to be what he needs me to be,\" Jessa said softly.\n\n\"Hush!\" Shonah commanded her, and Jessa could hear echoes of Torah in that dictate. \"Have you figured out what he is, yet?\"\n\nJessa gave her a puzzled frown. \"I don't know what you mean.\"\n\n\"Your papers say you have an IQ of 140. How can such a smart girl be so stupid?\"\n\n\"I'm not stupid,\" Jessa protested. \"But I can only learn what the Council allows me to learn. You Circles have hidden so much from us.\"\n\n\"There is learning. And there is figuring out.\" Shonah leaned toward her. \"You have been gifted with an excellent brain. You need to use it to start figuring things out before you get my son killed.\"\n\nJessa paled. \"I'm not trying to get him killed,\" she whispered, shaking her head.\n\n\"Your stupidity will get him killed,\" Shonah insisted.\n\n\"If he would answer my questions, tell me what is going on, then I could help him,\" she argued.\n\n\"He doesn't owe you answers. You owe him trust. But at every turn you defy him.\"\n\n\"No! I've tried to be obedient, to do what he tells me to do.\"\n\n\"You defy him in your heart. I see it. He sees it. When he most needs to think of nothing but his job, he is thinking about you. It got him shot, this time. Next time, it may be fatal.\"\n\nJessa jumped to her feet. \"How can all this be my fault? I wasn't even there!\" \n\n\"Because of you, he fights his training, fights what he was molded to be since the age of twelve.\" Jessa could only shake her head in confusion. Shonah continued. \"Now he is taking you to Dusseldorf because he cannot trust you here. In Dusseldorf, you will be a distraction, a constant worry for him. It will rob him of his edge, steal his training from him and get him killed.\"\n\n\"What do you expect me to do,\" Jessa exclaimed. \"I'm not making him take me to Dusseldorf.\"\n\n\"You need to accept your position, your fate. In your heart. Not just in words of convenience because you are afraid or devious.\"\n\nJessa lurched back as if she had been slapped. She stared at Shonah. \"I have no control over any of this,\" she said with a hiss. \"I was stolen into this place and this life. I can try to make the best of it, but I cannot change what is in my heart.\"\n\nThere was a knock on the door and Torah walked in without waiting for an answer. His eyes took in the two women staring fiercely at each other. He strode across the room and took Jessa's arm, tugging her out of what looked for all the world like an attack stance. \"Mother?\" he said, and it was more question than honorific.\n\n\"She will get you killed,\" Shonah snarled.\n\n\"Only if I let her,\" Torah replied. Jessa's head snapped to stare at him. \"My weakness will get me killed, Mother. Not her strength.\"\n\n\"She is your weakness,\" Shonah declared, settling wearily back in her chair. Torah waved and a servant appeared from nowhere.\n\n\"That may be true,\" Torah said more softly. \"But it is still my weakness, my failure.\" He pushed Jessa behind him, then bent and kissed his mother's cheek as the servant adjusted pillows behind her back. \"Have faith, Mother. I will return and you will have another grandson to bless.\" \n\nShonah waved weakly in dismissal, but her eyes brimmed with love for her son. He kissed her forehead, then straightened and took Jessa's arm again, pulling her from the room.\n\nOut in the atrium, Jessa tried to pull him to a stop, but he was having none of it. He pulled her along, presumably toward the garage. \"Torah,\" she said, trotting to keep up with his long, determined strides. \"I'm sorry I lost my temper. She was blaming me for things I couldn't control, but I shouldn't have...\"\n\n\"Enough,\" he snapped. Then more calmly, \"There's been more than enough tempers lost recently.\" He looked at her as he reached for the door down to the basement garage. \"I need you to be quiet for a while so I can think. Can you do that for me? No questions, no argument, no defiance.\"\n\nShe swallowed and nodded.\n\n\"Good girl,\" he muttered.\n\n****\n\nThey were flying down the highway toward Dusseldorf, faster than Jessa thought was possible for an electric car. She eyed the glove compartment more than once, wondering if the gun was in there still, or again. She was doing her damnedest to remain quiet, although a hundred questions were pounding in her head and her heart and even deep down in her belly. She felt Torah glancing at her from time to time. She knew if she looked back at him, though, a question would come bursting out of her mouth. She hugged herself, staring out the window at the passing countryside.\n\n\"One question,\" he said out of the blue. Jessa looked at him in surprise. \"Be smart. Make it one I can answer.\"\n\nShe thought about all the questions she wanted answers for, all the questions she had already asked and he had refused to answer. \"Was it my fault that you were shot?\" she finally asked, her voice soft with dread.\n\nHe glanced over at her, before he returned to his incessant scanning of the road ahead and behind. \"Is that what Mother told you?\"\n\nJessa nodded, then remembered he wasn't looking at her. \"Yes. Well, she said I was a distraction from your job. That you fight your training, because of me.\" She risked looking at him. His jaw was working in that way that said he wasn't going to answer. She slumped down in her seat and looked back out the window at the passing scenery.\n\nSeveral miles went by before he spoke again. \"I was trained to act and react in certain ways to certain situations.\" His words were very quiet, and Jessa fought the compulsion to look at him. She was sure he would speak more freely if she made like an inanimate object. \"Sometimes, you present like one of those certain situations.\" Jessa realized she was holding her breath, but still she couldn't release it. It felt like another mile passed by before he spoke again. \"I'm trying to find my way not to see you as my enemy, even when you do things...\" He drew a deep breath. \"But if I pause to think about the meaning, the implications, the motives behind a behavior... then I can't react instantaneously.\" He reached over and laid his hand on her leg. \"I don't want to react reflexively with you. But I need to react that way with my enemies. I haven't resolved that. I responded a fraction too slowly and got kissed by a bullet. That wasn't your fault. That was on me.\"\n\nJessa squirmed in the seat. His answer only stirred up even more questions. She bit her lip, determined to respect his parameters. He actually laughed at her. \"Answers are like orgasms to you, aren't they?\"\n\nShe nodded miserably. His fingers inched the fabric of her gown slowly up her leg, even as they inched higher on her thigh. Jessa was breathing faster, her hands gripping the edges of the seat, watching with fascination as his hand gathered the fabric of her gown, draping it about her waist before plunging between her legs. Just as suddenly, her seat back tilted and she was staring at the ceiling of the car while Torah's fingers were taunting her pussy, only barely kept at bay by the fabric of her panties. Then she didn't even have that protection. He had twisted, yanked and suddenly the wisp of fabric was gone and his fingers were running up and down her slit, spreading her moisture, teasing her clit. When she writhed against the sweet torment, he reached up and tightened her seat belt, binding her hips tight against the seat, before he continued his one-handed assault.\n\nTwo fingers plunged inside her, meeting no resistance. She cried out, but spread her legs so he could probe ever deeper. His thumb pressed against her clit and the tips of his fingers inside slid down the front wall of her pussy over and over again. All she could say was, \"Uhh, uhh, uhh,\" over and over again, until she was screaming and bucking against his hand as much as the seatbelt would allow. He smiled as he retrieved his hand and sucked her juices from his fingers. Jessa teetered at the edge of unconsciousness in the reclined seat.\n\n****\n\nTorah was shaking her shoulder, waking her. When she looked up at him, the icy cold was back in his eyes. \"Stay in the car,\" he said. \"Are you awake, do you understand what I'm saying?\"\n\nJessa nodded. She looked around and realized they were in an underground parking garage. Torah opened the glove compartment and pulled out the gun and extra clips, slipping them into the pockets of his light jacket. \"Stay in the car until I come for you,\" he repeated. Then he was slipping out of the car, closing the door silently. She unbuckled her seatbelt and turned to watch him, but he had disappeared from sight. She didn't catch sight of him again until he was right beside her door, opening it for her. She climbed out, watching him for guidance. His eyes were scanning the parking complex, even as he led her to the back of the car and pulled their bags from the trunk. As he was closing the trunk, she grabbed both bags, pulling their straps over her shoulders. If he was her protection from whatever might be out there laying in wait, then she was going to make sure he was unencumbered. He glanced at her with a frown, but then nodded and led her toward the elevators.\n\nOnce they arrived at the floor where his apartment was, he seemed to visibly relax. He gave the hall only a cursory scan, then was opening the door, taking the heavier bag from her shoulder as she passed by him to enter. After he secured the door, he took the other bag and threw them into the bedroom, then strode into the kitchen to the refrigerator, opening it and staring inside. \"What do you want to eat?\" he asked.\n\n\"Is anything in there edible?\" she said, wrinkling her nose.\n\n\"It's been stocked. They knew I was coming.\"\n\n\"Why don't I cook then,\" she offered. \"You probably have calls or texts or whatever.\"\n\nHe cocked an eyebrow at her and she was relieved to see that the icy coldness had faded. \"That's very domestic of you.\"\n\nShe shrugged. \"I like to eat. Just not when someone is nagging me,\" she added with a glare at him.\n\nHe pulled his cell phone out and looked at the screen. \"Right on cue,\" he muttered, putting it up to his ear. \"Yeah. Right. Bring them up.\"\n\nShe went to the refrigerator to take inventory as he ended the call. \"That was Erich. He's bringing your security team up.\"\n\nShe wasn't sure which was more surprising, that he told her what the call was about, or that she had a security team. \"My what?\"\n\n\"Your security team,\" he repeated.\n\nShe snorted. \"To keep me from getting in trouble?\"\n\n\"To keep you safe when I'm gone.\" He leaned around her to pull a bottle of wine out of the refrigerator. \"And to keep you from getting into trouble.\" \n\nShe pulled items out of the refrigerator, watching him as he poured a glass of wine. His eyes had darkened, and when he looked back up at her, she couldn't read his expression. \"Cook something fast. My team is meeting in a little while. And afterward, I have an experiment I'd like to try.\"\n\n\"An experiment?\"\n\n\"An experiment,\" he repeated, his eyes gliding down the fitted lines of her gown. And just like that, her belly began to roil in anticipation. \"Cook,\" he said, waving toward the stove as he began typing something in to his cell phone, wandering out to the living room. Jessa found a chopping board and started in on the vegetables she had found. A few minutes later, there was a knock at the door. She put the knife down and walked softly to the entry of the kitchen, where she could see the living room. Torah and Erich were in quiet conversation. With them were two huge men that managed to make both Torah and Erich look like the last picked for the team. Both of those men were eyeing her speculatively. Jessa was pretty sure either one of them could have broken her in half, despite her own athletic build.\n\nErich looked up and spotted her. He crossed the room quickly and pulled her into an embrace, kissing her cheek. It wasn't his usual bear hug, and Jessa wondered if he was angry at her, or just bothered by events. A moment later, he was pulling her toward the entryway to greet the newcomers.\n\n\"Jessa, this is Charl and Menah. They will be watching out for you when Torah is away.\"\n\nJessa forced a smile at the men, who both bowed slightly and addressed her as My Lady, even though she wasn't married to Torah yet. The smile remained fixed in place as she glanced over at Torah and raised an eyebrow. He merely shrugged. \"Dinner?\" he asked.\n\n\"On it,\" she replied and hurried back to the kitchen. She tried to eavesdrop on the conversation from her station at the work counter, but they were speaking very low, and she eventually gave up, throwing the meat into the oiled pan to sizzle. When Torah came back into the kitchen, alone, to retrieve his wine, she said, \"They weren't wearing crests.\"\n\n\"Very observant,\" Torah noted after a moment.\n\n\"Like you and Erich.\"\n\n\"Right,\" he conceded.\n\n\"But they looked more like elite,\" she commented, not looking up at him.\n\n\"That sounds like profiling,\" he pointed out, refilling his wine glass. \"And don't think I can't recognize your thinly veiled attempt to disguise your questions.\" She glanced askance at him, but there was a ghost of a smile on his lips.\n\nShe shrugged. \"I figured if they were Elites, they probably weren't on your team,\" she said, stirring the vegetables into the pan.\n\nHe walked over and took her chin. \"That smells delicious. And those men are support members of my team. Now enough.\"\n\n\"Torah?\"\n\n\"Don't push it, Jessa,\" he warned, his voice low.\n\n\"I was just going to ask if I could go shopping for some supplies.\" She gestured around the kitchen. \"Things I like to cook with; herbs, spices, stuff like that. You have hardly anything to work with here. I mean, if we're going to be here a while.\"  \n\nHe studied her a moment. \"All right. If I am not here, you will take Charl and Menah. And you will do whatever they tell you to do, without questions or argument.\" She nodded. He got two plates out of the cupboard and she dished up the dinner. \n\nTorah ate quickly, and without nagging her to eat, then left. As he went out the door, Charl came in and stood with his back to the door. He must have been waiting out in the hall. Jessa gathered the plates to take them back to the kitchen. \"You don't have to stand there like that,\" she said. \"You can sit down.\"\n\n\"No, My Lady. I have my instructions,\" he replied stiffly. She regarded him with a shake of her head.",
        "\"Are you Elite or Circle?\" she asked.\n\n\"I'm not permitted to say,\" he replied apologetically.\n\n\"Of course you aren't,\" she muttered and headed into the kitchen. \n\nShe cleaned up the kitchen and headed into the bedroom to unpack. She was thrilled to find her laptop tucked in her bag, and even more thrilled to discover that it had survived Torah tossing the bag onto the bedroom floor. She changed into a more comfortable top and shorts and sat on the bed to work on her programs. She was still there when Torah came in several hours later, pulling clothes off before he even got through the bedroom door. He glanced at her.\n\n\"We need to get you a desk,\" he said.\n\n\"Why?\" she asked.\n\n\"I don't think you're going to be comfortable sitting like that when you're six or seven months pregnant.\"\n\n\"Oh,\" was all she could think to say.\n\n\"For right now, get undressed. And I think you better move your laptop.\" \n\n\"Oh,\" she repeated, but with a totally different inflection. She suspected she was going to like his experiment.\n\nShe obeyed so fast that when she looked back at him, he was shaking his head in disbelief. \"Gods, woman. If only you could be that obedient all the time,\" he said with exasperation, and not for the first time. She hesitated, wondering if a lecture was coming. His expressions had been so hard to read this day, like there were mixes of every persona there, warring with one another. Was that what Shonah had meant? But then he looked hard at her. \"On the bed, on your back.\" She did as she was told, watching as he finished undressing. Then he was crawling across the bed like a stalking predator and when he reached her, he was all domineering Torah, his eyes dark and hooded. She shivered in anticipation.\n\nWhat he did next was unexpected. He kissed her, deeply and long. He had only kissed her a couple of times before, perhaps out of healthy respect for her teeth. This time, when he finally pulled away, she was left panting, her chest heaving. He lay partly atop her, his mouth latching onto one of her nipples while his hand surrounded her other breast, squeezing and kneading. His leg shoved hers apart, then pinned her thighs, holding them like that. His erection was pressed against her hip, pushing rhythmically. Jessa groaned, throwing her head back, desperate for more stimulation, thrusting her breasts deeper into mouth and hand even when he nipped. After a moment, he applied lips and teeth to her other breast and his hand snaked down between her legs. She gasped as his thumb pressed against her clit and a finger slid inside without resistance. She squirmed desperately, seeking the friction she needed, but with one last, almost painful tug at her nipple with his teeth, he slid more of his weight on her, pushing up until he was gazing down at her face. \"Ask a question, Jessa.\"\n\n\"Wha...\" she gasped, unable to process anything but the unmoving pressure on her clit. \n\nHe leaned down and nipped her lower lip. \"Ask a question. Ask me something I can answer.\"\n\nShe shook her head. \"I need to come. Please, Torah.\"\n\n\"Ask or I will leave,\" he warned.\n\nShe searched her mind desperately for a question he would answer, anything to get him back to the business at hand, then something popped into her mind. \"The volleyball game,\" she gasped. He smiled briefly and nipped her lip again.\n\n\"What about it?\" \n\n\"Were you playing your best?\" She was watching him now, trying to see his face in the shadowy room. She thought she saw his eyes twinkle. She flexed her hips, but he just clamped down even harder with his hand, watching her as intently as she was watching him.\n\n\"No,\" he said, and suddenly his fingers and thumb were working in tandem and she flew over the edge, alternating between gasps and screams as she came violently. \"I knew it!\" he exclaimed in triumph. \"Answers make you come. That's why you won't fucking stop asking questions.\" He plunged two more fingers inside her. With his knuckles relentlessly pumping in and out of her opening and his fingertips working inside her, she was coming again before the aftershocks from the previous orgasm had faded away. She screamed soundlessly. \n\nHe was suddenly on top of her, inside her, savoring the aftermath of her orgasm as ripple after ripple of aftershocks followed. \"What about you? Were you playing your best?\" he asked, slowly moving in and out. She was rolling her head back and forth, not hearing him and he reached up to capture her face with both hands. He nipped her chin till she opened her eyes. \"Were you playing your best?\" he repeated.\n\n\"Yes,\" she said, but she was shaking her head against his hands.\n\n\"Jessa,\" he demanded. \"That last point. Did you throw the game?\" \n\n\"Yes,\" she admitted. \"I didn't want the attention that winning would bring.\"\n\n\"Good to know,\" he muttered, but then he was moving, faster, harder and deeper, just the way she liked it. And she could feel herself building again to a brink she didn't mind falling over.\n\n****\n\nJessa sat up in bed as Torah came out of the bathroom. He was dressed, and sat to put shoes on. \"Are you leaving?\" she asked.\n\n\"I'm going to the command center. Where you were with Erich, before. I'm not leaving the city.\"\n\n\"Okay. Thank you.\" She slid to a sitting position at the edge of the bed.\n\n\"For what?\" he said impatiently.\n\n\"For answering,\" she said, playing with her ring.\n\nHe looked at her with a frown, but then suddenly grinned. \"Did you come?\"\n\nShe hid a smile. \"I think you wore me out last night.\"\n\nHe finished tying his shoes, then said, \"Keep your phone with you. I will try to let you know if things change.\"\n\n\"Be careful,\" she said as he stood to leave.\n\nHe reached out and lifted her chin. \"I'll be careful if you'll be good. Later.\"\n\nHe strode out of the room.\n\nShe showered and dressed. When she went into the outer room, Menah was there, his back to the door. \"My Lady,\" he acknowledged.\n\nJessa felt caged. She should have asked Torah if there was a way to go for a run. She glanced at Menah and decided he wasn't the running type. More like bench presses and clean and jerks. She went into the kitchen and made coffee, then after digging through cupboards, found sufficient ingredients to make a coffee cake. She offered Menah some, which he declined with obvious reluctance. She decided he must be Elite. He was far too deferential from living in a city of Circles. Yet it was incredibly frustrating to her, because she still thought of herself as Elite. They should be gossiping and snickering about the Circles.\n\nShe took her laptop out to the dining table, settling in to work on Astrophysics. Biology was her true love, and she had been focusing on it too much, to the detriment of the stars and red shifts and black holes.\n\n****\n\nIt was very late that night when Torah came back to the apartment. Jessa had gone to bed and was drifting in and out of sleep. When he came back out of the bathroom, he curled up in the bed against her. \"I have to leave in the morning,\" he said softly. \"We found out who did this.\"\n\n\"What are you going to do?\" she asked. He draped an arm around her, pulling her against his chest, but didn't answer. \"I want you to come back,\" she whispered. \n\n\"Really?\" he asked, skeptically.\n\nShe sighed. \"I don't particularly like this reality, but it's the only one I have right now. And,\" she added, \"There are certain aspects of it that I'm becoming fond of.\"\n\nHe smiled against her neck. \"You may lie to me, Jessa, but your body doesn't. If that's where I have to start to convince you that you are mine, I'm more than happy to start there.\""
    ],
    "authorname": "Chimera44",
    "tags": [
        "consensual",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/jessa-ch-07"
}