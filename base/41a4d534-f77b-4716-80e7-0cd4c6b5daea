{
    "title": "Down on the Farm Ch. 07",
    "pages": [
        "The following night, we started milking a bit early and Edith agreed to remain till all was finished. Then she would come to the meeting a few minutes after it was scheduled to start. Trish and I went early and talked to Mr. Johnson. A room had been arranged an we only awaited for folks to arrive. Because of the media attention from the previous days, it soon was evident that the scheduled room would not be large enough. He requested a number of his workers to setup chairs just inside the loading dock. The area was much larger and would accommodate a bigger crowd. By the time everyone had arrived, all chairs were taken and it was standing room only.\n\nMr. Johnson started the meeting and explained that only those who were directly affected by the proposal would be allowed to speak. Opportunity would be given for comments and questions. He introduced me and I began.\n\n\"Folks, I want to lay some groundwork here. These are the facts as they stand. 1. The milk company will be closing at the end of the year. 2. About 750 people would be loosing their jobs at the same time. 3. The milk producers association would be going out of business. 4. All of the milk producers were planning to sell or quit. 5. Information I'd received, maybe 15 families would move away from the community. 6. The local economy would be adversely affected. These are the facts and this meeting is to discuss a proposal to save the businesses just mentioned and keep the jobs and community intact.\n\n\"I believe everyone involved has received a copy of the proposal. Is there anyone who is involved and did not receive one?\"\n\nEveryone was quiet. \"Very well, let us proceed with an explanation.\"\n\nFor the next 30 minutes I spoke in detail, the requirements, and concessions. In the middle, Edith entered and sat next to Trish. I concluded with this comment.\n\n\"That presents the proposal. I want it understood, for this to work, everyone has to agree, in total. Otherwise it'll be withdrawn. No coercion is being used. The plan speaks for itself and the alternative speaks for itself. Questions?\"\n\nThe discussion was lively, but nothing new was presented. Mostly, I noticed, individuals or groups were trying to find a way to be excluded from the sacrifices required. I expected this and held firm. The Union representatives had held back until this moment, when they vigorously tried to get me to remove them from the change in the contract.\n\n\"Sir,\" I stated. \"The proposition stands as stated. You are free to take this to your members and let them vote on it. You can make your recommendation to your members as you see fit. However, tell them this. Either they accept it as was presented, along with everyone else, or they lose their jobs by the end of the year.\"\n\nSpeaking to everyone. \"Understand, I will not modify the plan in any fashion. Only the items open to negotiation can be modified. Nothing else.\"\n\n\"Aren't you being selfish?\" someone from the audience asked.\n\n\"If you mean by helping 750 people keep their jobs, I'll let you answer that.\"\n\n\"Aren't you going to get the greatest benefit from the plan?\"\n\n\"Perhaps, but I also have the greatest potential for failure. If someone here wants to take that risk, please speak up now.\"\n\nSilence.\n\n\"Why should we trust you?\" a voice was heard.\n\n\"You don't. You're free to reject it.\"\n\nThe Milk Producers Association representative stood. \"How are the members supposed to allocate the number of cows to be increased? By the figures given, you're asking an additional 96 cows be added to our herds.\"\n\n\"That is entirely up to your members. I am a member, but will refrain from influencing anything pertaining to this decision. All I request is a contract be drawn which will guarantee that number be added to your memberships herds, apart from mine. If any member decides to go out of business, others must pick up the slack. Look, everyone, this is a gamble. To make this work we all have to put forth the effort.\"\n\n\"What are the legal requirements if we agree?\" a woman asked.\n\n\"Contracts can be drawn up and signed at any time. A section will be included which will state if any other contract is not signed by the participant, all other contracts will be void. To make any contract valid, all must be dutifully signed.\"\n\nI paused a moment before stating the next item. \"I am imposing an arbitrary deadline for agreement or rejection. It's necessary for me to know the decision before April 30th. By that date, I want to know which direction to proceed. Do I obtain a loan, or not. If we're to move forward, construction needs to begin and we need to increase our herd. Equipment needs to be ordered. Etc, etc. That gives about 2 months to decide and plan. The decision is yours. Thank you.\"\n\nWhen all discussion was over, Mr. Johnson closed the meeting and thanked everyone for coming.\n\nTrish, Edith and I stayed behind to talk with various individuals. Mr. Johnson questioned, \"Well, how do you think it went?\"\n\n\"Good. If nothing else, they learned I'm not going to budge. The Union may drag their feet. Time will tell.\"\n\nIt was late when we got home and the emotions of the meeting had not worn off. The three of us stayed up and talked.\n\nFor two months we settled into a general routine. I had to apply my energies to keep my grades up. All this activity and my time with Trish was taking its toll. My concentration had dropped. Another project was to create a business plan. Edith and I put our heads together and came up with one. We had it checked out by our lawyer and he gave a 'thumbs up'. \n\nMr. Johnson was the first to sign his contract; it was a 'business saver' decision. The Milk Producers Association had also agreed to sign and was working out the details with their membership. A couple farmers were quitting and negotiations were in progress to transfer their operations to others. The contract was still pending but had been verbally agreed upon. Only the details remained.\n\nI heard through the grapevine the Union would hold a vote in mid April. On the record, they were not in favor of any benefit cuts. But the membership knew, all jobs were on the line. \n\nThe truckers were not part of the Union and had left it up to each driver to sign or not sign. Currently all had submitted completed contracts except one and he was on medical leave.\n\nMr. Johnson had sub-contracted some of his work to other companies, who were neither Union nor part of the milk company. He couldn't operate without them so they were given the option to create an addendum to their contracts, agreeing to my plan, or sever their relationship with him. Legally this was tricky. Three of these were under discussion.\n\nUp to mid April, no one had asked where I planned to obtain a loan. Except for this current issue, no local lending institution knew who I was and my 'youth' would be against me. However I had an 'ace' I was about to play. Events were looking favorable to the plan being accepted. \"Mark, who's going to give you this loan?\" Trish asked as the family sat at the supper table.\n\n\"My dad.\" I said without looking up.\n\nImmediately the talk around the table stopped.\n\n\"Your father has this much money?\" Edith queried.\n\n\"No. He's on the board of directors with the local bank back home.\" Anticipating their questions, I continued. \"They do a lot of loans locally, helping folks start new businesses. I've been in communication with dad about this plan and he's prepared to go to bat for us. That is, if we can meet certain requirements. You know, collateral, business plan, and things like that. The application form has been filled out, all except the amount and we have the business plan ready to go. What remains is an itemized list of anticipated costs and the support of the local community.\"\n\n\"You certainly have a good grasp on the business end of things. Did you learn all this from you're father?\" Edith asked.\n\n\"Dad would often talk about some of the applications they received, requesting loans. Over the years, I picked up on the main ideas they look favorably on. Agriculture with a solid plan is one of them.\"\n\n\"You could be doing this all by yourself.\"\n\n\"Not really. Not a chance, Edith. If you weren't part of this, I'd drop it and walk away. The information you have about dairy animals, dairy business, and dairy markets is indispensable. Your role is a key component to the plan.\"\n\n\"Mark?\"\n\n\"Yes, Sam?\"\n\n\"How come you had to work to go to college?\"\n\nI smiled at her brilliant perception. \"Dad has told us four boys, if we wanted a college education, he'd pay for the first year, and half of the second. The rest would be up to us. This meant scholarships, loans and hard work. Dad always said anything worth having, must be worked for.\"\n\nEdith, looking ahead, asked, \"Want me to work up a list of costs?\"\n\n\"That would be helpful.\" I answered though I knew she'd have problems with the numbers. They just wouldn't add up.\n\nOn April 30th our lawyer notified us he had all the signed contracts. Final documents were being drawn up but we were 'good-to-go'. One of the negotiable items in the plan was the time I needed to begin the improvements and how long till they needed to be finished. We were being asked to have the loan procured within 90 days and work begun. Then we had one year to have everything completed and production at the promised levels. This was less time than I desired, but within the agreed dates.\n\nThat evening Edith, Trish and I sat down to discuss our plans to build and buy. Sam and Becky joined us.\n\n\"Here are the figures. They are rough estimates and the numbers don't match what you said the loan would need to be. Take a look and see if there's any errors.\" Edith related.\n\nGlancing at her papers I went through the numbers. She had listed building materials, construction costs, milking equipment, inspections, electrical upgrade, concrete, fencing, computers and miscellaneous. Her figures were lower than an amount I'd been talking about. \"Looks about right.\"\n\n\"Why the difference?\" Trish asked.\n\nPenciling in, I added another bulk tank, three more compressors, double the fencing, more concrete, and a new silo. The amounts for these were added to the total and brought to the bottom. \"Is that closer?\"\n\n\"Why the additional equipment?\" Edith asked.\n\n\"Split the herd into two. This will allow to keep diseases, infections, and other problems separated. If one load of milk were contaminated for any reason, the other would be unaffected. Kinda like insurance.\"\n\n\"Good thinking. What about help. The five of us can't do it all?\"\n\n\"College students.\"\n\nTrish took the figures from my hand and re-added them. \"Still $45,000 difference.\"\n\n\"Yeah, I know.\" This conversation would get interesting within the next few minutes.\n\n\"What's that for?\"\n\nI grinned but didn't say anything.\n\n\"Mark,\" she asked again. \"What's that for?\"\n\n\"A new house for my new wife.\" I deadpanned as another set of figures were slid across the table.\n\nEdith took the papers and examined them. Trish, on the other hand, squealed, \"Really.\"\n\nWhen I shook my head 'yes' she came around the table and sat in my lap. Things got kinda mushy after that.\n\nWhile I am busy with Trish, Edith asks, \"I only see the cost of building materials. Where's the labor costs?\"\n\nBetween kisses, \"I've contacted the Industrial Arts department at school. Each year they build a house as a project and I approached them to build one for us, assuming we got the loan. I was told that they use a particular floor plan and after looking it over I felt we could adapt it for our needs.\" Turning Trish's face towards mine. \"I want you to look at it and tell me what you think because it will be our house.\"\n\n\"We're really going to have a house of our own?\" Trish asked me again.\n\n\"Yes, dear. We are.\"\n\n\"Sheesh,\" says Becky. \"Just look at her. You'd think she's won the lottery.\"\n\n\"She has.\" Edith corrects. \"She has.\"\n\nOver the next several days, different events transpired. I called my dad and we talked about the outcome of the 'plan' and my decision to move forward with the loan application. The paperwork was faxed to his office and he submitted it for approval. From his experience, he said it would very likely be approved, so we waited. As the bank was not familiar with our part of the country, they'd be sending a representative to talk with me and the other players in our plan. He'd let us know when.\n\nEdith and I had to get firm with Trish. She had become 'starry eyed' in her excitement over our wedding. She was actively planning events for the coming day and she was ignoring school. She was no longer interested in classes; and her assignments and tests were returned with failing marks. Edith tried first to encourage her to apply herself to school. Trish tried, she really did, but homework was often left undone. Finally I set her down and told her the importance of school and if she didn't pass all of her classes, I would cancel the wedding. That got her attention. \n\nEdith and I visited the lawyer quite often. One of the first items to clear up was the transfer of the title for the farm into my name. The groundwork had been laid for this transfer in the previous weeks, but it was necessary to complete before the final contract could be signed in my 'plan'. A partnership agreement was drawn up and Edith and I became joint owners of the dairy. The real outcome depended on the success of my plan. I wanted to repay Edith for the farm at some point in the future. She was taking a tremendous hit financially and putting a lot of trust in me. It was possible for me to take complete advantage of her, and I believe she knew that. This only emphasized her confidence in me and in the 'plan'. I didn't want to destroy her trust, ever.\n\nDad called a week later and let me know we'd have a visitor from the bank the next day. My classes at school were being skipped and Trish took me to the 'wood shed' about this. She was right, but I honestly did not know how to carry on the business of the farm, do school, meet with representatives of players from the plan, get the loan approved, and plan for our wedding. I was tired. I was exhausted and had been having trouble sleeping lately. Something had to give. Edith saw this and stepped in.\n\n\"Mark?\"\n\n\"Huh? What's the matter?\"\n\n\"The girls and I'll take over the chores for now. You have too many irons in the fire. I'll do the morning milking and the girls will do the evening chores. That'll free you up for other things.\"\n\n\"Thanks. I am not able to give proper attention to everything.\"\n\n\"Something else, I think you and Trish should postpone your wedding for a month.\"\n\nI only looked at her.\n\n\"Talk to Trish, Mark. Please?\"\n\nTrish walked around the corner at just that moment. \"Talk to me about what?\"\n\nShe was looking at me but keeping her mom in view. Edith attempted an exit but I grabbed her hand. \"You're not going anywhere now. It was your suggestion so you should explain it.\"\n\nTrish looked from me to her mom, then back at me. \"What's going on here? What are you two thinking? It affects me, doesn't it?\"\n\n\"Trish,\" Edith paused. \"Mark is overloaded right now; way overloaded. I've agreed to take on all the chores and you and your sisters will be helping me, and there will be no arguing about this.\"\n\n\"That's not all.\" Trish divined from our looks.\n\n\"I think the two of you should postpone the wedding till mid July. Because...\"\n\n\"Mother, NO. I want to marry Mark.\" Turning to me, \"Mark, tell her, please.\"\n\nNow I was in the middle. Edith remained silent and forced me to speak up. \"I am exhausted and having trouble getting enough rest. My classes are suffering, as you already know. There's a lot of legal paperwork, I have to go to meetings, and the bank representatives will be arriving tomorrow. Mom asked me to request from you that we postpone our marriage for a few weeks. Honestly I don't want to. But all of these things will be coming to a 'head' right at that time. Something has to give, and I fear it'll be me.\"\n\nSlowly and with great hesitation, Trish spoke. \"Then you're telling me the wedding will be put off.\"\n\n\"No I'm not. The situation has been presented. The decision is yours.\"\n\nShe became quiet and I sensed the weight of the world on her shoulders. The look in her eyes turned to one of uncertainty. Gently I took Trish in my arms and enfolded her. Gosh I loved her and at the same time I hated placing her into these circumstances. \"Mark, I want to marry you so much.\"\n\nKissing her on the cheek, \"I want to marry you too.\" Turning towards Edith, \"Would you leave us alone, please.\"\n\nShe walked from the room and Trish whispered in my ear. \"What do I do?\"\n\nTrying a different tact, \"Do you remember last July 4th, the frustration and disappointment on the faces of the 'married' team?\"\n\nA smile crept on her face and the dimples showed. \"Yeah, I do.\"\n\n\"Would you like to see it happen again?\"\n\nRealization struck home. Then her smile widened from ear to ear. \"Yeah, I would.\" Taking my face in her hands, she pulled it towards her. \"When Mark? When?\"\n\n\"How about the week afterwards? How does that sound?\"\n\nShe kissed me. \"Okay, I guess so.\" And we embraced.\n\nI slept well that night.\n\nThe next day I met the bank representative and skipped classes. She was nice, Linda was her name, and I spend the entire day with her. We started out by going over the aspects of the 'plan' where I explained the promises I had extracted from the others involved. \"I want to see your current operation.\" Was her request.\n\nShowing the barn, milk house, milking parlor and the herd was easy. Edith greeted her warmly and then returned to the chores. Linda was extremely knowledgeable and asked intelligent questions. I spoke freely and was soon sharing my plans and dreams. \"Mark, you are young, and still going to college. You fell into a situation and Edith and the family have taken you in like a son. Folks could think you are using this for your own benefit.\"\n\n\"I certainly hope you don't mean that?\"\n\n\"You tell me.\" Looking me square in the eyes.\n\n\"Linda, it's my name and my name alone on the loan. It's my neck that's on the line. Edith and I have an unwritten agreement that if this plan works out, and we believe it will, she'll be paid back. With the farm in her name, you know as well as I, that my loan application would not be approved. She clearly understands and we have a lot of trust between us. The dairy business will be a joint partnership. Worst case scenario, she would walk away with no obligations. As for me, you'd be coming with guns blazing.\"\n\nShe smiled at the analogy; neither of us spoke for several minutes as she thumbed through the papers from the folder. The business plan was buried in the stack and she removed it, paging though the different sections. \"Tell me how you will put this plan into operation.\"\n\nI spoke nonstop for nearly 20 minutes, pointing to graphs and charts from the proposal. She listened attentively, taking notes on her legal pad. When I finished, she requested to talk to the other participants. The rest of the day was filled with interviews with Mr. Johnson, the Milk Producers Association, the Union leaders, and others. From my perspective, the discussions went well. \n\nWe ended back at the house at supper time. \"Thank you for taking time out from your busy schedule.\"\n\n\"You're welcome to stay and eat with us.\" I offered.\n\n\"I hadn't planned on it. I'll get a motel room and head back in the morning.\"\n\n\"Linda, the table is already set. Adding another place would be no problem. Besides you'll have a chance to meet the rest of the family.\"\n\n\"Really, I couldn't impose upon you.\"\n\nEdith came from the house. \"You want to stay and eat supper with us? You're more than welcome to join us.\" \n\nWe persisted and Linda agreed. Sam and Becky were finishing up the table and Trish had taken the food from the oven. The warmth of the house and wonderful smells of cooked food greeted us as we entered the house. I introduced everyone before we sat down. Talk was genial as we filled our plates. All of us were curious, but it was Edith who asked the question that was on our minds.",
        "\"You'll be heading back tomorrow, I reckon.\"\n\n\"Yes. It's a long drive and I'm expected back by afternoon.\" Linda replied.\n\n\"Is there any chance you could share what your recommendation will be to the banking board? We've been wondering what you thought.\"\n\nShe paused in her eating, looking at Edith and then turned towards me.\n\n\"The final decision will be up to the banking officers. A loan this size has to come before them for approval.\"\n\n\"So you're not allowed to say anything to us about your recommendation?\" Edith asked again.\n\nAll eyes around the table were on her and we waited.\n\nShe took a bite and chewed slowly. \"Your plan is sound.\" Was her reply. \"However, there's something missing which is needed before it could be approved.\"\n\n\"What's that?\" I asked.\n\n\"Insurance. A life insurance policy for the value of the loan plus health and disability insurance. These will be a required addition, in my written recommendation.\"\n\nMentally my mind re-did the figures. It was doable. The bottom line would be tighter, but doable.\n\n\"Edith, Mark, I want to congratulate you on the good work. Coming down here yesterday, I doubted the validity of the proposal. How could these numbers be correct? But today, after looking and talking, it's easy to see that a great deal of thought went into it. You've convinced me. But right now it's up to the bank officers.\"\n\nSupper was over and she left within a few minutes. An explosion of joy burst forth from everyone and we danced in circles in the kitchen. Edith corralled the girls with dishes and I disappeared to the basement, working on assignments and a book report. Trish slipped downstairs later. Coming up behind me while I sat at the desk, she placed her arms over my shoulders and around my neck. \"Your plans are working out for you, Mark.\"\n\n\"OUR plans. You are very much part of this Trish. It won't be complete till you're my wife.\"\n\nShe leaned down and kissed me on the cheek.\n\nDays passed and my energies were put into school work. I'd gotten behind and worked feverishly to catch up. My grades were slipping and graduation coming up. In the evenings Trish was quick to bring her homework downstairs and we worked it together. \n\nI passed my courses and graduated. Mom, Dad and my brothers drove down especially for the Commencement ceremony. Edith made arrangements for them to stay at the house. It was crowded and for three days the house rang with laughter. What seemed interesting was my brothers Ed and Ray took a shine to Becky and Sam. The second evening as we sat talking in the living room, Ray asked Dad for the car keys. \"Where are you going?\"\n\n\"Sam and Becky wanted to show me and Ed around town. Is it okay?\"\n\nDad tossed him the keys. \"Take Jim with you and be back before 11.\" Mom said as they went out the door. The five were gone in a flash.\n\nThe next morning the graduation auditorium was packed and I walked on stage, receiving my diploma. Smiles, pictures, and congratulations were the norm afterwards. During the reception Ron and Marj spotted me and walked in my direction. Trish was by my side when they walked up. \"We're hearing ugly rumors about the two of you.\" Marj spoke.\n\n\"So what's ugly about it?\" I smiled.\n\n\"That ring on her finger.\" Ron said as he lifted Trish's hand.\n\nI looked at Marj, \"You said she was a 'keeper' and I took your word for it. Guess I'm stuck now.\"\n\n\"When did he ask you?\" Marj asked Trish.\n\n\"Two days after homecoming.\"\n\n\"Two days after your first date? You went kinda fast, didn't you?\"\n\nRon entered the conversation for the first time. \"Should have heard the comments the next week. A lot of guys were wondering where you had hooked up with this good looking 'babe'. Most everyone knew she was a local gal who attended another college.\" Looking at Trish, \"What's your major, anyway?\"\n\nI laughed. \"She's working on her MRS degree and she graduates from high school next week.\"\n\nRon was in shock. Looking at Trish closely. \"You're still in high school?\"\n\nTrish nodded vigorously.\n\n\"No way, man.\" He asked Marj, \"Did you know?\"\n\n\"Yes, I thought you did too.\"\n\nThe conversation tapered off as we gave congratulations all around. Their wedding would be out of state so we couldn't attend. Ron was starting a new job and they couldn't be at ours. \n\nIn the afternoon I returned to the milking and Dad stood around talking as Trish and I worked. The girls and my brothers finished up the other chores and Mom and Edith talked while the meal was cooked. During supper Ray asked for the car keys again and Dad handed them over. Jim would tag along with the other four, and being the youngest, I'm sure, he felt out of place. After they'd left, Mom spoke up. \"Mark, take Trish out too. The two of you need to celebrate. Dad and I'll be fine tonight. Gotta pack suitcases for the trip home tomorrow.\"\n\nTrish and I hadn't been out together for quite a while. We needed time together alone. The park where I'd asked her to be my wife was special and we walked around the pond holding each other, and an occasional kiss. We talked some, but mostly had our arms around each other. The pressures of the last several weeks had stolen these quiet and private times. Mentally I made note to reserve moments with Trish, moments alone. Assuming the loan was approved, our times together could evaporate in the activity of construction and rebuilding the herd.\n\n\"Honey?\" I ask.\n\n\"Hum?\"\n\n\"I need your help.\"\n\n\"With what?\"\n\n\"Remind me when I become too busy, that I need to take time out and be with you.\"\n\nHer eyes are turned toward mine and I catch the corners of her mouth turning up.\n\n\"All of the 'plan' and the dairy will mean nothing without you. Don't let me forget to spent time with you, alone.\"\n\nShe buries her head against my shoulder and my arms enfold her, drawing her close. In the distance we hear some steeple bells begin their chime of the hour, followed by a hymn. Gently we sway to the tune as we dance along the path. Twilight has faded and the ducks are quiet and I am holding the woman I love. Returning to the bench we sit quietly and watch the stars appear, at first one by one, then the curtain of night is drawn back and the sky explodes with a million points of light. \"That one's for you.\" I point one out. She squeezes my hand and holds my arm, and we sit like this till it is time to return home.\n\nMy folks and brothers left early the next morning and Edith and I spend the next few days working with Trish to pass her final examinations. One class at a time, we coached through her studies and one by one, she passed. Maybe her grades were not in the top of the class, but they were high enough to allow her to graduate. Graduation day she was all smiles. We watched her walk the aisle, in cap and gown, and receive her diploma. \n\nWedding plans began in earnest with four weeks till the big day. Edith, Trish and the girls often had their heads together discussing invitations, gowns, food, reception, and a million other things. The bank hadn't made a decision, so I waited. My time was busy and the dairy and farm work were a never ending responsibility. Trish and I spent our evenings, after supper, remodeling the basement. With encouragement from Edith, I partitioned the entire basement area. The laundry room was kept as a common area. However, the remainder we divided into a bedroom, living room, bathroom, and tiny kitchenette, plus a small storage area. All the plumbing was in place but additional electrical wiring was required. I put up stud walls, and using sheetrock made the basement into an attractive apartment. \n\nTrish and I were painting one evening and stopped to take a breather. \"It's our first home. You won't have to move far.\"\n\n\"Sam and Becky have been fighting over my room. They both want it.\"\n\nI laughed. \"They want separate rooms so as to not have a roommate. You're giving up your room to gain a roommate.\"\n\n\"My new roommate is handsome.\" Looking into my eyes.\n\nPlayfully, \"What if he snores?\"\n\n\"Then I'll make love to him.\"\n\n\"You could get pregnant doing that.\"\n\n\"Good. I hope so.\"\n\nI give her a quick kiss. \"Let's get this room painted before we get into trouble.\"\n\nDad called a couple weeks later. \"You will be hearing from the bank in a day or two. They approved your loan. The only changes will be with the insurance requirement. Not everyone on the board was happy about it, but Linda's recommendation swayed the majority in your favor. Details will be forthcoming.\"\n\nDad was excited and hoped the plan could be worked out satisfactorily. \"Is Trish there?\" he asked.\n\n\"Yes, she is.\"\n\n\"Your Mom wants to speak to her about the wedding.\"\n\nI called to Trish and handed her the phone. Mom and she talked for a while, making plans and discussing options. While she was on the phone, I find Edith.\n\n\"We have a 'green' light. Dad said the loan has been approved.\"\n\nBecky was listening around the corner and gave out a war hoop. \n\n\"What'd I tell you? Call it luck or what ever; good things follow you. Whatever you do, prospers.\" Edith smiles.\n\n\"Planning and lots of hard work. We're not out of the woods yet.\"\n\n\"Don't underestimate yourself, Mark. I believe the Lord is with you and if you follow Him, you'll prosper.\"\n\nI shake my head in disbelief. \"I don't see how.\"\n\n\"You will, believe me. You will.\"\n\nTrish is off the phone and in her joyous excitement runs into my arms, shouting, \"Mark, Mark. You did it. You got the loan. You got the loan. You got the loan.\"\n\nGently I calm her down. \"Trish, Trish? Shhh. Shhh. We know.\" We embrace and looking past her hair, I see Becky, Sam and Edith all in smiles. Tonight is a night for celebration.\n\nOn the morrow, the phone call was received with official confirmation. Rather than trust a delivery service, Linda had been sent with the papers and would arrive this afternoon. She'd carry the official correspondence and instructions and I was requested to have available our lawyer and 'plan' paperwork to complete all legal requirements. Edith phoned him and passed the message along. Our meeting place would be the family table, the table where so many discussions and decisions had been made. It would only be fitting.\n\nLinda arrived as scheduled and shortly after, our lawyer with a notary. All of the final players were here and we sat together. No formalities were held and the paperwork was passed along from hand to hand as each signed on the appropriate line. It took a total of 15 minutes and then they departed. The plan had been set into motion, now would come the hard work. Now would come the test of our endurance, the test of our will and the test of our faith. Our lawyer had placed the funds into a bank account and I'd be able to draw on them. There was so much work ahead, so much more that need to be accomplished, but my mind was not on these things; my mind was on the shining and glowing face of Trish as she sat across the table from me. How I loved her. Her presence and her love would be the driving force behind the execution of this plan. Others were depending on us to follow through.\n\nTrish and I were married July 8th. We had waited till after the 4th where the 'married' team was soundly trounced. The following year I'd switch sides, but this year the youth of the church were victorious. \n\nThe wedding day arrived and we had a large church ceremony. Tradition has it that the groom is not supposed to see the bride on the wedding day until she walks down the aisle. Edith was a stickler for this tradition and, try as I might, I didn't see Trish at all that day until the ceremony. If anyone asked were I nervous, I would have said no. However, there were butterflies in my stomach and I was pacing back and forth in anticipation. \n\nWhen the time arrived and I stood at the front of the church beside the preacher, I can still clearly see Trish as she is coming down the aisle on Uncle Peter's arm. She literally took my breath away. I had taken a quick breath and found myself holding it as I watched her walking forward. She was absolutely stunning; absolutely beautiful. To think or even imagine that this woman wanted to marry poor and often smelly dairy farmer. This blew my mind away. \n\nFor the entire ceremony, I couldn't take my eyes from hers. Correction, I did glance over the audience and from my point of view, every eye was on Trish. Today was her day, she was the queen, her face was radiant, her eyes shone, her personality glowed, and she was willingly becoming my wife. WOW.\n\nThe 'plan' had been put into motion and all our energies were invested into it. The two construction projects were started that September. The college Industrial Arts class had broken ground to build our new house and a contracting company began our new milking complex. A few problems were encountered along the way, but both were completed right on time, and the time was at the arrival of our first child. Exactly 9 \u00bd months after our marriage, Trish gives birth to our son and we name him Howard, Bud for short, after the grandfather he'd never meet.\n\nWe kept our promise to the Mr. Johnson and the milk company, our production doubled. The original herd was kept intact and the additional cows were put into the new and separate herd. Edith had her work cut out for her, because we worked hard to keep the butterfat content of the original cows above 4.3%. The new cows were producing a little over 3.5%. She kept good records and tirelessly monitored their production. Their feed was tweaked periodically as she worked to improve their fat content. She was good and I knew it would rise with time.\n\nAs Edith held her first grand child she spoke these words. \"Mark, your heart is 'right'. Whatever you do, whatever you try is not for selfish motives. I watch you work and your heart is true. The Lord will honor this.\" Trish and I had 4 other children and our milking business was very successful. Three different dairy periodicals wrote articles about the success we experienced and how the diary industry had prospered in our town. Seeing this success, other farmers in the area branched out to improve their herds. \n\nI kept my promise to Edith, slowly I paid her back for the farm she had used to invest in me. It took almost 25 years and by that time, Trish and I had grandchildren and Edith held her great grandchildren. Edith had been correct, everything I did, prospered. The honor can only go to the Lord. \n\nDid everything work out perfectly? Nah, not really, but through it all, we loved each other dearly. Our love for each other and for every member of our family was the binding glue that kept us together and made our lives worth every minute of it. "
    ],
    "authorname": "Rabbitrunner91",
    "tags": [
        "edith asked",
        "milk company",
        "trish sat",
        "mark trish",
        "becky sam",
        "building materials",
        "paid back",
        "build house",
        "business plan",
        "time trish"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/down-on-the-farm-ch-07"
}