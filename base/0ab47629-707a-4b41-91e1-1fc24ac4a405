{
    "title": "The Surprising Road Home",
    "pages": [
        "[Leaving a career sometimes unroots a man. Sends him on an undefined search for some where or some cause to root again. Nick finds a surprising road home.] \n\nTwenty-eight years of wearing uniforms were over. I was retired. In at eighteen, out at forty-six. I put the uniforms and memory reminders in storage, bought a small RV and a boat and went fishing.\n\nThe month of July was spent at three different lakes in Missouri. In August I fished in Arkansas. Met some nice folks and they told me about some good fishing in the Carolinas. So, September and October found me making the rounds of lakes in the Carolinas. \n\nLake Marion is a big lake near the town of Santee in South Carolina. My first day on the lake, I did well. Caught four nice sized bass and threw three of them back so they could grow a little more. I shared dinner with the three families camped near me and swapped some nice stories. Over the next few days we shared more fish, more stories and became friends.\n\nOn the twentieth of October I was sitting in my boat near the edge of the lake, casting into a shady spot when my cell phone rang. It surprised the hell out of me. Only four people in the world had my number; my sister, Alison, my ex-commanding officer, my ex-girl-friend and her teen-aged daughter. I almost hoped it was my ex-commanding officer. He was a good guy and if he could get free, some fishing would do him some good.\n\nIt was my sister. \"Brother of mine, we want you here for Thanksgiving.\"\n\n\"Hello. You want me to load my boat on the trailer and drive all the way to Oregon for a turkey dinner?\"\n\n\"Yes, and to spend some time with your family. Us.\"\n\n\"That's a long drive, Sis.\" I knew I'd do it. I love my sister and giving her a hard time is just part of our way of being together. The banter went back and forth for another fifteen minutes, telling me all about the family gossip, the news from my ex-wife, and a few more jabs at getting me to agree to make the drive. I promised I'd decide in plenty of time to make the drive, if I was coming and I promised to call her.\n\nI didn't catch anything that day or the next. Thoughts of heading west showed up more and more often. Just about as often as thoughts of breasts, and sharing a bed with someone showed up. My last bed partner was a nurse stationed on my last base. I left the base and her in July. It was October. Four months! Damn! Two more months and I'd probably start calling myself a monk.\n\nWhen I tied the boat up at the end of fishing on the twenty-third I noticed a police car parked not too far away. I hadn't done anything that would interest him so I just noticed his car, but didn't pay much attention. That is until I walked over to my RV and found him sitting in one of my camp chairs.\n\nHe stood up and asked, \"Nick Peterson?\"\n\n\"Yes, sir.\" I noticed my posture improved as I answered. \"Is there a problem?\"\n\n\"Well, less just say I have one and I'm hopin' you can help me solve it.\" He sat back down. I opened the RV and snagged a beer, showed it to him and asked, \"Want one?\" He shook his head. I sat down and said, \"Tell me about your problem.\"\n\n\"In my town there's a couple, not married, but shackin up, you know? Well, they been fightin. Up til lately it's been mostly words. Two months ago he hit her for the first time. Broke her nose. I got him in a recovery program and he did Ok for a while. Three days ago he got drunk and beat the hell out of her. Cracked two ribs and broke a finger on her. She ended up in the hospital. He's in my jail. I'm thinking that when they get back together it's gonna get worse.\"\n\n\"Usually does.\"\n\n\"She needs to get away from here. A long ways from here.\"\n\n\"And since I've got Texas plates on my RV...\"\n\n\"You're quick. I checked on you. Retired Air Force, good guy. You up for the assignment?\"\n\n\"She want to fight anybody, or just him?\"\n\n\"She don't even want to fight him. She's a good woman, just hooked up with a jerk.\" He paused, then added, \"The pickins round here ain't much.\"\n\n\"You want me to haul her a long ways away and dump her? Not my style.\"\n\n\"No. Not dump her.\" His face showed there was a lot going on in there he hadn't said, yet. \"Help her find a job and get set up somewhere.\"\n\n\"I may not be from around here, but this doesn't sound like any social program I've ever heard about. What you ask costs money and time.\"\n\n\"I'll give you some money. Feed her, get her some decent clothes and help her get a fresh start. It isn't a social program. She's my baby sister.\"\n\n\"So the money is yours?\" He nodded. His eyes were locked in on mine. I thought about it. I had weeks to drive three thousand miles to my sister's place in Oregon. She might be good company. Maybe she could even cook!\n\n\"Is she willing to go?\" I asked.\n\n\"She's scared. She's scared of Jack and she's scared of you. You're a stranger. She oughter meet you, then she can choose to be more scared of Jack or you. I think she'll choose to be more scared of Jack.\"\n\n\"When does she get out of the hospital?\"\n\n\"Tomorrow.\"\n\n\"This isn't a big town. You bring her by to meet me and someone will see us and tell Jack she left with me.\"\n\n\"I won't bring her by. Way I see it, you'll leave tonight, drive over to Lexington to Edmund's RV Park there. Bout nine tomorrow night, we'll drop by. I'll be in civvies and driving a Dodge pick-up. She'll be with me. You'll meet and talk. She'll be packed and ready to go.\"\n\n\"Won't folks notice you came and talked to me here?\"\n\n\"I've stopped and talked to half the people in this campground today. Seems someone stole some stuff from the store. I'm in-vestigatin.\" He smiled.\n\n\"Ok. I'll meet her. Lexington? Is there more than one campground?\"\n\n\"Stay at Edmunds. I looked inside your RV. You've got GPS, so findin Lexington will be easy.\"\n\n\"What if she's more scared of me?\"\n\n\"Then I take her back to Jack. He gets out on Tuesday. I'll probably be using the money I'd give you for her funeral.\" He looked sad and depressed at that possibility.\n\n\"Let's hope she picks me. Should I have some dinner ready for us?\"\n\n\"That might be a help. She loves Sweet Potato pie.\"\n\n\"If I see one in a market, I'll get it. Now, let me get packed up and out of here.\"\n\nWe shook hands and he left. It took me an hour but I got on the road and into the campground in Lexington before it was completely dark. I stopped once on the way, at a market. I found a sweet potato pie and bought a large container of jambalaya and a salad. A twelve pack of diet Coke went with me, as well. Opening my fridge and seeing beer wouldn't be a good sign to her.\n\nWhen I got set up in the campground, I ate a little of the jambalaya and salad. They were very good. I sat outside my RV to eat and met a couple of my neighbors. Like in many campgrounds people get out and walk in the evening. When one of my neighbors asked where I was headed I said I was headed up into North Carolina to see if they still had any fish.\n\nAfter I ate a little I cleaned up the RV and me. I had a day to kill before the sheriff and his sister would be \"dropping by.\" I spent the time making room for her stuff and doing some deferred maintenance on the rig. By evening I felt good about the RV and me. I showered and shaved. The years of military training had me well trained. I always showered and shaved, every morning and every time something important was happening.\n\nBy nine in the evening I was sitting back outside in clean jeans and a button front shirt. My boat and trailer were hitched and ready to roll.\n\nAt nine-fifteen a red Dodge pick-up parked in one of the visitors parking spaces and I watched the sheriff help his sister out of the truck. She walked like it hurt to move. She looked scared and in pain. I got up and moved a chair to make it easy for her. I held the chair and the sheriff helped her sit.\n\n\"Mr. Peterson, this is Kate. Kate, Mr. Peterson.\" The sheriff said.\n\n\"Nick. Mr. Peterson was my Dad. Nice to meet you. I have some food. Interested?\"\n\nShe looked up at me for the first time. \"It hurts to eat.\" He voice was soft and her eyes said more than her voice. She was hurt and scared. Other than being a little swollen and a small bruise on her cheek she was a pretty woman. The shirt she had on hid most of the details about how she was built, but it was obvious she wasn't fat or sloppy.\n\n\"That may be, but starving hurts worse. A little salad, jambalaya and sweet potato pie might help you feel better.\"\n\nThe sheriff said, \"Even if she doesn't eat, I'm starved.\" We went inside and brought the food out. I also brought three diet Cokes. She watched and when the smells hit her she looked for a fork. I handed her one and set a plate in front of her.\n\nHer brother dished out a little of everything for her and we sat. Her brother and I ate and she picked at a little of everything. When we were done I still had enough jambalaya for lunch the next day.\n\nWe talked. She asked questions and I answered. She asked more questions and I answered. Her brother stayed quiet. \n\n\"Can I see inside?\" She asked.\n\nWe helped her up and into my RV. She looked around and said, \"There's only one bed.\"\n\nI said, \"The dining area converts into a bed. Takes less than a minute.\" I showed them. She looked at the tiny kitchen and said, \"I can cook.\"\n\nI said, \"Good, cause I'm not very good in the kitchen.\"\n\n\"The jambalaya was pretty good.\" Kate said.\n\n\"I got it at the market in Lexington.\"\n\nShe sat on the side of the dining room bed and said, \"I'll go. If I stay Jack will get drunk again and kill me. I have to go.\"\n\n\"Ok.\" Her brother looked relieved. \"I'll get your things out of the truck.\"\n\nHe came back with three suitcases. I asked which one she needed that night and in the morning. That one stayed inside. The other two I stashed in the outside storage bins. While I did that they said their good-byes. I walked the sheriff back to his truck.\n\nHe handed me an envelope. \"My phone number is in there and ten thousand dollars. Use the money to take good care of her, get her started.\" He paused, like he was looking for the right words to say. \"I'm trusting you with the life of my only sister.\"\n\n\"I won't let her or you down.\" We shook hands and I felt him wanting a hug or something more than a handshake, but our training in being men wouldn't let him do it. He got into his truck and drove away. I stood in the road for a while as the importance of what I had taken on hit me. For the first time in my life a woman's life was in my hands. Was I up to this?\n\nI helped ten guys live through Iraq. I could do this, I told myself. I straightened up and went back inside. Kate was crying. I closed the door and sat next to her, one arm automatically went around her back.\n\nWhen she stopped I said, \"We ought to get some sleep.\" \n\nShe said, \"Where do I change?\"\n\nI said, \"I'll go in the bathroom and you can change out here. There's more room. When you're in bed tell me and I'll come out and go to bed. Ok?\"\n\nShe nodded. I went into the bathroom and shut the door. Twenty seconds passed and she said, \"Nick!\" It sounded painful.\n\n\"I'm here.\"\n\n\"I need you out here.\"\n\nWhen I opened the door I saw why. Her bandages wouldn't let her get her clothes off. I didn't say anything, I just helped. It took a while but we got her into a big t-shirt of mine and into bed. I shut off the light and got into bed myself.\n\nIt was kind of nice listening to her breathe as we settled in for the night. \n\nMy eyes popped open at about seven. Kate called my name again. I said, \"I'm here.\"\n\n\"I had trouble waking you. I need help getting up and I really need to get into the bathroom.\"\n\nIt took a minute but we got her in there and as I started to close the door she said, \"I'm embarrassed, but I can't lower my panties. Bending hurts too much.\"\n\n\"I won't look.\" I said as I helped her. When she sat I didn't have time to close the door before the flood began. She giggled a little and then winced. Giggling hurt. That got us both giggling and her wincing as her stream kept making noise.\n\nWhen she finished, she hesitated. I realized she would have trouble wiping without it hurting more, so I tore off some paper from the roll and wiped her. I helped her stand and I pulled up her panties.\n\n\"God! I am so embarrassed!\"\n\n\"In a few days, when you feel better, I'll have you do me, then we'll be even.\"\n\n\"Don't say stuff like that! It'll make me laugh again, and laughing hurts!\"\n\nIt was eight-thirty before we were dressed and ready to drive. I became well acquainted with her body in the process. I had her stay back in the dining room until we were on I-26 west. Then I helped her sit shotgun.\n\nTwo hours later I changed to I-40 west. It was pretty quiet between us until that transition.\n\n\"Nick?\"\n\n\"What?\"\n\n\"Where are we going?\"\n\n\"For now, west. Exactly where, I haven't decided. Is there somewhere you'd like to go?\"\n\n\"I've never been anywhere. If we go west will we go to St. Louis?\"\n\n\"Yes, that sounds good. I've wanted to see the arch. So, we're going to St. Louis.\"\n\n\"Bill told me you were in the Air Force. Did you fly?\"\n\n\"I was enlisted. Pilots are officers. I was in charge of an electronics maintenance outfit. We repaired airborne electronics.\"\n\n\"Did you travel a lot?\" \n\n\"I don't know about a lot, but I guess more than most people. I was stationed in quite a few places around this planet over the years.\"\n\n\"Where?\"\n\n\"I did my basic training in Texas, then went to Mississippi for electronics school. After training I went to Taiwan for two years. I came back to the states for a couple years and then went to Germany, Pakistan, Italy and England. Two more years in the states in Omaha Nebraska and I went to Japan, Guam, Australia and then Iraq. My last two years were spent back here in the states, back in Texas where I started.\"\n\n\"When we cross into Tennessee it will be the first time in my life I've been out of South Carolina.\"\n\n\"Tennessee looks a lot like South Carolina. They even speak southern. You'll be fine.\" I joked.\n\nShe smiled and was quiet for a few more miles.\n\n\"Nick, when we stop for lunch, could I have a pain pill?\" \n\nI aimed the RV over to the side of the road and stopped. I got her pain pills and a diet Coke. I said, \"Keep them handy. You don't need to check with me, take them as needed.\"\n\nShe took two and thanked me. I got us back on the road and into Tennessee. As we got close to Knoxville I saw a truck stop and knew they would easily have room for my RV and boat. We could get lunch and some snacks for the road. I pulled off the Interstate and stopped.\n\nAfter a short discussion I went inside and bought lunch, snacks and fresh bandages. We ate in the RV. After lunch we were back on the road. Kate wanted to know about each of the places I had been. When we got close to Nashville I saw Kate take another couple of pain pills.\n\n\"Kate, does the jostling around increase the pain?\"\n\n\"Yeah, some. But, I need to get away from Jack, so it's worth it.\"\n\nI saw another truck stop so I pulled in and stopped. I fired up my laptop and looked for campgrounds in the area. I found one called a resort so I headed there.\n\nWe pulled in and found a nice spot for us. Kate watched as I got us hooked up and plugged in. I walked over to the office/store and discovered a beauty parlor attached to the store. I asked some questions and found out that Kate could have an appointment in fifteen minutes. \n\nBack in the RV I told Kate my idea. Part of leaving home is changing who she was into a new Kate. I figured a new hair-do could be part of that. Her hair was long, dark brown and slightly wavy with bangs. I helped her to the parlor and said, \"Change her hair. Make it easy to care for and sexy. Short would be good.\"\n\nThe lady asked, \"You willin to let me really make a change?\"\n\nKate answered, \"I want to be a new woman!\" I nodded and left them to the task. As I walked out the lady said, \"Come back in three hours. I'll introduce you.\" She laughed as I left.\n\nThree hours later I walked back in and almost didn't recognize Kate. Her hair was very short, quite curly and blond. Not the one color blond that lots of bottle blonds are, but a natural looking blend of blond. She loved it. The lady explained how easy it would be to take care of and I paid her. The bill came to seventy-five dollars. I gave her a fifty dollar tip.\n\nKate looked in the mirror often back in the RV. She liked the new look. \"Jack would hate this.\" She said.\n\n\"Is that why you like it?\"\n\n\"Partly, but I like it more because it's fun.\"\n\nWe had a conversation about when we should change her bandages. The sheriff told me about her broken finger and some ribs but didn't explain why she was bandaged. She explained that when Jack beat her he kicked her wearing his work boots and they tore up her chest.\n\nWe decided to change bandages once a day during daylight hours. We got her shirt off and I carefully removed the bandages. Jack had kicked her at least four times. There were four separate wound areas. Two had needed stitches and the other two were held together with butterfly bandages. I cleaned the wounds and rebandaged her. Her breasts had to be uncovered while I did the job, so I looked and smiled internally. Jack had not directly damaged her breasts. He had come very close, but they were undamaged. Almost half her chest area was badly bruised. Her skin was various shades of deep purple, yellow, green and pale white. \n\nAfter the bandages were on I went back to the store and bought three refreezable ice packs. They would help the swelling go down faster and reduce the pain. When I came back Kate was holding a shirt in front of her chest but hadn't put it on.\n\n\"You want help getting the shirt on?\" I asked.\n\n\"Are you gay?\" She searched my face for a signal, an answer.\n\n\"No. Why?\"\n\n\"You spent half an hour tending to my bruises and cuts with my tits bare in front of you and... nothing.\"\n\n\"Your left breast is black and blue. You're taking pain killers about every three hours. I'm not the kind of guy who would add pain to someone just so I could cop a feel. If it's gonna happen, I'd rather we both enjoyed it. So, I'll wait.\"\n\n\"So, I'm not ugly?\"\n\n\"No, you aren't ugly. Not even close. And, I'm not gay.\"\n\n\"Ok. I've never been around a man like you.\"\n\n\"The men you've known would have mauled you, just because you didn't have a bra on?\"\n\n\"Guaranteed.\"\n\n\"Then for the next few days, until you've healed up a lot more, I recommend you go braless. I'll enjoy the view, it won't hurt you as much and you won't get mauled.\"\n\n\"That will be weird. Since I turned eleven I've never gone a day without a bra.\"\n\n\"Didn't it feel better when I took the bra off you?\"\n\n\"Yes! It kept pressure on the bruises.\"\n\n\"Then put the bra in a drawer.\" We spent some time on the computer looking at maps and planning the next few days travel. When our route to St. Louis was planned Kate looked at me and asked, \"When will you start looking for a place to drop me off?\"\n\n\"That's more up to you than me. If you get a feeling you'd like to stop somewhere and check it out, we'll stop for a few days. If you like it, we can find you a job, a place to live and then I'll move along. It will take more than making sure the town has a DQ to convince me you'll be Ok.\"\n\n\"How'd you know I love DQ?\"\n\n\"We drove passed one on the way here. You smiled and watched it as we passed.\"\n\n\"Oh.\" She was quiet again for a while. Then, \"Where I stay will be west of St. Louis. I want lots of land between me and Jack.\"\n\n\"Ok. Take a look at the maps and pick a direction for us when we leave St. Louis.\"\n\nAs she looked at the maps and read web sites about different places I started dinner. I emptied a bag of frozen stuff into a bowl and put it in the microwave. That was just about the upper limit of my cooking ability.\n\nWhen it was ready I dished it up and we ate. Kate asked, \"You don't drink beer?\"",
        "\"I do. But, not often, and never too much. I got drunk once, learned a valuable lesson and haven't seen the need to repeat the lesson.\"\n\n\"What lesson?\"\n\n\"Four of us went drinking from Keesler Air Base in Mississippi and got drunk. On the way back to the base I fell asleep in the back seat. The guy driving crashed the car and six people died. A boy in the other car survived and I survived. Drinking kills.\"\n\n\"Yup. It almost killed me, too.\"\n\n\"Diet Coke is good.\"\n\n\"And safer.\"\n\nAfter dinner we sat outside and met some of our neighbors out for their walk. We were invited to walk, but declined. We didn't explain why. One couple stopped and sat a while. They were from Maine. They were headed for Phoenix Arizona for the winter. When they asked where we were headed I said, \"Southern California. I've got family there.\"\n\nThe wife asked, \"How long have you two been a couple?\"\n\nKate answered, \"Sometimes it seems like ten minutes and sometimes I think I've been married to him all my life.\" The other woman nodded in agreement. Her husband asked, \"Is that a compliment or a slam?\"\n\nI answered, \"Depends on if today is the ten minutes or the forever, I guess.\"\n\nKate looked at me and said, \"Whichever it is, it hasn't been long enough for me.\"\n\nI looked at the man and said, \"Now that's a compliment.\" I looked back at Kate, winked and said, \"Thanks Babe.\" \n\nOur conversation continued for a while and then they moved along. After they were gone for a while Kate asked, \"Why leave them believing we're married and on our way to Southern California?\"\n\n\"I don't know Jack. I don't know how soon he might be on our trail, or if. If he's on our trail, I want to leave enough miscues that finding you will be nearly impossible. If he finds that couple he'll be led to believe it wasn't us and led towards Southern California. Either thing he believes helps keep you safe.\"\n\n\"Oh.\" \n\nInside the RV she asked for my help and together we got her undressed, through her bathroom ritual and ready for bed. I did my ritual and got into bed. We said good night and I shut off the light. In seconds I was asleep.\n\nSome time in the night her voice woke me. \"Nick? Nick?\"\n\n\"Yeah. Need help?\" I figured she needed help getting to the bathroom again.\n\n\"I don't need your help. I want to ask for something.\"\n\nI turned on the small light by my bed. \"What do you want?\"\n\n\"Could I sleep with you?\"\n\n\"Whoa. That isn't a simple question. There are implications.\"\n\n\"Can we save those for after we get past St. Louis and for tonight just have it mean I don't want to sleep alone? I'd like to be held.\"\n\n\"Yes.\" I got up and helped her get out of bed. When she was standing I opened the door to the bathroom and aimed her there.\n\n\"I don't really need to go.\" She said.\n\n\"Go anyway. You'll sleep longer.\"\n\nShe sat with my help and when she was done I helped her into the bed. Beds in RV's aren't like beds in houses. At least not in smaller RV's like mine. There was enough room for both of us, but not much extra room. She lay on her side and I spooned up behind her. We got comfortable and she said, \"That's much better.\" She was right, it was.\n\nThe sun was up when we woke. My bladder communicated its need for relief and I responded by using the restroom. Then I helped Kate in and she used the facility. We dressed and had a quick cereal breakfast and got on the road. Five hours later we saw the arch and the bridge across the river into St. Louis. On the east side of the bridge I saw what I wanted, boat sales yards. I pulled in and spent an hour selling my boat and trailer. I had bought them used and sold them for almost as much as I had paid back in May before I retired. \n\nAs we drove away without the boat and trailer Kate asked, \"Why'd you sell the boat?\"\n\n\"It makes it harder for Jack to follow us. There are fewer RV's towing boats than there are RV's. Winnie's are pretty popular. We just blend into the crowd better without the boat.\"\n\n\"I had the feeling you really liked that boat.\"\n\n\"I love fishing. Boats make that possible. Wherever I go there will be boats for sale. Selling this one gives us better mileage, too.\"\n\n\"Ok.\" We crossed the bridge and when Kate saw the sign announcing that we were in St. Louis she said, \"Now I've been in South Carolina, North Carolina, Tennessee, Illinois and now Missouri! And, we've only been on the road three days.\"\n\nWe stopped for lunch and gas. We visited the arch. We drove around St. Louis and saw some of the sights. As it approached evening we found a campground and rented a space. The folks camped next to us were slightly older than us and towed a car behind their motor home. They offered to take us with them to a great restaurant they knew of. We went. \n\nKate looked over the menu for quite a while. She said, \"I don't know what to get.\"\n\nI ordered for both of us. For Kate, I ordered the Vitello Piccata, veal medallions in a nice sauce. I ordered Pollo Conti, chicken in a mild wine sauce. I figured we could swap or share if she didn't like the veal. I'd like either one.\n\nOur dinner companions were from Minnesota. They were headed south for the winter. They told us they were called snow birds, people who live up north where it snows but migrate to warmer areas every winter. They shared with us about their kids, grandkids and what they would do in and around El Paso. \n\nWhen they ask about us I told them we had retired from the Air Force and were just traveling. We had no destination in mind, really, but North Dakota, Montana, Minnesota and the like were not on our agenda until late spring. They gave us information about where they would be and said if we wanted to visit we would be welcome.\n\nOur dinners arrived and Kate took a bite. It was apprehensive at best. She chewed and then smiled. She leaned to me and whispered, \"What is this?\"\n\n\"Veal. Young, tender cow.\" I whispered back.\n\n\"Yummie.\" Max and Joan shared bites from their dinners with each other without even asking. I asked Kate, \"May I have a taste?\"\n\nShe surprised me by answering, \"Not here!\" Then her brain caught up with her mouth and she said, \"Of my veal? Sure.\" Jack must have asked for a taste of her wetness sometime in their past. I stored that information away for future use.\n\nMax said, \"See, I'm not the only horney old man.\" Joan slapped his shoulder and blushed.\n\nKate said, \"Neither of you men are old.\" We all laughed. The implication was clear.\n\nWhen we got in their car to go back to the campground Kate bumped her chest and winced. Joan asked, \"What's wrong, Kate?\"\n\nI answered, \"She was in a car accident a few days ago. Cracked a couple of ribs and broke her finger. She's still a bit tender.\"\n\nKate said, \"You should see the car. It got more than bruises.\"\n\nMax told us about an accident he had back in Minnesota. It had totaled his Toyota and he didn't even get a scratch. Joan said she missed that car. We invited them in for a while but they said it was already past their bed time and so they declined.\n\nWe iced Kate's bruises, cleaned up the RV and then got ready for bed ourselves. I started making the dining room bed and Kate asked, \"Does that mean you don't want me to sleep with you?\"\n\n\"No. That means it's your choice. I'm not into forcing or demanding. I liked having you in bed with me last night. I worried that I might bump and hurt you in our sleep, but we didn't. Would you like to share the bed with me again?\"\n\n\"I thought you'd never ask. Yes, Nick, I'd love to share your bed.\" The timer went off, signaling that her fifteen minutes of ice were done. I took the ice packs and put them back in the freezer. When I turned back to face her she was slowly getting her blouse off. Instead of helping, I watched.\n\nWhen the blouse was off she looked at me and asked, \"Should I wear a t-shirt to hide the bruises?\"\n\n\"What bruises?\"\n\n\"Something else catch your eye?\" She smiled as she asked.\n\n\"Your something elses have caught my eyes often. Even with bandages, you're good looking. I may not be old, but living with you like this has my attention on lots of things besides fishing.\"\n\n\"Thanks. At the beginning I wasn't sure what the signals were telling me.\"\n\n\"I remember. You asked if I was gay!\"\n\n\"Would you help me get my pants off?\"\n\n\"My pleasure.\" She stood and I knelt in front of her. The slacks she had on fit snug to her hips and butt, so they took a little effort to loosen and lower. When I started pulling them down I noticed she didn't have panties on. I looked up at her face.\n\n\"I didn't put panties on because I thought if I needed to pee at the restaurant it would be easier to get the pants down and back up without the panties. You wouldn't be able to help me there.\"\n\n\"I would have been willing to follow you into the ladies room and assist you.\"\n\n\"Right! Like I was going to ask!\" Our banter was becoming more and more intimate and like close friends. Being in close proximity for twenty-four hours a day must be Ok in her mind, too.\n\nI hung her slacks in the closet and put the blouse in our make shift laundry area, the shower stall. When I turned back Kate was in bed. \"Could I have a couple pain pills, please?\" She asked.\n\nShe took two. I undressed completely and got into bed. When the light went out she said, \"That's even better. I don't like clothes in bed.\" We snuggled together and fell asleep.\n\nIt was light outside when I woke up. Two things were instantly evident to me, even without opening my eyes. The sun was up and Kate was holding my morning wood.\n\n\"Oh, now, you're awake.\" She said.\n\n\"Yes, and before I was asleep.\"\n\n\"Asleep and poking me with this thing!\"\n\n\"Did I hurt you with it?\"\n\n\"No, you woke me up with it and when I went to move it out of the way I found it felt good in my hand. Very warm and sort of exciting.\"\n\n\"Let's not start something that will hurt you. Don't get me wrong, I want to start something that will end with white stuff inside you, leaking out, but I don't want to hurt you by doing this too soon.\"\n\n\"It's Ok if it hurts a little as long as it feels good a lot.\"\n\nMy hand cupped her breast and she turned her face to mine. She kissed me. I gave as good as I got and what I got was wonderful. We took our time and enjoyed our morning together. When I progressed towards her pussy she realized where I was headed and said, \"You're seriously headed there?\"\n\n\"Unless you object. I love the taste and feel of woman for breakfast. Ok?\"\n\n\"It will be another first. Five states and my first time being nibbled on.\"\n\nHer thighs parted more and she repositioned her pillow so she could watch me. I held her hips in my hands and kissed the insides of her thighs, slowing approaching her forest of brown hair.\n\nKate said, \"I can feel your breath. I can't believe you want to.\"\n\n\"Believe it!\" I said. My face moved even closer and my tongue touched her slit. She moaned and her head dropped back onto the pillow. I interpreted that as enjoyment, so I licked her again, just with the tip of my tongue.\n\n\"That feels sooo good!\" Her voice whispered as her hands grabbed my head, drawing me closer in. I shifted my hands and spread her hips wider. My tongue widened and painted from the bottom edge of her vagina up to and including her clit. \n\n\"Oh my God! More!\"\n\nI painted her with the same slow, wide tongue stroke six times. Her belly was quivering, her hands grasped my hair and she moaned with each stroke.\n\nShe was so close. I believed that one more stroke and she would lose all control and cum hard. So, I stopped. The tip of my tongue barely touched her at the bottom of her vaginal opening. Her sweet nectar flowed onto my tongue and she whimpered in frustration.\n\n\"Don't stop! Lick me again! Please, please, please, lick me again.\"\n\nAs slowly as I was able I moved my tongue upwards just enough for her to respond. She jammed my face into her slit and her hips bucked, rubbing herself against my face. It pushed her over the edge and she screamed!\n\nMotor homes are barely insulated. An argument can be heard three camping spots away. It was ten o'clock on a Thursday morning in a campground where we had not seen children, in fact most of the people we saw were older than us. Kate screamed! Loud and long she screamed as the throes of her orgasm ripped through her.\n\nI held on and rode her and her hips bucked and twisted. I worried that she was about to pull handfuls of my hair out by the roots, but it didn't happen.\n\nWhen the scream ended she took a huge breath and collapsed. I lifted my face from her, relaxed my hands and waited for her blood pressure, heart rate and breathing to at least start back toward normal.\n\nHer eyes opened and she softly said, \"I hate Jack! I hate every man who wanted me to suck them off and refused to do that for me! What selfish bastards!\"\n\n\"They didn't know what they were missing.\"\n\n\"Bless whoever taught you to eat pussy! Bless you for doing it, for liking it, and bless you for doing it to me!\"\n\n\"Truly, my pleasure.\"\n\n\"Wait!\" She sat up. \"You aren't done!\" She grabbed my arms and pulled. She pulled me up and helped me into the proper position for the Missionary Prayer of Thanksgiving. My cock touched her outer lips and she dropped back onto the pillow. \"Please, be inside me.\"\n\nI pushed slowly into her, watching as my cock slid into her forest of hair. When I bottomed and started back she said, \"Even that feels different! Oh, Nick, what have you done to me?\"\n\n\"Just so you know, this isn't fucking.\" I said.\n\n\"No! I've been fucked! This is something else.\"\n\nWe slid together, wrapped in each other, completely, for a long time. When my biological drive took over and demanded faster, harder and more intense to the finish she was right there with me. Her legs wrapped around my hips and drew me in deep. It was unnecessary, but I said, \"Now!\" as millions of sperm raced into her. Unnecessary because she felt them and felt the muscles pumping them into her. Her fingernails dug into my arms and she moaned, \"Yessss!\"\n\nWhen I could, I fell to her right and landed beside her. She faced me and kissed my face. Another first. Her first taste of herself from someone else's face.\n\nSome time later she covered us. As afternoon came my stomach demanded I have regular food. My bladder demanded I pee. Kate didn't demand anything, she was an invitation.\n\nI took care of the bladder demand first. Then I made sandwiches and we ate in bed. Kate said, \"How far did you plan to get today?\"\n\n\"You mean on the highway or with you?\" I took a drink from the one can of diet Coke we had opened.\n\n\"On the highway.\" She took the can from my hand and finished it off.\n\n\"I didn't make a plan.\"\n\n\"Good thing. We didn't get far.\"\n\n\"Shall we dress and go for a walk?\" I asked.\n\n\"We haven't gone for a walk, ever.\"\n\n\"I know, but I'd like to. I'd get the chance to strut.\"\n\n\"Strut? No one knows what we did here, except us.\"\n\n\"Wanna bet? When you came, you screamed at the top of your lungs for twenty or thirty seconds. Everyone in this campground heard you. Every woman envies you and every man hates me.\"\n\n\"So you want to get us dressed and parade your conquest around?\"\n\n\"That was not a conquest. That was partnership at it's best!\"\n\n\"Well, whatever it was, I'm not going for a walk. I'm not going outside at all.\"\n\nI laughed and said, \"It would take me fifteen minutes to unplug and unhook us. We could be miles down the road before dark. Shall I?\"\n\n\"Would you mind?\" Her voice was begging me to do it. I pulled on clothes and went outside. Fifteen minutes later I was back inside. The bed was made, the RV clean and road ready. Kate was dressed and sitting in the shotgun seat, holding an ice pack to her chest. An open diet Coke in the drink holder for the driver let me know she appreciated me.\n\nWe drove the hundred miles to Columbia and pulled off the main road into a truck stop. We ate dinner in their restaurant and climbed back into the RV just about ten that evening. I handed her my cell phone. She looked at me and I said, \"Call your brother at home. I'd like to know if Jack stayed in town or went looking for us.\"\n\nShe called. I went outside and looked at the other rigs around us. When I came back Kate was in bed. I undressed and joined her. She welcomed me gently, with touches and kisses.\n\n\"Jack is still in town. He brags that he threw me out and that I'm gone for good. My brother saw him at the Watering Hole last night and he was hitting on everything with tits.\"\n\n\"Good. You are gone for good.\"\n\nWe slept well. When morning came we were gassed up and back on the road. Kate cooked for the first time, making French toast for our breakfast. It was damn good. Just before I was thinking about lunch we got to Kansas City, Missouri. I smiled and went across the bridge into Kansas. We stopped at a shopping center.\n\n\"What are we looking for?\" Kate asked.\n\n\"You have three suitcases of clothes, right?\"\n\n\"Yes, well almost. I have cosmetics and stuff too.\"\n\n\"Who paid for those clothes?\"\n\n\"Mostly, Jack.\"\n\n\"Well, I'd like you to wear clothes you like, not reminders of the past. So, let's see what we can find that you like.\"\n\n\"Did my brother give you money?\"\n\n\"He did. Part of it was for new clothes.\"\n\nTwo hours later we were back in the RV. Kate was in a new skirt, blouse and shoes. Two other new outfits were in the closet. She liked how the new clothes looked and how she felt wearing them.\n\nWe headed north and late in the afternoon we were near Bellevue Nebraska. I got off the main road and headed for Offutt Air Force Base. At the main gate I showed my ID and was waved onto the base. We drove to the BX and commissary. Kate was surprised at the prices. We loaded up on food and supplies. I asked a few people if they knew a place where we could park for the night. One family offered to let us use their land. They were retired too and had twelve acres a few miles from the base. We followed them back to their home.\n\nI think almost every woman has a picture in her mind of where she wants to live. She knows what the house should look like, the land, the feel and when Kate saw their farm she was seeing her dream. The house was white with blue-gray trim, two story, with a big wrap-around porch. Behind the house they had a huge garden filled with evidence of the bounty that summer had been. They even had a barn.\n\nAs we drove near the barn a dog came out of the barn. A chocolate lab who was excited to see all of us. He ran to the truck of the Logan's and then to us, back to the Logan's and back to us. His excitement was infectious. The instant I put us in Park, Kate was out and the dog was greeting her. It hurt, but she didn't care.\n\nMrs. Logan called the dog, \"Max!\" He instantly turned and ran from Kate to Mrs. Logan. She apologized for Max being so excited. We said we enjoyed Max welcoming us. The Logan's put together a big picnic dinner and three other families, neighbors, arrived to share time, food and conversation with us.\n\nI was amazed. In less than an hour we had a huge table covered with food. A ham, baked chicken, potato salad, cole slaw, garden salad, corn on the cob, beans, lumpia, three kinds of dessert and two kinds of iced tea. A metal wash tub was filled with sodas, beers and bottles of water. A huge round picnic table was covered with a red and white checked table cloth, plates and matching napkins. \n\nKate and I did little except stand back and watch as it came together. The four families obviously had done this before. We discovered that the dinner had been planned for weeks. We were invited at the spur of the moment.\n\nWhen everyone was seated Mr. Logan (USAF, CMSGT ret.) offered a blessing on the food and the people gathered. He thanked God for bringing us together and having us be a blessing to their family. I was touched.\n\nThe food was passed clockwise and I quickly realized that if I took some of everything I didn't have a big enough plate. Kate was nearly in overwhelm. We were included, not like guests, but like family. The banter around the table was light hearted, loving and included lots of laughter.",
        "It got serious when the platters and bowls stopped going round. Forks came into play and it quieted around the table. I tasted the potato salad and said, \"Growing up, potato salad was one of my favorite things. At church picnics and dinners my Mom had to force me to eat something else. This is the best!\"\n\nMr. Logan smiled and said, \"We agree! Marie made this batch.\"\n\nMarie Logan said, \"Thank you. Where did you grow up?\"\n\n\"A little town in southern Idaho.\"\n\nMarie nodded and asked, \"And what about you Kate? Where did you grow up?\"\n\nShe looked at me as if for permission and then decided. She said, \"I feel so comfortable, so welcomed by all of you. I'm going to trust you. I grew up in a small town in South Carolina. A week ago I was in the hospital. My husband beat me. He broke some ribs and my finger.\" She held up the still bandaged finger. \"I was rescued by Nick. We are on our way to creating a new life for me, far from my old life.\"\n\nAs she talked the eating stopped. When she finished one of the women asked, \"Has Nick been taking care of your injuries?\"\n\nThe man sitting next to her said, \"Helen's a nurse.\"\n\n\"Yes. He changes the bandages every day. We ice the bruises for fifteen minutes at a time.\"\n\n\"Maybe, when we're done eating, you'd let me check them?\" Helen the nurse asked.\n\n\"I'd appreciate that. I'm not trained in anything more than first aid.\" I said.\n\nOne of the other women, Beth, asked, \"Can I ask questions?\"\n\nKate said, \"Sure. I trust you. Please don't ever say we were here, or where we were headed. I don't want Jack to ever find me.\"\n\nThe woman nodded and asked, \"Why did he hit you?\"\n\n\"He was drunk.\" She took a breath and then said, \"He is a drunk. We got him in a rehab program and he stayed sober for two months. Then he came home late from work on payday. He was drunk. I took one look at him and he exploded. He beat me, raped me and then passed out. I called the sheriff and he got me to the hospital and Jack into jail.\"\n\n\"You won't go back?\" Marie asked.\n\n\"If I stayed or if I went back I'd die. There are quiet drunks, happy drunks, and mean drunks. Jack is loud, unhappy and mean. The next day he says he doesn't remember what he did. I cannot take the risk.\"\n\n\"Do you love him?\" Beth asked.\n\n\"I thought I did. Now, I think I was convincing myself he was the best I could do. I'll miss him sometimes, but in the last few months I've been more afraid of him than anything.\"\n\nMr. Logan said, \"We have some neighbors who remind us of you. In the last few months he's been drinking more and doing less. I don't think he's hit his wife, but the verbal abuse and neglect are hard to be around.\"\n\nBeth's husband, Mike, said, \"We really don't know what to say or what to do.\"\n\nI asked, \"Are they ex-military?\"\n\nEveryone nodded. \"He retired after twenty-six. Senior master sergeant. 30190.\" Mr. Logan said.\n\n\"I might know the man. I was 30190 myself.\"\n\nOur heads turned and we saw a brown Chevy pick up park next to the RV. Marie said, softly, \"Well, here they are. Judge for yourself.\"\n\nI watched as the man got out of the truck and walked away from it. He was wearing new jeans, polished boots and western belt. His Wrangler shirt looked either new or freshly ironed. The woman got out her side and carried a big bowl of something towards the table. She was in a cotton shirtwaist dress that appeared to have been washed a thousand times. It was faded and becoming threadbare. The bowl she carried was heavy. I got up and walked past him and took the bowl from her. Her eyes said everything. She was afraid.\n\n\"Hi.\" I said. \"The bowl looked heavy. You don't mind if I carry it?\"\n\nHe turned and said, \"It ain't that heavy. She just acts like she needs help.\"\n\n\"Sorry. My folks would have yelled at me, if I sat by and let a woman carry something. By the way, I'm Nick Peterson.\"\n\n\"Oh yeah. I'm Scott Marshall and she's Pat.\" We got to the table and I put the bowl down. \"What's inside, Pat?\" I asked.\n\nHe answered, \"Some weird ice cream thing.\"\n\nI looked at Pat and asked, \"Should we get it in a freezer for a little while?\"\n\nShe nodded. I carried the bowl and Marie led the way into the barn. Inside she opened a big freezer and we put the bowl inside. Pat whispered, \"I'm sorry we're late. Scott took a nap and I didn't dare wake him.\"\n\nWe went back outside. Scott had loaded a plate and was eating. He saw us and said, \"Pat, get me a beer, would you?\"\n\nShe didn't say anything, she just went to the tub and opened a beer for him. When she got to the table she sat the beer near him and moved away. I moved us a little and said, \"Come sit here, Pat. Plenty of room.\" Kate got her a plate and asked what food she wanted on it. She spoke softly and Kate loaded her plate for her. When she got it she thanked Kate and started to eat.\n\nScott watched and when Pat started to eat he said, \"Nick, you've got a good woman. If Pat was that good she'd have served me a plate.\"\n\n\"She was helping get the food you both brought into the freezer.\" I said.\n\n\"Doesn't matter.\" He took another bite, then another hit of his beer. Mr. Logan got a conversation going about a tax hike the county was proposing. While Scott finished off his plate of food he also finished off two more beers. Each time he took the last swallow from a beer her held it in Pat's direction and waved it. She got up, got him a fresh one and returned to her seat. He never said \"Thank you.\" They hadn't been there an hour and he was opening number four. I looked at Kate and she was as scared as Pat.\n\n\"So, if I can ask, what do you do now that you're retired?\" I asked.\n\n\"Why you askin?\" Scott asked.\n\n\"Cause were newly retired and don't have many plans yet.\"\n\n\"Well,\" He said, \"Don't buy a goddamned farm! They eat money faster than a goat! I've got fifty acres and haven't made a cent since I bought the damn place.\"\n\n\"What do you grow?\" I asked.\n\n\"I tried corn. Jesus, it's a hell of a lot of work! Planted all fifty acres. Seeds cost me three months pension and then there's fertilizer, bug killers and water. Everything costs. I found out that I've gotta be out there all the time weedin, and things. Farming sucks!\"\n\nI looked at the other families. Mike spoke up. \"We did corn last year. It was a lot of work. This year we did strawberries. Just as much work, and a little more money. We've been thinking about fruit trees.\"\n\nMr. Logan said, \"My neighbor came to me and wanted to rent my land this year. He pays me to let him farm my land. We have just twelve acres so he rents eleven and we have one. So, we grow vegetables and flowers for us.\"\n\nScott spoke up again. \"Asshole next to me made an offer to rent my land. Man's a thief! Wanted to just pay me a percentage of what the crop earned. A tiny percentage! Screw him!\"\n\nThe clean up started. We carried the dishes, glasses and empty serving platters into the house and washed them. Marie gave me small bowls and lots of spoons to bring to the table. Scott sat at the table while everyone else worked. Pat worked hard and didn't speak.\n\nWhen we went to the barn to get her dessert she said, \"It was an ice cream cake. An accident kind of ruined it. The ice cream and the cake are now more mixed than I planned. I'm sorry.\"\n\nMarie put her arm around Pat and I saw Pat flinch. There were bruises inside her shirt. Marie said, \"We're just gonna put it in bowls and eat it. Next time we'll take pictures, not this time.\"\n\n\"Thank you, Marie.\" Pat said. Her eyes were full. \n\nI carried the big bowl to the table and dished out the ice cream cake mixture. It was a yellow cake with fresh strawberry ice cream. The strawberries were fresh and had been blended into the home made ice cream. Kate and I made a big deal about how good it was. The others praised the dessert as well. Pat beamed.\n\nAs it became evening Scott became louder and more abusive. Mike and I went inside the Logan's house to carry bowls to the sink and I said, \"Think you can get the rest of the beers out of the ice?\"\n\n\"You mean without Scott catching me?\" He asked. I nodded. \"I'll need a diversion.\"\n\n\"Not a problem. Come on.\"\n\nWhen we got outside I asked Scott, \"You ever thought about getting an RV?\"\n\n\"A what?\"\n\n\"An RV. A Recreational Vehicle.\" I pointed at ours. \"We've been havin a ball since we got it.\"\n\n\"Too damn small. No room for anything.\"\n\nKate said, \"We have plenty of room. We even have a TV. Wanna see?\"\n\nScott said, \"Really? You both live in there?\"\n\n\"Sure. Come take a look. We'll give you the five cent tour.\"\n\nScott and the others got up. Mike hung back and so did Mr. Logan. As Scott went up the steps into the RV they gathered the remaining beers. I didn't see where they went with them and neither did Scott. When they were standing just outside I let the tour end. Scott half stumbled down the steps and Mike came inside. He and his wife actually looked over the inside.\n\n\"This really could be fun.\" They both said. Mike sat down on the couch and looked out the window. He saw Scott swishing his arm around in the icy water of the beverage tub. He would find Cokes, diet Cokes, Pepsi, Mountain Dew and bottled water, but no beer.\n\nLess than half an hour later, Scott and Pat were on their way home. As soon as they were gone Kate spoke. \"Less than two weeks ago, I was Pat. I was so scared while they were here. He hits her.\"\n\n\"She winced when I touched her in the barn.\" Marie said.\n\n\"How far from their farm to yours?\" I asked.\n\n\"Six, maybe six and a half miles.\" Mr. Logan answered.\n\n\"Does she drive?\" I asked.\n\n\"Yes. What are you thinking?\" Marie asked.\n\n\"Can you get her back here tomorrow?\"\n\n\"I think so. Why?\"\n\n\"We want to talk to her. The man is dangerous. If she wants out, we can help her.\"\n\nKate looked at me with tears running down her cheeks. \"You would take her with us?\"\n\n\"I can't just drive away. She'll be dead before Christmas.\" Kate came into my arms and sobbed. When she could, she lifted her head and said, to the others, \"I love this man.\"\n\n\"You think she'll leave him?\" Marie asked.\n\n\"To quote my brother, it depends. If she's more afraid of Nick than she is of Scott, she'll stay. If she already knows he's going to kill her, she'll go.\"\n\nMike asked, \"Can you afford to do this? Taking her with you means buying her clothes, food and helping her settle somewhere.\"\n\n\"Kate's brother gave me some money. I have a pension and a little savings. We won't be eating lobster, but we'll be alive and healing.\"\n\nMarie said, \"We want to help. We like Pat.\"\n\n\"Whatever you give us, we'll be grateful. But before we get to any of that, we need to get Pat here.\"\n\nThe Logan's looked at each other and nodded. Mr. Logan said, \"I'm slow to warm to people. I let them near, but not close. I'm letting you in. My name is Bob. I'm so glad we met you. We just didn't know what to do to help Pat or Scott. We'll find a way to get her here in the morning.\"\n\n\"It would be best if she drove their truck over.\" I said.\n\nBob added, \"That way you have a six mile walking time head start.\"\n\n\"Two hours isn't much, but it's better than five minutes.\"\n\nI still had Kate in my arms. I said, \"Honey, let's go see what we can do to make room for Pat.\"\n\nMarie said, \"Anything you need, just name it. Trash bags? Food?\"\n\n\"A couple of trash bags might help.\" Kate said. \"I don't know if we have any room for any more food.\"\n\n\"Come with us. We'll be able to talk with you while we look the situation over.\" I said. Marie went into the house and came back with a box of trash bags.\n\nWhile we rearranged things I realized that if Pat went with us she'd have just what she had on, and a purse. I hoped she and Kate were the same size. I asked, \"Kate, do you think Pat could wear the same size as you?\"\n\n\"The same size what?\"\n\n\"Everything!\"\n\nShe stopped and thought for a few seconds. \"If she can, we can share a wardrobe and won't need as much space as we would if we need two sets of clothes.\"\n\nMarie said, \"I think the two of you are about the same size. Pat's clothes are all worn out and baggy. She never wears anything that shows what she really looks like.\"\n\nBob added, \"She always looks like Scott buys her clothes at the thrift store, and gets them out of the rag bin. It's a shame.\"\n\nI asked, \"Have either of you ever seen him happy?\"\n\n\"No.\" They both answered. Bob added, \"He wakes up pissed off and then has a beer and it gets worse.\"\n\n\"Damn.\" Kate said. \"I've been with a man just like him. They could be brothers.\"\n\nWhen they left the RV headed for bed they took a trash bag mostly filled with them. I closed the door and Kate wrapped herself around me. We kissed a few times and she said, \"I meant what I said.\"\n\n\"Which of the many things you said are you referring to?\"\n\n\"I love this man.\" She added emphasis by adding a kiss and pressing her chest against mine.\n\nInside my head I thought, 'She couldn't. We've only known each other a week. Not even a whole week.' Outside, I didn't say anything.\n\n\"Nick, would you love me tonight?\"\n\n\"Love you?\"\n\n\"Make love to me? Screw me? Whatever the name for it is I want what you gave me before.\"\n\n\"Yes! I'd be happy to. I guess I'm a nut for what words mean. Let's call what we're about to do joining. Ok?\"\n\n\"Yeah! I like that. It doesn't sound gross like fucking or screwing. Joining.\"\n\nWe kissed a few more times and undressed each other. In bed, the kisses were supplemented with lots of touching, caressing and kneading of each other. When she was ready, willing and wet Kate said, \"How do I ask for you to... to...\"\n\n\"Lick you? Kiss your pussy? You say, Please Sir, would you please kiss my pussy?\"\n\n\"Please Sir, would you please kiss my pussy?\" As she asked her legs spread a little more and I felt her hands putting pressure on me to move in the direction that would get my face into the \"Y\". I didn't resist.\n\nMy mouth got close and my nose could tell she was ready, willing and indeed wet. My tongue tasted her and she moaned, \"Yes! I really love this!\" My tongue explored everywhere inside and near her vagina that it could reach. I sucked on her lips and her response told me she loved it. Every touch of tongue to clitoris brought a moan and a hip thrust as the response. \n\nWhen her belly started quivering and the hip thrusts were automatic Kate grabbed a pillow and held it over her face. I sucked on her nub and flicked it with the tip of my tongue. Her back arched, her body shook and I heard a muffled scream. As quick as I could I lifted up and repositioned myself. I slid into her and quickly established a beat, my pubes slapping against her pussy.\n\nShe tossed the pillow to the floor and looked up at my face. \"Don't ever stop!\"\n\nAs soon as she said the words I knew I wouldn't last very long. It felt too good and looking at her face, breasts and body pushed me towards a climax.\n\nShe knew I was close and said, \"I want you in my mouth! Please!\"\n\nShe pushed me back until I was on my back and she was between my legs. Her mouth opened and my cock all but disappeared inside. The sensations of being sucked and the magic her tongue was doing got the result she wanted! My nuts pulled up somewhere near my spleen and shot a load unlike any load I could ever remember having shot before.\n\nKate kept it all. She continued to suck and lick my cock until I was wilted and soft. I was hypersensitive and she gently took care of me. When she finally released my cock, she crawled up beside me and snuggled in.\n\nWe were quiet for a time. Then, Kate asked, \"How will we join with Pat in here?\"\n\nI hadn't thought about it. I answered, \"It works like this: we get naked, you open your legs and I put my cock inside you, wiggle it around while you scream and scare the livestock.\"\n\nShe laughed a little and said, \"That's not what I meant! This isn't a big two bedroom apartment. She'll be four feet away!\"\n\nWe were quiet, again. Kate broke the silence, \"We'll need to talk to her before we do it. Maybe she'll go for a walk.\"\n\nI engaged my mouth before my brain was fully activated. \"Maybe she'll join with us?\"\n\nKate sat up and her eyes opened wide. \"Is that what you want?\"\n\n\"If being with us, me or you will help her heal, yes. Not just so I can have sex with both of you, but if it will help.\"\n\n\"I'm not enough?\" I could hear thousands of hours of uncertainty in her voice.\n\n\"Enough? You believe that one person should supply all the companionship, love, affection, support, sexual activity and challenge that another person might need or want?\"\n\n\"Yes! Isn't that what people promise when they get married?\" She was sitting up, cross-legged and focused. This conversation was important to her.\n\n\"It may be what some people promise, but those people didn't think it through.\"\n\n\"You did?\"\n\n\"When I joined the Air Force I thought I'd make sergeant and get married. I watched other men do just that. Lots of them got divorced. I listened and watched. They got divorced because the women believed they should be more important to the men than the Air Force, other women or anything. When the man tried to divide himself between his marriage and his career, one or both suffered. When they had kids he got pulled again. The job complained he was distracted, his wife complained he wasn't home enough and the kids asked, \"Where's Dad?\" They got divorced because they believed one person should be able to provide everything one other person could want or need. I decided I would be married to the Air Force, until I wasn't. No conflict.\"\n\n\"This isn't about the Air Force. This is about two women!\"\n\nI considered how to respond. \"This is about a story you were told when you were little. Maybe it was Cinderella. Cinderella lived a life without any glamour, dreaming that one day she would be rescued by a prince and live in silks the rest of her life. Cinderella didn't dream about moving in with seven short men and loving all of them. She dreamed of one man. Millions of little girls heard both stories but listened to the one about the prince. Their fantasy was to be rescued from a life of hard work and live surrounded by silk. The seven dwarves didn't bathe Snow White in silks. They worked and accepted her as a partner in their home. Not the fantasy little girls gravitate to.\"\n\n\"I didn't expect silk from Jack.\"\n\n\"You thought Jack was as close to Prince Charming as your neighborhood of South Carolina could offer.\"\n\nShe sadly nodded.\n\n\"Did your Mom love you?\" I asked.\n\nHer whole body shook when I asked the question. \"Yes! Of course!\"\n\n\"So, she didn't love your brother?\"\n\n\"She loves him, too!\"\n\n\"And, she loves your Dad?\"\n\n\"Yes.\"\n\n\"So, your Mom loves you, your brother, your Dad, her parents and maybe even your Dad's parents but I can't love two women?\"\n\n\"You can love two women. One as a wife and one some other way. As a sister.\"\n\n\"You want to be the sister?\"\n\n\"No!\"\n\n\"So Pat should be relegated to the position of sister because you got here first?\"\n\nShe was quiet. I glanced at the digital clock and saw that it was almost two a.m. I waited. It took a while before she moved or spoke.\n\n\"A week ago you accepted me, sight unseen. You took me in, even though I'm damaged goods. Not once did I feel left out, or like you thought I was some charity case. You've been extra kind, considerate and careful. Today you opened up again. You offered to take Pat in. I saw you do it. I didn't feel jealousy. I saw that your response to her was automatic. You didn't have to think it over, it's who you are. I felt your love. Now I'm feeling territorial. You're mine! She should be grateful that we're taking her away from Jack. That should be enough.\"\n\nI noticed she had called Scott Jack. She saw how much alike she and Pat were. I stayed quiet.\n\n\"I'm crazy. Let's bring her in and love her. You loving me the way you do, is healing me. When you notice me getting territorial, let me know. I'll do my best to get over it.\"",
        "\"Ok. And if you see me ignoring either of you, let me know. I'm in new territory too. I'm forty-six and I've never lived with a woman as long as I've lived with you.\" I took a breath. \"And now I'm bringing in another woman? I'm nuts!\"\n\n\"We can do this.\" She leaned back over to me and we kissed. I knew we would revisit this topic many times. I knew Pat would be in the conversation too. I had no idea what the next few weeks would be like.\n\nWe fell asleep wrapped in each other's arms.\n\nSomeone knocking on the metal door of the RV woke both of us. I said, \"Yes!\" and the door opened. Marie climbed in and saw us in bed, naked and wrapped in each other's arms. She blushed, but didn't look away.\n\n\"Pat will be her in about fifteen minutes. She called us. Seems Scott is sending her to the grocery to get more beer. That trip alone would take her two hours. She wanted to know if you were still here. I said yes and she asked me to not let you go until she talks to you.\"\n\nKate said, \"I think she's already decided to go.\"\n\nMarie nodded. I did too. As Kate started to get up Marie said, \"I'm making breakfast. Get dressed and come into the house, Ok?\"\n\n\"Ok.\" We both answered.\n\nWe dressed and went to the house. Through the window, I watched Pat park her truck inside the barn and walk to the back door of the house. She was dressed in faded jeans and a western shirt that I believed used to belong to Scott. Her boots were scuffed and worn. When I had watched her get out of the truck at the picnic she walked like a prisoner. Between the barn and the house her posture was better and she looked at the house, not the ground.\n\nShe came in and greeted Marie. Marie had her sit and put a plate of pancakes, eggs and bacon in front of her. Bob poured her a cup of coffee. She took three bites. As soon as she swallowed the third bite she asked, \"Can I have a serious talk with you?\"\n\nI nodded. Kate said, \"Please do.\"\n\n\"I realized yesterday that I'm dead. When Scott and I were in the Air Force we were alive. No. We were more alive than we are now. Scott had something he was looking forward to. He talked for years about having a farm and growing food. Now, he has the farm and its more work than he imagined. He has nothing to look forward to. He drinks and I hide. When I don't hide he punishes me for his life not working.\"\n\nMarie said, \"You winced when I touched you yesterday.\"\n\nPat stood and unbuttoned the shirt she was wearing. She took it off, leaving her breasts covered by a plain white bra that was old and falling apart. Her chest was covered with bruises in various stages of healing. She turned and her back was as bad. \"My ass and legs look a lot like my chest.\" She took a breath, \"He even blames me for the bruises! He says I bruise too easy.\"\n\nKate got up and pulled her shirt off. The bruises were fading. No longer black and blue they were green, yellow and the bandages were much smaller than when we met.\n\nKate said, \"Nick didn't do this. My relationship at home was with a man who reminds me of Scott. He drinks. There are happy drunks, quiet sad drunks and mean drunks. Jack is a mean, nasty, angry drunk. A little over a week ago he kicked me hard enough to break a couple ribs, tore up my chest and broke my finger. Nick helped me get away before Jack could get drunk again and kill me.\"\n\nPat sat back in her chair and cried. Sobbed. Bob and I left the room. Kate and Marie held Pat and each other. Bob and I went out to the barn. I happened to glance into the back of Pat's truck. A worn suitcase was the only thing back there.\n\nI picked it up and took it to the RV. I put it in the closet. Bob and I walked back to the house. We didn't hurry. The three women were still hugging when we came back into the kitchen.\n\nI said, \"I have an idea. Don't decide before I finish, just hear me out, Ok?\"\n\nPat, Kate and Marie looked up at me.\n\n\"How about if Kate and I take you with us? We can pretty well guarantee Scott won't follow us. He won't beat you again. You will heal and you will get a fresh start somewhere. We'll help get you started.\"\n\nPat said, \"My suitcase is in the back of the truck. I'm not going back to Scott. I don't have much money, just me and suitcase and the old truck.\"\n\nBob said, \"Leave the truck here. Scott can walk over and get it any time he wants. Meanwhile, the three of you can go somewhere else.\"\n\n\"Are you sure?\" Pat asked.\n\nKate still held her. \"We're sure. You have to agree to certain things, however.\"\n\n\"What things?\" Pat asked and I wanted to know.\n\n\"You have to agree not to complain about not having enough room. You have to share in all the duties, like cooking, cleaning, laundry and the like. And, you have to agree to get some new clothes!\"\n\n\"I agree!\" Pat said. It was the first smile I'd ever seen on her.\n\nI said, \"By the way, we put your suitcase in the RV already. Hug Bob and Marie and let's get going.\"\n\n\"Let me use the bathroom before we go.\" Pat rushed off to the bathroom.\n\nKate smiled and said, \"She doesn't know there's one in the RV.\"\n\nBob handed me an envelope. \"We took up a collection. Take this to help all three of you. Get Pat some clothes and all of you a fresh start.\"\n\nI thanked Bob and Marie and Marie said, \"When you are settled, wherever and however that works out, I'd like a letter letting us know you're OK.\"\n\nKate said, \"We have your address. You'll get the letters.\"\n\nPat came out. We walked to the RV and said our good-byes. We drove out their long driveway and at the highway I asked, \"Right or left, Pat?\"\n\nShe looked both ways, thought for half a second and said, \"Right.\" Scott and their farm were to the left. I turned the wheel and we headed west. Nine hours later we were nearing Cheyenne, Wyoming. Most of those eight hours the two women talked and I listened. They fed me snacks, asked me to stop for lunch and they worked out some details about how the three of us could live together in the RV for a few days.\n\nAs we approached Cheyenne I saw a big shopping center. I pulled in and parked. I counted out eight hundred dollars in cash and gave it to Kate. I said, \"Take Pat inside. Shoes, clothes and underwear. Nice stuff. Three full outfits with extra underwear. When you come back the things she has on now will be left in a trash can inside.\"\n\n\"Where will you be?\"\n\n\"The RV needs service. I saw a place back a couple miles. I'll be back in three hours. If I'm not back, call my cell.\"\n\nThey happily went shopping. I turned the RV and went back the three miles to the place I'd seen. Two hours later one of their staff was helping me transfer all our things from my RV into a slightly bigger RV. I'd traded up. Since July I'd been living in a class \"C\" Winnie. We were now in a class \"A\" Winnie. The trade had cost me six thousand dollars, but I considered the benefits worth the money.\n\nI was parked where I had been parked when I let them out. I had fifteen minutes lea way. I watched the doors of the mall and when they stepped outside they looked around, saw the RV that wasn't the one they expected and Kate pulled out her cell phone. I honked the horn.\n\nShe looked up, then looked back at the cell phone. I honked again. She looked up again. The lights went on. She said something to Pat and they walked towards the new RV. I opened the side door and stepped outside.\n\n\"Welcome home, ladies.\" I said. \"Wow! Pat, nice clothes! You look great!\"\n\n\"Did you really get a new RV?\" Kate asked.\n\n\"Go inside. Look around. See if it's our stuff inside.\" They went inside. Bigger closets, a bigger, nicer bathroom, a couch that made into a bed, a bedroom with a door, a slightly bigger kitchen and all our stuff already put away. I drove while they explored. It was almost dark when I parked us in a nice campground. I got us plugged in, connected and hooked up. Kate and Pat worked together in the kitchen and got dinner made. They made chicken, pasta and mixed veggies. It was great.\n\nIt was almost ten when dinner was done, cleaned up and we sat down to just relax.\n\nPat asked, \"So, where do I sleep?\"\n\nKate said, \"I've been sleeping with Nick. Unless I'm wrong, the couch makes into a bed and the dining room makes into a bed. You can have your choice.\"\n\n\"Ok. I'll try the couch tonight. Maybe the dining room tomorrow night.\"\n\nThey found some bedding and made the couch into a bed, together. I watched. Pat opened her suitcase and pulled out a nightgown. Like everything she owned it was threadbare and old. I went into the bedroom and got a t-shirt. I handed it to Pat and said, \"I may be totally off here, but I think this would be better than that.\"\n\nShe put the nightgown back in the suitcase and said, \"I'll be right back.\" She opened the side door and took the suitcase outside. When she came back it wasn't with her. She smiled and said, \"That stuff belonged to Pat Marshall. I'm not her any more. I don't want to wear her things.\" She took the t-shirt from me and said, \"Thanks.\"\n\nKate said, \"I've been thinking. If Nick uses the bathroom first, we can share it and get done quickly.\" I nodded and went into the bathroom. I took care of showering, shaving and my other pre-bed rituals. When I was ready to exit I realized I was naked. Ok in front of Kate, but not for Pat. I wrapped in my towel and opened the door.\n\nAs I went into the bedroom I noticed Pat pull her shirt up over her head and off. Very nice view even with the bruises. A few seconds later I closed the door, but not quickly enough. If either lady was looking she would have seen my growing hard on.\n\nI almost laughed. It was a wooden door, but so thin and hollow that what it stopped was sight, not sounds.\n\nThey did what they did and included rebandaging Kate. When the door opened, I was in bed. I had one bedside lamp on. The rest of the RV was dark. Kate was nude. She smiled and crawled onto the bed and under the covers with me.\n\nWhen she was settled she whispered, \"Thank you for taking such good care of us.\"\n\n\"You're welcome. Thank you for taking care of me, too.\"\n\nWe didn't join. I didn't expect that we would.\n\nWe awoke to the smells of breakfast. We got up and pulled jeans on before opening the door. I was shocked! Pat was standing in the kitchen, cooking, barefoot from the ground up! She was smiling and making a huge omelet, toast and coffee. I was glad my jeans sort of hid that I was hard, again. I asked, \"You always make breakfast nude?\"\n\n\"No, never. But I saw that both of you went to bed nude last night and I thought about it. Why wear clothes in bed, in the dark? So, I undressed. When I got up I felt so free, so good, I decided not to get dressed. Is that Ok?\"\n\n\"It's Ok with me? Kate, Ok with you?\"\n\n\"I have to be honest. I'm worried that she looks better than me. I'm worried you'll toss me out.\"\n\nMy arm went around her shoulder and I said, \"No one is being tossed out. She doesn't look better or worse than you. Just different. She has all the right parts, in all the right places and so do you.\"\n\n\"Ok, but that's how I feel.\"\n\n\"I understand. Can we have breakfast?\"\n\nPlates, cups and food made it to the table. We sat and ate. The food was good and the view was wonderful. Pat talked about how it felt not to be \"walking on egg shells.\" She wondered aloud about how Scott was handling being left.\n\nI handed her my cell phone. \"Call Marie. She'll know. We'll limit calls to cell only and no more than one short call a week. They are traceable.\"\n\nShe dialed. I finished my eggs and did our dishes and the frying pan. When she hung up she had tear tracks on her face.\n\n\"Scott walked over to the Logan's to get the truck. He was sad. Marie said he said he knew when I drove away I wasn't coming back. He thought I'd take the truck. He was grateful that I left it for him. She said he had a long talk with Mr. Logan and then drove home. They got the feeling he understood why I left and wasn't going to fight it.\"\n\n\"I'm thinking that if that's true, you shouldn't file for a divorce. You have benefits right now. Medical is a big deal. We can check with a base when we get close and see what the policy is for spousal dependents.\" I said.\n\n\"Good idea. I hadn't thought about it. He wouldn't let me go to the base hospital at Offutt. I think he was afraid of what they'd do if they saw the bruises.\"\n\nI went up front and sat in the driver's seat. \"You ladies ready to roll?\"\n\n\"No, not yet.\" Pat said. \"I need to get dressed first.\"\n\nKate said, \"Wear the blue outfit. I think Nick will really like it.\"\n\nI smiled. The feelings Kate had about Pat were switching from fear and jealousy to acceptance and sisterly. I figured they'd switch back soon enough. The fantasies of her whole life were not just going to disappear in a day.\n\nKate sat shotgun. When Pat was dressed she came up front and she sat in the seat right behind shotgun. I said we'd call that seat pistol. They agreed to switch every time we stopped.\n\nAn hour down the road I asked, \"Could one of you tune the radio and find a trucker's station? They'll give us weather and road conditions.\"\n\nPat knelt between the seats up front and played with the radio. She found a trucker's station just in time for their weather report.\n\n\"The chance for rain increases to eighty percent later this afternoon in the Laramie area. Snow expected this evening along I-80 between Cheyenne and Salt Lake. Low tonight in Laramie thirty degrees. Salt Lake City will get down to twenty-eight. High tomorrow in Laramie, fifty. Salt Lake City, fifty-one.\"\n\nWe stopped in Laramie long enough for both women to buy warm coats, gloves and hats. Kate and Pat also got hiking boots and good socks. \n\nAbout an hour west of Laramie the snow started. A few flakes blowing lightly across the road and a darkening sky were what I saw, at first. Fifty miles farther and I had our lights on and the heater running. We listened attentively to the weather reports every fifteen minutes. By the time we got to Rock Springs I was ready to stop. We found a campground and both ladies helped us get plugged in and hooked up. We pulled the drapes and got ready for a night inside.\n\nKate checked our food supply and found a ham that we didn't buy. The Logan's had stashed it in our freezer. We decided to cook it the next day, and have leftover ham sandwiches and ham and cheese omelets for a couple extra days. For dinner that night, they teamed up and made a stew.\n\nAt nine that night I turned on the radio again and found we would be staying right there for at least a day and a half. Then, if the weather guy was right, the road west would be open.\n\n\"When we left Cheyenne, why did we head here?\" Pat asked.\n\n\"My sister invited me for Thanksgiving Dinner. I guess I've sort of been headed towards her house since we left St. Louis.\"\n\n\"Your sister?\" Kate asked.\n\n\"Yes. She and her husband live near Portland. I seem to drop in every couple of years and around the middle of summer she invited me for this Thanksgiving.\"\n\n\"When was the last time you brought a woman home with you?\" Pat asked.\n\n\"Never. It would have needed to be a very serious relationship for me to bring her home.\"\n\nThey looked at each other, then at me. Kate spoke. What she said was a question and inside her words I heard years of other questions. \n\n\"Where will we go while you visit your sister?\"\n\nI paused. My mind went three or four different directions to answer her question and some of the questions hidden in her question.\n\n\"I want to give you a complete answer. One that will answer what you asked and answer what I heard behind your question. I also want to answer the questions growing in Pat. It's starting to be late. The wind is blowing and the snow is falling. The answer may take a while. Should we postpone the answer until the morning, get a good night's sleep and sit together in the morning?\"\n\nThey exchanged glances again and Pat said, \"No! I couldn't even close my eyes much less sleep with this unanswered. I will stay awake.\" Kate nodded.\n\nI nodded. \"Ok. When the sheriff approached me about you Kate some of my first thoughts were about how to help you find a place and start a new life. I considered how far we might go before we even started looking. The personal aspect of my thoughts were that I hoped you could cook. I cleaned the inside of the RV and started making room for you, separate from me, even in that tiny space.\" I took a breath.\n\n\"Before we had been together four hours I had helped you to the bathroom, seen your bandages and your breasts. We started a very intimate relationship almost immediately. When you asked if I would hold you as we slept, I didn't immediately go to sleep. I said there were implications. I thought about what your brother said to me just before he left. He said he was trusting me with the life of his only sister.\"\n\n\"I didn't know her said that.\" Kate said. A tear slid down her cheek.\n\n\"You were right there in bed with me, snuggled against me and I was impacted by the trust being given to me. Your brother trusted me with your life. You trusted me with your life. Before I went to sleep I realized that to live up to that trust I had to love you.\"\n\n\"I love you, too.\" Kate whispered.\n\n\"In my mind we were still in the first days of our honeymoon when Pat showed up at a picnic. I watched Pat and I watched you. I could feel what was going on, see what was happening, to both of you. When Scott took Pat home I wanted to scream and stop them from leaving!\"\n\n\"Why?\" Pat asked.\n\n\"I saw that you are sisters. A common background, a common history. How could I open to Kate and not open to Pat? I couldn't. I got Marie and Bob to help me get you back to their farm. I wanted to offer you a way out. They only way out I saw that I was a part of was to include you in our us.\"\n\n\"In our us?\" Kate asked.\n\n\"I don't know how else to say it. When I decided to love you it stopped being you and me living in an RV. It became us. We opened the door and moved Pat into our us.\" I looked at both women, sitting side by side on the bed. Both had tear tracks down their cheeks and I noticed they were holding hands.\n\n\"Kate, I love you. If we get somewhere and you decide to start a new life without me, I will not stop. I will not stop you from going and I will not stop loving you. Let me be clear. I don't want you to go.\" My hand reached out and joined with their holding hands.\n\n\"Pat, I love you. If we get somewhere and you decide to start a new life without me, I will not stop. I will not stop you from going and I will not stop loving you. Let me be clear. I don't want you to go.\" I held still for a few moments and then said, \"In my heart, mind, soul we are an us. I commit my life to your lives. That said, if my sister wants me there for Thanksgiving she will need to set three places for us. Every year.\"\n\nKate moved from the bed to my lap without letting go of Pat or my hand. We kissed and she said, \"My head says this can't be real. You're a man who's been everywhere. Until we met I'd never been out of South Carolina! I've loved three men in my whole life. My Dad, my brother and Jack. You aren't like any of them. I've known you less than two weeks. My head says go slow. My heart says shut up and love you.\"\n\nPat moved to join Kate in my lap. \"Shut up! Everything you say is true and we'd both be stupid to pass this up. He loves us. What's the worst thing that could come from loving Nick? It only lasts a year? It will be the best year of my life. He already cares more about me than anyone else ever has. I care more about you and about him than about anyone I've ever known except my Mom.\" She kissed me. When the kiss ended she kissed Kate.\n\nThe kisses continued and became more. I was aware I was in way over my head. Pat was right. Being us felt better than anything I had ever felt before. I suppressed the questions about how we could make it work. \n\nSuppression lasted less than a minute. We had kissed each other a few times when Pat asked, \"Is there room in the bed for all of us?\"",
        "Kate pulled back less than two inches and asked, \"Are you moving in on my man?\" Then she smiled.\n\nPat smiled and kissed Kate. When the kiss ended she said, \"No. I'm wanting to share.\"\n\nI held them both in my lap and made no move to do anything we weren't already doing. Kate unbuttoned the top button of my shirt. Pat kissed me and together they unbuttoned the second button.\n\nVery soon all three of us were undressed. The process had gotten us into the narrow aisle of the RV and Kate had moved into the bedroom, followed by me and by Pat.\n\nKate held the covers open, inviting Pat inside. Pat moved right in. Kate was then in the middle. She spooned with Pat, her front against Pat's butt. My front against Kate's butt. Kate stayed warm the rest of the night. We found the positions most comfortable and warm and stopped talking. Minutes passed with each of us considering what we were doing and sleep came to us.\n\nThe next time I looked at the digital clock it read 1022. It was still dark outside. I rolled over and pulled the drape back, uncovering the window. It was still snowing and the snow was piling up. On the picnic table beside us it was six inches deep. \n\n\"Good Morning.\" Kate said. \"How is it outside?\"\n\n\"We aren't going any where today.\" I said.\n\n\"Maybe a short trip to the kitchen for food, a trip or two to the bathroom?\" Kate asked.\n\n\"Ok. If you insist. I'm quite comfortable, warm and love how this feels.\" I said.\n\nPat's voice was heard. \"You met Nick when?\"\n\n\"Twenty-forth of October. It's now the first of November. That makes it nine days. Amazing.\"\n\n\"Amazing that you're so far from where you were? Amazing that in nine days you've become lovers? Amazing he hasn't tossed us both out in the snow? What's amazing?\" Pat asked.\n\n\"All that. All that and here the three of us are, comfortable in bed together. One bed, three naked people. Amazing.\" Kate said.\n\n\"It certainly is. Scott wanted for us to get into swapping or swinging, I'm not sure which. It didn't work for him.\"\n\n\"You tried it?\" Kate asked.\n\n\"We did. We were just retired and we flew to Las Vegas to a convention called Lifestyles. Scott was all hot to screw lots of different women. We went to an orientation and he used selective hearing. He heard what he wanted to hear. That he could screw around I couldn't get mad.\"\n\n\"Did he?\" I asked.\n\n\"Yup! First night. We went to a party and he danced with four or five different women. He left me sitting alone at a table for eight. When he'd been gone half an hour a guy came over and sat with me. He got me a drink, some snacks and we danced a few times. His wife came by and we met. They were nice people. Before she left us she said we could use their room. If she hooked up they would use his room.\"\n\n\"So, did you?\" I asked.\n\n\"I was thinking about it when I saw Scott walking a woman away from the party. She was bare chested and his hand was on her ass. I decided to go for it!\"\n\n\"And?\" Pat asked.\n\n\"And we went to his room. He was really nice. He didn't rush me. It wasn't fucking, like I expected. He loved foreplay and he teased me for quite a while before we did it. I came twice while I was with him. I'd never cum twice with Scott.\"\n\n\"You didn't tell Scott that?\" I asked.\n\n\"I never got the chance. When we left his room Scott and the woman were coming out of the room next door. He'd heard me both times I came! We left Las Vegas the next afternoon. He said he didn't feel good. For the next two years any time he heard the words Las Vegas he got upset. There was never a mention of swinging again.\"\n\n\"Would you do it again?\"\n\n\"Maybe. I've thought about it from time to time. No, probably not. It showed me that there were better lovers in the world than Scott, but there was still something missing, even from the guy in room 2218.\"\n\n\"The guy in 2218?\" I asked.\n\n\"Yeah. That's how I remember him. I can't remember his name.\"\n\nWe were still spooned together with Kate in the middle. I asked, \"Should I make breakfast, have cereal or what? I'm hungry.\"\n\nPat bounded from the bed and said, \"I'll pull on some clothes and make oatmeal for all of us. Ok?\"\n\nKate said, \"I can make toast and coffee to go with it.\"\n\n\"I'll check the radio and see how we're doing.\" We dressed and each did our thing. The weather guy was hopeful that the storm would pass us early in the afternoon and the highways west would be open in the morning.\n\nWe sat together at the table and ate. Pat had added some cinnamon to the oatmeal. It was wonderful. Kate's coffee was a little weak. She hadn't been in the military. I didn't mention the weakness.\n\nAs Pat and I did the dishes Kate asked, \"When are you going to tell your sister about us?\"\n\n\"I'd guess it ought to be soon. Thanksgiving is soon.\"\n\n\"She needs to know.\" Kate said. \"I'd be really upset if you showed up with two extra guests!\"\n\n\"But, if it's Ok, you're both willing?\"\n\n\"Yeah, I'd like to meet your sister.\" Kate said. Pat nodded. I got out my cell phone and made the call. My brother in law, Mark answered. As soon as he knew it was me he called for my sister. \"Honey, it's the Air Force calling with an excuse.\" A few seconds later Alison came on.\n\n\"What excuse?\"\n\n\"No excuse. A question. Would it be Ok if I didn't come alone?\"\n\n\"You've met someone?\" There were volumes packed into that seemingly simple question. I'd give her a seemingly simple answer.\n\n\"Yes. Matter of fact, I've met two wonderful women and I'd like to bring both of them.\"\n\n\"Where are they?\"\n\n\"Right here with me in the motor home.\"\n\n\"You're serious? You've been single and unattached for almost thirty years, you get retired and now you have two women?\"\n\n\"That about sums it up. Yes. So, are we invited?\"\n\n\"Yes. Yes! What are their names?\"\n\n\"Kate and Pat.\"\n\n\"What do they look like? How old are they? How long have you known them?\"\n\n\"I'm not answering that first question. I don't actually know the answer to the second question. Let's just say their both in the right age group. I've known Kate more than a week, Pat for two days.\"\n\n\"A week! Two days! And they moved in? Did you meet them at a bus stop?\"\n\n\"No. Kate's brother introduced us. He's a sheriff. Pat's husband, ex-husband, introduced us at a picnic.\"\n\n\"There's a long story hidden in there. Where are you now?\"\n\n\"You know that storm you had yesterday? We are in it today. We're at the eastern edge of Utah.\"\n\n\"That's less than nine hundred miles from here.\"\n\n\"I was thinking it was about nine hundred.\"\n\n\"As soon as the weather breaks, get your butt in motion! Mark has a job waiting for you. The local airport needs a techie. He says the job is yours if you want it.\"\n\nMy mind started weighing possibilities. Options. I said, \"Ok. The radio said the storm should get past us before dark today. We'll head to Idaho Falls, then west tomorrow. We should be there in four days max.\"\n\n\"You really have two women?\" Alison asked, again.\n\nI handed the phone to Pat. \"Introduce yourself to my sister, Alison.\"\n\n\"Hi. I'm Pat.\" She passed the phone to Kate. \"Hi, I'm Kate. We can both cook and we'll help with dinner.\"\n\nI took the phone back and said, \"Now, do you believe me?\"\n\n\"Amazing! Simply amazing!\" She said. I hit the button and she was gone.\n\nI recounted the conversation and answered their questions as best I could. They got busy and got the ham into our tiny oven. They had to cut it in half so it would fit. They cooked it half at a time. Kate used tape and mounted a map of our route to Gresham, Oregon to the wall of our dining room. \n\nWhen I looked outside at 1620 hours the snow had stopped. The wind slowed and there was less than a foot of snow on the picnic table.\n\nThe first ham was sliced and put in plastic so we had fixings for sandwiches and omelets. When the second ham came out we had dinner for the evening. They also made cornbread and more veggies.\n\nOver dinner and afterwards Kate and Pat talked, mostly about their experiences with relationships. Kate was curious about swinging and what else Pat had tried. I listened, occasionally asking questions.\n\nPat talked about how the swinging incident had been fun, recreational and hadn't been something she was interested in continuing. She told us that what interested her when Scott had wanted to try swapping was finding someone who would take her away from Scott. For that reason she would have continued to go with Scott to swinger events.\n\nI asked if she was at all jealous of Scott being with someone other than her.\n\n\"I thought I would be. When we got to Las Vegas and I started meeting people I was looking at other women like they were competition. After a couple hours I was sitting in the orientation seminar and realized that if Scott was screwing someone else, he wouldn't be screwing me. He had never taken very good care of me, in the bedroom or anywhere else. His idea of foreplay was to take a shower and shave that day.\"\n\n\"What about when you saw him walking another woman out of the room?\" Kate asked.\n\n\"I remember thinking, 'Oh good. He'll be busy for a while.' Then I decided to go with the man from room 2218.\"\n\n\"What do you think about Nick?\" Kate asked. I was a little surprised at the abrupt change in topic.\n\n\"He's different. He doesn't act like most men I've known. He's seen me nude. He's slept with both of us nude. He's had a hard on in the morning and didn't shove it in either of us. I wondered if he was gay until I noticed he got hard pretty quickly when we were getting ready for bed and he saw my tits and again when you guys opened the door and I was making breakfast, nude.\"\n\nI stayed quiet. Kate asked, \"I was surprised by the way he acts, too. I thought the first night we were in the RV I'd have to fuck him or be standing at the side of the road.\"\n\n\"Did you do him that night?\" Pat asked.\n\n\"No. He helped change my bandages, convinced me to stop wearing a bra but didn't make a move on me. I thought he must be gay. He's not.\"\n\n\"I'm not pushy. I am heterosexual.\" I said.\n\n\"Is he ever! When I convinced him it wouldn't hurt very much he spent hours on foreplay and brought me the best orgasms of my life! I don't know where he learned to be a lover, and to be honest I really don't care, but I am grateful.\"\n\n\"I think I know what was missing with Scott and missing in room 2218. It was connection. Scott married me because he wanted to say he was married, but he never acted like I was a prize, someone he treasured in any way. I think it was a business-like arrangement. He would pay the bills. I would do the laundry, cook, keep the house clean and make sure he had beer. Oh, and share my pussy with him.\"\n\n\"Nick started by taking care of me. My brother was impressed that he took me on without asking how much money was involved or what I looked like. I think he would have done it just because it was the right thing to do.\" Kate said.\n\n\"I didn't bring much money and he's never asked how much. It isn't about money. He's just a good man who does the right thing.\"\n\n\"When we met you and Scott at the picnic I watched you both and I watched Nick. He didn't hesitate. He got up and helped you immediately. Then, he found a way to get rid of the rest of the beer when he saw how Scott was trying to drown in it.\"\n\n\"I'd wanted to leave Scott for quite a while. Seeing the two of you, on the road and making a new life for yourselves gave me the push. I wanted to talk to you before you left.\"\n\n\"Bob and Nick talked after the picnic and Bob was to figure out how to get you to the farm. Nick wanted to offer you the escape. I knew then that he cared for me and he was big enough to care for you too.\"\n\n\"Ladies, please stop. I love everything your saying, but I think any good man would do what I did.\"\n\n\"They didn't. You did.\" Kate said. \"Do you know, he had a fishing boat and lots of gear?\" Pat shook her head. \"He sold it all, to make it harder for Jack to follow us. He sold his boat to protect a woman he'd known two days!\"\n\n\"You did that?\" Pat asked. I nodded.\n\n\"Then he sold his RV and bought this one, to make room for you.\"\n\nPat stood and moved to where I was sitting. She sat in my lap. Her arms wrapped around me and she asked, \"So, when are you going to make love to me?\" She asked in a sexy voice.\n\nKate started to laugh. Pat turned and asked, \"What's so funny?\"\n\n\"He doesn't make love. He doesn't fuck either. He explained it to me. Fucking is what animals do, a cock going into a vagina. You can't make love. It's there, or it isn't. Putting a cock inside you won't make any love that wasn't already there.\"\n\n\"I don't like saying, will you have coitus with me?\"\n\n\"So, ask him if he'll join with you.\"\n\n\"Oh. I like that. Nick, when are we going to join?\"\n\nI hesitated, thinking about the proper way to respond. \"Right now!\" didn't seem appropriate. \"We'll join when it's the right thing for all three of us. When there were two people living together we didn't join until it was right for both of us. Now, there are three of us. We will join when it's the right thing for all three of us.\" I said. A large percentage of my emotional mind still wanted the answer to be, \"Right now!\"\n\nPat looked at Kate and back at me. \"You want to join with me?\"\n\nI nodded. \"Yes! Of course.\"\n\nKate asked, \"And with me?\"\n\n\"Yes, of course.\"\n\n\"Then?\" Pat asked.\n\n\"Then how will you be if I take Pat in the bedroom and join with her?\" I asked Kate.\n\n\"Uncomfortable.\"\n\n\"And how will you feel if I take Kate in the bedroom and join with her?\" I asked Pat.\n\n\"I see what you're saying. When I want you to join with Kate and Kate wants you to join with me, it will happen. Until then, you won't go there.\"\n\n\"Right.\"\n\nAll three of us jumped when there was a knock on our door. I opened the door and a sheriff said, \"Just wanted you to know, I-15 north is being plowed right now. If you want to go that way, you should probably go now. They're talking about another storm tomorrow.\"\n\nAs I thanked him Kate and Pat were already getting ready to be on the road again. In fifteen minutes I had unplugged, unhooked, cleared our windows and warmed the engine. One minute after that I joined a line of vehicles following the plow.\n\nThree pair of eyes watched the road and the other vehicles as we made our way north. It was nearing dawn when we saw the sign announcing our arrival into Idaho Falls, Idaho. We found a Wal-Mart, parked, closed the curtains and went to bed. We were all beat.\n\nIt was nearing sunset when we woke up. I moved us closer to the doors of Wal-Mart and we went shopping. We bought groceries and I made sure we got two new blankets. Near the Wal-Mart we saw three restaurants. I suggested we go \"out for dinner.\" Kate laughed. \"We've been out for a week! Let's go in for dinner. In a restaurant.\" \n\nWe stashed our new purchases in our home and drove to an Outback Steakhouse. Food we wouldn't make for ourselves, and plenty of it. We enjoyed a great meal in spacious surroundings. The snow was gone. I overheard the people at the table near ours talking about a movie being shown at their church. I had seen the movie in Texas, about a year before. I asked them if you had to be a member of the church to attend the movie. They said, \"No, anyone can attend. It's a fund raiser for the Boy Scouts.\" \n\nWe followed them to the church building and we went to a movie. It was a fund raiser for their Boy Scout Troop. No admission price, just a donation. The young scout taking the donations told Pat most people gave two dollars each. I said there were three of us and I gave him a twenty.\n\nHe got flustered and said it would take him a minute to get my change. I said, \"The Boy Scouts need it more than I do. Keep the whole twenty.\" \n\nHe thanked me twice and had another scout take us to our seats. No sooner did we sit down than another scout gave each of us a bag of popcorn and a can of Sprite. The movie was cute. Neither Kate or Pat had seen it before. The room was filled with families. Lots of children. When the movie was over everyone was invited to stay for a few moments while a man said a prayer. Then everyone gathered their things and headed home. \n\nOutside, we were approached by the man who said the prayer. He asked where we were parking for the night. I said we'd probably go back to Wal-Mart. He offered us the use of the church parking lot. We accepted. He bid us a pleasant evening and five minutes later the parking lot was empty and we were alone.\n\nThe lot was big enough to fit three hundred or so cars. We parked the RV so it was protected from the wind and so the early morning sun would wake us.\n\nKate and Pat made sure everything was stowed properly while I did my nighttime ritual. This time I left the towel in the bathroom and took the four step walk to the bed naked.\n\nEven though I had slept that afternoon I was asleep in seconds. When Kate and Pat came to bed I molded to the nearest one and didn't actually wake up.\n\nAs the sun peeked over the nearby mountains it invaded our bedroom and flooded it with light. I looked at the digital clock and saw it was 0638. Then I looked and saw that it wasn't Kate next to me, it was Pat. She rolled and faced me. She kissed me and not a quick peck. Her kiss was an invitation for more, much more.\n\nWhen the kiss ended she said, \"Kate, I want you to join with Nick.\"\n\nI heard Kate say, \"Pat, I want you to join with Nick.\"\n\nPat kissed me again and said, \"Nick, Sweetheart, would you join with us?\"\n\n\"It will be my pleasure.\" As our lips met again I heard Kate say, \"Let the kissing begin.\" I expected her to leave the bed. She didn't. I expected her to give us some illusion of privacy. She didn't. She turned and faced us. When I kissed the side of Pat's neck away from Kate, she kissed the side near her. Pat turned her head and they kissed, mouth to mouth.\n\nI moved down so my mouth, my lips, were at breast level and I found not only Pat's breasts, but Kate's as well. My hand caressed Kate's breast as my mouth ministered to Pat's wonderful chest. Pat's nipple swoll as I sucked on it. She moaned, not just because of what I was doing but what Kate was doing as well.\n\nWhen my hand slid between her legs to her treasure I found other fingers already there. We shared. Pat moved to open to both of us and we accepted the invitation. I moved farther down Pat's torso and Kate whispered, \"You'll love this!\"\n\nPat was freshly shaved. When I had seen her nude the first time she had a full bush of milk chocolate brown hair. At my approach I was aware of the lingering odor of baby oil mixed with the fragrance of arousal. When my face made contact she was as smooth as if she had never grown hair. No stubble. \n\nMy tongue slid along the cleft of her swollen lips and she responded by lifting her lips to meet me. Her knees parted farther and my tongue slid deeper into her.\n\nWhen I looked across her belly towards her chest and face I saw Kate holding Pat's breast in her hand and her mouth latched onto the other breast. Pat was being pushed toward an orgasmic sensory overload by both of us.\n\nIn our short past, when Kate approached an orgasm, her belly quivered. I looked for some sign like that from Pat. It didn't happen. She went from not showing signs of an approaching orgasm to having it. Her back suddenly arched. She took a huge breath and let it out as a low growl. Her vaginal muscles spasmed and the juices flowed into my mouth. Her thighs clamped on the sides of my head.\n\nKate backed away a few inches. I lifted my face from Pat's treasure. When she had taken a couple of breaths I moved up and my cock found her opening without thought. Kate watched as I slid into Pat.\n\nPat's eyes opened. She growled again and said, \"I love how this feels. You are the best lovers I've ever had.\"\n\nWhen I was inside her as deeply as I fit she lifted her legs and changed the angle of my entry. I lowered my face to hers and we kissed. Her tongue pushed into my mouth and danced with my tongue. I was thrusting slowly, wanting this experience to last. A hand grasped my balls and gently squeezed. It had to be Kate's hand. All thoughts of having the experience last evaporated. I felt the rush to completion and knew I was no longer able or willing to stop.",
        "\"Give it all to me!\" Pat said. I did. Kate squeezed my nuts as they pulsed my load into Pat. I saw stars!\n\nThey rolled me onto my side, between them. Kate moved and captured my cock in her mouth, humming. Her tongue cleaned me and stimulated my shaft as an exquisite torture. Pat kissed my face.\n\nWhen Pat's kiss ended she said, \"I love the taste of my own pussy.\"\n\n\"I love it, too.\" I said. We kissed again and I said, \"Pat, I love you.\"\n\nMy hands helped Kate up along side us and I kissed her. As that kiss ended I said, \"Kate, I love you.\" \n\nShe said, \"I love you, too.\" We stayed together. We shared more kisses.\n\nSometime later I began to laugh. Both women looked at me like I had come unglued. I paused and said, \"Look at the time!\"\n\nThey looked. It was after nine in the morning. \n\n\"When I parked the RV last night I parked so the sun would get us up early. I wanted to get us on the road. Now it's after nine, we haven't even had breakfast!\"\n\nPat made a face and said, \"He regrets having joined with us. He'd rather have been driving.\"\n\nI reached over and dropped the clock in a drawer. Then I rolled again, just a little and was face to breast with Pat. I kissed the wonderful protuberance before me and let my hand explore her hip.\n\nKate began to laugh. \"Next time he stops will be for food.\"\n\nPat asked, \"Kate, Honey, would you get me the peanut butter? Maybe if I spread it on my nipples he'd skip lunch.\" They both laughed. I kept kissing her breast. Kate lifted my hand from Pat's hip and put it directly on her own pussy.\n\nAs my finger insinuated itself between her lips she moaned, opened her legs a little wider and moved closer to Pat's back. Pat used her hands to lift my face to hers and we kissed. She slowly rolled me onto my back and herself on top of me. Somehow I kept my fingers in the honey pot of Kate.\n\nPat impaled herself on me and slowly rode me. She looked over and Kate and watched as Kate was stimulated too. She pinched Kate's breast. I reached up with my free hand and pinched Pat's breast.\n\nThe sounds of mating filled the small bedroom. Each of us was enjoying the sensations we were getting and those we were giving. I could feel an orgasm off in the distance for all three of us, but no urgency to get there soon.\n\nPat said, \"Switch with me, Kate.\" She lifted off my cock and moved up and over Kate. Kate's eyes opened and she moved to take Pat's place on top of me. When she settled down on me we kissed. As we kissed Pat put my fingers right where she wanted them, in her very wet puss.\n\nBeing inside Kate was different than being inside Pat. Not tighter, not wetter, just somehow different. After a minute I realized the difference was in how they moved. Kate moved up and down and so did Pat, however Pat rotated her hips clockwise while Kate moved counterclockwise. The friction inside their canal was somehow different. I could feel Kate rapidly approaching an orgasm. The muscles inside her were flexing, squeezing and releasing, my cock. Meanwhile Pat had moved again and was riding my hand, moaning and rocking the bed in sync with what Kate was doing.\n\n\"I'm going to cum!\" I said.\n\nBoth women said, \"Cum for me!\" and I did. Kate sat down hard, burying me completely inside her, rotating her hips counterclockwise as she came too. Pat bent over and kissed me, holding my hand against her spread pussy as she came a few seconds later.\n\nTime passed. We came down from the highs we had attained and Pat moved first. She said, \"Now, I'll start breakfast.\" Kate and I both grabbed her and pulled her back to us.\n\nI said, \"Stay right here. This is too delicious to just end. As long as we get on the road by noon we're fine.\"\n\nSo, we spent a while snuggled together, touching, kissing and enjoying being together.\n\nKate asked, \"Ten days ago would you have believed you'd be in Idaho, naked in bed with two women and love them both?\"\n\nI said, \"No. The day I met your brother I was still a Master Sergeant trying to be a fisherman, thinking about being a monk. I hadn't even been friends with a woman in months.\"\n\nPat said, \"A week ago I thought I was stuck with Scott for the rest of my life. Then, these two strangers showed up and I saw the light. I got up the nerve to run away from being miserable. I certainly didn't think I'd end up here.\"\n\n\"Do either of you know where we are?\" I asked.\n\n\"We're parked in a church parking lot somewhere in Idaho.\" Pat said.\n\n\"What church?\" I asked.\n\nPat sat up and asked, \"Mormon?\" I nodded.\n\nPat laughed. Kate asked, \"Does that mean something?\"\n\nPat answered, \"Mormon's believe in polygamy.\"\n\n\"What's that?\"\n\n\"In the days when the church began there were lots more women in the church than men. So, the church had men marry more than one wife. Some men had twenty wives.\" I said.\n\n\"They don't still do that, do they?\" Kate asked.\n\n\"Nope. The church outlawed the practice back in the eighteen hundreds. There are some other sects that still practice it, but not the Mormons.\" I said.\n\nShe smiled. \"It's fitting that we play in their back yard. We may not believe all of what they believe, but we do believe three people can love each other.\"\n\nPat thought about it, then said, \"Let's get moving. The missionaries will be here soon.\"\n\nWe got up. I stripped the bed. Pat went into the shower, followed by Kate. As Pat dressed, Kate started breakfast and I showered. Pat finished making breakfast, I remade the bed, Kate dressed. It didn't take long before the three of us were dressed, sitting at the table eating breakfast.\n\nThe ladies cleaned up breakfast and I got the RV ready to roll.\n\nJust before I sat in the driver's seat I turned the digital clock again and saw that it was 1143. We were on the road by noon.\n\nWe had a late lunch in Boise and aimed the RV at Pendleton Oregon. Because of the weather and me being cautious we took five hours to go the two hundred thirty miles. We talked, snacked, sang along with the radio and listened to the weather reports. The heater kept us warm and the big windows let us see the beautiful countryside we drove through. I had a great ham sandwich.\n\nIn Pendleton we found the Arrowhead truck stop and stopped. We were given a parking spot between big trucks. They sheltered us from whatever wind there might have been and I was pretty sure the sun wouldn't wake us. \n\nAs Kate and Pat made dinner I called my sister. She answered and her first question was, \"Where are you?\"\n\n\"Pendleton. We might be at your place late tomorrow. Day after at the latest.\"\n\nIn the background I heard Mark say, \"Ask him!\"\n\n\"Ask me what?\" I asked.\n\n\"Do you want the job at the airport?\"\n\nI paused. Did I? \"I'll have to call you back. Give me an hour. We need to talk.\"\n\n\"How are we going to talk if you hang up?\" Alison asked.\n\n\"Not you and me. Pat, Kate and me.\" I folded the phone and both of them turned to face me.\n\n\"Mark has a job waiting for me at the airport, if I want it. It means we park and become normal people. We can turn it down and keep moving for months. I've got a pension and we won't starve. I need your input on this. Our US needs your voices.\"\n\nKate said, \"Remember the house the Logans live in?\"\n\nI nodded and so did Pat.\n\n\"I've dreamed of a house like that since I was a little girl. Don't get me wrong, I've loved the adventure of the RV and getting to see so many places I've never seen before, but...\"\n\n\"But, we want a home.\" Pat said.\n\nI opened the phone and called Alison. I didn't even hear it ring before I heard, \"Hello.\"\n\n\"Do you know a real estate agent?\" I asked.\n\n\"I do. She lives next door. Does that mean you'll take the job?\"\n\n\"Probably. We'll still need to talk money and benefits, but probably. Think your neighbor would talk to me over the phone this evening?\"\n\nI heard her tell Mark I wanted the job. She told me she would ask her neighbor to call me. I asked her to wait an hour to call so we could have dinner. I had watched the table being set and the ladies waiting for me. It was time to eat.\n\nBefore I ate I made a call to Nebraska. Bob answered. I said I called to report that we were fine and needed a gift from him. He wanted to know what I needed. I watched Kate's face as I said, \"I need a picture of your house.\" Kate's face broke into a huge grin and Bob said, \"Sure.\"\n\nHe said he would email me the picture right after we got off the phone. He and Marie wanted to know what had happened and without giving all the details I told them that for the foreseeable future we would stay together, probably in Oregon. Marie wanted to speak to Pat and they did. As soon as they were done we finished eating.\n\nIt was my turn to wash dishes, but no sooner were we done eating than the phone rang. I answered and the ladies took care of a quiet clean up. I spoke to Angie, the realtor and she said she had three places for us to look at as soon as we could get there. I got her email address and told her I'd send her a picture of the kind of house we were interested in.\n\nI told her it needed at least three bedrooms, two baths, a back yard that was private and pretty good sized. She told us she would call us back in the morning.\n\nKate came to me as soon as the phone was hung up and said, \"I'm going into the truck stop. I want to look around, maybe buy a couple little things and get some fresh air. While I'm gone I want you to do me a favor.\"\n\n\"What?\"\n\n\"Take Pat to bed. Join with her. If I come back and there's a light on, I'll know it's Ok for me to come in.\" She kissed me with passion and kissed Pat, then she left. \n\nPat asked, \"Is this Ok with you?\"\n\nI stood and dropped my pants down around my ankles, making my erection obvious.\n\nShe said, \"I take that as a yes.\" And she pulled her shirt off. Seconds later we unmade the bed. We kissed, belly to belly and when the kiss ended she said, \"Any way you'd like. This time is all about you. I'm not a virgin, or even a novice. I want to please you.\"\n\n\"Get a pair of panties and a pillow.\"\n\n\"Panties?\"\n\n\"Panties. Not a thong. Actual panties.\" A second later I added, \"Kate's panties.\"\n\nShe looked at me a grinned, \"You're a little kinky!\"\n\n\"Sometime I might get really kinky.\" I waved my hand at her and she scampered to the storage bin where they kept such items. She came back with a green pair. I took them from her and put them on the built-in nightstand.\n\nPat climbed onto the bed and put her body on her back with her legs slightly spread. Her head was on the pillow I had been using as mine. I moved her head onto the pillow in the middle, putting \"my\" pillow under her hips.\n\nI positioned myself between her legs with my face inches from her pussy. My hands held her hips.\n\nI asked, \"You know how people ask you to rate things on a scale of one to ten?\"\n\n\"Yes?\"\n\n\"With one being I'd rather have a sandwich and ten being a screaming orgasm, where are you right now?\"\n\n\"Six!\"\n\n\"Good. When you get to eight, stuff the panties in your mouth! Use Kate's pillow if you want to further stifle the scream. I want to hear the scream, but Kate doesn't need to.\"\n\nMy mouth opened and closed the distance to her tender tissues. My tongue inserted into her opening and she moaned. I didn't hurry. In my mind I sang the words I could remember from an old song about, \"I want a man with slow hands...\" I altered the words to slow tongue, slow lips, and kept varying the way and the where I touched her.\n\n\"Eight!\" Pat said. I opened my eyes and watched the panties disappear into Pat's mouth. My hands cupped her breasts and I heard a muffled \"Nine!\"\n\nMy tongue gently circled her clit, as slowly as I could. Her hips lifted, thrusting her puss against my face. When she picked up the pillow to cover her face I sucked on her clit and pinched her areola!\n\nThe scream started deep inside her chest and grew in intensity until I was sure that without the panties and pillow we would have had a visit from the police. Her hips bucked, her legs clamped on my head, her back arched and her hands pressed the pillow down on her face.\n\nAs soon as the scream stopped so she could take a breath I released my lip lock on her clit and moved up, aligning my cock with her wide open pussy. I pushed to the bottom in a single stroke.\n\nPat started another scream. She thrust up to meet me, slamming me deep inside and in seconds I was pounding into her spasming cunt. Over and over, faster and faster, we joined and shared our bodily fluids. Sweat and cum, pussy lube and Cowper's juice mixed with cum from both of us.\n\nWhen I came she tossed the pillow aside and held me in place when I started to roll to the side. Ever so slowly she pulled the panties, the wet green panties out of her mouth.\n\n\"Thank you.\" She whispered. We kissed. We were quiet for a while and she said, \"I said this was for you.\"\n\n\"Do you think I didn't get just what I wanted? You think maybe I'm disappointed?\"\n\n\"No, but...\"\n\n\"But nothing! I love the power and the taste and the smell and the feel of taking you there. When you masturbate, use a vibrator or when someone fucks you, is it as powerful for you as what we just shared?\"\n\n\"God, no.\" She kissed me.\n\n\"I love everything we just did. Women who don't trust the man they're with don't get to go there.\"\n\nMoments later she let me roll to one side and she turned on a bedside light. Very soon after that the door opened and Kate came inside. She closed and locked the door.\n\n\"Smells like sex in here!\" She said, grinning.\n\nPat responded, \"I wonder why?\"\n\n\"Probably had something to do with the screaming I heard.\"\n\n\"I tried to muffle it!\" Pat said, holding up the wet green panties.\n\n\"Hey! I was going to wear those next week!\" Kate said.\n\n\"We'll wash at Nick's sister's house. Then you can still wear them.\"\n\n\"I understand the gag, but why my panties?\"\n\n\"Nick's kinky. He asked me to use them.\"\n\nKate looked at me and asked, \"What other kinks do you have?\"\n\n\"Peanut butter and honey. I want to lick them out of you. I want to shave your bodies completely.\"\n\n\"I already shave.\" Kate said.\n\n\"You shave. I want to do it.\"\n\nThey both said, \"Oh.\"\n\nPat and I got up, cleaned up and the three of us went back to bed. Pat had the middle. Kate spooned against Pat's butt, Pat against mine and Pat's hand draped over my hip and gently held my limp penis.\n\nMy eyes popped open at 0615. The first thing they saw was the clock. The reason I woke was that the truck on either side of us started their engines together at that moment. Our RV shuddered from the vibration. We were up.\n\nPat climbed over me, using my morning hard on as a hand hold. She kissed me and disappeared into the bathroom. Kate kissed me good morning and asked what I wanted for breakfast. \"Eggs and toast...\"\n\n\"And strong coffee!\" Kate said.\n\n\"That would be nice.\"\n\n\"Pat told me my coffee was for children.\"\n\n\"I wouldn't say that. I might say the way to make it better would be to add a bit more coffee in your coffee.\"\n\n\"Ok. Pat gave me the whole lecture. I'll make strong coffee. You and Pat will love it. I may add milk to mine.\"\n\n\"Pussy!\"\n\nShe looked down and said, \"Right here, at your desire.\"\n\n\"Maybe at lunch. Let's get on the road right now. Ok?\"\n\n\"Ok!\" We got up, made the bed and Pat came out of the bathroom. She dressed and started breakfast. Kate used the bathroom and I dressed. When I was dressed Pat kissed me again. A full contact Thank You kiss full of promises.\n\nKate came out and I went in. When I came out breakfast was on the table and the two big trucks were gone. We ate, cleaned up and were in the road west by 0800.\n\nI-84 runs alongside the Columbia River. By the time we got to Hood River I was glad we had filled up in Pendleton. The canyon the river has cut is called the Columbia River Gorge. There is an almost constant wind the flows from west to east in the gorge. Trees that grow in the gorge only have branches and leaves on the eastern side. Our miles-per-gallon was not good driving into a headwind. We filled up again in Hood River.\n\nIn Troutdale we saw another big truck stop. I pulled in and stopped. We were fifteen or twenty minutes from Alison's. I hauled out the cell phone and noticed I had shut it off the night before.\n\nI turned it on and as soon as it went through it's boot, it rang. I answered, \"Good Morning!\"\n\n\"You shut your phone off last night!\" Alison said. There was frustration in her voice.\n\n\"We had things to do. I'm sorry.\"\n\n\"Where are you?\"\n\n\"We took a wrong turn, I think. The sign we just passed says Idaho.\"\n\n\"It better not!\"\n\nI laughed and said, \"We're at the truck stop in Troutdale. I'll input your address into the GPS and we'll be there for lunch.\"\n\n\"Don't move!\" The phone went dead.\n\nTwo minutes passed and it rang again. It was Mark. \"What does your RV look like?\" I told him and suddenly there was a knock on our door. Kate and Pat jumped a foot. I had seen Mark getting out of his truck beside the RV.\n\n\"Open the door, please, Kate.\"\n\nShe opened the door and Mark climbed in, saying, \"Hi, I'm Alison's husband. I'm here to lead you home.\" I hung up the cell. Introductions were made and he said, \"Nick, I never believed you'd have a woman in your life. For a while I even thought you might be gay. You did good!\"\n\nKate said, \"I thought he might be gay, too. Trust me, he's not gay.\"\n\nPat said, \"Trust me, too.\" Mark shook his head and climbed out of the RV. Kate said, \"Nick, can I ride with Mark?\"\n\n\"That's up to him.\" She flew out the door and he almost ran over her. She asked and he smiled. She got in and we followed them. Fifteen minutes later we parked in front of Mark and Alison's home. I knew it was the right house; Alison was standing in the front yard.\n\nStanding with her was a woman carrying a briefcase. Pat said, \"I think that's the realtor.\"\n\n\"You think?\"\n\nWe got out and Pat was right. Over lunch we looked at pictures and descriptions of homes. Alison kept flitting around like she knew a secret. Spread on the table were descriptions of four houses. Good sized, right number of bedrooms, nice yards, but something wasn't clicking. I watched Kate and Pat. \n\nSuddenly it hit me: They were trying to make one of those houses acceptable. Kate had tried to make Jack acceptable. Pat had accepted Scott as the best she could do.\n\nI gathered all the pictures, floor plans, data sheets and things together and handed them to Angie. \"You saw the picture? Until you can show us that house, we'll rent an apartment.\"\n\nAlison said, \"I knew it! I told you!\"\n\nAngie opened the briefcase and pulled out a packet of papers. On the top was the picture we had the Logan's email. Then I noticed something. The house in the picture had two apple trees in the yard and no blue-gray trim.\n\nAngie handed Kate the packet. \"I found this house last night. It's a bit out of town, on a good piece of land.\" Then, being smart she shut up. I watched Kate. She was in love. Pat said, \"Let me see!\"\n\nKate pulled the top photo off the stack of papers and passed it to Pat. Pat looked at it. She examined it and then she asked questions. \"How many bedrooms?\"\n\nKate had the data sheet. \"Four. Three thousand square feet, not counting a barn and a workshop. Three baths, a full basement.\"\n\nPat's eyes had never left the photo. \"How much?\"\n\nAngie answered, \"They're asking six seventy-five. However, it's been for sale a year. I think you can get it for substantially less.\"\n\nI asked, \"Can I see it?\"\n\nKate and Pat instantly extended the papers towards me. I didn't take them. I asked, \"Angie, can I see the house?\"\n\nAlison said, \"I told you! I knew he'd be just like this!\"\n\nAngie said, \"At Alison's recommendation I set a showing for four o'clock this afternoon. I set another one for tomorrow, not knowing exactly when you'd be here.\"\n\n\"Angie, I don't know if I can be ready by four. I need to give Kate and Pat drugs and have them calmed down before they see the house. In their present condition the house will cost us thousands extra!\"",
        "Angie, Mark and Alison laughed. Kate and Pat blushed. Kate said, \"I can calm down!\"\n\n\"I know you can. I know Pat can. The question is will you?\"\n\n\"You will think we don't want the house!\" Pat said. \"It's too far out in the country.\"\n\nKate added, \"It costs too much!\"\n\n\"The kitchen is too old fashioned.\" Pat added.\n\n\"Ok.\" Angie said, \"We get the idea. By the way, which of you is Nick's wife?\"\n\nPat pointed at Kate as Kate pointed at Pat. Angie's mouth dropped open. Seconds passed. I said, \"Neither. I'm not officially married.\"\n\n\"But, you'll share the house?\"\n\nI nodded. \"Not one of us can afford it on our own. So, we share. Is that a problem?\"\n\n\"Not really. We just put the title in all three names. I can take care of that for you.\"\n\nBecause Angie hung with us until time to go the conversation was about the job at the airport, the weather, nearby shopping, and the price of cars and trucks. One at a time Alison found a way to get Kate and Pat into the kitchen. When they came back they were smiling, so I assumed their talks went well.\n\nAt 1530 we got into Angie's Suburban and she took us to the house. When we got our first glimpse Kate asked, \"Can I say something?\"\n\nI said, \"Sure.\"\n\n\"Oh, Wow!\" was all she said. I didn't say anything. I agreed.\n\nAngie introduced us to the couple who owned the property. They sat out on the porch while Angie led us on the tour. Kate took a note pad out of her purse and gave half to Pat. They passed notes, mostly to each other but some to me.\n\nMark sat on the porch and talked with the couple.\n\nA little more than an hour later we were back in the Suburban. Mark spoke up. \"There's something we can do here. It's unorthodox but I think it's the right thing.\"\n\nAlison asked, \"What?\"\n\n\"Mr. Thomas is eighty. His wife is seventy-eight. They have no living kids or grand kids. They need to sell the house to afford to move into a care facility. What if you buy the place for whatever it costs to take care of them for the rest of their lives?\"\n\nKate asked, \"How much does that cost?\"\n\nMark answered, \"The place they want to move into costs four thousand a month for both of them.\"\n\nAngie said, \"Even if you paid them full price the loan wouldn't be four thousand a month.\"\n\nPat asked, \"How is their health?\"\n\nMark answered, \"John had a heart attack four years ago. Last year he needed a bypass. I got the feeling something's up with Martha but she is hiding it from John.\"\n\n\"What about the house?\" Alison asked.\n\n\"They've done a great job of updating it and keeping it up.\" I said.\n\n\"I'm trying to remain calm.\" Kate said, \"But, it's hard. The house is...\"\n\n\"Perfect!\" Pat added.\n\n\"So the real questions are about how we buy it, not if?\" I asked.\n\nKate and Pat nodded. I opened the door and said, \"Let me talk to them. I'll be right back.\" I got out of the Suburban and walked to the porch. John and Martha watched me, but didn't get up.\n\nI sat on the railing and said, \"We're going to make you an offer on your place. It might take us a couple of days to get things together and we will. We will do whatever we can to have the offer be fair for both of us.\"\n\nJohn said, \"Thanks. We'll be right here when you're ready.\" He got out of his rocker and shook my hand. I left them and got back into the Suburban. Angie drove us back to Alison's.\n\nAngie and I talked about loans, payments, interest rates and the like as we drove. Kate, Alison and Pat talked about the house, the garden and colors. Mark stayed quiet.\n\nAt Mark and Alison's we went inside and I asked for writing paper and we sat at the kitchen table. Angie went home, saying, \"If you need me, I'm just a holler away.\"\n\nTwo hours later we were ready. We had talked enough. Our decisions were made. On Monday I would call the Federal Credit Union I had belonged to for twenty-two years and ask for a loan. Pat and Kate had agreed to get jobs and help us afford our new home. Also on Monday, I would meet with the people at the airport and work out the details for me taking the job. As soon as those details were worked out we would make an offer on the house.\n\nThe rest of the weekend was spent learning the area, driving around looking things over and talking with Mark and Alison about everything that came to mind. I read the papers on the house until I had almost memorized them. Sunday night the ladies planned Thanksgiving. It was two weeks away.\n\nMonday morning I was up, dressed and fed by six-thirty. I rode to work with Mark, who worked in Operations at the airport. I met with two different groups of people and then sat in the food court for an hour while they met. At 1055 they came to me with a written offer. All the benefits I asked for and more money than I expected. I signed the offer at 1100 hours and was told I started work the next day. Mark met with me and gave me more good news. While I was interviewing he had spoken to friends he had at the airport and had found jobs for both Kate and Pat. They would be working for the rental car agencies. He had Alison drive them to the airport and they had already filled out the applications. They would start training the next day.\n\nAt noon I called the credit union. By 1300 faxes and emails were flying between Angie and the credit union. \n\nAt 1545 on Tuesday I got a call on my cell letting me know we were approved for the loan. I called Angie and we made an appointment to go to the house and make the offer.\n\nMark and I found Kate and Pat at the rental agency and asked if they wanted to go to the house to be there when the offer was made. I was not surprised when they said, \"Yes!\"\n\nI rented a car and was given a special discount. We left Mark at work and went back to Alison's. She and Angie were ready to go make the offer. We went together. When we arrived it was as if John and Martha hadn't moved since we were there before. They were on the porch, in their rockers. They smiled when we arrived. Next to them on the porch were two other people. One was their realtor and the other we found out was Sue, from the assisted living center. We all went inside and when we were all seated I said, \"We want to make two offers. Please listen to both offers, ask any questions you may have and then you can have up to forty-eight hours to decide what to do.\"\n\nJohn said, \"Ok. Offer number one.\"\n\n\"We can do this like most home sales. We will offer you Five hundred seventy-five thousand for the house and land. The two realtors will each get their percentage. Add taxes, fees and miscellaneous BS and you will be left with about half a million. You will have the money in about sixty days.\"\n\nJohn nodded and said, \"Offer number two.\"\n\n\"Kate, Pat and I will write a check to the two realtors for their commissions, just as if we paid five seventy-five for the house. They will handle all the paperwork just as they would normally. We will pay the taxes, fees and miscellaneous BS. You will get one dollar in cash, each. Pat, Kate and I will sign a contract with the Assisted Living Center to pay for your care each month for the rest of your lives. We will place five hundred thousand dollars in a special account to make the payments. In the event of your deaths, whatever is left in the account reverts to us.\"\n\nFor the first time I heard Martha speak. \"We're making a bet. You bet we won't live long enough to get use up all the money. On the other hand, we're betting we die before the money runs out. Either way it's a good deal. John, which bet do you like?\" \n\n\"I like the second plan. They must take care of you after I'm gone. If we take that plan I can rest easy. I did my job. I've taken care of us for almost sixty years and I'll know I've made sure you were Ok after I'm gone. I say we take the second plan.\"\n\nIt took another five days to finalize everything. John and Martha moved into the Assisted Living Center. We moved into the house. We invited John and Martha for Thanksgiving Dinner, along with Alison, Mark and the two realtors and their families. I kept telling everyone to cook lots, I love Thanksgiving leftovers. \n\nOn my lunch break the Monday before Thanksgiving I made two phone calls. They were confirmation calls. The tickets were bought and paid for. I didn't tell anyone about the calls. Then I made a couple of local calls. I had a big screen TV delivered and set up on Wednesday. A rental company delivered some folding chairs and two big tables and table clothes and I stashed them in the barn.\n\nOn Wednesday I rented a Suburban and Pat laughed at me. \"We don't need a Suburban.\"\n\n\"I know we don't need one, but we get such a good discount that I want one.\"\n\nI parked it by my office and went back to work. At a few minutes before 1600 I called Kate and said I needed to stay late. She said she would take Pat home with her, they would hit the market one more time and then start cooking.\n\nAt 1752 a flight from Atlanta landed. Kate's brother was on that flight. At 1842 another flight landed. It was from Denver. The Logan's had flown from Omaha to Denver and then to Portland. I met both flights. When I got home it was almost eight o'clock. I walked in through the door in the kitchen and Kate was in the kitchen. She was stirring something on the stove. She said hi, but didn't turn. I walked to her and covered her eyes.\n\nI whispered, \"I have a surprise for you. Keep your eyes closed and don't make a sound. Ok?\"\n\nShe nodded. I moved my hand from over her eyes to over her mouth.\n\nI whispered again, \"Ok. Open.\"\n\nHer eyes opened and I turned her. Her brother was standing a few feet away with his arms open. True to her word she didn't make a sound, but flew into his arms.\n\nI called out, \"Pat, come here quick!\"\n\nI motioned the Logan's into position so Pat wouldn't see them until she was in the kitchen. She ran in, stopped dead and screamed when she realized who was standing there.\n\nBob, Mark, Bill and I spent Thanksgiving morning setting up the tables, chairs and setting the tables. My sister provided one set of china. Angie provided a set and Martha had left us all her china so, we had enough. When people arrived they brought things. More desserts, extra wine, a green bean casserole and Bill brought a sweet potato pie.\n\nJohn volunteered to say the blessing to begin the meal. He stood at the head of the table, bowed his head and said, \"God, I've been here on Earth eighty years. Said thousands of prayers. For the first time I can say this prayer. I say it, not just to you, God, but to each person here around these tables today. Thank you. Thank you for blessing my life with you. Home is where your heart is. My heart is home. I have never been happier. Amen.\"\n\nWe all echoed his \"Amen\" and I knew Kate, Pat and I were really home."
    ],
    "authorname": "Scorpio44a",
    "tags": [
        "retired",
        "helping others",
        "oral",
        "coitus",
        "threesome",
        "polygamy"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-surprising-road-home"
}