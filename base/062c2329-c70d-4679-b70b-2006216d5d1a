{
    "title": "Hope a Little Longer",
    "pages": [
        "This is my second story although parts of it predate the first. Feedback welcomed. Starts slowly, goes on quite a bit.\n\nPrologue - Rachel\n\nMy mother met my father while they were in college. She was studying English and had always had a religious leaning. He was studying animal husbandry and was from an ultraconservative Christian fringe group. I don't know if my mother was ever really attracted to my father himself or rather to the discipline of his upbringing. Mind you i've picked up a lot of what I know second hand from Auntie Jen so it's been translated through the filter of her disapproval before it ever reached me. \n\nFundamentally though I think my mother had always been one of those people who really like being told what to do; and I have found some humour over the years thinking about all the other ways that might have worked out for her. As it was though she met my father while they were in college, and the rest, as they say, is history. Her history anyway I guess - only the first part of mine.\n\nWe were an exclusive group so the community was very small and everyone knew everyone else. Much like any other childhood I imagine, it is hard to explain how ordinary mine seemed when growing up inside it. At that time I wasn't much of a creative thinker, I suspect some people would say that is still the case, and looking back I must have been fairly blinkered. So I happily recited the passages, bared my soul before God, and learned the ways of my divinely determined path toward domestic drudgery. My education wasn't very academic. It focussed more on subjects like cookery, and home management, and the Bible - there was always the Bible. That was what it was going to be important apparently for a girl growing up in a mostly forgotten leftover exclave of the nineteenth century.\n\nBack then Sarah was invariably at the centre of our games and schemes. She was full of energy and always up to something. In any conversation you felt you had her undivided attention and were the most important thing in the world. I idolised her and cherished each moment of her company but the three year age gap between us seemed like a chasm in those days and I couldn't really have called her a friend. She was the oldest of our little set because there was a clear distinction cut between children and adults. As we children grew up our eldest would each in turn drop out of our society into the grown up world and, at the time i'm thinking of, Sarah was next in line. \n\nGirls tended to be married young and it was pretty much taken for granted that it would be Ben who was matched with Sarah. He was a couple of years older than her and the families were close. She seemed to like him and they were always smiling at each other and finding, or being tactfully given, time to talk. It all seemed to be going well for them but then Jacob Tulley's wife died and he was left a widower at thirty five. \n\nThe wedding was strange and even to a child it was obvious there was no joy to it. Jacob was dressed as well as he could be, in a suit which was tighter now than it had been when he last wore it, and Sarah pale and silent. All day she looked as if she was about to be sick. Even the elders of the community presiding over the ceremony were sombre while the ritual was completed. It was a sunny day in mid spring and afterwards Hannah, Ginny and I sat at the end of one of the long tables which had been placed out on the lawn.\n\nI was watching some of the younger children chasing each other around between the trees. They were playing a hiding and chasing game which I could still remember although it looked as if the rules had changed since I had played. It seemed to me as if something vital was seeping out of the world and I felt ill and scared. Glancing over at another table I found my mother looking across at me and our eyes met. There was a long pause while neither of us would, or could, look away but after a time the moment passed.\n\nMy spirits remained subdued over the following months. Sarah had, as expected, disappeared into the world of adults and was no longer one of us. We all felt her loss I think, but isn't it hard to tell how much you colour your impressions through your own experience, it could have been just me. Presumably she was trying to build her way into a home in the shadow of Joanne Tulley's death and she can't have been prepared for it, who could be.\n\nThe next thing I can really remember is the night she hanged herself. The story, pieced together in retrospect from ghosts and whispers, was that she'd gone upstairs to put the girls to bed and when she didn't come back down Jacob went up to check everything was ok. He had found her strung up from a beam in their bedroom.\n\nSo the ambulance took her away. Some of the men, although strangely not Jacob, were dispatched along with Sarah's mother to speak to the doctors, presumably to the police as well, and when they returned word was quickly sent around that Sarah had left us in hospital. Naturally as suicide was a terrible sin there would be no funeral. She just ceased to exist.\n\nThis was a shock to all of us, children and adults alike, but I think it hit me particularly hard. As I said before I had really looked up to Sarah and it was horrifying to see her, I don't know how to say it even now, erased? excised? I was at a loss to understand how she had been turned from what she had been into the absence she had become and I lacked the tools I needed to cope with the grief.\n\nOnly a few weeks after that, without any warning, I was sent to stay with my mother's sister on her farm in the west country. I never really got a proper explanation of why but when I try to pick it apart now my best guess is that recent events must all have acted as a bit of a wake up call for my mother. I picture her forced to consider how different things were for women like her, who had married into the community as adults, to how they were going to be for those of us who were growing up with it. \n\nSo I was fourteen years old and i'd been turned into an outsider. It took quite a while before I was grateful for that final gift. Final because I have never seen or spoken to any of them since. They aren't allowed, it's called the doctrine of separation.\n\nPrologue - Ray\n\nLife with Auntie Jen was hard to come to terms with at the start. For the first couple of days I barely dared leave my room and Jen brought me up plates of food which I picked at dejectedly. She was the single mother of my twin cousins who were just starting higher education, Michael at agricultural college and Stephen studying business management. It was October and the harvest was all in but there was still a lot of tidying and pruning to be done in the orchards before winter, so they were all out working on that most of every day.\n\nAs this left the house empty I crept out to explore. Peeping into the boys rooms the musty scent of male adolescence made my nose wrinkle and the women in the posters on the walls left me shocked, scandalised, and fascinated. I gravitated eventually to the big farm kitchen, which was the most comfortable and familiar place, and that is where Jen found me when she came in for her lunch. She decided it was time to sit down with me and work out what we were going to do.\n\nWe made sandwiches and tea and then sat at the table and ate. Auntie Jen was patient, considerate and above all practical. She must have had the situation sprung on her with almost as little notice as I had, but she took it in her stride and this didn't even cross my mind at the time as I am sure she had intended. She went out of her way to make it clear to me that I was family, that they were happy to have me with them, and that my room was my own safe space where nobody would go without invitation.\n\nJen said most of her time was taken up with managing the farm and that it had been difficult for her having to bring up the boys as well. They were old enough now though to look after themselves largely speaking and were even taking over some of the farm work so she could make time for me now that I needed it. She also said she'd decided to keep me out of school for the year and spend some money on a private tutor instead.\n\nI tried to take all of this in. Up to that point i'd been assuming that sooner or later i'd be going back home but that wasn't compatible with the way she was talking. So I thanked her and told her how sorry I was to be a burden and explained that I didn't know why my mother and father had sent me away.\n\nShe was quiet while she chewed up another bite of her sandwich and sipped her tea. After she'd finished she said reasonably that she didn't think it was so much about sending me away. Probably it was more about giving me an opportunity to see another side of the world and that she was pleased to be able to help me with that. This was an angle I had not considered and it was my turn to fall silent as I mulled that over.\n\nWe talked a while longer. Somehow over the course of our conversation we had started to become friends. After that she wanted to know if there was anything I needed right away so I asked her how to turn on the television and she laughed at that but she showed me.\n\nBack in my room I went through the drawers, Jen had stocked them with clothes she thought would fit me, mainly hand-me-downs from my cousins. Wearing boys clothes seemed initially quite odd to me although i'd discover that on the farm, and around the farm kids at school (when I eventually went the following autumn) I didn't stand out at all.\n\nThat afternoon I was sat watching the television, more with bemusement than enjoyment, when the boys came storming home. I'd changed into jeans and a tee-shirt to try to get into the swing of things.\n\n\"Hello little mouse! Hey Mike! The little mouse has come out and she's got your old top on!\" This from Stephen who was generally the louder and less diplomatic of the two.\n\n\"Give the mouse a break Steve,\" said Michael, \"She's had a tough enough week without you taking the piss.\"\n\n\"And i'm not a mouse.\" I said with an edge of indignation, \"I'm Rachel.\"\n\nThey looked at each other, \"The mouse roars!\" said Steve and they both giggled while I stared between them not sure whether to be annoyed or not.\n\n\"No offence Ray,\" said Mike slumping onto the sofa.\n\n\"Yeah no offence Ray,\" said Steve, \"but you must admit you've been a bit of a mystery so far.\"\n\nI sighed, I had to concede the point, \"Yes I suppose so, but this is all very new to me you know.\"\n\nMike nodded, \"Mum said it's a bit different where you're from.\"\n\nThen he went and got us cans of something fizzy from the fridge and I watched the two of them play video games. When Auntie Jen put her head around the door a while later the boys were crouched next to each other on the sofa locked in mortal combat and I was curled up on one of the armchairs nursing my cola and laughing at some of the smacktalk they had been exchanging between them. I looked around still smiling and caught her eye and in that second I think she must have had some hope that it would work out ok.\n\nIt wasn't all easy of course. I had nightmares for a while and to my mortification I wet the bed twice. My tutor despaired at the state of my education but in the end, through great perseverance on both of our parts, she managed to coach me up enough that I could join the lower sets in secondary school the following year. It must have cost Jen a fortune and though I wasn't really aware of the details at the time I had a growing appreciation for how much she was doing for me. My strongest aptitude was definitely for mathematics and I took to it well, tearing through the ground I had to make up. \n\nOver that first year my view of my previous life changed quite dramatically. Obviously I started by missing the place and the people, especially my parents and my brothers, and some days I wished the radio and the television would just shut up for a while. I fled to the tranquility of my room plenty of times.\n\nGradually though several things began to change my perspective. I started to learn more from my tuition and realise how much there was to know about the world. I picked up a games controller and i'll tell you the day I first beat Mike fair and square was a day neither of us will forget in a hurry - he was so proud. Steve taught me to drive the quad bikes we used for getting around on the farm which i'm still not quite sure was legal at my age. I started with the kickboxing club the boys went to as well. \n\nAll of these opportunities were there for me and, as my horizons broadened, my thoughts when I looked back were increasingly coloured by anger rather than nostalgia. Sometime around then I stopped praying and I have never really felt guilty about that.\n\nI made it through two years of school not too distracted by the social side - I had come in a little late to make the deep bonds that my classmates already had between them. I knew a few of them from kickboxing though and we got on well enough. Then I left school with the grades I needed to go on to college and there took qualifications in working with computers. With my methodical approach to things and my mathematical mind I'd taken to that kind of practical logic very well. \n\nAfter leaving college I didn't have a lot of luck finding work locally so I worked around the farm for a few months before bumping into one of my former college teachers, Mrs Graham, in the village one day. She was semi-retired after a career in London, and after we got talking and I told her how things were going she suggested she might be able to put my name forward to some people she still knew in the industry. A few weeks later following some emails back and forth and a half hour Skype call I found myself on a train on the way to my first job interview.\n\nPart 1 - Seeing a Ghost\n\nI kicked out with my trainers against the floor pushing my chair back. Then, straightening my legs to lift my feet off the floor, I let myself coast until my head bumped gently against the plasterboard wall behind me. Standing up I reached forward snapping shut the lid of my laptop and yanking out the leads. My concentration had been slipping for a while now and it was time to call it game over for the day with, to be honest, less progress than I had been hoping. But hey sometimes those are the breaks.\n\nAs I packed up and put on my jacket over my plain black tee-shirt I glanced around and noticed that half of the twenty or so desks in the office were empty already. Not really a huge surprise though that late on a Friday afternoon. \n\n\"See you guys next week.\" prompted in response a couple of hands loosely waved in the air and some vague mumbling from those engaged enough with the reality beyond their screens to register that I had spoken. Andy, ever the informal social secretary of the single crowd, looked over from his seat in the next row of desks down.\n\n\"Hey Ray, a few of us are heading out for drinks if you fancy?\"\n\nI weighed the offer for a moment but i'd taken up the invitation a couple of times recently so my work camaraderie credit was well stocked and it had been a long week. \n\n\"No, i'll give it a miss thanks, i've got something else on.\" \n\nHe shrugged and waved his hand in the classic 'whatever' gesture which in a way conveyed more casual acceptance than an hour of smalltalk in the pub around the corner would have done. I was pleased with that. Having only been on the team for six months, and moreover being the only woman, it was still feeling good to be getting these occasional reminders that I had settled in.\n\nThe tube was packed as usual but running smoothly. I was travelling late enough that the commuter traffic was starting to die down and the more colourful crowd coming out for their evening's entertainment were well represented. In fact by the time I stepped off at the mainline station there were as many people trying to board the carriage as there were leaving it. The formal dance of savvy London regulars was keeping everything running as neat as could be. On the station concourse though it was a different story. As soon as I came up the steps I ran into a crowd standing where no crowd should have been and my heart sank. \n\nI maneuvered around to where I had a view of the departure boards and could see there was a long list of delays and cancellations. By hovering a few feet from one of the staff and listening in while he was interrogated by a couple of obnoxious alpha males I established that a train had come off its rails outside the station and was blocking the line.\n\nI'd been working in the city long enough now to have been through a few of these delays so, fearing the worst, ducked into a shop to pick up a ready meal for dinner. Then I found space to stand in a dead spot between the traffic flows where I could keep an eye on the boards while I read a few pages of my current book. Actually in the end it wasn't too long before the issue apparently cleared and I saw a train on my line flash up so I started picking my way through the crowd to the platform. \n\nAnd that is when it happened. The chaotic flow of the crowd thinned and separated briefly in front of me for just a moment and perhaps ten metres away I caught sight of a face. The woman was walking at an angle to me toward the station exit and even as my eyes re-focused, trying to zero in for a better look, the crowd closed again and she was gone. For a moment all I could be sure of was that I had seen someone from my past, much older now but still recognisably the same person, then my mind caught up abruptly and served fully formed the context, the memories, and the name. I froze there, taken aback. After some time I became aware I was standing there in the crowd like an annoying island, being bumped, jostled and occasionally sworn at by the tide of people trying to make their way past me to the platforms. I pushed myself back into motion to catch my train.\n\nForty minutes later I was climbing the communal stairs up to my flat. Unlocking the door I thumbed in the code to switch off the alarm and dumped my messenger bag and the flimsy Marks and Spencer bag containing my dinner onto the side in the kitchen. After checking through the post I turned on the oven then stripped off my clothes and took a shower. I worked some shampoo through my short hair, rinsed it back out again, dried off, and changed into tracksuit bottoms and one of my more comfortable long sleeved tops.\n\nThe oven was up to heat by then so I chucked the lasagne in and mixed a dressing into the salad leaves. Pre-prepared foods still seemed decadent but after getting in late on a Friday they were an acceptable means to an end. Plus as a bonus the food had come with a pack of four little beers included and I felt a definite need for one of two of those.\n\nAfter I had eaten I lay back on the sofa with a beer in my hand. There was some quiet music playing out of my phone through its base station in the corner of the room. Nothing I could remember hearing before, something Spotify had drifted onto based on a tune I probably fed it weeks ago. A clear thin voice sang about reaching for the moon.\n\nI stretched out and released a deep breath. My excuse to Andy earlier had been a white lie and I'd had no plans other than an evening to myself. In fact aside for a couple of hours of training tomorrow I would be on my own all weekend. I'd only moved into the city when I landed my job in the spring and although I was determined to make it work I was still a country girl at that time so after a week surrounded by people all day I needed some serious downtime. \n\nI'd had a little while to process my odd experience at the station earlier and rationalise it away. With so many people around you were bound to see someone who looked familiar once in a while after all. Anyway it couldn't have been Sarah, because that was a hundred miles away and a long time ago, and besides anything else Sarah had died. I finished my beer and went off to bed.",
        "Part 2 - Meeting a Ghost\n\nI had started much earlier than usual today to try to put a beta site up for a demanding client. You gain a feel after a while for who's only kicking up a fuss for the sake of it and who genuinely has a deadline to hit and my judgment call on this one had been that they weren't just making noise and they really did need the thing running as soon as possible. So there I was, rush hour barely beginning outside and already with an hour at work under my belt, added value personified. I was dressed largely for comfort as usual. Smart trousers in deference to the work environment, a newly ironed but casual shirt in deference to dress down Friday, and trainers in deference to working in a big city and having to do a lot of walking about.\n\nAndy stopped by at my desk mid morning to remind me about his leaving drinks later on and I assured him i'd show my face. Considering that by then I would already have clocked up an eleven hour working day I was secretly not sure how long i'd hang around. All things considered though it was the right thing to do and I wouldn't have dreamt of missing it. I got on well with him. It was Andy who took me out for a cup of tea and interviewed me for my current position without a word of complaint after I showed up at the office almost an hour late suffering trauma from my first tube journey; and he had been my team leader and mentor since then really. My friendship with him and his support had helped me to develop good working relationships with my other colleagues so it was only right to be there to see him off now and i'd be glad to have done so.\n\nI then ploughed through until it was time to pack up (sandwich at the desk somewhere in there) and just about got something cobbled together which I was happy to have the client take a look at. By that point though it was definitely time to stop for the day and a quick celebratory drink actually sounded quite appealing. I lucked out and managed to end up walking from work to the pub with Andy so we went through the dance steps of the social bit on the way. Best of luck, keep in touch, all the rest. It is kind of anachronistic these days when practically everyone you know is still going to be on Whatsapp on Monday morning.\n\nSadly after we got to the pub the evening took a definite turn for the worse. The new guy in app development obviously hadn't got the memo that I didn't date. Having grabbed the space next to me he spent a solid half an hour trying to impress me by means of leaning in far too close for comfort and shouting into my ear. His breath smelled of beer and I could occasionally feel the spray of his more enthusiastic phrases landing uncomfortably on the side of my face. Finally with some relief I spotted Andy and the new office manager Angela nipping off for a smoke so grabbing my bag and interrupting my hapless casanova I quickly made my excuses, edged my way out of my seat, and ducked through the door after them.\n\nI caught up with them outside as they were sparking up. Angela was most definitely dressed for the evening out rather than the day at work. My eyes lingered on her form-fitting horizontally-striped dress and I gazed at her figure in it with admiration and wondered whether I should have dressed up too. From a space above my field of vision I heard a throat being cleared and looked up into a broad amused grin. Angela raised an eyebrow and proffered her cigarettes.\n\n\"Oh, no thanks.\" I said slightly flustered, \"I don't smoke actually. I was just coming out for some fresh air.\"\n\n\"Ah yeah,\" Angela said, and glanced at Andy who was smirking a little for some reason. She kicked him gently on the shin and he winced. Turning back to me she went on, \"We saw Nick had you cornered. Amazing that he couldn't tell he wasn't your type really.\"\n\n\"I don't think I was giving out signals. Was I giving out signals?\"\n\nAngela paused for a moment, \"No, you were not giving out any signals which he should have found encouraging. Absolutely not.\"\n\nShe hesitated again considering her words, \"Nick just has some issues reading social cues by the look of it.\"\n\nFor a moment it looked as if she was going to keep talking but instead she took a drag on her cigarette and politely exhaled off to the side.\n\n\"You actually will stay in touch won't you Ray?\" Andy chipped in, \"I know everyone says it but most of them won't. I'm only moving around the corner so it'll be easy enough to meet up once in a while.\"\n\nI was quite touched. It crossed my mind that moving to a new job was a big step for anyone and he'd probably be feeling a measure of the anxiety I would in his place, \"Of course. Once you are settled in then give me a ping. You can tell me all about how great it is and try to poach me for your team.\" I grinned. \n\nAngela must have inhaled too much smoke at that point as she started coughing. I looked around at her in concern but she waved me off. Once she had recovered I made my excuses.\n\n\"I think i'll go home now though, i'm training in the morning. See you soon Andy, and see you on Monday Angela.\"\n\n*********************************************************************************************************\n\nAs Ray disappeared around the corner with her bag swinging off her hip Angela turned to Andy, \"Bloody hell she has no idea at all does she? It's kind of really sad and incredibly cute at the same time.\"\n\n\"Yeah you can see how it works though. The boys don't come on to her and she doesn't want them to so it doesn't cross her mind to wonder why. You're right though it is sad. She's a lovely person just totally, um, self-contained.\"\n\n\"Isolated you mean. Still though, there's someone out there for everyone.\" and she leaned in against him and turned her face up for a kiss.\n\n*********************************************************************************************************\n\nI left Andy and Angela outside the pub and strolled off to the tube. Those two seemed to be getting on pretty well, fairly cuddly even, although I'd be the first to admit i wasn't the best judge of those things. I played back what Angela had been saying in my head and couldn't help feeling that there was some element of the conversation which I had been missing. Maybe she had felt I was putting out some kind of Nick-attracting vibes but didn't want to embarrass me. She was really nice though and it did feel as if I was working toward making another friend which would be great. She had looked good today. Sometimes I wished I had the figure to fill out a dress like that but my genes hadn't given me those kind of curves or, and let us be blunt, much in the way of breasts; and really I wasn't sure i'd feel comfortable on display like that anyway. My standard shirt and jeans set up was hardly unusual, there were plenty of other women around wearing similar, and it worked for me.\n\nI was lost in my thoughts and passed through the mainline station on autopilot taking a seat in an almost empty carriage and enjoying the small luxuries of both arm and leg room. Gazing out of the window I watched the train on the next platform slowly pull away. Someone sat down diagonally opposite and after a while started speaking. For a few moments I assumed she was on the phone but gradually it sank in that she was talking to me. \n\n\"Excuse me, excuse me, it's Rachel isn't it? I'm sure it's you.\"\n\nI looked up in surprise, because it had been a long time since anyone had called me that, straight into the face of a strikingly beautiful young woman who was bent forward talking to me. The low light in the carriage had dilated her pupils making her eyes seem an even darker brown than they really were. Her complexion was very pale with a slight flush to her rounded cheeks; thick chestnut hair fell well below her shoulders. Her expression was a lot more uncertain than the confident tone of her words had suggested, wary even, and apparently the look on my face wasn't helping because she leant back into her seat quite quickly. It was hard for me to concentrate on all this though because she was undeniably Sarah this time and my mind had kind of run aground.\n\n\"It's Ray now, not Rachel.\" I blurted out, \"and, um, l thought you were dead.\"\n\nShe tipped her head slightly to the side, presumably taking this in, \"Ray, right ok. That's what they said is it, makes sense I suppose, i'm not though. Look do you have time to go somewhere for a coffee or something.\"\n\nPart 3 - Lunch Break\n\nMonday came and even before I got to work I was reading email on my phone and pleasantly gratified by the reply I had received from my problem client late the previous night. I was not sure what timezone they were in right then but what i did know is that they must have spent most of the weekend going over my beta site and had methodically written up all the issues they had found and the changes they would like. One of the advantages of dealing with clients from the Upper colonies is that you can always rely on their attention to detail. Even better they seemed genuinely appreciative of my work on Friday.\n\nArriving at the office with a spring in my step I was really looking forward to working through the snag list. A good way to start the week. I was actually humming happily under my breath as I set up my laptop and Angela glanced over from her place in the corner of the room raising her eyebrows as if to say 'Really, at this time in the morning?'.\n\nI gave her a slightly sheepish grin and put my head down. Aside from a few brief breaks (filter machine, filter machine, loo if you have to know) that was it for my first four hours at work. Swinging back around the corner into the office from my toilet break though I not only noticed I was humming again but also just managed to avoid cannoning straight into one of the other guys. I veered aside at the last moment with an offhand apology and bumped loudly into the water cooler. \n\nOn the plus side it didn't actually fall over I suppose but it definitely looked as if it might for a moment. Again I saw the raised brows peering at me from over in the corner. I knew that Angela had something to do with Health and Safety and I was a little worried that I had annoyed her with my careening around. Back at my desk a few minutes later I sensed a figure standing by me and of course there she was. \"Shall we go and find some lunch?\" she said brightly, the big grin on her face a total mystery to me.\n\nAs i've said I did like Angela so I was glad we are going for lunch but I was also intimidated by her for several reasons I think. Firstly she was quite a bit older than me - in her late twenties at a guess. Secondly she was new and hence an unknown quantity. Thirdly she wielded a lot of power in our world combining as she did office management, HR, shared PA to the directors and actually I wasn't quite sure what else. Lastly, and I knew I was being a bit ridiculous here, she was a woman and I was not that used to working with or socialising with women. Somehow I always felt sort of on edge, on display, when I was around women in a way I didn't experience with men. \n\nSo I let her take the lead and she shepherded me off to a cafe further away and to be honest pricier than I would normally have chosen, although it wasn't going to break the bank as long as I kept to the sandwiches and salads areas of the menu. As with everywhere around here they did food to go but it turned out they also had a few tables tucked out of the way of the lunchtime queue so we grabbed one of those and took a seat. Miraculously they even did table service as well and a waitress was immediately over to take our order.\n\nWhile we waited for our food she teased me a bit about Nick's attentions on Friday and I could feel myself flushing again at the memory. I explained that I didn't have to deal with it very often and that I wasn't really looking for a boyfriend. She said that was fairly clear, which pleased me, really that was one whole area of my life I wasn't interested in opening up right now. It looked as if she wanted to keep the conversation on the social side and so lacking many options I asked how it was going with her and Andy.\n\nHer face shone as she talked about some night out they had had on Saturday and that probably told me more than her words did themselves. I enjoyed basking in the secondhand glow of her affection for him. It looked good what she had, really good. In a way I suppose I would liked to have had that for myself. The idea of having a companion I could rely on, go out with, enjoy things with, I could see how that would enrich my life but i'd just never met the specific boy who made it seem properly appealing. After a while she obviously noticed that she was rambling a bit and swerved the conversation back my way.\n\n\"So what about you hon? You've been dancing around all day with a grin on your face. Seriously not like you at all!\"\n\nThe food arrived and gave us a little break. Then I started to talk about the work stuff as if I was answering her question. I'd barely launched in though when she was shaking her head and insisting that wasn't what she was talking about. She was right of course but i'd not really shared anything about my life outside work with colleagues and it was difficult to know where to start.\n\n\"I think it must be because I met someone on Friday after the pub who I hadn't seen for a long time.\" \n\nA quizzical cock of her head requested eloquently that I provide more information, so I clarified, \"Sarah, we were girls together. I hadn't seen her since I was fourteen.\" \n\nI went on to explain that we had gone for coffee, exchanged numbers. How great it had been to see her, how I had forgotten how much I liked her, and how we'd probably meet up again soon. She was working in social care and living not actually that far from me. I think I probably ended up rambling too.\n\n\"Things were complicated when we were young.\" I finished, hiding things I wasn't prepared to explain behind the understatement, \"It was good to see her doing so well.\"\n\nThey had cleared our plates away while we had been talking and Angela had paid the bill which was nice of her. Unexpectedly she reached forward across the empty table and grabbed one of my hands. The contact was a bit of a shock but her hand was soft and warm. She looked me in the eye and squeezed my hand firmly. \n\n\"I'm glad you saw your friend again Ray. You seem really happy.\"\n\nPart 4 - Interlude\n\nI am wreathed in silver and my ears are filled with the sound of sirens and screaming. Behind that an infectious electronic beat is thumping steadily away and I focus on that, using it to help time my movements. Deep down behind all this in the mix a calm quiet voice is counting numbers down toward zero in an incongruous deep Somerset brogue.\n\n\"Fifteen.\"\n\nFiredarts rain in on me and splash harmlessly off my luminescent shield causing it to ring like a bell with each impact and flash a progressively deeper and duller red. I leap, impossibly high, easily soaring over the behemoth in front of me, turning as I land so that I am now briefly facing the giant from behind. Translucent blades spring from my arms and flexing I slice them out through the air into its back. It convulses, roaring its pain and anger, then arches up so that it is facing the air, hands raised. Six patches of red light appear on the ground around it and start to grow into large circles. There is one immediately under me and I leap again, neatly reversing my path to land back in front of my team ready to shield them from the imminent blast.\n\n\"Ten.\"\n\nI misjudge my landing and touch down just inside another of the circles at the same moment the air strike lands. A wave of coherent light passes through me and strips away the remainder of my armour along with half my health. I'm still standing though and fire back another series of blade attacks rolling myself alternately left then right between shots. Each incoming hit is now critical and I buff my dodge even higher to try to avoid them.\n\n\"Five.\"\n\nOnly two make it through. The damage I take isn't so bad and after a quick glance down at my health bar I think for a moment that we are going to make it. Unfortunately though the knockback from the hits has pushed me far too close to the others and the next blow to arrive carries a heavy area-of-effect component.\n\nMike's timer reaches zero and he says \"Incoming.\" but the fire takes him before he has a chance to wrap that fresh shield around me and he dies. There is a chorus of expletives as the rest of them go down and I am left standing there alone among the skeletons as streams of purple light twist across the sky. I watch half a dozen more of those little incandescent darts screaming in towards me.\n\nMy controller bounced slightly as it landed on the sofa beside me. I gave it a theatrical disgusted glare, for no-ones benefit but my own, as if the destruction of our team had been in some way its fault. It was far too late tonight to work our way back up through the level and take another shot so Doug, Nicky, Julie and Mark were all making their excuses and signing off for the night. I could see Mike's icon was still green though and as we often took the chance to catch up after an evening of play I kept my headset on too and leant back, closing my eyes.\n\n\"Hey Cuz.\"\n\n\"Hey Cuz.\"\n\nThis had become our standard greeting recently. We'd been Mike and Ray since we had known each other but then I had swanned off to the big city and, apparently, become tainted by its posh ways. Mike had decided one day that this was how posh cousins addressed each other and it had stuck. I was ok with this as long as Steve didn't start joining in.\n\n\"Fucked that one up didn't I?\" I said, \"If I hadn't been hit by the airstrike we'd have been fine.\"\n\n\"Could be. Then again could be we should've moved back quicker when he barged you into us. And if it comes to that Julie should have had an interrupt ready in the first place if you really want to be pointing fingers.\" \n\nJulie was Mike's girlfriend and I could hear her shouting her response to this in the background. I couldn't make out the words but the tone of happy indignation was clear enough and it made me smile.\n\n\"Mum asked me to check when you'll be down at Christmas.\" Mike went on.\n\nEveryone at work knew I had a long way to travel to be with my family so i'd had no trouble booking the extra day off. I explained i'd be travelling down early on Christmas Eve and then back on the twenty-seventh. It was going to be so good to spend some time with them as I had not been down since the summer. We chatted for a little longer. I heard that things are tidied up for the winter as far as the orchards concerned and a lot about how well the big new project was coming on. I gave Mike the address of a website where he could see some of what I had been working on recently.\n\nI told him about Sarah, we'd met up several times now. He'd never met anyone from that part of my life and he was definitely interested in hearing about her. Before he went offline for the night I found myself nearly talking to him about what had happened to Sarah back then but in the end I didn't. The thing was Mike had been talking about coming up to London to visit at some point and, if the two of them were to meet, I didn't want to make things strange. We'd talked about it between ourselves by now of course but I knew Sarah still found it difficult.\n\nPart 5 - Moving in\n\nI was meeting Sarah after work again today. We'd got into the habit of meeting up once or twice a week before we caught the train home. Our stations shared the same line but not all the trains stopped at hers so generally I would wait for one which stopped at both so that we could share the journey too. Today I had got to the pub first and ordered my beer and her wine. It was early enough that I had found a table free and taken the seat facing the door so that I could spot her when she arrived. As it turned out though i'd got my nose into my phone by the time she got there and the first thing I noticed was the scrape of the stool on the tiled floor as she pulled it out to sit down. ",
        "The second thing was that she wasn't looking at all well. In fact she was looking tired, unhappy and on edge all at the same time. It was funny, with a lot of people, with people in general really, I had difficulty noticing these things but with Sarah I could always seem to tell when she was out of sorts and today was definitely a major one. \n\nShe sat down heavily and claimed her glass barely managing to avoid actually lunging for it. I let her take a moment to regain some balance. In the end I didn't need to ask so I must have been radiating my concern or she just needed to let it out. \n\n\"I've got two weeks notice on my flat Ray, the landlord is selling up. We heard yesterday.\"\n\nHaving a stable address, a proper home, had been a huge thing for Sarah. I wasn't clear on all the details but I was fairly sure she hadn't had her own place to live for very long. I knew that in her current flat she shared with some people who worked with her but before that she'd been making an effort to keep things vague. Taking all this into account I was actually surprised to see she was doing as well with this as she was. She'd even managed to make it out to see me when she must have far more important things to deal with and she was keeping it together. Then of course she blew that theory completely by lowering her head and bursting into tears. I shuffled my stool around so that I could lean forward and put an arm around her.\n\n\"It's a bloody disaster Ray.\" she said bleakly. \n\nHearing her swear even mildly like this was in itself a clear indication of the pressure she was under. I'd literally only ever heard her do it once before. \n\n\"We've got to be out by the eighteenth. Most of the others are staying with family until the New Year rather than even try to find somewhere else before then. And well, you know, not really on the cards for me?\"\n\nShe leant back and smiled up at me unevenly through her tears, making sure I saw the joke, and I couldn't help a quick snort of laughter at the black humour of it as I smiled back. It was good to see she could still manage that at least. I wanted to let her know that I'd do anything I could to help and I was trying to think how best to say so when I realised that there really was something I had to offer. \n\n\"You can come and stay with me for a bit if you want. I've got a spare room and I only use it for storage. It's even got a bed in it already.\"\n\nI'm not sure what I expected in response to this. To be honest I hadn't really had a chance to think it through myself. A small part of me panicked that I was inviting someone into my treasured personal space, but that was ridiculous, I liked Sarah and what kind of a friend would I be to value such a little thing when I could help her. Anyway, I speculated, it might be fun to have someone around for a while. Actually deep down somewhere I was aware there was a part of me which was excited by the idea of having Sarah in particular to stay. We'd been increasingly close recently and I looked forward all day to seeing her whenever we met up so why wouldn't it be nice to have her in the spare room. All that added up to a surprisingly deep pang of disappointment when a regretful look passed across her face and she said.\n\n\"Oh no Ray, I couldn't do that. You love having that place to yourself.\"\n\nI tried to keep my face neutral, I was wishing that i'd made it clearer that i'd be happy about it, but this wasn't about me it was about what she was comfortable with. I had a brief think about how best to rescue the situation.\n\n\"I really wouldn't mind, i'll tell you what - if you find a better option in time then take it, if you don't though then you take me up on my offer instead. You're my friend and I couldn't let you struggle just because you're worried that I like to be on my own.\"\n\nShe thought, visibly. One of the things I loved about Sarah was how intense she looked when she was thinking.\n\n\"Ok then, that sounds fair. We have a deal.\" and she raised her glass and leant it forward to tap it against my beer bottle.\n\nLater that night i'd only been home half an hour when the chime went on my phone to let me know i'd received a message. \n\nSorry I was being an idiot earlier. Of course i'd like to stay in your spare room if that is still ok. x\n\nI wasn't going to question the turnaround I'd take my luck as it came. I walked into the room in question to see how much effort it would be to clear it out for her and the answer was practically none. Aside from my gloves, armour and the rest of my kit piled on the bed, and the hoover against the wall, it was empty. \n\nPresumably she'd have bedding but we'd need to get her some furniture as there was nowhere to store clothes and whatever else she had. That was fine though as word in the office was that there would be a seasonal bonus in the December wage which should more than cover anything we needed. I wondered how she was going to move. Neither of us had a car.\n\nDo you want some help moving your stuff?\n\nI'll take that as your way of saying yes then. Thanks Ray. x\n\nAfter that it all happened amazingly quickly. It turned out that one of her housemates had decided to clear out as soon as possible too and had hired a van to move over the weekend. He'd do a quick load for us after he had finished doing his own moving and before he dropped the van back off at the depot. Sarah spent the morning packing up then called me to come over early in the afternoon. As it was a nice day I navved my way over to her flat on foot to help with the lifting and carrying.\n\nWhen I got there her stuff was all stacked up ready to go and she was sensibly dressed for the moving in a top and jeans quite similar to mine. I'd not seen her dressed down like this before as we'd always met after work so far. She actually looked really good, she couldn't have worn the boy's tee-shirts I bought though, she had a lot more than me going on up top.\n\nI was pleased to see she had a bookshelf and a set of drawers as well as a couple of lamps. That would help to fill the room out and probably meant we needn't buy any more furniture for her before payday. Aside from that I was amazed, even upset perhaps to see how little she had. All I could see were a couple of boxes of books, clothes packed into a selection of cases and carriers, some kitchen stuff. That was it.\n\nIt was a tiny thing I knew, and it even shamed me slightly that it had taken something as prosaic as her possessions to have made me notice, but somehow it was that which triggered the realisation in me of how isolated she must be. It had been Sarah out on her own in the world since she was seventeen now. The only people there to look after her and care for her had in all likelihood been those who were being paid to do so. \n\nI thought about how Jen and the boys had taken me into their home and made me one of their own. I thought about going down for Christmas at the end of the month and how my room would still be there for me, and how it'd probably still be there for me in five, ten years if I needed it. She'd got none of that only those few things in my stupid little spare room. All these thoughts opened up inside me into a strong sense of determination and care. It was simple really - Sarah would be part of my personal family now and i'd look after her and support her as she deserved to be supported for as long as she wanted to let me. I decided not to mention this to her right at that moment though as I had a suspicion it might have come across as a little weird.\n\nWhen we were done Sarah thanked Gary for helping with the moving and I asked if he wanted to stay for dinner. He had to take the van back though and he'd had a longer day than either of us so it wasn't surprising he just wanted to finish up. Instead of cooking I ordered in a pizza and while we are waiting for the food to arrive I gave her the keys i'd had cut for her and showed her how to use the alarm.\n\nWhen we had finished eating we took our drinks to the sofa and we ended up putting Up! on. One of the guys at work had been going on about it and had lent me the DVD so, as neither of us had seen it, it seemed worth a try. It made us both teary at the beginning, laugh in the middle and then cry again at the end but in a nice way. We agreed it was really good and spent a while competing to do the best and funniest impressions we could of the dogs' voices but once we'd both had enough of that it was time for bed.\n\nI'd finished in the bathroom and was headed to my room when she passed me in the hall and unexpectedly pulled me in for a long hug. Pressing up close against me she said right next to my ear, \"Thanks so much Ray. It is really good to be here.\"\n\nOver the next fortnight we settled into a comfortable routine and I found that any fears I might have had about the difficulties of sharing living space were entirely unfounded and that it was really easy to live around Sarah. We agreed who'd be doing the cooking between us on a day to day basis and she would definitely try to make sure she did more than me but I thought she was probably feeling a little awkward that i'd told her I didn't need her to pay any rent so I would let her.\n\nOne evening I came home to find her working through a series of perfect tai chi forms in the living room. The ritual was very important to Sarah in particular and she was barefoot on the boarded floor and had changed into her white cotton gi. That was apparently the standard uniform at the school where she had first studied and, although the place she went to now was more tracksuits and tee-shirts, she still liked to wear it when she was practising alone.\n\nI sat down quietly on the arm of the sofa and watched the graceful movements of her body, her slow measured steps, the way that her hands rolled and drifted in unison, then harmony, apparently stretching and shaping the space between them. Her grace as she carefully stepped, turned, stretched, blocked, and stepped again was mesmerising. Her face beatific, unreadable.\n\nThe evenings were the best, lounging around after dinner and telling stories about our days. I told her a little about life on the farm with Jen and the boys and she opened up a bit about her time in some kind of sheltered accommodation and about how that had, by increments, metamorphosed into the work she was doing now. \n\nWe ended up talking at some point about how sharing the flat was going. I told her that I didn't think there was any need for her to look for anywhere else if she liked it here. She wriggled herself back deeper into her corner of the sofa like a cat making a nest and said there was 'nowhere else she would rather be' so I suppose she thought it was going alright too. I mean that meant she liked it here or she hated it everywhere else right? And she seemed happy enough, that was what the wriggle was all about.\n\nOur wonderful goodnight hugs had become a ritual of their own last thing each night after we were changed and ready for sleep. So much so that I felt some disappointment on the evening I toppled in tipsy after the office Christmas party and found she had already gone to bed. I padded around as quietly as I could while I changed and cleaned my teeth to avoid disturbing her. \n\nAll my attempted sneakiness was wasted though when just before I walked into my room I heard the click of her door behind me and turning I found my arms suddenly full of warm soft sleepy Sarah. Her head nestled in under my chin with her hair in my face and the floral scent of her shampoo everywhere. \n\n\"Goodnight Ray.\" she whispered and then she was gone again as quickly as she had appeared, leaving me standing there dazed with a smile I couldn't seem to remove from my face, and which I was still wearing as I lay in the darkness in the last moments before sleep. Somehow I was starting to find that these little moments of intimacy were the high points of each day.\n\nIt was funny i'd been looking forward to going away for Christmas for ages but now it had come I was feeling a lot more ambivalent. Part of me would rather have stayed here at home. I had even checked with Jen whether it would be ok if Sarah wanted to come down too and of course the answer had been yes; but it turned out that this time of year was a busy season in her line of work. Not that surprising really I supposed. \n\nThe upshot was that Sarah was going to be working nearly every day and couldn't come away with me anyway. As I grabbed my bag to head for the station I felt a little sad that she'd be on her own. I had left a small pile of gifts for her on my bed though which i'd let her know about by text or over the phone late that evening.\n\nPart 6 - Christmas Eve\n\nI called Jen when I was a few stops away from the station and she drove down to pick me up. I'd been struggling with my bag for the whole journey as it was feeling bigger than I had thought it was going to and quite unwieldy. Driving back up to the farm it was almost the first time it really felt like winter to me that year. In the city it just didn't show as much.\n\nThey'd done the house up beautifully with a wreath on the door, huge clusters of holly nestled in the corners of the rooms and paper garlands running in from the corners to the light fittings. I piled the clutch of presents I had brought with me under the tree.\n\nTaking my bag up to my room I emptied out my clothes and, carefully packed in right at the bottom, I found two beautifully wrapped packages which I hadn't put there, one small and rectangular the other large, squarish, and soft. Smiling I put them up on the dresser in the corner. \n\nThen outside the window I heard the boys chatting as they walked through the yard and I had to go straight out to find out what they were up to. This was the first time I had been down since harvest and they had made a huge change on the farm that year which I couldn't wait to see.\n\nI raced out the back door and they were both walking away from me toward one of the outbuildings so I picked my target from the two broad backs and leapt onto Stephen's, hugging him from behind and completely leaving the ground for a moment before I let go and dropped back onto my feet. Mike then put one arm around me and slapped my back in greeting. They were both as excited to show off their new toys as I was to see them and they led me quickly toward the new barn.\n\nAside from a couple of fields of stone fruit the entire farm was apples. Specifically cider apples. Originally the cider was fermented and bottled on the farm and a lot of the old equipment had been falling to dust in the sheds ever since we'd given that up back in the sixties. More recently we had used to sell the whole crop to a local independent producer but a few years ago they had sold up to one of the major national players and ever since then that lot had been using their buying power to squeeze our margins. Times were getting tougher and it had all been looking pretty dismal when unexpectedly the government had decided to relax the restrictions on licensing for one specific aspect of alcohol production.\n\nSo Stephen had written up the business plan, Michael had gone off to take a university course in brewing and distilling at some place far up north, and while that was happening money was gathered and loans were arranged. Now there was a brand new press and a dozen fermentation and storage tanks in one barn, and racked space for literally thousands of barrels for storing and aging the product in a second. What I wanted to see though, and what was waiting for us in the third of the major buildings where we were walking right now, were the stills.\n\nIt was like a temple inside. I just wanted to stand there and look at the shining copper minarets and take in the smell of the place so that is exactly what I did for a good long while. Mike and Steve had grins as wide as their faces and I could see that even though they had been using the equipment for months now the fascination hadn't worn off. They talked me through the process by which the raw cider was pumped directly in from the fermentation room via pipes laid underground between the buildings then heated slowly and repeatedly to separate then purify the alcohol.\n\nThen there were stacks of barrels waiting at the side of the room to be filled with the resulting brandy for aging. Some were newly coopered virgin oak from one of the last remaining producers in England but there were also bourbon barrels from the US, whisky barrels from Scotland and sherry barrels from southern Spain. All of these would eventually impart their own unique character to the base spirit. Lastly next summer the plum and damson harvest would be steeped in a proportion of the year old brandy to add yet more layers of flavour.\n\nI texted Sarah late in the evening after dinner telling her about my day and sending her over some photos to add colour to my descriptions. She was home now but hadn't come off her shift until a couple of hours before. Reading between the lines she had worked several extra hours to help bridge some of the gap left by people who had gone to be with their families.\n\nI'll miss my hug tonight, maybe i'll go and hug your pillow instead as a substitute!\n\nYou'll find your presents then, check on my bed.\n\nOh wow Ray, thank you so much that's really sweet of you. x\n\nCouldn't have you missing out, I hope you like them. And you hid gifts in my bag too, so thanks to you as well.\n\nI pointed her also to the stash of edible goodies i'd left for her in the kitchen, hidden right at the back of one of the cupboards.\n\nThen we kind of exchanged presents. I opened the smaller first and she had bought me a new wallet having noticed how battered mine was. It was a considerate gift, i'd been meaning to find a replacement as the scruffiness had been bothering me for some time, but I didn't think i'd mentioned it out loud so I was taken aback by the level of insight it implied from her. In the second parcel was a soft leather jacket in a very dark brown which fitted me perfectly somehow. It was heavy, luxurious and gorgeous, embossed with a subtle maker's mark at the back of the collar and on each cuff. It must have cost her a fortune, far more than she could afford.\n\nBack at home I knew she was unwrapping a dark cashmere scarf I had chosen to fit in with the palette of deep autumn colours she loves, some suede winter boots, and a new phone. The phone was just a grey market import but I had done my research and knew it would be a good upgrade from her current one. I'd also left her a card and inside was a slip of paper with the username and password for my Spotify account which I had upgraded so that she could use it too. Lastly in the same envelope there was something for us both to enjoy, a pair of tickets to a show in the West End at the end of January.\n\nIt was obvious we'd both put a lot of thought into our choices and that she loved my gifts as much as I loved hers. We passed a few more texts back and forth and she sent me a photo of the boots on her feet. They seemed to fit and she was obviously delighted with them but the overall look of the picture was a little odd as her legs were otherwise bare, she must have changed for bed already.\n\nToo soon she needed to get to sleep ready for another long day so she signed off with a hug emoji and I had to rummage around in the little collection of icons for a couple of minutes before I found the same one so that I could send it back in return.\n\nPart 7 - Christmas\n\nChristmas day had been a good day, exactly the comfortable re-affirmation of our familial bond which I had needed, but it was definitely drawing to a close. Steve had gone up to bed, and Mike and Julie had walked back over to the cottage where they lived now, so it was only me and Auntie Jen left. There was still the occasional crackle and flicker from the embers as the flame hunted out the last few fragments of fuel. Checking my phone I found Sarah had texted me a hug forty minutes ago so that must have been when she had gone to bed. I hesitated briefly and decided that on balance i'd rather risk waking her up than have her think I hadn't answered so I sent one back.",
        "Jen asked me what i'd been doing so I said I had been texting Sarah at home to say goodnight. I went on to tell her about the treats I had left hidden in our kitchen and how I had led Sarah to them last night after she had got in from her shift and before we exchanged our gifts. I'd already shown off my new wallet and jacket earlier.\n\n\"I'm so sorry she couldn't come down in the end Ray.\" Jen said, \"I would have loved to have met her.\"\n\nI nodded, smiling, \"Maybe next time. I would definitely like you to. She's had such a hard time but it's amazing how she has come through it all. She's really quite something.\"\n\n\"And is Sarah, you know, more than just a friend?\" Jen went on, her voice tentative.\n\nI couldn't think what she was getting at, \"I, I don't know what you mean.\"\n\nShe bit her lip and looked panicked.\n\n\"Oh Rachel i'm sorry darling,\" she blurted out, \"It's just with the way you've been talking about her, I mean you've barely told us about anything else since you got here, and with you living together, i'd thought...\"\n\nI looked at her blankly as she let the sentence tail off. Then she swallowed and steeled herself to finish quietly, \"...she might be your girlfriend.\"\n\nI started to look at her blankly some more, but no, I got it. Jen started talking again and the words were quite fast but for some reason my brain had stopped serving up the translations. The intonation made it sound as if she was still apologising though. Gradually a more urgent repetitive tone entered her voice and I supposed my continuing silence was starting to worry her, \"Ray? Ray?\"\n\n\"You think i'm gay.\" I said. I wasn't exactly using the words to convey or process information. Just releasing the first phrase from the top of my head out through my mouth as an indication to her that I was still there.\n\nShe stopped very still, paused for a long moment and then sort of affirmatively bobbed her head and shrugged.\n\n\"Don't you?\" she said cautiously.\n\nTo give her credit it was a good question. I appreciated the elegant, and yet matter of fact, way it cut to the chase. A proper one-pull sticking plaster, yes/no of a question. Inconveniently however i'd got a lot going on in my head all of a sudden and I wasn't in a position to give her the clear definite answer it deserved. \n\n\"I'm not sure.\" I said, and I was suddenly very tired indeed. The aftermath of whatever soup of emergency response chemicals my body had flushed into my system was already starting to kick in.\n\n\"I need to think about it. Can we talk in the morning? I'm going to go to bed if that's ok.\"\n\nThat came out a lot more abrupt than I had thought it would. Jen flinched visibly, which was entirely reasonable, and she was watching me as if I was about to explode. I didn't want to leave her there thinking I was upset with her, I wasn't, so I made a point of slowing down, telling her not to worry, and giving her a big cuddle before I went upstairs. Unexpectedly I must have been out like a light as soon as my head hit the pillow because the following day I could barely recall getting into bed.\n\nI woke in the morning with a great sense of peace. This bed had been a bastion of security for me for a long time and I lay in the warmth and safety and let thoughts drift through me for a while as I dipped back into and out of true sleep itself.\n\nWhen I had moved to the farm and my life had changed I suppose it had sort of reset my childhood to a degree and left me with a lot to learn and a constant sense that I was trying to catch up with the rest of the world. Despite my age I hadn't quite learned all the things it meant to be an adult yet and I had got used to assuming that everything which mattered would sort itself out in the end, and right, yes, here we were, back up to speed now.\n\nI found myself kind of re-calibrating past experiences. The boy i'd been half waiting for who was supposed to catch my eye and sweep me off my feet and the way he'd somehow never come along. That concern about my appearance which I only ever got in the company of women. Now that I had been presented with a new point of view I had to admit that it made certain parts of my life make more sense. It wasn't that I didn't like men, men were fine, some of my best friends were men, but I couldn't honestly say I had ever found any of them attractive.\n\nIt wasn't as simple as i'm making it sound of course. I was still not sure what to think about all this let alone what to do. I guessed i'd carry on as normal for a while and see what happened which sounded like a good solid approach and had served me well on many occasions. I suspected life was, as ever, going to be full of surprises and I was concerned that not all of them would be good. I was more than a little frightened about how I might be accepted, and not. For example I had been a bit young for this kind of subject to have come up before I had left my birth family but i'd a clear idea how they felt about gay people. About us, I thought experimentally, and something about the shape of the thought already seemed to fit.\n\nSo I supposed I did have an answer for Auntie Jen now and I was keen to let her know. I had a shower, got dressed and bounded down the stairs to the kitchen only to be derailed on arrival when I found Julie was sitting there at the table too. Reconsidering my approach on the fly I said good morning to both of them and then moved over to Jen who had been sizing me up since i'd walked in. I gave her a kiss on the cheek and a whispered, \"I'm ok, thank you.\"\n\nThis totally failed to pull the wool over Julie's eyes in any way whatsoever and she immediately wanted to know what had got into me. Well, I had to start somewhere I suppose so I took a seat next to her. I didn't want us to be staring right at each other.\n\n\"Jen said something last night which made me see something about myself that I hadn't been aware of before. Basically she'd assumed I was gay and actually I think she is right. I'm confused, it's very new, but I do think she's probably right.\"\n\nJulie was entirely unfazed by this which made me suspect that she and Jen had already had a chat before I had shown up. She took one of my hands, looking very serious, \"Hey it'll be ok, take your time. You don't need to rush into anything after all. You can have a little stare at my tits though if you think it would help?\"\n\n\"What?\" I turned to look at her in open-mouthed incomprehension and she collapsed in laughter at the look on my face until she was gasping for breath. It was strangely comforting.\n\nThen there was coffee and toast and, weirdly, grapefruit segments out of a tin which has always been a Boxing Day thing for Jen for reasons I still don't understand. So all was well, if as stated confusing, until I did a quick check of my phone and found my good morning message from Sarah. A huge surge of pleasure ran through me when I saw it, like a signal from outside my conscious mind. My heart literally skipped a beat. This was when I realised Jen had been right about that too, well half right anyway, I was certainly reacting to Sarah as if she was a lot more than just a friend.\n\nPart 8 - Coming Home\n\nThe rest of the holiday passed without incident. I decided not to speak about my probable gayness to Mike and Steve right now. It wasn't that I wanted to keep anything secret or that I was concerned about what they might think or say but I wanted to figure out what this all meant for me first. Mike drove me down to the station on the Sunday afternoon and on the way reminded me that he'd be coming up to London for the boat show toward the end of January. I'd promised him a place to stay for the night which I had originally assumed would be in the spare room but was now looking as if it would be on the sofa.\n\nI used the train and tube journeys to do some people watching and to watch myself while I did so, definitely realising as I did so that I was spending a lot more time looking at the women. I then caught myself rationalising that this was because the women were so much more colourful and interesting than the men were and I couldn't help but laugh as I replayed that in my head. I can be seriously unperceptive sometimes.\n\nWhen I got back to the flat late afternoon and opened the door I was expecting to hear the warning bleeps of the alarm but instead was met by a thick wave of warm steamy air scented with cooking food. I dropped my bag in the hall and walked into the kitchen where I found Sarah busy at work. She had music on and was bouncing around industriously to the beat. For some reason Sarah had a taste for really weird hippie trance music, not the charty sanitised versions, the proper kind made by faceless backpacking superstars with names like like Ananji or Nirvana. Seeing me come in she smiled, dropped what she was doing, and trotted over to join me. Grabbed me she pulled me in and reflexively my arms slipped around her, my hands falling flat against the small of her back.\n\n\"I'm so glad you're back Ray.\" she said, \"I finished early so I thought i'd make us dinner.\"\n\nShe was just wearing tracksuit bottoms, mine I think actually, and a tee shirt. No bra, absolutely definitely no bra. The feeling of her against my body was an epiphany. It had never been like this before, or I don't know, maybe it had and I hadn't understood it consciously. I was acutely aware of her head on my shoulder and the softness of her breasts pressing against mine.\n\nHer breath, as she took it in, stretched and raised the circle of my arms ever so slightly and then, as she breathed out with a deep sigh of contentment, they dropped back down again. It seemed as if my body was spontaneously growing new nerve endings wherever it touched her in order to feel her more closely. If I had had any doubts about my sexual preference left then they could all be swept away now. I could feel my own breath changing and the hint of an aching warmth start to grow between my legs.\n\nThere was a hiss from the cooker as something boiled over. Sarah shrieked and rushed back over to tend to the pot so she didn't see the look on my face. I was shocked, elated, and deeply embarrassed. I only had a moment or two to pull myself together so I shouted over that I was going to take a shower and I made my escape.\n\nMy mind still dwelt on her while I showered, and yes, I masturbated. I closed my eyes as the warm water cascaded down over me and I could feel again her warm back under my palms as I had held her. Running my hands down over my breasts I stopped and circling my nipples with my fingertips briefly. Instead of the usual tingles of arousal I was familiar with when I was starting to turn myself on I found them already hypersensitive, triggering jolts of pleasure down my belly into my sex and making me gasp.\n\nI stroked on, lower, over my stomach until my fingers barely skimmed the edges of my pubic hair as they passed over the front of my hips then curved in to stroke the sensitive skin of my inner thighs. I changed direction to stroke back up toward my opening and pressed my palms hard against my thighs, forcing my legs wider apart until I felt the delicate peeling sensation of my lips separating.\n\nIn my mind Sarah was behind me, breasts pressed hard against my back and one cheek hot between my shoulder blades, it was her palms, not my own, which were stroking me. I lifted one hand to brace myself against the tiled wall but the other, the one I brought up to dip into myself, to gather fingers full of the slick liquid there and rub it onto my already swollen clit, was hers. \n\nI traced slow circles over my hood while my arousal continued to grow, occasionally stopping to dip back down and inside, more and more deeply until before long I was pumping two fingers into myself as far as they would go for a couple of strokes each time before returning to the top. Then as I felt the tension building I moved faster and more directly from side to side across my clit, applying more pressure until I pushed myself over the edge and I felt the muscles inside me clench sharply several times as I came. I was left out of breath, amazed by the intensity of the orgasm. Aftershocks were firing off little twitches down my legs leaving me unsteady.\n\nI finished showering, dressed in comfy things for the evening, and went looking for Sarah in the kitchen then in the lounge but she must have been in her room because I didn't find her. So I grabbed my bag from the hall and sat on the sofa unpacking a few bits. A few minutes later I heard her in the kitchen again but apparently she was done in there for a while because she joined me shortly afterwards. She was very flushed but I supposed it was warm by the stove and she had been working hard.\n\nWe fiddled about for a while trying to set up some of the apps on her new phone. Then I modelled my new jacket for her and she cooed in appreciation at how good it looked on me. Sarah rushed off to her room again and came back with another brightly wrapped parcel. Inside I found two pairs of dark trousers and two shirts which were almost in my usual style. They were better made than I would usually have bought for myself though, the feel of the material spoke volumes of its quality, and although quite androgynous they were tailored for a closer fit. When I tried them on they felt really good and looking in the mirror it was still me but somehow more so. I was quite humbled both by her generosity and by how carefully and well she had chosen for me. I think I was a little over the top with my thanks though because after a bit she told me to stop.\n\n\"Enough Ray. I'm saving a lot by not paying you any rent for a start so, unless you want to have that argument again, i'll spoil you if I want to. And I like dressing you Ray, you don't make the most of your looks.\" \n\nIt was true that I generally shopped with comfort and convenience in mind but looking at these new things I did kind of understand the point of their design. Then it was time for dinner, which was great, Sarah was a fantastic cook and she was playing to her strengths today. It was a simplified Christmas roast with chicken instead of turkey which meant there would be plenty for sandwiches the next day too.\n\n\"That was lovely Sarah thank you. I'm going to have to cut down on eating soon and spend some time in the gym. I feel like i've been constantly stuffed for days.\"\n\n\"Right, yeah you must have at least six ounces of body fat building up. Very unsightly.\" Sarah often made a big thing out of my slimness. At first I had thought she was doing that whole weight conscious putting yourself down thing but I didn't really have that feeling. She didn't go in for that sort of thing and she was comfortable in her body and in really good shape too, just inclined to be more rounded than me.\n\nWe chatted after dinner. She had had a bit of a difficult time at work over the previous few days. People needing social support often have it hard over Christmas and it sounded as if the strength of her empathy made it quite harrowing for her to be there for them. Then again I supposed that was also one of the things which made her so good at it. Empaths have some amazing skills and gain insights which I suppose i'll never be able to see but the poor things do suffer for it as well.\n\nFinally bedtime came and I didn't know whether I was longing for it or dreading it; the two emotions only seemed to be a knife's edge away from each other. When the moment arrived though and we said our goodnight the contact was different again. I couldn't pretend that for me it was chaste, purely between friends, any more. But nor was it tense and heated as I had found earlier. This time it was warm and loving and I could feel in it the way i'd grown to respect and value Sarah and her place in my life. I was sure now that i'd have liked it to mean more but at the same time I was happy that it radiated between us the care that we had grown to feel for each other. I knew that if that was what was on offer I could try to nurture and be happy with it.\n\nPart 9 - Different Worlds\n\nAmazingly we did manage to settle back into a fairly normal routine. I was sort of slightly horny most of the time at home and the pleasure of having Sarah around was wonderful and awful too. She was really great, she was really sweet, I was really happy to have her living with me in the flat, and our evenings in were still some of the most lovely times I could remember, but I was also terrified that she'd notice how badly I was lusting after her. This was frankly not the behaviour of a good friend who had, I periodically had to remind myself, made a personal commitment to providing the safe supportive family space which had been missing from so much of Sarah's life so far.\n\nI suppose the worst thing about the whole situation was that she was the one person in the world i'd most liked to have talked with about this massive change which was suddenly going on with me but I couldn't because all these feelings for her were in the way. And she was very perceptive Sarah, like proper weapons-grade perceptive, so I couldn't help wondering whether she'd end up seeing I was holding something big back and it would end up driving a barrier between us anyway. I was terribly afraid that she'd hate me if she found out how I liked her. I was a mess to be honest.\n\nIn recent days i'd been trying to see if I could find some other women attractive. Partly I suppose I was exploring myself, trying to learn more about how I reacted, what and who I liked. Another part of me was hoping that, oh please, this would help me to break this fixation by turning it into something I felt more broadly for women rather than only for Sarah. Over the last couple of weeks i'd been working on watching without being too blatant about it. Learning how to appreciate the women I saw while I was commuting or walking around town without being obvious and freaking them out. In my inner monologue I was referring to these as my ogling tactics.\n\nI would let my eyes slide, I would casually rest my gaze across the exit to the tube carriage so that everyone paraded neatly through my field of vision on their way out the door. I was gazing openly at the reflection of a woman in the window of a train one day, feeling quite secure that I was being circumspect until my gaze moved up and I saw her looking frankly back at me, a smile on her face and she gave me a little wave as she stood up and left the train. I guessed I wasn't her type or I suppose she might have come and spoken to me directly. It made me realise though that there were people around who had been playing this game for a lot longer than I had.\n\nWhat I was learning it seemed was that I did find women attractive in a direct way which I didn't feel for men but that at a visceral level this was really just window dressing and that it was missing something. I needed an emotional connection I suppose to turn that appreciation into desire.\n\nAngela had taken a week off straight after New Year to go skiing, in Austria somewhere I think (or possibly Bulgaria?), but she was back today. I'd not really thought about her over the previous week or so given that she had been away. Now that she was coming back though I thought about our past conversations and how open she had always been about her insights into who'd been unhappy in the office and needing support, who'd been having trouble at home, who'd been making eyes at who. I thought Sarah probably still had the edge on her with this kind of emotional connectivity ninja stuff but it was possible I was biased.\n\nI was walking from the tube to the office and I was excited to see her again. Aside from Sarah she was my closest friend at that time and now that I had this weird close distance thing going on with Sarah I was really looking forward to having a chat. I wasn't sure if I was quite ready to talk to Angela about everything, I was still a bit wary about sharing, maybe though, it depended how things went. She'd take it ok I thought, she didn't seem close-minded, but I guessed you could never be completely sure.",
        "I arrived fairly early at the office and buried myself in work for a while. It quickly became apparent that Miss Popular was block booked for the day so I intercepted her in the kitchen mid afternoon and suggested she come for a quick post work drink with me in the pub around the corner where I was meeting Sarah. This wasn't something which would usually happen as Sarah worked in a completely different part of town but she was in the area for some kind of training course for a couple of days so we had thought we would take the opportunity to break the routine and do something different.\n\nInitially I thought Angela was going to decline, and I wouldn't have blamed her really, she hadn't had a moment to sit down all day from what I could see. But actually she caught me by surprise and jumped on the chance which just went to show that I was no expert judge of human behaviour.\n\nBy the time we got to the pub I was really questioning whether this was a good idea although it was far too late to do anything about it now. I'd essentially put myself in a position where i still couldn't have a decent conversation with Angela and where she and Sarah were about to meet. I was definitely nervous and there was a strong temptation to fidget although I thought I was doing a reasonably good job of keeping it under control.\n\nWhen Sarah arrived Angela was very quick off the mark and leapt up to greet her. I supposed she must have seen her coming over but it was odd to see them essentially doing the introductions without me. Then Sarah surprised me completely by leaning down and kissing me on the cheek when she said hello. That was new. The soft flesh of her lips against me, her hand on my shoulder and her warm breath, collectively they all triggered a sensation of belonging, or security. For a good five minutes afterwards the nerves in my skin where her lips had brushed against me kept tingling and I had to make a conscious effort not to reach my fingers up to touch the spot. \n\n*********************************************************************************************************\n\nI was sitting with Ray in the pub after we'd finished for the day. It had been my first day back after my post-Christmas skiing trip and I was knackered what with trying to fit all the social catching up in around the, not inconsiderable, backlog of actual work. When she had suggested coming out I had been on the point of turning her down and then she had dropped in the fact that she was meeting up with Sarah too. Well of course how could I miss that opportunity.\n\nWe were having a drink while we waited for her housemate. I'd heard a little about Sarah but now that our paths were going to cross my curiosity was through the roof. I'd got a ridiculous mental image of her being a carbon copy of Ray, down to the same haircut, and I knew she did something in social work. Also I was kind of aware that she was connected to that mysterious first half of Ray's childhood about which she has never told me anything whatsoever, but that was about all I had. That last point had me almost as intrigued as Sarah herself. I had made some decent progress in peeling away a couple of layers of the Ray enigma as I had got to know her (and incidentally had learned more about apples along the way than any sane human being needs to know in one lifetime) but this next shell had been impervious so far.\n\nI looked across at her and she was as tense as I had ever seen her. I was acutely aware that letting these different parts of her life touch each other was a really big deal for Ray and I desperately didn't want to fuck it up. She had just sat down again after bringing over our three drinks (she had wanted to buy Sarah's at the same time rather than needlessly brave the queue at the bar again). Ray was fiddling with a beermat, twiddling it around in her fingers, and was obviously just about resisting the temptation to shred the whole thing onto the table, while she chatted about some kind of issue with one of the client accounts. I was pretending it was the most interesting thing in the world and ignoring her nervousness.\n\nI noticed she was checking me out like she always did which could have been creepy if she wasn't so sweet. Her eyes settled occasionally on my tits as a man's might but if I wasn't mistaken she was making more of an effort to be discreet about it than she usually did. Then I caught her staring into the mirror at the back of the bar and realised she was using it to get a good look at a dark haired woman who was leaning there waiting to order a drink. Something was definitely up, this kind of subtlety was not typical Ray at all.\n\nI'd lost track of what she was saying and ended up trying to figure out what was going on with the way she presented herself. She'd changed her hair, slightly shorter at the sides, slightly spikier on top. She was wearing the same general look she always did but somehow it had changed. Good though, it really showed off the way she worked out. Shit, was I ogling? My gaze snapped away across the room and landed on an absolutely stunning woman who had just come in through the door.\n\nShe couldn't have been be an inch over five feet tall, skin very pale and her thick chestnut hair curled down way below her shoulders, her figure was generously curvy. Even in understated workwear with a battered looking jacket she was drawing attention as she made her way across the room.\n\nThe odd thing though was that she had already spotted me and was looking right at me. I was astonished by the expression on her face. I couldn't tell whether it was anger or fear and if I hadn't had my back to the wall I don't think I would have been able to prevent myself from looking around to see what the hell was behind me. As it was I spent a moment wondering how I knew her and what I could possibly have done to trigger this reaction.\n\nThen she turned her gaze on Ray and her face softened as she smiled and bloody hell it was like the sun had risen inside the building. I swear it was all I could do to prevent my jaw from falling open and I hated to imagine the dose of radiation the people she was walking past must have absorbed. I put the pieces together and, oh wow, well that explained everything didn't it.\n\nTime to sort out the misunderstanding then. I stood up as she reached us so that she turned toward me. Again I was obviously unwelcome but at least now I knew why and I could do something about it. \n\n\"Hi you must be Sarah, it's nice to meet you.\" I rushed out quickly. \"I'm Angela, I'm a friend of Ray's from work. I can't stay long though, I have to get home to my boyfriend.\"\n\nI held out my hand, smiling, and there was a bit of a pause, just heading toward awkward, while she processed my bullet points and Ray looked up at us bemused. Then apparently Sarah reached a decision and as well as taking my hand she reeled me in for a quick squeeze which to my astonishment felt genuinely warm. She was obviously a hell of a lot more touchy feely than Ray and who knew maybe she even sensed an ally.\n\n\"Angela, good to meet you too. I hope we can be friends.\"\n\nSarah said hello to Ray, and received her own little dose of solar radiation in return. Then, resting her hand gently on Ray's shoulder as she did so, she leaned down to give her a little peck on the cheek, casually marking her territory. It was still mainly for my benefit I would imagine but half the bar watched her do it. I sat back down almost in shock for the second time in as many minutes. She took the third seat we'd kept aside for her. Ray seemed to have accidentally torn her beermat in half at some point.\n\nSarah went out of her way to be nice now. She shared a couple of amusing stories about her clients but sympathetically, without mockery, and I could see from her manner that she must be very good at her job. We finished our drinks and I let her encourage me to have another although I did make a point of messaging Andy to let him know about the delay.\n\nRay was looking a lot more relaxed now as the conversation settled. Hence it was my duty to relate my embarrassing stories about her to her friend. All I had really was her occasional tendency to start singing along, horribly out of tune, when she had her headphones on in the office. This on one memorable occasion, had resulted in two of the other devs dancing around behind her before she had noticed what was going on. That one went down a treat though as Ray wasn't too mortified and Sarah laughed appreciatively.\n\nAll told I was having a great time actually, they were really good company, and watching their body language together was seriously just fucking magnetic. It was a miracle there weren't people spontaneously tearing each other's clothes off all around the room. Before I knew it my drink was finished again and that was definitely my excuse to say goodbye this time. Leaving the bar I looked back and they were already shuffling their chairs closer, I was forgotten. I honestly couldn't have told you which of them made me more jealous - innocent Ray with that sweet discovery still ahead of her, or patient generous Sarah with the promise of what was to come.\n\nPart 10 - Warm bread\n\nIt was Thursday evening before I was forced to face up to how badly I had dropped the ball on this one. Mike was due to show up tomorrow afternoon and stay over for the Friday night so that he could have a full Saturday at the boat show at the ExCel. When he had first mentioned this back in the autumn I had planned to give him the spare room but seeing as the spare room was no longer spare i'd sort of had this idea in the back of my head that he'd sleep on the sofa instead.\n\nAnd so it was that I came to be standing there in the living room looking at our sofa which, if I was feeling very optimistic and frankly I was not, was six feet long including the arms. I was contemplating Mike's height of about six foot two. There wasn't a chance he'd be able to sleep on that so I guessed i'd have to give him my bed and sleep out here myself.\n\nWhen Sarah got in I explained all this to her. She'd known Mike was coming up to London but I think she'd assumed he was going to be staying somewhere else given our conspicuous lack of space for him. I filled her in on my plan while we sat on said sofa. She was unconvinced.\n\n\"You'll barely be able to stretch out here yourself Ray, you're pretty tall.\"\n\nThis resulted in a little practical experimentation and it turned out i'd end up with either my feet or my head up on one of the arms and hence raised quite a distance above the rest of my body. This might be ok for watching an hour or so of telly but for actual sleeping it was a definite recipe for a restless night as well as aching muscles the next morning. As it turned out Sarah being quite a lot shorter than me fitted into the space snugly.\n\n\"Well,\" she said, looking up at me from where she was still lying there on her back, as cute as anything I had ever seen and testing the very limits of my self control.\n\n\"You'll never be able to sleep here. I've got a much better idea.\"\n\nI saw it coming, she was going to offer to sleep out here on the sofa instead of me. I queued up my words ready to turn her down. I could deal with a crappy night of sleep if I had to. \n\n\"It'll be much more comfortable for everyone if Mike takes my room and I sleep in with you.\" she went on.\n\nShe was so obviously pleased with the elegance of her solution and yet it was beyond doubt the single worst idea I had ever heard in my life. What transformed it from the mundane to the spectacular of course was that there was literally no way I could say no without insulting her on two entirely distinct levels.\n\n\"Brilliant.\" I heard myself say, \"That should work.\"\n\nI took an early finish from work the next day, picked Mike up from the station and brought him home. He was a big boy now and i'm sure he would have made it on his own but it was quite a trek across town to our place and if nothing else he'd have been bored. On the way I told him that he was borrowing Sarah's room for the night and he was kind of vaguely horrified that she was having to do that for him but I explained that Sarah hadn't had a problem with it at all. She seemed really pleased by the prospect in fact and if anything I actually thought being able to lend out her room for the weekend had made her feel more as if the flat itself was shared between both of us rather than it being mine and her just having a room in it.\n\nWhen we got in I gave him the tour and he dropped his bag off in his room. Sarah wasn't home yet so we sat around chatting for a while after that, then I heard the key in the door and in she came to say hello. I did the introductions and then let them talk and start to get to know each other. From what I could see this largely consisted of Mike enthusing about the farm, a subject on which he was very confident and happy, and Sarah prompting him on with questions.\n\nThis seemed to be how Sarah got to know people. As far as I could tell the subject matter to begin with wasn't really that important it was more about learning how to have a conversation with that particular person and then sorting out the details of what you wanted to talk about later. I left them to it and and went to make some cups of tea.\n\nI was away no more than five minutes I'm sure but somehow by the time I got back they were already partway through The Great Tale of the Time Ray Kicked Tom Rigby's Front Teeth Out. Look it could have happened to anyone it was an accident ok. We were both wearing the equipment but he turned his head at exactly the wrong moment and my heel was headed in precisely the wrong direction at the time and so it hit him in the mouth. Yes he was wearing a mouthguard but it didn't seem to help much, maybe it wasn't fitted very well but they just snapped off inside it rather than him swallowing them or them flying off somewhere. Turns out you can't glue them back on though, the poor boy had to have some serious dentistry afterwards, and on a personal level i've never felt as comfortable with that particular kick since.\n\nThe two of them seemed to have a whale of a time all evening as Sarah winkled out more and more information about me. I was just happy to see them getting on well, so I was pretty much content to stick around for the ride, adding a bit of detail here and there and occasionally correcting his more unreasonable exaggerations. \n\nAfter a dinner at the local Italian (Mike had insisted he would treat us while he was staying) it was time for an early night. We'd had a few drinks with our meal and they brought us free grappa with the bill too so we were all sleepy. The other two took their turns in the bathroom first so when I got into my room Sarah was already tucked up on one side of the bed. I'd assumed she would turn away while I got changed but she was faced toward me, eyes glittering in the semi-darkness, and showed no sign of doing so. It was awkward but sensual being watched as I stripped off my top, the chill of the air doing little to make my nipples any harder than they already were. I put on the huge tee-shirt I was sleeping in and then stripped off my lower half but left my knickers on. I slipped into bed and straight into Sarah's warm enthusiastic hug.\n\n\"Goodnight Sarah.\" I whispered\n\n\"Goodnight Ray.\"\n\nBut today neither of us had to go anywhere and neither of us made the first move to finish the hug so we stayed like that. I was so turned on it seemed seriously possible for a short while that my arousal was going to keep building and building until I came, silently and motionless in her arms, but eventually it died back to a lower less insistent throb and I drifted off to sleep in previously unimaginable luxury with my arms still around her and her holding me.\n\nI woke early in the morning. I'd turned in the night and I was facing away from Sarah but she had snuggled up against my back and thrown an arm around my waist. This was a different kind of comfort, and I felt cosy and relaxed. There was the heady intimate scent all around me of the warm healthy woman sharing my bed with me. I supposed I had been only a few weeks old when I last experienced that. There are scents like warm bread which are inherently comforting and this was the same. I could probably have lain there forever if I hadn't heard the sound of the shower in the distance letting me know Mike was up and I should go and attend to my duties as host.\n\nPart 11 - Crisis Management\n\nI couldn't forget the feeling of sleeping next to her, of waking up with her. Throughout the following week each night I lay there in the dark and imagined she was there beside me. Then on the Thursday night as we were about to go to bed Sarah announced that she had left her window open by mistake and it was far too cold in her room so she was going to sleep in with me. \n\nOnce again I got to fall asleep in her arms and once again I woke up beside her but this time on the Friday morning I found it was me who had snuggled up against Sarah's back in the night. Her top had ridden up somehow too and as I woke I gradually realise that my right hand was cupped over one of her breasts. As I drew my hand away slowly I felt her nipple was hard and as it dragged across my hand, from heel of thumb to fingertip, she moaned softly in her sleep. Just hearing it made me moisten and the thought that I was, even if inadvertently, the cause of that wonderful sound was torture. I couldn't go on like this.\n\nHaving decided something needed to happen the next step was obviously to solicit the advice of an expert in human relations.\n\n\"Angela I need someone to talk to. Can you spare time to go for a coffee?\"\n\n\"Sorry Ray.\" she said looking stressed out.\n\n\"It's one thing after another all day today, can we call it another time?\"\n\nThis really didn't work for me.\n\n\"Is there anything you can cancel?\" I found myself saying.\n\nShe looked up abruptly and for a split second I thought i'd pushed it too far, assumed I could ask more of her than she was willing to give, but she stared at my face for a second or two and whatever she saw there made her decision for her. Right away she segued smoothly into action hero mode.\n\n\"Give me fifteen minutes to put some stuff on hold and i'll see you outside.\"\n\nWhen I suggested coffee I had assumed I was talking about our usual late morning slot and I had been kind of relying on the next couple of hours to put my thoughts in order. So although it was a long quarter of an hour it was somehow far too short as well. Almost before I knew it I saw her shoot past my desk with her coat on and, to preserve the vague illusion that she hadn't just rescheduled a meeting with her boss to go for coffee with a junior developer, I gave it a couple of minutes before I followed her out the door.\n\nWe'd got our routine now and that meant we both knew where we were going and we didn't talk in transit. I had called the event so I queued to buy the coffees and she staked out the table. It was a good time of day for table staking but a bad one for coffee queuing so it was a few minutes before I joined her.\n\n\"I'm sorry you had to, with your day so busy.\" I mumbled vaguely. \n\n\"That is totally fine, there's nothing that can't wait. What's on your mind Ray?\"\n\nI struggled with my thoughts for a moment longer still searching for the right loose end from which to start unravelling my troubles for her. I concluded that the only place to start was with Sarah. So I told her perhaps more than I had a right to. I told her Sarah didn't have any contact with her family and about how sad it had made me feel when she moved in, to see all of her in one place like that, and how I had made my promise to myself to provide a home for her, not just a room or a flat. I told her how happy we'd been. I told her how wonderful it was to come home and find Sarah there, or to come home and not find her there but to know that all I had to do was wait and she'd appear. I think I spent quite a while telling her in a great deal of detail all about how lovely Sarah was and I stopped when I noticed I was repeating myself.",
        "When I eventually looked up at her Angela was smiling at me as if I was a newborn chick. \n\n\"It's a good thing you're doing Ray. Ok the whole promise aspect is intense but I can see how that fits with you, you don't do anything by halves and it's very practical. I'm not seeing what the problem is though, by the sound of it it's all going really well.\"\n\nI couldn't even look at her. I gazed down at my untouched coffee and said in a quiet voice, \"The problem is that i'm gay.\"\n\n\"Hey, hey, focus.\" Angela's change of mood was obvious and extreme as she drummed her open hand against the table a couple of times making me look up. She spoke intensely, almost angrily. \n\n\"Don't ever say that. That is not a problem ok? You never have to say that.\"\n\nI started to lose my grip about then. I thought she'd have got it but she didn't understand. \n\n\"But it is.\" I heard the shaking in my voice, I saw my vision blur as the tears flooded into my eyes and I didn't think there was any stopping them.\n\n\"I just can't get her out of my head Angela. It's a big fucking problem.\"\n\nAngela held one of my hands while I dabbed at my eyes with a napkin. She went on in a gentler tone.\n\n\"Well now that's a whole different thing isn't it. Listen hon, you came to me for advice right? So pay me some attention. I'm not saying you don't have an issue to deal with here. But you're all wrong on how you're looking at it.\n\n\"Look i've shared houses with gay women, and straight men for that matter, when I was at university and it never caused any romantic issues. I had my boyfriends, they had their girlfriends and we shared good social lives. So take a step back, calm down, and have a think about this. What's causing your problem?\"\n\nSo I did what I was told, and it took a while as Angela sat there an image of inscrutable calm, but it made sense what she was saying. When the realisation reconciled itself in my mind I couldn't believe I hadn't figured it out for myself before now, but then again that was why I was sitting there talking to someone who was so much better at understanding these things than me wasn't it.\n\nI didn't think it necessarily made the situation any easier to resolve but at least it reframed it into terms which I understood and possibly even talk about more constructively. I'd got myself all tangled up and made things far more complicated in my head than they needed to be. Put simply the issue was not whether I was straight or gay or whatever. The issue was that whatever else I might be I was in love with Sarah.\n\nAngela obviously saw that I had got there.\n\n\"You've got to talk to her about it though hon, and soon. It's no use trying to keep everything bottled up like you are when you can see it isn't working. You need to put this all out in the open so that you can decide between the two of you how you are going to deal with it.\"\n\n\"She might not like me anymore though.\"\n\nWrapping actual words around the thought somehow made it more real than just thinking it and its new solidity was devastating.\n\n\"Then better to know sooner. But Ray, I think she'll surprise you, It'll all work out, ok?\"\n\nPart 12 - A Night of Theatre\n\nToday was not a good day to bring things to a head though. We'd got our tickets to the theatre and had both been looking forward to the night out since Christmas. I wasn't prepared to spoil that by springing my 'deep meaningful' just before we were due to go out. The pessimistic side of me was definitely seeing this evening as my last opportunity to create a perfect memory to treasure in the future.\n\nSarah loved the theatre and since I had given her the tickets at Christmas she had been increasingly excited about it and obsessively perfecting her plans. I'd taken an early afternoon at her insistence, so that we could be ready to go out on time without hurrying, and when I got out of the bath I found she had left my attire for the evening on the bed. The clothes were gorgeous, my Sarah had chosen them so well. Slacks in charcoal, a white shirt patterned in dark purple with a geometric design, a jacket to match. They were men's styles but tailored to a feminine fit highlighting my shape. The amethyst cufflinks took me some time to figure out, i'm no Sean Connery.\n\nI walked out of my room into the living room and she was already there waiting, a vision of beauty. Her dress was dark burgundy, a little above the knee, and it hugged her so closely she surely didn't have anything on underneath. She wasn't dressed so much as she was a naked woman in clothes. She stepped to me and smoothed my jacket with her hand.\n\n\"Do I look ok?\" I asked anxiously, \"It must make me look like a man.\"\n\n\"You don't look at all like a man, I wouldn't want you to look like a man.\" she replied, \"You look perfect.\"\n\nThen the taxi was there, and we had early seats at a restaurant in Soho which had once been a pub and was now filled with tiny candlelit tables, handwritten menus, and old dark oak church pews instead of chairs. When we arrived Sarah gave the waiter the details of our tickets so that he could make sure we left in time. I wish I could tell you what we ate. When we did leave to walk to the theatre she put her arm through mine as we did so, as if that was just the way it was meant to be.\n\nThe play was by Tom Stoppard. It was funny and thoughtful and probably far deeper than I appreciated. I can't recall at what point I noticed that Sarah was holding my hand. Afterwards, arm in arm again, we walked through the evening crowd the few hundred metres down to the Strand where we flagged down a taxi. And I thought at that moment that it couldn't have been a more perfect evening.\n\nI made coffee when we got in. It wasn't exactly going to help us sleep but there was something about an evening like that which demanded coffee at its close. I brought it to her in the living room and we sat together. She'd put some music on, instrumental and very old, quiet but just loud enough to cover the sound of the occasional car still passing on the street outside.\n\nI finished my coffee and put the mug down on the table. Somewhere in the background the music was still playing but I was hardly aware of it. I was still looking at her and feeling her warmth pressed gloriously against me as she leant into me on the sofa. I didn't want to break the mood. It would have been so easy to have stayed there, to keep to the way we were, drift off and wake up in the morning with her still there resting back into me again. But we were both here now and I realised the time had come, I needed to say something even if it did feel as if I was ending the world. \n\n\"Sarah,\" I said very quietly, \"You know i'm gay right?\"\n\nI felt her tense up and a wave of trepidation rose in me. Then she looked back at me, smiled and gave a little rapid nod which was so insanely sweet I could hardly stand it and I felt the tiny prickle of tears start in the corners of my eyes. The tension in me broke as suddenly as it had begun. I sagged in relief that she was apparently not going to get up and walk away but I was left nonetheless feeling more than a little deflated. I looked away from her across the room. \n\n\"Everyone seems to have figured it out before me.\"\n\nShe reached up and held her palm against my cheek, turning me back to face her again. Her face had changed and I saw concern, gentle amusement and something else. It looked like hope. \n\n\"Hey it's ok Ray there's nothing wrong with that.\" she let her hand stroke down my face and come to rest on my shoulder, \"We all learn about ourselves at the right time. It's different for everyone.\"\n\nI kept talking around the issue, \"I suppose for me the right time only came recently then. It's been a bit hard to process. I'd kind of assumed that sex would be something which came later for me, or even not at all, but now i'm finding I really want something to happen and I don't know what to do about it.\"\n\n\"Well the first thing might be to find someone you cared for and see if she might feel the same way too.\" \n\nHer eyes were fixed on me, scanning my face intently for whatever signals she might have been able to pick up in my changing expression. The look on her face was complex, very intense, up to that point in time one of my favourite looks for her. My heart sang out at the sight of her and a deep pulse of desire low in my belly echoed back its own insistent beat. I squirmed slightly where I sat and feel that pulse transform into a sliding moistness between my legs.\n\n\"Have you then Ray?\" She went on slowly, \"Have you found a girl you care for?\"\n\nI looked down at her, my best friend, all warm and comfortable below me. \n\n\"I have.\" I stammered. I could hardly bear to keep my eyes on her but I utterly refused to look away again. So I basked in her gaze and waited for immolation.\n\n\"Is it me Ray?\"\n\nAnd what choice did I have but to nod.\n\n\"Good.\" she whispered, and she was so close now that I felt her breath on my face and smell the way it was perfumed by the coffee and that deeper sweeter scent which was just her. Inhaling her felt like drawing a mild electric current down through my throat and into my chest. My heart was beating so hard I heard the blood rushing in my ears and felt it pulsing below my skin.\n\n\"We can care for each other then.\" I heard her say. And I felt her hand on the back of my head, her fingers in my hair. For a moment I thought she was pulling me toward her but then I realised it was me, I was lowering my head and helpless to stop. All I could manage was open my mouth slightly so that when we finally made contact my lower lip slipped between hers and she sucked on it gently as we kissed.\n\nI closed my eyes then and was suspended in a void where there was nothing other than her mouth on mine. The soft warm wetness of it as she caressed me. I felt the tip of her tongue as she ran it in between my lips and I let her in. It was like a whole new form of communication, a delicate exchange of exquisite little promises in each lick and suck and probe and each slip of wet surface across wet surface. I started to notice her hands moving purposefully between us, she was unbuttoning my shirt. \n\nThe kiss broke. I looked at her in shock. My mouth moved. I was trying to speak but I couldn't decide where to begin. She wanted me, she didn't just accept me, she wanted me. I burst into tears.\n\n\"I'm so sorry,\" I said, \"I thought I was going to lose you.\"\n\n\"It's ok,\" she replied, wiping the tears from my cheeks gently and kissing me on the nose, \"That really isn't going to happen. I've been waiting for you. I've been in love with you for ages.\"\n\nHer hands were inside my shirt now stroking me and sending tremors of pleasure through me. She leant in and kissed me again and her hands found my small breasts. She teased my nipples with her fingers and the little bolts of desire made my breath catch and the tension between my legs felt hotter and the ache of need more acute. Then she turned to face me properly, lifting one leg over mine and the damp heat of her groin radiated through my trousers as she straddled my leg. She shuddered as she wrapped her legs around my thigh and deliberately rubbed herself against me and I started to get the message that she was feeling as needy as I was. She leant back and looked at me.\n\n\"Ray do you mind if we go to bed. These clothes are pretty but they're a bit uncomfortable now and they're starting to get in the way.\"\n\nSo we went to bed. Sarah stood up, pulled the straps of her dress off her shoulders and stepped out of it, leaving her completely naked in front of me. Her body was beautiful, her breasts hanging heavy on her chest with large very dark brown nipples, the shadow of dark hair between her thighs. She smiled at my stare then turned slowly to show herself off to me completely before she ran off out of the room.\n\nA couple of minutes later I walked into my bedroom with not a stitch on, skin starting to feel the cold already. The sidelight by the bed filled the room with a soft glow and there was Sarah hiding under the duvet and grinning, she lifted it, revealing herself again in all her glory and encouraging me in to join her.\n\n\"You're so beautiful Ray, and I really need a cuddle now please.\" she said.\n\nHow did she always know how to say the right thing, i'd been very apprehensive you see. I knew I loved Sarah, I knew now, amazingly, that she loved me, but I didn't know what she wanted from me. Well ok I had the gist I thought but when it came to specifics not so much. It had taken every bit of courage I was able to summon to walk in there naked in front of her. But somehow she understood, and she'd found something familiar, something we had done so many times.\n\nI slipped into bed beside her and we snuggled up closely against each other and kissed again. It was like our usual cuddles in a way but so different in others. Her breasts were pressed delightfully onto me and I felt her nipples pointing into my chest and her hands stroking up and down my back, I bravely reached my own hands down lower to hold the backs of her thighs and stroke the delicate flesh there with the tips of my fingers. The rising pangs between my own legs were like a thirst.\n\nSarah rolled us over so that she was on top of me, straddled my thigh again and pushed hers up between my legs, pressing hard into my cunt so that my lips parted and my wetness spread over her. I could feel her in turn, hot and damp against the front of my own leg and the rasp of her hair as she rubbed herself onto me. Her breasts loomed pendulous, beautifully rounded and pale. I reached my hands up to stroke them and feel their weight, she moaned in appreciation as I caressed them, delighting in the soft warmth of her skin. He large dark nipples were tight and erect against my palm. I was forced to let go though when she dipped her head down to my chest and sucked my own right nipple into her mouth, the soft wet heat triggering an intense growing expansion of pleasure so that I gasped and arched my head back involuntarily pushing my chest forward to insist that she continue.\n\nShe brought a hand up to toy with my other breast while she continued to suckle on me, her tongue flicking over the nipple so that I was reduced to making little \"Uh uh uh,\" sounds from the back of my throat. I felt the fingers of her free hand, delicate as a whisper, tracing patterns over my stomach, gradually lower and lower until they burrowed into the hair there. My legs spread wider without any conscious intervention on my part and my hips bucked up for her hand. She heeded their demand and slipped down further still until she was cupping my sex.\n\nLetting my nipple fall from her mouth she looked up at me smiling wickedly. I gazed back into her eyes. There were quakes running through my whole body as she squeezed me gently with her hand, flexing her fingers repeatedly to part my lips slightly then let them close again. I felt the liquid from me slick on her fingers and palm. My breath was coming in judders and pants.\n\n\"Sarah. Please.\" I said, as clearly as I could manage and she responded by dipping her middle two fingers into me and stroking them up so very slowly until after an aeon she was spreading my juices over my clit and my hitched gasps were turning into moans. She kept circling it over and over again as the waves of pleasure overwhelmed me and she held my gaze as she sucked my nipple back into her mouth and reached her free hand up to stroke the side of my face lovingly as I came for her.\n\nShuffling back up to lie next to me she put her arm around me, her hand sticky still where it had been in me, and planted tiny kisses onto my face and my forehead while I got my breath back.\n\n\"You ok my love?\"\n\nShe'd never called me that before; it was another indication if any was needed that our relationship had changed. By way of reply I rolled over to face her and put my mouth to hers giving her another long slow kiss, I was planning to do that a lot from now on.\n\nI moved a hand between us stroking her stomach, edging lower, feeling the raised mound covered with her hair.\n\n\"Touch me,\" she invited so I reached further, feeling her wetness, slipping fingers easily between her swollen lips and into her liquid warmth. The sense of intimacy, of connection as I carefully entered her delicate centre was almost unbearably wonderful and I felt the little jolts that were still running through my body after my recent orgasm start to grow more insistent again as my own arousal started to ramp back up.\n\nI dipped down to slide two fingers right up inside and curled them to apply pressure just where I liked it when I did this to myself, rubbing gently and steadily. She laid yet more little kisses at the corners of my mouth then looking at me through narrowed eyes she deliberately clenched the muscles inside herself around my fingers and pushed onto my hand with her hips forcing me into her. I opened my mouth and moaned at the sight and the feeling of it.\n\n\"Your thumb Ray.\"\n\nHe meaning was clear to me and I wet it where her juices covered my hand then nestled it into the top of her slit and pressed onto the raised bump of her clit. She rolled her hips up again, fucking my fingers and making my thumb slide hard over her. I got the idea and pushed back in counterpoint each time she thrust. I was leant up on my elbow beside her looking down at her, watching the delight on her face each time she pressed me into her, revelling in the rippling of her breasts as she moved and the flushing of her skin. Finally with three very long hard thrusts each accompanied by a deep guttural moan from low in her throat she came, her muscles clamping again around my fingers and a jet of liquid pouring out of her and over my palm. \n\nWhen she had recovered a little I slipped my fingers from her as gently as I could, delighting in the frictionless slide as I ran them up between her lips then, gathering her back into my arms, I pulled the duvet up over us. She sighed contentedly, drowsily. There was something I wanted to clarify in my head still though.\n\n\"So we're girlfriends now?\"\n\nSarah giggled and kissed me again, \"I hope so Ray, this isn't something i'd normally do with my landlord.\"\n\nI woke up curled around Sarah again with my face in her hair, she was snoring softly and my hand was draped around her waist. The scent of the bed this morning was as addictive as it had been yesterday but much more musky and exciting, sparking delightful reminders of the night before. I turned over onto my back leaving one arm pressed against her, not wanting to break that connection even for a moment. I felt so content, so exultant, delighted by her joy in me. She moved against me and I knew she was awake.\n\n\"Why me?\" I said and she rolled over to face me grabbing my arm to hold onto possessively, which was fine, it could be her arm now.\n\n\"I saw you before I realised who you were you know?\" she said seriously, \"And I said to myself 'Who is that beautiful girl? I'd like to get to know her.'\"\n\nShe snuggled in closer, resting her head on my chest, her hand reaching out to casually cup a breast.\n\n\"And then I didn't see you for ages, even though I looked and looked, and when I finally did see you again I had even come over to talk to you before I recognised you. And oh Ray, then I got to spend time with you and you turned out to be so much more than I had hoped.\"\n\nShe leant over further and sucked a nipple into her mouth again, at the same time reaching into to my crotch with one hand. I was wet and open with desire already and as her fingers entered me I twitched and bucked up. This time though she broke our contact and scooted down the bed to position herself between my legs. She kissed and nibbled the tender flesh on the inside of my thighs and I knew full well what she had planned, anticipatory explosions were already following the touch of her mouth on me. I could feel her breath now, brushing over my cunt and then the gliding of her tongue snaking out, running through my hair and teasing gently at my outer lips before hardening into a point and licking harder, separating me and releasing the flow of my juices. I wondered how I tasted to her, it must have been good as she wasted no time before pressing her face into me and pushing her tongue deep, wriggling wonderfully.",
        "\"Sarah.\" I said, It was all I could do, I needed some way to tell her, but I didn't have the words.\n\nShe seemed to understand and I felt the strong muscle pushing up through my lips, ever so slowly, tasting me, savoring me, curling around and over the raised bump of my clit. She wrapped her arms around my hips, pulled me hard toward her and wriggled her head, nestling her chin into me and wiping me over her face, the pressure as she did so a perfect contrast to the activity of her mouth. Her tongue slipped rapidly over me barely making contact at first and then by increments she increased the pressure and licked around either side, teasing me out to her and then flicking the rigid tip of her tongue feather light over the exposed super-sensitive nerve-rich surface. Even as my composure started to fail and I gave myself over to her some tiny compartmentalised section of my mind continued to take in the details, gather the information, determined that I would learn how to do this for my lover too.\n\nEndlessly rising ripples of pleasure undulated out from her mouth and through my body in wave after wave, each building on the last until they merged into a single overwhelming whole, the nervous equivalent of a hurricane. My fists were clenched around handfuls of the sheets, pinning me to the bed and Sarah's arms like shackles clamped her tight onto me, holding her in place so that she could focus on her work. I can't even describe the sounds I was making but they obviously made sense to Sarah as she used them to perfect her movements and push me inexorably past my capacity. When I came I don't think i passed out, it was only that all other sensory input was such a pale shadow of what she was doing to me that it was beneath my notice for a while.\n\nEventually hunger drove us from our bed, and after breakfast and showers it was also hunger of a sort which drove us back again. I learned to make love to Sarah with my mouth and what, to start with, I lacked in experience I think I made up for with my dedication to the task. That day and then next were centred around our mutual devotion both physically and emotionally.\n\nWhenever I looked around to see her near me, which was often, i'd feel all over again the wonderful sense of vertigo at the miracle of her. My heart in free fall and never wanting to land. We couldn't keep our hands off each other, not, to be honest, that we tried.\n\nWaking on the Monday, and disentangling myself from my lover despite her sleepy protests, I feared to leave her. I didn't want to consider a moment when I would turn around and find her missing. But strangely, walking from our home and out toward the station, I discovered it wasn't like that at all. In everything around me she was there still, an indivisible part of me now, in the different way she would have seen the same things I was seeing, in each unshared experience I would take back to her, the cat I met on someone's garden wall, the advert on the side of a bus for the play we'd seen.\n\nMaybe this was what it meant to say that someone was your world I thought - that everything I experienced now, and ever again, would be overlayed with, enriched by, interpreted through the filter of, the constant awareness of her.\n\nEpilogue - Goddess\n\nRay walked into the office at the same time she did every day. Then she smiled and her face was carved mahogany, her hair spun gold, her eyes shone so brightly that they left dead spots on my retinas. Corn sprung from the ground where her feet had touched it. \n\nThe three developers unfortunate enough to be caught in her line of sight as it tracked across the room were carbonised before they even knew anything was happening. The windows beyond them blew out. I didn't know whether to run from her or place my forehead to the ground in worship but it was academic anyway as I was frozen in place looking across the room at her, mind stilled as equally overwhelming waves of awe and terror washed over me.\n\n\"Hi everyone.\" she said and the sound was achingly sweet. Workstations around the room began to detonate one after another as the chips inside them tried and failed to resonate with her voice, the water in the cooler came to a boil, and the walls disintegrated. I could hear one of the survivors crying gently. I didn't think it was me.\n\nShe sat down at her desk and started to set up her laptop. A couple of other early birds around the room mumbled their good mornings. I spent a couple of minutes calming myself down and then strolled as casually as I could over to her desk.\n\n\"Fancy going for a coffee?\" I said with more confidence than I felt, trying to keep the tremor out of my voice.\n\nWe slipped out to the cafe around the corner. All the way there I was resisting asking her any questions. She wasn't making that easy as she kept trying to catch my eye but I had absolutely no intention of hearing anything until I could savour the experience in full. At last we were sat facing each other across the small table with our drinks steaming gently between us. Deferred gratification is all very well but it had outstayed its welcome now.\n\n\"Tell me.\"\n\nRay smiled wryly as she used the middle finger of one hand to toy with the foam on her latte, teasing it gently into peaks. I found I couldn't look away from those precise careful movements of her hand and a vivid flash of my imagination left me blushing. She looked up, \"Sarah and me, we are a couple now. We worked it out on Friday night, maybe Saturday morning, we were up very late.\"\n\nShe blushed in turn and I read between the lines.\n\n\"She says we should send you flowers, that you've been a good friend to us. It's true of course. I can't thank you enough for pushing me in the right direction.\"\n\nI was flattered, naturally, but realistic, \"Sarah is very generous, and of course i'm your friend and hers, but I think you'd always have worked it out between you in the end hon. She was never going to let you go without a fight.\"\n\nRay nodded, \"You're right, I think the plan was to keep on throwing herself at me more and more blatantly until I finally got the message. In fact I suppose that's basically what happened in the end.\"\n\n\"So what now?\"\n\n\"Well we're going to take some time off and go up to Somerset to do introductions, then probably a few days somewhere just the two of us, spend some time alone together for a while.\n\n\"After that?\" she shrugged, \"Really nothing changes, we come home, we go back to work. It's funny, on that level it all sounds so ordinary but at the same time it's going to be like living on a whole new planet.\"\n\nAnd that was really, I talked her into bringing Sarah around to our place for dinner with me and Andy once they got back, we finished our coffees. Then went back to the office so that everyone else could enjoy their day in the company of the happiest girl in the world. "
    ],
    "authorname": "Limentina",
    "tags": [
        "first time",
        "romance",
        "lesbian romance",
        "lesbian first time",
        "love story"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/hope-a-little-longer"
}