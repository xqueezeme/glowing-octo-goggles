{
    "title": "There and Back Again Ch. 093-094",
    "pages": [
        "Chapter Ninety-Three: The Wedding Planner \n\nI found Leli in her room when I knocked, and she let me in. \"So? How fare you and Alistair?\" \n\n\"Leli...I have to run to a meeting with the Arl, but I need a really big favour.\" I struggled to keep a sad-looking frown on my face, \n\nHer forehead wrinkled in a concerned expression. \"Anything, my friend. What would you have of me?\" \n\nI looked up at her from under my lashes, still fighting a grin. \"Do you think you could help me plan a wedding in only two days?\" \n\nShe hesitated for a moment, and when my grin broke through she squealed and hugged me enthusiastically. \n\nShe started babbling about the details, mostly to herself as far as I could tell. I told her we wanted to use the Chantry in the village, but had no other real plans. \n\n\"Do you trust me, Sierra?\" \n\n\"Of course, Leli, why?\" \n\n\"Please, let me do this. For you both. I will plan everything. You will love it, I promise. Don't lift a finger, yes?\" \n\n\"Okay, but...are you sure? That's a lot of work.\" \n\n\"Nonsense. It will be perfect. I will come get you when you need to meet with Revered Mother Hannah. Now go, go - I have work to do, and you must meet with Arl Eamon.\" \n\nI left her frantically writing lists for herself and headed down to Eamon's study. I was the last to arrive: Duncan; Aedan; Alistair; Teagan; Theron; a mage I remembered from the game, the emissary Pether, with the grizzled templar we'd seen the night before; Caron, the Dalish emissary; and Gorim, as the stand-in dwarven emissary had all beat me there. There was another man I didn't recognise, and he was introduced as Terrence. A group of former werewolves had apparently taken Aedan's advice, roughly armed themselves, and presented themselves at Redcliffe wishing to aid us against the Blight, and Terrence was their emissary. I wondered if he was the same werewolf who was the emissary in game if you sided with them against the Dalish, but it seemed rude to ask. \n\nI noticed Eamon had a brief, satisfied, smug grin when Alistair and I arrived separately, but it was quickly quashed when, as there were no seats left available, I sat in Alistair's lap instead. I had to look away to stop myself from giggling madly. \n\nWe talked Blight business first; Duncan had apparently had word that Riordan would be joining us within a few days, and between the Dalish, the former werewolves, Riordan, and a handful of mages and templars, Duncan set out patrol routes for each group to follow so we would have early warning if the horde moved. With everything that had changed since I'd come to Thedas, we had no idea how long we had until the Archdemon revealed itself. We hoped to buy the dwarves a month or two to train and mobilise. Caron, Terrence, and Pether assured us that they could have messages sent out right away to begin the patrols. \n\nOnce that was done, the elf, the mage, and the templar left, with Gorim following behind; the rest of us got comfortable to talk about the Landsmeet. \n\nEamon asked me to recap the events of the game, which I did. I tried to be sensitive to Theron's feelings, but I had to admit that I couldn't be sure if rescuing Anora from Howe was a trap. I explained my thinking - it was possible that Anora hoped that Howe and the Wardens would fight each other, leaving the survivor weak enough to have to make a deal with her. Theron flinched, but he didn't disagree that it was a possibility. We thought the unrest in the Alienage should be much less an issue, given the supplies and warning we'd smuggled to Valendrian; secretly I wondered if Anora had known her father planned to sell elves to slavers, in which case she might still give us a tip about problems in the Alienage. \n\nEamon decided he would send messages to any of the nobles he felt would be friendly to our cause - which was most of them, after the tales of Loghain abandoning the army in Ostagar had spread from those who'd escaped - and that we would march towards Denerim in a week. In the meantime, we would need to meet with the various emissaries, try to get everyone geared up as well as possible, and be ready to move. \n\nAnd get married. I giggled softly at the thought, earning myself a dirty glare from Eamon. \n\nWe all left Eamon in his study, and at a significant glance from me, everyone followed Alistair and I silently into the library, where all of the rest of our companions waited. Alistair took my hand, and we both turned to the group. \n\n\"Sierra and I would like to,\" he gulped, looked over at me for reassurance, and then continued, \"formally invite all of you to our wedding. The day after tomorrow, if at all possible.\" \n\nEveryone cheered and lined up for hugs and handshakes, much to both Alistair's and my embarrassment. I was nervous when Aedan approached me, but he swept me into a bear hug and his congratulations seemed sincere. At the same time, I noticed Zev lean in and whisper something to Alistair which made him blanch and nod seriously, and I guessed my almost-brother-in-law had just delivered a threat to his health if he hurt me. I couldn't help the giggle that escaped me, and Alistair shot me a dirty look as I snickered. \n\nLeliana, after hugs, grabbed Wynne, Solona, and Morrigan and began dragging the three mages out of the room, twittering about shopping; Aedan grabbed Alistair and Theron, and they wandered out discussing politics and the Landsmeet. I snagged Duncan as the rest of the companions wandered away, and he turned to look at me curiously. \n\n\"Yes, Sierra?\" \n\n\"Can I ask you a favour, Duncan?\" \n\n\"Of course, my dear. Anything.\" \n\n\"I was wondering...on Earth, in most weddings, the groom stands at the front, and the bride is escorted down the aisle by her father, who 'gives her away', as it were. The thing is, my father is dead, and I'd never even met him, so...\" \n\nI looked down, shuffling awkwardly, and waited; Duncan didn't reply. After a pregnant pause, I sighed. \n\n\"I'm sorry. It's not really the tradition here, I imagine; I shouldn't have asked. Don't wor-\" \n\nDuncan cut me off, putting his hand on my shoulder. I glanced up to see him smiling broadly at me, eyes suspiciously bright. \"I'm honoured you would ask me. I would love to.\" \n\nI grinned and hugged Duncan again, kissing his cheek as he harrumphed in embarrassment. \n\nThe next two days were a bit of a blur. Eamon was busy writing letters, leaving the rest of us alone, thankfully; Leliana rushed around doing Maker-knew-what, and I honestly didn't have it in me to ask. I didn't want her to think I didn't trust her. \n\nMother Hannah was more than happy to agree to marry us, especially when Theron spoke to her and admitted who he was and that he approved. I thought she might have been willing to do almost anything in return for the hope displayed on her face when she found out the King still lived, but agreed easily to keep the secret. \n\nWe planned the wedding for late in the afternoon, the day after next, and Leli assured me everything was set. We were to have a small reception in the Redcliffe tavern afterwards. Alistair and I both had fittings - what she thought she could accomplish in a little over a day, I wasn't sure, and I assured her that one of the dresses I already owned would be more than sufficient for the task, but she would hear nothing of it. \n\nI spent the first night wrapped in Alistair's ardent embrace, shouting his name to the skies. The second night, my last night as an unmarried woman, was different. \n\nAfter supper, Aedan and Theron came to claim Alistair and drag him away from the supper table. The other men in our party, even including Sten, followed, hooting and making jokes and lewd comments; it occurred to me to wonder if Redcliffe had a brothel. I went to object, but Aedan shot me a reassuring wink. Sighing, I sat back down. \n\n\"If he isn't sober by tomorrow afternoon, I'm going to kill you, brother.\" \n\nAedan just laughed. \n\nOnce the men were gone, Wynne, Leli, Morrigan, and Solona were left. I was briefly worried Leliana had planned some sort of embarrassing bachelorette party, but she had other plans. The five of us spent the evening drinking wine, telling stories, and laughing ourselves sick in the library. I had a pleasant buzz on, but not enough to give me a hangover come morning. We went back to Wynne's room and spent time doing each other's nails and braiding each other's hair; all it needed was a good pillow fight to be the most clich\u00e9 sleepover of all time. \n\nEach of the girls presented me with a piece of slinky lingerie, much to my embarrassment. I blushed crimson, to their delight. Even Morrigan joined in, telling stories of particularly hapless men she'd met in her travels, senseless in the face of her scantily-clad body. Solona told entirely implausible stories of Circle Tower love triangles and clandestine affairs, and we all laughed when Wynne tried to deny such a thing could happen. Leli regaled us with dramatic love stories from history. And of course, somehow we ended up talking about shoes...at length. \n\nAt Leliana's insistence, I shared her room; she'd decided to take seriously the Earth superstition about a groom seeing his bride on their wedding day. She woke me early, subjecting me to a long bath with various bath salts, a complete facial and manicure, and spent an eternity battling with my hair. She had tamed my curls to pile on my head, tendrils dropping down to frame my face. Somewhere in there, she also got herself ready. \n\nThen it was time. With my cloak on and pulled up to hide my face, we each carried a bag of things down to the Chantry in the village. Leli's was suspiciously large and bulky, though she hadn't let me look inside. Mother Hannah graciously allowed us the use of her study to change. Wynne had to join us to help me into the dress. Leliana allowed me a small snack - without comment about my habitually large appetite, though I had no doubt she knew I was a Grey Warden and hadn't admitted it - then I was ushered to the back of the Chantry and through an inconspicuous door. \n\nI stood, impatiently, in a tiny closet someone had hurriedly emptied out just for this occasion. I rolled my eyes at the necessity, but decided I'd brought it on myself when I allowed Leliana to be my wedding planner. She had skillfully drawn out all sorts of obscure information about weddings back on Earth since we'd left Orzammar, and was determined to follow as many of the traditions as possible. Protests that I wasn't that traditional had gone completely unheard. \n\nMy feet were starting to hurt in the ridiculous shoes the bard had picked out. I had never been a fan of heels back when I was just a girl, never mind now that I was travelling with a group of Grey Wardens and trying to help kill the Archdemon...but Leliana had insisted that since Alistair was so tall, I had to at least partially make up the difference. I sighed for probably the five-hundredth time. \n\n\"Leli, would you knock it off? That stinking train is fine. It's not like I'm not going to trip on it later; I don't think wrinkles are really the biggest problem with it.\" \n\nI wore a white dress, the whitest thing I'd seen in Ferelden, made of lace and silk. It had a tight bodice, and thick straps that just barely circled the tops of my arms. It lifted and separated in a way I hadn't expected from Fereldan undergarments, and gave me the appearance of much more impressive cleavage than I actually owned. It had boning to prop everything up, and I mostly didn't feel like I was going to have a major wardrobe malfunction. Mostly. The skirt was flowing, leading back to a train that was trailing behind me for several feet. And there was a veil, pinned in my hair though not covering my face, of some sort of diaphanous white material that flowed d0own past my waist. It had roses embroidered in white thread, which made me smile. \n\nI had absolutely no idea where Leliana could have come up with such a dress with only two days' notice. \n\nJust as she opened her mouth to snark back, a knock sounded on the door. \n\n\"Sierra? Look, I have my eyes covered, but could we talk for just a second?\" Alistair's voice sounded amused, but I could tell there was something else going on. \n\nI opened the door, to see him standing there, in his formal clothes, hand over his eyes. Leliana clucked disapprovingly, so I opened the door enough for her to see his impaired vision. \n\nAnd he looked gorgeous. Better than gorgeous. He wore a dark grey doublet and trousers over a white shirt, the closest you could get to a tuxedo in Thedas. It emphasized his broad shoulders and amazing biceps, his flat stomach and narrow hips, and I struggled not to drool. He was clean-shaven, for once, and someone had trimmed his hair back to the way it was in game - little spiky bit in front and all. \n\n\"What's wrong?\" \n\n\"No, nothing's wrong. I just, uh, wanted to check on you. See if you were okay.\" \n\n\"Of course I'm okay. Alistair, what's going on?\" \n\n\"I was just, uh, wondering. If you were nervous.\" \n\nI thought about it. I was happy, and there were little hyperactive butterflies careening around my insides, but it was joy, not fear. \n\n\"Not particularly, love. It's okay if you are though, I've heard that's normal.\" \n\n\"I'm not really, though. I just thought...maybe I should be. Aedan told me Fergus almost wet himself before he got married. Is there something wrong with me?\" \n\nI laughed. Sweet, helpless Alistair. I loved him even more at that moment than I had before. I stepped closer to him and pitched my voice low. \n\n\"I don't think so. I figure...nervousness is for people who might change their minds, or who aren't sure.\" I went up on tiptoes and ghosted the lightest of kisses across his lips. \"I would never change my mind, and I've never been more certain of anything in my life. Why would I be nervous?\" \n\nThe hand not currently covering his eyes reached out, unerringly, and found my cheek. He leaned down and kissed me again, slightly more firmly. \n\n\"Maker, I love you.\" \n\nI smiled. \"I love you too.\" \n\nLeliana hissed from behind me. \"That's all very sweet, but Alistair, get out of here! Maker, you men are like herding cats.\" \n\nI snickered at Leli stealing one of my lines, and Alistair let out an amused snort of his own. I snuck in one more kiss. \n\n\"I'll see you up there.\" Leliana grabbed me and dragged me back into the closet. I heard Alistair's steps recede, and sighed longingly. \n\nLeliana groaned. \"Sweet Andraste, even I'm going to be sick, you know. You two are ridiculous.\" Her smile was tolerant and amused, and I blushed and grinned. \n\n\"Sorry Leli.\" \n\nI heard the voice of one of the servants whispering Leliana's name, and she ducked around me in her own beautiful dress, with a last whispered warning of what to do. I nodded and practically had to shove her out. When I heard the music start, I couldn't help it. I knew Leliana would kill me, but I just had to see. Cracking the door, I saw Alistair and Aedan walk down the length of the Chantry. There weren't that many spectators, just a few people from Redcliffe Village, as well as Teagan, Theron, and the rest of our companions. I even noted Morrigan had donned a robe that mostly covered her breasts for the occasion, and was far more touched by the thoughtful gesture than I should be. \n\nThe men approached the altar to the strains of the first verse of \"A Thousand Years\" By Christina Perri - another love song my iPhone had taught Leliana while walking around Ferelden. It was yet another clich\u00e9 - I wondered how many thousands of weddings on Earth had used the song since the Twilight movies had come out - but it would be unique on Thedas, for certain, and I couldn't disappoint Leli by stopping her. \n\nI have died every day waiting for you. \n\nDarling don't be afraid, I have loved you, \n\nFor a thousand years. \n\nI'll love you for a thousand more. \n\nMy eyes tracked Alistair as he confidently walked and then stood, waiting for me. He was incredible, and I couldn't look away. I was overwhelmed by the love I felt at that moment, and I knew I was going to cry during the ceremony, not from fear or regret but pure happiness. Leliana started on the next verse of the song, and I finally flung open the door and exited my little closet. I locked eyes with Alistair, who appeared to be taking me in, open-mouthed in what I hoped was the good kind of amazement. I squared my shoulders, gripped my bouquet, grabbed onto Duncan's proffered arm with all of my strength, and walked towards the altar. \n\nThe music faded into the background as Duncan took my hand and placed it, firmly, in Alistair's. I didn't even notice the music, or the gleam in Aedan's eyes as he looked at us; I had eyes only for Alistair, and when he smiled at me, the world was finally right, just as it was meant to be. \n\nI didn't really hear a word of the service the Revered Mother gave, managing to follow along and repeat my lines somehow through luck alone. We had decided against writing our own vows, neither of us wanting to be embarrassed in front of everyone. \n\nWe were just about to exchange rings, beautiful golden bands bought in Redcliffe village, of all places, when the main door to the Chantry slammed open with a bang. Startled, I looked over my shoulder to see a very red-faced, angry Arl Eamon storming down the aisle towards us. \n\nChapter Ninety-Four: *Marriage Interruptus \n\nAlistair and I were just about to exchange rings, beautiful golden bands bought in Redcliffe village, of all places, when the main door to the Chantry slammed open with a bang. Startled, I looked over my shoulder to see a very red-faced, angry Arl Eamon storming down the aisle towards us. \n\nIn the moment of shock, Alistair took action, using my hand to pull me behind him and straightening up, drawing up his full height. His expression remained neutral, calm, but I could feel the tension rolling off him in waves. I looked to Aedan, who stepped up to stand shoulder to shoulder with Alistair. In the pews, the guests had all risen from their seats, faces turned to the furious noble. \n\n\"That is enough!\" Eamon shouted, pointing at Mother Hannah. \"Stop this farce at once.\" \n\n\"Your Grace, this is most irregular-\" Mother Hannah began, looking baffled. \n\nEamon cut her off, pointing at me instead. \"You!\" He turned to Alistair. \"I might have expected something like this from her, but I thought better of you. How dare you be so selfish? I have told you that Ferelden requires-\" \n\n\"Actually, Uncle, Ferelden will be just fine, thank you. This wedding was my idea. And it's probably the only un-selfless thing Alistair has ever done. I think we can forgive him one thing.\" Theron walked forward from the crowd, chiselled features pulled down into a wide frown. \n\n\"Cai-Theron, my boy, you don't seem to understand...the insult! Allowing the only daughter of Highever to wed a bastard...foregoing an alliance that could ensure the safety of your crown-\" \n\n\"And that's up to her and her family to decide, now isn't it? As her brother is standing beside her betrothed, I'm not seeing how the family can feel insulted. As for Alistair, he is my brother and I expect you to treat him as such. He is a Prince of Ferelden and my heir, and I will not hear that word applied to him from your lips again, am I clear?\" \n\nMy eyes went wide, and I looked between Alistair and Aedan; Aedan shrugged noncommittally, but from his profile, Alistair's expression was as dumbfounded as mine must have been. Since when is Alistair Cailan's heir? And why isn't Aedan surprised? Eamon looked, if anything, even more freaked out than Alistair and I. Which seemed ridiculous, given that I knew he'd forget Cailan in a heartbeat if he died, and put Alistair on the throne without a second's pause. Grasping bastard... \n\nEamon opened his mouth and stepped in it even worse. \"You would come into my home, and abuse my trust, my hospitality like this-\" ",
        "\"Careful, Uncle. Think hard before you continue that sentence, and perhaps remember who it is that saved your life, as well as who has the ability to take this home away from you. You may be Arl, for now, but you will remember who is King.\" \n\nSomehow, impossibly, Eamon's face became even more crimson, and he started looking distinctly unwell. He was sweating and breathing shallowly, his hands curled into fists and his mouth opening and closing like a fish as he considered what to say next. I worried briefly that he could be having a heart attack, but saw Wynne and Anders nearby looking unconcerned, so I relaxed. \n\n\"Your Majesty,\" he finally replied, tone cold. \"I apologise for overreaching. I shall leave you to your...\" he glanced dismissively at Alistair and me, \"entertainment.\" His response was formal enough to pass as polite, though the words were clearly meant derisively. He frowned at Theron and Aedan, shot Alistair and me one more dirty look, and then spun on his heel and marched out of the Chantry, letting the doors slam behind him. \n\nIn his wake, everyone looked at each other uncertainly, soft whispers barely heard from the front where I was standing. Alistair reached his hand back towards me, and I grabbed it and clung for dear life. I was so angry at Eamon. How dare he interrupt my wedding to call my husband a bastard? I struggled to contain my anger, to hold back a scream of rage. I swore to myself that if he ever did something to hurt Alistair like that again, I'd kill him myself. Theron appeared to be having similar thoughts. \n\n\"You okay?\" I asked Alistair, worried he'd be devastated by the vocal disapproval from his first father figure. \n\n\"You know what?\" He smiled at me and squeezed my hand. \"I really am. I'm fine.\" \n\nHis expression matched his words, though how it could be true was beyond me. Not knowing what to say, I just held onto his hand, a couple of tears of total aggravation gliding down my cheek. Alistair wiped them with the thumb of his free hand, smiling encouragement at me. \"It's going to be fine. I swear it.\" \n\nFinally Mother Hannah cleared her throat and clapped her hands, motioning for everyone to have a seat. \n\n\"Do you still wish to proceed?\" she asked Alistair and me, voice pitched low so as not to carry through the Chantry. Only Leli and Aedan would have been close enough to hear. \n\nWe both nodded without hesitation, and so she picked up as well as she could from where we left off. We finished exchanging rings, and I stared down at my hand in awe. I'd never thought I'd see that finger with a gold ring on it. A couple of tears escaped, and Alistair smiled in understanding. \n\nMother Hannah was talking again, and I struggled to keep up with her, but when she asked me a question, the answer came easily. \n\n\"I do.\" To my surprise, my voice was strong and carried throughout the small Chantry. \n\nWhen it was his turn, he winked at me, forever cheeky, and replied, \"Oh, I definitely do.\" \n\nA snicker passed through the guests, and then it was done. I heard the Revered Mother mutter something about kissing, and then his lips were finally on mine, his hands cupping my face as I just pressed my palms against the solid bulk of him. The kiss was neither short nor chaste, and my cheeks flushed as a cheerful roar went up among the witnesses when we finally, reluctantly pulled apart. Alistair wasn't even blushing, for once, and I smiled at his unexpected confidence. \n\nHe took my hand and we walked out of the Chantry together, me smiling like I'd never stop. Eamon was forgotten, a problem for another day; for today, I had Alistair at my side and a ring on my finger, and nothing else mattered. \n\nThat evening we had a small feast for our friends, and there was dancing. Leliana pinned my train up for me, and I took off the veil so I could dance. Leliana sang \"A Thousand Years\" again for me and Alistair to slow dance to together, and then some musicians she'd recruited from the village launched into more traditional Fereldan songs. I danced with Teagan, Tomas, Theron, Jowan, Aedan, and Zevran, and once each even with Sten, Anders, Faren, Bel, and Oghren - dancing with the dwarves was rather comical, especially when Oghren started making salacious comments about how their height put their heads right at my bosom - but mostly I clung to Alistair. Despite both being terrible dancers, we fit so well together that we didn't step on each other's toes and it felt perfect to be in his arms like that. \n\nLeliana and Solona danced with anyone who asked, including a couple of local men who were having a drink at the tavern when we arrived; Solona even danced once with Anders, which was sweet and sort of painful all at the same time. Morrigan refused to dance, and Wynne begged off as being too tired after one dance with Alistair. Secretly I wondered if he'd stepped on her foot. \n\nKaitlyn was there, in a pretty silk dress, which was not lost on Teagan, and the two of them spent almost as many dances as Alistair and I clinging together. I winked at both of them individually when I caught their eyes, and they both blushed, but kept on dancing. \n\nAt one point, when I was resting, slumped on a bench beside an equally exhausted Alistair, Leliana stopped the music and got everyone's attention. \n\n\"I thought this would be a good time for Sierra to showcase a talent that I don't think anyone here knows about, other than me, and I think I know the perfect way to do that.\" \n\nI raised my eyebrow, confused. What talent? She dragged me up to stand by her, and then explained. \n\n\"Sierra has an ability to remember music that rivals my own, and I have no doubt she will be able to manage this. I also think that our darling Alistair should know that his bride can sing.\" \n\nI blushed. She couldn't...she did. The initial strains of a song I knew all too well rang out. It took a bit of adjustment - string instruments just didn't sound like the electronic music I was familiar with, but which song she had chosen was plainly obvious - Serena Ryder's \"What I wouldn't do\". I grabbed her hand, pulling her to me. \n\n\"You had better stay here and sing with me,\" I growled at her, and she smiled and pulled out a small drum, nodding. \n\nAt first, I was quiet, and I'm sure few other than Alistair could hear me at all over Leliana's superior voice. Alistair's surprised look was followed by a pleased smile, and when Aedan and Zevran also grinned appreciatively, I gained confidence that was mirrored by my increasing volume. I couldn't project like Leliana - I'd never had voice training, and could only boast the ability to carry a tune, not wow a crowd - but it was enough, and the song was perfect. \n\nIf you should fall to pieces, \n\nYou know I'll pick them up. \n\nThere are so many reasons \n\nI'm never gonna get enough. \n\nIf you should leave this country, \n\nYou know I'll come to you, \n\nBecause you always love me. \n\nOh what I wouldn't do. \n\nI was swaying to the beat and smiling by the end, despite my early embarrassment, and Alistair's grin made it worth it. I barely noticed the applause, or the cheering as Alistair lifted me off my feet and kissed me. \n\nWe finally settled down to dinner; so many of us being Grey Wardens meant the food was plentiful, and we cleared the table without delay. There was a little bit of the Antivan wine Zevran knew I liked, and a small keg of ale from Maker-knew where, but no one (including Oghren, for a change) was drunk and it was a lovely meal. It was rather hard to eat without letting go of Alistair's hand, but we managed. \n\nAfter dinner, he stood beside me, and shouted to get everyone's attention. \n\n\"First, we would like to thank all of you for being here to celebrate with us. This wouldn't be happening without all of you helping, some more than others,\" he smiled and nodded his head to a blushing Leliana, \"and we wouldn't want to do this without all of you here. Second, we would like to wish you all a good night.\" He turned to me and smiled. \"I am a lucky man. I love you, Sierra.\" \n\nI stood up and kissed him, to the mixed sounds of cheering and gagging from the crowd. \n\n\"I'd like to echo my husband's sentiment about you all being here. I think every girl dreams of her wedding day, and mine was perfect, thanks to you. I'm the lucky one.\" I smiled up at Alistair, unshed tears pricking in my eyes. \"And I love you, Alistair. Forever.\" \n\nHis lips crushed mine, and he leaned down to scoop me up, fancy dress and all. I'd normally have squawked, but I wanted to leave as much as he did, and knew I'd be hampered by the silly train. He leaned me down to plant a kiss on each friend's cheek, and endured much back-slapping, and then we were out of there. We both stayed silent until we reached the rooms that had been prepared for us upstairs in the tavern. \n\nLeliana had struck again; the bed was again covered in rose petals - where had she found those, in the middle of a Blight? - and there were candles lit all around the room, giving off a lovely glow. A fire burned in the hearth, there was a covered tray that I guessed would be food, and a copper tub had been dragged in, with the enchanted rune I had been given in Orzammar sitting nearby, ready to provide hot water on demand. \n\nAlistair sat down on a chair by the fire, settling me in his lap, and I relaxed into his embrace. I sighed; it was nice to relax, not to be watched, even if it had been for a good reason. We sat silently, companionably, just enjoying the fire and the closeness. \n\nAfter a while I squirmed; the dress Leliana had produced as if by magic that morning was beautiful, but fashion required some sort of sacrifice, and that was comfort. The stitching in the bodice was tight, not even allowing for a breast band underneath, and my skin ached from its tight confinement. The stays were bone of some sort, and dug in to my ribs uncomfortably; the fabric was silk, but in places there was a lot of lace that was abominably itchy. \n\nSeeming to catch on to my discomfort, Alistair began silently unlacing the back of the dress. I grinned, knowing very few Fereldan noblewomen would allow their husbands to perform such a task, instead having a lady's maid to do it. I wondered briefly if he minded, but reasoned that if he did, he'd better get over it. I was no noblewoman, and with the exception of my wedding dress, would not normally need help to get undressed; I wasn't about to keep a lady's maid for such rare occasions. My husband would just have to learn to cope. \n\nHusband. That's a weird thought. I glanced at my left hand, where my simple gold band lay next to the beautiful diamond engagement ring Alistair had given me. I never thought I'd live to see the day. I smiled wistfully, wondering what I would have thought if a year ago, someone had told me I'd be married, and to a fairy-tale character at that. I'd have laughed, for sure. \n\nBy the time the thoughts had tumbled through my brain, Alistair had untied the final lacing, and suddenly the pressure on my ribcage and chest released. The dress fell forward slightly, baring the curve of my breasts to the room. He took the opportunity to stroke the skin, ever-so-softly, and I shivered at the touch. Suddenly his arms were around me, his breath warm in my ear. \n\n\"Cold, my Lady? I could get you a blanket.\" \n\n\"No thank you, my Prince.\" I grinned as he huffed and rolled his eyes. By mutual, unspoken consent, we were leaving the topic of his royalty until morning. I turned to face him. \"Besides, I can think of better things than a blanket to help me warm up.\" \n\nI waggled my eyebrows and he grinned before leaning in to capture my lips in a scorching kiss. His hands stroked my neck and shoulder, slowly releasing my upper half from the confines of my dress. When I was finally bare from the waist up, he kissed his way down to my chest, and I moaned as he devoured a nipple, sensitive from a day spent trussed in yards of irritating fabric. He had just a hint of stubble on his chin, and it scraped across my skin as he switched sides, subjecting my other breast to the same treatment. \n\nImpatient now, I struggled out of his lap, and he had to lift me up so I could stand. He scrambled to his feet, just in time to watch the dress finally fall past my waist, and I wiggled until it pooled at my feet. My underwear, some special useless lacy things Leliana had presented, soon followed. I kicked off the heels, stepped out of the puddle of cloth, and stood before him naked. I was rewarded by a soft groan as his gaze travelled my body; the look he gave me turned me on more than it should, and I popped one hip out to the side as I sauntered past him to the bed, making sure he got a good look at everything. \n\n\"You're overdressed, husband.\" I crawled up on the bed and reclined against the pillows, smiling seductively. He likes how I look? Might as well give him a show. \"You'd better hurry, or I will start without you.\" \n\nStirring from his abject staring, he blushed and tried to rush and undress, but I had already decided to make it more difficult for him. Making sure he was watching, I brought one hand up to my face and slowly, painstaking swirled my tongue around the tip of one finger. Locking my smile in place, hoping like hell I didn't blush, I traced the other fingers down my neck, over my chest, and then with the damp finger, began teasing my own erect nipple, while the other hand held my breast out slightly, as though offering it to him. He groaned and stopped undressing, face slack as he watched my hands. He'd managed to remove the doublet and vest overtop of his formal shirt, but little else, and after a few moments of allowing him to stare, I cleared my throat. Startled, he looked up. \n\n\"Better, but not quite there yet, my love.\" \n\nHe flushed and started unbuttoning his shirt, so I went back to tormenting him. I switched breasts, re-wetting my finger and rolling my nipple gently. Seeing his eyes widen with lust as he watched me was intoxicating, and I felt moisture between my thighs. With one hand still on my erect nipple, I allowed the other to explore lower, stroking across my belly to the hairless mound at the apex of my thighs. He seemed dazed, unable to tear his eyes away as my fingers gently massaged my own pubic area. I cleared my throat again, and he jumped and tore the shirt open, buttons popping off and spraying across the room. \n\nI giggled and he blushed before dropping the ruined shirt to the floor. His physique never failed to affect me, and I watched his own skin appear with anticipation. Once the shirt was gone, I could see the prominent bulge in the front of his trousers and I licked my lips. Taking my cue to advance my agenda of driving him mad, I spread my legs, embarrassed but too excited to stop now. I could smell my own arousal, and by his flaring nostrils, so could he. I traced a finger over my lower lips, finding myself soaked; I brought my finger up to my lips and licked at the moisture there. His strangled gasp made me grin wickedly, and I dropped my hand back down, now finally allowing my finger to penetrate into my damp folds. I explored slowly, at first, teasing myself, until I couldn't take it anymore and finally circled around my hard clit gently. I shuddered at the sensation and did it again. \n\nHe was panting now, desperately trying to free himself from his trousers, the laces of which of course had become knotted. His frustration and urgency sent a bolt of pleasure through me, and I groaned and dropped my head back onto the pillows as I pleasured myself slowly. I needed more, and reluctantly released my breast to allow my other hand to join the first. Continuing to torment my clit, I slid two fingers through the slippery folds, picking up some moisture before delving them deep inside my sheath. The pressure was divine, making me writhe, but yet left me wanting - it wasn't enough. It wasn't him. My lover, my husband...thinking that word made me cry out softly as I started thrusting my fingers in and out of my channel. \n\nI lifted my head just soon enough to finally see his pants drop to his ankles, and saw him trip in his hurry to shed the offending article of clothing. I watched through a haze as he eventually remembered to kick off his shoes and managed to free himself. His smalls took no time, and suddenly my naked, very aroused husband was crawling onto the bed between my knees. I watched as his face descended and then felt his tongue as it slipped in around my probing fingers, and I relented and withdrew my hands as he took over. \n\nHis tongue grazed the edge of my clit a few times before he switched to sucking in one of my inner lips and harassing it with his tongue instead. I gasped and arched my back as I felt two of his much bigger, longer fingers replace mine and curl forward, rubbing all the right places rhythmically with every thrust. I started to shake with desire, and screamed his name as he finally clamped his mouth over my clit and began sucking and flicking it. His other hand, out of nowhere, pinched my nipple, and I came. I flooded his mouth and his hand, thrashing a little but unable to move too far because of the fingers impaling me. He kept at my clit, prolonging my orgasm until I couldn't take it anymore and collapsed back, panting. \n\nHe eased his fingers out of me and crawled up, kissing my stomach and then my breast before he reached my head and leaned in to kiss me. I tried to follow him as he pulled away, and I pouted. \n\n\"You have been a very bad girl, and now I think it's time for payback.\" \n\nMy eyes widened as he lifted my legs to his shoulders; we'd never tried that position before! I felt the heat of his erection before I felt the pressure, and I wiggled my hips invitingly. He chuckled and shook his head, then proceeded to tease me with just the tip, running it along my length and pressing slightly against my too-sensitive clit. Normally he stayed away from there for a few minutes, at least, after an orgasm, to allow things to recover, but as he rubbed again and again against the little nub, it seemed this time would be different. \n\nI was too aroused for it to truly be painful, but it was definitely uncomfortable and I hissed. He kept at it, then leaned down to suck one of my inflamed nipples into his mouth, something else we usually avoided right after orgasm. To my surprise, despite my discomfort, I could feel the pressure rising in my pelvis which indicated another orgasm was building. He kept at it, ignoring my whining as he teased my opening and harassed clit and nipples both, and I spastically grabbed at the sheets under me. The pressure built, and suddenly the discomfort fled in favour of white-hot pleasure as I was rocked by another climax. \n\nI cried out again, fisting my hands in the sheets as it washed over me, and the next thing I knew Alistair was buried in me to the hilt, pounding into me mercilessly, not letting me relax after my peak. The angle allowed him to go deeper than he had ever before, and I'd never felt so completely filled, so totally owned by another. His hands were bruising my hips as he pulled me to meet his thrusts, and I could tell by his hoarse grunt that he was close. When he shouted and arched his back, feeling him spill inside me triggered another small orgasm that left me breathless. My legs slipped off his shoulders to fall on either side of his hips, my arms leaden at my sides, and I felt weak. I could barely move. \n\nSuddenly I felt something on my abused clit, and I opened my eyes to see he was still on top of me but had snaked a finger down between us to find my poor nub. I groaned and shifted my hips, only to realise that he was still hard, still buried inside my sheath, and pinning me in place. His finger was insistent and aggressive, stroking and teasing my pearl. \n\n\"No, not again. I can't.\" It was barely a whisper; finding my voice required too much effort. ",
        "His voice was husky with arousal. \"Yes, again. You can. You will.\" \n\nHe kept up, teasing my traitorous body until my clit hardened again. He kept whispering to me, calling me his wife, moaning my name, telling me he loved me, asking me to come for him, and reluctantly, agonisingly, I complied. I began to writhe, clenching his cock tightly inside me, as the pressure built one more time, and he kept encouraging me. He started thrusting into me again, slowly, deeply, and it added to the stress on my over-wrought clit. I began to sob, in pain, in bliss - I can't even tell which anymore - and he kissed my tears away, and I came again. I could feel my aching pelvic muscles clamp down on his length, feel the heat that indicated he'd climaxed as well, feel his breath pant on my skin as he groaned, and I laid, limp like an overcooked noodle. \n\nHe finally lifted off of me, shifting to the side to wrap himself around me, pulling up the blankets to cover us. I didn't even move other than to turn my head and press my face into his shoulder. I felt him kiss my forehead, and his fingers intertwined with mine. \n\n\"Love? Are you...\" \n\n\"If you ask me if I'm okay, I will beat you. Tomorrow, anyway - I'm too tired right now.\" \n\n\"I love you, my wife.\" \n\n\"And I you, husband. Now, if you don't mind, could we go to sleep?\" \n\nHe chuckled, and that warm rumble was the last sound I heard before slipping into unconsciousness."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-93-94"
}