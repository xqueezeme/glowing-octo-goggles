{
    "title": "All That Glitters Ch. 40",
    "pages": [
        "All That Glitters -- Ch 40\n\nAftermath, carnage in the Landstradt.\n\nAftermath of the raid on the Alliance. The Landstradt meets amid the turmoil.\n\n\u00a9 bigtddybr December 2021. This story 'All That Glitters - Ch 40' or the series 'All That Glitters' cannot be transferred to any other site besides Literotica.com in whole or in part without the prior authorizations in writing from the author and bigtddybr must be credited for this work.\n\nDue to the number of abbreviations, ship listings, and list of characters, in this story, I include a glossary that is now in a stand-alone chapter called 'All That Glitters: Notes'. Any and all information that you want or need to know about the series is included in Notes. It will be updated frequently simply by re-issuing the chapter to Literotica.\n\nThere is little attempt to explain the back story, so it is necessary to read previous chapters to fully understand where we are.\n\nAs before, I claim sole responsibility for the story line. This story is a fantasy, with no basis in reality. Any similarity that you may perceive to current events, people, or situations real or imaginary is completely unintended. Look no further than the story line for its intent and purpose.\n\nA big shout out to SaddleRider for all the help she has provided in editing. With her guidance, I'm making fewer and fewer errors, but she still finds them. If you find any errors still left in this chapter, they are mine.\n\nPlease rate and comment. But keep your comments respectful. If you rant and rave or are disrespectful in your commentary, it will be deleted.\n\n'Nuff said...enjoy.\n\nAdenomere Three Estate, Planet Adenomere, Adenomere System, 182 Light Years from Terra\n\nPeotre Adenomere was furious. His son Adolphus was recovering from a high intensity stun gun shot that he had received during the raid several hours earlier. The doctor had assured him that Adolphus would be all right but that he would continue to have severe headaches and nausea for several more days.\n\nPeotre wanted to beat his son senseless. He had been shocked to learn that his son had indiscriminately killed a dozen slaves in a fruitless attempt to stop the raid on their House by the Union. He knew his sons were a callous lot, however, he hadn't known they were this callous, especially Adolphus!\n\nYelling at the boy while still suffering from the stun effects had only caused his son to collapse, causing Peotre to issue a fitful string of obscenities that had caused David, Adolphus' PA, to fear for his Master's life.\n\nIn addition to all that, the micro-mainframe and its server was pretty much toast, so the estates computers were down. The tech assured them that the memory core itself was protected. All they needed to do was replace the fuses, highly expensive and difficult to get fuses. The tech had assured them that he could get them within 48hrs.\n\nTwo fucking days without computers! Peotre thought to himself, not daring to allow his mouth to open for fear of what he might say or do. For the price of the fuses, he could have purchased another micro-mainframe, however, he needed the memory of what was on that particular computer. He would purchase a second micro-mainframe and place it in a concealed location, just to ensure that he had continuous computer capability in the future.\n\nSeeing the old man's emotions, Peotre's remaining children tiptoed around their father for the rest of that day, staying as far from his anger as they could...\n\nMHS Orenta, HD-137982 Unnamed Star System, Seventy Light Years from Terra\n\nThe ships of Task Force Adenomere finally all came together in the unnamed star system some eight hours after the end of the raid on Adenomere. It would take another four to six hours before many of the ships could jump again, headed back to the Naval bases on the two support planets.\n\nIn the meantime, triage was active, with people being moved around from ship to ship according to their needs. Those with serious needs, whether wounds or serious deprivation, were being moved to designated hospital ships. Those with serious psychological issues were being sent to the SSP Marin Green, which was being used as a makeshift hospital ship for psychological issues. Lesser injuries or deprivation were being dealt with on board the rescue ships as the patients were being prepared for transhipment to one of the Navy bases on the two support planets.\n\nThose with relatively mild issues, were being given good food to eat, new clothes for their bodies, soap so they could get clean, and a set of personal toiletries to see to their needs. This did remarkably more for their spirit than all the physical and medical support they received.\n\n************\n\nBesides having a hospital ship designated for each Task Force, OP Sandcastle also had two additional hospital ships designated for the rescued, and three additional hospital ships designated for the Navy/Marine injuries.\n\nOn the MHS Orenta, designated for the rescued, the patients were getting a little more of a shock than they expected by the presence of Pod-Drran medical staff.\n\n\"Hello there, young lady, and what do you call yourself?\" Hend-Ur asked the young woman on the gurney.\n\nThe woman looked up at the person in shock, taking in the greenish skin, the snake-like eyes, and the whitish hair that made a whisper of sound when it shook its head. \"What are you?\" she asked, confused.\n\n\"I am a nurse!\" Hend replied with obvious pride in his voice and a closed-mouth smile on his face. That only confused the poor girl even more.\n\n\"A nurse?\" she asked quietly, the confusion plainly showing on her face.\n\n\"Why yes, one of the best!\" Hend replied. \"However, that is not important. What is more important is to see to your needs. If you have been sent to this ship, it is because you are in a little more need than others.\n\n\"Your chart says that your name is Hanna. Do you remember your family name?\" Hend asked.\n\n\"Parker, Hanna Marie Parker,\" she replied, while Hend wrote it down.\n\n\"Do you know how old you are?\"\n\n\"I was born 21 April 2460; I think that makes me...\"\n\n\"Twenty-six,\" Hend informed her. \"Do you know how long you have been in the hands of the Alliance?\"\n\n\"I was taken when I was nineteen. I had just had my birthday the week before and we were going to another planet for university. There were eight of us from the same city on the ship, from Harn City on Green's World. We were going to Malton University on Terra. I have no idea what has happened to my friends,\" Hanna mused quietly, suddenly closing in on herself emotionally.\n\nHend could see that Hanna was starting to verge into shock, her memories beginning to overwhelm her.\n\n\"Hanna, would you reach up and touch your neck,\" Hend instructed softly.\n\nPerplexed, the woman did as she was told, shaky fingers touching her bare skin.\n\n\"What do you feel?\" Hend asked. He watched as the woman touched her neck. Realization of the truth slowly dawned on the woman, her eyes going wide. She started to sob, though there were no tears, her emaciated body unable to produce enough tears to cry with.\n\nHend took her other hand, holding it gently. Hanna looked at the hand gripping hers in surprise.\n\n\"Your hand is so warm,\" she marvelled with a hic-up.\n\nHend gave the distinctive Pod-Drran laugh. \"Despite the fact that our species looks like we might be reptilian, we are in fact mammalian and warm-blooded,\" Hend reassured her.\n\nJust then, another Pod-Drran appeared in front of Hanna.\n\n\"Hanna, this is my mate, Dr. Kayl-Ur. She is one of the finest and most famous doctors in the Union.\" Hend informed her with pride.\n\n\"Oh, hush now, mate,\" Dr. Kayl replied, though with a glimmer of pleasure in her eyes and an impish grin on her face.\n\nHanna took in a person who looked superficially like Nurse Hend. If you compared her to humans, she was definitely female as she had FOUR!, she had four breasts!!\n\nKayl noted where the woman was looking and her smile broadened a little. \"It is a pity that the Goddess did not see fit to grace humans with the same build as we Pod-Drran have,\" Kayl told the woman with a wink, which brought a shy smile from the woman.\n\nHanna could see the obvious love between these two. That reassured her more than anything else.\n\nKayl began to move through a series of tests on the woman, trying to determine her condition, which was not good. She was seriously emaciated. Her hair was dry and felt more like straw than human hair. Her eyes were dry. Kayl looked at the saline solution that was rigged to the woman and then started a flurry of instructions that Hend quickly and precisely wrote down.\n\nKayl did not like the look of the returns from the instruments. This woman was in serious trouble. She had apparently been subjected to deprivation and injuries for several years. Kayl was not sure if the woman would have survived for much longer in the care of the slavers.\n\nThe pair began to work on Hanna. They stripped her out of the hospital gown she was wearing and began to wash her body down. Kayl applied a moisturising cream to her skin as Hend worked some dry shampoo and conditioner into her hair.\n\nHend added a drip bag of nutrients that Kayl had ordered to the saline drip. It would help her body recover faster. Within an hour, Hanna was once again dressed in a hospital gown and laying somewhat more peacefully in her bed. Her skin looked much improved and her breathing, too, had improved, no longer being raspy, medication for that being fed in gaseous form through the nasal tubes she now wore.\n\n\"I want you to get as much sleep as you can over the next few days,\" Dr. Kayl instructed. \"Whatever you need, have the staff do it for you until I say otherwise. You need to keep all of your strength and to build up your body.\"\n\nHanna nodded absently to the instruction but she was already halfway into a dreamless sleep. It would be several days before she would be discharged from the hospital ship to the base hospital on Planet Varus, where they were eventually headed. In the meantime, three of her friends were found alive. The reunion would be bittersweet, as four others were still missing.\n\n************\n\nScenes like Hanna's, were being played out over many different hospital ships. The number of severely malnourished patients was staggering. On top of the deprivation, was the number of injuries that many had suffered, often without adequate medical care given after the fact.\n\nBrutal looking scars were the most common ailment followed closely by broken bones improperly set, however, they were not the only problems. Severe illness linked to malnourishment were also common, as was diminished mental acumen and physical strength that followed long years of malnourishment.\n\nIn several cases, the slavers had deliberately removed limbs from their slaves apparently for perceived slights. Death was not an uncommon subject among the rescued. The former slaves reported on many who had been killed for everything from attempting to run away, to cursing the masters under their breath.\n\nSuicide was also a common topic, now that they could no longer be punished by shocks from their slave collars for such thoughts. The medical staff was not only fighting against the physical injuries but also the psychological injuries the former slaves had suffered.\n\nThe staff documented everything; shocked by the list of injuries that the ex-slaves had suffered. As was being graphically indicated, the life of a slave on Alliance worlds was not pleasant.\n\nThe information was collected and sent forward to the IPPF on the respective support planets. While the IPPF did not believe they would ever be able to prosecute those involved, they opened files on all of them. One day those who had suffered under their hands would receive justice.\n\nNHS Frederick Banting, HD-137982 Unnamed Star System\n\nDr. Stephanie Bright was working on the NHS Frederick Banting. She was moving as swiftly as possible from one ex-slave to another, shocked at the condition these people were in.\n\nHer eyes locked onto a woman on a gurney, the back raised to place her in a rough sitting position. She looked like she was having problems breathing but as she got closer, she realized she was quietly crying.\n\n\"Are you OK?\" she asked the emaciated woman, who looked suspiciously familiar. \"What is your name?\" Stephanie asked.\n\n\"Kirstin, Kirstin Marlen,\" she replied in a voice that said she was barely in the room.\n\n\"Kirstin?\" Stephanie whispered, her heart racing. \"Kirstin, it's me, Stephanie, your cousin.\"\n\nKirstin looked at Stephanie in a confused manner, then a glimmer of recognition entered her eyes.\n\n\"Steph? OH GOD STEPH!\" Kirsten broke down sobbing, hugging Stephanie hard to herself, or as hard as she could.\n\nStephanie's dispassionate side as a doctor noted the lack of strength that Kirstin showed her in that hug, but she could care less about that. Stephanie had found her cousin. Death had given up one that it had claimed.\n\nOver the next few days many similar scenes would be played out in person and via internet connections. Death would lose many of those that had previously been placed in its care...many, but not all...\n\nHollern Prison, Adenomere City, Planet Adenomere, Adenomere System\n\nRaymond woke the day after his capture chained to a prison wall. He and the other five Marines had been ordered to exit their EVA suits and then were unceremoniously stripped naked before being stunned into unconsciousness.\n\nThe bruising on his body showed that he had not been treated kindly while being transported, unconscious, to wherever he was now. It would have been better if those that had captured them had stunned them after they had gotten them to the prison, rather than having to carry them.\n\nRaymond became aware of why he had woken. His lungs were having a hard time bringing air in and out. The reason was simple; he was chained in a spread eagle position near to but not touching a cement wall. The position, sometimes referred to as the 'crucifixion position', left him hanging down and his lungs were unable to function properly.\n\nRaymond remembered his training. He tensed his arm muscles to pull himself up some, he then planted his feet against the chains around his ankles. Pushing with his feet, he locked his legs muscles in place, then did the same with his core muscles. That made his body rigid, allowing him to breathe a little easier. At least he wouldn't suffocate now.\n\nRaymond took stock of his surroundings. He was in a cell with a single bright light. Other than the light, bare concrete walls were all that he could see. There was a small, grated drain near his feet.\n\nHe was chained to the wall opposite a metal door. The door had a grate in it, with a small, closed, metal window roughly head height, the window being closed from outside, which would allow the guards to occasionally look in. Raymond thought that there would be cameras in the room as well, however, he would not likely see them, as they could be quite small.\n\nRaymond found his feet were chained at the ankles approximately 12cm off the floor. The ceiling was several centimeters above his stretched out hands, which were chained at the wrists.\n\nThe cell was a rough cube, square in width and length, just long enough for a person to lay down in but not to stretch out his arms. It was higher in height, allowing his arms to be stretched above him. That was the extent of his accommodations.\n\nThey should be back soon, Raymond mused. They want me alive for now. Leaving me in this condition would be dangerous to most prisoners.\n\nHe had barely finished the thought when he heard a key rattling in the door.\n\nReally? A key? How old-fashioned, Raymond thought.\n\nTwo slaves came in. One placed a small, square table in the center of the room, not far from Raymond. The other placed a nicely appointed executive chair at the table, opposite of Raymond.\n\nA third slave came in with a tray of bread, cheese, meat, and fruits, along with a large carafe of water and two tumblers. Dew dripped carelessly down the outside of the carafe, showing that the water was cool. Raymond suddenly discovered he was thirsty.\n\nA short, fat, troll of a man walked into the cell. Wherever his skin was on display, all you could see was dark, thick hair. The man was ugly, plain and simple. He would scare the shit out of any child that saw him. The sight sent a shiver up Raymond's spine.\n\nRaymond couldn't tell how old he was, he simply thought, old...that could make him over a hundred if he was a Union citizen with access to Union medical knowledge, or anything over seventy-five if he did not have access to such knowledge. He suspected the latter.\n\nDespite all the hair on his body, the man was clean shaven. He gave Raymond a grimace of delight, seeing him bound against the wall. Raymond then realized why he was shaved. Under the thick beard he would most likely produce, his mouth would vanish and the prisoners would not be able to accurately determine his mood, something that the man obviously wanted them to figure out.\n\nThe man went to a panel on the wall and pressed a button. Raymond felt himself being lowered until his feet were firmly planted on the floor. That was the only relief he was given.\n\n\"Good-morning, Raymond. I am Inquisitor Harold. I will be asking you a few questions that you will answer to the best of your ability, if you know what is good for you,\" Harold stated.\n\n\"I assume that I am to call you Inquisitor Harold and not Harry?\" Raymond asked, showing no fear in the situation.\n\n\"Harry the Inquisitor, I like that,\" Harold replied, showing in his demeanor that he truly did not like it one bit. \"Then there is the obvious retort about my body hair. Don't worry, Raymond, I have heard all the comments about my body, from many of the people who were in your current situation. However, by the end of those sessions, the person I am speaking with, had a completely different view of me.\"\n\nRaymond ignored the comments. They were meant to frighten him, or at least to upset his state of mind. They did, but he wouldn't show it.\n\n\"Before we begin, Raymond, you might note that there is something around your neck,\" Harold told him.\n\nRaymond lowered his head. He instantly became aware of his neck touching a slave collar. He had felt it before but had not fully embraced it consciously. Now, its presence was manifest.\n\n\"I assume that is so you can use the shock system for your torture and interrogation?\" Raymond pondered.\n\n\"Torture and interrogation, Raymond, such harsh words. No, we will call it a question and answer session. I will be asking the questions. You, of course, will be answering them.\"\n\nRaymond knew what was coming. He had been in this situation before. It was never pleasant.\n\nHarold sat at the table and poured a tumbler of water. He selected a piece of cheese and meat and placed them on a single piece of bread. He took a rather dainty bite of the sandwich, deliberately chewing the piece in his mouth before swallowing, chasing it down with a little water.\n\nRaymond was suddenly acutely aware of how hungry and thirsty he was. He watched as Harold finished his sandwich and popped a grape into his mouth and swallowed.\n\n\"Such pleasant tastes, Raymond. If you are a good boy, and answer my questions, you will have some food and water. If not...\"\n\nRaymond said nothing. Deprivation of slaves was a common practice on the Alliance worlds. He had no doubt that he would be starved for at least a couple of days before he was given anything to eat or drink, whether or not he was cooperative...",
        "SSP Martin Green,, HD-137982 Unnamed Star System\n\nThe SSP Martin Green, Capt. Charles Byron commanding, was the designated psychological hospital ship. Those who had been diagnosed with severe mental fatigue, severe anxiety disorders, or more serious psychological disorders were sent to this ship. Three of the nine five-person triage teams on the ship were composed of members from Hollanders World, their empathic abilities coming to the fore to help those sent to the ship.\n\nOf the fifteen empaths, only three were GMEs and that is where the problem began. While the fifteen members were all more senior empaths, they did not have the power necessary to do all that they wanted, not even when working as a Congress of fifteen. As more people with anxiety disorders came to the ship, it became much more difficult for empaths and non-empaths alike to help them or even control them. Things were getting out of hand.\n\nAnother shuttle had landed in the bay with another sixty people for the Martin Green. However, these people were much worse off than any of the others currently on board. As soon as they boarded the Green, they began to break down. The crew swiftly moved them to the deck where all those with more severe disorders were being treated but it was no use.\n\nPanic began to set in, started by the newcomers and soon spreading to all those on the main deck. The three GMEs attempted to link with the other empaths to bring calm to the unruly patients but could not do so with the backlash of severe panic now occurring. Things were swiftly getting out of hand.\n\nThe large monitor on the wall suddenly lit, showing three beautiful women, one holding a strange multi-stringed instrument, the other two holding young babies in their arms. All the women were wearing long, silky looking gowns that had sleeves to their elbows.\n\nThe woman with the instrument began to play, her fingers expertly plucking the strings in a complex set of harmonies and reverberations. The sounds were pitched to catch the human mind and did just that, briefly stopping the build up of panic.\n\nThe woman began to sing, in a language that nobody could understand and wasn't being translated by their comps. Her voice was cultured, controlled, and hauntingly beautiful. Once more, the sounds of music momentarily caught the interests of those who were panicking.\n\nThen something profound happened. The empaths felt power on a scale they had never felt before. The woman on the screen was projecting peace, calm, and motherly love, which somehow seemed to fit in with the strange song she was singing.\n\nThe wave of calm, peace, and love swept over the patients and instantly comforted them, allowing the medical staff to do their thing and ensure that the patients were seen to.\n\nThe empaths noted that the woman playing was wearing a Council of Empath's medallion at her left breast. She also had a green armband with an unusual symbol, \u019f~\u019f, on her right sleeve near her elbow.\n\nThe woman began playing another song, this one was a children's lullaby from Anuura, which was promptly translated by the worker's comps. The soothing lullaby brought peace to all who heard it, including the two children held in the arms of the women behind the singer. The children tucked their heads into the breasts of the two women and promptly fell asleep.\n\nAll over the extended fleet, Junelliya's image was transmitted, her singing instantly bringing peace to those who needed it. She sang for over an hour, then silently smiled into the camera and wished everyone a pleasant dream. Instantly, those who were panicking and who had not yet fallen asleep, dropped into a dreamless sleep.\n\nThe empaths were shocked at the display. They had never seen its equal.\n\n\"We need that woman with us on this ship,\" one of the GMEs stated.\n\n\"I'm sure that statement is being made on a lot of different ships right now,\" Dr. Maya, GME and head of the group, quipped. \"Let's see to the needs of our patients while they are a little more controllable.\"\n\nMaya would look into the situation over the next few days but what she found left her with even more questions. First, the woman was broadcasting from the other side of the fleet, several thousand kilometers away from the Martin Green. Second, her broadcast had included all of the ships with panicking patients onboard. Maya knew of nobody who could seek out the minds of the panicking and calm them in such a manner, never mind from such a distance or spread out amongst other patients who did not need the intervention.\n\nSecond, was the immense amount of power that each of the empaths onboard the Martin Green and other ships had reported feeling. It tied in with what she herself had felt.\n\nLastly, sending only those who were panicking to sleep. That kind of precision was unheard of in such numbers, even in the ranks of the Councillors.\n\nMaya made some inquiries, the answers of which almost made her question what she was learning. The woman was Junelliya Herlan, a relatively new empath of immense power who only manifested her powers within the last two years!\n\nShe had to meet this woman but had no means to contact her as she didn't even know what ship she was on. Her address was linked to at least nine different ships, ships like The Wanderer, The Dewfall, The Persephone, The Trine, The Kologn, The Kennedy, The Churchill, The Betelgeuse, and The Orion.\n\nMaya recorded all that she found and sent a message to Councillor Petronellaya on Hollander's World. The Council of Empaths needed to know what was going on.\n\nAdenomere Main Estate, Planet Adenomere, Adenomere System\n\nTwo days after the raid, when it started becoming clear of what was the actual losses in slaves that the Alliance had suffered, Jaar Adenomere had called a meeting of all House Adenomere, even his brother Elliot was in this meeting despite being on the outs with most of the house.\n\n\"This has become a major issue for House Adenomere,\" Jaar began looking from the face of one brother to the other on the monitors. \"With the number of slaves the Alliance has lost, we have no means of gaining back the required manpower to keep our house afloat fiscally. We cannot buy from other houses as many are in the same predicament that we are in and those that do have slaves for sale are asking enormous prices for them.\n\n\"As such, I have called this meeting in order to solicit suggestions from the House leaders. If you have any thoughts on this issue, now is the time to speak,\" he finished, waiting for an answer and not sure what he was expecting.\n\n\"We need to cover our loss of manpower with money,\" Antonius Adenomere stated. He was Jaar's younger brother and head of the Second House of Adenomere. Of the three elder brothers, his house was the most fiscally assured. However, like the other elder brothers, his house too was in trouble. \"That means we need to go after those who have contracts with us that cannot be fulfilled now, especially those who have promised us slaves.\n\n\"House Gordon comes to mind. I know this will be an issue for your house, Jaar, considering that Marius is to wed Aurelia Gordon, however, business must come to the fore in this issue,\" Antonius ended.\n\nThings went back and forth for several minutes before Jaar looked at his youngest brother, Elliott, head of the Fourth House of Adenomere and currently not a favorite with Jaar as he was refusing to give the main house any tribute, thus contributing to the Adenomere problems as far as Jaar was concerned. \"Any thoughts, Elliott?\" he asked.\n\n\"You know my position in the fiscal management, or should I say mismanagement, of the House of Adenomere, Jaar. I will say this, this is a good opportunity for House Adenomere to follow my lead and start divesting itself of its heavy reliance on slave labour.\n\n\"I have done quite well with the reduced numbers that I maintain in comparison to the other Adenomere households and in fact, many other Alliance Houses. This situation is going to get much worse, starting with the price of slaves going up considerably more than it already is, and ending with a possible blockade by the Union. You would be wise to follow my lead and prepare for a better use of your manpower,\" Elliott finished.\n\n\"What makes you think that the Union will blockade us, Elliott?\" Peotre Adenomere, the head of the Third House of Adenomere, asked his brother.\n\n\"It is inevitable, brothers,\" Elliott started. \"The Union wants its citizens back. Rumour has it that they have taken more than 200,000 slaves. How many are actually Union citizens is still to be determined, though I am sure that the Union will let us know in a couple of days, or rather, let its citizens know.\n\n\"How many Union citizens are actually being held by the Alliance as slaves, brothers? I'm sure that the number is considerably more than what the Union has taken from us in this raid. Rumour leads me to believe somewhere upwards of 500,000.\n\n\"The Union will want those citizens back as well. If the slave issue is a problem now, what will happen when we lose even more? The only way that the Alliance will give up another substantial group of slaves, is from the kind of pressure that a blockade will bring. Nothing else will budge us,\" Elliot said.\n\nThe brothers said nothing, thinking long and hard, however, Elliot was right. Greater problems for the Alliance were on the horizon and House Adenomere was a major leader in the Landstradt, which would expect them to act...\n\nIn Orbit, Planet Varus, Cl\u00e9ment System, Forty-Eight Light Years from Terra\n\nAfter two days, the rescue ships began to jump into the respective support systems, sending their passengers down to the Navy bases on both planets. The media had already been advised of the raid and were at the shuttle pads in numbers as the rescued landed and Navy personnel helped them into carts that would take them further into the base.\n\nUnlike at most media scrums, when the media saw the state in which many of the slaves appeared, there was only silence from the watchers, the Navy had carefully chosen those they wanted the media to initially see.\n\nImages of the arriving rescued were flashed all over the Union. People were shocked at what they saw. Almost every former slave was emaciated. Some had uncared for wounds on their bodies, others were missing limbs, a few were missing an eye and had only a patch to cover what was missing, something that you only saw in hospitals in Union space, or on the poorest of planets.\n\nPublic opinion suddenly took a hard turn against the Alliance. Vengeance was on the lips of many of the citizens of the Union, war was a word that was being bandied about. The Senate suddenly found itself under immense pressure...\n\n************\n\nAudette Laquois was sitting on a couch in front of two reporters, the thin, young woman holding her child on her lap. Only two reporters were allowed in the room for her interview so as not to cause further trauma to the woman, their report intended for all networks. Audette was being asked a series of questions about what had happened to her since she had been taken by pirates. Other, similar interviews, were taking place in other locations on the base.\n\n\"Because I was young and considered good looking, I was chosen to be part of the 'breeding program', a program designed to breed more slaves. Most of those in the program consisted of more recently taken slaves, who were in much better condition than those who had been in the system for any amount of time.\n\n\"Breeders were fed much better than other slaves, and we were allowed access to our children at all times, until they reached age five. Then, they would be taken away from us,\" she told the reporters.\n\n\"The newer, better looking women, were bred by the house Masters themselves. Other women were usually bred by more senior slaves. Some women were chosen to be bred through artificial insemination; embryos with specific genes being placed in their wombs in order that certain traits could be passed on.\n\n\"I had been chosen for the breeding program not long after I arrived. I had already been in captivity for nine months by that time, having been kidnapped in late 2483. I was traded twice by the Great Houses until I arrived at the Gaetan Breeding Residence.\n\n\"I was personally bred, in one all-night session, by all of Emile Gaetan's four sons. I have no idea which son is actually the father of my Angeline. She was born nine months later and is now just a little over one year old. She is my first child and she is innocent of the acts of her fathers. She will remain with me and will never know her father. Sometime in the future, when she is much older, I will tell her what happened to me. I hope we will both be in a better situation then,\" she finished.\n\n\"What happens when it was discovered that you were pregnant?\" one of the reporters asked.\n\n\"Once it is determined that one is pregnant, she is moved into a barracks for pregnant women. This is a special barracks that has its own medical staff and a maternity ward.\n\n\"We have work to do there, menial work but not work that is physically intensive. We are fed much better than other slaves while we are in the program but much better is a relative term when you consider how little food the average slave received. The food in the breeding program is to ensure healthy babies, not necessarily healthy moms. We needed to be healthy enough to produce and breastfeed our children, nothing more.\n\n\"A woman is allowed to become pregnant every three years; the children being removed from her care after five years.\n\n\"After three pregnancies, and the third child is taken from her, a woman is returned to the general slave population, unless she garners the attention of one of the Masters. Then she may become the personal property of the Master and may become a house slave at the estate.\n\n\"Women who become the Mistress of a Master, can eventually earn their freedom. This is rare, but not so rare that it is unusual. Generally speaking, these women are the playthings of the Masters. They can be and are traded for a time as favours between friends, though they are usually never sold to another once they become the favourite of one Master.\n\n\"While it is degrading to be the mistress of one of the Masters, it is a coveted position among female slaves as the life of a mistress is infinitely better than the average slave,\" Audette finished.\n\nThere were more questions and she answered them as best she could. It was a bit of a catharsis for her, getting all of it off her chest. She would remain under the care of psychiatrists for years to come but her healing had begun this day...\n\nAdenomere Main Estate, Planet Adenomere, Adenomere System\n\nAurelia was trying to make sense of the issues that had occurred since the raid. She knew that all the Adenomere estates had been hit heavily by the raiders. However, they were not the only estates targeted. A little over 18,000 out of 32,000 slaves had been taken from the Adenomere estates. More were taken from other estates on the planet. Rumor had it that over 70,000 slaves had been taken from Planet Adenomere as a whole and many more had been taken from the other Alliance planets.\n\nShe had been working for over a day now, trying to piece together the numbers. But they were much too vague. Numbers between 100,000 to 400,000 were being bandied about. She needed to bring down those numbers to something more realistic. She worked hard to that end and finally thought she had most of the numbers down but those numbers were unsettling.\n\nHer best guess gave her numbers around 220,000 from all Alliance planets. Those numbers did not originate on Adenomere, but on New Hadria. She still had her Gordon family computer account and was able to use the central link from Adenomere City. Like all Great Houses, the Gordons kept a computer server on Adenomere, where the Landstradt often met. With her family account, she had access to that server. What shocked her the most was that almost half of all the slaves taken from the Gordon family estates were Union citizens, many recently taken by pirates.\n\nThe raids had targeted estates that had large numbers of Union citizens, their purported targets. Of course, slaves who were not Union citizens lined up to be freed, resulting in some Minor Houses being completely stripped of their slaves. Despite the fact that there were over a billion slaves on Adenomere alone, the loss of 70,000 slaves was having a serious effect on the economy of Adenomere.\n\nThe economies of many of the Great Families were now in jeopardy. Worse, was the fact that the Union had confiscated all Alliance family funds held in Union banks, intending to give those funds to the freed slaves as compensation. While the overall economy of the Alliance had taken a hit, the economies of many of the Great Families were in desperate affairs, including House Adenomere and House Gordon, as they could no longer access their off-planet resources.\n\nHouse Gordon had contracts to House Adenomere that they couldn't complete. While some of their clients were happy to accept the fact that there was little anyone could do, others were not so forgiving and demanding compensation.\n\nSeven of the Great Houses of the Landstradt were now in a serious situation, their status as Great Houses in doubt. Three of these were not necessarily House Adenomere supporters. They included House Gordon from New Hadria, House Pendar from Erden, and House Palay, from Planet Surdend. House Adenomere was using this incident to get back on those houses that had not supported it in the past. These three houses could lose their status as voting members of the Landstradt.\n\nHer father, Armstrong Gordon, was seeking to mend the rift between House Gordon and House Adenomere, which was why he had promoted the marriage between herself and Marius, hoping to cement an alliance between the houses.\n\nIt is probably too little too late for House Gordon, Aurelia thought.\n\nThe Adenomeres were pushing the most for compensation from other houses. Aurelia now understood why. The Adenomeres themselves were having serious money flow issues of late, even before the raids. This was principally due to the extravagant spending of the senior Adenomeres and the sons of each house, especially Jaar Adenomere and his son in the main branch of the family.\n\nThe only Adenomere house that was in the black was the Fourth House of Adenomere, run by Elliott Adenomere, which was the only house that refused to send tribute money to Jaar. He was a fiscal moderate and, while he had kept the family name, he had distanced his estate from the downward financial trend of the other Adenomere estates.\n\nWith her back door access to the Adenomere computers, Aurelia had watched as the Adenomeres had plotted and planned to take out the three rival Great Houses of the Landstradt that were having problems. Aurelia was sure that the pressure now being put on those three Great Houses, was payback by House Adenomere for their previous lack of support to the Adenomeres.\n\nShe wanted to look into Jaar's accounts but had to be very careful of when she did it. Lately, he had been on the computer at all hours. It would not be good for her to be digging around his accounts while he himself was doing business on the computer.\n\nShe would have to bide her time, acutely aware that her time was running out. The date of the next Landstradt had been moved up, due of course to the recent incident with the Union. Fortunately, the date for her wedding had also been pushed back, the effects of the Union raid disrupting things equally.\n\nEverything was in a state of flux at the moment while the Alliance tried to sort itself out. Aurelia needed to find all that she could fast, without being caught and, for her, time was swiftly running down, the next Landstradt was only days away...",
        "Hollern Prison, Adenomere City, Planet Adenomere, Adenomere System\n\nIt had been a few days since the interrogations had started. It seemed like it was more than a month but Raymond knew it was only maybe three or four days since he had been captured.\n\nHe had been subjected to many different indignities, including being beaten while hanging helplessly from his chains, being interrogated for many hours on end, his sleep was constantly interrupted when he was allowed to sleep, and he had to shit and piss while being chained up in the air, which meant it all landed below him. The stench was overwhelming.\n\nThis morning, the crew came to the door and almost gagged on the smell in the room. They immediately opened a fire hose and sprayed Raymond with the water on full. The strength of the spray was incredible, causing his body to be bruised from the powerful flow of water. Eventually, everything was flushed down the drain near his feet.\n\nWhile he was sore from the pounding of the water, he had to admit, it did smell better in his cell now...\n\nThe table and chair was brought back into the room, along with the traditional tray of bread, cheeses, meats, fruits, the carafe of water, and the two tumblers, one of which had yet to be used.\n\nRaymond had not been allowed food nor water since his arrival. He was hungry and thirsty.\n\nToday will be the day they will give me a little food and water, Raymond thought, I wonder how they will justify giving it to me...\n\nRaymond was well aware of what was happening during the interrogation process. He had been tortured before and had been given instruction on the various techniques being used at that time by the Confederation of Planets. It was obvious to him that Harold, at least, had been trained by the ex-torture masters of the Confederation.\n\nWorse, wasn't what was happening to him but to his team. Whenever a member of his team was being tortured, the small window was opened in the door to his cell, allowing him to hear all that was going on.\n\nHe was helpless while his subordinates were being beaten, zapped with electro-prods, shocked by their collars, or in the case of the women, raped repeatedly. One of the women had nearly lost her mind while being raped, her experience of being raped as a teenager coming to the fore. She had repeatedly called out for her mama, much to the amusement to the men who were raping her. Until the men made a serious mistake. Taking her current mental condition as a sign that she had been broken, they had unbound her.\n\nThey suddenly found out that even naked, a Marine was still a Marine. Of the six men that had been 'torturing' her, five had to be taken away by ambulance. However, the sixth had repeatedly zapped her with the electro-prod.\n\nThe Warden of the prison had been furious, cursing and swearing at the six men, calling them fools and worse.\n\n\"What the hell were you thinking when you unbound her?\" he had screamed at them. \"And what were you thinking, Adolphus, hitting her so frequently with the electro-prod? It will be a wonder if she survives! If she dies in our custody, things will not be pleasant for you.\n\n\"You all need to get out of here. You all need to find a believable reason for your injuries. If Inquisitor Harold finds out that you were here and that you have done this to one of his prisoners, he will have me and all of you in the cells beside them!\" he screamed.\n\n\"We can say that we were injured in a polo accident,\" one of the men responded.\n\n\"That won't work, Lucius,\" the voice of Adolphus replied. \"Fabian has Equinophobia, a fear of horses. He can't even go near a horse.\"\n\n\"You need to do something, Fabian has a broken leg, Lucius a broken arm. Aedan has three broken ribs. Caedmon has a broken jaw. Nathanial has a major concussion. He will be lucky if she didn't break his skull,\" the Warden shrilled at them. \"Whatever happens, if Inquisitor Harold asks, I am telling him the truth. Better you six hang alone in his cells than me along with you!\"\n\nRaymond had been proud of Sgt. Brianna Wilden. She had given a good accounting of herself when she had been released. He was saddened to discover that she might now be brain dead thanks to those fools. Multiple electro-prod shocks to the back of the head could cause severe damage. He prayed for his teammate and cursed that he was bound here helpless while all this was going on.\n\n************\n\nHarold was a patient Inquisitor. He knew how to break people down and get them to give in to all of his questions.\n\nRaymond knew the technique. Harold should start to ask important questions today, after having softened him up for the last five days now.\n\nHarold entered and sat at the table.\n\n\"Well Raymond, are you going to be a good boy and answer the questions I put to you?\" Harold asked.\n\n\"I have yet to refuse an answer to any of your questions, Inquisitor Harold,\" Raymond replied.\n\n\"Ah, Raymond, that answer is not technically correct, is it? While you have not refused to answer my questions, the answers you have been giving me are not the best answers you could give, are they Raymond?\"\n\nHarold pressed a button on his comp. Raymond was getting to hate seeing him press that button. Pain ran through his body. He knew the pain didn't really exist. It was a false pain projected through the stimulation of his brain stem; small electric shocks stimulated his brain into thinking that parts of his body were hurting.\n\nEven though he knew the pain wasn't real, in that there was no physical cause, it felt real to him. The electronic stimulation was as powerful as any physical pain stimulus but unlike physical pain, which diminished over time, this pain stimulus could be prolonged almost indefinitely.\n\nRaymond tried to run through the instructions he had been given so long ago, how to block the stimulus, how to take back control of his mind and body. But the number of shocks he had now received had taken much of the fight from him and Harold was an expert at using the collars. He knew just how much power to apply and where to apply it and knew just how long to prolong the pain stimulus, keeping Raymond on the cusp of pain for several long minutes.\n\nBecause of the constant shocks when he refused to answer questions or simply did not fully answer the questions to Harold's satisfaction, Raymond's brain was slowly being conditioned to answer the questions the interrogator was putting to Raymond, in the way that Harold wanted.\n\nHarold had been watching for telltale signs from his prisoner. He was seeing them now. Finally, Harold thought that Raymond was ready to really answer his questions. He just needed to confirm it...\n\n\"Why are you considered the best tactician the Navy has?\" Harold demanded.\n\n\"We have two eyes; however, it is difficult to look at two different things at the same time. Our eyes focus together on one object at a time,\" Raymond replied.\n\n\"Can you give me an answer that I might understand, instead of one that a Zen Monk might put forward,\" Harold requested, amusement tilting his voice.\n\n\"Once we make up our minds on something, it is difficult for one to change from the path we choose,\" Raymond answered. \"We make up all kinds of excuses to deal with change instead of dealing with reality.\n\n\"I have no such compulsion. I can change my view in an instant. Because of this, I can bend my plans when others would hold fast to theirs,\" Raymond told the Interrogator.\n\n\"I see, that means you are far more flexible than others when it comes to making changes on the fly?\" Harold mused.\n\n\"That is correct,\" Raymond assured him.\n\n\"So, your contingency planning must be exhaustive then,\" Harold wondered.\n\n\"So it seems. Many of those I work with question my methodology until we get into action,\" Raymond stated. \"Then, they see the benefit of being prepared before hand. Such planning is extensive and time consuming but leads to a likely series of events that can be calculated on the changes that occur during the event.\"\n\n\"Meaning what, precisely?\" Harold demanded.\n\n\"It means that as many contingencies as possible have been calculated but so too has flexibility to act been built into those contingencies. Those responsible have a lot more freedom to react under my guidance than under other planners,\" Raymond responded.\n\nHarold was getting to like the answers that Raymond was now providing...\n\nNS Dewfall, In Orbit Planet Varus, Cl\u00e9ment System\n\nCmdre. Liana Dostier sat in the Commanders Conference Room facing three 3D monitors, three days after the Task Forces had returned to their support bases. It had been six days since the raid.\n\nOn the left monitor was President Violla Serment, the President of Planet Varus, and FAdm. Robert Martin, commanding Navy Sector Fifteen, out of Marlin Naval Base on Planet Varus, present out of courtesy due to the fact that OP Sandcastle was operating out of their system. All of Dostier's ships were returning here after they dropped off their patients at the Naval base on the other support planet.\n\nOn the right was her boss, FAdm. Wilhelmina Holstern, commanding Navy Sector Twenty-Three, out of Clarren Naval Base on Planet Layette, with her aide-de-camp, Capt. Lindsey Cline.\n\nIn the center was President Wilford J. Holloway, the President of the Union, at the Presidential Compound on Terra. With him were Mnst. Charles Ronter, Union Minister of Foreign Affairs and the person in charge of the UDC, Sen. Jonathan Winslow, Head of the Union Military Oversight Committee, Adm. George Ramison, Chief of the Navy, Adm. Rolland Heist, Chief of Navy Intelligence, and Adm. James Hannison, JAG of the Navy. In the background, Liana could see Jason Canter, the President's Chief of Staff.\n\nAll three groups were live via ICS.\n\nSitting beside Dostier on her left was Captain Henadi Noor, commanding the NS Dewfall, with the Boatswain, MCPO Alexander Tach\u00e9 on her right.\n\n\"Mr. President,\" Dostier began, \"Madame President, Mnst. Ronter, Sen. Winslow, Senior Commanders, it is my duty to report the successes and failures of OP Sandcastle.\n\n\"First, we had a target of 180,000 citizens that we were aware of being illegally held by the Alliance of Planets as slaves. We were hoping to get fifty percent of that number out. We managed to successfully free 218,525 slaves, a full seventy-five percent of which or 163,894 were Union Citizens. That number is approximately ninety-one percent of our original objective.\n\n\"Those numbers did not come without cost. On Task Forces Erden, Gaetan, Surdend, and Vuelta, they had overwhelming superiority in orbit and managed to get more than their allocation of numbers out. Task Force Gaetan was actually the only raid to get all of its listed Union citizens out.\n\n\"Of those four, Task Force Vuelta suffered eight Marines injured, fortunately none too seriously.\n\n\"On Task Force New Hadria, they had numerical superiority, however, because of the previous altercation with The Wanderer, the Planetary Defence Force was more than determined to fight back. This resulted in eighteen of our ships seriously damaged, though none were put out of commission. However, in orbit, Task Force New Hadria suffered 118 casualties and 1,042 injured, some quite seriously.\n\n\"In atmosphere, eight civilian shuttles were shot down with the loss of all aboard, that was 64 Marines and 548 civilians. The aircraft that fired on those vessels were heavily prosecuted and themselves shot down.\n\n\"The worst situation was the assault on Planet Adenomere. There Task Force Adenomere ran into two fleets of ships: a pirate fleet of thirty-six ships, and the Planetary Defence Force of fifty-three ships. Both fleets totalled ninety-two ships, forty of which were heavies, most of those the newer Handren Class Frigates.\n\n\"The Pirate fleet was composed of named pirate vessels who had experience in fighting against the Navy. They put up a determined fight against our forces, giving no quarter and receiving none in return. The pirate fleet was taken out, twenty-eight of their ships damaged with all of their heavies knocked out of commission, four being destroyed. That fleet will not be a threat for some time in the future, if ever.\n\n\"The actions of the pirate fleet encouraged the Planetary Defence Force Fleet to fight hard against Task Force Adenomere. This resulted in severe damage to the warships of Task Force Adenomere which had to shield the unarmed rescue vessels. However, the Task Force did knock out most of the heavies of both enemy fleets.\n\n\"Task Force Adenomere had five heavies damaged to the point they had to be jumped out in tandem with another ship, nineteen heavies damaged to some degree though able to operate on their own. We lost two Whippet Class Escorts and eight Valour Class, destroyed with the loss of all hands. There were a further six Whippet Class and thirty-six Valour Class knocked out of commission, though all those ships were recovered.\n\n\"In addition, there were sixteen Whippet Class and twenty-one Valour Class damaged to some degree, though they were able to jump on their own.\n\n\"In total, they suffered 592 casualties and 4,323 wounded with a full range of injuries.\n\n\"Five civilian shuttles were destroyed in atmosphere on Adenomere, with the loss of all aboard, forty Marines and four hundred civilians. We tried to prosecute the aircraft that fired on those shuttles; however, our forces were hard-pressed and at least two of those aircraft escaped.\n\n\"In addition, five of our Marines and one Navy officer were captured: Capt. Raymond Clark, Sgt. Jacintha Aurans, Sgt. William Brogues, Tech. Sgt. Brian Donnes, Sgt. Melinda Tanten, and Sgt. Brianna Wilden.\n\n\"In total, OP Sandcastle had 910 killed in actions in orbit, and a further 1,052 killed in strikes against unarmed civilian shuttles in clear contravention of all guidelines of combat. We also suffered 5,373 injured in comparison to the rescue of 218,525 people - 163,894 of whom were the original target of our raids.\" Dostier ended, her head down.\n\n\"That is my report, sir. The names of the dead and injured will be transmitted later today,\" Dostier ended.\n\n\"OP Sandcastle lost ten vessels outright,\" Adm. Ramison recapped, \"with an additional forty-two knocked out of commission but which were recovered, and had a further forty-nine damaged to some degree for a total of 101 ships damaged or destroyed out the 1,587 ships that we sent in.\n\n\"Quite frankly, I was expecting to lose up to 25% of our forces on this mission, Commodore.\" Ramison spoke. \"That we lost only ten ships and that only ninety-one ships were damaged, is also amazing. That amounts to less than 6% of the fleet lost or damaged. That is truly an amazing feat and a testament to the planners of OP Sandcastle.\n\n\"While the numbers of dead and injured are regrettable, regardless of how you see things, Commodore, this raid was a resounding success,\" Ramison finished, to the nods of all the people on the screens.\n\n\"I would point out, Commodore Dostier, that the images of the freed slaves have gone viral all over the Union,\" President Serment added. \"The conditions of some of those rescued were deplorable. The extent of the effects of slavery on those who are the slaves has been shown graphically by their physical conditions.\n\n\"People throughout the Union, are demanding restitution from the Alliance, more than a few are demanding that we go to war against the Alliance for what they did to our citizens and for constantly lying about not having our citizens as slaves,\" Serment finished.\n\n\"In the next few days, our Foreign Affairs will be in touch with the Landstradt,\" President Holloway began. \"We intend to have all of our citizens returned or their whereabouts determined so that their bodies might be returned to their families. If there is any indication of foul play in their deaths, we will take action against the individuals responsible. The Landstradt is going to have their hands full very shortly.\n\n\"Actions have already been put in place on these issues. We have already seized all known assets of the Landstradt in Union space. We intend to take those assets and deliver them as compensation to the rescued,\" the President finished.\n\nThe two Presidents congratulated Dostier and signed off, leaving her facing her boss.\n\n\"Battles in space are almost never a one-sided affair,\" FAdm. Holstern began. \"The Second Battle of Liramor-23 should have taught you that. Nearly every ship involved in that battle was damaged in one way or another. The last ship standing proclaimed the winner of that battle. Fortunately, that was one of our ships.\n\n\"Adm. Ramison is correct, 25% losses is the norm for most space battles where we have the advantage of surprise. That we only lost ten ships is an amazing feat. Do not berate yourself for those losses, Liana, you and your people did a truly amazing job.\n\n\"Adm. Ramison is currently arranging for the repairs to those ships damaged in the raid. We will have instructions for you to have them moved to either Pallanders-1 or Pallanders-4. Your fleet has three days of R&amp;R, after which, we will send the ships back to their respective commands.\n\n\"Good job, Liana. Take some time off yourself,\" Holstern ordered, closing the link.\n\nThe door sounded. Dostier slammed her hand on the contact. \"I said I did not want to be disturbed!!\" she shouted.\n\nThe locked door opened, even though it was locked, and Junelliya walked in, along with her husband, Fayad, and Dr. Leanora Galt.\n\nJunelliya came over to Liana and draped herself around her friend from behind, hugging her close and broadcasting peace and wellbeing to her and the others in the room.\n\n\"A friend of mine said you would need my help and that I was to ignore anything that you said when you attempt to send me away,\" Junelliya told Liana.\n\n\"If I find out who that 'friend' is, I'll string them up by their thumbs!\" Liana seethed, or tried to, it was difficult to remain angry with Junelliya broadcasting peace to them.\n\n\"Well, the friend is Wilford J. Holloway. I think it might be difficult to use his thumbs in that manner,\" Junelliya giggled, feeling the shock in response to her comment from Liana.\n\n\"The President sent you?\" Liana said softly, turning to look up at Junelliya, who nodded to Liana.\n\nFayad sat down beside Henadi and placed his hand over hers. \"He got you out,\" Fayad told her. \"Now, it is our turn to get him out.\"\n\nTears streamed down Henadi's face, but she nodded emphatically at the pronouncement. \"We will need to keep some of the fleet in reserve,\" she told her boss. \"We will need them to blockade Adenomere and get the captured Marines out.\"\n\nA look of determination crossed the faces of all those in the room 'Promise made; promise kept' was a phrase that Raymond lived by. Those in the room made a promise of their own to get the captured out.\n\n\"There is something that you both should know,\" Henadi informed them. \"I received a note asking if I would like to be a witness at the execution of former Senator Wassim Andjuran. They sent that to me as former victim of Andjuran and his clique.\n\n\"I want this evil man to pay the price under the law but I don't know if I want to be there to witness it,\" Henadi finished.\n\n\"If you are not comfortable with being there, then do not go,\" Fayad stated. \"What happened to you is something that never should have happened to anyone under any circumstances. You being there for Andjuran's execution, would not help you in your recovery. You could simply inform the powers that be of that fact. They will understand. This is something that I suspect happens quite frequently.\"\n\n\"Damn, I knew that I should have declare myself with you when I first met you,\" Henadi told him.\n\n\"A man can legally have four wives, Henadi,\" Junelliya giggled. \"It is still not too late.\n\n\"It is good to know that his time is near,\" Junelliya said. \"He will stand at the left of the Profit and be judged by God.\"",
        "In the vernacular of the Church of Andanii, the Profit stood behind those being judged. Those who were truly good, however, were said to stand on the right of Andanii when they were judged.\n\nThe Apostate of the church of Andanii were declared to stand to the left of Andanii. Andjuran had broken every law and tenant of the Book of Andanii. He had been declared Apostate for his actions by the new Elders, declaring to the Church that he stood to the left of Andanii by his actions.\n\nThey would not be informed of the date of his execution if there were not to be witnesses. They all looked forward to hearing of it after the fact, in the news.\n\nAurelia's Apartments, Adenomere Main Estate, Planet Adenomere, The Adenomere System\n\nAurelia was watching the stock markets and making shrewd moves that were advancing the small fortune she had placed in the Bank of Adenomere in Adenomere City when she first arrived on planet.\n\nShe knew that her activities were being monitored. Anything that left the house under the house comms grid was monitored by Jaar and Korman. She could have made these plays via her personal comp but she wanted Jaar to see what she was doing and to ask why, especially when her hunches came to fruition so quickly. Jaar took the bait and asked her to attend him in his office.\n\n\"Good-morning Father-in-Law,\" Aurelia greeted.\n\nJaar smiled briefly. \"Not quite yet, Aurelia, but soon,\" Jaar replied. \"I apologize that your marriage has been postponed by events. It could not be helped.\n\n\"I have noted that you are doing some extensive work on the stock markets. More importantly, you are doing rather well in comparison to most,\" Jaar noted.\n\n\"They are looking at the stock market with the same eyes as they had before the raids, sir. One needs to look with fresh eyes now to see where the action is flowing,\" Aurelia commented.\n\n\"How so?\" Jaar asked.\n\n\"You may have noted that I bought into Harmans Holdings a few days ago,\" Aurelia pointed out the stock flow to Harmans Holdings, showing it going up quite remarkably.\n\n\"Harmans is the only company on this planet that makes large scale farm equipment. With the loss of slaves we have just suffered, there are not enough slaves to complete the required manual tasks on many farms. The only solution to this is to adopt large scale mechanized farming techniques. Harmans is suddenly finding itself selling all of its products, something it has never done before. As well, Harmans has opened up another production line for its products. They will be in the black for a few years to come, which makes them a prime target for speculation on the stock market,\" Aurelia explained.\n\n\"You saw this before the others did and bought into the company while the stock was low,\" Jaar stated.\n\n\"Low is subjective. The stock is still low in comparison to where it will go, however, it has already tripled where it was only two days ago,\" Aurelia replied.\n\n\"And you have seen other items of this nature as well,\" Jaar noted.\n\n\"Of course, I have been watching the stock markets since the Union fleet left our space. There have been a number of interesting items that have occurred and I have made my purchases based on what I have been taught,\" Aurelia conceded.\n\n\"Explain to me what you have done. To me, it makes no sense, however, your explanation of Harman stock now does make sense,\" Jaar instructed.\n\nAurelia spent more than an hour working through her list of choices and actions during the last three days. Jaar made some changes to his own portfolio based on Aurelia's explanations. Once again, he wondered at the stupidity of Armstrong Gordon for letting this one go. He should have kept this daughter to advise him.\n\nThe Wanderer, Planet Varus, Cl\u00e9ment System,\n\nThe members of the Trine were on The Wanderer, along with their children, the Nanny, Takebayashi Urano, Hanalei's bodyguard, Violletiya, and Hanalei's new PA, Sylvie Kinlo, a willowy brunette from Liramor Prime with a penchant for languages.\n\nJunelliya noted the distinct lack of morale on the big ship. The crew was upset with the loss of Raymond and the five Marines and even more upset that the Union was doing nothing to get them back.\n\nCapt. Degault had called a crew meeting in the main theater on deck one, which had space for more than 500, more than the current crew of the Wanderer. She opened a link to all those who were on duty so they could follow the procedures.\n\n\"I know that you are upset at what you see as the inactivity of the Union politicians in this issue,\" the Captain began. \"Please keep your peace for now. We all knew going in that those left behind would be gotten out through diplomacy. That has yet to start. The UDC is preparing a campaign against the Alliance, demanding the release of all living citizens of the Union, and the whereabouts of those who are deceased as well as the circumstance of their deaths.\n\n\"In that accounting, we will also be demanding the release of our missing team and the return of the bodies of the crew who died in orbit. This will start soon. While many of you are demanding action now, we must remember that we are talking about governments in action, which tends to be ponderously slow. We do not have permission to go to Adenomere to retrieve our personnel, a situation that would be difficult considering that our personnel are on the planet in an unknown location.\n\n\"Yes it is upsetting. Yes, it is frustrating. I am, however, demanding that you remember that we are members of the Union Navy, even if we are pretending to be otherwise, and that we are bound by our oaths and our laws,\" Degault finished. She opened the floor for questions, many of which she had to admit she had no answers for. After twenty minutes of questions, she finally called a halt to everything.\n\n\"We will remain here until Madame Samson decides we will leave. We are still linked to The Dewfall and Commodore Dostier. If anything comes up that she needs ships and support, this ship must be ready to give that support. We do intend to get our people out. For now, I ask for your restraint, your perseverance, and your readiness to act when the time comes. Thank-you,\" she ended.\n\nThe room was called to attention and the senior personnel left, leaving the crew to talk amongst themselves, the Boatswain stayed with the crew to speak with them and help settle them down. She too was upset by the ongoing situation but she was willing to give the politicians time to work. That was her message to the crew.\n\n************\n\n\"Not a good situation,\" Fayad began once the senior officers were in the VIP conference room.\n\n\"No,\" Liea admitted. \"I am not pleased at the pace of action from the Union and the UDC but I am willing to give them some time. There is little that we can do. There is no option for the Wanderer to act alone this time.\"\n\n\"Agreed,\" Fayad responded. \"She would not do as well against Adenomere as she did against New Hadria. We no longer have surprise on her side. What is Dostier saying about this situation?\"\n\n\"She is trying to determine what the situation is in the Senate and the UDC,\" Capt. Degault informed them. \"The President and the Navy brass are pushing the Senate, however, that body rarely does anything with speed.\"\n\n\"What are our options?\" Hanalei asked.\n\n\"I really have no idea,\" Degault replied honestly. \"The Task Forces are currently divesting themselves of the rescued, who are making waves because of the media blitz surrounding this. The ships in the Task Force will have to be returned to their respective commands soon, though I know that there is an option to keep some in order to set up an embargo of the Alliance Planets.\"\n\n\"Why don't we call her?\" Junelliya asked.\n\n\"Commodore Dostier? I do not have the authority to do that, Junelliya,\" Degault informed her.\n\n\"I do,\" Junelliya stated with a smile. She opened her comp and sent a message requesting an internet call to Dostier. A moment later, she had the link and flicked it to the room's large monitor.\n\n\"Good morning Liana,\" Junelliya greeted her.\n\n\"Hello, Junelliya, I see that we are in the middle of something more than just a simple call,\" Dostier said with a grin, noting that they were on the Wanderer, the ship's logo on the wall behind the Trine and familiar faces around them.\n\n\"Sorry. The crew is upset by what they see as the lack of progress from the Senate and the UDC. We have just headed off some serious anger issues here,\" Junelliya told her.\n\n\"I understand. I too am a little angry over the pace. The Navy made things happen much faster and the Senate was not prepared to act, mostly because we had to keep them in the dark due to security reasons. Now, we have to wait for the Senate to catch up. I'm not sure what I can tell you,\" Dostier finished.\n\n\"I've heard that we are starting to split up the ships, sending them back to their respective commands. Is this not a little too soon?\" Fayad asked.\n\n\"For whom, Fayad? These ships have been in our control now for almost six weeks. That is a lot of time for so many ships to be out of the loop as far as their respective commands are concerned,\" Dostier confided.\n\n\"I understand,\" Fayad replied. \"However, I think that there will be a show trial of our people, probably fairly quickly. That could give us the break we need to do things.\"\n\n\"Sorry? A show trial?\" Dostier looked at Fayad with perplexion.\n\n\"The Landstradt must act to counter the Union's actions,\" Fayad explained. \"They need to convince their people of the Alliance's right to do what they do, to hold slaves.\n\n\"In order to do that, they must prove their stance. That means someone has to go on trial so that they can in fact prove that they have the power and authority to act in opposition to the Union. They have five Union Marines and one Union Navy Captain that they can put on trial. They will.\n\n\"Of course, they will be preaching to the choir. The citizens of the Alliance all believe they have the right to hold slaves. We need to be ready to act once this trial starts. We need to prove to the people of the Alliance that while they can hold slaves, they cannot seize free people as slaves.\n\n\"We need to prove to them that taking free people is kidnapping, a crime that is recognized everywhere,\" Fayad stated.\n\nThat got Dostier's attention, who suddenly sat upright, a look of surprise on her face. \"How soon do you think this will occur?\" she asked.\n\n\"Probably by weeks end, in three days time. I would need to know what is going on in the Landstradt to confirm that,\" Fayad informed her.\n\n\"I will send you the intelligence we have.\" Dostier pressed a button on her desk and her Aide-de-Camp, Cdr. Schell entered. \"Send our intelligence on the Landstradt's recent activities to Fayad on the Wanderer,\" she ordered, looking out to Fayad.\n\n\"Thank-you, I will let you know what I figure out as soon as I do,\" Fayad said with a small bow.\n\nJunelliya's comp signalled and she saw that she was receiving a request for internet image chat from Petronellaya. That was a surprise.\n\n\"We have to go for the moment, Liana, I have a request for an interview from the head of the Council of Empaths. I wonder what I have done now?\" Junelliya mused, getting a laugh from Dostier.\n\n\"I look forward to hearing how naughty you have been,\" she said, grinning, before cutting the link.\n\nJunelliya accepted the request and flicked the image to the same screen that Dostier had just vacated.\n\n\"Good-day, Petronellaya,\" Junelliya began. \"It is somewhat unusual for you to be sending me a request for a chat.\"\n\n\"You have an admirer,\" Petronellaya stated with a smile.\n\n\"Oh? I assume it is someone nearby?\" Junelliya asked.\n\n\"Dr. Maya, GME, Doctor of Psychology. She is currently on the SSP Marin Green, which is being used as a psychological hospital ship. I want her to go to Liramor-23 and work in the hospital there. Her main reason for being at Liramor-23 will be to figure out how to implement your little idea of teaching other GMEs your capabilities.\n\n\"However, it will be some time before she can go to Liramor-23 because of the condition of her patients. They will begin sending them down to the planet soon but she and her team will have to go down with them. It will take time before they can give up their roles and pass their patients to other psychologists,\" Petronellaya told her.\n\n\"Why don't we ask for some assistance?\" Junelliya pondered.\n\n\"What assistance?\"\n\n\"The Toolend. They are very good at looking into the minds of people. Maybe they can help in this situation. For those who are significantly affected psychologically by their trauma, it could be years before they can become independent. They Toolend might be able to help shorten that time somewhat.\n\n\"I will contact Maya and ask her opinion. Thank-you, Petronellaya,\" Junelliya ended the call and then opened her emphatic abilities, seeking out Maya. She made contact almost immediately and opened a connection to the Marin Green.\n\n\"SSP Marin Green, how can I help you?\" the Comms O of the Green requested.\n\n\"This is Junelliya Herlan. I need to speak with Dr. Maya, please. She is expecting my call, however, I do not have her comp link.\"\n\n\"Thank-you ma'am. Am I speaking to you on your comp link?\" the Comms O asked.\n\n\"Yes,\" Junelliya confirmed.\n\n\"I shall contact Dr. Maya and pass this information to her as soon as she is available. She will contact you,\" the Comms O stated, cutting the link.\n\nLess than a minute later, Junelliya's comp signalled a call.\n\n\"Hello, Dr. Maya,\" Junelliya opened the link.\n\n\"Just Maya, please, Junelliya. I am surprised but pleased to hear from you,\" Maya responded.\n\n\"Petronellaya called and informed me that I had an admirer here in the fleet,\" Junelliya smiled.\n\n\"Admirer?\" Maya mused. \"Oh, the report I sent her about your power.\"\n\n\"That would be it. Has she sent you anything in return?\" Junelliya asked.\n\n\"Not yet. Should I be expecting something?\"\n\n\"Petronellaya wants you to join the hospital at Liramor-23 in order to work with me on implementing new techniques to teach GMEs how to learn new powers, specifically telepathy. However, she is concerned by the amount of time it could take before you could be available.\n\n\"Might I make a suggestion? Why don't we ask the Toolend for assistance?\" Junelliya asked.\n\n\"The Toolend?\" Maya inquired.\n\nJunelliya sent the Interspecies Fact Sheet to Maya who opened it on the Toolend.\n\n\"Telepathic?\" she queried.\n\n\"Yes. They have instigated an organization similar to the Council of Empaths. Any Toolend who leaves Toolend space must be a member of this new organization. I have contact with several senior members of the Toolend. I can ask them if they could assist us in this situation. Do you want to be part of that conversation?\" Junelliya asked.\n\n\"Oh, yes, please,\" Maya responded immediately.\n\nJunelliya sent a request for contact to Tougrate and waited patiently, it wasn't long before erht responded. She split the screen with Maya on the right and Tougrate on the left.\n\n\"Junelliya, to what do I owe this pleasure?\" erht demanded.\n\n\"Tougrate, have you seen the news about the raid the Union committed against the Alliance of planets?\" Junelliya asked of erht.\n\n\"We have; however, it was our impression that this is an internal Human affair?\" Tougrate responded.\n\n\"Quite correct, however, we have a number of human patients who have experienced severe mental trauma for many years and will be unable to help themselves or to be independent without a lot of help. Dr. Maya, a psychiatrist and a GME, and I, are wondering if the Toolend could help us with some of these cases?\" Junelliya asked.\n\n\"Good day, Dr. Maya. It is a pleasure to make your acquaintance. I would have to see the patients myself to determine if we Toolend can help them. That would mean that I would need transportation from here to there in order to do this. I would also like to bring my assistant, Nurse Malnad, with me,\" erht stated.\n\n\"We can use The Trine for transport. It would only take one jump to get to the platform and one jump to return,\" Junelliya informed them.\n\n\"We will pick up Dr. Maya and jump directly to the platform, I will see you within the hour,\" Junelliya stated.\n\nVIP Shuttle Deck One, Liramor-23, 109 Piscium Star System, 106 Light Years from Terra\n\nIt took a little over two hours to get to Liramor-23 as they had to pick up those who wanted to return to the platform. Heyya and her nurses were pleased to meet another GME who would eventually be working from the platform. Dr. Gault was pleased to meet another psychiatrist who would be working with her.\n\nHanalei opted to return to their home with the children and her team, leaving Fayad and Junelliya to wander about. With the capabilities of their new ship, they could easily be home every evening.\n\nFayad went to pass on a report to Fiona, telling Junelliya to go wherever she needed to go and that he would catch up with her when she returned home later in the day.\n\nDr. Maya was introduced to Tougrate and Malnad, who were eager to see their new patients and see if they could help or not.\n\nAugraf and Mayute were at VIP reception to see them off. They spoke via mind-link to their compatriots, while Junelliya tried to listen in. Junelliya touched Maya, hoping that she could also listen in.\n\n\"The human's minds are more fragile than ours,\" Augraf reminded them. \"You will have to work carefully while you are with them. It is important though that you put yourselves forward as part of our Assembly of Telepaths. They must understand that the Assembly works in the same manner as the Council of Empaths, regulating how our telepaths work in the greater community.\"\n\n\"We understand, Augraf. Malnad and I have our symbols,\" Tougrate said, indicating the green armbands with the Assembly's symbol the two wore. The symbol was two bisected circles with a wavy line between them \u019f~\u019f.\n\n\"Junelliya, were you able to follow this?\" Augraf asked of her, still in the mind-link.\n\n\"Yes, Augraf, though it still brings some discomfort,\" she admitted, referring to the headaches she got after the fact and sometimes during.\n\n\"That will pass with more practice,\" Augraf informed her. \"Our people suffer in the same manner when we first begin to learn about their telepathic skills.\"\n\n\"It is good to know that it will get better,\" Junelliya agreed.\n\n\"Augraf, I must let you know that Dr. Maya has been sent by Petronellaya to learn my new techniques. It will be my responsibility to help her to learn these new techniques and she in turn will help other GMEs to learn,\" Junelliya told erht. \"She is an experienced Crush Instructor whom I think will greatly benefit us.\"\n\n\"Is she able to hear our conversation?\" Mayute asked, getting a nod from Maya. While she could hear the conversation with Junelliya's help, she could not, at the moment, respond in kind and verbally told the Toolend so.\n\n\"Not to fear,\" Tougrate assured her. \"If you can hear the conversation, you will be able to respond in time.\"\n\nMaya smiled at that thought, then brought her hands up to her temples, breaking away from contact with Junelliya. Junelliya smiled at her and gave her some of the analgesics that Heyya had pressed on her knowing that she would be working with the Toolend. Maya grimaced and broke open the fast acting pills.\n\nA few minutes later, the four said their goodbyes and were back on The Trine. Ten minutes later, they jumped from Piscium space directly to the space around Planet Varus. The ship was down on the planet at the Naval base's shuttle port some fifteen minutes later.\n\nAdvised that they were on their way, President Serment and FAdm. Robert were waiting for the Toolend when they emerged from The Trine.\n\n\"Good afternoon, and welcome to Marlin Naval Base and Planet Varus,\" the President said, with a small bow.",
        "\"We are pleased to be here,\" Tougrate responded, giving an intricate wave of his tentacles to the President. \"We have been asked to assist with the medical needs of some of your citizens. We do not know yet if we can do this, which is why there are only two of us here to determine this.\"\n\nJunelliya got a nervus look from FAdm. Robert. \"Be at ease, Fleet Admiral. The Toolend who leave Toolend space are all members of the Assembly of Telepaths. They have strict rules to follow similar to those of the Council of Empaths from Hollander's World.\"\n\n\"That is correct,\" Tougrate stated. \"Our laws do not permit us to do more than a cursory look at a person without their expressed permission, without a warrant, or without medical requirements.\"\n\n\"Cursory look?\" Robert asked.\n\n\"When you see things with your eyes, can you unsee them, or do you retain the image regardless?\" the Toolend asked.\n\n\"So, you see our minds in the same way?\" President Serment inquired, curious.\n\n\"See is not the correct term, more like read, however, we cannot not read a mind once we learn our telepathy,\" Tougrate replied. \"We cannot help but read the surface layer of your mind in the same way that you cannot help seeing things you scan with your eyes. However, anything more than a surface scan requires us to deliberately use our telepathic powers in much the same way as your eyes must track onto something specifically to make more sense of what you are seeing. This is where the laws of the Assembly of Telepaths comes in. We are not permitted to look without invitation or cause.\n\n\"Those of us who agree to this are permitted to leave Toolend space and must wear the symbol of our Assembly,\" erht stated showing its arm to the pair.\n\n\"So all those who wear this symbol are bound by your laws?\" Robert asked.\n\n\"Correct, and none of those who do not are permitted to leave Toolend space. We do not want our kin in the Interspecies Community becoming upset that there may be a Toolend who will look without permission,\" erht explained.\n\n\"I notice that Junelliya is wearing your symbol, as well as the symbol for the Council of Empaths,\" Serment noted.\n\n\"Junelliya is a special case,\" Malnad informed them. \"She is a very powerful empath who is also capable of limited telepathic ability. As she is being taught to further her telepathy by us, she must conform to the Assembly's laws and regulations. That is why she wears our symbol.\"\n\nSerment nodded her head and smiled. Junelliya sensed immediately that the President was feeling much better about the telepaths than previously.\n\n\"That is good to know,\" Serment stated. \"I need to get back to my office. Things are still hectic because of the earthquake and OP Sandcastle. However, I think that I can be sure now there will be nothing unusual going on here.\" She gave them a nod and left.\n\nFAdm. Robert also gave them a nod. \"You said that you can scan surface impressions from my mind. Is there a way to block that?\"\n\n\"Yes, of course. It is very similar to the method used to block empaths from scanning your feelings,\" Malnad stated. \"Junelliya can teach you, and any others you wish, how to do both.\"\n\n\"That is good to know, I will take you up on that offer if you do not mind, Junelliya. In the meantime, this is Cmdre. Dr. Angelica Seraph. She is the Surgeon General of Sector Fifteen. I will turn you over to her,\" he finished, giving them a bow and also left for his office.\n\nDr. Seraph was a blonde woman in her late forties who wore the traditional white military jumpsuit of the medical trade. The gold star of Commodore was on her collar as well as the gold star of command high on her left breast. Tall, with wide shoulders and hips, she looked to be a formidable person, though the smile on her face gave her an approachable presence.\n\n\"Good afternoon, Dr. Seraph,\" Tougrate greeted her. \"It is good to meet a fellow doctor.\"\n\n\"You are a doctor?\" Angelica asked.\n\n\"I am, and my colleague is what you would refer to as a Nurse, though in our methodology of training, erht simply does not have the same level of training as I have and thus does not fit our definition of doctor,\" Tougrate informed her.\n\n\"Erht?\" Angelica asked.\n\n\"What we call ourselves,\" Malnad responded. \"You would say 'him' or her', referring to yourselves by gender. We are unique and can be either male or female as required, thus use only one pronoun, though we might refer to one of us who is pregnant as 'erhta'.\"\n\n\"I see. I would love to ask you many questions, but I understand that you are here for a reason and should be given access to our psychology patients to see if you can help them,\" the Commodore stated.\n\n\"We would appreciate this, it is why we are here,\" Tougrate acknowledged.\n\nThey moved swiftly through the base, gaining many looks of astonishment as they made their way to the big main hospital. They made their way to the psych ward. Almost immediately, the Toolend noted the difference in the demeanor of the people held here.\n\n\"Many of these people are in serious need of assistance,\" Malnad noted, aloud so that Dr. Seraph would understand.\n\n\"They are. While we can help with appropriate drugs, healing the mind is something that takes time and effort on both the side of the patient and the side of the practitioner,\" Angelica informed them.\n\n\"Where the issue is damage to the mind from physical or mental trauma, we might be able to help,\" Tougrate stated. \"That will then leave your practitioners the opportunity to teach 'life lessons' to those who were injured to help them move forward.\"\n\n\"I like that term. I think I will make it a mandatory use term on this ward,\" Angelica stated. They approached a male Navy captain in medical whites.\n\n\"Dr. Tougrate, Nurse Malnad, Junelliya, Dr. Maya, this is our head psychiatrist, Capt. Dr. William Defroe,\" Angelica introduced the doctor to them.\n\n\"Good day to all of you, it is a pleasure to personally meet the Toolend for the first time,\" Dr. Defroe responded.\n\n\"We are here to serve,\" the Toolend replied in unison.\n\n\"What would you have us do?\" Tougrate asked.\n\n\"We do not yet know the capabilities of the Toolend, though we do know that you are telepathic in nature. We are hoping that you can help some of those here who are in desperate need, especially those who were recently freed of slavery,\" Dr. Defroe explained.\n\nThey moved down a long corridor until Dr. Defroe opened a door for them. They saw a thin woman sitting on a bed, rocking back and forth, holding a blanket in her hands, singing a wordless tune like she might be rocking a child.\n\n\"We do not know what is going on with this person,\" Dr. Defroe explained. \"She was functional until she got up to the ships, then simply broke down and became nearly catatonic. No one knows why.\"\n\n\"Do we have permission to scan her?\" Tougrate asked.\n\n\"She is not in a position to object,\" Dr. Defroe told them. \"As her attending psychologist, I ask that you scan her to see what can be done, if anything.\"\n\nTougrate nodded, an odd effect considering that erht was all tentacles and body.\n\n\"May I link with you, Tougrate?\" Junelliya asked.\n\n\"I would prefer that you do not, Junelliya. You are untrained, and this could be something serious.\"\n\n\"I will allow her to link with me, Tougrate,\" Malnad said, looking at Junelliya. \"I can let her see what we are doing and protect her from any backlash on the part of the patient.\"\n\nTougrate acknowledged her as he raised a tentacle to the back of the patient's head. Junelliya touched Malnad and, as an afterthought, touched Maya as well, so she could experience the events to come as well.\n\nTougrate let his power move over the surface layers of the woman's mind. He saw great sadness there. Though he couldn't experience the emotion itself, he could clearly see the difference in her persona from a 'before and after' perspective.\n\nJunelliya briefly inspected the woman's feelings and broadcast them to Tougrate and Malnad. Tougrate appreciated the feelings that he was now experiencing and carefully delved a little deeper, noting an image in the woman's mind, a young girl, perhaps four or five years of age, the child was laughing and happy, playing with her mother who was content to have the child in her arms.\n\nIn another image from her mind, the woman was holding the blanket but seeing the child, a redheaded little girl who smiled up at her as she rocked her and sang a lullaby to her, much as she was doing now.\n\nThe image was very powerful, as was the obvious love the woman was showing. Tougrate looked around her mind and found another image, this one of the two of them being torn apart. A man was pulling the child away from the mother. When she objected, he shocked the mother and made her scream, causing the child distress.\n\nThe child and mother cried out for each other, screaming until the sound of each other's voices were silenced by distance. The man returned and sent wave after wave of pain to the woman through her collar, punishing her for making such a scene with the child. He left her barely conscious on the floor and stormed off. It was only a few days later that the woman was rescued by the raid, her child left behind in the hands of the Alliance.\n\nAngelica and William could not see what was happening, but they could see the response from the woman, who suddenly broke down crying. Immediately, Junelliya broke contact with Malnad and pulled the woman into a tight hug, the two of them crying together for several minutes.\n\nWhen she finally stopped crying, Junelliya asked. \"What is her name?\"\n\n\"Her name is Paige,\" the woman replied, tears still streaming down her cheek. \"She turned five last week, just before the raid that freed me. If the raid had come sooner, she would have been with me when I was rescued.\"\n\n\"I'm so sorry to hear that,\" Junelliya informed her. \"But we will be working to get all of our citizens out including those who were born of citizens of the Union.\n\n\"What is your name?\" Junelliya asked her.\n\n\"Mary Kodecko,\" she replied. \"I am from Planet Varus. I was captured by pirates seven years ago. My child was the light of my life, my only reason for living while in the hands of those fiends.\"\n\n\"So your child is Paige Kodecko,\" Junelliya inquired. \"We will make sure that she is asked for by name.\"\n\n\"That might not work,\" Mary told them. \"If she is still in the estate, her name might be changed to lessen the chance the two of us will meet. If she is sold to another estate, her name will definitely be changed. I may never see her again.\" With that statement, Mary broke down again, holding on tightly to Junelliya. Junelliya passed a hand in front of her face and the woman suddenly wilted. Junelliya settled her on the bed and turned an inquiring look to Tougrate.\n\n\"I can lessen her pain somewhat,\" Tougrate informed them, \"but she is sad for the loss of her child. More importantly, the fact that the loss came so close to her own freedom. This will take time to heal. Conversely, if we can find her child and bring her back to her mother that will be of more help.\"\n\n\"Thank-you Tougrate,\" Dr. Defroe said. \"We were completely unable to get through to this person. We had no idea of her name or her situation until you looked for us. You have helped us immensely with this case.\"\n\n\"That will not always be the case, Dr. Defroe,\" Tougrate informed them. \"There will be those whose minds will be complete chaos. It will be difficult to move through those minds without losing oneself in them. This is something we must prevent.\n\n\"Fortunately, the solution is to always be with another Toolend when we look deep into the minds of the chaotic. To form an Assembly of Telepaths,\" Malnad stated.\n\n\"Like a Congress working with our empaths, then,\" Maya stated, getting an agreement from Malnad.\n\n\"This is confusing though, as you will be bringing people together for an assembly and your organization is known as an Assembly,\" Maya said. \"May I make a suggestion? Why not call your organization the Order of Telepaths and use the word Assembly much as we use the word Congress?\"\n\nBoth Tougrate and Malnad mentally nodded at the suggestion. It would be difficult to get the movement to change names now that it had moved forward so much, but the use of the word Assembly for two or more telepaths moving in a given direction with purpose was already part of the use of the word Assembly. Taking that away from the name of the group made much more sense to both of them and would likely make sense to all Toolend. It would also lessen the confusion for non-telepaths and other members of the Greater Community.\n\n\"I saw you work around so many different images in Mary's mind,\" Junelliya said. \"I know that the Toolend do not respond to feelings in the same manner as empaths do. How then did you know what to look for? Which image was the one that mattered?\"\n\n\"That comes with experience, Junelliya,\" Tougrate informed her. \"It is important to understand that some species bond tightly to their offspring, while others do not. In this case, the mother was showing signs of having lost a loved one, likely a child by the manner in which she was holding the blanket and rocking back and forth. This was an indicator to me. I looked for images of her with her child.\n\n\"They were very happy together, so when her child was taken from her, it was a traumatic experience for both of them. Then there was the pain she suffered from the shocks given to her by the collar. I wondered why she was being punished and looked back to see what I could. The images just burst on me,\" he explained.\n\n\"I had the feelings from her that you experienced, Junelliya,\" Malnad said. \"The images to us Toolend, are just that, images that require much interpretation. They have no sway in how they help us to see into a person's mind. We need to understand life to make sense of some of those images. Things that one species sees as important, another will not. It can be confusing.\"\n\n\"Fortunately, the Toolend too, revere their offspring. So the images made sense to me,\" Tougrate took up the conversation again. \"However, the emotions that came through the link when you were connected to Malnad helped me to determine that this was indeed the important event in this case.\n\n\"Junelliya, your ability to feel emotions, together with our ability to read thoughts, would be a very useful tool if they can be taught to telepaths and empaths alike. You have proved this in this one single incident.\n\n\"Dr. Maya, whatever help you need for these patients, we will provide. The Toolend can assist, but they need to be paired with empaths who can help the Toolend feel what is right. We cannot monopolize Junelliya. We must find a way to work together to help these people. I think that means that you must complete your own project and learn from Junelliya how to learn telepathy and teach this to your people. Then, in turn, you will need to learn how to teach empathy to the Toolend.\n\n\"Junelliya and I have just proved the value of this. Your work has just become very important to all of us, Maya, though I suspect it will be a long-term project,\" Tougrate finished.\n\nMaya groaned and put her hands to her temples. Tougrate moved them away and place a tentacle on each temple. He asked for permission to inspect her mind.\n\n\"You brain's pathways are changing, that is why you are experiencing pain. This will pass with time, though it will be unpleasant for a while,\" Tougrate informed her.\n\nTougrate moved to Junelliya and touched her in the same way. \"Your pathways are very much different than Maya's, which is understandable considering the power you possess. Like her, your brain is being rebuilt from within but you are already much more advanced in your changes, likely because you have had more time as a telepath.\n\n\"The pain you were experiencing previously, Junelliya, is already receding. The more you use your new powers, the faster the changes will be completed. Once this has been accomplished, you will not experience as much pain, though it will persist for some time yet,\" Tougrate advised.\n\n\"I did note that the pain was much reduced,\" Junelliya told him. \"I thought that might be because of the exercises that Augraf and Mandenn had given me.\"\n\n\"I am certain that they helped,\" Tougrate explained, \"but it is the completion of the pathways that will make the greatest difference. In the same manner that we increase our muscle fiber when we do physical exercise, if we overdo the physical aspects, we experience muscle pain. This is also true for our mental capacities.\n\n\"Once the pathways are established, the pain will fade. The time it takes to do this depends on the individual and how fast the pathways are formed. The faster they form, the more likely there will be pain, often severe. The slower they form, the less likely there will be pain but it will also take much more time for the individual to gain their telepathy,\" Tougrate ended.\n\n\"Humans do not have the lifespan of a Toolend,\" Maya mused. \"It will likely mean that we will experience some pain during the formation of our skills. I know that when I developed my empathic abilities, I was often hit with some severe migraines. We have medication that will help with that.\"\n\n\"You will need it. I noticed that you had some pretty strong headaches when you first connected through Junelliya back on Liramor-23,\" Malnad told her. \"You can expect the same from this experience.\n\n\"Your connection, this time, was different from just reading the flow of thoughts. This time, you were connected to a specific event with a specific target in mind. That is advanced telepathy. The headaches could be strong,\" erht warned.\n\nJunelliya turned to Dr. Defroe. \"Can we get some analgesics supplied, Dr. Defroe? Dr. Maya will definitely need them and I suspect I will as well.\"\n\n\"Please call me William,\" he responded warmly. \"After what I have just witnessed, I will help in any way that I can. You people are amazing and I am proud to have witnessed this first attempt at helping our citizens.\"\n\nJunelliya smiled at the man. She hadn't expected such support from him so fast. Thinking back on events though, she had to admit that their group had been impressive when working with the woman.\n\n\"Tougrate, how did this incident affect you?\" Junelliya asked. \"Are you able to continue or do you need a rest?\"\n\n\"This incident was not that difficult for me,\" erht responded. \"It was pretty straight forward. Her mind was not chaotic, simply depressed. Once we broke through to the reason, it was not difficult to open her mind again. The minds of the chaotic are the ones that will give us the most difficulty.\"\n\n\"I think I understand, as this is true for all psychiatrists,\" Dr. Defroe said with a nod. \"I cannot imagine what it would be like to be inside the mind of such a person.\"\n\n\"We will have to bring the empaths together and find those who can connect to the Toolend,\" Junelliya spoke to Dr. Maya. \"Once we are able to pair an empath with a Toolend pair, we should be able to bring help to many of your patients, William.\n\n\"I suggest that we work together as a team for the next couple of days, Tougrate, until Maya has brought a group of GME psychologists to be paired with you and other Toolends.\n\n\"Our ship, The Trine, is capable of jumping directly from here almost to Toolend space. We will need someone who can act as an intermediary with us to bring more Toolend here from your home world or other Toolend worlds,\" Junelliya suggested.\n\n\"That would be a wise decision indeed,\" Tougrate stated. \"Malnad can work with Maya to help her with her telepathy. Maya can read the patient's feelings when necessary. That will allow us to work as a team of three.\n\n\"However, we will need you here to help us initiate other empaths into telepathy. I think that you are a good bridge between our peoples, a bridge that is necessary to begin telepathy in your people. They do not seem to be able to initiate telepathy on their own,\" Tougrate indicated.",
        "\"As to who to act as an Intermediary, I would suggest Augraf. He is known and respected by our leaders. This will be a good test of the Order of Telepaths. Thank-you for this, Junelliya, Maya, you may just have given the Order a strong assist,\" Tougrate explained, with a wave of his tentacles that Junelliya now recognized as similar to an ama hand motion that humans would understand.\n\n\"Do you wish to come back to Liramor-23 with me, or do you wish to remain here?\" Junelliya asked.\n\nEveryone decided to return to Liramor-23. They would take things up again in a couple of days once they had more people to work with. They said their good-byes to Dr. Defroe and made their way back to the base's exterior shuttle port, the only place on the base that civilian vessels were allowed to land by law.\n\nPiscium Family Quarters, India Deck, Liramor-23, The Piscium System\n\nJunelliya quietly entered the suite as she expected the children to be sleeping. She was surprised to see several of her acquaintances in the home, two of which were holding giggling children. A smile graced her face as she came further into the unit.\n\n\"What's going on here?\" she asked of no one in particular.\n\n\"Our two favorite Piscium's have been away for over a month,\" Mind-Ur informed her. \"We came over to enjoy their presence and play with them.\"\n\nThat brought a giggle to Junelliya. Zarrenia smiled at the sound of her mother's voice, looking around to see her. Junelliya took the child into her arms and presented her breast for her. \"I know what that look means,\" she giggled to the child, getting a laugh from Mind.\n\n\"How has everyone been while we were away?\" Junelliya asked. She was swiftly regaled with the activities of their friends and acquaintances on the platform. Sitting down in her favorite rocking chair, she listened intently to the goings on as she fed her child. Despite the number of people on board, the platform really was like a small village.\n\nFayad was moving about, being a good host, as he provided snacks and drinks to all. He brought Junelliya an orange juice, catching a kiss on the way by. Takebayashi Urano, the Nanny, came out of the children's room and told everyone that it was time to settle them down for the night, getting a room full of awes from the assembled group.\n\n\"You can come back tomorrow, but the children need their sleep,\" she told them with a gentle smile.\n\n\"Not tomorrow,\" Hanalei stated firmly. \"We are taking the children to see their God-parents.\"\n\nThe group began to split up, each taking their time to give the children a kiss and getting goodnight hugs from Ikekia, who suddenly looked sad when she realized all her friends were leaving.\n\nHanalei giggled at her daughter's plight. \"Don't worry, Ikekia, you will see them again,\" she told her, then handed her to Urano to be settled down.\n\nJunelliya finished with Zarrenia and brought her to her bassinet, giving her a kiss before settling her in. She gave a kiss to Ikekia finding her already drifting off. Giving Urano a smile she returned to the main room where her husband caught her and gave her an even bigger kiss than before.\n\nViolletiya, Hanalei's bodyguard, Sylvie Kinlo her PA, and Urano wished the three goodnight as they disappeared into the master suite. The three new ladies had grown fond of each other over the five-week long excursion of OP Sandcastle, Sylvie coming into the mix not long after the Trine had entered the gathering in the Punarjanm System. She had been surprised at how much the family had done and how much they were involved with a Navy operation on that scale. What was even more astonishing was finding out that Junelliya was so universally liked by most of the members of the Interspecies Community.\n\n\"I can't believe how respected Junelliya seems to be among the aliens,\" Sylvie opened the conversation.\n\n\"We don't call them aliens here, Sylvie,\" Violletiya admonished. \"Here, we are all known as members of the Interspecies Community, the Greater Community, or just the Community for short.\"\n\n\"You would have to understand the concept then if you use the word Community in the wrong place,\" Sylvie noted. \"That could get a little confusing.\"\n\n\"So far it hasn't,\" Urano told her. \"Violletiya and I have been with the family since their return from Denders Resort and we have never had an issue understanding who or what we are talking about. We rarely refer to them as the Community, anyway. We mostly refer to them by their species name or by their individual names.\n\n\"I quite like Mind-Ur and the members of her House, while Meela is enamored of our two little ones.\" Urano's comment brought giggles out of the other two as they remembered how much Meela loved the children, getting right down on the deck to play with them. While no one could explain it, the Byandi seem to have a strong affinity to human children.\n\n\"How are you going to be once you end your time with us?\" Violletiya asked of Urano.\n\n\"I'll still be here on the platform, working from my own daycare,\" Urano answered. \"I look forward to working with the young of the Community again. My time at Denders was so special. I really loved working in that environment. Besides, the family will likely use my daycare for their needs so I will still see the children frequently.\"\n\n\"Where are the Cats?\" Sylvie asked suddenly, bringing a giggle from Violletiya.\n\n\"They are likely in with the children,\" she replied. \"They love the little ones and are probably looking forward to the day that they are big enough to play with.\"\n\n\"I would have been so worried about them, seeing their teeth and claws, until I saw how much they truly love the children,\" Sylvie mused.\n\n\"For most people not from Hollander's World, the Cats take some getting used to,\" Violletiya told her. \"I keep forgetting how much of a surprise it is for strangers to see the Cats interacting with children like that.\"\n\n\"The pet you grew up with is somebody else's monster?\" Urano asked, smiling.\n\n\"Yes, something like that,\" Violletiya admitted. \"I am so grateful that I was selected to be part of this family. I have experienced so much because of them.\n\n\"We all have something to look forward to,\" she told the other ladies. \"All of us will be part of history working for this family.\"\n\n\"So who are the God-parents to our two little ones?\" Sylvie asked.\n\n\"The Kumar-Pair of the Pod-Drran, effectively, the Empress and Emperor of the Pod-Drran,\" Urano replied, shocking Sylvie who's draw dropped nearly to the deck.\n\nThe Imperial Palace Shuttle Port, Capital City, Pod-Saar, The Sharanas System, 109 Light Years from Terra\n\nThe Kumar-Pair met the ship as it settled on its landing skids in a preferred space in the Palace Shuttle Port. When they had been told that a new type of vessel had appeared in their space, they had been intrigued by the images of a jump ship with no jump vanes, and somewhat larger than what they had remembered. When the Atohan asked for permission to descend to the planet, the Kumaraie had been ecstatic, however, she only gave them permission if she could see this brand new version of PV The Trine.\n\nNow it was sitting at the shuttle port and the hatch was slowly opening. Junelliya Atohan Herlan and Hanalei Anar, holding Poda-Rai-Latti and Poda-Rai-Dosri, respectively, stepped out of the hatch, with Fayad Piscium Sai-Ro behind him. Three other human women came out of the vessel, one of which The Kumaraie recognized as Takebayashi Urano.\n\n\"You are looking radiant, Kumaraie,\" the Atohan informed her, noting that her baby bump was now easily visible. That brought a smile from the Kumaraie as she placed her hands on the just over two months old bulge. As the Pod-Drran gestation period was just over seven months, they tended to show baby bumps much earlier than humans.\n\nIt was difficult to gage the stages of Pod-Drran gestation from the size of the baby bump as it was determined by many factors, including the number of fetuses in the womb. The Pod-Drran could have as many as six children, however, the most common number was four, matching the number of breasts on a female Pod-Drran.\n\nWhen Dosri saw the Kumar-Pair, she opened her arms and said \"G'Ma!\"\n\nAt a perplexed look from the Kumaraie, Junelliya informed her that Dosri was trying to say 'God-Mother'. That brought a smile from the Kumaraie who immediately took the little child into her arms. She settled into the Kumaraie's arms with a smile and her trade-mark hug, not in the least perturbed by the differences in her own, her mother's, or the Kumaraie's skin types.\n\n\"You are getting better with your words, little one,\" the Kumaraie praised her. \"You will need to start practicing your Pod-Drran now.\"\n\n\"She already has, Kumaraie,\" a new voice spoke from the hatch. The Kumaraie looked up to see Mind-Ur, Caye-Ur, Rend-Ur and Lent-Ur standing in the hatch. \"We have been speaking Pod-Drran with her every time we see her, which is almost daily when the children are on the platform.\n\n\"The House of Ur invokes its status as a Great House and requests permission to address the Kumar-Pair in reference to the opening of trade between the Pod-Drran and the Union at a much greater level, Kumaraie,\" Mind-Ur said with a bow.\n\n\"Family first, Mind-Ur,\" the Kumaraie admonished. \"I would like to see this new vessel that carries my God-children.\"\n\nThe Kumar-Pair were impressed with the new ship and said so, especially the difference in height between the decks which made it more comfortable for the taller Pod-Drran. They remembered their original ship as being much more cramped than this newer iteration.\n\nThey had been shown all over the vessel and ended their tour in the new cargo section on the third deck. There were several boxes marked in Pod-Drran script with Pod-Saar as their destination. The Kumar-Pair looked at Mind-Ur.\n\n\"Three things of importance to the Pod-Drran are happening simultaneously, Kumaraie,\" Mind-Ur began.\n\n\"First, the opening up of trade between the Greater Community and the acceptance of peace between the Union and the Pod-Drran means that the Pod-Drran will be included in trade discussions with other members of the Greater Community.\n\n\"Second, the Union company Pallanders Shipbuilding, is building an orbiting shipyard in the Piscium system. They intend to use it to teach members of the Greater Community how to build Union style ships, which the Greater Community will build for themselves under licence. The Pod-Drran will be included in this venture.\n\n\"Last, there is a great push to explore inwards towards the center of the galaxy from the furthest outpost of known life among the Greater Community. Currently, only the Djina\u00ebte ships are large enough to accommodate the kind of numbers that would be required on such expeditions, however, the Djina\u00ebte ships are not the most comfortable for non-Djina\u00ebte members and the Djina\u00ebte are only interested in exploration if it provides them with new worlds for their cities.\n\n\"We need large ships that can accommodate most of the member races of the Greater Community,\" Mind-Ur informed them.\n\n\"You need our Man-Jays to be turned into expedition ships,\" the Kumaroe caught on quickly.\n\n\"Correct,\" Junelliya admitted. \"The President has asked me to seek out your concerns in having your ships modified for this purpose. The ship would be staffed mostly by the Pod-Drran but with a large number of individuals from the member races who are interested in such explorations.\n\n\"This would give the Pod-Drran significant credibility with human and other Community member species, Kumaroe,\" Junelliya finished.\n\n\"At the expense of losing our Man-Jay...\" the Kumaraie stated.\n\n\"Yes, Kumaraie,\" Junelliya agreed. \"However, you will have the opportunity to build jump ships of your own on par with anything that the Greater Community currently possesses. The only stipulation will be that some of your ships will be flagged for mutual support for the Greater Community defences if such a need arises.\n\n\"If you agree to this, the full integration of the Pod-Drran into the Greater Community can be accomplished within a space of twenty of your years, as opposed to fifty to one hundred years,\" Junelliya finished.\n\n\"And these boxes?\" the Kumaraie asked.\n\n\"These are trade items, Kumaraie,\" Caye-Ur replied. \"They include new computers, servers, relays, and mini-satellites to set up a complete information system compatible with your wrist comps.\"\n\nThe Kumar-Pair looked down at their wrist comps, for all intents and purposes, useless except as glorified, limited range, comms devices between themselves and their Kumir-Rai/Ro, all of whom had purchased the comps while on Liramor-23.\n\n\"And the cost of such an enterprise?\" the Kumaroe demanded.\n\n\"Twenty-five million Layes, Kumaroe,\" Caye-Ur replied. \"That is the cost of the machines. Rend-Ur and Lent-Ur can install the systems and link them to the Pod-Drran information system with the assistance of Mind-Ur. The system will be planet wide and capable of reaching any Pod-Drran who purchases a wrist comp, which we will provide at a reasonable fee.\"\n\n\"And what would constitute a 'reasonable fee'?\" the Kumaraie asked.\n\n\"Ten percent above the cost of such a unit on Liramor-23. We can provide units to suit any taste or budget, from simple comps to the kind of bling that you and your entourage now wear,\" Caye-Ur replied, showing off her own bling encrusted model on her wrist.\n\n\"That would make the House of Ur quite rich,\" the Kumaroe indicated.\n\n\"It would, Kumaroe. I did say that this was trade. The cost of installing and setting up the new system to interface with the existing Pod-Drran system is extensive. We are covering this cost, charging no more than the cost of the machines as we anticipate more than a cost recovery as we sell the comps,\" Caye-Ur explained.\n\n\"That seems like a reasonable proposition,\" the Kumaroe replied. \"If you absorb the cost upfront, you would expect to be compensated in the sales of the comps, minus taxes of course.\"\n\n\"Twenty-five million Layes?\" the Kumaraie asked.\n\n\"It can be taken as an exchequers cheque, trade items, or you can use the same gems that you gave to the Atohan, which fetched an exceptional price at auction on Terra, both for their uniqueness and for the fact that they came from the royal vaults, Kumaraie\" Caye-Ur replied.\n\n\"Twenty-five million is a small price to pay,\" the Kumaroe informed the Kumaraie. \"The cost of installing our own planetary information system was considerably more and is not as effective as the information systems on human worlds. I was impressed with our comps abilities while we were on Terra, especially the ability to reach out to other worlds almost immediately.\"\n\n\"What would we do to maintain this system?\" the Kumaraie demanded.\n\n\"Malton University teaches all levels of computer and information knowledge, from simple maintenance to the design and building of complete systems,\" Mind-Ur informed them. \"There is a branch of the University on Liramor-23.\"\n\n\"I remember seeing it, our esteemed Atohan was a teacher of music at the university,\" the Kumaraie smiled. \"Very well, which would you prefer, a note from the exchequer or the cost in gems?\"\n\n\"I think that if we could split that for twelve million in gems and a thirteen million Layes note from the exchequer that we could place at the bank on Liramor-23,\" Caye-Ur replied. \"That would give us funds to purchase items from Pod-Saar as required.\"\n\n\"One last thing,\" the Kumaraie asserted, \"I would know why this information is coming from you and not from my Ambassador on Liramor-23.\"\n\n\"When we heard that the Atohan was bringing the Kumaraie's God-children to see her, we asked if we could come along,\" Mind-Ur replied simply.\n\n\"You should be receiving a missive from your Ambassador later today with this information on it via FTL comms probe,\" Junelliya informed them.\n\n\"Once again we are at the mercy of old technology,\" the Kumaroe stated, laughing.\n\n\"In regards to that, the TGA estimates that all planets in the Terran Union will be attached to the ICS grid by the end of next year,\" Junelliya told them. \"Since Pod-Saar is a sponsor planet of the TGA, that means you too will be connected by the end of next year. With the new information system that the House of Ur is providing you, you will have seamless interconnectivity with the Union and to the Greater Community.\"\n\nThe Kumar-Pair looked at each other and smiled. Next year was shaping up to be something special for the Pod-Drran.\n\nInterspecies Embassy, Liramor-23, The Piscium System\n\nMayute met with Augraf, Tougrate, Malnad, Ambs. Michelle Halten, Ambs. Charles Demoin\u00e9, and Dr. Maya in the Toolend Embassy, the same day that the children were on Pod-Saar with their God-parents.\n\n\"It is good to meet you in person, Dr. Maya,\" Mayute began. \"We are pleased with your suggestion to change the name of our organization; it will make things much smoother for non-empaths.\"\n\n\"Yes, my understanding is that your people would understand any inference due to their telepathic abilities, at least those who are out here in the Greater Community,\" Maya replied.\n\n\"Indeed. Tougrate tells me that you were able to see the patient's reading in your mind?\" Mayute asked.\n\n\"Only while I was touched by Junelliya. However, she has given me the exercises given to her by Augraf and Mandenn. I will be conducting them in the same frequency as she currently uses,\" Maya explained.\n\n\"That might not help you as much as it has helped Junelliya,\" Augraf informed her. \"Junelliya is a special case due to the levels of power she possesses as an empath.\n\n\"Conduct the exercises she gave you and we shall see if you will benefit from the same frequency or not. If so, we will not change things, however, there is no sense in forcing you to overexercise if it brings no benefit,\" Augraf finished.\n\n\"The more important thing is the migraines you are experiencing,\" Tougrate took over. \"You have only had two contacts with us and yet you have shown distinctive changes in your mind. We think that Junelliya was the key to setting your mind in the direction it needed to move to make the necessary changes for you. For now, we suggest you continue your initial forays into telepathy through contact with Junelliya and Malnad. Once your mind changes enough, then we can start conducting one-on-one sessions with you.\n\n\"Malnad will continue to monitor your progress. Erht is aware of your starting point and how much your mind has already changed. We did not expect this faster pace of change. It is significant and important for you and for the Toolend and was probably forced on you accidentally by Junelliya,\" Tougrate ended.\n\n\"You will be important to us in the future, due to your skills as a Crush instructor,\" Mayute intervened. \"We do not have that kind of teaching capacity within the Toolend people. It is not something that is normally done by our people. Because of our long lives, there is no panic if one of our people takes time to learn something.\n\n\"We do recognize, however, that we can benefit as a people by learning new teaching techniques. Should you be able to learn telepathy and synthesize a new teaching technique, especially if that technique can teach empathy in turn to the Toolend, you will become very important in the future of both of our peoples. That is our hope,\" Mayute stated.\n\n\"Tougrate tells me that he was successful with his first attempt at healing a human?\" Mayute changed the flow of the conversation.\n\n\"Not so much heal as allow her to break out of her near catatonic state,\" Maya informed them. \"This is important, however, in that we can now communicate with this person and help her cope with her problems. We also understand the base of her problem and have already informed the authorities, who will be adding the name of her child to the list of missing citizens that the Alliance now holds.\"",
        "\"Yes, we have been very interested in the ongoing situation within the human sphere,\" Mayute replied. \"As it is an internal human issue, the Greater Community has not and likely will not, intervene. The Toolend can and will assist in helping to heal those with mental injuries. We now have a compelling case for making use of the members of the Order with psychiatric and medical training. We have already asked this of the home world as well as sending your suggestion for the name change. We here think it is an excellent idea. It should be well received by our superiors.\"\n\n\"I am pleased to think my suggestion has had such an impact. I did not anticipate that at all,\" Maya stated, blushing.\n\n\"Do not sell yourself short, Maya, your suggestion was very useful indeed,\" Mayute told her. \"The home world should let us know within a couple of days how many of us can be sent to help at the hospital. Hopefully, we can use The Trine to bring our people, first here, and then to Planet Varus.\n\n\"We will need the permission of the Union to allow our people to support the hospital on Planet Varus. According to Tougrate and Malnad, we have permission from President Serment, from the commander of Sector Fifteen, FAdm. Robert, from the Surgeon General of Sector Fifteen, Cmdre. Dr. Seraph, and from the head of the Psych ward at the hospital, Capt. Dr, Defroe. We would still need the permission of the TGA for more than one or two of our people to go to Planet Varus,\" erht ended, looking at Ambs. Halten.\n\n\"We will need to know the numbers before we can complete that, Ambs. Mayute, but we can let the TGA know that the Toolend have been successful and are wanted and needed at Marlin Naval Base,\" Halten indicated. \"As long as the numbers are not too large and that all are members of the Order of Telepaths, I think we can manage the permission relatively swiftly.\"\n\n\"That would be appreciated.\" Mayute answered. \"This would be our first major joint venture between our peoples. We hope that we can get this moving and show the people of the Union how much we can help them.\"\n\nIt would be a couple of days before the numbers were known but Halten was already working hard to grease the wheels of diplomacy within the UDC and the TGA.\n\nUDC Headquarters, Capital City, Terra, The Sol System\n\n\"You saw the request from Ambs. Halten?\" Mnst. Charles Ronter asked of his A/Mnst. William Peter.\n\n\"Yes, sir,\" William replied. \"We also have the report from Capt. Dr. Defroe at the hospital at Marlin Naval Base. He had high praise for the Toolend who were able to break a patient's catatonic condition within minutes of beginning to work with her. That could be very useful for the many hundreds of severe psychiatric cases the hospital now has because of OP Sandcastle.\"\n\n\"I would allow this to progress myself,\" Ronter informed Peter. \"However, this will be a shot across the bow for the anti-alien leagues popping up all over the Union. We will not make this call ourselves, rather, we should push it through the Senate. I would rather have the nutcases going after the members of the Senate than the various representatives and Ambassadors of the UDC.\"\n\n\"That could take time,\" Peter informed his boss. \"The Senate does not move very swiftly.\"\n\n\"I know. I think I will tie this in with OP Sandcastle,\" Ronter stated. \"The Senate needs to get up off its combined ass and move to the next stage. We might be able to force the issue if we claim the needs of the victims are not being met. We can use public sentiment to push this, as well as informing the President of the Toolend request. I have an appointment with him later this afternoon. I will let him know at that time.\n\n\"For now, I would like to set someone up to get things ready to move as soon as we have permission to act. Any suggestions?\" the Minister asked.\n\n\"Why not use Juanita Invierno?\" Peter suggested. \"She will be working with the Greater Community here at the Johal Compound as our representative in the Interspecies Consulate in the near future. We should push her off into the deep end and see if she sinks or swims. If she does well, we'll know that she is ready for her new role.\"\n\n\"Good suggestion, let's do that,\" the Minister agreed. \"I'll let you advise her of this one, she and the Interspecies Consulate will fall under your supervision, the ambassadors and their needs will fall under me. I will let you know what the President thinks after I see him this afternoon.\n\n\"In that same meeting, we will be going over the follow-on to OP Sandcastle, specifically, what we can do to convince the Alliance to hand over the remainder of our missing people. That will be the next big issue for us here. I will want to see Ambs. Flynet as soon as possible. I will need an update on the situation in the Alliance before I see the President,\" the Minister stated, closing the meeting.\n\n************\n\nAmbs. Flynet met the A/Mnst. and the Minister half-an-hour later.\n\n\"Sir, the Alliance is currently in disarray after our raid. The Landstradt initially attempted to claim that this was just a one-off and that we would not be back. That might have worked if we had not hit all six Alliance planets.\n\n\"The Great and Lesser Houses of the Alliance, are run by hardened men who know their business, many of the leaders of the Great Houses being ex-pirates as well.\n\n\"The Lesser Houses, too, have some ex-pirates as heads of houses. Regardless, they are all a crafty bunch who know their business and will not be taken in by the Great Houses of the Landstradt's attempt at historical revisionism.\n\n\"Fayad Piscium has conducted his own research on the Landstradt and the ongoing situation and he speculates that the Landstradt will likely meet next week, probably as early as Monday on Planet Adenomere, next Tuesday our time. I agree with his assessment. The situation is breaking down in the Alliance, with inflation suddenly running high due principally to the recent loss of slaves. They will not likely be open to losing more slaves.\n\n\"I believe that we will have to blockade the Alliance in order to get our people out. Fayad suggests that we wait for the Landstradt to convene and then blockade Planet Adenomere, locking the leaders of the Greater and Lesser Houses on the planet.\n\n\"In my opinion, that would get their attention faster than trying to blockade all the Alliance planets. With the damage we recently did to their home defence fleets, Planet Adenomere cannot put up much of a resistance to a large force that could suddenly show up in Adenomere space,\" Flynet told them.\n\n\"I like that idea better than trying to blockade all their planets. The President will like it as well. Now, we will have to pitch it to the Senate as well,\" Ronter said.\n\n\"Why not let the Alliance pitch it to them instead?\" Flynet asked.\n\n\"Explain,\" Peter ordered.\n\n\"Fayad expects that the Landstradt will conduct a show trial of our captured people, the six unfortunate members who were on the ground when they were overrun,\" Flynet started. \"They will likely broadcast this meeting of the Landstradt and the show trial to all of the Alliance. We still have our Comms pickets in a secluded orbit at Planet Adenomere. We can broadcast their trial to all the Union. That should set a fire under the Senate.\"\n\n\"I like that idea,\" Peter said. \"By the way, do we know why the hell our people were actually on the planet away from the raids?\"\n\n\"Yes. Adolphus Adenomere, youngest son of Peotre Adenomere, was remotely causing the death of slaves in the vain attempt at stopping the raid. He did not know that he was killing more non-Union slaves than Union slaves as many of the Union slaves already had their slave collars removed. However, the team needed to get there and stop him from continuing these random murders and did so. They stunned the fool and then knocked out the family computer to stop him murdering more innocents when he recovered.\n\n\"Unfortunately, their ship was overrun while they were on the ground. They were left behind when Capt. Raymond Clark ordered the ship to leave, stranding him and five Marines,\" Flynet finished.\n\n\"The same Raymond Clark who was just invested with the Presidential Gold Medal for Distinguished Service to the Terran Union for his part in bringing the Pod-Drran into peaceful contact with us?\" Mnst. Ronter asked.\n\n\"The same, sir. He was the planner behind OP Sandcastle,\" Flynet confirmed.\n\n\"The President is aware?\" Peter asked.\n\n\"Yes, sir. He knows who was captured,\" Flynet informed them.\n\n\"I'm going to want to speak with Adm. Ramison to see what he is planning in this regard, though I think he is waiting for our input. I like the idea of waiting for the Landstradt to gather then blockading one planet. We should push that,\" Ronter ended, dismissing the meeting.\n\nPresidential Compound, Capital City, Terra, The Sol System\n\n\"Good afternoon, sir,\" Minister Ronter greeted the President on entering his conference room, being the last to enter.\n\n\"Good afternoon, Charles,\" the President replied. \"Let's get down to business shall we. I need to know what is going on in the Alliance and what we can do to facilitate the release of our remaining citizens.\"\n\n\"It is unlikely the Alliance will give up on our remaining citizens, sir,\" Charles informed him. \"The Alliance is going through a bit of a rough patch since the raid. Inflation has turned ugly, fueled by the loss of so many slaves.\n\n\"While the actual numbers are small in comparison to the overall numbers of slaves on the Alliance planets, those numbers were pulled from many of the Great Houses, leading to speculation on the collapse of some of them. So far, we have seen seven of the thirty-eight Great Houses showing signs of significant financial difficulty, enough that they could lose their status as Great Houses. Of the remaining thirty-one Great Houses, most are showing some financial difficulty due to the raids.\n\n\"In addition, the Lesser Houses are more flexible in how they do business and will likely fair much better over the next few months, bringing speculation of a request by many for Great House status amongst their less fortunate senior peers. This will lead to a shift that could significantly change the makeup of the Landstradt.\n\n\"Because of this, the Landstradt would be reluctant to hand over any significant numbers of slaves to us, which means we would have to force their hand.\n\n\"We have an indication that the Landstradt will likely have a show trial for the six people they captured during the raid. We are not sure when that would begin, however, we expect the Landstradt to convene on or around Tuesday, our time, next week, sir, meaning the show trial would be conducted during that session sometime in the next week or so,\" the minister finished.\n\n\"So, are you suggesting that we blockade the Alliance?\" the President asked pointedly.\n\n\"Yes, sir. It is the only thing that will likely make them give up our citizens. However, if I may make a suggestion? Why blockade all the planets when we can Blockade Planet Adenomere while the Landstradt is sitting?\n\n\"The Landstradt only meets so often and those meetings are usually not well attended. They are often lucky to get a necessary quorum for any serious business.\n\n\"Having said that, it is likely that this meeting will see all of the heads of the Greater and Lesser Houses in attendance. If we conducted our blockade when they were all present on Planet Adenomere, that would disrupt their control over there own houses and businesses, putting much more pressure on the Landstradt to act,\" Charles advised.\n\n\"I like that thinking, Mr. President,\" Adm. Ramison stated. \"We are retaining 500 ships to conduct a blockade of the Alliance. That many ships spread out over six planets means that Alliance ships would have a difficult but not an impossible time getting in and out of the planets. However, that many ships around one planet would effectively shut down that planet, leaving no access.\"\n\n\"What about the show trial?\" the President asked. \"Is there anything that we could do to bring that to a successful conclusion of getting our people out?\"\n\n\"Well, sir, the Senate will be reluctant to authorize a blockade of the Alliance. But, the Landstradt will likely broadcast their meeting and the show trial to the Alliance. Our Comms pickets are still at the Alliance planets. We could simply allow the Union to see the trial itself, sir, live minus a few minutes light,\" Charles offered.\n\nThe President smiled. It was not a pleasant smile, rather, one that was quite predatory.\n\n\"Damn, I like that idea, Charles. Admiral, make another plan for blockade, one that includes only Planet Adenomere. Charles, you will have our Ambassador to the Alliance ready to petition the Landstradt. I want him to address the Landstradt on our behalf on the first day of the next sitting of the Landstradt,\" the President ordered. \"That gives us four days to prepare, people. Let's get to it.\"\n\nAdenomere Main Estate, Planet Adenomere, The Adenomere System\n\nAllen had been in Adenomere City for four days now, learning everything there was to know about the new air limo. Aurelia was watching, excited, as the new vehicle settled gently in the roundabout in front of the estate. As soon as it was down, she was running down the steps to the new car. Allen barely had time to get himself out of the pilot's seat and open the rear door for her and her entourage.\n\nThe giggling passel of women swiftly entered the rear of the large vehicle with Aurelia and her PA in the front seat looking over the pilot and co-pilot's chairs. Allen climbed back into the pilot's seat and the limo gently left the ground, flying around the estate as the woman talked excitedly in the back.\n\n\"Allen, we will need a co-pilot, who would you recommend?\" Aurelia asked, surprising Allen. The Masters never asked his opinion on anything.\n\n\"I would recommend Kodani, Mistress Aurelia,\" Allen suggested. \"She had previous experience as an air pilot before her family's bankruptcy forced her into a life of slavery.\"\n\n\"Let's get her papers back in order then. I will leave that with you, Allen, make it happen,\" Aurelia ordered.\n\nAllen smiled, though Aurelia, behind him, couldn't see it. After fifteen minutes of flying around the estate, the limo touched down once again in front of the main door. Jaar was waiting...\n\n\"Father-in-law, to what do we owe the pleasure of your company?\" Aurelia asked as she alighted from the limo.\n\n\"I was told that there was an unknown aircar flying over the estate, then told that it actually belonged to you?\" Jaar stated, looking at Aurelia.\n\n\"I just purchased it, my own air limo. It has room for fifteen in the rear and a pilot and co-pilot up front. It is capable of flying five hours at just under Mach before it has to set down to allow the engines to cool down, which means we can fly to the other continent if needed. There is a small galley for a maid to prepare meals should we go for an extended trip and plenty of space in the rear for cargo,\" an ecstatic Aurelia gushed.\n\nJaar first smiled then frowned at her. \"Please inform us, in future, should you decide to go on a joy-ride around the estate. We wouldn't want to accidentally shoot you down,\" Jaar admonished, looking toward the vehicle.\n\nAurelia saw the look. \"Would you like to look at it?\" she asked, getting a nod from him. They spent the next few minutes going over the limo.\n\n\"Our own aircar is not up to this one's standards,\" Jaar commented. \"Do you intend to be at the Landstradt meeting on Monday?\" he wanted to know. \"If so, may we travel with you?\"\n\n\"Of course, Father-in-law, you and Marius may travel with me,\" Aurelia assured him, secretly happy that she would have them in her vehicle as she would be less likely to be attacked.\n\nArrangements were quickly made to fly to the Landstradt together.\n\nLandstradt HQ, Adenomere City, Planet Adenomere, The Adenomere System\n\nThe new limo settled down onto the road ten kilometers from Landstradt HQ, aircars not being permitted to fly within ten km of a shuttle port.\n\nAurelia was impressed with the limo's capabilities. It had taken more than an hour for her to travel the distance from Adenomere City to the Adenomere Estate when she had originally arrived on Adenomere some six weeks previously. The limo had taken only ten minutes to transport them to the city from the estate. The ride on its wheels was so smooth that they could almost believe they were still in the air. All-in-all, she was pleased with her recent purchase.\n\nAurelia, Jaar, Marius, and their PAs left the rear of the vehicle when they arrived and moved swiftly into the venue where they were confronted by a scene that had not been seen at the Landstradt in more than fifty years, the full Landstradt in attendance.\n\nAurelia touched base with her female friends that she had been cultivating since her arrival on Adenomere so many weeks ago. She had been diligent at cultivating the members of all the Greater and Lesser Houses on Adenomere and was also a familiar face with many of the Houses from New Hadria.\n\nA woman approached Cierra and advised her that all Aurelia had asked had been accomplished. Cierra bowed her head respectfully and passed the information to Aurelia a little later, getting a ghost of a smile from her boss.\n\nAurelia was speaking quietly to all of her acquaintances about the upcoming events of the morning, when she expected many of the Greater Houses to be pushed back by House Adenomere and House Climb, working in tandem. Surprisingly, one of the people she was speaking with was Lady Cynthia Climb, the current matriarch of House Climb, who was opposed to her husband's attempt to destabilize the Landstradt. The term 'Lady' was only bestowed on the House Matriarch and only that of the senior branch of any house.\n\nLady Climb, and most of the others that Aurelia spoke to, were against a major shift in the Landstradt so soon after the Union raid. The Landstradt needed to project solidarity at this time.\n\nAs the time to begin neared, the Patriarchs/Matriarchs of the Great Houses took their seats in the front rows. With two exceptions, Lady Katrynna Handren of New Hadria, and Lady Sylvie Marshall of Planet Surdend, all of them were male. There were five seats for each house, the principle seat for the Patriarch/Matriarch, the seat on his/her left for their PA/Chief of Staff, a seat on the right for the heir apparent, and two seats directly behind the Patriarchs chair for additional advisors, which were more frequently filled by family members, though those seats were not always occupied.\n\nJaar Adenomere sat in his seat with Korman on his left and Marius on his right. It was the first time that Marius had occupied this seat, which established him as the heir apparent.\n\nBehind Jaar, slightly to his right, sat Aurelia, there to provide her economic and political input, which Jaar had learned to value. On her left was her PA, Cierra. A few other women sat behind their patriarchs, mostly the wives, the Ladies of the houses, though a few were daughters or, like Aurelia, daughters-in-law.\n\nBehind the Great Houses, the 120 Lesser Houses sat, in the same configuration of five seats per house. Behind them sat the general audience, those members of the houses that could not sit with the Patriarch, members of the public, mostly politicians, and members of the media, those media types not permitted on the floor.\n\nThe Chair banged his gavel and brought the Landstradt to order. He took the roll, for the first time in nearly fifty years, the Landstradt was fully attended.\n\nThe minutes of the last meeting were read out and adopted. Then they got down to new business, starting with new house business.\n\nJaar stood and was acknowledged by the Chair.\n\n\"It is with immense pleasure that I name my son, Marius Adenomere, as my heir apparent,\" he began, formally acknowledging his son. \"I would also name Aurelia Gordon, soon to be my daughter-in-law, as Lady Adenomere, in the absence of my late wife.\"",
        "Aurelia was surprised by this statement. Usually, the Patriarch would wait for a year after a marriage before formally acknowledging a new woman in the household.\n\nMarius leaned forward.\n\n\"Father, is it wise to do such at this time?\" he asked of Jaar.\n\n\"It is my right to name my successors, as I have named you,\" Jaar reminded him. \"It is also my right to name the Lady of the House. Aurelia has proven her worth to this house. I would reward that, in much the same way as I have rewarded you as heir.\"\n\nMarius gave Aurelia a look that showed he was less than pleased but he did not dispute his father.\n\nKorman leaned back and touched his comp to Aurelia's. She suddenly found herself with much more, legal, access to the Adenomere accounts than she previously had.\n\nAs Marius was peeving, Korman could not set up him up with the codes for the Heir. He eventually gave up trying, satisfied to wait until later in the day.\n\n\"Does anyone contest this action?\" the Chair asked, knowing that only the members of House Adenomere could. There were no dissenters, Jaar had formally made his son the heir and given Aurelia status as a member of the House of Adenomere.\n\nA few more people stood and followed Jaar's example, naming their heirs.\n\nThe Chair called for new Landstradt business.\n\n\"First order of new Landstradt business,\" the Chair boomed out. \"The status of the Great Houses. There are seven Great Houses that are currently suffering significant damage after the Union raid on the Alliance. We need to determine what will befall these specific Great Houses.\n\n\"We have three options: first, to impose voting restrictions and a set time limit on these houses for their return to full member status, free of debt; second, to provide a loan from the Landstradt to assist these seven houses in order that they retain their position and voting rights.\n\n\"This option is not feasible at this time as the Landstradt, too, is suffering fiscal restraints due to the pressures placed on the Great and Lesser Houses from this recent Union raid.\n\n\"And last, to remove one or more of the seven houses as members of the Great Houses, taking away from them their right to vote as a Landstradt Great House.\n\nAurelia leaned forward.\n\n\"Father-in-law, the Landstradt is significantly divided on change at this time. Most of the members believe that they need to retain the Landstradt's current status during this time of crisis,\" Aurelia whispered to Jaar.\n\n\"That may be, however, this is something that we have been waiting to do for over thirty years now,\" Jaar returned testily. \"There are those who want these Houses turned over, giving new blood to the Landstradt.\"\n\n\"I am only passing on what I am hearing from the other members of the Landstradt,\" Aurelia told him. \"The situation is volatile though, pushing for change now could come back to haunt us.\"\n\nJaar knew that Aurelia was right but he could not back down now that he had put so much effort into what was about to occur.\n\n\"Are there any who will speak for these houses?\" the Chair asked.\n\nSome of the Great Houses stood up and supported four of the seven houses, leaving House Gordon of New Hadria, House Pendar of Erden's World, and House Palay of Planet Surdend unsupported.\n\nAll were aware of the enmity that House Adenomere and House Climb had for these three houses. They were deliberately left out on a limb by the other houses.\n\n\"Are there any who will speak against these houses?\" the Chair asked. Jaar Adenomere stood.\n\n\"Chair, I, Jaar Adenomere, speak against these three Great Houses. They owe much to House Adenomere, to other houses, and to the Landstradt, debts that they will likely not meet within the next year. They should be removed as Greater Houses and three new members of the Great Houses, chosen from the Lesser Houses, should be placed in the Landstradt,\" Jaar stated.\n\n\"A motion has been put forward by Master Adenomere to remove these three houses from Great House status and have them replaced by suitable Lesser Houses. Is there a second on this?\" the Chair asked.\n\nAs expected, Master Climb stood and seconded the motion. The stage had now been set.\n\nSeveral Patriarchs of the Lesser Houses stood.\n\n\"The Chair recognizes Master Ligne,\" the Chair indicated.\n\n\"House Ligne is opposed to destabilizing the Landstradt at this time. We would know why House Adenomere cannot grant an exception to debts owed by these three Great Houses when they apparently have granted exceptions to the other four Great Houses,\" Ronald Linge demanded.\n\nJaar rose to answer. \"These three Great Houses owe significantly more than the four other houses. If we, House Adenomere, granted them dispensation, it would be a significant detriment to our own financial situation. We cannot allow that,\" Jaar informed the Chair.\n\n\"How much is owed by these three houses?\" Ronald Linge demanded.\n\n\"Chair, House Gordon owes more than seventy-five billion AP above what it can pay, House Pendar owes Fifty-two billion AP, and House Palay owes thirty-five billion to House Adenomere and House Climb alone. We do not know how much above that is owed to other houses.\n\n\"The other four houses owe less than ten billion AP and can be expected to make that up in the near term,\" Jaar responded.\n\nRonald stood again. \"In that case, we ask for an independent review of the fiscal situation between all seven Houses, House Adenomere, and House Climb. Both House Adenomere and House Climb are known to 'fudge' fiscal documents. We would know for sure if these numbers are correct.\"\n\n\"Chair, the Governors of the Bank of Adenomere have already made a review of debts owed by these houses,\" Jaar responded. \"These are the numbers that they have provided.\"\n\n\"Chair, House Adenomere controls the Governors of the Bank of Adenomere. We ask for an independent review in order to have the true numbers available to us,\" Ronald Ligne returned.\n\nThe Landstradt broke out into howls and jeers after that comment. The Chair was forced to gavel down the incident and demand order.\n\n\"We will have a divide!\" the Chair roared. \"We will vote by electronic means.\"\n\nJaar stood, he didn't want this to be a secret vote. \"I would know who is voting for these Houses,\" Jaar intoned. \"I ask for an open vote.\"\n\nOf course, Master Climb seconded the motion. Surprisingly, it passed unanimously.\n\nAurelia leaned forward again. \"This does not look good. I suspect that you have overstepped yourself in this issue.\"\n\nJaar was visited by a premonition. Aurelia so far proved correct on all political and economic issues, and this was an issue of both.\n\nThe voting began, with each Patriarch/Matriarch standing and voting yea or nay on the issue of an independent review of the bank. The vote from the Great Houses was principally against the review, however, all but seven of the Lesser Houses voted in favour of the proposal, with seven other Lesser Houses abstaining, catching Jaar, and the Greater Houses, by complete surprise.\n\n\"The vote is 106 to thirty-seven with seven Great Houses unable to vote and seven Lesser Houses abstaining. As the vote is greater than the two-to-one margin necessary for the Lesser Houses to overturn the vote of the Greater Houses, the motion passes. There will be an independent audit of the seven Great Houses at the heart of this issue and of House Adenomere and House Climb,\" the Chair spoke. Pandemonium broke out in the Landstradt at the announcement. The Chair gavelled down the outburst and demanded order.\n\n\"The Landstradt will take a fifteen minute break,\" the Chair growled, banging in gavel as he rose and stepped away from his desk in front of the Landstradt. He went immediately to Jaar and Martin Climb.\n\n\"What were you thinking?\" the Chair hissed of the two.\n\n\"I wanted to know who was against House Adenomere,\" Jaar informed him.\n\n\"Well now you know; it was the entire fucking Landstradt! Electronically, we could have controlled the vote, by giving them an open house, you may have cut all of our throats!\" the Chair turned and marched away, leaving a panicking Jaar and Martin to strategize over what was to come.\n\nAurelia was moving amongst her acquaintances and friends. She was canvassing the feeling of the Landstradt. It didn't take her long to determine the pulse of the issue. She swiftly returned to Jaar's side.\n\n\"Father-in-law, the Landstradt is not happy with how House Adenomere has been using the Landstradt over the last few years. You, House Climb, House Burling, and a few others of the Greater Houses, have become the boogie-men under the bed to the Lesser Houses.\n\n\"This situation has given the members of the Lesser Houses a chance to speak out against the Great Houses and specifically against our house and that of House Climb. The Great Houses are nervous, anticipating a revolt by the Lesser Houses on how politics is conducted in the Landstradt.\n\n\"Do not expect anything to go your way, or in favour of the Greater Houses during the remainder of this Landstradt,\" Aurelia advised him.\n\n\"What do you think will happen?\" Jaar asked her.\n\n\"If I was running this, I would seek to take the Chair from House Burling, which openly supports House Adenomere. It would give the Lesser Houses a big advantage if they could rest control of the Landstradt from the Greater Houses,\" Aurelia said after a moment of pretend reflexion.\n\nAurelia knew this would happen, as she had suggested just that to one of her friends, a daughter of House Latten from New Hadria. She expected that the rest of this morning would be an interesting session.\n\nWhile Aurelia was now nominally a member of House Adenomere, having been so named by Jaar himself, she was not going to allow Jaar to break House Gordon, nor the Landstradt.\n\nThe Dewfall, In Orbit, Planet Varus, Cl\u00e9ment System\n\n\"Well that was interesting,\" Liea Samson muttered to those with her as they watched the feed of the Landstradt from their comms picket at Planet Adenomere. \"That would imply that the Lesser Houses are going to take over the Landstradt.\"\n\n\"I agree,\" Fayad said. \"There is no doubt that the Lesser Houses are not happy with the status quo. It gives too much power to the thirty-eight Greater Houses. This is a means for them to break the current power cycle and make changes.\"\n\n\"How does that help us in our issues?\" Cmdre. Dostier asked.\n\n\"Unknown at this time,\" Fayad admitted. \"We do not have the pulse of the Lesser Houses and what they want to do with the Landstradt. As well as changing the current political dynamics, are they willing to look at domestic issues, such as the treatment of slaves?\"\n\n\"We need to have someone from the UDC go to the Landstradt,\" Dostier said.\n\n\"Normally, Ambassador Flynet would be there, sitting in the audience,\" Fayad stated, looking at the man in question. \"However, he is currently not a popular person with the Alliance.\"\n\n\"Regardless, you need to be there to speak with the members of the Landstradt and to read the pulse of this situation,\" Dostier informed Ambassador Flynet, looking pointedly at him. \"We cannot be left in the dark waiting to see what they decide. We need to push the issue and let them know what we will be doing to get our people out.\"\n\n\"My ship is currently on a run to Terra,\" Harold Flynet advised.\n\n\"We could bring you on our ship,\" Fayad told him, \"as long as you name our ship as a Diplomatic Courier.\"\n\n\"I have the authority to do that,\" Flynet acknowledged. \"Who would we bring?\"\n\n\"I will go,\" Junelliya stated flatly. \"My powers will come in handy to support our Ambassador if things get out of hand in the Landstradt.\"\n\n\"Anyone else we should bring?\" Flynet asked.\n\n\"If my wife is going to be there, then I will be there as well,\" Fayad spoke.\n\n\"Kim?\" Liea asked.\n\nShe thought for a moment and then gave a short nod. If things went wrong, they would need her support. She could, and would, openly display her weapons on Adenomere, as it was a habit of citizens to use long-knives in disputes.\n\n\"I do not know if it is wise to bring one who is so armed,\" Flynet noted. \"While it is the norm for the people of the Alliance, they might object if one of our own carried swords into the Landstradt.\"\n\n\"We could just allow them to take her swords from her,\" Junelliya commented, sweetly, getting a laugh from those around the table. They could imagine the look of shock on people's faces as they lost an arm or a hand, if they were lucky...\n\n\"Very well, I will give you Ayesha in case there is a need, and I will also let you take Riley with you. I have a feeling that you will need her expertise,\" Liea stated.\n\nThey watched as the Landstradt came back from its break.\n\n\"This could be interesting,\" Junelliya commented.\n\nLandstradt HQ, Adenomere City, Planet Adenomere, The Adenomere System\n\nJaar noted the hardened look on the faces of the members of the Lesser Houses. It appeared that Aurelia was correct. He sent a signal to the Chair, Advising Francis Burling that he might have to postpone a vote. The Chair gave him an almost imperceptible nod, acknowledging the message.\n\nBefore they could start, there was a commotion at the entrance.\n\n\"Who is disturbing the Landstradt in session?\" the Chair demanded.\n\n\"Chair, I am Jorge Devine, I am the representative of the Attorney General of Planet Adenomere, sir,\" the man stated. \"I have warrants for the arrests of several members of the Landstradt for conspiracy to commit murder and for actions in contravention to functioning of the Landstradt.\"\n\nThe Chair took notice of this statement. There would be nothing he could do to postpone this action without opposing the Attorney General of the planet, something that he would not like to do.\n\n\"Can these warrants be read in the Landstradt offices, sir?\" the Chair demanded.\n\n\"Yes, sir, they can be if you so desire,\" was the reply.\n\nHowever, that choice was howled down by the Lesser Houses who wanted to know which houses were implicated in misusing the recourses of the Landstradt.\n\n\"The Chair does not want to be seen as blocking arrests involving the contravention of Landstradt ordinances,\" the Chair stated, allowing the arrest notices to be read out in session.\n\n\"Sir, I will open the first warrant, it is in regard to the unjust accusations that led to the destruction of the Yunki Clan, ten years ago: the Attorney General of Adenomere accuses Master Jaar Adenomere, Patriarch of the House of Adenomere, his elder son, Marius Adenomere, Master Martin Climb, Patriarch of the House of Climb, Master Emond Burling, Patriarch of the House of Burling, and Peotre Adenomere, Head of the Third House of Adenomere, of being complicit in the conspiracy to undermine the confidence of the Landstradt with the Yunki Clan, by the planting of false evidence that led directly to the destruction of House Yunki.\"\n\nThat led to an explosion within the Landstradt which the Chair quickly gavelled down.\n\n\"Please continue, sir,\" the Chair instructed.\n\n\"Masters Jaar Adenomere, Emond Burling, and Martin Climb, are also implicated in the conspiracy to steal House Yunki property and resources and make them parts of their own companies and houses.\n\n\"In addition, House Adenomere and House Climb are accused of taking into their possession the members of the Yunki Clan as slaves and working the elder members of the Yunki Clan to death while selling off the younger members of the Yunki Clan as slaves to other houses and or companies on other Alliance planets.\"\n\nThis statement caused an uproar in the house that was again required to be gavelled down by the Chair.\n\n\"Sir, I have here the orders for the arrest of these individuals forthwith. A Judge has already established that, as this was a deliberate act, it constitutes multiple First Degree Murder charges, kidnapping charges, the illegal sale of non-slaves as slaves for profit, theft of property, theft of funds, and the misuse of the Landstradt ordinances for the illegal purposes. There will be no bail.\"\n\nAgain the Landstradt erupted in comments both for and against the actions. However, because the Alliance was formed by pirates and thieves, any actions by the law on Alliance Worlds was an almost foregone conclusion as the law could not act without irrefutable proof.\n\n\"Chair, I also have additional arrest warrants,\" the man advised.\n\n\"Go ahead,\" the Chair replied resignedly.\n\n\"This is in regard to the Attempted Murder of Aurelia Gordon, now Lady Aurelia Adenomere, when she first arrived on this planet on 31 August 2486. It calls for the arrest of Master Jaar Adenomere, Patriarch of the House of Adenomere, his son Marius Adenomere, Antonius Adenomere, Head of the Second House of Adenomere, his son Fabian Adenomere, Peotre Adenomere, Head of the Third House of Adenomere, his son Lucius Adenomere, and the Marcon Security Agency, which carried out the attempt, and lays out the structure of the conspiracy and its purpose.\"\n\nAurelia stood and looked at Marius. \"Marius? You would have me killed? Why?\"\n\n\"Silly girl, you are worth ten million AP dead or alive,\" he told her with a sneer. \"I never intended to marry you. You were foisted on me by your father and mine.\"\n\nWithout thinking, Aurelia's hand lashed out, striking Marius squarely in the face with power, nearly knocking him out of his seat. The blow rocked Marius hard and left a large red handprint on his face.\n\nBefore a blinking Marius could react, he was placed in cuffs by the local police. The Landstradt watched in shock as the men were led away.\n\nAurelia had to act. She moved to the Patriarch's chair, purposely sitting down while all watched her.\n\n\"I am Lady Aurelia Adenomere, now the head of House Adenomere, as confirmed by Jaar Adenomere, by the Landstradt, and by the Attorney General just now,\" she intoned, looking squarely at the Chair. After a moment, he nodded his head, acknowledging her position.\n\n\"Mr. Korman, I need control of all House Adenomere computers and assets,\" she whispered, looking to her left. Korman nodded his compliance to his new boss.\n\n\"Lady Adenomere, Marius never took possession of his status as heir,\" Korman whispered back. \"I can redirect that status to you and then declare Jaar Adenomere incapacitated. Technically, he will be within a month or so. The courts will likely find him guilty and he will be executed, that's as incapacitated as it gets.\n\n\"Once the house computers have been redirected, that will make you the sole owner of the Main House of Adenomere,\" Korman told her.\n\nAurelia nodded and Korman did something on his comp then set his comp to hers, she felt the rumble and heard the beep. Korman checked his comp, giving a short nod, then indicated that Aurelia had the title. The house computer acknowledged this and all accounts were immediately transferred to Aurelia.\n\n\"Well done, Mr. Korman,\" she spoke, genuinely impressed.\n\nKorman blushed with pride. In all his years, none of the Adenomeres had ever praised him for any of his hard work. He now understood why her servants were willing to give so much of their time and effort to Mistress Aurelia.\n\nNo, he amended to himself, Lady Adenomere.\n\nAurelia rose and was acknowledged by the Chair. \"Chair, with the information that the Prosecution has provided, is House Yunki going to be reinstated as a Great House?\" Aurelia pointedly asked.\n\nAll members of the Landstradt now turned to face the Chair, who suddenly found himself in an untenable position.\n\n\"By Landstradt law, any house that has been falsely accused of a crime must receive reparation after the false accusation is confirmed. However, there is not much that can be done for a dead house,\" the Chair stated.\n\nAurelia stood again. \"Chair, it has been noted that all of the children of House Yunki have been sold off as slaves. Do we know where they went?\"\n\nShe looked around at the members of the Landstradt. If any of them had taken possession of the Yunki children, they were either not aware of it, or not saying so for fear of being implicated in the conspiracy.",
        "\"Chair, House Adenomere has two members of the former Yunki Clan, May and Mei, who happen to be part of my entourage. I would ask that if the Yunki Clan is reinstated, that these two members be given compensation, in that the assets of the Yunki Clan, illegally seized, be returned to them and that they be named members of the Landstradt and the Matriarchs of House Yunki,\" Aurelia said, pointing out the two maids as she signalled them to approach.\n\nKorman had pulled some data from the computers, sending Aurelia information as to what had happened to the estates of House Yunki.\n\n\"Chair, I have the disposition of the parts of the Yunki estates in Adenomere possession, I would provide these as part of House Adenomere's restitution for House Yunki. These are companies and property given to House Adenomere at the dissolution of House Yunki.\n\n\"While the properties and companies went to House Adenomere, House Burling, and House Climb, most of the money from the dissolution of House Yunki went to the Landstradt. I would ask the Landstradt to open its files from that period and that compensation of the amount taken by the Landstradt, plus interest, be returned to the Yunki Clan.\"\n\nImmediately a dozen members of the Landstradt, mostly those who would not likely lose anything, stood to second the motion, tying the hands of the Chair.\n\nA motion was made to reinstate House Yunki as a Great House, while a second motion for reparation was made. Both were voted for almost unanimously, the only Houses contending the issue, those that had gained from the destruction of House Yunki, the exception being House Adenomere, now controlled by Aurelia, who was in the vanguard of those requiring compensation.\n\nFrancis Burling, Chair of the Landstradt, was sweating now. He knew that he and his brother had embezzled quite a considerable amount of the money taken from the Yunki Clan, before it reached the Landstradt. He could not allow the books to be opened from that period. He would have to find a way to stall that issue, and quickly.\n\nAurelia formally acknowledged her two maids as persons in their own right and had Mr. Korman remove their slave collars. The two weeping women fell into Aurelia's arms and thanked her profusely for her actions. She had May sit beside her and Mei sit behind, next to Cierra.\n\nMarcin Petracian, of House Petracian from Gaetan's Planet, stood, the Chair acknowledged him.\n\n\"House Burling has been implicated in the destruction of House Yunki. While the Chair has not been named in the arrest warrants, there is a singular lack of confidence in the Chair by the Landstradt. I would ask for a division of the Landstradt in the removal of House Burling as Chair due to lack of confidence and the installation of a new Chair,\" Marcin intoned.\n\nBurling Gavelled him down. \"You are out of order, sir,\" Burling returned, harshly. \"There is no precedent of non-confidence in the Chair.\"\n\nImmediately, he was shouted down as dozens of people stood to second the motion. This set off a debate in the Landstradt until Aurelia stood. The Landstradt went silent.\n\n\"A motion has been put forward and seconded, on a vote of confidence in the Chair. A division will be made. We will vote verbally with an Aye or a Nay, what says the Landstradt?\" she asked.\n\n\"Aye!\" was shouted by almost the entire Landstradt. They had intended to remove Burling anyway but the motion had almost broken down in arguments over procedures until Aurelia had intervened.\n\n\"The Landstradt is unanimous in its intent,\" Aurelia stated. \"House Burling is removed from the position of Chair.\" Her statement brought a resounding cheer from the Landstradt.\n\nAurelia calmly raised a hand and once more the Landstradt went silent.\n\n\"A new Chair must be named. I suggest that the position of Chair should not be held in the hands of a Great House. I nominate Master Ligne as potential Chair,\" Aurelia stated.\n\nRonald Ligne rose. \"As I am the Patriarch of the House of Ligne, I decline the position of Chair of the Landstradt. In return, I recommend Master Martin Grovern, head of the Second House of Grovern as the new Chair,\" this was seconded immediately by no less than seven houses as all knew Martin by name and reputation. The vote was again nearly unanimous.\n\n\"Martin Grovern was brought to the front of the Landstradt, where Francis Burling was deposed as Chair and Martin installed. A cheer went up in the house.\n\n\"I shall go and clean out my office to give you a place to work,\" Francis Burling stated, turning to leave.\n\n\"STOP THAT MAN!!\" Aurelia shouted. The former Chair was immediately seized by those who had brought the new Chair forward.\n\n\"Why so solicitous, Master Francis?\" Aurelia demanded. \"Most people are not so fast to leave their position. I suspect that you still have access to all of the computers in this building. I want you nowhere near where you can do damage to the information contained within them.\"\n\nThat caught the interest of Jorge Devine who asked to speak. \"Chair, I have subpoenas for information regarding the computers of the Landstradt. I have a Judge's warrant to seize information on the computers of House Adenomere, House Burling, House Climb, and the Landstradt in reference to the events of the dissolution of the Yunki clan and its aftermath in the Landstradt.\n\n\"Francis Burling, you are hereby ordered to give up the security codes and passwords to the computers of the Landstradt, failure to do so will result in your being added to the list of conspirators in the deaths of the elders of the Yunki Clan. You are to be detained and not allowed access to any of the computers, if you do not comply, you will be handed over to Inquisitor Harold of Hollern Prison until such time as you provide the information that we seek,\" Devine informed Burling.\n\nA look of sheer fear crossed Burling's face at the mention of Inquisitor Harold. He swiftly wrote down the codes and passwords, knowing it was the only way in which he would avoid the tender mercies of the Inquisitor.\n\n\"Jorge Devine, you are given access to the Landstradt computers solely for the information regarding the events of the Yunki Clan. This does not give you the right to go fishing for other information that may or may not be on those computers,\" the Chair intoned, getting a nod of agreement from Devine.\n\nBurling was restrained in a chair beneath the sight of the new Chair, while Devine and his assistant went into the Chair's office to seek out the information they needed, a Landstradt assistant going with them to ensure that it was all that they took off the computers.\n\n\"We need to take a break,\" the Chair spoke. \"Too much is happening at this moment. I recommend that we take a prolonged lunch break while a place is established for the Yunki Clan and Mr. Devine completes his search. We will convene again at 13:00.\" The new Chair banged the Gavel and the House broke apart with several people converging on the seats of House Adenomere...\n\nAurelia begged off their comments for the moment so that she could take the Yunki Twins shopping for more appropriate attire. That got a chuckle from the well-wishers as they opened a way for them to leave the Landstradt.\n\nEnd of chapter forty.\n\nPlease rate and comment but remember to keep your comments respectful.\n\nCheers! See you all on Liramor-23!\n\nBe well, Be kind to one another, Be safe.\n\nbigtddybr"
    ],
    "authorname": "bigtddybr",
    "tags": [
        "sci-fi",
        "fantasy"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/all-that-glitters-ch-40"
}