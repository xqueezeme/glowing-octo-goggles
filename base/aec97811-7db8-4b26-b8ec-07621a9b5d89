{
    "title": "Mutual Benefits Ch. 10",
    "pages": [
        "It was hard to read Morgan. I know there was this whole stereotype that 'when a woman tells you she's not upset and it was not that big a deal, she's very upset and it was the biggest deal' -- Kevin in particular was sure to drill that into me. But not trusting someone I was dating seemed kind of silly. If she told me she was not upset and I was supposed to take that as 'I am upset,' when the heck would I ever think she was truly not upset?\n\nGranted, this situation was a bit unique. This wasn't exactly a small matter. It wasn't like I told her she only 'kind of' looked pretty in a dress -- she caught me grinding on her best friend. Some part of me was amazed that it wasn't game over for our relationship right then and there.\n\nI was both relieved and weirded out that it seemed like this wasn't the first time Morgan had to deal with this kind of thing from Taylor. She seemed more... exhausted than surprised. I was equally relieved, as well as a little nervous, when Morgan texted me early in the morning and asked if we could meet up and just talk about what happened last night with no Taylor in the room.\n\nI agreed instantly, thanking my lucky stars I was up early enough, and rushed to school. I was about an hour early, with no pre-school extracurriculars or anything lined up, so we had ample time. Given very few other students were there, we decided to just walk around the halls and talk.\n\nWe didn't speak for a minute or so after we said hello to each other and decided to just walk. After a minute of just walking, Morgan sighed loudly. \"I guess I'll have to be the one to bring it up, huh?\"\n\n\"I don't know what you want me to say about it. You asked me to meet up,\" I softly replied.\n\n\"Yeah, fair. I guess, is there anything you wanted to ask me now that Taylor isn't there?\"\n\nI stopped and shuffled in place, before continuing when I realized that Morgan didn't stop walking. \"I guess I'm just amazed that you don't seem to... mind it. Not as much as I'd have thought.\"\n\nMorgan turned to me, her face plain and emotionless. \"That's not a question.\"\n\nI coughed nervously. \"Do you really not mind this situation, or did it bother you more than you wanted to... show?\"\n\nShe rolled her shoulders and leaned back against a wall. I stopped with her. \"Well, yeah, of course when I first heard about it it bothered me a lot. It bothered me even more that Taylor told it to me as if she was testing you or something.\"\n\n\"She was te-\"\n\nShe waved a hand in front of me. \"Don't worry. I know you weren't. She just wanted to use this to get to me and try to make herself look as innocent as possible.\"\n\nMy face soured. \"Taylor's a snake,\" I spat.\n\n\"No, she's just... complicated,\" she replied. \"It's not right of her to care so much about this, like, revenge of hers, but it is a fact that I did hurt her in the past. She has a hard time getting over things. At this point you can't name-drop half of the boys in the school to her without setting her off somehow.\"\n\nMy sour expression remained, but I got a bit of sympathy for her. \"She sounds... damaged.\"\n\n\"'Damaged' is an extreme word,\" Morgan replied, still leaning against the wall. \"Not inaccurate, though. I think she feels as though she's been hurt so much by some guys here, she has this free opportunity to hurt whoever she wants as long as she gets her own safety or something.\"\n\nIt probably would have been betraying Taylor's trust to admit to Morgan that she hit the bullseye with that one, but I couldn't help remembering Taylor practically said as much to me before.\n\n\"So in this weird way, I don't mind,\" Morgan continued. \"It's pretty clear you two were doing stuff before our date, and I get that would have been hard to bring up.\" She got up from the wall and looked directly at me. \"That doesn't change the fact that it hurt a lot when I first found out, but... the tears are out now, I guess. I've had time to think about it and process it. It happened. I don't think I'm going to get hurt any more than when I first found out. I meant it when I said I won't care if you two continue. I get that it's hard to say no to that kind of thing and as long as it doesn't change our situation, I don't think you two doing your own thing is going to emotionally affect me.\"\n\nShe said a lot there, but one thing stuck with me. \"I'm sorry that it hurt a lot, Morgan,\" I admitted. \"I didn't want to hurt you, and I feel awful that I did. \"\n\nStrangely, she smiled at me. \"I appreciate that that was the part you cared the most about,\" she told me softly. She gave me a small hug, which, out of awkwardness, I barely returned. To top it off, when the hug was over, all I could do was blush and look down.\n\nShe laughed pityingly at me. \"I really will have to make the first move for everything with us, huh?\" she asked rhetorically. \"If you can't hug me because of last night, we clearly have to have a whole other type of talk.\"\n\nI blushed again. \"No, no, it's not that,\" I replied quickly.\n\n\"But I will have to be the one to start everything, won't I?\"\n\n\"That... might be the case,\" I admitted. \"I'm just worried about... going too far when I initiate or something.\"\n\n\"Don't you think we're through the looking glass?\" she asked with a smile. \"I know you don't have a hard time getting into the groove, even if you're not dating the person.\"\n\nI looked down in shame, and she slowly brought my head back up. \"Nope, none of that,\" she commented lightly. \"I may be cool with it, but I'm allowed to make jokes about it. It happened. Joking about it is how I deal with it.\"\n\n\"Okay,\" I sighed. \"But it's so much easier when someone else does it and you just go, 'okay.' I don't know how far you want to go, or if you want it, or what the right time is, or...\"\n\n\"Quinn, you're overthinking,\" Morgan cut in. \"I'm challenging you to make the next step with us without worrying about that.\"\n\n\"What does that mean?\" I asked.\n\nShe shrugged. \"I won't initiate anything until after you do. To give you some practice.\" She smirked at the silliness of her own comment. \"I want you to not think about any of that stuff. I just want you to feel out what the next step is for us, and do it when the time is right. I appreciate you thinking about what I want, but you keep second-guessing yourself. You're just going to keep telling yourself not to show you care for me in case I think it's weird or too much, and I won't. Odds are, whatever you choose to do with me... I want it too.\"\n\nI gave her a confused expression. \"What's that supposed to mean?\"\n\nMorgan gave a small laugh. \"Quinn, if I told you, that would defeat the whole point of this, wouldn't it?\"\n\nI wasn't laughing with her. \"It feels... weird to press on after last night. Especially so freshly after last night happened.\"\n\nMorgan dropped her laughing face and looked at me with complete seriousness. \"Maybe that's actually a big part of why I want to move forward. It we're just awkwardly saying semi-sweet things to each other, but you and Taylor got to... you know...\"\n\nIt was my turn to smile. \"What, are you jealous?\"\n\nShe gave me a sarcastic smile. \"We're obviously not there.\" We shared a small chuckle at that. \"But, I mean, kind of. If she wanted me to see that shit, am I entitled for wanting to see...?\"\n\n\"See what?\" I asked her.\n\n\"Not see. But, y'know,\" she replied, shrugging.\n\n\"I'm not sure I do.\"\n\n\"Well, that's not my problem. I gave you your challenge.\"\n\nI stared at her for a bit, chuckling in discomfort, before looking down again. \"Gahh, I'm not good at this,\" I mumbled to myself.\n\n\"That's okay,\" she soothed. \"I'm not looking for how good you are. I'm just asking...\" She gestured vaguely.\n\nI looked at her for a bit. She wasn't saying anything more. Was she asking me to...? No, I couldn't just assume that.\n\n...Huh. Okay, I was overthinking. That's what she was talking about. Realizing that made me kind of terrified in a weird way, because I knew what I had to do, and what she was asking, but every second that I let pass was making the moment weirder. I steeled myself, trying to push those feelings of anxiety and hesitancy back down into my stomach, and walked calmly towards Morgan. I walked closer and closer, invading her personal bubble, not allowing myself to think enough to back out of this. I practically held my breath as my face got closer and closer to hers. I felt so weirdly nervous, afraid I was going to screw it up or be a novice compared to her and not know how to do it or whatever, but luckily, my brain was too focused on those thoughts to stop me from closing the gap between us. My face came up to hers, and before I knew it, we kissed.\n\nIt felt so... new. Not bad, too nervous to be good. Just a simple closed-mouth kiss, one small peck on the lips. Feelings were surging through me. I backed away from her and cleared my throat, feeling my voice quivering like a loser.\n\n\"S-something like th-that?\" I managed to ask.\n\nMorgan could help but giggle at me. \"You look like you're going to pass out.\"\n\nI nodded. \"Y-yeah, I feel like it too,\" I admitted.\n\n\"So how was it? Did I do okay? I wasn't too hard on you, was I?\" Morgan asked, obviously joking.\n\n\"Hey, you have experience, I don't,\" I defended myself. \"It's easier to just do it once you've done it before.\"\n\nMorgan folded her arms and gave me a 'wait for it' look. A second or so later, my own point dawned on me.\n\n\"Oh. Huh.\"\n\n\"Mhm,\" she giggled again.\n\n\"Can we uh... do it again? I want to try again,\" I replied quickly.\n\n\"I dunno, Quinn. I guess I'll just stand here and see how you decide to answer that,\" she replied in a playful voice.\n\nMy first kiss turned into my second, then my third, then my fourth over the next couple of minutes. Once the third or so was out of the way, I could confirm -- kissing was fucking awesome. It was definitely a good thing. They were still closed-mouth kisses, but I got more comfortable and bold with each one. After about ten or so, both of us came up for air.\n\n\"Uh... got any tips?\" I asked jokingly, no doubt blushing.\n\n\"Yeah. Believe in yourself a little bit more,\" she replied. \"And kiss me whenever you want to.\"\n\n\"I kinda really want to right now,\" I admitted.\n\n\"Then come here,\" Morgan laughed, and we resumed kissing, daring to not leave it at little pecks. We didn't exactly make out or anything -- or did we? Was 'making out' just kissing that wasn't closed-mouth? I'd have to ask Kevin later. At any rate, we kissed for what seemed like forever, and for what probably was longer than we meant to. Before long, there was the occasional student passing by us, not crowding around us or anything, but definitely noticing us and what we were doing.\n\n\"Oops,\" Morgan commented, looking around. \"PDA.\"\n\n\"Is it a bad thing?\" I asked, going in for another kiss.\n\nShe readily accepted it, but backed off from me afterwards. \"I think a lot of students see it as kind of tasteless. Even if it isn't, like, making out or anything.\"\n\nHuh. So okay, that wasn't making out.\n\n\"But I think a few students saw us. This'll be really awkward for the rumor mill.\"\n\n\"Wait, what do you mean?\" I asked, worried that there was something else about high school gossip everyone else knew about but I missed.\n\n\"Oh, I'm just saying, imagine the scandal, if two students, one of them a kind of popular girl, kissing in the hallway, and neither of them have even asked the other to be their boyfriend or girlfriend yet...\" Hints were rolling off of her voice in waves.\n\nI couldn't help but chuckle. \"Is that your-\"\n\n\"You don't get to ask,\" Morgan butted in.\n\nI huffed annoyedly. \"Hey, Morgan, would you want to be my... or... would you like me to be your boyfriend?\"\n\nMorgan chuckled with her best 'Oh, Quinn' face. \"Yes to both,\" she laughed, wrapping her arms around me. We exchanged one more kiss before deciding that the walls of Hazelwood had seen enough.\n\n***\n\nAnd boy, could Hazelwood get the word out. By lunchtime, it was clear that Morgan and Quinn were the story of the day. Of course, the response to that was usually, \"Quinn who?\" but apparently a lot of the seniors knew me as 'the school's study buddy' because of that thing I did that one time (thanks Kevin) so people could figure out who Quinn Shen was. It was weird; I was known before now, but at this point my name was known. Even by the time Morgan and I were holding hands between the first two classes, people were figuring out, 'hey, that's Quinn Shen' before even needing to ask Morgan.\n\nAnd it was all because I was being seen with Morgan. I knew the group was popular, but I really underestimated just how popular she was. Either that, or the entire populace of Hazelwood really needed to get a social life. Or a combination of the two.\n\nThe most nervewracking part of it all was when Morgan asked me to sit with her group at lunch. At first I was hesitant -- the events of Taylor's basement weren't even twenty-four hours old -- but a gentle squeeze of my hand and a gentle reassurance later, I was begrudgingly walking to her lunch table, my hand in hers.\n\nI felt childish for doing it, but I avoided Taylor's gaze most of the time I was there. I was just too nervous to look at her. It was just as well that I didn't concentrate on her, or even anyone except for Morgan. Milo and Crystal barely spoke to me, Lexi kept asking Morgan intrusive questions about us, and Taylor was oddly silent the whole time.\n\nI tried my hardest not to feel insulted at the team's group effort to ignore me, especially since I was kind of their first conversation topic -- or more specifically, what happened yesterday. Taylor did most of the talking, and, I have to admit, did a weirdly good job of never lying and yet leaving so much critical information out that it somehow seemed like they had a fight about something else entirely. It seemed like misunderstandings and even fights might have been commonplace of the group, since they did a dissection of yesterday's situation that lasted all of five minutes, then moved on as if it were nothing. Part of me wondered if Milo was going to hold a grudge for never texting him, but either he forgot or was really good at not showing it.\n\nNear the end of lunch, Taylor said something out of the blue and instinctively I looked up from my food to meet her gaze. What was weird was that there wasn't a hint of malice on her face, not for last night and not even for clearly ignoring her for most of the lunch period. Once she saw that I was looking at her, she simply gave me a warm smile and chuckled, \"Hey Quinn.\"\n\n\"Uh...\" I awkwardly looked down before looking again at her. \"...Hey Taylor.\"\n\n\"You two look really happy together,\" she observed, the warm smile still on her face. There wasn't anything foreboding in her tone, no apparent trick she was playing. \"It's really nice to see.\"\n\nI didn't reply, but Morgan was quick to. \"Thanks,Taylor,\" she replied. \"Kinda crazy how this all worked out, huh?\"\n\nTaylor's smile got bigger as she shot Morgan a look. \"Weird how only we know how crazy it, like, really was,\" she pointed out. The two laughed politely at that, but I couldn't help but bury my face in my hands. I could not figure out either of these two girls for the life of me. Hell, I couldn't figure out any of the four girls or the boy for that matter. It's like I got in a relationship with an alien or something. A cute, spunky alien that I really liked kissing a lot.\n\n***\n\nIt only really hit me at the end of the day that I was truly Morgan's boyfriend now. After school, she texted me asking to meet her in the main hallway, and when I got there, I found out that it was for no real reason. Once I got there, I was expecting some sort of purpose or point to it, but once I got there, she smiled and just started talking to me, with her friend group one by one joining us, as well as one other guest.\n\n\"Why, hello, ladies! And Milo,\" Kevin greeted us. \"You holding my brother ransom? I'll go, hmm, ten dollars. Tops.\"\n\nCrystal shook her head at him. \"You think you're so charming,\" she observed with an annoyed tone.\n\n\"Hi to you too, Crystal,\" he rebutted. \"Quinn and I always walk home together. I'm just waiting for him. I can either do it over here, or I can awkwardly stand over there and stare at him, your choice.\"\n\n\"Either way, you'll be awkward,\" Lexi cut in.\n\nKevin looked comedically around at the height of all of our heads, clearly above Lexi's, doing an exaggerated searching motion. \"Who said that?\"\n\nLexi rolled her eyes as Morgan answered him. \"I was hoping to just talk to him for a bit. You waiting around breathing down his neck might be kind of weird. I'm sure you could handle it if you walked home yourself like a big boy.\"\n\nKevin shook his head. \"I don't even get what I did to you all to get this kind of treatment.\" He donned a goofy face and mimed adjusting a tie. \"I don't get no respect.\" He paused for effect. \"No? It's Rodney Dangerfi- never mind. Do you mind if I ask Quinn to speak for himself, or do you already have him wrapped around your finger?\"\n\n\"There's a lot of tension here,\" I mumbled quietly. I turned to Kevin. \"I honestly don't know how long I'll be here. Can we just assume it's like one of my studying days or something?\"\n\n\"I was actually going to ask him about that,\" Taylor cut in, notably for the first time since she got there. She gave Kevin a small smile. \"I'm sorry for making it short notice. It's just a year-ending thing.\"\n\nIt was cool of her to stick up for me like that, and in a much more diplomatic way than any of the girls there, including Morgan. Milo was just silently staring at him too. Kevin shrugged and said, \"Alright, it's cool. See you later, Quinn,\" and like that, he was off.\n\nOnce he was away, Talor turned to Morgan and shrugged. \"See?\" she asked.\n\nMorgan gave her a look -- clearly there was some bigger thing there -- and started talking to the group about him and the other guys. I was a bit confused as to why they called me here just to keep talking about their usual topics -- it's not like I was going to be good at gossip -- but amidst some kind of conversation between Morgan and Crystal, I turned to Taylor.\n\n\"Thanks for defusing the situation with Kevin,\" I said. \"You thought really quickly on your feet telling him that.\"\n\nTaylor smiled slightly. \"I was actually gonna ask you about that. Could we study today? I mean, finals are beginning tomorrow, and this might be our last chance...\"\n\nI shouldn't have been so obvious about it, but the first thing I did when she asked was turn towards Morgan. By now, Morgan either was done with her conversation or cut it off, and was clearly looking at me out of the corner of her eye.\n\nShe was testing me, I told myself. I couldn't say yes. Or, wait, I should say yes so it was clear Morgan didn't have a monopoly on me and who I could hang out with, but then deny Taylor sex afterwards. No, wait, I should respect what she said earlier and assume there was no trickery.\n\nI really couldn't tell you why Morgan thought I was an overthinker.\n\nRealizing the gravity of what Taylor was telling me, and knowing I really did want to see her succeed, I slowly nodded. \"Yeah, I think I can make time tonight,\" I told her.\n\nTaylor beamed. \"Thanks, Quinn. Let's kick this final's ass.\"\n\nI nodded with determination, then turned back to Morgan. She was no longer looking at us, having gotten back into a conversation with Milo.\n\n\"Do you think we should go now? Just to make sure we have as much time as possible,\" Taylor continued, looking at the clock on the wall of the hallway.\n\nIf I already said yes, I didn't really have a vested interest in when we go, and even though Morgan called me here, it clearly wasn't for any important reason, so I figured she wouldn't hold it against me if I cut it a little short. \"Yeah, sure.\"\n\n\"Cool,\" she replied with a smile. \"Yo, bitches! Anyone need a ride?\"\n",
        "Lexi and Crystal shook their heads. Milo held up his hand casually, also declining. Morgan, turning back from Milo, thought about it for a second and nodded her head. \"Thanks, Tay.\"\n\n\"Let's get going, I don't wanna stay at school any longer than I have to,\" Taylor addressed the group, even though only Morgan and I had agreed to go with her. Amazingly, the whole group started moving, even though half of them weren't even going with her. Just more power Taylor had over the group, I guess.\n\nTaylor ended up walking ahead of us, far enough that Morgan felt confident tapping me on the shoulder and turning to me. When I did, she got really close and whispered in my ear. \"I know Taylor can be pushy. If she wants to fool around, only go for it if you want to. Let her know how you feel. I won't mind either way,\" she whispered, before giving me a slight kiss on the cheek. I couldn't help but smile at Morgan's words, and when she retracted from the kiss enough to look me in the eyes, I leaned in and kissed her right on the lips.\n\nShe readily and heartily accepted the kiss, moving in to passionately hug me as I kissed her. I tried responding in kind, moving into her too, enjoying the feeling of her body on mine as our lips never parted. We heard a loud echoey cough from down the hallway and Morgan pulled back, the two of us seeing an annoyed Taylor looking at us.\n\n\"Are you coming or not?\" she asked in a huff, decently far from us at this point. Morgan only chuckled and kept walking, with me in tow. What a crazy fucking situation this was.\n\n***\n\n\"Three red marbles and two blue marbles,\" Taylor answered with confidence in her voice.\n\nI grimaced in response, reading from the 'answers' section at the back of the book. \"Try again.\"\n\nShe huffed angrily. \"Maybe the book's just wrong, maybe it's that.\"\n\n\"Fine, give me the question,\" I replied, and she turned her book around so I could read it. I hastily wrote some notes down, figuring out the problem and finding the answer. After about a minute, I shrugged. \"Nope. Book's right. Try again.\"\n\n\"Fuuuuck me,\" she sighed as she turned the book back and went back to scribbling. \"I'm going to feel, like, so fucking good when this class is over.\"\n\nI didn't say anything so she could continue concentrating on the assignment. First and foremost, that was most important. Even though Taylor and I had become what I'd gingerly call friends, and fooled around a couple of times along the way, the primary reason we were here, and hanging out at all, was making sure she was going to do well on her data management final. I'd be remiss if I allowed anything to get in my goal's way.\n\n\"Okay,\" Taylor said, mostly to herself, as she concentrated. \"Okay. Okay. Hold on. I've got this.\" She scribbled some more, and stared at the paper for a bit. \"Ffffffffour blue marbles and two red ones...?\"\n\nI was unmoved. \"And how did you figure that one out?\"\n\n\"Oh my God, Quinn, tell me if I'm right,\" Taylor spat at me.\n\nI probably couldn't stop a small smile from forming on my face. \"Show me your work! Then I'll tell you.\"\n\n\"I'm gonna kill you,\" she playfully said as she practically lunged at me, pinning me to the ground in what now felt like a familiar scenario.\n\n\"You know what's gonna happen next,\" she almost growled at me. \"Tell me if I got it. I have my ways of making you talk.\" She purred her last few words as she ground her crotch against mine.\n\n\"Are you just always ready to do this kind of thing?\" I asked her, and she smirked and wiggled her eyebrows in response. \"Okay, get off of me, let me get the book.\"\n\nShe lowered an eyebrow and smirked at me. \"Nice try, Quinn,\" she asserted. \"You definitely remember what the book said. You even did it yourself. Four blue marbles, two red ones. Was that the correct answer?\" She continued her assault on me as she asked.\n\nAccording to Morgan, the choice was mine when it came to how I responded to this. Obviously I was getting hard with Taylor grinding her crotch against mine, especially knowing from our previous encounter, or at least betting, that she wanted me inside badly, and was working on getting me horny enough that I would throw caution to the wind and just thrust myself inside her. I bet it would feel amazing, not only to get to fuck her, but also to get to fuck her, Taylor Wise, with the consent of my own hot girlfriend no less.\n\nTaylor took my silence in thought as a victory, slowly forming a grin as she kept up with grinding her now-wet pussy on me. \"So easy, Quinn,\" she murmured, though with a bit of a husky voice.\n\n\"I could say the s-same thing to you,\" I challenged her.\n\nShe merely shrugged. \"What can I say?\" she asked in an overly innocent voice. \"I'm just sitting here, trying to get comfortable. Why, is there something on your mind?\"\n\nOf course there was. I was unable to stop myself from wondering what it would be like to fuck someone. I bet fucking Taylor would have been amazing. Not only did she have an amazing body for it, she was definitely experienced, and ridiculously eager for me. I could almost feel a wet spot growing on my own pants through her actions.\n\nI sighed, feeling her clothed pussy make contact with my raging hard-on over and over again. I caved pretty darn quickly. \"Yes, y-you were correct,\" I breathed. \"Can I g-get up now?\"\n\n\"Thought so,\" she chuckled. \"So easy, Quinn. But if oyu don't wanna get up -- if you want me to keep on sitting here and doing this with you -- that's okay, you know.\" Her grin deepened.\n\nMy body was reacting but my voice still showed hesitance. \"I don't think we...\" I managed to get out, not stopping her at all.\n\n\"Oh yeah? What, was it Morgan? I saw her whispering to you earlier. She was trying to guilt trip you, wasn't she? She already said that she was okay with us doing this, y'know...\" She was putting on her best seductive voice for me. \"She's fine with it. I even talked to her myself.\"\n\n\"Actually, sh-she wasn't trying to guilt-trip me,\" I panted, now grinding back against her. I wanted to be strong, I really did, but my teenage hormones, the anticipation of knowing I could finally have sex if I caved, and all of our history was weighing down on me like a boulder. \"She was a-actually giving us her blessing.\"\n\nTaylor sighed contentedly and threw her head back as she continued grinding on me. \"Fucking right,\" she breathed. \"Just... let's skip the foreplay. I've literally been asking for this... how many times? Let's get you inside me. Let me show you how to fuck, Quinn.\"\n\n\"That... d-doesn't mean you have mine.\"\n\n\"What?\" She slowed down her grinding, her body's touch on mine now practically delicate. Her head rose back up to look at me quizzically.\n\nI grunted. God, this was so difficult. \"I... am in a relationship now. And-\"\n\n\"But she said-!\" Taylor tried to interrupt me.\n\nI held a hand up. \"Let me get this out, please. I'm in a relationship now, and that changes a lot of things for me.\" The grinding had fully stopped by this point. \"Even if Morgan says she's fully okay with it, I'm not sure if I even want to have sex with anyone else. Believe me, out of everyone, it would be you... but...\" I shrugged in lieu of a good finisher.\n\n\"So what, you're just gonna throw the opportunity away? Quinn, do you know how many guys would kill to be in your position?\"\n\nI smiled meaningfully. \"Yeah, I'm very lucky,\" I replied. \"But a lot of guys would have killed to get to do what we already did, or to be with Morgan. I got to do both, and I'm really grateful for it, but I think I want to just step back and... re-evaluate things. This isn't even a 'no,' but this is at least a 'not now.' If I'm in a relationship now, I think it's important to step back and think more about whether I even want to have sex with another girl. And, it may be silly, but... I think maybe I should reserve my first time for someone I'm dating.\"\n\nTaylor made a shocked face at that, but not shocked as in 'didn't expect it,' but shocked as in, 'oh, wanna bet?' \"Seriously?\" she asked me. \"It's, like, so clear that you want to fuck me. Like, it's written all over your face. I just don't get why you're denying it.\"\n\n\"I'm not denying it. If it, uh, helps... yeah, I really badly want to have sex with you, Taylor,\" I chuckled. \"But... I'm feeling like I shouldn't. And that's important, right?\"\n\nTaylor sighed. \"Yeah, it's important,\" she conceded.\n\n\"And, not to be that guy, but you are still together with Joel, and he doesn't know about this, and it's important that we-\"\n\n\"Oh my God, Quinn. How many times are you gonna bring that up?\" Taylor asked with heat in her voice as she finally got off of me. \"Seriously, would it just make you happy if I just broke up with him or something?! What do you want here?\"\n\nRemembering how Morgan's cooler composure saved the day the last time she got this angry, I tried to remain stone-faced. \"No, of course I don't want you to break up with him,\" I clarified. \"I just think this is a bad idea for a lot of reasons right now. It feels like you really want to rush this, and I don't know, maybe that combined with the Joel thing makes me feel like there's more motives at work here, so I'm really hesitant.\"\n\n\"Huh? I don't get it.\"\n\nI sighed. \"It feels like you're trying to do something more than just have sex with me. You keep trying to get me horny enough to say yes to you. I really appreciate that you listen when I say no, but it's just a little weird.\"\n\nStrangely, Taylor started laughing. \"Haha, wow, I'm a fucking monster,\" she mumbled, mostly to herself. \"If you had told me anyone else was doing that to you, I'd be saying, 'yeah, welcome to my world.' It sounds like what a lot of guys did to me. Keep doing. Keep doing to me.\"\n\n\"That's very mature of you to admit that,\" I commented, not knowing what to say.\n\n\"Doesn't change that I'm doing it,\" Taylor mumbled again. \"I'm sorry. I don't know if you're willing to believe me, but it is just sex. I just want it so I can, like, I dunno, prove to myself that I can get sex from more than just assholes? I mean, what kind of person am I if I can't even get the school nerd to fuck me? No offense, just speaking in, like, clichees here.\"\n\n\"I get it,\" I replied, knowing that she was being insensitive again but also knowing pointing that out would solve nothing. \"Like I said, this isn't a no. It's just... not now. It doesn't feel right. And if you want to prove that we can, you know, have sex, it only makes sense that we should wait until it feels right.\"\n\n\"I would have felt bad fucking you if Morgan didn't say okay,\" she replied slowly, almost with a dry throat. \"I want you to know that. Like, yeah, I played the part, but I don't think I could have gone through with it.\"\n\n\"I believe you,\" I lied. In truth, I had no clue if she would have or not. But I would have been lying to say I truly believed that she wouldn't have done it. \"Do you feel bad about the Joel thing? If I get to ask.\"\n\n\"No,\" she replied immediately. \"He's doing the same thing. As far as I care, we're in an open relationship too, but as soon as one of us brings it up, we'll fight or something.\" She turned to me and cracked a small smile. \"Mutual cheating is like being in an open relationship with don't-ask-don't-tell in it.\"\n\n\"No it isn-\"\n\n\"I know it isn't, I'm making a joke,\" she clarified. \"But my choices are, talk to him about it and be single and known as 'queen of the bitches' to all of his friends tomorrow, or I can be a good girl and suffer in silence, or I can live in his world and have my own fun.\" She stood up, looming over me. \"Which one would you choose?\"\n\n\"I'd talk to him about it,\" I replied earnestly.\n\n\"That's cute, Quinn,\" she replied, helping me up. \"And that's what sounds the best to say. But I bet that's not what you'd actually do. Remember yesterday?\" I shivered. I hated to admit it, but... maybe she was right. Wordlessly, I accepted her help and stood up.\n\n\"Good job on the review,\" I mumbled awkwardly, not knowing what else to say. \"I think you're going to do really well on the final.\"\n\n\"I fucking hope I do,\" she said. \"Do you wanna go home?\"\n\n\"Yeah, I think I do,\" I replied.\n\n***\n\nPlanning a date is so much easier and less anxiety-inducing when you have already gone on one before. My first final went successfully and to celebrate, Morgan and I planned going out to the movies together, with her older brother acting as our chauffeur. I wasn't crazy about that last part, but I went along with it.\n\nBecause I paid for our bubble tea, Morgan insisted on paying for the tickets and the popcorn, which I thought was a kind move, until I realized that meant she had full control over the movie we'd watch. Unfortunately I discovered my error too late, and I swear at the exact moment I opened my mouth to voice my concern, Morgan, still at the ticket machine, turned her head to me and gave me her rare smile, in the form of a mischievous grin, as she produced two tickets.\n\nThe name of the movie alone made me want to hurl. It was everything I was fearing from the land of pointless movies. Some sappy romance with completely unrelatable characters -- no doubt the guy would be rich, good-looking yet alone, and confident except in the ways that others could capitalize on. The woman would be frazzled and claim that her life is 'a mess right now' even though she's weirdly calm and cool in a crisis about it.\n\nWell, at least Morgan would be able to find a character to relate to.\n\nOne large popcorn later, we were finding our seats in the theater. I couldn't help but notice that there weren't too many people there -- mostly other couples, most of them older than us, most of them guy-girl. No doubt I wasn't the only victim of their girlfriend dragging them to this movie.\n\nI turned to Morgan expectantly and she rolled her eyes and picked our seats for us. It was odd -- the theater was mostly empty, so we could have picked some really good seats in the middle, but out of all of them, Morgan picked some seats near the back.\n\nMore oddly than that, Morgan's response when I pointed it out was shock. \"Hey Morgan, don't you think we'd get a better view of the movie if we were around the center? These are kind of out of the way, don't you think?\"\n\nI swear, for a second, Morgan looked at me as if I was stupid or something, but she quickly shifted her expression. \"Do you think so? I've always found that these seats always give you the best sound, and, I mean, the screen is pretty big anyway, it's not like we won't be able to see it.\"\n\nOh. Huh. Sound. I hadn't heard about that before, but then again, the last time I went to see a movie was with the family for Kevin's and my birthday back in primary school, so I simply shrugged and accepted that Morgan was probably more adept at movie watching than I was.\n\nOnce the movie began, my worst fears were confirmed: I was going to hate this movie. I already didn't watch too many movies; they weren't really my thing. It didn't help that this movie showcased the exact type of people I cared the least about, in the most overdramatic way possible.\n\nI probably had a terrible poker face, though in this case it was more like a poker body. I found myself enjoying the movie so little that I was constantly shifting and squirming in place. I wanted to tough it out for Morgan's sake but the movie was testing me.\n\nI guess I was squirming a little too much, because during a quieter moment in the movie, I could hear Morgan giggling next to me. I turned to her to see that she was paying no attention to the movie by this point. \"Enjoying the movie?\" she asked sarcastically.\n\nI smiled sheepishly. \"These types of movies just aren't my thing, I guess. I'm sorry if it looks like I'm making a scene, I'm actually trying to have a good time.\"\n\n\"Well, there's no need to be dishonest,\" Morgan continued, talking in a whisper since it was still a quiet moment during the movie, despite most of the rest of the moviegoers being decently far away from us. I guess they didn't care too much about sound. \"Is there anything we can do to make sure you have a good time here too?\"\n\nI paused. \"Not really, I guess. We can just talk for longer next time about which type of movie we both enjoy.\"\n\nMorgan looked at me through half-closed eyes until I began to feel weird. \"What?\" I asked.\n\n\"You are so lucky you made the first move at school, Quinn, otherwise I wouldn't be doing this,\" Morgan snarked before moving her head in towards me. Completely oblivious, I just stared at her head getting closer before her lips met with mine and she gave me a long, sensual kiss.\n\nI could feel my eyes close as I felt her lips on mine. God, I had missed this. Up to this point we hadn't kissed again, and it had been a few days since I last got to kiss her. As our first kiss ended, my eyes remained closed and I moved into her retracting lips with a second kiss of my own.\n\nThat was all Morgan needed. It seemed she responded well to initiative, as if waiting for me to prove that I actually did like kissing her. Her vigor renewed, she reached around my head to pull me into the kiss and kissed me back with more passion than the first time. I responded in kind, not even thinking, just putting my arms around her in whatever way felt right and kissed her with as much passion as I could muster.\n\nGod, this felt so good, so right. Kissing was fucking awesome. Kissing Morgan was even better. I really liked this.\n\nEven the feeling of her soft lips massaging mine was amazing, but the feeling of her mouth opening and her tongue dancing along my lower lip made me tingle all over. I couldn't stop the slight moan that escaped my mouth when I felt her tongue on my lip, which as I could hear (and feel), made Morgan giggle.\n\nI had, go figure, exactly zero experience french kissing, so I had to do a lot of guesswork with what happened next. Morgan seemed happy and eager for me to experiment with her, and before long, we were wrapped in an embrace, our tongues interwinding and dancing with each other, both of us getting more and more into our little kissing session, our hormones building and our tongues battling for dominance.\n\nMuch like with Taylor, once I got going I got bloder and it became harder and harder for me to stop myself from doing what I wanted. As Morgan and I kissed and made out, our kisses getting larger and our faces getting wetter, my hands couldn't hold themselves back, and first made a grab for their waist, before traveling up her body and caressing her amazing (and I had to admit, large) breasts.\n\nAt once, I broke off the kiss, realizing that I may have gone too far, and immediately whispered, \"Sorry!\" I hoped she hadn't minded my boldness.\n\nMorgan opened her eyes, possibly for the first time since we started kissing, revealing to me that she looked like she was under a spell. She had some kind of crazy hunting look in her eyes as she practically moaned, \"Shut up,\" and got up to sit on my leg. She grabbed my hands, placed both of them on her breasts, then grabbed my face and began kissing me again.\n\nIt was like we didn't pause at all. We went right back into being crazy for each other, feverishly making out with me caressing her beautiful breasts through her shirt. Even with the shirt and bra in the way, it was becoming very clear that she was getting turned on, and from the way she was moaning into my mouth, it was also clear that Morgan was particularly into having her breasts played with. She kept arching her back and shoving her breasts into my hands, starting to grind on my leg. If I thought Taylor could be passionate, Morgan was something else, grinding on me like a girl in heat, desperate for my touch. Possibly desperate for me inside her.\n\nIt's not like we were going to full-on fuck in the movie theater, but even the idea of her wanting me badly enough to make me think of it was making me hard as steel and straining my pants to the point of pain. We kept it up, making out and playing with each other's bodies, for God knows how long.",
        "When we inevitably came up for air, we just stared at each other, the movie at this point not even existing for us. She looked at me with the mix of a bashful smile and pure unbridled lust, and I'm sure I looked back at her the exact same way.\n\n\"Is it weird to say this feels like my first time doing anything?\" I asked breathlessly. \"I mean, this just feels so... special. So new.\"\n\nMorgan laughed quietly. \"I mean I haven't had a proper boyfriend in forever, so I know what you mean. It feels so good to do this with you.\"\n\n\"I don't want to stop.\"\n\n\"Then keep kissing me, and you can have your hands under my shirt this time.\"\n\nI didn't need to be told twice. With renewed energy, we began kissing again, our previous passion for each other still wet on our faces, and I reached under her shirt and began to feel up her stomach, my hands traveling upwards.\n\nMorgan was hot. Literally. Her skin felt noticeably hot to the touch, like her whole body was burning up. I wondered if this was just her passionate reaction to me, and I felt my confidence swell, realizing that if this was her body's reaction, she wanted me just as badly as I wanted her. I mean, I knew we were making out, but there was always that little voice, that self-doubt, defying all rationality. Somehow, of all things, it was her body temperature that made me feel like I was actually the guy she wanted here.\n\nMy hands travelled up her body, reaching her bra (which was very tight on her skin, impossible to get my hands under). I figured unclasping it would be a lot of work, and plus, under her shirt, possibly not worth the effort, especially with the effort needed to stealthily put it back on in a movie theater afterwards. Still, I had Morgan's bra-covered tits in my hands, and she was arching her back and moaning into my mouth at my efforts, so who the fuck was I to complain?\n\nOur passion lasted for the length of the rest of the movie. I had no clue when we started, but it simultaneously felt like we were making out and grinding and feeling each other up for forever, and yet not long enough. And even with the both of us wearing jeans, when Morgan got up off of my leg as the movie winded down and we realized we shouldn't have been like that when the house lights went up, there was a clear damp spot on my leg. I looked at the spot, then at Morgan smugly.\n\n\"That's a new look for you,\" Morgan noted, clearly still somewhat out of breath. \"Confident. It's sexy. Do it more.\"\n\nThis girl was fucking amazing. \"You're fucking amazing,\" I told her, my voice practically unhinged at how pent up I was. I wasn't planning to be sexually overt on this date, but it was clear that as soon as I got home I was going to have to jack off, quickly.\n\nMorgan said nothing, but began to clean up (especially our popcorn, since most of it ended up on the floor after we attacked each other halfway through the movie like hungry animals). Once we were out of the theater, I noticed that she had a deep blush across her face... still. I wondered if I was the only one of us two who was going to masturbate as soon as we got home, but also was not about to ask her such a crass question.\n\nWhen Morgan's brother came around the theater to drive me (and then her) back home, Morgan called shotgun, then reached into her pocket to get her phone, texting someone something. She nonchalantly put her phone back in her pocket and started to walk off to the car when I felt a buzz in my pocket.\n\nMy mind was already swimming with thoughts about whatever the heck Morgan texted me, but even my imagination didn't stop me from being happily surprised when I read Morgan's text.\n\nIm only in the front seat to keep up appearances. I want to be beside you for the whole ride home so badly. Lets go on another date soon.\n\nMy heart, and dick, swelled when I read her message. Stopped in place, I could only look at Morgan. She was still making her way to the car, but, never missing a beat, turned her head around and gave me a sly smile that sent my heart soaring.\n\nThere was no way in hell I'd be able to stay focused enough to study for finals at all this weekend. With how much this incredible girl was now dominating my thoughts, there was room for nothing else. Was I in love? I hoped so."
    ],
    "authorname": "BashfulScribe",
    "tags": [
        "movie",
        "movie theater",
        "popular",
        "teen",
        "eighteen",
        "high school",
        "school",
        "public",
        "date",
        "romance"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/mutual-benefits-ch-10"
}