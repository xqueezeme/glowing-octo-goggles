{
    "title": "Pavlovian Reaction",
    "pages": [
        "This story is a product of a frenzied 5-day writing spree. When I first looked at the 40000-something word monster I'd created, I decided to leave it be for a while, and completely forgot about it. Many moons later, I found it by accident while looking for some documents and thought \"It'd be a massive waste if I wrote all this for nothing.\"\n\nSo I came to the site, saw that there actually are people who are so awesome, that they're willing to edit your regurgitation of words out of the kindness of their hearts. On that note -- a special thanks to LaRascasse for removing several unnecessary limbs from the monster and prettying it up for the public; and to MattKester for essentially teaching me how to use quotation marks with 400+ corrections of misused punctuation throughout the story. This story wouldn't have been submitted without them, so feel free to blame them for everything.\n\nEDIT: The story has a slow build-up. If you want to jump straight to the sex and skip the build-up, go to the last few pages. There's bound to be some sex there.\n\n***\n\nFirst, I suppose it's best that readers get acquainted with the narrator of this story. At the time when this all started she was, that is -- I was, nineteen. I was interested in nearly everything; at least a little bit, and everyone. I listened to everything people had to say, and tried to absorb as much of their experience, knowledge as I could force myself to. I wasn't naturally this way, or at least not completely. I realized that my field of interest and expertise was going to become very narrow now that I was in college, and that I should keep an open mind and listen to people. This interest in people and what they had to say made me popular among my colleagues, although not in a prom queen kind of way. So, during my first year at college I slowly gathered a diverse group of friends.\n\nI made friends with the \"already know everything I need to; going to college just so I can have a degree that proves that\" type, and the perpetually homesick students who were from out of town, the wannabe musicians, the driven students who made all of us lazy ones feel always slightly uncomfortable about the fact that we hadn't started studying yet, etc.\n\nThe group I hung out with the most consisted of three meek and friendly blondes (and a very slim, short, pale, dark-haired girl who always hung out with them) who did well enough in class, but were rarely asked when something needed to be explained. All three (four, counting the dark-haired one) of them were friendly in their own way, and were the kind of people you'd approach when looking for someone to talk to in a group. They were also, in varying degrees, easy-going. They all liked to drink on occasion, and never frowned upon anyone being drunk, but all but one of them disliked drugs, including weed, in any shape or form. They were always referred to as \"The Blondes\", despite the fact that one of the members of \"The Blondes\" had decidedly black hair.\n\nAnother dark-haired girl worth mentioning, though not one of The Blondes, was Priscilla (Pris for short), who I had hooked up with on a few occasions. Usually, we were both drunk or high, so I couldn't really tell whether she would be as eager to kiss me when we were sober. We were both very good students, who studied little but achieved much. Our achievements were different in nature however -- I got by with luck and good on-the-spot thinking, and she was capable of cramming a lot of information into her head in a short period of time. It didn't hurt her case that she was very smart, either.\n\nShe was very laid-back, slim, and barely taller than me, but enough to tease me about it whenever she could. For some reason she was instantly very popular wherever she went, and everyone wanted to know her opinion on things. She was also into the same drugs that The Blondes were so much against. However, they liked Pris and kept hoping that she would eventually realize that \"drugs were stupid\". I knew that she hated heroin more than anything and would never try it herself, despite the open-mindedness she took pride in. I also knew it was somehow related to her first girlfriend, one that she wasn't very fond of even at the time, but I know it shook her up when she found out she was using.\n\nThere were a few others in the \"usual\" group that I hung out with, but they didn't really have as much influence on my daily life as The Blondes and Pris.\n\nAs I mentioned, I was relatively good in college. Just as a side note, I studied programming and mathematics, so it was, to a degree, possible to not study too much and still pass with good grades. There wasn't a class I couldn't pass with relative ease, and I could ace whatever I wanted when I decided to actually put some effort into my studies. I took some pride in my academic success, but not enough to work harder for it. I was comparatively tall at 5'8''. My shoulders were a bit broader than the average woman's, and I had a strong back, which was a legacy from the time I spent playing water polo. I had very long, very thick, wavy brown hair that attracted a lot of attention from people who actually paid attention to that kind of stuff. I wasn't particularly good looking, but I wasn't particularly ugly, either. I looked, in my words, \"good enough\". Good enough meaning that I had a chance with anyone I wanted, but was not guaranteed to succeed solely because of my looks.\n\nMy breasts were larger than average, borderline Ds, and still nicely shaped, with especially nice nipples, and so they were in the center of attention whenever I was naked. Speaking of being naked -- those \"especially nice\" nipples of mine were very hard to control; whenever I took my bra off they would instantly stand to attention, like tiny Mel Gibsons screaming FREEDOOOOM whenever they weren't smothered. Which is one of the main reasons why I always wore one, except when sleeping; the other reason being that I wasn't particularly fond of feeling like my breasts were being yanked out of my chest every time I jumped.\n\nI wasn't butch in the classical sense, I simply wasn't feminine, and my openness led to me being described as \"boyish\" sometimes. Nonetheless, I wore women's clothes and for all intents and purposes, I was and looked like a woman. Also, people often found me affable, easy-going and full of self-confidence (which was true, but only to a certain extent). Quite a lot of them were puzzled by how relaxed I was in stressful situations. The truth was that I just didn't care most of the time about what was happening, so I couldn't be stressed out about it.\n\n***\n\n\"... also thank *GOD* that freshmen got the early morning schedule. I was already dreading waking up at 6.40 to get ready for classes. I don't understand why anyone thinks we can actually pay attention to anything at eight in the morning,\" one of The Blondes rambled on as we were walking from our bus stop to class. We sometimes traveled together since she was the only person from my part of town, and we had grown close thanks to this. \"... Do you remember how dreadful it was to listen to three hours of discrete mathematics IN THE MORNING? How can anyone expect me to follow how the whole science of mathematics rose from an idea of an empty set when I am barely aware of who I am?\"\n\nI was tired and grumpy. I liked waking up before nine at the latest, but slept in that morning and my body was unused to the idea. We arrived at the college building early, and she decided to keep me company outside as I smoked. Oh, did I mention that none of The Blondes smoked? Well, except the black-haired member, she went through a pack a day. However, it always seemed like she was the... black sheep of the group (*ba dum tss*).\n\nWe stayed outside and talked about what each of us had done the last fortnight of vacation. Well, it would have been vacation if we both hadn't left two exams for the last exam period and practically ruined the whole of September for ourselves. We talked about our woes nonetheless and agreed to \"study on time\" this semester.\n\nWe were soon joined by the rest of The Blondes and some other colleagues and decided to go in to at least find decent seats because the classroom was sure to be crowded the first week. Later, of course, people would stop going to class because they were not mandatory; our college didn't insist on students attending any of their classes, and no one paid close attention to who was there or who wasn't. Naturally, most students decided that attending those classes was an unnecessary waste of time. Which wasn't exactly true, but that still didn't make us decide to go. I went to classes that I liked, or ones that I had difficulty understanding on my own. Whatever fell out of those two categories was completely ignored until exam time.\n\nThe classroom was, sure enough, full to the brim. And this was Calculus 2, for God's sake, so it was obvious that this was not going to be the case in the following weeks. In fact, there were a lot more students there than were even on the list of students for the second year. So I could only assume that the extra numbers came from those who have failed this class already, and while formally third or fourth year, still dragged Calculus 1/2/3 along with them. I looked around the room to see who I knew these. Realizing that most of the people I hung out with were there already, I sat next to one of them and exchanged \"Hi\"s and \"How have you been?\"s.\n\nThe lecture was three hours long, but it wasn't as bad as I had expected. The professor seemed to be well aware that we forgot everything we knew from Calculus 1 (even though I passed that exam 4 days before the second year started) and practically baby-sat us the entire time, pausing on every potentially confusing part and explaining it to us. During the lecture, I was partially aware of the soreness in my calves, which was a consequence of my newfound will to walk more daily. I downloaded a pedometer app and, being competitive in nature, kept walking more every day than I normally would, just to get the \"over 10k steps every day this month\" achievement.\n\nI can't allow it to be written in some database that I was unable to do that, now can I?\n\nIt was good for me, and walking home from class took me about an hour and a half, which was usually enough to get over that mark, and way more pleasant than going via a crowded bus for 45 minutes through town. Besides, even the center of town wasn't overly crowded, especially when you were on foot. You couldn't walk more than half an hour in any direction before ending up in a park. The Calculus 2 lecture was all we had for the first day of the second year, so most people formed little groups and went to various pubs near the building to catch up with friends.\n\nAs the crowd was walking out of the classroom, I looked around for Pris. There were way too many students there so I decided to just wait around outside in case she showed up. The Blondes came out shortly after me in a tight, giggling group, and asked if I wanted to go and get coffee to-go with them and find a spot to sit in in the park. I told them I might join them later, and they settled for that. I waited for about 10 minutes, until everyone who'd been at the lecture went somewhere, and there was still no sign of Pris. She was the one I usually hung out with directly before or after class, and I was in the mood for a beer and some deep conversation about which parts of life are worth optimizing, but she didn't show up. I decided to get a beer and join The Blondes in the park to pass time, and then walk home.\n\nThe timetable for the whole week was almost identical each day. The classes started at about 1-2pm and ended in a range of 6-9pm. Which was great if you weren't an early bird I suppose, but I always considered afternoon classes to seemingly take all of my day. At least with morning classes you get up early, finish with them, and have the rest of the day at your disposal. But afternoon classes did leave room for a lot of weekday drinking and staying up late, so they weren't a total miss.\n\nI decided that I would go to all classes, no matter how boring or useless, during the first week. I did go to most, and realized that this semester was going to be particularly dull and exhausting. None of my classes seemed to interest me, and half of them were fairly difficult as well. Priscilla's continued absence from class only added to my overall lack of enthusiasm, and even though we kept a strictly offline friendship (I didn't even have her on any social media, we only texted when we had to agree where and when to meet), I decided to break that and see what was going on, after the third day of her absence. She replied shortly \"we'll talk in person today\" the day after I sent her a slightly concerned message.\n\nI arrived early again, and decided to buy coffee and smoke and wait for Pris outside, thinking that she might show up. Sure enough she did, before I finished the first cigarette.\n\n\"Hey, hey!\" -- she said, in a mocking cheerleader voice and gave me two air kisses. She backed off, smiled at my confusion and hugged me, carefully avoiding my coffee and cigarette.\n\n\"Hey yourself. It's kind of lonely to drink coffee all by myself, you know.\"\n\n\"Sure, if you'd stop smoking with every cup maybe you wouldn't have to do it outside and maybe you wouldn't have to be alone.\" She smiled again. She always had clean teeth, always smelled good, in a freshly showered kind of way, and her clothes were always clean, even though she dressed plainly. I discovered some years ago that I find good hygiene very attractive, so much so that it was the first thing that came to mind whenever someone asked me what my type was. So she didn't have to do much to win me over. She looked good, as I said previously -- slim, a hint of abs, a small but nicely shaped ass, again small but nicely shaped breasts, and smooth, pale skin. She didn't work out much, if at all, but enjoyed walking a lot, and led a lifestyle that didn't keep her awake at \"eating hours\". Despite all this I found her attractive mainly because of the aforementioned hygiene and her intellect, the way she looked was a nice, but unnecessary, bonus.\n\n\"Sure, I'll stop doing that as soon as you do. I don't think you're capable of separating caffeine and nicotine.\" I said. Which was true, she couldn't stop smoking only because she associated drinking coffee with it, and she drank a lot of coffee.\n\nShe made a mockingly dismissive gesture, and proceeded to take a sip of my coffee, and promptly lit a cigarette in that spirit.\n\n\"So, decided classes were too boring to even give them a chance?\" I asked, while wondering why the \"no sugar\" option on the coffee machine still made coffee that had small crystals of the thing waiting at the bottom to dissolve.\n\n\"No no, it's not that. I had a very fun time two days ago. I could tell you all about it but... \" she looked at the entrance to the building and smiled a \"too bad you need to go to class\" smile. Which made me repeat the same dismissive gesture she used earlier and say, \"Where are we going?\"\n\nBeer. Of course.\n\nAfter we gulped down a pint just to get things moving, while talking about the timetable (popular topic), and who the new professors were this year, she smiled as widely as possible. She laid back against her chair, crossed her arms, and overall assumed the posture of someone about to tell you how interesting their life is compared to yours. She did things like this in a joking manner, I never considered her to be seriously mocking, and it was funny when she did that sort of thing.\n\n\"I got arrested.\"\n\nShe seemed to enjoy saying that as much as if she were saying, \"I just fucked Angelina Jolie\" (who was her favorite woman on Earth). I blinked once, not in disbelief or surprise, but merely processing and wondering whether it was a joke.\n\nConcluding that she looked too proud for it to be a joke, I asked,\n\n\"Why?\"\n\nShe was still smiling, but it was apparent that she was slightly disappointed that I didn't choke on my beer at the announcement. \"It was stupid. I got pulled over while coming back from the market, and this wider-than-taller cop asked me to step out and told me that he would search my car. I thought about protesting, but honestly I didn't know whether they were allowed to search my car or not, so I gave up on that idea. I was kind of relieved because I had nothing on me, I had literally dropped off 10 grams of weed at Adam's on my way back home, and I was feeling a tiny bit self-satisfied that my car was as clean as it ever was. The dude said something like 'Miss, I can smell weed in your car', and I was seriously tempted to just say 'Whoever smelt it dealt it'.\" This time I did choke a little on my beer. \"Anyway, they found exactly, exactly, 0.2 grams of weed on my car floor. Can you believe it? I laughed and told them it must have flown in through the window or something. You know they never make an issue if you have less than one joint worth on you, they're too lazy to bug you about it and besides, high students are the most docile students.\"\n\nShe kept talking and drinking interchangeably while I sat there, drinking in silence. I was quickly downing the second pint, so I decided to slow down by ordering some peanuts. I also don't know why her talking was getting me aroused, but I liked her posture as she spoke, and she smelled as \"hygienically good\" as ever.\n\n\"Anyway, they said that I had to go with them down to the station. While my body was all too eager to start panicking I calmed down a bit thinking that it was really only 0.2 grams. I had literally nothing on me, which is almost never the case. Anyway, I went down there, we had a nice chat about how I don't use anything, don't sell anything, etcetera. They decided I should spend the night since I was already there, while they slooowly checked my car again. And even though they found nothing new and incriminating they went ahead and opened my file. They didn't write anything in it though, but I have a file now. Every time I get pulled over or something from here on out I am going to be suspicious just because I have a file. Gah.\" She rolled her eyes.\n\n\"But I am still fucking glad this went the way that it did. Jesus, I usually have at least two different types of drugs on me.\" She laughed at this last part, because it was true. She didn't like keeping her stuff at home, and preferred to carry it with her. This always seemed irresponsible to me, because my hiding places at home seemed to be much more secure than having anything on me. So I only carried weed when I knew I would be needing it, the rest of the time my stash was stored in my computer case, which no one was allowed to touch.\n\n\"But that's not the best part!\" continued Pris as if getting arrested could easily be mistaken for the best part. \"Tina started a hashtag #PrisIsClean and spent her time talking women into writing that on their tits and then taking pictures of it.\"\n\nShe laughed at this and started rummaging for her phone, found it, leaned closer to me and scrolled through at least half a dozen cleavages that had that hashtag written on them. I rolled my eyes and snorted loud enough for her to get the message, but I was becoming increasingly aware of her nearness, and my cheeks were starting to get hot. After all, we do hook up only when we're not sober, and it seemed as if we were planning on not being sober that afternoon. She sat back in her chair and smiled wide again.\n\n\"I was hoping that I'd see that great pair of yours among these pictures but oh well... So, how does it feel to hang out with a criminal?\" She was still enjoying the whole getting arrested bit way too much, and her ears seemed to be getting redder.",
        "\"Oh, kind of like hanging out with a narcissistic capitalist who thinks she has enough knowledge to debate over any subject anyone brings up and come out on top. But then again both are -- you, so yeah, used to it already.\" It was meant as a joke, and was taken by her as a joke, but it wasn't entirely untrue. \"But yeah, is that all? I mean, they won't bother you any more about the whole 0.2 grams thing?\"\n\n\"Kind of. I mean, I'm pretty sure they started the whole thing with the goal of opening a file for me. It's a ridiculously small amount to go through all that trouble for. I'm sure someone tipped them off that I was selling and they wanted to keep an eye on me and maybe shake me up a little bit, I don't know. Either way, there's some youth program that they started, the elections are coming up, so they must look like they're doing something. They have a bunch of 'delinquents' go to group therapy or something and find that life is blah blah blah, but yeah, I have to go to that. Well, I don't really have to, per se, but I believe that it will help my case in the future, so I'm going to give it a try. Besides, the groups meet twice weekly and fit perfectly with the class schedule,\" I rolled my eyes at this, as if the class schedule meant anything to either of us, \"so it's not that much of an effort.\"\n\nI don't believe she talked this much during the whole time we've known each other. I'm usually the one that talks and she's the one that listens. She participates equally in the conversation when we talk about something serious, or debate about something, but when it's small talk I'm the one that talks most of the time. Her talking lulled me, along with the beer, and she was beginning to look softer and softer.\n\n\"You know, I don't mind you staring at me, by all means go ahead, but don't just leave it at that.\" She smiled, and I shook my head dismissively, in an \"oh please, as if I would ever do such a thing\" manner.\n\nWe continued to talk and laugh, about her arrest and other things, and my arousal didn't seem to grow beyond a 'wouldn't mind kissing' line from that point. However, we kept on drinking and were noticeably tipsy, before 4 pm even. It was a small miracle that the pub was even open at that time, but they served decent coffee as well, so it paid to open up earlier than what was standard for pubs. We were almost alone in the place, and we were very well hidden in the corner that we were sitting in. Not even the waiters saw us clearly from the bar, and it was very tempting to abuse that fact and kiss her.\n\nIt soon became obvious that I wasn't the only one that noticed that we were in a good strategic position. She placed two fingers on my jawline, leaned in, turned my head towards hers, and kissed me. Her lips felt nice, softer than usual, and the warmth felt good on my own lips. I returned just as softly, and we exchanged a few unusually childish kisses before she backed off again, and licked her lips. She licked them in such a way that it was obvious that she was baiting me to come closer and kiss her, and it wasn't very hard to convince me to do that. So we began our, now traditional, hooking up when drunk process.\n\nWe behaved nicely though, mostly anyway, because we were in a public place after all, and none of us liked traumatizing random people and making them upset. That however didn't stop me from having both of my hands under her T-shirt at some point, tracing her entire tummy, back, and braless breasts. I suppose that's the advantage of having smaller breasts -- no bra needed. As soon as I felt her nipple push against my palm I realized I hadn't had sex in two months. In fact, the last time I did have sex was with Pris herself. Although there were three other people on the large bed next to us, some sleeping some probably not, but no one complained.\n\nAt the moment I simply enjoyed the queer mix of softness and firmness of her breast in my palm. I gently squeezed her nipple between the base of my forefinger and thumb, which induced a small gasp from her and I followed that up with a firm kiss. I kept playing with her left nipple, slightly twisting, squeezing, pulling, and she seemed to wriggle more with each new motion. The fact that her wriggling innocently included whichever part of her leg to rub against me, didn't help with my wish to remain civilized.\n\nShe stopped kissing me, looked at me, with moist, barely parted lips, and asked whether I would like to continue this at her place. I did think about it for a short while, since I wasn't sure whether the mood would hold until we got there, but I decided that the worst that could happen was that we would go to her place and get high if nothing else. Besides, the increasing throbbing between my legs, not at all hindered by her thigh still firmly placed there, was doing it's best to convince me to say yes.\n\nSo I did, and in less than twenty minutes I had two of my fingers quickly going in and out of her, using my other hand to hold her pressed against the bed, and as leverage to move the first hand fast enough. She usually came relatively quickly, provided I had the stamina to fuck her fast enough, because fingerblasting was the only thing that could make her have an orgasm. She liked almost every type of contact with her pussy, from hot, cold, rough, soft, plastic or flesh, didn't matter, but she could only finish properly if she was being internally assaulted. Everything else either left her frustrated and without an orgasm, or gave her an orgasm too weak to satisfy her, so anyone with her ended up fucking her roughly anyway.\n\nI didn't mind that, in fact I rather enjoyed it, provided that my hand could keep up with her needs, since she had the habit of squeezing it with her thighs whenever she was close. That made it hard to keep moving, not to mention move as quickly as she wanted.\n\nSpeaking of muscle stamina, my right forearm was visibly stronger than my left, the innocent bystander would conclude that I was probably a recreational tennis player or something, but the truth was that I was incapable of fucking, or of any coherent movement in fact, with my left hand; so my right had to do all the heavy lifting.\n\nPris loved rougher treatment during sex to accompany the style of fucking. Whether it included holding her neck, biting, pinching, whatever, that didn't matter either, just as long as I was in no way romantic or sweet while we were having sex. So there I was, my forearm starting to ache from the third consecutive orgasm I was about to provide her with, when I felt her walls squeeze my fingers and her thighs do the same with my hand. She grabbed me by the back of my neck and pulled me closer, holding firmly as she bucked her hips against my hand, her breathing and light moaning coming to a high, until finally slowing down and relaxing.\n\nI didn't move, I didn't even take my fingers out of her, and gave her time to catch her breath, feeling her walls still tremble slightly against my fingers. I kissed and nibbled on her neck, supporting myself with my other hand. She took a deep breath, pushed me off of her and onto my back, and straddled my waist. She was flushed. Her cheeks were red, and so was her chest on the place where I placed my hand to hold her down.\n\nShe looked amazing, sitting there. The curtains were drawn and all the light in the room came from the dim warm white one of the hallway. The angle of that light accented her features beautifully, and I couldn't help wanting to fuck her again. I made a move toward that goal, sitting up, with her still on me, and wrapping my hand around her waist in order to ease her back down on the bed. She pushed me back, took both of my hands and held them over my head.\n\n\"Nope. My turn.\"\n\nI protested at first, because I was more in the mood to be the provider again, but she held my hands firmly in place as she nibbled and licked her way as low as possible without releasing them. Giving extra attention to my breasts, and testing how rough she could be with each nipple before I started to complain. When she couldn't go any lower without releasing my hands, all the will to protest was already long gone, and I was eager to let her continue with what she was doing. She decided to spend an unusually long amount of time teasing me by nibbling on my thighs and outer lips, seeming all too happy to keep on doing that for the next hour.\n\nI tried to ask her nicely to continue by moving my hips up toward her face, trying to meet her tongue, but she moved away just enough to be out of my reach, and didn't proceed with her teasing until I placed my hips back on the bed. The whole thing was becoming increasingly frustrating, and I could feel my wetness start to seep in between my cheeks.\n\nMy pussy always reacted, or should I say - OVER-reacted, to everything. I was wet when there was no need or cause for me to be, and dripping as soon as there was a need or cause. It was a double edged blade however, since although I was always ready for sex, I was also ready for sex when there was no sex to be had, and that usually left me with an awkward 'no friction' situation when walking that I didn't like.\n\nMy partners usually enjoyed that immensely, especially those who enjoyed oral sex, and took pride in making me soaked. Which, I realized, was what Pris was doing - seeing how wet she could make me. Looking down and seeing her smug, although obviously horny, face confirmed that suspicion.\n\nI grunted, reached down to grab the back of her head, and pushed her into my pussy. The second her lips touched me, she parted them, gently sucked my clit in, and started to move her tongue over it. This made me let go of her head just so I could get a hold of something else to keep myself steady, for she found just the right spot on her first try. Unlike her - I preferred a steady and constant rhythm, at least when it came to my clit, it didn't matter how fast it was, as long as it was constant and didn't change abruptly, I was good to go.\n\nIf someone wanted to make me cum just by entering me, they would need to again find a steady, but fast rhythm and be ready for a hard burst towards the end. She knew all this, since we talked about sex a lot, and decided to stick with what she started with, my clit lightly sucked in between her lips, and her tongue moving over it in a moderate pace. She also decided to just put her fingers in me, and keep them there, which for some reason noticeably sped up the arrival of my orgasm. I felt that familiar build up happening, laced my fingers through her hair, tried to keep on breathing, and held her head down, for fear that she may decide to stop and tease me more. She didn't, and dutifully kept doing what she was until I reached up to grab the bedpost behind my head and arch my back as a surge of electricity and warmth emerged from my groin and went through my body.\n\nThe orgasm was especially nice and lasted longer than usual for some reason, and left me panting afterwards. She continued to move her tongue slowly from my opening to my clit, happily lapping up the juices my pussy was still making in abundance. I continued to lie there, with my eyes closed, breathing slowly and enjoying the dull tingling still present in my groin, while Pris planted soft kisses on my tummy.\n\nSlowly the thought \"What now?\" occurred to me, since I was relatively sober now, and Pris wasn't the type to cuddle after sex. I was definitely a cuddler, but it wasn't something I couldn't do without.\n\nBesides, we were very different when it came to our views on relationships. I had three relatively long ones, among random hookups, the relationships ranging from 5 months to a year and a half. I was strictly monogamous in them, until the end of the last relationship I had, when I cheated on my girlfriend with -- surprise, surprise -- Pris, on a bed with three other people in it. My girlfriend, unsurprisingly, didn't like that very much, and decided that enough was enough and promptly broke up with me. Pris felt bad because of it for a little while, but we went on hanging out just the same soon after.\n\nPris had, on the last count, slept with eleven women, none of whom she was in a relationship with, and a lot of them were just one time things. She didn't have anything against emotions and commitment (or so she said) but she took them very seriously and didn't want to do something like that with just anyone. Also she was very much against monogamy, and believed that everyone should be allowed to fuck other people while in a relationship, as long as he/she only had actual feelings for, and respected, their partner.\n\nI agreed, ideologically, but from experience knew that jealousy and insecurity wouldn't allow for such a thing in most cases. Also most people saw \"respecting your partner\" and \"fucking other people\" as two highly irreconcilable ideas.\n\nThat's not to say that I didn't feel a connection with Pris, I was drawn to her ever since we met, I wouldn't have allowed myself to cheat on my girlfriend otherwise. However, I couldn't comfortably put her in any category, I didn't consider her a friend with benefits, nor did I consider her as a possible girlfriend.\n\nSo I dismissed the idea of cuddling, looked at her and said, \"Coffee?\"\n\nShe nodded and rolled off of me, after planting another kiss where the beginning of my pubic hair should have been. She made some coffee and brought it back to bed. We chatted, drank that same coffee, smoked, later talked a bit more about the 'delinquent' group therapy thing that was to have its first meeting tomorrow, and about our opinion on the subject. I was starting to get horny again, since we were both in just our underwear. I tried to put on my bra, given that being without it made me feel more naked than being without underwear, but she didn't let me. I also realized that I felt more naked while wearing only my socks, than while wearing nothing at all. I told this to Pris. She laughed.\n\n\"Actually... yeah, I think I feel the same. I suppose that having only socks on makes you feel like you shouldn't be naked in the first place, while without socks it's just - naked.\"\n\nShe squeezed one of my boobs, as if to emphasize that I was, in fact, naked, and without socks even. Doing so seemed to inspire her to do it again, and within seconds her lips were around one of my nipples and sucking. It was gentle sucking at first but became progressively harder, and in the process her other hand found its way to my free breast and started playing with it. Nipples being a very sensitive and erogenous place on my body, I soon turned to wrap my legs around her, and pull her with me as I lay back on the bed.\n\n***\n\nThat night I kept tossing around in bed, and couldn't sleep. It was out of character for me, because I usually just fell asleep as soon as my head touched the pillow, or as soon as I finished masturbating, if I was in the mood for that. But I was feeling restless.\n\nPris immediately came to my mind as the potential reason, given that nothing else seemed to be nearly as exciting as her in my life, or at least, nothing else was more exciting than usual. I considered that idea for a while. I didn't have any strong feelings toward her that I was conscious of. I was aware that she was hot, smart, and popular. Also that she was interesting and that the sex was pretty good, even when I wasn't completely drunk.\n\nBut I wasn't in love, nor did she give me a tingling feeling anywhere other than my groin. So maybe it wasn't her, maybe it was something that she reminded me of, or that I wish was present in our \"relationship\". Either way, I was feeling anxious, and I didn't know what to do about it. So I tried to masturbate and take my mind off the anxiety, and after nearly an hour of frustrated rubbing I managed to roll over a barely exciting hill that I decided to call an orgasm. Although the orgasm itself didn't drain my energy, getting to it did, and I was soon asleep.\n\nSomething very similar to that day happened the day after - I arrived to class on time, met Pris outside, and decided to not go that same class that I arrived on time to. We didn't go drinking in a pub that time, though. Instead we decided to buy a bottle of gin, and a bottle of bitter lemon soda and mix those two in a park nearby. Yes, apparently I am the type of person who drinks gin and bitter lemon at 4 pm in a park. We went slowly though, and were soon joined by some other colleagues that saw us while passing by. While I knew them by sight, I didn't know much else about them. Pris was better acquainted with them than me, and the conversation soon started flowing easily again.\n\n\"So you all know about that whole business with the cops I found myself in the other day... It has literally been the highlight of my life so far, so of course everyone knows about it. I was at that whole group thing this morning and my God...\" she paused for emphasis, and placed her hand dramatically on her chest \"The woman, some psychologist/psychiatrist whatever, leading that group thing was fucking hot as fuck. And she was that hot older woman type, educated, lean, well dressed, calm and friendly and my God did I get turned on when she started using long words.\"\n\nShe giggled and continued \"Seriously though, she did her best but the whole thing was fucked to begin with, and she seemed perfectly aware of that. She said so in a way, when she mentioned how she'd rather work with each of us individually than as a group, that the whole group thing should come later, after we're all comfortable with her or whatever. And damn would I love to get 'individually comfortable' with her! Some of us there have a 'mandatory' 6 attendances before we can say 'hey, I tried your program, see what a good sport I am?', so I'll be seeing more of her hopefully.\"\n\nI was puzzled for a moment, trying to figure out whether I felt any sign of jealousy or not, and couldn't decide either way. I also couldn't decide whether she was trying to show me that whatever we had going on wasn't serious, by talking so emphatically about another woman. I decided not to think about it and simply took the bait and said, \"Hey, you have that group thing twice a week, right? Why don't I go with you next time? I was always curious to see how those things worked, and besides, I've always disliked psychologists, so maybe a hot one would persuade me that they're not all that bad.\" It sounded just as pathetic as it seems, and I wasn't even jealous to begin with.\n\nPris seemed to internally roll her eyes at the idea of me going there out of jealousy, but agreed to take me next time. The group was of an open type, you just had to fill out a form at least a day in advance, but that was all that you needed to do in order to get admitted.\n\nI took out my phone, filled the application form in a few minutes and said, \"There.\" with a slightly wounded tone in my voice. I felt a need to be passive-aggressive towards Pris, and barely kept myself from being so. After a few minutes of mild awkwardness between me and her everything fell back into place. The bottle of gin didn't hit too hard when split among four people, so we were all just slightly tipsy and in good spirits.\n\nMy phone buzzed in the middle of someone's story about how they went bungee jumping on acid. I checked it afterwards, and saw that I had an email from the PR of some public firm or the other, saying that they were happy that I showed interest in their program, etcetera. For a moment I had no idea what the mail was about, but soon realized that it was the youth group thing. I was already regretting the fact that I had applied. I didn't feel like going to the other side of town for something that I was sure was a waste of time just so I could be passive-aggressive to a girl I didn't even like in a way that enticed passive-aggressive behavior. However, I felt socially compelled to go, because the email, although an obvious copy-paste job with just the name of the recipient changed to fit mine, was very cheerful and happy that I showed interest in their program.",
        "So I did go to the next meeting, and since my friendship with Pris had gone back to normal I was happy to go with her. As soon as I entered the small room, I immediately felt awkward and wanted to leave. Grey plastic chairs with metal legs were placed in an awfully clich\u00e9 circle, and since there was no \"special chair\" I supposed that the woman leading the whole thing sat in the circle with \"the rest of us\". I was beginning to really be bothered by the whole thing, even the table with soft drinks and snacks to the right made me feel uncomfortable. All the other people who were there and those that arrived later, appeared just as uncomfortable as me, and made me feel even more so.\n\nThere were eight of us in total, counting me and Pris, and I wondered when we would start. Pris took a seat next to an indifferent looking guy wearing a full Adidas outfit, shoes and all. I sat next to her, and looked around at the faces gathered in that small circle. None of them seemed interesting to me, which was odd given that they should be the sort of people who were at least interesting. We all sat in silence for a few awkward moments, except two people near the table with the drinks and snacks chatting quietly. The low volume of their chatting just made the silence in the circle seem more noticeable. I was beginning to become very fidgety, when the door we all came through opened and a woman came in. She smiled slightly at us, carrying something that looked like a large folder in her left hand, and closed the door with her right.\n\n\"I'm sorry for not being here on time to meet you all. There was a particularly tiresome meeting going on, and for some reason they insisted on me staying till the end, even though I have hardly anything to do with the PR strategy of this organization.\"\n\nShe smiled warmly, but without showing her teeth. She was older, as Pris had said, and it was most evident in the creases around the sides of her mouth, but they made her light smile seem genuine, and somehow motherly. Her hair was light brown, with some natural-looking highlights, picked up in a short ponytail, with a few loose strands around her face, shorter than the rest of the hair, reaching almost to her chin. Her hair was slightly wavy, at least judging by the strands of it hanging by her face, and gave off the impression of someone who casually looks good. The light tan seemed as natural as her highlights, and I found myself hoping slightly that they were in fact natural -- that the highlights and the tan were sun-kissed and not the product of a solarium or a hairdresser.\n\nI could tell her clothes were expensive, but of the quality kind, not flashy. She wore tight black pants, and a tight black t-shirt with sleeves to about half of her bicep, with a wide grey stripe along the middle. Her entire appearance could be summed up as \"clean, professional, well dressed, but also modest in all that.\" I couldn't make out a single brand on her anywhere, even though I had already concluded that her clothes were surely pricey. I wondered how much money she made working for such non-profit organizations, and whether that was all she did. I would have been a very poor lesbian if I hadn't noticed the body covered by those clothes. The t-shirt, though tightly fitting, wasn't of the revealing sort -- it covered her completely up to her neck, and showed almost no skin. However, that skin seemed tight underneath, none of the light wiggling expected of someone \"her age\" (I didn't know what age that was exactly, but she looked to be roughly around my mother's age, which was 46).\n\nMy eyes passed briefly over her breasts, the stripe the t-shirt had made it hard for me to place the size and shape of her breasts more precisely than \"smaller than mine\". That previous lack of wiggling seemed to be an attribute of her lower body as well. The pants (they reminded me of black jeans, but the material was different) hugged her thighs, and I could see the movement and tensing of nicely toned muscles when she stepped forward.\n\nThis was all taken in by me and already half-processed by the time she finished her sentence and closed the door. The one thing that irritated me about her was that she had the air and manner of speaking that psychologists/psychiatrists usually have. She placed whatever she was holding in her left hand when she came in on an empty chair next to the table with refreshments. No one said anything since she came in, but it wasn't an awkward sort of silence.\n\nI realized I might be the only new person that week, and that everyone else had already been through this at least once before. I really, really hoped this wouldn't make her single me out in some way, I would hate to be asked to \"say something about myself\".\n\nShe sat in one of the empty chairs from the circle, drawing it back before doing so. This was so we could all see her comfortably, even the ones closest to her. I wasn't one of them -- in fact I was almost directly opposite her, which made me feel more open than if I was sitting two inches away from her. She crossed her legs, right one over the left, and held her knee with both her hands, fingers intertwined, and smiled. I noticed she had a watch on her left hand, slightly bigger than the thin band with a small circle most older women preferred, but also as not-flashy as the rest of the things on her.\n\nI also noticed something else, although I hadn't realized I noticed it until later, when I went through the whole meeting in my head, namely that she wasn't wearing any rings, including anything that could be a wedding or engagement ring.\n\nShe started the conversation with the group lightly, and in the first quarter of an hour it seemed as if we had all come to have coffee with her, nothing else. She looked at me a few times, even though I hadn't joined in on the conversation, and I dreaded her asking me to. I wasn't especially socially awkward, but I disliked situations where I wasn't even remotely certain of what I should do. She didn't ask me anything though, and I wondered whether she knew how much I didn't want her to do that.\n\nAfter one of the guys there finished telling his story about how he managed to pass one of his finals by studying for 17 hours straight something that should have been studied for at least 2 weeks prior, I began to wonder whether this whole meeting was going to be just people talking about random stuff in their lives. She spoke soon after I had finished that thought, and the laughter of the group subsided after a joke the previous speaker made.\n\n\"Now, you all probably remember that last time I told you-\" She looked at me, making a slight pause in her speech and my heart seemed to stop beating for a fraction of time. I didn't know whether that happened because I was worried that she'd ask me to say something, or because of the direct eye contact, along with the pause.\n\nShe continued, \"Well, not you, particularly, I haven't seen you here before.\" I gulped, getting ready for a question about myself. She went on, \"Last time I expressed my dissatisfaction with the fact that we didn't have any time dedicated to private sessions, even short ones. You all appeared to agree with me on that point, so-\" She smiled again, this time looking at no one in particular. \"I think I have managed to change that yesterday. Now some of you may wonder why that was even a question, why couldn't I just meet up with each of you in my spare time if I was so eager to help?\" This described my thoughts perfectly, as the others giggled. \"Well, I could have done that, but that still wouldn't have excused you from coming to these group sessions, and I am fairly certain that you wouldn't be as motivated to come to a group session when a private one seemed so much more productive. So -- what I really managed to achieve is for private sessions to actually count towards your attendance, meaning that each private session counts as if you had attended one of these group meetings.\"\n\nI could feel the entire group perk up upon hearing this. I wasn't aware young adults were so eager to talk to shrinks, but then again, this was a particularly attractive one.\n\nHowever, I kept an open mind, it was possible that not everyone was eager to have more of her attention because of how she looked, but because of who she was and what she was capable of. I also wondered whether I was to be included in this list of future private sessions, after all this was my first meeting, and she \"managed to achieve\" private sessions for the group of people that came the previous weeks. I decided not to ask her then, but later, after we had finished, if I was still in the mood to keep going to these things.\n\nShe continued talking about light topics and soon everyone joined in as before, and I found myself wondering what Pris thought about the idea of being alone with this woman, in some shrink-ish room, maybe laying on a couch with her leg close to her face. I don't think I was jealous, but then again I don't know how else to describe the 'I'm just as attractive as her, why aren't you thinking of me?' feeling that was present. That was a slight lie though -- I didn't think I was as attractive as this woman, I thought she was beautiful, though not in a typical MILF sort of way, she just had all the qualities I found attractive in a woman.\n\nThe \"meeting,\" if you can call it that, lasted for over an hour and a half more, but I didn't know that until it was over and I checked my phone for notifications. It was fun, even though I hadn't participated. I supposed the whole point of them was to get people talking, make them feel like they belong somewhere blah, blah; psychology was not my thing, but the atmosphere in the room was incomparably more pleasant than before the lengthy conversation. Several people got up from their chairs and went to the refreshments table to the right, the psychiatrist along with them (or psychologist, pardon if I use the terms interchangeably by accident, I know they are not the same thing but they fall into the same hateful category as far as I'm concerned). Maybe she wasn't even that, maybe she was just a social worker or something.\n\nShe was talking to one of the attendants, who remained sitting in his chair, with that look full of attention she had whenever she spoke to someone directly, or whenever someone was speaking to her. I don't know why, but it still annoyed me very much whenever I noticed it, regardless of who was the recipient of it, even though I should have considered it a very positive characteristic. I turned to see Pris standing and chatting with the group of people gathered around the snacks, and I realized that only I, some random member of this \"let's talk it out\" club, and \"the shrink\" were the only people still near to \"the circle.\" The person she had been talking to before started to get up and go towards the others, finishing his speech as he did so.\n\nI realized that I would be left alone with this woman if I didn't do the same quickly. The time it took me to stand up, turn around and grab my hoodie from the back of my chair was enough for the person to leave, and when I turned back I saw that she was standing where her chair had been, and looking at me with a light smile, still without showing her teeth. I don't think that she smiled widely at any time in the past two hours, and still managed to appear affable and attentive.\n\nThe smile deepened the creases on her right cheek more than on her left, and my gaze lingered on the right side for a moment. I returned a faint and probably awkward smile, considered going to join the group in whatever idle chatter they were absorbed in. It felt impolite for me to do so, since she was obviously waiting for me to finish picking up my stuff so that she could talk to me. As soon as I had fully turned to her, she extended her arm towards me. I shook it, wondering whether my grip would be too strong for her (I have heard actual complaints about my handshake \"being too firm for a woman\"), but hers seemed just as firm when she wrapped her fingers around my hand. I couldn't help noticing her hands were soft, and that made me warm up a bit. Apparently my subconscious was able to sexualize the shit out of a handshake.\n\n\"Hi, I'm very glad that you decided to join us. My name is Vallory. We-\"\n\nThis is where I barely stifled a giggle, since the only other Vallory I had ever heard of was in a Borderlands game, and this one couldn't look more different than the other if she wanted. My brain was way ahead of me, and imagined the video game one shaking my hand instead of the real one. That handshake would have probably hurt much more if that were the case. Actually, I probably would have been dead before the handshake began. Her name was most likely spelt Valerie, but I decided to stick with the Borderlands spelling. Although I was fairly certain that this train of thought was completely unnoticeable in my countenance, and lasted for less than a third of a second, I saw her furrow her eyebrows just a bit while she spoke.\n\n\"- haven't had the chance to meet before the session started. I decided not to introduce myself to you, or you to myself for that matter, during the session because I thought you'd feel uncomfortable if I'd done that, and it wasn't necessary.\"\n\nI nodded slightly, smiled wider, and introduced myself. There wasn't any \"lingering handshake\" moment where I awkwardly clung to her hand and wondered how soft it would feel around my neck; I just let go of her hand as soon as custom demanded. I felt extremely flirty, and in a split second decided that it wouldn't hurt to satisfy my sexual curiosity a bit. The worst thing that could happen was that it'd be extremely awkward to talk to her afterwards, but hey -- it's not like I needed to come here ever again. I kept any flirting to a minimum, nonetheless.\n\n\"Before I forget to ask, I'm not here because I need to be. I just came here with a friend.\" I motioned my head towards Pris, she followed my motion for a second, then turned back to look at me as I continued. \"So I'm not sure whether I can actually come to these meetings or not. I mean, does a person really NEED to get arrested for some minor drug abuse to talk to you?\" Wow. Smooth. As. Fuck. I really wondered how I wasn't still a virgin.\n\nShe cocked her head to one side ever so slightly, and smiled a playful, though not sexual, smile and replied, \"I'd rather you come here without having an obligation to do so, if that means that you'd get yourself obligated, if you weren't allowed to come otherwise.\" There wasn't anything even hinting of flirtation in her manner, but she seemed amused and friendly when I had partially expected her to turn cold and rigid, so I couldn't say I was entirely disappointed. If she was willing to play along, I was more than willing to keep throwing her the ball back.\n\n\"That's kind of you and everything, but what about the premium package? I see all the drug dealers get special, one-on-one treatment here. I wouldn't want to miss out.\" Yeah, I already lost any chance of being suave with the first sentence, so I thought it couldn't hurt to keep going as I did. I smiled as wide as possible, and she was still looking at me with that confident, full look of hers that made my crotch throb every so often. I wondered what that look would do if she looked up at me like that while tracing kisses down my naked stomach.\n\nDon't get me wrong, I really don't make a habit out of sexualizing every interaction I have with attractive women. Far from it actually, I seem to friend-zone women quickly and rarely think they are flirting unless they make it painfully clear. But I have always found older women, especially ones like her, exceedingly attractive. Mostly since I hadn't had any experience with them -- my oldest girlfriend was just three years older than me, and I don't think I had even met a lesbian over thirty, so I didn't even get a chance to satisfy that curiosity. I wondered whether this woman -- Vallory -- was entirely straight. I kept getting gay \"vibes\" from her, but I couldn't tell whether that was simply wishful thinking on my side or not.\n\nShe rolled her eyes, as playfully as before, and even with her playfulness she somehow retained her authority over me, as if saying 'sure, I'll play along, but you should know that I could just as easily not do that'.\n\nShe said, \"I'm a bit curious whether you would manage to go and find something to sell, do it inconspicuously enough to get caught, all the while managing to get into the just the right amount of trouble to get away with a slap on the wrist and a visit to me. However, I will do my best to hinder that curiosity from being satisfied, since I'm more than ready to consider you a part of this group. It's not as if we were remarkably official, but you can consider yourself equal with the rest.\"\n\nThe way she spoke was amazing to my ears. Perfect pronunciation, enunciation, with a soft and unforced voice and manner, as if she was more than happy to give you her time and energy, and I saw that she had amazing potential as a someone who works with people. That thought reminded me that she was, in fact, probably a shrink; therefore, she was educated in manipulating people to feel comfortable around her, and I felt myself getting slightly irritated. I was irritated further when I noticed she had noticed my irritation.\n\nGod damn these people! Couldn't my thoughts be private? If I had hired her to disassemble me and fix things, I'd be glad about how easily she could read me, less time spent on figuring stuff out the less I had to pay -- but I was annoyed. She seemed to notice this, as well, but said nothing, as if waiting for me to say whatever was on my mind. Perhaps I was being unfair; we all use our social skills and a bit of manipulation to get people to like us at first, or to get something from them, so I had to admit that I was basically... what? Mad about the fact that they just knew how to do it better than most people? Either way, rational or not, I was annoyed, and my dislike for them as steady as ever. I decided to tell her how I felt on the subject, with more eagerness in my voice than I had intended.\n\n\"Don't people hate it when you talk to them and constantly make guesses about what they think? When you internally examine what they say and do, compare it with whatever patterns you were taught in college and decide what to do and how to act best based on it? It's not like you know someone after ten minutes of conversation with them for fuck's sake, and yet all you people seem to do is just that -- categorize and not even listen after you've done that. You decide that you're probably right and just keep on forcing whatever someone says into that behavioral category you already decided they belong to.\"\n\nI felt like an idiot for taking such a liberty with her. She didn't do anything wrong in our entire conversation, all grudges I held against her were the work of her predecessors, and I felt very childish because of that outburst. Actually, I still didn't even know whether she even was a shrink, she could just as easily be a social worker, or maybe not even that, just someone who people considered competent to talk to a group of teenagers. She could be a baker for all I knew.\n\nDespite my small outburst, she simply nodded slightly, arched her eyebrows gingerly in sympathy and said, \"You may not believe it but I dislike a lot of my colleagues for approaching patients that way. I won't get into details, but I started studying psychology, as a profession, very late in my life, and perhaps that is the reason why I have a different approach, or perhaps my pride simply fancies that I do. I understand though that after years of doing the same job, psychologists assume that they know all they need to after the first impression they get. I don't approve of that approach, but I don't think you can argue and say that other professions behave very differently.\"",
        "So at least now I knew she was, in fact, a psychologist. Probably won't keep me from accidentally calling her a psychiatrist later on anyway.\n\n\"But since we have already agreed that you will get the 'premium package,' I would like to ask you to give me the benefit of the doubt. At least wait until we've had one private session before cementing your opinion of me. I won't try to defend my entire profession in your eyes, but I do have it in my power to defend myself, my competence and my common sense.\" She said all of this in the same manner in which she usually spoke, without any apparent spitefulness, and seemed to be in earnest.\n\nI nodded, still feeling foolish but not ashamed, if she had reprimanded me or tried to patronize me I would have either felt very ashamed or even more annoyed. This way, I felt like my honesty, even though it was a bit rash, was welcomed and appreciated by her.\n\nI nodded again, smiled a genuinely friendly smile and was glad when I received one in return. I lowered my head a little bit, so that now I had to look at her slightly over my eyelashes, playing the 'I'll be nice now' card and said, \"Do you maybe know when I can expect you to start convincing me that you're not all as evil as I think?\"\n\nShe was just a bit shorter than me, and she was standing close enough to me so that I could smell her. She smelled -- clean. As if she had showered just a few hours ago. There was maybe a hint of perfume but it was bland and unobtrusive. I felt a need to trace my nose along her neck and check whether it was more noticeable there. I stopped sexualizing her during her short speech, but now I was back at it again.\n\n\"Not exactly, but I can tell you at least approximately. The first of the sessions should take place during the weekend. While I do feel that it would be slightly unfair to the other members if you, as our most recent one, were to be the first to get a private session, I think that I can indulge myself that much, since I would like to continue this conversation in a more private setting. Perhaps then you can tell me what made you so unfriendly to us psychologists.\"\n\nShe smiled again, and this time I felt my heart throb instead of what was throbbing until then. Although my pussy might have throbbed at the same time as well, I wasn't sure. I wondered whether she could notice this, as well.\n\nShe noticed my earlier irritation and Vallory-distraction easily enough it seemed, and I had noticed that she noticed, but it was as if she was oblivious to the sexual turmoil in me. Or she was good at pretending she was oblivious, I wasn't nearly good enough at reading people to be able to tell. Concluding that she probably could tell that I was turned on by her, I decided to put a bit more effort in hiding it from her. If I wasn't able to read her as easily as she could read me, I would do my damn best to make it hard for her to do it. I knew it was childish for me to think and feel this way, but that didn't stop me.\n\n\"You left your information with us when you signed up for the program, right?\" She asked and I nodded, thinking of adding a 'feel free to get informed,' but decided it was too cheesy even for my newly found low flirting standards and her playfulness. I still didn't know whether she was entirely straight, and if she was, maybe continuous, childish flirting might make her uncomfortable, so I kept it to myself.\n\n\"Alright, someone will contact you as soon as we can offer you a specific time. You can count on it being at some point this weekend, either early in the morning or later in the afternoon, since most of the offices here are taken up during the rest of the day.\"\n\nI nodded, and started to say something regarding that when someone called, \"Miss Bennett?\" from the group by the table, and she excused herself to go and talk to whoever it was. I realized that I had taken up quite a bit of her time, but didn't feel overly guilty about that.\n\nAs she walked away, I had my first chance to look at her from behind. Her body made me wonder how old she was again, because the first impression of her remained unchanged, at least not for the worse. She had a small but tight ass as far as I could see, held her back straight, and I wondered whether she exercised and how much. I also wondered whether she had any children. I didn't linger on that thought, my mind was in the mood to think about things going in, not going out of her.\n\nPris came up to me with a glass of soda in one hand, a half-full bag of tortilla chips and a nearly empty jar of tortilla sauce in the other. She sat down on the chair next to where I was standing, and nudged me with the glass to sit down. I sat, took the glass from her, placed the jar on my thigh while she fumbled with the bag of chips. She looked over her shoulder to where Vallory was standing with the rest of the group. I also realized that Vallory's go-to posture was her hands crossed in front of her chest, not intertwined, but one arm under, and supporting, the other. It was probably the most non-threatening pose in the book, and I felt that earlier annoyance re-surface. Pris looked back at me, with a wide, self-satisfied grin on her face.\n\n\"You have to admit that she's hot as hell.\" She leaned in closer, and lowered her voice just a bit, as a precaution against us being overheard by the group. \"Just look at her. She seems like the perfect woman to handle all your mommy-issues. How she's dressed, how she talks to you full of that unforced confidence. God. I bet she knows just what to do with bad little girls.\"\n\nShe was teasing, and dramatizing of course. She didn't actually call herself a 'bad little girl' in her spare time. It was obvious that she was more than happy to call and consider herself one as far as Vallory was concerned, or call and consider herself whatever Vallory wanted. I got a brief image of the two of them together, and I had to admit that it was something I'd pay to watch. I wondered what Pris thought about when she imagined her and Vallory. I thought of actually asking her that, but thought of a much better question.\n\n\"Is she gay?\" I asked, not sounding eager, but disappointed. I didn't know whether she was more unachievable straight or gay. It was a weird thought, one that made no sense at first but gradually started to. If she was gay, she had a whole lifetime of experience with women. I wasn't sure I had anything new and exciting to offer her, other than my youth; but she would still be gay, I would at least be the sex that she preferred and had a chance because of that. If she was straight, I was the wrong sex to begin with, and if she hadn't decided in 40-something years that women were something that she liked, I didn't stand much of a chance to change her mind; but in that case I had something new, and definitively exciting, to offer. Having thought this, I decided that it didn't matter. I had already resolved to get to know her better, and all this strategizing of how to approach her wasn't all that necessary.\n\nI wondered what Pris found most interesting in Vallory, whether her personality and education were just an added bonus to her age and appearance, or if they were as important as they were to me. Vallory was damn attractive (I will drop the \"for her age\" part, since in all honesty she was attractive for all ages, I could bet that a lot of much younger women would kill to look like her), but her physical appearance wasn't enough to get me this interested in her.\n\nI had almost forgotten what I had asked Pris when she replied, \"Honestly, no idea. She isn't wearing a wedding ring, but not all middle aged women have to be married to some asshole. She's dressed way too neatly. That's the only concrete gay vibe I'm getting from her. She doesn't look at women any differently than she looks at men, and honestly, I don't believe she's bi -- I'm certain that whatever she is, she's just that, all the way. I haven't noticed anything sexual about her though, at all. She has that same confident, playful and teasing manner, but it somehow comes off as professional and respectful either way, and she doesn't stray far from it. She's relaxed in all that somehow, too; she can joke about everything, talks about whatever drug as if she's actually tried it, and maybe she actually has, I don't know. But God damn is she hot.\" Pris, very conspicuously turned toward the group again, looked Vallory over with a grin on her face. Vallory turned to her at that moment, her countenance remained the same as when she was talking to whoever she was talking to before. She looked at Pris for a short while, before turning back to her interlocutor.\n\nIt was impossible to tell whether she was internally rolling her eyes at two teenagers or not. Pris didn't behave as if I was competition or something, or at least not resented competition, which was good, because we would definitely be competition. Whether Vallory was straight or gay, Pris and I fell into the same category of women, we were pretty much direct opponents, the things we offered were almost identical. If I had any specific intentions regarding Vallory I would have felt discouraged upon finding out that I had Pris to contend with. However, I had already decided that I was going to at least try to get closer to Vallory in a friendly way and convinced myself that I wouldn't be disappointed if it turned out to be \"just that.\" Then again, describing furthering my acquaintance with her as \"just that\" might give away that I wouldn't be entirely satisfied with it, especially if Pris happened to get more than that. I wasn't sure who I was jealous of, but I was jealous. Whether of Vallory for getting so much of Pris's attention, and being able to interest her so effortlessly, or of the fact that Pris was much more attractive than me to the average woman, and would actually know what to say when she wanted to get more of Vallory's attention.\n\nPeople were starting to leave slowly, and Vallory repeated louder that we can all expect to be contacted before the next group session in order to set a date for the private ones, that at least two or three sessions would have to be scheduled after the next group one, and she apologized for that. I had already mentally resigned to fall into those \"two or three sessions\" but then remembered that she herself told me that I'd be the first one. We gathered our things, shamelessly took a half-empty soda bottle to carry back with us, waved and said goodbye to Vallory, and exited.\n\nThere was honestly no way that we wouldn't spend some time talking about Vallory. We laughed at the slightly insane, made-up scenarios in which Vallory would come to us and start teaching us about the birds and the bees and then explaining that it doesn't always have to be like that, that it can be just birds sometimes... We were perfectly aware that that wasn't how the metaphor went, but hey. We spent a significant amount of time walking to our respective bus stations talking about Vallory's sexuality. It wasn't often that neither of us had a clue about a woman's sexuality -- usually at least one of us noticed something definitive, and told the other.\n\nMy \"gaydar\" was a particularly vague thing. All that it could do was tell me \"hey, pay attention to this girl,\" and not tell me anything more specific than that. The subtle hint that it does give me was, for example, the reason why I introduced myself to Pris in the first place, so it wasn't all that useless. Pris didn't have so much of a \"gaydar\" as she was simply more familiar with the gay culture, and could notice certain patterns of behavior that gay women exhibit, that I couldn't notice myself. So we could sometimes even guess what type of girl whatever girl was in question preferred.\n\nUsually, they preferred Pris, hence my earlier jealousy. It wasn't something that I minded in normal circumstances. I had a healthy sex life, so I didn't mind her healthier one (\"healthy\" is a confusing term when applied to the amount of different people someone slept with). It did annoy me sometimes when I noticed women pick her over me, when choosing who to flirt with. This happened only in sexual circumstances however, and where regular human interaction was concerned, we were equally popular. We hugged and parted at an intersection and went our separate ways.\n\nI didn't think about Pris or Vallory on my way home, or for the rest of the day. They seemed to be part of a TV drama that I had nothing to do with when I wasn't watching it (meaning: when I wasn't with them), but as soon as I went to bed I couldn't help thinking about them both. I had nothing else to distract me, reading didn't help, nor did playing games on my phone. I thought about how I liked Pris, how easy and fun to talk to she was, how she could avoid pissing me off expertly, and just as expertly piss me off when she wanted to, and how good the sex was. I also thought about Vallory, and our conversation that day, the way she looked, talked, smelled, her posture, body language, countenance, everything. Inevitably, I thought about that same fun, hot, and easy-to-talk-to Pris losing interest in me and at the same time becoming interested in, and gaining the attention of, the other woman that occupied my thoughts. It seemed unfair that I should be upset with Pris about that when literally, there I was, thinking about Vallory myself, and losing some of my interest in Pris in the process. The realization of my hypocrisy didn't help me stop being hypocritical, and I went on thinking that Pris was being an ass.\n\n***\n\nWednesday and Saturday never seemed so far apart in my life. However, Wednesday, along with its group session, was over and all I had to do was wait until I received an email, or maybe text, politely inquiring whether I was free at some specific time during the weekend. So yes -- all I had to do was wait. I managed to successfully wait for two hours after waking in the morning before becoming restless, so I found ways to occupy myself and forget about what I was waiting for.\n\nI even studied a little bit, voluntarily for God's sake. That's how desperate I was. Despite me thinking that I would die waiting for the email, I soon forgot about it and went about my day as usual. I didn't even notice the notification when it arrived. I noticed it over an hour later, when my phone's blinking LED grabbed my attention from the game I was playing. I read the email in a polite, female reception worker voice, and the voice asked me whether Saturday at nine in the morning was alright for my appointment with Miss Vallory Bennett. I then realized that neither Pris nor I noticed that she was a \"Miss\", and that the whole thing where we noticed that she wasn't wearing a wedding ring and internally patted ourselves on the back for being so insightful, was unnecessary.\n\nI had already started to reply to the email when I remembered that I had a test Saturday morning. I went online to check when it was, and the appointment was almost right in the middle of it. I sighed and replied asking when the next open possibility was, explaining that I was unable to come then because of college-related obligations. I waited a very long time for a reply, well, the hour that passed felt like a very long time. I got a new email that said that the next opening was also on Saturday, but at 6 p.m. I felt my heart stop for a moment, I was way too nervous and excited about this, and it wasn't pleasant. I replied that that was perfect and received instructions in the next email regarding how to get to the office where the session would be held. I put the phone down, my heart beating hard by that time, as if I was going to the dentist. Well, I was, a sort of a mental dentist.\n\nThat day, and the next, passed agonizingly slowly. I hadn't seen much of Pris. I was internally glad that she had to go to the same test as me, and that she wouldn't have the chance to see Vallory before I did. I went to all of my classes for a change, and was even glad to have that distraction. I was glad to do anything that occupied my attention. I think I met with more people in those two days than I had in the past month. I spent the rest of my free time with one or all of The Blondes, who criticized me for spending less and less time with them since I met Pris. I apologized, and said something about how hanging out with Pris had some extra benefits. They seemed to roll their eyes simultaneously when I said that. We talked about their respective boyfriends and lack thereof and discussed whether it was easier to find a decent girlfriend or a decent boyfriend. Being the group of women that we were, we concluded that it was easier to find a decent girlfriend.\n\nSaturday came, along with the test, after which I went to a beer with The Blondes and some other friends. I felt that time stood still. Every time I looked at my phone to check the time, it seemed like 9 minutes had passed at best. I was increasingly nervous, and I couldn't tell whether it was just because it was Vallory I was about to see. I was an open person -- I didn't mind talking about anything, even painful and private things, especially not to someone as affable and inviting as she was; but that lingering resentment of psychologists appeared to bring with it a certain amount of fear. I decided that I would simply toughen up and go. I still had several hours of anxiety between me and 'toughening up', but they somehow passed nonetheless.\n\nWhen I arrived at the office block I was still agitated. I arrived a full 20 minutes earlier, too. I walked around the block, and with time to spare decided that I couldn't wait any longer and went into the building. It took me only a few minutes to orient myself and find the office that I needed. It was already dark outside, the building felt almost deserted, so much so that I wasn't even sure anyone would open the door when I knocked. I did knock anyway, even though I couldn't feel my hands at this point. There was a long moment where all I could hear was the echo of the knocks in my head, and I was unsure whether I had actually knocked or just thought I did.\n\nVallory opened the door. She was smiling, her hair looked the same as it did a few days earlier, but now she was wearing a pale, knitted sweater, tight around her arms, and pulled up almost to her elbows, but much wider around her torso than the t-shirt she wore earlier in the week. The sweater fell nicely onto her breasts, even though it didn't hug her waist, and I could judge their size better now. I didn't come to a much better conclusion though -- they were smaller than mine, and perhaps slightly bigger than Pris's, but their size was unimportant, I just couldn't help noticing it, force of habit I suppose. The sweater was also long, it covered her hips almost completely, and underneath it she wore, again, tight, black pants. I felt less anxious, the light coming from inside the room behind her was warm, and her posture, expression and general air was also warm and inviting.\n\nShe smiled and said, \"Hi.\" Then she gracefully moved to the side with an inviting gesture of her hand so that I could come in. I nodded to her, walked into the room and she closed the door behind me.\n\nI was standing in a relatively large room, which I would eventually learn was some sort of lounge. There were three tables with plastic chairs on one side of the room, a few vending machines on the same side, a sink with several cupboards, and a fridge. That entire side of the room was very dimly lit, since the only light sources were two dimmed lamps, and the light in the vending machines, which illuminated little else than the things in the machines themselves. The lamps gave off a yellow light that illuminated the sitting space consisting of a couch and two sofas, between which was a table with a notebook on it.\n\nVallory motioned to the couch, accompanied by a \"Please, sit.\" I sat on the couch, leaned back, changed my mind and leaned forward, with my hands clasped and my elbows on my knees. An attempt to seem casual I suppose, I thought that if I leaned back and crossed my arms like I intended, I would have seemed reluctant to be there. I was reluctant to be there, but only theoretically, it was hard to remain that way, now that I actually was there.",
        "She went over to the other side of the room, the dimly lit one, and said, \"Since you are a few minutes early, I have time to still be unprofessional and offer to make us some coffee if you're in the mood for it?\" She turned around with a slightly raised eyebrow, I nodded, and told her to add a bit of sugar if she didn't mind. She turned around again, putting the water to boil in a kettle, and opening one of the cupboards to get the mugs. She didn't seem to mind the lack of light there, but I supposed that she was familiar enough with where everything was.\n\n\"How did your 'college-related obligations' go this morning? I was told that the first appointment I had planned and asked the secretary to book was replaced with my afternoon one,\" she said with her back to me. \"Whatever it was must have been important. Given that it made you give up your hard-earned right to the first appointment to Priscilla.\" I could feel my face burn when she mentioned Pris. How the fuck did she manage to take my appointment? We had the exact same mandatory test that morning. I could feel Vallory smile even without seeing her face, unaware of my annoyance with Pris. I supposed that this was her way of breaking the ice and getting me talking.\n\n\"It went well, I think. It's one of those mandatory, one-chance-only tests that my college seems to value more than anything else. You basically get one chance to get those marks and that's it. If you don't show up or don't feel like studying that particular thing at that particular time, tough luck. That should motivate me more to study for them, but I still don't.\"\n\nShe was stirring the coffee by now, the kettle worked quickly, the water was ready before I was half done with my reply. I waited a bit for her to ask me something else, or for me to think of something to ask her. Nothing came to mind, and I was sure that me asking her questions wasn't exactly how these things went.\n\nWhen she didn't speak in that 8 second time frame I gave her, I decided to continue. \"It would be fine if we had some privileges, like less to study for the exam if we did well on those tests at least, but it's not like that. There's no advantage to those tests as far as most students are concerned and- \" She was coming back to where I was sitting now, carrying the two mugs, handing me mine and placing hers on the table, next to the notebook. \"-they just stress you out for no reason.\" I started to hope that she wasn't the type to pick up that notebook and write stuff in it while we talked. That was a sure way to make me not want to open up in the least. She didn't pick it up though, she just sat down, crossed her legs and held her knee with both hands, just like a few days ago.\n\nThe light from both lamps shone from the side, and I could see her better now. Her facial features were small, her lips thin, but not stern, her nose small and slightly pointy. I couldn't see the color of her eyes from where I was sitting, but they were certainly of a darker color, at least not blue, and above them eyebrows the same color as the not-highlighted part of her hair, neat and thin. It seemed to me that she was more beautiful now, than when she was younger. She had light wrinkles around her eyes, on her forehead, the aforementioned longer ones around her mouth, but they somehow fit in perfectly with her behavior. Apart from the wrinkles, her skin seemed perfect, there wasn't a hint of blemish anywhere.\n\nNow, I wouldn't be much of a lesbian if I didn't look at her nails and although they were very short and neat, she didn't seem like the type of woman who'd have long nails even if she wasn't hindered by the limits of lesbian sex. Her hands were not as veiny as most older women's are, and her forearms, as far I could tell, were hairless. It felt odd, looking at her, realizing that she had a lifetime of experience more than me, and there we were, sitting and chatting with coffee, pretending that this wasn't something called \"an appointment.\"\n\nI continued talking about how the tests weren't fair in a noncommittal manner, filling up the time it took her to sit and get comfortable. I held my coffee in both of my hands, and realized how defensive I actually looked. I was leaned forward, sure, and that should be a sign of openness, but I held that mug as if I was ready to use it as a weapon. I placed it on the table, still talking, and intertwined my fingers again. Now I just looked like I had a shield in front of me, but oh well, better than a weapon. The coffee was too hot to drink anyway, I usually just gulped it down as soon as it was cold enough. I finished my sad story about how the tests weren't fair, and didn't have to wait long for her to reply saying that she agreed with what I said, and she gave a few suggestions about how it should be done, I agreed with her in turn, and the topic was closed.\n\n\"Do you and Priscilla study at the same college?\"\n\nI nodded, and added that we attended exactly the same classes together, and that \"attended\" was a term that should be taken loosely. I thought that she brought Pris up in order to start the topic of me coming to the meeting the other day, so I continued along that line. I told her how we were friends, how I spent more time with her than anyone else, and how I came to the meeting because of some random teasing of hers (I omitted the fact that that teasing was related to Vallory).\n\n\"I could guess as much. She complained of something similar this morning, only she said that she finished the test in twenty minutes and left. At least your displeasure is unanimous.\" She smiled. She looked directly at me while either of us spoke, not looking around the room or at some random point just next to my face and nodding her head as I spoke. She was listening to me, or if she wasn't, she was really good at pretending to listen. I made another joke about how \"attentive\" Pris and I were when it came to college.\n\nShe lifted one of her eyebrows before saying, \"And who, exactly, do you want to impress with that behavior? Your friends or your parents?\" She paused here briefly. \"Do you think they wouldn't realize how smart you were if you didn't point it out to them by skipping class?\"\n\nThis made my cheeks burn. Out of embarrassment, not anger. One of the reasons I didn't go to class was that people would notice that I did well without attending them. A weird self-worth issue I had been battling with for as long as I can remember. I didn't know how to answer her, and I supposed that my obvious embarrassment was enough of an answer. I expected her to ask me about that again, when I hadn't replied for a noticeably long time.\n\nHowever, she looked at her mug briefly before she started the next sentence, then back up at me. \"So, excuse me if I'm being too intrusive too quickly, but can I ask where your aversion towards my profession comes from?\"\n\nI felt no hesitation to tell her, it wasn't something that I hid from people, even though it was very traumatizing for me at the time. So I told her, in detail, why I thought they were a bunch of haughty, ignorant morons.\n\nI don't think that event is particularly important to this story, so while I told her everything that I could remember about it, I will summarize it here. I was about twelve years old when my family moved to the capital city, where we live now, from a very small town. I was suddenly without friends or any acquaintances, and even family was scarce. My parents focused all their attention on my sickly brother and our new apartment, and I was left alone with myself and my thoughts. As an added bonus, at that time I started to realize that I liked girls in the way that I should have liked boys. I also noticed that girls that like girls got a lot of attention from other people, and attention was what I craved. So I did the stupidest and most childish thing I could. I slowly made it known in school that I was gay, and that brought a lot of teasing and bullying along with it, but I didn't mind. I was just happy to receive the attention and felt as if it wasn't me that was being bullied. I made up some lies along with that regarding a teacher from my previous school, namely how she was a lesbian too and how she filmed some movies for adults. It wasn't long before I was sent to the school psychologist.\n\nInstead of actually talking to me, and seeing what situation I was in, she decided to believe all the audacious lies I made up and call my parents. In a few days I had to come to school, with both my parents, and attend a meeting with the school headmistress, her deputy, the psychologist, the department chair, and the teacher that was assigned as head of my class. A very, very uncomfortable conversation followed where the psychologist said everything she heard from me to my parents, and everyone else that was present.\n\nI am fairly certain that I had a nervous breakdown at some point during that meeting.\n\nVallory furrowed her eyebrows occasionally as I spoke, never breaking eye contact. Besides that movement, she did not react to anything I said. I kept looking at her, trying to see her reactions, to see if something annoyed her, if she believed me, if she thought I was exaggerating, or overreacting. I couldn't see anything in particular, aside from the occasional eyebrow furrowing.\n\nAfter I had finished, I shrugged my shoulders and said, \"That's it I suppose. I mean, I can understand her partially, she was probably dissatisfied with her job and the last thing she needed in her life was to go through the trouble of trying to actually help me. I was a confused kid, and if she made me admit that I was lying I would have probably stopped doing that. Honestly the thing that pisses me off the most about the whole thing is that she believed me! She honestly believed me. A woman of 50-something years, with who knows how much professional experience believed such outrageous stories that a 12-year-old told her. What does that say about her competence? And someone as utterly incompetent as her is working with children! Yeah, maybe 10 to 14-year-olds and their issues aren't taken seriously in any sphere of life, but for fuck's sake. When you have one job to do, why the fuck don't you do it? My parents sent me to another moron of a woman a few years later, that did almost the exact same thing.\" My head was turned angrily to the side, but I could see that she was still looking at me, though now with a slightly softer countenance than her usual firm-but-gentle combo.\n\nI turned back to her, shrugged, and waited for her to say something. I noticed that her eyebrows had remained slightly furrowed, that she didn't relax them back into their usual position. She then lapsed into a short review of her opinion on the subject, she didn't seem to be picking her words, but everything she said was eloquent and soothing to me. I actually felt like she supported me and understood how I felt when I was twelve, and how I felt when I had told her the story. I also got the feeling that she wanted to say more on the subject, but held back, probably because of the whole \"this is about the patient, not me\" thing, which I respected but didn't think was necessary. I was more than happy to spend this hour in fair and equal conversation, instead of as a \"patient\". Without thinking I went ahead and told her that.\n\nShe smiled again, this time wider, actually showing her teeth. I wondered why she didn't smile like that more often, concluded that she seemed more passive and unassuming that way, and said \"huh\" internally as I realized that. After that wide smile came a slight, cocked nod; and she said, \"If you keep talking as passionately about things, I just might feel tempted to have an actual discussion with you about them. However, do try and keep my opinion out of the equation.\"\n\nI rolled my eyes, openly, and wanted to say something along the lines of \"I know I study Math but I am really bad with equations.\" Instead I just shrugged in a \"as you wish\" manner.\n\nWe talked about all sorts of things after that. Well, I talked and she listened, only giving her opinion when I insisted on it. We talked about how things were at home after the whole psychologist incident, what I thought about my mother, my father, my brothers, how I felt about them, what my ambitions were. Given that my replies were long and honest, we didn't get to talk about much more than that. I was dimly aware that we hadn't mentioned my sexuality almost at all, even though the whole incident with the psychologist revolved around it. I just mentioned it when talking about my mother and father. I lingered much more on my mother. She could notice that it wasn't pleasant for me to talk about my relationship with her and what perpetual feeling of guilt I had as far as she was concerned. She made no comment that could in any way be connected to me being gay, and I wondered whether she was deliberately avoiding it.\n\nI felt tempted to mention it more directly, and I was sure that I was going to, when Vallory looked at a clock behind my head, and said \"It seems we've exceeded our time limit a bit.\" I turned around to look at the clock, even though my phone was right there in my pocket, with the sound turned off, as if I thought time worked differently in this room. It wasn't exactly \"a bit\", we'd talked for 20 minutes longer than we should have. I immediately asked her whether she had another appointment after mine and apologized for rambling on for so long.\n\nShe dismissed the apology with a hand motion, and said that she always left some leeway between appointments for this reason. She added, \"Which doesn't mean that my 'patients' \" - she air-quoted that word, she probably didn't consider people with who she worked for free to be 'patients' -\"are to blame for the delay. I enjoy doing my work, and sometimes my interlocutor is especially interesting.\" There was a deliberate pause here, and she smiled, all of a sudden playful, as if the fact that the appointment was over now meant that she could behave informally.\n\nIt's a good thing that it didn't cross my mind that this was low-key flirting, because I probably wouldn't have known what to say. This way I just smiled, said something about how it's rarely a good thing to be interesting to a psychologist, and got up to leave. I became painfully aware of the lack of physical contact between us, realizing that the initial handshake was all there was. I extended my hand toward her when she stood up, thanking her for her time, and she shook it. I already said how I could over-sexualize a handshake, so there's no reason to linger on that. She let go of my hand, but placed her other one slightly above my elbow.\n\nShe looked at me, in that particular way of hers, still without a hint of that look being anything more than friendly and sympathetic, and said that I shouldn't feel as guilty as I do, regarding my mother. She of course must have said it in a more eloquent and slightly around-the-bush way, but that was the point. Given that the feeling of guilt and my mother were connected to me being gay, I wondered whether the fact that the appointment was now over somehow made it alright for her to talk about it.\n\n\"Can I ask you something?\" I asked. I didn't wait for her to nod, and since she kept her hand above my elbow, I concluded that that was invitation enough to continue. Oh and yeah - I could oversexualize an elbow-hold too. \"I'm a bit surprised that you didn't mention or ask me anything regarding my sexuality during our 'talk.' I thought psychologists glued themselves to that as soon as a person mentioned it.\" She smiled, again wide, squeezed my arm where she held it briefly, and let go, dropping both of her arms to her side.\n\n\"You're right. First: psychologists do often give a lot of meaning to someone's sexuality, and that's not entirely without reason. People often push back some of their traumas and they resurface as peculiar sexual tendencies. However, I think that being homosexual -\" (I cringed here a little bit, an older woman saying 'homosexual' reminded me way too much of my mother and women similar to her who found the idea disgusting.) \"- shouldn't be treated as such a serious thing when looking into someone's personality, even if they are a patient. Unless they insist on it themselves. I didn't get the impression that your sexuality was something you had an issue with and wanted to talk to me about. So I decided not to linger on the subject too much and talk about things you might actually feel the need to share and discuss.\"\n\nI internally nodded my approval, told her that she was right, and that I was just curious and worried that she was perhaps uncomfortable with me being gay.\n\n\"No, not at all, you can be as gay as you like. I would be very bad at my job if I felt uneasy because of that. Either way, I don't want you to hold back because something might be uncomfortable for me. The whole point of this is to make you more comfortable with sharing. I didn't notice you holding back during our conversation, you seemed forthcoming and talkative. So please, if that was the case, proceed in that manner.\"\n\nI was on my way to the door by the time she started to talk, and by the time she finished I already had my hand on the doorknob and waited for her to finish in order to leave. It wasn't like I was in a hurry to leave; I just didn't want to take any more of her time. Nothing in her manner suggested that she was annoyed with me for staying longer than I should have. However, my insecurity and the shred of good manners that I had convinced me that I should leave the woman alone already.\n\n\"Oh and, by the way...\" She had followed me to the door as she spoke, so she was standing right next to me when she said, \"I, as I've told you, dislike 'wasting' the session by expressing my opinions on a subject in great detail. I do say what I think when I believe that it is relevant to you and your understanding of your own emotions. I do, after all, have more theoretical knowledge than I suppose you do, and it would be a waste if I didn't offer an opinion based on it. However, I do my best to make the session as much about, in this case, you, as possible. Considering that earlier in our conversation today you protested that that wasn't what you wanted, and given that it'd be impracticable for me to change the way I act during an actual session...\"\n\nMy eyes almost noticeably widened; this felt way too much like it was going to lead to her offering to \"give her opinion on things\" over coffee or something. Well, we did have coffee together just now, but you know what I mean. It felt like my ribcage was becoming smaller and smaller. I decided not the breathe for a moment, in order to keep myself from making some weird, anxious seal-like sound while trying to. Whatever store of butterflies I had in my stomach now decided to stretch their wings a bit. It was kind of like waiting at the top of the roller coaster drop, knowing that it will come no matter what you do, and wanting and not wanting it to at the same time.\n\nAll of this happened in the second part of her sentence. Her countenance was the same as always, nothing in it could help me in guessing what she would say. Even if we did meet for coffee, it's not like it necessarily had to be considered a date or something, women often drank coffee together without wanting to fuck. Well, other women, not me in particular, but I was aware that other women did that regularly.\n\n\"I was wondering whether we could meet in a setting that would, well-\" she smiled, there might have even been a hint of shyness in it, but I might have just as easily imagined it. I was certain that she could tell how excited and eager I was. \"- would allow me to share my opinion more freely. The fact that I can have only one or two of these appointments a day isn't a consequence of me not having free time for more. It's simply that I like to have them in this room, and that's impossible when there's anything else going on in the building.\"",
        "I wanted to say yes after the first few words she said. Technically, I wanted to say yes before she even started talking, I wanted to take her face between my hands and shout at it \"YES. SETTING. SURE. YES.\" but instead I opted for a smile and a yes, maybe accompanied by a nod and some mumbled words. She gave me her number, and I left.\n\nI was sure that a there was a steady amount of steam coming out from my body as I walked home. My euphoria had lessened after the realization that, again, women do drink coffee without it being considered a date, and that nothing in her manner suggested of it being sexual, even the supposed shyness that I noticed wasn't unusual for the start of an informal friendship. My feelings about her were mixed; I was definitely attracted to her, definitely wanted to fuck her, and I loved talking to her, but my excitement wasn't purely sexual. It wasn't that feeling you get when you're hot for someone and you're just waiting to see whether something will happen.\n\nSure, that was a part of how I felt, but it was mixed with that feeling of my chest tightening and my stomach turning whenever she moved closer, or smiled at something I said. These emotions weren't new to me. However, I was used to those emotions being directed at someone my age, so I was unsure of how to act and feel now. Whenever I was in love before, I ended up being with that girl, so I never had to suffer the bad side of those feelings for long. The woman in question now was an actual, grown-up, mature woman.\n\nWhat would she even think if she knew how I felt? Besides, I wasn't ignorant of the fact that the strength of my emotions was partially due to how rare of a specimen Vallory was in my life. I had met older women who looked as good as her, ones as smart as her, well-mannered as her, but never in the same package and never did I think that they weren't straight. This whole thing felt new and confusing, and all my previous experience felt worthless.\n\nPart of me also felt like a disrespectful idiot for thinking about her that way. The disrespectful part came from her age. There was really no way for me to stop myself from thinking about someone looking at my mother that way, when she didn't want them to. That reignited my curiosity about Vallory's age. I thought about how I could find that out, decided to ask Pris if she knew, sent her a message, and continued to feel bad.\n\n***\n\n\"Actually yeah I do know. One of the guys from the meeting knew, don't remember where he heard though, he might have even asked her. She's 44 if his info's good,\" Pris responded belatedly to my question the next day. Well at least she wasn't older than my mother. I was feeling better about meeting her for coffee, I stopped feeling like a pervert and could now simply be excited about seeing her. I'm not entirely sure how I managed to have enough courage to send Vallory a text to the number she gave me after our appointment. I'd only rewritten it 9 times and spent over 20 minutes contemplating about how it sounded before sending; only to realize that I somehow managed to overlook a typo.\n\nIn the text, I had told her that I was free the next two days practically whenever. That was a lie, I had a grand total of 10 hours of classes in those two days. Also that I wasn't sure what my schedule was after that. That was also a lie; I had a pretty good idea, but I hoped that it would motivate her to see me in those two days, if she was free. She replied that she was, and whether 7 p.m. tomorrow was fine for me. I said yes, and she told me that, if I didn't mind, she already picked out a place where we could go, unless I decided that I was in the mood for food when we met.\n\nFirst, I was tempted to ask whether someone her age should be drinking coffee that late in the day. Then I was tempted to fake surprise at the fact that a female picked out a place to go before you even asked her, and before going through a few \"oh, wherever you want to go\" followed by refusals of places you suggested. But hey, that's just one of the perks of going out with someone almost your mother's age. Well, to be absolutely fair, almost my father's age, too, since he was just a few months older than my mother - high school sweethearts and all that.\n\nAgain, I had to spend a whole day waiting to meet her and doing whatever to keep myself occupied. I decided that a very good way to pass time was to sleep. So I got a nice, refreshing, 12 hours of sleep that night and woke up completely disoriented. She told me to meet her at one of the busier pedestrian streets in town and that we would decide what we were in the mood for. I liked how she just told me where and when to meet her. I just agreed to whatever she said, and that was much easier than trying to pick a time after negotiating. This way she suggested, and I either agreed or disagreed, and I wasn't inclined to disagree.\n\nI realized that a good part of the remaining time before we were supposed to meet would be spent in me deciding what to wear. Time flies when you're a woman without an outfit. Good thing I didn't have a lot of clothes to choose from -- the only pants I had were either black or dark red, so there wasn't a lot of choice there, I just mostly focused on whether I should wear a black, sleeveless t-shirt with a shirt over it, or a normal t-shirt with a hoodie. I really couldn't decide how formal to be. In the end I decided on red pants, and a black t-shirt, black shirt combo that looked like I put some effort into choosing my outfit, but not that I was desperate while doing so (the pile of shirts and t-shirts that I had tried on was on my bed, testifying to exactly how desperate I was). After that came the slightly easier part of choosing what to do with my hair since I only had two real choices. I could either wear it in a tight bun, or let it loose.\n\nAfter some consideration, I decided to wear it in a bun, partially because by now I had ruffled it up so much that it didn't look the way I wanted it to when I let it down. It took some effort to put my now ruffled mane into the bun I wanted. I briefly wondered whether I should put on some makeup or not. Even if I did put makeup on it'd be in a small amount, and probably wouldn't include more than a bit of mascara and some tactically placed concealer. I decided that I was already uncomfortable about seeming like I 'tried too hard' (apparently not dressing like one pair of jeans and three t-shirts were all I had in my wardrobe was seen as 'trying too hard' in my eyes).\n\nIt was unusually cold outside, when compared to the previous few days at least, but not so much that a jacket wasn't enough to keep you warm. I decided to walk to where we were supposed to meet, so I even had to take my jacket off at some point. I looked at my phone, saw that I should arrive exactly on time, and that I had no new notifications worth paying attention to. The traffic and people walking by were enough of a distraction, so I didn't get a chance to start feeling anxious. I wondered whether she was waiting for me already, or if I would need to wait for her.\n\nIt turned out that neither of those would be the case. I saw her walking towards the spot where we agreed to meet as I approached it myself, we were both right on time and we acknowledged it with a smile. I realized that I had no idea how to greet her when we did reach each other. A handshake seemed too formal, a hug too informal, so I hoped that she would decide for me. Again, neither of those two was the case, we met and she placed her hand slightly below my shoulder and squeezed, exchanging some greeting with me, after which she gently pushed me and nodded in the direction where she wanted me to go, falling in line next to me. Huh, perfectly in the middle of the two options that came to my mind, she truly was a professional. Or maybe she, unlike me, simply wasn't socially retarded.\n\nShe asked whether I was in the mood for that scheduled coffee or something else. I said coffee and followed her lead. We walked for half an hour until we reached the place she had chosen for us. In the meantime, we talked about nothing in particular, my classes, whether the other appointments went well, the other non-profit programs she worked on, etc. I couldn't help wondering what she did to actually earn a living. All I'd heard about her work was non-profit and seemed more like a hobby she really liked. I mean, sure she was older, but not retired yet; that was my assumption at least. Oh, boy would it be fun to say that I went on a date with a retiree. Then I remembered that this wasn't a date, at least not officially, and that I needn't worry about dating a retiree yet.\n\nWe entered the living room looking caf\u00e9 that she chose, I didn't pay attention to the name, and she motioned for me to climb an inconspicuous set of stairs on the right. Which was where I would have gone anyway, since the entire ground level was full. The caf\u00e9 was organized in such a way that there was quite some space between tables, and every table had at least one couch. The space wasn't that big altogether, and at least twice as many tables could have been fitted in if they crammed them close together like most coffee places. The room was well-lit with warm, yellow light and some pink accents in places. Everything that could be made out of dark wood was made out of dark wood. Behind the counter were a whole bunch of coffee varieties that I knew nothing about and really hoped that I didn't need to actually choose one of them on my own.\n\nI climbed the spiral wooden stairs, internally regretting that I didn't let her go first, but I couldn't exactly stop now and ask her to switch places with me so that I could take a look at her ass up close. I could only hope that she'd enjoy the view of mine.\n\nThe upper floor was full as well, and I felt disappointed. I was certain that she made sure that there was room here. I wasn't in the mood to go back outside and walk some more, I wanted to sit and talk. This floor had a similar layout to the one below, the tables further apart than usual, one whole wall replaced with windows. This floor even had a small fireplace in one corner, but it didn't have its own counter, so I supposed that the waiters had to go up the stairs every time. I moved to the side of the stairs to give Vallory room to come up too, and waited to hear what she would say. She didn't say anything, she just proceeded to the opposite wall, and I followed.\n\nShe opened a door saying \"Employees Only\", which was the same dark brown color as the wall. She kept it open for me until I caught up with her and she climbed another small set of stairs there, surrounded by a bunch of boxes and tools. She reached the top of the short flight of stairs, where a door was open, and led into another room, very similar in d\u00e9cor and layout to the ones below it but smaller. There were only two tables, and around one of them was an angled, dark-leather couch, big enough for six people as far as I could tell. The other had three sofas, two on the longer and one on the shorter side, and the same layout was true for three chairs on the empty sides. There was a small bar with a sink surrounded by glasses of all sizes, and a counter made from the same dark wood as the rest of the furniture.\n\nVallory didn't turn to see my reaction as I walked in, and instead walked to the counter, reached underneath it's top part, apparently flicked a switch or two and a few behind-the-furniture LED strips lit up, one set under the counter itself, and another behind a glass display.\n\nShe smiled, started taking off her coat, and said, \"I'll explain what we're doing here as soon as we get comfortable, do you by any chance have a preferred type of coffee that you order?\"\n\nI shook my head, adding that I usually had whatever the person next to me had. She asked whether I would in that case allow her to order something for me. This was probably the best thing she could have said. I was almost incapable of talking to waiters when I came to a new place, especially when I didn't have my order rehearsed and ready. I took my jacket off and looked around for where to hang it. She came up to me, took the jacket from me and tossed both it and her coat over one of the sofas on the smaller table and motioned for me to sit at the larger one, the one with the angled couch. I did as she told me, sat on one side of the couch, propped myself up with one of the half dozen pillows there, and got really comfortable, really quickly. Then I remembered who I was with and that we were together in a very cozy room, very much alone. I also remembered that I should in fact be nervous as hell, and I promptly became so.\n\nVallory, in the meantime, went to the bar and sink, took two large glasses, filled them with water, and carried them back to the table where I had placed myself. She placed one in front of me, and the other in front of where she sat a few seconds later.\n\nI must have looked either confused or lost, because she smiled and said, \"A friend of mine owns this place. This room here was designated exclusively as sort of living room that only we and our friends could use. So we're not intruding on anybody, don't worry. Besides, the waiters here appear to be very fond of me, or at least they must be in order to climb up to here without complaining. I at least try and order everything at once and spare them any unnecessary trips.\" She smiled, and I felt a phantom hand on my knee. I resisted the urge to look down and check whether her hand was actually there. Seeing how both of her hands were visibly on the table, I decided that, most likely, her hand wasn't on my knee.\n\nI heard the door at the base of the stairs open, followed by footsteps. A young, well-groomed man came in, wearing a brown apron. He greeted Vallory with a smile, asked her how she was doing, and after a short chat about her well-being and his turned to me, nodding in acknowledgement of my existence. He then turned to Vallory again, asking what he could get for the two of us. She ordered whatever 'the usual' was for her and something starting with 'Ma-' for me. I didn't understand what she said then, and still have no idea what the drink is called. She also added that he should bring up whatever dessert he thought was best today, anything without fruit in it, at his own leisure. He nodded, spoke a few more words with her and left. Or, rather, he started to leave, until she asked him whether he'd mind closing the door behind him.\n\nI felt a strong, but pleasant surge of energy flow through my body, starting from somewhere under my breasts and spreading everywhere, concentrating on a few places more than others. My body was already looking forward to her touching it. I decided to try and distract myself from that train of thought.\n\nSince my eyes were fixed on my glass ever since she'd said what she'd said, I had to look up at her always unreadable face, before saying, \"So what was that thing you ordered for me? I don't think I ever heard of it before.\"\n\nIt took some effort not to stutter while saying this. I hadn't had the chance to look at her properly until then. I wasn't sure whether she was simply that beautiful or the light was doing something to her features, but I felt my heart pound almost painfully hard during the entire time I was looking at her. So hard even that I didn't notice that I was already wet, just from her asking someone to close the door. There was really no way to convince my body that she didn't have any not-entirely-friendly intentions when she decided to invite me here. The only thing more private than that room would have been an actual hotel room.\n\n\"Just something that I thought you might like. Honestly there's nothing not to like about it, it's probably the most reliable 'new' thing to suggest to someone.\" Her posture was more relaxed than usual. She had one elbow on the edge of the couch, leaning on that side slightly. She was wearing a sweater similar to the one she wore the last time we met, just as elegant as the last one, as much as a sweater can be elegant anyway, and black pants, again. I could see that they were different from the last two pairs I had seen her in, these seemed to have leather highlights on them. They suited her unusually well, given that I've only seen them worn by girls less than half her age.\n\nI hoped that she would keep talking. I felt incapable of finding anything to talk about if she didn't, and that never happened. I realized that she was just as capable of reading my expression as she was when we met, and if she noticed a slight irritation in my face then, there was no way that she missed the blush in my cheeks... even with the light being as dim as it was. If she knew what she was doing to me, how much effort it took for me to sit there, with my hands around my glass of water, and not just grab her by that same elegant sweater of hers... If she knew, and still didn't decide to at least continue talking, she would be a very evil person.\n\n\"A few years ago, a friend of mine, one that I've known for over twenty years,\" she smiled, \"longer than you've been alive, as a matter of fact; suddenly decided that he was going to open a caf\u00e9. It wasn't his childhood dream or anything like that. He simply felt like that was something that he wanted to do, and that it could be profitable. He spent weeks, maybe even months, planning the entire interior. He had - and I'm not exaggerating when I say this -- over 20 well developed floor plans. I didn't know why he simply didn't find a location that suited him and then planned accordingly, instead of making so many plans and essentially wasting time. He told me that the location would depend on the plans, not the other way around. When he decided on this two-floor plus secret living room one, he set out to find a location that suited it. I didn't do much of anything during that time, as far as his planning was concerned. He'd talk to me about his ideas, but it was more like he was talking at me, rather than to me.\"\n\n\"I didn't mind though; I could see how dedicated to this he'd become. I did accompany him to potential candidates, when he was looking for a suitable location, mostly because I'm a better negotiator than he is. He knew that if he saw a place that fit into what he wanted, he would agree to whatever price was offered to him first. Since I wasn't as lost in the project as he was, I was the one who wrote the contract for this place and negotiated the price.\"\n\nShe was so easy to listen to, the way she spoke, gently gesticulated, made me want to give her a book to just read to me. She could start reciting the Constitution and I'd still enjoy it. She seemed aware of this, and continued, \"As it happens, you need money to buy real estate. And even more money if you want to furnish the entire lot with wooden furniture, repaint all the walls, buy all the necessary machinery etc. The glasses and silverware alone cost a lot, not to mention everything else, especially the location of the lot, so close to the center of town.\"\n\nThe well-groomed young waiter came back with a tray with two glasses of what was, at least partially, coffee. He put the taller glass in front of me, and it had a thick layer of something brown at the bottom of it. I thought it was just chocolate syrup smeared on the edges. Whatever Vallory got for herself came in a thicker, shorter glass, and it didn't have anything unusual in it, it just looked like coffee. Why wouldn't 'the usual' be coffee, though? I don't know why I was so confused at seeing that it was. Maybe it was an internal joke between her and the waiter. When he put her glass down in front of her, he said\n\n\"Here you go, boss.\" He turned to me, holding up an ashtray he brought with him. \"Do you smoke?\" So Vallory doesn't smoke. I shook my head. I did smoke, but I was the sort of parasitic smoker that only did so when other people did, excluding the occasional coffee by myself and mostly smoked other people's cigarettes. Especially Priscilla's. I bought my own pack and shared with her sometimes at least. She didn't mind me smoking hers as long as she could keep on calling herself my sugar daddy."
    ],
    "authorname": "EmzC",
    "tags": [
        "mature",
        "college",
        "romance",
        "therapist",
        "therapy"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/pavlovian-reaction-1"
}