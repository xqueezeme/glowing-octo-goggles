{
    "title": "Our Little Secret Ch. 10",
    "pages": [
        "Chapter 10 -- The Hunting Party\n\nJen decided to rent her house furnished, so a great deal of its contents could stay, but all her personal belongings had to either be packed for moving, put into storage, or be discarded. April whipped the house into shape much more quickly than Jen imagined was possible. She cleaned everything, and packed up everything that Jen was not going to leave behind for rent. April washed every stitch of clothing Jen owned, or sent it to the drycleaners, leaving Jen with a fresh wardrobe. Her judgment seemed closely aligned with Jen's preferences, letting Jen focus on things like finances, utilities, moving companies, rental agencies, and other logistics while April did the hands-on chores. \n\nJoel effectively moved in to Jen's house, not so much out of romantic aspirations, but to be as helpful as he could in preparation to their departure for the west coast. His apartment was temporary anyway, and it would take very little effort to pack it up -- more like packing a hotel room. Not to mention, Joel would need a place to stay during his return trips to Boston. He would eventually let go of his existing apartment -- it was too expensive to use as an occasional crash pad -- but he decided to keep it until he found something more suitable. \n\nApril worked tirelessly during the week -- easily ten hours every day. When she offered to work Saturday, Jen said it was too much -- April had done enough. But when April said she really needed the money, and Jen would be doing her a favor by letting her work, so Jen agreed, but insisted April take Sunday off. \n\nApril said Monday would be her last day. She was living with roommates, and their lease was expiring at the end of the month, which was Monday. They were losing the apartment. April needed to find a new place to live, which explained the need for extra cash.\n\n\"Live here with us until ...\" Jen offered, and then stopped to think. \"April, would you like to move in here, and look after this place until it's rented out? It won't be perfect, there will be painters and tradesmen fixing things up, but it is a place to stay, and I would feel so much better having someone I trust living in it.\" Jen figured It would take a month or two of fixing up before she would be ready to rent it.\n\n\"When would I move in?\" April asked.\n\n\"Now!\" Jen smiled. \"Whenever you want. It gives you time to look for another place.\"\n\n\"I'm sorry, Jen, but I couldn't afford to live here.\"\n\n\"No, April, I won't charge you rent. Your job will be look after the place, and for that you stay here for free.\"\n\n\"Until you rent it out?\"\n\n\"Right,\" Jen nodded. \"Say in two or three months.\"\n\n\"I promise I'll look after it really good,\" April solemnly declared. \n\n\"I know you will,\" Jen smiled. \"I wouldn't ask anyone to do this.\" And so the deal was sealed. April would move in right away. \n\nThen April offered to drive Jen's car and corgis out to California. She knew Jen was already nervous about flying the dogs on the airplane. Jen agreed it made good sense, as long as April understood there was no rush for her to get there, and she could take her time and not feel pressured. \n\nSeptember First fell on a Tuesday, and Jen was scheduled to begin work one week later, the Tuesday day after Labor Day. She and Joel decided to fly to San Francisco on Friday, and take the long weekend to settle into their new, temporary home in San Jose. April would start her transcontinental drive with the Corgis on the same day.\n\nDon McLean's assistant, Kristen Jergens, sent an email to Jen on Tuesday saying they had located a furnished home that met her requirements. It was a small bungalow with a fenced in back yard with two bedrooms, and a furnished basement that could be used as an office. She included several pictures. She invited Jen to fly out to see it, but warned time was getting tight. Jen and Joel looked at the pictures, and Jen sent a reply email saying it would be fine. \n\nWednesday was Jen's last day at Quinton, two weeks and a day after she put in her notice. She had let it slip she was taking a job at Google on the west coast with a big bump in pay. Her co-workers' reactions ranged from unguarded jealousy to heartfelt congratulations. Amazingly, Jen was busy all day with final touches on policies Quinton was working on.\n\nBy the time she came home from Quinton for the last time, April had pretty much packed everything up. The dining room was chocked full of packed moving boxes that would be shipped out when Jen and Joel found a more permanent home in California. Four massive suitcases were ready to fly to San Francisco. Google would pay the extra baggage fee. Jen was left to pack her own carry-on suitcase. \n\nThursday ended up being a relaxing day of tying up loose ends instead of the mayhem last minute frenzy Jen was expecting. April was busy getting the dogs ready to travel, and she had just picked up Jen's car from the mechanic for a once over before the long trip. Joel was back at his apartment, packing up.\n\n\"Oh my God!\" Jen heard April from the living room late in the morning. Jen walked in to see what was happening. April was watching television, but by the time Jen entered the room, whatever April was watching had been replaced by an advertisement. \"They're showing an interview of the Albuquerque orgy guy tonight,\" April said. \"They say one man forced all those women to have sex.\" Jen had heard of the Albuquerque orgy -- everyone did. It seemed too fantastical for one man to make all those women do that against their will. \n\nLater, just after two o'clock, Jen was in the living room with April when another plug for that evening's Insight show came on again. \n\nIt is a shocking true story that even we didn't believe until we saw it for ourselves. Join Sally Jamison at nine o'clock tonight when she interviews the one man who forced twelve unsuspecting women into performing unspeakable acts of sex and debauchery in Albuquerque. Viewers, and especially parents are strongly advised tonight's episode of Insight is not appropriate for all viewers.  Jen liked Sally Jamison. She was levelheaded, hard hitting, but compassionate. Jen normally didn't follow this kind of hyped up story, but it was Sally Jamison. She didn't do sensationalist or fluff pieces. If they were building up something like this for Sally Jamison, it really was big.\n\nJen texted Joel.\n\nHow bout you me & April go out to dinner tonight at 7 -- near my place -- nothing fancy?  Jen figured that gave them enough time to get home to watch Insight at nine. Joel replied:\n\nSounds perfect. I'm at the office now -- all done at home. Will be your place by 6.  Jen had lists of to-do list. She spent most of Thursday afternoon going through all her lists, verifying she had checked everything off. By five o'clock on Thursday, she and April had nothing to do. Jen opened a couple of beers and sat down with April and celebrated.\n\nJoel spent the afternoon working with Barry, and the last hour with Sylvie. She said an office manager with her responsibilities makes on average $60,000 a year. Joel sent an email to Autumn to increase Sylvie's salary appropriately. \n\nSylvie thought it was better to leave the office in Boston. Joel said he would try that for now, and see how it goes. She was welcome to fly out to the West coast to meet with him from time to time if she wanted the change of pace. \n\nJoel shook hands with Barrie and Sylvie. He thanked them both for the wonderful job they were doing. Joel arrived at Jen's at five thirty. They all agreed on a local Boston Pizza, and arrived there by six thirty. That's when the Insight episode came up in conversation over dinner. \n\n\"I want you to know something, Jen,\" Joel said. She looked at him strangely, mostly because he was acting strangely. \"I love you and I would never do anything to hurt you.\"\n\n\"Uh, okay?\" she answered cautiously. \"That's good to know, and I love you too.\" She paused. \"Joel, what's going on? You're kind of freaking me out.\"\n\n\"I don't mean to freak you out,\" Joel said. \"Just remember I love you, and I would never hurt you.\"\n\n- - -\n\nJen, Joel, and April watched Sally Jamison introduce the show after the viewer discretion warning.\n\nThis is a story that seems impossible to believe, and I would not have believed it myself if I had not seen the evidence with my own eyes. In the interviews that follow, I will speak with a man who openly admits he was the mastermind behind the Albuquerque orgy. For legal and security reasons, we cannot disclose his identity. We have altered his appearance and voice, but the words you will hear are his own. For purposes of this interview, we call him Jim -- that is not his real name.  You will hear Jim's full story over the next three episodes of Insight, but before Jim tells you his side of the events, we need to explain how Jim did what he did. How did he control twelve ordinary, beautiful women to participate in an orgy they would normally never have heard of, let alone attend? To answer this, we have to walk you through a story that frankly, I did not believe at first. I will take you through the same steps we went through, and when we are done, you will understand why Jim in Albuquerque is the least of our problems.  We first have to tell you, this did not start out as our story. Trish Marples, a freelance journalist, brought this story to Insight, and we will introduce you to Trish later in this show. To research Trish's story, we spoke with others, like Jim, who not only corroborated what Jim is telling us, but demonstrated how Jim controlled those unsuspecting women. We will show you one of those demonstrations. We have also spoken with senior ranking officers in the United States Air Force who are investigating this situation, and we will play you an interview we recorded earlier with Colonel Brian Greene of the Air Force. Colonel Greene heads a task force related to this investigation, and that task force reports to the highest levels within the American government.  But before we do that, we have to go back to where it all began. It started on an ordinary Tuesday afternoon, on June Ninth, in 2015, when a routine flight from Atlanta to Boston declared an emergency and diverted to Richmond, Virginia after a ball of light hit it and rendered all the female passengers unconscious.  Jen snapped her head to Joel, who was watching with Jen and April. \"Joel, what is this?\"\n\n\"Just watch,\" he said quietly. \n\n\"You were on that flight, Joel. What the fuck is this?\" Jen never used the word fuck as a swear word. \n\n\"SHHHH!\" April called out. \"Let's watch.\"\n\nAt the time, experts believed the only aftereffect of that flight was all females were temporarily rendered unconscious, and had no other ill effects. We now know, and the US Air Force knows, there were much more serious aftereffects -- powers we call them. Jim was on that flight on June ninth, and he used those powers in Albuquerque to force those innocent women to participate in the orgy against their will on August fourteenth, where one of those women died.  Jen wasn't watching the television any more. She was staring at Joel. \n\nWe do not know if it affected all men, but at least some men on that catnap flight, as it is commonly called, have the power to make women do whatever they want, and the women do not even suspect they have been manipulated into doing anything against their will. From the woman's perspective, when a man like Jim makes her do something, she believes it was her idea in the first place. Regardless of how ridiculous or dangerous her forced actions may actually be, the woman believes it made sense for to her to take those actions at the time they occurred.  \"Oh my God!\" Jenny put her hand to her mouth, and she stood up and bolted toward the bathroom. Joel and April looked at each other when they heard Jen vomit into the toilet. \n\nJoel went to the bathroom to check on Jen. \"Get the fuck out!\" Jen warned while her head still hovered over the toilet bowl.\n\n\"Jen, I can ...\"\n\n\"GET THE FUCK OUT!\" Jen shrieked as she stood up. Her face was beet red and her eyes bulging with rage. \"GET THE FUCK OUT OF MY HOUSE. GET THE FUCK OUT OF MY LIFE!\" she screeched, and she ran forward and slammed her open palms into Joel's shoulders so hard he toppled backward and landed hard on his ass. She stepped forward and kicked him in the side of his leg many times. \"GET THE FUCK OUT AND NEVER, EVER FUCKING COME BACK!\" She stepped around Joel and ran upstairs. The corgis chased her, but were too late, because she slammed the bedroom door, leaving them to roam upstairs in confusion.\n\n\"DO NOT FOLLOW ME TO CALIFORNIA TOMORROW,\" Joel heard Jen yell from upstairs. \"YOU STAY THE FUCK AWAY FROM ME FOREVER!\" and the door slammed shut again, this time with the corgis inside the bedroom. \n\nJoel stood up from the floor and walked to the living room. April was stricken by the commotion she witnessed. \"Take care of Jenny,\" Joel said without commanding her, left the house, climbed in his car, and drove away. \n\n- - -\n\nJoel slept poorly. He knew Colonel Greene promised the impossible, but only a fool would believe such a promise. Not that Joel was angry at Colonel Greene -- this was Joel's own undoing. He hated people that blamed everyone but themselves for their own problems, and Joel was not about to become one of those. \n\nJoel must have finally slept, because his phone woke him at seven thirty on Friday morning. It was Sam Barrington calling. Joel was trying to remember where he heard that name before. Sam said they had spoken after he claimed to have been fired from Quinton. Now Joel remembered. After the press conference in Richmond, Sam Barrington of the Boston Times called Joel because Quinton was denying firing Joel. \n\nSam Barrington had a different question this time. Wasn't Joel on the catnap flight, and if so, did he have the same kind of powers described on the Insight documentary aired the night before? Joel declined to comment, and hung up. Within the hour, Joel received four more phone calls from reporters. \n\nJoel turned his phone off and retrieved one of his prepaid phones. At nine o'clock Joel phoned Sylvie at work. She said there were nine messages waiting when she arrived asking about Joel's connection to the catnap flight and two more calls since she arrived. She has declined to comment.\n\nJoel was way out of his depth. He needed help. He looked up the number for Terrance Strong, and called on his prepaid phone. Terrance's assistant answered. Joel introduced himself, and said he needed to speak with Terrance urgently. Terrance came on the line, and Joel explained his situation. Joel explained he didn't think it was a legal matter, but certainly a public relations one, and asked Terrance to connect him with the same PR firm that handled the three girls' case. Terrance said if it was not a legal issue yet, it could soon become one, and Joel should come in right away.\n\nJoel made an appointment for eleven. It was just Joel, Terrance, and Julie Harmon, Vice President of Devros and Taylor, the PR firm that handled the Mojo girls' case. They spent the first half hour going over the documentary from the night before, and Joel said in his own experience, the documentary accurately depicted his own abilities. They asked Joel if he was aware of other incidents similar to the Albuquerque situation, and Joel declined to answer. \n\n\"Joel,\" Terrance explained, \"Julie is a lawyer, and she's hired through me. Client-attorney privilege is in force in this meeting.\"\n\n\"That's not the problem,\" Joel explained. \"I cannot answer your question due to national security reasons.\"\n\nThey looked at Joel for a long time. \"Joel, are you cooperating with any federal law enforcement agencies or other branches of the US government?\" Terrance asked. \n\n\"If I answered that, I would be violating the law,\" Joel answered carefully. \n\n\"Hypothetically,\" Terrance chose his words carefully, \"if we were to take on this case, I don't know how we can help you. Without full disclosure of what you are involved in, we could unwittingly betray federal secrets. Hypothetically,\" Terrance said again.\n\n\"Hypothetically,\" Joel offered, \"what would you need in order to engage such a client?\"\n\n\"Hypothetically,\" Terrance continued, \"we would need to speak with the federal agency in question.\"\n\n\"Hypothetically, I am going to go now, and see what I can figure out,\" Joel smirked and stood up. \n\n\"Good luck, Joel,\" Terrance offered his hand. Joel shook both their hands and left. \n\nJoel went home. Bored and unsure what to do, he turned on the television. They were re-running the previous night's show of Insight, so Joel decided to watch. This was the first of three installments, and in this installment, they spent most of their time explaining how the 'charm' worked -- that's what they called his power. They even had demonstrations, very similar to the one Joel performed on Detective Halton in Albuquerque. \n\nIn this case, they invited three women, who consented to come on the show, and then Bill made women take their clothes off while they blurred out the naughty bits to satisfy the censors. Once the women realized what they had done, they were horrified and embarrassed, but they still allowed Insight to use the footage. They later interviewed the women, who claimed to have no recollection of being told to undress; only that they chose to do it, and it made sense to them at the time. The show ended at two o'clock. \n\nFor all his time he spent with Colonel Greene, Joel realized he had no way of reaching him. As if by magic, his chime sounded from the apartment building front door. He answered the hail, and it was a Lieutenant someone, Joel didn't catch his name, of the Air Force, and could he come up? Joel buzzed him in, and waited at his apartment door.\n\nAn Air Force lieutenant in service dress with the name tag HUTCHINS approached from the stairs -- he didn't bother with the elevator. He was in his late twenties with dark hair wearing glasses. He did not have a sidearm. \"Mr. Winkman, may I come in, please.\" \n\nInside, Lieutenant Hutchins explained Colonel Greene has been trying to reach Joel all day. Joel explained he turned his cell phone off -- there were too many reporters calling. Lieutenant Hutchins pulled out a cell phone from his pocket, pressed a speed dial button, and announced, \"Sir, Lieutenant Hutchins. I have Winkman in Boston.\" He waited while taking orders, and then said \"Yes Sir,\" and Hutchins passed the phone to Joel.\n\n\"Colonel,\" Joel said into the phone.\n\n\"Winkman, I need you in Quantico now.\"\n\n\"I can probably make it for tomorrow.\"\n\n\"No, Winkman, you go with Lieutenant Hutchins. He'll take you to Hanscom, and we'll put you on a military flight.\"\n\n\"As in that kind of now,\" Joel nodded. \"I assume I have my usual choices,\" Joel offered grumpily.\n\n\"I can have US Marshals there in ten minutes if you like,\" Colonel Greene offered without joking.\n\n\"I'll pack a bag,\" Joel sulked. \"We'll be on the move in fifteen minutes.\" The line went dead, so Joel handed the phone to Lieutenant Hutchins. \n\nAs it turns out, packing a bag wasn't much of a problem, because Joel had already completely packed, expecting to fly out with Jenny today. He opened a large suitcase, and pulled several things out to pack a smaller bag. \"I forgot to ask Colonel Greene how long I'd be there,\" Joel said to Lieutenant Hutchins\n\n\"No idea, Sir,\" Hutchins replied. \n\n\"Help yourself to some water or Coke in the fridge, if you want,\" Joel pointed. \n\n\"No thank you, Sir.\" \n\n\"A lieutenant is a bit of a high pay grade to send to collect someone, isn't it?\" Joel asked as he transferred clothing from the large suitcase to the smaller one.\n\n\"Not in this line of work, no Sir,\" he answered without seeming to take offense. ",
        "\"Are you with the OSI?\" Joel asked, not recognizing the insignias on his uniform.\n\n\"Yes, Sir. OSI detachment out of Hanscom Air Force Base.\"\n\n\"Do you know my involvement with the OSI?\" Joel asked, wondering who needs to know.\n\n\"No, Sir.\" \n\n\"Okay, Lieutenant, I'm just about done here.\" He went to the bathroom to pick up his toiletry bag. He did a final check through the suitcase. \n\n\"Will I be able to make cell calls from your vehicle?\"\n\n\"No sir,\" Hutchins informed him. \"Cellular systems are disabled.\"\n\n\"Okay, I need to make a call now, then.\" He called Sylvie, and said he was going out of town for a few days. No, a different out of town, he explained when she said she knew he was going to California. He would be out of touch, but let her know when he was back.\n\nBefore he left the apartment, Joel remembered his cell charger, and then he locked up and let Hutchins lead the way. \"Stairs are fine for me,\" he said as Hutchins went for the elevator. They took the stairs down, Joel carrying his suitcase. A black, nondescript sedan was waiting for them. The trunk popped open as they approached, and Joel put the suitcase in the back. Lieutenant Hutchins held the right rear passenger door open for Joel, and closed it, and then joined Joel on the left bench seat. \n\n\"The driver looked like a sergeant -- Joel wasn't sure from the back. He radioed he was RTB with package ETA 45. Joel assumed he was the package. He understood ETA, but didn't know what RTB meant.\n\nAn hour later, Joel and Lieutenant Hutchins boarded a C130 Hercules four engine turboprop military tactical transport aircraft. As soon as Joel and Lieutenant Hutchins were seated, the airmen closed the doors, and the aircraft taxied and lifted off from Hascom Air Force Base and winged northward. The seats were blue bench seats along the side of the fuselage with cargo rollers down the middle of the floor. Hutchins told Joel he got the nice aircraft -- most of the times Hutchins flew C130s with orange folding jump seats down the side with a nylon mesh for a seat back. There were four other uniformed servicemen onboard, plus the cockpit crew. Definitely no stewardesses on this flight, but there was a self-serve cooler with coke and stale pre-wrapped sandwiches, another upgrade for Joel's benefit. They touched down at Turner field in Quantico two hours later, just past seven o'clock. \n\nJoel and Lieutenant Hutchins were driven to the United States Air Force Office of Special Investigation headquarters, where they checked in. Joel had to surrender his cell phone, which was still turned off. He also surrendered his suitcase at the front desk. Lieutenant Hutchins led Joel up a flight of stairs, down a long hallway. They turned left at the end, and the short connecting hallway terminated at a set of double doors. Lieutenant Hutchins picked up a phone on the wall next to the doors, and announced himself. The door opened, and major opened the door. His name tag was THOMASSON. Lieutenant Hutchins saluted him, and the major saluted back. The major ushered Joel in. \"You're not joining us?\" Joel asked Lieutenant Hutchins.\n\n\"No Sir,\" Lieutenant Hutchins replied flatly. \"I don't have clearance for that room.\"\n\n\"Lieutenant Hutchins, I know you were just doing your job, but you did it professionally and with respect. Thank you,\" Joel shook his hand, making sure the major heard every word. \n\n\"Thank you Sir,\" and Hutchins looked at the major and saluted. \n\n\"This way, please Sir,\" Major Thomasson gestured, closing the door behind them. Joel figured everyone in the military called civilians 'Sir', and he shouldn't let it go to his head.   Major Thomasson led Joel to what looked like an empty news production room, full of large flat panel TV screens and control boards. \"Please wait here,\" Major Thomasson asked, and he exited through a distant door, leaving Joel alone in the control room. Two minutes later Colonel Greene and Major Thomasson returned through the same door. \n\n\"Mister Winkman thanks for coming on such short notice,\" Colonel Greene extended his hand, and Joel shook it. \"This is Major Thomasson, who've you've met,\" he gestured. \"We have three or more people joining us in a moment.\" Colonel Greene turned to Major Thomasson. \"Are we all teed up?\"\n\n\"Yes, Sir,\" Major Thomasson nodded. \n\n\"Joel, as you know, in the Albuquerque orgy, the women reported four video recorders in that room. We found them,\" Colonel Greene pointed at the screens in the control room. \"We wanted you to watch them with us. Only you can provide a perspective from the puppet master's view.\"\n\nJust then the far door opened, and three majors and a captain entered. One of the majors was a woman. The majors each took a seat at the back of the control room, and the captain sat in a chair at the control console. \"Have you watched these tapes before?\" Joel asked.\n\n\"No,\" Colonel Greene said. \"I wanted all of us to get the same first look together.\"\n\n\"Sir,\" Joel said to Colonel Greene, \"may I speak with you privately?\"\n\nColonel Greene gesturing to the door Joel came in from, \"let's step out here.\"\n\nWhen the door was closed, Joel said, \"as you know, I don't know what is on those tapes, but you and I both have a pretty good guess. It's not the sexual activity that worries me -- it is the debasement of humanity that will come through on these tapes. Colonel, that is what PTSD is made of. And not just for the woman in the room viewing it. You need to instruct that any of these people can leave the room at any time, and under no circumstances will that reflect on their performance evaluation.\"\n\n\"I'm glad you're here, Joel,\" Colonel Greene nodded. \"Anything else?\"\n\n\"Brace yourself,\" Joel warned. \"Blood and guts battle won't prepare you for what you are about to see.\"\n\nColonel Greene opened the door, and re-entered the room with Joel and closed the door behind them. \"Lady and gentlemen, on our civilian advisor's advice, and in addition to the briefing you have already received, I am giving you all a direct order. If you feel uncomfortable to the point where you cannot watch this video, you are ordered to leave the room. This applies to both male and female viewers. I guarantee you will not be reprimanded or considered anything less than a complete professional for leaving the room. I also order that, if one of you leaves the room, another goes with that person, and stays with them. If we need to, we will pause and resume later. Mr. Winkman tells us to brace ourselves -- that blood and guts battle experience will not prepare us for what we are about to witness. Does anyone have any questions?\" No one spoke. \"Okay, so let's get going.\" \n\nThe captain at the controls explained, \"We haven't previewed the tapes, but I ran just the beginning of each tape, and I synchronized the time codes, so we can watch all four tapes at the same time, all of them will be in sync. So the audio you hear is the collective audio of all four tapes.\" He looked at Colonel Greene. \"Ready when you are, Sir.\"\n\n\"Any last words, Mr. Winkman?\"\n\n\"The four screens might be too intense and information overload. We may want to pause it from time to time.\"\n\n\"My finger is on the button,\" the captain assured them. Colonel Greene nodded to the captain.\n\nFour of the six large screens flashed to life, and the four images showed different angles of the dining room with the large round ring table. The women were already seated with their legs wide open, and the men on either side of them were in various stages of eating and pawing at the women. \"Captain, pause it there,\" Colonel called out, and the four screens froze. \"Mr. Winkman, brief us on what has happened up to now.\"\n\n\"Some things have already happened before the cameras started rolling,\" Joel explained to the group. \"There are twelve men and twelve women. The women attended what they thought was a fundraising dinner with no suspicion of its real purpose. We know from the interviews with the women they are seated male, female, as you can see, and the man who brought the woman to the dinner sits across from her -- on the far side of the table. So each woman is surrounded by strangers.\"\n\n\"You can see in the video already,\" Joel went on, \"the women's legs are wide open. The configuration of the table lets men look up the skirts and dresses of women on the far side. The women have been commanded to leave their legs wide open -- they are not capable of closing them. They have also been commanded to keep their hands above the table surface, so they cannot defend themselves from any ... ah, incursion below their waist.\" Joel was wondering if that was the right word. \"They have also been commanded to let any man do anything he wants to them.\"\n\nJoel stopped for a second, and spoke to everyone in the room. \"Hands up if you saw the Insight interview last night?\" They all put their hands up. \"Okay, it's real. I saw the same interview. Everything 'Jim' said was accurate, and you'll see that reflected in the tapes here.\"\n\n\"Captain, roll forward please,\" Joel said, and then quickly said \"I'm sorry Colonel, I didn't mean to overstep your authority\" Joel remembered Colonel Greene ordered the pause of the tape, and it was presumptuous of Joel to think he could order its resumption. \n\n\"You take over from here,\" Colonel Greene nodded. Joel nodded to the captain, and the four screens resumed action. \"If you look carefully at the women's eyes,\" Joel said, \"you can see that they are in fact aware of what is going on. They are not in a mindless trance. It's more like their body is being controlled, but their awareness and consciousness are still fully functioning.\" \n\nFour screens were generally panning across the room. Nothing of special interest was happening, except men were groping women everywhere, and women were not doing anything to prevent it. Now a man picked up a steak knife, and lowered it toward a woman's crotch. The woman major watching sucked in a harsh breath and covered her mouth, but then breathed out a sigh of relief when she realized his intent was to cut off her panties, and not mutilate her. Soon most of the women's underpants were cut off, and one camera sequentially zoomed in on each girl's freshly naked pussy while the other three documented the men's fondling and grabbing, and now probing women's body parts with their fingers. \n\nServing staff were wandering around the table, serving wine and water, and they were constantly being grabbed and groped as they did. \"It is almost certain the staff were also under control,\" Joel commentated as he watched it for the first time. Another female staff was at the side of the room carving beef off a roast, and serving it onto plates ferried back and forth by the other staff. \n\nThey could hear the dinner conversation. \"What do you think about that one's cunt,\" one man pointed across the table?\n\n\"What, the blonde?\"\n\n\"No, the one beside her, with the lips hanging out.\"\n\n\"She must be quite a flap in the breeze,\" the laughed. \"Shove her ass out the car window and listen to the flapping,\" he laughed again. \n\nThe right screen showed a man saying \"hey sweetheart, don't forget your vegetables,\" and he positioned a carrot between her legs and shoved it up her pussy. \"There, now you can see better,\" he laughed at his own stupid joke. \n\nMen everywhere were fingering women, or putting their hands down women's tops while talking about other women's body parts. It went on this way for nearly thirty minutes, until the staff cleared the plates. Men continued pawing and fingering women beside them while they waited for the next course. When the serving staff returned, they were all topless, and were serving dessert, but only to the men. The men took an instant liking to the new serving fashion, and they started groping the topless servers. Twice the desserts fell to the floor, and the servers simply returned with new plates. \n\nA voice appears off camera, and the cameras do not turn toward it. Presumably the camera operators have been told not to capture the man behind the voice on video. \"All women, stand up, take off your tops. If you are wearing a dress, take it off. If you are wearing a bra, take it off. You will take everything off above you belly button, and sit down completely topless. When you sit down, open your legs as wide as you can, and keep your hands to your sides, and stay that way. You will let any man do anything he wants to you. You will not speak unless spoken to by a man.\"\n\nIn addition to the dessert plates, the servers left large bowls of whipping cream around the round table, and men started smearing whipping cream all over women's bodies and licking it off. One man slathered whipping cream all over the girl's tits beside him, and then smacked her tits hard with his hand, splashing whipping cream all over the place. Other girls had whipping cream shoved up their pussies, or smeared over their faces. \n\nAfter dessert, the topless serving staff took five minutes to clear the round ring table while men groped and pawed at them. Then they all crawled under the table, and grouped inside the ring table. One by one, the off-camera voice ordered them to hop up on the table and parade around the ring while men bid on her. In their excitement, men were grabbing and pinching their neighboring girls. \"Faith can be yours all night,\" the off camera voice promised. \"She will do everything, and when I say everything, gentlemen, I really mean it. Who wants to start the bidding at two thousand dollars?\" \n\nSix girls were auctioned off: Faith, Nina, Maddison, Kennedy, Haley, and Cameron. Joel had never met these girls -- they were not included in the girls he interviewed in Albuquerque. Each auctioned off girl was then commanded to obey their master until noon the next day. Each girl was taken back to the table while the men waited for the next activity to begin. Girls were paired off against guys who pulled their names out of a box, and commanded to obey them until a bell rang. \n\nThe cameras roamed the room now, and serious action began. One camera held an overview of the room. Most girls were lying on the table in various positions. Two cameras followed specific girls, and one camera roamed. One camera followed Faith, the first auctioned off girl. She was lying on her back across the round ring table, her head hung over the outside edge, her butt was above the inside edge of the table. Her new owner commanded her to open her mouth, and he shoved his cock in deep. She pulled away, and he ordered her to stay still with her mouth open, and not fight him. \n\nFaith did as she was told, and her owner started fucking her open mouth, increasingly holding his cock tight against the back of her throat for longer and longer periods. Each time he did, she couldn't breathe, and she sucked in louder and louder breaths in between deep thrusts. Faith started crying, but he ignored her, and finally he pressed his cock deep in and held it there. The camera zoomed in on her face -- her eyes were wild with panic. After a minute her face turned pale as her lips were starting to go blue. The veins on her forehead began protruding, and her eyes began to flutter, but his cock still stayed deep in her throat, and she did nothing to stop him. After two full minutes of his cock deep in her mouth, her eyes closed and her arms fell limp to her side. She had passed out. \n\nThe owner of the unconscious Faith pulled his cock out of her slack mouth, allowing her to finally breathe again. He crawled over the table, stood on the other side, lifted her floppy legs up, and started fucking her lifeless body. Within a minute she regained consciousness while he continued fucking her. She started resisting, trying to get up, and he pressed his hand into her chest, forcing her back down while he continued fucking her. \"Stay there and don't move\", he said, and she lay flat, letting him fuck her. \"Keep your hands at your side,\" he ordered her. \n\n\"Is she under control or just exhausted at this point?\" one of the majors from the back of the control room asked. \n\n\"I don't know,\" Joel answered. \"I suspect we'll find out.\" He continued fucking her harder and harder, holding her legs up upright into his chest as he pounded her pussy. The camera was on the outside of the table, and he was standing on the inside of the table. The camera focused on his face, and his impending eruption became obvious. The camera zoomed out, and all at once be bellowed out a loud growl and thrust his whole body forward, leading with his hips, and he let go of her legs. His savage thrust forward flung her body clear off the table and she plunged headfirst onto the floor. With her arms still at her side, Faith was unable to protect herself against the fall, and her neck bent completely sideways on impact with the hardwood floor.\n\nThe woman major stood up and left the room. In one fluid motion, Colonel Greene snapped his fingers and pointed his index finger at the major who was sitting beside her, and without a word, he followed her out the room to offer support.\n\n\"Let's pause, Captain,\" Joel said, \"and blank the screens.\"\n\n\"I think this is a good time as any for a break,\" Colonel Greene offered. Everyone left except Joel and Colonel Greene. \"I want these people to be angry. I want them to know how sick some of these people can be, and what a threat they pose to our security.\"\n\n\"I'd say it's working,\" Joel nodded with his own stomach feeling slightly queasy. \"I need a bathroom break myself.\" Colonel Greene escorted him through the far door, where everyone else retreated, and led him to the bathroom, where one other major was finishing up at the urinal.\n\n\"Sir, we have this guy in custody?\" he asked Colonel Greene, washing and drying his hands. \n\n\"Thanks to Mr. Winkman, here, we do,\" Colonel Greene said.\n\n\"Thank you, Sir,\" the major said directly to Joel, and extended his hand.\n\n\"Please call me Joel,\" he shook the major's hand.\n\n\"Steve,\" he answered. \n\nJoel and Colonel Greene used the urinals as Steve left. \n\n\"Joel,\" Colonel Greene said, as he started washing his hands, \"we see three possibilities. One, your flight was a one-of-a-kind -- a fluke, never to be repeated. Two, we are going to have some more, and we need to deal with it. Or three ...\"\n\n\"It's the beginning of an invasion,\" Joel said. \n\n\"Something like that,\" Colonel Greene said. \n\n\"Of course, if everyone is affected, then it's not a problem, since catnap men can't control catnap women.\"\n\n\"Even if that's true,\" Colonel Greene ventured, \"it's going to be a bloody transition.\" He paused. \"Joel, we want you to come on our team. We need your insight. You would be the only civilian member.\"\n\n\"Until a uniformed person becomes a puppet master, then I'm out to pasture,\" Joel pointed out.\n\n\"I think we can arrange a more graceful transition than that.\"\n\n\"You still haven't come through with your end of the promise -- the impossible,\" Joel complained.\n\n\"Have faith, Joel,\" Colonel Greene promised, and then winced, remembering Faith was the name of one of the auctioned girls in the video. Joel didn't seem to notice. \"It's coming. The impossible doesn't happen overnight.\"\n\n\"And if I join your team, do I have to relocate here?\" Joel was thinking about Jenny. \"I mean what's the point of accomplishing the impossible ...\" \n\n\"First, we're not sure how to bring you in. We haven't decided if we want you to continue with your investment business as a cover, or pull you all the way inside.\"\n\n\"I think the investment business is bust after the Insight documentary,\" Joel speculated. \"I might be toxic to the business community. You couldn't reach me because I turned my cell phone off after too many calls from reporters. They swamped my office, too.\"\n\n\"That media coverage can cut both ways,\" Colonel Greene nodded. \"But to answer your question, I don't see why you have to permanently station here. But you have to be prepared to spend a lot of time here, there, and everywhere.\" Joel thought of Green Eggs and Ham.",
        "\"What if the next one is in Europe, or Africa?\" Joel asked. \n\n\"We've thought about that. Our first priority is protecting American interests. We will assist others if that's what's needed to protect ourselves.\"\n\n\"And what would my role be?\"\n\n\"Just what you're doing now. You will be the man on the inside -- the man who understands what's going on.\"\n\n\"You don't want to use my powers in the field?\" Joel asked.\n\n\"Are you offering?\" Colonel Greene asked.\n\n\"Under the right circumstances,\" Joel shrugged.\n\n\"Yeah,\" Greene shook his head, \"we're stuck on that one. The risks are too big with the Government behind that kind of action on US soil. Maybe in foreign theaters.\" Greene dried his hands. \"Anyway, we're getting ahead of ourselves. Let's solve your impossible problem first, then we'll talk.\"\n\n\"And you'll take over my surveillance team,\" Joel assumed. \n\n\"Not for now. We need to talk about that, but not here.\" Joel figured he was in one of the most secure establishments there was. If not here, then where?\n\nWhen they returned to the control room, everyone was waiting. \n\n\"Everyone good to continue?\" Colonel Greene asked without singling out the woman major. \n\nThey started up the four synchronized videos again. Joel pointed out another screen. \"This is Jessica Morgan,\" he announced, recognizing her from her picture. \"She is the one who was killed.\" They watched her fellate the tall large man, and then bend over the table, and yell when he started fucking her. \n\n\"Can you pause please,\" the woman major asked. The captain looked at Joel, and he nodded. \"I just have a question. I have noticed several women, including this one, in discomfort or pain during sex. Do you know why?\"\n\n\"The power makes women compliant, but not amorous,\" Joel explained. \"If anything, they are frightened and nervous. Their natural lubricants are not working at this point. Couple that with the roughness of their ... ah partners, for lack of a better word ...\"\n\n\"Okay, I get it,\" she nodded. \n\nJoel nodded to the captain, and he continued. After the overweight man fucked Jessica, her owner ordered her to masturbate on the table, and one of the cameras documented the entire episode. When she finished after ten minutes, Joel said, \"Pause.\" The captain paused the video playback. \n\nHe looked at all four screens. \"Does anyone know what happened to Jessica's partner -- the tall fat guy? Where is he?\" \n\n\"I haven't seen him for a while,\" Major Steven said. \n\n\"I think he made her masturbate and left,\" the woman major said. \n\n\"Look at her,\" Joel said. \"Watch her face. I think that's what went wrong.\"\n\n\"Explain,\" Colonel Greene said.\n\n\"She was ordered to obey her partner, but her partner left. So who is she obeying?\" Joel looked at blank faces in the control room. \"She is like a cruise missile,\" he used an analogy he thought they would understand, \"that, after launch, lost all targeting and navigation logic.\"\n\n\"She's a floater?\" the woman major asked.\n\n\"I think so, and no one picked up on it.\" He nodded at the captain, and play resumed. Most of the men had finished with their girls, but one was still fucking a girl. \"That's Ryan Bradley,\" he pointed at the man standing on the inside of the table, fucking a girl. \"He brought Jessica to the dinner party, and he is dead too.\"\n\n\"Look at her eyes,\" the woman major called out. \"Look how focused she is. She's locked on to him. I think this cruise missile found a new target.\"\n\nThe bell rang. \"No!\" they all yelled in the control room, as the close-up of Jessica panned away from her. \"Right screen!\" someone called out. It was a wide shot of the whole room, but you could just see Jessica. Ryan was gone. Jessica had her back to the table. Then Ryan stood up on the outer edge of the table. Just as he reached full height, Jessica spun around. She was holding a knife, and the long blade disappeared into his gut. \n\n\"Pause,\" Joel barked out. \"Back up ten seconds. Can we blow up that right screen?\" He zoomed in one area of the right screen where Jessica was standing, and then restarted from ten seconds earlier, but all the other screens were still normal. \"There!\" Joel pointed. \n\n\"The knife went right through him!\" Major Steve called out as the tip of the knife appeared momentarily in his back. Ryan staggered backward, hitting the table, and she stabbed him again, and again, and a further time, before someone off camera yelled \"STOP!\". A different camera panned toward the voice, and there plain as day was William Fieldman. \"That, ladies and gentlemen, is William Fieldman, known in last night's episode of Insight as 'Jim'.\" There was a general cheer as they now had solid evidence William Fieldman was behind this. \n\n\"Slit your own throat hard!\" Fieldman called out, and a close-up went to Jessica on another screen. The terror in her eyes was unmistakable -- she knew what she was doing when she drew the knife hard across her neck with both hands, and cut it deep into her flesh. \"Oh Jesus Christ!\" Major Steve cried out as the blood spurted clear across the room, and Jessica collapsed forward onto Ryan, and they both toppled into a heap on the floor.\n\nTwo video screens went dark while the other two followed the floor as the cameramen scurried out of the room. Then all screens went dark. Joel checked the clock. It was nearly midnight. \n\n\"Okay, guys,\" Colonel Greene said to the group. \"Now we know what we're up against. If these guys can do this, they can bring down a 747. They can crash a train, sink a ship. And they can do it all by charming someone else to do the dirty work.\"\n\nColonel Green paused, and then continued. \"We are going to need every advantage we can identify, locate, and neutralize this enemy. And make no mistake. We are fighting an enemy of the United States of America, as decreed by your Commander in Chief.\" Greene waited for that to sink in.\" \n\n\"Go home to your families and to those people that are precious to you, and know in your heart why you are here. Law enforcement cannot touch these guys. At least, not until they make laws to deal with this kind of domestic combatant. We, ladies and gentlemen, are what stands between that,\" he pointed at the blank screens, \"and the American people. Take the weekend. Be with your loved ones. Then come in on Monday morning, and then be prepared to work your God damned asses off for the next year.\"\n\n\"Sir, is he going to help us?\" Major Steve asked, pointing at Joel.\n\n\"We certainly hope so,\" Colonel Green nodded.\n\n\"Honestly, Sir, I don't see how we do this without him.\"\n\n\"I'm putting the thumb screws to him next,\" Colonel Greene smiled. Joel suddenly became certain Colonel Greene would, in fact, accomplish the impossible -- and at a steep price. \n\n- - -\n\nJenny was into her second week at Google. Already she was weighing into HR issues while drinking from the fire hose of knowledge. She knew coming up to speed in a new position would take a lot of work, so Jenny poured herself into her new job. Jenny preferred exhaustion to the pain and humiliation that came from spare moments when she thought of Joel. \n\nJenny always knew there was something wrong with that first night -- the night she brought him home and had sex with him on a first date. She had only slept with two other men, and never on a first date -- hell, not until a tenth date -- and with Joel, it wasn't even a proper date.\n\nAnd those pictures she asked him to take of her, and then she even emailed one to him. Jenny never did things like that -- never. She knew better. Jenny chalked it up the beer, but in her heart she knew that wasn't it. Jenny had been more inebriated than that before, and hadn't lost that kind of control. \n\nSomething was wrong with that night, and Jenny could never put her finger on it until the moment she saw that horrid Sally Jamison story on Insight. And then she knew. She just knew what had happened that night. \n\nJoel raped her. There was no other way to say it. Worse, he made her think it was her idea. Everything in their relationship after that was a lie. \n\nIt made Jenny feel sick to her stomach to think she was considering a long term relationship with the man who raped her and tricked her into loving him. So Jenny immersed herself in work, day and night. \n\nOn Tuesday September 15, Jenny was celebrating her first week's anniversary at Google. She stayed late as usual. Don was leaving the office, and he poked his head in her door. \"Jenny,\" he offered, \"we know you don't know everything on day one. You can take some time to come up to speed.\"\n\n\"I know,\" she sighed. \"I just want to get this transition document done, then I'll go home.\"\n\n\"Ellie would like to have you over for supper on Thursday night, after work. I have always found it best to agree with Ellie in these matters,\" Don mused. It had already come up in casual conversation that Joel did not come out with Jenny, and Jenny offered no further details. Don avoided any embarrassment by not mentioning him. \n\nJen looked up. She knew there was more to it than that. Don was concerned Jenny was going to burn out on start-up. She let out a deep sigh. \"Tell Ellie I would love to come over. I don't have the cool sports rental car for the boys, though,\" she smiled. \"What can I bring?\"\n\n\"Ellie mentioned a salad,\" Don guessed. \n\n\"Thursday, right? I'd love to,\" Jen smiled. \"I'll see you tomorrow morning.\"\n\nOn Wednesday night, Jen bought fixings for a salad on the way home from work. The temporary house Google found was fine, but it lacked many amenities, like a proper salad bowl, so she bought an olive wood salad bowl and serving forks for two hundred dollars. \n\nThe corgis barked and spun around as Jen carefully opened the door. This house did not have a vestibule like her Boston home, so she had bought a child gate to put across the hallway, but twice already the industrious pooches had defeated it. This time they were still behind the gate.\n\nLate on Wednesday night she made the salad and dressing, and tossed it into the new bowl while the dogs played in the back hard. She covered the salad bowl with plastic wrap, put the salad in the fridge, brought the dogs in, and then Jenny collapsed into bed. She set the alarm early enough to take the dogs for a run. \n\nShe nearly forgot the salad in the morning, so Jenny ran back into the house and when she did, Connie the corgi escaped out the front door. She whizzed across the street without looking. Jenny tore after her, but it took twenty minutes before she finally recovered the dog. Jenny put the corgi back in the house, and thanked her lucky stars Connie wasn't killed. She arrived at work late, but remembered to put the salad bowl in a fridge, and powered her way through the day. By four in the afternoon, Jenny realized she had forgotten lunch. She grabbed a quick snack. She was supposed to go home at noon to let the dogs out. She decided to work another hour, then go home. Time flew by, and Don darkened her door at six thirty, asking if she was ready to go. \n\nShe decided the dogs can go another few hours, so she grabbed her salad in its new bowl from the employee fridge, and followed Don to his house in her rented car. Carl and Steven were in the front yard playing basketball again. They dropped the ball to greet their father. He introduced Jenny to them, and they were bitterly disappointed she didn't have her sports car this time. \n\nThey ate around seven thirty, and the boys abandoned the table and ran upstairs an hour later. Ellie went up to check on them, and then came down. \"Jenny, we're going to watch this incredible Insight story -- it's the third one of the series. Have you been following it?\"\n\nAlthough she missed most of the first interview, she caught up during one of the reruns they aired all week. Jen watched the second installment last week in her temporary California home. All the time she was thinking about Joel. She had a loathing fascination for it. Jenny said sure, she'd stay and watch it with them. \n\nThey were sitting in the TV room off the living room in some other wing of the house, watching the show, when Steven came in, saying he couldn't find his toothbrush.\n\n\"Donald!\" Ellie called over, and Don quickly paused the live show on his PVR. The show was completely unsuitable for children, and Don instantly understood Ellie's meaning when she barked his name. Jenny had never heard Ellie call him 'Donald' before, only Don. Clearly it was a code married couples learned. A hidden, non-negotiable meaning in a simple name. Jenny liked that.\n\nEllie went upstairs and helped Steven find his toothbrush, and came back down. Don pressed play on the remote, and resumed the live show.\n\nAbout half way through the interview, Sally Jamison was asking 'Jim' if all catnap men were endowed with this 'charm'. Jim used the term charm to depict commanding a girl to do what he wanted. \n\nJim replied. \n\nWell, I don't know. I'm guessing some don't, because I was in Boston once. In this little shit hole of a bar, called Moody Monday, Terrible Tuesday, Wacky Wednesday, or some stupid name like that. I recognized this catnap guy -- he didn't see me. Anyway, he's talking to this girl who's out of his league, you know what I mean? And I realize, he's just talking to her -- he's not charming her or anything. So I'm thinking, if this guy had the charm, he'd definitely use it on a fox like that. I mean, how else is a guy like him going to score on a girl like that, right? So I watch him, and he gets up and goes to the bathroom. And while he's gone, I figure I'll just help him out a little. So I go up behind the girl -- she never sees me. And I charm her to take him home and <beep> this guy's brains out -- you know, I charm her to do whatever he wants. And then I charm her to take a picture of herself naked, and send it to him. I figured he needed her picture to prove to his friends he could score on a fine girl like that. You know what I mean.  \"Oh sweet Jesus!\" cried Jenny. Don and Ellie both looked at her stricken face, and instantly knew something was horribly wrong. \n\n\"Jenny, are you okay?\" Don asked, pausing the show.\n\n\"Can you play that back again -- what that guy said -- about being the bar?\"\n\nEllie didn't need further understanding. She stood up, walked over to Jenny, and sat beside her on the sofa, and put her arm around Jenny. Don rewound the show to the beginning of that segment of the interview, and played the whole thing back. Tears streamed down Jenny's face and her chin trembled as she watched the interview a second time. At the end, she buried her face in her hands and cried. \n\n\"Jenny,\" Ellie asked very softly, \"he's talking about you, isn't he?\" Jenny nodded but couldn't speak. \"You broke up with Joel because you thought he did that.\" Jenny nodded again. \"But now you know Joel didn't do it.\" She shook her head.\n\nThey sat in silence except for Jenny's sniffling of tears. \"I need to go,\" Jenny finally said after several minutes. She wiped the tears off her face.\n\n\"Yes, you do,\" Ellie said, \"and I'm going with you.\"\n\n\"No,\" Jenny shook her head, wiping off new tears, \"you don't understand. I need to go to Boston.\"\n\n\"I do understand Jenny,\" Ellie replied softly,\" and I'm going with you. You are in no shape to fly across the country alone.\" Jenny put her arms around Ellie and sobbed out loud for a long time. \n\nEllie looked across the room to her husband. \"Donald,\" she said one word, and Jenny recognized that same tone. Ellie wasn't asking. She was going to Boston, and Don was damned well helping her. \n\nEllie insisted Jenny was in no shape to drive. She asked Don to drive Jenny to her house. Jenny would pack what she needed, and bring her suitcase and the dogs back to the McLean house, and Don and the boys would look after the corgis while Jenny and Ellie flew to Boston. With the dogs safely ensconced in the McLean mansion, Ellie drove Jenny to the San Francisco airport, leaving Jenny's car in the McLean driveway. Ellie parked her car in the long term parking lot, and they checked in together to a seven o'clock morning flight. \n\nThey arrived at three thirty in the afternoon local time. Thankfully, Ellie only flew business class, and they both managed some sleep on the plane. Ellie rented a car out of Logan airport. Jenny knew Joel's address by heart, and Ellie programmed it into the GPS.\n\nWhen they arrived at Joel's low-rise apartment building, Ellie said she would wait in the car while Jenny went upstairs. Jenny stepped out of the car and pulled out her cell phone. She called Joel from the sidewalk. \n\nJoel saw the incoming call from Jenny. He had watched the last night's Insight as well, and was not surprised to see her call.\n\n\"Hi,\" Joel answered evenly.\n\n\"Hi Joel, it's Jenny,\" she started. \"I know I have no right, and you have every reason to say no, but could I come up and talk, please? I'm downstairs.\"\n\n\"Sure,\" Joel said, \"I'll buzz you up,\" and he hung up. Jenny heard the buzzer at the door, and she took the elevator to the fourth floor. To her surprise, Joel wasn't waiting at the door like he did in past times when she stepped out of the elevator. She knocked at the door, and Joel opened it.\n\nJenny had her whole spiel rehearsed. When she heard Joel at the door, Jenny sucked in a big breath. As soon as Joel opened the door, Jen stepped inside. \"Joel, I just wanted to ... who's that?\" she asked, looking over Joel's shoulder. A familiar looking black man was in a service military uniform. \"I know who you are,\" Jenny now realized. \"You're that Air Force guy from that interview on Insight.\"\n\n\"Colonel Brian Greene,\" he held his service cap his left hand and extended his right hand to Jenny. \n\nJenny stepped back without shaking his hand. \"Are you here to arrest Joel?\" she asked Colonel Greene warily.\n\n\"No, ma'am\" Colonel Greene answered in his official tone. \"I am here to thank him.\" Joel ushered Jenny all the way in and closed the door. \n\n\"Thank him ... what for?\"\n\n\"Well, ma'am, if you promise, and I mean under penalty of imprisonment, if you promise to never, not ever tell anyone, I can show you.\"\n\nJenny gulped. \"I promise,\" she croaked, and then cleared her throat. \n\n\"Ma'am, there's something about Mr. Winkman you don't know.\" Jenny said nothing. At this point, she wasn't willing to venture anything about Joel after her last colossal misreading. \"What do you know about his new business?\"\n\n\"He does investing in companies,\" she said flatly.\n\n\"Has he ever told you about any companies he invested in?\"\n\n\"Well, no,\" she said, \"but he wanted to establish a portfolio first.\"\n\n\"And have you ever heard of any investors yet?\"\n\n\"No, but ... Joel what's going on?\" she turned to Joel. Joel wished he knew, because he didn't like Colonel Greene's line of questioning.\n\n\"Ms. Riverton,\" Colonel Greene pressed on, \"don't you find it strange Joel has been travelling all across the country all the time, and he has no companies to invest in and no investors?\"\n\nNow Jenny was frightened. \"Joel, what the fuck is going on!?\"\n\n\"Perhaps you heard recently about people with certain powers,\" Colonel Greene continued without letting Joel answer. Jenny nodded, trying not to cry. \"Some people use their powers for good deeds, some use them for bad things, and then there's Joel, here,\" he said, pointing his cap toward Joel. \"Joel uses his powers for something else.\" Colonel Greene waited. \n\n\"For what?\" she shrugged her shoulders with open palms with annoyed impatience.\n\n\"He hunts down the bad ones, and helps the women who were affected.\"\n\n\"He hunts ... Joel what is he talking about?\" \n\n\"Ms. Riverton, your friend here is a hunter. And a good one too. Did you see those Insight interviews?\" Jenny nodded. \"Jim's real name is William Fieldman. While Joel told you he was in Pheonix, he was actually in Albuquerque hunting Fieldman down, and when Joel found him, he turned Fieldman over to us.\" ",
        "\"Oh my God Joel, you were in Albuquerque?\" she asked him with disbelief? Joel nodded. \"You were never in Phoenix?\"\n\n\"I couldn't tell you,\" Joel shrugged. \"It was classified.\"\n\n\"Perhaps you heard about a murder suicide at a dinner party in Dallas, Texas,\" Colonel Greene added. \"Two women were involved.\" Jenny nodded. \n\n\"Joel hunted down the man responsible for that, and now he is in our custody.\"\n\n\"Jesus Joel! We talked about that. Who the fuck are you!?\" She snapped at him with mixed fear and awe.\n\n\"He's also a healer. He helps the women who have been affected, and that's why I'm here.\" Colonel Greene pulled an electronic tablet out of his satchel. \"Joel, Ms. Riverton, please take a seat,\" he gestured to the sofa. They sat down beside each other. \"Ma'am, Joel has never seen this. Now, I remind you, you may never talk about this to anyone, ever,\" Colonel Green said. He set up the tablet on a stand that held it at an incline as he started up a video. \n\n\"Hi Joel,\" came up an image of Melissa Ferry. \"I just wanted to thank you one more time for saving my life. I'll always love you for that, Joel.\"\n\n\"Hi Joel,\" a new face appeared. \n\n\"Christina,\" Joel said before she said another word. Christina, Kelsey, and Mary were the three girls who danced naked on the Mojo bar. \n\n\"It's Christina Carroll. I just wanted to say thank you. I can breathe again because of you, Joel. You saved my life, Joel. You're the best.\"\n\n\"Hi Joel.\" It was Kelsey Danton. \"Kelsey here. I don't know how to say it, but thanks. It's a tiny word next to the huge thing you did. Thank you Joel. I live again because of you.\"\n\n\"Hi Joel.\" It was Mary Wilson. \"I've never told anyone else this before, but after I was attacked, I just wanted to kill myself. Now I'm taking a vacation in Europe. I'm alive because of you, Joel.\"\n\n\"Joel,\" Gail Carroll's face appeared, Christina's mother. She spoke in her usual severe tone. \"You might think of me as a snooty bitch.\" Joel nodded in agreement to the screen, and Jenny snorted a chuckle at Joel's reaction. \"Joel, our children were lost forever. We had lost all hope. Then you came into our home, and you returned our children to us. Joel, a parent can never repay that debt. I mean this most sincerely, whatever you need, you make me your first call.\"\n\nJenny looked at Joel's face. Joel's hand was over his mouth. He was trying not to cry. Jenny felt her own tears slip down her face. \n\n\"Hello Joel,\" Mary-Jane Parsons face appeared. Joel recognized her as the flight attendant who declared herself a bitch. \"We have never met, but I learned how you hunted down the fucker who did that to me. Thank you Joel. God bless you.\"\n\n\"Hi Joel,\" a new face appeared. \"It's Shelby.\" She was one of the Albuquerque survivors whom he later hypnotized. \"Joel, I don't know how to thank you. I use my crystal ball every day now. Thanks to you, I can go out. I can talk to people. I can live again. I love you Joel.\"\n\nEach of the next ten surviving Albuquerque women appeared in person, and each offered their personal thanks. Samantha, Lauren, Alexis, Katherine, Maria, Jordan, Paige, Gabby, Jamie, and Sabrina each took a turn to thank Joel and tell him how their life has changed because of him. \n\nThe video ended. Joel looked at Colonel Greene with red eyes. \"Colonel Greene, I think you've done the impossible,\" Joel said, his coded message way of saying thank you.\n\n\"First of all, that's Brian to you,\" the colonel smiled. \"And second, no, Joel, you did the impossible.\" \n\n\"I don't suppose I can take a copy,\" Joel said.\n\n\"No, but I can let you watch it one more time.\" He restarted the video. Jenny rested her head on Joel's shoulder and watched with him. When it was finished, Brian picked up the tablet, turned it off, and returned it to his satchel. \"I'll leave you two, now.\" He walked toward the door to let himself out. When Brian reached the door, he looked back. \"Joel, I'll be in touch. It was a delight to meet you, Miss Riverton.\" He closed the door behind him.\n\nJoel knew he owed Colonel Brian Greene a colossal debt, and unlike Gail Carroll, Joel's debt was to be repaid. Greene manufactured an alibi for Joel at the Manic Monday bar so Jenny would think it was Fieldman, not Joel, who forced her to have sex with him on that first night. And this little video presentation with Jenny sitting at Joel's side was not a touchy feely moment for Joel. It was carefully scripted and played out for Jenny's benefit. \n\nColonel Greene knew the truth about Joel on that night at Manic Mondays, and he could crash Joel's new world order down at any time. I'll be in touch was not a pleasant good bye. The impossible didn't come for free. Joel was going to work for the OSI.\n\n\"Joel, I'm so sorry,\" Jenny said after Colonel Greene was gone.\n\n\"Don't be,\" Joel offered. \"You interpreted the evidence exactly the way I would have.\" He paused. \"I would have preferred you at least let me tell you my side of the story, but I understand why you were so upset.\"\n\n\"You're so right, Joel,\" Jenny nodded. \"I'm really sorry I went off at you like that without even giving you a chance to explain.\" She thought for a while. \"Did you even know he was in the bar that night?\" Jen asked.\n\n\"I never saw him there,\" Joel answered truthfully. \"I didn't even know about this little prank of his until I saw it on TV yesterday.\"\n\n\"It just gives me the creeps this same guy -- the guy who did that Albuquerque thing ...\" she shivered without finishing her sentence. \n\n\"Oh my God,\" Jenny's face lit up. \"I forgot Ellie.\"\n\n\"Who's Ellie?\"\n\n\"My boss's wife, Ellie McLean. She's in the car downstairs.\" Joel looked at her quizzically. \"Long story,\" Jen shrugged. \"Can I invite her up?\"\n\n\"Sure,\" Joel shrugged. \n\n\"Joel,\" Jenny paused, \"do you think, can we someday find a way to get back together?\"\n\n\"How's today work for you?\" Joel asked with a smile. She hugged him hard. \"Jenny,\" he pulled her away. \"You're reaction was perfectly understandable. I still love you.\"\n\n\"Oh God, Joel, I love you so much,\" she cried, and hugged him again. She pulled away. \"To be honest I never thought it was possible I would ever say that again.\" \n\nImpossible is what we do. \"Let's not keep the boss's wife waiting,\" Joel said. Jenny took a moment to recompose her face in the bathroom. \"You can't tell Ellie, or anyone, about anything about me, or any of those people in that video,\" Joel warned Jen as they left the apartment. \n\nJenny nodded, remembering Colonel Greene warning her of imprisonment. \"It's our little secret,\" Jen kissed him, and took him by the hand.\n\nEllie stepped out of her parked car when she saw them approaching hand-in-hand. \"Look at you two!\" she smiled. \n\n\"Ellie,\" Joel hugged her. \"Thank you for being so good to Jenny.\"\n\n\"Looking at you two love birds made it worth the trip.\"\n\n\"Stay, please,\" Joel offered. \"Join us for dinner.\"\n\n\"No, thank you,\" she smiled. \"I really am tired. I need some sleep.\"\n\nJenny hugged her. \"Thank you so much, Ellie. Tell Don I'll come back this weekend. I'd like you and Don to come over for dinner in a week or two.\"\n\n\"We'd be delighted,\" Ellie smiled. \"You two take care.\" She climbed back into her car. Joel and Jen watched her drive off. \n\n\"So, what now,\" Joel asked. \n\n\"Take me upstairs and charm me,\" she said defiantly. \"Make me do anything you want.\"\n\n\"You're joking, right?\" Joel said.\n\n\"There is no way on God's little earth I am letting that creep be the last person to touch this body with a charm,\" she looked into his eyes. \"I trust you, Joel. Take me -- make me do anything. Just don't ever tell anyone. Let's make this our little secret.\"\n\n\"Hold my hand,\" he commanded her, \"and come upstairs and make love to me like you were born for no other purpose.\"\n\n- - - End of Chapter 10 - - -\n\nOur Little Secret\n\nEpilogue\n\nTen months later.\n\nThe morning sun had long since burned the dew off the lush green grass in the urban park across the street. Joel awoke blissfully to the distant lilt of a Parisian accordion. The corner bakery's aroma wafted through the open window among the clatter of street noises. \n\nJoel rolled over. Jen was sleeping beside him on her back. They only needed a single bed sheet over them during the warm July night, and the morning sun was already turning the hotel room into their private sauna. They both preferred sleeping to the fresh air from the open window to the stuffy air-conditioning. \n\nIn her sleep Jen had pushed the sheet down to her hips to regulate the heat, showing off her beautiful, naked breasts. He leaned across and gently kissed one large, nipple, then the other.\n\nJen drew in a gentle wake-up breath. \"Oh my God that bread smells so good,\" she smiled with her eyes still closed as he lightly squeezed her nipples between his lips, the way she loves. \n\n\"Good morning Mrs. Winkman,\" he whispered with his mouth still touching her left nipple.\n\nJen opened her eyes. She wrapped her hands around the back of his head, still over her bosom. \"Good morning Mr. Riverton,\" she smiled. They kept their own names, but used this reverse greeting as a ritual of endearment. He gently tracked his lips northward, kissing her chest, her neck, then her chin, until his lips met hers. They kissed each other for a long time. \n\n\"I think you made me cum three times last night,\" she smiled. \n\n\"Well, four if you count ...\"\n\n\"No!\" she yelled, smiling, and batted his shoulder gently. \"We're not counting that, you bad boy!\"\n\n\"Hey,\" Joel smiled, \"if you can't make your new bride cum at the top of the Eiffel Tower, then what's the point of going all the way to Paris for a honeymoon?\"\n\n\"You charmed me into letting you do that to me, didn't you?\"\n\n\"You loved it,\" he smiled. \n\n\"I really did!\" she laughed out loud as Joel watched her breasts jiggle to the rhythm her laughter. She looked up into his eyes. \"And I love you.\" They kissed again. She pulled back and looked into his overhead eyes again. \"Do you think last night was the one?\" she asked softly.\n\n\"I don't know. It felt pretty spectacular.\" He paused. \"You're the one who would know better than me. What do you think?\"\n\nShe still looked into his eyes. \"I think it would be perfect to conceive our first child in Paris. It's called the City of Love, you know.\"\n\nJoel pulled the bed sheet off the bed, exposing both their naked bodies. He gently rolled on top of her. \"Practice makes perfect,\" he smiled and kissed her passionately. Jen welcomed him with open legs, and he settled between her thighs. She closed her eyes and moaned with delicious anticipation when Jen felt his growing manhood press against her bald pussy. \n\nJoel's cell phone interrupted their sunrise celebration. \"Oh, oh,\" Jen opened her annoyed eyes. She knew that ring tone. It would bring no good. \n\nJoel rolled off Jenny and sat up on the edge of the bed with his back to her. It was nine thirty in the Paris morning, which made it three thirty in the morning in Quantico. \"Good morning, Colonel,\" Joel answered. \"Bright and early, I see.\"\n\n\"Joel, I have a civilian jet fueling at Charles de Gaulle. I need you here ASAP.\"\n\n\"Another one?\" Joel asked. There had been two more catnap flights since Joel's diversion to Richmond Virginia. A Boeing 737 jet in China, and a Q400 turboprop in South Africa. Both were domestic flights, and had a relatively small impact on the USA. \n\n\"It's not a flight,\" Colonel Greene warned. \n\nJen watched Joel's back as he listened to Colonel's explanation, and she could tell by the tension mounting in his shoulders something was wrong. He leaned forward, resting his forehead on his hand. \"Holy Shit!\" she heard Joel bark with a tone of stunned amazement. Jen bolted upright and leapt across the bed to better see his face. \"I'm on my way,\" Joel promised, and hung up, looking dazed. \n\n\"What?!\" Jen asked with anxious trepidation. \n\n\"A cruise ship is scheduled to dock in Miami in seven hours,\" he said, still with his back to her.\n\n\"So?\" Jen asked, not understanding the magnitude of the news. \"That happens every day.\"\n\nJoel turned toward her and looked into Jen's eyes. \"Six thousand catnap passengers and crew.\"\n\n\"Oh my God!\" Jen breathed. They sat together in silence for a couple of seconds. Jen stood up naked, picked up her nightshirt from a chair, and covered up. \"I'll start packing.\"\n\n- - - The End - - -"
    ],
    "authorname": "deltablonde",
    "tags": [
        "move",
        "journalism",
        "break up",
        "orgy",
        "video",
        "air force",
        "blowjob"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/our-little-secret-ch-10"
}