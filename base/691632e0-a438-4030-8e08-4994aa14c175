{
    "title": "Love Shack",
    "pages": [
        "A note to the reader: This story takes place during the mid-1980s. Those were very different times. Fashion and language were different. We didn't worry about seat belts or STDs. The drinking age was 18 and pubic hair was all the rage. The only sexual fear was getting pregnant. I have tried to be as historically accurate as my aging brain can remember. Thank you to WokeUpOneDay and LindsayMurray for editing and reviewing this manuscript. Although there is reference to earlier times, all sex is between characters who are at least 18 years of age.\n\nDuring my last two summers in high school I managed to land a lifeguard job at an upscale country club that paid twice as much as the local lake. I would have loved to work just up the street from our house, but the town had instituted a minimum age requirement of 18 for insurance purposes. The nice thing about the country club gig was that I got to meet some incredibly beautiful women.\n\nThe problem was that they were all out of my league. Once a rich man's daughter either saw the beat up old Rambler I drove or found out that my family wasn't wealthy, I became persona non grata. The other issue with that job was that the lifeguards ended up doing all the shit jobs no one else would do. Things like emptying trash barrels loaded with maggoty food, cleaning the nasty restrooms at the end of the day, or cleaning up a little kid's puke from poolside. That September as I went off to university, I decided it would be my last summer as a lifeguard.\n\nOver Christmas break, one of my good buddies, Jerry, asked if I was interested in taking the head lifeguard position at my hometown's lake. Jerry was planning on applying as a lifeguard, but wasn't interested in the top job. He thought that if I got the job that he would be hired. The pay wasn't as good, but the position promised to be a lot more laid back. I applied for the job citing my previous job experience, had a phone interview in February, and received a letter in March telling me I got the job.\n\nAfter finishing my last final exam, I reported to Town Hall and was given a stack of applications. I knew several of the applicants; the Finn sisters and Jansen brothers from high school, and of course Jerry. One of my first tasks was to hire my staff. I needed seven lifeguards and had 16 applicants. I talked to my supervisor, Lorraine, and floated the idea of a skills test to weed out some weaker candidates. She thought it was a good idea and I called all 16 and told them to be at the lake at 8 AM on Saturday ready to swim.\n\nSaturday dawned clear and bright, but cool. When I got to the lake at 7:30, I discovered that the water temperature was quite chilly. I found a thermometer and measured the water at 59\u00b0F (15\u00b0C); not exactly mid-summer fun temperatures. Lorraine showed up fifteen minutes early to observe how I conducted the test.\n\nAs the applicants started showing up I went around and introduced myself. One of the things I loved about our current fashion was that, unless you were older, women's bathing suits didn't have breast pads. It led to a lot of nippage, especially on chilly mornings like this one. Most of the swimsuits were made from thin material and pubic hair was definitely in. While all the women shaved so that their hair wasn't exposed, it was not unusual to get a nice profile view of a bush on top of a mons as seen through a wet suit. The pleasant view of some labia hiding under that ultra-thin material was also a frequent occurrence.\n\nThe first people I met were the Finn sisters. Kathleen and her older sister Becky had swam on the high school swim team and I was sure they would ace both tests. They were slightly taller than average with the broad, muscular shoulders that one earned through hours in the pool. Their figures were lovely in their competitive racing suits, slim hips and average breasts with prominent nipples in the chilly air. They could have passed as identical twins with one exception: their hair. Kathleen had stunning red hair, while Becky was a dark brunette: classic red and dark Irish.\n\nKathleen exclaimed, \"Pat, so good to see you!\" She gave me a hug. Becky gave me one as well. Their breasts pressing into my chest.\n\n\"How was college?\" I asked.\n\nKathleen said, \"Not a bad as I thought it would be. It helps to have a big sister to help you out.\"\n\nA shorter, shapely, buxom brunette approached us. She introduced herself as Juliana Hildegard. I saw the Jansen brothers, Jake and Jonas, arrive and I shook their hands as well. By eight o'clock, 13 of the 16 applicants had showed up.\n\nLorraine observed, \"If they can't get to a job interview on time, you probably don't want them to work for you.\"\n\nI checked my watch, time to get to work. I called out, \"If everyone could gather around.\"\n\nThe group came over. Jerry said, \"You're not going to have us swim in this are you? That water's freezing.\"\n\nI stated, \"Fifty-nine degrees in fact.\" In a louder voice, \"Thanks for coming down this morning. I met some of you. My name is Pat Sullivan. I've been hired as the head lifeguard for the coming summer season. I have to fill seven positions. There are 13 applicants left, all of you.\" I pointed to them. \"I am going to ask you to do two easy swim tests this morning. For the first one, you will swim from here to the first raft, then to the second raft, and finally back here. I think it is about 100 yards all together. So, not hard. It isn't a race, just a swim.\"\n\nSomeone in the back called out, \"But damn cold.\"\n\nI said, \"When we start on Memorial Day weekend, the water won't be much warmer.\"\n\nJulianne asked, \"What's the second test?\"\n\n\"I'll have a victim...\" I used air quotes. \"Swim out to the rope line. The person being tested will swim out and do a non-equipment rescue. When the rescuer is almost to you, I want the victim to submerge. Pull them up and get them in. Everyone will get a chance to be the rescuer and the victim. Two simple tests that you had to do to get your lifeguard certification. Any questions?\"\n\nSomeone in back shouted out, \"So if we don't want to do it?\"\n\n\"Then you don't get the job.\"\n\n\"I'm outta here.\"\n\nI observed, \"OK, we're down to 12 applicants.\" Many laughed. \"Let's do the swim first.\"\n\nI stripped off my shirt and walked to the water's edge.\n\nKathleen came over, \"Pat, why are you swimming? You already have the job.\"\n\n\"Leadership by example.\"\n\n\"That's cool.\"\n\nA shorter fellow said, \"Maybe we should go in two heats so we don't run into each other.\"\n\nI replied, \"Good idea. What's your name?\"\n\n\"Owen.\"\n\n\"Thanks Owen. Good idea. I need six of you to swim with me.\" There were four female applicants and they all stepped up. \"I need two of you gents.\"\n\nJerry and Owen stepped forward.\n\nI shouted, \"Ready?\"\n\nThen without waiting, I ran and dove into the water. The initial shock of cold water nearly knocked the wind out of me. I thought, Go, Pat go! Set the example. I started pulling as hard as I could, thinking the exercise would overcome the cold. I saw the Finn girls pass me, but I reached the first raft in third place and pushed off for the second. I looked to see where everyone else was and I had a nice lead. I reached the second raft then headed for shore. I looked up and the Finns were already walking out of the water. I reached standing depth and stood up.\n\nAs I emerged from the water Kathleen tossed me my towel, \"Don't get all the way dry. It will be easier when you go in again.\"\n\n\"If you say so, coach.\"\n\nKathleen and Becky were sporting some very nice nipples and I could detect abundant pubic hair on their modest mons. Julianne came up next to me also nipped out. She grabbed a towel and started drying off. Jerry and Owen were emerging from the water. The fourth woman, who I learned was Peggy, reached the shallows. The first heat was done.\n\nI yelled, \"Next group. Go!\"\n\nThe six men scrambled for the water and were soon making their way over the course.\n\nPeggy was a thin blonde. She ran and got her towel. Her lips were blue, her jaw chattering. \"I don't think I'm going to be able to do the second test.\"\n\nI said, \"I don't want to force you to do anything.\"\n\n\"OK. I think I'm going to pass.\" Peggy headed toward her car.\n\nI heard, \"Shit!\"\n\nJulianne ran and dove into the water. I looked to see what the problem was.\n\n\"I only see five heads!\" Becky shouted.\n\nI saw Julianne's feet go up and she soon brought head up out of the water, pulling for shore. As she gained her feet, the body she pulled in started coughing. We weren't done with the first half hour and we had already had a real rescue. Not a great start to the summer. The fellow Julianne pulled out was a thin guy by the name of Tim.\n\nThe rest of the heat made it to shore. Lorraine came over, \"Do you think that it is a good idea to continue?\"\n\nI said, \"It's going to be this cold on Memorial Day. Our staff has to be able to do this.\"\n\nShe nodded, \"Alright.\"\n\nI spoke to the group, \"OK, time for the second test. I'll be the first victim. Julianne, I don't think you need to do this one. You nailed it for real just now. Who's going to rescue me?\" Becky raised her hand. \"OK. Here I go.\"\n\nKathleen's advice was good, but it was still cold as hell. I got into position and turned to face the beach. Becky ran, dove, and started swimming to me. As she approached, I sunk below the water. She quickly pulled me up by my chin and crossed her other arm over to pull in the prescribed manner to shore. Everyone had a chance at the second test. By the end, I was down to nine applicants. Lorraine suggested we hold interviews which we did the following Monday. As far as I was concerned, Kathleen, Becky, and Julianne were no brainers. They had their act together in the water. To round out the team, we ended up going with Jerry, Owen, and the Jansen Brothers -- Jake and Jonas.\n\nI made all the phone calls then held an organizational meeting. With eight staff, everyone would get one day off. We would have two off on Tuesday. We drew the days out of a hat and I drew Monday. The town had a requirement that we needed to have at least two lifeguards on duty at any time. I asked if anyone had preferences for hours. Jerry, Jonas, and Jake told me that they had second jobs and would like to have evenings off. That worked out well for me as I was able to set up the schedule so that I closed every evening with a female companion: twice with each woman.\n\n_ _ _ _ _\n\nThe season started off well and the beach had nice crowds. Well, nice crowds for a small mid-western town lake. A combination of Owen, Jerry, Jonas, or Jake opened up shop each morning; and I closed up with one of the ladies. During the busiest part of the day I would have six of us on duty, with one on break at any one time.\n\nIt was our first Friday and Kathleen and I had the last shift. There weren't very many people on the beach so she came over to my station. Perhaps it was me, but I thought she was moving a bit more provocatively.\n\nShe smiled, \"I'm not one to tell you how to run the beach, but would it be better if you and I were together at some central spot on the beach?\"\n\n\"I think that's a great suggestion.\"\n\nI climbed down and we moved to a spot where we could see the swimmers. As I followed her, I couldn't help looking at her fine ass.\n\nShe stopped at spot that strategically covered the four people still in the water. \"So, any plans this evening?\"\n\n\"I was going to ask you the same thing.\"\n\n\"I was thinking we could get something to eat, or maybe just hang out together.\"\n\nI decided to tease her a little. \"So we would go hang out down town in the middle of town?\"\n\nKathleen winked at me. \"Actually, I was thinking hanging out here at the beach would be a little more private.\"\n\nThat brought a smile to my lips. \"Private is good.\" I looked at my watch. \"Just a couple of minutes to seven. Why don't you get the equipment from your end of the beach?\"\n\nWe walked back to our respective stations and collected our equipment. At seven, I blew my whistle and announced that the beach was closed. Kathleen and I met at our lifeguard shack.\n\nThe shack was a small, 25x20 foot cinder block building with no windows and a linoleum floor. It had a couch and two overstuffed chairs. There was also a bathroom with a toilet and a sink; plus a little kitchenette with a sink and a refrigerator.\n\nI sat down in one of the chairs and Kathleen settled herself down onto my lap with her arms behind my neck. My cock immediately began to stiffen with that fine ass on top of it! I placed one hand on her thigh and the other on her bare back.\n\nShe joked, \"Pay for this job is OK, but the benefits are great.\"\n\nI was a little naive and asked, \"What benefits?\"\n\n\"Getting to hang out with you.\"\n\nI smiled, \"Oh, those benefits. Probably the only benefit for being head lifeguard is getting to write the schedule. I scheduled it so you and I get to close up shop two nights a week.\"\n\n\"I wish it was more, but I'll take two evenings with you.\"\n\nKathleen leaned in and kissed me. \"You have really nice lips.\"\n\nShe kissed me again. Her soft lips sent a shiver down my spine. I felt her mouth open and I extended my tongue. Her smooth, warm tongue caused my heart to beat a bit faster. Kathleen brought her hand to my face and moaned. I placed my hand on her breasts and she responded with her tongue probing further into my mouth. My fingers moved gently over her erect nipple under the thin fabric. I felt goosebumps on her back. Kathleen arched her back and lifted her legs, pressing her ass into my rapidly hardening cock. This time her moan was more passionate.\n\nKathleen said, \"I think I feel something nice and stiff under my butt. Why don't we lie down on the couch?\"\n\nShe got off of me and I had the idea that I wanted her on top of me.\n\nFor being 19, I thought I had a decent amount of experience with women. My first time was after senior prom. My girlfriend and I fooled around a bit the previous summer, but I didn't learn a lot. When I went off to college I had a couple of dates during the fall, but once I came back for spring semester things changed. I started seeing a sophomore named Charlize and she taught me many things about a woman's body. I sort of had a plan, but not a great one.\n\nI lay down on the couch and Kathleen rubbed the bulge in my swim trunks. \"Ooh, I like this.\"\n\nShe lay down on top of me, positioning her crotch on top of my cock. She propped herself on her elbows and started kissing me again. I immediately placed my hands on her ass. She groaned into my mouth. Then I slipped my hands through the leg holes of her suit so that I held her silky skin. I cupped her butt cheeks and she responded by pressing harder against my mouth.\n\nKathleen broke the kiss. \"Would you like to feel more of me?\"\n\n\"What do you think?\"\n\nKathleen pushed herself up so that her weight was fully on my erection. Her erect nipples highlighted her red one-piece. \"I feel something very nice on my muff.\"\n\n\"I feel something very nice on my cock.\" I placed my hands on her shoulders, \"May I?\"\n\n\"Yes, you may.\"\n\nI slid the shoulder straps down and exposed her breasts. Her fair, freckled skin had a nice tan line; her erect pink nipples standing proud against her white skin. I placed a hand on each mound and gently circled her areola. She looked at me with what can only be called lust. Kathleen bent forward and I took a nipple into my mouth. I gently sucked and then traced my tongue around her areola, then moved on to the other breast. I moved back and forth several times.\n\nI spoke into her nipple, \"I have an idea.\"\n\n\"And what might that be.\"\n\n\"I think we should remove this bathing suit and then you should sit on my face.\"\n\n\"Patrick Sullivan, you are a man after my own heart!\"\n\nKathleen stood at the side of the couch. She hooked her fingers into her suit, dropped it to the floor, and then stood proudly displaying her beautiful red bush.\n\nI put my hand out to touch her pubes, \"God Kathleen, you are beautiful.\"\n\n\"Do you need something to prop up your head?\"\n\n\"Good idea.\"\n\nShe walked across the room, her ass swaying, and grabbed someone's dirty sweatshirt. She put it under my head. Kathleen swung her leg over my head and nestled her pussy over my mouth.\n\nShe said, \"I have never had anyone want to be in my muff like this.\"\n\n\"I am happy to be the first!\"\n\nI placed a hand on each ass cheek and just breathed in her incredible scent. I had really enjoyed smelling Charlize, but Kathleen was even better. I extended my tongue and gently touched her labia. She groaned.\n\nI said, \"I'm not sure exactly what I'm doing so, let me know what you like.\"\n\n\"Well, this is a great start.\"\n\nI ran my tongue the down length of her slit, getting my first sweet taste of Kathleen. I probed her vagina and received a groan. I moved to her clit. At the same time I raised my left hand to her breast and began fondling her.\n\nKathleen's voice was breathy. \"Oh, yeah. Nice. Nipple. Stay on nipple.\"\n\nI began focusing on her clit and she began moving her hips to increase the contact speed. I had a thought that perhaps I should tease her a bit and I slowed my pace.\n\nShe said, \"No. Don't slow.\"\n\nHer juices flowed over my face. I just kept my tongue moving, lapping up as much as possible. Her hips rhythmically ground her labia into my mouth. Kathleen leaned forward and placed her hands on the arm rest of the couch, her pubes pressing into my face, her pheromones driving me crazy. Another opportunity presented itself. I placed my finger at her opening and heard an approving groan. I slipped my finger in, probing and feeling the wonderland that is a woman's vagina. Kathleen groaned again. Licking her clit I began moving my finger around inside her, and then I decided that if one was good, two would be better. With two digits moving around inside, I figured I was bound to hit something that set her off.\n\n\"There!\"\n\nI asked, \"Where?\"\n\n\"Whatever you just did.\"\n\nI couldn't tell what I had done so I started systematically moving my fingers around in her vagina.\n\nWhen I reached the roof of her vagina, she said. \"There. Right there. Keep touching me there!\"\n\nI felt this wrinkly area which I have since learned was her g-spot. I started rubbing her while continuing to lick her clit.\n\nKathleen's pussy began to contract on my fingers, \"Oh. Oooooh.\" All I heard was panting as she tried to catch her breath.\n\nShe pressed her clit into my mouth, cutting off air to my nose. I wasn't going to budge now that she was cumming. I kept licking her clit, rubbing that wrinkly spot, and tweaking her nipple. I heard Kathleen whimper and then she slid down, moving her clit away from my tongue so that her stomach was on my face. I still had my fingers buried in her vagina, so I kept working her vagina and nipple. Finally, she rolled off me and eased herself to the linoleum floor, lying on her back.\n\nI rolled on my side to look at her splayed body. Her nipples were hard and I could see her pussy contracting. Her labia glistened with a combination of her juices and my saliva. Her eyes were closed and her mouth was open, panting as if to catch her breath.\n\n\"Oh god Pat. What did you do to me?\" She said laughing. She then sighed, \"This floor is cold.\" She continued lying there, \"I'm not an expert, but I think you just made me cum.\" At that moment I became a lifelong fan of cunnilingus. Eventually she sat up, looked at me, and sighed, \"God that was great.\" She gazed at my bulge, \"After that I have to do something for you.\"\n\n\"Only fair.\"\n\nKathleen smiled lustfully, \"Have you ever had a blow job?\"\n\n\"Yes, I have.\"\n\n\"Not as good as the one I'm going to give you. Lose those trunks!\"\n\nI returned to my back, lifted my butt, and pulled my swimsuit off. My cock was like a steel pipe.\n\nKathleen came over and took my shaft in her hand. She lightly petted the soft underside. \"Your penis is calling my name, Mr. Sullivan.\"",
        "\"What's it saying?\"\n\n\"Suck me Kathleen, suck me.\" We laughed, \"Let me have those sweats.\" She pulled them from under my head and knelt on them next to the couch. \"I think your pubes are redder than mine!\" I looked at her and she was just staring at my penis. \"I can tell you that I am definitely not a lesbian. The sight of your cock is so hot!\" She traced her finger around the head then around my circumcision scar. \"You are so soft.\" She very delicately kissed the head of my cock, and then gently licked around the crown. I groaned.\n\nShe said, \"I could use some coaching on this as well.\"\n\n\"You're doing great.\"\n\nKathleen licked the length of my shaft and found a bare spot under my balls. She licked me there, and then took each ball into her mouth. I groaned my approval. Her tongue ran the length of my shaft, stopping to focus on all the soft spots she could find. Kathleen ran her tongue around my glans.\n\nI whispered, \"Oh ... perfect ...\"\n\nShe worked her way up and down my shaft a couple of times. Finally, she took the head into her mouth and then began sucking in earnest. I moaned my approval with every move. She started moving her hands on my shaft.\n\nShe said, \"I need something slick on you.\"\n\nI felt her lubricated hands pumping my shaft, \"What did you use?\"\n\n\"Muff juice.\"\n\nThe thought of her juices on my cock drove me to the edge, as well as her mouth and hands stimulating every square inch of my cock.\n\nI said, \"Here it comes!\"\n\n\"Cum in my mouth!\" Kathleen sucked even harder, stroking me with her hands.\n\nI placed my hands on her head and thrust my hips upward, my cum exploding into her mouth. She started moaning her approval, milking my shaft for every drop by sucking, licking, and then more sucking.\n\nShe came off my cock. \"Want to taste your cum in my mouth?\"\n\nCharlize had told me that it was only fair if she tasted my cum that I should taste it as well, \"Bring your pretty lips up here.\"\n\nKathleen kissed me with an open mouth, her tongue probing into my mouth. I could taste the saltiness of my cum.\n\nI said, \"You are quite good at that.\"\n\n\"What do you mean 'quite'?\"\n\n\"I think you can get better with more practice.\"\n\n\"And with more coaching.\"\n\n_ _ _ _ _\n\nSaturday was a pretty busy day at the lake, but as the sun moved lower in the sky the crowd dissipated. As we approached closing time we only had a single family enjoying the beach. Rather than sit on the lifeguard stands, Becky and I sat on a park bench that was close to where the kids were playing in the water. It was a little chilly and we had both put on t-shirts.\n\nShe said, \"So, got any plans for tonight?\"\n\n\"No. None. Want to do something?\"\n\n\"How about going for some pizza and beer down at the pizzeria?\"\n\n\"Sounds good. But I don't have anything to change into.\"\n\n\"Just wear what you have. Trunks, sandals, and a t-shirt will be fine.\"\n\n\"Do you have something to wear?\"\n\n\"Same as you. Except wearing this swimsuit lets everyone see the outline of my muff. Do you like the way this suit fits?\"\n\n\"Becky, I love that suit on you. I love seeing your muff and your nipples. You are breathtakingly beautiful, with or without a suit on.\"\n\n\"How do you know what I look like without a suit?\"\n\n\"Well, that's not what I meant.\"\n\nShe gave me a wink, \"But that's what I want it to mean.\"\n\n\"One issue, I don't have my car.\"\n\n\"No issue, I have mine. You can ride with me. Maybe after we eat, we could drive up to that spot beyond the cemetery. I have a big blanket we could snuggle on.\"\n\n\"That sounds like a wonderful plan.\" I checked my watch, closing time. \"Time to wrap up.\"\n\nBecky said, \"I'll let them know.\"\n\nShe walked over and told the family we were closing. We collected our equipment and headed to the shack. We stowed the gear and were about to lock up when Jerry drove up with Kathleen and Julianne. All three were wedged into the front seat of his car.\n\nJerry jumped out of the car, \"Pizza and beer, baby!\"\n\nBecky said, \"You must have read our minds. We were just going to go to the pizzeria.\"\n\nJerry sang, \"No need to fear, Underdog is here!\"\n\nI joked, \"You are a ham.\"\n\nJulianne carried two six packs, \"Hey Underdog, get the other six-pack.\"\n\nKathleen brought in two pizzas and set them on our small kitchen counter. Jerry carried a boom box and handed Julianne the six pack to put in the fridge. He plugged the music machine in and pressed play on the cassette.\n\nI asked, \"What are we listening to?\"\n\n\"New stuff from Prince.\"\n\nKathleen responded, \"I love Prince. I have always thought that he was singing 'Little Red Corvette' to me.\"\n\nI sang, \"I'm gonna try to tame your little red love machine.\"\n\nKathleen hooted.\n\nI cried, \"That's you! Now I will always think of you when I hear that song.\"\n\nJerry took something out of a paper sack, \"I got us a giant air mattress. We don't have enough room to sit and no place for other stuff. Know what I mean?\"\n\nHe started blowing it up. The sounds of Purple Rain filled the air as Kathleen distributed the pizza and Julianne handed each of us a bottle of beer. Jerry was getting winded blowing up the air mattress.\n\nBecky said, \"Jerry, that's good practice for when you have to give a blow job.\"\n\n\"Oh fuck you. How do you know?\"\n\n\"I'm a blow job expert. Let me take over you wimp.\"\n\nI observed, \"Just to be clear, in my experience a blow job doesn't actually involve any actual blowing.\"\n\nJulianne cracked, \"Yes, but 'suck job' doesn't have the same ring to it!\"\n\nIn the meantime I sat down on the couch with Kathleen and Julianne on either side. It was very nice having two bare female legs touching either side of me.\n\nJerry grabbed a slice and a bottle and sat in the other chair. He said, \"That not fair, you get to sit next to two beautiful girls and I sit here by myself?\"\n\nJulianne smirked, \"Pat's just cuter than you are.\" She kissed my cheek.\n\nKathleen got up and brought us more pizza, dancing all the way.\n\nBecky finished with the air mattress and pulled it over between the couch and the chairs. Five teenaged mouths eating pizza do not talk a lot. In no time we had two empty boxes.\n\nBecky said, \"So now what's the plan?\"\n\nJerry exclaimed, \"We drink and get fucked up.\"\n\nJulianne said, \"I have a better idea.\" She wore an impish smile.\n\nI asked, \"Which is?\"\n\n\"Spin the bottle.\"\n\nJerry leered, \"I could get into sucking some face.\"\n\nKathleen asked, \"Jerry are you always so rude and crude?\"\n\n\"Always!\"\n\nJulianne shook her head and said, \"Not just sucking face. We need to play with the rules that we use at college.\"\n\nBecky said, \"Do tell.\"\n\nJulianne continued, \"Well, let's say I'm the spinner and the bottle lands on Pat. I get to tell Pat to do something.\"\n\nKathleen's eyebrows raised, \"Something?\"\n\nJulianne smiled, \"Well, something and anything. Not just kissing.\"\n\nJerry exclaimed, \"So ANYTHING?\"\n\n\"Yes. Anything. In fact there are no limits.\"\n\nKathleen said, \"What if we don't want to do it?\"\n\n\"Then you're out of the game and you have to leave the shack. We aren't going to force anyone into anything they don't want to do.\"\n\nJerry said, \"Well, I need another beer for this. Anyone else?\"\n\nBecky raised her hand, \"I'll have one.\"\n\nJerry said, \"Pat? Kathleen?\"\n\nI said, \"I want to be stone-cold sober for this. I want to remember all of it.\"\n\nKathleen concurred, \"Good idea. I'll pass, Jerry.\"\n\nBecky waved her hand, \"Why don't you all come down on this mattress. It's big enough for all of us.\"\n\nWe moved onto the mattress. I ripped off the top of a pizza box and placed in the center of the mattress before sitting.\n\nJulianne said, \"Since it was my idea, I'll spin to see who goes first.\"\n\nShe spun and the bottle pointed at Becky: our first contestant. Becky spun and it pointed at me.\n\n\"Pat, I want you to suck face with Julianne.\"\n\nI said, \"Cool. Is there a time limit, or do I get to do this all night?\"\n\nJulianne said, \"One minute for each event.\"\n\nI straightened my legs, \"This might be better if we stood.\"\n\nJulianne swung herself onto my lap, her legs straddling me, \"I think this will work better.\"\n\nShe pressed her body against me, her crotch against my cock and her ample breasts against my chest. She wrapped her arms around my neck and pressed her open mouth against mine. I grabbed her ass and responded with my tongue. Julianne was an excellent kisser. She probed my mouth and wrestled my tongue, sending shivers down my spine and extra blood to my cock. I placed a hand on her back, pressing her breasts against me. I was thinking I needed to see them soon. My penis was soon rock hard.\n\nBecky called time, and then said, \"Pat, your turn.\"\n\nJulianne ground her pussy into my cock, then reached down and grabbed the shaft through my trunks, \"I'm liking this!\"\n\nI spun and it landed on Kathleen. \"Can we ask for clothing to be removed?\"\n\nJulianne said, \"That fits into the anything category.\"\n\n\"Kathleen, I think you need to remove everything covering your breasts.\"\n\nKathleen pulled her shirt over her head revealing her milky white skin and a thin bra. Her nipples stood out on the fabric. She reached back, unhooked her bra, and bared her breasts; her pink nipples stiffening in the cool air. She smiled impishly, \"Payback is a bitch!\"\n\nJerry said, \"Damn! Kathleen, you are one fine looking woman!\"\n\nKathleen spun and it landed on Jerry, \"Let's see if you're a fine looking man. Jerry needs to lose everything covering his dick.\"\n\nJerry stood. \"I have to warn you that I'm sporting a woody.\"\n\nI observed, \"If you didn't, I'd say you were gay.\"\n\nJulianne said, \"Pat's already got a nice hard-on.\"\n\nHe stood, kicked off his shoes, and dropped his shorts. His cock sprang up into his shirt, \"Not gay!\"\n\nJulianne opined, \"I think the task was to remove everything covering your dick. Shirt off too.\"\n\nHe pulled off his shirt. He had a pretty decent-sized cock.\n\nBecky said, \"Very nice, Jerry.\"\n\nHe twisted his hips from side to side, whipping his cock against his hips. He sat down, his erection standing straight up. \"My turn.\" The bottle pointed to Becky. \"I want to see some pussy. Becky how about losing all of that?\" he said waving his hand and indicating her swimsuit.\n\nBecky stood and peeled off her t-shirt, her nipples standing out on her swimsuit. She turned around and shook her ass at us. Jerry and I hooted. The shoulder straps came down and she lowered the suit to her waist. I had a great view of her breast in profile. Then with one move she hooked her thumbs into her suit and dropped them to the ground, touching her toes. She spread her legs so that her ass and pussy were in clear sight. What an amazing view! I heard Jerry groan. I looked over and he had his hand on his shaft.\n\nBecky turned around and pointed at Jerry, \"No touching your shit without instruction!\"\n\nJerry looked sheepish and removed his hand.\n\nBecky's breasts were nearly identical to her sister's: same champagne glass size, same quarter-sized areolas. Kathleen and Becky were nearly mirror images of one another. The only difference was Becky was not as fair skinned as Kathleen, her nipples a shade darker.\n\nBecky spun and it landed on me, \"I think this game is progressing a little too slowly. Pat, I think you need to do some muff diving on Julianne.\"\n\nI said, \"Julianne will need to remove her shorts.\"\n\nShe stood and dropped her shorts and panties. Her pubes were trimmed into a nice delta, her labia peeking out below. She lay down on the mattress, \"Make some room ladies!\"\n\nI raised a finger, \"Just an observation, but in my experience, proper muff diving also requires stimulation of the nipples.\"\n\nJulianne sat up, pulled off her shirt, and unfastened her bra. Her breasts had a lovely, ever so slight sag with dark, upturned nipples. I leaned over and gave each nipple a little suck. She kissed me when my head came up, then laid back and spread her legs.\n\nI nestled in between her thighs, kissing each one. \"Now when does the clock start?\"\n\n\"When you take your first lick.\"\n\nJulianne was on her elbows watching me. I got up very close to her pussy. She was beautiful. Her brown pubes covered a nice mons. Her labia minora extended just past her labia majora. Her clit was slightly engorged and moisture glistened at her vagina. I probed her opening, and then traced my finger up her slit. I put my wet finger into my mouth.\n\nJerry exclaimed, \"Quit stalling!\"\n\nBecky said, \"No, this is hot! Take your time, Pat.\"\n\nI slid my finger into Julianne's pussy, then traced back to her clit. \"If you don't ever want to start the clock that's OK with me.\"\n\nI started with my tongue in her opening, probing as far as it would go. At the same time I reached up and found her nipple, gently squeezing it. I parted her labia with my tongue and moved to her clit. I looked up and Julianne's eyes were watching me, her mouth open.\n\nI heard a squishing noise and I saw Becky with her fingers in her pussy. I was giving two women pleasure. I stuck two fingers into Julianne's pussy and started feeling around for the wrinkled spot, but I couldn't find it. Many years later, I learned that a woman's g-spot only became rough when she was fully aroused. For now I just moved my fingers around. The taste and smell of Julianne drove my cock to maximum hardness and I pressed my hips into the mattress.\n\nJerry said, \"I think that's more than time. I think like four or five minutes!\"\n\nI lifted my head, Julianne's fluids on my chin.\n\nJulianne sat up and kissed me with an open mouth, then licked some of her juices, \"Oh I taste really good, don't I?\"\n\nI smiled, \"I could lick your pussy all night long.\"\n\nShe kissed me again, \"You're good, Pat. You really need to make me cum. Ladies, you need to get some of that.\"\n\nKathleen said, \"Already did.\"\n\nBecky slapped her sister, \"When was this?\"\n\n\"Last night.\" She smiled mischievously at me.\n\nI stood up and my swimsuit was tented from my erection.\n\nJulianne leaned forward and put her hand on me, \"Perhaps you need to free this bad boy.\"\n\nI smiled, \"Gladly.\" I peeled off my t-shirt, dropped my trunks to the floor, and stood up. I was quite proud of myself, my cock standing at attention, marginally larger than Jerry.\n\nJerry said, \"That's some nice shit you got there.\"\n\nKathleen exclaimed, \"I'm feeling left out!\" She stood and unsnapped her fly, then pushed her shorts and panties to the floor. The five of us were completely naked.\n\nJulianne said, \"Pat, time to spin.\"\n\nI spun and it pointed back at me. \"What? Do I spin again?\"\n\nJulianne corrected me, \"Oh, no. We select what you do. What do you think? More muff diving?\"\n\nBecky said, \"No, I'm thinking some red pube on red pube action.\"\n\nJerry exclaimed, \"I like it!\"\n\nJulianne said, \"Pat, since you've already been in Kathleen's muff, you need to fuck her.\"\n\nI observed, \"For only a minute? That's not even possible.\"\n\nBecky declared, \"OK. You need to fuck Kathleen until one of you cums, just so long as it's hot and I can play with myself.\"\n\nJerry asked, \"Can I play with myself too?\"\n\nBecky said, \"That's fair.\"\n\nI protested, \"This isn't going to work. I don't have a rubber.\" I was using the Twentieth Century term for a condom.\n\nBecky said, \"Haven't you heard of the pill?\"\n\nKathleen declared, \"We are liberated women!\"\n\nJulianne exclaimed, \"Hell, I came home with an entire summer's worth!.\"\n\nI lay down on my back on the mattress, \"That's cool. Kathleen, you need to ride me.\"\n\nShe had a gleam in her eye then came and stood over me. What a beautiful view I had: erect nipples, moist labia. She placed her feet on either side of my stomach, then lowered herself into a squat so that her pussy was just above my cock. She placed the head at her vagina and slowly lowered herself onto my penis. Until my dying day I will always savor the feeling of that first penetration of a pussy during sex!\n\nKathleen was very tight and her ultra-slow decent onto my shaft was exquisite. The woman was in phenomenal shape as she started slowly doing squats on my cock, taking me right to the hilt. With each deep thrust I could feel my glans touch her cervix. I reached up and fondled her breasts, taking her nipples between my thumb and forefinger. Kathleen's thighs must have reached the aching point, because she got on her knees and started grinding my cock. I could feel our pubes entwining, true red on red.\n\nJerry let out a groan. He had his prick in his hand and was stroking himself. Before I could blink Julianne had moved in front of him and wrapped her mouth around his cock. He must have cum as he let out another groan.\n\nKathleen changed her hip motion so that she was bouncing up and down on my cock. She placed her hands on my chest then returned to the grinding motion.\n\nI grabbed her shoulders and pulled her down on me, \"I'm going to cum.\"\n\nLooking back, I didn't have much staying power. She thrust her tongue into my mouth as my back arched. I lifted her off the ground as I thrust up into her. She pulled off the kiss and watched me. I saw her eyes open wide.\n\n\"I felt you cum inside me.\" She put me in another lip lock, entwining our tongues. \"That was amazing! I want to fuck you very night!\"\n\n\"We can do that.\"\n\nI looked around. Jerry had leaned back against one of the chairs, post-cum leaking from his waning cock. Julianne and Becky were still playing with themselves. Kathleen stood up and got a napkin from the kitchen counter. She wiped off some cum that was running down her leg.\n\nBecky said, \"When you are ready, Pat, you need to spin again.\"\n\n\"Really?\"\n\n\"Both of you guys have cum, but you have three unsatisfied women here.\"\n\nI said, \"OK. Let's see if we can't get some more orgasms going.\"\n\nI spun the bottle and it pointed at Jerry, \"Kathleen is ripe for an orgasm. I think you need to finish what I started. Eat Kathleen's pussy until she cums.\"\n\nHe looked thunderstruck, \"But she's full of your cum.\"\n\n\"You don't want to do it? You want to leave?\"\n\n\"Fuck you! I'll do it.\"\n\nKathleen lay on her back in the middle of the mattress and spread her legs, \"Remember, you have to make me cum.\"\n\nJerry got a napkin and wiped her pussy, \"God damn! There's a lot of spunk here.\"\n\nJulianne declared, \"I just swallowed every drop of yours. It tastes great.\"\n\nI said, \"And it's less filling,\" mimicking the popular beer commercial.\n\nJerry got on his elbows between Kathleen's legs and started licking her.\n\nI looked at Becky leaning back, fingering herself as she watched Jerry eat out her sister. I thought, 'fuck these rules'. I went over and positioned myself between Becky's legs. She lay all the way back. Her bush was almost black, her labia small like her sister's. Her clit was red and engorged, ripe for an orgasm.\n\nMy penis hadn't recovered from fucking her sister so there was no way I was going to fuck her. Instead, I nestled my face into her bush. Her labia were wet with moisture as I probed her opening with my tongue. I laid out flat and placed my right hand on her pussy and my left on her breast. I tweaked her nipple and went for her clit. I probed for her wrinkly spot and found it. Since she was already primed from playing with herself, I used both hands and tongue on her.\n\nAfter several minutes, I sent Becky over the edge. A guttural 'aaaaahhhhh' came from her throat as I felt her pussy clenching my fingers. Becky arched her back and grabbed my hair, pressing my face into her clit. Now her breathing changed to pants. She squeezed my head with her silky thighs.\n\nI must have pushed her into the sensitive zone, because she pushed my face away from her clit. I kept rubbing the wrinkle, the name I had given to the g-spot. I brought my left hand to her pussy and touched her clit. Her body jolted and another guttural sound came from her mouth. More rubbing, more tweaking as her body started an involuntary shuddering.",
        "Becky pushed her hand over her muff, \"Please Pat. I'm so sensitive!\"\n\nI looked over at Kathleen and she looked bored with Jerry between her legs. She said, \"Jerry, you're not trying hard enough. Look what Pat just did to Becky.\"\n\nBecky moved to one of the overstuffed chairs, her legs spread and eyes closed. I looked at Julianne and could tell she felt like the odd woman out. I waved her over, \"Your turn.\"\n\nHer face lit up and she crawled over to me. She laid an open mouthed tongue kiss on me then lay on her back. \"Becky's muff juice tastes good, too.\"\n\nHere's where I had started with Julianne. As I started licking her, I felt my cock begin to recover and stiffen. Fluid was flowing from her vagina and I lapped it up. Her pussy was tangier than either of the Finn sisters. The best way to describe Julianne was citrusy. Her taste and scent drove me to maximum hardness. I cleaned up the pussy river then headed for her clit.\n\nIn two days, I had successfully brought two women to orgasm with the same technique, why argue with success? I reached for her ample breast and found a hard nipple. I slid two fingers into her vagina. I had no luck finding her wrinkly spot last time, but maybe I might find something else. I started feeling around, and lo and behold, there is was.\n\nI thought, 'maybe it's not there all the time'. I worked her just like I worked Becky -- nipple, clit, and wrinkly spot. Soon her back arched and a low moan came from her throat. Her pussy started contracting. More information. Damn! I was getting good at this. My cock was rock-hard. How long could I keep her coming?\n\nI kept at it until she pushed my head away from her clit. Then I slid up her stomach and sucked first one nipple then the other. Julianne let loose with an 'aaaaaahhhhhh.' I brought myself up so that my cock touched her pussy. Her mouth was open and she nodded, unable to catch her breath.\n\nJulianne brought her knees up, spreading her legs wide. I placed my cock to her opening and slowly pressed myself into her vagina. Ecstasy twice in one night! Julianne reached for my ass and pulled me into her. Her pussy was contracting on my cock.\n\nAt the ripe old age of 19, I didn't have a lot of technique so I went with brute force. I started slamming my cock into her, my glans penetrating to her cervix. With each cervical strike her eyes went wide. Her breathing was nothing but pants.\n\nI got a little creative and placed her ankles on my shoulders and kept driving. Julianne arched her back taking her weight onto her ass and head, her orgasm had never stopped. After having cum once that evening, I now had some serious staying power. Slam, slam, slam. Finally, I reached the point of no return. I have no idea how much I came, but it seemed to last even longer than when I came into Kathleen. I know that's not possible.\n\nWith her ankles still on my shoulders I pressed down and kissed her. The girl was flexible as hell. Her eyes remained closed, her pussy still contracting on my cock. She held my face and probed my mouth with her tongue. We entwined our tongues for a while, and then I looked into her eyes. She seemed to glow with pleasure.\n\n\"Thank you,\" she whispered.\n\nI rolled off Julianne onto the floor, my cock still pretty stiff. I looked around and the others were just staring at us.\n\nJerry said, \"Damn! You're good, man!\"\n\n_ _ _ _ _\n\nOver the next two weeks, Kathleen, Becky, Julianne, and I fell into a rhythm. According to the schedule, I would close up with one of them. We'd put everything away, retire to the lifeguard shack and then have an evening of amazing sex. Being with a different woman each evening was a thrill all in itself. Never before and never since that remarkable summer have I had such regular sex. It was fascinating watching the four of us become more and more confident in our sexuality. It seemed like every week one of the ladies would bring a new idea for sex to the shack.\n\nLifeguarding was a sexual rush all by itself. These beautiful, buxom moms would come over and chat me up. I'd get to look down at their cleavage and they were usually nipped out. I was amazed at the different sizes and shapes of their nipples. I loved them all. I found that many came over to talk to me after they had gone for a dip, probably to enhance the nippage and pussy exposure. Camel toe was not a term back then, but I saw a lot of them. Many housewives during this time didn't work. Chatting up the male lifeguard while having their nipples and pussy prominently displayed probably gave them a thrill!\n\nOne day I came to work a little early. I had decided that I should swim some laps every day to get in better shape. I left my towel with Jake, who was manning one of the chairs. I swam for about a half hour and when I approached Jake I realized that with the way he was slouching in the chair, I could see right up his shorts. Our shorts had these linings to keep our penises in a nice little pouch, so his wasn't visible.\n\nI thought, 'What if I cut out the lining? All the moms could get a nice look at my cock hanging there.' It wasn't that I needed to get laid anymore, but the idea of a little exhibitionism was arousing. That night I cut out all the linings from my lifeguard trunks.\n\nI started to see some results right away. When I sat in the chair, I'd make sure my cock was in one of the legs of the trunks, usually the left. After a while, I noticed that several women when they came out of the water to talk to me would approach me so that they could take in the trouser snake.\n\nOne mom, Mrs. Sandberg, made a point of standing in front of me so that she maintained a nice view. She was pretty hot in a light blue bikini. Her breasts were large with nipples to match. The bikini fabric was thin enough that you could make out the little ducts surrounding her areola. Occasionally, I could see a wisp of pubic hair curling over the top of her bikini bottom. Neither of us gave a damn if we were caught checking the other. She would give a very flirty smile and just stare while chatting me up.\n\nOne afternoon as Jerry was getting off his shift, I called him over. \"Stand right in front of me and tell me what you see.\"\n\nHe moved in front of me, \"Shit dude. Your fucking dick's hanging out.\"\n\n\"The ladies are loving it!\"\n\n\"Really? How'd you do that?\"\n\nI told him about cutting out the lining. The next day when I arrived at work, he called me over. \"Dude, this works like a charm. The moms are digging on my dick.\"\n\n\"I told you.\"\n\nAbout three days later, I got a call at home from Jerry. \"Pat, can you come in a little early and cover for me?\"\n\n\"What's up?\"\n\n\"Mrs. Reynolds asked me if there was any way we could meet discretely in the guard shack.\"\n\n\"I can cover for you, but you owe me.\"\n\nI showed up about a half hour early and relieved Jerry on the stand. I saw him head off to the shack. A few minutes later I saw Mrs. Reynolds, who had an amazing body, disappear into the shack. About twenty minutes later she reappeared.\n\nA couple minutes later, Jerry came out and came over to me, \"God, that woman can fuck!\"\n\n\"You owe me big time!\"\n\n\"Dude, she is so worth it!\"\n\nI later found out that Jerry, Jake, and Jonas were all getting some major mom pussy on the side that summer. I think the only one of the eight of us that wasn't getting laid was Owen.\n\n_ _ _ _ _\n\nIt was toward the end of June and I was closing with Julianne. The woman was a sexual dynamo. That evening, she had preceded me to the shack and by the time I locked the door and turned around she was naked. To say the woman was exuberant about sex was a severe understatement. She ran over, took part of the equipment, and helped me stow it.\n\nAs she threw her arms around my neck I thought I spotted a tampon string. She kissed me with an open mouth and pulled me over to the couch. I sat down and she straddled me. Yes, that was a tampon string.\n\nJulianne kissed me again, \"Pat, I have huge favor to ask you tonight.\"\n\nI kissed her back, \"And what might that be?\"\n\n\"So, I don't know about your school, but at mine people do a lot of sexual experimenting.\"\n\n\"I think we've been doing a lot this summer.\"\n\n\"Well, I want to take it one step further.\"\n\nI was thinking the tampon had something to do with this, \"What do you have in mind?\"\n\n\"You can't think I'm some city whore.\"\n\n\"Julianne, I would never think that.\"\n\n\"Pat, I trust you.\"\n\nI laughed a little, \"I trust you too.\"\n\nShe took a deep breath, \"I know you saw my tampon. I think that kind of sex is out so... I want you to fuck my ass.\"\n\nI guess my face might have looked a little shocked.\n\nJulianne stated, \"This is a thing. My roommate had her boyfriend fuck her like that. She said it was amazing. Really different, but amazing.\"\n\n\"OK. If you want to, I'm game.\"\n\n\"Here's the thing. We have to be really careful. An asshole is not like a muff. You have to lube me up and you will actually need to fuck me with your fingers to loosen me up. You are going to have a virgin ass tonight.\"\n\nI didn't know what to expect, but my cock was getting hard thinking about all the possibilities.\n\nJulianne said, \"First, we need to measure.\"\n\n\"Measure what?\"\n\n\"To see how best to do this. You need to kneel behind me.\" She got on all fours on the mattress. \"Does your cock line up with my ass?\"\n\nI dropped my trunks and knelt behind her. Lining up my nearly erect penis with her asshole, I found I was a little high. Julianne got a cushion from the couch and knelt on that.\n\nI said, \"I think this will work.\"\n\nJulianne declared, \"Cool.\"\n\nShe ran over to her bag that was on the kitchen counter and came back with a tube of KY jelly and a box of tissues. \"The tissues are for when things get messy. You need to know that I might actually get some shit on you. My roommate said there wouldn't be a lot, but it's a possibility.\"\n\n\"Right now, I just want to do this for you. I think the last time I saw you this excited was when we played spin the bottle.\"\n\nShe kissed me deeply, \"Oh that was great.\" Then she got down on all fours, \"You'll need to squirt some of that on my asshole. Yeah. That's it. Now you need to slowly finger fuck me. First one finger, then we'll add more.\"\n\nI slowly slid one finger in and she shuddered. I started the finger fucking and I could feel her sphincter contracting.\n\nShe said, \"You need to loosen me up. You need to get my ass ready to accept your cock.\"\n\nI pulled my finger out and slipped in two. As I fucked her, I started spreading my fingers apart, working her asshole.\n\nIt didn't seem like I was making a lot of progress, \"I'm going to use three.\"\n\nI put some more lube on my fingers, and held the tips close together. As I penetrated more, I could see I was getting results as her asshole expanded to accept more volume. She was working her sphincter as I pressed it open. I spread my fingers and after several minutes I told her thought she was ready.\n\n\"How hard are you?\"\n\nShe reached around and grabbed my cock, \"Put some lube in my hand.\"\n\n\"I need some too.\"\n\nI kept my fingers in her ass this entire time. Using my left hand, I put some lube on her hand then dipped my fingers in. While she stroked my cock I went for her clit. It didn't take much to get me to maximum hardness.\n\nJulianne said, \"Remember, Pat: an ass isn't a pussy. You can't pound me. You need to let me make the movements.\"\n\n\"That's cool. No pounding.\"\n\n\"Line your cock up on me.\"\n\nI pulled my fingers out of her ass and did as instructed. She placed her face on the mattress and reached between her legs. She grabbed my cock and placed the head at her asshole.\n\nShe said, \"OK, here we go. Nice and slow.\"\n\nShe had a good grip on my penis and I watched with amazement as the head started to disappear into her tight ass. The feeling on my cock was so tight, tighter than any pussy. Julianne kept a steady backward pressure and I felt the head move beyond her sphincter. She released my cock.\n\nI observed, \"I'm in.\"\n\n\"Yeah. Just don't move. I need to get used to this,\" she said with a moan. \"I feel like I need to poop.\"\n\nI saw her muscles contract as she squeezed my cock. I said, \"I felt that. Nice!\"\n\nJulianne started a very slow fucking motion, each time taking a little more of me. Back and forth, inch by inch, I saw her lovely ass accept my cock. The tight pressure was astonishing. And then I was all the way in. She didn't move for several seconds.\n\n\"Are you alright?\"\n\nShe sucked in her breath, \"Yeah. Just getting used to this. Now let's see what this kind of fucking is like. Squirt more lube on your cock when you're nearly out.\"\n\nShe slowly pulled off of me until I felt the head of my cock touch her sphincter. She must have felt it too, because she stopped. I lubed my cock some more and she reversed direction all the way in again. I placed my hand on her hip for a slow back and forth.\n\n\"Pat?\"\n\n\"Yes?\"\n\n\"Is this cool?\"\n\n\"Amazingly cool.\"\n\n\"I want to play with my pussy. Can you just keep up this slow fucking for me? If you go too fast you may tear me up.\"\n\n\"I will go as slow as you want.\"\n\nI began a very slow ass fuck. I wouldn't have thought that fucking that slow would be good, but oh how wrong I was! I had discovered a new sensation and it was incredible! I have no idea how long we fucked like that. It was as if time came to a halt; all my perception narrowed to my penis immersed in Julianne's ass.\n\nShe rose up so that she was on her hands and knees. Then, when the head of my cock touched her sphincter, she pushed back a little quicker than before.\n\nShe said, \"Maybe we can go faster. Don't move. I'll do it.\"\n\nEach subsequent time she would push back a little faster, a little harder. By about the tenth time my cock was slamming into her ass. She pulled off slowly each time, until I felt head-sphincter contact, then slam!\n\nJulianne started panting, and I felt her pelvic muscles contracting on my cock; a steady rhythmic clenching squeezing my shaft. The woman was cumming! She was grunting with each penetration while her pelvic muscles continued contracting.\n\nSix or seven slams later I reached the point of no return. \"I'm cumming!\"\n\n\"In me!\"\n\nOne more slam penetration and I shot my load. She continued fucking me and my cock continued pulsing. How much cum I produced I have no idea; it was all in Julianne.\n\nAfter another minute or so I held her hips tightly against me after I was fully penetrated, \"I gotta stop.\"\n\n\"Just hold me like this. It feels so good,\" she moaned.\n\nWe stayed like that for quite a while and I felt my erection fading. Finally she fell forward, her face to the mattress, so that I fell out of her ass. Her butt was up in the air with a gaping asshole. Julianne grabbed a tissue and wiped her ass. She inspected the result.\n\nI reached for a tissue and she said, \"Don't clean up. I want to see how much blood there is. First, you need to get behind me and catch anything that comes out of my ass. I know that sounds gross, but this is important.\"\n\nI held a tissue under her wide open asshole and she pushed like she was taking a shit. Some cum flowed out.\n\nI looked at it, \"Just a couple little specks of blood.\"\n\nShe took several tissues then came over to me. First, she wiped the little bit of shit that was on the head of my cock. Then, she wiped my shaft, again inspecting.\n\nI said, \"How do you feel?\"\n\n\"Sore. But it's good. I can't believe we did it.\" Julianne threw herself at me and kissed me, \"You, Patrick Sullivan, have successfully popped my ass cherry!\"\n\n_ _ _ _ _\n\nA couple of days later I closed with Becky. After we had stowed everything she led me over to the couch and sat on my lap. She put her legs out to the side and an arm around my neck.\n\nShe kissed me lightly on the lips. \"This has been an amazing summer and it isn't even the Fourth of July.\"\n\n\"Part of me hopes it never ends.\"\n\n\"Same here. Thanks to you I am learning a lot about men.\"\n\n\"I am earning a lot about women from the three of you.\"\n\n\"Which brings me to my point. You are like my little brother that I never had.\"\n\n\"They say incest is best,\" I said with a sly smile.\n\nBecky slapped my chest. \"I want to teach you more.\" I nodded. \"Pat, you are great at fucking and I don't know how you do it, but you are great at making a girl cum. But, someday you are going to have someone special and you are going to have to do things differently.\"\n\n\"I'm listening.\"\n\n\"A girl likes to be romanced. You have to go slow. Get her completely aroused. Oh and hickeys are the stupidest thing ever. Don't ever give a girl a hickey. Use every erogenous zone you can.\"\n\n\"Back up. Erogenous zone?\"\n\n\"All the non-sexual areas that can become very stimulating. Your ears, neck, chest, stomach, thighs, knees, toes. And yes nipples and sex parts, but those come later. For guys it seems like half of you are walking around with a continual hard-on. You just want to fuck. Bang, bang, bang. Cum in the girl's pussy, then you're out of there. Yes, there is a time and a place for raw sex; just pounding pussy.\n\n\"But, unlike guys, women often need to be... shall we say, warmed up. For girls, we also want to be cherished and cuddled before and afterwards. In between, you need to make her cum and you need be inside her pussy, but you don't need to fuck us hard every time. There is a lot to be said for going slow.\"\n\nI sighed, \"I don't know if I should tell you this.\"\n\n\"Please tell me.\"\n\n\"The other day I was with Julianne and she had me fuck her ass. Almost the entire time was really slow. It was amazing.\"\n\n\"Ass fucking? No shit. I have to talk to her about that.\"\n\n\"Alright. So, big sis, teach me. How do I romance you?\"\n\n\"Just relax and respond to me. Then we'll let you try. Let's lie down so I have complete access. You should probably get naked too.\"\n\nI stripped then lay down on my back. Becky stripped off her suit as well and stood over me. What a beautiful woman she was with erect nipples sitting proudly on champagne glass breasts. She had a dark delta of pubic hair, and long, shapely, muscular legs. She straddled my chest, with her muff on my stomach. I reached up for her breasts and she swatted my hand away.\n\n\"You'll get your turn.\"\n\nBecky very gently kissed me, barely touching my lip with her tongue. I opened my mouth, and she traced her tongue across my lips. I tried to touch tongues but she avoided me. Instead, she slid her tongue back to my ear and nibbled softly on my earlobe. As she did that, I felt her breasts touch my chest. Her tongue traced the edge of my ear and a shiver ran down my spine. Becky traced along the valley between my ear and my head, then down my neck. My cock was ramrod stiff and gooseflesh stood out on my arms.\n\nShe drew her tongue along my collarbone then headed south along my sternum. She slid herself across my stomach, her pussy juices leaving a damp trail. As she did that, her pussy made slight contact with my cock. She lifted herself up and over my cock. Becky was now circling my nipples. Damn! I didn't think my nipples worked! She sucked on first one, then the other. I felt her teeth very gently grasp and pull.\n\nNext thing I knew she was between my legs, tracing a path up the inside of my thigh. I felt her nose rub across my balls as her tongue crossed my perineum. She repeated the maneuver on my other thigh. She had brought me to the boiling point without ever touching my cock. I could see pre-cum dripping on my stomach.\n\nBecky scooped up the drop with her finger and stuck it in her mouth, \"That's great stuff.\" She came up and sat on my chest again, \"How did that feel?\"\n\n\"I really need you to fuck me right now!\"\n\n\"Oh, no! Now you're going to see if you can drive me crazy.\"\n\nBecky lay back on the mattress and I came up beside her. I placed my leg over her muff and my cock touched her hip, pre-cum leaking on her. I thought, 'Tease her.' I lightly touched her lips, then I repeated the trail that Becky took -- ear, necks collarbone, sternum, and nipples.",
        "She sounded like a schoolteacher, \"Remember, take your time, this isn't a race. Don't go straight for the nipples, circle around. Yeah, like that. You can drive a woman wild before you ever get to her nipples or pussy.\n\nI said, \"Let me try the leg thing.\"\n\nI started down at her feet on my knees. I took her foot in my hands, brushed some sand off her toes, and then took each toe into my mouth. I sucked on each one.\n\nShe declared, \"God, that's hot!\"\n\nI began kissing up her smooth calf, tonguing my way to her knee.\n\nI looked at her and she smiled. \"You're doing great.\"\n\nI slid my tongue down the inside of her thigh, luxuriating in her soft skin. I could see her juices flowing from her vagina to her ass. I decided to avoid her vulva and went to her perineum. To this day, I can never get enough of a woman's juices. Her taste made me shudder as I lapped up every drop I could find. I took her knees and pushed them up so that her asshole was within reach. I tongued the fluids flowing down her butt crack, and flicked at her anus. I was rewarded with a moan.\n\nI slid my tongue northward and traced her labia, avoiding her clit. Twice I made the circuit of her vulva. On the third pass, I stopped at her perineum and slid between her labia. Pressing my mouth against her vulva, I stuck my tongue as far into her vagina as I could. I slid to her clit and gave her a little flick, then slid back to her opening. I did that about five times.\n\nOn the last time when I got to her clit, Becky grabbed my hair and held my head there, \"Enough romance, you have to make me cum!\"\n\nNow I resorted to my standard technique of nipple, clit, and wrinkly spot. After all that teasing, Becky was ready. It only took a few minutes to bring her to orgasm. Once there I continued teasing. I learned that once I had her cumming, I could keep her there for quite a while so long as I avoided her sensitive clit. Just nipples and wrinkly spot could drive the orgasm, pelvic muscles clenching...\n\nFinally, Becky whispered, \"Fuck me.\"\n\nI slid up and sucked her nipples causing her body to spasm. I slipped my cock into her pulsating vagina then very slowly fucked her. Slow thrusts resulted in pleasurable moans from Becky. She hooked her ankles behind my back and placed her hands on my ass. I maintained my slow pace even when Becky pushed hard on my ass. I was surprised at how long we could go with this slow pace. Finally, I reached my own boundary. I crossed with a few quick thrusts and came into her pussy.\n\nBecky's eyes opened and she smiled, \"I think you have learned well.\"\n\n_ _ _ _ _\n\nOver the next two evenings I tried my newfound romance techniques on Kathleen and Julianne. The results were amazing. I found that the slower I went, the greater the tension that built up. The greater the tension, the greater the release. I experimented with how to maintain a woman in orgasm for the longest time possible. I found that the clitoris was key to bring her to orgasm, but the wrinkly spot was the key to making it last.\n\n_ _ _ _ _\n\nIt was the second week in August. Everyone was talking about going back to college. I was getting a little bummed that this magical sexual summer was coming to an end. I came in early and swam my laps, taking my time coming out of the water so that my trunks clung to my cock. I walked over and talked to Jerry on one stand, then visited with Julianne on the other. I always had some eyes on me and it was a turn on giving the moms a very minor show.\n\nI noticed a woman lying on a blanket on the far side of the beach. She was on her stomach, propped up on her elbows so she could see what was going on. She wore a white bikini, but I couldn't see any detail.\n\nI went over, relieved Julianne, and settled in for a shift of staring at the swimmers. So far we had had zero incidents and I was hoping we could record the first summer in twenty years without a drowning.\n\nI noticed the woman with the white bikini on the far raft. She looked familiar, but I couldn't place her. From forty yards away she looked stunningly beautiful. She dove into the water and swam until she was directly in front of me, then turned and swam at me. Touching the bottom, she slowly started walking toward me. I couldn't take my eyes off of her as she emerged from the water.\n\nShe had long, brown hair. The white bikini consisted of triangles and strings, strategically covering her body and showing more skin than usual. Two small, wet triangles covered a most magnificent pair of breasts; dark areolas were clearly visible surrounding, hard, upturned nipples. The top was tied at her neck and back with strings. The bottom consisted of two slightly larger triangles tied at her hips with bows. A lovely mons with dark pubes could be seen through the fabric, a nice thigh gap capped two amazing legs.\n\nAs she arose out of the water I was transfixed. She waved at me, smiled, and said. \"Hi Pat.\"\n\nShe looked familiar, but I couldn't place her. Then it hit me: Marianne Thorborg.\n\n\"Marianne!\" I jumped down from the stand, she ran out of the water as I ran in. I had her in a bear hug; her breasts pressing into my chest. \"Oh my god! Marianne, I haven't seen you since what, eighth grade?\"\n\n\"Yeah, that's when we moved away.\"\n\nGrowing up, Marianne lived two blocks from my house and we walked to and from school together every day from kindergarten through the end of eighth grade. We did everything together. When we were in third grade, I remember stopping in the park by the fountain where we promised that we would love each other forever. When her family moved away the summer before we started high school I was heartbroken. I wrote her long love letters because in those days we didn't have social media to keep in touch. I kept three pictures of her on my dresser, but with time and distance she faded from memory. I always wondered what had happened to her.\n\nI saw Becky come and relieve Jerry. I called him over. \"Yo Jerry, remember how you owe me?\"\n\n\"Yeah.\"\n\n\"I need you to cover for me for an hour.\"\n\n\"Alright. Let me grab a sandwich from the shack fridge and I'll take it.\"\n\nI turned to Marianne, \"I'm on duty until Jerry gets back but I don't have to be up in the chair. So how have been? Where have you been?\"\n\nMarianne said, \"University is great. I got a full scholarship to Cornell,\"\n\n\"Wow! Ivy League.\"\n\n\"I'm studying German and I just got back from Germany yesterday. I had a very interesting internship. I stayed with my grandmother.\"\n\nGrowing up, Marianne and her three sisters went to Germany a couple of times a year to stay with their family. As a result she spoke German like a native.\n\nI asked, \"So what brings you to town?\"\n\nShe blushed, \"You. At least I hoped to see you. I'm staying with Mary McCormick, remember Mary?\" I nodded. \"She also goes to Cornell and she invited me to come and stay for a week or two when I returned. Here I am!\"\n\nShe put her hand on mine. I was speechless.\n\nMarianne continued, \"Mary and I called around to see if you were in town and she heard you were working here.\"\n\nJerry had returned with a sandwich. \"OK, I got the watch boss.\" He climbed up in the chair.\n\nI said, \"Let's go sit down.\"\n\nShe hugged me again. It was wonderful holding her in my arms.\n\nShe declared, \"Oh, Pat. It is so good to see you!\"\n\nMy brain was on overload. The girl I had loved for years had returned as a stunningly beautiful woman. We sat on the park bench and I could see Becky checking me out. Tonight was supposed to be my night with her. I might have to figure something out.\n\nMarianne asked, \"So how about you?\"\n\n\"I'm going to Tech. Studying engineering.\"\n\n\"Are you seeing anyone?\"\n\n\"No one steady. How about you?\"\n\n\"I went with this guy in high school, senior year. Want to know something?\"\n\n\"What?\"\n\n\"I always compared him to you.\"\n\nI blushed a little, \"I still have the three pictures you gave me. They're on my dresser.\"\n\n\"I still have your pictures. I still have your letters. I'm sorry I didn't write more.\"\n\n\"It's hard when you don't see someone for years and years.\"\n\nIt felt like every person on the beach was looking at us. I suggested, \"Let's go for a walk. They built a nice path around the lake.\"\n\nMarianne looked around and whispered, \"Lots of eyes.\"\n\n\"Yeah.\"\n\nWe got up and started walking clockwise around the lake. Most of this new walking path was in the trees so we would be away from prying eyes. We crossed over a small bridge and into the woods.\n\nMarianne reached for my hand, \"Remember walking home from school?\"\n\n\"One of the best parts of every day.\"\n\nShe said, \"I still remember the first time I held your hand.\"\n\nI searched my mind, but I couldn't remember.\n\nMarianne continued, \"I think we were in second grade. We had walked home so slowly that the crossing guard had left the crosswalk in the middle of town. We waited and waited and I started going for some reason, but you grabbed my hand and pulled me back. If you didn't, I would have been hit by a car. You never let go until we got to your house. I think you held my hand every day after that.\"\n\nThe memory sparked a smile, \"I do remember that.\"\n\nShe said, \"I remember all the boys making fun of us, mostly making fun of you. You'd yell back, 'You're just jealous because she's the prettiest girl in the world!'\"\n\n\"I was right. You still would be except now you're the most beautiful woman in the world.\"\n\nMarianne stopped walking, I turned to her. She leaned forward and gave me a soft kiss. Her lips lingered on mine. I didn't dare open my mouth unless she did.\n\nShe eased back and I opened my eyes. She took my other hand, \"Remember when we first kissed?\"\n\n\"I do. It was seventh grade in the woods behind your house.\"\n\nMarianne continued the story, \"It was a Saturday and you came over to work on a school project with me. My mom fed us lunch and told us to go out and play because it was such a nice day.\"\n\n\"I remember it well.\"\n\nMarianne leaned forward and placed her hands behind my neck. My hands went to her hips and she pressed her body against me, her breasts against my chest. She kissed me again. This time I felt her mouth open and I extended my tongue. My cock stirred. We stood there in the middle of the path like that for several minutes. Finally, she broke the kiss. She took my hand and started strolling again.\n\n\"When Mary found out that you worked at the lake, I dug out this bikini. It's European. On the beaches in Germany most of the girls go topless.\"\n\n\"Did you go topless?\"\n\n\"I did after a couple of weeks. Boobs aren't sexualized over there, like here in America. Nearly all the women on the beach go topless. I think the guys look, but they're very casual about it.\"\n\n\"God, I would have loved to be there.\"\n\n\"I would have loved for you to be there.\"\n\n\"Really?\"\n\n\"Really. When I saw you walking on the beach I tried to figure out how to approach you. When I saw you on that lifeguard stand, I planned it so I would come out of the water right in front of you.\"\n\n\"I saw that. You were like a vision.\"\n\n\"Want to know something?\" She stopped walking again and faced me.\n\n\"What?\"\n\n\"I pinched my nipples before I came out of the water so they would be hard when you saw me,\" she said looking downward. \"Do you like this bikini?\"\n\n\"Marianne, you're beautiful.\"\n\n\"Yes, but do you like my bikini?\"\n\nI looked down at her beautiful body. Her nipples were still hard. The outline of her pubes could be seen clearly. \"I love your bikini and everything in it.\"\n\nShe put her arms around my neck and kissed me with an open mouth. I put my arms around her and pulled her close to me, my cock rapidly stiffening in my swim trunks.\n\nShe broke the kiss. She stepped back and smiled at my bulge. She took my hand and continued walking.\n\n\"So, that guy, you called him Jerry?\"\n\n\"Yeah.\"\n\n\"He called you boss?\"\n\n\"I'm the head lifeguard. I make an extra buck an hour. The only thing I had to do was hire the staff and write the schedule. Oh, and submit our timecards each week. Easiest buck ever!\"\n\n\"When do you get off?\"\n\n\"Would you like to do something this evening?\"\n\n\"I'd love to.\"\n\n\"You will have to excuse my car. It is an absolute beater; an old, rusted out Rambler American. But it runs like a top.\"\n\n\"You were always good with mechanical stuff. How many times did you fix my bike?\"\n\n\"Too many. We close up the beach at seven. I could pick you up at eight or so. I need to clean up.\"\n\n\"That would be nice.\"\n\n\"Does Mary still live on Elm Street?\"\n\n\"Yup, number 11.\"\n\n\"We could go for pizza or if you wanted to be fancy, we could go to the diner. Remember, there aren't too many options in this town.\"\n\n\"I don't care where we go, as long as I get to go with you.\"\n\nWe had circumnavigated the lake and we emerged out of the trees.\n\nMarianne said, \"I'm so glad I found you.\"\n\n\"Someone up there's looking out for us,\" I said with a quick upward glance. I smiled. \"God, you are beautiful!\"\n\nShe kissed me one last time, \"See you at eight.\" She ran to her blanket. She always had this funny way of running on her tiptoes. It may not have been graceful, but I found it adorable. She collected her things and put on a robe and flip-flops. She waved as disappeared out the gate and around the corner.\n\nI guess I had been standing there for a while when Becky came over and put her arm around my waist. \"Little brother, you look thunderstruck. Who was that?\"\n\n\"Oh sorry. That's Marianne Thorborg. She was my best friend growing up. I haven't seen her in five years.\"\n\n\"If I was a betting woman, I would bet you were madly in love with her then!\"\n\n\"I was.\"\n\n\"And I bet you just fell back in love with her.\"\n\n\"Is it obvious?\"\n\n\"Pat Sullivan, a woman knows these things.\"\n\nWe turned and started walking back to the beach with her arm still around my waist, \"I understand if you want to go see her tonight.\"\n\n\"Becky, please don't think...\"\n\n\"Shush. There is no way you are going to be able to properly fuck my brains out tonight if you are thinking about Marianne. You'll just have to make it up to me next time.\"\n\nI smiled, \"Thanks Becky.\"\n\n\"I just hope I meet someone someday that will love me like you love her. Remember all the stuff I've taught you this summer: romance.\"\n\n\"Romance.\"\n\n_ _ _ _ _\n\nI picked Marianne up a little before eight. She wore some low, hip-hugging jeans. Her navel was bare below a white tube top, obviously braless. Her nipples pressed outward and provided a significant distraction. Nevertheless, I tried hard to focus on her eyes through dinner. What lovely brown eyes... I remembered all those times as a child I had gazed into them. We would spend hours talking about all sorts of things, but we always maintained eye contact.\n\nWe had a nice dinner together. Marianne still liked plain cheese pizza, although I did convince her to get crazy and add extra cheese. Rather than beer, I ordered iced tea and she followed my lead. I wasn't going to have alcohol cloud a moment of my time with her. We spent the dinner catching up and reliving old memories. Several times she reached over and held my hand, all the time gazing into each other's eyes. I was in heaven.\n\nThe previous night I had remarked to Kathleen how amazing the stars were on a moonless night. We had sat on the park bench after our sexcapade with my arm around her, looking at the Milky Way. I thought this evening could start out in a similar manner.\n\nAs we were walking to my car I said, \"Did you know the stars on a moonless night like this are incredible?\"\n\n\"That's my astronaut.\"\n\nGrowing up I had dreamed of being an astronaut. \"We have to get away from the lights though. There's a nice meadow up by Pioneer Cemetery where we could lie down and look at the stars.\"\n\n\"Patrick, as long as it's with you I would go anywhere,\" she said squeezing my hand.\n\nWe drove to the cemetery road, about two miles outside of town. It sat on a little knoll. To the side was a grassy meadow the town had purchased for expansion, but had never developed. I parked on the side of the road and retrieved a quilt and flashlight I had thrown in the backseat.\n\nMarianne had gotten out, and when I closed the back door we were consumed by darkness. I turned on the flashlight and she put her arm around my waist. We walked over to the meadow and selected a spot of soft grass. The Milky Way runs north-south and I positioned the quilt so the sky would be spread out before us.\n\nMarianne sat on the quilt and I turned off the flashlight.\n\nShe said, \"Wow! It is really dark.\"\n\nI sat down on the quilt, \"We just need to let our eyes get used to it.\" I lay back on the quilt and reached for her. I'm pretty sure I touched a bare breast.\n\n\"Oh, you found me out!\"\n\n\"Are you naked?\"\n\n\"I took my top off just for you.\"\n\nMarianne felt around and found me.\n\nI said, \"Let me take my shirt off too.\"\n\nI pulled my polo shirt over my head. I put my hands on her nude back and pulled her against me, her breasts against my chest.\n\n\"Pat?\"\n\n\"Yes, Marianne.\"\n\n\"I have something really important to ask you.\"\n\nPart of me was suddenly was in dread, but then another part was excited. Hell, this woman had just stripped off her top for me. It was silent for a while.\n\nI broke the silence, \"Marianne, you need to know that I love you more than anyone else in the world. You can ask me anything.\"\n\n\"OK. Pat you can't think bad things about me.\"\n\n\"Never.\"\n\n\"I want to make love to you.\"\n\n\"So the most beautiful woman in the world wants to have sex with me. I would be an idiot to say 'no'.\"\n\n\"Not sex. I want us to make love to one another. You also need to know that I'm still a virgin.\"\n\nThat blew my mind, \"Oh.\"\n\n\"Pat, it's not like I was saving myself for you, but I always wanted my first time to be with the right person. No one has ever been right. Actually, no one measured up to you. So really, I saved myself for you.\"\n\n\"I don't know what to say.\"\n\n\"'Yes' would be nice.\"\n\n\"A thousand times yes!\"\n\n\"I know you will be gentle and caring. You've probably had a lot of sex. The only thing I've done is given a couple of blow jobs. I'm not very good.\"\n\nMy mind started racing. OK. Her first time. Julianne! Julianne's first anal turned out because she controlled it. Romance. Tease her like crazy. Orgasm. Probably can't use the wrinkled spot since she has a hymen. Have to go with clit and nipple. God, Marianne must taste heavenly!\n\nI said, \"I am honored to be your first lover. I will do everything I can to make this a memorable evening for you.\"\n\nBy now my night vision was fully adjusted. I could make out her face and breasts in the starlight. Marianne climbed on top of me, positioning her pussy on my crotch. She lay on top of me with her elbows on either side of my face, her breasts touching the hairs on my chest.\n\nShe softly kissed me, \"Something else. My grandmother got me on birth control. My mother is too much of a prude to even talk about that stuff. Oma is so cool and hip. She even went topless with me on the beach1\"\n\n\"Oma went topless with you? Are you sure the guys didn't stare?\"\n\n\"They probably did.\"\n\nI had met Oma about ten years ago. She was probably in her fifties at the time and looked magnificent. Marianne's mom was pretty, but her grandmother was knock-dead gorgeous.\n\nMarianne started kissing me, gently probing my mouth. I kept thinking, 'Slow. Go slow.' I ran my hands up and down her back. The night was warm and I wasn't afraid of us getting cold. I tucked my hand into the back of her jeans.\n\nShe spoke into my mouth, \"Don't think I'm rushing things, but we have far too many clothes on.\"\n\n\"Agreed.\"\n\nMarianne rolled off of me. I have pretty good night vision and although it was quite dark, I could make out her areolas on her breasts. I raised my butt and pushed my jeans and boxers off. As I pushed them to my ankles, I looked at Marianne. She had stood up and was wiggling her hips to get her tight jeans off. I could see her jeans fall and a dark delta of pubic hair appeared.",
        "I could see her feeling for me. \"It is so dark.\"\n\nI reached for her hand, guiding her to the quilt, \"Marianne, lie down. This needs to be all about you.\"\n\nShe knelt down beside me, put her hands on my face, and kissed me again.\n\nI said, \"By the time this evening is over, you will know how much I treasure and love you.\"\n\nShe lay down on her back. I settled over so that we were face-to-face, my leg across her pubes. My cock touched her leg and she grabbed me.\n\nMarianne whispered, \"I can see you against the stars.\"\n\nI gently kissed her, probing her mouth with my tongue. I went through everything Becky had taught me about romance. I went through all the erogenous zones, going extra slow and savoring each sensation. Ears, neck, collarbone. As I moved lower, my erection slid on her silky hips.\n\nFrom her collarbone, down her sternum to the heavenly valley. I kissed my way all the way around one breast then the other. I heard a whimper pass Marianne's lips. 'Keep teasing her,' I thought.\n\nAfter one circuit of those magnificent breasts, I began inching closer to the center. When I reached her areola, I switched breasts. Gooseflesh was under my tongue and it wasn't because the air was chilly. As I approached her areola on my second pass, Marianne whispered, \"Pat, you're torturing me.\"\n\nI feigned shock, \"Me?\"\n\n\"Suck on me. Please.\"\n\nI barely touched the tip of her nipple with my tongue. She groaned and arched her back to maintain contact. Her hands pressed my face to her breasts and I mouthed that luscious nipple, then a gentle suck which caused a moan. I moved to the other breast and repeated the strategy. My mind was incredulous that I was actually sucking on Marianne Thorborg's breasts! I continued working back and forth between these two natural wonders.\n\nFinally, I started moving lower. I slid my tongue across her stomach and pressed my face into her pubes, breathing in her scent. Then I leaned back on my knees, held up her right leg, and began kissing her knee. Soft little kisses down the inside of her smooth thigh led to more gooseflesh. When I got to within a few inches of her vulva, I began licking again. As I crossed her perineum, I had my first taste of her.\n\nWe both moaned and I heard her laugh, \"Oh Pat, you have me ready to burst!\"\n\nI sucked all the fluid flowing from her opening, then moved to her other knee, repeating the maneuver down to her vulva. I moved my tongue up one side, then skipped over her clit and slid down the other. Each time I passed her perineum I lapped up her juices.\n\nFinally, I slid my tongue up, parting her labia. She grabbed my hair, but didn't impede my progress. She placed her feet on my back and spread her legs wide. When I touched her clit, she shivered.\n\nI reached up with both hands and took her nipples between my fingers, gently tweaking them as my tongue flicked her clit. After every few flicks, I'd tongue her opening, and then return to her pleasure center. My time between her legs felt timeless, but eventually she came, squeezing my head between her thighs.\n\nI let her orgasm subside, \"I'm going to lie on my back. Climb on top of me.\" Marianne did as I bid. I said, \"You're in control. That way I won't hurt you.\"\n\nShe kissed me gently. She reached between her legs, took hold of my cock, and then leaned back. She lifted her hips and I felt her hold my penis at her vagina. Ever so slowly she lowered herself onto my cock. She pressed down and I must have broken her hymen because I heard a little gasp.\n\nI whispered, \"Are you OK?\"\n\n\"I am SO OK.\"\n\nMarianne lowered herself so that I was completely in her pussy. She was nearly as tight as Julianne's ass. Slowly she started moving herself up and down. I placed my hands on her hips, enjoying the sensations. Her hands were on my chest. I could see that she had her head back, silhouetted against the stars.\n\nHer body was slowly moving in rhythm. She discovered the grinding, back and forth motion that maximized clitoral simulation. After a summer of sexual activity, I had some serious staying power which allowed Marianne to discover new sensations with our genitals coupled. I reached up and took her nipples between my thumbs and forefingers, gently rubbing them.\n\nOur love making session was the longest I had ever had and the most sensual experience of my life. Eventually I heard her start to pant, and as her pussy began contracting on my cock I knew she had driven herself to another orgasm.\n\nI had been able to stave off my own orgasm, but her contractions sent me over the top, \"Here I come, my love!\"\n\nMarianne increased her hip motion and I arched my back, lifting her knees off the ground as I shot up into her. Three times I arched my back until I was done. She settled down and lay on top of me. Her open mouth found mine and our tongues entwined. Marianne rested her head on my chest, my cock still in her pussy. I put my arms around her.\n\nShe said softly, \"I remember when my sister Karen told me about her first time. It sounded like a nightmare. She said it hurt like hell. The guy rushed things because he was so excited about popping her cherry. She told me that he tore up her vagina and she had blood running down her legs afterward. It sounded more like rape.\"\n\nI felt some dampness on my chest. I reached up and put my hand on her face. Tears were flowing.\n\n\"Pat, tonight was everything I ever dreamed it would be. Making love to you was magical. You called me 'love'. You are my love, too.\"\n\n_ _ _ _ _\n\nI was awakened by Marianne petting my face. Her face was inches from mine. Dawn was approaching in the eastern sky, casting a rose-colored tint to her skin.\n\n\"There he is. We must have fallen asleep.\"\n\nShe rolled off of me and I felt my flaccid penis fall out of her pussy.\n\nShe smiled, \"I slept with you inside me. How much blood is there?\"\n\nIt was still too dark to see well. I found the flashlight and pointed it at my cock, \"Not a lot.\"\n\nShe asked, \"What time is it?\"\n\nI looked at my watch, \"I little before five. I suppose I need to take you to Mary's house.\"\n\n\"Her mom is cool. She won't give me shit about staying out all night.\"\n\n_ _ _ _ _\n\nOf course I had to work the next day. The beach was pretty crowded. Marianne came with Mary. Mary was a beautiful blonde, but next to Marianne she seemed plain to me. She had a very nice figure and her light green bikini went so well with her skin color.\n\nWhen I arrived, Jake was sitting on their blanket chatting them up, most likely hitting on Marianne. When Marianne saw me, she ran over and gave me a big hug: a not so subtle message to Jake that she was spoken for. Jake had been in most of our classes growing up so he knew our background. If my memory served, he was one of the guys who teased me about having a girlfriend. I walked over holding Marianne's hand.\n\nMary stood and gave me a nice hug, pressing her breasts into me. \"Pat, it's so good to see you. Isn't it great having Marianne here?\"\n\n\"More than you will ever know,\" I said sharing a smile with Marianne.\n\nJake said, \"Boss, just so you know I'm on break.\"\n\n\"Dude, I trust you.\"\n\nI turned to Marianne, \"I have two hours on, and then I have a break.\"\n\n\"That's fine. It's nice being down here with you.\"\n\nShe gave me a little kiss as I headed for the lifeguard stand.\n\nAs I approached Kathleen she was grinning. \"You look like you are glowing.\"\n\n\"I'm pretty happy.\"\n\n\"Becky told me. I think that is so cool. I'm so jealous of your girlfriend, but it is so cool that you have someone like that.\" She jumped down and gave me a hug. \"My turn on the raft,\" she said diving into the water.\n\nThe afternoon seemed to move quickly. Becky relieved me on the stand and I took Kathleen's spot on the raft. Marianne and Mary swam out and kept me company. It was very hard to watch the swimmers when my eyes were constantly drawn back to Marianne.\n\nAt the break, I joined them on their blanket. Marianne had brought me a ham and cheese sandwich, just the way I liked it. After my break, they headed home. I was going to pick her up again at eight, this time to the diner for dinner.\n\nI closed with Julianne. She was grinning from ear to ear.\n\nFinally I said, \"Julianne you are so happy. What happened?\"\n\n\"I'm happy for you! Kathleen told me about your girlfriend.\" She ran over and gave me a tight hug. \"Pat, I think that is wonderful. I'm not happy that you aren't going to make me cum tonight, but am happy for you.\"\n\nI pulled her tight and gave her a kiss. \"I would have thought the three of you would have been a little put out about her.\"\n\n\"Oh, we're not happy that the sex has stopped for a couple of days, but we are very happy for you.\"\n\n\"You have no idea how much I love the three of you.\"\n\n\"We love you too. That's why we're happy.\"\n\n_ _ _ _ _\n\nAt dinner we discussed our hopes and dreams. They were focused on professional things. Marianne wanted to be an interpreter. I had dreams of flying. By some unspoken agreement, we didn't discuss how we fit into each other's plans.\n\nAs we were walking to the car I asked, \"Would you like to go up to the cemetery again?\"\n\n\"Actually, I was hoping we could go back to the lake and go swimming together.\"\n\n\"Technically, it's closed. I guess if a cop saw us I could say I opened it up again as head lifeguard.\"\n\n\"I hope a cop doesn't see us. I want to go skinny dipping.\"\n\n\"Oh.\" In hindsight, I have to say that sometimes I was a bit dense.\n\nI drove to the lake and parked on the street. I suggested that we could leave our clothes in the shack and run across the beach.\n\nMarianne said, \"Why run? Maybe someone will see us. Wouldn't that be exciting?\"\n\n\"Something tells me that going topless on those German beaches was quite a turn on for you.\"\n\n\"Pat, I would have to jump in the water to hide how wet my bikini got!\"\n\n\"So will walking nude across our beach get you wet?\"\n\n\"Let's find out!\"\n\nI opened the shack and we went inside. \"Would you allow me to remove your clothes here where I can see you?\"\n\nMarianne smiled and put her hands behind my neck, \"I'm all yours.\"\n\nShe was wearing a light blue sun dress with yellow flats. She instructed, \"You just have to pull my dress over my head.\"\n\nI reached down and grabbed the hem of her dress, slowly raising it. A pair of white panties was revealed and then her beautiful bare breasts. I knelt before her, taking a nipple into my mouth. She held my head as I gently sucked first one, then the other. I brought my face down to her panties and kissed where her labia were, breathing in her scent. Then I hooked my fingers into her panties. I slowly lowered them, exposing her lovely delta. I let them drop and placed my nose into her pubes, luxuriating in her pheromones.\n\nMarianne said, \"My turn to undress you.\"\n\nShe took my hand and pulled me over to the air mattress. I was wearing a dress shirt and jeans. She slowly unbuttoned my shirt and pulled it open. Rather than pulling it off me, she ran her fingers through my red chest hair.\n\n\"When we were kids you didn't have all this hair. I really love it.\"\n\nShe leaned up and kissed me. Marianne reached around and grabbed my ass. \"I also really like your butt.\"\n\nShe unbuckled my belt, undid my fly, and pushed the jeans down. I stood before her in my tented boxers.\n\nShe said, \"I think I like this kind of underwear rather than those tight things so many guys wear.\"\n\n\"Briefs?\"\n\n\"Yeah, briefs.\"\n\nShe knelt before me on the air mattress and lowered the boxers. My cock sprung up.\n\nShe immediately forgot about moving the boxers lower. \"I really didn't get to see your penis yesterday.\" She took the shaft in her hand and gently touched me with her finger. She took her other hand and ran it through my red pubes.\n\nShe smiled, \"I know we're supposed to be skinny dipping, but can I just play with you a little?\"\n\n\"Yes, you may. Perhaps it would be easier if I lie down.\"\n\n\"Good idea.\"\n\nOnce I was prone, Marianne got very close to my cock, studying, touching, and kissing it. She took the head into her mouth and gently sucked. \"Pat, you are so beautiful. I have only seen a couple of penises up close and I thought they were kind of gross. In fact, I thought there was something wrong with me. Girls are supposed to like penises.\" She smiled at me and said, \"I love your penis.\"\n\nMarianne started sucking on me and stroking my shaft. For someone who hadn't liked penises before, she sure knew what she was doing. In addition to blowing my cock, she was blowing my mind! She was damned good at this. In no time she had me groaning.\n\nHer mouth and hands drove me to the edge. \"Marianne, I'm going to come.\"\n\nShe pulled her mouth off, but continued stroking, pointing my cock straight up. A string of com shot into the air and landed on my chest.\n\nNow she wrapped her mouth around my cock, sucking hard. I was still cumming and several follow through shots went into her mouth. When I had stopped, she started licking up cum. \"I really like the way you taste. You aren't salty like the others I've tasted.\"\n\nI sat up and pulled her to me; pressing the cum on my chest between our bodies. I probed her mouth with my tongue. I thought, 'No, I wasn't salty this time.'\n\nI tried to remember my German. \"Baden Fr\u00e4ulein?\"\n\nShe laughed, \"Ich w\u00fcrde gerne.\"\n\n\"Which means?\"\n\n\"I would love to.\"\n\nI could see that leaving the shack unlocked might be problematic, \"I'm going to lock this and put the key down by the water. I could just see someone coming in here and stealing our clothes.\"\n\nThe beach wasn't well lit. There were two street lights, one on either end. Walking to the beach hand-in-hand, it was quite dark. I put the key under the park bench, and then led Marianne into the water. She dove in and I followed her. I surfaced in shoulder deep water. Marianne swam over and clung to me. She wrapped her legs wrapped around my waist, her pubic mound pressed into my stomach.\n\nShe kissed me, \"You will never guess how I know about blow jobs.\"\n\n\"You mentioned something about giving a couple in college, but something tells me there is more to this.\" It dawned on me. \"Oh! Oma?\"\n\n\"Oma. We were talking one evening and she asked about you. I told her how much I missed you. She asked about my sex life and I told her that I pretty much didn't have one. She thought that was terrible. I told her about how I was going to try and find you when I got back and that's when she got me on the pill. She taught me about sex and told me what losing my virginity would be like. Last night was so much better than how she described it. Then she asked me if I knew about men and penises in general. She brought out two very realistic dildos, taught me how a penis worked, and how to give a blow job.\"\n\n\"Well, in my limited experience I think she did a great job teaching you.\"\n\n\"Was I good?\"\n\n\"You were incredible!.\"\n\nMarianne wrapped her arms around my neck and kissed me deeply. What a wonderful sensation that was having our naked bodies pressed together; our lips and tongues together.\n\nShe asked, \"Will you hold me up while I float?\"\n\nMarianne let go of me and leaned back in the water. I placed my hands under her back. My night vision had adjusted and I could see her breasts creating islands in the water. I leaned forward and gently kissed the closer nipple.\n\nShe said, \"The water feels so good on my naked skin. I wish we could swim like this always.\"\n\nEventually we emerged from the water and retired to the guard shack. Marianne placed a towel on the air mattress and laid down on it. Her legs were slightly spread and she beckoned to me. I lay partially on her, our mouths exploring. The time in the water had given me time to recover and I could feel my cock stiffening again. I went through Becky's romance path again and by the time I got to Marianne's pussy, her juices were flowing freely.\n\nI hadn't had a chance to see her up close. Marianne had what is frequently referred to as an 'outie pussy'. Her delicate labia minora looked like a flower in a Georgia O'Keefe painting. Her clit barely peeked out from the top of her slit. Charlize's vulva was similar, and I knew that the labia could be an additional source of pleasure. I slowed down my licking so I could savor every second.\n\nAgain, my mind was incredulous that I was actually lapping at Marianne Thorborg's pussy! I used every trick I knew. I brought her to the edge of the orgasmic cliff several times and backed off; teasing her and building her sexual tension. Finally, as she approached one last time she pleaded with me and I happily brought her to orgasm. I used my nipple and wrinkly spot technique to keep her cumming.\n\nMy cock was ramrod stiff, but I waited. To this day I get as much pleasure giving an orgasm as I do receiving one. I wanted this love making session to set a standard that would be hard to top.\n\nFinally, I climbed on top of her and gradually inserted my cock in her pulsing pussy. I placed her ankles on my shoulders providing maximum penetration. Having already cum once that evening, I had much greater staying power. I slowly thrust into her. Marianne's eyes were wide, her breath coming in short pants as her orgasm continued. She reached up and cupped my face in her hands. As I felt my own orgasm coming, I released her legs from my shoulders, then leaned in and kissed her. I kissed her deeply as I came in her, my body bucking with each cum shot.\n\nMarianne petted my face, \"Pat, I don't know how you did that, but that was even better than last night!\"\n\nI just smiled and kissed her again.\n\n_ _ _ _ _\n\nMarianne was in town for a total of seven remarkable days. While we didn't make love every day, it was nearly every day. Days three and five she said she was too sore. On those days we pleasured each other orally. We spent as much time together as possible. For my day off we drove up to the National Forest and had a picnic at a meadow surrounded by woods, making love in the shady grass afterward.\n\nOn days I had to work, she came and hung out at the beach with Mary. She became friends with Julianne and the Finns. I don't think any of them let on about our sexual adventures. Jake, Jonas, and Jerry were falling all over themselves being nice to her.\n\nOne evening after work, I took all four ladies to the diner. We had a wonderful time and I felt like the luckiest guy on earth to have four startlingly beautiful female friends. The conversation was light and cheerful. I thought that Becky, Kathleen, and Julianne were really pleased to see me happy with Marianne.\n\nOn her last night in town, Marianne and I went back up to the cemetery. After we made love, we lay under the Milky Way. We decided that it would be best if I didn't see her off in the morning. Mary's mom was driving her to a truck stop halfway between our towns where her mom would pick her up.\n\nI think both of us were hesitant to promise too many things, although we did promise to keep in touch. I reminded her of our third grade promise to love one another forever. I told her that that was a promise I intended on keeping to my dying day.\n\nI dropped her off at Mary's house around five that morning. I got out of the car and gave her a long hug. She didn't say a word, but tears were streaming down her face. She kissed me and ran into the house with that endearing tiptoe run of hers. She closed the door and I could see her face in the window as I drove off.\n\n_ _ _ _ _\n\nIt was the Friday of Labor Day weekend: three days after Marianne had left. I had closed up with Kathleen and we were on the mattress naked, she was straddling me with her pussy on my stomach. We were just making out, enjoying one another.\n\nKathleen stopped kissing me. \"The girls and I were talking and we think we need to have a group fuck fest.\"\n\n\"A group?\"\n\n\"Just you and your harem.\"\n\n\"My harem? You call yourselves my harem?\"\n\n\"Yeah, Pat's harem.\"",
        "\"And what would this fuck fest look like, other than obviously having a lot of fucking?\"\n\n\"We would use the spin the bottle rules, but we would take turns asking each other to do something rather than using a bottle. That way it's more fair.\"\n\n\"I like that.\" Then I had an idea. \"What if I invited someone to partake in my harem?\"\n\n\"Like who?\"\n\n\"Owen.\"\n\nKathleen asked, \"Owen? Really?\"\n\n\"I think all of us have been getting laid all summer. The other guys have been bagging all the moms on the beach. I know that Jerry and Jonas have girlfriends. Hell, have you noticed the regular rotation through this shack?\"\n\n\"That's why I have that can of Lysol over there.\"\n\n\"I don't think Owen has even ever kissed a girl.\"\n\nKathleen asked, \"You think he's a virgin?\"\n\n\"I know he's a virgin.\"\n\nKathleen declared, \"Oh that would be so fun! One of us can be his first!\"\n\nI asked, \"When would we do this?\"\n\n\"Tomorrow night. We'll bring Owen.\"\n\n_ _ _ _ _\n\nBecky and I closed up on Saturday night and were sitting on the couch in our swimsuits drinking a beer when we heard a car drive up outside. We went to the door to see that Julianne and Kathleen had Owen wedged between them in the front seat. They got out and I noted that they both were wearing two of the wonders of the age -- tube tops and hot pants. Of course, they were braless under the tops and were both sporting some nice nippage. Hot pants emphasized their labia -- in the Twenty-First Century we call it camel toe.\n\nWhether it was then or now, Owen would be called a geek. He had a small, sinewy body topped with a shock of blonde hair. Academically he was brilliant. Socially, not so much.\n\nWhen they got out of the car, Julianne handed him one of the six-packs and took the other while Kathleen carried the pizza. We settled on the chairs and couch. Becky had Owen sit between her and Kathleen, while Julianne came and sat on my lap. We talked shop while we ate the pizza. Owen asked me about Marianne and I explained how she grew up here. He said he remembered having her in one of his classes in elementary school.\n\nAfter we finished eating Becky said, \"So Owen, we're going to need your assistance.\"\n\nHe nodded, \"OK.\"\n\nBecky continued, \"Well, we have a situation similar to that of Zeus and Paris. You see, we three girls have been hanging out with Pat all summer and we are demanding that he tell us which one of us is the most beautiful.\"\n\nI observed, \"I can't be a fair judge, so I said that you could be a good judge.\"\n\nOwen looked a little nervous.\n\nKathleen stood up and walked like a model in front of him, \"I think that you will find that I am the most beautiful of us.\" She pinched her nipples for him.\n\nJulianne stood and sashayed in front of him, \"My dearest friend, I think you are mistaken. I think Owen will find that I'm the most beautiful.\" She placed a knee between his knees and placed her breasts very close to his face. She moved away.\n\nBecky said, \"My sisters, Owen will find that I am the most beautiful. She stood with her back to Owen, spread her legs a little, and then bent down so that her suit-covered pussy and ass were at eye level.\n\nI observed, \"I think Owen is having some difficulty deciding.\" Owen nodded, his eyes wide. \"Perhaps we should take the same steps that Paris did in making his decision.\"\n\nBecky said, \"Good idea.\" She stood in front of Owen, dropped her shoulder straps, and then pulled her suit down.\n\nOwen's mouth dropped.\n\nKathleen declared, \"Ignore my sister.\" She pulled her tube top off, and then shimmied out of her hot pants.\n\nJulianne interjected, \"Not so fast my sisters.\" In seconds she was naked as well.\n\nI could see panic in Owen's face. His shorts had a nice tent, so he placed his hands in his lap.\n\nThe ladies laid it on thick. Kathleen and Julianne came up on either side of him, their breasts in his face.\n\nBecky knelt between his legs and moved his hands. \"Perhaps we can help you make your decision Owen.\" She unsnapped his shorts and unzipped his zipper. She pulled out his penis. \"Ladies, look what I found!\"\n\nJulianne and Kathleen gushed over Owen's cock. Owen wasn't exactly well-endowed, but he had enough cock that he could do something with it.\n\nBecky looked like she was going to suck on him, when he groaned and shot a string of cum on the front of his shirt, nearly to his chin. All three exclaimed excitement. Becky latched on to the head of his cock for his follow through shots, while the other two started licking the cum off of his shirt.\n\nWhen they had most of the cum cleaned up, Julianne, ever the resourceful one, said, \"We need to rinse this off.\" She stripped off his shirt and ran it under the tap water.\n\nBecky smiled, \"We don't want to get anything on these nice shorts.\" She pulled them off of him and tossed them over the back of the couch.\n\nKathleen came over to me and sat on my lap. I placed my hand on her breast so Owen could see it. She suggested, \"Perhaps we should give Owen some incentive in picking the winner.\"\n\nI exclaimed, \"Good idea! Owen, I think the reward for making a selection is that you can have sex with the one you pick.\" I could see him gulp. \"Do you like that idea?\"\n\nHe nodded and softly said, \"Yeah.\"\n\nI announced, \"My beautiful friends, I think each one of you should have two minutes to let Owen observe your beauty and charms before he decides. Let's just go by age: Becky, Julianne, and then Kathleen.\"\n\nBecky started gyrating her hips in front of him. I could see his cock begin to stiffen. She stood on the couch, straddling him, and moved her pussy very close to face. Then she bent over and placed her nipple at his mouth, \"Lick me.\" Owen did as ordered. She turned around and bent over. She backed her ass up so that it was inches from his face. She turned around and made an exaggerated motion of sticking her finger into her pussy.\n\nShe pulled it out and declared, \"Open wide.\"\n\nOwen obeyed and Becky placed her finger into his mouth. \"Taste me.\"\n\nOwen sucked on her finger, and then Becky kissed him with an open mouth, her tongue probing. Finally, she squatted down and placed her moist vulva on his cock. She humped him a little and I thought he might cum again.\n\nI said, \"Thank you Becky. I think Owen would agree with me.\" He looked shell-shocked. \"Julianne is up next.\"\n\nJulianne went right for the lap dance approach, straddling him as Becky had. She played up her best asset -- her breasts. First, she brought her pussy close to his face. I think his nose was actually in her pubes. Then she lowered herself so that his breasts were at eye level. She pinched her nipple and offered it to him. Owen sucked on first one, then the other. Then Julianne pressed his face into her cleavage and pressed her breasts against his face. If Owen was a breast man, Julianne was going to win.\n\nI declared, \"Well done Julianne. Now it is Kathleen's turn.\"\n\nKathleen also went straight for straddling him on the couch. Her best asset was her pussy and that red muff. First, she rubbed her breasts on his face and offered her nipples to his mouth. Then she placed a foot on the back of the couch and pressed her spread pussy into his face. \"Taste me Owen. Lick me. Taste my pussy.\"\n\nOwen's head bent backwards and Kathleen placed her pussy right on his mouth.\n\nShe encouraged him, \"That's it. Lick me.\"\n\nIf Owen was a pussy man, Kathleen was going to win.\n\nBecky came over and sat on my lap, \"She's got it. No man can resist muff juice.\"\n\n\"You gave him muff juice.\"\n\n\"She gave him more.\"\n\n\"Great point.\"\n\n\"That's how Cleopatra got Marc Antony -- muff juice.\"\n\nI announced, \"Time. So Paris, I mean Owen. Which of these beautiful women is the most beautiful?\"\n\nHe looked perplexed, \"This is so hard.\"\n\nJulianne stepped over and squeezed his rock hard shaft, \"Pun intended.\"\n\nOwen blushed, \"I mean all three of you are amazing.\"\n\nI observed, \"But like Paris, you can only choose one.\"\n\nHe thought several moments, \"Please don't be angry with me, but I think I am going to go with Kathleen.\"\n\nKathleen let out a hoot and ran over to Owen. I held out my hand to Julianne, \"Am I a bad booby prize?\"\n\nShe whispered in my ear, \"That was so fun teasing him like that.\"\n\nI said to Becky, \"Make room for our lover girl.\"\n\nI had Becky on one leg and Julianne on the other. I whispered, \"I want to watch Kathleen take his cherry.\"\n\nKathleen had straddled Owen on the couch, placing his cock on her labia. She was kissing him. She smiled, \"You will never forget this.\"\n\n\"No, I won't.\"\n\n\"Will this be your first time?\"\n\nHe nodded.\n\n\"I'll be gentle.\"\n\nKathleen stood up and pulled Owen to his feet, \"Come lie down with me.\"\n\nOwen complied and lay down on his back on the mattress. Kathleen straddled his chest and kissed him. Then she leaned forward and placed each nipple into his mouth, \"Suck me Owen.\"\n\nHis cheeks sucked in as he mouthed her nipples. Kathleen leaned back with a look of pure pleasure on her face. She pulled away and placed her pussy lips on his cock. She moved back and forth ever so slightly. Owen's eyes were wide. She leaned forward and placed the head of his cock at her opening. \"I'm going to put you inside me. Are you ready?\"\n\nHe nodded.\n\nI watched Owen's face as he experienced that amazing first penetration of a pussy. I thought his eyes were going to pop out of his head. Kathleen gently descended on him, and then slowly started moving up and down on him. She took his hands and placed them on her breasts, \"Play with my nipples.\"\n\nShe started grinding her hips on his cock and Owen whimpered.\n\nKathleen smiled, \"Oh, you came in my muff. I felt you cum Owen.\"\n\nShe leaned over and started kissing him, keeping his cock in her pussy, \"Was that good for you?\"\n\nHe nodded.\n\nJulianne said, \"Kathleen, when you are done I would like to lick all that cum out of you.\"\n\nKathleen asked, \"Really? You want to lick my muff? Oh god, that would be hot!\"\n\nI smiled at Becky, \"And I would like to make you cum.\"\n\n\"Offer accepted!\" She stood and pulled me to my feet.\n\nBecky lay down next to Owen, and I settled over her. Owen, not knowing what to make of all of this retreated to the couch. I settled in between Becky's legs and Julianne did the same with Kathleen.\n\nI looked over at them. I could see the top of Julianne's brown head buried between Kathleen's legs.\n\nI used my tried and true method of generating an orgasm for Becky. I had her coming for several minutes. Eventually, she covered her pussy saying she was too sensitive to go on.\n\nJulianne seemed to have figured out my technique because she had Kathleen cumming as well. She looked over at me, \"Is it possible to like both guys and girls? This is so hot!\"\n\nOwen sat on the chair mesmerized. For a fellow who had just came twice, it looked like he was recovering quickly.\n\nWhen she had finished with Kathleen, beckoned to Julianne, \"I think you need one last orgasm to close out the summer.\"\n\nKathleen crawled to the couch. Becky was in the other chair. Julianne spread herself on the mattress and I climbed between her legs, lapping up her juices and taking her over the edge. After an extended orgasm, I rolled on my back and pulled Julianne on top of me. What is now called cowgirl had become my favorite sexual position.\n\nBecky got up and grabbed Owen's hand pulling him to the mattress. A guy who had zero sexual experience an hour ago was going to have sex with both Finn sisters.\n\nJulianne rode me for quite a while, eventually bringing me to orgasm.\n\nOwen was on top of Becky, pumping away. It was cool watching him cum into Becky.\n\nBecky asked, \"Now tell the truth Owen, which Finn sister was better?\"\n\nOwen blushed deep red.\n\n_ _ _ _ _\n\nJulianne had to leave for college on Monday so I took her shift. When we wrapped up for the summer on Labor Day evening we had not had a single mishap.\n\nAs the man in charge, I was responsible for closing up the shack. The only ones available to help were Becky and Kathleen as the rest had headed off to school. The town plumber came and shut off the water. It took us about three hours to get it ready for hibernation and give the place a good scrubbing. We tossed the air mattress. Becky made a conservative estimate that it had seen at least 250 sex acts. I signed responsibility back to Lorraine. Afterward, we went to the diner for lunch.\n\nAll three of us were leaving in the morning. Becky suggested we head up to the cemetery for one last afternoon of sex. We really didn't know about threesomes, but we pleasured each other for several hours. As the sun set on that last day, I lay on the quilt with Kathleen and Becky on either side of me; the three of us naked and exhausted. What a fitting end to the most amazing summer ever!\n\n_ _ _ _ _\n\nAt the ripe old age of sixty, I still love summer. Nevertheless, none have ever been quite like that magical sexual summer by the lake. To this day, certain songs take me back. Prince's \"Little Red Corvette\" reminds me of Kathleen. \"Love Shack\" by the B-52s always reminds me of our own love shack on the beach."
    ],
    "authorname": "Quinn_McMullen",
    "tags": [
        "oral sex",
        "cunnilingus",
        "blow job",
        "group sex",
        "anal",
        "first time",
        "summer lovin 2021",
        "summer romance"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/love-shack-1"
}