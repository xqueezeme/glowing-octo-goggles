{
    "title": "Like Slut Mom, Like Slut Daughter Ch. 03",
    "pages": [
        "This is the third chapter of this series and I want to briefly recap what has taken place in the previous two. I'm Brittni and when I had turned 18, I was 5'6, 120 pounds with hazel eyes, an athletic body, 34C breasts and long dark blonde hair half way down my back. My 5'9, 115 pound, mother named Beverly who got pregnant with me at 16, is a great mom who earned a degree and now in her mid-thirties, became a professional woman. Her vice was that she was a slut and as a hot MILF with implanted 36DD breasts, she acted upon it frequently. Immediately after my birthday, we had sex with each other before she set me up with a well-endowed older man to take my virginity along with an orgy party with hot dirty sex. She taught me how to make sex more pleasurable and I discovered that I was a full blown slut like her. Mom then decided that I was ready for my first anal party with four hung black men and her friend Annette. It was so hot and after taking all that size in my ass, I soon learned that I loved it. I found out that I also had a strong craving for cum and not only loved sucking it out of dick, I loved eating it out of pussy and ass as well. Mom and I weren't just sluts, we were nymphomaniacs who needed sex and would stop at nothing to get it.\n\n*****\n\nI was so satisfied with the anal group sex from the night before, I slept in until hotel checkout time. When I woke up, all the guys were gone and my mom was already showered, makeup on, dressed and ready for the day. \n\nShe smiled, \"How did you sleep, honey?\"\n\nRubbing my eyes, \"Great. That was so hot last night. I can't believe how good anal sex feels. I had no idea. Thanks Mom for showing me such a good time.\"\n\n\"Awww, my pleasure, Baby. I guess I should say, our pleasure,\" she chuckled. \n\nWhen I climbed out of the bed to go pee, I took a step then winced, \"Ouch,\" before walking gingerly towards the bathroom. \n\nMom chuckled again, \"What's wrong?\"\n\n\"My butthole is sooo sore. I feel like someone had a baseball bat up there,\" I whined.\n\nShe continued her laugh, \"Well, technically the guys had cocks as big as baseball bats so that is natural. Don't worry about it, the tenderness goes away in a couple of days. I have a plan for next time so you won't have to worry about all the soreness. Come here and let me see it.\"\n\nI was naked so it was not going to be a problem for her to inspect me and to make sure everything was OK. Mom turned her chair so that it faced outward, waiting for me to hobble over. Standing with my back to her, I bent over and touched the floor with my hands. \n\nLeaning in close to inspect my asshole, my mother gently spread my cheeks apart with her thumbs before giving her analysis, \"Whoa. You are stretched really wide, sweetie.\"\n\n\"Really?\" I worried aloud. \"Will it go back like it was?\" \n\nMy mother assured me by calling me by my childhood nickname, \"Bebe, you will be fine. I have had anal sex for two decades and believe me, it goes back into place.\" Before I was about to raise up in relief, Mom stopped me, \"Hold on. This is exciting to see how much you are still gaped after all these hours.\" She slid four fingers inside my stretched sphincter while adding, \"See baby, I can get four fingers up you and it has been hours since your last cock. You still have some cum in there too.\"\n\nI could feel her fingers wiggling inside my rectum which caused my pussy to tingle then moisten. It was almost like my anus had a direct stimulation button to my vagina. I thought that must be the reason I had such powerful orgasms from the anal sex the night before. \n\nMom pulled her fingers out of my ass, then tasted the tips, \"Mmm, that is cum. Here, taste,\" she offered while holding her hand out.\n\nI stood up and turned around before squatting so that she could put her fingers in my mouth. I sucked the juices off them and I was surprised how good it tasted from being inside me all night. \n\n\"Mmm, so good,\" I commented before asking, \"Can I have another taste?\" \n\n\"Sure honey. Lick them clean if you want,\" Mom smiled. \n\nI took three more sucks and licked the crevice between her fingers when I embarrassingly asked, \"Why do I like that taste so much? It has that salty sweet musky taste. It is hard to explain. I don't know why but even last night when I was eating the cum out of your butt, it had that taste. Is that weird?\" \n\nShe rubbed my arm and soothingly assured me again, \"Not at all. You are like me. Semen has that masculine salty flavor which is good by itself but when it is added to a warm human orifice, I think it heightens the taste even more. This is what makes us think like sluts together. It's just who we are.\" \n\nI asked, \"Before you started probing around up there, you said you were excited because I was still stretched out after all this time. Why were you excited about that?\" \n\n\"Oh, yea,\" she snapped while jarring her memory. \"I was excited because I think you are born with the connected nerve endings in your anus that I have which also means you will be able to be pleasured more with size. Also, when I had my fingers up inside it, did you feel any stimulation in your pussy?\"\n\nMy eyes lit up as I did get that jolt of stimulation. I excitedly agreed, \"Yes! My vagina is wet right now and when I think back to last night, the bigger the cock, the better it felt. I just about passed out with Eric's monster dong. You are exactly right. How did you know that?\" \n\nMom agreed, \"I knew it. I had that feeling by watching you. You are so much like me, it's scary. Years ago, I asked my gynecologist why anal sex gave me such powerful orgasms. He told me that in rare instances women can be born with connecting nerves.\"\n\nI was puzzled, \"Connecting nerves? What is that?\" \n\nShe continued explaining, \"The female anatomy has stimulating nerves in the vagina to make intercourse pleasurable as you know. It is nature's way to encourage us to procreate. The anus also has many nerves that can be pleasurable. In rare instances when those nerves get crossed or connected during birth, then both areas can experience pleasure equally. My doctor thinks in my case and apparently in your case, we were born with those nerves as one. This causes our pleasure to be magnified and that is the reason for our slutty, nymphomaniac behavior. Not only do we love sex, we crave it.\"\n\nI asked, \"Do you and I feel the same way from anal sex?\"\n\nShe answered, \"Yes. Since the nerves in our rectum are actually connected to our vagina, there is a direct line to our G spots. It is like someone ran an electric wire and connected both of them together. That is why anal sex feels amazing to us and the bigger the object, the more it stimulates our pleasure. And because our stimulation \"dial\" is turned up, that is why you are so sore today. We don't feel the pain from the size until everything has calmed down. It's like your own personal pain pill. Does all that make sense?\" \n\nI was floored and that explanation made total sense. During anal sex with the hung black men, I felt so alive and my orgasms were so powerful, I felt like I was going to pass out. \n\nAs I continued to rationalize in my head, Mom asked, \"You know what this means don't you?\" \n\nWhen I shook my head, she answered her own question, \"It means you will have the physical ability to be double penetrated anally. Most women just can't do it but after seeing your stretched asshole, I know you will be able to do it.\" \n\nMy mom had been right up until then so I had no reason to doubt her. I was curious as to when our next sex party was going to be when I asked, \"When is our next party? I'm already excited thinking about it again and here I can hardly walk.\" \n\nShe smiled, \"Well, that is what I wanted to tell you. In two weeks, you will need to pack your bags because we are flying to Ireland to see your Aunt Amy and your cousins. She has a party set up for us.\" \n\nI was so thrilled, I gave her a big hug while bouncing up and down, not worrying about the anal discomfort. I showered and then we packed our bags to check out of the hotel. While driving home we were making small talk as we recapped the night before. It was such a blur that it was nice to reminisce. We got on the subject of Annette and how cool of a lady she was. Mom and I loved her personality and her sexual openness. She was a slut just like us. Too bad she wasn't going to Ireland with us but Mom said that we would party with her and Patrick again real soon.\n\nI began to think about our upcoming trip. Amy was my mother's sister and at 40, was four years older than Mom and looked very similar to her except she was 6'0 tall, had natural 32D breasts with reddish auburn hair. Mom has always told me that I inherited her hazel eyes and her sassy disposition. Aunt Amy was also a professional lady who married an Irishman, moved to Ireland and had two daughters by him. When my uncle Pete learned of my aunt's infidelities, they soon divorced after the girls were born. He could not handle her thirst for cock as my mother had told me about some legendary stories. She had such a good job as an executive trader, she stayed in Ireland. \n\nAunt Amy's daughters, my cousins, were gorgeous. I hadn't seen them in real life but followed them and a multitude of pictures on Facebook. Mom had flew over a few times to visit with the last time being a few months before. Alexandra or Alex for short, was 18 years old and in high school like me but three months older. Sasha was 20 years old and attended Queen's University of Ireland, studying law. Alex had already been accepted and was following in her sisters footsteps when she graduated. \n\nThe girls sometimes were mistaken for twins. Both girls played lacrosse and cheered in high school while Sasha continued to play the same sport while at the University. Additional similarities the two shared were their thick red hair, fair skin, melting green eyes, perfect white smiles, apple shaped bubble butts, and C-cup breasts even though Alex's were slightly bigger. \n\nBoth girls were considered petite but were built slightly different. Sasha was 5'6, weighed 120 pounds and was somewhat leaner with longer legs and longer hair, whereas Alex was more compact looking at 5'4, 115 pounds and kept her hair tips just past her shoulders. They both had tiny waists and posted some pretty risqu\u00e9 pictures of themselves doing all kinds of crazy things. \n\nAt that moment, I had put two and two together when I asked Mom, \"So if Aunt Amy has put a party together for us, does that mean Sasha and Alex are...well, you know...sluts too?\" \n\nMom was driving but showcased a sneaky smile when she looked my way, \"I thought about keeping it a surprise until the party but I will tell you now. Yes they are! Amy gave Alex her gangbang party on her birthday and that was the real reason I flew over there. It was insane! She squealed louder than you did and it wasn't even an anal party and the cocks weren't as big. We had so much fun. From what I hear from Amy, she is doing everybody in sight now just like her sister but saving her anal virginity for the party we have planned.\"\n\nWe talked more about it as we drove. Mom told me that there were five guys involved in her gangbang and most of the details. Listening to Mom telling me what happened, made me crave another gangbang as soon as possible with my cousins. There was no way I was going to be able to wait two weeks without some dick. Just a couple of days later, I succumbed. \n\nThere was this little sweet scrawny guy named Brent who was actually older than me who kept asking me out and I had politely turned him down. I texted him and agreed to go out with him. He wasn't attractive at all but his personality led me to give him a chance. As it turned out, he was a virgin and that was lucky for me because he was able to get hard over and over. I gave him a blowjob in his car before we left for the movie. I was swallowing his large warm load in less than a minute. When we got back, we went to a common teenage parking area where he fucked me in the backseat with his six inch peter and I ended up sucking him off again. I loved the little guy's stamina. That fix held me over for a few days. \n\nFinally, the day arrived for us to catch our flight and I could tell Mom was just as horny as me. We purposely deprived ourselves of any type of sex for one week prior to our departure. It was extremely early and she was in the bathroom about ready to take her shower. \n\nMom called for me while still in the bathroom, \"Bebe! Come in here. I have something for you.\"\n\nWhen I entered, she was holding up two very large dildos. As she jiggled them around she said, \"Look what I have for us. Remember how sore your butt was the next day after our anal party? Well, this is the solution. We will insert these and keep them in during the 11 hour flight. It works wonders for me.\" \n\nI took one from my mom and squeezed it. It felt very real but I was concerned about the size when I asked, \"They look awfully big. Are you sure we will be OK?\"\n\nShe confidently assured, \"Honey, these will work great. I know they are very thick but it will help with the stretching and will gape you really well. Your sphincter will get acclimated and when we have our anal party, there will be no soreness when we are finished. It is like your own personal anus trainer. I got them this big on purpose.\" \n\n\"How big are they exactly?\" I questioned.\n\nShe giggled, \"This model is called the 'Big Daddy' and is 8 inches long and 6 inches around.\"\n\nWith all her experience, my mom knew what she was talking about when it came to any type of sex. I felt nervous but excited. When I was taking all those large cocks up my ass, it felt amazing so I figured this would also feel good.\n\n\"There are a couple of things you need to be aware of. First, you will need to go to the bathroom every couple of hours and reapply lube. It will keep it moist and prevent stick-age. You know how I like to use Vitamin E oil as anal lube because it gets mixed with the creampies that we enjoy eating? I nodded and she continued, \"Well, with dildos, you need to use water based lubrications because the oil ones will dissolve the rubber over time. I will bring the Astroglide for that reason but at the party we will use the vitamin oil.\"\n\nMom got more serious when she advised, \"We only have two hours to get ready, so let's help each other with the enemas and get ourselves nice and cleaned out before we shower. Remember we can only have protein drinks during the flight.\"\n\nShe handed me her bagged enema and after I slid the hose into her rectum, I emptied the contents. I then pulled my pants down and leaned over the tub while on my knees. Mom took the hose, slid it in and emptied the contents inside me. I had forgotten how bloated that feeling was. After using two separate bathrooms and completely voiding our bowels, we were ready for our showers. \n\nNow fresh and smelling great, hair dried and fixed, makeup applied, we were just about ready to get dressed and leave for the airport. We had the small matter of inserting the huge dongs into each other's asses. Mom was going to do me first. She squirted the lube all on the head and smeared it around the shaft before stroking the dildo up and down. She even got a second glob to add even more. It was so goopy and greasy, it was glistening under the light. \n\n\"Bebe, I think this will be easier with you on all fours. Go ahead and put your panties on up to your knees because if you don't have them ready, your rectum will naturally push and the dildo will flop out,\" she instructed. \n\nI put on my black Lycra pair with the thin cut on the sides. With my panties around my knees, I was restricted on how far I could spread my legs. While on all fours up on the bed, mom sat down behind me. I dropped my head down to the mattress in preparation when she fit the huge gooey dildo head up against my anus. \n\n\"Here it comes, Sweetie,\" Mom warned as she pushed and twisted simultaneously to corkscrew the lubricated phallus into my asshole.\n\nWhen the head popped through, I gasped in pain causing her to stop pushing long enough to comfort me, \"It's in. Relax and breathe while it goes in the rest of the way.\" \n\nThe pain only lasted about ten seconds before it started feeling nice. Mom pushed and my entire rectum swallowed every inch like it was mouth. It felt sooo good to finally have something up there again as I sighed, \"Ahhhhh!\" \n\nMom asked, \"It has been awhile hasn't it? Does it feel wonderful?\" \n\nI sighed again, \"Oh, yeah! I missed that feeling.\" \n\nMom looked at the clock on the wall and said, \"I think we have a little time.\" She pulled the fat rubber cock out of my ass and pushed it back in before repeating, \"Let's get you off before we head out.\"\n\nIt felt so amazing, I couldn't have stopped her even if I wanted to. My eyes were glazed over like I had swallowed the crisp taste of a fresh Coke. When she picked up the pace, my pussy was transformed into just as much a gooey mess as my anus. I knew it would not take long at all for me to cum. \n\nMom sped up her pace and the slurping sound of my snug hole gobbling up the massive dildo with an overabundance of lube became louder. I was already getting that anal vibration reverberating to my pussy and I loved it. \n\nAs my mother sat behind me, fucking my ass with this giant dildo, she asked, \"Are you gonna cum baby? After I moaned my affirmation, she encouraged, \"Cum for me. Do it for Mommy.\"\n\nI gasped, \"Go...a...little faster. Oh, like that. Yes...just like that.\" \n\nBetween the squishing noises, Mom commanded, \"Bebe, cum for Mommy. Do it, sweetie.\" \n\nAs soon as I reached up between my legs and touched my clit, I began spasming, \"Ohhhhh! I am right now! Aughhhhh! Yeeeeessssssss!\"\n\nMom continued pounding my asshole knowing I would have a second orgasm in a short amount of time. She was correct because within the minute, I started screaming again from the sheer pleasure. After I came the second time, she shoved the rubber cock all the way in because we had to go. I was disappointed because it was feeling wonderful and I would have liked a few more orgasms before we stopped.\n\n\"Honey, we don't have much time to get to the airport. We have got to stop,\" Mom said as she held the circular suction end of the dildo in place while using her opposite hand to help me pull up my panties. \n\nI pulled them the rest of the way up, securing it inside my butt. When I turned and sat down, I could feel the mushy size, way up me. I gyrated my booty on the bed and sent pleasure shock waves throughout my body. I had no idea how good that could feel. \n\nMom told me, \"Put mine in me. It is too bad we are out of time because my pussy is soaked. I will probably masturbate on the plane. Here, feel it.\" \n\nI stuck my middle finger in between her folds and she was correct. It was very slippery with her juices. As soon as my finger started to disappear, it was her turn to let out pleasure, \"Ahhh that is nice. Does it taste sweet?\" \n\nI put my finger in my mouth and sucked off the juice before answering, \"Mm hmm.\"\n\nMom then desperately suggested, \"I tell you what, sweetie. I need to get off so bad. Why don't you eat it real quick and if I don't cum within 5 minutes, we will stop. If we take any longer than that, including the time it will take us to get dressed, we might be late for the airport if we hit traffic.\" \n\nShe yanked out two pillows from under the bedspread, stacked and leaned against them. Hiking her legs way back, exposing both orifices, she gave me her idea, \"We will kill two birds with one stone. Slide the dildo in my ass while you lick my pussy.\" \n\nWhile only wearing my panties and my boobs hanging free, I lubed up the rubber dong and gently pushed it into my mom's asshole. As it began to penetrate, she squealed but didn't want me to stop, \"Keep going. Keep going. Ahhh there you go. Now lick me while you fuck me with it.\" ",
        "When I began thrusting, I leaned down and put my mouth on her wet slit. It was slimy and I immediately wanted that salty nectar. Her upper body thrashed back and forth while enjoying my actions. I was not only licking her pussy, I was sucking on her clit. Her juices were all around my mouth. \n\nMom grabbed the back of my head and screamed, \"Oh suck it baby! Suck Mommy's pussy! Ohhhh! Ohhhh! Augghhhhhhhhhhhhh!\" \n\nWhen she orgasmed, her ass muscles contracted against the large dildo lodged in her rectum. While screaming, she straightened her legs and arched her back. It lasted about 20 seconds. When she was finished, her hand replaced mine on the back end of the dong and held it in while asking me to get her a pair of panties to wear. Fetching a tight red pair from the drawer, I put them on her while she continued holding it in. \n\nNow we both had our oversized butt plugs situated, so we quickly dressed in our sundresses and cute wedges before jumping into the car for our trip to the airport. On the way, my mother was telling me how she was extremely horny and our little play time before we left was just an appetizer. I completely agreed. Every small bump the car hit while we drove, jolted the dildo in my butt in all the right ways. \n\nWe arrived at the airport and learned that all the hurrying was for naught because our flight was delayed an hour. We sat in the terminal while Mom had a drink and we people watched. We saw four pilots walk down the hall, rolling their bags behind them while decked out in full uniform. They looked sharp and three of them were very handsome. \n\nMom told me she thought they were our pilots and to stay put while she jogged over to stop them. They all talked for a moment out of ear shot from me. I didn't know what she told them, but they were smiling when she came back. When the time had come, we boarded the direct flight and off we went. We sat next to each other with me by the window. \n\nMom and I were talking but had to keep our voices down because there were other passengers all around us, including next to her. Nobody would have thought we both were sitting with huge dildos up our butts. \n\nMom leaned over to my ear and whispered, \"It is time to reapply some lube. Do you want to go first or do you want me to go?\"\n\nI told her that I would go first and in the tiny bathroom, it was not an easy task. Taking my clutch purse with me, I ended up putting one foot up on the toilet seat, flipping my dress up over my waist, and pulling my panties down while bent over. I had to tug and twist before the dildo would slide out. I could feel I was gaped really wide because of the cool air rushing into my asshole. After slathering it up once again, I slid it back in me and adjusted myself before returning to my seat. Mom took her turn and came back in less than ten minutes.\n\nTwo hours later when it was time to do it again, Mom went first. However, this time seemed odd that she never returned in an appropriate amount of time. Ten minutes went by, then twenty, then thirty. She wouldn't answer my texts. Finally, after thirty eight minutes, a text came in from her that read, \"Meet me in the bathroom ASAP.\"\n\nThat was strange but I was dying to find out where she had been. I worked my way through the aisle and went to the bathroom. I lightly knocked and my mom opened the door while I stepped into the cramped area, especially for two people. She looked disheveled with her hair now a mess and her neck all flushed with red blotches.\n\nI worriedly asked, \"Where have you been?\"\n\nPutting her finger up to her lips, Mom whispered, \"Shhhhhh. Not so loud.\" With her eyes really wide, she smiled and continued to whisper, \"Oh my God, you aren't going to believe it! I just came from the pilot resting quarters. I just got double teamed by two of them. It was incredible.\"\n\nI didn't even know there was a resting quarters when I shook my head in disbelief, \"Huh?\" \n\nUsing her hands to explain, Mom responded, \"There is a little room that has bunk beds for the relief captain and co-pilot to rest so they can switch out with the other two during the longer flights. I was so damn horny, I propositioned them in the terminal, as you seen me talking to them, and gave one of them my number. When I was in here re-lubing my dildo, I got a text. One of them came down and got me and we went back to those quarters.\"\n\nI chimed in excitedly but also a little jealous, \"No way? So then what happened?\"\n\nMom continued, \"Of those guys you seen me talking to, Captain Thomas was the grey haired gentleman and his co-pilot was the young 25 year old dark haired guy that was the tallest in the group. That is Keith. Those were the two off duty. Keith came right here and led me up.\"\n\nAs if my pussy could get any wetter, I intently listened, \"Then what?\"\n\nShe said, \"Then I went up there in the room and it wasn't very big but big enough. I pulled off my dress and showed them the dildo. They thought I was just teasing when I said I had one in my ass. I was down on my knees sucking Keith while Captain Thomas fucked my ass from behind. I came twice before he shot his load. Then Keith took his turn and lasted a little longer but also finished in my ass while I sucked and cleaned the captain's deflated cock. It was so wild. Get this, Keith did me a second time and came again!\"\n\n\"Are you serious?\" I giggled. \"You are so bad. Why didn't you take me in there with you?\"\n\nShe replied, \"There wouldn't have been enough room but that is the reason I called you in here. As soon as they were done, I stuck Big Daddy back in me and I have not one, not two, but three fresh loads of cum in there for you Sweetie. You said you really like that taste so I made sure to save it for you.\" \n\nIn my excitement, I inquired, \"Really? You did that for me? What...what did you have in mind? Where would we do anything?\"\n\n\"Right in here silly. You can eat it and we can even share,\" was her response. \n\nI was sitting on the toilet lid while Mom pulled her panties down and allowed them to dangle around the one ankle of the foot she put up on the back of the commode. She was turned away from me with that leg hiked up and she used both hands to hold her dress up around her waist, exposing her shapely ass with the flesh colored dildo protruding out of the opening. \n\nAs I began pulling the rubber cock out, it felt slippery and moved with ease. When the head popped out, the suction that had been created allowed a mess of sperm to plop out right behind it and down the back of Mom's inner thigh. I had to act quickly before it got away so I stuck my tongue out and caught the slime running down her smooth skin. I slurped the runaway spunk like I was sucking in a spaghetti noodle. Combined with the lube, it still had that salty flavor I loved but with a sweeter taste. \n\nAfter consuming the largest globs first, I used the flat part of my tongue to lick up her thigh and follow the trail of wetness until I reached her asshole. It was stretched open and dripping with semen. I licked and sucked out as much as I could reach with my tongue before I put my entire mouth around her wide anus. I felt her lower abdomen tighten as she pushed out the remainder into my awaiting mouth. \n\nWhen she relaxed, she whispered, \"Oh, your tongue feels good in there. I bet you are glad I saved it all for you. There you go Bebe, eat it all up. Don't miss a drop.\" \n\nWhen I knew her butthole had been cleaned out, I took my mouth away before Mom brought her leg down and turned around facing me, \"Don't forget to share,\" she said as she kissed me. \n\nI had already swallowed the fluid so there wasn't much to transfer but when she broke our kiss, I showed her the dildo that I had been holding the entire time. It was covered with white goopy cum when I offered, \"We can share this.\" \n\nI held it upward like I was holding a candle, and we starting licking up our respective sides like we were sharing an ice-cream cone. It was so good and it I had forgotten how much I had missed that taste. As we orally cleaned off the shaft, our mouths met at the spongy head. We kissed and slurped until the dildo looked like it had been run though a dishwasher and only contained the wetness of our saliva. \n\nMom smiled, \"Mmm that was good. I can't wait until we get there. There will be so much more for us to have. Hurry and put it back in me.\" Somebody knocked on the bathroom door as I was inserting the dong back into her ass when she replied, \"Hang on. Almost finished.\"\n\nI helped hold it in when she pulled up her panties and we left the bathroom together. The waiting person had a very puzzled look on her face when we came out at the same time. All I could do was laugh to myself thinking about what she would think if she knew what had just occurred in there. \n\nThe plane finally landed in Dublin and we were so glad to arrive. Mom and I got off and all three girls were waiting next to the luggage return. We jumped up and down so excitedly when we saw each other. We all hugged for a few minutes and that is when I realized my cousins were even prettier in real life. With their red hair, green eyes and great figures, they really were quite stunning. \n\nAunt Amy drove us in her SUV to their nice house in the country. The green hills and landscape of Ireland was breathtaking. She promised us a driving tour later on. It was so thrilling to finally be visiting my cousins but feeling the large dildo pleasuring my bottom, I couldn't help to also think about the upcoming party. Would my cousins, looking so innocent, really be as slutty as my mother and me? \n\nThat internal question was answered when my older cousin Sasha blurted out in her Irish accent, \"Are you ready for the gangbang? Mam has it all set up and there should be plenty of men. Right Mammy?\"\n\nAunt Amy looked up through the rear view mirror and responded, \"Believe me, there will be plenty there. We are going to have so much fun. This will be Alex's first anal gangbang.\"\n\nAlex chimed in, \"I'm so ready.\"\n\nWe all laughed and kept on talking. I really liked their personalities, so carefree and positive. I knew it was going to be fun. When we arrived to their house, it was very nice with two huge trees in the yard. Aunt Amy and the girls helped Mom and I carry in our luggage. The inside of the house was American decorated with a little Irish flair because Aunt Amy was full blooded American and my cousins were half and half. I wanted to learn everything about them.\n\nWhile sitting in the living room talking, Mom just blurted out, \"Britt, it is time to take our dildos out. It has been over 12 hours.\"\n\nJust when I thought I was going to be embarrassed, Aunty Amy added, \"Yes, twelve hours is about right. I had the girls take theirs out this morning after sleeping in them all night.\"\n\nSasha added, \"It really works. I had the biggest anal party I have ever had in December and the next day, my bum wasn't sore.\" She looked at her mom and asked while using her fingers to think, \"How many did I end up taking?\" \n\nAunt Amy responded, \"I'm not sure but it was well over ten.\" She laughed, \"And she took Finnegan.\" \n\nMom curiously asked, \"Who is Finnegan? Was he at Alex's original party?\"\n\nAlex interrupted, \"No. Mam thought he might hurt me but he will be there at this party.\" \n\nAunt Amy finished her thought, \"Finnegan, is this man in town who has a huge cock. Finnegan is his last name and that is what everyone calls him. He also has a son who isn't as big but not far off. They both take care of most of the ladies in town.\"\n\nI perked up thinking about such a massive piece of equipment when I asked, \"So all of you have had Finnegan? Is he is as big as what they say?\"\n\nSasha answered before her mom could, \"Oh, my. I have a few times and have never seen anyone with the likes Finnegan. He is truly blessed.\" \n\nFeeling the dildo up my ass, I wanted to switch the subject back and asked Mom in front of everyone, \"If our party isn't until tomorrow night, why do I need to take the plug out so soon?\" \n\nMom looked at Aunt Amy and smiled because they both knew as well as Sasha, \"You take it out at least a day beforehand to let your sphincter contract back to its original size. You want it to be tight not only for your guys but for you. The pre-stretching is just to work it out and prepare it to prevent soreness. It's like stretching before you exercise. Your anus will get plenty of 'exercise' and you are getting it into shape.\"\n\nIt really did make sense but I was curious as why she didn't tell me before my anal gangbang with the black guys, \"So why didn't you tell me before we had a party with Eric and those guys?\"\n\n\"I'm sorry Baby but I just forgot until that morning and by then it was too late,\" Mom apologized. \n\nI went into the bathroom and pulled the dong out of my ass carefully and washed it. I was turned around staring at my stretched asshole in the mirror when Alex came in. She commented, \"That is big.\" She pointed to the dildo sitting on the sink and asked, \"Is that what you had in you?\n\nI nodded when she stood behind me and put all five of her fingers together like a star. She pushed them into my gaping anus and with a small push, her hand slipped in up to her wrist. \n\nShe asked, \"Does that hurt?\"\n\nI giggled, \"No, not at all. It works. Moms know best.\"\n\nAlex fisted me for a little while, causing my pussy to juice up. I leaned over the sink to allow her to do it enough to make me cum. Sasha entered the bathroom and wanted to try it so Alex pulled out allowing Sasha to take her place. Sasha squirted some hand lotion on her fingers and shoved her hand up my rectum. She thrusted a little deeper than her sister had done and the added lubrication is what I needed. Alex rubbed my clit at the same time and soon, I was screaming in orgasm! \n\nThey both stopped and we needed to get ready for bed. Both my cousins slipped on sheer knee-length night gowns that were mostly see-through and white socks. Both had amazing bodies and perky boobs. I could clearly see that neither girl was wearing panties or a bra. As I was about to put on my sweats, Sasha offered, \"Here, we have this for you to sleep in.\"\n\nIt was the same dress-style nightgown and when I put it on, the girls were very complimentary on how I looked in it. Mom had taken Alex and Sasha's room which contained two small beds while my cousins and I were to sleep in the guest room. When I walked into the room, there was one California king-sized bed. I found it slightly odd that all three of us girls were going to share the same bed but when in Rome, huh?\n\nThe bed felt nice, the sheets were cool and the mattress was soft. I crawled in and the girls insisted I sleep in the middle. They were on both sides of me and both smelled like fresh baby powder which is one of my favorite fragrances. We chatted in the dark and soon Alex was kissing me on the neck while Sasha was rubbing my breasts on the outside of my night gown. I was the meat in my cousin sandwich. \n\nWhat started out as petting and kissing, soon turned into three young girls writhing around in the dark, fingering, sucking and licking each other's orifices. We were panting and cumming together. We took turns 69ing with the third person fingering the top girl's butthole. Both my cousins had a small patch of pubic hair above their crotches while mine was as smooth as glass. I could feel their coarse hair on my chin when I sucked their clits. Both of them commented on much they loved my bare quim. Sasha was naughty and couldn't get enough of my juices while Alex kept wanting to rim me. She was infatuated with my stretched anus. \n\nWith vision eliminated because of the darkness, we all relied on feel and smell. Not only was the confined space smelling strong of pussy and powder, the entire room was as well. I have to say, it was a very erotic scent for me. At one point Alex was on her back with her knees up, while I was on my stomach licking her tasty slit and Sasha was also on her stomach behind me with her face planted in my ass trying to get her fair share of my gaping anus. It was literally a three girl chain. \n\nDuring that chain, I remember cumming and whimpering with my mouth full of pussy. We stayed up half the night being naughty with each other. My labia lips were swollen and my clit was super sensitive from all the stimulation. When we finished and whispered to each other in the darkness while we fixed our nightgowns, we took inventory of our total orgasms. I had 4, Sasha had 3, and Alex said she either had 5 or 6 but wasn't sure. It was such a relief for three girls who were sexually charged up in anticipation of the next day's activities. \n\nWe all slept very well and I was the first to wake up as I am an early riser. When I walked into the kitchen, Aunt Amy was making coffee and breakfast when she chuckled, \"Did you sleep well? I know it was awful noisy in there. Even louder than your mother and I.\" \n\nI smiled and she knew what had occurred. Eventually all the girls strolled in with a yawn and we dined and discussed the day's itinerary before the party. Aunt Amy was going to purchase our outfits while Mom was picking up the enemas. My cousins and I were going sightseeing and she was going to show me Sasha's University. Our party was to begin at 8pm so we needed to be back and get ready no later than 5:30.\n\nWhile at Queen's, Sasha was showing Alex and me around even though Alex was already familiar from her visits. It was very nostalgic with old style buildings that looked more like a castle. There were not many students on campus during the summer months even though we saw a few. While walking, we bumped into one of the faculty members. \n\nSasha smiled and greeted, \"Hi Dean Anderson. This is my sister Alex and my cousin Britt who is from America like you. Did you know we are having a party tonight at The Countryside Inn? I hope to see you there and maybe you can bring a friend.\" \n\nMr. Anderson who stood 5'9 with dark hair and looked like he was in his late thirties, smiled and shook our hands while giving us a warm greeting, \"Nice to meet you both. That sounds fun. I know the place you are talking about. I hope I can make it.\" \n\nLater, Sasha would tell me that he was American and worked as the Dean of Students at another college in the United States but was taking a two year sabbatical to work in Ireland. We made additional small talk about the weather and our summer plans before parting ways. After a fun day of seeing many parts of Ireland, it was time to head back to the house for our big evening. \n\nUpon our arrival, we learned that Aunt Amy had just started her period and felt physically terrible. She decided she wasn't going to participate but wished us all a good time. We were saddened but too excited about all the guys, so we proceeded on. She was sweet and helped us all with our enemas. They were very powerful because in less than ten minutes, we all were cleaned out and ready for our showers.\n\nWhile Aunt Amy slipped the hoses into our asses, one at a time, she encouraged us without divulging too much information about the anal party she had arranged, \"You girls are going to have so much fun. I wish I was going but that just means more cock for you. Don't forget to share. You are family and family comes first so be sure you take your time and enjoy yourselves and enjoy each other. You are only young once.\"\n\nMom got ready in the master bathroom while the rest of us used the double sink bathroom down the hall but took our showers in the basement so not to steam it up. We were just naked girls running around fixing our hair, putting on makeup, and trying on jewelry. Sasha found this gorgeous choker chain that had an emerald on it that matched her deep green eyes. She sat on the edge of the bed with her legs spread when I noticed her pubic hair was shaved in the shape of a heart and the heart was actually the \"u\" in the tattooed word SLUT. Alex came in and showed me hers as well. I knew right then that my cousins weren't playing around. They were cock cravers just like Mom and me. ",
        "Aunt Amy brought in our folded outfits and sat them down on the bed. After pointing out which ones belonged to each girl, I held my blouse up to my neck. The clothing was more like a Halloween slutty school girl outfit rather than a legitimate clothing ensemble.\n\nShe said as she then put the shoes next to them, \"Here they are girls. Britt, you wear size 7 shoe, correct? Remember, tonight no panties or bras. You are sluts and you need to look like sluts. Be wild and free.\" \n\nAlex cooed excitedly, \"Oooo, aren't these sexy? The gents are going to love us in these.\"\n\nAll three of our outfits were the same. They consisted of a white, short sleeve top that was naturally tied underneath the breasts like a halter top. The skirts were black and red plaid and very short, just covering our butts but contained matching bib overall suspender straps that went up over our shoulders. The socks were thin, black nylon spandex that were thigh high and the shoes were all black two inch girl heels with a single strap that buckled overtop the foot. All of us but Mom kept our hair down. We were ready for the evening. \n\nWe were so excited to get some dick, that is all we could talk about during the drive. We were like little kids heading to see Santa. Finally, we pulled into The Countryside Inn's parking lot. I was surprised because it was a large, old pub that looked like it had been built in the 1800s. Since the legal drinking age in Ireland is 18, my cousins and I were fine to enter. All four of us walking across the blacktop while wearing our hard high heels sounded like a herd of teachers walking down the hallway of a school with the click, clack, click, clack.\n\nWhen we walked in, there were dozens of men inside as they held up their mugs and bottles and let out a thunderous cheer in honor of our arrival. We were greeted by the owner who shook our hands and led us inside. He introduced himself as Donny and said he was actually an American from Massachusetts. He was a tall, slender, blonde headed man with a thick handlebar mustache. It was so long that it actually covered his lips like you would see in an old western movie. The inside of the pub was larger than it looked from the outside but looked just as old. \n\nA few of the men came up to us, giving us hugs and groping our bare asses under our skirts just before an older gentleman stood up and gave a toast, \"Me and me mates would like to offer a big welcome,\" just before the other guys in the bar tipped their drinking apparatuses. \n\nDonny led us to the back of the pub into another room. When I said the place looked like it was from another century, the room smelled like it. The stench was a combination of stale yeast from the alcohol, an old sweat sock and musky dampness. It was a decent sized room which contained two old mattresses on the floor without any blankets and two old couches on each side that were torn and had stuffing spilling out of the arms. With no air conditioning, the room was very warm and humid. \n\nMom and I looked at each other before looking at the girls. We were standing there scantily clad, looking like school girls with no panties on under our short skirts, ready for a delicious anal gangbang, with the room that we supposed to do it in looking like an abandon house in a bad neighborhood. We would definitely need to get warmed up to the idea. \n\nDonny asked bluntly, \"I get first dibs at you sluts before the guys come in. Which one of you wants to suck my cock first?\" \n\nI can't speak for the girls but I really wanted it in my mouth but I waited for my mother to lead us. Mom got on her knees on the mattress while he stood in front of her. He unbuckled his belt and allowed his pants to hit the floor at his ankles. When his underwear came down, his half erect cock snapped out and Mom wasted no time engulfing it while the rest of us jealously watched. Mom grabbed his ass cheeks and bobbed in and out until Donny's 7 inch cock was solid as concrete. \n\nHe grabbed a fist full of her hair and helped her at the pace he desired which was much faster than she was going. When he would push Mom's head all the way down on it, he would smash it so deep, she would gag before he would let her up. \n\nAfter a few minutes of forcing Mom's mouth on his manhood, he pushed her off and announced, \"I'm ready. Who is taking it?\"\n\nSasha and I looked at each other, smiled and simultaneously replied, \"Alex.\" \n\nAlex need to get lose her anal virginity and then she would be in the club like the rest of us. She was excited. Mom dumped her purse out on the floor and several bottles of Vitamin E oil fell out. \n\nExcitedly she asked Donny, \"You want me on my back or on my knees.\"\n\nMom reminded him, \"Remember, put it in her ass but go slow, it is her first time.\"\n\nHe had Alex sit down on the old couch where he promptly lifted her legs until she was basically in a half sitting and half laying position with her skirt flipped up on her stomach. Donny got down on his knees on the mattress which gave him the perfect height. I squirted the lube on his cock and prepared it while Sasha put some on her finger and inserted it into Alex's asshole. \n\nWith his hog greased up and ready, he decided to taste Alex's sweet pussy and he dove down and began licking it. His hairy mustache must have tickled because she would roughly squirm while he munched. When he came up, the tips of his mustache were dripping with juice. \n\nAlex whined, \"Don't tease me. Please put it in. I need it.\" \n\nDonny was ready and I gladly guided his cock directly to Alex's ringed bud. Mom and Sasha helped hold her legs back. Alex scrunched her eyes like she was about to get an injection at the doctor's office when Donny pushed until she squealed, \"Oooouch!\" But quickly changed her tune when she ordered, \"Wow, I like how this feels. Go all the way in.\" \n\nHer lust trumped the pain and in no time, Donny had his hanging balls resting on Alex's ass cheeks. He began slowly sliding his cock in and out Alex's virgin rectum before speeding up when she was ready. He was holding onto her sock covered knees while her high heel covered feet were suspended in the air. Mom was massaging Alex's clit while she took it and they were both close to cumming. \n\nAlex squealed, \"Oh! Oh! Right therrrrrrrre! Ohhhhhhhh!\"\n\nMom never stopped rubbing Alex's hooded nub even while she orgasmed and Donny asked, \"I'm about to blow. Which one of you sluts wants it?\n\nBoth Sasha and I were licking out lips when she answered, \"We both do. Let us have it. Shoot it hard.\" \n\nWe both got down side by side on our knees next to the humping Donny as he warned, \"Get ready. I'm gettin close.\" \n\nHe screamed as he pulled his cock out of Alex's asshole and turned our way while furiously jerking it, \"Open up! Hurry! Augghhh! Take that shit! Take all of it! Augghhhh!\n\nHe shot the first squirt onto Sasha's cheek before giving me the second shot. With our mouths open and our tongues touching, he finalized his aim onto our conjoined lips. I loved the warmth as it splatted all in our mouths and on our chins. \n\n\"Come up here girly and clean your ass off my dick. And a little something for you too, mom,\" said Donny as Alex got up and began sucking the very cock that had just come out of her own ass and Mom was licking off the spunk that had dripped onto the back of his hand while jerking it onto our faces. \n\nSasha and I were swallowing the thick sperm as well as licking and cleaning it off each other's chins before ending in a huge cum sharing kiss. It tasted really tangy and delicious. Alex had finished sucking Donny's now soft cock clean so he could put his underwear and pants back on and Mom had his hand sparkling. He dressed and walked to the door. \n\nHe opened it and called out, \"OK, men. I expect you to be orderly and treat this ladies like the sluts they are!\"\n\nAnother raucous cheer was heard as the men started filing into the room like a line of riders at a roller coaster gate. Mom knew there needed to be some type of protocol as she put her own pleasure on hold so to lead the scene. She kept all three of us at the same couch. I was standing, bent over the back of it while Sasha and Alex were bent over their respective sofa arms. Our heads formed a triangle. \n\n\"Gentleman! Can I have your attention please?!\" She shouted over the talking drunken men. When the buzz silenced, she continued, \"We are here for your anal pleasure. Only fuck our asses. Be sure you use lube and no condoms. We want to feel your bare cocks and your loads. Get in line.\"\n\nThere was such a large variety of men. There were tall men, short men, fat men, skinny men, hairy men, bald men, old men with solid white hair and young guys who looked younger than me at that time. They were all like children in a candy store. Pants, shirts, socks, underwear among other clothing were being removed all around us. Mom handed out the lube and lines formed behind each of us. \n\nThe first guy to enter my ass was a man who looked to be in his early thirties with longer messed up hair under a ball cap. His cock was a modest five inches but had a nice thickness to get me started. While I was bent over the back of the couch, he pumped in and out of my asshole. In no time, he was grunting and shooting the first load of the night deep into my rectum. My pussy was quivering and needing more to get myself off. \n\nHe pulled out and was soon replaced by one of the younger guys. His cock was much longer and he immediately humped my ass like a horny rabbit. A quick slap, slap, slap, slap and he was lying up against my back quivering while depositing his seed in with the first guy's. The other men were grunting and cumming inside of my cousins. The sleazy scene was getting to everyone and nobody was lasting very long. \n\nAlex was screaming, \"Fuck my bum. Cum inside me!\" and Sasha was begging, \"Do it. Shoot your load in there! Fill it up you bastard!\" I hadn't worked my way up to verbal commands yet as I was just getting started and enjoying the hard penises sliding in and out of my ass. \n\nAfter we had established a semi-routine, Mom decided to get in on the action as she got down on her knees, leaning onto the sofa cushion and offered, \"OK, guys. I'm open for business back there.\"\n\nMom didn't have to wait long before another one of the athletic younger guys stuck his banana shaped cock into her ass. He was pounding her as she slung her tied up hair back and forth. We did it like this for a good solid hour until the room full of men began thinning out. The entire hour was either filled with one of us girls squealing in orgasm or a man grunting or growling in orgasm. \n\nMy ass was filled up with slimy cum. I could feel and hear it squishing every time another cock replaced the one before it. I loved the feeling! I began having orgasms after the fifth or sixth guy. If he was hung, I just enjoyed that full sensation and would cum from that and if he was small, I enjoyed the friction and rubbed my clit simultaneously to a strong climax. It was good to have that variation. \n\nA few guys stayed for seconds but after the initial long lines had diminished, it was men in and out with a few awaiting their turn to squeeze in with the next available girl, with their cocks in hand, stroking them hard. The routine was getting...well...routine and I was ready to taste some dick and cum. As soon as the next guy finished inside me, I stepped away from the couch and I had a mess running down the back of my legs and a pool on the floor. \n\nAs all of our anal adventures were occurring, it seemed as though Alex was getting the most guys, so it stood to reason she would have the most cum in her ass. I knelt down beside her and the guy that was fucking her ass at the time, was getting close. While I waited, I was sticking my fingers in my own gooey asshole and licking the salty nectar that I loved. She had a bigger slime spot on the floor between her legs than I had. It was oozing from her ass, down her pussy lips and dripping from there. He bellowed, \"Fuck, there it is! Oh, fuck, I'm cummin!! Augghhhhhhhh!\" I loved watching his balls twitch as he unloaded in her rectum. \n\nI leaned down and whispered to her, \"As soon as he pulls out, I want you to hold still so I can taste that cum out of your butt.\" \n\nShe was out of breath and gasped, \"OK Britt. It is all yours. I will clench and try to hold it in until you get down there.\" \n\nThe heavy man, pulled his deflating cock out of Alex and stepped back, allowing me to slide in behind her. Alex's perfect bubble ass with a gaping hole was staring me at eye level. The seed from the multitude of men was flowing out of the entrance like icing out of a cake decorator's pastry bag. The back of her black thigh high socks were white and wet with running spunk. I lowered myself and licked from her dripping pussy upward to her anus. \n\nThe cum cocktail was warm, thick and clumpy. It had that salty musky taste that I craved. I first stuck out my tongue and allowed it to run onto it and then swallow when enough had coagulated before repeating my actions. It was a delicious yogurt treat. There was so much and when the flow slowed down, I put my tongue inside her asshole and slurped what I could like I was drinking soup from a bowl. She strained and more oozed out. I was in heaven. \n\nMom must have been watching me suck the cum from Alex's butthole because I could hear her encouraging me, \"That's it sweetie, get it all out. I know how good that must taste. It is Ok to love it. We all do.\"\n\nWhen I raised up and wiped my tacky lips, I had been mistaken. Sasha had copied my actions and was gulping the cum from Mom's ass. Mom was actually encouraging her niece when I thought she was talking to me. Sasha raised up and asked her, \"How was that Aunt Bev. Did it feel good?\"\n\n\"Oh yes it did. You did a great job. Now get up here and kiss me so we can share,\" Mom ordered. \n\nThey were making out and Alex wanted the cum from my ass so she laid down on the dirty mattress. While on her back, I squatted down overtop her face before lowering myself until my asshole landed directly on her mouth. With my skirt on, I could not see her in action but I sure could feel it. I strained the contents from my ass directly into her eager mouth as several men continued to stroke their cocks while enjoying the lesbian cum sharing show. \n\nA tall Irish man with a large belly, an even larger scraggly red beard with greasy red hair walked in and announced in a thick Irish accent, \"Which one of you is the Lass who dares to take me cock in her arse?\"\n\nSasha whispered to me, \"That's Finnegan.\"\n\nHe was very unattractive with no front teeth and an unkempt appearance but by then I wanted to see his equipment so I raised my hand with a response, \"It is me.\"\n\nHe sat his mug of ale down on the shelf, let out a loud belch, before unbuttoning his shirt. Meanwhile, Alex was now sucking an older guys cock while he sat on the couch, Mom was getting anally pounded while on her back on the mattress and Sasha was on all fours with a tall, skinny man doing her in the ass with both of them moaning. \n\nWhen Finnegan's pants went down, I blurted out, \"Holy shit!\" \n\nYou would have never guessed it by looking at him but the girls were right. His cock was soft and hung down about 7 or 8 inches to his mid-thigh. It was also like an uncircumcised thick sausage with the head tucked away inside the meaty foreskin. \n\nHe ordered, \"Come here darlin and suck on it. Get eem hard for ya.\" \n\nI had no problem with that but wanted him on other sofa. I needed to feel that impressive piece of meat so I grabbed hold of it and led him over to the targeted furniture. His cock had a funky smell but I didn't care as I began sucking and stroking the monster while he sat and I knelt between his legs. It took a little work but I had gotten it rock hard and wow, it was amazing! I could only fit my hand half way around it and it was over ten inches! Even though my ass was full of slimy jizz, I lubricated that beast with the oil just in case. \n\nI got up on the sofa, straddling his lap but I couldn't get good balance on the worn out cushions while wearing my high heels. I unbuckled the top straps and kicked them off. It was much easier just wearing the thigh high socks and digging my feet in for leverage. As I lowered myself down, I held the tip of his dong until my already gapping anus was cupping the head of it. Even though my asshole was stretched and gooey, it was still going to take a little work fitting it inside. \n\nI was so excited about getting that size up my ass once again, the fact that he smelled like booze and cigarettes didn't bother me. I took two breaths and sat down until the giant penis began stretching and sliding up my rectum and into my bowels. We both let out a loud, \"Ahhhh\" from the relief we felt from the warm snug fit. Amazingly, there was little pain. Putting my hand on his shoulders, I rode slowly up and down. It was nice to be able to rise so high without that length slipping out. I clenched my teeth and bounced on Finnegan's huge dong like I was child on a trampoline. My skirt and braless boobs inside my blouse were bouncing and flapping in unison with me. It felt amazing and my entire body was alive!\n\nI was now spewing obscenities, \"Oh my God, your cock is so fucking big! I love it! God, I'm gonna cum on this big fucker! Oh! Oh! Ohhhhh! Aughhhhhh! Yesssssssss!\"\n\nFinnegan was in disbelief that not only was someone taking his large manhood in their ass, but loving how it felt in the process. His mouth was hanging open and his head cocked back, enjoying the ride as much as I was. I thrashed my hair back and forth and the jarring even caused my right suspender to slip off my shoulder and loop down under my arm. \n\nI wanted a couple more orgasms before he finished so I desperately warned him before I came again, \"Don't you dare fucking cum yet? You like feeling my tight ass on it, don't you? I love it! It is so fucking huge! I'm gonna cum again! Yeah...yeah...yeah! Ooooooooooo! Ooooooooooo!\"\n\nJust as I orgasmed, my pussy squirted all over his belly. I trembled and shook then immediately bounced up and down again until I squirted again. I was screaming and riding that giant meat as hard as I could! I was slamming myself back down on it and on the fourth squirt, I smashed down on his lap so that every inch was crammed as deep in my ass as it would go. I put my sock covered feet up in the air and allowed my ejaculate to arch all over his stomach while my legs quivered. It was the most incredible feeling and I was sweating profusely inside my school girl clothes.\n\nIt was a good thing Finnegan was drunk and had amazing stamina. I stood up until my milking ass slipped off his cock. I turned around just in time to see my two cousins on their knees sharing a load in a sexy snowball kiss while Dean Anderson was pounding Sasha from behind and my Mom taking two cocks in her ass at the same time. The two guys were lying on the floor with their legs intertwined and their 6 inch cocks pressed up against each other while Mom was doing some riding of her own. I couldn't help my jealousy so I sat back down on Finnegan's magnificent tool but this time facing away with a plan in mind.\n\nI called out for the next man up, \"I need another cock in my ass with Finnegan. Who is up for it?\"\n\nJust then one of the two guys who were double penetrating my mom, started shooting his sperm and it was running down both shafts while my Mom screamed her own orgasm. Cutting it short, she stood up off both cocks and warned me, \"Oh, sweetie. You better think about this. You need start slow and work your way up. There is no room in your ass for another cock. Look how huge it is. Can you start out with smaller ones if you are ready for your DP?\"\n\nI panted, \"I want this Mom. I can't get over how good this feels and I want to add another one with him. I know it will be tough but I at least want to try. Please, I need another dick in my ass. Let's do it.\" ",
        "Finnegan called out, \"Where's me son, David? He'll do just fine.\"\n\nDavid was still fully clothed, watching all the action. He was supporting a hard-on through his pants. When he dropped them, a large cock sprang out just like his dad. It wasn't quite as big but at 8 \u00bd inches and 5 inches around, it was nonetheless quite impressive. Knowing what I already had buried up my ass, I began having second thoughts that another one would be able to fit along with it. \n\nI pointed to the lubrication before commanding Finnegan's 19 year old son, \"David, put a lot of oil on it before you try to stick it in. I want it lubed up really well.\" \n\nWhile sitting on Finnegan's lap, I hiked my legs up and leaned back up against his coarse beard. David held my spandex covered legs up from behind my knees. He put his greasy cock on top of his father's shaft and placed the head against my already overly crowded anus. He was about to find a way to push it in when my mom tried to stop me.\n\n\"Bebe, don't do it. I'm afraid that kind of size will tear you. Think about what you are about to do,\" she warned. \n\nPuffing breaths in anticipation, I assured her, \"I have to do it, Mom. It feels too good not to try. You said so yourself that I am physically built for anal pleasure and the bigger the size, the better it feels.\" I then turned my attention to David, \"Push it in slowly.\" \n\nMy attempt to take two large cocks in my ass simultaneously became a spectacle everyone wanted to see. Mom came over and held my hand for support while my cousins and all the guys in the room, stopped what they were doing to watch. I was puffing breaths faster like a girl in labor, anticipating the pain. David pushed until the head of his large cock was able to somehow find a way to pop in my sphincter that was occupied by his father's huge member. \n\nI cried out as I squeezed my mother's hand so tight, \"OUCH! OH...OH...OH...OH...Ok, push it in more!\"\n\nDavid's erection began stretching and creating room that wasn't there as it slid its way in. Dean Anderson and Sasha needed a better look as he stopped fucking her so they both could come over and see it from a closer angle. \n\nAs my breathing got faster and more erratic, Sasha offered encouragement, \"You can do it Britt. It's in. Hang in there.\" \n\nDavid pushed until his shaft drove its way in deeper while I cried out, \"Oh fuck! It's so big! Oh! Oh! I can feel it stretching me out!\"\n\nSasha chuckled in disbelief, \"Oh my God. I wish you could see it. I can't believe both of those things fit.\"\n\nWhen David finally had it buried up to his balls, I was trying to get acclimated and surprisingly it only took a minute for me to do so. It was still painful but the lust inside me was driving my tolerance. I was not going to be denied my first anal double penetration and if anyone knows me, I go big or go home. I began rocking the best I could on both cocks which provided a hint to David to get started. With me leaning back on Finnegan, the best he could do was gyrate with me but David controlled the penetration. David was holding my legs back and standing on the floor. When he started thrusting his hips and I felt that massive thickness slide in and out of my butt, I almost orgasmed immediately! \n\nOut of nowhere, Alex surprised me and stood overtop my face. She gargled before spitting a huge load of warm cum into my mouth from the dick she just finished sucking off. It only fueled my lust. We kissed as a long stream of slime connected our chins. I was in slut heaven. I had cum in my mouth and two cocks in my ass. What else could a girl want? \n\nAs David pumped and his father rocked, the friction stretched and created a bit more space in my rectum. That allowed David to increase his pace. Feeling that inner pressure gyrate my G spot through my anal wall made me violently shake and scream while I squirted again, \"Oh Fuck! I'm cumming! Oh! Yeah! Yeah! Ohhhhhhhh!\" \n\nMy squirt hit David in the chest which sent him into his own orgasm, \"Oh my! Aughhhh! I'm cummmmin. Take it you whore! Take all of it! Aughhhh!\"\n\nWhen he blasted, it triggered me to have a multiple and I came again. I was screaming as the pleasure overwhelmed me and caused me to almost lose consciousness and my suspended dangling legs quivered for several seconds. With a wet shirt, David panted, leaned forward as if to catch his breath before pulling his deflating pale dick out of my occupied anus while a trail of tacky cum followed all over his father's exposed balls. \n\nI was now left with just Finnegan's monster cock lodged up my ass and Mom asked, \"Are you OK, sweetie? You looked like you were about to pass out.\"\n\nI gasped, \"Oh...my...God! I almost did! That was amazing! It was so fucking huge and tight. I loved it! Now I need one more good one with Finnegan's cock.\"\n\nI sat back up, dug my sock covered feet into the couch cushions and began to ride. I was bouncing like I was riding a pogo stick. I wanted to feel that length so deep up me that the head of his cock would enter my intestines. I was getting closer and closer to my goal. My boobs were once again bouncing inside my blouse and at one point I rose up so high, Finnegan's dong slipped out of my ass. I quickly put it back in and continued. \n\nRight before I was about to orgasm again, Finnegan announced, \"Here it comes! Here it comes!\"\n\nInstead of continuing my ass milking, I quickly jumped off his cock and down on my knees on the floor between his legs. Using both hands, I began performing an ass to mouth suck off to finish the scraggly Irishman even though the girth made it next to impossible to fit more than a few inches in my mouth. \n\nHe put his hand on the back of my head, held me down on it so I could not move and he yelled in his accent, \"Fuck! I'm cummin! Augggh! Take it in yir pretty slut mouth! Suck out me bull gravy! Aughhhhhh! Unngghhhh!\"\n\nHe exploded in my mouth sending rope after rope of dense, bitter semen that I could smell though the inside of my nostrils. He kicked one leg out while bellowing. His cock spurted in my mouth several times and each time, the amount seemed to not diminish. When he finished depositing what seemed like years of built-up sperm into my mouth, I pulled off and turned to my cousins then winked before swallowing the foul liquid. \n\nThe naked Dean Anderson with his hard cock sticking straight into the air, quickly got down behind me to witness the carnage the double penetration left on my asshole but was polite in asking, \"May I see it please?\"\n\nI was on my knees on the janky mattress and bent over until my forehead touched it, causing the Dean of Students at Sasha's college to moan in pleasure, \"Oh, yea. Look at that gape. I have never seen an anus stretched that wide. That is so hot!\"\n\nBoth my cousins in unison scrambled to get a peek before Alex commented, \"Oh my God. You right. Look at this. I can fit my hand in here so easily.\" She stuck her hand in and out of my asshole and I could barely feel it when she continued, \"Britt, you have got to see this.\"\n\nSasha joined in while giggling, \"I bet you could fit two hands in that hole.\"\n\nMom then gave her opinion, \"I think that is sexy. Girls, we sluts need to get stretched like that sometimes. It lets us know where our pleasures lie.\"\n\nThe Dean was infatuated with it and just marveled at the circumference of my anal opening, \"It is so beautiful and erotic. Just seeing that perfectly round hole and the cum oozing out is so arousing. I must fuck it.\" \n\nMr. Anderson positioned himself behind me and stuck his hard cock inside my ass. His 7 inch rod was nice but unfortunately, had no effect on my gaped sphincter. He was in up to his balls and I could barely feel it. He didn't care and I think the loose feel actually turned him on more. He began humping and pumping while humming his content. His dick was so hard, I eventually could feel the head of it dragging at the top of my inner rectum and that sparked a tingle in my pussy again. \n\nI now need to feel it more so I suggested I lay down on my stomach. I positioned myself on the mattress with my skirt flipped up, my legs straight and together so he could apply more pressure. The Dean had his thighs and legs outside of my ass cheeks but then had had his feet and ankles inside of my legs like a frog. He pushed his pecker back in my ass in an on-top froggy style position. He was basically laying on top of me and his face was pressed into my hair.\n\nI could feel it inside me and I liked what I felt. He thrusted and even used both hands to press my ass cheeks together. He was breathing heavily onto my neck before whispering, \"Oh baby, I'm gonna cum in your ass. You want it? I know you do!\" \n\nI did want him to unload and while thinking about my stretched and worn out anus, he began blasting, \"There you go! Ahhh...feel that? Augghhhh! Augghhh! Augghhh! Augghhhh! I'm still squirting! Aughhhh!\" While he was shooting, my pussy twitched and spasmed.  \n\nHe literally rolled off and onto his back right beside me before gasping, \"Which one of you girls wants that snack I just left in your cousin?\" \n\nAlex knelt down to get into positon and Sasha hastily tried to get in front of her while arguing, \"Hey, he is my Dean. I want to taste him.\"\n\nAlex snapped back, \"Well, I will be going there after next year and I also want to see what he tastes like.\" \n\nMom played the peacemaker, \"Girls...girls, don't argue. Remember what your mom said. She told us all to share. Britt get back up on your knees so both the girls can taste his sperm directly out of your ass.\" As I got back up on my knees, and tilted my abused ass upward, Mom added, \"See, look. There is plenty of goo for the both of you. Have at it ladies.\" \n\nWith their heads side my side, they shared like good sisters. Alex would lean in and slurp a little before Sasha would take her turn. They licked and stayed behind me until Dean Anderson's load was in their stomachs. We all fucked and sucked for another two hours! Both my cousins performed double anal penetration even though neither dared to use such large penises like I had done. The room not only emitted the funky odors I mentioned previously, the smell of ass, pussy, sex and cum was added before we left. \n\nWe all walked out with soiled clothing, hair and makeup a mess and cum oozing out of our asses. I was only wearing one shoe because I couldn't find the second one. Alex had one suspender hanging down like me and Sasha had one thigh high sock down around her calf. Mom even had a hole torn in one of her socks. We were a mess but had loved every second. As sluts, we were so satisfied. \n\nWhen we got back to the house, Aunt Amy told us she wanted all the details in the morning. To save time, the three of us girls showered together. We went to bed and fell asleep immediately with no additional sex. When I got up the next morning, I began walking to the bathroom, fully expecting to be sore and I was pleasantly surprised that my mother's advice worked and I had no asshole discomfort event though it was still stretched. \n\nWhile the other girls and my mother were still asleep, I went into kitchen where Aunt Amy was fixing breakfast. She took a break and sat at the kitchen table with a huge smile on her face. \n\nI looked at her and said, \"OK, let me start from the beginning.\""
    ],
    "authorname": "Brittni4u",
    "tags": [
        "anal sex",
        "anal creampie",
        "analingus",
        "incest",
        "cum swallowing",
        "gangbang",
        "lesbian",
        "double anal penetration",
        "ass to mouth",
        "slut"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/like-slut-mom-like-slut-daughter-ch-03"
}