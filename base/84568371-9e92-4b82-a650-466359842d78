{
    "title": "Teresa's Christmas Finale Ch. 03",
    "pages": [
        "This story is part of an ongoing series. The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 16 - Surrendering To The Authorities\n\n\"Well,\" I said, \"stop standing there staring at me. Call the Sheriff. Tell him to accept the bastard's terms.\"\n\n\"I'll call the Sheriff now.\" said Chief Moynahan, who left for his office.\n\nIt was the late morning of December 26th, and Thomas P. Cook had just offered to turn himself in as long as he was protected from me. I told everyone in MCD to carry on, and I went back to my office. In Christmas colors tradition, Green Crowbar followed Red Crowbar into the office.\n\n\"What about Hardwood?\" asked Cindy as we sat down.\n\n\"I suspect he might be with Cook,\" I said, \"saying he's recording Cook's 'journey' to the very end. Even with the video evidence we have, nailing him to the wall is going to be tricky.\"\n\nCindy was peering at me. \"You don't think this is legit. You think Cook is up to something.\"\n\n\"He's up to no good, that's for sure.\" I said. \"But no, I'm not seeing his game plan at the moment...\"\n\n* * * * * * * * * * * * * * * *\n\n\"Here's the deal.\" Sheriff Allgood said at 12:20pm. He was in the Main Conference Room with Chief Moynahan, me, Cindy, Lt. Hugh Hewitt, PCpt. Thompson, Lt. Irwin, and the FBI's Muscone and Nash. \"Cook will drive into the County in a chauffeured limousine. He says he'll cross into our jurisdiction at 2:00pm. We can have Patrol cruisers lead him and follow him.\"\n\n\"He's going to take the route up University Highway, then across MLK Jr. Avenue to Riverside Drive,\" continued Allgood, \"then up Riverside to Police Headquarters, maybe past it to the intersection with College Avenue at the southwest corner of Courthouse Square.\"\n\n\"Once they're in the County,\" Cindy said, \"we can force him to change his route to one we want.\"\n\n\"Except for one thing.\" said Allgood. \"I've agreed to these terms, and we will follow them. I don't know if he has a bomb in the car or what other devices or measures to keep himself from being ambushed by us, but we're going to keep our side of it. We are going to do things his way.\"\n\n\"Commander,\" asked Chief Moynahan, \"anything to say about that?\"\n\nI shook my head. \"No.\" I said. \"We should insist he stop at the County Line and let us eyeball him to make sure he's in the car. Other than that, surround him, put a tracker on his car, follow him with drones as well as patrol cruisers, and let him turn himself in.\"\n\n\"What's the threat assessment?\" asked Muscone. \"What if his car is packed with plastic explosives? He's shown he's been in possession of blasting caps.\"\n\n\"Evacuate the route.\" I said. \"Clear University Avenue, MLK Jr. Avenue, and Riverside Drive.\"\n\n\"Can we do that?\" asked Lt. Hewitt. \"Pretty busy time of day.\"\n\n\"We did it on Christmas Eve.\" I said. \"The whole County saw Cook's message if they had televisions on. They'll know... and understand.\"\n\n\"I don't like how he implicated Commander Troy.\" said Martin Nash. \"Kept saying the Commander would try to murder him. I'm concerned he's trying to set something up that will implicate the Commander.\"\n\n\"The Commander,\" said Sheriff Allgood, \"is going to be nowhere near the route. He will be at County Jail.\"\n\n\"No, that won't work.\" I said. \"I have to be visible to the television cameras. People have to see me not murdering Cook. My best, maybe only alibi in this, is for hundreds of people to believe their lying eyes as they watch television today...\" \n\n* * * * * * * * * * * * * * * *\n\n\"This is Bettina Wurtzburg, KXTC Fox Two News!\" shouted the lovely redheaded MILF reporterette at 1:45pm. \"We have breaking news from the Courthouse! Let's go to Amber Harris for the details. Amber!\"\n\n\"Thank you, Bettina!\" said the athletic blonde. \"Billy Russell, son of U.S. Senator Samuel Russell, had his preliminary hearing just moments ago! Mr. Russell is charged with DUI, felony resisting arrest, felony assaulting a Police Officer, and causing the accident that put several orphan girls in the Hospital!\"\n\n\"Mr. Russell and his attorneys did not waive their rights to preliminary hearings,\" continued Amber, \"and the Defense Counsel made several motions regarding the evidence. Judge Rodney K. Watts, to whom this case was assigned, has denied bail for Billy Russell, saying he is an extreme flight risk. Russell will remain in County Jail until the first hearings early in January, but Defense lawyers have demanded an expedited hearing for their client.\"\n\n\"Thank you, Amber!\" said Bettina. \"And we're waiting here at Courthouse Square for Thomas P. Cook, former Town & County Councilman, to turn himself in to authorities on charges that culminate in attempted murder with aggravating circumstances...\"\n\n* * * * * * * * * * * * * * * *\n\nPaulina Patterson walked into 'Rhythms & Rap', T-Square's swankiest nightclub. \"I want to see my brother. Now.\" she ordered the two men at the bar.\n\n\"Lady, you don't walk in here and demand to see the Big Guy like that---\"\n\n\"I said NOW!\" shouted Paulina. \"Unless my brother wants to sit out the rest of this year in a prison cell---\"\n\n\"Okay, sister.\" said T-Square, coming out of the back room. \"It must be a big deal, for you to come in like you just did.\"\n\n\"Let's talk.\" said Paulina. She led the way to T-Square's office.\n\nOnce inside, he sat down but did not offer her a chair. \"So... what is it?\" he asked, watching her through his trademark sunglasses.\n\n\"You will not provide Thomas Cook and John Hardwood safe passage out of this County and out of this State. Whatever plans you had, drop 'em.\"\n\n\"Why should I do that?\" asked T-Square. \"Lots of money for me.\"\n\n\"Let me just put it this way.\" said Paulina. \"That easily could've been the Iron Crowbar's other daughter on Christmas Eve. That could've been Tasha... my daughter, your niece... left there to die. Do you really want to help those filthy crackers that did that to a little girl like that?\"\n\nT-Square nodded. \"You've got a good point, there, sister. And fortunately, another 'sister' has appealed to me to let her handle these issues. So just relax, go do what you do, and it'll be all gravy from here.\"\n\nPaulina nodded. \"Thank you. Have a Happy New Year.\" She turned and stalked out of the room, and ultimately out of the club.\n\nT-Square thought to himself: She don't know what's about to happen, but she did know that I was going to take green dollar bills to get Cook out of here... after his first arrangements failed. Now how did my sister know all that? Only one possible answer there... the Iron Cracker...\n\n* * * * * * * * * * * * * * * *\n\nAt 2:00pm a stretch limousine approached the County Line, a Coltrane Deputy Sheriff's car following. After crossing over the line, the car stopped behind the waiting Police cruiser. Sergeant Rudistan came to the car and the window rolled down. A KXTC cameraman was right behind him, and video of the occupants was broadcast into the homes of the County.\n\n\"Ah, Mr. Cook, Mr. Hardwood,\" said Rudistan jovially, recognizing the two men in the back seat, \"so glad you could visit our County today. If you'll just follow this Police car in front of you, we'll have you at Courthouse Square in no time at all.\"\n\nHis joviality fooled no one present. Cook just nodded. Hardwood's face was gray with apprehension, his facial features set in a look of perma-hatred.\n\n* * * * * * * * * * * * * * * *\n\n\"And now they're driving up University Avenue.\" said Bettina as the drone showed the car moving up the road, sandwiched between two Police cruisers with blue lights blazing. \"And they're turning onto MLK Jr. Drive, passing 'Rhythms & Rap' on the left, and... what is that?... it appears that some protesters in red t-shirts are blocking the motorcade route! The cars are stopping, but for less than 30 seconds and they're beginning to move again as Police move in on the protestors, taking them down hard to the pavement of the road and arresting them, and moving them out of the way...\n\nMoments later, more Bettina: \"And the motorcade is moving just north of the ruins of Ward Harvester, and now they're reaching Riverside Drive. This is like the O.J. Simpson slow-speed chase all over again... and now they're coming up to Police Headquarters, where Sheriff Allgood will take custody of Mr. Cook, and Deputies will take Mr. Cook to County Jail.\"\n\nThe vehicles stopped just past Headquarters. I was watching from the sidewalk just in front of the front doors to the building, along with the Chief, my Captain of Detectives, and about 30 Uniformed Officers. The Sheriff was down on the sidewalk of Riverside Drive. There were several Media persons with their cameras recording everything, and citizens behind barricades.\n\nAs Police surrounded the limousine, the driver got out and opened the left-side back door as Rudistan got to the right-rear door and opened it. The gathered crowd hushed momentarily, then began chattering as no one got out of the car. The occupants of the back seat had disappeared!\n\nPart 17 - Sleight Of Hand\n\nAll Media cameras turned to pan on me as it became clear that Thomas P. Cook and John Hardwood had somehow disappeared out of the limousine. I kept my face a mask of iron as I mentally absorbed what was going on.\n\nThe driver was escorted into Headquarters and the vehicle brought into the fenced-in parking lot and driven to the rear of the parking lot near the Crime Lab building for analysis. Meanwhile, I went back inside and to my office. You get one (1) guess who followed me in.\n\n\"Well, now we know.\" said Cindy. \"Rudistan says they were in back of the car, and everyone in MCD saw them on the KXTC broadcast. They somehow got out, and are now at large again.\"\n\n\"Yes.\" I said. \"And their mischief is not done yet---\" Just then Helena buzzed me.\n\n* * * * * * * * * * * * * * * *\n\n\"So how did they do it?\" asked Sheriff Allgood as we sat in the Main Conference Room. Also present were Chief Moynahan, Cindy Ross, and Captain Briscoe. Half an hour had passed since the disappearing act that had humiliated the TCPD on television had occurred.\n\n\"The motorcade stopped once, and very briefly, on MLK Jr. Drive,\" said Cindy, \"when those red-shirted Antifa anarchists tried to block the route. We also found that there was a movable panel in the floor of the limo.\"\n\n\"We're going back over the route now.\" I said. \"The place they stopped was near the old Fillmore Pharmacy building, where Jenna Stiles was held in that underground dungeon.\" (Author's note: 'Fire In The Embers', Ch. 04.) \"If there's a manhole in the street there, I think we'll know where they got out of the limo.\"\n\n\"They would've had to move fast; not much time to get out of the car.\" Cindy said.\n\n\"And it showwwwws,\" said Chief Moynahan, \"that these red-shirted fruitcakes are indeed paid operatives and not just random trouble-makerrrrrs.\"\n\n\"One thing I'm pretty sure of.\" said Sheriff Allgood. \"You've got to be very careful, Commander Troy. The Press is already insinuating you're behind the disappearances. If anything happens to them, you'll be accused of doing it. You need to stay in sight of people, have people with you. I don't think it's too much to have you escorted in your vehicle by a Police cruiser or a Deputy detail. People stationed outside your house, just to vouch you're inside, stuff like that.\"\n\n\"They're getting what they want.\" Cindy said. \"They're on the run, and the Commander is the one imprisoned and being watched.\"\n\n\"She's right, you know.\" I said, halfway in a reverie. Then I came out of it and said \"Okay, I have work to do, if y'all will excuse me.\"\n\n\"Commander,\" said Briscoe, \"you really need to speak to the Press and stop their speculation... speculation which is no more than thinly veiled accusations of you.\"\n\n* * * * * * * * * * * * * * * *\n\nAt 4:00pm I stepped outside of Police Headquarters and to a podium in front of a huge crowd of people who called themselves 'journalists', as if that were an honorable term.\n\n\"We have determined that the limousine had a removable floor panel in the back seat.\" I said. \"The limo briefly stopped over a manhole on MLK Jr. Drive, and we believe Cook and Hardwood exited the vehicle and went down into the manhole at that time. APBs have been re-issued for both men, and a reward of $50,000 for information leading to the arrest of these men has been authorized.\"\n\n\"Commander, were you involved in the disappearance of these men?\" asked Tim Sioban.\n\n\"No.\" I said. \"And your cameras were on me the whole time, as they have been every minute I step outside of Police Headquarters.\"\n\n\"Commander, what are you going to do if you capture these men before anyone else does?\" asked Amber Harris of KXTC, and her question sounded more like an accusation.\n\n\"I'm going to bring them to this here Police Station and have them taken through booking, then put in jail cells. Then they'll get their fair trials.\" I said.\n\n\"Are you sure you're not going to kill them?\" snarled one 'journalist' that I did not know.\n\n\"In spite of your hopes for me to do that,\" I said, \"I'm going to set the right example for my daughter... who is still alive, by the way... and bring these criminals in to face Justice in the American Court System. It's you Fake News journalists that are trying to gin up a story that I'm going to harm these guys, and you need to stop your irresponsible and dishonest reporting.\"\n\nWith that, I turned and went back inside Headquarters, leaving a gaggle of furious 'journalists' staring daggers at my backside.\n\n* * * * * * * * * * * * * * * *\n\nAs the sun was sinking over the western horizon at 5:30pm, Laura drove into the fenced-in employees parking lot of Police Headquarters. Moments later, she and I came out, both dressed in trenchcoats and hats against the cold.\n\nEver chivalrous, I opened the shotgun-side door for her to get in, and then I got in the drivers side. We pulled out and, followed by a Deputy escort and two Press news vans, drove up to County Jail and First Precinct Headquarters. Some moments later, the Press vans observed Sheriff Allgood and his wife drive into that same facility.\n\nNinety minutes later, well after dark, the Press saw the Troys, again wrapped heavily against the cold, get into the Commander's Police SUV and drive out, followed by the Deputy detail. The vehicle drove to The Cabin, which was empty. The Deputy detail set up at the entrance to the driveway as the Troys went inside. The Press vans had to circle back and find spots off to the side of the road to park and wait. They would be harassed and forced to move by TCPD Patrol cruisers very frequently, but never so badly that they couldn't keep watch of The Cabin above them...\n\n* * * * * * * * * * * * * * * *\n\nThe two black-clad figures descended into the manhole in the storage room at First Precinct Headquarters, into the old, nearly forgotten underground storage room. Armed with night-vision devices, they headed down the tunnel that acted as a storm drain to prevent flooding if need be. At the end, the man unlocked the door covering the drain and they exited, securing the door behind them.\n\nNow outside, they looked around, getting their bearings. The saw no Press vehicles, no drones that might have infrared and could detect the heat of their bodies. They made their way along the field, away from the Jail facility, reaching a small dirt road. A dark green O65 Imperial Crown was waiting for them. They climbed into the back seat.\n\n\"Where to?\" asked the black-clad driver. It was Todd Burke. \n\n\"Drop me off on the north side.\" I said. \"Laura where will you be going?\"\n\n\"BOW Enterprises.\" said Laura. \"By the way... is this the same car as your Black Beauty, Don?\"\n\nI smiled and Todd laughed. \"No, Aunt Laura.\" Todd said. \"Uncle Harvey provided us with the shell, but the innards are all BOW Enterprises equipment. Barry Oliver has been having more fun than a human being should be allowed to have putting test stuff in here.\"\n\n\"Just don't get pulled over.\" I said. It was not long before I was at my destination.\n\nPart 18 - 'Enhanced' Interrogation\n\n\"Yes, yes.\" said Katherine Woodburn as she sat behind her home office desk on the phone. She was still dressed in her off-white blouse, black skirt, sheer black stockings with a pattern of roses woven in, and black suede high heel pumps. She looked hot. \n\n\"Look, the agreement is in place. We're not going to impeach Jared... no... yes, I know the new plan, but you might need to realize that Commander Troy's daughter was just saved from being blown up, and there's great sympathy for him now... okay, we'll talk about it when the Legislature convenes on January 3d. Yes... goodbye.\"\n\nOh good grief, Katherine thought to herself as she gulped down her drink, then poured another. These idiots had no clue...\n\nShe thought she heard a noise and looked at the window. She saw nothing. She turned to top off her drink with some amaretto, then looked at the window again and gasped in shock.\n\nThe Iron Crowbar was standing in front of the window.\n\nShe didn't have time to move. I rushed for the desk and had her out of her chair, and I violently slammed her head and chest to the top of her desk.\n\n\"No one else is here to hear you scream, bitch.\" I growled. \"Where is Thomas Cook?\"\n\n\"I have no fucking idea---\" Katherine began, but I slapped her head to the table.\n\n\"Bullshit!\" I growled. \"Where the fuck is he?\"\n\n\"Go fuck yourself.\" Katherine said.\n\n\"How about I fuck you,, bitch?\" I growled. Holding her down with my left hand, I slid my right hand under the hem of her skirt and up her smooth thighs to her pussy. I began to fondle and rub her cunt slit. Katherine began getting wet, very fast.\n\n\"Stop that, you fucking thug!\" gasped Katherine.\n\n\"You don't want me to stop.\" I growled. \"You're loving this. You're fucking wetter than Niagara Falls.\" I slid my bird finger deep into Katherine's pussy, and began sliding it back and forth along her slick cunt walls. Katherine's protests were barely masked groans of pleasure.\n\nI then undid my pants and brought out my throbbing, iron hard cock. I situated myself behind Katherine, then said \"One more time, bitch... where is Cook?\"\n\n\"Fuck you, you son of a bitch!\" Katherine snarled. I suspect she was actually egging me on to do it.\n\n\"Since you insist.\" I replied. I flipped the fabric of her skirt over her succulent ass, fit my head into her labes, and thrust forward with raw male power.\n\n\"UHHGH!\" Katherine cried out as my cock invaded her tight cunt. I gripped her hips and began fucking her.\n\n\"You bastard!\" she growled, but she was pushing her ass back to meet my thrusts as I thrust into her again and again, balls-deep in intense sexual pleasure. I began fucking her with a deep, hard, steady rhythm.\n\n\"Uh, uh, uh, uh, uh, uh, uh, uh...\" Katherine grunted as my groin smacked her sweet ass. I remembered the time I raped Vicki Oldeeds in Sidney Wellman's office. (Author's Note: 'Case of the Executed Evangelist', Ch. 04.) Katherine was a much hotter, wetter, deeper fuck. Katherine was actually good.\n\n\"Take my cock, bitch!\" I yelled at her. \"I'm going to give you what you NEED!\"\n\n\"Oh God!\" Katherine cried out. And then it happened... her cunt clamped down on me, hard. Katherine was orgasming around my cock as I raped her!",
        "\"Uhhhh!!\" she cried out as I relentlessly thrust into her, pushing her shoulder blades down to keep her helplessly flattened against her desk.\n\n\"That's right, bitch! Come around my cock, you bitch!\" I growled, leaning over her, then whispering \"You like that cock in your cunt, don't you bitch? You're loving that cock!\"\n\n\"Fuck you.\" Katherine said, but it was more of a moan of surrender. \n\n* * * * * * * * * * * * * * * *\n\n\"Mmmmmmm...\" Katherine moaned as I pressed my lips to hers in a deep kiss. She was lying on her back on the sofa in her office, naked except for the garter belt, stockings, and high heel pumps. I was on top of her, fucking her slowly and deeply, thrusting in deep only to slowly withdraw and thrust in deep again.\n\nI had come inside Katherine as I held her to her desk, and she was coming around my cock as I did so. After I withdrew I said, more quietly and civilly, \"Okay, where is Cook?\"\n\n\"I think you're going to have to fuck the answer out of me.\" said Katherine, looking over her shoulder at me as she stood up. \"Think you've got what it takes to do it again?\"\n\nI knew I did; I'd taken a 'gray viagra' before coming into the room. Katherine led me to the sofa, where we finished stripping each other, then she pulled me onto her on the sofa.\n\nNow her luscious, shapely legs were wrapped around me as I pumped her deeply and lovingly, nuzzling her neck and sharing open-mouth, tongue-twining French kisses. Katherine was one hell of a kisser, I thought to myself as we made out while rutting hotly. I'll bet she can suck cock with the best of 'em, too.\n\n\"You should've been tapping this a long time ago.\" Katherine moaned as we ground our loins together.\n\n\"I'm going to be making up for lost time, for damn sure.\" I growled. \"And whenever I damn well please.\" That made Katherine's pussy clutch at me again. This in-charge, in-control, bossy bitch loved being taken by a man, I realized, and I was man enough to give her what she needed and desperately desired...\n\nIt took another fifteen minutes of steadily plowing her furrow, but I finally got my second nut of the evening. As I came deep inside her, I wondered if she was on the pill. I hoped that she wasn't, but it didn't matter. As to her trying to say I'd raped her and let them gather the evidence, I knew it would be 'he said, she said' as I said she consented... and I'd have an alibi for where I was at this hour by being with Katherine and not elsewhere..\n\nWe made out as my cock shrank in her pussy, finally sliding out along with gobs of semen. I finally whispered into her ear \"Where is the bastard?\"\n\n\"Okay...\" said Katherine, knowing I was going to make her tell. \"I know of three possible hiding places he has. One is in his current house, the Wargrave Mansion. There's a secret safe room in the office building. The second place is a safehouse south of the Downtown district, where a lot of apartments are above the shops. And the third would be the underground room of Fillmore's Pharmacy, where Jenna Stiles was taken and gang-raped. But I doubt he's there, since you'll figure out he escaped the car from near there.\"\n\nIndeed, we'd already looked there, and we had the Cook home occupied by Police. \"What's the address of that safehouse?\" I asked. Katherine said she didn't know, but gave the area.\n\n\"What about Hardwood?\" I asked.\n\n\"He's probably hiding in a gay bar, somewhere.\" said Katherine. \"He's a fag, you know. I don't know why he hates you... I figured he wants your cock---\"\n\n\"As much as you did?\" I said, looking derisively into Katherine's eyes. She conceded.\n\n\"Yes.\" she said. \"I admit it. I hate your guts, but I love fucking you...\"\n\n* * * * * * * * * * * * * * * *\n\nLeaving Katherine's compound home, I made my way to the Heritage Cloisters subdivision, and to Todd and Teresa's home. It does not speak well of the security there that I was able to so easily move about undetected. Or maybe it's just damn lucky for this world that I chose to not be a criminal.\n\nI cleaned up in the guest room shower. Then I got out a burner phone and texted an address to a number already entered into it. Afterward, I got in Todd's car and drove to BOW Enterprises. It is possible that my route took me over the River a couple of times, and that the burner phone made its way into the flowing waters beneath the bridge, and that the SIM card took a swim under the other bridge.\n\nI made my way to Todd's office. I was not surprised to find him sitting on the couch and my wife sitting on top of him... and his huge cock sliding in and out of Laura's pussy as she rode him hotly.\n\n\"Oh, y'all keep going.\" I said as I came in. \"At least until we hear something.\"\n\n\"No problem with that.\" Todd said, grinning. \"I love fucking Aunt Laura's hot pussy.\"\n\n\"I love it, too, stud.\" said Laura. \"Now fuck me like you mean it...\" Todd complied...\n\nPart 19 - Served Cold\n\nAbout an hour later, I was dozing when a cellphone on Todd's desk buzzed; it was a burner, also. He went over and looked at it.\n\n\"It's from Mom.\" he said, knowing the burner that was texting him. \"She just says 'Fill your prescription.'.\"\n\n* * * * * * * * * * * * * * * *\n\nThe BOW Enterprises O65 Imperial Crown made its way along the two track road used by garbage trucks to collect garbage from buildings on MLK Jr. Drive. The car stopped near Fillmore Pharmacy. Laura and I, clothed in all black, masked, and wearing black waterproof trenchcoats, went down what looked like a sewer access. Climbing down and wearing night-vision devices, we made our way along the path to the backside of the underground chamber of Fillmore Pharmacy. The light was on in the cell.\n\nInside the cell where Jenna Stiles had been brought and gang-raped were three people. One was a man, his hands manacled tightly behind his back, his mouth taped shut with duct tape, and maybe something like a ping pong ball was inside his mouth.\n\nThe other two were women, and they were in all black. One was Goth Girl Kathy. The other was my dear sister Elizabeth.\n\n\"Joyeux No\u00ebl, mon petite fr\u00e8re.\" Elizabeth said. \"I hope you like my Christmas gift. Alas, no return receipt.\"\n\n\"Merci beaucoup. I am grateful.\" I said. \"What about Cook.\"\n\n\"Oh, he's my gift to myself. We're keeping him.\" said Elizabeth. \"And this piece of shit might be the luckier of the two. Farewell, baby brother.\"\n\n\"Au revoir.\" I said, very sure. Elizabeth and Kathy left. I used the IR-reading capability of my night-vision glasses to make sure they really had left.\n\nHardwood was sitting in a metal chair in the middle of the cell room, facing the far wall. I came up to him with another chair and sat down, taking out Laura's iPad from my black coat. \"Okay, Mr. Hardwood,\" I said, \"Let's watch some TV.\"\n\nThe iPad showed clips of videos. Some showing Hardwood saying he wanted me to be in pain and to suffer; some of him taping Cook, but Hardwood could be heard saying he wanted me to feel pain. After a few minutes, the clips stopped.\n\n\"So, Mr. Hardwood,\" I growled, my voice almost a whisper, \"you want to see me in pain. So you were going to murder my daughter in front of me, just to cause me pain.\"\n\n\"Unfortunately for you,\" I said as I stood up, \"you failed to cause me the pain you wanted me to feel. You failed, Hardwood. Stupid to fail. Unforgivable.\"\n\nI then said, bending over and whispering into Hardwood's ear: \"And I believe in karma. I am not going to fail to cause you great pain, Hardwood.\"\n\nWith that I took out a small leather billfold from an inner pocket of my coat. Laura's eyes widened as she saw what it was. I took out the one and only syringe in the billfold, which was half-filled with a blue liquid. \n\nI stepped up to Hardwood, jabbed the needle in his back between his shoulder blades, and injected half of the contents of the syringe. Then I stabbed him in the back lower down, near his kidneys, and injected the rest. The effects were not long in showing themselves.\n\n\"AARRRRGGGHHH!\" Hardwood yelled through his gag. \"AAAAUUGGGGHHHH!!\"\n\nI just watched, my face dead to all but Justice. The man who wanted to murder a four year old girl just to make her father feel pain... was now feeling excruciating pain himself. And there was nothing to stop it; the drugs prevented his body from counter-acting the drugs, they kept his heart from stopping, they kept his brain synapses firing, if at irregular and random ways.\n\nHardwood was shaking, writhing on the floor, sweat pouring out of him. The smell that permeated the room showed that he'd lost control of his bowels, and the wet spot on his pants showed he'd lost bladder control.\n\nI am not sure how long it went on, but it was a while Minutes passed, long minutes. I just stood there and watched, as did Laura. Out of the corner of my eye I saw that Laura was wondering just when I was going to end this. Whether she realized it or not, I knew that I was not going to end it. At all.\n\nIt was Laura who broke first. She whispered \"Do you have the antidote? Just finish him off!\"\n\nI showed her the billfold, empty of all but the empty syringe. I had not brought an antidote nor any other compounds. I continued to watch John Hardwood writhe on the ground, screaming in agony through his gag. And I felt no pity, no remorse, no empathy... \n\nFinally, Laura said \"Okay, that's enough. I'm done.\" she went up to Hardwood, grabbed him by the neck, and twisted violently.\n\n*SNAP!*\n\nHardwood's screams stopped and he landed on the ground with a thud as Laura dropped his now lifeless body. She had broken his neck, ending his suffering, and ending him. It was her right to do so as the mother of the child he'd tried to kill.\n\nI began grabbing things in the dungeon and piling them around Hardwood's body. Then I lit them. As the fire started, Laura and I went upstairs, and through the backdoor. I then started another fire, knowing the wooden walls would burn fiercely.\n\n* * * * * * * * * * * * * * * *\n\n\"How are we getting out of here?\" Laura asked as we came to MLK Jr. Drive.\n\n\"Easy.\" I said. \"We cross the street, get one of the taxis in the line at 'Rhythms & Rap'.\" We did so.\n\nThere was a line of taxis and a line of people from the club who would take the front taxi as it came up. As one taxi pulled into the rear of the line, I opened the rear door, all but shoved Laura in, and got in myself.\n\n\"Yeah, we broke in line.\" I said to the driver, who was black and overweight. \"We'll make it up to you.\"\n\n\"No problem, sir.\" said the man as he pulled out and around the line, getting a few glares but nothing serious from T-Square's ushers. \"Where to, sir?\" he asked as he got to the street.\"\n\n\"East side. McGhillie Golf Course.\" I said. The first visible wisps of smoke were beginning to flow out of Fillmore Pharmacy as we pulled away.\n\n* * * * * * * * * * * * * * * *\n\nDelivering us in front of the clubhouse at the Golf Course, I came to the driver's window and said \"If you hear of some guy getting arrested for fucking his woman in a sand bunker at the golf course, maybe this will help you forget anything about it.\" I handed him two $100 bills.\n\n\"No problem, sir. Have a great night.\" the man said, laughing as he drove off.\n\nLaura and I did not waste time. We went around the fence and began climbing the hillside, using night-vision devices again. This was the most dangerous part of our mission, I thought to myself; someone could see us in the woods, or see us as we approached The Cabin.\n\nComing over the hilltop, I led Laura the path that led down to The Cabin. We hugged the walls to the front door, then quickly let ourselves in.\n\nA strange sight greeted us. By the light of one lamp in the greatroom, Eddy the Bounty Hunter was lying on the sofa, his head on the left armrest. On the opposite side was Melina. They had played 'Don and Laura' coming out of County Jail and driving to The Cabin. \n\nMelina was clothed in all black, and Eddy had no shirt on and his pants were down. And Eddy was pressing Melina's pretty feet to his long, thick cock, using them to masturbate his large size.\n\nMelina held up a piece of paper, which I read. It said 'is the house bugged?' I handed Laura her iPad back, and she used an app to check for bugs. There were none.\n\n\"We thought the room might be bugged.\" Melina said quietly. \"So I gave Eddy's big cock a nice sloppy, wet blowjob, and he came in my mouth. Then when he got hard again, this perv wanted to use my feet to jack himself off.\"\n\n\"Smart guy.\" I said. \"He knows hot, sexy feet when he sees them.\"\n\n\"I'm glad we got here before you came.\" said Laura, who was removing her clothes. Once naked, she straddled Eddy and fit the head of his cock to her wet pussy. She then sank down onto him, impaling her tight twat onto his long, thick length, taking him deep inside her.\n\n\"Unnnnh, that feels soooo good.\" Laura moaned. She began riding Eddy hard, and she bent down to kiss him. \n\n\"God, you're wet!\" Eddy gasped. He didn't realize that Laura's pussy had been filled by Todd's large load earlier, and he didn't care. Laura was kissing him as she rode him hard. They made out hotly as they fucked, then Eddy sucked my wife's milk-filled breasts.\n\nMelina and I watched a few minutes, then went and got what every man wants at 2:30am... breakfast! We cooked up a big feast of breakfast foods. \n\nAfter Eddy came inside Laura, they came and shared the breakfast with us. Then Melina and Eddy went to the guest rooms (separate ones, to Eddy's dismay), while Laura and I went to the master bedroom. We showered together, then got into bed, and Laura pressed her ass into my abs as we cuddled in a 'spoon' position.\n\n\"Was she good?\" Laura asked. \"Katherine?\"\n\n\"Yeah.\" I said. \"She was good. Not as good as you, of course\"\n\n\"Of course not.\" Laura said tartly. \"You gonna fuck her again? In the interest of political relationships?\"\n\n\"Maybe.\" I said. \"Political bedfellows, we would be. Literally.\" Laura laughed, and then we drifted off to slee---\n\nPart 20 - Crime and Punishment\n\n\"This is Bettina Wurtzburg, KXTC Fox Two News!\" shouted the lovely redheaded MILF reporterette, from near the burned-out ruin of Fillmore Pharmacy. \"Fox Two News has learned that the body found in last night's fire at Fillmore Pharmacy is very likely that of fugitive John Hardwood!\"\n\nBettina went on: \"Mr. Hardwood disappeared along with Mr. Thomas Cook yesterday from the vehicle that was taking them to turn themselves in to Police. Police say they'd searched the Fillmore Pharmacy earlier that day, as it was near a storm drain in the road where that limousine stopped, but Police found nothing, which is corroborated by video taken at the time of the search.\"\n\n\"However,\" said Bettina, \"a fire was reported at the Pharmacy by patrons of T-Square's hot nightclub 'Rhythms & Rap' in the early morning hours of last night. It was a raging inferno when Firefighters got to the scene, so they chose to contain the fire and let it burn. The building collapsed into the dungeon basement. Just an hour ago, a charred body was found in the ruins, and the Medical Examiner identified it by dental records as being that of John Hardwood.\"\n\n\"Police Commander Troy,\" said Bettina, \"whose daughter was almost killed by Hardwood and Thomas P. Cook, was well in sight of several persons at all times until he got home, where he was alone with his wife. A Deputy Sheriff protection detail was keeping watch at the entrance of the home, and several news vans were staked out watching the property, and no one saw Commander Troy leave his home until this morning, when he and his wife drove to the Police Station, where her car was left overnight.\"\n\n* * * * * * * * * * * * * * * *\n\n\"Good thing you have an alibi, Commanderrrrr.\" said Chief Moynahan as the coffee klatch got into full swing in MCD. \"And the Press just admitted staking out your home in order to provide that alibi.\"\n\n\"I'm sure they're hating it that I wasn't caught doing something naughty.\" I replied, to some laughter in the room.\n\n\"I'm glad you had the witnesses, though.\" said Cindy, a bit loudly. \"The Press really would be trying to make something of it if you hadn't.\"\n\n\"Yes, they likely would.\" I said. \"So, Captain Ross... when the M.E.'s report comes in and you're asked to assign Detectives to investigate the dead body that was found, who are you going to assign to the case?\"\n\n\"You're getting ahead of things, Commander.\" said Cindy. \"I'll make that determination at the proper time. But have Bowser in readiness to be assigned the case.\" Much laughter at that.\n\n\"Bow-serrrr,\" said the Chief, \"is an excellent dog, but he is just a bit too biased in this case... as is his owner's fah-therrrr. But as a serious answer, Captain Ross, I want you to personally handle this investigation, and have Detectives Warner and Washington with you at all times, and perhaps a Uniformed escort, as well. Videocameras are a must, as well.\"\n\n\"Yes sir.\" said Cindy.\n\n* * * * * * * * * * * * * * * *\n\nLater that afternoon, Cindy Ross came in. \"Okay, sir, it's official. The dead body at Fillmore Pharmacy is John Hardwood. Martha said he was drugged with some sort of neurotoxin, his hands were tied behind his back, and his neck was broken in a way that suggests a person did it with a violent neck twist.\"\n\n\"Okay.\" I said simply.\n\n\"Sir,\" Cindy said, \"You understand that I have to turn this over to the Inspector General. I can't question you, as you are my immediate superior officer, even if we weren't related. And the Chief is too close to you, as well.\"\n\n\"I understand.\" I said. \"Go to the Chief, lay it on the table, and send it up to Horace Wellman.\"\n\n* * * * * * * * * * * * * * * *\n\nThursday, December 28th. I was asked to come into the Chief's Conference Room. Inside were the Chief, the Captain Union's Rep, Inspector General Horace S. Wellman, and Deputy I.G. Robert Mullen, who was tall, gray haired, and a lawyer.\n\n\"We are here to ask you about your whereabouts during the timeframe leading to John Hardwood's murder.\" said Mullen. \"The Captain's Union Rep is here to act as your representation.\n\n\"With all due respect to the Union Rep,\" I said, \"I wish to have my attorney here as my representation, and I will answer no questions without my attorney being present for any and all questioning.\" \n\nMullen was not happy about that. The Rep nodded his understanding. The Chief was happy to hear me say that, and Wellman just gave that sinister grin that reminded me so much of his brother, University President Sidney P. Wellman.\n\nA half hour later, Mike G. Todd arrived, and Mullen was even less happy about who it was. Mullen might've been a Jack Lewis supporter and Val Jared hater, and Mike Todd had shredded the sexual harassment attacks on the embattled Governor.\n\n\"All right, Commander Troy,\" said Mullen. \"We have a pretty solid timeline of your whereabouts into the evening of the 26th. The Press recorded your movements, or you were in the presence of multiple Police Officers. What I don't understand is why your wife came to County Jail while you were there.\"\n\n\"My wife is the Police Department's official psychologist.\" I said. \"She is part of the evaluations done every year on everyone. She interviewed Lt. Irwin and Sergeant Rudistan while at First Precinct that evening, then she came home with me.\"\n\n\"Yes, so they said in their depositions.\" said Mullen derisively.\n\n\"Are you suggesting their depositions are inaccurate?\" asked Mike G. Todd. Mullen stared daggers at him, realizing we weren't going to play, nor give stipulations here.\n\n\"No, I am not.\" said Mullen. \"So, Commander, you and your wife drove home, and a Deputy detail and Press vans followed. We have that. Did you leave your home once arriving there?\"\n\n\"Not until the next morning, when we drove here.\" I said (truthfully, by the way).\n\n\"Can you prove that?\" asked Mullen. \"That you stayed at your home the entire night?\"",
        "\"I wasn't aware I needed to prove it.\" I said. \"I guess you can ask my wife if I was there with her all night.\" We both knew that spousal privilege would keep Laura from having to answer anything if she didn't want to... and even if she did answer it, it didn't prove nor disprove anything. It was a stalemate: Mullen would have to prove I was not at home, and he had no way of doing that, either... unless he was far more brilliant than I thought he was.\n\n\"Why did you go to your home on the mountainside, rather than your main home closer to the University.\"\n\n\"My wife and I wanted some 'alone time'.\" I said.\n\n\"What does that mean?\" asked Mullen.\n\n\"It means, Mr. Mullen,\" I said, \"that I wanted to have sex with my wife without anyone else there.\" Mullen turned red-faced. The Chief barked a laugh, but IG Wellman laughed more loudly. The Union Rep smiled.\n\n\"No need to be so uncouth about it.\" Mullen muttered.\n\n\"That wasn't uncouth.\" said Mike Todd. \"If you want a demonstration of 'uncouth', I'm sure the Commander can arrange one for you.\"\n\n\"No doubt.\" I said. \"Do you have any more questions, Mr. Mullen?\"\n\n\"Just one.\" said Mullen. \"Will you take a lie detector test for these and further questions?\"\n\n\"No.\" I said. \"I don't believe in them. They're not admissible in Court, and I don't allow them to be used for suspects in my investigations of them. Therefore, I refuse to be subjected to them myself.\"\n\n\"He's right about that.\" said Chief Moynahan. \"He will not let the TCPD use lie detectors, and never has.\"\n\n\"So why should I believe you if you won't take the lie detector test?\" asked Mullen, almost shouting.\n\n\"He just told you.\" said Mike G. Todd. \"They're not admissible, and if you're not believing him without taking one, you won't believe him if he does take one. I'm advising my client to not take a lie detector test, as well, and if you attempt to use that refusal against him in any way, we'll take this to the Court system immediately.\"\n\n\"Well,\" said Mullen, \"there's no point in asking further questions, since I'm being stonewalled.\"\n\n\"Mr. Mullen,\" I said, \"if you're as biased against me as you sound right now, you should recuse yourself from this investigation.\"\n\n\"Are you saying I'm biased?\" Mullen all but shouted, his face beet red.\n\nMike Todd said \"Don't answer that.\" To Mullen he said \"This interview is over. And at this point, get a warrant if you want to question him further.\"\n\n* * * * * * * * * * * * * * * *\n\n\"I'm glad you called me in.\" Mike said as we sat in his office. \"I think you're right about that Mullen guy; he's biased. He's trying to play the edges, you being alone with your wife, trying to browbeat you into taking a lie detector test.\"\n\n\"You think he's a problem?\" I asked.\n\n\"I doubt it.\" said Mike. \"The Press was doing all they could to catch you trying to do something... and ended up being your alibi themselves. I guess he can make things sound bad for you if he's really out to rip you, but my guess is that IG Wellman isn't going to play that game and will shut him down, I'll keep on their tails about it.\u2028\n\n\"Thanks.\" I said. \"Now, let's talk about something else, and this is not billable hours, okay?\" \n\n\"All right.\" said Mike.\n\n\"Have you ever thought of running for District Attorney?\"\n\nPart 21 - Twists And Turns\n\nFriday, December 29th. A huge eruption of applause burst out from the crowd on the front lawn of University Hospital as Teresa Croyle was wheeled out of the front entrance by her fianc\u00e9 Todd Burke. She was wearing all black, with a golden necklace with a pendant of six red diamonds shooting from the center around her neck, and her right arm in a sling, keeping it immobilized.\n\nShe waved to the crowd, then was helped into a Police cruiser driven by Lt. Irwin. The vehicle drove down the road, past the rows of buildings of the southern part of Campus, and onto University Avenue.\n\n\"Where are we going?\" asked Teresa as Lt. Irwin turned onto the road that led up to The Cabin.\n\n\"Commander Troy asked me to take you up to his house.\" said Irwin. \"He said something about a dog missing you.\"\n\n\"Awww.\" said Teresa. When they got there, I was there to greet them. And so were two outstanding dogs.\n\nTo my surprise, Buddy did not have an 'accident'. But he jumped up and put his front paws on Teresa's leg to get her attention.\n\n\"Hey, Buddy!\" Teresa said to the very happy dog. \"I'm okay. I'm here.\" She went and sat down on a sofa in the greatroom. Buddy jumped up on one side of her, and Bowser on the other. Bowser was showing some love and gratitude, as well.\n\nI showed Lt. Irwin around the The Cabin while Teresa petted and talked to the dogs for a long time. A good long time...\n\n* * * * * * * * * * * * * * * *\n\nWhen she walked into MCD, Teresa received another huge ovation from the very full room of Detectives, Officers, and their Leadership. There was a cake for her that said \"Welcome Home!\".\n\n\"Yes, this is home.\" she said as she read it. \"I'm very happy to be back. I need to go downstairs and qualify with my gun left-handed.\"\n\n\"So sorry!\" I said. \"The range is closed today, by order of the Police Commander. You can do that next week. Right now, you are on Restricted Duty for Medical Reasons. Sit back and relax... and do paperwork.\" That last part got a lot of laughter from the crowd.\n\n* * * * * * * * * * * * * * * *\n\n\"This is Bettina Wurtzburg, KXTC Fox Two News!\" shouted the lovely redheaded reporter at 7:00am, Tuesday, January 2d, from in front of City Hall. \"Fox Two News has learned that the investigation into the death of reporter John Hardwood has taken an unexpected turn! Roll tape.\"\n\nTape rolled, and Robert Mullen was shown making a statement: \"Commander Donald Troy is not cooperating with our investigation. He has refused to answer our questions and has taken the Fifth. We are being stonewalled, and I am recommending that Commander Troy be suspended until he cooperates fully.\"\n\nBettina: \"That statement got strong responses from several persons. Roll tape.\" Tape rolled.\n\nChief Moynahan: \"Commander Troy never took the Fifth; that was an outright lie by Mullen. Commander Troy did answer the I.G.'s questions. I was there, and what Mullen said is an outright fabrication.\n\nSheriff Allgood: \"What Mr. Mullen says contradicts what my Police Chief and the Inspector General themselves reported to me. I've asked I.G. Wellman to assign someone else to this investigation.\"\n\nI.G. Wellman: \"Mr. Mullen is being asked to take a step back, and will be reassigned to other tasks. His comments were not correct. Commander Troy never took the Fifth and he did answer questions regarding the Hardwood case.\"\n\nBack to Bettina: \"Several formal complaints were made to the State's Office of Ethics and Review by Social Justice groups. The Citizens for Police Accountability, the State Organization for Women, the Committee of Concerned Citizens, and Senator Maxine Watts's new group, 'Black Voices Raised', have all made formal complaints that Mr. Muller was removed from the investigation to protect Commander Troy from criminal prosecution!\"\n\nBettina went on: \"When asked what evidence there was against Commander Troy, Jay Swenson of the CFPA said this. Roll tape.\" \n\nSwenson: \"Mr. Mullen was getting that evidence when his voice was silenced. But it's not just the evidence. It's the optics of impropriety on Commander Troy's part, and the seriousness of the charges that requires an independent investigation.\"\n\nBack to Bettina. \"And let's go to Nick Eastwood for the Sports report. Nick!\"\n\n\"Thank you, Bettina!\" said Nick Eastwood from in front of the University Athletic Complex. \"The University Bulldogs beat Northwestern University 59-3 in the Gator Bowl yesterday, and Coach Ted Thrasher has faced an avalanche of criticism! When reporters asked about him running up the score, he said this. Roll tape.\"\n\nCoach Thrasher: \"I could say that it's up to their defense to stop our offense. And we did play just about everyone on our roster, including some Freshmen. Only redshirted players didn't play. But the fact is, ladies and gentlemen, is that we should've been in a better bowl, and no disrespect to Northwestern, but we should've been playing a higher level of competition. I ask again why we weren't in the Cotton Bowl or one of the bigger bowls in Florida.\"\n\n\"Then why did you accept the Gator Bowl bid?\" asked a reporter.\n\n\"We had no choice.\" said Coach Thrasher. \"We were told that was the only bowl we could attend, and if we didn't go we wouldn't have the extra practices. I'm not going to harm our program by not having those extra practices. It's an insidious trap. We were in a Catch-22.\"\n\nBack to Nick: \"Coach Thrasher's remarks did not go over well with Gator Bowl officials, who complained for days that the Bulldogs did not attend functions and did not encourage their fans to come to the game. There were only 3,000 people in the stands, one of the most poorly attended bowls this year. And the Wildcats beat Texas A&M 17-16, so why Coach Thrasher thinks the Bulldogs should've been there isn't immediately understood.\"\n\nBettina said \"Nick, any truth to the not attending functions?\"\n\nNick replied \"When pressed, the Gator Bowl officials said that the team attended all official team and bowl functions. But there are extra, unofficial charity events that players are asked to attend, and Bowl officials said University players boycotted them, which the players deny was an actual boycott. It's semantics and 'he said, he said', but some bad blood has been brewed.\"\n\n* * * * * * * * * * * * * * * *\n\n\"Coach Thrasher is right about the Gator Bowl.\" Cindy said bitterly as we drove to Nextdoor County for Molly's promotion ceremony. \"That was a joke, and everyone has egg on their faces now.\"\n\n\"Couldn't agree more.\" I said placatingly.\n\n\"Well, it's overwith.\" said Teresa, who was in the backseat, her right arm still in a sling. \"I'm more worried about the way the Haters and the Press are trying to convict Commander Troy of murdering John Hardwood in the Media. Speaking of all that, Commander... what did you do with Thomas P. Cook?\"\n\n\"I have no idea about him.\" I said, truthfully. No news of Cook had come up at all, and I had no idea what Elizabeth and Kathy had done with him. I then said \"But you know... I have an idea...\n\n* * * * * * * * * * * * * * * *\n\nThe ceremony was at the Nextdoor County Athletic Complex gymnasium. It was well-attended, as it was the retirement ceremony for the popular longtime Chief Malden. Then came Molly Evans's promotion to Police Chief, and Lt. Paul Price was promoted to Captain and Assistant Chief.\n\nLots of photos were taken, including some at Molly's request that included me and Cindy, then a couple of Molly and her boys with me... that would be a 'family photo', and I was proud to have a copy of that photo in my office in The Cabin.\n\nThe Press showed up in larger-than-normal numbers, and that was so that they could ambush me. So I used them for my own purposes and came to the gaggle outside in the cold.\n\n\"Commander, why did you take the Fifth?\" asked Diane William of KCTY.\n\n\"I didn't take the Fifth, and that's been verified multiple times over.\" I said. \"It's outright libel if you keep saying I did.\"\n\n\"Commander, who killed John Hardwood?\" asked Priya Ajmani. Ah, the opening I was looking for... and I didn't mean Priya's pussy.\n\n\"We all know,\" I said, \"that Thomas Cook and John Hardwood were last seen together in the limousine, then they both disappeared from the vehicle, and near where Hardwood was found dead. So logic would have to dictate that Thomas P. Cook is the one involved in Hardwood's death. Maybe Cook murdered Hardwood and then made his own escape.\"\n\n\"Do you really believe that, Commander?\" asked Bettina skeptically.\n\n\"It's more plausible than you Press guys trying as hard as you can to convince people that I did it.\" I said. \n\nAnd to my surprise, it worked. The Press did not show me accusing them of fake news bias, so all they showed were my comments that maybe Cook was the culprit.\n\n* * * * * * * * * * * * * * * *\n\nAnd what happened to Thomas P. Cook?\n\nOn the night of December 27th, somewhere north of the City, a woman came into her office... and screamed. Aides rushed into the room.\n\nA tenterhook had been attached to a chain that was secured to a beam in the ceiling. Hanging from the tenterhook was the naked body of a man, his hands manacled behind him. His penis and testicles were cut off and stuffed into his mouth, and secured by his necktie being used as a gag. He had been disemboweled by being cut open from his groin to his sternum, and his organs and a mass of blood, feces, and tissue were on the floor. He had been executed here.\n\n\"That's... that's Thomas Cook!\" shouted one man, his voice quivering in fear.\n\n\"Yezzz, it is.\" said the woman, having gotten over her initial shock. \"So who did this?\"\n\nAn aide made her way to the desk, taking the long way around the pool of blood. \"There's a mask and a note on the desk, ma'am.\" the aide said.\n\nIt was a Guy Fawkes mask, that 'Anonymous' wears these days. And under the mask was a note, which said: \"We are Legion. We do not forgive. We do not forget. Expect us.\"\n\n\"Ohhhhh, shiiiiiiit.\" gasped the woman.\n\n\"Ma'am,\" said the aide, \"this note reeks of perfume.\" She brought it over and the woman sniffed it.\n\n\"This...\" she said, \"is the perfume of the Iron Crowbar's sister. She betrayed Pastor Raymond Westboro, helped her brother murder him.\"\n\n\"What do you want to do?\" asked the man.\n\n\"Dispose of the body.\" said the woman. \"Clean this shit up... no, wait. They know where we are, and who I am. We're evacuating to Location Delta. After everything is cleared, burn the building down...\"\n\nPart 22 - Night of January 16th\n\n*BANG!* *BANG!* *BANG!* *BANG!*\n\nWhhhirrrrrrrrrrrrrrrrrrrrr...\n\nAs the echoes of the shots faded away, the targets began flying back towards the bay. It was clear to all that Teresa had easily re-qualified with her gun left-handed. But right-handed was going to be a close call. It was Thursday, January 4th.\n\n\"Left hand is perfect. Right hand is good, but barely.\" said the Armorer, wearing his trademark gray baseball cap as he examined the target of the right-hand shooting. I was also watching, and agreed.\n\n\"Pretty ragged with the right hand, there, Croyle.\" I said teasingly. \"So... would you rather have range time, or desk duty?\"\n\n\"Range time, sir.\" Teresa said, flat deadpan. \"At least I get to shoot things.\"\n\n\"Well, you're qualified to return to full duty.\" said the Chief as the Armorer certified the qualification.\n\nWe went upstairs, and of course had a little party in MCD, with lots of doughnuts and coffee.\n\n* * * * * * * * * * * * * * * *\n\nThere is an adage that 'no good deed goes unpunished'. Not even the most heroic ones.\n\n\"Okayyyyy,\" said the Chief as my Angels and myself came into the Chief's Conference Room thirty minutes later. \"Unfortunately, we have a full Board of Inquiry concerning Captain Croyle's rescue of young Carole. It will be on January 16th.\"\n\n\"What are the issues?\" I asked.\n\n\"The big one that has been raised is whether or not Captain Croyle violated Commander Troy's orders by going into the warehouse.\" said the Chief. \"The second one is whether or not Commander Troy should've allowed Captain Croyle to be anywhere but at her desk, especially with regard to her penchant for collecting Purple Orders, and due to her previous Christmas Eve isssssssuuuuuuues.\"\n\n\"Sheesh.\" I said. \"No regard to the fact that she saved a four-year-old child, whether or not it was my child.\"\n\n\"This is ridiculous.\" said Cindy. \"I've already been deposed. Everyone in or near MCD heard what you told Teresa, Commander. She did not violate your orders...\"\n\n* * * * * * * * * * * * * * * *\n\nFriday, January 5th. As I came into my office at 6:00am, I was stunned to see that someone was inside, waiting for me. It was none other than Takaki Misaki. Todd and Misaki's eldest son were in the anteroom, and alerted me.\n\n\"Misaki-sama!\" I said as I came into the office. I bowed correctly. \"I'm honored to see you, though very surprised.\"\n\n\"I apologize for intruding, and at such an unusual hour,\" said Misaki, whose movements were very secret. \"I wanted to give you something. I should have destroyed this, but I believe that it is in everyone's best interest that you see it.\" He extended his hand, which contained a scroll. I took it formally, opened it and read it. It was Teresa's death poem. It said:\n\n\"Asked on that darkest Christmas Eve,\n\nwhy couldn't it have been me?\n\nI give my answer in blood this Christmas Eve,\n\nand go forth to meet my Destiny.\"\n\n\n\n\"Thank you for showing me this, Misaki-sama.\" I said.\n\n\"Please keep it.\" said Misaki. \"And I also came to tell you that all is in readiness for January 27th.\" With that, Misaki made his formal goodbyes, and left with Todd and his son attending him.\n\nI was near tears as I re-read Teresa's death poem. Her pain had not been in the death of her sister. It had all centered on those words of her father, a father that mentally abandoned her in the worst moment of her life.\n\nAnd then I remembered Carole's words. She had seen it that I had come for her, had not abandoned her. And I resolved then to be sure to be there for my daughters and sons, whatever it took...\n\n* * * * * * * * * * * * * * * *\n\n10:00am, Tuesday, January 16th. A large crowd was gathered to witness the proceedings of the Board of Inquiry. \n\nMr. Silas, the older black man, was the presiding Commissioner. Mr. Fitzgerald and Mr. Finneran were also on the Board. It was Finneran, who hated Police, and hated me personally, that had raised the issues concerning Teresa's actions.\n\nTeresa was sitting at the table to the side, the Captain Union's Rep with her. I had been asked to sit with them; technically, this Board of Inquiry was about my actions as well as Teresa's. Cindy and the Chief were on the first row, and we were all in our Duty Dress uniforms. Todd Burke was also sitting with Cindy, as was Laura.\n\n\"This Board of Inquiry is convened.\" said Commissioner Silas. \"There are two major issues that this public hearing is convened to determine. First, did Captain Teresa Croyle disobey orders when she entered the Ward Harvester warehouse, however heroically, and however happy the result was; and second, should Captain Croyle have been ordered to remain at Police Headquarters, given her previous issues during the Christmas season and her record of five Purple Orders, which is alarmingly high.\"\n\nI was called up first. And Finneran was hell-bent on giving me hell.\n\n\"Commander Troy,\" he said, \"did you order Captain Croyle to not enter the Ward Harvester warehouse without your explicit permission?\"\n\n\"Those were not my instructions to Captain Croyle.\" I said.\n\n\"Are you sure?\" asked Finneran. \"You are under oath, Commander.\"\n\n\"I am sure.\" I said. \"And if you're insinuating I'm lying by reminding me I'm under oath, then you either prove me wrong or apologize for your baseless insult.\"\n\n\"We'll see if you're lying or not.\" said Finneran.\n\n\"So what did you order Captain Croyle to do?\" said Mr. Fitzgerald, trying to get the Inquiry moving along.\n\n\"I instructed her to take charge of her SpecOps teams, which she did.\" I said. \"I told her to deploy them west of Ward Harvester, which she did. I instructed her to not to send any of them in without my permission, and she didn't. But to be clear, those instructions did not extend to her.\"\n\n\"Why not?\" growled Finneran. \"Isn't she one of them?\"\n\n\"No.\" I said. \"She's Captain of Operations. Whole different thing.\"\n\n\"Is it?\" snarled Finneran. \"Aren't you picking nits? Obscuring the facts with semantics?\"\n\n\"I'm not obscuring anything.\" I said. \"And you're picking the nits. But the semantics are very important, because they prove me right and you wrong.\"",
        "\"So you're stating that you did not order Captain Croyle to not go into Ward Harvester, with or without your permission?\" asked Mr. Silas.\n\n\"That is correct.\" I stated.\n\n\"Okay, let me ask you this, Commander.\" said Finneran. \"Why didn't you have Captain Croyle remain at Police Headquarters.\"\n\n\"Because I told her to take charge of the SpecOps people and deploy them west of Ward Harvester.\" I said.\n\n\"I guess I'm not making myself clear in my line of inquiry.\" said Finneran. \"I know that I have on repeated occasions stated my disagreement with you that Captain Croyle is being deployed in the front lines. I know that several Council Members have also expressed reservations about it. So Commander, did you not consider our concerns when deploying Captain Croyle to the field?\"\n\n\"No, I did not consider them.\" I said.\n\n\"And why not?\" snarled Finneran.\n\n\"Because I consider your opinion to be of no value, Mr. Finneran.\" I stated with alacrity. \"My own counsel will I keep when making decisions regarding the Town & County Police Force... which is my job and not yours, by the way.\"\n\n\"So you're sitting there telling me you do not respect my opinion, nor the Council's?\" snarled Finneran.\n\n\"First of all,\" I said, \"I do not accept your premise that your views are the same as the entire Council's, nor their official opinion. Second, yes... I am telling you that I do not respect your opinion, Mr. Finneran, and I will not consider it at any time while I'm doing my job of commanding the Town & County Police Force.\"\n\n\"Okay, I think we're clear on that.\" said Mr. Silas. \"Let's call our next witness, which is Captain Ross.\"\n\nFinneran started in on her: \"Did Commander Troy lie when he said he did not order Captain Croyle to not enter Ward Harvester without permission?\"\n\n\"I'm not going to waste time on this.\" said Cindy. \"Supervisor Milton, would you please play the video that was placed into evidence?\" Myron got up. Finneran objected, but Silas was having none of it, and told Myron to proceed.\n\nThe video came up, and it showed me telling Teresa to deploy the SpecOps. My own words, at the time. And those words were devastating to Finneran's assault on my integrity.\n\n\"So as you can see,\" said Cindy, \"Commander Troy's words at the time are what he testified to today, and you owe him an apology, Mr. Finneran.\"\n\n\"It'll be a cold day in hell before I apologize to him.\" snarled Finneran. At that time the Captain Union's Rep demanded Finneran be recused. Silas declined to do that, but warned Finneran. And we had some legal groundwork laid.\n\nLast, Teresa was not brought to the stand, but was interrogated from her chair. Finneran asked just one question: \"Captain, did you disobey your commanding officer's orders and entered Ward Harvester without his permission?\" Teresa stood up in the silence and said:\n\n\"It does not matter.\"\n\nThere were murmurs in the audience, then Teresa went on: \"I'll explain that. What you decide in your political charades is unimportant. What matters is that my fianc\u00e9 Todd Burke and my best friend Cindy Ross will not have to wake up next year remembering Christmas Eve as the day their cousin died.\" There were murmurs in the room. Cindy's eyes were just a bit too wide for her face.\n\nTeresa went on, and I saw her lip quivering as she said \"And Commander Donald Troy... the kindest, wisest, and bravest man I have ever known... will not have to wake up next Christmas Eve remembering it as the day his daughter died.\"\n\nHow she got the rest out, I don't know, but she then said \"But Carole Troy will remember Christmas Eve... as the day her father did not abandon her, but came and got her out of that black hole in the moment she most needed him. That is all that matters to me, and what you decide is irrelevant, and unimportant.\"\n\nWell over half the audience stood up and began applauding Teresa's statement. She just stood there, numb. I stood up with Cindy, Todd, and the rest of them to applaud, but soon realized that taking Teresa into my arms and hugging her was the right thing to do. She clung to me in return. Only a few of us in that room knew the true measure of what it took for Teresa to say those words, expiating the demons of her life... and it was the measure of her that led her to put it all on the line to rescue a four-year-old child from otherwise certain death.\n\nMr. Silas banged his gavel repeatedly until order was restored. \"I can see two things here.\" he said. \"First, Captain Croyle's courage is beyond question. And second, this is a Police Force forged in strong links of loyalty and brotherhood, or sisterhood as the case may be, and we are lucky to have them serving our Citizens. This hearing is adjourned.\"\n\n* * * * * * * * * * * * * * * *\n\n7:30pm, Tuesday, January 16th. The Town & County Council convened in Executive Session.\n\n\"The Board of Inquiry sent it's final report an hour ago.\" said the Mayor. \"No surprise that it is 2-1 in favor of Captain Croyle's actions being legitimate, and Commander Troy's actions being correct, as well.\"\n\n\"I'll tell you right now,\" said Kelly Carnes, who no longer had ally Thomas P. Cook on the Council with her, \"that I agree with Commissioner Finneran's very strong dissent. I believe Captain Croyle acted improperly and disobeyed orders, however brave she was and however successful her mission was. And Commander Troy's actions were beyond inexcusable.\"\n\n\"You would think that.\" said Dagmar Schoen. \"The ironic thing is that if you had children, Mrs. Carnes, and it had been your child in that warehouse... Captain Croyle and Commander Troy would've done the same things to save him or her.\"\n\n\"If memory serves me correctly,\" said Edward Steele, \"Commander Troy did go into that same warehouse and rescued three children some years ago. And what Captain Croyle did... I... I just don't have words...\"\n\n\"Six Purple Orders.\" said Carnes. \"They had to force Joe Smedley to retire when he got his sixth. Are we going to have to do the same for Croyle?\"\n\n\"Captain Croyle is a leader.\" said John Colby. \"She should be leading. But also... her Officers are going to do what Commander Troy's did for him... they're not going to let either of them lead with their noses.\"\n\n\"Which got now-Captain Ross almost killed.\" said Malinda Adams. \"I see Ms. Carnes's point... when does it stop?\"\n\n\"When the criminals stop.\" said Edward Steele. \"Look, folks, Police work is dangerous. We're lucky to have some very brave and capable Police Officers in this County. In this case, it happened that Captain Croyle was in a unique position to remember that pit being there, and being physically capable of getting into that Ring of Fire and getting Carole out and into that pit in time.\"\n\n\"People,\" said Reginald B.F. Lewis, \"why are we even wasting time talking about this? Every one of us was glued to our televisions watching what those very brave people did... Captain Croyle, Commander Troy, the whole rescue team...\"\n\nPart 23 - Loyalty Rewarded\n\n\"This is Bettina Wurtzburg, KXTC Fox Two News!\" shouted the lovely redheaded reporterette at 7:00am, Thursday, January 25th. \"Fox Two News has learned that Prince Ogaki, a cousin of the Japanese Emperor, will visit the City Buddhist Monastery this weekend!\"\n\nBettina: \"The Japanese delegation that includes the Prime Minister is in Washington for important economic talks. Prince Ogaki, representing the Chrysanthemum Throne, has expressed a desire to visit the City Monastery, which has been in service for over 150 years. The Monks of the Monastery are ready to welcome the Prince of the Seventh Rank, and security will be tight, including putting a tarp over the open space over the garden in the center of the Temple.\"\n\n* * * * * * * * * * * * * * * *\n\nSaturday, January 27th. As the Press fawningly covered the arrival of Prince Ogaki at the Buddhist Temple, where he would be staying overnight, Teresa and I went to the Federal Building, and to the office of Jack Muscone.\n\n\"What are you guys doing here?\" he asked. \"Not that I'm not glad to see you.\"\n\n\"Just checking in.\" I said. \"And if the Press happen to see us, they'll think we came to see you.\"\n\n\"Instead of being received by Prince Ogaki at the Temple?\" asked Jack.\n\n\"Not much gets by you.\" I said, in the form of a quotation.\n\n\"Heh. Well, that's understandable.\" said Jack. \"Right now, my people are working on Thomas P. Cook. We think he's dead, and half the FBI thinks you killed him, but no leads.\"\n\n\"I wish I could claim credit for killing that piece of shit.\" I said. \"But I'm not the one.\" That caused Muscone to peer at me.\n\n\"Well, I've got more on my plate than that.\" Muscone said. \"I'm trying to track Red Brookstein, but he's lying low. Maybe he and Cook are hiding out together.\" I chuckled.\n\n* * * * * * * * * * * * * * * *\n\nAs it grew dark, Teresa and I were picked up by a limousine from Ichimoku Industries. We were driven as part of a convoy to the Buddhist Temple, which was northeast of the City, east of the Airport. Other vehicles in the convoy carried Todd Burke, Teddy Franklin, my wife Laura, and Misaki's people that worked with BOW Enterprises and Ichimoku Industries.\n\nWe were taken to small rooms, where clothes were laid out for us. Teresa was given a black kimono with the Clan Troy crests on front and back, and black leggings and a red sash belt. I was given a similar black kimono and leggings. They were silk, and very comfortable. I put my swords in their proper place in my red belt, and I also had a red overmantle vest with wings on the shoulders and two long vestments that tucked into the belt.\n\nWhen we came to the hall, Takaki Misaki and Todd met us, both wearing swords, and both wearing white kimonos with the blue insignia of four leaves pointing into a circle, blue sash belts, and Misaki was wearing a blue overmantle similar to mine.\n\nWe were then ushered by the Buddhist monks to the main indoor audience chamber. I expected to see Prince Ogaki, but the man that was on the raised platform at the end of the room was not the Prince... it was the Emperor of Japan himself!\n\nWe all bowed, and Misaki re-introduced me and introduced Teresa. \"Ah so!\" said the Emperor, \"Ms. Croyle, your bravery and sacrifice were astonishing. The Empress and I were most pleased you were able to escape that death trap relatively unharmed.\"\n\n\"Thank you, Your Majesty.\" said Teresa, bowing, not trying to use Japanese, as any mis-step before the Exalted would be very bad.\n\nOne of the Emperor's advisors came to him and said it was time. The Emperor again congratulated us, then he excused himself and left with them, and we retreated down the hall to another small room.\n\nTeresa was invited to a side room, to watch a short film. In it, she watched as the black crowbar she used, and the metal in which it was embedded, was melted down along with other pieces of metal into one block by the Town High metalworkers. Then it was airlifted to Japan, where Yoshindo Yoshihara, Japan's preeminent swordsmith, and his apprentices began work on it. Yoshindo himself did much of the work, unlike my swords that were done mostly by the apprentices. \n\nTeresa watched as that black crowbar was transformed into two of the finest swords in the world. Their handles were wrapped in blue cloth with gold trim, and were beautiful as well as useful. When the film was over, she came into the anteroom.\n\nI had changed the overmantle from the 'soft' one to a heavily starched overmantle, red in color, with ties to connect them over my chest. This was a formal Clan leader overmantle, and I knew Misaki would also be wearing one, in dark blue. \n\nA young man, whose name was Taro, was waiting to lead us into the chamber behind the large wooden door in front of us. He would be carrying a ten-foot-high red banner, with the symbol of Clan Troy at the top. \n\n\"Before we go in.\" I said, taking something out of my kimono's inner pocket. I began wrapping the piece of white cloth around Teresa's waist, tying it off.\n\n\"My thousand-stitch-belt!\" Teresa exclaimed happily. \"You found it!\"\n\n\"I found it before I found you.\" I said. \"I figured this was the right time to return it. Are you ready to go in?\"\n\n\"Hai, Sire!\" she said. We turned to face the doors, and I nodded to Taro. The monks opened the doors, and we followed Taro and our Clan banner inside.\n\nThe outdoor court had a tarp over it. Over a hundred persons, many masked, some with torches, were aligned in semicircular rows facing the platform at the other end. Takaki Misaki and Todd were waiting there, in their white kimonos with blue patterns. Behind the stage was an area sheathed by cloths; the Emperor or perhaps Prince Ogaki was there, giving the seal and mandate of the Chrysanthemum Throne to this ceremony.\n\nBanners of the Takaki clan and the Troy clan encircled the gathering. I knew that Laura was here, somewhere. I also knew that Dr. P. Harvey Eckhart had been invited, and perhaps his daughter was here as well, but I did not see them.\n\nTeresa and I reached the dias and Taro took our banner to one side. We bowed to Misaki, who returned it. Then I came around to my left, Misaki's right, to the edge of the stage, as Teresa stood alone to receive her reward for her courage.\n\n\"Teresa-san,\" Misaki said. \"Your actions and your character are of the most noble quality. You are a worthy member of the Troy clan, whose leader believes you are worthy to be a samurai warrior. Do you wish to proceed?\"\n\n\"Yes, Sire.\" said Teresa. \n\n\"To whom do you swear loyalty?\"\n\n\"To the United States Constitution.\" Teresa said. Okay, so I'd told her my answer in advance, and she wisely said the same thing.\n\n\"An excellent choice.\" said Misaki. His daughter Mariko used the diabetes blood tester to prick Teresa's finger, and smeared her blood on five pieces of rice paper. Then Misaki opened a fan and waved it three times with words in Japanese. On the last word, the entire assemblage raised two hands and yelled what was for them a cheer.\n\nThen I presented the box that was handed to me to Misaki. He threw back the silk sheaths inside it to reveal the swords. \"Teresa-san,\" he said, \"these swords were created from the crowbar you used, as well as pieces of the Ward Harvester building, at the invitation of the Exalted by Yoshindo Yoshihara and his apprentices. He personally ensured that these swords are the finest that he himself could possibly make. Remember, Teresa-san, that the sword is the soul of the samurai, and that the remnants of Ward Harvester are part of your own soul now.\"\n\nWith that, Misaki presented the short sword, which Teresa put into her sash with help from Mariko. Then he handed her the katana. She turned and, holding the sword over her head, and unsheathed it halfway. Everyone in the room began the two-armed cheer, and yelled over and over and over, in waves around the room, it seemed. Then Teresa sheathed the sword and put it into her sash.\n\n\"Come, Don-san. Walk with me.\" said Misaki. I was stunned; I had just been invited to walk alongside one of the most powerful men in the world, as his equal down the aisle and out of the room. Our two banners preceded us, side-by-side, and Todd and Teresa fell in behind us as we exited, the assembled persons all bowing until we'd cleared the room.\n\nOnce outside, I bowed and said \"Thank you for that great honor, Misaki-sama.\"\n\n\"Don-san,\" said Misaki, \"for you, it is now 'Misaki-san'.\" He handed me a scroll. \"The Emperor is vastly impressed with your abilities. You are to keep this scroll. It makes you a personal advisor to the Exalted, the same level as myself, the CEO of Ichimoku Industries, and just a few others.\" I was stunned.\n\n\"You should write a note to the Exalted, thanking him.\" said Misaki. \"My daughter Mariko is gifted in the written arts, and will assist you, if you wish.\"\n\n\"I would be honored.\" I said. With that, I learned how to write a thank-you note to the Emperor of Japan. It was not a thank-you note after a wedding or Christmas. I had to choose my words carefully, and write with flowing beauty and precision. Mariko's help was invaluable.\n\nAfter we were done, I went up to Teresa and said \"May I see 'Ward Harvester'?\" Teresa slid the katana partway out of its scabbard. It was an incredible piece of work, literally art in the form of sword steel. And it now had its name.\n\nSome time later, we were all fed. It was not a large feast, but a ceremonial supper with relaxed rules of etiquette. I realized that some high-level people were having meetings, and we were waiting for them as we ate and drank. About an hour later, we were gathered and transported out of the Temple.\n\nPart 24 - Courage Rewarded\n\n\"This is Bettina Wurtzburg, KXTC Fox Two News!\" shouted the lovely reporterette at 7:00am, Thursday, February 1st, front in front of City Hall, where a platform had been built over the stairs leading to the front portico. There would be a ceremony here this day, as it was Medals and Promotions Day. \n\n\"Fox Two News has learned that Captain Teresa Croyle will receive her sixth Purple Order today, making her only the second Town & County Public Servant to receive that many Purple Orders in Town or County history, the other being the late Joe Smedley with both the Police and Fire Departments.\" said Bettina. \"And while there has been no official announcement, it is widely believed that Captain Croyle will be receiving the Medal of Valor today. We do know that several Police and Fire Officers will be receiving awards at today's 1:00pm ceremony here at City Hall.\"\n\n* * * * * * * * * * * * * * * *\n\n\"Okay, here it is.\" said Cindy Ross, as she opened the box to reveal the Purple Order. It was on a chest drape ribbon, meaning it hung from the uniform shirt, as opposed to the neck ribbon that hung around the neck. Joanne Warner was wearing her Purple Order on its neck ribbon as she and I strained to get a look at the one in the box.\n\n\"Wow.\" I said, seeing the silver oak leaf cluster in the middle of the purple ribbon. \"May we never see one of these again.\"\n\n\"Sir,\" asked Joanne, \"since it's just one oak leaf cluster again, shouldn't it be on a neck ribbon?\"\n\n\"Well,\" I said, \"there is one other reason Captain Croyle will be wearing it on her uniform instead of around her neck.\"\n\n\"Ohhhhh...\" Joanne said, understanding.\n\n\"And here is that one other reason.\" Cindy said, opening another box. The Medal of Valor, with its red ribbon and upside-down, well-adorned five-pointed star, was inside, and as always it was an impressive sight to see.\n\n\"Are there any promotions today?\" asked Joanne.\n\n\"There's some pay grade increases.\" I said. \"Morton is being promoted to Sergeant. The Council wanted to wait on Mary until May. She still has to go to Academy Advanced Course, which will occur later this month.\"\n\n* * * * * * * * * * * * * * * *\n\nTeresa was sitting in her office, trying to do paperwork, and failing. She felt strangely tense inside. She knew she would be in front of a lot of people today, and though Commander Troy had talked to her about what it was like, she was still nervous.\n\nThere was a knock on her door, and Chief Moynahan appeared. \"Captain,\" he said with his gravelly voice, \"this Police Chief wanted to say hello to you.\" Following him in... was the Police Chief of Teresa's hometown... the policewoman that had been there for her the night Alexis had died, and had been helpful as a Police Captain when Teresa had gone home to bury her father. (Author's Note: 'Secrets of Apple Grove'.)\n\n\"Well, hi!\" exclaimed Teresa. She got up and hugged the woman warmly. They chatted for a few minutes, then Moynahan said \"Why don't I show her around while you get ready for the cere-moan-eees.\"\n\nA minute later Cindy came in. \"Those two Police Chiefs are making eyes at each other.\" the platinum blonde said. \"Romance is in the air tonight, if I don't miss my guess.\"",
        "\"No place like our Town & County to find love.\" said Teresa. \"Or at least sex. Lots and lots, and lots and lots, of sex.\" Cindy burst out laughing.\n\n* * * * * * * * * * * * * * * *\n\nChester Morton was promoted to Sergeant, his stripes pinned on him by Sergeant Rudistan and myself. Patrolman Johnson got a pay grade promotion, among others. Then came a slew of Certificates of Achievement and Achievement Medals. Roy McGhillie and Teresa Croyle received Achievement Medals for rescuing girls from the overturned Orphanage bus in the Dec. 23d collision with Billy Russell's car. Theo Washington also received an Achievement Medal for his work on the Cochran cold case, which led to the indictment of Thomas P. Cook.\n\nCaptain Cindy Ross received a Public Safety Star of Gallantry for following me and the rescue team into Ward Harvester right after it was destroyed. I'd put her in for the Legion of Excellence; it was double-downgraded by the Council. Politicians. Can't live with 'em, can't shoot 'em... well, I could shoot them. Sheriff Allgood upgraded it from the Police Star to the Public Safety Star, which I thought was a good thing to do.\n\nAs always, the last medal was the Purple Order, and yes, we had one. As Captain Teresa Croyle came up to receive it, there was a very loud standing ovation. As Chief Moynahan read the proclamation, I pinned the medal on her Uniform jacket... but first I held it up for all to see the silver oak leaf cluster, which just generated even louder applause...\n\n* * * * * * * * * * * * * * * *\n\nPersonages began assembling at City Hall at 12:30. Sheriff Allgood, Chief Deputy Oswald, Police Chief Moynahan, Fire Chief Quinlin, Public Health Officer Beth Paige, Admiral Leonard R. Cordell, USN (Ret.), Police Chief Emeritus Griswold, Fire Chief Emeritus Gillem, Dr. Laura Fredricson, Carole Troy, Melina Allgood, Captain Ross, Members of the Town & County Council, Mayor Larry Vaughan (the People's Choice), and others.\n\nCourthouse Square was full. Absolutely packed. It was hard keeping people out of the streets. It helped when the Booker T. Washington High School Marching Band came through. The did their choreographed routine in front of the bleachers that faced the platform on the City Hall steps. Those bleachers were filled with Police Officers and Firefighters.\n\nI had been instructed to ride on the first of two Fire Engines that made the loop around Courthouse Square. With me were Fire Lieutenant Easley, Fire Marshal Zoe Singer, and Fire Engineer Gregory Towson, and Police Lieutenant Irwin. On the second of the two Fire Engines was Captain Teresa Croyle.\n\nOnce assembled at 1:00pm, Sheriff Allgood presided over the ceremonies. The first award went to ... me. I was being awarded the Sheriff's Medal. Partly for running into the remains of Ward Harvester at the peril of my life, but more for, as the proclamation said: \"Commander Troy showed exemplary leadership, directing the deployment of Police and Fire resources in a manner that saved lives, and showing exemplary command leadership in spite of the fact that his own daughter was the person trapped in the Ward Harvester warehouse.\" I called that just doing my job. The majority of the Council saw it differently, and it was made the law of the Town & County that I receive the reward.\n\nThen I pinned the next four awards onto their recipients, while the Police or Fire Chief read the proclamations. They were the four that had come down with the stretcher to take Teresa out of the pit and to safety. First was Police Lieutenant Irwin, receiving the Police Medal. Then Fire Engineer Gregory Towson received the Fire Medal, his son loudly applauding from behind him among the people on the stage.\n\nThen came Fire Marshal Zoe Singer. She was being awarded the EMS Medal with Oak Leaf Cluster. As I was about to pin the medal on her uniform, I held it up for her to see. It was not red-bordered, as Fire Department medals were... it was green-bordered! Zoe looked shocked but happy.\n\nSomeone made the 'mistake' of letting Your Iron Crowbar write the language of the citations into the ordinance for the medals. After Zoe's, I inserted the words '(old style)'. Then I had the green-bordered medal, which was the old EMS medals and ribbons edges, made at my own expense. Zoe knew what it meant... I had not given up on bringing back the EMTs, and this was the first salvo in that operation.\n\nLast was Fire Lieutenant Roy Easley's Fire Medal. He was last for a reason. He and I remained as the others sat down. Cindy and Chief Griswold came up. We all had one thing in common... red-ribboned Medals of Valor around our necks.\n\nFire Lt. Easley would read the proclamation. Chief Griswold escorted Teresa Croyle to the front of the stage, to tremendous applause. Cindy held the box, and it was my great honor to take the Medal of Valor from that box, drape it around Teresa's neck, and fasten it. Thankfully, I did it right. Then we backed up and a tremendous ovation erupted over Courthouse Square... and in the Cancer Center at the Hospital, into which the ceremony was being televised.\n\nWe'd all fought for the right to put the Medal around Teresa' neck. Ultimately she decided when she tearfully told Chief Moynahan and Sheriff Allgood that while Cindy was her best friend and Chief Griswold was like a father to her, only one person had gone to her hometown and found out her story and found that picture of her and Alexis, and that one man had given her a chance she did not deserve, brought her back to the TCPD, and backed her up all the way, thus saving her career and her life. Teresa had asked for me to do it. Cindy sulked (not really), and swore retribution in the Police Boxing Matches. Like she needed any motivation for that, but I digress...\n\nAs we all cheered her, Teresa acknowledged the ovation, and a moment later she felt something tugging at her leg. She looked down to see a four-year-old hugging her legs. My four-year-old. The same child Teresa had rescued from the Fires of Hell.\n\nTeresa bent over and picked Carole up and told her to look at all those people. Carole just put her little arms around Teresa's neck and her head on Teresa's shoulder in a hug. The thousands on the Square were eating it up, applauding even more wildly. \n\nI would later notice in the photos being taken that Teresa was smiling a beautiful, joyous smile... a smile that had not appeared on Teresa's face since she was sixteen years old and had been the first to cross the finish line in a race to earn her and her sister gold medals. The demons of Teresa's past were expiated.\n\nCarole would not be making any such hugging trips again. Teresa would receive no more Purple Orders. The Fire Department would have a Medal of Valor about ten years from now, but the Police Force would not have another one for nearly a quarter of a century. At that time, Police Commander Teresa Croyle would drape the M.O.V. on the recipient's neck. The recipient's father, the Town & County Police Chief, would watch with tears in his eyes.\n\nLike the beating of a butterfly's wings changing the wind currents of the world, the brutal words of an insane father set in motion an inexorable set of events leading to Teresa saving the life of a four-year-old girl... which ultimately led to the second Iron Crowbar, Town & County Police Detective Carole Troy, taking and barely surviving bullets meant to kill the Israeli Ambassador to the United States, foiling an attempt to create a chain of events leading to a nuclear world war.\n\nYes, Teresa, I thought as I watched her and my little daughter at the front of the stage, you are free from your father's curse. And no, you did not choose to be who you are. It is your karma.\n\nFinis."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "hot wife",
        "big cock",
        "drama",
        "police drama",
        "crime drama",
        "mystery",
        "iron crowbar",
        "blowjob",
        "foot worship"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/teresas-christmas-finale-ch-03"
}