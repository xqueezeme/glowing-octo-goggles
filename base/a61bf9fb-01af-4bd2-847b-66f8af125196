{
    "title": "There and Back Again Ch. 008",
    "pages": [
        "Chapter Eight: Mabari Endorsement \n\nOnce we got to the Imperial Highway, I lead, chatting with Leliana as we walked. I told her about Tomas and Theron, reminding myself to be even more careful with their aliases than I already was being. I explained that we were survivors from Ostagar waiting to meet up with three others, including two Grey Wardens - I think the existence of a third Grey Warden should remain a secret for now - and that we had a plan to defeat the Blight. \n\n\"So, two Grey Wardens, two warriors, and a mage. And what skills do you bring to the group, may I ask?\" I opened my mouth to admit that I really didn't have any skills, just as Theron stepped onto the path from the trees. \n\n\"She's the brains. At least, I'm hoping she is, because we keep following her advice.\" Theron grinned, Leliana laughed, and I blushed. I stammered out introductions, and Theron held his arm out, I think expecting me to take it. I surreptitiously pushed Leliana forward, feeling only slightly guilty for throwing her under the bus, but she gamely took the proffered arm and Theron couldn't refuse without being rude. I tried not to smirk. \n\nWe walked into the trees a little ways, and Theron opened his mouth to talk just as I heard laughter, and shouting, the bark of a large dog, and that voice...that distinctive voice that I knew so well, from my own fantasies as well as the game. \n\n\"Theron! You didn't tell me they'd arrived!\" I rushed forward, suddenly optimistically eager to see my fantasy brother and my fantasy man, and burst into the clearing where I'd built the fire the night before. \n\nFirst I saw a brown blur, as a growling canine creature came running at me across the camp. I had one second to see Alistair's face - well, that's unfair, he's even better looking in real life - before I saw bared teeth, heard someone shout, and nearly soiled myself. Mabari are huge! The hound rushed up to me, stopping just short of bowling me over, looked up at me and sniffed in my direction, turned around to face towards the camp it had come from, and sat on my foot. My vocal cords finally caught up with the rest of me, and I squawked in a combination of fear and discomfort as my foot was squished by about a hundred pounds of dog butt. The crazy animal turned his head, licked my hand, and woofed happily, then returned to looking across the camp from his perch. \n\nEveryone stopped to stare. Theron and Tomas, Morrigan and Alistair, Aedan and even Leliana. In the game, it implied Mabari were one-person dogs. They imprinted for life. They didn't like anyone else until they were proven to be looking out for their master, and even then it was conditional upon good behaviour. I had absolutely no idea what to do with the overgrown critter deciding he owned me, when I was sure Aedan belonged to him first. \n\nI gently extracted my foot from his hind end, trying to ignore everyone watching me as I hunkered down beside him. I realised I didn't even know his name. I held my hand out near him but not reaching towards him, palm up, fingers extended. It was all I could think of to be non-threatening. He looked over at me, hung his tongue out of the side of his mouth in a goofy smile, and then rested his snout in my hand. I cautiously scratched under his chin, and he wagged his tail and chuffed. I slowly brought my other hand over to pat his head, and ended up scratching behind one upturned ear. He tilted his head with a pleased whine and closed his eyes. \n\n\"Who's a good dog? Yeah. That's right. Good dog. I, um, I don't know your name, fuzzybutt. However, I'm Sierra. Thanks for the vote of confidence.\" \n\nHe opened one eye, only to roll it at me as if to say \"Duh.\" \n\n\"Aedan?\" I didn't stop watching the mabari, clearly enjoying the attention as I found ticklish spots on his head and down his back. His fur was surprisingly soft, and remarkably clean for the moment. I figured that wouldn't last long but enjoyed it nonetheless. \n\nI heard footsteps approach, and out of the corner of my eye saw a tall, lean, dark-haired man crouch down beside us. \"Yes?\" \n\n\"I'm assuming you belong to this furball. What's his name?\" \n\n\"Prince.\" \n\nI laughed. \n\n\"What?\" \n\n\"I used to...dream I had a mabari too. In my dreams I named mine Prince as well.\" Prince opened his eyes, huffed at me to say \"enough talking\", and then thoroughly licked my face, making me sputter and curse. Aedan cracked up, but that only lasted until Prince turned to him and repeated the same action, with the same result, and both of us shouting \"Prince, no!\" \n\nAedan stood, and offered me a hand. My legs were a bit numb from crouching for so long, and I needed the assist. I finally looked up from the ridiculously self-satisfied dog to find everyone still staring at me, open-mouthed. As I looked from one face to the next, I saw expressions ranging from suspicion and worry on Alistair's handsome face, to a slightly embarrassed, guilty look on Aedan's, to attempted indifference on Morrigan's. It didn't take much to figure out who they'd been talking about before I interrupted their conversation. \n\nI did notice that Alistair had his hand on Tomas' shoulder, and looked like he would never let go. Tomas bore an embarrassed but pleased half-grin, and I knew he was as happy to see the ex-templar as Alistair was to see him. Alistair and Aedan were both liberally coated in gore, and I remembered the darkspawn ambush when the mabari caught up with the party from the game. I tried to be discreet, looking at them both, but couldn't see any obvious injuries. Morrigan, on the other hand, was clean. And somehow dirty at the same time. Put on some clothes, woman! \n\nI turned to Aedan, who still held my hand, and converted the assist to a firm handshake. \n\n\"Hi. I'm Sierra. You're Aedan. It's nice to meet you.\" I almost told him I was sorry for the loss of his family, but figured he wouldn't want to hear it from a suspicious stranger. \"Leliana? This is Aedan. A Grey Warden. Aedan, Leliana is my...friend.\" I hope. \"I told her she had nothing to fear from you and the Grey Wardens.\" \n\nI left them exchanging greetings after that thinly veiled plea and approached Alistair. Trying to keep in mind that I wasn't his, not in this world, and that he had every reason to think I was either deranged or evil, I kept a vacuous smile on my face, held out my hand, and introduced myself to him. I made eye contact, and felt a bit overwhelmed. He was way more gorgeous than in the game, but they got the expressiveness of his face dead on. And I was right - he was huge. It was hard to tell exactly when he was in plate armour, but he towered over me, and I hadn't ever thought of myself as short. His eyebrows quirked up, and despite the obvious emotions passing across his face he tried to smile. My mouth dried out, my tongue glued itself to my palate, and I mumbled my way through introductions to Leliana. \n\nNext was Morrigan. I didn't offer her my hand, but tried to give her a friendly smile. \"Hello, Morrigan.\" \n\n\"So. What are you supposed to be, then? Demon? Fade spirit? Another apostate, perhaps?\" She was baiting me, trying to see how I'd react. I think. I'd know if I was a demon, right? I kept my cool. I remembered in the game always thinking you could never afford to lose your temper or be overly emotional in front of Morrigan. Not without paying a price. I heard Leliana mutter, though the rest of the group seemed unsurprised. Clearly this was what they'd been discussing then. \n\n\"Just Sierra, I'm afraid. Quite boring, actually, by comparison to those possibilities!\" I heard Alistair snicker, and could picture the look on his face without turning. This is...surreal. \"I'm pleased to meet you. I wish I could have met your mother, but I didn't know how to find your home in the Wilds. Perhaps one day I will.\" \n\n\"I have never heard of a demon with polite manners. I suppose I'll have to cross that one off the list, shall I?\" Without waiting for introductions to Leliana, or any sort of response, she turned and strode off into the bush. After an embarrassed silence, I cleared my throat and turned back to the rest of the group. \n\n\"And Leliana, you met Theron already,\" Alistair twitched in surprise when I said the name, pointing at the individual in question, but Tomas gave him a look and he quieted down, \"but this is Tomas.\" He nodded at her. \"Leliana was just telling me that Loghain has set a bounty on the head of any Grey Warden brought in, dead or alive. So you guys,\" I gestured to Alistair and Aedan, \"need to be careful with your identities. It's a good thing your likenesses are not well known.\" I gave Alistair and Aedan a direct look, each in turn, and saw both men catch on to the silent warning I was trying to give. I was right. Alistair's not dumb. Smarter than Cailan, by far. \n\n\"So, we brought some food. Anyone hungry?\" I gestured to the pack Leliana still carried, and then turned away from the group to quickly work the coin purse out of my cleavage. I handed both back to Tomas, and he tucked them away somewhere faster than I could blink. Does he practice doing that? Everyone grabbed a bite, and we all ate, awkwardly, silently. I tried to avoid feeling self-conscious despite knowing that practically everyone was either staring at me or studiously avoiding me. Prince wandered over, after begging scraps from pretty much everyone, and settled at my feet. Oh good, more staring. I was sort of uncomfortable, and I finally shrugged off my cloak, reached down to grab the hem of my dress, and removed it, just like I had the day before. I heard Alistair sputter until he realised I was fully clothed underneath. It was starting to get dark and chilly. I heard rustling, and Tomas tossed my coat at me after fishing it out of one of the packs. I smiled my thanks and put it on, still aware of the stares. I finally broke the silence. \n\n\"So...who'd like to talk? I think we should talk.\" I grabbed a couple of pieces of wood to toss on the fire, then settled down to sit cross legged. I heard Theron snort and Alistair gasp, and rolled my eyes as I switched to a more ladylike position. That's going to get old, fast. Everyone slowly took seats, with the exception of Tomas who paced nearby. I made sure not to sit near Theron. I finally called out, clearly but not loudly, \"Morrigan? I won't push it, but I'd love it if you would join us for this. Otherwise everyone will assume you haven't heard it.\" \n\nI heard some rustling in the bushes, and then her voice as she called back \"One moment, please.\" Tomas jumped, and I grinned. Shapechanging for the win. Morrigan emerged from the shadows and gracefully sank onto a rock; nearby, but not part of the circle. Good enough. \n\n\"I'm going to explain to everyone here who I am. Theron and Tomas have heard this story, but it's weird enough that I hope not to bore them with the repetition. As strange as it may seem, I actually trust each and every one of you implicitly. But there is a slight problem. I know you all have secrets, things you don't wish to discuss with strangers, or in this group. I know many of those secrets, and I will explain how that is so in a minute. But I don't wish to reveal secrets that aren't mine to tell. With Tomas and Theron, we discovered it was easier, eventually, to have some discussions one on one. So I'm going to describe who I am, but there are going to be times where you think I'm leaving things out, or being deliberately vague. You'll be right. Because I'll be avoiding telling someone's secret. So please bear with me.\" I looked around at the strange collection of faces around me, getting at least hesitant nods from each one. It's a start. I took a deep breath and began. \n\nI repeated the story I'd told Theron and Tomas. The theatre performance analogy, the window, the sending stone. Watching the events of the Blight unfold through Aedan's eyes. The dizzy spells, the dreams, then waking in the Wilds on the day of the battle. The battle, the fear, and then finding that somehow, Theron and Tomas survived when no one else did. Us leaving Ostagar, walking slowly to allow Alistair, Aedan, and Morrigan to catch up. Me disappearing for two days, out of the middle of camp, with even Tomas, on watch, surprised. Returning just as suddenly in the middle of a fight, and the darkspawn ignoring me. Everyone asked questions, all of them good, most of them I couldn't answer. \n\nAnd then I repeated the same process with the larger group that I'd gone through with Tomas and Theron. I passed around my boots, my coat, and my map of Thedas. I dragged my safety pins and compass, Swiss army knife and hand flashlight out of Tomas' pack. I flicked the lighter, asked Tomas to show them some of the money I'd given him. At some point Theron stood, wandering around camp, watching the rest of the group watch me. \n\nMorrigan finally stirred, when I was done. She stepped up behind me, and I swivelled to face her. \n\n\"May I?\" She held out her hand, and I placed mine in it. Suddenly Theron stepped between us, knocking aside her hand. \n\n\"I believe her. I saw her just appear out of thin air. She doesn't need to be...tested, by an apostate.\" \n\nI raised my hand, lightly touching Theron's arm. \"It's okay. I'd like to know. If she can tell me anything about how I'm here, what magic this is, then I welcome it.\" Nudging Theron out of the way, I held my hand out to Morrigan again. \"I said I trust you, and I meant it. And Alistair? Please don't smite anyone unless you've confirmed I'm dead. I don't want any misunderstandings.\" I heard a grumble, but ignored it, still making eye contact with Morrigan. She took my hand, and I felt that familiar crackly aura like when I'd been near the Emissaries while they were casting spells. I resisted the urge to twitch. I felt more than saw a ball of energy leave her and pass into me, and I could almost feel it running through my body, up and down my extremities, giving me butterflies in my stomach, briefly making my head burn, and then it returned back through me to her hand again. I waited with bated breath. \n\n\"Human. Definitely not a demon, or an abomination, and I don't feel any sign of mage power. I'm sorry, I've no idea.\" \n\n\"You sound disappointed, Morrigan. Like I said...I'm just boring Sierra.\" I was rewarded with what looked like an actual smile, for the briefest of moments, before she rose, spun on her heel, and left camp again. I turned back to the circle, making eye contact with Alistair next. \n\n\"Your turn.\" \n\nHe jumped as though I'd stung him. \"Me?\" \n\n\"Yes. Smite me, or whatever it is that you do. I want to see if you think I'm a mage. Tomas already wondered if it was possible. I can't imagine it is, but...frankly, stranger things have happened.\" \n\n\"I can't! I won't. It's painful, if I do it that way. Even if you're not a mage.\" \n\n\"But you'd be able to tell?\" \n\n\"Ye-es, I suppose, but...\" \n\n\"Please? I need to know, Alistair. I think we all need to know. Tomas knocked me over a bunch of times yesterday, ask him. I can handle a little bit of pain.\" Alistair and Aedan both turned nasty glares on Tomas, and I laughed. \"He was trying to teach me how not to impale myself or drop my sword in combat. It's not his fault I'm clumsy. Please, Alistair?\" I'd half bum-shuffled, half crawled over to him by this point, and he looked distinctly uncomfortable as I pleaded with him. I put my hand out, uncertain if he needed physical contact for it to work. \n\n\"Well not here, certainly! It'll hurt everyone, and leave Morrigan retching up her guts.\" He got up, carefully, and I scrambled to my feet as well, following him out twenty feet or so from camp. He turned to look at me, opened his mouth to speak, but nothing came out. Finally his shoulders sagged. \n\nI felt a shockwave hit me. It's the best description I could come up with. It rippled the ground, raising the dust, and rocketed straight through my bones. I was lifted slightly and propelled back a ways, landing on my back in the dirt. I had the breath knocked out of me, and I clutched my chest for a moment before I was able to gasp a breath. I heard footsteps, and then everyone was there standing over me. Alistair looked sick, kneeling beside me, like he'd killed a kitten or something, and I tried my best to look reassuring. Theron bent down, lifting me in his arms, holding me for a moment before I insisted he set me down. I didn't miss the speculative look Aedan gave Theron and me both. \n\n\"So? What's the verdict?\" \n\n\"Definitely not a mage.\" I was relieved and smiled thankfully at him before turning to walk back to camp. My legs gave out from under me, and Theron caught me again, to my utter dismay. He carried me back to the camp, setting me down near the fire. Tomas moved over beside me to take my hand and ask if I was all right. I squeezed back and nodded. Alistair shouldered Theron out of the way to sit beside me and apologise effusively, and I wondered if he even thought about who he'd just shoved. I didn't miss the daggers Theron directed at Tomas as I continued to hold his hand, though. I got another speculative look from Aedan, and knew I was blushing again. And then he grinned, crossing his eyes and sticking out his tongue, and I choked as a laugh tried to explode out of my sore chest. That triggered yet another round of apologies from Alistair, but fortunately Tomas handed me a water skin so I could clear my throat. \n\nFinally I got my breathing back to normal, and realised we still hadn't discussed what I'd learned in Lothering. I shook my head and launched into it - the presence of Arl Bryland's men, the rumours flying about who betrayed who. \n\n\"Bryland? These aren't his lands. The Bann here is Ceorlic. Why are Bryland's men here?\" \n\nLeliana cleared her throat softly. \"Apparently the Bann withdrew with his men, leaving the common people behind. They didn't even try to help evacuate, and in fact, left a bunch of badly wounded soldiers behind for us to care for. When Arl Bryland marched through, he left part of his army to try to get as many refugees as possible out of Lothering. They've been incredibly effective, and I think that, if the darkspawn hold off for two or three more days, the evacuation will be complete.\" \n\n\"I'm not surprised,\" offered Aedan. \"Bryland is a good man. Ceorlic is a snake.\" \n\nI mentioned the confirmation that Loghain was hunting for any surviving Grey Wardens. Theron blew his cover multiple times, suggesting that we all just march into town and demand that Bryland's men give us a Royal Escort to get back to Denerim. Leliana's mouth dropped open as she figured out who he really was. Tomas and I argued with him, with even Aedan jumping in a couple of times, but I finally lost my temper. \n\n\"His Majesty,\" I gave him a dirty look, and he winced, \"has the ability to command us to do as he wills. However, I suggest that he rethink how much he enjoys having his royal head attached to his royal neck.\" I stood, pacing. \"Loghain has shown that he will do anything, risk everything to ensure your death. Are you so arrogant that you believe you can outsmart him that easily? Do you think he doesn't have agents in every Bann's army, in every town, who will report your existence without a second thought? If you think the bounty on the Grey Wardens is large, imagine how much he would pay to get your head on a platter. \n\n\"Whether you like it or not, you don't have the right to go down in a blaze of glory. You're the bloody King. You don't take unnecessary risks with your royal person. You don't trust in the goodwill of the average soldier, you don't announce your presence when someone is trying to have you assassinated, especially someone willing to sacrifice half of Ferelden's armies to make it look accidental. You don't fight on the front lines, you don't face the Archdemon, and you don't ignore the people working their asses off to save your life. ",
        "\"You haven't seen Ferelden without a clear line of succession. I have. I've seen the civil war, the abuse, the chaos that follows if you die. You don't get to be selfish. You get to stay safe inside the palace, or at the back of the army, out of harm's way, letting your men concentrate on fighting instead of worrying about keeping their King alive. You get to die old and toothless, surrounded by grandchildren. You don't have to enjoy it, but your people deserve it from you. \n\n\"Do you understand that I risked dying, willingly put myself into the middle of a battle I knew in advance we couldn't win, just hoping somehow to bring you back from the dead? Me, the business consultant, who'd never even punched someone before, never mind held a sword. Tomas almost died for you. Thousands of men did die for you. Some of the people standing here lost everything in the last few days, for you. Don't you dare make it all for nothing. You don't get that right.\" \n\nSometime during my rant I headed towards him, and was now standing directly in front of Theron, mere inches from poking his chest every time I made a point. I suddenly realised what I had done, and, mortified at my own verbal diarrhea, I clapped both hands over my mouth, sobbed once, and then turned and ran off into the darkness around the camp. I heard swearing behind me as I ran, and I dodged between trees and rocks as best I could in the moonlight. I ran for several minutes, stopping only when I tripped on something in the dark and crashed down onto my knees. \n\nI curled up into a ball, shoulders shaking as I cried. I tried not to, hating the tears even as they streamed down my face, but I couldn't make them stop. I heard rustling, and felt a heavy, furry body climb over me to squirm in front of me and lay down. I wrapped my arms around the dog and let his thick fur absorb my tears. \n\nI heard someone calling my name after a few minutes, and realised that I'd recognise that voice anywhere. \"I'm here, Alistair,\" I managed to choke out, and I heard heavy footsteps approach. I heard him settle to the ground behind me, and slowly put his hand out to touch my arm. \n\n\"So are you the executioner?\" I tried to laugh, but it came out a croak. \"Make it quick, please. I'd rather not linger, if it's all the same to you.\" \n\nAlistair chuckled, softly. \"I forgot to bring my axe. You're safe.\" \n\n\"Did you get the short stick, having to come find me? I'm sorry.\" \n\n\"You kidding? Everyone is out here looking for you, with the possible exception of Cailan. I'm just lucky enough to have found you first. I owe you...so much. I don't know how, but it's clear Duncan believes you saved them. I owe you everything.\" He paused, looking at me speculatively. \n\n\"When you said some of us have lost everything recently, you meant me, didn't you.\" \n\nI nodded. \"Yes. And Aedan.\" \n\n\"Thank you for that. I've never had someone get so angry on my behalf before.\" \n\n\"Thank me when he agrees to go into hiding until we can safely get him back on the throne.\" \n\n\"Well, if anything was going to scare him into it, I think seeing you in a rage would probably do it.\" \n\n\"He needs to grow up, there's no question. But really, you'd think I'd know by now that screaming at petulant children doesn't tend to make them do what you want them to.\" Alistair barked out a laugh, and I grinned. \"I wish I had learned how to guilt people into doing things from my foster mother. She was amazing. She never yelled once, just gave you this face that made you feel like a terrible disappointment. I bet that would work on him pretty well.\" \n\n\"She sounds like the Revered Mother during my templar training. The way that woman wields guilt, she should have been in the army.\" We both chuckled, and fell silent again. Finally, he stirred. \"So. Want to go back and face the music?\" \n\n\"Not particularly. I think I'll just lay here for a while, if you don't mind.\" \n\n\"Oh, uh, okay. Should I stay? Or...\" \n\nSuddenly Tomas stepped out of the shadows, and Alistair and I jumped. He hadn't made a single sound. \n\n\"You go back to camp, Alistair. I'll stay here for a bit.\" \n\n\"Alright, Du...Tomas.\" I grinned at the same mistake I'd been making for days. \n\nI rolled onto my back, slightly, and poked Prince in the ribs gently. \"Go back to camp with Alistair, Prince. Go find Aedan.\" He whined, but I shooed him away, and he eventually fell in step beside Alistair as they trudged away. \n\n\"You never stop taking care of others, it seems.\" He watched Alistair disappear into the darkness, a fond smile on his face. He settled down onto the ground beside me. \"You know the dog can find his way back to camp. You worry Alistair can't.\" \n\nI grimaced. \"Stop doing that. I'm trying to be all mysterious, here.\" He laughed. I sat up; running my fingers through my hair, I discovered and tried to pick out leaves and twigs that had tangled there. \n\n\"You made quite an impression back there.\" \n\n\"It was stupid. I'm sorry. I know it's going to make Cailan...sorry, Theron even harder for you to manage. Honestly, sometimes that man makes me feel like we're herding cats. He just gets under my skin! I may not like her, but with him on the throne, Ferelden is damned lucky he married Anora, or it all would have fallen apart in weeks after his coronation.\" \n\n\"It's alright. Sometimes things need to be said. And I might not have worded it exactly that way-\" Duncan grinned slightly, \"-but I don't disagree with anything you said. He needed to hear it, and I do actually think it will do some good. He wanted to come out here to find you and apologise, but Aedan and Leliana cornered him and asked him to imagine what your opinion would be of the King wandering off, alone, into the forest at night, when there were other people better equipped to check on you. He grumbled about it, but he stayed put.\" \n\n\"Will miracles never cease? Man, I knew I'd love Leliana.\" \n\nTomas laughed. He reached out and took my hand, squeezing it gently. \"Sierra? You know that I'm not...well, that I don't...\" \n\n\"...want to sleep with me? I know.\" \n\n\"It's not just you. I'm not...\" \n\n\"...interested in women? But what about that mage - back before you went to the Deep Roads with Maric?\" \n\n\"It's not so much women as...well, honestly I've just had too much to do. Meeting the Architect, seeing what it did to my Commander...Sex isn't high on my list of priorities. My life has been all about darkspawn. And besides, I'm a hair's breadth from my Calling - it's not like there's a future in a relationship with me.\" \n\n\"Don't worry. I'm not looking to fall in love with you, just trying to avoid a confrontation with Theron.\" \n\n\"I thought as much. So, given that, it seems to me that perhaps the one thing you might need right now is some simple comfort. And since I can't offer you tea, or a warm bath, or any of those other comforting things, I thought that maybe I could just sit with you and let you fall asleep feeling safe...\" \n\nI leaned over and interrupted him with a kiss on the cheek. He shuffled around to put his back against a tree stump, and lifted his arm to offer me a place to curl up. I put my head on his shoulder, and he draped his arm around me. I thought that his armour might make an uncomfortable pillow, but I was wrong. Or I just didn't care. I'm not sure which."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "romance",
        "modern girl in thedas"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-08"
}