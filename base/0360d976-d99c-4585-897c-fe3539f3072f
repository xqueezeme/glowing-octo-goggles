{
    "title": "Please Wait for Me",
    "pages": [
        "This is a love story, not a sex story. There is sex, but it comes later, after James and Luke fumble toward each other. As always, I like to hear from readers. \n\n*****\n\nChapter One\n\nFor my thirtieth birthday, three of my best buddies from law school -- Andrew, Curt, and John Ralph (\"Ralphie\" to almost everyone who knew him and certainly to all of us) -- invited me to a golf-a-thon in Kohler, Wisconsin. We were to play 72 holes in less than 24 hours. They wanted to distract me.\n\nThey and others had been fretting over me ever since my wife, Jessica, had died, two years to the day before. She had awakened me the way every husband wants to be awakened (whether on his birthday or not) and, once she was finished, had gone running while I recovered, got ready, and headed to my law office. She had not returned by the time I left, which had not alarmed me. She often got lost in her runs or in the piano concertos to which she listened as she ran. \n\nI left her a note on the chalkboard by our back door that we used for such things. \"Wifey. CU2night. Rm39 at 7. XOXO, Hubby.\" We were meeting our best friends, Sam and Kyle, for a birthday dinner. Sam was short for Samantha, not Samuel. \n\nWhen Jess had not answered any of my calls or texts by lunch, I was alarmed. We were not one of those couples in constant contact with each other, but we did by rule respond to the other.\n\nI called Claire, her \"work bestie.\" Claire panicked. She had assumed Jess was playing hooky with me for my birthday, as she had not called in or shown up for work. Claire's anxiety made me even more alarmed. Jess was one of the most responsible and thoughtful people I had ever met. She would not have skipped work without at least calling in. Something had to be wrong.\n\nI called the police. After some hemming and hawing about how she had not been missing long enough to be missing, they took her name and description and typical running route and said they would search for her. I beelined home, hoping it was all a giant ruse to surprise me for my birthday. Jess was not there. My message had not been erased. My mind raced to dark places. I drove the route I expected she had run and that the police had already driven. There was no sign of her anywhere.\n\nI feared she had been abducted. \n\nShe had not.\n\nAfter sniffing some of her things, a police dog found her scent and then her body. She had been running on the shoulder of a two-laned road and had been hit so hard by a passing car that she had been knocked into the overgrown ditch that ran alongside it, in which she was invisible from the road. The driver had not stopped and was never found. Inexplicably, the driver had not called 911 or done anything else that may have saved my wife's life. A faceless, nameless person had killed my twenty-eight year old wife, negligently and unaccountably.\n\n*****\n\nI had been a Biology/Science History double major at Denison when I met Jess, an ebullient blonde from nearby Newark. We were Sophomores, and we met at a tie party. The men took a tie to the party and placed it in a box upon arrival. The box was sealed, and each woman reached through an arm-sized hole to grab a single tie. Once they had pulled a tie, they were to spend the party getting to know the man whose tie they grabbed.\n\nJess had not grabbed my tie. Instead, she had conspired with my roommate to know which tie was mine, and she then broke the rules and swapped with the girl who had grabbed it. At our rehearsal dinner, she explained the desperate steps she had taken. She said she had long had her sights set on me and had been openly flirting with me since we met as Freshmen in Chemistry, although she \"must have been really bad at it, as Jimmy did not seem to notice. At all.\"\n\nI had noticed. I was just too deep into my internal, silent struggle with my sexuality to know which way to turn. Although I had been sexually active with girls from our eighth grade graduation party on, I had been fantasizing about guys since long before that party. My first crush had been on Miles O'Keefe, the star of an old Tarzan movie I had stumbled across on a rainy Saturday when I was in junior high. When I ignored the lies about impending blindness or hairy palms, I imagined his floppy hair, long muscles, the hairy armpits, and loin cloth. \n\nAs I matured, it's not that I was not attracted to women. It's that I was slightly more attracted to men. On the Kinsey scale, I was somewhere between a 3 and a 4, but trending toward the 4.\n\nI ignored the trend, told no one, and worked my way through girl after girl. I was the youngest of four boys, and my father and brothers were rock-solid Catholics and rock-ribbed Republicans. They were also virulently anti-gay. They mocked even the hint of femininity in a male. Men were not to do \"woman's work.\" Men were not to cry. Men were not to embrace. Men were to stand tall and remain stoic. Compassion, emotion, empathy, and the like were for my mother and my aunts, and it was a betrayal to need or want them. They had to be given, not solicited. I could not risk the rupture with them that would follow any acknowledgment I was attracted to men, much less that I felt a stronger attraction toward them than I felt toward women. I stood tall and remained stoic.\n\nJess was a Denison dynamo, here, there, and everywhere. Everyone knew her, or at least knew of her. Many chased her. No one caught her. Everyone wondered who would.\n\nNo one outside of my dorm and my major really knew or knew of me. Roiling from the turmoil inside of me, I tended to keep to myself. I studied in my room. I worked out on off hours when the rec center was mostly empty. I spent hours alone in Denison's BioPreserve, tracing the migratory habits of salamanders. I went to every guest speaker who visited campus, usually by myself. While others were drinking and drugging, I was absorbing and learning. I had earned an Honors scholarship, and I was not going to dishonor it. \n\nJess was like no woman I had ever met. She smiled constantly, even when she was angry. She loved everyone and everything. She was relentlessly positive. She had boundless energy. \n\nI do not know why she was so patient with me, but she was mine from the moment she tied the tie for which she had bargained around my neck. And I was hers. It was easier than the alternative I could have accepted, but did not. If I could date and be with women, then that was what I was going to do, even if it was a betrayal of sorts. I could easily sacrifice a little bit of myself if it meant not sacrificing my family, my standing, or anything else. \n\nBesides that, she stole my heart. She was relentless, dragging me kicking and screaming out of myself and into the light. Just the sight of her made me smile. She convinced me to play \"Stare Into Your Eyes,\" one of a number of games she either discovered or invented. In that one, we'd press our foreheads together and lock eyes for as long as we could. At first, I had to look away after only a few seconds. By the time she died, we played daily for as long as she wanted. It was revelatory.\n\nShe unearthed a playful side of me. I was guarded with everyone but her. When it was just the two of us, I could play the fool. I'd walk around the house with my penis out of my boxers, claiming it \"wanted to look around\" or \"needed some air.\" I'd sing in the shower, usually some kind of bastardized version of a popular song. When Adele's \"Someone Like You\" hit, I changed the lyrics to \"Someone Like Pooh\" and insisted she had written the song for Christopher and as a cryptic anthem in favor of the man/beast love Christopher felt for Winnie. She'd shrug at me, smile, and mumble \"there's something wrong with that man.\"\n\nI made up songs. I created a long chant that I referred to as \"a rousing rendition of peeeee-nis, vagiiiii-na.\" I'd see-saw the words back and forth, my head exaggeratedly left on \"peeee-nis\" and exaggeratedly right on \"vagiiiii-na.\"\n\nI changed the words to Hymns. \"I will raise you up, on eagle's wings, bear you on the breath of life\" became \"I will beat your ass, with my bare hand, make it so you cannot stand.\"\n\nI'd sit at her grand piano, randomly hitting keys and pretending to be a prodigy. When she played--which was often and well--I'd sing random words that made no sense to anyone but me.\n\nWhile others found my obsessiveness irritating, Jess embraced it. She thought it was cute that I separated my M&Ms into colors and then ate them in threes, abandoning the last two blues or the last orange because there were not three and I could not eat only one or two and would not mix them with another color. She indulged me by purchasing divided plates so my food did not touch and was patient as I ate each food group separately, of course eating peas and corn and whatever else three at a time. She was patient as we waited in restaurants because I had to sit at the same table and in the same place as we had every other time we had been to one of the few restaurants I would agree to visit. She did not mind the time I spent straightening screws in outlets and switches, squaring paintings and pictures, or writing with a ruler to ensure perfectly straight lines.\n\nMy closet was another story. She mocked the rigidity of it. I owned twelve dress shirts. They were all identical white Oxfords purchased on the same day. I owned twelve casual shirts, identical polos in black (3), red (3), and white (6), also all purchased on the same day. I owned twelve pairs of dress slacks, in black (3), in blue (3), in grey (3), and in tan (3), also all purchased on the same day and all the same but for color. The whole closet was that way, organized in threes and limited in color. I kept all for three years. On the three year anniversary, I donated them and replaced them with new clothes, as close to replicas as I could get. \n\nEverything I owned was divisible by three. I had fifteen pairs of socks, all black. I had fifteen pairs of boxer briefs, also all block. I had three swimming suits (one black, one red, and one white), although I needed only one. \n\nI owned three kinds of shoes (black loafers, black flip flops, and New Balance running shoes), but six pairs of each. I had eighteen shoe holes, six high and three across. The loafers were left, the flip flops middle, and the tennis shoes right. To keep each fresh, I wore them down the vertical, returning them toe out so I knew which pair of each to wear next. Jess referred to my closet as \"the confirmation,\" which was short for \"the confirmation of my husband's craziness.\" \n\nI disagreed. When I opened my closet door, the repetition and symmetry calmed me.\n\nJess's closet was another story. It was, to me, crazy. It was certainly the antithesis of mine. I couldn't even go in it. I had my rods notched so each article hung equidistantly from those to the left and to the right. Jess did not. She pushed more and more things into spaces too small to hold them, so everything was scrunched and wrinkled. What didn't fit was piled on the floor, mingled with things she had worn and hadn't made their way into the hamper.\n\nWe graduated in 2007. Pivoting from science, I headed to Harvard for law school. I had preferred Yale, but Jess was going to Northeastern for graduate work in Psychology, and she wanted us to be together in Boston. I offered to commute from Yale, but she rejected it. If you have to have a fallback, Harvard's not a bad one.\n\nTo our parents' dismay, we lived together in Boston. We joked that we were Ryan O'Neal and Ali McGraw in \"Love Story,\" one of Jess's favorite movies. She took to calling me Oliver. I took to calling her Jenny. We were almost an island.\n\nI graduated from law school in 2010, and we headed to Kansas City, Missouri. I was headed to an Eighth Circuit clerkship for a Judge who was one of the select few who \"fed\" clerks to the Supreme Court (she was a likely nominee herself, if and when the right President came along). Jess was headed to a children's facility to work with the autistic.\n\nWe married in Loose Park on a cloudless day in October, 2010. My judge officiated. We were twenty five years old, and we believed we had long, happy lives ahead of us.\n\nWhen I didn't land one of the twenty-seven Supreme Court clerkships meted out annually, I joined a boutique litigation firm that specialized in class actions. I wanted to work on \"bet the company\" litigation. We both worked long hours, too long for the little time we ended up having together.\n\nI greeted her death with aching disbelief. I had gotten used to having a lifeline to hold onto and to keep me afloat. I feared I'd drown without it. \n\nI could not accept the randomness of it all. I could not grasp how a woman could head out on a run and never return home. \n\nI felt a wound open inside me that I feared would never close. As time passed, it only widened.\n\nIt is a canard that time heals. Time allows you to get used to being wounded, but the wound never closes.\n\nOur family and friends descended on Kansas City. For days, I was caught in a whirlwind, shuffled here and there, told when to eat, what to wear, and when to sleep. \n\nI absorbed the affection and the tributes. I agreed with all of those who extolled Jess's virtues. I disagreed with those who extolled mine. The wound inside me gaped at the thought she had deserved more than I had given her, that I had somehow shortchanged her as a husband. I had been faithful and loving, but I knew in my core that I had not given to her what she had given to me, which was all of her. I knew I had held part of me back, ashamed and conflicted. The guilt of that knowledge haunted me after she died. \n\nThe trip to Kohler had been no different than every other encounter I had had since becoming a twenty-eight year old widower. My friends placed Jess on a pedestal, and they then placed me right next to her. She deserved the perch. I did not. As they talked, I had wanted to scream that my friends were ignorant, that I was probably gay, and that I had spent the two years since Jess died sleepwalking through my grief and my guilt because I could not forgive myself for letting her die in a lie, or at least a partial one. \n\nI did not. Instead, I just smiled and shattered a little more, pieces of me falling off and left behind. Every time someone comforted me, I lost a little more of myself in the kindness and warmth of the words.\n\nThe days between her death and funeral flew by. Those that followed dragged. Everyone returned to their lives. With Jess gone, I didn't have a life to which I could return.\n\nI was wallowing in my 730th day of self-pity at O'Hare's Gate E5 when I looked up and saw a young man waiting to board my flight. He was young, perhaps ridiculously young, and giddy. I soaked him up. \n\nHe was white.\n\nHe was about 5'8\" tall. He was fit and trim.\n\nHe had his hat on backward. Beneath the hat, his hair was high and tight around the outside, which I immediately clocked as military. His brown bangs stuck out from under the plastic band that sized the hat to fit his head.\n\nHis visage was carefree and untroubled. He looked as if he did not know shame or sin.\n\nHis eyes were dark, slightly lower on the outside, and shielded by thick eyebrows.\n\nHis nose was a button.\n\nHe had a large mole on his left cheekbone and another under his mouth on the right.\n\nHis ears stuck out farther than his bangs, the right farther than the left. I suspected he thought they stuck out too far. I did not. \n\nHe looked like a young Jason Ralph, only with a chin dimple.\n\nHis Hollister t-shirt was black and untucked. It was also V-necked, and the V revealed portions of an inked verse across his chest.\n\nHis jeans were threadbare, but tight enough to reveal what I had never had.\n\nHis shoes were black and red high tops that were untied and disproprtionately large.\n\nHe was grinning ear to ear. The grin produced deep dimples that matched his chin dimple. It also suggested he was either on something or simple. That he kept shifting foot to foot, all but his thumbs in his pockets, suggested drugs, not simplicity.\n\nStill, I could not look away. For some reason, I was transfixed. The boy looked like joy personified, his grin so wide it threatened to crack his untroubled face. \n\nHis eyes shone as he grinned and grinned. I felt predatory, but I could not look away from him. I suspected I had never been as happy as he looked in that moment, waiting to board the day's last flight from Chicago to the City of Fountains.\n\nI was compelled to move toward him. I stood up, slung my bag over my shoulder, and took a circuitous route to avoid being noticed. I did not plan on speaking to him, as boldness was not in my nature. I always hung back. \n\nI stopped right behind him. I stared at the back of his neck, which was creamy white and flawless but for two perfectly round moles almost equidistant between his spine and his right ear. I had to fight the nearly overwhelming urge to reach out and touch them to see if they were real, to run my forefinger through the fine blonde swirl in the middle of his neck, or along the ridge of his prominent ears. I had never touched another man with even the hint of affection, but I desperately wanted to touch him.\n\nI lingered as they called the boarding groups, ignoring that they had called my Group Two. I would not -- I could not -- move until he did. \n\nAs everyone crowded forward, so did I. By the time they called Group Four, I was just to his left. I glanced at the boarding pass he held out in front of himself and easily found his name: Rydell, Luke.\n\nWhen it was time to move forward, I attempted to wait so I could follow him down the gangway and watch him move. My attempt failed. He deferred to me with a casual gesture and a soft but firm \"After you, Sir.\"\n\nWe stalled in the gangway. I wanted to turn around and look at him directly, but there was no plausible reason for me to do so until he started talking to himself. \"It's going to be hard to keep me still,\" he mumbled.\n\nI turned toward him and raised my eyebrows, pretending he may have been talking to me. He remained giddy.\n\n\"Sorry, Sir,\" he said. \"I didn't mean to bother you. I'm just excited is all. I haven't been home in almost a year.\"\n\nThe \"Sirs\" were wounding me. I was older than he, but not old enough to be a \"Sir.\" I was only thirty, and barely that.\n\n\"Have you been in prison?\" I asked, trying to joke and crack the ice.\n\n\"Oh, no, Sir,\" he responded earnestly. \"I've been trainin'. You see, Sir, I joined the Army when I finished school, and this is the first time I've been home since I joined.\"\n\n\"Well, thank you for serving,\" I answered, sincerely. \"And, you can dispense with the Sirs. It makes me feel old.\"\n\n\"Sorry, Sir, but I'm trained to do it,\" he responded, again earnestly, and still grinning.\n\nI wanted to know where he was sitting, but I thought it too forward -- and creepy -- to ask. So, I smiled at him, wished him well as a soldier, and forced myself to turn away from him. If I had continued to interact with him, I'd have put my hands on him. I would not have been able to stop myself.\n\nI settled into my seat, put my noise-canceling earphones in, and opened my book. Luke was two rows ahead and on the opposite side of the aisle. I could see part of another tattoo under his left sleeve. I could also see that he remained anxious, the fingers on his left hand repeatedly drumming the arm of the chair he was in. I watched him most of the flight. I kept hoping he'd look back and smile at me, so I could smile back. Like a fool, I practiced the smile in case he did. I needn't have.\n\nAt baggage claim, I watched him remove a giant rucksack as I waited for my golf clubs. I then watched him remove another giant rucksack and then a third, smaller bag. As he tried in vain to pile them all on his back along with the backpack he had carried on, I moved toward him and offered to help. ",
        "\"Thank you, Sir,\" he said. \"But I can manage this myself.\"\n\n\"I have no doubt you can,\" I said, totally doubting he could. \"But, I doubt you should have to. My clubs aren't up yet, so let me do a good deed. I don't do many.\"\n\n\"Thank you, Sir, I sure appreciate it.\"\n\nI grabbed one of the rucksacks and the smaller bag and followed him. \"Are you headed to the curb?\" I asked.\n\n\"No, Sir. Just over there. I texted my family when I landed. Someone should be on their way. I'm happy to wait.\"\n\nI was vexed. The kid had enlisted and been gone for a year, but no one was at MCI to greet him. It didn't make sense.\n\n\"Where are they coming from?\"\n\n\"Belton, Sir.\"\n\nJesus Christ, Belton was an hour away. \"I'm happy to wait with you.\" I offered. \"Just in case.\"\n\n\"No, thank you, Sir. They'll be here directly. I'm happy to wait in the meantime.\"\n\nI was troubled by the belief that something wasn't right. Still, I reached my hand out and said, \"Luke, I saw your name on your boarding pass. I'm James. I do appreciate your service. I hope you have a great visit.\"\n\nHe took my hand. His hand was too big for his body and fit perfectly in mine. Like a big-pawed puppy, he needed to grow into his hands and feet.\n\n\"Thank you, Sir,\" he said. \"I appreciate the help.\"\n\n\"My pleasure,\" I answered, forcing myself to release his hand for fear I never would. \"I suspect my clubs are up, so I'm going to go. Fight hard for us,\" I said as I turned and walked away, embarrassed by my parting words. \"Fight hard for us?\" For God's sake, I was tongue tied, uttering the most banal, trite things.\n\nAfter grabbing my clubs, I looked back to Luke. He was sitting with his back to me and his rucksacks piled around him. I don't know why, but I again felt something was amiss. I wanted to go back and wait with him, but I didn't want him to think me the creepy predator I seemed to be. I walked through the terminal to circle parking, trunked my clubs, and headed away from the airport. I was just about to turn onto 29 South when I u-turned and headed back to Terminal C. I didn't decide to, I just did. I feared Luke was about to be crushed, and I wanted to be there to pick up the pieces if he was.\n\nI stopped in front of the window behind which Luke waited. I could see he had turned his hat forward and pulled it down to shield his eyes. \n\nI have long contended that a person's vehicular selection betrays their personality. I put my predictably conservative, reliable, and staid Volvo in park and hustled into the Terminal. \n\n\"Luke,\" I whispered, putting my hand on his muscled shoulder and shaking him awake. \n\n\"Uhh. . . . Yes, Sir?\" he answered, scrambling to his feet.\n\n\"Look, I don't want you stuck here. I'm going to wait outside in my car, just in case no one shows. You can wait there or here. But, I'm not leaving until someone shows to pick you up.\"\n\n\"Sir, that's not necessary. I'm sure they're on their way.\"\n\n\"Have you heard from them?\"\n\n\"No, Sir, not yet. But, I'm sure they're on their way.\"\n\n\"If so, that's great. If not, I'll be just outside.\"\n\nI fell asleep at the wheel of my car. I was awakened by Luke's knock on the passenger window. I started the car and powered the window down.\n\n\"Sir, I hate to be a bother,\" he said. \"But, it's been awhile, and I still ain't heard nothin'.\"\n\n\"You're not a bother. Get your bags and hop in. I'll take you wherever you need to go.\"\n\nAs we drove south, Luke sat stoically in the passenger seat, chin and head high. If I asked him a question, I got only a \"No, Sir\" or \"Yes, Sir\" in response. He was locked up, and I didn't know the combination. \n\nln the hourlong drive, I learned little. Luke was twenty, which didn't really compute if he was only a year out of high school. I didn't inquire, as I didn't want to embarrass him by forcing him to admit he'd been held back, if he had. \n\nHis family had forced him to enlist. He didn't tell me why.\n\nI tried to bring his grin back, but I couldn't. Like me, Luke seemed to be thinking something was amiss.\n\nWhen we finally stopped in front of the house to which he directed me, I was saddened for the childhood Luke likely had. It may have been a misimpression, but the state of the house strongly suggested neglect. The tiny ranch was dilapidated, the yard was unkempt, and there was trash everywhere. If it qualified as a home, it only just did. \n\nIt was also dark. Pitch dark. Either everyone was asleep or no one was home. Whichever, it was not a fitting homecoming for the soldier sleeping in the passenger seat of my car.\n\n\"Luke . . . Luke . . . wake up,\" I said. \"You're home.\" Without a doubt, those were the two most depressing words I had ever uttered.\n\nWe grabbed Luke's bags and headed to the door. As I feared, no one answered Luke's knocking, which got louder and louder. He was angry when I stopped his pounding and steered him back to the car. \"Look,\" I said. \"I think maybe you just got your signals crossed. You can stay at my house tonight. Tomorrow, we'll track your family down, shame them, and then laugh about this.\"\n\n\"Won't your wife mind?\"\n\n\"I'm not . . . .\" I started, before remembering my ring. \"Actually, my wife died. Two years ago.\"\n\n\"Oh, Sir,\" he blanched. \"I'm so sorry. I shoulda minded my own business.\"\n\n\"It's fine, Luke. You saw my ring. It was a natural question.\"\n\nWe drove on in silence until Luke broached the topic again. \"Sir, if you don't mind my askin', how did your wife . . . ya' know . . . pass?\"\n\n\"She was hit by a car while she was out running. She got knocked into a ditch. It took too long to find her. She was gone when they did.\"\n\n\"I'm real sorry to hear that, Sir.\"\n\n\"Thank you, Luke. I'm real sorry it happened.\"\n\n\"I'll bet.\"\n\nThe mood was sullen as we drove. Luke's family had stood him up. My wife had died. The air in the car was thick with both of those facts as we headed west on back roads to the home Jess and I had shared. \n\nLuke was again asleep when I pulled into the garage and shut down the engine. The sound of the garage door descending awakened him.\n\n\"Hey, we're here,\" I softly answered his inquisitive look. \"You can leave your bags in here, if you want.\"\n\n\"Okay,\" he responded, opening the door and kind of falling out of the car. It was almost 1 a.m., and his travel and disappointment seemed to have exhausted him.\n\nI had a suburban home south of Kansas City. The first floor was open but for the master suite, which was on the opposite end from the garage. The second floor had three additional bedrooms, one for each of the three rugrats we had believed we would have. \n\nI settled Luke in the largest of the three, which had its own bathroom. The bed was big and soft and I suspected a far cry from the cots the Army provided its privates.\n\nI was surprised when Luke started undressing as I turned down the bed. I guess living in a barracks with a group of men you barely knew immunizes you against disrobing in front of strangers. \n\nAs he pulled his t-shirt over his head, I gawked out of the corner of my eye. When you spend a decade stealing glances in gymnasiums and showers, you become adept at using the periphery of your vision.\n\nI struggled to breathe. There are few sights more titillating than a shirtless man in jeans.\n\nI shook myself to action. I moved to the bathroom and fished a toothbrush and toothpaste from the stash we kept for guests. \n\nWhen I returned to the room, I again lost my breath. Luke was standing in white briefs, his arms over his head as he stretched, revealing lightly haired armpits. To my surprise, he stuck his nose in his right armpit and inhaled. \"Yep,\" he said. \"It's been a long day.\"\n\n\"You're welcome to shower.\"\n\n\"Thank you, Sir, but I'm too tired. It'd just wake me up.\"\n\nI snapped a mental picture that I could keep. Luke's chest was supple and hairless. The script I had seen through the V of his shirt was unreadable to me. It looked like it may be backward or upside down or both. \n\nHis torso was milk white. Only his face, neck, and hands were not, a soldier's tan.\n\nHis stomach was lean and hairless. His briefs were tight and more revealing than his jeans. He was down and to the right. \n\nHis legs were muscled. His right thigh had a barbed wire tattoo around it. \n\nHis feet were big.\n\nAll of him was marked with the same moles from the back of his neck.\n\n\"I'm beat, Sir\" he said, shocking me from my visual rape of him. \"I need sleep.\"\n\n\"Okay,\" I answered. \"I'll be downstairs if you need anything. I left a toothbrush and toothpaste on the counter.\"\n\n\"I appreciate it, Sir.\"\n\nI stopped at the door. \"I'll see you in the morning. Hopefully, by then you'll be calling me James or Jammer, not Sir.\"\n\n\"Jammer?\" \n\n\"My grandfather was James and my father was Jim. For something different, my James became Jam, and Jam became Jammer. My family and friends all call me Jammer.\"\n\n\"Alrighty, then. Good night . . . Sir.\"\n\n\"Good night, Luke.\"\n\nChapter Two\n\nI am a member of the lucky sperm club in more ways than one. Genetically, I was fortunate to be a 6'4\" mesomorph, long and languid like my then crush, golfer Dustin Johnson. My auburn hair was curly, and I wore it long and loose. My eyebrows and eyelashes were thick and dark, darker than my hair and much darker than my light green eyes. My nose was long and narrow, and my lips were thin, but a bright red that was redolent of lipstick.\n\nMy shoulders were wide, my arms, chest, and legs were naturally muscled and lightly covered with very straight hair that, like my eyebrows, was much darker than the hair on my head. I had to fight to keep weight on, but had to do little to keep my muscles toned. It was a good thing, as I hated working out with the white-hot intensity of a thousand suns. \n\nSmiles do not come easily to my face. Jess told me I tended to look \"put out,\" even when I wasn't. I told her I was a natural counter to her constant sunniness. \n\nEven when I smile, it's not broad. I've always been self-conscious about smiling big. One, it makes me feel like a fool. Two, I have never liked my teeth, as they have always seemed too big for my lips, especially my canines. When I bare them, I feel like a dog or a vampire. When I smile, I tend to keep my mouth closed.\n\nFinancially, I was even more fortunate. I had grown up in St. Charles County, west of St. Louis. When St. Louis desegregated its schools, St. Charles County became the fastest-growing county west of the Mississippi. The desegregation plan stopped at the Missouri River, and everyone from St. Louis County who could not afford private schools moved west of the River to St. Charles County.\n\nMy grandfather had gone in with two partners to buy the first McDonald's in St. Charles, on Fifth Street. As St. Charles County grew, my grandfather and his business partners had a right of first refusal on any additional McDonald's within a certain radius of the original. They never refused, and he owned all or part of a dozen restaurants at one point, back when McDonald's was thriving and there was no \"Fast Food Nation\" or judgment associated with eating a burger and fries.\n\nMy grandfather believed in working hard and owning land. With his restaurant profits, he bought as much of St. Charles County as he could. An eighth grade dropout, he was prescient. As St. Louisans moved west, he sub-divided holding after holding, using the money he made to buy the next ring of land he could. For twenty years, it was a continuous cycle. By the time he died in 2003, his son -- my father -- was the Administrator of a trust that would provide approximately $5 million each to me and my brothers when it vested. Until then, my brothers and I received equal shares of the nearly $1 million it generated in income.\n\nJess and I had also over-insured ourselves. When she was younger, her uncle had died very young in a home fire from smoke inhalation, leaving behind her aunt and two toddler cousins. They had been under-insured, so her stay-at-home aunt was fretting about money almost immediately and as she tried to grieve her husband and comfort her children. As soon as she could, she went to work. She had to.They were always behind and without. Their plight had scarred Jess.\n\nWhen we married, Jess was insistent that neither of us should ever experience that \"insult to injury.\" We purchased $5 million term life insurance policies for each of us. I thought it was a waste of money, as we were 25 years old and extremely unlikely ever to invoke either policy before they expired 20 years later. The insurance company agreed, charging us little annually for the slight risk that tragedy would strike either of a perfectly healthy pair.\n\nBut, strike it did. And, the $5 million I received from New York Life -- especially when coupled with the income from my grandfather's trust and the promise of the principal sooner than later -- meant I had not actively worked for the past year or so. \n\nI had tried to work for awhile after Jess died, both for something to do and because I had, for six months or so, totally spaced the existence of the insurance policy. In fact, I had remembered it only when I received a notice that our annual premiums were due, at which point I collected on Jess's policy and cancelled mine.\n\nMy heart and mind were not in the work. I could not bring myself to care about that which I no longer cared about. And, I was distracted by my guilt and by the return of my internal strife. A decision or struggle I thought had been resolved now re-presented itself, and I had no idea what to do.\n\nI took a leave of absence and then resigned on my 29th birthday. Since, I had spent my 30th year pretty isolated and in my own thoughts. \n\nIn a failed search for peace, I went to a yoga class four mornings per week and to a meditation class two mornings per week. Whether as penance or to feel closer to Jess, I ran her route every day. I prayed the Rosary as I ran, hoping that increased piety would aid me in making sense of her death and in making sense of my life. When I passed the spot at which she had died, I crossed myself and asked Mother Mary to intercede on her behalf.\n\nNot long after Jess died, I had returned to church. For something to do, I drove into Kansas City for mass at Our Lady of Sorrows every weekday at noon. On Sundays, I attended the 8 a.m. mass at my parish. Some Sundays, I left when it was finished and went about my business. Other Sundays, I stayed through the 9:30 a.m. version and, if I was particularly bereft or lost, the 11 a.m. version as well.\n\nMy widower status was well-known in the parish and believed by all to be the source of my angst and the reason for my presence. It was, but only in part. The bulk of my angst resulted from trying to reconcile being created in His image and being fixated on his image, regardless of who \"he\" was at the time. For the past month or so, \"he\" had been Alex, a un-married man (at least according to the absence of a ring on his left hand) who was at every yoga class I attended.\n\nAlex was shorter than I, but most men were. I suspected he was an accountant or a lawyer or some other professional. He wore his black hair parted on the side and very neat. His face was always clean shaven. Even in his t-shirt and sweats, he looked tidy. And ripped. I suspected Alex put nothing in his body that tasted good. He could not have had more than 5 or so percent of body fat. His muscles were long and sinewy. His waist was narrow. He was as flexible as a gymnast. He seemed to view the class as a competition, always holding the pose long after the instructor released us to move to another. \n\nI stared at the back of him through most classes. I tried daily to bump into him on the way in or out, hoping we'd make eye contact, he'd introduce himself, and we'd engage in small talk. He never did. He barely noticed me or anyone else. I learned his name only from the instructor complimenting his flexibility and focus.\n\nI was disappointed when Alex stopped coming to class. I was also worried. I feared he had noticed my attention and stopped attending out of discomfort. \n\nEven when lusting after Alex, I actively contemplated the priesthood. I was alone, and expected to stay that way. I'd never find another Jess, and I didn't believe it was fair to even try. \n\nI also accepted the Church's position on homosexuality. If I was gay -- or even gayish -- then I had to be celibate. If I had to be celibate, then why not be celibate in the priesthood and try to make something out of it other than self-deprivation.\n\nMy parish priest -- Father Tim -- talked me out of it. He told me that, if I was called to the priesthood, then I'd feel a pull toward it, not a push away from something else. He assured me I should not choose it as a palatable alternative to what I either could not or would not accept.\n\nEven if I accepted what I could or would not, he was unwavering in his insistence I remain celibate. Although only slightly older than I, he was a Ratzinger Recruit, joining the seminary and the priesthood after Cardinal Ratzinger's reactionary election to the Papacy. Like almost all Ratzinger Recruits, he was doggedly devoted to traditional Catholic doctrine. He insisted sexual relations were only to be between a man and a woman and only within the confines of a Catholic marriage. \n\nHe also insisted the attraction I felt toward men was a psychological feint to lessen the pain of my wife's death. In his words, I was deluding myself to ensure I never again experienced the pain I experienced when I learned they had found Jess's body.\n\nI knew he was wrong, but I didn't argue. Talking to Father Tim was like talking to an aircraft carrier. He was unpersuadable. He was certain in his certitude.\n\nI also believed Father Tim did not believe what he claimed to believe. His attention to me and his effeminate gestures and voice betrayed that he had done what I was contemplating doing. He had chosen the priesthood as a place to hide and then deluded himself into thinking he had not. I always suspected the most ardently anti-gay boys at Denison were the ones giving head in the woods behind the Rec Center. I also suspected the most ardently anti-gay priests were the ones who had gay sexed their way through seminary and into the priesthood.\n\nAdvertently or inadvertently, Father Tim did me a solid. He forced me not to make the same mistake he had.\n\nHe did not, however, enhance my relationship to God. As a Ratzinger Recruit, he lacked the compassion and empathy I expected in a priest. He was very good at identifying rules and at insisting upon blind adherence to them. But, he was not very good at explaining how that adherence would lead me to a closer relationship with Christ or to being more Christ-like in my relations with others. The rules were the rules, whether they were tethered to grace and mercy or not.\n\nIn fact, the Church's insistence on rules pushed me the opposite direction. As I sat through Mass after Mass, I learned much more about what the Church was against than what it was for, I heard far more denunciations than I heard proclamations, and I saw many more pushed from the table than welcomed to it. I slowly became appalled. Where mercy was needed, judgment was delivered.\n\nTwo specific experiences completed the rupture. The first occurred over the Winter before my thirtieth birthday. A homeless man had started attending the noon weekday mass at Our Lady of Sorrows, almost certainly as a means to get warm. After about a week, the elderly usher was clearly annoyed by the man's daily return and started hassling him about his appearance and urging him to leave. When the homeless man stopped appearing, the usher was obviously self-satisfied. I felt Christ shudder at the usher's merciless act, and I denounced him for it. I told him the homeless man was not harming anyone by attending mass, but his merciless act of expulsion may have deprived that man from encountering the Holy Spirit through the only means available to him. The usher was nonplussed by my denunciation, responding only that the man could have joined the Church, if he had wanted. The usher seemed to me to be the opposite of what we were called to be. ",
        "The second was just as offensive. One of the teachers at my parish's grade school misplaced trust and confided in one of her peers that, when she was 15, she had gotten pregnant and had an abortion. The busybody peer reported the affront to the Pastor, who reported it to the Bishop. \n\nThe Bishop fired the teacher. The Church didn't care that the teacher was 60 years old, had taught at the school for 20 years and in Catholic schools for 35 years, and was a devout Catholic and zealously pro-Life, with part of her zealotry inspired by her adolescent experience with abortion.\n\nWhen parishioners protested the heartless act, the Bishop shouted them down, eschewing forgiveness and insisting the teacher needed to be held accountable for her sin. An abortion, even one from 45 years before, meant she was not fit to teach Catholic children, no matter what penance she had endured and served in the meantime.\n\nI left the Church. I could not be part of any institution so merciless and heartless. I also could not believe an institution with so many planks in its own eyes could be so fixated on the specks of dust in the eyes of others. The Church had, among other things, unrepentantly harbored pederast priests, exposing generation after generation of children to the most base, rank violations of their dignity and innocence. Yet, here it was, ignoring the simple message of Christ (\"whatsoever you do to the least of your brothers, that you do unto me\") and expelling the homeless and holding a woman who had devoted her life to teaching Catholic children -- at far less than she'd have earned in a public school -- accountable for a teenaged mistake to which she had confessed and for which she had sought -- but had apparently not received -- forgiveness. A merciless institution deserves no mercy, and I had none to give the corrup, hypocritical church in which I had grown up and had once loved.\n\nI still prayed the Rosary when I ran. I still begged and pleaded with Mother Mary to intercede on Jess's behalf. I still begged St. Michael, the Archangel, to defend me in battle and to be my protection against the wickedness and the snares of the Devil. \n\nBut, the men who ran the Church were, to me, heartless, power-hungry who had betrayed humility and who had bastardized the teachings of Christ and turned the Church into yet another tool of oppression. I did not need or want to be a part of that. The world was a cruel enough place without \"men of God\" perpetuating the cruelty.\n\nThe rupture was permanent. I knew the Church was too arrogant and too ignorant to change. It reminded me of that which is true: The enlightened are too uncertain, and the ignorant are too certain.\n\n*****\n\nI was thinking of Luke, not the Church, as I showered before bed. In my mind, it was Luke's hand, not my own, running through the hair on my chest and stomach as I soaped myself clean. It was also Luke's hand, not my own, that was responsible for the mess I made all over the shower wall.\n\nI dried off and headed to bed. I always slept nude. I used to joke to Jess that I was going to be ready if and when she ever went tap tap tap in the night. \n\nShe had more than I expected. Unlike many of my married friends, I had no complaints in that department. Jess had loved me, and she loved me inside of her, her mouth to mine, her hands on my backside trying to force me to give more than I had to give, and her wetness signaling I could take all that I needed or wanted. She had not used sex as a bargaining chip or as a reward or weapon. If she was horny, I was accommodating. If I was horny, she was accommodating. If we were both horny, well, then we were in for a long night.\n\nI also always slept with the bedroom door closed and locked. Jess had insisted on it for safety, and I had continued the habit once she died.\n\nI continued a lot of habits. With her gone, I didn't need a suburban house, as schools were no longer a reason to live south of the city, where the cookie cutter prevailed. But, I couldn't leave the last place she had lived. In fact, I couldn't move anything she had touched. Everything was where she'd left it. Two years on, I could still smell her in her clothes, all of which still hung (or lay wrinkled) in her closet. Sometimes, I'd kneel in there and move my face from garment to garment, imagining she was still there. Other times, I'd sleep on the floor, surrounded by her discards.\n\nIt had taken me forever to change the sheets on our bed. I did not want to wash her out of them. When the smell of me and sleep overwhelmed the last smell of her, I finally gave in and stripped the bed. I still did not wash the sheets. I folded them, put them in her closet, and bought a new set.\n\nI deviated from all of my habits that night. I unlocked and opened the bedroom door. I did not in a million years imagine Luke would join me in the night, but he was not going to find a barricade if he did. \n\nBut, he would find a shield. For some reason, I slipped into boxer briefs. \n\nI laughed at my schizoid behavior. The door was open, but I was clothed. Some time between seeing Luke's giddy smile at Gate E5 and watching him undress in my spare bedroom, I had lost my mind.\n\nMy obsessiveness kept me awake. After two hours of tossing and turning, I got up, stepped out of the briefs, and closed and locked the door. Relieved, I was asleep before my head hit the pillow.\n\nI awoke with a start. As I often did, I dreamed of Jess, although I could not remember the details of the dream. I was fortunate not to. They were almost never good. Invariably, she'd be in peril, far enough away that I could not help her, pleading with me to save her.\n\nEven in sleep, I was tormented by the thought her lying in that ditch, slowly dying, her pelvis shattered so she could not move, her mind begging for, hoping for, pleading for salvation, in whatever form it would come. I wondered if she struggled against it, if she saw the light and tried not to walk into it. I wondered if she knew the end was near. I wondered if she died in pain, relieved at the warmth of peace as it washed over her.\n\nI had hoped the autopsy would confirm she died instantly or that the force of the impact had rendered her unconscious. It did not. She died from internal bleeding. She may or may not have been aware. She may or may not have felt life slipping away. She may or may not have known the end was nigh, the softness of the ditch betraying the hardness of the reality imminent death presented.\n\nMy eyes wet, I dressed, slipped on my running shoes, and took to her route. I prayed the Rosary and wondered what she'd have been thinking in those final moments, if and when she knew no one was coming. I hoped peace had washed over her. I feared all she felt was fear and panic. With each step I took, fear and panic gripped me. It rushed into my brain like adrenaline, like it wanted me to know what she had known, when what she knew was evanescent.\n\nLuke was still asleep when I returned from my run, my thoughts more troubled than they had been when I started. At times, running cleared my head. At other times -- like that day -- the pounding of the blood in my arteries and veins was matched only by my pounding thoughts.\n\nI was soaked with sweat as I opened to the door to the spare bedroom to check on my guest. He was splayed on his stomach. The sheet was to his waist, and his left leg was sticking out and hanging off the side of the bed. I had failed to close the blinds, and the room was bright. He had adjusted by burying his head under a pillow and holding it down with his arms.\n\nI stood beside the bed. Luke's back was lightly muscled and heavily moled. I reached my hand toward him, wanting to connect the dots with my right forefinger. I stopped myself before I touched him. \n\nI looked at his left calf and foot. Like his back, his calf was lightly muscled and heavily moled. His left foot was large, probably a twelve or so and out of place on his smallish frame. The arch was high. I imagined he had spent his childhood barefooted and outside.\n\nI left the room while I still could. I made coffee and took it on the screened porch with my iPad. I was reading the New York Times when I heard \"Sir\" after \"Sir\" from inside the house.\n\nLuke was in the kitchen in his threadbare jeans and his Hollister shirt, staring at the pictures of me and Jess that littered our refrigerator. \"Sorry,\" he said, turning around. \"But I couldn't find you.\" The grin was back.\n\n\"I was on the porch. Would you like coffee?\"\n\n\"Yes, please, black. . . . Your wife was very beautiful.\"\n\n\"Yes, she was.\"\n\n\"You two look very happy together.\"\n\n\"We were. You couldn't help but be happy with Jess. She was contagious.\"\n\n\"Did she call you Jammer?\"\n\n\"No, to her I was always Jimmy. She's the only one who was allowed to call me that.\"\n\n\"Jimmy suits you a lot better than Jammer. You look like a Jimmy.\"\n\n\"I don't think so. I think I look like a James. Jimmy seems younger and more playful than I've ever been.\"\n\nHe stared at me, still grinning, like he was studying me. I felt bare, turned away, poured him a cup of coffee, and led him to the porch. As he drank and stared at his phone, I watched him over my iPad. His hair had partied while he slept, the top of his head now a jangled mess. His protruding ears were even more endearing than when they were topped by a hat.\n\nHe looked up and caught me watching him. I could have pretended I was not doing what I was doing, but it was plain I was. So, I continued to stare. Luke raised one eyebrow at me, a move Jess had used thousands of times to question me wordlessly. I smiled at the memory, which Luke seemed to mis-take as a smile at him.\n\n\"What do you want, Sir?\"\n\n\"Oh, nothing, Luke. My wife used to raise an eyebrow at me like that. I was smiling at the happy memory of it.\"\n\n\"Why were you watching at me, Sir?\"\n\n\"I was trying to figure this situation out,\" I pretended. \"It really doesn't make sense to me. Have you heard from your family?\"\n\n\"Not yet, Sir.\"\n\n\"So, how is it that you were so excited to see them and they seem almost equally unexcited to see you?\"\n\n\"It's a long story.\"\n\n\"It's early, and the coffee pot is full.\"\n\nLuke unlocked. Over the next hour, he told me a little of the story of Luke Rydell, including that he had kept a shoebox of letters under his bed, the shoebox included letters from \"someone\" he had met online when he was sixteen years old, the letters were more graphic than they should have been, his mother had found and read them, and his parents had then sent him to live with relatives in White Plains, Missouri, \"to heal.\" If you don't know, White Plains is fundamentalist and in the buckle of the Bible Belt. In some White Plains churches, they still use serpents. In all White Plains churches, they take the Bible literally and condemn those who don't.\n\nDuring his year in White Plains, Luke had no computer or phone, was allowed out of the house only with an escort, had a monitored weekly call with his parents, and met daily with a Preacher who performed exorcism after exorcism to force out any demon that resided within. He was browbeaten and bullied, returned to Belton for his delayed Senior year of high school, and then forced to join the Army to become a \"real\" man.\n\nHe told the story with no emotion and less regret. To him, it was what it was.\n\n\"Do you think they're avoiding you?\" I asked. \n\n\"I ain't sure, Sir. My last two years were tough on them. My mom and dad looked at me like I was from outter space. I ain't heard much from them since I left. I thought doin' what they wanted me to do would make it all better, but . . . .\" His voice trailed off. I don't think he wanted to say out loud what he would have to say to finish that sentence.\n\nI suspected the \"someone\" was not a woman. If it had been, he'd have said so. He had made a confession without confessing. \n\nI tried to use words in place of actions. \"I'm sorry, Luke,\" I said, contrasting his parents in my head with mine. \"I guess sometimes those who are supposed to love us the most also hurt us the most.\"\n\n\"I ain't hurt,\" he insisted. \"I just wish it was't what it is. It's wasn't nothin' to me, but it's still somethin' to them. A big somethin'.\"\n\nI felt the need to match his honesty with some of my own. I told him the long story of Jess, how we met, how we married, how I learned she was missing, and how I learned she was found. He listened like a solider, silently and rapt. \n\nWhen I was finished, Luke put a point on it all. \"Sir, I ain't the sharpest knife in the drawer. But, it seems to me you were luckier to find her than you were unlucky to lose her.\"\n\nHis pithy summary brought a bigger smile to my face than I was used to. I had been trying to embrace his view, that I should be grateful for what I had than I was sad at what I lost. But, it was harder than the words made it seem.\n\n\"You're sharper than you think you are, Luke.\"\n\n\"That's mighty nice of you to say, Sir. But, I ain't never been any good at school.\"\n\nA thought struck me. \"Why is the tattoo on your chest backward or upside down or both?\"\n\n\"It's backward. So I can read it in the mirror.\"\n\n\"What does it say?\"\n\n\"'Saved by grace, alive in Faith.' I got it the year I was down south. It was one of the first things they had me do. It's to remind me how lucky I am to have been saved, of who I am, and who I'm to be. Anytime I am tempted, I just gotta look in the mirror to be reminded of the path I'm to take.\"\n\nI didn't know whether to cry or laugh. I could not believe this dear, sweet boy had been permanently marked through the bigotry of others, forced to bear a scarlet verse simply because he wrote letters to another boy or to a man, somewhere.\n\n\"What's the one on the back of your arm?\"\n\n\"This one,\" he asked, raising his left arm and revealing his lightly haired armpit. \"It's Latin. 'Ego sum a milite.' It means 'I am a soldier.' I just got it a few weeks ago. All of us did. I love it.\"\n\n\"Me, too.\"\n\nChapter Three\n\nLuke's mother called while I was in the shower. She claimed they had been asleep when he called and texted and had not heard him banging on the door. \n\nI didn't believe her. I don't know if Luke did, but he at least pretended to. He asked if I could take him back home. I said sure.\n\nI was a bit maudlin as we drove. I had enjoyed having someone in the house. It had been a long time since I was not alone in my house. There was a comfort in knowing someone else was there, even if only in another room. I had also enjoyed having someone to speak with over coffee.\n\nI wondered what would greet us in Belton. I had an image of the Rydell's in my head, but the reality of them had to be better than what I imagined. In my mind, his mother was a cross between the mother in \"What's Eating Gilbert Grape?\" and the mother of Honey Boo Boo. And, his father was a malnourished rail, like the sexually abusive father in \"Delores Claiborne,\" Kathy Bates' \"one of us is goin' to the boneyard\" movie. Together, they had to be hoarders.\n\nAs we closed in on Luke's home, I gave him my number for his phone in case he needed anything while he was on leave. He responded, \"Sir, can I ask you a question?\"\n\n\"No, not if you insist upon using 'Sir.' You can uses James, Jam, or Jammer, but no more Sirs. I'm not your superior, I'm your friend.\"\n\n\"Okay, James,\" he said, drawing the James out as long as he could. \"Can I ask you a question?\"\n\n\"Sure,\" I answered, wondering if he was going to venture where I'd been afraid to venture this morning. I had almost asked \"are you gay,\" but I feared it would push me across the creepster line I had been straddling since I met him.\n\n\"Why did you decide to come back last night?\"\n\nHad it only been last night? It seemed like much longer ago.\n\n\"Actually, I didn't really decide. I just did. Something didn't seem right. I didn't want you stranded.\"\n\n\"Why not? Why'd it matter to you?\"\n\n\"I don't know. It just did.\"\n\n\"Is that all?\"\n\n\"Yes,\" I lied. I had to. I could not answer truthfully. I could not say, \"Luke, I'm attracted to men, more so than to women. When I saw you in the gate, I was smitten. Your giddiness was attractive. Your ears were adorable. Your jeans revealed just the right amount. I wanted to be near you. Once I was, I didn't want to leave you. I needed to know you.\"\n\nI drove on, my lie hanging over the both of us. I also wondered why Luke was asking. I particularly wondered if he was fishing for the truth, and whether he had also been fishing over coffee that morning.\n\nLuke's home ended my musings. It was worse in the light than in the dark. In the light, I could see the duct tape on the cracked window, the deteriorating foundation, and the animal excrement all over the yard.\n\nMy image of Luke's mother was way off. She was thin and stern, her hair pulled tight into a bun. She wore a shapeless black dress. A massive crucifix hung from her neck. \n\n\"She has fibromyalgia,\" Luke whispered, as if she might hear him through the car's closed windows. \n\nMy image of Luke's father was also way off. He was thick, but not fat. He had long hair and a longer beard. He wore dark work clothes. A massive crucifix hung from his neck, too. \n\n\"He has it, too,\" Luke whispered again. \"He claims he got it from her. She claims he got it from him.\"\n\n\"It's not an STD,\" I answered.\n\n\"It ain't nothing but a reason not to work, if you ask me,\" he answered, sighing heavily. \"But, it works. They ain't worked in a long time. They live off what the government gives 'em. And then do nothin' but complain about the government.\"\n\nAs I reached to turn the engine off, Luke insisted there was no reason for me to get out. \"They won't want to meet you,\" he said. \"They don't like strangers, and they sure won't like you.\"\n\nI kept the car running. Luke turned to me, reached his hand out, and said, \"Thank you for everything, Sir, uh, James.\"\n\nI turned my body to shake his hand. \"You're welcome, Luke. It was a pleasure meeting you. I mean that. Be safe.\"\n\nHe relapsed. \"I will, Sir.\"\n\nHe let my hand go quickly, exited my car, and unloaded his rucksacks from the popped trunk. As he walked toward his parents, I expected he was exiting my life. I was sad to see him go.\n\nLuke's parents greeted their son with a wariness that disappointed me. There was no joy in seeing him, no warmth in their welcome. His father shook his hand. His mother didn't even do that.\n\nLuke did not look back before entering his home. I was crushed when he didn't. I had planned to use the smile I had practiced on the plane.\n\nI backed out of the drive and headed back home. As I did, I realized I had not gotten Luke's number and so had no way to reach him. I thought of going to the door and asking for it, but did not. I had spent the twelve hours I knew Luke avoiding anything that might appear creepy. I couldn't undo all of that work with a creepster move now.\n\nI made a mental note of his address. Maybe I'd come up with a reason to drop him a note while he was on leave.\n\n*****\n\nOnce I was back home, I ate a bowl of gazpacho and took a glass of wine to my office. I found myself drinking earlier and earlier, and I'd have been alarmed by the amount if I cared at all. But, I didn't. I was willing to do whatever I needed to get through the day.\n\nI sat at my desk and opened the notebook in which I was plotting what to do. There was no reason for me to stay in Kansas City, but I wasn't yet ready to leave the house I had shared with my wife. I also hadn't settled on a different place. Nothing drew me anywhere. I was thirty and feckless. I had the small group of friends that Jess and I had made, but Jess's ghost hung over our gatherings, and their lives were moving forward while mine stood still. They were living the life I was supposed to be, making babies, outfitting nurseries, joining play groups, choosing nursery schools. ",
        "I was caught in a time warp. I knew I needed to move on from Jess, but my body and mind wouldn't let me. It was like the time I had bungee jumped from scaffolding on top of Squaw Mountain. I wanted to let go and free fall, but I . . . just . . . couldn't. My instinct toward self-preservation was stronger than my desire to let go and free fall, until it wasn't.\n\nIt was the same with Jess. I was safe in my life with her. I was in danger if I let her go and free fell into the unknown of what percolated inside of me. So, I held on, even after I shouldn't have.\n\nI had been terrified the first few times I had sex. I didn't know what to do, and I feared I would do it wrong. I think everyone is fearful at first. But, I'm a little different than most. I couldn't laugh and learn on the fly. I was too self-conscious. I had hyperventilated as a grade schooler when called on to read aloud, fearing I would stumble over a word and everyone would laugh. I couldn't help but cry if I tripped and fell in the hallway, knowing everyone was laughing at me. I ran from the room when I misspelled a word during a spelling bee or miscalculated during a math bee. I was hypersensitive, especially to the perceived thoughts of others.\n\nI had grown to be a large man, but I was still very much that self-conscious little boy. The first time I had gone down on a woman, I had focused on the wrong spot. When she grabbed my head and moved me to the right spot, I had been too ashamed even to continue. Or to see her again.\n\nI had struggled the first time I tried to have intercourse, too. Even though she was experienced, we could not find the right opening. I was either too low or too high. It took so long to get it right, I came as I struggled to enter her. I was too ashamed to see her again, either.\n\nI was as bad at meeting women as I was at having sex with them. I never asked a girl out unless I was certain she'd say yes. Even then, I often dallied too long to maintain her interest. \n\nJess had been an outlier. She had pursued me long after a rational woman would've quit. And, she was relatively inexperienced sexually, so once we moved in that direction, I was the teacher, not the student. She didn't know what I was doing wrong.\n\nShe also found our fumbling around endearing. She'd laugh the mistakes off, tell me how good it had been, and only later, when the moment wasn't hot, suggest maybe I could go a little slower, go a little deeper, or keep at it until I was sure she had finished.\n\nOnce we got it right, we really got it right. We yinned each other's yang, and we rocked each other's world. After many fits and starts, I learned to use my \"gift,\" as Jess referred to it. It fit my body, was long and thick, and once I had tamed it, a weapon. It took me a long time to finish once I started, and my stamina inured to Jess's orgasmic benefit.\n\nMy love language is physical touch, and she was happy to feed my need for it. Her hands and mouth were always on me. There was nothing I asked her to do that she refused.\n\nI had not been touched since she died. Still, I could not imagine re-learning sex. It was one thing to ask a woman out. It was a whole other thing to find out if a man was interested in being asked out and then mustering the gumption to do it. It was yet a hole other thing to contemplate returning to those clumsy, diffident days of not knowing what to do or how to do it. It was easier just to ignore it all.\n\nI finished my daily work on the flow chart I was developing and on the two plaintiff's cases I had taken on (when I left my law firm, I decided I should try for a couple of home run plaintiff's cases to add to my nest egg). When I was done, I re-filled my re-filled wine glass and headed out back to our -- my -- pool. It had come with the house. It was the only thing we hadn't liked about the house, and it had turned into our favorite thing. We regularly skinny-dipped and made love in the pool. When Jess died, I had continued the skinny-dipping and, when I was randy enough, made love to myself. \n\nI placed my glass down and dove in headlong. Once I surfaced, I tugged my gym shorts and boxer briefs off and piled them beside my glass. I hooked a saddle under my pelvis, rested my head back on a noodle, and floated wherever the jets took me. I felt tension drain from me as I did. I replaced it with thoughts of Luke. \n\nI imagined him as a little boy. In my mind, he had blonde hair and big ears and a bigger grin. He didn't know what he didn't know, and his ignorance was bliss. He played hard and slept harder. His entire life stretched out in front of him, and he would be a King or a Titan. He slayed dragons and tamed dinosaurs. He learned to fly and to defy death. It was, in my mind, the idyllic childhood every child deserves. I knew the reality didn't fit the image, but I didn't want to think about the reality. It was too depressing.\n\nWhen my slow float was over and my wine was gone, I walked nude into my house. I had cereal for dinner and found Stand By Me on Netflix. I loved those boys, and I re-watched their movie as I sipped vodka with a hint of pineapple juice. I don't know what time I fell asleep, but I slept through a text from Luke. It read \"Thank you for everything.\"\n\nI saw it when I awoke, sitting up, on the sofa at 3:47 a.m. I immediately texted back. \"I meant it when I said it was my pleasure.\" I hesitated and then I hit send. \n\nI walked to my bedroom and climbed into my bed. I was about to return to sleep when I impulsively sat up, saved Luke's contact information into my phone, and sent an imprudent, impulsive text. \"Lemme know if you want to get 2gether while ur here.\" At the last minute, I had changed to \"get 2gether\" from \"hook up.\"\n\nChapter Four\n\nI stayed in bed the next morning through meditation or yoga or whatever I normally would have attended. I was too groggy, having ingested a bottle of wine and most of a bottle of vodka. I made a note to myself and stuck it on the refrigerator. \"Address alcohol consumption. At some point. But not now.\"\n\nI grabbed the coffee waiting for me and headed to the screened porch. I was under a throw and reading the Times before I checked my texts. There was one from Luke at 5:02 a.m.: \"I will.\"\n\nI decided to throw caution to the wind. I answered \"I have a pool.\"\n\n\"I know. I saw it.\"\n\n\"I didn't know. It was dark.\"\n\n\"Not in the morning.\" \n\n\"True.\"\n\nI re-filled my coffee and stared at my phone, waiting for a text or the little bubbles that suggested a text was coming. Nothing.\n\nI laughed at myself. I had gone from ogling a stranger in an airport to hanging on his next syllable. I barely knew him, yet I couldn't stop thinking about him.\n\nI checked my phone again. Nothing.\n\nI dressed to go running, my phone hermetically sealed into my right hand as I did. Nothing.\n\nI headed out on my run. As I had started doing when Jess died, I took my phone, just in case. I checked it during the run. Nothing.\n\nI returned, soaked in sweat and vexed by Luke's silence. I put my phone down, stripped to my jock, and dove into the pool. I swam laps, my anxiety and uncertainty propelling me back and forth, back and forth.\n\nWhen I was physically exhausted, I floated on my back. I wanted, I needed, to check my phone. But, I was too wary, fretful I'd find nothing and be wounded by it.\n\nI was pickled by the time I made my way to the edge of the pool. All I had to do was pick up my phone and look, but I couldn't bring myself to do it. I stared at the phone, and it stared back. It held both disappointment and promise. I finally forced myself to look. Nothing. Cussword (Jess thought profanity base, so she had cured me of it. Now, instead of \"fuck\" or \"goddammit,\" I simply said \"cussword\").\n\nI scrambled from the pool and headed inside. I put my phone on the charger, wrapped myself in my robe, and went to my office to work on my flow chart and my cases. When I was satisfied I had done enough for the day, I moved to the day bed under the window. I ran my right hand through my chest hair and down the trail that ran from the middle of my chest through my navel and into my shorts. I fell asleep with my hand inside the waistband, my fingertips resting in my unkempt pubic hair.\n\nI was disoriented when I awoke. I did not know where I was or why. I had to shake my head to get my bearings. I felt like a dog, fresh from a bath or a swim. \n\nI stretched and stood up. I looked down at my size thirteen feet. They looked like flippers. \"No wonder I'm a good swimmer,\" I thought to myself. \n\nI trudged down to the kitchen to start to get my daily drunk on. I peeked at my phone. Nothing. I felt an instant and unreasonable rage, so I opened the door and fired my phone into the pool. I felt like a fool when I realized what I had done, but it was too late. My phone was drowning.\n\nI piddled the afternoon away. I grilled a pork chop for dinner. I ate it with asparagus and broccoli and a non-descript bottle of red. I finished the wine while I read \"Becoming A Man\" on the porch.\n\nI fell asleep on the porch. When I awoke, I was too happy to move. I grabbed a throw, covered myself, and drifted back away. \n\nI dreamed of Jess. In my dream, we were on a roller coaster, looking at each other and holding hands just before the first big plunge. Fear pierced her smile, and her side of the car plunged while mine stayed still. I tried to hold onto her hand, but could not. I awoke when I saw there was no track and her side of the car was falling to earth.\n\nIt was morning. I was soaked with sweat. My book had fallen to the floor of the porch, randomly creasing the pages.\n\nInstinctively, I reached for my phone, before remembering it was at the bottom of the pool. I stood, stretched, and walked through the house in search of my iPad. When I found it, there was nothing from Luke. I was disappointed, but not so disappointed that I drowned my iPad, too. Instead, I went to yoga, searching for peace and -- possibly -- Alex. I found neither.\n\nBack home, I fished my phone from the pool and dressed to take it in and get it replaced. Before I left, I checked my iPad again. Nothing.\n\nAt the Apple Store, I got the newest iPhone and re-established my account. As soon as I did, I saw that I had a voicemail from Luke and later a text. The text asked, \"Get my msg?\" I had not, as my phone was drowned by the time he left it. I also didn't get his text on my iPad, which meant either he did not have an iPhone or had not installed iMessage. \n\nI walked outside to listen to the voicemail. Luke's voice sounded plaintive. \"Sir, uh, James, if ain't too much to ask, can you come pick me up? Things ain't so good here.\"\n\nI texted Luke back. \"Sorry. Dropped phone in pool. Just got ur msg and ur text. Will be there ASAP.\"\n\nHe responded immediately. \"Thx. Was worried I was asking to much.\"\n\n\"Not too much at all,\" I corrected, unable to stop myself. Years of Catholic school and diagramming sentences had turned me into a grammarian. Of course, I didn't know exactly what he was asking, but I was excited to see him again.\n\nHe and his bags were on the porch when I pulled up. I popped the trunk as he hurried to the car. He carelessly tossed his bags in the trunk and slid into the passenger seat.\n\n\"Hey,\" I said.\n\n\"Hey.\"\n\n\"What's going on?\"\n\n\"They want me out. They don't believe I met you at the airport and that you're just a good person who thought I might need help. They think you're a queer. Heck, they probably think we did queer stuff together. Anyway, they told me I ain't changed, and I need to leave their house.\"\n\n\"Do you want me to go talk to them?\"\n\n\"Nah. They won't listen to me. They sure won't listen to you.\"\n\n\"Did you tell them I was married? That my wife died? That I waited with you only because they weren't there to get you, like they should have been?\"\n\n\"I told them all that. They didn't hear it, though. They were too busy prayin' for me and wailin' about abominations and queer hell.\"\n\nShaking my head that people allowed ignorance to destroy their families, I put the car in reverse and backed out of the gravel drive. \"Where to?\" I asked, not wanting to be presumptuous or assume that what appeared to be true was, in fact, true and that Luke had no one and no where.\n\n\"Well, that's the thing,\" Luke said. \"I don't got nowhere to be or nowhere to go. I have a flight on the 21st. Until then, I'm stuck.\"\n\nIt was only the 16th, which meant there were more than a couple of days to fill. \"I'll unstick you,\" I offered. \"You are welcome to stay at my house.\"\n\n\"Thank you, Sir. I was hopin' it wasn't too much to ask.\"\n\n\"It's not. But, there is a condition. You can stay, but only if you stop calling me Sir. I'm James, Jam, or Jammer.\"\n\n\"Not Jimmy?\"\n\n\"No, not Jimmy. Like I said, that was only for Jess.\"\n\nI was unreasonably elated as we drove. Not because I thought I might seduce Luke in the days he'd be staying with me, although that thought did flit through my head and then got lodged there. But, because, for the first time in a long time, I'd be hanging out with someone who saw me other than as incomplete without Jess, who knew me only as me, not as Jess's husband or as her widower.\n\nI explained my routine as we drove. I gave Luke permission to treat the house as his own. I also told him he could use Jess's Prius, if he wanted. He causally responded he had nowhere to go, but thanked me for trusting him to drive her car.\n\n\"I want you to feel at home,\" I offered.\n\nLuke sat there before trotting out the hint of a sense of humor. \"I hope I'm more welcome than that.\"\n\nWhen I looked at him, he was grinning ear to ear, like he had been when I first noticed him but not since. Without thinking, I winked at him. To my suprise, he winked back.\n\nChapter Five\n\nI offered Luke a beer with lunch. \"No, thank you,\" he answered. \"I ain't never drank.\"\n\n\"\"Really?\"\n\n\"Really. My parents were pretty strict about stuff. No alcohol. No drugs. No tobacco. No sex or anything remotely sexual.\"\n\n\"You've never done any of them?\"\n\n\"Nope.\"\n\n\"Well, you're missing out.\"\n\n\"That's what the guys told me, especially about the sex part. I told 'em you don't miss it if you ain't never had it.\"\n\nI had a lot of things to say in response. I said none of them. Instead, I drank Luke's beers as we ate silently on the screened porch. After, I told Luke I was going to nap and then spend the afternoon in the pool. \n\n\"I guess I'll do the same.\"\n\nMy body wanted to sleep, but my mind wouldn't let it. My thoughts were scattered like shopping carts, and I couldn't gather them up. I decided to masturbate, hoping the release would relieve whatever was teasing my mind. To my surprise, I thought of Luke's grin and wink as I stroked myself. With his chin dimple and thick, juicy lips, he reminded me of Michael in \"The Most Fun You Can Have While Dying.\"\n\nIt took awhile, but I finally finished all over my stomach and abdomen. I swirled my finger through it before deciding to rinse off, grab two more beers, and head to the pool.\n\nAfter a few minutes, Luke joined me poolside, in cut off blue jeans. I hadn't seen a pair of cutoffs since pictures of my dad from the 70s.\n\n\"There should be trunks in the upstairs hall closet. We stocked a variety for guests.\"\n\n\"That's alright. I ain't gettin' in. I don't really swim.\"\n\n\"Ever tried? It's pretty easy. I could teach you if you want.\"\n\n\"I dunno. I got this far without knowin' how.\" \n\nI almost pointed out that \"this far\" wasn't very far at all. But, discretion prevailed. \n\n\"Suit yourself,\" I said, thinking myself clever. \"But, you should at least get in. It's hot, you can stand in the shallow end, and you can float on a saddle in the deeper end.\"\n\n\"Is it okay if I just wear these?\"\n\n\"Of course. I just thought you'd prefer a suit. Denim gets heavy when it's wet.\"\n\n\"I think I'd feel weird wearing someone else's clothes.\"\n\n\"They're not someone else's. They've never been worn. They're for guests who don't have or forget their trunks.\"\n\nLuke didn't say anything. He just shifted back and forth, as if he was trying to decide something. Finally, he turned and headed into the house. He returned a few minutes later in red board shorts and his black Hollister shirt.\n\n\"There's sunscreen in the cooler,\" I said, pointing to the Yeti. I liked to keep sunscreen on ice so it was cold and thick when reapplied.\n\n\"I'll just keep my shirt on,\" he said, slowly descending the stairs into the pool. Most non-swimmers were afraid of water. Luke did not appear to be. He glided in and went under before standing up. His shirt, already too big dry, hung around him like a mumu wet. Luke realized it wasn't going to work at the about the same instant I did. I climbed out, grabbed the 50 and a beer from the cooler, and tossed the 50 to him. I started to stir watching him smear the cream on his face, neck, arms, and chest. If I hadn't known better, I'd have suspected him of wanting me to watch him. I returned to the pool to conceal the effect he was having on me. Without a word, I took the tube, filled my left hand, rubbed my hands together, and coated Luke's shoulders and back. He tensed when I touched him, which only made the muscles in his back more taut as I quickly but thoroughly coated them.\n\nWhen I was finished, I let him know he could relax. \"That should do it.\"\n\n\"Thank you.\"\n\n\"Can you return the favor?\" I asked.\n\nI didn't need him to. I spent so much time in the sun, I would not get burned. But, I definitely wanted him to touch me. \n\n\"I dunno. I guess so,\" he agreed, obviously reluctantly. \n\nI reached back and pulled my hair off my neck as Luke filled his hand with way too much cream. He slathered it down my spine and then started spreading it laterally. His large hands were strong on my skin.\n\n\"I got way too much,\" he said. \n\n\"It'll rub in. Just keep at it.\"\n\nI closed my eyes and savored as Luke reached for my shoulder blades, ran his hands down my sides, and again worked from my spine outward. It had been a long time since I had been touched, and I had missed it. I didn't notice when he stopped. I just stood there, hoping for more.\n\n\"I'm done,\" he said.\n\n\"Finished,\" I corrected. \"Turkeys are done, people are finished.\"\n\n\"I wish I knew how to talk like you.\"\n\n\"I can teach you that, too.\"\n\n\"Seems like a lot to do in a week.\"\n\n\"A journey of a thousand miles starts with a single step.\"\n\n\"Huh?\"\n\n\"We could at least get started.\"\n\nWe were in the pool all afternoon. I taught Luke to tread water and then to dog paddle. I then laughed as he dog paddled from side to side, excited like dog paddling counted as swimming.\n\n\"What's next?\" he asked as I finished yet another beer. I was buzzed, and my buzz was crashing through my inhibitions.\n\n\"You need to learn to float on your back. To trust the water. From there, swimming is easy.\"\n\nI called him to the shallow end. I explained what it was to float and then showed him, knowing as I did that my wet trunks were clinging to me and leaving little to the imagination.\n\n\"Now, you try, first with me holding you up and then with me not.\" It took some convincing, but Luke was eventually on his back with my left hand under the small of his back and my right under his shoulder blades. I savored the feel of him in my hands. He had his eyes closed, and it would have been very easy for me to kiss him.\n\n\"Take big breaths and relax. The air in your lungs will help keep you afloat. . . .Yeah, just like that. . . . Good . . . . Good.\"\n\n\"Don't let go of me.\"\n\n\"I won't,\" I lied. I had to. One, holding him was getting me so aroused I feared I was going to tear through my trunks. Two, he wouldn't be able to float until he was not afraid to, and he would be afraid to as long as I was holding him. I lowered myself in the water so my chin was barely in and I was supporting him only with my fingertips.\n\n\"Are you relaxed?\" I asked.",
        "\"Very.\"\n\n\"Stay that way. I'm going to move my hands away, but I'll be right here. I won't let you sink.\"\n\nWhen I moved my hands away, Luke floated perfectly. \n\n\"Good. Just like that,\" I said, wading away from him. \"You're doing it. All on your own.\"\n\nLuke was like a kid with a new toy, floating around the pool with his eyes closed. As he did, the borrowed red board shorts left little to the imagination. As he was in his briefs, he was down and to the right. I climbed out to get a better view and another beer. He was beautiful, his hair floating loosely over his head and his hairless body relaxed and splayed.\n\n\"What's next?\" he asked, his eyes still closed. \n\n\"I think that's plenty for today,\" I answered. My groin was already aching, and I knew teaching him to swim freestyle would mean holding him again, only this time with my hands on his chest and stomach. I wasn't sure I could handle that.\n\nHe didn't give me a choice. \"I think we should git while the gittin's good,\" he insisted.\n\nI adjusted myself and dove back into the pool, grabbing Luke by the ankle and towing him to where I could stand. I explained the freestyle stroke and then showed it to him. Unafraid to put his face in the water, Luke was eager to try the new stroke. I put my hands out, and he moved right over them. My left hand was under his stomach, and my right hand was under his chest. I walked him side to side as I explained the need to kick and how to turn his face to the side and breathe. It was much more difficult to teach than the back float, so my hands were on Luke's front far longer than they had been on his back, which meant my balls were again aching by the time I lowered myself until I was again supporting him only with my fingertips.\n\nI do not know how long we were in the pool. But, it was dark and I was hungry when Luke swam from the shallow end to the diving board and back. When he reached my hand, he stood and grinned. I held out my hand to high five him and, when he grabbed it instead, I pulled him into a full embrace. He tensed as I did, my arms around him and his arms at his side and then, ever so tentatively, on my forarms.\n\n\"Sorry,\" I said, pulling back and fearing I had gone too far. \"I just got excited for you.\"\n\n\"I, uh, it's okay. I just don't really know how to hug.\"\n\n\"What do you mean, you don't know how to hug?\"\n\n\"I've never hugged anyone before.\"\n\nI scrunched up my face and asked \"Really?\" I was dumbfounded.\n\n\"Really. My parents don't do it. And, I wasn't supposed to touch anyone like that. It could only lead to sinful things.\"\n\n\"But someone, a friend, a teacher, someone somewhere had to have hugged you.\"\n\n\"Not as far as I remember.\"\n\nInstinctively, I reached out for and grabbed his arm. \"When I put my arms around you, you do the same to me, under mine. Then, just relax into the hug and give me a squeeze when I give you one.\"\n\n\"I dunno, Sir.\"\n\n\"James.\"\n\n\"I dunno, James.\"\n\n\"Just try, Luke. Nothing bad's going to happen. And, you need to know how to hug someone properly. We all do.\"\n\nI squatted a little and pulled him into me, putting my arms around his shoulders. He slid his arms around me under mine. I moved my right hand to the back of his head and just held him, chest to chest, until I felt him relax. When he did, I gave him a squeeze, and he squeezed me back. \n\n\"Hugging is one of the best things, Luke.\"\n\n\"It feels good.\"\n\n\"It is good.\"\n\nI held him longer, careful not to press my groin to him and take the moment from something beautiful to something base. I scratched his head with my right hand and told him I was going to let go.\n\n\"You don't have to, if you don't want,\" he whispered.\n\n\"I dont' want.\"\n\nI held him longer, my right hand on his head and my left hand between his shoulder blades. As I did, I realized I had stopped breathing.\n\n\"I have to let go now,\" I insisted.\n\n\"Okay,\" he whispered again. \n\nWhen I did, I turned and dove into the water. I couldn't look at him. I was afraid I'd kiss him if I did. I also didn't want him to see that the hug had affected me in a completely non-platonic way.\n\nWhen I emerged at the other end, I turned to see Luke climbing the steps out of the pool. Look back, I thought to myself. Please look back. \n\nHe didn't.\n\nChapter Six\n\nDisappointed, I followed Luke out of the pool and into the house. I did not follow him upstairs. Instead, I went to my room and showered the chlorine off of me. While I did, I coated myself with conditioner and relieved some of the ache that having my hands on Luke had caused. I braced myself against the shower glass with my left hand while I watched myself in the full length mirror on the opposite wall. I finished quicker than I usually did, imagining my hand or my body or both belonged to someone else.\n\nI dressed in gym shorts and a Royals t-shirt and headed to the kitchen to make dinner. I was well into a making a chicken salad and draining a bottle of wine before Luke joined me. He was clean, in another Hollister shirt, and back in his cutoffs. He looked like a hustler, in an adorably innocent way. \n\nHe settled in a chair at the island.\n\n\"Something to drink?\"\n\n\"No, thank you. I've swallowed enough water for a day.\"\n\n\"It was a big day. You learned to swim. And to hug.\"\n\n\"I did.\"\n\n\"Had you really never been hugged before? I just find that so hard to believe.\"\n\n\"I don't know,\" he answered. \"If I was, I don't remember it. My parents are, well, they're really different.\" \n\nAs I cooked, he unlocked a little more. His parents were hyper-religious. They thought most everything was sinful. They drank only natural liquids, like water and milk. They ate only things that were harvested or butchered. They didn't watch television. The only book they owned was the Bible. They didn't celebrate birthdays or holidays. They had intercourse only to procreate, which they had achieved only once, late in life. They had raised Luke strictly. He had few toys. He was not allowed to play with other children, to ensure he would not be corrupted by them. He did not speak unless spoken to. He attended school only because it was required. He had led a solitary life. He had never dated anyone. On good days, his parents kept him at arm's length, seen but not heard. Once his mother found his letters and there were no more good days, they had little use for him. They now thought he was a lost cause, and they were not going to lose themselves in a futile attempt to salvage him.\n\nI was so sad listening to him. \"My gosh, Luke, that sounds like a terribly isolated, lonely way to grow up.\"\n\n\"It wasn't so bad. I didn't know any different.\"\n\n\"You seem pretty social for an unsocial little boy.\"\n\n\"That's why I love the Army so much. You have to be social. It's all about cohesion and being each other's keeper.\"\n\n\"Your unit must think you're bat shit crazy.\" \n\n\"No,\" he said, smiling. \"But they sure think my parents are.\" \n\n\"Why were you so excited to see them? You were almost jumping out of your skin.\"\n\n\"I dunno. They're my mom and dad, for better or for worse. And, if you haven't ever been away from someone that long, you don't know what it's like.\"\n\n\"I think I have a pretty good idea,\" I answered, more petulantly than I intended as I thought about Jess.\n\n\"Sorry. I'm sure you do.\"\n\nI poured another glass of wine for myself and one for Luke. \"What's this?\" he asked.\n\n\"You had a big day. We're going to celebrate. One glass and that's all. You'll have the tolerance of a fruit bat.\"\n\n\"I dunno . . . .\"\n\n\"Luke, you're not going to make it as a teetotaling soldier. It's wine. Jesus turned water into it. It's not evil or sinful. It's . . . .\" Before I could finish, Luke picked up the glass, drained it, and plopped it back on the marble island with a crisp clink. \n\n\" . . . . not really for chugging,\" I finished.\n\n\"It was good. I'll have another.\"\n\n\"Okay. One more glass. But, you have to drink it slowly, with me.\"\n\nHe did while we ate on the porch, facing each other across the small table. Without being asked, I showed Luke how to hold his fork properly, to remove the food with his lips not his teeth, and not to allow his elbows to touch the tabletop.\n\n\"I never learned any of that,\" he said.\n\n\"I'm not trying to be a PITA,\" I said. \"But, it's all stuff you'll want to know. I'm happy to help you.\"\n\n\"A PITA?\"\n\n\"Yes. A Pain In The Ass,\" I said, holding up a finger to mark each new word.\n\n\"Ah. That's a good one.\"\n\n\"I love this porch,\" I said. My mind was jumping hither and yon over the intimacy of our dinner.\n\n\"Me, too.\"\n\n\"I'm out here almost every night.\"\n\n\"I would be, too.\"\n\nI cleared the dishes and returned with two more glasses of wine. We settled on the couch, I turned on music, and we listened to the cicadas sing the song of Summer. As we did, I reached over and picked up Luke's hand. As a ruse, I held it up to mine, pretending I wanted to see which was bigger. Mine was, but only by a little. \n\nI intertwined my fingers with his and lowered our hands. \n\n\"James, why are you holding my hand?\" He asked.\n\n\"I want to. I dont' have to, but I want to. I think both of us deserve to be touched a little more.\" \n\nLuke said nothing in response, but he relaxed his hand, leaving it in mine. I dozed off holding it, my wine in my right hand. The wine spilling into my lap woke me up. I let go of Luke's hand with a start. \n\n\"It's okay,\" he said. \"You don't have to let go.\"\n\n\"I didn't. I mean, I did, but only because I dozed off and spilled my wine.\"\n\n\"Oh.\"\n\n\"I'm going to head to bed.\"\n\n\"Me, too, in a minute. This is the nicest place I've ever stayed. I'm going to stay up and enjoy it a while longer.\"\n\n\"Be my guest.\"\n\n\"I am,\" he answered, a wink in his voice.\n\nWhen I climbed into bed, I was too tired to masturbate. Besides, it seemed a base way to end a beautiful day.\n\nChapter Seven\n\nWhen I returned from yoga the next morning, Luke was up and in the pool, practicing. I stood at the kitchen window and watched him swim down and back, down and back, his muscled back gliding across the water far more gracefully than I expected from a novice. I cut up a plate of fruit and took it and my coffee to the porch. I was absorbed in my iPad when Luke joined me, his board shorts and hair wet and a towel draped around his neck.\n\n\"Good morning, James,\" he said. \n\nI almost didn't recognize him. He seemed far more comfortable and confident than the boy who had called me for help the day before. \n\n\"Good morning, Luke\" I answered, smiling at him. \"You looked great. You're a natural. You took to the water like a duck.\"\n\n\"I finally understand what the fuss is about,\" he answered. \"Water always seemed silly to me. But, now, I feel, I don't know, weightless in it.\"\n\n\"I feel the same way. Weightless and, I don't know, at peace. Whenever it all feels to be too much, I try to swim the heaviness away.\"\n\n\"That's exactly what I felt like I was doing. Swimming the heaviness away. I feel like a different person.\"\n\nI stood up and asked Luke to stand up. When he did, I wrapped my arms around him, and he wrapped his arms around me. As I had the day before, I moved my right hand to his head and held it against my chest.\n\n\"Just relax and soak it in,\" I said.\n\n\"Soak what in?\"\n\n\"The affection. That's what a hug yields. Affection.\"\n\nWhen Luke pressed his head to my chest, I squeezed him as hard as I could. He squeezed me back as hard as he could. Before I could not, I pulled out of the embrace and returned to my chair.\n\n\"What was that for?\" he asked.\n\n\"Like I said last night, I think we both deserve to be touched a little more.\"\n\n\"You can say that again. I think I've been cheated my whole life. I ain't hardly ever been touched.\"\n\n\"If you want to talk like me, you can start by eliminating 'ain't.' Ain't ain't a word.\"\n\n\"I know, but that's a hard one. I've been talking like that my whole life.\"\n\n\"Hard isn't impossible, and you should try to do impossible things, in any event. It builds character.\"\n\n\"I'm a solider. I've got people building my character every day.\"\n\n\"I have people building my character every day,\" I corrected.\n\n\"I have people building my character every day,\" he repeated.\n\nAfter lunch, we went to a matinee showing of Mad Max: Fury Road. As we drove, I strongly suggested he not eliminate the end Gs in words when he spoke. We practiced everythinG and nothinG and somethinG.\n\nAbout halfway through the movie, Luke whispered \"here\" and held his hand out, palm up and open. I was shocked, but not so shocked that I didn't take it in mine. He then slid them between the seats where anyone not minding their own business would not see that the two men in the middle of the middle row were holding hands. Every once in a while, Luke squeezed my hand with his. Each time, I squeezed back. And smiled inside.\n\nAfter the movie, we got monstrous frozen custards and headed home. Luke was like a child, his cheeks and chin covered with his cookies and cream concrete. Obsessive, I was the opposite, eating while driving and not getting even the hint of a drop anywhere other than my tongue.\n\nWhen I awoke from my nap, Luke was again in the pool, alternating between his freestyle stroke and floating on his back. I liked it best when he floated, his creamy white chest and mounded board shorts sticking up out of the water.\n\nI stood up to join him. \"Luke,\" I called. \"Come out for a second. You need sunscreen on your back.\"\n\n\"And my front,\" he said, climbing out. \"I didn't put any on.\"\n\n\"New rule. You can't go in the pool without sunscreen.\"\n\n\"You, too?\"\n\n\"Fine. Me, too.\"\n\nI watched Luke apply sunscreen as I applied my own. When it was time, he turned to me, accepting that I was going to cover his back and sides. I loved the feel of him and the contrast between my large, tan hand and his creamy white skin. Unlike the last time, he was not taut this time.\n\nWhen I was finished, Luke covered my back. His hands on my skin was too much for me, and I got a little lost in it. I shocked myself when I moaned. He paused when I did, but then continued on.\n\nWhen he was finished, I again dove into the pool to hide what he did to me. He followed me in with more of a flop than a dive. I climbed aboard a raft and settled back. I must have dozed off. When I woke up, Luke was on a raft next to me, facing the opposite direction and holding my right hand in his. \n\n\"Hey, Sleepy,\" he said, when he noticed I was awake.\n\n\"Hey, Guppy,\" I responded.\n\n\"Guppy?\"\n\n\"Yep. You're a new swimmer. You're like a guppy.\"\n\n\"This is nice, isn't it?\"\n\n\"It's more than nice,\" I answered, squeezing his hand. \n\nOver dinner, I asked about being a soldier. He walked me through what seemed to be a mundane and routinized existence.\n\n\"And you like it?\" I asked.\n\n\"I do. I ain't never . . . I haven't ever really fit in anywhere. I fit in there. No one cares about anything other than whether you're either a good soldier. The guys either feel like you've got their back or they don't.\"\n\n\"And you're good?\"\n\n\"I'm better than good. I'm the best. I just get it. There are lots of things I don't get, but I get being a soldier.\"\n\n\"Like you get swimming?\"\n\n\"Oh, way more than swimming. I get being a soldier the way some people get math. It's just easy for me. I felt it when I first cleaned my rifle or shined my shoes. It's what I'm meant to do.\"\n\nAfter dinner, Luke and I shared a bottle of wine on the porch. We sat at opposite ends of the sofa, our legs intermingled as we each leaned on one arm and talked. Luke asked me about Jess, and I told him as many stories as I could bear. Most had been locked away since before Jess died. As I talked, I absent mindedly traced a trail with my right forfinger from mole to mole to mole on his left calf.\n\n\"You have a lot of moles,\" I observed.\n\n\"I have a lot of beauty marks,\" he corrected.\n\n\"Is that what they are?\"\n\n\"Yes. Every single one of them.\"\n\n\"I'm not surprised,\" I said, taking a risk and then winking at him. As always, he winked back.\n\nI awoke on the sofa at just past 2 a.m. Luke was dead to the world, so I extricated myself, pulled him flat, and covered him with my favorite throw before going in to bed. He was still there the following morning when I left for yoga, the corners of his mouth turned up. He appeared to be smiling as he slept.\n\nChapter Eight\n\nI hated the date as I scanned in to class. July 18, the first of the last three full days before Luke returned to the U.S.. Army. Unexpectedly, he had shattered my isolation. Now, I couldn't imagine him leaving. I felt like he might be my savior.\n\nI found no peace in downward dog or any other pose. Halfway through class, I left. If I had only three more days with Luke, I didn't want to waste any of them in a yoga class that I now visited more out of habit than enjoyment.\n\nLuke was in the kitchen in only his underwear when I got back home. My early return surprised him.\n\n\"I thought class was until 7.\"\n\n\"It is.\"\n\n\"Why'd you leave early?\"\n\n\"Can't say.\"\n\n\"I was making coffee and breakfast. Take over, and I'll go put some shorts on.\"\n\n\"You're fine like that. No one can see in.\"\n\n\"I feel self-conscious.\"\n\n\"Fine,\" I answered, slipping my shorts off. \"Now we're both in our underwear.\"\n\n\"You're crazy.\"\n\n\"Maybe, but I feel less so every day,\" I admitted, again taking a risk.\n\nWe took our coffee and our fruit on the porch at the small table. When we were seated, I put my right foot on top of Luke's left foot. He answered by putting his right foot on top of my left foot. He suprised me. When I looked up, he smiled at me.\n\n\"You have big feet,\" I said.\n\n\"And big . . . shoes,\" he answered, laughing at himself.\n\n\"What do you want to do today?\"\n\n\"If it's okay with you, I'd like to run your wife's route with you. I'd like to know where it happened.\"\n\nI was suprised and vexed. I thought the request odd and feared it'd be painful for me, although I was not sure why. I ran the route almost every day.\n\n\"Okay,\" I said. \"What about after that?\" \n\n\"Nothing. Just hang out. I've never lived like this. I feel like a King.\"\n\n\"Then hang out it is. I have to do some work after breakfast, but I should be finished by lunch.\"\n\n\"Awesome. Maybe we can learn a new stroke today.\"\n\nI looked up. He didn't appear to be using a double entendre. He was talking about swimming.\n\nWhen I finished my work, he was dressed and ready for the run. When we got to the spot, I stopped, and he stopped beside me. As I crossed myself, he put his hand on my shoulder and leaned his head against my arm. He mumbled something that sounded prayerful, said \"I'll leave you two be,\" and started off. He needn't have. I didn't think of Jess as there. I caught up to him quickly. We ran home in complete silence. As expected, it had been painful for some reason, so I went directly to my room to regroup.\n\nWhen I emerged, Luke was already in the pool. Since he hadn't asked for my help, I knew he did not have any sunscreen on his back. \n\n\"Hey, Guppy,\" I called. \"Out of the pool.\"\n\n\"Why?\"\n\n\"What's the rule?\"\n\n\"Oh crap, sunscreen.\"\n\n\"That's right, sunscreen.\"\n\nLuke climbed out of the pool, walked toward me, and stopped right in front of me. He spread his legs and arms and stood there like a scarecrow.\n\n\"What're you doing?\" I asked.\n\n\"I'm wet. Do it for me.\"\n\n\"Everywhere?\"\n\n\"Everywhere.\"\n\nI grabbed a towel and dabbed his skin dry. I squirted some cream in my hand and rubbed my hands together. I started with his face, gently covering his forehead and his cheeks and his temples. I moved to his ears and to his neck. I added more cream and moved to his shoulders and arms.\n\n\"Raise your arms,\" I said. He did, and I covered his arm pits and sides. He squirmed as I ran my hands down his sides.\n\nI looked at him with a question on my face. \"Keep going,\" he answered.\n\nI added more cream. I worked over his chest and stomach before moving behind him and covering his back. I was taking my time, hardly believing what I was doing and being extremely detailed in my work.",
        "I kneeled behind him and covered the back of his thighs and his calves. His round backside was right in my face, and as I put pressure on his legs, he arched his back for balance. When he did, his backside raised toward me. It was all I could do not to bite it.\n\nI moved back to the front. I kneeled in front of him and started at his thighs. His board shorts were too thin to hide that he was enjoying my hands on him. I turned my head from what stood before me. If I hadn't, I'd have put my mouth on him, through the shorts. I worked his calves and the tops of his feet.\n\n\"There,\" I said, standing back up and breathing for the first time in what seemed like forever.\n\n\"My turn,\" he answered, taking the tube from me. \"But you're too tall. You have to lay down.\"\n\n\"Lie down,\" I corrected.\n\n\"You have to lie down.\"\n\nI did, on my stomach first. Luke attacked me from above, his hands working over my neck and back and sides. As he reached, I could feel him hard against the top of my head.\n\nHe worked each of my legs from the top also. He stood beside me as he did, his hip pressing into mine. He moved below me to do my calves.\n\n\"Over,\" he said, his voice cracking.\n\n\"Okay,\" I said. \"But, I'm, uh, boned up.\"\n\n\"That's okay,\" he said. \"I am, too.\"\n\nI rolled over, reached inside my shorts, and pulled myself straight up so I was as inconspicuous as I could be. I kept my eyes closed so I could resist the urge to look at Luke's erection.\n\nLuke started at my feet. He was meticulous. His fingers were between my toes and then on the dorsal. I tingled all over as he moved up my legs, over my stomach, through my chest and neck, and to my face. He was back above me, and his thumbs were gently protecting my eyelids, my nose, even my lips. When he was finished, I was simultaneously totally relaxed and completely anxious.\n\nI raised up and shielded my eyes as I heard Luke break the water. I looked down and saw that I was sticking out of the top of my shorts. \"Cussword,\" I thought to myself. \"I hope he didn't see that.\"\n\nI joined Luke in the pool. \"I really enjoyed that,\" I said.\n\n\"I could tell.\"\n\n\"Sorry about that.\"\n\n\"Don't worry about it. I've seen plenty. I'm in the Army, remember. We share showers.\"\n\n\"Do you masturbate?\"\n\n\"Not in the showers.\"\n\n\"No, I mean generally. You said your parents were strict. I'm sure they taught you it was sinful.\"\n\n\"They did. Actually, they taught me the only time it was okay to touch yourself was when you're peeing or washing. Otherwise, your privates are off-Iimits.\"\n\n\"There's no way a teenaged boy can not masturbate.\"\n\n\"I have, but I try not to. I was kind of a late bloomer. My first time, I shot all over. I thought there was something wrong, but I didn't have anyone to talk to about it. I finally asked another kid at school. He couldn't believe I had just started. He had been at it for years.\"\n\n\"It's not sinful.\"\n\n\"I know. But, now, there's not just much opportunity. Some guys don't care if everyone knows they're doin' it. I ain't . . . I'm not that way. I can't do it if I'm not alone. And, I don't like doin' it in a stall. It seems weird to do it where you leave your waste.\"\n\n\"You ready to try?\" I asked, changing the subject, but without Luke knowing it.\n\n\"Try what?\" he asked, blanching and then turning red.\n\n\"The breast stroke. That is what you're learning today, right?\"\n\n\"Oh, right. I wasn't sure what you meant.\"\n\n\"That's what I meant,\" I answered. It really was, at least a little.\n\nLuke did not take to the breast stroke the way he had to freestyle. He kept taking on mouthfulls of water and coming up choking and coughing. When he finally got it, we had been going at it for hours, and we were both frustrated and tired. \n\n\"Let's go out tonight.\"\n\n\"To a restaurant?\"\n\n\"Yes.\"\n\n\"Awesome. I've hardly ever done that.\"\n\n\"Well, then we'll make an evening of it. We can get dressed up and make it grand.\"\n\n\"I don't really have any dress up clothes.\" \n\n\"We'll go get some. You need them anyway.\"\n\n\"You've already done enough.\"\n\n\"I'm going to do more than enough. I'm a rich man, Guppy. Not because of anything I did. Because my grandfather was smart and because my wife died. Let me do this. I really want to.\"\n\n\"Okay, but only if you really want to,\" he answered, mocking me.\n\n\"I do.\"\n\nI put on a red shirt, black slacks, and black loafers. I then took Luke to Brooks Brothers. We got him a pair of light khakis made with silk, two striped shirts, a belt, and loafers. When he showed me the ensemble, I made a couple of adjustments.\n\n\"Let's switch to plain front slacks,\" I told the salesman. \"And, let's go with lighter shoes and a lighter belt.\"\n\n\"The pleated slacks provide more room in the front,\" he answered. I knew why.\n\n\"Plain front,\" I insisted.\n\nAfter we checked out, we ducked into the salon next door. \"I need a little product for my friend,\" I said to Ty, who had been cutting my hair until I quit cutting it. Ty responded by looking at me in disbelief.\n\n\"Jammer, that mess of a head of yours needs some love. Come see me. We'll just trim it up a bit. You'll keep your beautiful curls, but lose some of the mess.\"\n\n\"I will. Soon. I promise. But, until then, can you dab some product in Luke's hair, part it on the left, and comb it back?\"\n\n\"Sure thing,\" he answered. In no time, Luke looked like he was out of a catalog.\n\n\"I feel like a mannequin,\" he said, as we walked back to my car.\n\n\"You look like a model.\"\n\nWe dined at J. Gilbert's. We were gluttonous. Luke was more thrilled by the fact they served him wine than he was by the new threads and the glorious steak. Every time they refilled his glass, he held his breath.\n\n\"Keep that up, and you'll give yourself away.\"\n\n\"I'll be 21 soon.\"\n\n\"Act like you are now if you want the Opus One to keep coming.\"\n\n\"It's good.\"\n\nNot too good for you, I thought to myself. Not too good for you.\n\nChapter Nine\n\nBack at home, we again sat at opposite ends of the couch and watched The Wire on Netflix. I wondered if Luke knew what \"Netflix and Chill\" meant. I almost asked him, but thought better of it. Instead, I grabbed his foot, moved it to my lap, and started massaging it.\n\n\"That feels really good.\"\n\n\"It's supposed to.\"\n\n\"Here,\" he said, giving me the other one. \"Do this one, too.\"\n\nI rubbed them both at the same time. As far as feet go, they weren't bad. He didn't seem to pay attention when he clipped the nails, but they otherwise seemed well cared for.\n\nWhen I was finished, he said \"your turn\" and patted his lap. I moved my left foot into his lap.\n\n\"The tops of your feet are suprisingly hairy.\"\n\n\"I'm like a hobbit,\" I answered.\n\n\"No, you'd have to have long nails if you were a hobbit. You don't. Do you get pedicures?\"\n\n\"No. I'm just a little obsessive about things.\"\n\n\"Is this okay?\" he asked, wondering if he was doing it right.\n\n\"It's more than okay,\" I answered. Because they were his, the hands on my feet felt wondrous.\n\nI fell asleep with my feet in his lap. When I woke up, he, too, was asleep. I shook him awake and told him it was time for bed. I wondered if he would follow me into my room, but he didn't. He headed toward the stairs.\n\n\"Guppy?\" I stopped him. \n\n\"Yeah?\"\n\n\"Can I hug you good-night?\"\n\n\"Sure.\" \n\nI moved toward him and stepped into his open arms. I ran my hands up and down his back before taking hold of his head and pressing it into my chest. He ran his hands up and down my back as I did.\n\n\"Thank you for today,\" I said. \"I had a great day.\"\n\n\"Me, too.\"\n\n\"Sleep well.\"\n\n\"You, too.\"\n\nI closed my door behind me, but I didn't lock it. I slipped out of my boxer briefs and slipped into my bed. I tickled my chest and sides and then my groin. My own hand did not feel nearly as good on my body as Luke's had. Still, I got hard, so I stroked myself thinking of Luke's hands on my chest and sides as he covered me with sunscreen. I imagined that, when I felt his groin against the top of my head, I hadn't lain still, but had instead arched my neck and buried my face between his legs. I came thinking of my mouth and tongue on him through the board shorts, his hardness leaking into the fabric.\n\nI felt like a teenager doing it, but I texted Luke from directly beneath him. \"It was good to be touched. It's what I miss most with J gone.\"\n\nI was asleep when Luke texted me back. When I awoke to pee at just past 4, I checked my phone. Only two minutes after my text, Luke had responded. \"I didn't know what I was missing. Now I do, and I'm missing it.\"\n\nI thought the text might have been an invitation, but I wasn't sure. I typed \"I'm just downstairs.\" I hovered my thumb over send and then chickened out and didn't hit it. I thought it was too forward. \n\nInstead, I sat up in my bed and brooded over what, if anything, I should do. The more time I spent with Luke, the more attracted I was to him. But, it was also the less time I had with him. I looked at the clock. It was 5:15. Luke's flight was in 51 hours. I started to panic. Our clock was ticking, and I did'nt want to spend any more of the little time we had left asleep than we had to. I decided to wake him up. I was drunk with excitement by the time I got to the top of the stairs. \n\nLuke's door was open, so I walked in. He was asleep on his back, the sheet pulled up to his navel, and his left leg again sticking out. I sat down on the edge of the bed and marveled at him. The sun was on its way up, so the room was light enough that I could see he was again sleeping with a slight smile on his face.\n\nI gave in to my temptation and started tracing from mole to mole, connecting the dots that littered his face, his neck, his shoulders, and his chest. As I started retracing the pattern, Luke stirred, opened his eyes, and smiled at me.\n\n\"What're you doing?\"\n\n\"Waking you up.\"\n\n\"What time is it?\"\n\n\"It's early. But I needed to see you. We're running out of time.\"\n\n\"Will you do what you were doing?\" he suprised me by asking. \"With your finger?\n\n\"Sure.\" I resumed the pattern. As I did, Luke pulled the sheet away, so I had full access to all of his moles. I touched every one I could find. I couldn't help but notice he was enjoying it. When I had traced and re-traced the front of him, he rolled over and let me trace and re-trace the back of him. \n\nI don't know how long I took, but I was aching by the time Luke said, \"I need to pee.\" He slid out of bed, going out of his way to keep his back to me. I knew what he was hiding. If I had tried to move, I'd have had to hide the same thing.\n\n\"Guppy,\" I called out. \"I'm going downstairs to get breakfast.\"\n\n\"Great. I'll be right down.\"\n\n*****\n\n\"Jesus,\" he said, as he came into the kitchen. \"It's only 6. I'm on a break from the military, ya know.\"\n\n\"I know. But, our time together is short. We can't sleep it away. There's too much I don't know.\"\n\n\"Like what?\"\n\n\"I don't know. I don't know what I don't know.\"\n\n\"What's for breakfast?\"\n\n\"I'm making Bailey's French Toast.\"\n\n\"I love French Toast.\"\n\n\"Then you'll love this.\"\n\nI added Baileys to the milk and eggs and soaked the bread before frying it. We ate on the porch. I could not help but touch Luke. I put my left hand over his right. I put my feet on top of his.\n\nWhen we were finished, he started to clean up. \"I'll clean up after you're gone,\" I said, shocking my obsessive self. \"Let's swim.\"\n\nAs we had the day before, we coated each other with sunscreen. As I covered Luke, I couldn't control myself.\n\n\"You're beautiful,\" I said.\n\n\"Thank you, but that sounds weird. Boys ain't, uh, aren't beautiful. Girls are.\"\n\n\"I disagree. Some boys -- like you -- are beautiful.. And some girls aren't.\"\n\n\"Beauty is in the eye of the beholder.\"\n\n\"Maybe, but your're objectively beautiful.\"\n\n\"I've got big ears. Like Nestor, the Long Eared Donkey.\"\n\n\"Actually, studies show people with large ears are perceived as more attractive than people with small ears. You were blessed with large ears. And a great smile,\" I added, touching my hand to his lips. \"And lively eyes,\" I added, touching my thumbs to his eyelids.\n\n\"Can you stop?\"\n\n\"Sure, but I don't want to.\"\n\n\"I'm not good at compliments. I ain't . . . Dammit . . . I haven't gotten many . . . I haven't received many, and they make me feel weird.\"\n\n\"Then I'll stop. But, I don't want to. You should know how beautiful you are.\"\n\n\"Well, I suppose a lot of people should know a lot of things they don't.\"\n\n\"I suppose that's true,\" I answered, marveling at the nuggets of wisdom he tended to drop. \n\nWe spent the morning in the water working on Luke's strokes. He was probably ready for another one, but I didn't want the frustration that accompanied the teaching of the breast stroke to return.\n\nLate in the morning, we were on opposite sides of a raft, our chins on our hands as we talked. \"Hey, Guppy, want to play a game?\"\n\n\"Sure.\"\n\n\"My wife and I used to play. We called it 'Stare Into Your Eyes.'\"\n\n\"Is that all there is to it?\"\n\n\"Yes, but it's harder than it seems. It's really hard, actually.\"\n\nIt turns out it wasn't. I called time, we started, and neither of us looked away. We just stared, neither of us talking. I don't know about Luke, but I was barely breathing.\n\nAnd staring.\n\nOn and on and on. \n\nLuke smiled, grinning as broadly as he had at Gate E5 only a few days -- that at times seemed like a few years and at others seemed like a few seconds -- before. I smiled, too. Luke started laughing, so I started laughing, too. Neither of us looked away. \n\n\"How long do we do this?\" he asked.\n\n\"Supposedly, as long as we can.\"\n\n\"Seems like it could be forever.\"\n\n\"I know. It's not supposed to be this easy.\"\n\n\"On the count of three, let's go under and do it,\" he said.\n\n\"Okay,\" I counted. \"One . . . Two . . . Three.\"\n\nDown we went, eyes open, hair drifting and loose. I reached my hands out to Luke, and he grabbed them. I pulled him in, and we were forehead to forehead, still staring. Before we ran out of air, we both started laughing again. We laughed so hard we had to surface. \n\nWe laughed harder once we surfaced. We climbed out of the pool and collapsed on our backs on the deck, our feet still in the water. As we caught our breath, I reached over and took Luke's hand in mine. I squeezed, and he squeezed back.\n\nI don't know why Luke was laughing. I was laughing because I realized I could love again and was, in fact, doing so. Somehow, some way, I had fallen in love with Luke. And, he had fallen in love with me. I was sure of it.\n\nThe \"Stare Into Your Eyes\" game had told me. It had taken a long time for me and Jess to get where Luke and I were the first time we played. We never looked away. \n\nChapter Ten\n\nWe spent the afternoon in the pool, re-playing \"Stare Into Your Eyes,\" frolicking, and otherwise feeling the contours of new love. We smiled so wide I thought our faces would crack. We laughed so hard I feared the neighbors might call the police. \n\nBy the time we were finished with dinner, I was exhausted. We were on the porch, not talking, just sitting beside each other, holding both hands, his head on my shoulder, and my head on his.\n\n\"James?\"\n\n\"Yeah.\"\n\n\"Can we go to bed?\"\n\n\"Together?\"\n\n\"Together.\"\n\nLuke stood up, took my hand, and walked me to my room. Watching each other, we undressed to our underwear and climbed into bed. Luke was on his right side, his right hand near his face. I was on my left side, and I took his right hand in mine. I held it for awhile, listening to each of us breathe. \n\n\"Luke, should we talk about what's happening?\" I asked, disrupting the peace.\n\n\"I dunno,\" he answered. \"Seems pretty obvious to me.\"\n\n\"Are you okay with this?\"\n\n\"I think so. I dunno. I've never really been in this situation. But, I've wanted to be, ever since I can remember.\"\n\n\"Tell me what you remember,\" I urged.\n\n\"Well, I guess the first thing I remember was I just never fit in with the other boys in school. I didn't like what they liked. I didn't talke about what they talked about. When the Harry Potter movies came out, all the boys in school went on and on about Hermione. I much preferred Harry. Then, High School Musical came out, and the same thing happened. The boys were all about Gabriella and what they'd like to do to her. I didn't want to do anything to her. I'd have picked Troy over her any day. Everything I wanted to do was to Troy. Since, it's been Tony in Jarhead, almost every guy in the Hunger Games, and now Max from Fury Road. It ain't never been a girl. I suspect it never will be.\"\n\n\"Did you ever tell anyone?\"\n\n\"No way. It'd have been all over for me. I was already on the outside lookin' in. I'd have been on the outside of the outside, lookin' over the folks who were lookin' in.\"\n\n\"You're regressing. Use your Gs. And avoid 'ain't.' Who were your letters to?\"\n\n\"Oh, just some other boy.\"\n\n\"Did you ever meet him?\"\n\n\"No. He lived in Idaho. I found him online at the library. We wrote back and forth. It was all 'here's me' at first, but then it got to be a little more. He wrote me a letter about what he wanted to do when we finally met. I loved that letter. I could see it all as I read it. I wrote him back and told him what I wanted to do when we finally met. I could see that, too. I was just guessin', though, as I didn't really know what two boys could do together. My mom found his letter and sent me away, I got this tattoo, blah blah blah, here I am.\"\n\n\"Did you ever hear from him again?\" I asked.\n\n\"I don't know. Maybe. He may've answered my letter. If he did, it wasn't in our house when I got back from White Plains. And, all evidence of him was gone, including his address.\"\n\n\"Did you ever try to find him again?\" I asked, a little heartbroken.\n\n\"No. I should've. But I didn't. I was afraid of getting caught and throwed out.\"\n\n\"Thrown out.\"\n\n\"Right. Thrown out.\"\n\nI traced over the backwards words on his chest with my forefinger. He tensed as I did.\n\n\"I was kind of that way,\" I said. \"I knew from very young I was different from the other boys. I thought girls were hot and got excited when we got our hands on a Penthouse or a Playboy. But, I also thought boys were hot and got excited when my friend Jason changed in front of me or stayed over in his underwear. I finally asked if he got excited the same way, and he said 'no' and 'it wasn't normal.' It felt normal to me, though.\"\n\n\"Did you stay friends?\" he asked. I wanted to say \"yes,\" it didn't matter, he was cool. But, I couldn't lie.\n\n\"Kind of, but not like we were. He definitely stopped staying over and stopped asking me to stay over. We only hung out in school.\"\n\n\"How'd you wind up married?\"\n\n\"Pretty easy. I thought if I could be with girls, then I should. It was just easier, and I didn't want a harder life. And, Jess was awesome. I think I'd have loved her no matter what.\"\n\n\"I don't think I could ever be with a girl. I just don't think it'd work for me. I can't even imagine it. It's never done nothing' for me.\"\n\n\"Anything for me . . . . Some people are like that. Some people are just the opposite. And, some people are closer to the middle.\"\n\n\"Like you?\" he asked, raising one eyebrow at me.\n\n\"Yes, like me,\" I answered. \"I was happily married to a woman. And I could be happily married to a man.\"\n\n\"Do you think you'll ever get married again?\"\n\n\"To anyone or to a woman?\"\n\n\"To a woman?\"\n\n\"No. I don't know why, but I don't think I could do that to Jess. It would seem disloyal.\"\n\n\"This doesn't?\" he asked, taking my tracing hand into his and holding it firmly against his smooth, muscled chest.\n\n\"Not yet.\"\n\n\"Do you think she knew?\"\n\n\"No. We worked for me, and I'm pretty convincing when I need to be.\"\n\n\"I ain't,\" he said. \"I can't trick anyone. I never learned to.\"\n\n\"Come on, Luke. It's 'I'm not,' not 'I aint'. And, of course you're not. You seem utterly without guile.\"\n",
        "\"Whatever that means.\"\n\n\"Straightforward. Not manipulative or phony. Direct. Honest. Open.\"\n\n\"Probably,\" he answered. \"Maybe that's why the other soldier's call me Rube, when they're not calling me something else.\"\n\n\"What's the something else?\"\n\n\"I ain't saying.\" \n\n\"Ain't ain't a word,\" I corrected, tired of all the backsliding that was occurring as we rested next to each other the bed I had last shared with my wife.\n\n\"\"I'm not saying. Some things are better left unsaid.\"\n\n\"No one in the Army, either?\"\n\n\"No one in the Army, either, what?\" he asked.\n\n\"To whom you're attracted and vice versa?\"\n\n\"Nah, I ain't . . . . I'm not interested in that. I want to be a soldier. I'm not going to let anything cloud that up.\"\n\n\"I hope I don't.\"\n\n\"You won't. You know the old saying,\" he rejoined. \"'Out of sight, out of mind.'\"\n\nI'm sure he didn't mean them to, but his words stung me. I removed my hand from his chest and fought back the tears I could feel building in the corners of my eyes. \n\n\"It's really late,\" I finally mustered. \"We should probably get some sleep.\"\n\n\"You sure?\" he asked, as if more, or some alternative, should be coming.\n\n\"I'm sure,\" I answered. \"Good night, Guppy,\" I added, rolling away from him and curling up on my right side.\n\n\"Good night, James,\" he answered, shifting in the bed until I felt his back to me. \n\nI wanted to say something, but I didn't know what. Against my will, I drifted off before I could think of anything. I slept peacefully and untroubled.\n\nI was suprised when I awoke behind Luke, whose small frame made him a perfect little spoon. I was immediately self-conscious, as I was sure he could feel me pressing against his backside. I tried to pull back a little, but Luke stopped me.\n\n\"Don't move. I'm really comfy.\"\n\nI reached my arm through his and pulled him in tighter against my chest. I kissed the back of his head.\n\n\"The hair on your chest tickles my back.\"\n\n\"Want me to put a shirt on?\" I asked.\n\n\"No. I like the way your skin feels. And I like the tickling.\"\n\nI pulled him in even tighter and buried my face in his hair. He locked his fingers in mine over the top of my hand. I matched the rhythm of my breathing to his. I didn't want it to, but sleep drifted back over me. \n\nI again slept peacefully and untroubled. I awoke to a summer storm, rain pouring down and thunder rolling across the darkened sky. I was alone. I smelled coffee and heard the sweet sound of Jess's grand piano.\n\nI rolled onto my back, propped my hands behind my head, and revisited the past seventy-two hours. I couldn't help but smile at the happenstance of it all. Incredibly, impossibly, we had drifted toward and found each other.\n\nI smelled my hand to see if I could smell Luke on it. I couldn't .\n\nI thought of trying to fall back asleep, but decided instead to follow the music to Luke.\n\nI stopped in the doorway to the formal living room and gaped as Luke -- in one of my dress shirts and his underwear -- tickled the keys to what I believed to be Rachmaninoff. He was very accomplished, which shocked me as much as if I had seen Christ himself riding a bicycle. Considering what I had seen of his home, I wouldn't have expected Luke to have encountered a piano, much less conquer one. I thought back to his exposition on being a soldier and how easily he had taken to it, and I wondered if the same wasn't true for the piano.\n\n\"You play beautifully,\" I offered, when he finally stopped and looked up.\n\n\"Long fingers,\" he said, holding his hands up to show me.\n\n\"Play on.\"\n\n\"I can't. I'll be too self-conscious. I only got that far because I didn't know you were watching.\"\n\n\"How did you learn?\"\n\n\"We had a piano in my grade school. My feet were too big, and I was clumsy. So, at recess, I played the piano while the other kids played outside. I loved it from the first note I struck.\"\n\n\"You're a marvel.\"\n\n\"I'm not that good.\"\n\n\"Not at the piano. In life. Every time I think I have you figured out, I realize I don't. At all.\"\n\n\"I'm no mystery.\"\n\n\"You are. You seemed to have an unhappy childhood, but you constantly grin. You claim not to be learned, but you're certainly astute. Your home and parents do not suggest an accomplished pianist. Every revelation is a marvel to me.\"\n\nIn response, Luke just shrugged and smiled. I couldn't tell if it was a shrug of agreement, disagreement, or admission.\n\nWe took our coffee to the porch. When I looked up from the paper, Luke's forehead and nose were pressed to the screen door. He must have felt my eyes on him, as he turned to me as I watched him.\n\n\"I like storms,\" he said, answering an unasked question.\n\n\"Me, too,\" I said, settling on the floor in front of where he had sat. Luke returned, sat behind me, and put his hand in my hair and twirled it between his fingers.\n\n\"You're wearing my shirt,\" I observed.\n\n\"I hope you don't mind. I needed to get up, but I liked being against you. So, I borrowed your shirt.\"\n\nI have no idea if Luke knew how romantic he sounded. I am a sucker for romance. My breath caught in my throat. \n\n\"I don't mind at all,\" I croaked.\n\n\"Your hair is long,\" he observed, nonchalantly. \n\nHe was right. It was throwback hair, like Thyago Alves in \"David's Birthday.\" \n\n\"I know,\" I answered. \"I've had no reason to cut it for awhile. I don't shave much, either.\"\n\n\"I don't have to. And, I've never had long hair.\"\n\n\"Come down here,\" I said, patting the space between my legs. He did, settling back against me. I wrapped my arms around him and held him tight.\n\n\"What do you want to do today, Guppy?\" I asked.\n\n\"This.\"\n\n\"Me, too,\" I answered, kissing the side of his head and then nibbling on the top of his left ear. He squirmed.\n\n\"That tickles,\" he cried.\n\n\"Good,\" I whispered, nibbling harder.\n\n\"Can I tell you something?\" he asked.\n\n\"I think you can tell me anything.\"\n\n\"I've never kissed anyone. Not a real kiss, I mean.\"\n\n\"Good,\" I answered. \"Then you won't know how bad I am when I kiss you.\"\n\n\"Are you going to kiss me?\"\n\n\"I hope so.\"\n\n\"Me, too.\"\n\nI could have kissed him right then and there. I wanted to, but it didn't seem right. And, I couldn't muster the courage. I got close, but my courage was evanescent.\n\nI tickled him instead. He squirmed hard, spilling his coffee and rolling away from me onto the floor.\n\n\"I don't like being tickled.\"\n\n\"Well . . . then . . . that's too bad,\" I answered, pouncing on him and tickling him some more. By the time I stopped, he was balled up and out of breath. I collapsed behind him, pulled him to me, and buried my face in his neck. I smelled his smell, which was mostly the smell of orange guest soap. \n\nSated, I stood up, held out my hand, and pulled him up. I raised his chin with my thumb, so we were again staring into each other's eyes. I exposed myself as much as I could.\n\n\"I really like you, Luke Rydell.\"\n\n\"I'm glad. Because I really like you, too, James whatever your last name is.\"\n\n\"You don't know my last name?\" I asked, a little incredulous.\n\n\"No, I don't think so.\"\n\n\"It's Walton.\"\n\n\"I definitely didn't know that.\"\n\n\"That's disappointing and interesting.\"\n\n\"Maybe,\" he answered.. \"But, I really like you, too, James Walton.\"\n\nI bent down and kissed his forehead. \"I'm glad,\" I whispered. \"I really am.\"\n\nI pulled him into me, burying his head under my chin. He wrapped his arms around me and squeezed me tight. We stayed that way long enough I knew he had to feel me thickening against his stomach. When I pulled back, I ran my hand down his arm and through his hand as I headed to the kitchen to make steak and eggs for breakfast. We ate it at the island, in our underwear. We held hands as we ate. Neither of us said much; we just smiled.\n\nOver breakfast, I decided Luke's last day of leave should be one of pampering. I called and talked our way into a 9 a.m. appointment at Bijin. Over the next three hours, we received hot stone massages, facials, manicures, and pedicures. Before we separated for our facials, I told Luke not to shower when he was finished. \n\n\"We'll clean up at home.\" \n\n\"Okay,\" he answered, innocently.\n\nAs we drove home through the rain, I asked Luke what he thought of the treatments.\n\n\"They were alright. But, I like when you put sunscreen on me better,\" he said. When I looked at him, he winked at me. I winked back.\n\nBack home, I gave Luke Jess's robe and told him to go upstairs, get undressed but for the robe, and wait for me to call him down. When he raised his eyebrow at me, I answered \"Just do it.\"\n\nI made a plate of cheese and opened the best bottle of wine I had, a 2009 bottle of Sequoia Grove Cambium that I had received as a 30th birthday gift from Sam and Kyle. I put Adele's Pandora station on the surround. I dumped way too much Philosophy 3-1 into the tub and started the hot water. I lit all the candles I owned and arranged them around the edge of the tub. By the time the bath was ready for Luke, it was teeming with bubbles.\n\nI slipped my boxer briefs off and wrapped myself in my robe. I turned out all the lights in the bathroom and called for Luke from the bottom of the stairs. I held my hands over his eyes as I guided him through the bedroom and into the windowless bathroom. He put his hands on mine as he walked.\n\n\"Wow, this is really beautiful,\" he said when I peeled my hands from his eyes and showed him what I had done for him. \n\n\"It's for you,\" I said. \"I'm going to give you some privacy. Just call my name when you're settled in.\"\n\n\"I don't need privacy.\" \n\n\"You sure?\"\n\n\"I am,\" he said, removing the robe and handing it to me. I wanted to look down, to see all of him, but I resisted. I did, however, watch his backside as he climbed into the tub. It was round and creamy white.\n\n\"I thought maybe I'd join you, if that's alright.\"\n\n\"It is, I think.\"\n\n\"Close your eyes.\" He did. I placed both robes where we could reach them and slipped into the tub.\n\n\"Okay, I'm in,\" I said.\n\nThe tub was massive. I thought it impractical and would never have put it in, but it came with the house, and it turned out Jess and I used it far more than we expected, just like this. I didn't mention it to Luke, but I was operating from memory. \n\nEven in the massive tub, our legs and feet had to touch. Over the next hour, I massaged Luke's feet, re-filled our wine glasses, ate some cheese, and periodically added hot water as Luke and I played a game Jess had taught me. She called it \"Bullet Points.\" To play, all you had to do was provide bullet points about yourself to the other person. I explained the game to Luke and then started. \n\n\"My birthday is July 10. My middle name is Michael. I have three older brothers. I love baseball and golf. I love books. I love love love Arrested Development, especially the first two seasons. I hate snakes. Your turn.\"\n\n\"Let's see. My birthday is August 27th. My middle name is David. I'm an only child. I don't love baseball. I've never golfed. I don't love books. I don't know what Arrested Development is. I don't hate snakes. Your turn.\"\n\n\"You don't have to answer mine. You can tell me whatever you want me to know.\"\n\n\"Oh, okay.\"\n\n\"Alright,\" I started again. \"My favorite color is red. I picked my college in part because the school color was red. My favorite movie of all time is 'Butch Cassidy and the Sundance Kid.' I used to watch it with my dad, just him and me, while sitting on his lap. My favorite book of all time is 'Peace Like a River.' I read it once a year. I like your moles. You're the first person I've touched since Jess died. I've never kissed a boy. Your turn.\"\n\n\"This is hard.\"\n\n\"Just tell me whatever you think of about yourself.\"\n\n\"I feel like I've already told you all there is to know.\"\n\n\"You haven't.\"\n\n\"Okay. I wish my mom and dad were different. I wish my childhood was different. I wish I knew more stuff. I've never kissed anyone, boy or girl, but I told you that already. I can't believe I'm taking a bath with you. I can't believe what's happened the past couple of days. I like the hair on your chest. I dont' like being tickled, but I like being touched. Your turn.\"\n\n\"I, too, wish your mom and dad were different. I wish you had had a great childhood. I did. I fought and played hard with my brothers. We're really tight now. I had good parents. I went to good schools. We had lots of money. Still, I was often lonely. I knew I was different, but I wasn't quite sure how or why. I had no one to talk to about it. I miss my wife. She drew me out. Your turn.\"\n\n\"My favorite color is green. I love being a soldier, but I told you that already, too. My favorite movie of all time is Mad Max: Fury Road. I'll tell you why later. I like to read. My favorite book of all time is \"Winter's Tale.\" I've never met anyone else who liked it. I like flowers. I always have. I used to pick them out of the neighbor's gardens, even after I got in trouble for doing it. I don't like my hair long, but I also don't like haircuts. They make me itch. I can't grow a beard or a mustache. I hate my ears. Your turn.\"\n\n\"I like your ears, but you know that already. I have a confession to make. This was less an accident than maybe you think. When I saw you in the airport, I couldn't look away. I moved around to be closer to you. I helped you with your bag to be closer to you. I didn't come back to the airport because I'm a good person. I came back because I wanted to know you. I'm glad your family stood you up. Your turn.\"\n\n\"I'm not dumb. I knew what you were doing. At least I thought I did. That's why I talked out loud in the line. I wanted to see if you'd turn around. I was thrown off by your wedding ring. I throught maybe I was wrong about what you were doing. I dont' read people very good. I like how tall you are and the fact you don't shave or cut your hair, it's the opposite of what I'm used to. I've never had a pet. I want one. I've never had a real best friend. I want one of those, too. I love berries, but not the ones with seeds. I like malts, but not shakes. I was excited when you came back to the airport. I'm glad my family stood me up, too. Your turn.\"\n\n\"I'm a little obsessive. My food can't touch. I eat each thing separately. My pictures have to be straight. The screws in my switches and outlets all have to be perfectly straight. I own three or multiples of three of everything. I sometimes feel like I'm 30 going on 50. I don't make friends easily. I don't smile easily. I don't like my teeth. If Jess had lived, I think I'd have told her I'm attracted to men, too. I hate onions. I'm an onionist. I drink too much. I'm nervous about what's next. Your turn.\" \n\n\"Me, too. But, I think it's time for that kiss you promised me.\"\n\n\"Are you sure?\"\n\n\"I am. I don't want to turn 21 and never have been kissed.\"\n\n\"I want it to be perfect.\"\n\n\"It will be.\"\n\nI slid toward him, sure to keep most of me hidden beneath the bubbles. I moved in front of him and braced myself against the edge of the tub. I lowered my face and lightly touched my lips to his. I felt tingly all over.\n\nI was stunned when he raised his hand and rubbed the lobe of my ear between his thumb and his forefinger. It was not the move of one who'd never been kissed.\n\nI opened my eyes to find his eyes open. I smiled as he did. I broke the kiss.\n\n\"How was it?\" I whispered.\n\n\"Perfect.\"\n\n\"It was.\" \n\n\"Do it again.\"\n\n\"Okay. This time, open your mouth when I do. I'm going to use my tongue. You should, too.\"\n\nI kissed him again. Until I couldn't wait any longer, I kept my lips closed and kissed his lips as gently as I could. When I couldn't wait any longer, I slowly opened my mouth. Luke did the same. I gently touched the tip of my tongue to his. I felt tingly all over again.\n\nI slowly pushed more of my tongue in his mouth and kissed him hungrily. I wanted to devour him. When I was out of breath, I tried to pull back, but he followed me. I pulled him with me into the middle of the tub, our movements slopping water over the edges. When we stopped, he was in my lap, our bodies slick against each other. I put my arms around him, and he put his arms around my neck. I could feel him against me. I'm sure he could feel me against him. We kissed and kissed and kissed, sometimes clumsily, always hungrily.\n\nWe kept kissing until the water was cold and as we struggled to our feet and climbed out of the tub. We wrapped ourselves in the robes and kissed again before heading to the bedroom.\n\nWe climbed under the sheet, still a little wet. We faced each other. We were wandering without a map.\n\nWe spent the afternoon kissing. Every time I thought I wanted to move my mouth elsewhere, I felt compelled to return it to his. I felt like one of the boys in \"Two Boys Kissing.\"\n\n\"Are you okay?\" I asked, for like the fiftieth time.\n\n\"Yes. Now stop asking me. If' I'm not, I'll tell you.\"\n\nWe kissed and kissed and kissed some more, sometimes hungrily, sometimes softly.\n\nAfter I don't know how long, Luke said, \"Okay. I'm not okay anymore.\"\n\n\"What's wrong.\"\n\n\"My stomach hurts. Really bad.\"\n\nMine did, too. I was as blue as a boy could be.\n\n\"I can help you with that, if it's okay.\"\n\n\"It is.\"\n\nGreenlighted, I rolled Luke onto his back and propped myself on my elbow next to him. I continued to kiss him as I moved my right hand to the middle of his chest and let it rest there before moving it to his side, to his stomach, and to his thigh. I felt like Adam in \"Ronny and I,\" tentatively exploring Luke's body with a single hand.\n\nI continued to kiss him as I moved my hand between his legs. When I cupped his scrotum in my hand, he moaned into my mouth. When I wrapped my hand around him, he gurgled. I had only myself as a referent, but he seemed large for such a small body. It was like his feet and hands, way bigger than it should have been.\n\nI kissed him as deeply as I could as I started to move my hand up and down on him. \n\n\"Is this okay?\" I whispered into his mouth.\n\n\"Yes,\" he whispered back. \"It feels so much better than when I do it.\"\n\nI kissed him more deeply as he grunted, arched his back, tensed, and finished. I kept kissing him as I swrirled my finger through the evidence of what I'd done to him. He shuddered as I did. \n\nI used his fluid to lubricate myself. I kept my mouth on his as I did to myself what I had done to him. I am, as I said, slow to go, so it took longer than it should have before I, too, finished. I grunted into his mouth as I did.\n\nRemembering his shudder, I asked \"Are you cold?\"\n\n\"No.\"\n\n\"Then what was that shudder?\"\n\n\"I dunno.\"\n\n\"Are you okay?\"\n\n\"Yes. Are you?\"\n\n\"As okay as I've ever been.\"\n\n\"Me, too.\"\n\nI moved my mouth back to his. He shimmied under me and pulled me onto him. \n\n\"I'm heavy,\" I warned.\n\n\"I like heavy.\"\n\nWe kissed and kissed and kissed. He moved his large hands from my face to my back, spread his legs, and hooked his heels behind my knees.\n\nI raised myself up on my arms and pulled my mouth from his. I stared at him, and he stared back at me. He grinned the grin of Gate E5, joyously wide. I grinned back, ecstatic.\n\nI felt like I was hurtling through the barrel of a wave. I knew exactly what I wanted to do, and -- in a deviation from all that had come before -- I didn't care whether I knew how to do it. \n\n\"Lie still,\" I urged.\n\n\"Why?\"\n\n\"You'll see.\"\n\nI moved my mouth from his face to his neck, over his chest and stomach, and down past his groin to his legs. \n\nI licked his feet. \n\nI sucked his toes. \n\nI licked the inside of his calves and thighs. \n\nI slid my tongue along the union of his legs and pelvis. \n\nI licked his scrotum. \n\nI slid my tongue along the underside of him. \n\nNervously, I took him in my mouth. For some reason, I expected it to feel or taste gross. It didn't. At all. It felt smooth and silky. It tasted like the rest of him.\n\nIt was also easier than I had expected. I did what I had enjoyed. I swirled my tongue around him. I went down as far as I could. I used my tongue on the underside of him. I pulled up and then slowly went back down. I heard a faint \"Oh my God.\" I felt him squirm and then tense. I knew he was not going to last much longer. I sped up. When I felt him thicken, I went down as far as I could. I heard a gasp as I felt warm liquid fill my mouth. I swallowed and kept going. I couldn't have stopped if I wanted to. I didn't stop until he shuddered.",
        "I kissed my way back up him. I hovered over him and kissed him. \n\n\"How was that?\" I asked.\n\n\"Better than I imagined it could be,\" he gasped through ragged breaths. \"How was it for you?\"\n\n\"Also better than I imaginged it could be,\" I said, smiling and meaning every word. \"Roll over.\" \n\nHe did. I kissed every mole on his back, his backside, and the backs of his legs. I licked the bottoms of his feet. I covered his body with mine, held his hands, and placed my cheek against his. I could have fallen asleep, just like that.\n\n\"James?\"\n\n\"Yes.\"\n\n\"You're crushing me.\"\n\nI rolled off of him, and he rolled off the bed. I looked at him, naked, for the first time. As in his jeans and his underwear, he hung a little to the right. He had little hair anywhere, including in his crotch.\n\nHe covered himself with his hands.\n\n\"I've had it in my mouth,\" I said. \"I think I can look at it.\"\n\n\"It's making me self-conscious.\"\n\n\"It shouldn't. You're beautiful.\"\n\n\"Stop saying that.\"\n\n\"You're beautiful, Luke Rydell. Beautiful beautiful beautiful.\"\n\nHe shut me up by pushing me onto my back, scrambling over me, and sitting back on my hip bones. His face turned serious.\n\n\"How'd you know what to do?\" he asked.\n\n\"I didn't,\" I answered. \"I just did what I wanted to do.\" \n\nMy answer was only partially true. I had also watched and re-watched (and, to be truthful, re-watched and re-watched and re-watched) a Hancock video involving a gymnast named Bron. Bron claimed both to be straight and to be unable to \"go\" from oral sex. It took Mike Hancock a long time, but he was able to prove Bron's claim wrong. As I watched and re-watched, I wanted to be Mike way more than I wanted to be Bron. And, I had seen the video so many times, I thought I could initiate every move Mike had made. \n\nLuke reminded me of Bron. Both were short (Bron was only 5'7\") but big (I could not find details on how large Bron was, but he was definitely disproportionately large) and virtually hairless.\n\n\"Well, I don't have nothing to compare it to, but you seemed to know what you were doing.\"\n\n\"It's easier than it seems.\"\n\n\"I hope I'm good at it.\"\n\n\"You will be. . . . You're beautiful, by the way, sitting there like that, all wide eyed and innocent.\"\n\n\"I told you to stop saying that.\"\n\n\"I know, but I can't.\"\n\n\"I don't feel very innocent. And I'm about to feel even less so,\" he said, lowering his head to my chest and licking my left nipple. He didn't know it, but there was a direct line from my nipples to my groin. I twitched when he started gently sucking.\n\nHe clumsily kissed and licked his way through my chest hair and down the trail that led to my pubic hair. I spread my legs and pulled them up, bent at the knees. He pulled me up with his hand and paused. \n\n\"You dont' have to, Luke.\"\n\n\"I want to. I'm just not sure how.\"\n\n\"I'll enjoy it no matter what.\"\n\nHe tentatively licked my glans. I shook with joy. \n\nHe looked up at me and smiled that smile that made me smile. I cautioned him. \"I'm going to apologize in advance. It usually takes me a long time.\" In that way, I was like Bron, who took forever in that video to \"go.\" Whether with Jess or on my own, my orgasms built very slowly, and -- even when they were right there -- sometimes struggled to crash through. It was a benefit at times (e.g., when I was with Jess and bringing her home first) and a detriment at others (e.g., when I was on my own and wanted a quick release).\n\n\"I'm pretty sure I have as much time as you need,\" he said. \"As you know, I've got nowhere to go,\" he added, chuckling to himself.\n\nI felt the warmth of his mouth around me. He stayed still, like he was dipping his toe in the water and deciding whether to dive in.\n\nHe dove. His mouth slid down. I cringed with restraint. It was all I could do not to put my hand on the back of his head and force him all the way down.\n\nI lasted too long. I could tell when his jaw was tiring. I added my hand and moved it in rhythm with his mouth, trying to speed my orgasm along. Ultimately, he pulled off, taking a deep breath and working his jaw back and forth.\n\nI kept going. As Luke watched, I reached into the nightstand and pulled out the fleshlight I had ordered about six months after Jess died. I spit in it and then slid it down over me. As I worked it, Luke placed his hand over mine. We worked it together.\n\nWhen I finally warned him I was close, he pulled the fleshlight off and finished me with his hand. He kept at it long after I had finished on my chest and stomach.\n\nWhen I opened my eyes, he was staring at me.\n\n\"That was hot,\" he said. \"Watching you finish like that. I've never seen that before.\"\n\n\"Come here.\"\n\n\"In that?\" he asked, a little incredulous.\n\n\"Yes,\" I said, grabbing him under the arms and pulling him down on top of me, smearing my fluid between us. I kissed the look of surprise off his face and kept kissing him until I could feel he was ready again. \n\n\"Straddle me,\" I insisted. He did, moving his knees under my arms. I took him in my mouth again. I used my hands on his hips to move him in rhythm with me until he did it on his own. I added my hand to him, as I had to myself, and let him control the speed. He held onto the headboard and used it for leverage.\n\nLuke gasped as he finished and slumped over me. I again kept at him until he shuddered. He sat back on my chest and looked down at me.\n\n\"Wow,\" he said.\n\n\"Yeah . . . . Wow,\" I answered.\n\n\"I had no idea what I was missing.\"\n\n\"Sex is awesome. It shouldn't be so taboo.\"\n\n\"Does my, you know, taste bad?\"\n\n\"You mean your cum?\"\n\n\"Yes.\"\n\n\"Say it.\"\n\n\"I can't.\"\n\n\"Please.\"\n\n\"Okay. Cum. Does my cum taste bad?\"\n\n\"No. It's a little strong, but the thrill of knowing what I'm doing for and to you is stronger. I like it.\"\n\nWe moved to the shower. I washed him with my bare hands, kissing him all over as I did. There was not a cranny or nook on his body that my fingers and hands did not explore.\n\nWhen I was finished, he returned the favor. I had to kneel so he could wash my hair, my ears, my face, and my neck. He seemed nervous as he washed my crack and then my crotch.\n\nWhen we were clean, I wrapped my arms round him and held him under the water. We slowly rocked back and forth, dancing to whatever was on Pandora, slippery and aroused, but happy.\n\nI pulled back, looked down, adjusted my height, and took us both in my right hand hand. Forehead to forehead, we watched my hand move back and forth.\n\n\"Stop moving your hand,\" he whispered. When I did, he started working his hips back and forth. I did the same, sliding in and out of my hand and along the top of him.\n\n\"We don't seem normal,\" he said.\n\n\"How so?\" I asked, wondering if he was experiencing pangs of guilt at being with me.\n\n\"They say normal is about six. We both seem bigger than that.\"\n\nWhew, I thought to myself before asking \"Haven't you ever measured?\"\n\n\"No. Have you?\"\n\n\"Of course. Every man has. Except you, apparently.\"\n\n\"How big is it?\"\n\n\"Just over 8. But, I'm a big man. It'd be weird and look weirder if it wasn't big, too. You, on the other hand . . . \" I stopped and looked down, holding only him in my hand. \"You're too big for your body.\"\n\n\"I know. I always have been. Luckily. It gets me respect in the barracks.\"\n\n\"I bet.\"\n\n\"They call me 'Donger.' That's the other name. The one I wouldn't tell you. They say it's from an old movie. There was a Chinese guy named 'Dong' or 'Donger.'\"\n\n\"Sixteen Candles.\"\n\n\"That's the one. Every once in awhile, they joke 'We need to get Luke laid. The Donger needs food.'\"\n\n\"I'm not going to call you 'Dong' or 'Donger.'\"\n\n\"Good. I like Guppy a lot better.\"\n\nWe kissed again. While we did, I reached back down and stroked us together.\n\n\"That feels really good,\" he said.\n\nHe was right. It did.\n\n\"I'm getting close again,\" he said.\n\nI kept going. I could feel Luke's orgasm move through his shaft. After he grunted and finished against my abdomen, he urged me to keep going and to finish, too. We kissed and kissed as I continued to work myself. We were running out of hot water by the time I finished, my back against the marble tile as Luke watched, rapt.\n\nWe rinsed the evidence away and exited the shower. I dried Luke, and then he dried me. As he dried my lower legs and feet, he took my soft penis in his mouth. As I started to harden, he maneuvered me against the vanity and started going at me with vigor. When he added his hand to the shaft, I added my hand to the back of his head and used it to control the speed. \n\nThis time, he lasted longer than I did. When he started to slurp, it took me over the edge. \"I'm coming,\" I warned. He pulled off, and I sprayed over his right shoulder onto the tile floor.\n\n\"Sorry,\" he said. \"I chickened out at the last minute.\"\n\n\"Nothing to be sorry for, Luke. That was incredible.\"\n\n\"I should have finished the job.\"\n\n\"You did. No complaints here. Seriously.\"\n\nWe were hungry. We slid into shorts and headed to the kitchen. We kissed over and over as I made spaghetti, and we kissed over and over as we ate it. We couldn't stop kissing each other.\n\nWe left the mess and went back to bed for dessert. We revisited the afternoon. We were side by side, but at opposite ends. I took him in my mouth. He took me in his. We were each moving our hips, sliding in and out of each other's mouths. Every time I thought \"it can't get better than this,\" it did.\n\nAt 2 a.m., we found ourselves in the pool, swimming some of the mess we had made off of us. To my astonishment, Luke started singing \"You are my sunshine, my only sunshine, you make me happy, when skies are grey . . . .\" He wouldn't stop, so I buried my tongue in his mouth. As we kissed, he kept humming. If my neighbors had tried to determine what was going on, they'd have seen Luke and me, nude, kissing, and dancing in the moonlight slowly to Elizabeth Mitchell's simple song. As we did, the cicadas serenaded us. From the left, they would sing until it reached a din. When they were finished, the same would happen from the right. Back and forth they whirred, one group answering the other, the two of us in the middle.\n\nLong after Luke stopped humming, we remained the same. My arms were around him, and his arms were around me. My body was pressed to his, and his was pressed to mine. We were slowly shifting back and forth, trying to make everything last longer than we could.\n\nFor the first time since I could remember, I felt free. All I had been taught washed away, leaving only what I felt and wanted. And all I felt and wanted was right in front of me in the form of Luke David Rydell, Private First Class.\n\nWe danced to the absence of music. We danced to the absence of strictures. \n\nWhether we could or should, neither of us let go. Everything seemed too fragile, like one false move might shatter everything.\n\n\"What are you thinking?\" he asked me.\n\n\"Me? I'm thinking about how awesome this is and how I lucky I am. I'm so happy.\"\n\n\"Me, too,\" he answered. \"I can't believe this is happening.\"\n\n\"It's like a movie.\"\n\n\"It's like a song.\"\n\n\"Remember yesterday, when we were under water?\" I asked.\n\n\"Of course.\"\n\n\"I wanted to kiss you more than I have ever wanted anything.\"\n\n\"I wanted you to kiss me more than you wanted to kiss me,\" Luke answered, smiling at my expression of want and then disappearing into the water. I went under after him. When I caught him, he pulled me into the deepest kiss he could. We kissed until we were at risk of drowning, stopping only to surface and gulp air.\n\nWe slept little that night. By the time the sun came up on the 21st, I had explored every inch of Luke's body with my tongue. I had learned what made him giggle and what made him writhe. I also learned that, despite his isolated upbringing, he was deeply trusting, willing to make himself as vulnerable to me as possible. \n\nAs the morning wore on, we were in the shower again, having delayed for as long as we could the departure for the airport. Luke was again in front of me, and I was watching myself slide in and out of his full lips. I didn't think I could come again, but then I felt the hint of a surge and concentrated until it was sweeping over me. I warned Luke, but he kept going, letting me finish in his mouth for the first time. I doubled over as I did, exhausted and spent. Luke swallowed and let me go soft in his mouth.\n\n\"Was that okay?\" I asked.\n\n\"Yes,\" he answered. \"I don't know what I was afraid of. You taste fine.\"\n\nWhen Luke stood, I kissed him. I could taste myself on his tongue.\n\n\"Hey, Guppy,\" I finally said. \"I want you to know something. I want this to be a beginning, not and ending.\"\n\nI thought I saw the suggestion of tears in his eyes. \"Me, too,\" he answered.\n\n\"So, we can keep in touch while you're active?\"\n\n\"Yes, so long as I'm not deployed overseas. Overseas, we don't have phones or any other way to keep in touch, other than old school pen and paper.\"\n\n\"Then don't get deployed.\"\n\nHe smiled at me. \"If it was up to me, I wouldn't go back.\"\n\n\"Come on,\" I answered. \"You're a soldier. A great soldier. Go back. Do what you do well.\"\n\n\"I don't want to leave you,\" he confessed.\n\n\"I don't want you to leave me,\" I confessed back. \"But, you have to. We'll make it work. It'll be easy,\" I lied.\n\n\"It won't,\" he answered, wisely.\n\n\"I know. But, we'll make it seem easy.\"\n\nHis face seemed uncertain. I'm sure mine did, too. So, I resolved the uncertainty by repeating \"we'll make it seem easy\" and lowering my mouth to his and kissing him as deeply and as passionately as I could. I can't speak for him, but the kiss washed away all my uncertainty and fortified my resolve. It had taken me forever to find Luke. There was no way I was going to let him go.\n\nI told him. \"I waited a long time for you, Guppy,\" I said. \"I can wait a while more.\"\n\nHe met my admission with an E5 grin. It was the grin that made me grin. Before we stopped ourselves, we were both laughing. In retrospect, I think we laughed to avoid crying.\n\nAs we dried off, my avoidance ebbed, and I started to cry. Not a sobbing kind of cry, but a soft cry of slow, steady tears. I was surprised. I had thought I was all cried out after Jess's funeral. \n\n\"Why are you crying?\" Luke asked.\n\n\"I think I'm crying out of happiness.\"\n\n\"I know. I feel the same way. I want to cry, but not out of sadness. Out of \"oh my God happiness'.\"\n\nI held him against me, his head under my chin. Before I let go, I pressed my lips to the front of his head and tried to pour as much affection as I could through my lips into him.\n\nWe dressed in silence. As we headed to the garage, I stopped Luke, spun him around, and pinned him to the car door with a kiss. \n\n\"I think we need to go,\" he huskily whispered.\n\n\"I need this more,\" I said, pulling his shorts down, lowering his briefs, and taking him one more time in my mouth. I used my hands to move his hips in rhythm with my mouth.\n\n\"Oh my God, Jimmy,\" he called out, filling my mouth yet again. I swallowed and went down as far I could. I loved the feeling of him in my mouth, sated and spent. I loved more that he had called me Jimmy, only the second person for whom the word seemed to fit in their mouth.\n\nWe drove to the airport in silence. About halfway there, he took my hand in his.\n\n\"This right here,\" he said. \"This is why Mad Max: Fury Road is my favorite movie. It took all the courage I had to hold out my hand to you. I was so happy and relieved when you took it.\"\n\nI looked at him and smiled. He winked at me, and I winked back. I almost blurted \"I love you,\" but I held myself back. I'm not sure why.\n\nI stopped at the curb, helped him with his rucksacks, and waited for him as he checked them. I then held him for as long as I could, squeezing him as tight as I could. I didn't want to let him go.\n\nI released myself. I kissed his temple and whispered \"I love you, Guppy\" in his ear. I wasn't sure he heard me, but I didn't care. I was thrilled to have said it.\n\n\"I have to go,\" he conceded.\n\n\"I know,\" I answered. \"Be safe,\" I added, way more vulnerably than I intended.\n\n\"You, too.\"\n\nI watched him walk toward the door. Turn around, I thought to myself. Please turn around.\n\nHe did. Just before he entered the terminal, he stopped, turned around, grinned his E5 grin, and raised his hand. I raised mine back, also grinning. \n\nHe mouthed \"Bye\" and I mouthed \"Bye\" back. He disappeared through the door, and I turned, walked to the driver's side, and climbed into my car. I was checking my side mirror to pull back out when I heard a knock on my passenger's side window. Assuming it was the parking police, I barked \"I'm going\" as I turned to see Luke, squatting and smiling through the glass.\n\n\"I love you, too, Jimmy,\" he mouthed, silently through the glass. \n\nI was too stunned to move. He put his hand to the glass, leaving a print. I started to reach for his hand, but he turned and was gone in one swift move. He made his way through the crowd and into the terminal. I had no choice but to leave.\n\nI grinned all the way home. It was a huge grin. It was a grin I'd have noticed sitting at a an O'Hare gate. \n\nWhen I got home, I went through my room and started a bath. I wanted to relax and soak the prior days in. \n\nAs I turned from the tub, I saw a message in soap on my bathroom mirror. It read \"Please wait for me.\" Beneath it, I saw Luke's dog tags piled on the vanity between the two sinks. I knew he hadn't forgotten them. He'd left them for me. I picked them up and draped them around my neck. I pressed them to my chest.\n\nGrinning as widely as I ever had, I walked to my phone, which I had left on the charger. I knew Luke was in the air and would not get my text until he landed. Still, I needed to answer his message. I stole it and texted \"I feel like I waited for a long time for you already. I'm happy to wait longer.\""
    ],
    "authorname": "DavidPatrick",
    "tags": [
        "inexperienced",
        "falling in love",
        "first time gay",
        "first time",
        "love",
        "love story"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/please-wait-for-me"
}