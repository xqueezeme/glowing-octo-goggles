{
    "title": "The Chair Ch. 07",
    "pages": [
        "Her previous encounter with The Chair had taken such a physical toll on her, they decided to wait several days before using it again. This also gave him a chance to make a few alterations and to complete a few features that had not been finished in time for the trial run. \n\nThe day had finally arrived for test run number 2. This time he had the video camera already in place before she arrived. She arrived looking as beautiful as ever. This time wearing a simple white blouse and a pair of black slacks. It really didn't matter what she wore to these trial runs, as she always winds up naked. As she walked in and looked at The Chair, she didn't notice any changes. He assured her that there were several. \n\nThis time he helped her undress before she climbed into the chair. Then he proceeded with the ritual of fastening the cuffs tightly around her extremities. After attaching the nipple cups, he started the video camera, and he took a seat at the computer. \n\nWith the first keystroke at the keyboard, The Chair began to recline. Simultaneously, the leg supports straightened. Once The Chair was completely flat, her legs began to separate at the same time that her arms were drawn straight out from her sides. She was now tightly bound spread-eagle to The Chair. As she heard the faint whir of a motor begin, she assumed it was going to be one of the penetration units moving into position. It didn't take long for her to realize that her assumption was wrong as The Chair began to tilt backward, lowering her head while simultaneously raising her feet. When The Chair stopped, she couldn't discern her true orientation. As he had put the program into the computer, he knew that she was tilted down exactly 70 degrees. \n\nAfter a short pause allowing her to get accustomed to the position, she heard another motor start. This time her previous assumption would have been correct. The primary penetration unit began slowly moving into position between her legs. The attached device was similar to the one she had experienced during the first trial. A large gel filled vibrator modified for self-lubrication and simulated ejaculation. A difference of this unit was that it had a series of round bumps that spiraled around its circumference just inside its outer \"skin.\" At the appropriate time, the computer would start the bumps rotating inside the vibrator. Of course from her present vantage point, she could not see the unit, and as such she would have no idea what to expect. \n\nAs the phallic unit approached her pussy, it began to spray lubricant to ease its entry into her. This time the vibrator plunged itself in to a depth of 7 inches before coming to rest. The computer then started the vibrator at a minimal setting. The vibrator then began slowly thrusting in and out of her very eager pussy. \n\nSuddenly she felt slightly dizzy. At first she assumed it was from being in the inverted position for a while, but she soon realized that The Chair had started to slowly spin. She was slowly spinning about a vertical axis through the center of the base, that is her head always remained below her feet but her whole body was rotating around the base of The Chair. \n\nAs The Chair rotated faster and faster, the vibrator increased its intensity, and the thrusting unit increased its rate of thrust. The nipple cups increased their sucking intensity at the same time that the bumps in the vibrator began to spiral around. This triggered the first in a series of orgasms that she would be experiencing during this trial. The thrusting, vibrating, and spiraling decreased as the chair slowed to a milder spinning rate. The nipple cups did not decrease in intensity, but instead began to alternate between the left and right nipples. \n\nThe alternating mechanical sucking on her nipples quickly brought her back to a heightened state of arousal. Almost simultaneously with her arousal, the vibrating, spiraling and thrusting increased their tempo again. Soon she came again, just as intensely as the first time. Again the tempo of the various stimulations decreased. As she became aroused again, the tempo increased again, and she came again (for the third time). \n\nAs the tempo decreased, The Chair ceased spinning and came to rest in its original orientation with its victim still inverted. As her arousal began to climb, the thrusting unit sped up again. Just after she had her fourth orgasm, the thrusting unit began to spray a warm thick stream of its \"cum\" deep into her pussy. The vibrator continued thrusting as it filled her pussy with its \"cum.\" As the vibrator plunged into her now filled pussy, the \"cum\" began to overflow and run down her body. (As she was still inverted, it might be more appropriate to say it ran up her body.) The thick gooey liquid seeped through her red pubic hair, down her flat stomach, between her breasts, and down the side of her neck. \n\nThe thrusting unit then stopped all forms of stimulation as it withdrew from her pussy and returned to its home under the leg supports. The Chair then returned to the horizontal position before slowly bringing her arms and legs back together. After pausing for a while in the flat \"table\" position, the back raised and the leg supports bent at the knees, returning to the original chair shape. He then approached her and unfastened the cuffs securing her arms and wrists. As her hands were freed, she grabbed him, pulled him to her, and gave him a hard open-mouth kiss. This experience with The Chair had had the same effect on her as the previous trial. She was now practically insatiable. He broke away from her long enough to unfasten the cuffs on her legs. As she was freed she jumped on him, knocking him to the floor. She then literally tore his clothes off and began to ravage his body. \n\nShe first took his stiff cock deep into her mouth. As she worked her way up and down his cock with her talented mouth she would also occasionally drag her fingernails over his balls. When she needed a break, she would continue stroking his dick until she was ready to resume the blow job. When her hands weren't occupied stroking his cock or his balls, she would be flicking, twisting, or pinching his nipples. She had learned long ago in the club how much he enjoyed having his nipples played with. It was quite evident now as when she would pinch his nipples, his dick would twitch in her warm moist mouth. \n\nShe could sense that he was nearing his climax. As much as she enjoys swallowing his cum, this time she needed him to cum inside her. So she removed her mouth from his cock and licked her way up his body until she could lick, suck, and bite his already tormented nipples. She positioned her tight hot pussy over his erect cock and in one swift motion, impaled herself on his manhood. As she bounced on his stiff dick, he reached down between them and played with her engorged clit. It was only about 30 seconds before they both came together. As they came, they held each other tightly. They continued to hold each other like this until they both had the energy to move. \n\nThey showered together to remove the traces of their lovemaking and of her experience with The Chair. After drying each others bodies, they got dressed and then sat together to discuss the afternoon's activities. \n\nAs they discussed her experiences in The Chair, he mentioned how it had twice had the pleasantly unexpected effect of turning her into an insatiable sexual animal. They wondered if this was a reaction unique to her, or if others would react the same. They decided they should conduct some research with another female subject. They decided to call Lisa and invite her to try out The Chair. Lisa you will recall is the clerk from the adult novelty story that had demonstrated a set of nipple cups when she joined them in the dressing room of the store several weeks ago. [See Chapter 5] \n\nShe picked up the phone and called Lisa. She didn't have to look up her number as they had programmed it into their speed dial shortly after they returned from the store. Lisa remembered them immediately. As the redhead told her that The Chair was complete, Lisa jumped at the chance to come over and try it out. She did however ask if she could bring her friend, the other clerk from the store, with her. The redhead told her that would be great. She then gave Lisa directions, hung up, and then she told him that they had not 1 but 2 subjects coming over shortly. \n\nIt was barely half an hour before Lisa and her friend arrived. Lisa had foregone her Goth makeup for the occasion, opting instead for a minimal/natural look. She was wearing an off-white peasant top and a pair of navy blue slacks. She introduced her friend as Nicki. Nicki was a very attractive 5 foot 8 inch blonde with blue/green eyes, 34D breasts and a slender figure. She was dressed in a faded pair of blue jeans and a white sleeveless tank top with partial ellipses printed in several colors. \n\nAs they entered, their eyes were instantly drawn to The Chair. As they examined it, the only sexual features they could see were the numerous cuffs. They asked what else The Chair could do, but their hosts said that they would prefer to let it be a surprise. To calm any fears they might have, the redhead did tell them that she had experienced it twice and survived. After a little nervous laughter, Lisa said that she wanted to try it. \n\nThis time he had the redhead perform the ritual of securing Lisa into The Chair while he programmed some maneuvers into the computer. As the redhead fastened the cuffs on Lisa's right side, Nicki fastened those on the left. The redhead then went into the compartment in the chair to retrieve the nipple cups. Because of the piercings in Lisa's nipples, she had to use the larger cups that would suck more of the breast surrounding the areola. The redhead also pulled out a much smaller cup that she had not yet experienced but that he had told her about. This cup she placed directly on Lisa's clit. The mild stimulation that this cup was currently providing, induced Lisa's first orgasm in The Chair. \n\nNicki was now behind him as he worked at the computer. She watched as he entered various commands for The Chair. Next to the computer was a television that displayed the view from the video camera that was taping this test of The Chair. He instructed the redhead to move back as he was ready to start the program. \n\nWith a push of a single button, the leg supports raised her legs straight out in front of her and then the back reclined so she was now laying perfectly flat. Her legs were then separated at the same time her arms were drawn straight out from each side of her body. Nicki gasped aloud as she saw the primary penetration unit raise up between her friend's legs. As it approached Lisa's shaved pussy spraying lubrication, it almost resembled a venomous snake moving in for the kill. As it plunged into her pussy, Lisa moaned loudly as she had her second orgasm. Her moans got louder, indicating the pleasure she was feeling, as the unit began to thrust forcefully in and out of this \"Chair virgin.\" \n\nNicki was mesmerized watching her friend being violated by The Chair. She would continually shift her gaze between the television and real life as this gave her 2 different viewing angles. As she watched Lisa enjoying the pleasures that The Chair was providing, Nicki was getting extremely aroused. Without realizing it, she had one hand in the crotch of her jeans rubbing her own pussy through the denim while her other hand was underneath her tank top playing with her erect nipples. \n\nWhen the unit began to vibrate, Lisa had her third orgasm. After slower thrusting and vibrating for several minutes, the unit began to speed up again. As Lisa was nearing another orgasm, the unit began \"cumming\" inside her. This sent Lisa over the top as she climaxed for the fourth time, this time screaming as she came. The unit then withdrew and returned to its \"home.\" \n\nLisa's entire body was quivering as her last orgasm continued to ripple through her. The redhead moved to beside the chair and removed the cups from Lisa's breasts. Her breasts were now quite red with a white imprint where the cups had been seated and her nipples were very erect. Once she had stowed the two breast cups, she began massaging Lisa's now very sensitive breasts. As Lisa was still bound to The Chair, all she could do was moan and beg for release as the redhead continued to play with her breasts and nipples. She then began sucking Lisa's breast nearest to her while beginning to remove her own clothing. \n\nThe now naked redhead then climbed on top of the head of The Chair and positioned her pussy over Lisa's mouth, just out of reach of her tongue. As she finally relented and sank her pussy down on Lisa's tongue, it proved too much for Nicki to continue to just watch. She was now moving to the other end of The Chair, removing her clothing as she went. By the time she got between Lisa's legs, Nicki was now naked also. She got down on her knees and began to lick her friend's pussy for the first time. As Nicki licked Lisa's pussy and Lisa licked the redhead's pussy, he entered a command for the clit sucker to increase its intensity one level. Almost instantly Lisa began to cum in Nicki's mouth at the same time the redhead came in Lisa's mouth. Nicki then backed off from her friend for a minute while the redhead kissed Lisa, sharing her own cum that she had just flooded Lisa's mouth with. \n\nWhen Nicki returned, she was now wearing a strap-on dildo in a pink harness. She climbed between Lisa's legs and slowly inserted the dildo into Lisa's very wet pussy. It didn't take long before Nicki had worked the dildo all the way into Lisa. She then began thrusting as the redhead climbed on the head of The Chair again. This time she lowered her asshole onto Lisa's tongue. As Lisa's tongue began to probe the redhead's asshole, and Nicki fucked Lisa with the strap-on, the redhead leaned forward and Nicki and her began passionately kissing. After watching this very hot trio for several minutes, he turned up the intensity on Lisa's clit sucker one more level. This trigger a chain reaction of orgasms in all three girls. \n\nAs Nicki and the redhead collapsed on top of Lisa, he turned off the clit sucker and went to help get Lisa out from under the pile of naked flesh. As he approached The Chair, he helped the redhead climb down. He then began unfastening the cuffs that secured Lisa. Nicki had also backed off by the time he unfastened the last cuffs that held Lisa's ankles. As he helped Lisa get out of The Chair which was in the table position, he was suddenly pushed face down onto The Chair by Nicki and the redhead. Almost as if the girls had choreographed it, he was quickly cuffed in place face down. The redhead then moved to the computer to begin his session. \n\nHe had shown her how to run the chair program recently and she had been a quick learner. As she worked at the computer, Lisa and Nicki tore and cut his clothes off until he was completely naked and vulnerable. With the first keystroke the redhead entered, his arms and legs were stretched out spread-eagled. Her next command lowered his head and legs simultaneously, putting him into an inverted V position. With another keystroke, a panel near his hips dropped out of the way, allowing his dick and balls to dangle freely beneath him. \n\nThe redhead then pulled another sucking attachment from its compartment. This unit she positioned up over his erect cock almost as if attaching a milking machine to a cow's udder. Ever since they had forced him into The Chair he had been yelling at them to let him go, but she knew he was only putting on an act. Once she had attached the \"cock sucker,\" all of his mock protestations even stopped. At this point, Lisa and Nicki came to each side of The Chair and began to slap his bare ass cheeks. All the while saying they were punishing him for the \"terrible\" things he had submitted Lisa to. By the time they stopped, they had each given his ass 20 hard smacks and his ass was glowing a bright red. \n\nEven though his ass hurt more than he thought possible, he was still excited as his erection was continually being sucked by the machine beneath him. The sensation was similar to that when the redhead would use her muscle control to milk his cock, with a sort of rolling compression that would work its way up or down his penis. \n\nSuddenly his ass burned as someone tightly gripped each of his ass cheeks in their hands. He would learn later that is was the redhead that had grabbed his ass in much the same way that she likes to have hers grabbed. He then felt a cold sensation as a liquid was poured onto his ass. At first he thought they had taken pity on his inflamed ass, but he soon learned different. He found out that the liquid was actually a lubricant as Nicki began to rub it into his asshole. Suddenly he knew what was coming next. Although a little apprehensive, he was also excited, as exhibited by his erection growing even more in the sucking tube. Of course in the position he was in, he couldn't resist it anyway. \n\nShe was gentle as she slowly inserted the tip of the strap-on dildo into his ass. Without much coaxing, she soon sunk the entire seven-inch length into his ass. As she did, her hips and tummy caused his ass to burn more as they came in contact with his recently beaten rear. She then began to repeatedly thrust into his ass as the two other girls watched and cheered her on. He was nearing orgasm when Nicki reached beneath them and squeezed his balls in her hand. He then started to cum, shooting his cum into the tube around his dick, where the vacuum quickly sucked it away. He continued to cum for 60 seconds until he thought the pump was going to suck his insides out through his dick. Thankfully, the redhead turned the unit off just then as Nicki withdrew the dildo from his ass. \n\nThe redhead returned to the computer and returned The Chair to the table position and moved his arms to the at rest position. As she unfastened his cuffs, he saw that Lisa was laying on the sofa recovering from her experience in The Chair. As the clothes he had been wearing were now in shreds all over the floor, he went to the bedroom to get something else to cover up with. When he returned, he was pleasantly surprised to see the redhead going down on Nicki as she layed on the sofa next to Lisa. As he walked behind the sofa, enjoying the view as he went, Nicki reached back and grabbed him. She then pulled him down to her and began aggressively kissing him as the redhead continued to nibble on her pussy and clit. As she kissed him, he reached out and played with her breasts and nipples. Suddenly his fingers that were playing with her left nipple felt wet and he looked up to see Lisa sucking Nicki's one breast. Evidently she had recovered. He continued to play with Nicki's other breast and with his free hand he gently stroked her face and neck. It didn't take long, with three people attending to her, before Nicki had a powerful orgasm. As she came, she pulled his head tight against her as she sucked his tongue deep into her mouth. \n\nOnce Nicki had recovered from her orgasm, she said that she now wanted to try The Chair. So they cuffed her in place and he then started the computer program. The Chair spread her arms and legs wide and then inverted her so her head was near the floor and her feet were high in the air (the same 70 degree angle that the redhead had been in earlier today). While The Chair paused in this position to let her get accustomed to the angle, he approached and fastened a new device around her pelvis. He also attached the nipple cups to both of her ripe pink nipples. \n\nHe then returned to the computer and resumed the program. The same thrusting unit that the redhead had sampled earlier today began inching its way toward her blonde pussy. As the unit began to spray her pussy with the cool lubricant, prior to entering her, Nicki let out a subtle \"Ooooh.\" Some of the overspray began to collect and run down her body toward her head, leaving a wet trail as it went. As the large gel-filled vibrator entered her pussy, her subtle cooing changed to moaning. Once the vibrator was completely inside her, it began vibrating at a low intensity level. As she grew accustomed to this sensation, he started the nubs slowly spiraling around the surface of the vibrator. This gave Nicki her first orgasm in The Chair. ",
        "After giving her a minute or two to recover, the vibrator then began a slow methodical thrusting in and out of her pussy as the nubs continued to spiral. The nipple cups increased their intensity one level, causing Nicki to gasp. Suddenly her ass felt cold as the secondary penetration unit began spraying lubricant. The anal unit was a plain dildo 5 inches long and only 1 inch in diameter. As it nudged its way into her asshole, her moans turned into cries of pleasure. Once the anal probe was completely inside her, the unit that was strapped on her pelvis started. It had a vibrator that was position directly on her clit. At the same instant that it started vibrating, the nipple cups went to the maximum intensity, the primary thrusting unit came to a stop with its vibrator fully seated in her pussy, vibrating at maximum, and the nubs on it began rotating much faster. This multitude of stimulations triggered the most intense, pleasurable, and long-lasting orgasm that Nicki had ever experienced. Her orgasm was one long series of spasms that continued without decreasing intensity for two solid minutes. Even then it took another minute before they subsided completely. She was still experiencing these small \"aftershocks\" as The Chair returned to a horizontal orientation. Both thrusting units withdrew from her as her legs and arms were moved back to their at rest positions. \n\nAs they approached her to unfasten her cuffs, he could see perspiration glistening over her entire body. They all helped her to the bed, as her legs were too wobbly for her to walk unassisted. Lisa went in to take a shower while the others tended to Nicki. The redhead began wiping off the combination of fluids covering the blonde. As she did, Nicki thanked them for letting her experience The Chair. She went on to say that she had never felt anything like it before. As the redhead was still wiping her off, she commented that she was hornier now than when she had first seen The Chair. The redhead took that as an invitation and dove right into the blonde's pussy. This caused Nicki to exclaim, \"Oh God, yes!!\" \n\nAs the redhead continued licking the blonde's pussy and clit, Nicki looked at him and said, \"I want to suck your big dick.\" He didn't need to be asked twice, so he quickly stripped out of his clothes and climbed on top of the bed and positioned himself over her head facing the redhead. This way he could enjoy the show of the redhead going down on Nicki at the same time Nicki gave him a blowjob. As he lowered his dick to her lips she rose up to meet it. She took almost the entire length in a single stroke. She then began bobbing up and down over its slick surface. After several strokes, she removed it from her mouth and sucked his balls. As she sucked his testicles, she used her tongue as if she was trying to roll them around in her mouth. He had never felt anything like this before and it made his dick grow longer and firmer than it had been. Nicki then returned to licking and sucking his cock. \n\nThe redhead had been trying to watch the action while still pleasuring Nicki. From the expression she saw on his face, she knew he was about to cum. She wanted Nicki to cum at the same time so she redoubled her efforts and began flicking at the blonde's clit with her tongue. When she thought the time was right, she lightly nipped at the clit with her teeth. This had the desired effect and caused the blonde to start cumming. Her orgasm triggered an involuntary moan that in turn triggered his orgasm. Nicki swallowed every drop of his cum that he shot down her throat. It was as if it was some vital life fluid that she needed in order to survive. They had just disentangled themselves from each other and gotten somewhat presentable (although they were all naked) when Lisa emerged from her shower. As she joined them on the bed she asked, \"Did I miss anything?\" The others looked at each other and laughed. \n\nAs the four of them now lounged together on the bed, they discussed how their experiences with The Chair had driven them to a much higher sexual level. All three females said they had each had the same feeling following their experience with The Chair. Although they each had very satisfying orgasms in The Chair, they each felt an almost uncontrollable need for real sex with a person afterward. They joked that there might be government grant money available to study this phenomenon. "
    ],
    "authorname": "Rickd_1960",
    "tags": [
        "redhead continued",
        "began spray",
        "table position",
        "intensity level",
        "unfastened cuffs",
        "returned computer",
        "leg supports",
        "time arms",
        "lisa nicki",
        "orgasm nicki"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/the-chair-ch-07"
}