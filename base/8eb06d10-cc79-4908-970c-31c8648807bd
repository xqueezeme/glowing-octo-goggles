{
    "title": "A New Way of Seeing Things Ch. 19",
    "pages": [
        "(This story takes place in a fictional world with fictional people. Any similarities to people or things in the world we actually live in is coincidental.)\n\n*****\n\nA week of vacation for Walt meant an especially busy week for the other employees of Nelson Plumbing. Tim, Cliff, and the apprentices did their best to handle the increased workload, both trucks returning each day with the setting sun or beyond.\n\nGwen pitched in where she could, doing her best to keep things going both in the business and in the home, delivering needed supplies to jobsites for the overworked crews while making sure her husband had something warm to eat and nothing more to do when he pulled into the yard each evening. \n\nThe early mornings and late nights all but ruled out any physical intimacy as Tim would stumble in, eat, shower, and fall asleep, only to begin the cycle again early the next morning. Gwen resisted the urge to bring her toys out from the closet, feeling that tending to her own pleasure when her husband was working so hard was a kind of betrayal. \n\nThe time alone gave her plenty of time to think, in particular about Alison's questioning of her parents' love life. Her daughter's belief \"that if you don't give guys...that, they'll find it somewhere,\" awoke old assumptions and suspicions. Gwen's mother had instilled her own version of that message as she was growing up, that men who would not demand the sins of the flesh were the ones worth marrying. In truth, Irene Curran had hinted more than once that all men were susceptible to the availability of easy women, and that all that could be expected of a husband was to be discrete in his affairs. In fact, provided it didn't become an embarrassment in social circles or produce unwanted challengers to the family fortunes, the infidelity might even be a blessing in disguise to a married woman as she would no longer have to perform those ghastly duties for anything other than producing legitimate heirs. Still, her mother took delight when the husbands of her circle of friends were caught in compromising positions. There was a special level of righteous superiority reserved for the few wives who fell into the same trap. \n\nGwen would not be surprised if her own father was that type of husband, and that her mother tolerated, if not approved, of the arrangement. He was a good father, perhaps a bit distant and formal, but he was a man, and she had never seen her parents share anything more than a polite kiss. However, he never seemed to be without an attractive, young, sometimes single, sometimes not, secretary, even having her travel to conferences with him on occasion \"so they could get some work done\", just as most of the other partners in the firm did...Adam was the only partner who had an assistant older than the man she worked for. \n\nTim's not like that, the Lady would always argue defiantly. Tim has never given you any reason to believe he might be doing that on the side, even if your sex life has not been...perverted. There's no need to stoop to being a slut to keep a man who has been true to you. But if he's not getting what he wants, the Slut would counter, how long before he does wander? \n\nWhat more could he possibly want? She had loosened up quite a bit these past couple of months, was more free with what she allowed him to see, their lovemaking had been more frequent ...she was even using her mouth on him, for heaven's sake! The knowledge that she had done these things for her own deviant needs, and not necessarily his, haunted her. Even her boudoir shoot, done as a gift for her husband, had devolved into her flaunting her naked body for a strange man. \n\nYou could ask what he wants, the Slut suggested. The Lady harrumphed at the suggested invasion of privacy and the idea she might find out more than she wanted to know, but evenings spent waiting for Tim to come home wore her down, her refusal to combat the stress with sexual relief only making matters seem more urgent. The dreams returned several nights, awaking her each time just before Liz's hand caressed her face. It became not an issue of whether to ask, but how.\n\nThe work week ended mercifully with Tim making it home at a decent hour on Friday, early enough for a regular meal and a swim before bedtime. Gwen looked forward to spending the weekend with her husband, content to let him sleep tonight and satisfy her urges in the morning. Cliff had the emergency call duty for the entire weekend, and there was nothing to interrupt the couple's alone time. She hoped she would be able to find the right moment to ask him what he really wanted from their love live and quell her fears.\n\n\"Oh, hey, meant to tell you,\" Tim sleepily called over his shoulder as they lay in bed that night. \"Me and Ed are taking his boat and going fishing tomorrow. I know I'm behind on stuff around here, but I really need to get out on the water for a bit after the week we had. You don't mind, do you?\"\n\nGwen did her best to hide her disappointment. \"No, no, of course. You should get out for a while\u2014it'll do you good. There's nothing around here that can't wait.\" A vision of he and Ed, out on the boat with a pair of buxom young women aboard, her husband using a different kind of pole to fish with, began to form.\n\n\"Thanks honey, I appreciate it. I really just need a little time on the lake. I'll get stuff done when I come back, I promise.\" Tim rolled back enough to find her lips. \"Love you. Sleep tight.\" \n\n\"You too.\" Gwen lay there, staring at the ceiling long after the steady breathing coming from the pillow next to her told her he was asleep. They hadn't made love since last weekend. Was fishing more important than that? Or did he plan on rising early enough to do both? Was sex just not important to him anymore? Or was it just sex with her?\" She knew she was being irrational, such a rare occurrence for her, and the lack of experience with it made it difficult to stop. The thoughts chased each other around her head until she fell into a fitful sleep. \n\nThe dream returned that night. It was the same familiar setting, only she was surprised to find Tim standing there as her keeper, dressed in the standard-issue Nelson Plumbing workshirt and pants, the riding crop in his hands seeming so absurd\u2014he didn't ride!\u2014while Liz climbed the low set of stairs. She reached to caress her face, finally making contact.\n\n\"Here you go,\" Tim said as if loaning out a tool, \"maybe you can teach her a few new tricks. Just don't break anything, alright?\" \n\n\"No permanent damage,\" Liz agreed with a confident smile, examining the chained woman who was doing her best to avoid eye contact. The hand left Gwen's face and reached between her spread legs...\n\nShe awoke with a start. \"What the hell?\" she thought groggily, finding the situation serious enough to swear to herself. She was certainly not her husband's property to give away, and most certainly not to another woman! Anger and arousal swirled. \n\nThe effects of the dream only worsened a few moments later when Tim awoke at first light and hurriedly dressed. Wearing nothing more than a t-shirt, Gwen offered to make him coffee for the road, but he declined the beverage while missing the more obvious invitation. Tim risked a quick squeeze of her bare bottom as he kissed her goodbye, and she stood on the deck, oblivious to the cool dawn air on her bare lower half, while he loaded his truck with poles and a tackle box. With a wave, he was down the driveway and gone. \n\nGwen returned to the kitchen and started some coffee while she tried to make sense of the situation. She had practically thrown herself at him; he had refused. Maybe he didn't find sex as important as she had assumed? Or was she boring and he was saving his energy for better things somewhere else that morning? She cursed Alison for putting the idea in her head, then quickly cursed herself. No, it's not her fault. It's always been there. You just chose to ignore it. \n\nShe sat in the kitchen for some time drinking coffee, thinking, not caring who might walk in on her in her state of undress. Practical ideas\u2014barn chores, laundry, a ride, fought with more irrational thoughts. She should go down to the landing and see if Tim's truck was there. That would just prove he's on Ed's boat, she knew. No telling who else was out there with them. And how would she explain it to him if she was sitting there, waiting for him, when they came back? Hi honey, just wanted to make sure you didn't find someone younger and prettier and willing to satisfy your every need. What would you like for dinner? Her irrationality seemed to mock her inability to control it. \n\nA masturbatory session was considered; if he didn't want to take care of her, then she would take care of herself; but the notion that his lack of action somehow required revenge did not sit well with her. In the end, she passed the time by tending to the barn while the horses nickered nervously at the obvious smell of stress coming from the human in their midst. A ride up the ridge followed, and laundry followed that, her time spent thinking only strengthening her resolve to be everything Tim might desire in the bedroom and win him back from the naked women on the boat. What exactly 'everything' might be, and whether it would be enough, worried her.\n\nGwen did her best to put on her calm and composed face when she heard Tim's truck coming up the driveway well after lunch. His scowl and stiff-legged walk as he climbed the deck stairs told her he had not had the relaxing morning he had hoped for. A strong smell of gasoline swept over her instead the hoped-for smells of a day spent around bait and fish.\n\n\"So, we get halfway across the lake when the outboard quits. We spent two hours trying to fix it\u2014Goddamn Ed doesn't keep a real toolbox on board\u2014and when we finally get it going, it's painfully slow. We had canoes passing us, for Christ's sake. And I couldn't even troll while we were on the way back, because I had to keep the fuel line from falling off while Goddamn Ed drove. Then we get back and I had to help take the Goddamn outboard off of Goddamn Ed's boat and put it in the back of his truck so he can get it looked at. Sure as hell I'm gonna be busy when he needs to put it back on.\" Tim paused, out of breath and out of story. \"Hi. How was your morning?\"\n\nGwen smiled, amused at the outburst she knew to be her husband at his angriest, and horrified that she could ever have suspected him of cheating. \n\n\"I'd kiss you, but I'm pretty flammable at the moment,\" he called out on his way to the bedroom before she could answer. \"I should have just stripped on the deck in case my shirt catches fire.\" \n\n\"Are you hungry?\" She called out as she followed him down the hall, collecting his shirt while he stood and attempted to remove his boots. \n\n\"Very. But I want to get the smell of unmaintained outboard off of me before I eat.\" Tim managed to extricate himself from jeans, underwear and socks without touching furniture or bedding before making his way to the bathroom, Gwen watching his muscular rear with appreciation, She collected his clothes, doing her best to keep them at arm's length on her way to the washing machine, then made her way to the kitchen to prepare him something nice. With a smile, she reached into the refrigerator and pulled out a beer, carrying it back to him.\n\nShe could see his foggy outline behind the shower glass, scrubbing as the various nozzles sprayed him down from all angles. \"I brought you a beer. I thought you might like one.\"\n\nThe form behind the glass stopped. \"You have no idea how much I love you. Thanks\u2014just leave it on the counter and I'll grab it when I get out.\"\n\nGwen smiled and opened the door. \"That's alright. I can bring it to you.\" Stray droplets of splashing water began to collect on her shirt and jeans. \n\nTim turned to her, eyes wide with surprise, and tentatively reached out for the can. \"Uhh, thanks.\"\n\n\"Want me to wash your back for you?\" \n\n\"Uhh, yeah, sure, that would be great, but your clothes are getting all wet.\"\n\n\"That's true. Hold on a second.\" She stepped back and closed the door while he was left standing there, shocked look on his face and open beer in his hand. Gwen opened the door again a moment later, clothes no longer an issue. \"Hand me that sponge and the soap.\" Tim sorted out the logistics, finally deciding to hand the items over one at a time while he held the can out of the shower's spray. The couple looked at each other for a moment, Tim confused, Gwen expectant. \n\n\"You have to turn around if I'm going to wash your back.\"\n\n\"Oh, yeah, of course.\" \n\nTim turned and faced the shower controls, very unsure what to do, finally deciding on sipping his beer while standing in place. This had never, never been something Gwen had ever offered before; this kind of episode with his girlfriends before her had always quickly devolved into frantic humping against the shower walls before much of anything had been washed. \n\nIt was with practiced hands that Gwen began to work soap and sponge into her husband's shoulders. This was part of the service Miss Ritter had expected from her after a day's ride and before an evening's tutelage, and the tall Nordic woman had been meticulous in teaching her how to perform it. It was a slow, languid process, decadent and erotic, gradually working down his back in soapy, sweeping circles. Tim was in heaven, the warm water and the scratch of the sponge making every nerve tingle. His buttocks received the same treatment, and Gwen was faced with her first choice. Miss Ritter had always insisted on a complete cleansing of the crevice between the two cheeks, culminating with a soapy finger vigorously rubbing the anus clean before being inserted up to the second knuckle. The finger was inserted and withdrawn five times\u2014never four, never six\u2014before moving on to the thighs and calves. Gwen had been shocked the first time it had been done to her\u2014that part of her body was not meant to have things put in it!\u2014but she found the sensation of her rosebud being touched not unpleasant, and the insertion of Miss Ritter's finger was at least not terrible. Reciprocating for Miss Ritter had taken all of her will the first time she had washed the lean blonde down there. It also prepared her for later events... \n\nBut this was her husband. Would he be upset if she touched him there? She contented herself with 2 quick swipes of her finger down his crevice, relieved that it had brought no adverse reaction, before kneeling on the wet tiles to move down his body. Tim instructively moved his legs apart ever so slightly as she began to scrub from the outside in around his upper thigh. Gwen found herself marveling at the novel view of her husband's testicles dangling heavily on the other end of the open space between his legs, using her hand to soap the skin behind them, fingers making gentle contact with wrinkled skin beyond. Reluctantly, she continued down, knees, calves and ankles all given the same attention his back had been afforded. \n\nGwen stood. \"Would you like your front done, too?\"\n\n\"That would be great!\" There was no confusion this time, and Tim turned to face his wife. Gwen was pleased to see his penis was showing its appreciation as well. \n\nShe smiled and lathered the sponge, working it into and around his neck while Tim closed his eyes in obvious pleasure. Slowly she worked her way down, not spending as much time on her husband's chest as she had on Miss Ritter's as he had less that needed washing than her boss had. His stomach was thoroughly scrubbed, and she again kneeled, his semi-erect manhood now at face level. Gwen thought to ignore it for now, to work elsewhere and save it for last so it would not appear as though she were teasing, but Miss Ritter had demanded consistency and efficiency in her shower routine just as with everything else, so his manhood had to be next. She put down the sponge and thoroughly lathered up before gently taking his length in hand and soaping. Gwen watched with fascination at how fast it grew to full length, straining towards her, seeming to quickly fill one hand while his sac was gently soaped with her other. \n\nNow would be the time to move to the bedroom and offer him relief, she thought, to do otherwise would be most unfair. But Miss Ritter had not stopped there, even after her employee's clitoris had been cleansed to the brink of orgasm, and neither could Gwen. Reluctantly, she continued on down his muscled thighs and calves, scrubbing the tops of his feet before standing. \n\n\"I'm going to go get your lunch ready,\" Gwen said as she took the empty beer can from the confused naked man in front of her. \"Relax and take your time.\" She had barely closed the door behind her and reached for a towel when the water was shut off behind her. Gwen had to step forward to let her husband out. \n\n\"I was kinda thinkin' we could do something else before lunch?\" Tim said as he reached for his own towel. Based on the erection he was waving about, Gwen had a pretty good idea what that was.\n\n\"I'm sorry if I teased you in there. It's just that I always-should I meet you in the bedroom?\"\n\nA puzzled look crossed her husband's face, but passed. \"Well, we don't NEED to go that far, but, yeah, that's fine.\" \n\nGwen was out of the bathroom first, flipping back the covers and lying back on the bed with ankles crossed and hands folded. Tim was not far behind, his still damp skin evidence he had things on his mind other than drying off. He quickly made his way to the bed and lay down beside her. She waited for him to roll to his side and perhaps kiss or even mount her, but he lay there a moment, as if thinking. \n\n\"Gwen I know this is kinda selfish, but I was uhh, wondering, well, you were doing such a good job in the shower, would you, uhh, mind finishing up that way?\" \n\nHe sounds as nervous as he did when he proposed, Gwen thought, and stifled a giggle. \"Of course,\" she said, rolling to her side. \"If there's anything you want, just ask. Anything.\" The nude woman looked at her husband with as much meaning in her eyes as she possibly convey before propping herself on one elbow and looking down to reach for his only slightly-diminished erection. Gwen gently stroked his member back to full bloom, spreading the slippery liquid beginning to bubble up from the tip down the head and shaft, occasionally petting and fondling his testicles. Gradually she tightened her grip on his length as his hips began to twitch while a hand lightly scratched her back in time to her strokes. Her mind wandered a bit as she played, imagining the cock sliding through her fingers\u2014she smiled in surprise at her choice of that word\u2014doing the same inside her, pushing deep then withdrawing. She resisted the urge to put her lips around the soft pink head and coax it into shooting onto her tongue, deciding that if her hand was what her husband had asked for, her hand is what would give him his pleasure. \n\nHis thrusting became more urgent and Gwen dispensed with gentleness, gripping hard and forcing her fist down his shaft , turning the velvety head an angry red, skin sliding against the hardness beneath in time to her efforts. She hoped she was doing it right; this was one of those things she had never gotten much practice at. \n\nA sharp intake of breath and the first jet of pearly white liquid shooting from his tip told her she had least been satisfactory. She watched it arc across the rigid muscles of his stomach to land just below where her head hovered over his chest. The following shots chased the first up his body, never quite reaching the landing spot of the one before it, before finally he was reduced to weak pulses that slid from his opening to drop wetly below. Gwen looked back at her husband when she thought he was finished, unwilling to let go until she was sure. \n\nTim smiled back contentedly back at her. \"Thank you\u2014I needed that! Let me go get cleaned up and I'll return the favor.\" ",
        "Gwen put a hand on his chest and stopped him. \"I can do it.\" She returned with the wet washcloth, using it to clean his chest and stomach before taking his softening erection in her mouth to finish the job, only releasing him when he began to stir.\n\n\"Your turn\u2014\" he announced, reaching for her. She quickly stood. \n\n\"No, I want you to have lunch first. You must be starving.\"\n\n\"I am. But I don't think a snack will ruin my appetite,\" he said with a wolfish grin. \n\n\"No, eat lunch first. You can take care of me later.\" Gwen rose and returned the cloth to the bathroom, walking through the bedroom a moment later dressed in one of her t-shirts and a pair of Tim's loose gym shorts. The idea of wearing nothing had tempted her, but one could never tell when someone might arrive unannounced. The little cover she wore would at least give her a chance to retreat and dress more appropriately for company. \n\nTim dressed and joined her in the kitchen, a little confused and worried about her refusal of his offer. Had he offended her or made her uncomfortable with his request? Had she just assumed a naked backwash was just that and nothing more? Nothing in her demeanor as she put food on the table gave any hint. \n\nA bottle of wine was produced and Tim's fears began to grow. Wine before dinner was not in Gwen's repertoire; Tim could have all the beer he wanted (although he never did), she would have one glass after her meal, preferably up by the pool. \n\nHer behavior as they are gave him more reason for concern. She didn't seem angry, just ill-at-ease with their conversation. He was finishing the last of his sandwich when she spoke. \n\n\"Tim, what I said in there, if there's anything you want, just tell me.\"\n\nThe confused man took his time chewing the last bite, trying to make sense of the statement. A joke about a new bass boat came to mind, but he decided now was not the time for that. \"Gwen, at the very real risk of sounding dense, what are you talking about?\"\n\nShe blushed and took a gulp of wine. \"You know...anything you want...stuff in there...in the bedroom.\" The last words came out in a low voice so others wouldn't hear. \n\n\"Oh. Oh. Well, I'm pretty happy in there, especially lately...what more would I want?\"\n\nGwen couldn't tell if he was teasing. \"Well, you're a guy, and I get that we've been kind of, you know, straightforward in the bedroom, and guys are supposed to like variety, and, well, I just want you to be happy.\" \n\nTim reached across the table and took her hands in his. \"Hey. Variety's nice, but you're way more important than any of that. I've got you, that's enough. If you're content with our love life, then so am I.\" \n\nShe smiled back at him. \"That's sweet, but I really want you to be happy, and maybe...maybe I'm ready for some variety, too.\"\n\nHe smiled. \"So was washing my back part of the variety?\" Gwen smiled again and looked down at the table. \"Do you have anything else you've got in mind?\"\n\n\"I want to know what you find interesting. Like, what do you think about when you masturbate?\" Gwen's eyes widened as she heard the words rush out of her mouth before she could filter them.\n\nTim leaned back, eyes wide as well, and took a sip of beer. Dangerous territory, dangerous, dangerous territory. The whole truth was out of the question. There were too many things he feared she would find distasteful and downright perverted in his most vivid and well thought-out fantasies. But as he looked at her, he knew she was not backing down from her question. Tim considered his response carefully. \"The usual gross guy things, I guess. All of them about you.\" He smiled to mark his attempt at humor.\n\n\"Yes, but what about? I promise not to get mad. I really want to know.\" \n\nTim hesitated, choosing his line of thought carefully. \"Well, things like you in certain places, or certain positions, things you don't normally do, I guess.\" \n\n\"Like what?\"\n\n\"Let's just say I like spontaneity. Things I wouldn't expect, like me walking in to the bedroom and finding you naked on the bed on your hands and knees with your bum towards me, or on your back with your legs spread. Or, or, like what you did for me in the shower today. That might be what I think about the next time I, uhh, take care of business, maybe where you finish me while we're still in the shower, or something like that. Of course,\" he added hurriedly, \"I haven't had much need to do that lately, if you know what I mean.\" \n\nThe blush on his face told Gwen her husband was more embarrassed than she had ever seen him before. The Lady screamed for her to end the line of questioning now, but the Slut's assertion that it was just getting good spurred her on. She did her best to not show him any hint of panic or displeasure. \"Well, those sound interesting. Anything else?\"\n\n\"I dunno,\" he mumbled, desperately wishing Cliff would call with an emergency he needed help on. \"Like I said, I just kinda like it when you surprise me, like when I saw how short you had cut your hair...down there...\" \n\n\"I noticed you seem to like that, and I'm glad. Was it because I cut it, or because of who cut it for me?\"\n\nHe groaned inwardly. \"Well, yeah, both, I guess.\"\n\n\"You really don't think it's perverted about someone else, especially a woman, touching my...down there? Do you ever think about things like that when you're, uh, taking care of business?\"\n\nThat had been the question he had been hoping to avoid. Gwen had clues to the truth; this day went from swamp-low to mountain top and back to the swamp. The trapped man twisted miserable in his seat. \"I don't think it's perverted, just, uh, a big turn on. I've always wondered what exactly happened between you and your old boss, and the male imagination can be a pretty powerful thing, so...and then when you told me how close Natalie was to your\u2014to your privates, well, that got me going, too. Sorry, just I couldn't help myself.\" \n\nShe could sense her husband's fear of her reaction and remembered her own fevered dreams. \"I always thought I was the perverted one for doing those things. Maybe we can be perverted together.\" Gwen smiled to show her own attempt at humor. \"I just want to make sure you're happy with me, and I want to help with that more than I could've in the past, although I'm still kind of in the dark about what guys like.\" \n\nTim took her hands again. \"You've always made me happy. You don't have to change a thing for me. But if you want to 'add more variety', then let's give it a try. Now can we not talk about what I'm thinking about? At least until I've had a few more beers.\" \n\n\"I'm sure I can't even imagine what you think about when you're drunk,\" she said with another smile. \"Maybe we should find out. But really, if you have anything you'd like to try or do, just say it. Anything, right? I promise I'll at least think about it. In the meantime, may I take you up on the offer you made before lunch?\" \n\nIt took Tim a moment to separate pre-and-post mealtime events. \"Uhh, yeah, of course,\" he finally made sense of his wife's request. \"In the bedroom?\"\n\n\"That would be\u2014no, wait.\" Gwen stood and moved to a kitchen window to look into the yard before locking the door next to it. \"Maybe in there?\" she asked nodding her head towards the living room. \n\nThe living room, in broad daylight? Was this some sort of test? \"Your wish is my command,\" he said with an easy smile as he rose from the table while his wife moved to the other room, looking about uncertainly at various pieces of furniture. He was about to take her in his arms when she appeared to make a decision and began peeling off shirt and shorts. Gwen sat in the easy chair as demurely as a naked woman could, legs together, hands folded in her lap. Taking a deep breath, she leaned back into the cushions and brought her legs up over the arms of the chair. \"Could you kiss me...down there?\" \n\nTim smiled in response and moved into position between her outstretched knees, crouching to kneel. \"No, take your clothes off first,\" she asked, adding a \"please\" as good manners dictated. \n\nHe smiled again and stripped off his shorts, Gwen pleased to see the situation was prompting another erection. Her pose was reminiscent of her trips to the gynecologist, some of the mortification she felt in those situations rising up until strong hands reached under and around her bottom to pull her sex forward onto waiting lips. This is nothing like the doctor's, she decided as warm skin touched her instead of cold steel. \n\nThe touch was fleeting however, as if Tim had been measuring the proper distance to bring her to him, and then his lips and tongue tickled the inside of her thighs, moving back and forth, occasionally grazing the lightly stubbled skin about her slit, the tongue always working its way closer to where leg met hip. Soon even that was passed, and her husband's tongue found its way into her, tickling her lips and bud. \n\nGwen was dimly aware that her hands were clutching his head, pulling him into her, grinding against him, as her pleasure grew. The Lady clucked that she was surely smothering him; the Slut laughed and said that he was a big boy, and if he found his way in, he could find his way out. \n\nHer climax hit with incredible force as Tim's tongue snaked its way into her opening, her muscles contracting in attempt to drive him even deeper. She so wanted to cry out, to give voice to the waves of intense pleasure jolting through her, but her training was strong, and all that escaped was a small grunt as she pulled on her husband with all her might. Tim's neck strained to keep his nose from smashing into and breaking against the clit that was grinding into it. \n\nThe pressure against the back of his head was released in small amounts as her orgasm waned until they gently rested in his close-cropped hair as she breathed heavily. Tim took this as the safe sign to sit up and look at his wife's face, closed eyes highlighting a very satisfied look. \n\n\"That was wonderful.\"\n\n\"Mm-hmmm. I'm glad I could help.\"\n\nGwen opened her eyes at the sound of Tim standing, a very erect penis staring at her. \"Oh, my. Are you ready to go again?\"\n\n\"Uh-huh. Sit up.\"\n\nThe gruffness in his voice made it easy to imagine this was a command and not a request. She sat, bottom on the very end of the chair where he had pulled her down to just a short time ago, and regarded the staff that was now just a foot away. Tim stepped forward to close the distance and returned the favor by putting his own hands on the back of her head and pulling her forward while his hips thrust out. She opened her mouth just in time as the cudgel forced its way between her lips. Her tongue alternated between getting out of the way of the invader and tickling it as it retreated while he slowly sawed in and out of her. His hands gripped her tightly, not so much to be uncomfortable, but in a way that left no possibility of going anywhere other than where he directed. Gwen not at all displeased with the realization that her husband was using her mouth like he would use her sex, and began to wonder if that might include him finishing there, as well.\n\nShe had her answer a few moments later. Tim removed his length from between her lips, hands preventing her from dipping forward to recapture it. \n\n\"Turn around and get on your knees. Bend over the chair.\" Gwen thrilled at the order and did her best to get in the desired position as quickly as possible, the faint aroma of her sex on the cushion tickling her nostrils as she put her elbows down and looked back over her shoulder. \n\nTim knelt behind her, spreading her legs and settling between them before firmly planting those strong hands on her hips and pulling up, angling her bottom up at him. Satisfied, he shuffled forward until the tip of his staff made contact with her lips. Tim thrust forward while pulling back on his wife and buried himself in her. \n\nGwen allowed her body to sink between her arms and lay on the seat of the chair while her husband began a slow, easy pace. His hands would occasionally roam across her back and work their way between her and the chair to palm her breasts, but would always return to her hips when he felt the need for more vigorous thrusting. \n\nI can only imagine what this would look like if someone came in now, Gwen thought as Tim took her from behind. How would we explain? What would we do? Strangely, the idea of getting caught was not so awful...\n\nThe hands strayed less and less, and Gwen knew he was close. She could hear his thighs slapping against her, fingers tightening against her bone and muscle, breathing quickening. With Gwen pinned beneath him, Tim gave one last thrust to push himself as deeply as possible. She could imagine pulse after pulse of his seed filling her.\n\nTim rocked back as soon as his orgasm subsided, his cock sliding wetly out of the pussy that even now was angled up in offering to him. \"Was that alright?\" he asked nervously, worried that his rough handling of the naked woman still crouching before him might have been taking things too far.\n\n\"That was wonderful,\" she replied as she turned to get up, kissing him as she did so. \"Thank you for taking care of me. I'm going to get cleaned up, and you should think about getting dressed in case someone decides to come over.\" Tim took her advice, but found that her version of decency as she worked about the house that afternoon was nothing more than a t-shirt and a pair of bikini panties he had never seen before. Her attire for their evening swim was nothing at all."
    ],
    "authorname": "BusyBadger",
    "tags": [
        "shower",
        "handjob",
        "oral",
        "doggystyle"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/a-new-way-of-seeing-things-ch-19"
}