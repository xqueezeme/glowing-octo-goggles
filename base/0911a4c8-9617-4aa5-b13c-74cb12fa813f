{
    "title": "Cat Fight Ch. 14: Cousins",
    "pages": [
        "tinton - 2 1/2 seconds\n\nspecton - 2 1/2 minutes\n\nToton - 2 1/2 hours\n\nminton - 2 1/2 days\n\ndaycon - 2 1/2 weeks\n\nquant - 2 1/2 years\n\ngalant - 2 1/2 centuries\n\nMetson - 2 1/2 inches\n\nmaclon - 2 1/2 feet\n\nheckson - 2 1/2 miles\n\ntetson - 2 1/2 acres\n\n*\n\nBill Axor (AKA Ambrose) - Lion clan\n\nKing Tomco Traxor - Bill's dead father, Lion clan\n\nKing Tobias Traxor - Bill's dead brother, Lion clan\n\nQueen Trianna Axor - Bill's dead mother, Lion clan of Mandria\n\nQueen Niaco Traxor - Tiger clan, Tobias mate, now Bill's\n\nTwitty Glax - Grey Tabby clan, bill's body guard and mate\n\nGlenna Nox - Bengal clan, Bill's body guard and mate\n\nMikos Glac - Chartreux clan\n\nCommander of star cruiser - Wire hair clan\n\nGeneral Roth - Leopard clan\n\nHenna Glac - Chartreux clan, Mikos mate, Xendran Doctor\n\nTheta Panadon - Cheetah clan\n\nCornelius Glax - one of Bill's Uncles, Grey Tabby clan\n\nConrad Nox - Bill's other Uncle Bengal clan\n\nAssassin group - Jaguar clan\n\nsecond assassin group - Ocicat clan\n\nGregor - Cougar clan\n\nGwayne - Panther clan\n\nDawney - Panther clan Gwayne's mate\n\nThomas - Lynx clan\n\nMileen - Lynx clan Thomas's mate\n\nTypree Maxor - Sub King of Mandria, Lion clan\n\nAdina Maxor - Sub-princess of Mandria, Lion clan\n\n___________________________________________\n\nGwayne and Thomas hissed and cursed when then ran to the exits trying to find the older male. Growling at the noble guests to move they both dashed outside to see a figure already leaping the wall disappearing into the crowds. Roaring they both headed for the wall only to stop short at Ambrose's voice.\n\n\"Cease!\" He told the both of them. \"Would you slaughter half the populace just to find one?\"\n\nThomas growled an eagerness in his eyes as he hissed. \"I could do that!\"\n\nAmbrose shook his head calling them both back inside. As all three of them stepped inside a Lynx clan female met them at the door.\n\n\"I heard what you said mate!\" She yelled at Thomas with a growl her tail swishing back and forth at a furious rate. \"Don't think you will escape me that easily!\" She said as Thomas's eyes grew wide and he ducked back out the open door.\n\nBowing to Ambrose she gave chase as they heard a fading Thomas, \"Mileen I wasn't that serious!\"\n\nAmbrose's face grew into a wide smile as he heard the fading sound of sword play. Well he thought might not see Thomas for a half minton or more.\n\nTurning to walk back in Ambrose was met by his and the other Knights mates. \"Ah! I see that you truly are smarter than we thought!\" Roth's mate said with a smile. All three of his mates were nodding yes as Ambrose stopped with a shock.\n\n\"Who am I to get between mates; especially when he was wrong?\" Ambrose told all six of the females that were smiling at him.\n\nGregor and Roth walked up a moment later as Gwayne shook his head and met them before they got too close. Ambrose watched as Gwayne whispered in their ears and their eyes got huge. Both nodded quickly then all three moved to within a half maclon of Ambrose.\n\nRoth's mate turned to him, \"Mate you could learn much from this one. Protect him well or all of the knights' mates may grow upset.\" Then she leaned close as she whispered, \"Your comrade Sir Thomas is already feeling his mate's wrath. Let's hope the rest of you don't!\" She said with a sly smile that had Roth nodding and standing more on guard.\n\nAmbrose smiled wider then pulled the three aside. \"I am afraid that there will be no rest. I have been receiving word that the outermost planet of the realm is rebelling. We must stop this before it cascades into all the planets going this way.\"\n\nAll three of Ambrose's knights nodded in agreement. \"You want to send our wives after Thomas and Mileen?\" Roth asked.\n\nAmbrose thought about it, true he needed all of them but as he told the mates, who was he to interfere? \"I will ask them, though getting between those two mates at the moment might not be a very good idea.\"\n\nGwayne nodded he himself wouldn't want to brave that situation. The fact that he and his mate were close friends notwithstanding, Mileen was close to unstoppable when she got going. \"If you ask, see if my mate thinks it is plausible. She and Mileen have been friends for many quants. That plus I think the fact that we may be gone a while might rub her fur the wrong way.\"\n\nAmbrose was nodding the whole time. He'd learned from his father that not listening to people who had more knowledge on a subject invited disaster. \"Alright, if she can, I need all of you and him ready to go within a minton.\"\n\nGwayne scratched his whiskers as he thought. \"It might be a little tight Sire; we'll do all we can.\"\n\nBoth Ambrose and Gwayne approached Dawney, Gwayne's mate. As soon as both males approached, her face fell. Bowing low she straightened, \"Yes Sire? If I can do it then I will.\"\n\nGwayne remained silent as Ambrose had a moment of silence that he was at a loss for words. \"I-\" here he sighed.\n\nDawney looked at her mate then her eyes got large. \"You wish for me to interfere between them? Sire! I thought you were against this!\"\n\n\"I am that is why I have come to ask you your opinion.\" When Dawney's eyes got huge Ambrose continued. \"I need all four of my Knights when we leave for the outer planet tonight. We have to put down the rebellion there before it starts.\"\n\nDawney eyes still large, she was silent as she thought about this turn of events. Niaco walked up to her whispering in her ear. With a gasp she nodded then turned back to Ambrose. \"Sire in order to do this I will require all of your mates and the other knights mates. Mileen may not look it, though she is ferocious with a sword. Even Thomas barely has the skill to keep her at bay.\"\n\nRubbing his whiskers Ambrose remembered just how fierce Mileen had been watching him. Also there were the events at her and Thomas's home. \"Granted, though I need to ask-\" Ambrose started.\n\n\"I have already spoken to all of them mate,\" Niaco told him when he started to turn toward his mates. \"For this instance it is more than a damn good reason. Keeping this kingdom strong is all our duties.\"\n\n\"Very well, the problem is I need him here within no more than a minton and a half. Any more than that, I'm afraid we'll be gone.\" Ambrose told them.\n\nBoth Twitty and Glenna had scowls on their faces as they both hissed, \"You leave without us and there will be a heavy price to pay Ambrose!\"\n\nAmbrose swallowed hard at the looks of seething anger from all THREE of his mates! Well he thought things were going to get interesting that's for sure.\n\nBoth Gwayne and Roth looked at Ambrose with surprise. So, they weren't the only ones that had to fear from a strong mate. Both smiling they filed this fact away for later reference.\n\nIt was almost a minton later when all three of his mates and Dawney finally returned with a tied up and struggling Mileen. Hissing with a ferocious roar she was yelling, \"Release me! I will kill all of you! My mate can't be allowed to be a killer! Release me now!\"\n\nAmbrose could only stare at all five of the females bandaged and bruised as they came in. Niaco sidled up to Ambrose licking the side of his face. \"Thank you mate that was the best hunt we have been on in a long time!\" Both of his other mates and Dawney all nodded their agreement.\n\nAmbrose could only shake his head then walked to Mileen. \"Let me go! I care not who you are! I'll kill all who get in my way!\"\n\n\"MILEEN!\" Ambrose roared to get above her screaming. Blinking she shook her head.\n\n\"Ambrose?\" Still a little confused she looked at the ropes looped around her. \"I take it I was in the blood lust?\" Ambrose nodded a small smile on his lips. \"I see; Thomas must have angered me greatly. That's about the only thing that makes me lose control that bad.\" Looking around she saw Thomas limping in also. Then she turned back to Ambrose. \"Perhaps,\" she whispered, \"he might straighten up- though I doubt it.\"\n\nThomas looked up at her with a scathing look which quickly softened into a look of love.\n\nSighing Ambrose told all of them, \"We have to leave for Mandria as soon as possible. I suggest that all of you assume your armor. Have as many of the troops as you dare to take come. I want to put this down as quickly as possible.\" Roth nodded as all of the Knights departed. Looking at the seven females he stated. \"I am sorry that we must go please watch over what you can here. I am leaving some troops; public opinion of the crown has finally started to turn. I just hope it is enough to hold the kingdom together 'til we return.\"\n\n\"We are with you mate,\" Niaco said as all seven of the females followed him to the armory. Upon entering all seven of the females mouths dropped open. There in the front of the room were seven sets of armor for them!\n\n\"I had thought that it was time that my knight's mates also had armor.\" Turning to his mates, \"as I did for my mates. Wear it proudly.\" Then he turned heading back to the palace almost unnoticed. Making his way to the throne room Ambrose was slowly donning his armor when he heard several armored individuals approaching.\n\nLooking up his mouth dropped agape as he could only stare at all THREE of his mates. 'Damn, ' he thought, 'they are as sexy with the armor on as they were without it.' Shaking his head to clear it he chastised himself. There would be time for that much later, though he thought as he stared harder they were tempting him mightily.\n\nFinally set Ambrose was met at the palace entrance by all of his armored knights. A moment later all four of their mates appeared also girthed in their armor. When all four of his knights' eyes went wide then they looked at Ambrose as he nodded.\n\n\"It is a gift, with all the worry that we have now, I wanted to make sure that we had one less.\" Ambrose told all of them.\n\n\"Ah, if we were younger,\" Roth suddenly said making the other three knights nod in agreement.\n\n\"I think that all of you need to go before nothing gets done!\" Roth's mate said a small pant to her voice. \"Before all five of you are dragged off to a mating bed!\" All of the other females were nodding affirmatively with her.\n\nAmbrose and the other Knights agreed as they all headed to the space port. The wire hair commander was waiting when they arrived. \"All is prepared sire,\" the commander said to Ambrose, as the knights Twitty and Glenna boarded.\n\n\"Watch our mate well,\" Niaco advised Twitty and Glenna. \"I also would like kitts!\" Both of the females nodded as they looked at each other. They had seen her skill they both had to admit she was as good if not better than they were. She was one they weren't all that sure they could easily defeat if at all.\n\nLifting the star cruiser accelerated. \"We should be there in two spectons sire.\" The commander said.\n\n\"Good, though I think you should advise all to come out of hyper drive well short of Mandria. If they see us coming they might not resist as bad.\" Ambrose told the commander who was already on the com. advising the other ships.\n\n\"Commander, open a channel to Mandria.\" Ambrose told him a moment later.\n\n\"Yes Sire.\" The commander said. \"Open Sire.\"\n\n\"To the Mandrian control, this is King Ambrose. This rebellion that has been rumbling across the planet will stop now! I am enroute there now, I do not wish a civil war, but this kingdom will not be destroyed by power hungry fools!\" Ambrose roared into the com, and then clicked off.\n\nA moment later there was a crackling then a voice that touched somewhere in the back of his mind came on the line. \"To the approaching fleet, this is the commander of the Mandrian space force. Approach this world and we will be forced to destroy you!\"\n\nA moment later the Xendran fleet dropped out of hyper space, millions of miles from the planet. A small fleet roughly half the size of the Xendran fleet awaiting them. Shaking his head Ambrose could see that this was going to get bloody real quick.\n\nThe wire hair commander was also shaking his head. Then looking on more an idea suddenly came to mind. Walking to Ambrose he bowed then outlined the idea that he'd just had. Ambrose's eyes went wide as he nodded. It was bold and daring and would save a hell of a lot of lives if it worked. Hell weighing all that would ensue, Ambrose could see it was well worth it.\n\nAll of his knights were smiling with anticipation as the commander moved to the helm. Calling the other ships he outlaid the plan and what they had to do.\n\nThe commander of the Mandrian space force watched as the Xendran fleet stopped well short of the planet. Nothing like when King Traxor had taken the planet. Now that had been a glorious bloody battle! Suddenly his bridge crew was shouting when the lead Xendran ship suddenly was with the fleet and beside them. Then they were screaming that they were boarded! \"Prepare to repel boarders!\" The commander shouted.\n\nAmbrose, his knights and several troops moved through the air lock as they rapidly advanced to the bridge. He and his knights had only met token resistance. Then again they had been caught unaware as many of the ships had. Finally at the bridge An older male stood with his sword drawn.\n\n\"I will defend this ship with my life!\" The male said as he leapt into action twisting Gwayne and Thomas's swords from their grasp. Roth jumped in meeting the male blow for blow as Ambrose watched. \"You fight the old style as do the others.\"\n\n\"I was a general for King Tomco; I was here during the bloody campaign to unite the kingdom.\" Roth hissed out.\n\n\"Roth?\" The older male said suddenly stopping his fight. \"Roth is that you?\"\n\nRoth stepped back shocked. \"Yes, I am sir Roth first knight of the realm.\"\n\nThe older male started to laugh, \"so ripped up Roth has made knight!\"\n\nRoth's face showed even more shock, \"Jankuis? My god I was told you were dead!\" Roth said as both the males embraced.\n\n\"No I am still much alive.\" Turning toward Ambrose he asked. \"Who do I have the pleasure of addressing?\"\n\nAmbrose drew up to his full height, \"I am King Ambrose Billous Axor.\"\n\nJankuis' face was suddenly horrified as he dropped bowing at Ambrose's paws. \"Axor? The son of King Tomco and Queen Trianna? Trianna of Mandria?\"\n\n\"I am the same, I have returned to restore the kingdom. The kingdom that father united all those quants ago.\" Ambrose told the male at his paws.\n\nNodding vigorously Jankuis grabbed his com. \"Stand down! All ships, King Axor has returned!\"\n\nThere was a moment of shouting then many voices called in their agreement that they had stood down. Then the commander of the Mandrian space force's com. went off again. \"What is this nonsense that you are speaking?\" A voice stated. \"Axor is still on earth!\"\n\nGrabbing the com. Ambrose was about fed up with all the delays. \"I am here now, this instant! I am through playing the good diplomat. I am here to reunite the kingdom. I will not have any more dissension! If I have to spill more Mandrian blood as my father did, then I will not hesitate!\"\n\nThere was a moment of quiet then the voice came on again. \"Cousin, is that really you?\" Ambrose blinked cousin? He'd been informed that all of his mother's family was gone.\n\n\"I was told that all of mother's family had been taken when the bleeding paw malady hit Mandria.\" Ambrose replied to the voice.\n\n\"It took many but not all of us. My god it really is you! Cousin! It's Typree!\" The voice shouted even more excited.\n\nAgain Ambrose blinked Typree? His uncle's son? Shaking his head again he thought Typree was one of the first he'd heard that had died! \"If you are Typree what was your brother's first name!\" Ambrose demanded.\n\n\"Brother? Ambrose! I haven't a brother you know that! Just an irritating sister, Ow! Stop it Adina!\" The voice shouted.\n\n\"He was my friend also damn it!\" Shouted a female voice. \"You want more?\"\n\nAmbrose started to laugh; it had been a very long time since he'd heard either of them. \"Alright before Adina breaks your ribs we will be there. As soon as we are back on our ship.\" Then Ambrose thought about it. Calling his fleet he advised them to follow the Mandrian flag ship down.\n\nTwo spectons later they were landing on the tarmac of the Mandrian space port. As the door of the Mandrian flag ship opened a young Lion clan female dashed in jumping and taking Ambrose down to the deck.\n\n\"AMBREE!\" She shouted as she started to punch his arm. All four of his knights had already drawn their swords. This caused the female to leap away growling and hissing with her huge claws out.\n\nAmbrose got off the deck standing between the combatants. \"Hold, this is my cousin Adina Maxor, Sub-princess of the Mandria world!\" Roth and the others could only blink, sub-princess?\n\nA moment later a tall Lion clan male strode on board bowing to Ambrose. Sighing he looked at his sister. \"Still making trouble Adina?\"\n\nSticking her tongue out at her brother she retorted, \"I was in a hurry! The damn door was too slow! Then these knights drew their swords on me!\" Here she hissed again her fangs showing.\n\n\"Enough Adina!\" Ambrose roared causing her to nod lowering her head.\n\nChuckling Typree shook his head, \"I swear you are the only one besides father that she ever listened to! Especially now!\"\n\nAmbrose rolled his eyes as his ship landed and Twitty and Glenna both broke from the ship as soon as the door opened. \"I think I know the feeling!\" Ambrose said, \"though in my case it is my mates!\"\n\nTypree laughed, \"it is good to know that there is a king again. I think the fact that it is you though will put a good many fears to rest. Can you stay long cousin?\"\n\n\"I'm afraid not. I am still having trouble with father's brother, uncle Conrad. He has already made several attempts to assassinate me.\" Ambrose told his cousin.\n\n\"I see, please make a brief appearance then I think all thoughts of secession will be a thing of the past. Besides I think Adina has missed you!\" Typree said as Adina punched his arm again.\n\nThen Adina saw Ambrose's mates as they were scowling at her. \"Brother? Cousin? Who are those scary females?\"\n\nBoth Twitty and Glenna's faces showed shock. The young female was hiding behind Ambrose shaking as she was staring wide eyed at the two armored females.\n\n\"These are two of my mates.\" Ambrose told her. Looking up at him she nodded then smiled.\n\n\"I guess being king you need such fierce warriors!\" Adina said in awe. It was at that moment both of Ambrose's mates really started to like the young female."
    ],
    "authorname": "Pars001",
    "tags": [
        "science fiction",
        "alien11111",
        "body modification",
        "violence"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/cat-fight-ch-14-cousins"
}