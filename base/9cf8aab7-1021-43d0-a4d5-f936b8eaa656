{
    "title": "Hybrid",
    "pages": [
        "This is my entry in the \"Highway Song\" writing event. These are action/adventure/travel stories. There is much more to be told in this story, and I will add to it, as my time permits. Some chapters will be monster hunts, some will be advancing the plot. Thank you all for reading, Randi.\n\nThanks to my team: Harddaysknight is my mentor and gives be critical review. Sbrooks103x also gives me a pre-post read. My editors are Hale1, Girlinthemoon, GeorgeAnderson and NoraFares. Thank you, ladies and gentlemen.\n\nChapter one\n\nI'd been watching her for about three minutes. She was struggling along the bed of the stream, headed up the creek and away from the small party of Shai I'd passed a few hours back. I preferred to avoid them, too, so I sympathized with her direction. She had a more immediate problem, though. She didn't know it yet. There was a large dog following her. Dogs are one of the three Mother Planet animals that have thrived here on Eiru. The other two are rabbits and horses. The dogs are mostly feral, and this one was obviously hunting. A small child would be easy prey. She had a stick she was using for a staff but I doubted she could take the dog. I could hear her. She was whimpering quietly to herself as she slipped and stumbled across the stones in the creek bed. Her little shoes seemed more suited as house slippers and she was visibly limping.\n\nI didn't want to get involved. The Shai were following her and that didn't bode well for her or anyone that was around her, but I couldn't let the dog eat her. I have a code, and it doesn't involve letting children get killed by beasts. I wrapped myself in shadow and moved down the side of the valley to intercept her path. I can move almost unseen except in direct sunlight if I wish, and the dog never saw me coming. He came out from behind a rock and growled. The girl turned and it was easy to see she was terrified. She brandished her stick, shouted and threw a rock. It was a good throw. It hit the dog on the back and it sprang forward. I shafted it and it fell to the ground, too close to her as it snapped in its death throes, but she scrambled away. I let the shadows melt away and she looked at me.\n\nShe seemed almost as frightened of me as she had been the dog. I knelt and cut out my arrow. I kept kneeling so I wouldn't be intimidating and looked at her. \"It's all right, child. I won't harm you,\" I told her. \"Where are you going?\"\n\n\"Away,\" she said. \"Bad mens are chasing me.\"\n\n\"Do you mean the Shai?\" I asked her.\n\nShe nodded. \"Yes.\"\n\nI looked her over. She looked like she was maybe three or four; just a baby, really. She was mixed up in something I didn't understand or want to be involved in, but how could I leave her? Her light brown skin marked her as human stock; maybe even Old Stock. Her white hair and pointed ears told me she was Shai. I had heard of hybrids, mostly the result of some kind of political machinations between some kingdoms that married off a daughter to the Shai to obtain peace. They performed some sort of spell and hybrids were produced. I had never seen one before.\n\n\"What's your name, child?\" I asked her.\n\n\"Serisi,\" she told me. \"What you name?\"\n\n\"Guerin,\" I told her. \"What am I going to do with you, Serisi?\"\n\n\"Carry?\" she suggested hopefully. \"I very tired, Guerin. My feets hurt, too.\"\n\n\"Where do you live, Serisi?\" I asked her.\n\n\"Rose Haw,\" she said. \"I yive with the Sisters. Bad mens came and the Sisters made me go in the ground. They tode me to run away. The bad mens came and hurt them, and I ran away. Why you have yeyyow eyes, Guerin?\"\n\n\"Yeyyow?\" I asked.\n\n\"No, yewwow,\" she tried again.\n\n\"Ah, yellow,\" I said. She had trouble with the \"L\" sound.\n\n\"I'm a mutant, Serisi. Do you know what a mutant is?\"\n\n\"Yes,\" she nodded again. \"You a Gyoom Wawker.\"\n\n\"That's what the humans call us,\" I told her. \"Gloom Walker means I can wrap the shadows around me and move unseen. Can you do stuff like that?\"\n\n\"I can put out yights when I want to,\" she said.\n\nThat was interesting. Evidently she had Shai abilities. She was a beautiful little thing. Her eyes were tilted up at the corners, almond shaped and a very light blue. The contrast between her dark skin, white hair, tiny pointed ears and those huge eyes made her look very exotic. I didn't know what to do with her. The Sisters of the Rose had a place about ten miles back in the direction I had come, but it sounded like that was a bad place to be right then. If they survived, an unlikely event, they might be worth checking out at some point, but right now we needed to put some distance between ourselves and the Shai. They wouldn't find me if I didn't want them to find me.\n\nI knelt down. \"Climb on my back, Serisi. Don't hurt yourself on the sword. Push it around and get comfortable. Can you hold on to me?\"\n\n\"Yes,\" she nodded again and the mass of white curls on her head bobbed. She climbed up on a rock and wrapped her little arms around my neck. I drew the shadows around us and climbed out of the valley. I walked for ten minutes then began to run. Ten miles later, she was slipping as her arms lost strength. I knelt and she collapsed to the ground.\n\n\"Pwease, Guerin. I very tired,\" she said.\n\n\"We can't rest here, Serisi. I'll hold you in my arms for a while. I know someplace ahead we can spend the night. It will take us about two more hours to get there.\"\n\nShe climbed wearily to her feet and I scooped her up. I'm sure she didn't weigh more than forty pounds. She wrapped her arms around my neck and I ran again. At some point, she fell asleep and I ran on through the gathering twilight, carrying a sleeping child. I could hear the sound of the waterfall ahead and I slowed to a walk. There was a path behind the falls and a cave at the end I had used before. Serisi woke up when I laid her on the floor of the cave. I built a small fire and opened my bag while she watched. I had bread and meat, wrapped in the skin of the skor I had killed earlier. I had some apples, too, and a wedge of cheese. I fried the skor and then fried the bread in the grease, put the cheese on it to melt and turned to her.\n\nAre you hungry, Serisi?\" I asked her.\n\n\"Starving,\" she said. \"Thirsty, too.\"\n\nI gave her a cup and she went to the fall and drank. When she came back I put meat and bread on a plate and gave it to her. She ate like she was starving.\n\n\"How long has it been since you ate anything?\" I asked her.\n\n\"Yesterday in the morning,\" she said. \"I was running away since then.\"\n\n\"Do you want more?\" I asked.\n\nShe eyed the apples hungrily. I gave her two and she crunched away. When she was through, I rummaged around in my pack and came up with soap and a washcloth.\n\n\"Serisi, I'm going to bathe in the waterfall. Would you like to take a bath?\"\n\n\"Yes. Wash cyothes?\" she asked hopefully.\"\n\n\"Sure, honey. We can wash them.\"\n\nShe didn't have anything but the little blue dress she was wearing. I knew it must be getting uncomfortable and dirty. She took it off and she was just a little chubby brown bundle of beauty. Her little brown thighs had a dimple about halfway to her knees and she had a little pudge to her tummy. There was another dimple in her forearms. She really was just a baby. I took the little dress, we got it wet in the falls and I lathered it up. After I rinsed it out well, we wrung it out as well as we could and hung it on a stick to dry near the fire. I washed my underwear and hung that up, too. I wear leathers on the outside and they don't take kindly to washing. We eased into the cool water and let it rain down on us, just relaxing in the spray. After a minute she took my hand and pulled me into the small pool below. To my amazement, she could swim and she played happily for a minute before swimming back and standing in front of me.\n\n\"Wash me, Guerin,\" she said.\n\nI soaped her up and scrubbed her until she was flushed. She dove back in and I made my own ablutions. We went back through the curtain of water and stood by the fire. I showed her how to get the excess water off with the edge of her hand and we stood by the fire until we were dry. I got her one of my undershirts and she ate her other apple while I spread out my blankets. I had a horsehair pad to sleep on, and I laid down on it. She joined me after a minute. She snuggled up against me and put her face very close to mine, our noses touching and our lashes mingling.\n\n\"Where we going?\" she asked.\n\n\"Where do you want to go?\" I asked her.\n\n\"Want to go with you,\" she said. \"I yove you, Guerin. Thank you for taking care of me.\"\n\nI could feel a big lump in my chest. She trusted me and at that moment I knew I couldn't let her down. I was going to keep her safe if I had to burn the world down to do it.\n\n\"I live at a place called Cliff Keep,\" I told her. \"Do you want to go there?\"\n\n\"Yes, I yive with you,\" she said. \"You keep away the bad mens.\"\n\n\"Yes, I will. I don't think they'll find us, Serisi. We'll go fast and far tomorrow, and they won't find us. How old are you, child?\"\n\nShe held up her little hand and pressed her thumb and little finger down leaving three chubby little fingers standing up. Gods, she was a baby!\n\n\"Syeepy now,\" she said. She kissed me and pushed me over on my back so she could lie over me. I wrapped her tiny form up in my arms and she whispered, \"Night, Guerin.\"\n\n\"Goodnight, child,\" I kissed the top of her head.\n\nWhen I awakened, the sun was shining outside and she was watching me. I fluffed her curly hair and she snuggled closer.\n\n\"Are you rested?\" I asked her.\n\n\"Yes, hungry now and I need to peepee,\" she said.\n\nI chuckled. \"Yeah, me too. I want to squeeze you for a minute, though.\"\n\n\"Okay, but not too hard,\" she said. \"Need to go bad.\"\n\nI held her for a minute and just memorized how she felt in my arms. She was wiggling, and I let her go with a laugh. She took of the undershirt and ran to stand in the falls. I joined her and we let the water wash over us. When we were through we dried off while I made us a repeat of the meal we'd had the night before. I had some raisins and we munched on them, too. She pulled on her dress and helped me pack up. She put her shoes on and we walked down the path with her dancing about ten feet in front of me. When we got to the top, she disappeared over the hump and I heard her scream.\n\nChapter Two\n\nMy sword was out in a flash and I saw six Shai facing us. I had time to cloak and then they were closing on her. I cut the first one up and he fell screaming over the cliff into the stream. I made an alf sign and two more went down in front of the shock wave. They wouldn't stay there, but that left me three to deal with. I darted to the left and put the closest one between me and the other two. I'm quicker, stronger and faster than humans, or even the Shai. Still, it was likely that we were going to die there. I was determined that they weren't going to be in good enough shape to chase her.\n\n\"Run, Serisi,\" I called to her. \"Get away.\"\n\nI got the one I was facing but her two buddies were spreading out to flank me and the other two were showing signs of life. Suddenly they were on fire and screaming. I killed them all while they were beating at the flames, and it was over. I panted and looked over at Serisi.\n\n\"Serisi, did you do that?\" I asked her.\n\n\"Yes, they were bad mens. They hurt the Sisters,\" she said.\n\n\"Yes they were. How did you do that?\"\n\n\"Don't know,\" she said, beginning to cry. \"I was scared. They was hurting you, Guerin. I burned them.\"\n\n\"It was well done,\" I told her. \"Don't cry, now. They would have hurt us both if you hadn't done it. Can you do other things like that?\"\n\nShe shrugged. \"Don't know. Yet's yeave here.\"\n\nI rolled them off the cliff to join their fellow, and we walked until she got tired. I carried her piggy-back after that. We stopped at a spring around noon, drank and ate an apple and some more raisins. She climbed back on my back with a groan and we started off again. We stopped for the night on the bank of another small stream and foraged for a while. I know a lot about plants, and we found some to eat and go with the meat. She found a patch of berries and I gave her my undershirt to pick them in. We had a good meal and bathed in the stream again, hanging our clothes up to dry. She got her undershirt out of my pack and we curled up together. She turned her back to me this time and I hugged her up. She used my arm for a pillow and I could feel her curls tickling me.\n\n\"Serisi, who are your parents?\" I asked her.\n\n\"Don't know,\" she said. \"Sisters took care of me.\"\n\n\"Do you know how you got there?\" I asked. \"Do you know who brought you to them?\"\n\n\"No, awways yived there,\" she said. \"What you house yike, Guerin?\"\n\n\"It's big and made out of stone,\" I told her. \"My order lives there. We're the Ruby Order. There are five of us. We're all mutants. Well, there are ten all together. We have people who work for us: cook, clean, stuff like that. Five like me, though. Do you think you'll like living there?\"\n\n\"Yes, I be with you,\" she said. \"I yove you, Guerin.\"\n\n\"Yes, I know. You told me,\" I said. \"I'm falling in love with you, too, Serisi.\"\n\nShe sighed happily and scooted back against me closer. \"Night Guerin.\"\n\nWe traveled like that for two weeks and she stole my heart. She was the happiest child I had ever met. She giggled and laughed and chattered constantly. She was in love with every flower and every bird. She hugged me constantly and it was hard to get used to that. I'd never liked being touched. Only a few people had ever been allowed to touch me, Lena, who was dead, the women I was intimate with and now Serisi. I had vague memories of my mother holding me, but nothing more.\n\nMutants are looked on askance by humans and Shai, alike. They hired us to do dangerous jobs they didn't want to do, but they felt like we were different. This sun isn't meant for humans, and somewhere around one tenth of one percent of us are born with mutations. Most of the mutant babies were aborted when they had the knowledge to do that. After that was lost, they just killed us as soon as we were born. Here and there, a mother gives birth to a mutant and loves it. They bring them to one of the mutant enclaves and they either die from their mutations or become something else. Most of us are sterile. The Ruby Order is martial. We hire our services to the highest bidder. We kill dangerous beasts, hunt down missing people, do bodyguard work and scout for armies. Demand is high and there aren't many of us, so we do well financially. Attrition is high, too. Most don't make it through their apprenticeship. I'd been a master for fifteen years, and I'd the scars to prove it. By the time we got to Cliff Keep, Serisi was an old hand at traveling and living off the land. I almost hated for the journey to come to an end.\n\nHalbert and Corwin were the only two members at the keep. Hal took one look at her. \"Gods, Guerin, she's a fucking Elf,\" he said.\n\nMy hand was around his throat and he was against the wall before he could move, with a knife at his throat. \"Speak to her like that, or about her like that again and it will be the last words you say,\" I told him.\n\nI could feel Corwin's hand on my arm. \"Back off, Guerin,\" he said.\n\n\"I apologize,\" Hal said. \"I'm sorry, child. My words were ill-chosen and I welcome you to Cliff Keep.\"\n\nHe looked back at me. I let him go. \"Sorry, Hal. This girl is under my protection. I love her. She's to be my daughter, and I reacted. Yes, she is an Elf. I believe half, to be accurate. She was living under the protection of the Sisters of the Rose. They were attacked by the Shai and they were pursuing her. We killed six of them.\"\n\n\"We?\" Corwin said.\n\n\"Yes, she did most of it. Tell them what you did, Serisi.\"\n\n\"I burn them,\" she said. \"They was hurting Guerin.\"\n\n\"Remind me never to hurt you,\" he told me.\n\nShe walked over in front of them like a queen. She pulled them down and the sight of her hugging those two shaggy heads was heart wrenching.\n\n\"Yove Guerin,\" she told them. \"I yove you, too, if you nice to me.\"\n\nShe ruled the keep from that moment on. They played with her and put up with things I couldn't imagine, letting her dress them in silly clothes and having tea parties with her. They taught her how to read and sew and sing. Corwin taught her the sword and Hal the knife. I taught her the bow and the domestics taught her how to manage a house. She was busy from dawn to dusk and she learned at a geometric rate. At night, she was mine. When she got up from the evening meal she went to our rooms and she became a little lady. She painted pictures and played musical instruments and wore a dress. We sang together and wrote poems. She had a little court of dolls that Corwin carved for her, and we moved them around like real people. She made up histories for them and they carried out romances, plots, had children and got married with elaborate ceremonies.\n\nEvery night she would come to my bed, climb in with me and the candles would go out. Every night until she was five she told me she \"yoved\" me and went to sleep in my arms. When she was five she mastered the \"L\" sound, then she \"loved me.\"\n\nOn her fifth birthday, we assigned it arbitrarily to the first day of the harvest moons since neither of us knew when her birthday really was, we had a big party. All of us but Trina were home and it was a great day. The next morning I told her I was leaving and we had a big argument. She didn't want me to leave, at least not without her.\n\n\"I have to work, Serisi,\" I told her. \"This place doesn't pay for itself. You need things and they won't pay for themselves either. I have to pull my weight around here. I haven't worked for two years because you needed me.\"\n\n\"I still need you,\" she threw herself into my lap, sobbing her heart out. \"Don't leave me here, Guerin. I'll die without you. Take me with you! I'm afraid something will happen to you!\"\n\n\"I can't take you. I'm going to hunt a drakkon. It's too dangerous for you.\"\n\n\"It's too dangerous for you, too, then,\" she wept. \"You'll get hurt and no one will be there to take care of you. You'll die and leave me all alone.\"\n\n\"That's not going to happen,\" I told her. \"This is what I do, Serisi. I'm really very good at it. If something did happen to me, you wouldn't be alone. Don't you love Uncle Corwin? Don't you love Jynn? They'll take care of you while I'm gone.\"\n\n\"Yes, I do love them, but they aren't you! I'll be miserable and lonely all the time! Please, Guerin, take me with you.\"\n\nI left a very sad and angry little girl behind the next day. It took all of Jynn's ability to keep her from running after me and I felt heartsick as I walked down the long stairs, her desperate cries fading behind me. It took me two weeks to get the job done and they tried to short me on the payment. I had to go to the Baron, and he apologized and promised that it wouldn't happen again. A drakkon is a huge reptile sort of thing with leathery wings and a mouthful of sharp teeth that would bite your leg off if it got hold of you. It was taking livestock and none of the locals wanted any part of it. I never gave it a chance to eat me. I ghosted in cloaked and it was gone before it knew I was there.\n\nWhen I got home I expected her to be watching, but there was no sign of Serisi. I was afraid she was still mad at me. Trina was home when I arrived and she met me on the stairs up the cliff. \"Guerin, we need to talk,\" she said. \"Serisi is sick. I mean physically sick. She began to throw up two days after you left and she's been sick ever since. I don't know what's wrong but you can't do this again. She needs you with her. I've never seen anything like this. I think she would just die, eventually. There's nothing physically wrong with her except you weren't here. You can only do jobs from now on where you can take her with you. If you can't do that we're not going to let you work. We've all talked about it and we decided. We love that girl, Guerin and this can't happen again. Now you go in and apologize to her and make her better. If she's not smiling the next time I see her I'm going to cut off your nuts.\"",
        "I had no idea. I ran up the stairs and into our rooms. She was a little wretched ball curled up on our bed. I ran and picked her up, holding her tightly and she cried into my chest. She even smelled sick.\n\n\"I'm so sorry, baby,\" I told her. \"I didn't know. I knew you'd be sad for a while, but I didn't know you'd be sick. I'm so, so sorry. Do you forgive me, Serisi?\"\n\nShe nodded into my chest. \"I told you, Guerin! I can't be without you. Maybe for a day or two, but I need you. I love you and I feel all weak and icky inside when you're not here. Please don't leave me alone anymore!\"\n\n\"No, I won't; I promise. Why do you think this happens?\"\n\n\"I don't know. I feel like I'm drowning and all my bones ache.\"\n\nJynn came in and we talked to her about it. Jynn was old; I didn't know how old, but she'd been there for decades. She didn't age that I'd seen, but I know she was very old. She looked about 25, but she'd let it drop that she was at least four times that. I asked her what she knew about the Shai.\n\n\"Have you ever heard that they get sick when people they love aren't around?\"\n\n\"I know they mate for life and when one partner dies the other does, too,\" she said. \"Maybe it's like that.\"\n\n\"We're not mates,\" I told her. \"I'm her father.\"\n\n\"Serisi, how do you feel about Guerin,\" Jynn asked her.\n\n\"Love Guerin,\" she said.\n\n\"Yes honey, I know; but when you're older, say about 20, what do you think you'll feel about him?\"\n\n\"Going to marry him,\" she peeked up at me.\n\n\"I think you have your answer,\" Jynn said. \"She's not entirely human, Guerin. You may have begun something you don't fully understand.\"\n\n\"She's five,\" I protested. \"How can that be possible? Every five year old is going to marry their mother or father.\"\n\n\"I don't know. I know she was puking her guts up and now she's okay. We couldn't do anything to help her and we can do a lot. The only difference is you're here now and you were gone. Until I hear another explanation, that's what I'm going to assume.\"\n\nI looked down at Serisi. She was snuggled in like a bunny. Her eyes sparkled up at me and I petted her. She fell asleep presently and I went off to put my gear away and clean up a bit. I caught up on the news and when I went looking for her she was in the kitchen keeping Marrat company while he ate. She was freshly bathed and she was eating right along with him. When I sat down beside her she shared her bird with me. I got us a glass of cider and we shared that, too. She was a little wan looking, but seemed to suffer no lasting ill effects from my absence. She was a little clingy for a few days after that, never letting me out of her sight, but she gradually relaxed when she realized I wasn't going to sneak away without her. I stayed home for two weeks and then I took her with me to Gent. I had a job to track down a missing person, and she stayed at the local inn with me. She attracted a great deal of attention. I suppose a mutant and a hybrid traveling together was a little out of the ordinary. I didn't feel comfortable leaving her at the inn while I talked to my employers, so I took her to meet a friend of mine. Zee is sort of a spy. She worked for my father.\n\nYes, I knew who the son-of-a-bitch was. He didn't know who I was. He was the Baron of Lost March. My mother died at Cliff Keep, years previously. Zee played at being a singer, but she really ran quite an information network. We'd done a few favors for each other over the years and she liked me. I liked her, too, and I trusted her. I introduced her to Serisi.\n\n\"She's gorgeous, Guerin. Where did you get her?\"\n\n\"She's been with me for two years,\" I told her. \"I love her, Zee. She's like a daughter to me. I need a place for her to stay for a few hours.\"\n\n\"Well, that was your typical enigmatic Guerin answer. You do realize that she's an elf? Honey, would you like to stay with Aunt Zee for a little while? We'll go out and get a treat and then we'll take a swim in the hot spring behind my house. Would you like that?\"\n\nSerisi clung to me desperately. \"Don't leave me for too long, Guerin. Please?\"\n\n\"Gods, child, he's a rogue but he won't leave you. Let him take care of business and we girls will have a party,\" Zee held out her arms.\n\nSerisi reluctantly let go of me and gave a weak smile as Zee led her away. I went and talked to the owner of a large blacksmith shop. His wife was missing and he wanted me to find out where she was. I asked if I could look over the house to see if I could find any clues. He gave me the key and it took me an hour to find her hidden stash of letters. She had a lover, and I found out where he lived. I went back and told the blacksmith I had an idea and I would let him know when I had information. When I got back to Zee's, they were nowhere to be found. I sat in a chair and waited. I kept hearing something out back and I went to the window. They were playing in the spring. I went out and Serisi squealed when she saw me.\n\n\"Guerin, come in. This water is amazing. I like it here. We must come back here often. I love Aunt Zee.\"\n\nI raised an eyebrow at Zee and she nodded. I stripped off and slid in. It did feel amazing. The smell wasn't very good, but the water was hot and made you feel slick and relaxed. Zee had built a floor and a bench into the bottom of the spring and as I relaxed they came over and slid onto the bench on either side of me. I put my arms around them and pulled them against me.\n\n\"Aunt Zee is very beautiful, don't you think, Guerin?\"\n\n\"She certainly is,\" I admired Zee a little. She was a very pretty redhead with milky skin and green eyes.\n\n\"Is she your girlfriend?\" Serisi asked.\n\n\"Are you my girlfriend?\" I asked Zee.\n\n\"No, well, sometimes; it's complicated, Serisi,\" she said. \"I want to be his girlfriend, but I do my work and he does his. We're lovers sometimes, but neither one of us is going to give up what we do. I do love him, though. Do you understand?\"\n\n\"I think so,\" Serisi confided. \"I'm not his girlfriend either. I'm going to be someday, but I love him and he loves me. Time isn't always what you want it to be.\"\n\n\"You're very smart, Serisi,\" Zee told her.\n\n\"What do you do when you're a man's girlfriend?\" Serisi asked her.\n\n\"Anything you want to,\" Zee said. \"You kiss, play with each other, touch each other, stuff like that.\"\n\n\"Do you want to do that with Guerin?\" Serisi asked.\n\n\"Yes, but I don't have to do that now,\" Zee said.\n\n\"I want to watch you do it,\" Serisi announced.\n\nI choked and sat up. \"No, Serisi; you're too young for that.\"\n\n\"Why?\" she asked.\n\nI floundered around. \"Help me out here, Zee.\"\n\nShe laughed. \"I was wondering that myself. Why, Guerin?\"\n\n\"She's too little.\"\n\n\"Too little for what? She just wants to watch. Let's just fool around. We don't have to get raunchy.\"\n\nNormally I'd be happy to fool around with Zee. She's a living doll, but I was very uncomfortable with Serisi being there. Zee seemed to have no such concerns, because she made my toes curl with a kiss.\n\n\"Let's go inside,\" she whispered. \"Serisi, we're going inside. You've seen enough, honey. Some things should be a mystery until you do them yourself. Stay here and play and we'll come and get you when we're through.\"\n\nShe was suspiciously compliant, and Zee climbed out. I followed her and her fantastic butt swinging in front of me was enough to keep me excited. She led me to the bed and she was as responsive and sensual as I remembered. I kept feeling like someone was watching me. It made the hair on the back of my neck stand up. I glanced back and there was nothing there, but I could still feel a presence. Just then, Zee did something that made me forget about everything except her for a long time.\n\nWe rested together for a while and went back to the spring. Serisi was sitting quietly on the bench and seemed very introspective. I bathed, kissed Zee and we got dressed. We walked back to the Inn and I didn't say anything while we walked. I could see Serisi peek up at me from time to time, but I didn't look at her.\n\n\"Are you angry with me, Guerin?\" she asked.\n\nI didn't answer her.\n\nShe walked on in silence for a while. \"How did you know?\" she finally asked.\n\n\"I'm a mutant, I'm sensitive to things like that,\" I told her. \"I don't know how you did that, but you don't spy on people you love.\"\n\nShe burst into tears. \"Please don't be mad at me, Guerin. I wanted to know. I'm sorry I spied. I knew you wouldn't like it, but I didn't think you would know.\" She was weeping harder now, her tiny frame wracked by sobs. I knelt down in front of her.\n\n\"So, you think it's okay to deceive me so long as I don't know? Do you want me to not trust you, Serisi?\"\n\n\"No!\" she wailed miserably. \"I'm very sorry, Guerin. It was bad. I won't ever do it again. Should you punish me?\"\n\n\"Yes, I should, but I won't. I've never punished you. You're always a good girl. If you do things you know are wrong, I'm going to very disappointed in you. You asked my permission. I told you no and you did it anyway. This is different than when I tell you you shouldn't eat another piece of cake or something. You do that anyway, and it's no big deal. This is a big deal. I didn't want you there, I told you and you did it anyway. That's not how you treat people you love.\"\n\nShe threw herself against me, sobbing deeply and wrapped her arms around my neck. \"I'm sorry, Guerin.\" She drew in great shuddering breaths. \"I won't ever do it again. I'm sorry I disappointed you. It nearly kills me to think about that. I won't ever do it again. Please don't be mad at me. I would rather be punished!\"\n\n\"I forgive you.\" I told her. \"I love you, Serisi. We'll forget about it. Do you love me?\"\n\nShe nodded into my chest. \"Here, dry your face and don't cry anymore. It's okay, baby. You're little and you make mistakes. Everyone does. You just learn from them and don't make them again.\"\n\nShe took my handkerchief and wiped her eyes. She blew her nose and handed me back the crumpled ball. I took it gingerly. \"You're nothing if not thorough.\" I kissed her on both cheeks and she let me go. I stood up and she took my hand. Those chubby little fingers squeezed my big rough ones and the world was right again.\n\n\"How did you do that, anyway?\" I asked her.\n\n\"I can't use the shadows like you,\" she said. \"I tried but they wouldn't move. I listened really hard and then I was there, but not really. I could still feel the water in the spring.\"\n\n\"That's very interesting,\" I said. \"Do you think you could do it again?\"\n\n\"Yes, but it was weird. I don't think I will unless I need to.\"\n\nWe got back to the inn and ate supper. I told her we were going to have to go to the village of Bren and look for the woman that was missing. It would take a week and I asked her if she wanted to stay with Zee or go with me. She wanted to go.\n\n\"A week is too long, Guerin,\" she said. \"I could stand a couple of days, but not a week.\"\n\n\"Do you know that, or will you just miss me?\" I asked her.\n\n\"No, I know. I'll start getting sick,\" she said. \"I'm afraid you won't come back. The longer you're gone the worse it gets. I trust you, but I'm still afraid.\"\n\n\"Okay, I'll take you with me, but I'm always going to come back, Serisi. It's you that will go away some day and not come back to me. That's the way life works. Children grow up and leave their parents. This isn't going to be much fun. I think this woman ran off with her lover. I don't know why, but I need to find out. If she went voluntarily, I'll tell her husband. If she's being held against her will, I'll have to fight. You'll have to stay out of the way. I don't know anyone there with whom to leave you. You'll have to hide.\"\n\n\"I'm never going to go away and leave you, and I could help you,\" she said.\n\n\"No, baby; I can't let you do that. Maybe when you're older, but I can't risk you getting hurt. That would kill me. That would make me sick.\"\n\n\"I could burn them,\" she said. \"I can fight, too. I have my knife. I will if I think you're going to be hurt. I want to be close enough to see.\"\n\n\"I'll let you be close,\" I told her. \"I don't need you to burn anyone. I'm really very good at this, Serisi. I can fight. I'm probably the most dangerous thing you'll ever meet unless you're really unlucky.\"\n\n\"I know you can fight,\" she said. \"You're so gentle though.\"\n\n\"I'm gentle with you,\" I told her. \"I'm gentle with gentle people. I can be very violent, too.\"\n\n\"I remember,\" she said.\n\n\"Okay then, you're not going to get involved, right?\"\n\n\"Not if I don't need to,\" she said. \"You can't make me promise to let you get hurt, Guerin. I won't. This isn't like the other thing. I'll do what you tell me up to a point, but not if it means letting you get hurt.\"\n\nI laughed. \"I can live with that. You do have to promise that you won't help unless I ask you. I won't let you come if you don't promise.\"\n\n\"I promise. I'm done eating. Are you going to eat your pie crust?\"\n\nI gave it to her and we went to bed. She devoured the last bite. \"I'm through, now,\" she said.\n\nI laughed. \"I love you, kitten. Sleep well.\"\n\nShe snuggled back in and she was instantly asleep.\n\nChapter Three\n\nThe trip to Bren was fairly routine. We were attacked once, by two risca. Most of the native animals are some sort of reptile, and the risca look like reptilian cats if that can be imagined. There are no human cats. They didn't prosper there for some reason. The First Humans tried to breed them, but they sickened and died. The risca are about three feet tall and can weigh up to maybe a hundred pounds. If they take you by surprise or if you can't fight they might finish you, especially a hunting pair. They're fairly rare and they became extinct in that neighborhood. I was neither unaware nor unable to fight. I made Serisi climb a tree when I heard them following us and when they came springing out of the undergrowth I dove under the nearest one, rolling to slash open its belly. The other one missed, too, and I came up and slashed it across the eyes. It wailed and I severed its spine.\n\nSerisi climbed down from the tree and came to look. \"You are good at fighting, Guerin. You moved so fast you were just like a blur. Do you think I can learn to fight like that?\"\n\n\"Do you want to learn to fight, Serisi?\"\n\n\"Yes, I want to be dangerous so if the bad men come I can kill them.\"\n\n\"You're already learning to fight. You're half Shai, baby. You'll likely be strong and quick. I think you'll be deadly. You have to work hard at your lessons though.\"\n\n\"I will,\" she promised. \"I want to be Ruby Order, like Trina and you.\"\n\n\"We'll see,\" I told her.\n\n\"Are they good to eat?' she prodded the risca with her knife.\"\n\n\"I don't know. We have food. They don't look appetizing. Do you want to eat one?\"\n\nShe shivered. \"No, it just seems like a waste.\"\n\n\"They attacked us. I wouldn't have harmed them if they had left us alone. We only kill things to protect ourselves and those we love or to eat them. If we take a job to kill things, it's because they're harming people. Remember that.\"\n\nShe nodded. The rest of the journey passed without incident and I tried to teach her things as we traveled. I showed her plants and animals and told her about them. We tracked things and tried to tell what they were doing. She was a very quick study, and she seldom forgot anything I told her.\n\nWhen we got to Bren, there was a taproom and we stopped for a drink. They had cider for Serisi and I got an ale. We sat at a table against the wall.\n\n\"Do you see where we're sitting, Serisi?\" I asked her.\n\n\"Yes, why?\"\n\n\"We're sitting here for a reason,\" I told her. \"We can see the doors so we know who comes in and goes out. No one can get behind us. We aren't in a corner, so we can move either way if we need to.\"\n\nShe thought about that for a minute. \"Do you think we'll be attacked, Guerin?\"\n\n\"No, but I've been attacked before when I didn't think it would happen. It's always best to assume you'll be attacked. That way, there are no surprises.\"\n\nThe barmaid brought our drinks and I asked her if she knew the lover. Ironically, his name was Bron, and he was from Bren.\n\n\"Yeah, I know him,\" she said. \"He has a booth down at the market. Sells trinkets and jewelry. Isn't much good, though, from what I've seen. Just baubles.\"\n\nI thanked her and tipped her. She glanced at Serisi. \"What you doing with an elf girl?\"\n\n\"She's my daughter,\" I told her. \"You have a problem with that?\"\n\n\"No, luv, just curious. You see old Martha down at the Market. She can tell you all about the elves. She's a seer, she is. She can tell fortunes.\"\n\n\"We'll have to do that,\" I said.\n\nShe flounced off and we drank our drinks. \"Why do people call me an elf?\" Serisi asked.\n\n\"Don't worry about it, baby. They're ignorant. That's what some humans call the Shai. They don't know you're half human. They see the white hair and the shape of your ears and just make assumptions. They don't know there are no dark skinned Shai.\"\n\n\"You have white hair, too,\" she pointed out. \"Why is my skin brown, Guerin?\"\n\n\"Some of the Old Stock humans were what people called 'black,'\" I told her. \"I've never seen one, but your mother must have been Old Stock. That's why you're darker than most people. There's nothing different other than the shade. You're all girl under there. Very pretty girl.\"\n\nShe dimpled up. \"Thank you Guerin. You're very beautiful, too.\"\n\nI laughed out loud and a few heads turned. \"Let's get out of here and go find Bron from Bren.\"\n\nA few enquiries led us to Bron's booth. He was a sandy-haired fellow, a little overweight and very friendly. We looked at his wares and he told us all about himself. He had a nice red-stone bracelet in gold, and I bought it for Serisi. I put it on her and she did a little dance.\n\n\"You got any kids, Bron?\" I asked him.\n\n\"Two,\" he said. \"See that house over there with the blue shutters? That's mine and that's my boy out by the fence.\"\n\nWe bid him goodbye and walked over to his house. There was a woman churning butter around back, and we strolled down the fence. I told Serisi to go talk to the boy and I said hello to the woman. Her name was Betts and she didn't look like much to me. There was a lot of her for the two lovers to fight over and a good bit was spilling over the top of her blouse.\n\n\"I've been looking for you,\" I told her.\n\n\"Lots of men looking for me,\" she told me. \"I'm a good wife, though, so go on with you.\"\n\n\"That's not what the blacksmith at Gent says,\" I told her.\n\nShe went pale. \"You here to take me back?\" she asked.\n\n\"Do you want to go back?\" I asked her.\n\n\"No I don't. You'll have to kill me. That bastard got drunk and beat me like a dog every Friday. I'll never go back.\"\n\n\"Okay, it's not my job to take you back. I'm just supposed to find you.\"\n\n\"Don't you tell him where I'm at,\" she said. \"He'll send you back here to make me go back.\"\n\n\"No, he won't,\" I said. \"I won't take the job. I don't kidnap people.\"\n\n\"Well, he'll send someone as ain't got your scruples,\" she objected.\n\n\"Not my affair,\" I said. \"I took the job. I thought you might be here against your will. I'll take my leave now.\"\n\nShe was still talking as I collected Serisi and she followed us halfway out of town, begging me not to tell where she was. We ignored her and she soon fell puffing behind.\n\n\"Why are you going to tell on her?\" Serisi asked.\n\n\"I took the job,\" I told her. \"When you take a job, you do it.\"\n\n\"Why?' she asked. \"She doesn't want him to know.\"\n\n\"It doesn't matter,\" I said. \"If I don't do the job, word gets around and pretty soon no one will hire you. It's our code. If you take the job, you do the job.\"\n\n\"I see,\" she said. \"What if it's a bad job?\"\n\n\"Don't take it,\" I told her. \"I can always say no. That's why jobs go through Jynn. She checks them out to make sure they don't violate our code.\"\n\n\"What if you think she's wrong?\"\n",
        "\"I tell her I won't do it. We only take the jobs we want, Serisi. We aren't slaves. We have the right to say no. That's what being free means: the right to say no.\"\n\n\"Do we have a Baron who rules us and gives us jobs?\"\n\n\"No, baby, we rule ourselves. Like I said, we aren't slaves. That's why we live where we do. No one wants that patch of stone. We won't be ruled; we'd rather die.\"\n\n\"Me too, but you sort of rule me, Guerin.\"\n\n\"Yes, but when you're old enough to take care of yourself, I won't. That's part of my code, not the Order's. I think if you're old enough to support and take care of yourself, you're not a child anymore. I won't tell you what to do, and no one else should either. I don't rule you for my benefit, Serisi. I do it to take care of you because you don't know enough yet to take care of yourself.\"\n\n\"I like for you to take care of me,\" she put her little hand in mine. \"I liked that boy. Why am I the only child at Cliff Keep?\"\n\n\"None of the rest of us has children,\" I told her. \"Most mutants are sterile, Serisi. Do you know what that means?\"\n\n\"No, what is it?\"\n\n\"They can't have children.\"\n\n\"Are you sterile, Guerin?\"\n\nI laughed. \"No, I have you.\"\n\n\"But could you have a baby, like with Zee?\"\n\n\"I don't know. I've never tried or been tested.\"\n\n\"Am I sterile?\"\n\n\"I don't know that either.\"\n\n\"Let's go back and talk to that seer,\" she said. \"I want to know. Maybe she can tell us.\"\n\n\"She's probably a fraud,\" I told her.\n\n\"It would be fun, anyway,\" she said.\n\nI agreed to go, and it wasn't more than a half-mile, anyway. Martha the Seer was the typical wrinkled old crone. She had an evil cackle and long stringy hair. She made my skin crawl, but she was obviously a mutant. We talked for a while and she said some gibberish and held our hands. When she touched Serisi she went rigid and fell to the ground. She looked like she was having a convulsion, and just when I began to be concerned, she sat up.\n\n\"Do you know who this child is?\" she asked.\n\n\"Yes, she's my daughter.\"\n\nShe cackled. \"Come inside. You need to be sitting down.\"\n\nShe drew me an ale and got grape juice for Serisi. We sat on three legged stools and she held Serisi's hand again.\n\n\"This child is the granddaughter of the king of Renatta and the daughter of eldest son of the High Lord of the Elves,\" she said. \"Adelard of Rentalar was a great seer. He had a vision more than 5000 years ago that the kingdom of Renatta would form an alliance with the elves. Their king would marry an Old Stock human and their child would save the elves from a terrible fate. Twelve years ago, that happened. The queen disappeared when she found out she was pregnant. There were rumors that she hated her husband and that she had been tortured into becoming with child. She vanished from sight, and it was rumored that she died in child birth. Three years ago, we heard that the elves were searching for the child and that she was known to be in a monastery of some sort. Where did you find her?\"\n\n\"The Shai attacked Rose Hall. They killed the Sisters of the Rose there. Serisi escaped and I found her fleeing from them. We killed the party and escaped. She's been with me ever since.\"\n\n\"Does anyone know where she came from?\" she asked.\n\n\"No, only you. I intend to keep it that way.\"\n\nShe looked at me in fear. \"Don't kill me,\" she begged. \"I'll never tell. Let me explain why. I can tell she will never fulfill that prophecy. She will either die in rejection of her role, or she will live and bear two children. Her life or death depends on you. If you die in the attempt of the elves to take her, she will die as well. If you live, she will live and the two of you will be together. If she lives, I live. I don't know the connection, but I know if she dies, I will die. I'll never tell that she's with you.\"\n\n\"Don't kill her,\" Serisi said. \"She won't hurt us and she doesn't look edible.\"\n\nI laughed. \"You're safe from us, old woman. If you betray us, I know how you'll die.\" I smiled and she shivered.\n\n\"Is Guerin able to have children?\" Serisi asked her.\n\n\"No, but he will, somehow. You're going to change him. You'll be with him.\" she said. \"How will you do that?\"\n\n\"Don't know,\" Serisi said. \"I can do things.\"\n\n\"Some wicked elf spell, no doubt,\" the Seer cackled.\n\n\"Let's go, Serisi,\" I said. I made a belf sign and instructed the seer that she wasn't to reveal Serisi. She came to, I flipped her a coin and we left. We walked a couple of miles and neither of us said anything. I felt her little hand slip into mine. When I looked down she was smiling.\n\n\"Are you happy, Serisi?\" I asked her.\n\n\"Yes, I'm glad we went back. I don't think she was a fraud, Guerin.\"\n\n\"No, me either. I hope you're not upset about what she said.\"\n\n\"How could I be? I'm going to be with you and you're not going to die,\" she said. \"That makes me very happy, Guerin. You aren't going to leave me or get hurt and die. I think that since I know that, I can stand for you to be away from me for longer than before. Maybe when I want to I can stay home when you go away for a while. Not too long, though.\"\n\n\"How long do you think?\"\n\n\"I don't know. But since I know you're coming back, maybe a few weeks?\"\n\n\"That's good. I love for you to be with me and I'll take you when it's possible, but sometimes it would be best if I didn't have to worry about what I'm going to do with you.\"\n\n*****\n\nThe blacksmith wasn't pleased with me. I dropped Serisi off with Zee and they went shopping. I gave her some coin and she was as happy as a month-old colt. She did a little dance. \"I've never been shopping before,\" she squeaked.\n\nThe blacksmith was her polar opposite. \"Why the fuck didn't you bring her back?\" he shouted.\n\n\"Not my job,\" I told him. \"You hired me to find her, not to bring her back.\"\n\n\"Well if you want to get paid, you'll take your ass back there and get her. You'll get paid when she's standing in my house.\"\n\n\"I don't believe you've thought about this course,\" I told him. \"You signed a contract with the Ruby Order, so I'll give you a choice. The contract says I was to find her and tell you what happened to her. It says nothing about bringing her back. You can honor your contract or I can kill you now.\"\n\nHe called his employees and they gathered around. I wrapped myself in shadow and spoke. \"Last chance. You can't even see me. I'm not just going to kill you, I'm going to kill all these others and burn the place to the ground.\"\n\nHe looked around in confusion and my sword was at his throat. \"Wait, wait!\" he squealed. \"I've decided to pay!\"\n\nI let the shadows melt away, but I kept my sword to his throat. \"Too late,\" I told him.\n\n\"No, no, I beg you!\" he fell to his knees. \"Please, my Lord. I don't know what came over me. I'll double your price!\"\n\n\"I'm not a thief,\" I told him. \"Pay what you owe; give each of these people a toran for being loyal, and you live. If you ever try to welch on a contract again, the entire Ruby Order will come here and kill you and everyone you know, burn your houses down and kill all your animals. Do you understand?\"\n\nHe nodded. I used the tip of the sword to raise him to his feet and a trickle of blood dripped down his neck. His trouser leg soaked as he pissed himself. I sheathed the sword and he hurried away and came back with the coin in a leather pouch. He handed it to me and I stood and watched as he handed out a silver toran to each of his employees.\n\n\"Thank you master Gloom Walker,\" each one said as they got the coin. I nodded and backed out the door. Zee and Serisi weren't back, so I went to the inn and had a meal delivered to Zee's house. I went to the aromatics shop and purchased some herbs and supplies, and a bottle of good-smelling soap. By the time I got back the girls were home, and Serisi had three new little dresses and two pairs of new leather pants and shirts. She also had a pair of sandals to wear with her dresses and good traveling shoes. She had gotten me a new red tie for my ponytail and a small mirror for signaling.\n\nI kissed her and thanked her for my gifts, and she insisted on modeling the dresses. I showed them the bottle of soap and suggested we pour it in the spring and bathe. They loved the idea, and soon there were two naked girls running around collecting towels. We dumped in the soap and the water bubbled up almost immediately; it smelled much less of rotten eggs than the last time we used it. Serisi loved the bubbles and played happily while Zee and I did other things under the cover of the bubbles. We got out in a few minutes and went inside to continue our activities while Serisi played in the bubbles. I wasn't distracted by any mysterious sensations this time and Zee's cry of completion gave me the thrill I had been looking for. She lay across me and we stroked and nibbled until the delivery maid knocked on the door. Zee put on a robe and the pots and pans were set on the table. She got a tablecloth and a blanket and I carried the pots out to the spring. We spread the blanket, the table cloth and the food out, and Zee dropped her robe. We ate naked in the failing sun with the cool breeze blowing, and then sat in the spring again for an hour. Serisi got all pruney looking and we dressed. We hugged and kissed Zee and promised to stop each time we came by.\n\n\"If we don't come by soon, we'll make a special trip,\" I promised her.\n\nWe returned to the inn and went to bed. Serisi put on her nightshirt and climbed in. \"This was perfect, Guerin,\" she told me. \"This is what I want to do the rest of my life. I didn't peek!\"\n\n\"I know, kitten. This was very wonderful being with you on this job. I missed you dreadfully on the last one, and I'd never have gone if I had known you would be sick. Gods, I love you, child.\"\n\nI squeezed her tightly and she wiggled, trying to get even closer. \"Yes, me, too, Guerin. I like Zee a lot. I wasn't afraid when you left me. She knows a lot of things. Guerin, will you teach me to read? Zee read me a book and I liked it. We have a great many books at the Keep, and I want to read them all.\"\n\n\"Of course, Serisi. Everyone should know how to read. Unfortunately, many don't. It seems like only the nobles read, these days. Everyone else employs scribes, but you should learn. You're a princess, after all.\"\n\nA cloud passed over her face. \"I don't want to talk about that,\" she said. \"That scares me, Guerin. I'm going to forget about that and not think about it if I don't have to. I don't want you to talk about it either.\"\n\n\"No, I won't, but we need to keep it in the back of our minds,\" I told her. \"Someday it's going to be very important to us. That's a long time in the future and I suppose the evil of the day will wait for its time. I want you to be happy and not worry, baby.\"\n\n\"No, I won't worry,\" she kissed me. \"I know you'll take care of me Guerin.\"\n\n\"I'll do my best with the reading,\" I told her. \"We should ask Jynn to help us. She reads a dozen different languages. I read only Southern Human and Shai. Some of our books are in the North language, and I don't read that. I can speak it, but not read it. They have a different alphabet.\"\n\n\"I know the alphabet in Southern and Shai,\" she said.\n\n\"Good girl; that will make it easier.\"\n\n\"Sleepy now,\" she yawned. \"I'm going to stop talking.\"\n\nI held her close and stroked her curls. She was so tiny and so innocent and she was caught up in such big things. I watched her sleep, her little chest rising and falling and her lips slightly open as she breathed. She licked them with a little pink tongue and her mouth closed. There was so much for her to learn and so much for me to teach her. The task seemed overwhelming for both of us, but tomorrow would bring what it would. One foot in front of the other and the trail comes to an end.\n\nChapter Three\n\nI took Serisi to the livery the next morning. We had no horses at the keep, but she had seen a horse with the Sisters. She had always talked about them and I paid a groom to give her a riding lesson and tell her how to take care of a horse. She was very attentive and I could see her lips moving as she repeated what he was saying to herself. It was a mnemonic trick she had, and she almost never forgot anything she was trying to learn. He let her ride a horse around the stables and she soon mastered the knack. I bargained with him and bought a bay gelding for myself. It was sort of lazy and gentle, just the way I liked my horses, but well put together. There was a little gruella mare that Serisi loved. It was a pretty thing, high spirited and with four black stockings and a black muzzle. She loved it and I bought it for her.\n\nWhen she saw me paying she flew over and jumped on me. I caught her and she kissed me over and over. \"Thank you, Guerin. I've wanted a horse and you got me one. I'll take very good care of her.\"\n\n\"I know you will, baby. Now we can move faster and carry more. I'm going to get a pack pony, too. We'll take a tent the next job we do. It's going to start getting cooler and we'll be glad to get out of the weather.\"\n\nWe went to the outfitter and got camping gear. A small tent, just big enough for the two of us, and several canvass tarps. I got her her own horsehair pad and blankets, and we made rolls and tied them to the pony.\n\nWe bought tack for the horses and rode out of town. As soon as we were away from the buildings Serisi got down and took the bridle off her mare.\n\n\"What are you doing?\" I asked her.\n\n\"She knows where I want to go,\" she explained.\n\n\"How does she know?\" I asked.\n\n\"I told her, silly.\"\n\n\"I didn't know you could do that.\"\n\n\"I didn't either,\" she said. \"I can, though, and she wants to help me. I told her I was going to take care of her and she likes me.\"\n\n\"Can you do that with my horse?\"\n\n\"Yes, but not for you. You can't feel him and he can't feel you.\"\n\n\"I'm handicapped,\" I laughed.\n\n\"Oh no, Guerin; you can do lots of other things I can't. I can't do your signs.\"\n\nIt was very comfortable to ride along with her and we talked about all kinds of things.\n\n\"Tell me about the Shai,\" she said.\n\n\"They were here on Eiru when humans arrived,\" I told her. \"We believe they came here from some other place, as well. When the Mother Planet began to die, great ships were launched across the skies in search of a new home. There was a great rift in the sky and the ships went through. The First Humans came here and something happened to their ship. It wrecked here and many of the First were killed. They found that the laws of nature were different here. The sun was different and many devices they used failed and wouldn't work here. They lost much knowledge and began to live as we do now. For hundreds of years we increased and kingdoms were formed. Powerful men sought influence and riches, and then we found the Shai. They are a different people, having powers such as yours. They live long, perhaps forever if they are not killed. They have few children, and there have never been very many of them. Humans often call them elves. I don't know why. They have two kingdoms in the North. They sometimes employ the orders, but they have little to do with humans. There was a great war many years ago, and many humans and Shai were killed. There has been an uneasy peace for many decades. I know other things, but that is the history.\"\n\nShe thought in silence for a long time. I could see the wheels turning in that little head, and I knew she would tell me what she was thinking when she got it worked out in her head. We didn't travel much faster with the horses than we had on foot. I can run a horse to death on foot over a few days, but they can carry more and their rider will be in better shape to do whatever needs to be done after they arrive. After the first day, Serisi climbed down and promptly collapsed to the ground.\n\nI sprang to help her but she waved me away. \"My legs are made of strings,\" she complained. \"What's happened to me?\"\n\nI laughed for a long time while she glared at me reproachfully. \"I see nothing funny,\" she said indignantly. That made me laugh harder and I scooped her up and hugged her.\n\n\"You aren't used to riding,\" I told her. \"You'll be sore tomorrow.\"\n\n\"So, my soreness causes you amusement?\" she asked.\n\nI collapsed laughing with her on top of me. She beat me with her little fists and rolled off, giggling hysterically and I tickled her until she shrieked. We hobbled the horses and made camp. Putting up the tent for the first time was challenging until we got the ropes and stakes figured out. We got a fire built and supper was on when we got a hail.\n\n\"Mind if I join you?\" a voice called from the gathering darkness.\n\nI bustled Serisi back into the brush and she drew her knife. \"Stay here until I give you a signal,\" I told her and she nodded.\n\n\"If you're friendly, come in and sit down,\" I called.\n\nI drew in the shadows and the flame flickered where I had been. A tall dark man in leathers materialized, and he put his sword down on a rock beside the fire. \"I mean you no harm,\" he said, stretching his hands out toward the fire.\n\nI let the shadows slip away and he started when he saw me. He looked me over and nodded.\n\n\"You from one of the Orders?\" he asked.\n\n\"Guerin, of the Ruby Order,\" I introduced myself.\n\n\"Name's Rupert. Constable out of Gent,\" he said. \"You coming from there?\"\n\n\"Yes, we completed a contract and we're on our way back to the Order,\"\n\n\"Who's we? You got a buddy out in the brush?\"\n\n\"Yes. I didn't know if you were a danger to us.\"\n\n\"You didn't do nothing back in Gent to make me take an interest in you, did you?\"\n\n\"No, a missing person case.\"\n\n\"Not that I'd stand a chance against a Gloom Walker, anyway. I'd have to try though. My duty, you know. Call your buddy in and we'll eat. Got some good bread and a bottle of wine.\"\n\n\"Serisi, you can come out,\" I called.\n\nShe came out of the brush, putting her knife away.\n\n\"She's an...\"\n\nI cut him off. \"Don't say it. You'll upset her, and then I'll have to do something about it. Duty, you know.\"\n\nHe gave a nervous laugh. \"Now don't you go assaulting a constable. It's against the law!\"\n\n\"You're outside your jurisdiction,\" I told him. \"I'd like for you to explain to us about this 'duty' thing.\"\n\nSerisi was listening, but she didn't say anything.\n\n\"The king has laws, they need to be enforced.\"\n\n\"Why?\" Serisi spoke up for the first time.\n\n\"Why, without laws, we'd have anarchy in the streets,\" he said.\n\n\"So, if being a mutant was against the law, you'd have to enforce the law?\" she asked.\n\n\"Right. It'd be nothing personal, you understand. It's my duty.\"\n\n\"What if being human was against the law?\" she asked. \"Would it be our duty to arrest you?\"\n\n\"You're not an officer of the law,\" he said.\n\n\"What if I was?\"\n\n\"It's not against the law to be human. That would be silly.\"\n\n\"The Shai don't think it's silly,\" she said. \"It may be their duty to kill you.\"\n\n\"I told you, it's nothing personal. Just doing my job.\"\n\n\"So in order to do your job you would arrest people whose only crime is being what they are?\"\n\n\"The king makes the law, I just enforce it. What's all these questions?\"\n\n\"She needs to know about people,\" I told him. \"There are all kinds and she needs to know how people work.\"\n\n\"Ah, something like a tutor, are you?\"\n\n\"Something like that. You're welcome to share our fire and our food and drink.\"\n\n\"And you mine,\" he said. \"Let's fry up some of this bread to go with the meat and I'll open the bottle.\"\n\nWe swapped stories over the fire and he did have a decent bottle. I gave Serisi a little swig and she shivered. \"That's disgusting,\" she said. \"How can you drink that? Are you trying to poison me?\"\n\nWe laughed. \"It's an acquired taste, child,\" I told her.\n\n\"It's rotten! I don't plan to ever acquire that taste. It tastes spoiled, Guerin.\"",
        "We called it a night and Rupert wrapped himself in his blankets. Serisi and I retired to the tent and she pulled off her clothes and put on her nightgown. She pulled her pad over close against mine and didn't use it. \"I like to sleep where I can feel you,\" she explained. That usually meant snuggled into my chest with my arms around her and I didn't complain. Her little body put off an enormous amount of heat and she felt soft. She smelled good, too.\n\n\"I don't like that man,\" she whispered.\n\n\"Why not, baby?\"\n\n\"He thinks that his job makes him something he's not.\"\n\n\"Explain,\" I told her.\n\n\"He thinks he's different than other people because he's a constable. He thinks that he can do horrible things because his position means that he doesn't live by the same rules other people live by.\"\n\n\"You're very perceptive, Serisi. He uses force against his fellows. There's never any excuse to behave violently toward people that aren't behaving violently toward you. Remember that. He's human, too, he's just forgotten that. We'll remind him. You already did that when you questioned him. He's not used to being questioned.\"\n\n\"He's afraid of you,\" she said. \"He's afraid of me, too, but not like you. He doesn't know what to think about me and he's not used to that. He knows he's no match for you, though.\"\n\nShe stretched and yawned and it was contagious. She kissed me and told me she loved me and she was asleep. When we got up he was rolling up his blankets. We toasted bread and cheese and he was on his way.\n\n\"Thanks for sharing your fire,\" he said. \"Don't meet a lot of friendly travelers.\"\n\n\"Good luck to you, Rupert.\" We shook hands. I picked Serisi up and we disappeared into shadow. He looked around for a minute and hurried on his way. She was laughing as I set her down, and we packed our gear, collected our horses and went on our way. The first snow fell when we were still a night away, and it was her first sight of it. It didn't snow much at this latitude, and she played in it until she was shivering. She came and warmed herself by the fire and then went back. She hit me with a snowball when I came out of the tent and we had a war. I caught her and scrubbed her face with the snow while she laughed helplessly. We warmed ourselves at the fire again and she came and sat on my lap.\n\n\"Guerin, why does it snow?\"\n\n\"It would be rain if it wasn't so cold,\" I told her. \"The cold freezes the rain and it falls as snow.\"\n\nShe thought about it for a while. \"I could make it warm,\" she said.\n\n\"How?\" I asked her.\n\n\"Don't know, but I could,\" she said.\n\n\"How big an area would be warm?\"\n\n\"Don't know. From here to the cliff there?\"\n\nIt was a quarter mile away. \"Gods, Serisi; can you really do that?\"\n\n\"Yes, I could make it travel along with us, too, if I didn't have to do too big a place.\"\n\n\"How do you know?\"\n\n\"I can't tell you, I just know.\"\n\n\"How warm can you make it?\"\n\n\"Burning, if it's the size of the camp. Maybe just melt the snow if it was bigger.\"\n\n\"We'll have to ask Jynn about this. I wonder if it's just you, or all the Shai can do that?\"\n\n\"Don't know. Let's go to bed.\"\n\nI lay awake for a while. This little baby was immensely powerful. I didn't think she knew just what an amazing girl she was. I thanked the Gods she was mine. We entered Cliff Keep in the early afternoon, and Trina was there to greet us. She took us to the kitchen and fed us. Jynn came in and I gave her the money for the contract. We talked for a bit and life went back to normal for a while.\n\nWe started teaching Serisi to read the next week. We all took turns with her education and it went well. She worked hard at her learning and she was scary smart. She was reading simple books in no time, and she quickly graduated to harder ones. She read to me constantly, and I read to her while her little finger followed the words on the page. I kept her active, too. We fought with wooden swords and she threw knives and stars. We ran the obstacle courses and she had amazing agility and balance. Marrat was quite an acrobat, and he taught her tumbling. She could juggle four apples and she got very good with knives.\n\nCorwin came back from a job somewhere in the north and brought her a present. He had acquired two long, slender Shai daggers of some strange silvery metal. They didn't rust and held an edge better than anything I had ever seen. They had ornate sheaths and he gave them to Serisi. She practiced with them constantly, and became so quick and dangerous with either hand that Hal was quite satisfied that she could take nearly anyone in a fight. She was very quick, even by my standards. Maybe she couldn't take a seasoned fighter yet, but in a few years she was going to be one tough girl. Jynn had taken her under her wing and they were trying to find out the extent of her abilities to do Shai kinds of things. The problem was, Serisi really had no idea what she could do. Everything was a surprise to her. When she encountered a situation, she suddenly became aware that she could do something like communicate with horses. It was very frustrating for her, and she talked to me about it.\n\n\"Guerin, can I ask you something?\"\n\n\"Of course, tiger; what do you want?\"\n\nSince she was snuggled up against me in bed, the 'tiger' reference made her giggle. \"I wonder if we could find a Shai and ask them some questions about me?\"\n\n\"That sounds like a bad idea to me. What if they attack us or try to snatch you?\"\n\n\"Couldn't you do a sign and make them help us and then forget?\"\n\n\"Maybe, I've never tried a calef sign on a Shai. If it didn't work we would have to kill them. I don't like to use that sign, Serisi. It seems like raping someone's mind.\"\n\n\"What is 'raping?'\" she asked.\n\n\"Something like what Zee and I did when you watched us, except one of the people is unwilling and the other one forces them.\"\n\n\"Why would anyone do that?\" she blushed a little. \"How could they do that? You can't force someone to love you.\"\n\n\"It has nothing to do with love, baby. Some people want power over other people. That's one way they show their power. It's evil and disgusting. Some people are evil.\"\n\nShe thought about it for a while. \"I see why you said that. You mean you force people to do things they don't want to do.\"\n\n\"Yes, that's it.\"\n\n\"What if they're evil people? We wouldn't mind making evil people do things, would we?\"\n\n\"How would we know?\"\n\n\"We could watch them for a while. If they do bad things, we would know.\"\n\n\"Maybe that would work. We'll think about it and if we run across any Shai we'll see. They rarely come this far south. It could be a long time.\"\n\n\"Can't we go north?\"\n\n\"We could, but I'm afraid to take you where they might be.\"\n\n\"Why?\" she asked.\n\n\"I'm afraid they might try to take you away from me.\"\n\nShe kissed me. \"You do love me, don't you Guerin?\"\n\n\"More than I can ever tell you.\"\n\n\"How do we know that I'm not supposed to be with them?\" she asked. \"Maybe what they want is something I should do.\"\n\n\"Serisi, have you forgotten what they did to the Sisters?\"\n\n\"No, but what if they're desperate? What if they need me to do something so badly that they will do anything?\"\n\n\"Killing the Sisters can never be justified. If we were desperate, would we kill Uncle Corwin or Jynn?\"\n\n\"No, I would rather die myself.\"\n\n\"Exactly; that's how we know that the people who want you are evil. There is no good reason to do evil things.\"\n\n\"I suppose you're right. But we'll still try to find a Shai, right?\"\n\n\"Yes, honey; we'll try.\"\n\n\"Thank you Guerin. It's hard to be me. I'm very strange, aren't I?\"\n\nI laughed. \"Yes, there's no one else like you. I know how hard it is, baby. I'm sorry I'm not wiser. I wish you had a mother and father to teach you things. I know how frustrated it makes you. I know it's hard to be patient. Growing up is very hard and you're doing well. I love you, little girl, and I'm proud of you.\"\n\nShe turned her back to me and scooched up against me. \"I don't need anyone but you,\" she said. \"Night Guerin, I love you, too.\"\n\nI held her tight and we drifted off.\n\nChapter Four\n\nThe arrow punched into the ground at my feet. I looked up and Serisi was laughing down at me from the top of the wall. She danced with joy.\n\n\"You're dead, Guerin! I killed you again.\"\n\n\"Careful, child; you'll fall and break your neck and then you'll be the one that's dead.\"\n\nShe dived off the wall and I sucked in my breath. She landed on her feet and did a roll, coming up to stand directly in front of me. She pressed herself against me and put her arms around my waist. I wrapped her up and squeezed her until she groaned.\n\n\"Well done,\" I told her. \"You scare me to death, girl. That was a very high jump. I didn't look for you to be up there.\"\n\n\"Yes, it was very clever of me, wasn't it? I've killed you three times today, Guerin.\"\n\n\"What if I had been cloaked?\"\n\n\"That's cheating,\" she objected. \"You aren't to do that. No one that is chasing me will be able to do that.\"\n\n\"We don't know what the Shai can do. Could you sense me cloaked?\"\n\nShe cocked her head and thought. \"No, but if I knew you were coming I could make a trap.\"\n\n\"What kind of a trap?\"\n\n\"Light, to drive away the shadows?\"\n\n\"Can you do that?\"\n\n\"Yes, but I would have to make sure you were coming the right way.\" She rested her head on my chest.\n\nShe was growing very tall. She was thirteen, and she was so beautiful she took my breath away. Her hair had grown to a silky white mane that floated around her and those eyes were glacier blue pools that could drown a man. She took my hand and we walked up the steps to the library. She would have her lesson with Jynn before supper, and I had things to do. I left her exploring some tome and went to find Corwin. When I came into the hall for supper she was whispering with Trina and they stopped talking when I came in. I felt like they had been talking about me, but I didn't say anything. We went to our rooms after the meal and she changed into a dress like she always did. We played a game of cards and talked for a while. She began to yawn after a bit and told me she was going to bed. For the first time since we had been together she went to her room to sleep. She kept all her stuff in there, but so far as I knew, she had never taken anything other than a nap in her bed. I wondered what was going on. She didn't seem mad at me, but there was something wrong. I went to bed and had a difficult time falling asleep. There was no warm little girl to snuggle up against me and I felt desolate. I finally slept fitfully and when I went to collect her for her morning run she came out in a dress.\n\n\"I'm feeling indisposed today,\" she told me.\n\n\"Are you sick, baby?\" I asked her.\n\nShe flushed. \"No Guerin, don't ask me any questions. I love you and you must trust me.\"\n\nI hugged her and she kissed me and went back into her bedroom. I went looking for Trina. She was on the archery range and we loosed a few shafts together.\n\n\"Is something bothering you, Guerin?\" she asked.\n\n\"Something's wrong with Serisi,\" I told her. \"I think she's sick. She told me she wasn't going to run this morning,\n\nand when I asked her about it she wouldn't tell me. She said she was 'indisposed'.\"\n\nShe laughed. \"You're an idiot, Guerin.\"\n\n\"I know, but what am I being an idiot about this time?\"\n\nShe laughed again. \"You're such a man! She's growing up, Guerin. Do you know what happens to girls when they grow up?\"\n\n\"They grow breasts?\"\n\n\"Yes, that, too. She's going to be indisposed every month about this time. Do you understand?\"\n\n\"Oh,\" comprehension dawned on me. \"Gods Trina, is she really that old?\"\n\n\"Yes, Guerin; she's becoming a woman. You need to adjust the way you see her. She isn't a little girl anymore. She's a young woman.\"\n\n\"I guess I am an idiot, Thanks, Trina. I've got some thinking to do.\"\n\n\"You're a very nice idiot,\" she laughed.\n\nI went and looked after the horses and then went back to our rooms. Serisi was reading on the sofa and I brought her some cider and had an ale myself. She smiled at me and scooted over so she could lean against me. I put my arm around her and petted her hair. I looked her over and she was something new I hadn't noticed. There was a swelling in the bodice of her dress and I could see the top of cleavage peeking out. Her waist was as thin as ever, but there was now a swelling at her hips as well. She was developing an hourglass shape. Her lips looked fuller than ever and I noticed how long her hair was. She must have felt my eyes on her because she peeked up at me. I could still see that mischievous little girl glint to her eyes.\n\n\"What?\" she asked.\n\n\"Nothing,\" I told her. \"I was just noticing how beautiful you are.\"\n\nShe flushed and wouldn't meet my eyes. \"Thank you Guerin. I'm just the same as I was last week.\"\n\n\"Yes, but you're not the same as you were last year,\" I told her. \"My baby is getting big.\"\n\nShe giggled. \"I'll always be your baby, Guerin.\"\n\n\"You know you can talk about things to me.\"\n\nShe sighed. \"Yes, I know, but sometimes I just need to talk to girls. I would talk to you about anything important.\"\n\n\"Thank you, Serisi.\"\n\n\"For what?\"\n\n\"For being so sweet. I'm so proud of you, kitten. I'm so lucky to be your father.\"\n\n\"I'm glad you are,\" she said, \"but you're not really, you know.\"\n\n\"Yes, I know, but I'm lucky anyway.\"\n\n\"Guerin, have you ever heard of the Shoroku?\"\n\n\"Yes, is that what you're reading about?\"\n\n\"Yes, tell me what you know.\"\n\nI had only seen one in my life. They were here before the Shai, and human scholars believed that they were native to this world. The Shai legends tell of great battles fought between themselves and the Shoroku. They are very secretive and there was reason to suppose they resented the presence of both races on their world. They had abilities that no one else shared, and no one I had ever met knew much about them. I told her about what I knew and she was silent for a while, staring into the fire.\n\n\"I think they're important to us, Guerin.\"\n\n\"How do you know?\"\n\n\"It's one of those things. I can't tell you, but I know. Do you know where to find them?\"\n\n\"I know where to find one,\" I told her. \"I did know where to find one. It was years ago.\"\n\n\"Can we go there?\"\n\n\"It's a long way, baby. I have a job next week.\"\n\n\"Is it in the right direction?\" she asked.\n\n\"Yes. Do you want to go there?\"\n\n\"Yes, I'll go with you on your job and then we'll find the Shoroku. Can we?\"\n\n\"We can if you think it's important.\"\n\nWe planned it out all week and when the weekend approached she was back in my bed. \"I missed you,\" she said.\n\n\"Yes, me, too,\" I told her. \"Do you want to sleep in your bed now? It's okay, Serisi, if you do.\"\n\n\"No, this is my bed,\" she said. \"I was just there temporarily.\"\n\n\"Are you sure? I know you're growing up.\"\n\n\"What do you mean?\" she asked.\n\n\"Well, you're changing, baby. Your chest is growing and your shape is becoming different. If it makes you uncomfortable, I understand.\"\n\n\"The only thing that will make me uncomfortable is you talking like that,\" she said. \"I know I'm changing. I'm going to look like Zee or Trina. You don't mind being in bed with Zee.\"\n\n\"I don't mind being in bed with you,\" I told her. \"That's not what I'm saying.\"\n\n\"You know how I feel about you,\" she told me. \"I plan to be in this bed the rest of your life.\"\n\n\"Yes, I know. I didn't know if that was something you'd grow out of.\"\n\n\"No, I love you more every day,\" she said. \"I'll never grow out of that.\"\n\n\"Okay, we won't talk about it anymore until you want to,\" I told her. \"Remember, I love you and I want you to be happy.\"\n\n\"I am happy,\" she wiggled back against me. \"Hold me and I'll be even happier.\"\n\nI wrapped her up and everything was okay.\n\nChapter Five\n\nWe had beasts to kill. I wasn't sure yet what they were, but two children had been attacked. One had been killed and dragged off and one got away. We talked to her and she wasn't much help. It had been nearly dark and she could only tell us that it had claws, red eyes and teeth. The claws must have been pretty big, based on the size of the slash on her leg. It was suppurating, and evidently there were some nasty bacteria on those claws. I told her parents she was infected and that I could help her. They were a superstitious lot and I heard them whisper about \"magic\" and \"devil.\" In the end they agreed and I put her into a trance with a maleph sign.\n\nI cleaned away the infected flesh and poured in alcohol and then wine. Serisi was looking a little queasy, but she wouldn't leave.\n\n\"I can help her, Guerin,\" she said.\n\n\"What do you mean? How can you help her?\"\n\n\"I can make her blood clean,\" she said.\n\n\"How?\"\n\n\"I don't know. I just can. It's like how I can burn things, except different.\"\n\n\"Will it hurt you or her?\"\n\n\"No, but it's going to make me tired. I can tell.\"\n\n\"Do you want to do it?\"\n\n\"Yes, I can help her. It would be... wrong not to.\"\n\n\"Go ahead,\" I told her.\n\nShe got a cute little frown on her face and her little white eyebrows drew together. She seemed to concentrate briefly and then her knees started to buckle. I sprang and caught her before she could collapse.\n\n\"I'm okay,\" she said. \"I need to sit down for a minute.\"\n\nI eased her into a chair and she didn't move for several minutes.\n\n\"I'm okay, now. Let's leave, Guerin. I don't like her parents. They think we're evil.\"\n\n\"I know. Don't worry about it, Serisi. They're ignorant.\"\n\n\"They're not just ignorant,\" she said. \"They're malevolent. If we weren't able to protect ourselves they would harm us.\"\n\n\"That's a big word,\" I laughed. \"I know what you mean, though. It's superstition risen to the level of malice. They're going to pay us. We'll get the job done and leave. I'm glad we were able to help the girl. You're a nice person, Serisi.\"\n\n\"It isn't her fault,\" she said.\n\nWe spent the night a few miles away from town. In the morning we went to where the children were attacked. The ground was torn up pretty good and the townspeople had milled around, obscuring the signs. I picked up a blood trail and we ran down it. I could smell it now. The rich, iron smell of blood drew us along and we were climbing steadily through the trees. We came to a stone outcropping and the body was there. Serisi turned quickly and vomited. It was an ugly scene. The child was half eaten and I quickly led her away. I went back and saw some footprints, clearly outlined in the dirt around the outcropping.\n\nI went back to Serisi and she was recovered. She was rinsing her mouth out with water and she spat. \"What did that, Guerin?\" she asked.\n\n\"It's called a vorca. It's a large lizard sort of thing. I think there are three of them. They're not fast, but they ambush. We're going to have to be careful. I need to carry you.\"\n\n\"Why?\" she asked. \"I can help you.\"\n\n\"I want to cloak,\" I told her. \"Once we find them, we'll shaft them. I don't want to get close. They have nasty things on their claws and teeth. If they cut us or scratch us we'll be like that girl back there. It's almost like poison.\"\n\nWe strung our bows and she climbed onto my back. I drew in the shadows and we moved through the trees down the trail. We had gone perhaps a mile when she punched me. I looked back at her and she pointed to her ears. I listened and I could hear it. There was the sound of whistling breath ahead about twenty yards. There was a large deadfall and I could see them. I pointed and she nodded. We backed off ten yards and I let the shadows slip away. The beasts roared and shuffled toward us. There were four shafts in the air before they had gone ten feet. Two more followed and they were down.\n\nSerisi had cast her shafts well. Two were buried in eyes, and the third was a near miss. The beasts thrashed, reflexes animating them even though they were dead.",
        "\"We'll have to leave our shafts,\" I told her. \"They may do this for hours.\"\n\nI drew my sword and slashed off a foot to show the villagers. I wrapped it carefully in leather and put it in my pack. The thing smelled putrid and it made Serisi gag. We collected our money and threw the thing in the fire. We didn't waste any time in the village. I bought some apples and cheese from the merchant and we were on our way.\n\nWe journeyed north into the gathering cold and the breath of frost dogged our steps. We were heavily dressed, but Serisi suffered. She warmed herself until exhaustion forced her to stop. The snow fell in a blanket and we gradually climbed into the mountains as the cold grew still more bitter. We sought shelter beneath cliffs and made do with snow banks. Our tent saved us, and we dreaded leaving our blankets each morning. Our horses plodded as the winds whipped across us and we huddled within our robes as we rode.\n\nShe never complained, but I could tell the cold and the stillness wore on her. On the fourteenth day of our journey we came to a high pass and began to descend.\n\n\"How much farther do we have to go, Guerin?\" Her teeth chattered and her voice was shaky.\n\n\"Only a few more miles, Serisi, and then we can rest and recover for our journey back.\"\n\nShe bowed her head and rode into the teeth of the wind. A crack opened in the rock face ahead and we turned in. The worst of the wind was blocked by the towering walls and we wound up a steep and crooked trail. At the end of a long, miserable way we came to the cave where I had encountered the Shoroku. If it was still alive our journey had come to an end. Serisi made a light, somehow, and we went inside. Her hand glowed and I raised an eyebrow.\n\n\"It's a little thing,\" she said. \"I can do it indefinitely.\"\n\nI nodded and we walked for perhaps a mile into the mountain. The air grew warm and we shed furs. We came to a great chamber and there was a fire and furniture inside. A small form hunched over an armorers bench, and a hammer rose and fell.\n\n\"Albatar, we have come to ask you questions,\" I spoke.\n\nHe glanced at us. \"I know.\" His voice was high pitched and rough. \"I have no answer you wish to hear.\"\n\n\"How do you know?\" Serisi asked.\n\n\"I do not know you,\" he said. \"Guerin, this is a being of great power. Why have you brought her here?\"\n\n\"She is ignorant of her power. She wishes to learn.\"\n\n\"If I teach her, she may break the world,\" he said.\n\n\"I have no such intention,\" she said. \"I want to know what I can do so that I can protect myself and those I love.\"\n\n\"And who are those you love?\" he asked.\n\n\"Guerin, I love Guerin,\" she said.\n\n\"What of the Shai? What of your father's people? Do you feel no love for them?\"\n\n\"No, I don't know them. I believe them to be evil,\" she said.\n\n\"There are many shades of evil,\" he said. \"I am evil. To many, Guerin is evil. You are regarded as evil yourself by many. The Shai believe you will save them from us.\"\n\n\"Who, exactly, is us?\" I asked him.\n\n\"My people. We will attempt to drive the Shai back through the rift.\"\n\n\"How many of you are there?\" I asked. \"I doubt you have the power.\"\n\n\"Perhaps not. We will make the attempt, anyway. I would not aid my enemies.\"\n\n\"We aren't your enemies,\" Serisi said. \"I don't know you well enough to be your enemy.\"\n\n\"No? Neither do I know you. I do like the way you think. You refuse to generalize. You make it personal.\"\n\n\"We're people. You're a person. I don't give a damn about anything but those I know,\" she said. \"Tell me what I can do so that I can keep the people I know safe.\"\n\n\"What do you want to know exactly?\" he asked.\n\n\"Don't you know?\" I asked him. \"You can read me like a book. You can tell what I want to ask before I open my mouth.\"\n\n\"Yes, but her mind is behind a wall and under a mountain. I will do what I can. What will you do for me?\"\n\n\"We'll tell you stories, share our wine and food with you,\" I told him.\n\n\"Yes, I wish to hear those stories Master Gloom Walker. Come and sit and we will drink wine and eat. I offer you my hospitality. How long will you stay?\"\n\n\"As long as we need to,\" I said.\n\nSerisi opened her pack and we took out 10 bottles of wine we had packed. I had remembered from my last visit to this place that Albatar loved our wines. He had a large bird on a spit over his fire and tubers roasting below where the fat from the bird could drip over them. We ate and I told him of our last contract. He was very interested in the poisons found on the beasts and we told him what we knew.\n\n\"How comes a mutant human and a hybrid Shai to be together?\" he asked.\n\n\"Guerin saved my life when I was three,\" Serisi told him. \"He adopted me and became my father. We've been together ever since.\"\n\nI chuckled. \"I still believe that she adopted me. It was a mutual decision.\"\n\n\"Do you intend to remain with him, girl?\" he asked.\n\n\"Yes. I'll never voluntarily be apart from him.\"\n\n\"Do you understand the weight of this decision?\"\n\n\"No, what are you talking about?\"\n\n\"I know who you are, girl.\"\n\n\"Stop calling me girl,\" she said. \"I have a name. It's Serisi. What do you mean, 'you know who I am?'\"\n\n\"You are the key to opening a rift to the Shai worlds. They lost that in their war on us. They will stop at nothing to regain that. My people will stop at nothing to keep that from happening. The humans will be caught in the crossfire and they may destroy us both. Which side will you choose?\"\n\n\"None,\" she said. \"I am not a pawn to be used. I'm on my own side. I won't open rifts, I won't serve evil men and I'll be free or die.\"\n\n\"Guerin is formidable. The orders may be able to protect you. They would never allow one of their own to be taken. You live in a fortress. No one knows where you are. What relationship do you intend with him?\"\n\nShe blushed and glared at him. \"That isn't any of your business.\"\n\n\"If you require my help, I need to know. Your choices will make things known to me that are now hidden. I cannot see into you, but I can see into him. I can see how your choices will affect him.\"\n\nShe glanced up at me. \"I... I... I'm going to marry him.\" She burst into tears. I knelt by her chair and hugged her tightly.\n\n\"Why are you crying, Serisi? You've always told me that. This isn't news to me.\"\n\n\"Yes, but those were the dreams of a little girl,\" she wept. \"I'm desperately in love with you, Guerin and it embarrasses me.\"\n\n\"No more than I love you,\" I told her. \"You're my heart, Serisi. You know that.\"\n\n\"Much that was hidden becomes clear,\" Albatar said. \"I can see that you are able to do many things. You can heal wounds, incinerate enemies, call lightning from the skies, command beasts and move objects without touching them. You can control minds and look into the future. You are not invincible. At this moment you could be killed by nearly anything. So long as Guerin remains as your companion, he will protect and care for you.\"\n\n\"Did you know you can call lightning from the skies?\" I asked her.\n\n\"No, I can't do that,\" she said.\n\n\"Some of your power will not manifest until you are older,\" he said. \"The Shai mature slowly and live long.\"\n\n\"Can you teach me to control and do these things\" she asked him.\n\n\"No. I have no ability to do any of the things you can do, neither can I instruct you.\"\n\n\"Can we stay with you a few days and recover for our trip home?\" I asked.\n\n\"Why do you not transport yourselves?\" he asked.\n\n\"I don't understand?\" I said.\n\n\"Serisi is able to form a rift and you may step through at any place she chooses.\"\n\n\"Baby, can you do that?\"\n\n\"Yes, I guess I can,\" she said. \"I didn't know until now.\"\n\n\"You should be wary of this,\" he said. \"The Shai will be able to sense the opening of the rift and its location. If you don't want to be found, you should only use your ability rarely and never in the vicinity of your home.\"\n\n\"You could take us out of the snow,\" I told her.\n\nWe spent the night in the warm cave and in the morning we gathered our horses and gear. Serisi made her cute little frown and a drifting and shimmering fog appeared over the trail. The horses were panicked and we had to cover their eyes before they would approach it. We stepped in and the sun was shining. It was still cold, but I recognized the terrain. We were still a long way from Cliff Keep, but we had moved several hundred miles south. Serisi was weary from creating the rift, and I built a fire for her and she stared into the flames while I set up camp.\n\nShe didn't move except to shift positions until it began to grow dark. We ate and she went into the tent while I cleaned up. She was lying down when I entered and just a little ball under the blankets. I took off my leathers and crawled in with her. She immediately rolled to lie half over me with her head pillowed on my chest. She was warm and soft and she smelled like campfire and faintly of girl. I ran my fingers through her hair and she sighed.\n\n\"Guerin, I'm so confused and worried,\" she said.\n\n\"I know, Serisi. Let tomorrow take care of itself. It's enough for me just to be here with you. If we die tomorrow, I'm content. I got to be here, hold you in my arms and tell you I love you. If we live tomorrow, that's just one more day I get to be with you. I want many of those days, but I'm content.\"\n\n\"You comfort me,\" she said. \"You always know just what to say. How did you get so wise?\"\n\n\"I've made lots of mistakes,\" I laughed. \"I learned from them.\"\n\n\"Was adopting me a mistake, Guerin? Do you regret it?\"\n\n\"To tell you the truth, I had no such intent, Serisi. I decided I couldn't allow the dog to eat you. Beyond that, I had no plan. You sort of made up my mind for me. As soon as I got to know you, I loved you. You've been a lot of inconvenience to me. You've complicated my life in ways I couldn't have imagined and I would have hated the idea. When you love someone, you become vulnerable. I avoided that. I don't regret a single moment. I never knew what it meant to be happy until the first time you told me you 'yoved' me. I thought I did, but I was mistaken.\"\n\nShe kissed the scar on my right cheek. \"I still yove you,\" she said.\n\n\"Thank you, baby. I know we have a lot to digest and think about. Circumstances have changed but that doesn't mean we have to. I intend to go on living our lives just the way we did before. If circumstances change again, we'll adapt.\"\n\n\"Yes, I like that,\" she said. \"Do you mind if we sleep like this?\"\n\n\"Well, you weigh a ton, but other than that, I can't think of anything better.\"\n\nShe chuckled and wiggled around until she was comfortable. I put my right arm around her and we drifted off. When I woke up I couldn't feel my arm. It was still dark and I eased her head to the rolled up blanket we were using for a pillow. Her eyes opened a slit and she scooted around until her back was pressed against me and we went back to sleep.\n\nChapter Six\n\nLife went back to normal when we got home. Serisi went with me on every job I did. She was becoming very lethal. I was depending on her more and more. She could get information out of a stone and she did most of the leg work. I did most of the heavy lifting and she stayed in the background. She got in a couple of scrapes, but nothing she couldn't handle. We had one interesting job just before her sixteenth birthday. We were collecting a debt for the Barron of Cold Harbor, and Serisi was trying to locate the debtor. Obviously, he didn't want to be found and she asked around for anyone that had known him before he fled. I was searching his house and a dock worker told her he used to hang out at a local tavern. She went looking for him and it was a pretty rough place. She got some information and when she left three of the Baron's soldiers though they would have a little fun with her.\n\nThey followed her for a while and she noticed them and told them to get lost. One of them said something about her ears and his buddy said something crude about the way she was built. They seemed to have the impression that a Shai girl shouldn't be in their town and she needed to pay a toll. The toll would be a roll in the hay with the three of them. She didn't care for that idea and they decided to get rough. That was a mistake, and the first thing I heard about it she came running to me and there were six more soldiers chasing her. They drew up short when they saw me.\n\n\"This little bitch with you?\" one of them asked. He seemed to be the man in charge.\n\n\"That's right,\" I said.\n\n\"She cut up three of the Baron's men down by the dock. We're going to arrest her,\" he said.\n\n\"No, you aren't,\" I told him. \"Serisi, is that true?\"\n\n\"Yes, they tried to rape me,\" she said.\n\n\"Well, I guess you know who to arrest,\" I told them.\n\n\"She's a lying...\"\n\nI cut him off. \"You're about to do something very foolish.\"\n\n\"We don't want any trouble with a Gloom Walker,\" one of his men told him. \"He'll fry our eyeballs. Besides, he's here working for the Baron. I saw him at the manor earlier talking to the Baron.\"\n\n\"I think you should apologize to the girl,\" I told them. \"If you had harmed a thread of her clothing you would be dying horribly now. You're fortunate she didn't kill you all. Serisi, I think that barrel is no longer useful.\"\n\nShe looked at it and back at me. I nodded and she frowned. The barrel exploded into flames and they took to their heels.\n\nShe threw back her head and laughed. \"Sorry about that, Guerin,\" she said. \"I didn't want to kill them and I thought they might recognize you.\"\n\n\"No, you did the right thing,\" I told her. \"Are you okay?\"\n\n\"Yes, they were slow and clumsy,\" she said. \"I shouldn't have gone to that place. I didn't know what it was like.\"\n\n\"Why didn't you just leave?\"\n\n\"I saw the man I needed to talk to inside. I was afraid I wouldn't be able to find him again.\"\n\nWe located the debtor and he paid. He would spend a long time recovering his health, but he paid. When we got back to the keep I thought we needed a break for a while. We went to visit Zee and stayed two days. We celebrated Serisi's birthday at the inn and Zee had several bottles of the perfumed soap. She and I were in the spring when Serisi came out and she soon joined us. I hadn't seen her naked for a long time and I was startled at the changes in her. Her hips had broadened and her breasts were a lot bigger. She had a little patch of white, wispy hair above the mysteries below.\n\n\"Your little girl is getting big,\" Zee whispered. \"God she's beautiful. Do you sleep with her, Guerin?\"\n\nI could feel my ears turning red. \"Yes, but not like you mean.\"\n\n\"Why not?\" she asked. \"She's in love with you, Guerin.\"\n\n\"Yes, I know. She's never shown any sign she wants to do that.\"\n\n\"Maybe she's waiting for you to show some sign.\"\n\n\"Well, she's going to wait a long time then.\"\n\n\"Why? Why would you make her wait?\"\n\n\"Because she trusts me. I've had her since she was three, and I'm not about to change our relationship. She's precious to me and I love her just the way she is. If she wants to change that, it's up to her.\"\n\n\"I understand, I won't say anything else,\" she said. \"I love her, too, but I'd like to fuck her.\"\n\n\"Are you two whispering about me over there?\" Serisi noticed our heads close together.\n\n\"How did you know?\" Zee asked her.\n\n\"My ears were burning.\" She paddled over and slipped under my arm on the opposite side from Zee. \"Are you conspiring?\"\n\n\"No, we were talking about how beautiful you are,\" Zee told her.\n\n\"Well, I like to hear that, so stop whispering,\" she laughed.\n\n\"You're growing up very nice,\" Zee told her. \"The boys are going to be swarming around you like flies to honey.\"\n\n\"What boys?\" Serisi asked. \"There are no boys at the Keep. There are only old men like Guerin here. How old are you, Guerin? I don't think you've ever told me.\"\n\n\"I'm thirty-eight,\" I told her.\n\n\"You don't look a day over twenty-five,\" Zee said.\n\n\"Well, sometimes we mutants live a very long time,\" I told them. \"Jynn is at least a hundred and she doesn't look any older than me.\"\n\n\"That's good, because Serisi is an elf and I've heard they live forever,\" Zee said.\n\n\"I'm not an 'elf',\" Serisi told her. \"I don't like to be called that. My mother was a human, you know.\"\n\n\"I'm sorry, baby; I didn't mean to offend you,\" Zee reached around me and petted her shoulder. \"I didn't know your mother was human, either.\"\n\n\"I'm not offended,\" Serisi said. \"It's impossible for you to offend me, Zee. I just don't like that word when it's used to describe me.\"\n\n\"I won't use it again,\" Zee promised. \"How would you describe yourself, honey?\"\n\n\"I'm a hybrid, I share both race's traits. I don't know about the age thing. I'm growing up at the normal rate for human girls. Do the Shai mature like humans, Guerin?\"\n\n\"I have no idea,\" I told her. \"I've never seen a Shai that wasn't an adult. I understand they have very few children. I don't know anyone who's ever seen a Shai child.\"\n\n\"Well, I guess we'll just have to see then,\" she said. \"I'm not impatient. I enjoy being myself. I'm not in a hurry to change.\"\n\n\"See, I told you,\" I said to Zee.\n\n\"What did you tell her?\" Serisi asked.\n\n\"It was nothing, sweetheart,\" Zee told her. \"You're a very wise girl. You're only young once. Enjoy it while you can.\"\n\n\"Oh, I do. I think I may be an adult now, though. Guerin says that when I'm old enough to take care of myself and support myself, then I'm an adult. I think I can do that. What do you two think?\"\n\n\"I think you're right,\" I told her. \"You do as much on our contracts as I do. I don't do much taking care of you anymore. I think I'll still keep an eye on you, but you mostly make all your own choices now.\"\n\n\"You're still a baby, but you're the most adult baby I've ever met,\" Zee told her. \"I thought you were just like a little adult when you were five.\"\n\n\"Well, Guerin always treated me like that,\" she said. \"What do adults do?\"\n\n\"Whatever they like,\" Zee told her. \"What do you want to do that you haven't been doing?\"\n\nShe thought about that for a minute. \"There are a couple of things. I'm not going to talk about one of them, but I would like to take a contract myself. Nothing too dangerous,\" she assured me. \"Nothing that would take too long,\" she looked at me; obviously seeking my affirmation.\n\n\"I think that would be good for you,\" I told her. \"We'll look over what Jynn has when we get home. Do you think us being apart would upset you enough that you would be distracted or lose your edge?\"\n\n\"I don't know,\" she snuggled up against me. \"I'll just have to see. If I feel that I can't perform, will you fill the contract for me?\"\n\n\"Of course, baby,\" I squeezed her. \"Maybe I should go with you, camp out in the bushes and just be available in case you need me.\"\n\n\"No, I need to find out for myself,\" she kissed my arm. \"I won't hunt a beast or anything that might get me killed. Maybe a collection or a missing person. Maybe just some detective work, solve a mystery or something.\"\n\n\"That's wise,\" Zee patted her head. \"Our baby is growing up, Guerin.\"\n\nSerisi flashed her a smile, her teeth flashing white against her dusky complexion. \"You have no idea,\" she said.\n\nWhen we returned to the keep, we looked over potential contracts, looking for something that both interested Serisi and didn't seem too dangerous for a novice to handle.\n\nWe were sitting in the commons, papers spread out before us, lamps casting shadows, and Hal came in. He was soon followed by Jynn, and one by one, the whole order was sitting around, looking nervously at one another.\n\nSerisi sat back in her chair and looked at each one of them until they dropped their eyes and looked away.\n\n\"What?\" she asked.\n\nThey stirred uncomfortably. Evidently, Trina was the spokesman, or woman, as the case was.\n\n\"Um, we were talking after dinner...\"\n\nShe trailed off and Serisi waited, becoming more impatient. \"Yes, were you speaking of me?\" she asked.",
        "\"Well, yes,\" Trina said. Her words came out in a rush. \"Serisi, in the last 30 years, we've had nine novices. How many of them do you know?\"\n\n\"I know none,\" Serisi said. \"Why do you ask?\"\n\n\"The reason you don't know them is that they're dead,\" Hal said. \"Every one of them. I don't ... we don't...\" He was overcome, apparently by powerful emotions, and I was stunned.\n\nJynn spoke. \"We need to tell you something, Serisi. As far as we are aware, only three people in the history of this order have ever borne children. There has never been a child here such as you. You are like our child. I know you belong to Guerin; we all know that. He is the youngest among us. He is also probably the most capable among us. He is like our child. You are like our grandchild. We know you, and we have come to love you, child. We, the order, will not allow you to take contracts we believe are beyond your capabilities. We love you too much to lose you.\"\n\nSerisi sat quietly for a moment. I braced myself for the explosion. She had quite a temper, when aroused. She rarely showed it. There were two sides to it. One was a raging hurricane and the other was cold stillness. One brought the wrath of burning fury upon your ears, and the other froze you into non-existence. I had been the victim of both. Neither lasted long, and she was always contrite, sooner or later, but she had an independence that would not tolerate any interference. I didn't know which to expect.\n\n\"I submit myself to your will,\" she said. I was as stunned as the rest. \"I love you, as you love me,\" she said. \"You are wiser than I am, individually, and collectively, you are the wisest people I have ever met. I will seek your advice and wisdom. What do you want me to do?\"\n\nA collective exhalation of held breath escaped the whole group. They well knew her, and they had the same expectations I held. Jynn crossed the room, lifted Serisi to her feet and embraced her. The rest of the group rushed to do the same. Everyone spoke at once. \"So happy, want to help, love you so much, look at contracts together, help you any way we can...\" filled the air.\n\nSerisi laughed and her merriment filled the room. \"I love you all, but please, just let me speak. Would you be willing to select the contracts for me? Look them over, select three you think will fit me, give them to me and Guerin and I will make the final choice? This is acceptable?\"\n\nThey all hurried to assure her that it was, and I believe that there was an easing of tension and a camaraderie like we had seldom seen in the order. Serisi became a full novice, and her first contract began. It was a simple task of discovering a thief, and she proved adept, setting a trap, bringing the constables to the house, catching the thief with the money he had stolen and fulfilling her contract.\n\nShe was on top of the world when she returned with her payment. We celebrated, every one of the order who was there, joining us. She waited two weeks and took another. It became routine, and so far as I knew, she never suffered during the one or two weeks they usually took from her \"being apart from Guerin\" issues.\n\n*****\n\nEighteen years old! She had been away for a week, doing a job we got through Zee for my bastard of a father. She didn't tell me a lot of the details, just said she was a courier and it wasn't likely to be dangerous. Some sort of escorting some high official.\n\nWhen she got back, I was in the yard, soaking up the sun and reading a book. When she saw me she gave a little squeal and came running across the courtyard to throw herself on me. My book went flying and she nearly knocked me down. She was heavy, solidly muscled and as lithe and flexible as a cat. She kissed me all over my face and told me how much she missed me and how much she loved me about 1000 times.\n\nShe finally got her fill and went away to take care of her horse. I retrieved my book and sat back down, waiting for her. I got absorbed with the book, a biography of one of the first colonists, and didn't notice she'd come back until her shadow fell across me. I looked up. God, she was heartstoppinly, excruciatingly lovely. A little smile played across her features and she just stood there, letting me look at her.\n\nShe was a woman, in the full blush of her beauty, all hair, blue eyes and dark smooth skin. \"You make my heart stop,\" I told her.\n\nShe dimpled up. \"Thank you. You are very beautiful, too, Guerin.\" She always said that.\n\n\"Men aren't beautiful,\" I told her. \"Stop saying that. I've gotten a complex from you saying that.\"\n\nShe laughed. \"No. You aren't the boss of me.\"\n\n\"Turn around so I can get a good look,\" I said. She did a little dance step or two, giving me a look at the mystery that was Serisi.\n\n\"Do you know what today is?\" I asked her.\n\n\"Yes, it's my birthday!\" she said. I could tell she was excited. \"What did you get me, Guerin?\"\n\nWe didn't know, in fact, exactly when her birthday was, but this was the day we celebrated it. \"I was feeling too lazy to go shopping,\" I told her.\n\nShe slapped my foot. \"Ah, bah. I shall not get you anything for your birthday, then.\"\n\nOf course, she knew I was lying. I felt around in my pocket. \"Well, I do happen to have this,\" I told her. I drew out my hand and opened it. She gasped. \"It's beautiful, Guerin,\" she said.\n\nI had paid a small fortune for a cut and faceted red-stone. It was large, and seemed to pulse with a red fire. It was set in gold, with a heavy chain of very small gold links. \"Let me put it on you,\" I said.\n\nShe turned her back to me, and I pulled that mane of hair aside, exposing her slender neck. Her hair was heavy in my hand. Unbound, it hung shimmering below her waist. When working or exercising, she wore it bound or in many braids. I reached around her, pulling her back into my embrace. She seemed to almost purr. I undid the clasp, pulling the chain around her neck. I kissed the side of that dusky column and she shivered, goose-bumps rising. I did the same with the other side, then fastened the clasp. Looking over her shoulder, I saw the stone settle down into the mysterious canyon between creamy brown hills. She twisted away, offered me her lips and I kissed her. She stepped back and her little pink pointed tongue tasted her lips.\n\n\"I am going to wash the travel off,\" she said. A swish of her hips, and she was gone. She had a tub in our rooms. I made do with the bath house. Dinner was a riot as she was welcomed home and everyone got a chance to be singled out by her love and affection. They all gave her gifts, and we drank wine. Serisi wouldn't touch anything fermented, and she drank her usual cider.\n\nThe party wound down, and she got up, made a little speech, thanking everyone and expressing her love. She went to our rooms, and I followed not more than a score of minutes later. I undressed and got in bed. I could hear her moving around in her room. There was a lamp and two candles burning, and I assumed she would come as soon as she had stowed away her presents.\n\nThere was a whisper of sound from the doorway and I glanced up. My breath caught in my throat. She stood in the doorway and she was a vision to topple kingdoms, cause battles to rage and despair in the hearts of men. She was absolutely naked, except for the chain and the redstone that pulsed between her breasts.\n\nThe imagination is beggared when describing the visual impact of Serisi. It began with that mane of hair. It swept in waves and billows around her, stirred by the breeze through the open window. It was snow-white and shocking in its magnetism, causing everyone who was close to her to have an almost irresistible impulse to touch it. Her face was... elven. She disliked the term, but from the exotic tilt of her eyes and the startling contrast of the blue/grey with the darkness of her complexion, her tiny pointed ears, her high cheekbones, small patrician nose, the lusciousness of her lips, the heart-shaped face and her little pointed chin, it was a face to launch a thousand ships.\n\nHer skin glowed. It seems impossible for something to glow with a rich brown tint, but she did. Her throat was a slender column, sweeping to join broad shoulders. She was very muscular, yet there was a softness that formed fully-rounded curves. Her breasts were full, heavy and perfectly formed mountains, proud, high and with all the firmness of youth and fitness. Her nipples were surrounded by rich mahogany circles, slightly thicker than the skin of her breasts so that they looked a little puffy, capped by small, very erect points that tilted slightly upward and inward.\n\nHer chest and ribcage were wide and deep, the perfect support for those breasts, and her waist swept inward to a slenderness I felt I could span with my hands. Her belly was flat and ridged with two rows of highly-defined muscle, her navel a slightly elongated oval, small and mysterious. Her hips flared from the small waist and curved dramatically, drawing in again to impossibly long legs, her thighs swelling with muscle, small knees and muscled calves. Her tiny feet were things of beauty in their own right, and between smooth brown thighs was a tuft of that shocking white, just a fine and silky reminder that this was a woman.\n\nI had not seen her naked in some time, and her beauty stunned me. I tried to speak, but only a hoarse croak emerged. I cleared my throat, trying again. \"God, Baby! You're...\" I had no words.\n\nHer laughter was like crystal, ringing across the room. She turned. Gods, that ass! It was a firm, jutting thing, forming a near shelf, as gorgeous as anything in imagination, shaped like an upside-down heart, with a small dimple where it swept gloriously into her broad back. She continued her turn, coming to rest facing me. \"Do you like me, Guerin?\"\n\n\"I have no words, Serisi,\" I said. \"Poets have no words.\"\n\nShe strode across the room, moving with purpose, liquid in her movement and naked splendor. Stopping beside the bed, she pulled the cover down, exposing me to her eyes. They moved down my body, then up, locking with my own. \"Do you love me, Guerin?\" She asked. \"Do you love me, forever?\"\n\n\"With all my heart,\" I said. \"For the rest of my life.\"\n\nA small smile of satisfaction formed on those Cupid's-bow lips. \"And I love you, for the rest of our lives,\" she answered.\n\nShe moved over me, one knee on either side, stretching her arms upward to move her hair behind her, her breasts tautening with the movement, standing proudly forward, and it was the most erotic thing I had ever seen. It was totally unselfconscious. That was the most amazing thing about her. She was completely comfortable in herself. She leaned forward, erect nipples scraping on my chest as her lips sought mine. I had kissed Serisi thousands of times; I had never kissed her, or been kissed by her, like that.\n\nHer lips were alive, and fire from her eyes flashed. All that bare dusky skin against mine felt as though she was running a fever. She had always felt warmer than anyone else I had ever touched, but she was on fire. She crushed herself against me and her passion was contagious.\n\n\"Guerin... Guerin... I'm... I feel like I'm running away,\" she gasped. \"Something, something is happening...\"\n\nI rolled, taking her with me so that we were on our sides, facing each other. \"Serisi, what are you doing?\" I asked.\n\n\"I've been waiting,\" she said. \"I've been waiting, all my life, and I will not wait any longer.\"\n\n\"What were you waiting for?\" I asked.\n\nI was waiting to be with you, like this,\" she said. \"I was never ready, before, and now I am. I am a woman, now. I was a little girl, but not any longer. I feel my blood singing, I have an ache for you, in my belly, in my heart, in my loins. I will be yours. You will be mine. This is the right day, I know it, Guerin. I know it in every fiber of my being.\"\n\n\"Serisi, do you remember what the wise woman said?\" I asked. \"She said I could not have children, but with you, I would. Is that what you want?\"\n\n\"Yes, but not now,\" she whispered. \"There is... something in you, Guerin. It is like a broken string. I can't explain. I know how to tie it back together. I will not until both I and you are ready. It is good?\"\n\n\"Everything about you is good.\" I reassured her and claimed her lips again.\n\nShe squirmed, trying to get closer to me. One brown leg draped across me and I could feel the downy softness of her little tuft on my thigh. She moved it in circles against me, and I could feel heat and moistness. She pushed me over and her little hands ran across my body. She was exploring, and I left her to her voyage.\n\nShe lowered her head to my chest and her little pointed pink tongue appeared. She drew a circle around one nipple with it and I shuddered. I had never really thought of my nipples as an erogenous zone. I was ignorant, because my member became an iron bar with her teasing.\n\nShe felt every muscle, as if memorizing my body like a map. Her warm fingertips soothed every scar, trailed down my stomach and she pushed impatiently at my undergarment. \"Drawstring,\" I whispered, and she giggled. She pulled the strings and I lifted so she could remove them. She gasped at my erection. We had bathed at many a camp, and neither of us was particularly modest, but she had never seen me as I was, rampant and pulsing.\n\nThe little tongue flicked out, swiping the head, and I lurched. Her hot little hand grasped, and she explored, touching, squeezing, tasting, her exploration a thing of wonder and as enchanting as everything else about her. Her intensity increased, if that was possible, and her tongue became a thing possessed, laving the surface of my member with her slickness and heat. I groaned and she looked at me with triumph in her eyes. \"What should I do?\" She asked.\n\n\"Whatever your heart leads you to do,\" I said. \"Imagine it is a winter icicle and you are melting it.\" She nodded.\n\nHer mouth, those incredible lips, engulfed me. There was wetness, heat and she sucked, her tongue circling the head as she slid down, then back up, savoring the taste and textures. She went a little too deep and gagged a bit, returning immediately and enveloping me again. This girl, this moment, this love, bursting my heart, all combined to cause me to lose all control. I was going to erupt and I needed to warn her.\n\n\"Serisi... stop, baby. I'm about to erupt!\"\n\nHer face tilted up. \"No,\" she said. \"I want you to. I am giving you great pleasure, I can tell. What... what should I do when you... erupt?\"\n\n\"Can you swallow my seed?\" I asked. \"If not, you can spit it out or just let it run down.\"\n\n\"Of what will it taste?\" she asked.\n\nI laughed. \"I have no idea. I am not attracted to men and have never tasted it, Serisi.\"\n\nShe cocked her head to one side. \"What does Zee do?\" she asked.\n\n\"She swallows, but that doesn't matter,\" I said. \"You are Serisi.\"\n\nShe nodded and engulfed me. Her eyes locked with mine and never left. The sight of that face, those lips, seemingly dwarfed by my maleness, soon had me on the edge.\n\n\"Coming, Serisi,\" I groaned. She seemed to redouble her efforts. The first blast caught her by surprise and she choked a little, but she continued, sucking even harder, if possible. A little creamy liquid emerged from one corner of those luscious lips, trickling down her little chin.\n\nIt quickly became more than I could stand and I pulled her up. She wiped her chin with one finger, putting it in her mouth and sucking, bringing it back out with a plop, in one of the most erotic gestures I had ever seen. She scooted up, nibbling on my ear.\n\n\"Did you like me, Guerin?\" she whispered in my ear.\n\nI squeezed her tightly to me. \"'Like' is such a puny inadequate word that it does not begin to describe what you did, baby,\" I told her. \"I thank you for your gift, my little lover.\"\n\nI held her tightly to me and rolled so that she was beneath me. \"It is my turn to worship you,\" I said.\n\n\"Oh, yes, please,\" she giggled. The giggle turned to a gasp as I thrust my tongue into her ear, tracing the outline to the pointed tip, running down the underside to the little hollow where it met her head just above her jawbone. I nibbled on her neck, feeling her heat and the pulse of her heart in her throat, grazing her with my teeth for a moment. Her breathing increased, and she moaned as I reached the hollow of her collar bone, nibbling my way downward across her silky warmth, finding the swelling of her breast.\n\nI licked that luscious mound, kissed every inch of it and across to the other. I gave it the same attention and she was writhing beneath me, seeking my mouth with her spiked nipples. I avoided them, kissing the darker raised circles around them until she growled in frustration and seized my head between her hands, tangling her fingers in my hair and holding me firmly as she guided her nipple between my lips.\n\nI drew it in, circling its soft hardness as she groaned, pulling me into her breast, gasping her arousal. \"Guerin... something... oh, gods! Guerin!\" Her words became unintelligible, and her motions frantic. She was peaking, just from my play with her nipples! She crushed my face into the pillow of her breast, nearly smothering me in that soft firmness until I twisted free and took its twin on her other breast. She continued to jolt, her body writhing and her mound seeking contact with my thigh until she whimpered. \"Wait, wait, Guerin.\"\n\nI claimed her lips again and she shuddered for a moment beneath me, her movements gradually slowing until she was still, her lips and tongue against mine her only movements. I gazed into her eyes and those azure pools were filled with tears.\n\n\"Are you sad, Kitten?\" I whispered.\n\n\"No, oh no, never think so.\" She was quick to answer. \"I am so joyous I could burst! Is there more, Guerin?\"\n\n\"Much more,\" I told her. \"This was a beginning.\"\n\n\"I shall die,\" she affirmed.\n\nI laughed. \"No, baby. You won't, but you will expand and accept. It is nature's way, between a man and a woman. I was only beginning to play with you, though.\"\n\n\"You may continue,\" she announced.\n\nI gave those luscious nipples another taste, making sure that I remembered every detail. They were glorious, but other treasures had to be found. I moved, leaving no inch of her body untasted. The warmth, firmness and silky feel of her was intoxicating, as was the taste. She had even a distinctive odor: clean, fresh, faintly girl and all Serisi. It increased as I made my way downward, nipping at her skin from time to time, thrusting my tongue into her navel, making her squirm and giggle.\n\nI tugged at her tuft, taken those silken strands between my lips and her movements became a slow writhe. I continued, sliding down to the dusky thighs, kissing my way to the inside, moving upward toward her center. Her legs were widely parted and the prominent tendon running up the inside was nipped and tasted until I reached her juncture. She was as beautiful as I imagined. Her outer lips were the same dusky hue as the rest of her. The tiny bud above was the same. Her lips were tightly sealed and small, forming a straight line pointing toward the pleasure nub above. I swiped them with my tongue and her hips lurched.\n\nParting the seal, my tongue moved inside and there was even more heat, moist heat that had a slickness and taste like no other substance. As soon as the seal opened, her wetness was apparent and I lapped at her essence, causing her hips to shift as she moaned out her pleasure.\n\nI was not an inexperienced lover, and I used every trick I had ever learned, heard of or imagined on my little lover. I tormented her button, lashing it with my tongue, flipping it back and forth and sucking it into my mouth as she trembled beneath me. Her thighs would tremble, building to her peak and then she would explode, crying out wordless ecstasy over and over, her capacity for climax seeming insatiable. She peaked easily, and often, and I kept finding new ways to bring her to joy.",
        "I penetrated her with a finger, all the time maintaining my assault on her nub, and she peaked again. When I curled my finger, rubbing against that special spot up inside her, she shrieked and spasmed, repeatedly.\n\nIt became too much, overwhelming her ability to withstand and she grasped my hair again, pulling me upward to her lips. I kissed her for long minutes until she gasped as she felt my hardness against her opening.\n\n\"Wait,\" she whispered. \"I'm...\"\n\nI kissed her to silence and the head of my member eased into her grasp. She groaned, a sound from deep within. As I held there, I felt motions begin. At first it was contractions within her, as if a gripping and releasing was occurring. Then, her hips began to make slow circling motions, thrusting a bit against me, sliding the head in and out. I met one of those upward motions with a forward motion of my own and slipped deeper inside.\n\nShe gasped and drew back, returning to the former position. The inner clasping and relaxing didn't stop and she was making me lose control. I pushed forward, producing the same result, but I kept the gained ground, that time. She was elusive when I tried to advance, clasping me with her strong thighs. She began to giggle at our strange dance and I couldn't help joining her.\n\n\"Gods, Guerin, you feel like a spear impaling me,\" she said, giggling so much she could hardly speak. \"You are huge! Are you certain this works?\"\n\nShe obviously had no virgin barrier, we had gone too far for that to be a possibility, but she was young and unopened. \"Yes, it works,\" I said. \"I'll just go very slowly and you try to relax, okay?\"\n\nShe nodded, her cheek pressed against mine. \"Yes, I'll try.\"\n\nIt took forever, but I was finally within her as deeply as possible. We rested there for long minutes until I felt that rhythmic pulsing of her sheath again. \"How are you doing that,\" I asked.\n\n\"What?\" she asked.\n\n\"Making yourself grip and relax like that.\"\n\n\"I don't know,\" she said. \"It seems natural, involuntary. Do other women not do that?\"\n\n\"No,\" I told her, \"but I'm glad you do. Damn, Serisi, it's something I've never experienced and it feels so incredible.\"\n\n\"Perhaps it is common in Shai women,\" she said.\n\n\"Then they are the best lovers on the planet,\" I groaned. \"You're driving me mad!\"\n\nI kissed her fiercely, and began to pump into her, just short motions, never moving far out of her before returning. I could feel her thighs, clasped against my sides, begin that tell-tale trembling, and she began moving to meet me, her breath becoming heavy and a flush across those dusky features, giving her an unearthly beauty. The look on her face, the movement of her body against mine, the lushness of everything about her was driving me.\n\nI made longer strokes, now driving into her and she strained against me, matching my motions, the tension building inside her matched by my own. I increased the speed of my motions and she began to bridge upward, her tension as tight as a bow-string. It snapped and she cried out, slamming herself into me.\n\n\"Oh, Gods, Guerin, oh, I can't... I'm... Oh, Gods!\"\n\nI could hold back no longer and I erupted inside her, my own hoarse shout joining her as she convulsed again, feeling the heat of my semen inside her. It continued for an eternity and lasted for a second. I was spent; she was still except for the shudders that occasionally came and the pulsing of her sheath around me, slowing to an intermittent clasp, gradually dying away.\n\nI rolled, bringing her with me, keeping my member in her and clasping her loveliness in my arms. \"I'm going to keep you here forever,\" I whispered in tiny pointed ear. \"Never going to let you go.\"\n\nShe sighed. \"Yes, Guerin. I wish to remain here, always. Please, never let me go. I love you and cannot live without you.\"\n\n\"I know,\" I whispered. \"Neither can I live without you. I love you, Kitten. I don't know how I existed before you came into my life.\"\n\nWe cuddled and snuggled far into the night, speaking of love, of everything and nothing until her answers and statements came further and further apart. She was still for long moments, and I peered over her shoulder. She was asleep, her beauty even more incredible in repose than ever. I kissed her cheek and she stirred. The candles and lamp went out suddenly and I knew she was ready for sleep. \"Night, Guerin, I love you.\" She was gone, only the sound of her soft breathing and the feel of that luscious body in my arms. I slept.\n\nTo be continued... when I have time. "
    ],
    "authorname": "blackrandl1958",
    "tags": [
        "alternative reality",
        "elf",
        "highway song story",
        "mutants"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/hybrid"
}