{
    "title": "Helping Her, Saving Me",
    "pages": [
        "This is my entry for the 2020 National Nude Day contest. As always, votes and comments welcome. All sexual activity (and nudity) only involves adults over the age of consent.\n\nMy sister and I had never been close.\n\nShe was four years older than me. It would be a stretch to say we were total opposites, but we certainly didn't have a huge amount in common other than having the same parents. Sally was hard-working, conscientious and devoted to the family. I was more laid-back and coasted through life, being blessed with reasonable good looks and an excellent memory that allowed me to do better in exams than I really deserved. As for my family -- I found them suffocating and dull. My parents were dutiful rather than affectionate, as if having children and raising them was just another line on the list on the fridge. After I left home at eighteen I would only return home when I absolutely had to, and would usually be counting the minutes until I could leave again.\n\nAfter my parents died -- within eighteen months of each other -- my sister would make periodic attempts to get together. I resisted the majority of them, saying I was busy with work or some other lame excuse. She never missed my birthday though. Every year, without fail, I would get a card with some lines scribbled inside updating me with the latest news. Same at Christmas. I'm ashamed to say I didn't always read what she'd written. I don't think I ever sent any cards back. I wasn't good at that sort of thing.\n\nSo no, my sister and I had never been close. And now we never would be. She was dead at thirty-nine, courtesy of a drunk driver as she crossed a road on her way home from work. Her body was thrown twenty yards by the impact. She was killed almost instantly, they said.\n\nI went to her funeral, though I did debate it at some length with myself. What was the point? Who would have known if I hadn't? But in the end I decided I should go, though I couldn't tell you exactly why. I turned up quite late, slunk in at the back, listened to the mercifully brief service, and sidled away a few minutes before it finished.\n\nI was half way back home when my phone rang. I listened to the message, sighed, and turned the car around.\n\nAnd now I sat in her solicitor's office, my annoyance at being forced to return tempered by my curiosity. Perhaps there was some small bequest she'd made me, though that was unlikely. She wasn't a rich woman. Her divorce had been messy, as they usually are, but there hadn't been much money to fight over.\n\nBut she hadn't left me anything. Except, perhaps, unwittingly, one thing.\n\nI stared at the lawyer in horror.\n\n\"Me?\"\n\n\"You are the next of kin.\"\n\n\"Well -- yes. But... she's old enough to be on her own now, surely?\"\n\n\"Not until Penelope turns eighteen, I'm afraid.\"\n\n\"And when's that?\"\n\n\"In about... five months' time.\"\n\n\"Five months! I can't look after a teenage girl for five months! I've... I've got work! I've got... my own life!\" Even as I said this I disliked the slightly whining tone of my voice.\n\n\"I understand, Mr Kemp. You are not obliged by law to do anything, of course. But if you don't, she will effectively become a ward of the state.\"\n\n\"So... like a foster home?\"\n\n\"Something like that, yes. Though I should tell you... some friends of the family have offered to take her in.\"\n\nIt was like a huge weight lifted.\n\n\"So -- they were friends of my sister?\"\n\n\"I believe the mother -- she is divorced -- was a close friend, yes. And her daughters are very close in age to your niece. I believe they are also friends.\"\n\n\"Well, that's just perfect,\" I said. \"Great. We'll do that.\"\n\nHe looked at me sharply. \"Would you perhaps like to meet the lady in question, before deciding? This is your niece's life, after all.\"\n\nI felt rather small. There was nothing about this conversation I was particularly enjoying. I supposed he was right.\n\n\"Yes -- of course. Very happy to. You can give me her details?\"\n\nHe could and he did. Five minutes later I was outside his office reflecting on what had just happened. If I'm honest, I felt like I'd just dodged a massive bullet. I'd meet this lady, I was sure she'd be fine and certainly a far more competent guardian than I would be, and then I'd check with Penelope that she was happy, and we'd be sorted. I could check in on her from time to time, but that would be the extent of my obligations.\n\nIt didn't quite go like that.\n\n**\n\nI called her and introduced myself, and she invited me to come out to their house to meet them all. Her name was Belinda, and she said her two daughters were devoted friends of my niece, and were already hugely excited about the idea of getting an 'extra sister.' This all sounded exactly like what I wanted to hear.\n\nAround 3pm I drove up and parked in their driveway. It was a large house, very secluded, and clearly this was a family with a good amount of money to spend. The gardens were well-kept, the house looked freshly painted, and a large, expensive looking four-wheel drive was visible through one of the open garage doors. Another tick. Although there was some insurance money to go towards Penelope's living expenses, she wasn't going to go short of anything here.\n\nAs I walked towards the house the door opened and a red-headed woman came out and smiled at me. I recognised her. She'd been one of the people who'd given a short address at the funeral earlier that day. I'd thought then she was attractive. As I got closer I saw she was more than that. She was one of those women I would have paused to take a second look at if I'd passed them in the street, knowing that doing that was rude and improper and more than a little boorish -- but also something that I had no control over.\n\nWe shook hands, her palm cool and dry. Then, to my slightly embarrassed surprise, she leaned forward and gave me a gentle peck on the cheek. There was a wonderful, subtle scent about her, something earthy and enticing, and I had a sudden, crazy urge to grab her and kiss her deeply. But, of course, I didn't.\n\n\"I'm so sorry about Sally,\" she said. \"Do come inside, Rob.\"\n\nWe sat at the breakfast bar of their large, open-plan kitchen. Every surface gleamed. Although everything was tidy and neat there was still a friendly feeling about the house. There was a scattering of family photos on various tables, in which I could just make out the dim outlines of family groups. I wanted to go and peer at them, not least because I had the classic male curiosity as to whether her daughters had taken closely after their mother -- what a thought if they had. But instead I just sipped my (very good) coffee and listened as Belinda spoke quietly about my sister and my niece.\n\n\"Yes, we were quite close,\" she said, in answer to my question. \"There was a group of four of us who all got on well, but I felt a real bond with your sister. She was very special.\"\n\nI nodded in what I hoped seemed like a sympathetic and approving manner. Perhaps my sister had been special, and I'd just missed it. I'd thought she was rather average, really, just like the rest of us. Saying somebody was 'special' seemed like one of those things that people said on occasions like this.\n\nShe looked at me intently. \"You don't believe me.\"\n\nI probably blushed a little. Her gaze was quite knowing.\n\n\"I... honestly... I don't think I knew her that well. We'd, kind of, drifted apart these last few years.\"\n\n\"Yes. And that was largely down to you, I think.\"\n\nThis woman was a straight-talker, all right.\n\n\"Um... yes, perhaps it was.\"\n\n\"She was always hoping you'd come and stay for a long visit. Get to know Penelope a little, perhaps. Your sister adored you.\"\n\nThe surprise must have shown on my face, and for a moment she looked impatient and cross.\n\n\"You didn't have a clue, did you?\"\n\nI took a breath. This wasn't a conversation I wanted to have. Not now, perhaps not ever.\n\n\"Can we just talk about Penelope, perhaps? It's... a very generous offer you've made.\"\n\n\"Sure,\" she said coolly. \"Let's get to business, shall we? My girls -- Jessica and Ellie -- they adore Penny. As I told you on the phone, they've been friends for years now. Jessica's nearly the same age as Penny and Ellie's eighteen months older. We've got a spare room here which we hardly ever use, and she's more than welcome to it for as long as she needs it.\"\n\nShe fixed me with another one of those penetrating stares. \"A girl that age needs a home. Some stability.\"\n\n\"Yes,\" I said, not knowing the first thing about what teenage girls needed or didn't need. \"You're right. And I'm very grateful to you for... taking her in.\"\n\n\"Taking her off your hands, you mean. Solved your problem, haven't I? Have you even spoken to her since her mother died?\"\n\nIn point of fact I hadn't. I had -- and I wince to recall this now -- I had texted her. I had told myself that kids that age preferred that medium, but I knew it was also a much easier, less stressful, less troublesome option. I could have spoken to her at the funeral, but she'd been surrounded by others and I told myself it was simpler and less embarrassing all round if I just slipped away.\n\n\"We've swapped messages,\" I said. Penny's message had been one word. 'Ok', she'd said, when I told her I'd see her soon.\n\nBelinda sighed, but didn't pursue it. I could sense that what she'd like would be nothing better than to really lay into me, tear me off a strip, as if in some way I was to blame for my sister's death. It annoyed me. Not least because she was so lovely. I was used to being able to charm women like her, with my boyish looks and sly wit. I'd been looking forward to a little mild flirtation as we discussed the arrangements, not a scolding. And now I found I was angry too, and looking to lash out.\n\n\"I think perhaps I should know a little more about you,\" I said, rather pompously and aggressively. \"Does your husband work, for example? What does he do?\"\n\nShe recognised the counter-attack and was more than equal to it. There was an undercurrent of scorn in her voice.\n\n\"My husband -- my late husband - was a civil engineer. A good one. He had his own company that he sold when he was diagnosed with the tumour. He got a good deal. Penelope won't have to worry about food being on the table, Mr Kemp.\"\n\nI had gone from 'Rob to 'Mr Kemp', I noticed.\n\n\"I'm sorry,\" I said, though at that moment I wasn't. Mainly I was annoyed at her for having a dead husband. That gave her too much of the moral high ground for my liking. A widow, raising two daughters on her own, offering to take in my niece as well.\n\nWe glared at each other for a few seconds. I was angry, yes, but deep down I felt a twinge of sadness. I knew she didn't like me, didn't rate me, didn't think I was a suitable guardian for Penelope. And she was right. She had inadvertently held up a mirror, and I wasn't liking what I was seeing.\n\nWe were saved by the sound of the front door opening.\n\nA female voice shouted \"Hey! It's me.\"\n\nFor a moment Belinda looked a little flustered. \"That's Ellie, my eldest,\" she said hurriedly. \"I'll just go and see why she's home early.\"\n\nShe went with some alacrity out of the living room and back towards the entrance hall. There was something furtive about the way she went that intrigued me.\n\nSo I followed her, moving quietly across the floor.\n\nI often wonder what would have happened if I hadn't.\n\n**\n\nIn the hallway Belinda was hurriedly arranging a coat on her daughter's shoulders. She was standing slightly to one side of the girl, allowing me a full view of her. This was fortunate -- for me, if not for the girl -- because she was, as far as I could tell, almost completely naked. The only things she was wearing, save for the coat that was being draped on her, were some hold up stockings.\n\nThe girl saw me and flushed a deep red.\n\n\"Shit! He's... right there!\"\n\nBelinda spun around and saw me gawping at them.\n\n\"Go upstairs,\" she told her daughter. \"And take your clothes with you.\"\n\nThe girl bent over and picked up a small pile of what I assumed were her recently discarded clothes. She covered her chest with them, leaving me with a memory of a near-perfect set of firm teen breasts, and scurried upstairs, face still burning.\n\nBelinda looked at me. \"I suppose I should give you some kind of explanation.\"\n\n\"I think you should, yes.\"\n\nShe pondered for a moment. \"My husband and I -- the entire family -- he was... we are... well, we're nudists. So when the girls get home -- they like to... get more comfortable.\"\n\n\"Nudists?\"\n\n\"You are familiar with the word?\" Sarcasm dripped from every syllable. But I hadn't forgotten our charged exchange of just a few moments ago, and I sensed now that I had the moral ground was under my feet, not hers.\n\n\"I am familiar with it. Were you planning to let me know this, before I cheerfully deposited my niece with you?\"\n\n\"I don't see that it makes the slightest difference.\"\n\n\"You don't! You think it would be just fine for her to be here, at her age, surrounded by... all this bare flesh?\"\n\n\"She's been here, many, many times. She and her mother... they both know -- knew -- we had this lifestyle. It wasn't a problem for them at all. They often joined us.\"\n\nI couldn't quite imagine my sister, who I always thought of as rather uptight, wandering around somebody else's house stark naked. But that scarcely mattered now.\n\n\"It's out of the question,\" I said. \"She can't stay here. Absolutely not.\"\n\nEven as I was saying this I realised I was digging a hole for myself, but I was still livid. This woman wanted my niece to stay with her. This woman also annoyed me intensely. I now had a reason not to give her what she wanted. I'm afraid it was as simple and childish as that.\n\n\"And so... what exactly are you going to do with her? Take her away from all her friends? Make her change school, home, everything, just at a time when she needs stability and continuity? Is that your brilliant plan?\"\n\nI didn't have a brilliant plan. I didn't have any kind of plan. I just wanted to be mean and score points.\n\n\"I'll move here,\" I said. \"Just until she finishes her studies. It's only a few months. And then... we can decide what we do next?\"\n\n\"You're going to look after her? You don't even know her!\"\n\n\"I'm her family. I'm all she's got. That'll have to be good enough.\"\n\nShe took a step forward, her face only a few inches from mine. Even in her fury, she was lovely. A distant part of my mind wondered what would happen if I kissed her. But the rest of my mind, thankfully, warned me against it.\n\n\"Your sister told me all about you. You never stick at anything. Everything's been too easy for you, and as soon as it gets difficult, you move on. Well, let me tell you, raising a teenage girl is HARD. She needs somebody who loves her, like we do. Not some... slacker uncle who she's only met half a dozen times!\"\n\nHalf a dozen times was probably a generous estimate.\n\n\"Thank you for your concern,\" I said. \"I think we'll be just fine.\"\n\nI turned and opened the door. I was half a dozen steps down the drive when her voice called out.\n\n\"Rob!\"\n\nI looked back. Some of her anger seemed to have gone. She looked sadder now.\n\n\"Just think about it, will you? The nudism... it shouldn't be a big deal, not really. We love her, and I loved her mother... I just want what's best for her.\"\n\nI nodded, but didn't say anything else. I just got in my car and drove away.\n\n**\n\nPenelope wasn't taking this well.\n\n\"You what? You've got to be fucking kidding!\"\n\nI had arranged to meet her after class at a coffee shop. I'd explained that my plan was to take over the rental of the small house she'd lived in with her mother, which was only a short bus ride from her college. We'd live there until the summer, when she would turn eighteen and then could make her own choices.\n\n\"We don't even know each other!\"\n\n\"No,\" I agreed. \"We don't. But... I think it's the best choice, in the circumstances.\"\n\n\"Why can't I go and live with Jessica and Ellie?\"\n\n\"I don't think... that would be appropriate.\"\n\n\"Why not? Just because they're nudists?\"\n\nI took a breath. \"Well... that's certainly a factor, yes.\"\n\n\"We all have bodies, Uncle Rob.\" She used my name in a heavily ironic way that I didn't much care for.\n\n\"Indeed we do. And we also have clothes, and society is much more comfortable with us wearing them. So... until you're old enough to make your own decisions, I'm afraid that's how it is.\"\n\nShe glowered at me. \"Why do you even care?\"\n\nThis was a good question.\n\n\"Because you're my niece.\"\n\n\"Crap.\" The comeback was instant. \"You hardly ever spoke to my mum. And this is the longest conversation you and I have ever had.\"\n\n\"We spoke more often than you think.\"\n\n\"Oh come on! She was also trying to get you to come and see us, and you couldn't have cared less. It made her really sad. But I bet you don't even care about that.\"\n\nThat did actually give me a small pang of guilt. I remembered all the cards, the emails, the texts, never pushy or needy, but always holding the door open for me to come and visit them. How many had I even acknowledged? Very few, I thought.\n\n\"I do care,\" I said. \"And that's why I'm here now, trying to do the best for you.\"\n\n\"Well, I don't want you here. I want you to go, and I want to live with them.\"\n\nAn ex-girlfriend had once told me, while itemising in some detail all of my character defects, that my absolute worst quality was a pig-headed stubbornness. \"If somebody tells you that you can't do something, Rob, or what you've done is wrong, you just put your head down and dig your feet in and it's fucking impossible to get you to change your mind no matter what.\"\n\nThat quality, for want of a better word, was coming to the fore now.\n\n\"Well, I'm afraid that's not going to happen.\"\n\n\"Fuck,\" she said. \"Fuck fuck fuck.\"\n\n\"And mind your language,\" I said, trying to exert some authority.\n\n\"Fuck. Off.\"\n\nI sighed. This had been a huge mistake, I knew. But I couldn't back out now.\n\n\"In five months,\" I said. \"I will do just that. Until then - you're stuck with me.\"\n\n**\n\nThe first few weeks were the hardest.\n\nNot only was interaction with Penny limited to a few syllables a day, but I found it hard to adjust to a quieter pace of life. I was used to the city, the clubs and bars, the night life. Evenings for me then would start with a few beers with \"the lads\" -- though in truth none of us were really close friends. We'd move onto a club, check out the girls, see if we could get lucky. I wasn't lucky every time, but I was lucky often enough for it to be worthwhile and enjoyable. I'd snuck out early in the morning from many a young woman's bed before she woke up. And a few older ones too, come to that. No chance of anything like that in my new neighbourhood.\n\nPenny avoided me as much as possible, leaving the house early before I got up and usually returning late. She seemed to be taking the approach that by working as hard as possible on her studies she could get through her grief. But sometimes at night I heard her crying in her room. When I did I usually put some headphones in and listened to some music until I fell asleep.\n\nMy work kept me busy some of the time, but not enough. I could perhaps have taken on more clients, but the ones I had paid me enough, and taking on more clients would have just meant more of the same. I was good at what I did, but I didn't particularly enjoy it, I realised. When I lived in the city, the pace of life had been enough to stop me from examining myself and what I was doing that closely. Now I had time to reflect on it a little more, and I didn't much like it. But I could make some changes later, I told myself. Get through the next few months, then head home. That was the time to re-invent myself.\n\nOne afternoon, while debating the merits of either going for a run or, much more likely, watching something on Netflix, I saw that Penny had left one of her textbooks on the kitchen table. I recognised the cover. It had been one of my textbooks nearly twenty years ago. Not the same copy, of course, but a later edition of it. It was a book on Shakespeare. On his tragedies, to be more precise. I remembered it being one of the better books, one where I'd read more than just the prescribed chapters.",
        "I picked it up, feeling strangely nostalgic for my younger self. I'd been good at English Literature, but it was very uncool to admit to that kind of thing. My teachers had despaired of me. I think, looking back, they could see that I had some talent, a spark for the subject, but of course I'd been too ignorant and arrogant to let them coax it out of me. I'd sat the exam and passed it, but with nothing like the flying colours I suspected deep down I was capable of. As for going on to study anything further at university -- god no. I had wanted to get out into the real world, earn some money, have some fun. Besides, studying was hard.\n\nNow, looking at this book, I was struck by the unpleasant sense that perhaps that had been the wrong choice.\n\nI took it into the living room, planning to flick through it and see if I could remember any of it, just for fun. In five minutes I thought I'd probably be bored with it and have moved onto the safer, if less challenging, delights of Netflix. But when Penny came home four hours later, I was still reading.\n\n\"That's my book,\" she said, vaguely accusing.\n\n\"Yes,\" I said. \"Sorry. I was just... flicking through it.\"\n\nShe looked at me doubtfully, as if suspecting I had some secret motive.\n\n\"Do you need it back? I've nearly finished.\"\n\n\"You read the whole thing!\"\n\n\"Um... most of it, yes. I've read it before though.\" I don't know why I felt defensive about it, but I did.\n\nShe looked incredulous. I can't say I blame her.\n\n\"I don't need it tonight. Keep it until tomorrow, if you want.\"\n\n\"Thanks.\"\n\nWith a final dubious look she disappeared upstairs. I reflected, a little gloomily, that that had been our longest conversation for quite a while.\n\nThen I sat down, and read a little more about King Lear, Macbeth, Othello, and Hamlet. Broken families, murder, greed, lust, jealousy and revenge. Just what I was in the mood for, really.\n\n**\n\nAfter that I got the study bug in a big way. I didn't make the mistake of borrowing any more of my niece's textbooks. For some reason I was rather self-conscious about wanting to catch up on my education. Instead I started spending my afternoons at the local library, which had the two great advantages of being very well-stocked and practically empty most of the time. Initially I just sat and read, but after a while that didn't satisfy me. I wanted to write some of my ideas down, as if to prove to myself I could do it. A number of the books had suggested essay topics at the end of each chapter, and I started trying to do some of those. My first efforts were laughable, just a few scribbled paragraphs before I ran out of inspiration and ideas. I think I was trying too hard.\n\nThat stalled me for a while. I started thinking that I'd been right the first time around, and it was best not to get ideas above my station. Who was I kidding, thinking that somehow in my mid-thirties I was going to suddenly change direction and finish the education I'd abandoned two decades earlier? Why did I even want to? I was a copywriter for web pages and an expert on search engine optimisation. What was the point in reading all these old books and then reading more books about the old books?\n\nBut, like the proverbial moth to the flame, they kept calling me back.\n\nIt was Pride and Prejudice that was my breakthrough.\n\nDiscuss how both the two main characters could be said to be guilty of both the vices mentioned in the title.\n\nWell, duh, I thought, in my best literary manner. Too easy.\n\nAnd there, in the library, on my laptop, I opened up a new document and started typing. I wrote about two thousand words almost without stopping. It wasn't brilliantly structured, and it was probably repetitive in places, but it was as if I had suddenly found all the missing pieces I needed. I suddenly thought to myself, yes, I can do this. And that confidence, as any writer or student will tell you, is absolutely crucial.\n\nWhen I was done, I stared at it in delight. Then I looked around at the empty rows of desks all around me. I'd made a breakthrough, of some sort. But -- excuse my French -- what the fuck was I supposed to do with it?\n\n**\n\n\"I need some money for some driving lessons.\"\n\nEight whole words. A veritable deluge. I looked at my niece.\n\n\"How much are they?\"\n\nShe told me.\n\n\"Jesus! How many do you need?\"\n\n\"As many as it takes to get my license.\"\n\n\"But that could be... ten! Twenty... even more!\"\n\n\"Thanks for the vote of confidence.\"\n\n\"I didn't mean that. But... it took me ages to learn to drive.\"\n\n\"You probably didn't try very hard.\"\n\nThere was almost certainly some truth in that, but it was still an annoying jibe from a girl barely half my age.\n\n\"I'll teach you.\"\n\n\"God no! I'll get Belinda - Mrs Spencer - to teach me. She's teaching Ellie and Jessica.\"\n\n\"Do they wear clothes in the car?\"\n\n\"Ha ha. Very funny.\" She glared at me, but I was used to that.\n\n\"How about money for... ten lessons to start with? I bet that's all I need.\"\n\n\"Nope. I'm going to give you lessons.\" I didn't really want to, of course. But that was my stubborn pig-headedness getting in the way again.\n\nI got another withering look, and an exasperated sigh.\n\n\"Fine. Come on then.\"\n\n\"What, now?\"\n\n\"If you're going to teach me, let's get started.\"\n\nI groaned inwardly. I should have just given her the money.\n\n**\n\nWe did a few miles while I watched her and made some small suggestions and comments. It turned out her mother had given her half-a-dozen or so lessons before she died. Penelope wasn't bad -- she was a bright girl, I grudgingly admitted, and when she applied herself to something she gave it her full, focussed attention. But she was also nervous, self-conscious, and trying much too hard, treating the car and its controls like an enemy to be forced into submission than an ally. She knew what to do, just lacked confidence in her ability to do it.\n\nI directed her a little way out of town, where there were some quieter roads.\n\n\"OK,\" I said. \"Drop me off here.\"\n\n\"What?\"\n\n\"Drop me off here. Then go on for a couple of miles, until you can find a place to turn around, then come back and pick me up.\"\n\n\"Why?\"\n\n\"Because you can. You can drive. You don't need me there. So prove it.\"\n\n\"But... that's illegal!\"\n\n\"You going to call the police?\"\n\n\"No -- but what if they stop me?\"\n\n\"Why would they? There's nobody around out here anyway.\"\n\nShe considered.\n\n\"And you're just going to wait here for me to come back?\"\n\n\"Yup.\"\n\nA sly smirk appeared on her face. It wasn't overly charming, but it was the closest thing to a smile I'd ever seen from her, so it was welcome.\n\n\"And what if I go home another way and leave you out here?\"\n\n\"Then I'll have a long walk back, and you can make your own dinner.\"\n\nShe thought about it for another moment. I could tell she was torn, but very tempted.\n\n\"You think I can do it?\"\n\n\"Of course.\" I got out of the car. \"See you in five or ten minutes. Don't run anybody over. Especially me.\"\n\n\"Oooh, that is tempting.\" A proper smile now. And for a moment she looked so like her mother it hurt.\n\nWith a final, hesitant glance at me she put the car back into gear, released the handbrake, and rolled jerkily back onto the road. And then she drove off, round a corner, and was gone. I heard a painful gear change and smiled to myself. She'd be reprimanding herself over that, I knew.\n\nI walked a little way along the road and found myself a gate to lean against. I browsed my phone for messages but there was no signal so I put it back in my pocket and waited for her. I admit, I was a little nervous. This was a gamble, but one I thought was worth making. I could remember the first time I'd taken a car out on my own, and how suddenly it had transformed how I felt about the whole business of driving.\n\nAbout ten minutes later I heard her coming back. A smoother gear change as she went up a small hill. As she got closer I saw the broad grin on her face and I heaved a mental sigh of relief. She pulled over and -- rather sweetly -- leaned over and opened the passenger door for me.\n\n\"That was great!\"\n\n\"Well done.\"\n\n\"I mean... that was really naughty! But wow... it just felt... so different!\"\n\nShe was glowing.\n\n\"I can't wait to tell the girls I did this!\"\n\n\"Um,\" I said. \"Maybe we'd better keep it to ourselves.\"\n\nShe pouted. \"Oh, all right. But -- can we do that again tomorrow?\"\n\n\"Sure. Now try and get us home without killing us. That would really spoil things.\"\n\n\"I can totally do that!\"\n\nHer enthusiasm and delight was charming and rather infectious. I looked out of the passenger window, turning my head so she couldn't see me smiling.\n\n**\n\nAfter that the relationship between us was considerably better. I wouldn't say we suddenly became best buddies, but she was certainly more cordial and communicative when she was home. Which wasn't often -- she still came home quite late most days. I guessed she was spending a lot of time with Jessica and Ellie at their house. This still grated a little, but if I forbade her to go there I had absolutely zero chance of enforcing it. I knew deep down it would also be a petty, spiteful thing to do.\n\nWe went out in the car several times a week. If it wasn't raining we would sometimes repeat the exercise of leaving me somewhere while she drove herself alone for a while. When I was in the car with her she was quietly receptive to my advice, and we even mastered the art of parallel parking relatively painlessly and with only a few minor bumps.\n\nI found a routine that worked for me, mainly doing work for my clients in the mornings and then adjourning to the library in the afternoons. I still didn't know what I was doing, but I'd worked out a study plan for myself and, for whatever reason, I found myself not only sticking to it but relishing it.\n\nI came home one day late from the library to find Penny in the living room with two other girls. One was about Penny's age, the other slightly older. I recognised the older one who was a blonde, very attractive girl, though she was wearing clothes this time.\n\n\"Hey!\" said Penny, with much more enthusiasm than I was used to.\n\n\"Hey,\" I said.\n\n\"So... this is Ellie and Jessica.\" They smiled a little nervously at me, and I did the same to them.\n\nA slightly uncomfortable silence followed. Then Ellie looked at Penny, and nudged her.\n\n\"They... I mean... we were wondering,\" said Penny. \"You're such a good driving teacher... that maybe... you could give some lessons to them too?\"\n\nI was more than a little taken aback.\n\n\"Er... I thought... you said they were getting lessons from their mother?\"\n\nThere was a slightly embarrassed silence.\n\n\"They are,\" said Penny. \"But... they'd like some extra ones, with you.\"\n\n\"Oh,\" I said. \"I don't think... does your mother... would she be OK with that?\"\n\nEllie spoke for the first time. \"It would be... better if she didn't know.\"\n\nAnother short silence.\n\nJessica said, \"I mean, she's great. But... she's not... I mean... she's not the best teacher. Ellie should really have her license by now, but she's failed twice. Not that it's mum's fault... Not really.\"\n\n\"Ah,\" I said, some understanding finally creeping in.\n\n\"The thing is,\" said Ellie. \"She's not like... a totally brilliant driver herself.\"\n\n\"Ah,\" I said again.\n\n\"Just a few lessons,\" said Penny, looking at me with a beseeching, puppy-ish look that I wasn't used to. \"Ellie wants to take her test again next month, and it would be so cool if Jess and I could take it at the same time too.\"\n\n\"Um,\" I said. Always good to vary one's single syllable responses, I think.\n\n\"Please,\" said Jessica. She was as pretty as her sister, with slightly darker hair and a paler skin.\n\n\"It would be very kind of you,\" said Ellie. \"Even one lesson would help.\"\n\n\"But not really,\" said Penny. \"You need at least four or five.\" She turned to me, and I saw her eyes were sparkling. \"And you're going to do it, aren't you?\"\n\n\"Why?\" I said, a little disgruntled at her presumption.\n\n\"Because... you're actually slightly nicer than everybody thinks.\"\n\nThere was an awful lot to unpick that last statement, very little of it flattering, but I decided to take it in the spirit of rapprochement in which it was clearly intended.\n\n\"Fine,\" I said. \"But just four lessons each. And a lesson is no more than forty-five minutes.\"\n\n\"Yay!\" said Penny.\n\n\"Thanks so much,\" said Jess, and gave me a warm smile.\n\n\"Yes,\" said Ellie. \"Thank you ever so much.\" She gave me a slightly more considered look. Friendly, yes, but something else too. I wasn't quite sure what, but it both unsettled me and excited me in equal measure. She was her mother's daughter, I suspected, capable of switching from friendly charm to icy fury in the blink of an eye.\n\n\"And,\" I said awkwardly. \"Obviously I'll need one of you others to be there as a passenger when it's Ellie or Jessica's turn for a lesson.\"\n\n\"Why?\" Jessica was perplexed.\n\nPenny sighed. \"In case he tries to rape you, silly.\"\n\n\"Oh.\" Jessica blushed. \"I hadn't thought of that.\" She looked at me. \"But you're not a rapist, are you?\"\n\nEllie gestured graphically with her hand -- a sharp, vicious movement. \"Even if he was, which he's not, you just grab him in the nuts, twist, and squeeze hard. Remember what mum told us?\"\n\nYikes.\n\nEllie looked at me again. \"But yes, agreed. You'll have a chaperone at all times, Mr Kemp.\"\n\n\"Thank you. And, er, I suppose you can call me... Rob.\"\n\n\"When can we start?\" Jessica had recovered her composure. \"Can I go first?\"\n\n\"Hey - I'm older! And I've got my test already booked!\"\n\nI said, \"How about a joint lesson, so I can see what level you're at. Ellie drives us out of town, Jessica drives us back.\"\n\nThis was considered an acceptable compromise all round. Penny said she would join us too.\n\nAnd so, to my mild astonishment, I found myself in the passenger seat with a carful of teenage girls. The girls were initially a little shy with a man in the car, but that soon faded as we headed out into the countryside. Soon there was a fairly constant chit-chat, most of which meant very little to me -- school stuff, mild gossip about other people at school and in the town, forthcoming plans for the weekend.\n\nIt was soon evident that Ellie was already quite an accomplished driver, but she did have a tendency to forget to use her mirrors. This led to some good-natured teasing, of course.\n\n\"Who'd have thought there was a mirror that Ellie didn't look at every ten seconds?\"\n\n\"Me! You're the vain one. You're the one who begged for a nose job for your eighteenth birthday!\"\n\n\"I did not! I just said I didn't like my nose and maybe I'd like to do something about it one day.\"\n\n\"But your nose is so cute!\"\n\n\"It's all crooked!\"\n\n\"It really isn't, Jess.\"\n\n\"Eyes on the road, Ellie... you're drifting to the middle.\"\n\n\"Oh fuck! Sorry.\"\n\n\"Don't kill us Ellie!\"\n\n\"Though maybe if we crashed my nose would look better.\"\n\n\"We love your nose. Never change your nose. Now, your hair, on the other hand...\"\n\n\"What's wrong with my hair?\"\n\n\"You've got to be more adventurous. You still wear your hair like a twelve-year-old.\"\n\n\"I do not!\"\n\n\"How about you, Mr Ke... I mean, Rob? Do you like my hair?\"\n\n\"Er... yes.\"\n\n\"He would say that. He's a guy. He doesn't know anything about hair.\"\n\n\"How about my nose?\"\n\n\"Your nose... look, your nose is perfectly... charming, but... I think we have to introduce some new rules. No talking, unless it's to do with driving.\"\n\nThis led to a chorus of contemptuous protest from all three of them, and I sighed. But honestly, although I felt about a hundred years old compared to them, I felt strangely happy as Ellie drove us along.\n\n**\n\nMy limit of four lessons somehow became five and then six and then was quietly forgotten. The weeks passed and all three girls became increasingly competent drivers, though of the three, Jessica lacked confidence and was the most prone to doubt herself. Her sister was always the first to reassure her, but Penny would usually only be a second or two behind. There was a real camaraderie between them all and I reflected more than once that perhaps letting Belinda look after Penny would have been the better move. So what if they were nudists? They seemed a lot more loving and a lot less dysfunctional than my own family had been.\n\nI convinced myself that I'd done the right thing, but on a deeper level I knew that was because I was actually enjoying myself more than I expected. I wasn't any kind of father replacement to Penny, it was far too late in the day for that, but I did genuinely like her. And I liked her friends. When we returned home from our outings and the girls piled out of the car to go off to Penny's room or go out or whatever they did next, I would feel a pang of loneliness. Just a small one, but unmistakeable.\n\n**\n\nThey somehow arranged to have their tests on the same day, Ellie in the morning then Jessica and Penny in the afternoon. I was on tenterhooks until I heard back. Then, around 4pm, I received a barrage of smiling emojis from Penny and I punched the air.\n\nRelaxing for the first time, I got a beer from the fridge and settled down in an armchair with my current book. It was on nineteenth century poetry and I was finding it a bit of a slog, frankly. Some parts of literature were such a joy that it didn't feel like work or study at all. Other parts -- definitely not so much. So when the doorbell went I was grateful for the distraction. I didn't have many visitors. That understates it. I never had ANY visitors, unless you counted delivery drivers.\n\nI opened the door and saw, to my surprise, it was Belinda. I hadn't seen her since the day I'd stalked away from her house, several months ago now.\n\n\"Oh...\" I said. \"Hello.\"\n\n\"Hello. Can I come in?\"\n\nI held the door open and she slipped past me into the hallway. She stood there for a moment, looking around at the stairway, the hallway table, down at the carpets. She seemed to be doing a kind of audit, and I bristled.\n\n\"Were you expecting us to be knee deep in pizza boxes and overflowing rubbish bags?\"\n\nShe didn't respond to the aggression in my voice.\n\n\"No. I was just remembering when Sally lived here. She liked this house a lot. She was happy here. Can we sit down?\"\n\nI followed her into the living room and we sat uneasily opposite each other, me in my usual armchair and her on the sofa opposite.\n\nShe saw the book open on the table beside me.\n\n\"Penny said you'd been studying a lot.\"\n\n\"She did?\" So much for my attempts at discretion. I don't know why I was a little embarrassed by my belated attempts to finish my education, but I was.\n\n\"Always reading in the evenings. And a very regular visitor to the library.\"\n\nI shrugged. \"It passes the time.\"\n\nShe nodded. There was a pause.\n\n\"So... I wanted to say... thank you.\"\n\n\"What for?\"\n\n\"For helping Ellie -- and Jessica -- with their driving.\"\n\nShe looked at me, a mixture of amusement and mild reproach in her eyes.\n\n\"Ah,\" I said. \"I'm... they said...the thing is...\"\n\nI trailed off. \"Sorry,\" I said. \"How did you find out? Did they tell you?\"\n\nShe held up her phone. \"Modern technology. If you think I don't know where my daughters-- or at least their phones -- are every hour of the day, then you've never been a parent. So when I saw they were here, and then they were both out of town, moving quite fast -- and this was happening several times a week... it wasn't too hard to figure out.\"\n\n\"Sorry,\" I said again. \"I should have told you.\"\n\nShe nodded. \"You should. But... I forgive you. And, if I'm honest, I hated teaching them to drive. So I was actually quite glad when I saw you were doing it.\"\n\n\"It wasn't that much work. They're all very good drivers, really. Better than I was at their age.\"\n\n\"That's good,\" she said. \"It's nice that you've been able to help them. Which is why I came over, really. I wanted to... apologise that we got off on the wrong foot.\" She paused. \"I think, actually, you've been good for Penny.\"",
        "\"I don't know about that,\" I said. \"But I like her a lot more than I thought ever would, if I'm honest.\"\n\n\"No, you have been. She does talk about you quite a lot. They joke about you, of course, being a sort of... perpetual teenager, but she's actually a little proud of you too.\"\n\n\"Oh,\" I said. Perpetual teenager? Me? \n\nShe paused, as if struggling to find her next words.\n\n\"Rob... I was wondering if you could come to dinner at the weekend? I have some friends coming over, and I think you'd like them.\"\n\nI hesitated. \"That's kind of you, but... I don't really think that...\"\n\n\"Please. For me. It would just be the four of us, and three's an awkward number.\"\n\nI really didn't want to go. I have always hated the forced intimacy of dinner parties, the pretence of being interested in other people's dull lives and jobs, the fake laughter at feeble jokes, the effusive praise that had to be heaped on the hostess no matter how awful the food.... But Belinda was looking at me very earnestly, her eyes on mine, and I surrendered.\n\n\"OK. That'd be nice.\"\n\n\"It will, actually,\" she said. \"I can see you're dreading it, and I remember your sister saying how you hated that kind of thing, but I bet you now, you'll enjoy it.\"\n\nThat seemed extremely unlikely to me, but I let it pass. There was one burning question, however, which I wasn't quite sure how to ask.\n\n\"And... um... what's the... dress code?\"\n\nShe looked serious. \"No dress code, Rob. I'm a nudist, remember? You'll be expected to leave your clothes at the door.\"\n\nShe let that hang for a moment, then her fa\u00e7ade broke and she gave a yelp of laughter.\n\n\"You should see your face! God, when I was younger I always thought men were quite keen to see me with no clothes on, but I'm clearly past that now. It'll be casual, so whatever you're comfortable in -- jeans and a shirt will be fine. Perhaps a tie, if you have one.\"\n\n\"OK,\" I said, relieved. \"I think I can manage that.\"\n\n**\n\nI turned up with two bottles of wine and low expectations.\n\nBut Belinda was right. I did enjoy it. There were just two other people there, Mark and Yvonne, a married couple who were both older, probably in their mid-fifties. They were both university lecturers, him a specialist in History and her in English Literature. Initially I felt a little cowed by them, very conscious that my education was laughably incomplete compared to theirs, but they were so friendly and down-to-earth that I soon relaxed. We had a very enjoyable, rambling conversation, covering everything from the Vietnam War to the Brontes to modern American politics to the Romantic poets. I greedily took advantage of their knowledge, and apologised more than once for occasionally reducing the evening to a question and answer session -- but they laughed it off and said they were glad to find somebody who was so interested in their respective subjects.\n\nBelinda chipped in regularly -- she was a smart, well-read woman, I realised -- but also kept the wine glasses topped up and served up a sequence of courses that were both simple and delicious. It was, quite simply, one of the most interesting and entertaining evenings I could remember. I was amazed when Mark said they had to go and I realised it was nearly midnight. When they said they hoped they'd see me again I replied that I hoped so too, and I actually meant it.\n\nAfter they'd gone, I helped Belinda clear the dishes and stack the dishwasher. Then, rather clumsily, I thanked her for a very pleasant evening, and said I should be going as well.\n\nShe tutted.\n\n\"It's early yet. And there's half a bottle of wine left.\"\n\nThis was undeniably true, and I agreed it would be a shame to let that go to waste.\n\n\"I'm going to drink it in the hot tub,\" she said. \"Come with me.\"\n\nBottle and two glasses in hand, she led me out of the double doors which led out into the garden and up onto some decking where the hot tub was located. It was brightly lit, but with a mischievous smile she turned and pressed a switch on the wall, and it was suddenly dark save for a few discreet spot lights which gave only the most basic illumination.\n\n\"To spare both of our blushes,\" she said. \"I'm damned if I'm going to put a swimsuit on just for your benefit.\"\n\nI didn't quite follow until she slipped her dress over her head. She was wearing simple, matching black underwear, though I only saw it for a brief second in the gloom. Then the bra was off and she was stepping out of her panties. There were flashes of luscious white flesh, but again, only for a second. She stepped into the hot tub and sighed with pleasure.\n\n\"That's better,\" she said. \"God, these are a wonderful invention.\"\n\nI hesitated. Although I was no blushing virgin, not by a long way, I wasn't used to just stripping off in these kinds of circumstances.\n\n\"Oh come on, Rob! I promise not to peek.\" She made a big show of covering her eyes.\n\nI hastily removed my clothes and stepped into the hot tub, lowering myself into the water opposite her.\n\n\"Doesn't that feel good?\"\n\nI had to agree that it did. For a few minutes we sat in companionable silence, looking around at the dark trees at the edge of the garden and up into the clear night sky.\n\n\"Charles used to love sitting out here,\" she said. \"Sometimes we'd stay out here for hours, just talking or reading or... just sitting.\"\n\n\"You must miss him,\" I said, rather lamely.\n\n\"I think many women would describe him as an old-fashioned, unreconstructed, male chauvinist pig,\" she said. \"But god, I loved him. And the girls did too.\"\n\n\"How long between the diagnosis... and... well, him dying?\"\n\n\"Three months,\" she said. \"Just three months. It was very quick. A mercy in some ways, the doctors said. The last few weeks were... very bad for him. But he wouldn't take the drugs, not until the very end. He didn't want to be too woozy or muddle-headed. So he could talk to us, and make all the arrangements he thought were needed.\"\n\nTo my alarm, I saw a tear glisten in a corner of one eye.\n\n\"Sorry,\" I said. \"None of my business. I shouldn't have said anything.\"\n\n\"I don't mind,\" she said. \"I like talking about him. Some people tiptoe round the subject, but... I'd rather they didn't.\"\n\nNot it felt incumbent on me to continue the conversation, although I wasn't sure I really wanted to.\n\n\"How did you meet him?\"\n\n\"I was nineteen. He was thirty-five. He worked for my father. They never forgave him... but I didn't care. When the girls came along there was a slight thaw, grandchildren are good for that sort of thing... but we were never close again.\"\n\n\"But he was worth it, obviously.\"\n\n\"God yes. A hundred times over. He was a real... man. That's the only way I can describe him. Even after we'd been married fifteen years, he could still make me weak at the knees when he came into a room.\"\n\nShe reached over for her glass and sipped some of her wine.\n\n\"I remember sitting out here once, with him and one of his girlfriends, and he started talking about...\"\n\n\"Sorry,\" I interrupted. \"Did you say... one of his girlfriends?\"\n\nShe laughed. \"Yes. He had quite a number over the years.\"\n\nI was momentarily lost for words.\n\n\"You look shocked, Rob.\"\n\n\"I suppose... I am, a little.\"\n\n\"Why?\"\n\n\"Well... I suppose... it's just you strike me as being quite a... strong woman. And I mean in that a good way. And I wouldn't have thought you would have... put up with it.\"\n\nSomething struck me then that made me smile.\n\n\"What? What's so funny?\"\n\n\"It's just... when I agreed to help with the driving lessons, Ellie reminded Jessica that if I... tried anything with them she was to do what you'd told her to do. It involved -- well, some squeezing and twisting of certain body parts. I'd have thought your late husband -- Charles -- would have been at risk of having that done to him.\"\n\nShe laughed softly. \"I'm glad they remembered that advice. And I'm glad they didn't have to use it on you.\" She looked at me mischievously. \"Not so far, anyway. But no... Charles was in no danger from me.\"\n\n\"You turned a blind eye?\"\n\n\"I encouraged him.\"\n\n\"Encouraged him? Why?\"\n\nShe sighed. \"Because I loved him. Because one woman was never going to be enough for a man like him. I was his wife, he loved me, I knew that -- I completely and utterly knew that -- but when it came to sex... I wanted him to be happy.\"\n\nI pondered this for a while. Then something struck me, though I couldn't quite believe it.\n\n\"My sister... was she one of his girlfriends?\"\n\nShe took another sip of wine before answering.\n\n\"Yes. She was. They were very fond of each other. And I adored your sister too, as you know. And she was so helpful and kind to me when Charles died.\"\n\n\"Wow,\" I said. I couldn't quite imagine my prim sister being part of this very new-age m\u00e9nage-a-trois arrangement.\n\nAnother thought occurred.\n\n\"And... did you have boyfriends too?\"\n\nShe looked genuinely surprised. \"Me? God no. He was the only man I wanted.\"\n\n\"It seems a bit... one-sided.\"\n\n\"Perhaps. But it was perfect. I promise you, I was completely happy with how things were. I never looked at another man. Well -- maybe the odd peek.\" She grinned at me. \"But Charles was very old-fashioned, like I said. I was his woman, and he didn't want to share me with anyone.\"\n\n\"And so... you let him have all these affairs, and you never did anything yourself?\"\n\n\"That's right. Because men and women are different, Rob, and it's silly to pretend otherwise. Men want lots of women. Women are mostly happy with just one man. I know there are exceptions, but I really believe that's how it is for most people. We were just lucky enough to be able to be honest about it.\"\n\n\"I know quite a lot of women who'd scratch your eyes out for saying that.\"\n\n\"Oh yes. Me too.\"\n\n\"And the nudism... is that part of the same mindset?\"\n\n\"I suppose it is. It just felt natural. He'd been raised as a nudist, his family were quite.... Open-minded in lots of ways. I was uncomfortable at first, but it soon felt perfectly natural and right to me. And yes... it did make the atmosphere... sexier. Sometimes I'd be in the kitchen and he'd come up behind me... no, I don't want to embarrass you.\"\n\nI could guess how that story ended, I thought. Belinda, bent over the kitchen table, while Charles, the lucky bastard, fucked his devoted, beautiful wife senseless before perhaps heading out to fuck one of his harem.\n\nMy cock was rock hard, and I realised with some horror there was a danger the tip of it might suddenly break the surface of the water, like a mini dorsal fin. I slid down a little deeper into the tub.\n\n\"You comfortable over there?\" There was a slight note of laughter in her voice. Had she guessed?\n\n\"Very,\" I said, though my voice was a little hoarse.\n\n\"It's a bit hot for me,\" she said. \"I just need to cool off a bit.\"\n\nAnd with that she stood up, the water sheeting off her and splashing softly around us. I could see her body clearly in the half-light, just a few feet away from me. It was ripe and round and gorgeous, the body of a woman in her prime, with barely a wrinkle or sag to be seen. Her pubic hair was neatly shaved into the thinnest of lines, I noticed. Then I hurriedly looked away, hoping she hadn't seen me staring.\n\n\"Aren't you hot?\"\n\n\"No,\" I said, though in fact the heat was sweltering and I could feel my face was flushed.\n\nShe held out a hand. \"Come on. Cool off for a second.\"\n\nReluctantly, slowly, I let her help me up so I stood just beside her. My cock was jutting out at an almost perfect right-angle, almost painfully bloated and desperate for attention.\n\nShe looked down at me.\n\n\"Oh Rob,\" she said, teasingly. \"What have I done to you?\"\n\n\"Sorry,\" I said. \"It's just...\"\n\nShe hushed. \"Sshh... don't worry. It's very flattering. And very lovely. I do love men's bodies, you know. I love the way you smell, your chests, your arms, your legs... and yes, your cocks... I haven't seen one of those for a long time, Rob.\"\n\nShe turned to face me, and I thought for a wonderful moment she was going to kiss me and I could crush her into my arms and take her, right there on the decking. But she saw it in my eyes and nodded her head.\n\n\"No Rob,\" she said. \"Not tonight. Sorry. But... I will do something for you, if you'd like.\"\n\nShe gestured that we should get out of the tub, and after wrapping towels around ourselves I followed her into the house. She led me to a large downstairs wet room where there was a massage table positioned in the centre of the room.\n\n\"Lie down on there,\" she said.\n\nRather clumsily I climbed on and lay face down, my erection painfully pinned beneath me. She laughed.\n\n\"I can't do much for you if you're like that. Turn over.\"\n\nI did, and she whisked the towel away from me. She looked at my groin again and smiled. Then she went to a cupboard on a far wall, returning with a large bottle of scented oil. She poured some into her hands and rubbed them together.\n\n\"I haven't done this for a while,\" she said. \"I hope I can still remember how.\"\n\nI gasped as one of her hands encircled me at the base of my cock. Then I felt the other join it at the top, completely covering me. Then she began to gently squeeze and rotate her hands ever so slightly at the same time.\n\nIt was exquisite.\n\n\"Oh my god,\" I said.\n\n\"It's the least I can do,\" she said. \"Getting you all worked up with the stories of my depraved past.\"\n\nShe was still wearing her towel, which just covered the top of her breasts.\n\n\"Can I see you?\" I said. \"I'd really like to see you, while you do that.\"\n\nShe thought about this for a second. \"I suppose I am a nudist,\" she said, and shrugged her shoulders so the towel came loose, falling to the floor. Her heavy breasts were creamy and faintly freckled, tipped with rich red nipples that I longed to taste. But somehow I knew that was forbidden. Not tonight. Maybe never.\n\n\"You're beautiful,\" I said.\n\n\"Thank you. But hush....just lie back and think of whatever you want.\"\n\nHer hands were relentless and cunning, somehow knowing exactly when to release the pressure and go a little slower, and when to speed up and squeeze harder. Several times I thought my orgasm was inevitable only for it to recede again.\n\n\"You have a lovely cock, Rob,\" she said. \"I did wonder, when I first saw you, what your cock looked like.\"\n\n\"God,\" I said. \"Oh god. You're going to make me come so hard in a minute.... Are you sure I can't... do anything for you... fuck...\"\n\n\"Oh, I love doing this.... I haven't touched another man for such a long time... tell me what you're thinking about, Rob. I used to love to hear what he was thinking... when I did this.\"\n\nI hesitated. Talking aloud wasn't really something I'd done a lot of. It sounded so fake, sometimes, so laughable. But in that room, with her, with her hands working their magic, I was completely under her spell.\n\n\"I'm thinking... how good your mouth would feel.\"\n\nShe murmured her approval. Then, smirking a little, she lowered her head. For a moment I thought she was going to suck me, but she stopped barely a centimetre away, and instead blew gently onto the tip of my cock, now gleaming with oil. I groaned.\n\n\"Mmm,\" she said. \"You'd like to feel my hot mouth on you, would you?\"\n\n\"God yes.\"\n\n\"Anything else?\"\n\n\"I was thinking about... what you'd feel like... if I was inside you.\"\n\n\"Yes... right inside me. So deep. Wouldn't that feel good?\"\n\n\"So good.\"\n\n\"Fucking me hard.\"\n\n\"So hard. I'd fuck you so hard.\"\n\n\"Feeling your cock sliding in and out of me.\"\n\n\"God - I'd love that... so hot and tight around me...\"\n\n\"Yes... are you going to come for me now Rob?\"\n\n\"So close... god, you're amazing.\"\n\nHer hands ever so slightly increased their tempo.\n\n\"Yes... my girls will be home soon... what would they say if they found us like this? Your hard cock in my hands, all covered in oil? My hands jerking you off... you ready to come all over my face and breasts...\"\n\n\"God... fuck!\"\n\n\"Yes... come for me!\"\n\nAnd I came, a huge, agonising explosion of pleasure that raced from groin to brain and overwhelmed me. I could feel myself spurting massively, far more than was usual for me, like hot lava bursting forth. Though my slightly blurred vision I saw her push herself forward, thrusting her chest out, so her breasts became liberally splattered with my juices.\n\n\"Lovely,\" she murmured, as if to herself. \"So... lovely. Now just lie there for a little longer.\"\n\nFrom somewhere she produced some tissues and diligently cleaned me up. Even after that massive orgasm her touch on and around me was enough to get me semi-hard again. When she'd finished she bent her head and kissed me softly on the cheek. Her breasts grazed my chest as she did so, and I could feel some of the wetness on them rubbing off onto me.\n\n\"I must get cleaned up in case the girls do come back,\" she said. \"I'll let you see yourself out.\"\n\nAnd with that she was gone, leaving me lying there more than a little dazed.\n\n**\n\nPenny was eighteen two weeks later. Belinda had taken the girls away for a short holiday to visit some relative or other, so I saw more of my niece than usual. We even went to the cinema together on a couple of occasions.\n\nIt was after one of these trips, sitting in a coffee bar afterwards, that we had the talk that I had known was coming.\n\n\"What are you going to do next, Rob?\"\n\n\"Go back home, I guess.\"\n\n\"But it's not really a home, is it? You just rent it.\"\n\n\"That's true. But it's as much home as anywhere.\"\n\nShe stirred her coffee vigorously with a wooden spoon, though as far I knew she hadn't put any sugar in it.\n\n\"I'm going to be away at college.\"\n\nI nodded. She'd been accepted for the course she wanted, studying French and Drama at a university about two hours drive away. Jessica was going to the same one, where she'd be studying History. I was pleased about this. My niece was gorgeous and smart, but a little headstrong and opinionated. Perhaps she had some of the same genes as me. Jessica was always a little more cautious and thoughtful, and I thought the two of them complemented each other perfectly.\n\n\"But I'll have to go somewhere at Christmas, and Easter, and for the summer holidays. And when I just want to... you know... come home.\"\n\n\"I'm sure Belinda would always be happy to have you... pretty sure that offer is always open to you, Pen.\"\n\n\"Yes,\" she said. \"I suppose I'll do that.\"\n\n**\n\nThat evening, for the first time in a long time, I heard her crying softly in her room next to mine.\n\nI got up and padded to her room. I hesitated, then knocked softly.\n\n\"Hey Pen. Can I come in?\"\n\nThe crying stopped, but there was no answer. I took a breath and pushed the door open and went in.\n\n\"What's the matter?\"\n\n\"Nothing. I'm fine. Thanks.\"\n\nThis was patently not true. Somewhat nervously I went and sat on the end of her bed.\n\n\"You miss your mum?\"\n\n\"Yes... of course... but that's not it. Not tonight.\"\n\n\"What is it?\"\n\n\"I'm scared.\"\n\n\"Scared? Of what?\"\n\n\"Going away. Leaving here. Not being able to come back.\"\n\n\"You can come back whenever you want, Pen. Of course you can.\"\n\n\"No I can't. As soon as I go, this house is going to be somebody else's house. And I won't have a home.\"\n\nI supposed this was true, but it had never occurred to me as potentially being a problem. \"Home can be... over-rated.\"\n\n\"Maybe for you. You ran away from home as soon as you could, didn't you?\"\n\nI hadn't thought about it in quite those terms, but it seemed true enough now I thought about it. I nodded.\n\n\"But... I love this house. Mum found it for us. We loved it here.\"\n\nI considered. \"Well... maybe I could keep paying the rent on it for another year. So you could always come here whenever you wanted to.\" This would be a fairly massive financial stretch, but I thought I could just about do it.\n\n\"But that's silly.\" She sniffled. \"You'd be paying rent for two places, and only living in one.\"",
        "\"Yes.... I suppose that's true.\"\n\n\"And you like it here. The library wouldn't have any customers if it wasn't for you.\" Even through her tears I could see her smiling a little. \"The librarian will probably... go into mourning when you go. She'll wear like a black veil, and everything.\"\n\nI laughed at that. \"That's certainly over-stating it.\"\n\n\"Well... I think you should stay here.\"\n\n\"Pen... you won't be here! There's no reason for me to stay.\"\n\n\"I'll be here sometimes. And it'll mean -- I'll always know you're there, if I needed you.\"\n\nSome more sniffles followed. I moved a little gingerly up the bed and reached out and stroked her hair. I thought she might push my hand away. Instead she reached up and put her hand on mine, wrapping her small fingers around me.\n\nI felt a lump in my throat. \"Pen -- you're a capable, strong, brilliant young woman. Your mum would be so proud. You don't need me -- or anybody.\"\n\n\"Maybe. But I LIKE having you there. Just in case.\"\n\n\"I'll always be... ready to come and help you.\"\n\n\"But I want here to be our home. And I think... it would be good for you too.\"\n\nThis was, of course, a silly, rather childish, crazy, indulgent idea. She was only saying it, I was pretty sure, because suddenly the reality of going somewhere brand new and strange was imminent and scary.\n\n\"Go to sleep, Penny,\" I said. \"We can talk about it tomorrow.\" Then, without thinking, I bent my head and kissed her on the forehead.\n\n\"You'll at least think about it?\"\n\n\"Yes. I promise I'll do that.\"\n\nBack in my room I lay there on my bed, unable to sleep. Yes, it was a crazy idea. But... why did it appeal so much?\n\nJust as the first rays were coming through the windows, I made a decision. It was all in the hands of two people, I realised.\n\nAnd then, finally, I fell asleep.\n\n**\n\nThe first call was easy, and greeted with enthusiasm. The second call I decided to make in person.\n\nBelinda led me into the same kitchen area where we'd had our spat, all those months before. We chit-chatted about her trip and the girls going off to college. Ellie was also a student, but her college was much closer and she was still going to be living at home for the foreseeable future. Belinda said that was just as well, because if she found herself with both girls gone she would be beside herself with loneliness and worry.\n\n\"Actually, that's kind of what I wanted to talk to you about,\" I said.\n\nI told her about what Penny had asked me. I said the idea had some appeal. I wanted to support Penny as best I could for a little longer, until she realised she no longer needed me. And, yes, I did like it here.\n\n\"And... I thought maybe...\" I trailed off.\n\n\"What did you think?\"\n\n\"I was thinking of... going back to study. Do a degree at the local college. Part-time... it'll take ages. And I'll have to balance it with my work so I can pay the rent and everything. I spoke to Yvonne this morning about maybe her getting me an interview as a mature student, and she thought it was a great idea.\"\n\nBelinda studied me, a faint smile around her lips. \"Well, well,\" she said. \"Rob Mark 2. The caring uncle and the industrious student. Who'd have thought it?\"\n\n\"And I wanted to know... what you thought about it.\"\n\n\"You want my advice, Rob?\"\n\n\"I do, yes.\"\n\nShe didn't speak for a moment, just stirred her coffee. \"Do you want my advice, or my blessing?\"\n\n\"I feel like... I can only do this, if you agree and... you'll help. I feel like this town is... your home, not mine. I know it sounds crazy, but... I wanted to know that you were OK with it.\"\n\n\"OK with it?\"\n\n\"Yes.\"\n\nShe was still looking at her coffee. \"Or did you wonder, after that little interlude a few weeks ago... if perhaps I might be interested... in something more?\"\n\nI felt myself going a little red, which I hated. \"I guess... maybe that was part of it.\"\n\nShe looked up at me again, another long, speculative glance that made me feel as if she could see right through me.\n\n\"You've been honest with me,\" she said. \"I suppose I should be honest with you.\"\n\nI nodded.\n\n\"When you called me,\" she said. \"I was naked. I nearly always am, when I'm here. And when you said you were coming over, I went to put some clothes on. Because I didn't want you to feel uncomfortable.\"\n\nI nodded, though I wasn't really sure what her point was.\n\n\"And part of me resented that, Rob. That I had to change who I was, for you.\"\n\n\"I would have been fine with no clothes,\" I said, trying to make a joke of it.\n\nShe didn't seem to hear me. \"But I'll tell you something interesting. I found myself picking out what I should wear for you. Nice underwear, though I usually don't wear it. This top, with just the right amount of cleavage. These jeans. They're a bit tight, but flattering, I've always thought. Do you like what I'm wearing?\"\n\n\"You're beautiful,\" I said, and meant it.\n\nShe looked at me solemnly. \"I'm going to take them off now. And, if you're serious about staying, if you're serious about me... you should get undressed too.\"\n\nShe slid off her stool and undid her jeans, sliding herself out of them with an easy, practiced movement. Then her top was off, and her underwear, and in what seemed like a blink of an eye she was standing beside me, completely naked and utterly lovely.\n\nA little less smoothly, I began to undo my own clothes. I fumbled a little with the buttons of my shirt and she came closer and undid them for me. Her fingers brushed the skin of my chest and it felt like little sparks of electricity flew between us. As she tugged my boxer shorts down my swollen cock swung free and upwards in the cool air.\n\n\"Mmm,\" she said, and stroked me gently. \"Hello again.\"\n\n\"I'd like to take you to bed,\" I said. \"Please, Belinda.\"\n\nHer fingers encircled me in that teasing grip I remembered so vividly.\n\n\"Yes,\" she said. \"Please do.\"\n\n**\n\nHer bedroom was large and plush, with a huge double-bed neatly made with cool, crisp white sheets. I stood and kissed her and held her close, feeling my hardness pressed against her belly, her nipples and breasts crushed up against my chest. She moaned softly as I kissed her.\n\n\"God,\" she said. \"I really need you so badly.\"\n\nWith other women I had always been a little selfish. I had used their bodies rather ruthlessly, focusing exclusively on my own pleasure, my own orgasm. They had mostly been drunken, sweaty, frantic joinings. The few girlfriends I'd had -- no relationship had lasted more than a few weeks -- had seemed perfectly content with my performance.\n\nNo, as I kissed Belinda, I felt a surprising nervousness. This felt much more important than any sex I'd had before. I realised I wanted to please her far more than I wanted to please myself.\n\n\"Tell me what you like,\" I whispered to her. \"Tell me what you like, please.\"\n\n\"I like to be fucked,\" she murmured. \"I like to feel a man inside me, taking pleasure from me, using my body as it was meant to be used. And I like to do this, Rob.\"\n\nShe sank to her knees and took me in her mouth. She looked up at me, a vision, her eyes gleaming as she sucked me. Her mouth was like an oven, and I groaned.\n\nFor a few minutes we stayed like that, her hands kneading my buttocks as she sucked me with a loving fervour that was unlike anything I'd ever experienced. She was almost in a trance, as if she was worshipping my cock, sometimes taking me out of her mouth and rubbing it against her cheek as if to reassure herself of its existence and hardness. Then she would take one of her hands and stroke me and cup my balls and run her fingers up and down its length before sliding me back into that welcoming hot wet mouth.\n\nI'd never seen a woman so totally lose herself in the act of orally pleasuring a man. It was captivating. But I didn't want it all to be one-way. She was too important to me.\n\n\"Please,\" I said. \"Lie down.\"\n\nWith some reluctance she let go of my cock and rose to her feet, kissing me quickly on the mouth. I could taste the faintest trace of saltiness.\n\nThen she lay down on the bed in front of me, and spread her legs.\n\n\"Fuck me,\" she said. \"Fuck me now, please.\"\n\nBut I wasn't quite ready to do that. Well, I was more than ready, but I had other plans first.\n\nI knelt between her legs and kissed her gently around the tummy, then started to work my way down her body. The tops of her hips, so perfect and rounded. The inside of her thighs. Closer and closer to that perfect wet slit.\n\n\"Oh no,\" she said. \"You don't need to do that... you can just... oh god!\"\n\nShe broke off as my tongue flicked across her clit for the first time. I was gratified that her body convulsed as if from an electric shock. Her legs involuntarily tried to close themselves but I nestled myself lower and fitted more snugly between them, ensuring they remained open and nothing could stop me continuing.\n\nI felt her hand in my hair.\n\n\"God that's amazing but you don't need to... oh fuck!\"\n\nI let my tongue answer her faint protests, working up and down either side of her entrance, relentless circular swirls, as my fingers first stroked her hips and then reached up to encircle her nipples.\n\nI don't know how long we stayed like that. Two minutes? Five? Ten? All I knew was that I wanted to feel her orgasm burst onto my tongue, and until I did that I was content to stay there, feasting on her. Her body seemed to have surrendered to me now, and although her hand was still in my hair now it was pushing me downwards, guiding me. Her hips rose and fell as she sought out the friction she needed and craved and I tried to work with her, only occasionally teasing her by pulling my head away so the contact between us was momentarily broken. When I did this she whimpered and moaned but for now words seemed to be beyond her.\n\nEventually I felt the pressure building up within her. Her soft noises of pleasure began to change and became more urgent and insistent. The movement of her hips became faster and more rhythmic. I became more brutal in the use of my tongue, more forceful, and I slid one of my hands beneath her so I could lift her body up to meet me.\n\nShe came with a loud, drawn-out cry that was as lovely as any sound I'd ever heard. Her fingers squeezed my scalp and suddenly her body collapsed below me. I could feel her shaking. I lay there, proud and pleased and smug, as only men know how.\n\n\"Oh god,\" she finally managed. \"Oh my fucking god.\"\n\nIt was my turn now to rise up along the length of her body and kiss her. My cock dropped deliciously down between her legs and her eyes widened at the contact.\n\n\"I want to fuck you now,\" I whispered.\n\n\"Oh fuck if you don't fuck me now... please god put your cock in me.\"\n\nI eased into her. She was tight after her orgasm and she whimpered again as my cock slowly stretched her out.\n\n\"Oh I love how you feel inside me,\" she said.\n\n\"I love being inside you,\" I said.\n\n\"Fuck me hard, Rob. Use me. Just use me, please.\"\n\nI had been intending to use a more gentle approach, wanting her pleasure to at least match mine with slow, gentle teasing strokes, but her words excited me and, in truth, echoed what I really wanted. So I began to slide heavily in and out of her, building the force and rhythm with each third or fourth stroke, until I was pounding at her with a force and ruthlessness that I could never remember using before.\n\nI was worried that I would hurt her, but her arms were tight around mine and her mouth was next to my ear, murmuring and gasping encouragement and wonder.\n\n\"God yes fuck me hard just like this... it's been so long...\"\n\nI knew I wouldn't last long. My orgasm was approaching, very soon now, and I was greedy. I wanted to prolong this glorious feeling of being lost inside her -- in truth I never wanted it to end. But when I tried to slow down she scolded me softly and encouraged me with her hips.\n\n\"Next time,\" she gasped. \"So many next times, Rob. I promise.\"\n\nAnd with that I decided to let go. I hammered deeper into her, frantic, desperate, strokes.\n\n\"Oh fuck Belinda I'm going to...\"\n\n\"Yes... come inside me... fill me up.\"\n\nI exploded inside her. Just like the time when she'd masturbated me to orgasm on the table, it was almost painful in its intensity. A searing heat that consumed me, shooting out of me and into her even as it raced to every corner of my being. I felt my body shake -- once, twice, three times -- as my cock spat its tribute into her tight, welcoming body.\n\nThe next thing I can remember is the feel of a cool damp sponge on my groin. I opened my eyes and saw her, smiling a secretive little smile to herself as she cleaned me. Then she put the sponge carefully away on a bedside table and lay back down beside me, nestling herself into my shoulder as I put my around her. I kissed her hair.\n\n\"On balance,\" I said, a little faintly, \"I think you've persuaded me to stay.\"\n\nShe kissed me back. \"I was rather hoping I had.\"\n\nWe lay there for a long, lovely time, not needing to speak, just enjoying the closeness and the feeling of our bodies pressed together. Then we enjoyed a long, leisurely shower together where, I'm proud to report, we both brought each other to orgasm again.\n\nAs we were towelling ourselves off in the bedroom we heard the door slam downstairs.\n\n\"The girls are home,\" she said. \"I should get some supper for them.\"\n\nShe hung up her towel and sauntered towards the door. I was admiring her body when I realised she was intending to go downstairs without a stitch of clothing on. And, not only that...\n\n\"Fuck!\" I said. \"My clothes are in the kitchen. You'll have to bring them up to me.\"\n\nShe turned slowly and looked at me. Her eyes were bright and devilish.\n\n\"Certainly not,\" she said. \"Come just as you are, please. House rules. This is the new you, remember?\"\n\nWith that she went out of the door, closing it behind her. I stood there for a few moments, listening to the sounds of cheerful conversation from below. I picked up my discarded towel and fastened it around my waist. I turned and regarded myself in the mirror.\n\nSlowly but deliberately, I took it off again and hung it up beside hers. I opened the door. Then I took a deep breath and followed her down the stairs.\n\n**\n\nWith thanks to VM and JR for proof-reading and very helpful feedback."
    ],
    "authorname": "AnnasFriend",
    "tags": [
        "handjob",
        "mature",
        "nudism",
        "nudist",
        "older woman"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/helping-her-saving-me"
}