{
    "title": "\u00c6gir\u2019s Bride Ch. 07",
    "pages": [
        "Breakfast was almost over by the time, they managed to make it downstairs. She smiled at Mikael, who was trying valiantly to feed Monika as she brushed her dolls hair and then lined them up perfectly next to the wall. Petrine looked up and smiled at her as she took a plate off the table, \"God morgon, good morning.\"\n\nKirsty blushed as she tried to come up with an excuse for their tardiness, but Olaf simply chuckled and looked past her to Bjorn, \"God dag is more like it.\" She could not stifle the chuckle as her Thor's ears reddened and he looked sheepishly at the floor.\n\nSven stood and took his plate to the kitchen, \"I need to go into town for some things. So if you will all excuse me. Hopefully, by the time I get back, we can still manage a bit of repairs on the boat, baby brother?\"\n\nBjorn's face darkened into a frown, \"I'll go with you into town now if you like, big brother.\" He moved between them, his hand gently pushing her more behind him as he spoke. \n\n\"Not necessary. I just need to see if a package has arrived for me,\" despite Bjorn's efforts, she felt this man's stare to her core. She knew that whatever it was, it pertained to her. \n\nShe placed her hand on Bjorn's shoulder. Right then, she needed him. Needed his protection. Needed to steady herself. She was not prepared for this. Not after last night. Especially not after this morning. She trembled. She wanted to turn and run back up those stairs. Lock herself in that room...and cry. \n\nAs hard as it was coming to terms with how she felt about Bjorn, she knew that Mikael needed something very different from her. And while she was still very much attracted to her 'bad boy,' it was the loving daddy that she could focus upon as she came to terms with everything. She recognized too that their 'truce' would give her that time to adjust...to all of it.\n\nBut this man? Sure, she was still attracted to him. The whole dark brooding thing still made her tummy tighten into knots. Almost as much as his ropes did...although she was learning that none of them were a slouch with that, but Sven was still as much the master with it as Bjorn was with those floggers last night. \n\nJust then more powerful even than that attraction was her anger at him. He did not genuinely need her the way Mikael did to help him reach Monika. He sure as hell did not love her the way his 'baby' brother did. \n\nNo, he just wanted to use her. Just wanted to 'breed' her like some race horse or prize show dog. Well, she had no intention of being his 'bitch.' Not that way. She was determined. If she were to have a baby...when she had a baby...it would be one conceived in love. And that pretty surely left Atlas out of the 'sperm wars' as Mikael called it. Let him fucking keep on carrying the weight of the world all alone on his shoulders.\n\nThen Petrine stepped forward and smiled at her as she placed her hand on her eldest son's arm, \"Is it all right if I come with you, Sven? I need to go into town for a bit.\"\n\nHis face lightened as he turned away from the two of them. He smiled at his mother, \"Of course, Mama. I will be leaving in five minutes.\" But that dark mask was back the moment he turned back around, \"If you will excuse me.\"\n\nThat might have been all, if he had not reached out his hand as they passed one another. Him on this way up the stairs. Her on the way to the table. His fingers brushed hers lightly. \"I will talk to you later.\"\n\nAnd suddenly she had no appetite. Because as angry as she was with him, as much as she liked Mikael, even as fucking much as she loved Bjorn...she still got those same butterflies in her tummy as she had when she first saw that grainy photograph, when she looked up into those blue eyes and that hand had drawn her through that turnstile.\n\nAnd into this madness...that was her life now. \n\nShe looked up and saw the dark pain on Bjorn's face, but still he forced a smile and nodded at her. She saw Mikael watching them as he held a spoon of porridge suspended in mid-air. But it was Petrine's smile and soft nod that reminded her, 'sometimes it is the one's that you find hardest to love that need it the most,' Kirsty could almost hear the woman whisper in her ear.\n\nShe nodded as she pulled her hand away slowly, \"Sure.\"\n\nHe nodded and continued on his way, just as she continued on hers. But it was enough. Enough of a reminder to turn her stomach sour. She tried to bypass the table as she headed towards where Petrine now stood in the kitchen area washing dishes, \"Let me help with those.\"\n\n\"No, I will help Mama,\" it was Mikhail, who spoke loudly across the room as he picked up the bowl he had been trying to feed Monika. She smiled as he gently signed, \"Food finished,\" using Makaton. But what made her really smile was that while she did not look up at her father, did not say anything or even make a noise, Monika paused in mid-stroke through her doll's hair. \n\nShe felt the tightness in her chest at how quickly the child was responding. This...this was something she had missed her whole career. When you saw a child for less than an hour once every week or two, you never noticed the small strides. She felt the tears clouding her eyes as she looked up and saw him. \n\nHe smiled at her...and she knew, knew that he too recognized that tiny victory, baby step of progress. In that moment, she knew...she could love this man too. Maybe not the same way that she did Bjorn. Definitely not. But that did not make it any less...or any more real. \n\nShe frowned as she nodded and looked up the stairs where he had disappeared. Him? He was another matter. If he wanted a damned son so fucking badly, there were other options. Let him find a surrogate...because she sure as hell wanted no part in being nothing more than that for the man. \n\nShe felt the gentle hand on her shoulder, \"Go eat some breakfast. This old heart cannot handle another scare like yesterday, my beautiful daughter. I have waited too damned long to have one. Eat. Let Bjorn and Mikael see to your needs this morning. We will talk more this afternoon.\" \n\nThe woman leaned in and brushed a soft kiss against her cheek, \"It is a real bitch when love comes into this mess. And you, beautiful, have the look of a woman very much in love. But remember what I said...not all of them are as easy to love. But you are the one that can draw it out...or you can turn away their needs. But never doubt for a moment, they all need you, need your love.\"\n\nThen she felt warm arms embrace her, draw her close and she knew the same peace and safety in this woman as she had in her son's this morning. How many times had she dreamt of this as a little girl? When she was confused, lonely or frightened. How many times had she wished for her own mother to just hug her, hold her and tell her everything would be all right? \n\nPetrine released her slowly, \"Go, eat some breakfast. When I come back from town, you and I will take Monika back to the playground. You need to teach me some of this Makaton stuff too.\" She brushed a hair back from Kirsty's face, \"You really are the one, sweetie. You are perfect. For them. For my granddaughter. Even for him.\"\n\nKirsty saw a shadow cross the older woman's face and she gently squeezed her hand, when she smiled at her this time there was something almost forced about it. \"And I have a story to tell you. The story of my wild flowers. But first you must eat.\"\n\nPetrine smiled as she took the bowl from Mikael and placed it in the sink. \"Off with you too. I can manage a couple of dishes.\"\n\n\"Let him help, woman. Go get ready to join Sven.\" Kirsty saw the startled and almost pained look on the woman's face as Olaf playfully swatted the woman's butt...that she still envied. \n\nThe way the woman jumped at such a light slap was confusing. Until she saw that blush and the way the older woman dropped her eyes and whispered, \"Yes, Sir,\" as she scurried past her with a wink.\n\nShe could not stifle the giggle as she turned back to the table. \"Nuts do not fall far from the trees in this family, it seems,\" she whispered. \n\nHer husband smiled up at her as he moved over a bit for her to sit next to him. \"What did you say?\"\n\nShe shook her head and smiled, \"Nothing...absolutely nothing.\"\n\nHe leaned in and nibbled her ear, \"No secrets, remember?\" He bit down hard and she tried her best to stifle a moan but it still came out a low whimper. \"I will get it out of you. Trust me on that one.\"\n\nShe caressed his handsome face, \"Trust me, my love...some secrets, you do not want to know.\"\n\nHis face darkened once more, but this time she recognized it was passion, as he bent in and captured her lips, \"I want all your secrets, woman.\" She sighed as his tongue slipped inside her mouth and caressed hers. By the time he drew back, she was breathless. \n\n\"Here, you need to eat,\" it was Mikael's voice from over her shoulder that brought her back to reality as he sat a bowl of the steaming porridge and a cup of tea in front of her. \n\nShe saw them look at one another. Size one another up like wolves or lions. Then Bjorn nodded and smiled, \"Thank you, brother. Do you need help with the dishes?\"\n\nMikael shook his head, \"No, I can handle it. Monika is still playing with her dolls,\" he smiled as he nodded to where his little girl sat brushing their hair once more. \"You take care of her. We don't want to her dropping again like yesterday.\"\n\nBjorn nodded, \"Thank you.\" He turned to her with a soft smile, \"But if you don't start eating that damned porridge, your ass is going to get punished.\"\n\nShe thought about the look on Petrine's face when Olaf lightly tapped her bottom. \"Definitely not,\" she giggled. Both of them just stared at her puzzled. Some secrets they were not ready to hear.\n\n***\n\nOlaf watched Bjorn as he virtually gouged the wood with the plane. He was tempted to laugh, except that his son's pain overrode it. He might be the spitting image of his father, but there was no doubt that it was his mother's soft heart that was giving him trouble this day. \n\n\"Sometimes a lighter touch works better than all the heavy handedness in the world,\" he smiled to him. \"Give me the plane. I'll show you.\"\n\nHe saw the momentary flash of anger in those eyes that was the only physical resemblance to his mother. Not just the color, but way they danced with this man's emotions. He stepped back, half expecting Bjorn to throw the plank he had been planing at him. But after a moment, he just shrugged and handed the tool to him. \n\nHe took it and began to run it with the grain of the wood, shaving it lightly as the younger man watched in silence. \"See how easy it is when you work with the woods own nature? When you allow the tool to simply do its job?\"\n\nBjorn simply nodded in silence as he lifted a bottle of water and drank from it. Olaf returned his attention to wood, but he saw how Bjorn watched without seeing. It was not Stig that he reminded him of then, but Andreas. \n\nThe two men both felt too deeply. Loved too much. He had watched that kind of love destroy his brother. He did not want to see that happen to this one too. \"It is not the easy 'happily ever after' fairy tale that your mother wove for you, is it, son?\"\n\nBjorn looked off, studied the clouds as if searching for the answer. He waited, just waited. Wondered if Bjorn would have found it easier to talk about this with his own father. But the truth was that the man would not have understood. Would not have had the answers his son needed even if he were alive. His answer like Sven's had always been to bottle such emotions...work harder. But he could never drown himself in work or the sea any more than Andreas could the bottle. Sometimes the only thing you could do in this life was tread water...and wait. \n\nWhen it finally came, Bjorn's only answer was a gentle nod of his head. Olaf debated his course of action. He was not sure that his counsel would be welcome. But then too he had spent decades watching silently as his brothers self-destructed. And gods be damned, he was not doing it with his sons...any of them.\n\n\"Your mother meant well, son. But she conveniently forgot all the black eyes, broken ribs and bruised knuckles.\" He chuckled, \"I never did get how such a fucking smart woman could buy all our excuses about 'accidents'.\"\n\nBjorn frowned and shook his head, \"Why don't I remember any of that growing up?\"\n\n\"Because things changed after you were born.\" It was Olaf that studied the clouds then. Whether it was the gods and goddesses in Asgard or his brother from whom he sought guidance, he was not certain. So many fucking secrets. He knew what they had done to his wife but the ugly truth was that this one was a ticking time bomb that could destroy all this man had come to believe in. \n\nIn the end though, it was not his truth to reveal. But it was something he and Rachel needed to talk about. Bjorn was not a child anymore. Their feeble excuses of protecting and shielding him were no longer valid. He had as much right to know the truth as his brothers. Just not now. Not like this. And not from him.\n\n\"Things happen. People grow up. It was a wakeup call when we lost Lars,\" that much was the truth for now at least. \"You learn to manage your feelings as well.\" He chuckled as he thought about watching her sleep that morning, \"Not that they get one bit less fucking intense mind you. You just learn to think before you speak or act. To temper emotions with logic a bit.\"\n\n\"When? When do you fucking learn this, old man?\" Bjorn's hands fisted into tight balls as he spoke. \"How? How the fuck do you stop being jealous of your own gods be damned brothers?\"\n\nHe laughed then, \"That you never do. Even when they are fucking dead.\" He sighed and looked at his son, but it was his brother he saw in the man just then. \"Our way of life is not easy. None of it. The sea. Marriage. Hell, even the Holding, son. Do you know what they all have in common?\"\n\nBjorn shook his head. \"They are all fucking hard. Life is a bitch.\" Olaf chuckled, \"Honestly, I think it is for everyone. Ours may be a different kind is all.\"\n\nHe held the younger man's gaze, \"But look around you, son. Look at that boat. Look at this land. Think about her...your mother. The other part of that truth is that it is damned beautiful too. As hard as it fucking is, trust this old man, who has seen and lived through more fucking pain than I hope any of you ever will. It is all worth it.\"\n\nHe looked so much like his father when he stared off at the water. But he was all his mother's son when his voice cracked, \"I love her, you know.\"\n\n\"And you want her...all to yourself, don't you?\"\n\nThe tears that swam in the younger man's eyes then reminded him of the only one time that he had seen them in the man's fathers. The day this man had been born. The day they almost lost her forever. \"Yeah, I do. Is that wrong?\"\n\nOlaf laughed, \"No, son, no, it is not wrong. It is natural. But let me challenge you a bit...women are complex. Much more complicated than we men. I heard someone once say that men only needed three things to be happy. Feed us. Fuck us. And leave us the fuck alone.\"\n\nBjorn laughed, \"Yeah, I saw the same damned thing on my friends feed once. Although I am not too sure about that last one when it comes to her.\"\n\nOlaf nodded, \"Agree with you there, son. But the point I am trying to make is that sometimes what they need is more than just one man can provide. As much as I love having your mother all to myself. As much as I fucking hate admitting this. There are times when I wish I could turn to your father to be more firm with her. To Andreas to make her smile. And Lars...he could make her laugh even when she was mad.\" \n\n\"Now...now I have to try my damnedest to be all those things to her. Not only is it hard, but I know that more often than not I fail. It is only as I struggle to be all that she needs me to be that I realize just how blessed we all were to share this bond. Cause trust the old man loving a strong woman will fucking test you to your core. And having your brothers there to share that burden...and that joy? It isn't easy...but like the sea, like this land...like our women...it is worth it. It can be beautiful.\"\n\nHe chuckled, \"Once you get a few black eyes, broken ribs and busted knuckles out of the way at least. I was going to put my money on that being you and my son. But the way your big brother acted at breakfast this morning, I have changed my mind. I am just not sure which of you two are going after him first.\"\n\nBjorn chuckled, \"He keep treating her like nothing more than his pride breeding mare, and it might be both of us.\"\n\nOlaf nodded his head, \"Just remember that as much as you may look like your father...that one acts like him. And yes, he and Andreas went at it more than once over that very thing. So did he and I. But if you ever doubt how he felt about your mother, go have a look at that greenhouse. He built that whole damned thing himself. Every plank. Every nail. Every piece of glass. He cut and fit himself. And we all tried to get him to let us help. But he wouldn't.\"\n\n\"And never once do I remember a trip when he did not bring her back a book and some damned flower. Not even if we were gone just a day or two. Some men, son, just don't find it as easy to say or even admit what they feel. But that don't mean they don't feel it just as much as you do.\" \n\nHe placed his hand on the bigger man's shoulder and smiled. \"So before you go judging your brother, before you count him out...think about your father as he lay dying on that boat. Remember how he battled for three fucking days to stay alive as we fought to get back here. And remember too the tears in your mother's eyes when she held him as he breathed his last...in her arms. It wasn't a fucking hospital your father wanted, it was her.\"\n\nBjorn frowned, \"Trust me, I remember.\"\n\nHe nodded, \"Well, your mother should be back soon. You seem to have things under control. So I will leave you to it now.\" \n\n'And have a word with your mother about spreading a bit of the truth beyond just the two of us,' he thought as he stood to go.\n\nBut a hand on his shoulder stopped him, \"Thanks. Thank you,\" Bjorn stopped and frowned.\n\n\"Papa is fine, son. I don't think your father would mind. Or your brother. I am pleased to think of you all as my sons now,\" he offered.\n\nBjorn nodded, \"Thank you, Papa.\" Though Olaf could tell the words were not easy for him. Then again as he had told him...life was not easy. \n\nAnd what he had to say to his woman now sure as hell would not be. But one thing he knew, this was something he could not and would not order her to do. It was her secret...to reveal in her time. He just hoped it would be another step closer to her healing. A healing that was almost thirty years too late. He steeled himself for another battle as he headed back to the main house, leaving Bjorn to his work...and his battles. \n\n***\n\nKirsty laughed as Monika squealed. Mikael was pushing her in the basket swing. She could not stop herself from smiling at the way his daughter could so easily strip away this man's walls. Her throat tightened at how hard he tried. Tried to reach her. Tried to be anticipate anything she needed. Tried to be a good father. It was a totally new side of her 'bad boy.' One she found herself getting lost in. \n\n\"It is the only time my son is ever the man I remember,\" said the feminine voice behind her. \n\nShe turned and smiled at Petrine. The woman looked tense even as she forced a smile. \"Leave her with her father for a while and walk with me, child. Time for that story I promised you earlier.\"\n\nKirsty saw those shadows again. The lines around the woman's mouth were tight and the ones in her forehead deeper set. Even then she was stunningly beautiful. She sighed as she shook her head, \"If it upsets you, we can talk some other time. You really don't have to do this, if you don't want.\"",
        "The woman sighed and she could see tears beginning to gather, \"No, my dear. It is not a matter of what I want, but what you need. What you need to hear. That is what matters most now.\"\n\nThat forced smile made Kirsty want to argue some more, but the woman just turned and waved to Mikael. \"I'm borrowing her for a bit,\" she yelled with finality.\n\nThen she turned and wrapped her arm about Kirsty's waist and drew her towards the greenhouse in silence. It was a short walk, less than a minute. But once they were there, the woman paused. Her hands ran along the wooden frame of the doorway. Kirsty would have sworn it was almost as if the woman were caressing a lover. \n\nAnd when she finally did turn back to face her, those green eyes swam in tears. \"It's beautiful, isn't it? Can you believe it is almost as old as Bjorn? But he built it to last.\" She shook her head as she turned the handle and held open the door, \"Join me for a cup tea, please.\"\n\nKirsty nodded her head and stepped inside the doorway. And into another world. It was warmer. Much warmer. Sweltering almost. Which was surprising given how late in the autumn it was, how cold it was outside. But in here it was spring, almost summer. And it smelled of it too. The exotic blend of flowers and herbs almost made her head swim they were so intoxicating. \n\nShe paused just inside the doorway as the older woman came and held out her hand, \"Give me your coat, sweetie. You will never need it in here. No matter how cold it gets out there, it will always warm in here. Freezing cold on the outside and warm inside, just like the man, who built it,\" her voice cracked and Kirsty saw her brush a couple of tears away with the back of her hand as she took her coat. \n\nShe hung it on a hook by the door, took off her own and placed it on another above it. She motioned towards the far back corner where a wicker chair, loveseat and table sat. Kirsty nodded and silently took a seat on the chair. The woman did not join her immediately but busied herself in the other corner where a small refrigerator and kettle were. \n\nKirsty looked around as Petrine made tea. The place was big, bigger than it looked. Bigger even than her bedroom. It was full too. Brimming with tables and shelves. More plants that she had ever seen except at a garden center. There was a small tree in one corner that looked like it still had a couple of oranges hanging from its branches. Of course, there were other edible plants too. Tomatoes, peppers and strawberries. A whole shelf of them in fact in various stages of development. \n\n\"Fresh strawberries...all year round,\" the woman wore a bitter-sweet smile as she held out a steaming cup. Kirsty took with a smile of thanks. \"It is herbal, my own blend, not your English milk stuff. I hope you don't mind. I will remember to bring some down from the house for you,\" she smiled as she moved a laptop over and curled up on the love seat.\n\nKirsty sipped her tea. It was a delicious. Mint and chamomile she recognized but there were other herbs as well that she could place place. The woman sipped hers as well. Kirsty did not disturb her as she looked around this place, lost in her memories and thoughts it seemed. The silence might have made some people uncomfortable, but Kirsty waited. Though she did not know for what...she waited. \n\nIt truly was beautiful. Quiet. Warm. Petrine was right, she could not feel so much as even the tiniest draft. So many flowers too. The shelves on the other wall contained roses, lilies, tulips and so many others; some she recognized, but many she did not. She smiled as she saw the tiny white flowers that he had passed to her that first day, barely moments after he had drawn her through that turnstile. \n\n\"White lace, Orlaya grandiflora,\" Petrine smiled at her as she brought the cup to her lips and sipped. \"He picked them himself you know,\" she shook her head. \"My eldest son may carry Lars's name, but in most ways he is more like the father, who raised him than the one whose name he bears.\"\n\nKirsty swallowed a sip of her tea. It was the opening she had been looking for to ask the question that had been burning in her mind. But did she have the courage?\n\nThe warm chuckle made her look up as she pondered it, \"Go ahead. Ask. Better yet, I'll save you the embarrassment and just answer. I don't. We don't. Not for certain anyway.\" The older woman took a slow sip of her own tea, perhaps allowing that titbit to sink in. \n\nKirsty frowned, \"But? Then how? Why?\" she stammered even though she knew she made no sense.\n\nPetrine laughed, the first genuine one that she had heard from the woman that day. It broke the tension. \"Sometimes it is easy. You can see how much like his father Mikael looks. And one day I will pull out my photo album. There are not many pictures mind you...mostly when I would go with them on a trip. Our kind of family vacations...holidays. You will see then that Bjorn is the spitting image of his father.\"\n\nShe shook her head and that wistful look was back. She took another drink, but this time Kirsty thought it was perhaps to fortify herself for whatever was to come. \"Stig. It is his story I need to tell you now, sweetheart. His...mine...and his sons...the one of his body and the other of his heart.\"\n\nShe paused for a long moment. Kirsty could see the tears gathering, she thought about stopping the woman, trying once more to persuade her that this was not necessary. But something told her it was...for both of them.\n\n\"You are in love with my baby already.\" It was not a question. \"I'm not surprised. Between his daddy's drop dead good looks and my heart, like I said, some are easy to love. And I know that he loves you just as much,\" she shrugged, \"Maybe even more. But I did not come here to talk about easy roads.\"\n\nShe raised the cup once more and smiled around its brim, \"I see too that you have found a bit of common ground with Mikael.\" The smile she gave her then was genuine, \"And I want to thank you for the miracles you are already working with my little hellion. But I knew you would, knew you could not resist her any more than the rest of us can.\"\n\nShe sighed heavily, \"Just remember as wonderful a friend and father as he is, that man bears scars. But that is not my story to tell. I have faith that one day...maybe not right away, but one day, he will tell it to you himself. Be patient with him. And every now and then push his buttons,\" she giggled. \"That one not only looks like his father, he acts like the man too. And trust me two things I know...you will never find a more loyal friend.\"\n\nShe winked and shifted on the soft floral cushions of the love seat just a bit, \"And just when they get comfortable, think they have you, think they know it all, that is when you push their buttons.\" The woman's giggles reminded her more of Roz, her ribald friend from work, than a mother-in-law just then, \"Just make damned sure you are ready for the consequences.\"\n\nHer face changed once more. Darkened as she spoke again, \"But it is my eldest that I want to talk to you. You asked earlier how I know, how any of us do. The honest truth is with that one...I honestly do not know. I am never sure.\" When she brought the cup to her lips this time, Kirsty could see that her knuckles were almost white. \n\n\"I was seven months pregnant with him when...\" Her voice cracked and she finally lost the battle to hold back the tears. \"When Lars was...when Nj\u00f6r\u00f0ur, the Norse god of the sea, wind, fish, and wealth claimed his price.\"\n\n\"It was the first time I truly understood how tough this life is. It was especially hard as he was the youngest. The baby.\"\n\nThe woman smiled and looked off again as she spoke, \"Oh, that man. He was even more of a jokester than Bjorn. He could make me laugh no fucking matter how angry I was. And they used that too. He was the one they always sent to calm me down when I started breaking dishes.\" \n\nKirsty felt hot tears stinging her own eyes. She could hear the love in the woman's voice as she spoke of the man. And Kirsty could not even imagine what it would feel like...did not want to even think about it. Especially him, her jokester. Silence reigned once more as the women drank tea. One lost in the past, the other staring into the gaping uncertainty of the future. \n\n\"So when Sven was born...well, I am never completely sure if we all did not just see what we wanted to, more than what was there.\" Petrine wiped her eyes with the back of her hand. \"Damn it, I should have been smart enough to bring Kleenex for this one,\" she chuckled. \n\n\"As the eldest, it was Stig though who felt it was his responsibility to take Sven under his wings. They are so fucking much alike in that way too. Always taking on more responsibility than it is theirs to bear alone.\"\n\nShe smiled as she continued, \"Sometimes when I look at Sven...just certain expressions. I see Stig in him as much as I do Bjorn.\" She burst out laughing then, \"Although I did my damnedest to make sure my first child was not his.\"\n\n\"Oh, yes, I see the idea has occurred to you too. I thought it might have. Despite what I told you that first day, yes, yes, I played favorites. Back then honestly it was mostly Lars that I called to my bed...as often as I could anyway. Maybe that is the other reason we all just assumed that Sven is his son,\" she shrugged.\n\n\"You see I was still angry with Andreas. He was the bait...just as Sven was with you,\" she chuckled again. \"Someone really needs to teach you a poker face. Although maybe not until you have played a round or two of strip poker with my sons.\"\n\nKirsty felt her face burn as she sputtered tea out through her nose, \"Oh please! Not you too. At least, let there be frankness between us. You have three husbands. I had four. If we were one of those frigid bitches that didn't enjoy sex, we would be in a whole world of hurt.\" Petrine joined her in tea spewing laughter then. \"Quite literally actually.\"\n\nWhen they finally managed to stop laughing there were tears of a different kind in their eyes. Kirsty looked at her, \"I am sorry. It is just that...well,\" she stammered and fumbled until she finally managed to force the words out. \"It is just that I was never close to my own mother. We never really talked about...\"\n\n\"Sex, dear. Nasty, raw, wild and sometimes oh-so fucking sweet sex. It is all right, most people don't. Hell, my sons like burying not just their heads but their whole fucking body in the sand when it comes to Mama and it.\" She shook her head and giggled like a teen once more, \"If they only knew. But back to you...and your sex life.\"\n\n\"Yes, I was the one to convince Bjorn not to use his photo on the website. The boyee...\" The owman stuttered over the word, then paused and began again. \"My youngest son would have attracted way too much attention and not necessarily the right kind either.\"\n\n\"And I would bet my bottom dollar...if I can still find one laying around here somewhere...that if it had been his picture on that profile, you would not have responded back, would you?\" Petrine studied until Kirsty shifted uncomfortably on the chair. \n\nIt was difficult to admit as she blushed, bit her bottom lip and nodded, \"Probably not.\"\n\n\"I thought as much. And I admit...that was the tiniest bit of it with his father too. But try this one for size, sweetheart, Bjorn's too good looks with Sven's cold devil may care attitude. Intimidating? Hell, yeah. I thought Stig was the most arrogant, self-centered, egotistical, misogynistic...am I missing any here?\" she laughed. \n\n\"As for Olaf, that man always knew me too well. Got under my skin. So next to Lars's easy-going...\"\n\n\"Happy,\" Kirsty blushed.\n\nPetrine raised her eyebrows, \"Oh do tell?\"\n\n\"I nicknamed them all. That first night in the cabin. Over dinner. I gave them all nicknames,\" she admitted shyly.\n\nThe woman frowned, \"Of course, Happy could only be Bjorn. But now you have me really curious. What is Mikael's?\"\n\n\"Grumpy,\" the color spread from her cheeks down her neck into her jumper.\n\nPetrine nodded her head and then frowned, \"Doc, Sneezy, Bashful, oh what are the others' names? For the life of me, I cannot figure out who Sven might be.\"\n\n\"Dopey and Sleepy...and no, none of them fit,\" Kirsty wrung her hands in her lap. \"Atlas...Sven's is Atlas.\"\n\nShe smiled and nodded, \"Yes, yes, he is. Just like Stig was. You understand then...as the eldest, they always felt as if it is all on them. As if the whole damned business, this place, the family, sometimes I think the whole fucking world would fall apart without them. But trust me, it doesn't. I learned that the hard way. Which brings me back to the story.\"\n\n\"Like I said, I played favorites. Lars...then Olaf. Andreas, of course, once Sven was born and I had come to terms with my life here enough to forgive the man. You know why he...they...choose me? Back in the days before the Internet made things so much easier.\" Kirsty shook her head.\n\n\"Because no one would miss me.\" This laugh was darker. \"I was a hippie, a child of the sixties. My parents raised me on a commune...free love and everything. Sometimes I was not even sure who my mother and father were since everyone just sort of claimed all the children as their own. That was the good part. Sometimes I think...\"\n\nShe breathed deeply and smiled back at Kirsty, \"Sometimes I think old women ramble...will do anything to avoid the real truth. The story I need to tell you. To make a very long story short, when the commune closed in the early seventies, my parents went their separate ways. My mother needed her drugs more than she did a troublesome teenage girl. Social services sent me to live with my grandparents on their farm in East Texas.\"\n\n\"I was in my first year of college when a fire destroyed the farm and killed them both.\" She paused and brought the cup to her lips although Kirsty guessed it was as empty as her own by then. \"I had nothing then. Nothing and no one. Nowhere to call home.\" \n\n\"I sold the land to the first person that offered to buy it. I went to the post office and got my first passport. Then with the money from selling the land, I bought a ticket...one-way...to your homeland. And for two years, I wandered Europe. England, France, Spain, Italy, Germany. I made Amsterdam when I met Andreas.\" Once more Kirsty saw that wistful and wondered about the rest of this woman's story. The things she was not saying.\n\n\"I got so drunk one night that I did what I never had. I told him the whole story. The poor orphan wondering the world looking for home. He decided then that this was to be my home. That he and his brothers were to be my family.\"\n\nThe tears were streaming down her cheeks as she spoke, \"And as much as I despised that man for that those first couple of years, I can never thank him enough. The rest of this story gets kind of rough, sweetheart. Hard for you to hear. And even harder for me to tell you. But one thing I want to make sure I say now...in case I forget. Never...no matter the pain...never have I regretted that decision. And I pray you never do yours either.\"\n\nKirsty had no idea what was to come...what could possibly be more difficult than this woman's tale so far. And she was not sure she wanted to know...but something once more told her that she needed to.\n\n***\n\nRachel looked across at the younger woman. She tried her damnedest to force a smile, but knew that she failed miserably. \"Let me get us another cup of tea. For the life of me, I wish I knew where that old man hides the vodka. We could both use some right about now,\" she joked as she stood and took Kirsty's cup.\n\nHer hands trembled and it had absolutely nothing to do with the occasional stiffness in her joints first thing in the morning. She could tell through the opaque glass roof that the sun was already beginning to fall in the sky. She did not worry about dinner. She was certain that Olaf would see to that. \n\nShe chuckled lightly at all the crazy ideas that young woman had back then about being their slave, forced to cook, clean and wait upon four men...to serve their every need. Just like Snow White and her seven dwarves, she thought as she cherished the confidence that the younger woman had shared. She hoped there would be more...many more. \n\nOh to be that young woman again. To love them as she should have. And not allowed such silly notions to cloud her thinking. Because the truth she had soon learned was they more than pulled their own weight around the house...when they were there. Chores were always shared...and if anyone waited on, serviced anyone, it was them serving her. She smiled, although some of their needs were definitely worth serving.\n\nThe kettle began to hum and she poured the tea. She had avoided the crux of this matter for too long. The story would get no easier. She lifted the cups and carried them back to where her new daughter sat and she was already beginning to think of her as that. She offered Kirsty one with that same weak smile before she settled herself back on her writing settee with the other.\n\n\"Yes, I did what I warned you not to. I played favorites. As much as I could get away with anyway. But overtime, even Stig and I came to an uneasy truce. Not completely unlike what you have with Mikael. I grew up. I saw past the arrogance to the weight of all those responsibilities. In the end, I stopped play mind games. So when Mikael was older and I decided I want another baby, I made sure that...\"\n\nPetrine looked at her and smiled, \"Let's just say I made absolutely sure that the odds were even. That any of the three of my husbands might be Bjorn's father.\" \n\nRachel wanted to laugh at the way her new daughter's face turned an almost perfect shade of pink then. She was very tempted to confirm the girl's thoughts, but she had delayed this story long enough. She would allay some of the woman's concerns about those things another day. \n\n\"What I am about to tell you now, my youngest son does not know. When he was a child, we thought it would be too much of a burden. So we all agreed not to tell him. I am hoping you will keep that confidence.\" She sighed as she continued, \"But I will not ask you to lie to him either. Just please if you do feel you must tell him, please consult us.\" \n\nKirsty frowned for a long moment, but nodded her head at last. \"When Bjorn was born...\" She felt the knot tightening in her throat. Almost thirty years and she still could not say the words? She closed her eyes and breathed deeply through the pain. \n\nPain that sometimes still felt like it was sucking her under, that she was drowning as surely as Lars had when he was swept away in that storm. The two suddenly melded together and she drew her legs up to her chest, wrapped her arms around them and began to rock back and forth. \n\n\"Petrine, are you all right? We don't have to talk about it if it upsets you this much,\" the tender voice broke through the waves like a lifeline. \n\n\"No, Kirsty, maybe it is long past time I did.\" She forced her eyes open but still had trouble focusing on the younger woman's face. She wiped the tears away as she exhaled and plunged into those icy waters of her own freewill this time. \"I hemorrhaged. Bled out. I don't remember much of what happened after they showed me his son. Just the look on the midwife's face and how fucking white Stig's got.\"\n\nRachel knew that if she closed her eyes she could see his face again, maybe even hear those words. \"Almost fifteen years I had been their wife then. Two sons...losing Lars...and never once had that man shown me any real emotion.\" She chuckled, \"Well, unless you count lust.\"\n\nShe recognized the empathy in her daughter's eyes and smiled, \"And we both know that is not enough, that we want and need so much more. Even though, I had that more with Andreas and with Olaf. Some part of me always needed to break through his icy waters too. To touch more than simply the man's body. I know you understand that feeling...know it with both Mikael and Sven.\" Kirsty only nodded her head and blushed. ",
        "\"Of course, they raced me to the city. Left the baby and the boys with Andreas and took the boat because it would be faster. Like I said, I remember almost nothing.\" She sighed and forced the hardest part out, \"Except his voice through the too bright light. 'You cannot do this, Rachel. You cannot make me love you and then die on me'.\"\n\nShe lost the battle then with her tears and she no longer gave a damn. No longer had the energy or even the will to hold them back. She could almost hear his voice. But almost was not good enough. It never had been. \n\nHer own voice was weak and cracked, \"When I woke up. When he told me, that the only way to save my life had been a hysterectomy. I needed him to take me in his arms and tell me again. Needed to know it was not all just some dream that my delirious mind had made up. But that mask was firmly back in place.\" She shook her head at the flood of memories, \"Maybe even worse than before.\"\n\n\"It is easy to see it all now. How he blamed himself. It was his son that I had almost died to give birth to. And it was he who made that final decision, if you call it that. He, who had signed the papers giving the doctors permission anyway.\" Still she avoided the word, she could not even bring herself to think it one more time, let alone say it again. \n\n\"But then? I was too lost. Too lost in my own fucking pain to see any of theirs. Andreas, my first love. We would never have the little girl he promised me to go with the sons. He started drinking.\" She could not even look at the younger woman then. As she admitted her own failures. She shivered as she felt the cold blast of the past caress her skin.\n\n\"And Stig? He hid himself as he always had. As he taught Sven to do...in work. I barely saw him. When they were not at sea, he was always busy. Always doing something. And I was no better. I rarely left my bedroom. I would not let Bjorn out of my sight for a moment. I clung to Mikael too even though he was already begging to join his fathers at sea. I refused...and Stig backed me.\"\n\nShe shook her head and dried her eyes with the back of her hand even though she knew that the tears would be back. \"The only one I had was Olaf. And honestly, I am not sure how he stood to be around me then. All I did was cry...\"\n\n\"You read and sewed too, my love,\" she laughed as she looked up and saw him standing by the door. \n\nShe held out her hand, \"Come,\" she beckoned. \"Why am I still surprised?\" she shook her head as she shifted and made room for him on the loveseat next to her. \n\nHe wrapped her in his strong arms and drew her back into the safety that had been her rock for so damned long. A rock she hoped would be there for much longer. He brushed a kiss to the top of her head as his thumbs brushed away her tears. He just smiled and said, \"Am I not always here when you need me, Rachel?\"\n\n***\n\nKirsty watched them. This was something she had never seen. Something so intimate, more so than even sex in some ways. She tried to even imagine the great and mighty Doctor Nancy Dickens allowing her father to comfort her like this. But her mother would have pushed him away, pushed anyone away. Then again she would never allow herself to cry, had admonished Kirsty not to. Tears were weakness. So why did they look like beauty and strength when this woman cried? \n\n\"I can go if you two want to be alone...to talk of course,\" she blushed.\n\nPetrine shook her head as she looked from the man, who as Petrine said looked so much like Mikael it was obvious who his father was. To the woman, his wife that he cradled like his life depended upon it. She shook her head as she spoke once more, \"No, I need to finish this story and you need to hear it.\"\n\nThe man laced his fingers through his wife's and drew her closer against him as he kissed away fresh tears, \"You are right, my love. You need to tell it. At long last.\" The woman beamed as she looked up at him. The years fell away. Kirsty could see them as they must have been then. She heard this woman's words again...'never find a more loyal friend.'\n\nShe thought of others too. Petrine was right. She did not want the closeness she felt only with Bjorn. She wanted it with Mikael as well. Maybe she even wanted it with Sven, she was not sure. The question was...did she have the kind of strength that she saw in this woman to fight for it? Real strength...that did not push people away as her mother always did. Strength that saw through walls to the pain beneath. \n\nPetrine looked up at her with a half smiled. She was glad the man had joined them. She could feel the woman's pain, even though she could not even begin to imagine what it must have felt like. Losing a husband you loved...and then your ability to bear children. \n\nEven though this woman had three amazing sons, she had heard the way her voice cracked when she spoke of daughters. She thought of him...their conversation this morning. How would she... She could not even finish the thought. Let alone face all this woman had.\n\nBut the story was not over it seemed as Petrine began to speak again, \"Bjorn's first birthday. I decided that enough was enough. All my tears would never give me that baby girl I had wanted. They were only robbing me of my sons.\" The older woman turned and smiled at him, \"Stealing precious time from the men I loved.\"\n\nShe sighed, \"And so Petrine was born.\"\n\nOlaf nodded as he brought her hands to his lips and kissed her knuckles as they shared the memory. \n\n\"After his birthday party, Stig told me that he had something he wanted to show me. Mind you, I had not been out of the house in months, I barely left my room back then. So even a walk in the forest and fields seemed daunting. But the man had barely spoken to me in so long. I knew I had to try, meet him half way.\"\n\nShe waved her hand, \"He brought me here. Showed me this place for the first time.\" She smiled and got that far away look again. Kirsty might not know what the woman was remembering, but she felt it to her core. \n\n\"My brother built this place all on his own. Andreas and I begged and pleaded with him to let us help. Even Sven wanted to. All of us...we just wanted to find a way, something, that would reach through Rachel's pain. But he refused. Said it was something he needed to do on his own.\" Olaf kissed the woman's neck softly, \"I always thought it was some sort of penance.\"\n\nPetrine shook her head and Kirsty noticed that the tears were back. \"He only ever said those words to me once more. The day he dead,\" the way that the man's arms tightened about his wife said all that Kirsty needed to know. \n\n\"And stubborn, foolish me...even though I knew. Even though I finally saw through it all to the man inside, I thought...I'd be damned if I was going to say them to him, if he would not say them to me. Not until that day. Only once...once in over thirty years together did I ever tell Stig how I felt about him.\" The tears came faster now, so fast that the woman's body shook. \"And I will never know if he even heard them.\"\n\n\"Shhh, Rachel, it's all right. You know he did. Here...Valhalla...or whatever the hell waits for us all out there. My brother knew how you felt. He heard. You know he did,\" he buried his face in his wife's hair but Kirsty would have sworn she saw tears in the steely grey eyes that were identical to his son's. \n\nShe felt like an intruder. She wanted to flee. To run. But where. That bedroom always did seem too big, too overpowering, and too dark. And she had not been here long enough to find her place...her field, her greenhouse. Him...but then she remembered. He knew none of this. How could she explain without revealing a secret that was not hers to share?\n\nPetrine looked up at her and tried her best to smile. \"I know how overwhelming all this must feel to you right now. On top of everything else. I did not mean to tell you. Not yet anyway. But I guess...I guess I just want you to understand. To be wiser, kinder, stronger than I was. Than I am. I needed you to understand why I said...they all need you. Even the ones that it is not easy to love.\"\n\nThe woman gripped the arms about her tightly, \"We are here for you. For all of you. But this is your struggle...to find your way. Your path. And we cannot walk it. We can only share what we have learned on ours. Don't waste a moment, sweetie. I know you feel, think that there is always time. But I promise you it goes so much quicker than you realize.\"\n\nShe smiled as much as she could through the tears, \"Little boys become men. Men that you love become nothing more than memories. Your body betrays you. And all you have left in the end are those memories...and regret. Be smarter than I was...make damned sure you have more memories to keep you warm than you have cold regrets.\"\n\nKirsty fought the knot in her throat as she nodded her head. \"I'll try,\" were the only words she could find then. She promised as she rose from the chair. No matter what the woman said, she could never imagine herself being as strong as she was. As beautiful inside and out. But she would try. For this woman...for her sons...all of them, she swore. \"I will try, Petrine.\"\n\nThe woman, dare she think it...her new mother, shook her head and smiled as she turned to her husband, \"Call me Rachel. It has been a long time, but I think you, my sweet daughter, should call me Rachel too.\"\n\nKirsty frowned at the unspoken communication she saw between the couple. Once more she felt like that interloper, witnessing something too intimate for human eyes. And this time, she stood, \"Thank you. I know how hard that must have been, Petr...Rachel. But thank you. I promise I will do my best.\"\n\n\"That is all any of us can do,\" said the man as he held his wife. \n\nShe nodded and turned towards the door. She was still so caught up in it all that she completely forgot her coat hanging by the door. Until she was about ten feet from the door. A biting wind cut through her jumper and she turned. She thought about going back in there for her coat as she brought her hands up and blew on them to fight back at least a bit of the cold. \n\nThen something warm draped about her shoulders. And she turned to stare up into his face. Not his. Not even Mikael's with whom she was beginning to build some common ground. But his. Sven's. The one man she wanted to avoid. Until she remembered her promise...'I'll try.' She just had not expected to be confronted with the opportunity so soon.\n\n***\n\nDamn his mother. Damn her to Helveti just then. He saw those blue pools filled with tears and he knew. Just knew. \"She told you, didn't she?\"\n\nHis wife could only nod. \"Damn her, she should have waited. Given you time to get used to life here.\" Not that it surprised him, he had been blessed with one of his mother's little advice sessions all the way into town and back. \n\nEven after all the years, the woman was still too much of an idealist. She always did want to see things her way. To ignore the harsh realities of life. This life in particular. But she really did have no right to burden this woman, their wife with those same expectations. He brushed a tear away. \n\n\"Come with me,\" he commanded as he took her by the elbow. She shook her head and went to pull away. But she froze when he said, \"He cannot see you like this. Remember he does not know. Damn, the woman for that too. She should have told him long ago. One of us should have.\"\n\nShe nodded silently and fell into step with him as he led her back towards the boat. \"Are you going to be the one to tell him? Tell him that his birth almost killed our mother?\" He knew he was being harsh. Too harsh with her. And it was not her that he was angry with. \n\nHis mother. His uncle. The man that had been as much a father to him as he was to his own son. Hell, himself most of all. One of them should have been strong enough to end this lie long ago. To tell his brother the truth. But only once had he come close. The night Bjorn came of age. They had gotten him drunk. Hell, they had planned to get him laid. But that had not worked out so well. \n\nHe knew then that his mother had poisoned his brother's mind with her idealistic bullshit. That she had conveniently shared with him only those bits of the story that suited her. That she had not told him of the years of fighting before he was born. Of the number of times that they had fought, come to blows over her. \n\nShe had not told him, because then she would have needed to explain why all that changed. Why her husbands suddenly went from her Doms...to her slaves. Not that she meant to, not that they meant to. Hell, even he had tried all that a fucking thirteen year old boy knew to reach his mother. Even Mikael who was barely six at the time had. \n\nBut she was not going to dump this shit on his wife's shoulders...guilt her as she had all of them. Enough was enough. \n\n\"Where are we going?\" she finally asked. Her voice little more than a broken whisper. \n\n\"The boat. Mikael has already taken Monika into the house. Bjorn went with them while I came to find you and my mother.\" He stopped, his hands gripped both of her elbows tightly. He wanted to shake her, make her see. \"He cannot see you like this. He would not stop until he got the whole story out of you. And it is not your place to be the one to tell him.\"\n\nHe watched the play of emotions across her face as she considered his words. Then she nodded, \"You're right, of course.\"\n\nHe laughed, \"You actually admit that?\"\n\nShe giggled a bit and half looked up at him, \"I am not stupid.\"\n\nHe brushed one of the tears from the corner of her eye, \"No, I never thought you were. Will you come with me to the boat then? Spend tonight with me there?\"\n\nShe chuckled, \"I thought that was my choice...who I called to my bed.\"\n\nHe smiled at her, \"Oh yes, but you see we are not spending the night in your bed. We are spending it in mine and I have a surprise for you there.\"\n\n***\n\nKirsty studied him for a long moment. Petrine...Rachel was right. Those words sounded incredibly hallow after the ones that his 'baby' brother had shared with her. But the woman was right about something else too...they were as close as this man could come to admitting that he needed or even wanted her. \n\nAnd the rest was her choice. Hers alone to make. She could as the woman said...play favorites. Turn away this tiny glimmer, slam the door closed on him. Maybe even on herself, on any chance she had of reaching the man she had first been so powerfully attracted to. The one that if she were being honest she still was. \n\nOr she could...take a tiny step forward of her own. Press her body against his as she stared up into those deep blue eyes and whisper, \"I choose you.\" She could even stand upon her tiptoes and press a soft kiss to those lips that she remembered staring at in the caf\u00e9 as they chatted. Remembered wondering what they would taste like. The sea, man and sex...she had discovered.\n\nThat choice was surprisingly easy actually."
    ],
    "authorname": "Tara Cox",
    "tags": [
        "non-erotic",
        "love",
        "romance",
        "polyandry"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/ashgir-s-bride-ch-07"
}