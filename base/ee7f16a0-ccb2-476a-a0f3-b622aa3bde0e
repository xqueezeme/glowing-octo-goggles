{
    "title": "Rope and Veil Pt. 02",
    "pages": [
        "This is a sequel to Rope and Veil. As with that story, any mistakes or misunderstanding of the issues facing PWD communities are mine and mine alone; and I hope I don't cause offence. \n\nA key element of the story was inspired by Pascale Honore, a woman with paraplegia. Use your favourite search engine.\n\n--ooo OOO ooo --\n\n\"Alex, take me down to the sand, be my legs today.\"\n\nWe're staying in a small town in the far north of the state, where Amelia's grand-parents built their summer retreat before she was born. By the ocean, this is the town where Amelia first found her love of water and learned to swim like a fish. When her mother returned to her family for southern Christmases, Amelia was a gleeful child, a dolphin skimming down the waves. She was dark and small and ran like a sprite.\n\nShe parked her wheelchair at the top of the dunes, where the grass ended and the soft sands began. The chair placed so conspicuously declared her presence.\n\n\"The town gossips might as well know I'm the woman in the wheelchair, right from the start. They'll get used to me quicker that way.\"\n\nThe existence of the sand gave Amelia the shits the first day when the wheels bogged, but she was kind to me by taking her own weight on her arms around my neck, and I carried her lightly onto the beach, rewarded with a kiss.\n\n\"Alex, slather me with sun cream, this sun is glorious on my skin, so warm. Thanks, my darling man.\"\n\nShe wore a black bikini, high cut on her hips and a lovely curve over her ass, the top cupping her perfect breasts. Amelia goes a darkness in the sun, her skin colouring with some ancestral trace, and our bodies quickly become a contrast. Her darkness and my lighter tan, my hair turning blond in the sun and salt; her coloured hair, flame red at the moment but that will change next month. She's never constant, but she's always Amelia. Summer by the ocean, there is no better time. Amelia by the sea, there is no better woman. Amelia anywhere, really. She doesn't need a place.\n\nAmelia lay on her front, and I rubbed the cream onto her long legs and up over her slender, muscled back, lingering over her shoulders. I wished she was lying on her back, her breasts a delight for my eyes.\n\n\"You're horny, aren't you? I can always tell, your fingers slow on my skin.\"\n\n\"Who wouldn't be horny, looking at you, Amelia? God, look at you, lying there all tanned and gorgeous in a black bikini, barely there.\"\n\n\"Oh go on, fuck off and collect some shells or something. I'm just getting to a good bit in this book, you can wait...\"\n\nShe paused, two beats and a promise.\n\n\"Besides, it's a public beach and there's too much sand.\"\n\nThe problem with Amelia is that she's right. It's a public beach, and of course there's sand. It's a beach.\n\nI wandered off to the edge of the water, scattering sprays with my feet and kicking the water into flickering patterns. \n\nAt this end of the beach, fishermen back between the wars cleared rocks from the shallow reef, making a wide landing place for their boats. Now, the place was a small lagoon, and when the tide was low, safe for children, the sandy bottom slowly sloping away to about six feet deep. Some two hundred yards out from the shore, a low reef broke the surf, and kids bobbed on their boards. Out there, I saw snorkels, and remembered Amelia telling me about fish on the reef.\n\nI looked back up the beach to Amelia, but she was engrossed in her book and didn't see my wave. I did as I was told, and bent to collect some shells. She'll want to see them when I go back to her, to wonder at their colours and shiny surfaces. She'll turn them over in her long fingers and trace the corrugations on the shells, all tactile and sensual. I'll watch her fingers, fascinated, and I'll want them tracing along the shaft of my cock. Amelia's touch is always worth waiting for. Her fingers have no weight, they float across the surface of my skin, bringing shivers to my spine.\n\nMy fingers on her skin are less successful, sadly. She can see my caress, and know its intent is true; but sometimes I wish she could feel my love for her on every inch of her body.\n\nHer gaze was strong and direct as she watched me return to our wide towel on the beach. I knelt by her side, and dropped a small pile of shells in front of her. It's a little offering.\n\n\"Did you read more of the chapter?\" She'd sent me away, and I wanted to know it was worth it.\n\n\"No. I didn't read another word. I wanted to watch you walk along the beach, bend down, stand up, kick the water, bring me shells.\"\n\nSometimes I can't keep up with Amelia. I thought she wanted me gone so she could finish her chapter. No, she wanted me gone so she could see me come back to her.\n\n\"I love watching you, Alex. You're a fucking Adonis, you know that? All tall and golden and blond. I watch the women looking at you, and I see their eyes narrow and glint. They want you so bad. I see them look across at me, here on the sand. Sometimes their astonishment shows, before they can hide it.\"\n\n\"Yeah, well, just because you can't walk on the sand, doesn't mean you can't have the hottest man on the beach. Fuck 'em. They can check me out all they like, but only you can have me!\" \n\nBut I was flattered, of course I was, that the other women on the beach were jealous of Amelia.\n\nShe rolled onto her back and propped herself against me, resting her weight on one elbow. She'd undone the string of her bikini top, and as she re-arranged herself the black scraps of cloth slid to the towel. Her breasts were the same dark tan as the rest of her, her nipples darker circles with a small tightness at their centre. Amelia reached for the sun cream and rubbed it onto her arms, breasts and belly.\n\n\"Can you rub the cream in on my legs?\"\n\nShe knows that I love to care for her long, thin legs, and she watched my hands caress the cream into her scarred thighs, the long gouge on her right thigh still pale, never tanning. The lighter, more regular cutting scars were silvering with time, fading memories. I stretched down to rub cream over her lower legs and feet. As I did so, I felt her gentle touch upon my waist sensing the twist of muscle under my skin. Whenever Amelia sees my fingers on her legs, which she cannot feel, she rests her fingers somewhere on my skin, which she can.\n\n\"Can you believe that my mother, when she first came here for summer hols, used to rub baby oil on her skin, deliberately, to go brown?\"\n\n\"You're kidding, you mean she would lie in the sun and just cook? Jesus, that's asking for skin cancer, isn't it?\" \n\nI was incredulous. I'd met Amelia's mum, couldn't imagine her cooking herself in the sun. \n\n\"You'd think so. Probably just as well mum lives in England most of the time. Mind you, by the time I first came here, proper sun block lotions were being used. I don't remember though, I was only little.\"\n\nShe looked around, down to the water, and back up to the dunes.\n\n\"I've just realised something.\" The tone of her voice changed, and I knew from past experience that I was going to hear some quiet reveal.\n\n\"This beach, maybe even right here, this must have been the place my grand-dad died, that first Christmas I was here. I must have been about three. I can't remember a thing.\n\n\"Apparently, the whole family had come up to the holiday house for Christmas. Mum's younger brother drove back south the day before we all arrived, so he wasn't here when it happened. Mum, Judy and I flew from England on Boxing Day, and we'd only been here a day when grand-dad died. Mum said he'd taken me for a swim, right there in the lagoon, came out of the water, and bang, collapsed and died right here on the beach. That's not fucking right, is it?\"\n\n\"God, it's like he waited until he'd seen all his children, and you. Fucking hell, that's cruel, isn't it? Fuck.\"\n\nNothing more could be said. Amelia was too young to remember, but I was reminded just how quickly the impossible can happen and change everything. No, that's not fucking right.\n\nAfter ten or fifteen minutes, our silence together became a stillness, and I felt Amelia's fingers press on my skin. I squeezed her shoulder and kissed her hair, affectionately. I suppose love and death go together, and being with Amelia reminded me all the time about life. Being around her, I'd learned never to take anything for granted. \n\nHer fingers were a slow, unconscious movement, circling softly on my flesh. In the drowsy heat of the sun, the touch of her fingers soothed me into a doze. Then her fingers were slower on my skin.\n\n\"Alex, take me into the water.\"\n\nI looked down at her, and saw that her nipples were tight and taut. She was aroused, and I'm so slow. Maybe not such an unconscious movement, then. Perhaps sex and death go together, as well as love.\n\nI took her up in my arms, and she clung tightly to me like she was drowning, but we're not even in the water yet.\n\nIn the water, Amelia wrapped her arms around me until I was waist deep. She slid from my arms and swam in circles around me, her strong arms pulling through the water like her palms turned the wheels of her chair. Her legs trailed behind her like a mermaid's tail, and the water freed her. She dove down between my legs, and when she surfaced, she flung her arms around me, droplets of water a rainbow around her as she flicked her hair.\n\n\"Further out, come on, let's go where it's deeper. Where no-one can see.\"\n\nHer voice was joyous, laughing. She was weightless in the warm water, and her bare breasts had become perfect globes, her hard nipples tighter still. My cock hardened in my swimming briefs. Her hand went down inside them and gripped me, tight. She pushed herself away from me, her feet knocking against my body. Amelia's body curved in the water around me, but she's so quick, she's gone.\n\nShe must have dived deeper, I couldn't see her. I felt a tug on my legs. Amelia was a flurry below the surface, struggling to get my swimming trunks down my legs. My cock bounced free, hard up against my gut, but she wasn't interested in that, she was still wrestling my trunks down my legs. Amelia pushed me, causing me to lose my balance, and as I floundered she finally managed to pull the trunks from my feet.\n\nWe both surfaced, gasping for air, and she swam away from me, the black cloth of my trunks held high as a victory flag in her hand.\n\n\"Come on, merman, come chase your mermaid. What, can't you catch me?\"\n\nAmelia's taunting was a challenge, and I lunged for her, determined to net her.\n\n\"Come on, merboy, you wuss.\"\n\nFuck, she was fast, her body turning and spiralling, fluid. I lunged, managing to grab her foot. She felt her body slow, and I was upon her, my chest against her full breasts, my arms wrapped behind her back. I caught my balance, spreading both feet on the sand so I could support both of us in the water. I stood on the bottom of the lagoon, and the water was just below my chest. Amelia wrapped her body around mine, my erection hard in one hand, her other hand behind my head. She pulled my mouth down to hers and kissed me deeply, her tongue all salty, her breath still fast from her exertion.\n\nAs we kissed, Amelia began a slow back and forth rub around me, pressing her breasts against my torso, arousing herself with the press of her nipples against my body. I stood like a rock on a reef, and she undulated against me like some exotic fish. Her hand held my cock, no movement there, just a light grip from her fingers. She slowed herself around me, focussed on our long kiss. \n\nAmelia loved to linger on my mouth, her tongue darting, her teeth biting my lip, sucking my lips between hers. The salty sea changed the taste of us, and the briny tang was a stronger scent. The usual perfume of our sex was washed away, and out there in the lagoon we became creatures of a watery world, no longer land locked but some floating, connected thing.\n\nHer hand was on my cock, and the feeling in the water was so different. Instead of heat there was a liquid coolness, and instead of hot breath there was a smooth flow. Amelia let go of my mouth and our kiss, took a deep breath and was on me, her mouth sucked to the head of my shaft, her tongue replacing the ebb of the water. She clung to me there for some twenty seconds, the sensation in my shaft all new and liquid soft. Then, with a burst of bubbles, she surfaced.\n\n\"That's impossible, I don't have gills,\" she laughed, her eyes sparkling.\n\nJust as Amelia said it, she surged against my body, driven by a rising wave that passed across the lagoon. She looked out to sea.\n\n\"The tide's coming in. It always does that, the sea surges across the reef. In a little while, there'll be surf breaking out there. Take me out further, I want to ride a wave in as far as I can.\"\n\nShe'd forgotten about my cock. She couldn't ride me out here as she could on land, her hand a swooning stroke, her breasts a place to spill my seed upon, her mouth a delight to do it all again. Amelia lived in the moment, and the moment was now, with surf about to break. \n\nI started to swim, a strong breast-stroke, and she wrapped her arms around my neck, riding half on, half off my back. Coupled together in the lagoon, we swam for five minutes and got ourselves another hundred yards out. The water was shallower out there on the reef, and again I got my balance and supported her body. The surface of the sea was choppy and rough, the incoming waves were starting to break.\n\n\"Can you do it, Amelia, can you get yourself all the way in?\"\n\n\"Of course I bloody can. I was body surfing this reef when I was eight. Not having legs that can kick won't stop me. We'll just time it so you can push me on to the right wave, and my arms and the sea will do the rest.\"\n\nI'd learned when Amelia says of course I bloody can do something, it means she bloody will do it. God help any one who gets in her way. \n\nShe grinned at me, her eyes as bright as the sky above our heads.\n\n\"Anyway, you'll need to come in with me, or you'll be walking from the water naked.\"\n\nWhat? Oh shit, she's wrapped my swimming trunks about her upper arm so as not to lose them. \n\n\"OK, I reckon we've got another five minutes before the waves will break just right. We need to pass the time.\"\n\nOn dry land Amelia can rise my cock with her hands and mouth and have me gasping in three minutes or less. Or she can edge me for an hour and then make me explode at her whim. Out there in the surging water, she played with me while she waited for the sea to rise, her hand a slow, idle stroke.\n\n\"What's the matter, lover, can't you keep afloat?\"\n\nJesus, I loved being teased by Amelia, even if she's only passing the time while the sea rises. She was distracted, waiting for the surf to rise, idly stroking my shaft. She looked at me with that special gaze I knew so well, her gentle smile creasing the sides of her eyes. My mind flashed back to the first time I was truly distracted by her, that day in her office, the beginning of my long delight in Amelia. Her quizzical eyebrow raised as I lost my concentration. Amelia's eyes, the door to her soul, my light.\n\nHer hand left my shaft, and she positioned herself beside me. The waves were building up now, breaking around us.\n\n\"When I say go, push me as fast as you can on to the front of the wave. If I get the timing right, these waves will break behind me and take me in a fair way. You catch the next one, and I'll see you close to the shore!\"\n\nAmelia was excited by the physical exuberance of it all, the flurry of the surf, the idea of speeding down the front of the wave, the freedom the power of the surging water gave her. Her lost legs became a sea creature's tail.\n\n\"Come on Alex, let's do this.\"\n\nAmelia launched herself onto the top of the next wave, and with a firm push with my hands about her waist she matched the speed of the surging break. Her strong arms did the rest and she was away. I watched the flash of her cropped red hair and the black armband of swimming trunks wrapped around her upper arm. She was sheer speed, gone with the breaking surf. I looked back out to sea to gauge the next wave, and then I too positioned myself, ready to chase my Amelia.\n\nI said that once, to her face, and was met with her quizzical eyebrow.\n\n\"Your Amelia, Alex? I don't think so. You're my Alex. Surely you know that by now?\" \n\nThe smile in her eyes when she said it, her smile said it all. Her Alex. My Amelia. I think we'd both fallen in love, somewhere between the rope and the wheels and the veil. Strange, that we say fallen. For us, it seemed to happen more side by side with a stillness, a circling, an enrapture. Perhaps you only fall if there's a safety net. With Amelia, whose whole life was a plummet, headlong and fearless, was our love only a moment, suspended and timeless before we fell? There was no safety net with Amelia. She was free fall, all the way.\n\nThat's what she did to me, Amelia. Thinking tiny moments of mortality and immortality, all mixed together in a split second, on a fulcrum, poised on the top of a wave. Amelia was gone, and without her I was nothing. So I plummeted down that wave, a momentary pause before the rush, chasing Amelia.\n\nThe surf surged around me, and I was exhilarated, speeding, my whole body rigid on the front slope of the wave. Ahead, I saw Amelia's red hair flash in the white tumble of her own wave, and the black flash of the arm band as she took another stroke to keep up her speed. \n\nThen, oh shit, I'd misjudged the breaking power of my wave, and I was tumbling, tumbling, tumbling under the water. I instinctively curled myself into a ball to shrink my size in the pummelling surf, to make myself smaller against its power. My shoulder hit the bottom and dragged against the sand. Then I was behind the wave, clawing for the surface in its afterwash. Jesus, that was scary. Almost sobbing for breath, I threw my head high and gasped for air. Fuck.\n\nWas Amelia all right? If the sea did this to me, what was it doing to her slighter body? I swam hard after her in a lull between the waves, and then there was another break behind me and I was pushed forward by the surf, again. Damn. This water's dangerous. I needed to get to Amelia.\n\nWhere is she? Thank Christ, there she is in a smoother band of water, her red head acting as a beacon in the white water behind the break. She'd come off the back of her wave, her speed dropping quickly,and I could see her turning, looking for me. She raised her arm in the air as a sign, and I swam to her.\n\n\"Fuck, Amelia, I got dumped. That was fucking scary.\"\n\n\"You OK?\" She clutched her arms around me, \"here, I've got you.\"\n\nI scrambled my feet for the bottom and managed to stand, but it was my arms around her neck this time, I was the one clinging on.\n\n\"God, city boy, I never thought. I'm so used to this sea, I forgot.\"\n\nShe held my head and looked into my eyes, her concern a laser drilling into me.\n\n\"Oh Alex, it's alright.\" She'd seen a fear in my eyes and needed to sooth me. \"Here, put these back on, and we'll go back to the beach.\"\n\nI took my trunks from her, and pulled them back up my legs. As I did so she took my shrunken cock in her hand.\n\n\"Wow, you really did get scared, didn't you?\" \n\nHer hand was gentle, holding my shrunken cock and balls. I couldn't blame the cold sea, not this time. \n\nI pushed through the water with Amelia holding on behind until it was too shallow. I bent to take her in my arms to carry her back up to our spot on the beach. This time, though, she was the strength for both of us. I was just a pair of legs carrying us both from the water. \n\n\"Maybe, Amelia, I should swim here only when the water's low. That was pretty scary.\"\n\nShe looked at me intently for maybe five seconds, then took my hand and squeezed my fingers.\n\n\"No. You'll be fine. It's only the first time it's shit. It always gets easier. You'll see.\"",
        "I was humbled. Amelia was right - it always got easier. I mean, look at her.\n\n\"You know, that point break out there is one of the best on the whole coast.\" \n\nAmelia pointed towards the headland, maybe half a kilometre or so away to the south. \n\n\"When the big southerlies are blowing, I've seen guys ride a wave all the way in. The waves build up as they come around the headland, and then break all the way along those rocks. I never did it when I was a girl, I was too small. Even I knew mum was right when she said, 'Amelia, you can't do that. Wait till you're older.' But I never did it.\"\n\nShe was wistful, sitting there propped against my body, looking out to sea. She shook her head. \"It doesn't matter. Take me back to the house. I need to look after you, don't I? My poor Alex.\"\n\nI wasn't arguing with Amelia. I'd been spooked out there in the surf, and I wanted to forget. Amelia would look after me but in doing so, she'd always remember what in her was gone. Fuck. That's not right.\n\nThat night Amelia was nervous and edgy for some reason, and I was still spooked and shaken by what had happened out in the surf. Sex was the furthest thing from our minds, but love wasn't. I felt small like a child, with my head cradled to her breast. Amelia's soothing fingers ran through my hair, caressing me to sleep. During the night I reached for her warmth, each time I woke. She was there, each time I reached for her, warm beside me like some wild animal, coiled and alert.\n\nIn the morning I woke after Amelia, vaguely conscious of her movements around the small cottage we were staying in, followed by a silence. When I finally stirred, I saw that she had left me a note: Gone to the cafe for breakfast. Join me there. \n\nUp in the small shopping centre I found her sitting at an outside table at our favourite cafe, talking excitedly to a fit looking guy, tanned and tall.\n\n\"Alex, I can do it. This is Sam, he can help me. I can do it.\"\n\nExcitement was in her voice and in every movement of her talking hands, even if I had no idea what she was on about.\n\n\"What are you on about, Amelia? What can you do? Hi, Sam, good to meet you. I'm Alex.\" I laughed, \"sometimes Amelia tells me what's going on.\"\n\n\"Hey man, surfing, we're talking surfing. Amelia saw me with the board, and we started chatting. I was telling her that I'd been surfing the headland break. Man, that's one of the best rides. She told me how she's always wanted to surf it, from when she was a grommet.\"\n\nAmelia gripped my hand. \"We reckon we can do it, Alex. Sam and I can surf it.\"\n\nI was finally cottoning on to their conversation, and could see why Amelia was so excited.\n\n\"How can you surf it, Amelia? You can't stand on the board.\"\n\n\"I don't need to stand. Sam can stand, I just have to hang on!\"\n\nShe proceeded to tell me her idea, which sounded crazy.\n\n\"Can you do it, Sam, is it possible?\"\n\n\"It sure is. Man, Amelia so wants to do it. I'm willing.\"\n\nThat was that, then. The will to do it had been mentioned, and when it came to will, Amelia was the expert. You didn't raise doubts when Amelia decided she wanted something. We chatted some more, then Sam got up to go.\n\n\"I'll get some shit organised,\" he said. \"I'll call you guys. Keep an eye on the forecasts. We'll need a good southerly to push the break around the corner.\"\n\nAfter he went Amelia talked it all through once more. She wasn't trying to convince me, she was convincing herself. \n\nAs we chatted, the cafe filled up with the morning rush, the noise rising and the waiters hurrying. I felt a touch on my arm, and there beside me stood a young girl, holding the hand of an old woman.\n\n\"Can we share your table, please? The whole place is full, except here.\"\n\n\"Of course you can,\" Amelia replied. \"Please, join us.\"\n\n\"Here Granny, we can sit here with these people. Can you manage?\"\n\n\"Bless you, child. You're a treasure for your old Gran. Yes, just put my hand on the back of the chair, I'll be fine then.\"\n\nI looked up at the old woman's face, and realised she was blind. She was old, very old, her dark skin wrinkled, and her face showed a hard life, long lived. Her gnarled, arthritic hand skimmed the back of the chair, sensing its direction and shape. With a surprising grace, for she was a big woman, she swung her body to the seat and positioned herself. She was almost regal sitting there with her body straight, both gnarled hands resting on the pommel of a carved stick.\n\n\"Thank you for letting us join you. Please, don't let us interrupt you.\"\n\n\"No, no, it's fine. There's room for all of us.\" Amelia was always willing to share what she had, her generosity of spirit most of all.\n\nThe waiter came by and took the couple's order, and we asked for two more coffees for ourselves. Once the drinks were in front of us, I noticed the little girl was whispering in her grandmother's ear, while all the time gazing at Amelia. People did that with Amelia, adults tending to see the wheelchair with a person in it; the kids seeing the young woman with the colourful hair and the bright red lips.\n\n\"Is the lady beautiful, child? You know I can't see. I'm sure she is. Her voice is beautiful, I can hear that for sure.\"\n\nAmelia glanced at me, and squeezed my hand with that gentle pressure that always signalled one of her reveries, the way she always arrived at a moment.\n\n\"Would you like to see my face?\" she asked the old woman, facing her directly so there would be no doubt who she was talking to.\n\n\"My girl says you're beautiful, so yes, if I may, I would be honoured to see you. I love beauty. I surround myself with it, wherever I can.\"\n\nThe little girl gazed at her grandmother as she said this, and her smile was radiant. Her young freshness was clearly part of the old woman's beautiful world.\n\nAmelia moved herself closer to the old woman and took one of her gnarled hands in hers, placing it in her own open palm so the older woman could sense her position. Amelia glanced across at me and, with a silence in her eyes, mouthed the words, \"it's OK.\" \n\nAmelia sat with her arms resting on the table. The old woman lightly touched her fingers over the palms of Amelia's up-turned hands, tracing the shape of her long fingers. Slowly she moved her gnarled fingers up the younger woman's fore-arms and over her biceps.\n\n\"You've got some strength in those arms, girl,\" she said, her voice low with a slight quiver to it.\n\n\"Yes, I'm in wheelchair, my arms are strong.\"\n\n\"A long time ago then,\" the old woman murmured. How could she sense the years of Amelia's strength, just from feeling her muscle? Her fingers moved slowly up from Amelia's shoulders to the long line of her neck. I could see the woman exploring every part of my woman's throat, her fingers the most gentle trace.\n\n\"Ah, there's a pride in you, lass. I can feel it in the way you hold your head. High and proud. You're like my own daughter, this little one's mother, she's a strong woman too. Needs a strong man, that one, to match her.\" She laughed. \"She finds them, my Clio. You got a strong man, lass?\"\n\nAmelia looked at me, her eyes soft.\n\n\"Yes, I think I've got a strong man. He puts up with me, anyway.\"\n\nThe old woman's fingers were a caress on Amelia's face, a gentle movement up the side of her cheeks to her temples. I could see her tracing the creases at the sides of Amelia's eyes, feeling the smile there.\n\n\"Ah girl, you've a joy on your face, I feel it from your eyes. That man of yours, he loves you and there's joy for you?\"\n\nSurprised, I saw Amelia's eyes glisten. There were few tears with Amelia, but somehow this old woman tracing her beauty was summoning them. Amelia reached out her hand to find mine, and she clutched it, hard.\n\n\"Oh lass, don't cry just because an old woman sees your love. You cry when the love goes, not now, lass, not now.\"\n\nAmelia gripped my hand again, harder this time.\n\nThen the woman cupped my Amelia's face in the palms of her hands and lightly traced the shape of her whole face and then her whole head with those caring hands. She paused as her fingers ran over the scars on the side of Amelia's head. The old woman didn't say a word, but held her hand there for a moment, as if feeling the reminder of Amelia's pain, long ago.\n\n\"My little girl is right. There's a beauty in you, girl.\" She patted Amelia's arm. \"It's not just the outside, either. You've a beauty inside you, girl. Thank you for letting an old lady see.\"\n\nAmelia took the woman's hands in hers and squeezed them tightly.\n\n\"I don't think anyone has looked at me as closely as you did just then,\" Amelia said, her voice soft. \"I felt so open to you, your fingers traced my skin with a tenderness I've not felt before, I felt so open. So loved.\"\n\n\"Ah girl, that's because this old lady lost her eyes, but not her sight. Folk with eyes think they can see, but they don't feel so much. My finger tips, they feel deep. 'Specially, girl, with someone like you who is layers on layers deep. Bless you girl, I don't see beauty like yours much nowsadays. What's your name lass, would you share that with an old woman?\"\n\n\"I'm Amelia. That's who I am. Amelia.\"\n\nThe old woman reached down and gathered her woven bag into her hands.\n\n\"Bless you, Amelia, for sharing your name. A name's a powerful thing.\" \n\nShe gave one last touch to Amelia's cheek, ever such a gentle touch, her fingers ever so light on her skin. \n\n\"That man of yours, has he seen you close? Teach him how, lass, teach him how to see. He'll never forget if he sees you deep, really deep.\"\n\nI heard the old woman's words, but I felt I had missed out on something here. Something had gone between the two women, that was clear, but some of that thing had passed me by. Was this what they called women's business, a deep secret story that only women knew? Amelia would tell me later, if I asked; and if she could tell.\n\n\"Come child, say goodbye to Amelia. Your eyes see true, pet. She is a beauty, ah yes, isn't she just.\" It was as if the old lady was talking to herself now.\n\nThe little girl looked at both of us sitting there, Amelia and I, and she smiled. In that moment, we were both blessed by the girl's radiance, her broad grin.\n\n\"Goodness, those two were a presence, weren't they?\" Amelia commented, once they had gone.\n\n\"What was it like, when she touched you like that? I've never seen that before, such gentleness.\"\n\nAmelia touched her own cheek with the tips of her fingers. She closed her eyes, then reached out and touched my face, so gently. Amelia's touch on my skin was often delicate, gentle, a butterfly's kiss, a linger. But this time, it was a stillness. She nodded, slowly, just once, and whispered, \"I think I see it. If I close my eyes, I'll see you better. I just need to focus more.\"\n\nShe looked at me with her frank, open gaze, her eyes wide. \"Later, Alex, when it's dark. We can look at each other then. I think I get what she was saying to me. Later.\"\n\nWe spent the rest of the day between the house, the sea and the beach. Out in the lagoon Amelia wrapped her hand around me again, holding my hardness lightly, teasing me with her ebb and flow. Her kisses were deep and her salty mouth warm, her tight tongue probing my lips. She didn't insist on riding the surf, and I was relieved. She was more confident than I in the water. City boy was right, calm water and an olympic pool were more my style. She loved the water, it made her body weightless.\n\nEarly that evening Sam rang. \"Gaffer tape and a fisherman's knife, that's what you'll need. Tomorrow or the day after, maybe, if the forecasts are right. I've got an inflatable, and a wet suit that will fit Amelia.\"\n\nIt was on then. Amelia's ride.\n\n-- ooo OOO ooo --\n\nTwo days later we were out in the inflatable boat, out by the headland. We were in open water, the boat regularly rising up and down, the horizon swaying. To the east, out to sea, there was the long haul of the Pacific, white capped out to the horizon. In towards the long beach, the rock covered run of the headland break was dark gray and wet, gulls rising from the shore. As Sam had predicted, the swell was turning on the headland and running a long surging break down the rocks, in towards the lagoon.\n\nEach wave would roll down the shore, with a breaking front maybe twenty to twenty-five metres wide. As always with the ocean, every sixth or seventh swell was higher, more powerful. The idea was to catch one of the bigger swells, and ride it as far as it went.\n\nAmelia was pumped, her colour high and excited. She was slinked into a tight wetsuit, the tight cleavage of her high breasts curving delectably, the suit's zipper nestled between. Looking at her, curved in black, her long legs slender, I felt my own excited weight in the base of my belly, and my cock filled against the cold. Not enough to be obvious, just enough to remind me.\n\nSam was also clad in a full length wet suit, an essential part of the plan. He kneeled and got his balance in the shifting craft. Amelia pressed herself to Sam's back, and held herself close to his solid, muscled body. I felt a momentary twinge of jealousy. Fuck, why didn't I surf? I had to let someone else give Amelia this thrill, because I couldn't do it. Damn, I couldn't always be Amelia's man. That's not right.\n\nBut this was for Amelia, not me, so I grabbed the roll of gaffer tape and bound them together at the waist, Amelia's crotch tight against the tight muscle of Sam's ass. Amelia's arms and upper body were strong, so it wouldn't be a problem for her to hold herself high on Sam's back, her arms gripped tight to his chest. Her legs though, couldn't flow loose, so I lifted first one leg high and ran a circle of tape around her calf and strapped it to the lower part of his thigh, and then the other. We'd figured out the best way to do this on dry land, sorting out their geometries, sorting out how to fit their bodies together, tight.\n\n\"Just as well I don't mind being bound,\" Amelia grinned, her eyes sparkling at me.\n\n\"Did I miss something?\" Sam asked, unable to see the flushed face of the woman on his back, this woman so alive. Amelia, so alive.\n\n\"Never mind that,\" she scolded, \"that's not for you to worry about.\" \n\nAmelia reached to touch my face, closing her eyes as she did so. Her finger tips traced a gentle path down my cheek and finished on my kissed lips. She tapped her fingers on my lips twice (and I flashed back instantly to those first days, \"what, you've never seen a woman with bright red lips before?\"). Then, in just as quick a flash, I saw the arthritic hands of the old woman in the cafe, sensing the love in Amelia's face, seeing the woman I loved.\n\n\"Let's do this,\" she said, holding her head high. \"Are you ready, Sam?\"\n\n\"Yes, I'm good, Alex has tied us together well. You ain't going anywhere I'm not going.\"\n\n\"Fuck that,\" Amelia laughed. \"If we come off the damned board, I'm not gonna depend on your feeble arms to get me clear. Alex, where's the knife?\"\n\nNow it was my turn to smile. Sam's biceps were solid, thicker than her thighs, but still she was going to rely on herself, her own will, first. I slid the knife, blade out, between the gaffer tape and their bodies. If Sam lost his balance on the board and they fell, Amelia could grab the knife, cut the tape, and free herself. I'd then ride in behind the break in the inflatable and pull her in to safety. Sam would follow his board, no different to a dump on any wave.\n\nOnly this time, if it happened and the world tumbled, Amelia had to cut herself free, first. Christ, when she was young she'd cut herself because she couldn't depend on life. Now, when her life might depend on it, she'd have to cut herself free again. I'd thought everything was in free fall with Amelia, but maybe it was all in circles.\n\nI gripped her face in my hands, and kissed her on the lips, hard. Sam wasn't between us for those three short seconds, he wasn't there. You do this, Amelia, I thought, you do this.\n\nThen he was there, reaching for the board that was stowed at the front of the boat. Amelia clung, her black clad body wrapped around his back, silver stripes wrapping her limbs to his.\n\n\"Fuuuck, I must be mad,\" her voice was a shout, a victory from the start. \"Let's do this, no wave is going to stop me now. I'm the fucking dolphin queen...\"\n\nThey fell onto the board.\n\n\"...on a fucking turtle's back!\"\n\nThis was insane, crazy, but there wasn't time to be crazy. I took control of the boat, pulling them closer into the breaking surf. It was up to Sam to judge the timing of the waves, up to him when to release the rope. For a short moment Amelia wasn't going to be in control. \n\nThen I realised, yes she was. Sam was her turtle just as I was her Alex. Amelia was always in control, this fisher of men. She'd set her will to this ride, and both us men were running hard to keep up.\n\n\"I can do this!\"\n\nHer voice was high and firm, challenging the sea. She had a strong man between her thighs, and with Amelia, that's often enough. I wished he was me.\n\nSam threw back the rope and I peeled the boat away behind them, giving them space so they could catch the rhythm of the sea. As I accelerated the boat away my cock was hard and full with Amelia's excitement. She was going to ride a long wave with a powerful man, and I was going to watch her do it. \n\nFuck, I didn't expect this reaction from my body. Her intensity was contagious. I wasn't jealous any more, I was there in Amelia's moment because I could see her. I knew what it was like to have Amelia wrap herself around my body and me around hers, so I could feel her. In this moment, in this long haul of surf and surging speed, I could be her. Amelia, queen of the sea, Thetis unbound.\n\nI accelerated the boat away from the shore and ran parallel with them as they hunted for the perfect long wave. I looked back and could see Sam paddling for the best place to catch the breaking surf. \n\nOut there, the waves were building up to a height of maybe two, two and a half metres nearest the shore, and then they would roll perfectly down their own slope, white water surging at a diagonal as the break ran fast along the shore. If they caught the wave as close to the rocky shore as they dared, and then surfed down away from the land's edge, the wave would continue at an angle, breaking on for several hundred metres. A hell of a ride, if the sea was right.\n\nI could see that Sam was watching the cyclic rhythm of the ocean, waiting for the higher body of swell, the slightly longer trough. Amelia's red flame of hair was like a beacon. I saw Sam dig his arms deep into the water beside their board, saw him turn his head back once, and saw the red beacon dip, once. Even from a distance, I could see Amelia tighten herself around him, gripping Sam's body firm and hard. Here we go, he must have said. Fuck yes, she must have replied. My cock throbbed in a silent response.\n\nSam was paddling hard now, and behind him a long, powerful mass of water was building up high like a huge curved, translucent wall. I felt a surge beneath the boat as it too rose onto the higher weight of the sea. This was a big one.\n\nHis timing was brilliant. Sam matched the speed of the board perfectly with the incoming mass of water, positioning the board with their black clad bodies right at the top of the water's slope, just as the tip of the wave fell forward onto itself. My heart leapt into my mouth as I saw Sam get to his feet and quickly find his balance, hunching low on the board. Once on his feet Sam was able to steer the board smoothly along the curling, surging push of the wave, dropping away forever but always onto the water.\n\nOn his back I saw Amelia hold herself high, her body perfectly in line with his, matching Sam's balance and stance as if they were one creature. Over the crash of the waves I heard her high yell, \"fuck, Sam, yes whooo hoo\" and the ride was on. Their speed was amazing, not only did they have the speed of the board along the face of the wave, they also had the power of the long swell behind them, pushing them fast along the shore. The nose of the boat rose as I hit more throttle to keep up with them.",
        "For ten, fifteen, twenty seconds, even longer, the diagonal thrust of the wave was enough to keep them powering forward, the break seeming to go on forever. I was too far off shore, keeping a safe distance, to see their faces, but I could see from the tension in their bodies that their ride was an exhilarating mix of speed, finely tuned muscles in synch and balanced together, and a visceral rush with the power of the water.\n\nAgain Sam's timing was brilliant. As the front of the wave lost its power he crouched down, then lay on the board with Amelia straddled on his back. They peeled off the back of the wave and lost speed, and I steered the boat quickly near them.\n\n\"Cut yourself loose,\" Sam shouted, \"it'll be easier for you to get into the boat.\"\n\n\"Fuck, that was insane. What a fucking buzz. Can I do that again? Jesus, I'm fucking buzzing.\" Amelia was high on the adrenaline, her face flushed, her eyes wild. \"Sam, can you do it again for me?\"\n\n\"You're a fucking mad woman. But yes, I can do it again, only once though. You'll stuff me back if we're not careful!\"\n\n\"The sea's OK though, isn't it? It's not too dangerous?\" Amelia was gutsy, but she wasn't stupid. She knew it could be dangerous and would say no if she had to.\n\n\"Nah, it's a smooth break, they're good waves. We should do it now though, before the tide turns. It'll mess up once the tide is running the other way.\"\n\nAmelia quickly sliced through the silver bands holding her against Sam's body, and when the board came up against the boat, she clawed at the side to drag herself aboard. I helped her pull herself into a sitting position, and she sat for several seconds slowing her breath.\n\n\"Alex, that was so fucking cool, that was insane. Fuck, that was exciting. Look ma, I can fly!\"\n\nAmelia was shaking with excitement, her cheeks flushed hot with the thrill of it, her body quivering.\n\nSam also swung his body over the side of the inflatable, and quickly tied the ankle strap of the board to the grab rope running along the side of the rubber hull. As he did so, I noticed a thickness in his groin. His cock wasn't hard in his wet suit, but it was certainly thick and full. Knowing my own reaction to Amelia's excitement (my cock was still thick and full), I couldn't blame him at all for getting aroused at what they were doing. After all, he had just surfed with the beach's sexiest woman strapped with her legs around his thighs. Lucky bastard. Fuck, why hadn't I learned to surf?\n\nNow that she had recovered her breath, Amelia caught the tail end of my glance at Sam, and her eyes widened at the sight of him. She looked across at my groin, and her mouth opened into a bemused O.\n\n\"Goodness boys, what's going on here?\"\n\nAmelia was always quick with her wry wit. Her smile was wide, her teeth showing, the creases at her eyes laughing. Our grins were sheepish, self conscious.\n\n\"Are those for me, just coz I'm a hot little surfer chick?\" \n\nShe slowly unzipped the tight black centre of her wet suit, down below her navel. Her full breasts pushed up the most glorious set of curves and cleavage. Despite the awkwardness of the situation, my cock throbbed and thickened again at the sheer sexiness of the woman in front of me. Amelia was so alive.\n\n\"Yeah, well, surfing always ends up with a boner for me,\" laughed Sam. \n\nI sensed he wanted somehow to back out of the nervous tension in the air between the three of us.\n\n\"Listen, you guys, this could be fun and could get hot and all, but seriously,\" he looked at me, avoiding Amelia's eyes, \"Alex, you really need to do a run on the board with Amelia. She's hot for the buzz, man, not hot for me. You should go, you should do the next one. Coz man, she's fucking hot for you. Even a thick old surfer dude like me can see that.\"\n\nI didn't know what to think. Shit, I can't surf.\n\n\"He's right, Alex, I want to share this with you. Right now, the idea of another ride is almost better than sex. And you know I always have to do better than sex with you.\"\n\n\"But...\"\n\n\"No fucking buts mate, just fucking do this. For her\"\n\nSam grabbed the wheel of the boat, pushed the throttle forward, and headed back out to sea, the board slapping fast in the water alongside. He powered out to where the waves first cornered the headland, the nose of the boat high, spray arcing far out to the sides. The wake was a long churn of white water behind us. \n\nOn the beach I could see a number of people standing by the water's edge, pointing their arms out towards us.\n\n\"I think we've got us an audience,\" I shouted.\n\n\"Good,\" Amelia shouted back. \"You can carry me from the sea, show 'em all that the legless woman can surf. And pull two gorgeous hunks doin' it!\"\n\nShe slapped both Sam and me hard on our thighs.\n\n\"Put those away, boys, we don't want to frighten the mums and kiddies on the beach now, do we?\"\n\n\"Ow, fuck, that stung. No ma'am, we don't.\" \n\nAmelia forgot her own strength sometimes, and what with our wet skin and the hot wind, both of us were going to carry the mark of Amelia for a while. Brand Amelia, and we're her poster boys.\n\n\"But how we going to do this? There's no way I can carry you on my back, standing up. We'll be flat on our faces, soon as the wave breaks. This Charley don't surf.\"\n\n\"No, s'okay. We'll go in on the board on our bellies. You can body surf, it's the same thing. We just keep the nose of the board up, these waves will push us all the way over the reef into the lagoon. It'll be a longer ride than Sam and I just did.\"\n\nAmelia had it all worked out.\n\n\"I'll still go on your back though, coz I'm smaller than you. You can crush me later if you like, but not now.\"\n\n\"Yeah man, that'll do it. I'll run the boat along side, just in case, but it'll be cool. Be a fucking ace run, even down on the board.\"\n\nSam and Amelia weren't giving me a choice, so I pulled off the tee shirt I was wearing and bunched it with the life jackets. Amelia placed her palm over my heart, holding it there for five seconds, before leaning into my mouth and kissing me, her tongue thrusting.\n\n\"Come on turtle boy, I wanna ride your back! Let's do this.\"\n\nSo I unleashed the board from the tie rope, placed it into the water, and slithered onto it, centering my balance.\n\n\"See you in there, Sam. And hey, thanks for doing this for me.\"\n\n\"Fuckin' A, Amelia, it'd be good if more chicks had balls like you. The world needs more like you, frankly. Jesus, but don't ever put me in a fuckin' plane with you. I'm never jumping from a plane, Amelia, I can tell you that right now.\"\n\nI heard the slap of a high five.\n\n\"You hear that, Alex? Sam wants to go sky-diving with me, next!\"\n\n\"You fucking mad bitch. I'm afraid of heights. Why do you think I stay in the water?\"\n\nI felt the weight of Amelia settle on my back. I opened my thighs to let one of her legs fall between, so I could grip at least part of her below the waist to keep us tight together. We wriggled a bit to centre ourselves on the board, before Sam pushed it away from the edge of the boat.\n\n\"Just get on the top of a wave before it breaks, and the sea will do the rest. See you on the beach.\" \n\nI smelt the exhaust as Sam turned the boat away, and heard the quieter slap of the sea as the boat moved off into the distance.\n\nIn my ear I felt Amelia's hot whisper as she pressed her weight onto my back.\n\n\"Alex, Alex, Alex...\"\n\n\"What, Amelia, what's up?\"\n\n\"Nothing, just Alex, my Alex. Damn, I fucking love you, that's all. My Alex, I do. You know that, don't you? Even though I don't say it much, you know I love you?\"\n\n\"Hey Amelia, I'm hearing that you love me, is that right?\"\n\n\"Bastard, here's me gone all lovey dovey, and here's you, taking the piss. You'd better love me, you bastard,\" and she poked a finger into my ear, playfully. I pushed my ass back up into her groin so she'd sense the movement.\n\nYes Amelia, I do love you. More than words will ever say, I do.\n\nThe sea interrupted our moment, a high swell reminding us that we were here for the thrill of the ride, not the memory of the moment. We could come back to that, later, but the rising sea was now. \n\nWe'd drifted in behind the break, ideally positioned to time our run.\n\n\"You got me tight there, Amelia?\" \n\nI started to paddle, digging my arms into the water, deep, to get traction, just like Amelia moving in her chair. I felt a squeeze on both sides of my ribs, and her hands curled under my shoulders.\n\n\"I got you tight, Alex, I got you.\"\n\nJust as well, because at that moment the board rose on the surge of the wave and started an incredible vertiginous spill over the edge, the edge that kept moving beneath us. The board fell with the turn of the wave, white water thundering in my ear.\n\nAmelia's cry rang loud in my ear, \"ride it, let's ride it, yes!\"\n\nThe surging, thrilling pressure of the sea took us, and we were weightless in the hurtling speed of the long, curving ride. I was conscious of the presence of Amelia's body on top of mine, but she was weightless there. Adrenalin surged and my cock hardened beneath me with the sheer sexual excitement of the long fall below us, the pounding sea behind us, the flesh of her breasts against my back, the spray laced wind in our faces, her strong arms gripping mine. \n\nBarreling down the tube of the wave was like a long surging come into the wet centre of the ocean, with my Amelia riding my back. The board bucked and bounced, and her arms gripped my body as we surged forward. I felt her head press against mine and in the churn of the water around us I just made out her words.\n\n\"Fuck that's fast, oh fuck, that's good.\"\n\nThe board bounced and twisted as we came in over the reef. The white water spiralled and ran back, the speed dropping off quickly as we curved off the back of the wave. Amelia turned my face to hers and kissed me hard, her tongue probing between my lips, her hands gripping my hair, pulling me into her. She kissed me like a frantic woman, hungry for my mouth, our heat gripping together and the ocean sizzling and spinning around us.\n\n\"Alex,\" her breath panting, \"I'm going to have you tonight, fucking have you, hard as you like. I'm gonna have you, fuck yes, that's a promise. Oh fuck, that was wonderful, fucking insane. I never knew a man on a board could be so good. Jesus, what a buzz.\"\n\nThe rush of the sea was wet adrenalin, but the rush of her promise was a stronger force. Amelia, inexorable.\n\nAmelia looked towards the shore. \"Hmm, looks like there's a bit of excitement, I wonder who can have caused that?\"\n\nShe rolled her upper body to the side and fell into the water. With a last fierce kiss she pushed me into the water as well.\n\n\"You'd better cool off, lover mine, there's young folk on the beach. Mustn't shock them now, when I get carried from the water!\"\n\n\"I don't know. You did mention the women on the beach wanting me, maybe I should give them something to want?\"\n\nAmelia's eyebrow rose, and I was silenced. Bad idea.\n\n\"Look, there's Sam. He can help carry me from the sea. I feel like a princess of the briny waters. I might as well make a grand entrance, while I've got you both.\"\n\nShe pulled herself back onto the board, and I began to push it ahead of me, my legs kicking out behind me. Five minutes later I could touch the bottom, and we progressed faster towards the shore. \n\nA couple of grommets came up to us on their boards.\n\n\"Cool ride, lady, we saw you on the back of the other guy, and then coming in on the board. Done it before?\" \n\nThey circled around us, their hair white blond from the salt and sun.\n\n\"No, that's the first time I've surfed the point. Used to surf the beach break when I was a kid, but not for a while.\"\n\n\"What's wrong with your legs? Can't you use them?\"\n\nAmelia didn't mind questions from curious kids and was always straight up when she answered them. \n\n\"No. Broke my back in a car crash, years ago.\"\n\n\"That's fucked. The gaffer tape's a brilliant idea, though.\"\n\n\"Yeah, Tommy, maybe you should use it so you don't come off your board so much.\" \n\n\"Fuck off, I can ride better than you, any day.\" \n\nThe friendly rivalry of the boys was fun to watch. Amelia made a point of looking back out to sea, with her hand shading her eyes. Tommy saw her glance.\n\n\"Wotcha looking for, lady, sharks?\" \n\n\"No. Your girlfriend. I bet she's the best surfer of all you lot.\"\n\n\"She fucking isn't.\"\n\n\"Isn't what? Isn't your girlfriend, or isn't a better surfer?\" \n\nAmelia loved a gentle tease, it was her way of making kids think a bit. She should have been a teacher.\n\n\"Isn't anything. She isn't anything,\" said the boy.\n\nTommy's mate was quicker, he'd spotted the slip in his friend's words. \n\n\"You so fucking do like Stephanie, don't lie.\"\n\nAmelia laughed, affectionate already towards these little rockets of life, with their innocence and joy.\n\n\"Good for you, mate,\" she said, making sure the Tommy wouldn't be embarrassed in front of his friend by giving her seal of approval for the unknown Stephanie.\n\n\"Come on Alex,\" she said to me, \"get me in closer.\" \n\n\"Hoy, Sam,\" she yelled, \"over here.\"\n\nSam had beached the inflatable and was making his way along the water's edge towards us. He turned and made his way into the water, splashing his way nearer.\n\n\"Hey, you guys, how was that? And who are these lads?\"\n\nSam should have been a teacher, too. He instantly made the boys a part of the moment.\n\n\"You guys can drag the board in. Alex and I have to make a throne seat for Princess Amelia, get her out of the water.\"\n\n\"Cool, yeah, come on Tommy, grab the board.\" \n\nThey wanted to be part of Amelia's arrival from the sea on to the sand. A dozen or so people on the beach had seen Amelia's ride and were waiting for her to reach the shore. \n\nI recognised a few faces from the village - they would know Amelia as the woman in the wheelchair. Now they would know her as the woman from the sea.\n\nSam and I linked our arms in a fireman's seat, and scooped Amelia out of the water, supporting her weight. She placed her hands out wide on our shoulders, sat tall and erect with a big grin on her face, and was carried triumphant from the sea. Amelia's moment in the sun, Amelia the surfer chick, with her zip undone to her navel.\n\n\"Do it again tomorrow, boys?\" she asked, knowing the answer already, and making an announcement to the small group of people on the beach. \n\nBehind us, the two boys dragged the board onto the sand. \n\nBeyond the reef the long walls of water continued to push their curving breaks around the head land. Out where the dolphins swam, the ocean kept its relentless pulse, breathing, breathing, breathing.\n\n-- ooo OOO ooo --\n\nAn hour or so later Amelia and I were alone in our cottage. I pushed her wheelchair through the door into the living room, the lowering western sun still warm through the high windows, the light dappled with shadow from the trees outside. In the distance, the sound of the sea was softer, a background noise occasionally broken by the cry of gulls. \n\nMy skin was dry and hot from the sun, my board shorts stiff and crackling from the salty water. Amelia sat in her chair, her black wet suit still clinging to her curves, that long black zip still undone to her navel, her tanned belly tight with a band of muscle. She sat tall in the chair, her eyes still wide and excited from her rides in the pounding sea. She spun the chair around, taking herself from my hands, backing herself away. A distance between us, so she could look.\n\nHer gaze on me, standing there, was thoughtful. My look at her was naked lust, I had waited so long, my cock rising and falling in the sea. Her words rang in my ears, I'm going to have you, hard as you like, fucking have you. I was bare chested, and my nipples hardened with my thoughts. My cock shifted in my shorts.\n\n\"Come here, stand before me.\" \n\nAmelia knew, she was always in command. She placed her hands on my waist, her arms outstretched before her, and waited. Her eyes looked down at the base of my belly before her, watching and waiting for the inevitable movement. She loved the effect her presence had on me, the way I would stir and respond to the sight of her, her look. \n\nShe didn't need to touch me, my cock would rise by itself. My prick thickened because she looked at me, a multitude of thoughts in her eyes but I could never read them. And the sight of her before me, her dark tanned body held tight in the black rubber suit, her high breasts swelling. Fuck, we were a circle of response to each other, looking, seeing, her eyes on me (my cock rises); my eyes on her (my cock rises).\n\n\"Take them off, stand before me.\"\n\nAmelia took her hands away from my waist and rested them on the arms of her chair. I took one step back so I could lift my feet, one at a time, and stepped from my swimming shorts and the Speedos beneath. I took the one step forward so her hands could reach me again. They did not reach for me. Amelia's hands remained on the arms of her chair, I stood in front of her and she did not reach for me. She didn't need to touch me, for my cock rose untouched before her eyes. I looked down at the top of her head, and my prick rose against my belly. Time stopped.\n\nAmelia sat, gazing at my body responding to her. I couldn't see her eyes, couldn't see the set of her lips, the shape of her mouth. I was blind to her mood and didn't know what she wanted. I stood before her, and waited, hesitant to break her contemplation. Like her binding ropes in times before this, I knew that Amelia had given herself a powerful physical sensation to replace those she no longer had. She needed to process her own response to the thrust of the sea, the push of the wave, the men she rode, crouching, lying, their hard muscle beneath her, her grip on them. Beyond, the soft rush of the surf on the beach was a constant hush.\n\nAmelia sat, and my body responded, my risen shaft hard against my gut, the tip of my cock head just nudging the bottom edge of my navel, her length. My balls were tight and high between my thighs. I shifted my feet an inch or two apart, to better keep my balance. The slight movement of my feet was followed by a slight shift of Amelia's head, a tilt, as if the movement had broken a revery. Time started, a different contemplation now.\n\nAmelia lifted one hand from the arm of her chair and placed the palm of that hand against the hot shaft of my cock, pressing its heat against my belly. Her palm was against my shaft, and her fingers laced upwards, the head of me gently pressed between her middle finger and ring finger. No rings adorned her hand, and the deep purple red of the head of my cock was held between her long fingers, a pressure on the shaft, but not a grip. Her hand pressed against my centre and it was warm.\n\nAfter some thirty seconds, no sound in the room but the softness of the sea outside, Amelia lifted her other hand from the arm of her chair. She ran the palm of this hand up between my thighs.\n\n\"Wider,\" she whispered, and cupped my balls in her hand, the tip of a finger nudging my ass hole. Amelia held the high weight of my balls in the palm of her hand and they were cool. My cooler flesh was cupped in a palm, and my hotter flesh was pressed by fingers.\n\n\"Oh Alex,\" she whispered, \"I've got you in the palm of my hands.\"\n\nShe looked up at me, her eyes wide and her pupils black, her mouth serious.\n\n\"Is that where you want to be, between my hands and a soft place?\"\n\nAlways Amelia, that's where I want to be, lying on your breast, listening to your heart. But she didn't wait for an answer.\n\n\"You love me today, Alex, don't you? You never knew you had a surfer chick in your life, did you?\"\n\nShe smiled up at me, her mouth and her eyes wide with her beautiful smile. Jesus, I could count the beats in her head, but I didn't know what she'd decided.\n\n\"You've heard what surfer chicks are known for, haven't you, city boy?\"",
        "Both her hands gripped me and pulled me forward, and I found out.\n\nHer hand cupping my balls stayed where it was but gripped me tighter, and the pad of her finger pressed, sending a throb down my shaft. The hand against my cock twisted and pulled it down from my belly, and her lips and mouth were around the head of me, wet and hot. Amelia spun her tongue under the head of my cock, and I was in her mouth, she was sucking and her focus was complete. My cock in Amelia's mouth, and that's all that mattered.\n\nI leaned the weight of me forward and Amelia took me in, her hand working the shaft of me, up down, and her other hand around me now, gripping the hard cheek of my ass, pulling me forward onto her hand and into her mouth. The lick and slurp were slutty and wet, Amelia just wanted cock, hungry and hard.\n\nI tried to get a hand inside her wetsuit to cup her full high breast, but the rubber was too tight. She pushed my hand away.\n\n\"No, this is for you, your cock is all I want. Me, later.\"\n\nAmelia didn't want to talk, she wanted to suck. Suck, stroke and squeeze. Cock, mouth, tongue. Fuck, hand back and forth, twisting, squeezing, stroking, faster, slower, I couldn't tell. Her hand back to cup my balls, then away, her finger to her own mouth, wet licked, saliva dripped, wettened, her slick finger thrust into my ass, deep, till I grunted and lurched forward.\n\n\"Finger fuck deep in your ass, Alex, yeah? Two fingers, Alex? Come on, open up.\"\n\nFuck yes, Amelia's words taunted, her crudeness fucking with my head as she fucked my cock with her mouth. Wordless from me, just low moans and grunts as she fucked my ass with her finger, my cock throbbing into her wet mouth with each push, saliva dripping. Jesus fuck that's good, jesus fuck, good head, I leaned forward to place my weight on the arm rests of her chair, thank Christ it's there and she's in it or I'd be falling on the floor.\n\nAmelia leaned into me, squeezing both cheeks of my ass now, our bodies joined in a tension through the metal and straps of the chair, and I pushed the wheelchair back up against the wall so the fucking thing couldn't move any more because I needed to brace myself with my hands against the wall, standing as tall as I could and bending the centre of me, my long shafting cock, into Amelia's hands and mouth and oh fuck yes fuck fuck yes, the come began to heat and rise from deep in my spine. Amelia's hand gripped my tight balls and she knew from the movement I was close, she knew from my moans I was near.\n\nOh fuck, her finger pushed and pushed into my asshole and with a long throb my come was in her mouth and with another throb it was spilling from her lips and oh fuck my hands pressed hard and my fingers gripped against the wall as my back arched and another spill of come down her chin and I fucked her face and she swallowed me down and there was a sweet tasting, glorious mess which Amelia swallowed down, fucking surfer girl giving head, fuck yes, and I collapsed to the floor. Her wheels turned, a half rotation.\n\nI looked up at her gazing down at me, with her dark, dark eyes and her sweetest smile. The sweetness of Amelia's smile lost a fraction of its innocence (oh, Alex, do you love me?) as she lasciviously licked a white drop of come from the side of her mouth, her tongue a wicked flash of red, tasting me again.\n\n\"So, Alex, that was salty, salty sweet. Tasty. Did you like your sweet little slutty little surfer girl?\"\n\nYes, I did, but couldn't help thinking, surfer girls with their mouths are one thing, but what about Amelia? This was play acting, a quick oral fuck to make up for riding on Sam's back without me. This sex wasn't about Amelia, she could have been out of the room. Her mouth was fucking hot, but she wasn't really there. I remembered her words: your cock is all I want. Me, later.\n\nI wanted her, now. Later was for another time. Amelia was now, she was in front of me, sitting in her wheelchair, sexy in her black wetsuit, zip undone to her belly. I was naked before her, my cock softening, a drip of come dropping from my foreskin onto my thigh, salt onto a salty skin. I remembered the moment when I first saw her in ropes, bound yet naked in her intensity before me. She had said, \"don't over think it, you can't\". Yet here I was again, over thinking Amelia and me, me and Amelia.\n\nI stood up, took one step back, and reduced the scene to its basics. I was a naked man standing before a beautiful woman sitting in a chair. She had been for a surf, and still had her wetsuit on. That wasn't right, Amelia couldn't lie naked beside me, skin against skin, if she was sitting in a chair. She couldn't lie beside me, skin against skin, lit by the falling sun from the west, if she was still clad in rubber. \n\nI looked down at her, and she was looking up at me with her steadiest gaze, her eyes crystal and shining, her hands resting in her lap. I realised she had been watching me, in the way that she does, knowing me better than I know myself. She can read my emotions flickering over my face, can Amelia. I can never hide from her, even if I wanted to.\n\n\"Alex, come here, my lovely man, come here.\"\n\nI bowed before her, and she reached both hands to the back of my head, gently pulling my head down towards her upturned lips, and kissed me slowly, carefully. Our lips were still salty from my come and the taste of the sea, and our kiss was slow and soft. \n\n\"Help me out of this skin,\" she said softly, pulling the zip down as far as it would go. \n\nStill kissing her, I peeled the slick rubber first down one arm and then down the other, peeling the black embrace away from her skin. My hands slid over her ribs and pulled the tightness back, peeling it down to her waist. Our next movement was practiced and sure, we did it many times, especially at night when Amelia's day was done and she wanted to be away from her wheels. With her arms around my neck to take her weight, I lifted her up from the chair and further peeled the clinging rubber down over her backside.\n\n\"Your skin's still wet, the rubber is clinging, wait,\" and I reached for a towel to place it on the seat. \"The seat will be cold.\"\n\nShe sat back down on the towel, and I knelt before her, peeling the rubber down her long legs and dropping it to the floor. Sure enough, her skin was cool as I wrapped the towel all around her legs, warming her, patting her skin dry. \n\n\"Alex, you're so thoughtful, putting the towel on the seat so my bum won't get cold. But you know I can't feel that.\"\n\n\"Yes, I know you can't feel the cold seat, but your skin can. It's still cold on your skin.\"\n\nI looked up at her, and she was looking down at me with her steadiest gaze, her eyes crystal and shining. She reached both hands for my head and pulled it to her lap, resting my head on the towel that was wrapped across the top of her thighs, bunched at the base of her belly. I felt her hand stroking my hair, gently, softly; and then she pulled one half of the towel away from her thigh, so that my cheek rested on her bare, cool skin. The dark triangle of trimmed pubic hair was before me, her thighs together.\n\n\"Move around,\" Amelia softly said, shifting herself on the seat as she spoke. She rested on hand on her knee, and slowly moved it towards the side. And then did the same for her other leg, exposing the darker place between. At the very top of her inner thigh, her skin transitioned from the dark tan of Amelia's summer to the paler colour of her winter skin. Between, the darker folds and petals of her lips were together and tight, the small curls of hair darkening around this centre of her, her slitted folds.\n\n\"It will be salty from the sea, Alex, it will be salty there.\" \n\nShe paused, and the stroke of her hand in my hair stopped. \n\n\"I will be salty there,\" she repeated, owning herself once more and remembering herself. \"I'm Amelia, and my cunt is salty from the sea.\" She named herself, she named her sex, and her names were so powerful.\n\n\"Take me to bed, Alex, and taste me. I'd forgotten my salty taste, but the sea's brought it back.\"\n\nI didn't need to be asked twice. I stood and took her in my arms again, her arms around my neck, her wonderful body cradled close. We didn't have the water from the lagoon around us this time but no matter, the distance to the bedroom was short. Even in that short walk, my softened cock thickened and swung. When I placed her on the bed, Amelia's eyes were wide.\n\n\"Alex, do I do that to you?\"\n\n\"Yes. My life is simple sometimes. Yes, you do that.\"\n\n\"Sweet god, you do me good, you really do. What did I ever do to deserve you?\"\n\nAmelia, that's my question, not yours.\n\nOutside, the sky was darkening, the final blaze of the setting sun threading orange through the western sky. The steady rush of the sea in the distance was occasionally broken by the louder thump of a bigger wave and the last cry of a sea bird late home to roost. There was no moon, and darkness fell quickly.\n\nAmelia lay on the bed, curled one way, her cheek on my thigh, my slow rising cock in her hands, slow and warm. I was curled the other way, my cheek on her thigh, my face inches from her dark centre. With one hand I had gently separated her legs so I could gaze upon her darkness, her stillness, her silent sex. This place was for me alone now, her feeling gone and quiet.\n\nWith all the wonder of a virgin boy with his first girl, I slowly parted Amelia's labia with my fingers, and her lips were soft, so soft, and she bloomed like a flower. I scented her, and the salt tang of the sea mixed with a warmer sweetness from her skin. My fingers were steady in her slide, easing back and forth along the full length of her spreading place.\n\n\"Guide me, Alex, show my fingers where to go. I forget.\"\n\nAmelia slipped her hand between her legs to feel skin and softness as I did, from the outside, even if she could not feel herself from within. \n\nIf she touched herself as I did, Amelia would feel how her man loved her body, all of it, every inch. She could see herself through her finger tips, just as the old blind woman had felt her beauty the other day. One sense gone, another sense heightened.\n\nI took Amelia's fingers in mine, and for the next silent while we explored her cunt lips, her folds and slides, the tiny grip of her ass hole, the rise of her clit. My finger guided hers, pressing into herself, spreading her lips apart between two finger tips, hers and mine.\n\n\"It's like I'm a girl again, discovering myself for the first time. Feeling my smooth skin, my petals, my folds. Is this how it always feels, discovering a woman's cunt for the first time? It's no wonder men want to spend their life between a woman's legs. I would too. I've never touched myself like this before. It's beautiful here, isn't it?\"\n\nMy fingers guided hers as we slowly explored her sex. Since she could not feel our combined touch from inside herself there was no haste caused by arousal, and our touch was a slow delight of the soft skin of her lips on our flickering fingers. I slowly re-arranged my body on the bed and around her long limbs, my mouth and my tongue around her cunt and I licked her there. Amelia's fingers followed the edge of my mouth, and found my wetness spreading into her own flesh.\n\n\"Your wetness, Alex, you make me wet again. That's been so long, I've forgotten what I felt like.\"\n\nYou'd forgotten, Amelia, but I never did. \n\nAmelia's fingers followed my mouth and swirled her wetness, touching her sweet centre. Suckling on her skin, my tongue lingered where any man would love to linger, my hot mouth made her wetter, my cock thickened and strengthened with my own arousal. As we lay circled around each other, my cock found her warmth and wetness as her mouth found my head and heat, and took it in. Amelia's hands drifted from her cunt to my cock and found my length and the weight of my balls. Her fingers made patterns on my shaft, feeling my outside as intensity surged inside me. \n\nBetween us, we found her breasts and hardened nipples, and our hands wove around the fullness of her breasts, pressing palm to breast, her palm over the back of my hand, pressing, pressing, pressing.\n\n\"Ah fuck, the ache inside me,\" Amelia cried out loud, \"the ache in my heart, it's too much. Come up here, I need to see your face.\"\n\nHer sorrow shook me, and I left my wetness between her legs and gently closed her thighs together, protecting that precious place. Pulling myself up to her I wrapped her body in my arms, and she softened herself onto me. In the darkness I felt her hands touch my face as gentle as a drift of wind, and in the darkness I felt the slow wonder of her caress. I felt a hand on my chest and a slight pressure there, pushing me away from her. I wasn't pushed away to leave her, I was pushed away so she had more space to find me, to pull me closer with her touch. \n\nWith both her hands Amelia traced her fingers over the tight muscles of my chest, up both sides of my neck, onto my face. One light finger paused on my pulse and she measured the beat of me.\n\n\"So steady, Alex, your heart is so steady.\"\n\nGod knows how, she makes it flutter like a bird every time I see her, my sweet Amelia, my heart always jumps back a beat when I see her.\n\nThe darkness was thick around us now, not a glimmer of light in the room, and her fingers found my cheeks, my temples, my hair. As she touched me, the intensity on my skin multiplied and a tingle ran through my flesh. She was connecting things together I never knew could be connected, and my entire being was streaming into the tips of her fingers. My face was electric with her touch, her fingers as light as air, a delicate breath upon my face. Could she be more gentle?\n\n\"Alex, come inside me. I won't feel you in my cunt, but I'll feel your face when you come, I'll know you, my love, my sweet boy. Come to me now.\"\n\nAmelia humbles me constantly, with the gift of herself and her love. What did I ever do to deserve you, Amelia?\n\nI reached in the dark for our lubricant, a delicate flavour to linger on top of my lick and her spit. It was cold on my cock but my heat changed that, and Amelia wouldn't know. Her fingers were slow on my face and left a butterfly's trace. Her heat was above her belly now, in her breasts and on her throat. I poised myself between Amelia's slender thighs, silently parted, and eased my length inside her.\n\nAs I rose within her, the warm flesh of my belly touched hers so she knew I was there, our bodies touched together through our skin. She reached both hands down to the taut cheeks of my ass. \n\n\"Deeper,\" she sighed, \"deeper.\" \n\nShe pulled me into her, deep, and my chest fell to her breasts, and with one arm under her neck I took my weight. I arched my back to thrust further into her, my head high, but she pulled my head down to hers. Our mouths met and our tongues fucked, hot and twisting.\n\n\"Do me, Alex, fuck me like you've never fucked me before. Fuck me deep, fuck me long.\"\n\nHer voice was low, a whisper, a song. Her hands gripped the back of my head, her fingers so tight. Then her fingers fluttered to my cheeks, and she held the palm of one hand to the side of my face, ah fuck, Amelia's hand, and the other to the back of my head again. \n\n\"Ahh, fuck me, Alex, my man, my man, my fucking wonderful man.\"\n\nHer voice was low, a lullaby, an urging song, a breath of wind and a gathering storm. She was urging me up within her, her whispering sighs a counter to my louder moans. She knew me, she knew me so well, and delighted in riding me and cresting me, edging me and making me explode. This time though, Amelia was different somehow. Usually, she would press her breasts and spill my seed upon them, creaming our warm come into the lush valley between, urging my teeth to her nipples, biting, suckling.\n\nThis night, she kept pulling my body higher into hers so that my cock was deeper into her. Her cunt couldn't feel me, but, \"Oh fuck, Alex, deeper, right into me, fuck, fuck me, harder, my Alex,\" she urged me higher, my balls tightening and rising and caressed by her swelling lips, sliding and slippery with the cream, her cunt hot around my shaft, hot around me. \n\nI was inside her and her words pulsed into my brain, urging, urging me deeper, oh so fucking deep inside her. Amelia's hands were frantic on my flesh now, gripping my ass and my sides, pulling on my hair, never letting me go.\n\n\"Fuck. Me. Alex. Fuck. Me. Hard\"\n\nSweet goodness, Amelia, yes.\n\nMy orgasm exploded, pulse after pulse into her body, deepest.\n\n\"Oh my Alex, that's it, that's it, fuck that cock up me, far as you can. Inside me, yes, yes, you fucking beautiful man. I so want you, I so fucking do.\" Her hands held my face as I came.\n\n\"Deep enough, Amelia?\" I gasped, holding her, holding her, wrapped in my arms.\n\n\"Oh yes, lovely man, deep enough, deeply deep. Don't go, stay inside me, don't go.\"\n\nOur breath caught and slowed, and we breathed into each other's sighs, slowly soft and lingering.\n\n\"Don't go,\" she whispered.\n\n\"Amelia.\"\n\n\"Yes, Alex?\"\n\n\"I'm not going. Not now, not tomorrow, not next week.\"\n\nThere was a short silence, as if Amelia was considering my reply.\n\n\"Good. That's good.\"\n\nAnother silence, shorter still.\n\n\"That's really, really good.\"\n\nAmelia wrapped her arms around my body, cradling the back of my head in the palms of her hands.\n\n\"Can I be your Amelia for a little while?\"\n\nMy Amelia? It's dark, so she can't see my eye brow raised in surprise this time. That's not like Amelia.\n\n\"It's OK. It doesn't mean we're married or anything.\"\n\nThat's better, that's more like Amelia.\n\n\"Jeez, Amelia, you had me worried for a moment.\"\n\nIn the darkness, her fingers traced around my lips. I felt a tap of her finger, two taps.\n\n\"I do, you know.\"\n\n\"What do you do, Amelia?\"\n\n\"Love you.\" \n\nTwo more taps on my lips. She's really decided, now. \n\n\"Yes, Alex, I do.\"\n\n--ooo OOO ooo --\n\nSix weeks later we were back home. \n\nI had moved in with Amelia half a year before. We found it easier to accommodate my needs to hers, as the apartment suited her mobility requirements and the neighbourhood was flat. That was something I had never considered before. I'd get slightly annoyed with an incline on a hot day, sure. But every day, pulling your weight up a hill with your arms? Fuck.\n\nAmelia had woken earlier than I, and was clattering her morning routine in the bathroom. I was lazing, weekend sleeping, nothing a hurry, nothing a rush.\n\n\"Alex,\" she yelled, \"come here, quick, come here.\"\n\n\"What's up Amelia, can't it wait?\"\n\n\"No, it can't fucking wait.\" Then I heard her wonderful laugh. \"Well, I suppose it can. It's not going to go away in a hurry.\"\n\n\"What the fuck are you on about, honey? It's seven in the morning. What's not going to go away?\"\n\nAmelia found it easier to slide around the apartment in soft pajama pants, pulling herself along using strategically placed furniture and hand holds. The bathroom door thumped open and there was the sight of my darling woman, bare from the waist up, propelling herself along the wooden floor. My god, she's the sexiest thing in yellow striped PJ's I've ever seen. \n\nShe made it to the futon bed, and I flicked up the covers to welcome her back to my side, my chest a pillow for her head.\n\n\"What's that in your hand?\" I asked, noting a white plastic thing like a fat pen, clutched tight in her fist.\n\n\"Alex, can we do this, you and I? Can we do it?\" Her voice cracked, excited and whispering at the same. \"I'm scared, Alex. So fucking scared. I've never been this scared in all my life.\"\n\nI saw what she held. \n\nWithout a word, I cradled Amelia's head into my shoulder, kissed her hair, and reached with my other hand to enclose hers, still clutching the plastic object.\n\n\"Of course we can do it, Amelia. Lots of women do it, it happens all the time.\"\n\nWe held the tester together in our hands, turning it over and over, over and over; two red bars clearly showing in the clear perspex window.",
        "Amelia. And another..."
    ],
    "authorname": "electricblue66",
    "tags": [
        "paraplegic",
        "love",
        "pwd",
        "tenderness",
        "disability",
        "ocean",
        "oral sex",
        "surfing",
        "missionary"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/rope-and-veil-pt-02"
}