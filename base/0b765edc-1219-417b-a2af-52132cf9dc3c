{
    "title": "Dry, No Lube Ch. 02: Pixy's Choice",
    "pages": [
        "She woke up from a bad-dream nap, the taste of metal filings in her mouth; it was always like that, with repairs underway. The whole ship was filthy, with epoxy and fresh weld seams everywhere amid a constant stink of ozone. The message chime sounded again, and Pixy dragged her head across the pillow to look incoherently at the plot repeater mounted to the headboard. They'd put it there from Densborg's quarters now that she was acting as First Officer. \"What the fuck?\" she barked into the intertube.\n\n\"Urgent, Lieutenant Pfeiffer. They need you at the shuttle dock.\" Sounded like Klingmann, on the bridge watch. Good kid.\n\nShe felt her belly sink. That fucking supply run should have been back awhile ago... \"Is Mr Amisuul back with the converters?\"\n\nKlingmann paused, and when she replied she managed to sound carefully diplomatic. \"It's Mr Amisuul that needs you, ma'am.\"\n\nShe swore loudly without bothering to shut off the speaker. Fucking Amisuul. \"Does the captain know?\"\n\nAgain, that careful diplomacy. \"I'm not certain the captain knows Lieutenant Amisuul's name yet, ma'am.\"\n\n\"Roger.\" She yawned and stretched, sitting up naked in the bed. Space outside her viewport was frosted with stars and choked with ships all around them. \"I'll be right there.\"\n\n* * *\n\nPart I: The Basin\n\n* * *\n\nPixy was not amused. \"This is not the way I wanted to spend my afternoon, Mr Amisuul.\"\n\n\"Sorry, ma'am.\" He was careful not to look back into the crew bay, where Pixy was busy swabbing that other lieutenant's semen out of herself. This wasn't the first time she'd done that around him; once, he'd even left some of his own in there, but that had been many months and a thousand tribulations ago, almost like it had happened to someone else. She'd become a hero since then, and he hadn't, and that was not the kind of gulf he knew how to bridge.\n\nShe knew how, but wasn't interested.\n\nSo he kept his eyes forward. Besides, he was flying the shuttle, and he'd never been more than adequate at that kind of task. Pixy sighed behind him. \"This is one of the kinds of things you have to do now, Amisuul. It's not what you asked for, but I just don't have the time anymore.\" She made a last swipe, put the drywipe into the incinerator, and then sighed as her uniform did itself up.\n\nShe was enraged, if she was being honest with herself, and Pixy Pfeiffer was usually honest with herself. Amisuul was not cutting it at all, and he needed to be told that. She took a deep breath, then pitched her voice toward careful neutrality so that he wouldn't miss the message. \"Mr Amisuul,\" she announced, \"you need to step up your duty performance.\"\n\nHe started, the shuttle yawing a tad as he clenched reflexively at the controls, for in the careful language of Fleet-speak she'd just delivered a torpedo shot at immediate range. That loaded Fleet phrase, duty performance: it alluded to things like evaluation reports, confidential personnel files, counseling memos, even the distant specter of a court-martial: no subordinate ever liked to hear that phrase from a senior officer's mouth. He was far too ashamed to glance back as Pixy climbed through onto the flight deck.\n\nShe knew she'd rattled him. Good. She let the silence build; the sailors always knew when Lieutenant Pfeiffer was pissed, and now Amisuul knew it too. She was beginning to despair of ever turning him into a borderline competent supply officer.\n\nThe complication, of course, was that he wasn't truly responsible for supply: she was, as Second Officer. But now she was also the acting First Officer, which meant she had far too much to do and needed to delegate. So Rocky Amisuul had become the part-time supply officer.\n\n\"It's just... It's far too much to do, ma'am,\" he complained now, hating himself for whining. You didn't whine in Fleet. You shut your mouth and you did your job. But lately, Amisuul's job had become jobs, and he'd discovered he just didn't have enough energy. \"I'm not sure I can do it.\"\n\n\"Bullshit.\" She glared evenly over at him. \"What? Is it the sex? Because I'll tell you, a supply officer who can't fuck is a useless piece of shit.\" She sniffed, still smelling that other lieutenant's sweat in her nostrils; she'd ended up with her face in the hollow of his neck, gripping onto him with both arms and one leg as he'd cum from above her, his beard leaving a raw red patch on her right shoulder. \"You can fuck, Amisuul; we both know that. What's the problem with this stuff?\"\n\nShe'd explained The Rules to him when they'd started this game, while they were still on the way to the repair basin, limping along under half solar power. \"Supply guys work according to a very simple set of Rules, Mr Amisuul.\" She'd detested her own tone, all dry and didactic, but she'd had much to do then and little sleep to do it on.\n\n\"You offer to barter the shit you've got too much of, in exchange for the shit you've got too little of. There's always an officer asking for a favor, and another one granting the favor. The officer asking the favor is expected to sweeten the deal. Right? So, you do that with the same old shit supply officers have been using forever: money, drugs, or sex.\"\n\nBut usually it was sex, especially in this particular sector. They were far, far from home, far from wives and mistresses, aboard claustrophobic ships where even the onboard prostitution rings grew stale after awhile, the customary bedwarmers becoming too much like spouses. So supply officers usually looked forward to these kinds of visits as a chance to sample a new hole.\n\nAnd Rocky Amisuul had been unable to make that happen today.\n\nSo, faced with a better supply geek than he would ever be, he'd panicked. And then Klingmann had gotten on the intertube, so now Pixy had rented her vagina to the sublieutenant aboard the frigate Janzee. For forty dozen power converters, sure, but still: a lowly sublieutenant? And it had been Amisuul's job. \"Was it because he was a guy?\" she asked abruptly. \"I didn't think you minded it in the ass.\"\n\n\"Well... it's not my favorite,\" he admitted. Pixy's eyebrows rose in surprise.\n\n\"Dude. I thought your bedwarmer is a man.\"\n\nAmisuul glanced over; every officer in the Fleet kept a bedwarmer, but it wasn't considered polite to mention them. \"What about it, ma'am?\" he replied evenly.\n\n\"Well, I mean, I'm just saying...\" Pixy trailed off, in the unusual position of feeling awkward before a subordinate. The silence grew heavy, edged, as their ship loomed larger in the viewport. She cleared her throat. \"You don't fuck him?\"\n\n\"No.\" Amisuul sighed. \"He really does just warm the bed. We snuggle. Talk. Whatever. But no.\" He shrugged. \"I get more than I need, auditioning the sailors in the prostitution ring; you know that.\" She nodded; pimping the ship's whores was a traditional part of a Third Officer's job. \"That's the problem, see. Between keeping the whores in practice and these supply pukes you're making me fuck, it's just too much. You know... physiologically.\"\n\nPixy blinked. \"But, but you're a Tygon.\"\n\n\"Yes. Prehensile dick, ejaculation on command; sure. But it's not like I've got an inexhaustible supply, ma'am.\" He gripped the controls. \"And I was up all night with that new sailor, the one from the Tibert.\"\n\nShe frowned, then remembered. \"Ooh, yeah. The Korlene. You're welcome, by the way; you don't know what I had to do to get her included with the replacements.\" This was true; Korlenes were in great demand because everyone had heard about what they could do. Amisuul shivered.\n\n\"Yeah,\" he said vaguely, his scaly green forehead wrinkling. \"Yeah. Thanks, ma'am; she was memorable.\" Korlenes were telepathic, which made sex with them pretty fucking stupendous. It also sometimes left their partners unsure quite what they'd done in bed. He shook his head to clear it. \"She's going to make me a fortune.\"\n\n\"Minus my finder's fee,\" Pixy snapped. 1.3%! She was still amazed Amisuul had agreed to it. Well worth the cock she'd needed to suck to get that sailor assigned.\n\n\"Sure, sure.\" He frowned at the controls. \"It's awkward. It's never been awkward before; when you're Third Officer, the crew knows you have sex with them and it doesn't matter. Now you've got me doing some of your Second shit, and I have to give them orders and yell at them; it's not easy.\"\n\n\"It's the Fleet. We're in a war. It's not supposed to be easy.\" She had no time for this kind of shit. \"Look, you just need to prioritize.\" She glanced at the instruments, checking his alignment. \"We're in a goddamn repair basin. You should be stealing shit left and right. This is the kind of place where we supply pukes do our best work.\" She gestured at space all around them, packed with combat vessels in every possible state of repair, plus the smaller lighters and shuttles servicing them. \"This is an ideal place to learn how to be a Second Officer, Mr Amisuul. So even when our new First shows up and we all go back to normal, you'll know how things work when you get promoted.\"\n\n\"If.\"\n\n\"Whatever. Look, the yard personnel are even giving us extra shit, just because we've been in a fight. And now you need my help to close a deal for fucking power converters?\" The hard-dock ring was coming up in the periscope, the brand-new ring they'd just had installed. \"You forgot to drop the gravity, dumbass.\"\n\n\"Oh. Sorry.\"\n\nShe sighed. \"Come around again to the Blue Point, drop the gravity, and go back on approach the right way.\" She glared back at him. \"I can't do it all. You need to do at least one thing right today, Sublieutenant Amisuul.\" In Fleet, it was very bad news when people used your full rank.\n\n\"Aye aye, ma'am.\"\n\n* * *\n\nThe other problem with being acting First, Pixy had discovered, was that it made her every other officer's boss. Which made it difficult to socialize. Which meant there was nobody she could decently exchange incredulous rolled-eye glances during meetings when the new captain came up with more stupid shit.\n\n\"The whole sector is proud of this ship right now,\" he was saying, spreading his arms expansively. \"You guys are something special. You're the only repair ship ever to destroy two enemy vessels. Hell, it's been years since a repair ship has even participated in a battle.\"\n\nAn uncomfortable silence made its way around the table, but Captain Reye had served in transport ships; he didn't understand all the conventions yet. Shifty glances were sliding from face to face, all of them ending up on hers. Pixy could see it was up to her to correct him. \"Uh, sir?\" She cleared her throat. \"It's 'service ship,' sir, not 'repair ship.'\"\n\n\"Sorry.\" He held up his hands. \"My mistake; I'm still getting used to the culture here. But this ship is almost a mascot now. Everyone wants to see the USS Pulver succeed. Which is why,\" he went on, a little ominously, \"I'm puzzled by the state of morale aboard this ship.\"\n\nPixy was still getting used to Reye. She wasn't sure what to make of him. He was better than Captain Crick had been, sure, but that was a conspicuously low bar. He seemed sincere, and someone in the engine room had flown with him before and couldn't remember anything bad, but still. You never knew how bad a captain could be until you got out into space, and Reye hadn't yet taken the Pulver out. And these GP ships of the service fleet did not tend to attract the world's best leaders. Again, Pixy became aware that everyone was looking at her. \"Well, in fairness,\" she pointed out, hoping she didn't sound like a bitch, \"it's hard for a crew to be enthusiastic in port, sir. Especially with all the new replacements.\"\n\nReye snapped his fingers. \"Exactly. Replacements.\" He had a vaguely unpleasant smile; nothing you could really pinpoint, but there was something asymmetrical about it. \"New personnel to reflect a new culture. That's why I'm instituting a new motto for the ship.\"\n\nJaws dropped around the table. Many of the officers were inexperienced, but you didn't have to be in Fleet very long to learn that management via motto was a popular move by captains. Down at the end of the table, Klonmyre tried to make eye contact with Pixy, who just stared rigidly ahead. Reye had already told her about the motto plan, and she'd tried to talk him out of it. Chief della Sera's head had nearly exploded. But Reye seemed to have all the buoyant faith and confidence of the newly-converted, and he pressed ahead like a man convinced he could change the world.\n\n\"Pulver is on her way up. She's on the move. She's reaching for excellence. And, of course, she's also battle-hardened.\" Pixy was not unsympathetic; it had to be difficult to take over a famous ship that's just been in action, and be the only officer aboard who wasn't there for the fighting. But still, the motto was stupid. \"So. Effective this afternoon, we'll exchange the new motto with each salute. The subordinate will sound off with 'Pulver,' and the officer's reply will be 'Rising.'\" He beamed genially around at the table, waiting for everyone to get the joke. \"It's a pun.\"\n\nSilence.\n\nPixy glared down the table at Klonmyre's cynical smirk, daring her to say something fresh; Klonmyre had a big mouth, but this time she merely leaned back with her fingers rubbing her chin. She clearly felt no pressing need to piss off the new captain. But the poor man obviously wasn't going to go on until someone filled the conversational void. So Dr January decided it was his turn. \"A pun,\" he mused.\n\n\"Yes, but like all puns, it contains a grain of truth: we are rising, ladies and gentlemen. And we are also powerful. So, there it is. 'Pulver: Rising.'\" Pixy wondered whether admirals taught this kind of thing at the pre-command course. He slapped a decisive hand on the conference table. \"It's just a part of a much more comprehensive morale strategy, of course, which I'll be putting out to you before we head out. But meanwhile, make sure you spread the word to your sections.\"\n\nKlonmyre couldn't help herself. \"Sir, should we also say the motto at mealtimes? And with the morning announcements?\" She blinked those big brown eyes of hers, the picture of innocence. \"Maybe also when we break up meetings?\"\n\nReye had no idea she was taking the piss. \"Whenever it's appropriate, Ms Klonmer.\"\n\n\"Klonmyre, sir.\" She tossed her red, wispy hair back over her shoulder, every part of her uniform spotted with engine grease. \"It's Klonmyre.\" She pointedly ignored Pixy's murderous glare.\n\n\"Sure. Ms Klonmyre. Yes, absolutely you should feel free to use the motto wherever appropriate.\" He glanced down at his tabslate. \"So I'll be meeting with all the department heads individually later on, to go over the repair status, but other than that?\" He swept the room, his eyes like a pair of guns. \"I think we're done.\"\n\nChief della Sera shot to his feet. \"Attention!\" he called, and the shuffle of the chairs moving back dominated the room as the officers all rose.\n\n\"As you were,\" Reye nodded curtly, and that's when Klonmyre went batshit crazy.\n\n\"Pulver! Rising!\" she called at the top of her voice, not even bothering to stop grinning, and the captain paused on his way out the door.\n\n\"Yes,\" he replied vaguely. \"Well, carry on.\"\n\nAs soon as the hatch snicked shut behind him, Amisuul was sticking his tongue out at Klonmyre. \"Kiss-ass.\"\n\n\"Everyone out.\" Pixy's voice was low and even. \"Get to work.\" She waited until everyone started packing up before she sat back down, looking deceptively relaxed. \"Not you, Sublieutenant Klonmyre.\"\n\n\"Ooh,\" whistled diBiase. \"Someone's in trouble...\"\n\n\"And fuck you too,\" Klonmyre replied sweetly.\n\n\"Knock it off.\" Pixy watched as everyone shuffled out. Well, she told herself, Reye was right about one thing: morale sucked. The Pulver was hardly the most elite ship in the Fleet at the best of times; now? In for repairs, constant work, no liberty, and without enough officers? Ah, but Pixy reminded herself, everything would be fine now.\n\nAfter all, they had a motto.\n\nThe room emptied at last, to the ever present repair-basin smells of lube oil and overheated metal, and Klonmyre slouched into a chair as soon as the hatch shut. \"Shit. A motto?\" Pixy merely stared, hard, until Klonmyre got the message. The little engineer flushed scarlet, then jumped out of the chair. \"Sorry, ma'am.\"\n\nPixy stayed silent until Klonmyre finally glanced back at her, uneasy. When she spoke, she used that ice-bitch tone nobody liked. \"He's new, Ms Klonmyre. But he's been in Fleet since before you knew how to read.\" She waited to let it sink in. \"Comprehend?\"\n\n\"Yes ma'am.\" Klonmyre stood cadet-straight, her posture excellent, looking amazing even with the engine-room filth caked onto her.\n\n\"Good.\" Pixy reached for her tablet. \"So stop being an asshole.\"\n\n\"Yes ma'am.\" She waited, transparently expecting more, but Pixy just scowled up at her until she licked her lips and finished up. \"Was there anything else, ma'am.\"\n\n\"No.\" Pixy debated, then made up her mind. \"Did I put you on duty tonight? Bridge watch?\"\n\n\"Yes, ma'am. But it's on call, you know, us being in the Basin and all.\" The brown eyes flickered down, meeting Pixy's. \"So as long as there aren't any emergencies, well, I should be able to just stay in my quarters.\" She was smiling faintly now; they hadn't shared a bed in almost a week. \"That is, somebody's quarters.\"\n\nPixy allowed herself a tiny sigh. \"I'm sorry, Ms Klonmyre. Being the First Officer's bedwarmer probably isn't quite as nice as being the Second Officer's.\"\n\nShe shrugged. \"I take what I can get, ma'am.\" The smile was definitely wider now. \"I'm not complaining any more than you are.\" Her eyes were bold now as they stared straight into Pixy's; Klonmyre had been a different person since the Battle.\n\nA different bedmate, anyway.\n\n\"Oh, but I'm complaining.\" Pixy stood up, her back protesting just slightly; she'd need Dr January to give it another tweak. \"I miss you,\" she shrugged. \"You know how I like my routines. This first-officer shit is fine, but not when I'm also the Second.\" She started for the hatch, and Klonmyre relaxed.\n\n\"Any word on a new First, ma'am?\"\n\n\"Nope.\" Pixy shrugged. She'd asked the very same question last time Reye had sent her to the Yard Office; shit, was that only yesterday? Everything ran together. \"They still say we'll get one before we move out, but that's assuming everything goes on schedule. You know Fleet.\" They stepped out into the corridor, nimbly avoiding five passing sailors. \"They'll tell us we've got another month in the Basin, and then we'll get orders to ship out immediately.\"\n\nKlonmyre gnawed thoughtfully at her lower lip, then shook her head. \"Yeah. Well, did you want to know the update on the Mk 14 generators? Or should I just send it to you?\"\n\n\"Shit, Klonmyre. You know I don't know anything about Mk 14 generators. Do they work? Or don't they?\"\n\nKlonmyre hesitated, as expected; she was an engineer, so she often failed to answer those kinds of questions. \"Well, ma'am, it's complicated.\"\n\n\"Fuck that. No it isn't, Klonmyre. You figure out that answer, and then you give me your fucking update. Comprehend?\" Sailors had started to glance over; for the millionth time, Pixy reminded herself it wasn't good to yell at officers in public spaces. But, also for the millionth time, she couldn't stop herself. \"You're the engineering officer; you're the one who knows the goddamn generators. If you need me to order parts, tell me to order fucking parts. Otherwise, that sucker needs to be mission-capable by when?\"\n\n\"0400 tomorrow, ma'am,\" Klonmyre sighed.\n\n\"Yes. So, do you need parts?\"\n\n\"No, ma'am.\"\n\n\"Ah. So, your update is that you'll be good to go by 0400 tomorrow. See how that works, Ms Klonmyre? Simple, right?\"\n\n\"Simple. Yes, ma'am.\" She'd adopted that wounded, robotic voice she always used when being scalped, the one they taught at the Academy. \"Permission to carry on, ma'am?\"",
        "The only possible answer was a scowl. Goddamn her! She was making Pixy feel guilty, with that meek little hurt-feeling rabbit voice. Little bitch was turning into quite the manipulator. Pixy glared at her while the corridor cleared slightly, then rapped out her orders. \"My quarters tonight. Fuck this shit. You put your best chief on that generator and fucking delegate, Ms Klonmyre, and then you come see me. Comprehend?\"\n\nKlonmyre brightened slightly, looking more than slightly crafty. Little fucker. \"Aye aye, ma'am.\"\n\n\"Fine. Then carry on, Lieutenant.\"\n\n\"Ma'am.\" The little engineer threw up a parade-ground salute, accompanied by Captain Reye's new motto. \"Pulver!\"\n\nJesus H Buddha. Hoping none of the drifting crewmen saw either of them roll their eyes, Pixy returned the salute with quite a bit less polish. \"Yeah. Rising.\"\n\n* * *\n\n\"Wait, what?\"\n\n\"Yeah. A motto.\" Pixy shrugged, her people staring at her as though she had three eyes. She paused, deciding just how insubordinate she should be in front of her department, and then reminded herself these were veterans, and logistics people to boot. They'd see right through this nonsense. \"Look, he's new. He'll make some mistakes. Suck it up until he figures it out; he's not bad.\"\n\n\"Yet,\" Ana muttered ominously. \"Ma'am.\"\n\n\"He comes from Transport Command, I hear,\" Joop Koster put in mildly. \"He'll be all right.\"\n\n\"Sure. So, a motto. Meanwhile...\" Pixy paused again, this time trying to figure out how to avoid pissing everyone off. Ana and Chief Koster already knew; she'd have told the other warrant officer, Kluwer, but the man was brand-new since the Battle and she wasn't sure if she could trust him yet. The other two, the juniors, usually just worked as drug-runners and knew to keep their mouths shut; she just hadn't gotten around to breaking the news. \"Sublieutenant Amisuul will be taking over the shop, starting tomorrow. I'm just too busy fitting out the ship.\"\n\n\"Fuck.\" That was McChang, the most junior guy in the shop, busted four times for various reasons. \"He's a Tygon.\"\n\n\"I'm a Tygon too, you planetist piece of shit,\" Ana snarled, but McChang was not the kind of sailor to back down.\n\n\"Obviously. The green fucking scales are a big tip-off, Ana,\" McChang jeered.\n\n\"Fuck you.\" Ana was grinning, but only so that her fangs would show. Chief and Denman were already whispering quietly to each other, figuring out odds for the inevitable brawl.\n\n\"Knock it off,\" Pixy snapped sharply. \"Shut your mouths. Yes, asshole,\" she spat, turning to McChang, \"he's a Tygon. But you shouldn't be worried about that. You should be worried that he's incompetent. At supply, anyway; y'all will need to help him, so that he stays out of jail.\" She made firm eye contact with everyone, in turn. \"He's fine, but supply is not his thing. If I had another choice, I'd do it. But I don't, so suck it up and drive on.\"\n\n\"Dry,\" Chief muttered. \"No lube.\"\n\n\"Exactly.\" Pixy shoved thick dark hair behind her ears. \"I'm sending him down to sign for the books. You all need to work with him, at least until we get another lieutenant. I'll still be doing all the drug stuff, but then he'll still be pimping the whores too. So we officers are working just as hard as you people. I want no complaining and no shit-talking.\" She ended with a withering glance at Koster. \"Right, Chief?\"\n\n\"Right, ma'am.\" Koster shrugged. \"You won't hear any problems.\"\n\n\"See that I don't.\" Goddamn. She'd been right to get Klonmyre over tonight. She was starting to lose it.\n\n* * *\n\nSimple pleasures: a shower, a few quiet hours with a book and some butter tea, with the whole universe spread out past the viewport (marred, alas, by a decrepit welder drone limping past on its way to yet another damaged warship), some shortbread... the effect was everything that Pixy ever needed, enough to get her on with another stressful day in the Basin.\n\nOf course, she never got any of that.\n\nInstead, it was all-hours meetings, constant interruptions with the eleven thousand things needing the lofty attention of a temporary First Officer, and a succession of barely-clean uniforms with no proper attention paid to the body within. So, at the point where Pixy at last finished up her thick slice of pork-cheese soup and a chunk of dry matzo, the clock was inching past 0100 and she was faced with Klonmyre's generator inspection in just three hours. The engineer herself was on the bridge, at anchor watch with a sleepy warrant officer named Filbric, reading a set of specs.\n\n\"Wake up, Filbric,\" Pixy snapped as she came through the hatch; the Tygon flipped upright in his seat, glancing fearfully around. Klonmyre stirred in the captain's seat.\n\n\"I told him he could relax, ma'am, while I watched the mid-beam.\" The ship slept around them, creaking and groaning fitfully with the ever-present noise of the reactor fuel being recirculated.\n\n\"I know. I'm just taking the piss.\" Pixy yawned and glanced at the plot-repeater, the main one by the forward sights. \"Carry on, Filbric. I'll get Ms Klonmyre back in a little while; I need a nap. Call her in an emergency.\"\n\n\"Aye aye, ma'am.\" It was well known that Klonmyre was Lieutenant Pfeiffer's bedwarmer. The Tygon got to his feet and saluted \"Pulver!\"\n\nOh, Christ, Pixy thought to herself. Are we actually doing this? \"Um. Rising.\" She returned the salute palm-outward, and then Klonmyre was shutting down her tablet and getting nimbly to her feet. The hatch had barely fastened itself when Pixy arched an eyebrow at the engineer. \"Though, to be honest, I'm hoping there aren't any generator issues at all.\" Her eyes narrowed. \"Are there?\"\n\nKlonmyre leaned back against the wall of the transport tube. \"Relax, ma'am. I delegated.\" She yawned. \"Chief's on it. Want to hang out for a few hours?\"\n\n\"We decided on my quarters, I think.\" Pixy disliked being anywhere near Klonmyre's junior officers' quarters, in a loathsome part of the ship that smelled like a locker room. Klonmyre grinned.\n\n\"We always do.\" The tube thumped to a stop at a corridor much wider and cleaner than most of the rest of the ship. \"I always love coming up here. It's a good incentive to get fucking promoted.\"\n\nPixy gave a snorting laugh. \"Eleven years in Fleet, Jannelle, and this is as far as I've gotten.\" Her quarters checked their identity and then let them silently in. \"After you, Sublieutenant Klonmyre.\"\n\n\"Why thank you, Acting First Officer Pfeiffer.\" They normally showered first, and the hum of the heating element rattled through the walls as the quarters started warming the water. Klonmyre was already naked, reaching blindly for the towel she kept here, when she spun around to find Pixy still standing by the door. \"The fuck? You don't want a shower?\"\n\n\"I wasn't teasing, Jannelle.\" Pixy felt like she was about to collapse. \"I need a nap.\"\n\n\"Ah.\" Klonmyre cocked her hip and leaned against the doorway to the latrine, eyeing Pixy critically. \"Not with that filthy-ass uniform on, though.\"\n\nPixy smiled despite herself; she hadn't been doing much of that lately. Her smile muscles ached with atrophy. \"No, probably not.\" Klonmyre looked amazing naked, Pixy reminded herself; a perfect bedwarmer, pliable and compact, even smaller than Pixy, and soft only where necessary. She'd been a great choice. \"Getting hairy again.\"\n\nKlonmyre shrugged. \"You haven't been available to shave for lately,\" she pointed out, but there was no accusation: everyone knew how busy everyone was. Klonmyre hung up her towel and started to move back toward the bed. \"I fucked one of Amisuul's guys the other night,\" she admitted, \"and they're not particular about hair. Just money.\"\n\n\"Shit.\" Poor thing, she must have been unbearably horny, to pay for sex with an enlisted man. Pixy hadn't slummed that way in years. \"Well, if you're going to fuck a sailor, might as well do it at anchor.\" Prices skyrocketed as soon as a ship headed for space. \"He's getting a Korlene in next week, with the new replacements.\"\n\n\"No shit?\" Klonmyre shook out her orange hair as she collapsed onto the bunk. \"Oof. Well, that ought to make him a few extra shekels. People love fucking Korlenes.\"\n\n\"Been awhile, since we had one aboard.\" Pixy's clothes were peeling themselves off now, Klonmyre moving over to the far side and getting ready to flip over. Pixy normally preferred to be the spoon. \"Shit,\" she groaned, sitting on the edge of the mattress. The funk rose off her in waves, but she needed sleep, needed it like she seldom had. \"I'm tired, Jannelle,\" she muttered. \"Really tired.\"\n\nShe felt little fingers, graceful on her back. \"Lie down, Pix.\" The voice was low, husky. The fingers drifted toward the scars, down low by her ass. \"How's your back?\" Pixy could hear Klonmyre trying to keep concern out of her voice; good girl.\n\n\"Hurts.\" The drugs helped, but not enough, and she wasn't about to become an addict. Dr January had said it was a difficult wound; even cloning was unlikely to help. Pixy's eyes were closing even as she slumped over onto the sheets, Klonmyre throwing the blanket over top. Pixy gave up; the younger woman could be the spoon tonight, and Pixy felt comfort and gratitude surround her along with Klonmyre's bare limbs. \"Sometimes, anyway; usually, I don't even notice.\"\n\nShe could hear the change in Klonmyre's breathing, the engineer wondering whether she should bring it up again. She did. \"If you need to talk... you know, about the Battle...\"\n\nPixy elbowed her hard in the ribs, wasting no time at all. \"Shut up. I told you, Jannelle, I need a nap.\" The Battle. Fucking ridiculous; she didn't need to talk about it. The back wound was there. The scars were enough of a reminder; she didn't need more words. She'd lived, Okonfwe and nineteen others had died, and that's all there was to it. War. \"Just hold me, you nosy little bitch.\"\n\n\"Aye aye, ma'am,\" the words soft like a verbal caress, one hand light and low on Pixy's belly, stroking the hard muscles there, and they hurtled toward sleep with no other thoughts.\n\n* * *\n\nPixy watched silently as the weld grew, spreading over the surface of the ship like a bright silver fungus. She sighed, standing with Reye at the porthole of the shuttle. \"That's it, sir,\" she sighed. She felt like she should be toasting, with champagne or at least whisky. \"That's the last of the torpedo damage.\"\n\n\"Excellent.\" The captain was rubbing his hands, running a critical eye over the skin of the ship. \"The carbon scoring is still pretty bad, but we can have the crew EVA that while underway. Electrocoating, too.\"\n\n\"Electrocoat. Yeah. I was going to set that up with the Yard Office, sir. I was hoping they could do that while we're here.\" She frowned and glanced sideways to catch his reaction. \"I don't like making our own people work with that stuff, sir.\"\n\nHe scowled, as if he didn't want to hear it. \"It's toxic, yes, and I see your point. But we can't electrocoat until we deal with the scoring, and we're, what, fourth in line for that?\"\n\n\"Second actually, sir.\"\n\n\"Even so. If we let the Yard electrocoat, that's at least another week, maybe two.\" He took a deep breath, glancing sideways to make sure nobody was listening. \"The admiral's on my ass to get us out of here, Lieutenant.\"\n\nPixy felt like ripping his balls off. What did he think the rest of them were doing, sitting around eating bon-bons? Just that afternoon she'd had a very unsatisfactory interview with the knock-kneed old Yard Captain, aimed at moving them up from third in line to first; his chief of staff had demanded anal for that, but she'd only been willing to give up her pussy. It hadn't even been any good, bending over in the Yard Office vestibule while the Captain cackled in the next room. In the end, he'd issued the orders to leapfrog the line two spots, but only after the chief of staff had vouched for how well she'd done.\n\nWell, that was Fleet for you. Dry, no lube. Reye was frowning. \"We were fourth in line just this morning, Ms Pfeiffer.\"\n\nPixy made a face. \"You don't want to know.\" She hesitated. \"Sir, you were never a supply officer, were you?\"\n\nHe shrugged. \"Nah. I was an engineer, then I came up through Gunnery.\" He looked over curiously. \"Why?\"\n\n\"No reason. The culture of supply and maintenance... well, it's just different.\" She nodded while the autofinishers went back over the weld; whoever was operating that machine was doing a good job. \"I'm not complaining, sir. I just would rather our people not have to electrocoat.\"\n\nHe drew an unhappy breath, but nodded. \"No promises, Lieutenant. But as long as we're on the subject, I do want to say I appreciate your hard work. I know how tough it is to do all this repair without a First.\"\n\n\"It's a pain in the ass, sir,\" she threw in bluntly.\n\n\"But I'm told we can expect to get officer replacements any day now. That includes a new First, and someone to replace the old commo officer... what was her name?\"\n\n\"Amber Okonfwe, sir.\"\n\n\"Right. Okafor. We'll get a new officer in soon, but if it's a junior lieutenant or even a Sub, I might want to promote one of our existing officers. Comms is critically important. I need someone there who knows the ship.\" Pixy sighed; he transparently wanted her to make the decision.\n\nJust more work to do.\n\n\"I'll handle it, sir.\"\n\n\"That's the spirit!\" Reye slapped her on the shoulder, a move Pixy found entirely unnecessary. \"Rising!\"\n\n\"Oh, and sir?\" Okonfwe's memory had got her thinking. \"Um, a couple of us were talking, after the Battle, about getting more first-aid training? Cranial salvage?\" She flushed. \"It... would have helped, sir. I think Doc January can do the training; I'd just need to schedule it.\"\n\nHe looked gravely at her, once more on the outside, the captain who wasn't there to go into battle. \"Of course.\"\n\n* * *\n\n\"So, yeah. Now you're the commo officer.\" Pixy looked again at her minislate, shaking her head. \"The new junior Fifth will be here later today, which means you're not the Junior Officer anymore, either.\"\n\n\"Motherfucking great!\" There was nothing worse than being Junior Officer of one of the Fleet's combat ships, other than being JO of a service ship like the Pulver. \"Being JO? It sucks, ma'am.\"\n\n\"Gee,\" Pixy replied with a flat glare, \"it's almost like I've never done it before myself. On two separate ships.\" She let that sink in, and diBiase nodded.\n\n\"Sorry, ma'am. I'm just excited to finally have someone I can boss around.\" Pixy blinked. Well, at lease diBiase was honest.\n\n\"Start when he arrives. Or, fuck, she? I don't know.\" The record on her minislate didn't say. \"Name's Marso? From Terseus?\" She frowned. \"Is that a guy's name, or a girl's name out there?\"\n\n\"Beats the fucking shit out of me, ma'am.\"\n\n\"I know our former captain had discussions with you about your mouth, Mr diBiase,\" she snapped back coldly. \"Captain Crick was not a perfect officer, but he was right about some things. So I'll ask you to moderate your language, especially around the new Fifth. Our goal is to welcome him.\"\n\n\"Or her.\"\n\n\"Or her,\" Pixy agreed. \"So be nice. Get your orientation folder, study it, and make copies for the new guy. Make sure your qualification checklists are up to speed, and that all your Fifth Officer bullshit is signed off and ready to turn over to the new officer.\"\n\n\"Yes ma'am.\"\n\n\"We've been understaffed around her for long enough. He or she will need to jump in with both feet and three hands to get caught up. Whenever this Marso person arrives, you give it a tour and then find me and introduce me. Comprehend?\"\n\n\"Yes ma'am.\"\n\nShe hated new officers, as a general rule. It was a necessity in the Fleet, even in the relatively stable Service ships, but it always meant more work for everybody. Then there was the delicate balance of the wardroom: officers living and eating together soon discovered each other's quirks and foibles and learned to adapt to them. A new guy meant more quirks to excuse. Especially three new officers one on top of the other. And one of them a brand-new captain.\n\nThe file said that Junior Lieutenant Marso Van Kleck had a degree in something called subspace systems engineering and had come out of the big officer candidates' school on Andromeda Prime. None of that was unusual, but Van Kleck was slated in as an engineering-branch officer, which usually meant the engine room was where they needed to serve.\n\nOf course, the Pulver's engine room already had an officer, Sublieutenant Janelle Klonmyre.\n\nYou could always take engineers and make them do anchor watches or assist on bridge watches, or you could train them up to do some of the other normal line officers' duties. But they couldn't steer the ship and they couldn't stand watches underway, so that made life difficult on the person whose job it was to schedule all the watches. That person, of course, was the First Officer.\n\nPixy tossed the file aside. Fuck it. Pulver was very happy with her current engineering officer, thanks, so the mysterious Mr or Ms Van Kleck would just have to deal with a line officer billet. She sat back and stared out the viewport; hell, this was the one good thing about acting as First: a better office. She thought about it a moment more, then frowned as it dawned on her what a pain it must be working in the lightless hole of the Pulver's engine room.\n\nShe powered up her intertube. \"Engineering,\" she told it curtly, enduring the series of clicks as the old tube made the connection.\n\n\"Engineering.\"\n\n\"Give me Lieutenant Klonmyre on vox.\" Vox took a lot more power, but she wanted the added privacy. Besides, this was a repair basin; there was spare power everywhere. She waited, absently scratching her signature on a food inventory before the vox box crackled.\n\n\"Klonmyre here.\"\n\n\"Klonmyre. Hi. It's Pfeiffer. Look, I've got a weird question for you. Ever get sick of the engine room?\"\n\nA pause.\n\n\"Why are you asking, ma'am?\" She sounded guarded, a little concerned. Pixy sighed; she'd known, in the back of her mind, that this would be a mistake. Now Klonmyre would be freaking out about her job performance; she tended to be a worrier.\n\n\"No, it's just that... well, do you want to be Fifth Officer?\"\n\nThe response was immediate. \"Hell fuck no, ma'am.\"\n\n\"Good enough, Klonmyre. Carry on.\" She cut the connection right away, then frowned at herself. She hated it when she did her job badly, and she felt obscurely like she'd just let Klonmyre down.\n\nWhatever. This Van Kleck person would be Fifth, then. And that was the point: nobody wanted to be Fifth Officer. She picked up her tablet and went back to work.\n\n* * *\n\nThe knock on the hatch was abrupt and very unwelcome. She dragged her eyes from a pile of clearance forms to see Elon diBiase standing there looking subdued. \"Yeah?\"\n\n\"Uh, the new officer is here, ma'am.\"\n\n\"Oh. Cool. Where?\"\n\n\"Right here.\" He stepped aside and gestured out into the hallway, and in walked Marso Van Kleck. Pixy had a flash impression of wavy blue hair and that extreme tallness you saw on natives of low-gravity planets. They usually didn't enter the Fleet, where low ceilings were common, but whatever. Orange uniform; yup. An engineer. Van Kleck' salute was crisp and a little too polished.\n\n\"Junior Lieutenant Marso Van Kleck, ma'am. Pulver!\"\n\nOh dear. Pixy returned the salute without getting up. \"Rising, yes. Hi. I'm Pixy Pfeiffer. Sit down, Van Kleck.\"\n\n\"Ma'am.\" There was a tension in the new officer, something more than the usual stress of joining a new ship. Off to the side, diBiase leaned against the conference table and watched curiously. \"May I say, ma'am, it's an honor to serve with you. Your actions, ma'am, were an inspiration to the entire Service branch.\"\n\nPixy glared balefully across her desk, studying the new face. The kid seemed sincere, which just embarrassed her more. She frowned. \"Look, Lieutenant, I'll come right out and ask. Are you a man, or a woman? Because your file doesn't say, and I can never tell with you low-grav types.\"",
        "Van Kleck blinked. \"I'm a woman, ma'am. It's not in my file?\"\n\nPixy brandished the tablet. \"Nope, but whatever. Welcome to the ship, Ms Van Kleck.\"\n\n\"Lieutenant Van Kleck is a mutant, ma'am,\" diBiase snickered helpfully.\n\nPixy blinked. \"Yeah? What kind?\"\n\n\"I have a fifth lobe in my brain, ma'am.\"\n\n\"Huh.\" She'd met a few fivers before, but she'd never served with one. The joke was obvious. \"So, if I ask whether you've got half a brain, the answer is no?\" She leaned back and laughed, then shut it off when Van Kleck just sat there staring. \"Because, you know, odd number? Not evenly divisible by two?\" Pixy glanced at diBiase, but he was an idiot; she'd get no help there. The silence galled. \"Um. What's it do? The extra lobe?\"\n\nThe engineer shrugged. \"I've got extended math reasoning, and I do test positive for slight mind-reading sensitivity. But there's an emotional and empathetic deficit.\" She sounded as if she was discussing the solar wind.\n\n\"Sounds that way,\" she shot back right away. \"You're not, by any chance, from Terseus IIc, are you?\" Pixy had had a weird obsession with that planet for years. People called it The Gas Giant, but she'd never figured out why.\n\n\"No, ma'am. IIb.\"\n\n\"Ah.\" Pixy licked her lips. \"Is this your first real duty station?\"\n\n\"Yes, ma'am, it is. I've only ever been in training before.\"\n\n\"Ah.\" Pixy leaned forward and folded her hands. \"Sailors are simple creatures, Van Kleck. They're not assholes, but they're not always comfortable with uncertainty; they want to know where they stand.\" Van Kleck just stared back complacently. \"Might want to stay quiet about the mutation.\"\n\nVan Kleck paused. \"Although I'm not sure I accept the premise that secrecy is necessary, I'll bow to your greater experience and knowledge of the culture of the ship, ma'am.\"\n\nPixy had stopped listening; there was no way a brand-new junior lieutenant would argue with the First Officer, so her response was immaterial. \"Fine. So, you're an engineer, but we've already got one of those. I'm making you the acting Fifth Officer, in charge of safety and fire control. And, of course, you'll stand a watch, like if you were a line officer.\"\n\nVan Kleck blinked. \"But, ma'am, I'm not a line officer.\"\n\n\"Yes.\" Pixy and diBiase both shrugged; they'd been in the Fleet long enough to understand that these kinds of paradoxes were not uncommon. \"Weird, huh? So, yeah, safety and fire control. It's mostly plumbing; should be simple for an engineer. You're relieving Mr diBiase here; he'll run you through the duties and responsibilities.\"\n\n\"You'll have to stand a watch too,\" diBiase pointed out smugly.\n\n\"Oh, absolutely.\" Pixy had taken that for granted. \"That's a big one. We've only got three watchstanders available right now, and Klonmyre won't be doing any once we get underway. So, yeah. Can you mind a helm?\"\n\n\"No ma'am.\" The response was precise and crisp.\n\nPixy stared at Van Kleck levelly. \"Do you have common sense and functional hands?\"\n\nVan Kleck frowned. \"I like to think so, ma'am.\"\n\n\"Fine. Then you can be trained to mind a helm. Mr diBiase will do it.\"\n\n\"I will?\" DiBiase was not amused.\n\n\"You will. Make sure she can navigate, too; the basics are good enough.\" Pixy sighed and stared out at the stars. \"Oh, and the gambling ring. Fifth Officer is always responsible for that.\" She trailed off as she caught Van Kleck' frown. \"What?\"\n\nThe engineer blinked. \"Gambling is against regulations, ma'am.\"\n\nPixy shrugged. \"So are lots of things. But you're responsible for running the onboard gambling anyway, Ms Van Kleck.\" She glanced up at diBiase, the two of them shaking their heads; poor na\u00efve little waif!\n\nVan Kleck shot to her feet, her blue hair brushing the ceiling. \"I'm afraid I have to object, ma'am.\" She was very pale, Pixy noted, and extremely uptight; this one would have trouble finding someone who wanted her as a bedwarmer, despite the possibilities offered by her mutation. Pixy stared a moment, then shook her head. No way was she going to waste time on this kind of bullshit.\n\n\"Fine. Mr diBiase? Stay on the gaming.\"\n\n\"Aw, fuck, ma'am! It's so much work!\" Van Kleck glanced over, her eyes wide at the response, but Pixy had been expecting it.\n\n\"Yes. So now I'll talk the captain into raising your cut to 2.5%, instead of 2%. Will that make up for it?\"\n\nDiBiase was still pissed and an idiot, but he could count. \"3%,\" he countered.\n\n\"2.75%. Done.\" Pixy made a note on her tablet. \"I doubt I'll have trouble with Captain Reye. Tell your bookies; I'm sure they'll pass on the risk to the crew. People will be pissed, but not as pissed as they'll be if we yank the whole system.\"\n\n\"Agreed, ma'am.\"\n\nPixy smiled grimly. \"I know.\" She turned back to Van Kleck. \"So, yeah. Welcome aboard, Ms Van Kleck. You can meet the captain at dinner.\"\n\n* * *\n\nThe closing of that final torpedo scar, plus the slowly meandering end of the interior upgrades, meant the Pulver's time in the Basin was winding down, the slew of administrative details competing for Pixy's time at long last ebbing. Even Amisuul seemed to be coming around; he hadn't needed her help at all when swapping fifty minifuses and 20 mg of Crystal for a gross of heat shields and a blowjob. \"Easy money, Pixy,\" he bubbled, returning with the ebullience of a fellow who's done a difficult job well. \"Went fine.\" She looked both ways at the docking bay to make sure no sailors were watching, then kneed him swiftly between the legs. \"The fuck?\"\n\n\"I've told you before, Mr Amisuul, never to use my first name,\" she hissed. \"We're not buddies.\" She glanced down at his crotch. \"Tygons don't have balls, anyway. That didn't hurt.\"\n\n\"Still.\" He adjusted himself. \"It's disrespectful, ma'am.\"\n\n\"I've never made any secret of my disrespect for you, Mr Amisuul. So, um, the Crystal moved?\"\n\n\"No problem, like I said.\" Pixy had been careful to keep control of the onboard drug trade when she bullied Amisuul toward her other supply duties. This afternoon, before giving the Crystal to the Tygon, she and Chief Koster had carefully cut the drug by a whopping 25%. It was a risk, but she'd dealt with the other ship before and its supply officer had seemed like a moron.\n\nPlus, if anything did go south... well, Amisuul would be there to take the fall. Naturally, she'd told the Tygon she'd only cut the Crystal by 5%. \"How was the blowjob?\"\n\n\"Ehh. They've been better.\" Spoiled, that's what he was; it was always like this during repairs. The crew got plenty of unfamiliar sex and a wide variety of the kinds of contraband that always floated around these kinds of places, and they always took it for granted until they were around three or four light-years away. By then, any little snort of Bump or Crystal, any handjob from any willing new crewmember, would be a priceless commodity.\n\nPfeiffer with the drugs, Amisuul with the whores, and diBiase with the gambling: that was the holy trinity that had kept Pulver from anarchy under Captain Crick. And the three of them had already met to make sure the profits would continue to flow under Captain Reye.\n\nShe gave Amisuul a sympathetic pat on the shoulder, much against her better judgement, but she wasn't an idiot; she did understand how hard this was for him. Some people were cut out for supply, other people weren't; it took a sense of flexible ethics that Amisuul, despite his lasciviousness and overall sense of amorality, did not have. He was not cunning, not guileful. \"Cheer up,\" she advised him, installing a fake smile on her own face. \"We'll have a First soon, and then I'll be back to work in the supply shop. You can go back to lounging with your whores and... what else do you do around here? I can't remember.\"\n\n\"Cute, ma'am.\" He sighed. \"Excuse me. I need to go brush my teeth,\" he muttered.\n\n\"What?\"\n\n\"You know.\" He waved vaguely at his mouth. \"You might enjoy the taste of dick, ma'am, but I do not.\"\n\nShe stopped him in mid-stride, hauling him around to face her. \"You're serious?\" Her purple eyes blazed. \"Motherfucker, you were supposed to receive the blowjob, not give the blowjob!\"\n\n\"What's that?\"\n\n\"I told you to set it up with you getting head, you stupid fucking defective alien twit! You gave?\" She was reeling, the story would be all over the basin by now, that any supply officer could head on over to those imbeciles on the Pulver and fleece them comprehensively. \"Oral, plus twenty of Crystal? You're joking.\"\n\n\"I...\" He swallowed, and not for the first time that day. \"I thought...\"\n\n\"It was a gross of heat shields, not a gross of fucking human sex slaves!\" She smacked him across his face, the fang hurting her palm, but she was far too enraged to notice. \"Thank god we cut the Crystal by a quarter,\" she told him viciously.\n\nHe went bright red. \"What's that?\"\n\n\"Yeah, fuckwit. Only 75% of that Crystal was actual Crystal. Thank god, too. And Buddha and even fucking Elon Musk.\" She was doing the math in her head, engrossed, not even noticing his growing rage.\n\n\"But, if they'd found out...\" He glared, really mad now. \"They'd have killed me.\"\n\nPixy matched him glare for glare. \"Look at it from my perspective,\" she replied sweetly. \"Recall my assessment of your duty performance, Mr Amisuul. I begin to think that having you eliminated in a drug deal for some bad stim would actually be a net benefit to this vessel. See how that logic works?\"\n\nHe glowered, but in fairness there wasn't much else he could do. Her pat on the shoulder this time was far less companionable. \"All's well that ends well, Sublieutenant Amisuul. Thanks for the heat shields,\" she tossed over her shoulder as she strode off.\n\n* * *\n\nA docking alarm jolted Pixy out of a Klonmyreless nap, the intertube shouting at her. \"Incoming shuttle, Ms Pfeiffer.\"\n\n\"Unscheduled, too,\" she yawned; it was her job to know when shuttles were due. The plot repeater showed her an incoming contact closing at around five meters per second. The tube buzzed again.\n\n\"Should I wake the skipper, ma'am?\"\n\n\"No.\" It was 0236. He struck her as a man who liked his sleep. \"I'll deal with it. Hold it up at the Blue Point and don't let it approach until I call you from the docking ring.\"\n\nA pause while Pixy maneuvered herself to the edge of the bunk, sighing; she was not always a sprightly waker-upper. She was reaching for her back meds when the intertube spoke again. \"They want to know why we want them to hold.\"\n\n\"Really.\" Must be important. \"Yeah. Try telling them we want to check their gravity calibration, that we're running pressure tests. If that doesn't work, fuck, just tell them I'm not dressed yet.\" She brooded a moment. \"And yes, wake the captain.\"\n\nThe kid who emerged from the docking ring when Pixy came shambling up was the kind of senior Lieutenant who had been promoted far, far before his time, probably because he'd been born to the correct people. His excellently cut uniform looked like it had cost a lot. He glanced around, too well-bred to have ever been aboard a ship this filthy, but also too well-bred to comment about it. His eyes crinkled into a smile when he caught sight of Pixy. \"You're not Captain Reye.\"\n\n\"Nope.\" She was cranky, and rich people always made her obscurely rebellious. \"He's on his way; we've been very busy. What's going on?\" She came to his mid-chest, the kid a little too tall for the docking ring. She glanced through and saw the kind of well-appointed shuttle that only admirals got. \"And, more to the point, who the fuck are you?\"\n\nHis eyes widened. \"I'm not sure there's a reason for such language, Lieutenant...\"\n\n\"Pfeiffer. Don't like it? Leave. Or come with me; I'll take you to the wardroom, so that you can do... what, exactly?\"\n\n\"I'm on an errand for Admiral Tshorr herself,\" he announced, and when he drew himself instinctively to his full height his expensive hair style brushed the ceiling.\n\n\"Well well! Admiral Tshorr!\" Pixy pretended to be impressed. \"So, what? Does that mean I should tell my captain to suck your dick? Are you important?\" She smacked the wardroom hatch open, revealing the memorable sight of Amisuul, lounging in his underwear on one of the sofas. \"Hi, Rocky,\" she said smoothly; she detested using first names, but she sensed it might piss off Tshorr's guy. \"This is Admiral Tshorr's errand-boy. I see you're already dressed to receive him.\"\n\n\"Nice to meet you, sir.\" Amisuul showed no urge to move. \"I'm out of clean clothes. Do me a favor? Tell the Admiral we need new wash modules for our clothes. I'm sure he can pull some strings.\"\n\n\"Um. The Admiral is a woman.\" The man was looking around for a clean-ish place to sit.\n\n\"Disappear, Mr Amisuul,\" she said curtly. \"We need the room.\"\n\n\"Oh. Aye aye, ma'am.\" The Tygon got to his feet and stretched his scaly green body. \"Where should I go, ma'am?\"\n\n\"Go? Hell, I don't know. Somewhere else, Sublieutenant Amisuul.\" She was already pulling out the coding table; she'd seen the well-dressed lieutenant's briefcase, and admirals' aides did not visit GP ships in the middle of the local night in order to chat. She nodded at the man. \"We'll need the table?\"\n\n\"Yes.\" He was looking around, perched in a chair with the minimum possible portion of his ass on the cushion. \"Will the captain be long?\"\n\nThe pun was obvious. \"Not really. About five, six inches.\" Amisuul chuckled as he made his way through the hatch. \"No, I'm kidding. Who knows? See, the thing is,\" she went on with relish, desperate to put this asshole in his place, \"he's the captain. So, like, he's in charge of this ship. Meaning, he shows up when he fucking wants to.\" She jerked her head at the sideboard. \"Tea?\"\n\n\"Please.\"\n\n\"Get it yourself.\" Pixy was powering up the table when Reye came through the door in his workout clothes. The admiral's guy stared at him blankly. \"Good evening, Captain,\" Pixy said pleasantly, and the speed with which the lieutenant flew to his feet gratified her deeply. \"Captain Reye, this is Lieutenant... well, shit. He didn't bother introducing himself, sir. From Admiral Tshorr's staff.\"\n\n\"Lieutenant Klaus Pickles, sir.\" The salute was rigid.\n\n\"Rising,\" Reye said automatically as he returned it.\n\nPixy could not stop herself. \"Is that your real name?\" she blurted.\n\nHe paused long enough that she could ponder her own lack of manners. \"It is, Pfeiffer,\" he replied in a measured tone. \"I'm here to deliver the Admiral's orders regarding an upcoming operation.\"\n\n\"How 'upcoming' is this operation supposed to be?\" Pixy was on him like a terrier. \"We're still resupplying, our hull's not finished, we're short on officers and chiefs, and we haven't even started taking on ammo yet.\"\n\n\"Some of those deficiencies will obviously be fixed, posthaste,\" Pickles replied with a politician's smile. \"I believe most of those issues have been in your daily report, sir, and the Admiral is mindful of them. She'll do her best with the Yard Office to make good all your critical shortages. But, in the meantime...\" He rolled his chair to the coding table and inserted the briefcase. \"Your orders, sir.\" He backed discreetly away.\n\nEverything came flashing up with a bright blue glow and a sudden stench of ozone, the dust motes dancing in the air as if they'd been woken up: charts, tables, coordinates, text. Pixy had never seen anything like this before; she'd spent her whole career in Service. Service ships didn't get secret orders. \"What's all this, sir?\" she whispered, glancing around to make sure Pickles was out of earshot.\n\n\"Lordy,\" Reye replied, frowning. \"Do you people ever use this coding table?\" He was twiddling knobs, watching the static come and go. \"It's like nobody's ever touched it.\"\n\n\"No, sir, we touch it.\" She felt defensive. \"We usually put the dishes on it when we eat in here.\"\n\nReye frowned as he fine-tuned the focus. \"I'd heard you had a tendency to be acerbic.\"\n\n\"Oh.\" The paragraphs swam past her eyes. \"Isn't that a type of wit, sir? My parents always said I was witty.\"\n\nHe ignored her as he reached the fourth subparagraph, the mission statement, and that's when he twisted around to frown at Pickles. \"You're sure you found the right ship, Lieutenant?\"\n\nPickles' expression gave a clearer reply than his mouth; his eyes said, \"Decreasingly,\" but his mouth was more measured. \"I double-checked, sir. And Admiral Tshorr was most insistent.\"\n\n\"This is a troop-transport order!\" Pixy protested. \"Manifests? Personnel data? What the fuck?\"\n\nReye was more measured. \"Transporting troops is not what GP service vessels do, Mr Pickles.\" Pixy was too shocked to even giggle at the name.\n\nA pause. \"Not normally, sir, no. I believe the Admiral was attracted by the idea that transports, well, look like transports.\" He leaned in and pointed to some sort of paragraph beside a star table. \"See? The deception plan, there.\"\n\n\"Yes, I see the deception plan.\" Pixy was totally lost in streaming data, and leaned back shaking her head. \"Something to add, Ms Pfeiffer?\"\n\n\"Nope. Nothing at all, sir.\" She'd learned, long ago, that at times like this it was often best just to let someone fill her in at some future point.\n\n\"Good.\" Reye leaned on the table and turned back toward Pickles. \"Then I'll say it. This is completely fucked up, Lieutenant.\"\n\nPickles brows flew up, his face the picture of innocence. \"In what way should I advise the Admiral about your reaction, sir?\"\n\n\"We're to ship an infantry platoon to some distant planet, deliver them there to do... I don't know, it doesn't even say...\"\n\n\"It's classified, sir.\"\n\n\"And then wait randomly around in space to pick them up?\"\n\nAh. That's what she was looking at. Pixy blinked at the star chart. \"Where? There?\" She pointed instinctively, her finger punching straight through the eerie blue data. \"That's way, way out there.\"\n\nReye frowned at the chart. \"Huh.\"\n\n\"It's a moon of the actual Flasbard homeworld.\" Pickles sounded excited, like a man who has just produced a rabbit from a hat. \"Surprise!\"\n\nPixy and Reye looked at each other. \"Homeworld,\" she said, her voice a metallic sneer.\n\n\"Sure.\" Pickles was leaning back now, pleased by their reaction; his face wore the self-satisfied expression of a man who sends others into danger from a comfortable seat.\n\n\"I suppose,\" Reye went on quietly, \"that the Admiral is aware the Flasbards are unlikely to just... well, that there are probably many ways in which they can register their displeasure at our presence.\"\n\n\"I'm certain she's aware,\" Pickles soothed, nodding reasonably. \"Steps are being taken, captain.\" Reye waited for more, then sighed once he realized the man was probably lying.\n\n\"What's the mission?\"\n\nPickles studied his fingernails. \"Terraforming survey.\" The answer came far too fast to be true.\n\n\"Terraforming.\" Reye just stared. \"A survey.\"\n\n\"Sure. With a security team.\"\n\nPixy could not restrain herself. \"Why are we doing a terraforming survey of an enemy world? While the enemy is still in possession?\" Reye nodded.\n\nPickles grinned wolfishly. \"Never too soon to plan for the postwar environment,\" he said with a wink. \"No, actually it's a goodwill gesture sponsored by some sort of charity out of Andromeda. Or maybe Capricorn?\" He frowned as if it didn't matter, and of course it did not. \"Anyway.\"\n\nPixy was bristling. \"On an enemy homeworld.\"\n\nPickles nodded in satisfaction. \"See? That's why the security team is going along.\" He shrugged, as though the whole thing made sense.\n\nCaptain Reye stared at the man. \"Why us?\"\n\nPickles spread his hands broadly. \"Why, sir! Your ship is famous for its readiness and fighting ability.\"\n\n\"I wasn't here for that, and we lost twenty people in that fight,\" Reye said bluntly. He glanced at Pixy. \"They're all new. So what's the real reason?\"\n\nPickles smiled slightly. \"Your modesty becomes you, sir, but the Admiral is very respectful of your ship's fighting record. You're also the only mission-capable ship in the basin with a cargo bay large enough to handle their shuttle. And you, sir, have experience as a transport officer.\"",
        "\"You know who has even more experience than me, though?\" Reye was not amused. \"Captains of actual transport ships.\" Pixy was nodding; there was nothing she could disagree with here.\n\n\"Well, sir, that's true... but of course, there are no transports here at the moment. And, as I said, time is important.\"\n\n\"Yeah.\" Reye thought for a moment, then sighed. \"It always is.\"\n\n\"I've got reservations, sir, about the hull.\" Pixy saw her chance, glimmering in the distance, and went straight for it. \"That carbon scoring...\" Both men blinked at her. \"I think, Pickles, that Captain Reye and I would feel much more comfortable heading out with our scoring ablated, and with a fresh electrocoat.\"\n\n\"I can't make that happen,\" Pickles snapped instantly. He could see where this was going, and so could Reye.\n\n\"No,\" the captain mused, \"but Admiral Tshorr could. If she, you know, placed a call to the Yard Captain...\"\n\nPickles blinked. \"Sir, you guys need to be underway in thirty hours...\"\n\n\"Then she'd better call soon.\" Pixy's tone was implacable. \"I'd recommend vox.\"\n\n* * *\n\nShe ventured a short personal comment as they watched Pickles undock, tentatively, like he didn't fly much. \"You're pretty acerbic yourself, sir.\"\n\nReye smiled grimly at her. \"You know what all this means of course, Ms Pfeiffer.\"\n\nShe watched the shuttle twinkle away toward the flagship and smiled tightly. \"Means we get that scoring taken care of, sir.\"\n\n\"That, yes.\" He turned to look at her, evaluating. \"I don't think our new First is going to make it aboard in just thirty hours.\" He let that sink in. \"That's what I meant, Lieutenant.\"\n\nShe sighed and looked back at him, stricken. \"Oh.\"\n\n\"Mm-hmm.\" He turned back to head for the gym. \"Dry, Ms Pfeiffer. No lube.\" He started off. \"Maybe Mr diBiase, to handle the Army guys? He'll need to figure out berthing and weapons storage, and he should probably light a fire under it. Something simple: bunks in a cargo bay?\"\n\n\"Aye aye, sir.\" Pixy's heart fell. \"I'll get him right on it.\"\n\n* * *\n\nThe infantryman arrived that same morning, long before diBiase had even thought about where to put any of them. Before lunch, even.\n\nHe flew his own shuttle, which was a surprise to most of the bridge watch. Pixy, on duty, picked up the contact before the scanner tech did. \"Hey!\" she grunted, testy. She jabbed a finger at the plot board. \"That's a contact, Herriot, you dumbfuck. Why am I picking up a contact before the scanner tech does?\"\n\n\"Sorry, ma'am.\" She knew the answer, though; Herriot had bought a quarter-dose of morph last night from Ana. Herriot blinked hard into the scope, trying to return to the right universe.\n\nPixy gave the tech five seconds to get sorted out. \"Well?\" she growled. \"Report.\"\n\n\"Single contact. Personnel shuttle, bearing one-five-seven by eleventy-one low. Standard closure at 5 meters per second.\"\n\n\"Identify, hold at Blue Point, calibrate gravity, assign to Docking Ring Three, yada yada,\" Pixy groused. \"I'll go down and meet it myself. I've got to take a shit, anyway.\" She thought about how long she wanted to spend in the latrine. \"Dock it in ten minutes, Herriot, not before.\"\n\n\"Ten minutes. Aye aye, ma'am.\"\n\n\"Sure.\" She swung over to old Chief Quannax, the only other person on the bridge. \"Take charge, Chief. Remember, we've got that carbon-scoring party coming over at 1930; if I'm not back, go ahead and clear them to begin work.\"\n\nQuannax had been forty years in space. He knew what it meant when the Basin people began expediting Pulver's repairs. \"Sure thing, Ms Pfeiffer.\" He smirked at her, all false teeth and wrinkles. \"Pulver Rising, ma'am.\"\n\nPixy limited herself to a withering glare by way of reward for that kind of fresh comment. She felt kindly toward Chief Quannax; he'd be dead before she would, most likely, and that made her feel protective. She made sure her minitab was in her back pocket before she left; she found it difficult to shit these days without something to read. It was the only free time she got anymore. Just yesterday, she'd left her tablet in the wardroom when she'd headed for the latrine; it had been mortifying to have to go back and pick it up, gliding silently in and out of the room while everyone else shut up and watched her.\n\nShe sighed as she settled herself on the seat, wondering as she often did quite when medical science would get around to eliminating the need to shit. They'd cured smallpox, cancer, menstruation, the flu, the plague, blindness, hemorrhagic fever, the jolt, even the common cold. Why not poop?\n\nBut it was breathlessly nice, she reflected, the feeling of finally getting a massive turd out. It was like the aftermath of anal sex; she'd never been into the act itself, but the feeling as the guy pulled out came close to an orgasm. As usual, Pixy stayed on the seat while she flushed, enjoying the faint waterfall-mist sensation of the clean water spritzing her undercarriage. She found herself craving that, especially when the gravity wasn't working and they had to resort to dry-flushing; space held many hazards, but she'd always felt that lack of a proper flush was among the worst.\n\nBut then everyone knew that Pixy Pfeiffer was a woman of strange quirks.\n\nShe checked her chronometer as she sat back, the toilet doing its mindless work of scrubbing and disinfecting. Still three minutes before she needed to meet the shuttle, unless Herriot had forgotten how to tell time. Which, she reflected, was probable.\n\nSo she headed straight down to Ring Three not quite knowing what she'd find, but presuming it would have something to do with Admiral fucking Tschorr's secret little mission. The successful shit had put her into a better mood; plus, it was nice getting off the bridge, and she whistled one of her father's old tunes as she walked. She rounded a corner and nearly ran into her own Ana the Tygon Whore, shambling aimlessly along the corridor with a faraway look in those golden Tygon eyes. \"Whoah! Ana! Watch where you're going, girl. Doing okay?\"\n\nAna shook her head. \"Shit, Ms Pfeiffer,\" she blurted, nowhere near her normal self, \"wait'll you see what just came through Docking Ring Three.\" Pixy checked her chrono again, irritated, only to discover that Herriot had indeed lost the ability to tell time. \"He's a stud, ma'am.\"\n\n\"What the fuck are you on about, Ana?\" But the tall Tygon was already lost to sight down the corridor, still dreamy, still aimless. Pixy shook her head; the Tygon Whore was normally the picture of calm, as chilly and professional as they came, but she had a major weakness for attractive male humans. Well, no time to wonder about it now: Pulver had a visitor, and her First Officer needed to find out who it was. She sidestepped a robot near the lox vent, one of the 4B4 models, the buttfuckers, and as always she suppressed a shudder when she looked at it.\n\nOne last turn, with two excited female sailors whispering toward her, forgetting themselves in their gossip. Pixy waited until it was obvious they weren't going to salute her; a First Officer had to care about these things. \"Can I help you ladies?\" she demanded loudly, secretly enjoying the flushed faces that replied beneath a too-rigid pair of salutes.\n\n\"Sorry, ma'am. Pulver!\"\n\n\"Rising. Watch where you're fucking going next time. You don't ignore an officer, no matter how busy you think you are.\" She smiled sweetly. \"Not really busy, though, are you?\"\n\nThe sailors looked at each other. The second one, older, taller, one of Amisuul's girls, just smiled knowingly. \"You'll see, ma'am.\" She tossed her braided hair back toward the Ring. \"He's back there.\"\n\nThe fuck was going on here? First Ana, and now a seasoned onboard prostitute? What had come out of the docking ring? Who was in that unidentified shuttle?\n\nShe found out soon enough.\n\nHe stood with his feet apart and his arms folded across a broad chest, an air of amused confidence seeping out of every pore. His body tapered sharply down like a cone: massive shoulders over narrow hips and fine, quick feet, the whole thing topped off by a pleasantly oval face fringed by sandy hair cropped closely in Army fashion. Shit, she noticed dully as she walked up; he even had a dimple on his chin. Strong nose, generous mouth, the kind of squinty blue eyes made to look at distant horizons, nobly...\n\nWow.\n\nPixy caught herself scanning south for his penis before she was even aware of it, but then he turned his laughing eyes toward her and put on a pleasant smile. Pixy found herself speaking before he could open his mouth, babbling even, not thinking at all. \"Well, hi! I'm Pixy Pfeiffer, the First Officer, and I'd love to welcome you to the USS Pulver...\" She trailed off then, having nothing further to say, powerless to resist as he pulled her effortlessly into his orbit. Dimly she was aware of two other sailors, women, on the other side of him, just standing there and not working, and though it was her job to beat the shit out of them and send them back to work she found it impossible to blame them.\n\nThe man was just too delicious.\n\n\"Hello.\" Christ, even his voice was perfect, a grumbling tenor with just a hint of playfulness. \"Am I supposed to salute the ship, or ask permission to board, or buy someone a drink?\"\n\n\"Oh, you could definitely buy me a drink,\" she gushed, hating herself but unable to say anything else, and then she was laughing and touching his arm, her own violet gaze going to the two sailors watching: at ease, bitches. This is officer cock. They got the message immediately and backed off, huffing, all narrowed eyes and the kind of smiles that are not at all friendly, and then she was practically pulling him up the corridor. \"It's a very busy morning, but we'll find time for you.\"\n\nFuck! What was she saying? This was not her, not at all. The crew would be talking, starting with those two little tarts at the docking ring, but she couldn't help it. The Fleet just didn't have men like this one. He wore the green uniform of the Stellar Infantry, his cape the short one of a first lieutenant, with a less-than-modest splash of campaign ribbons on his left chest, especially for an officer so junior. \"And you are?\"\n\n\"Oh, my apologies.\" He was still smiling, warmly, easily, his manner passing straight through her brain and flashing behind her pussy. \"Lieutenant Cooper-Crick; I'm leading the P/E platoon you'll be taking on our little adventure.\" He flickered his gaze theatrically from side to side, aware that the mission was secret and aware, too, that maybe it really shouldn't be, that classified material is really just for those old farts up on Staff, that here, at this level, the lieutenants' level, aren't we all just good friends? \"I'm here as the advanced party, coordinating to make sure you're ready for us.\"\n\nFor you? Born ready! Pixy shook her head; what the fuck was the matter with her? Lack of sex, possibly, but she'd always been a sexual camel and Klonmyre did what she could... Focus! \"Well, like I said, we're extremely busy. I'm not sure we've even had time to figure out your billeting.\"\n\n\"Right. I apologize; we're used to transports, and they're used to us. I know this is new for a GP vessel.\" He stared into her soul, tragic, making like he was the source of all the galaxy's ills, but not to worry; those broad shoulders could handle it. \"We don't need much.\"\n\nYou need me. \"No. Well, still. We want to be helpful in whatever way we can.\" She knew she should take him up to Captain Reye, but he was due at the Flagship at 1015 and would be preparing for that now. So she steered him subtly toward her own office, the First Officer's space right up near the bridge. \"Hey.\" She grabbed a passing sailor. \"Pass the word for Lieutenant diBiase. He's needed in my office.\"\n\n\"Aye aye, ma'am.\" The sailor stared with open curiosity at the infantryman. \"Nice cape,\" he added casually as he left.\n\n\"Shit.\" Pixy swung toward the Army guy, mortified. She wanted to go charging after that sailor and knock his teeth out, but she was acutely aware of how that would look as a reflection of Fleet. Desperately, she turned back to the man; even at middling height, he was still taller than she was. \"I'm terribly sorry, Lieutenant Cooper. We're not usually this informal; our people don't have a lot of experience with Army rank, I'm afraid.\" She knew that guy's face, though: Sceviour, from Commo, with the temporary arm while his clone order went through. He'd been wounded in the Battle, but not as wounded as he'd be when she tracked him down. \"He'll pay.\"\n\n\"Not at all.\" He smiled and her heart stopped. \"These are confusing times. They'll get used to us eventually.\"\n\nShe returned her own smile, seldom used and never very impressive. \"My office,\" she managed, slapping the hatch open. It was just as Densborg had left it; Pixy never much cared what her space looked like, and this was just a temporary billet anyway.\n\nBut it did have a viewport. She did enjoy looking at the stars.\n\n\"Have a seat, Lieutenant.\"\n\n\"Bulfinch, please.\" He folded himself into one of Densborg's old mock-wood chairs and made sure his cape billowed over the back; his motions had a subconscious grace to them, an athleticism that reminded her of gymnastics or martial arts. \"Can't wrinkle the cape. People call me Bull.\"\n\nShe could not stop smiling, certain she was going to leave a stain on her chair. She felt giddy, and found herself wondering whether he used one of those pheromone colognes or something. \"Bulfinch?\" She arched an eyebrow. \"Family name?\"\n\nHe shrugged disarmingly. \"Maybe. It's a large family.\" He was staring at her with an odd fixity of attention. \"Most of us are in the Army, but I'm starting to think I should have joined Fleet.\" His grin spread. \"It seems all the most interesting officers serve here.\"\n\n\"Oh, I don't know about that...\" She leaned across the table, her mouth opening; she felt obscurely like flirting.\n\nBut then the intertube at her elbow crackled. \"Lieutenant Pfeiffer?\" It was diBiase. \"I'm down in the forward hold. Captain told me to figure out billeting. Did you need me up there, or what?\"\n\nShe smiled apologetically at the infantryman and leaned toward the tube. \"Sort of. You're billeting a bunch of Army guys...\" She looked inquisitively at Cooper, who mouthed forty. \"Forty guys. Their leader is up here in my office.\"\n\n\"Cool. Send him down, ma'am.\"\n\nPixy frowned. He'd been aboard transports; he could get there. All he had to do was tell the lift tube where he was going. But she had no wish to see him leave her office, was the problem. \"Um. You're sure?\"\n\n\"Absolutely. He can tell me exactly how he wants this done.\"\n\nPixy and Cooper exchanged glances, hers unusually uncertain, his warm and confident. \"Sure,\" she stuttered, wondering where the hell her decisive self had fled to.\n\n\"Ah. Well, then, I guess I'll be going.\" He raised an eyebrow a fractional millimeter; excellent control. \"I was wondering,\" he went on coolly, that smile running straight toward her vagina again, \"what kind of companionship I could expect aboard this ship. Say, from someone close to my own pay grade, someone who understands responsibility.\" His eyebrows ascended innocently. \"Perhaps even someone like you, Lieutenant Pfeiffer? Or, what was it? Pixy?\"\n\nHoly shitfuck. He was making a pass at her. Pixy descended into immediate shock; it had been a long, long time since anyone had tried that with her. Once it had been normal; she was far from unattractive. But this was a warship, and everyone knew everyone by smell, and it was known that Pixy Pfeiffer was not looking for random romance. So, very rusty, she had no real way to figure out how she should respond to the sexy Lieutenant Cooper-Crick. \"Do what now?\"\n\nHe leaned back in the chair, his legs in the well-fitting uniform crossed. \"You know. I suppose you hear this sort of thing all the time,\" he went on, smiling winsomely, \"but are you, um, available?\" He gave a peculiar drawling chuckle, and like everything else he did she found it mindlessly alluring.\n\n\"Me?\" It came out as a humiliating squeak. Hating herself, Pixy immediately cleared his throat. \"Lieutenant, do I understand you to mean that you're propositioning the First Officer?\"\n\n\"Not at all.\" If anything, he looked even more relaxed now. \"I'm not in the Fleet. I don't work for you, Pixy, and on top of that?\" He struck a sad-eyed, melancholy tone. \"We might never see each other again. Hell, I might die!\"\n\nPixy felt her jaw drop. \"You're shitting me.\"\n\n\"Oh, not at all. Ma'am.\" He winked in a most impertinent manner, and even as her pussy gushed slightly Pixy felt vaguely offended by his presumption. So she clamped her mouth shut, glared across at him, and assumed her coldest, most venomous tone.\n\n\"The acting Second Officer aboard this vessel, Lieutenant, is a Tygon named Rocky Amisuul. He handles all the onboard prostitution. You can find him in the junior officers' billets, third door on the left. There's a brochure outside his door, with pricing and available services.\" She pulled her keyboard back out and began pretending to work, proudly defying her own insistent vagina. \"He'll be glad to accommodate you.\"\n\n\"Oh, come on.\" Cooper showed nothing but confidence, even now, all perfect teeth and twinkling blue eyes. \"I never pay for it.\" He winked and made a great show of examining her body. \"You're sure?\"\n\n\"If you don't pay for it,\" Pixy shrugged evenly, \"there are always other options. An officer of your experience will realize, I'm sure, that ship-based gravity does not affect masturbation much at all.\" She studied her monitor, which had nothing on it. \"Just make sure you properly dispose of any fluids you might generate, Lieutenant. Now, if you'll excuse me?\" She smiled sweetly. \"I'm a very busy woman.\"\n\nLieutenant Cooper paused a moment, letting her know he was only leaving because he felt like it. Then he rose, his cape flapping gallantly even with that simple motion, and stood over her. \"Please, Pixy,\" he insisted, his voice honey-golden, \"call me Bull.\"\n\nShe nodded up at him, civilly, not really trusting herself to speak. She was proud of how she'd handled this, for the most part, but that squeak she'd let out earlier had freaked her out a little. When she was sure she'd sound more like a grown-up, Pixy spoke diffidently. \"Feel free to stop by anytime.\"\n\nHe winked, threw off a casual Army-style salute, and looked over his shoulder as he left. \"By the way? That viewport behind you.\" He smiled, a crotch-meltingly gorgeous smile. \"I can tell there's nothing on your monitor.\" He was still smiling as the hatch snicked closed behind him.\n\n* * *\n\nShe spared a painfully, even selfishly brief thought for Klonmyre that night, because the poor little engineer never stood a chance.\n\nPixy had her called from the bridge, waking her out of a rare nap; it had been a long day in the engine room, doing final calibrations, and the captain had only certified everything ready for launch at 2120. \"I should wake her up, ma'am?\" The sailor on the bridge had been confused.\n\n\"Yes.\" Pixy was already stroking her clit, wondering why the hell she was taking care of this herself. There were supposed to be benefits to having a bedwarmer. \"Get her up here. My quarters. It's about, uh, the engines.\"\n\n\"Aye aye, ma'am.\" The bridge watch was an increasingly difficult place to be, now that the electrocoaters were right outside the viewports doing their survey, which was always noisy. But even so, this was hardly a routine request. \"I'll get her up there.\"\n\n\"Thank you.\" She was waiting in an anxious, teeth-gritted sweat when Klonmyre's usual quiet knock sounded at the hatch. \"Enter!\" And if it hadn't been the engineer, Pixy would have had some explaining to do; she was already naked, wallowing in a stinking broth of her own juices, ready to attack whomever walked through the door. Her pussy, stoked high by weeks of stress and then given a fresh flood of fuel by the suave Lieutenant Cooper, was at a high boil. \"Get your fucking ass in here, Janelle,\" she hissed, already three fingers in, and Klonmyre responded with creditable speed.",
        "\"Shit, ma'am.\" Klonmyre kicked the hatch closed and worked her staytab. \"I thought you were on watch.\"\n\n\"I'm the First fucking Officer,\" Pixy grated. \"I'm always on watch.\" As always, she enjoyed the slow unveiling of Klonmyre's flesh as her clothes came inching off, the younger woman still rubbing sleep from her eyes.\n\n\"The engines are doing fine, thanks for asking.\" Klonmyre stepped out of her boots and posed just out of reach, always such a little fucking torturer. \"You sure you don't want a quiet night of cuddling, Pix?\"\n\n\"I saw the engine report already,\" she replied evenly, \"and no, I don't want a quiet night of anything.\" She uncoiled herself off the mattress and lunged, ignoring the twinge in her back, yanking the little engineer bodily into bed. \"Fucking tease,\" she muttered, rolling Klonmyre over onto her back.\n\n\"Yeah, well.\" She scrambled up toward the pillows, her brown eyes wide and sparkling; Jannelle Klonmyre was not a woman to shy away from sex, no matter how tired she was. \"Long day.\" Whatever she was about to say next was stifled at once by the force of Pixy's body on hers, the twisting lips that began to devour her mouth, and her own responsive moan as her legs came up and around.\n\nIt had been days since the two of them had warmed each other's bed, but that wasn't enough to explain this; Klonmyre was already breathless and struggling to keep up as Pixy grappled insistently at her little body. She was used to Pixy's wiry strength and passion, but this was something else. \"Jesus,\" she gasped once she was finally able to get her face disengaged, giggling as Pixy sucked at her neck. Their arms were tight around each other's bodies. \"Was it something I said?\"\n\n\"Less talking, more screaming,\" Pixy replied viciously, and then it started: the wild, vicious licks and kisses all down her body, and Klonmyre settled in. These kinds of nights had a rhythm, a pattern: Pixy was not generally a woman who liked to be taken care of, which meant Klonmyre spent a great deal of bedwarming time on her back with the older woman's face between her legs.\n\nKlonmyre did not mind that at all.\n\n\"Yes,\" she whispered simply, her hands hitting the plot repeater as she gained leverage to drive herself down the mattress; Pixy was already down there, running her tongue across Klonmyre's mound, that well-known little nose tickling at her clit. She shivered, as she always seemed to when Pixy got her hands on her ass and started prying her skinny little pussy open with her sarcastic tongue, and felt the tension leave her body in a rush as she let her hands toy lazily with Pixy's hair. Everything came out in a massive sigh, those gorgeous purple eyes staring up into her own mousy brown ones, and it was at times like these that Klonmyre's face started to hurt with all the smiling.\n\nKlonmyre tasted like sweat and flesh and the glorious, intoxicating musk of arousal, but this time Pixy wanted more than that; it wasn't enough to nibble on her sensitive, enticing clit, nor even to feel those strong smooth abs rippling against her forehead, and Pixy obeyed an urge she only half-understood as she came away, her face shiny.\n\n\"What?\" Klonmyre's eyes lit up; she always got unduly excited at the prospect of being the nibbler, rather than the nibblee, and it wasn't something she got to do often. \"Want me to do you this time?\"\n\n\"Sort of.\" Pixy's voice came out as a chopping, harshly controlled set of syllables. \"I want to ride someone tonight,\" she announced, and then she was crawling up the younger woman's body, accepting the embrace of Klonmyre's snaky arms, their legs already tangling. \"Been trimming your fingernails, Jannelle?\"\n\nThe engineer grinned deviously, craning her head up to give little lizard-licks at whatever part of Pixy's body came into reach. \"Wouldn't you like to know?\" She never felt playful like this, not even with her husband. \"I suppose you can find out, if you really want to.\"\n\n\"Oh, I want to.\" Pixy reared up over Klonmyre, sitting on her thighs now, both of them panting as they took in each others' nude, twisting bodies. Klonmyre was already moving her hands down to where Pixy's legs met, toward the long, eager slit that stared at her now in all its slick, shiny glory. \"Go ahead, little bitch.\"\n\n\"You first.\" Klonmyre rested her fingertips just outside Pixy's vagina, right where her inner lips peered out red and swollen. Always teasing. \"You're in charge here, remember?\" A gentle caress across the older woman's clit. \"I feel like I need a little professional development.\"\n\n\"Fuck.\" Pixy's violet eyes fluttered, her hands resting gently on Klonmyre's belly, and then they began to drift lower, inward. \"I'm going to fucking destroy you tonight,\" and Klonmyre's face showed how badly she wanted that very thing, and then it was all fingers in cunts and twisting grimaces as the two of them went at each other's holes.\n\nWithin just a few minutes, Klonmyre knew she was in trouble.\n\nPixy was always considerate; she felt it was important to make Klonmyre feel good, but there were some nights, nights like these, that she tended to take things too seriously. She swiveled her hips over Klonmyre's fingers, fucking her like she was a man, and all the while her thumbs dug insistently for Klonmyre's clit. It was intense and stinky and sweaty and the room blowers were having a great deal of difficulty fanning away all the heat in the air, and all the while the stars whirled in the viewport surrounding the unwelcome boots of the electrocoating crew.\n\n\"Shit,\" gasped Klonmyre, and Pixy reached down to smack at one of her breasts.\n\n\"Something wrong, little Jannelle?\" she taunted, murmuring, with unusual cruelty in her eyes. \"Losing control, maybe, just a little?\" Their bodies kept driving together, grinding, their hands sore where they weren't numb, and then Klonmyre came with a compact, efficient series of thrusts and grunts, her brown eyes rolling back in her head while Pixy, towering above, just laughed. \"That's it...\"\n\nBut she didn't stop there, her fingers still twisting and rolling at Klonmyre's pussy, and the younger woman squirmed; it was all too much, too fast. Her eyes wide and rolling, Klonmyre grabbed for Pixy's wrist. \"Slow down,\" she managed, begging. \"Feels fucking good...\"\n\n\"Oh, I know it feels fucking good,\" Pixy snarled, her hips still driving. \"Keep that finger up in there, Jannelle!\" She was getting close, the sights and smells hypnotic, and now she gripped Klonmyre's breast with painful intensity. \"Keep it up in me!\" She was wild, her whole body swinging and shuddering. \"Come on!\"\n\nWhen Pixy finally got there, Klonmyre was still numb with her own extended orgasm, her body way overstimulated; both women glowed bright red and blotchy, and even through her own stormy brain Klonmyre was able to give a sigh of delight when she saw Pixy's eyes close. The older woman's body shuddered and thrashed violently for a time, and then the stillness came, and both of them collapsed into the ruined sheets and panted, listening to the overworked room conditioners.\n\n\"Christ.\" Klonmyre rolled with difficulty to face Pixy. \"You okay?\"\n\nThe purple eyes blinked back. \"Sort of?\" She darted forward for a kiss. \"Sorry, Jannelle. Didn't mean to scare you there, but... I mean, a woman's got needs sometimes.\"\n\n\"Fuck.\" Easy cuddling then, the warm flesh meeting, their breath mingling. \"If I'd have known this was coming, I'd have gotten more rest earlier.\"\n\nPixy took a deep breath and stared out the viewport. \"Well. Go ahead and get some now; I won't stop you.\"\n\n\"I'd say I already got some.\" Klonmyre waited until she heard a laugh, then pushed her head into Pixy's chest and closed her eyes.\n\n* * *\n\nPART II: The Voyage\n\n* * *\n\n\"Jesus fuck, Amisuul. You're doing it again.\"\n\n\"What's that, ma'am?\" His expression remained carefully sheeplike; Pixy had a flash of insight, realizing her nagging wasn't going to make him a better performer.\n\nShe modulated her voice, even though that made it nearly impossible to hear her in the cavern that was the Pulver's Main Bay. \"You're fucking up, is what I mean, but just think about it a second. What is it we're making room for here?\"\n\n\"The Army's shuttle.\"\n\n\"Yup. And that shuttle's going to need to be loaded, ultimately, with what?\"\n\nHe frowned. \"Soldiers, ma'am.\" She just kept staring until he got it. \"Ah. Explosives.\"\n\n\"Explosives. Bolts. Bullets. Bell charges. Detonators. Platter charges. Mines. Grenades. All the mindless shit that soldiers carry.\" She waited, forcing herself to count to five while he hopefully figured it out. She got to six, going on seven, before he finally snapped his fingers. \"That needs to be loaded in the...\"\n\n\"Shuttle! We should manifest all that ordnance in here, instead of Bay Three!\" He shook his head. \"But I thought explosives couldn't be stored where sailors are billeted.\"\n\n\"You've been studying. You're correct, Mr Amisuul, and congratulations on knowing Transport Regulation #15.7. But see, that regulation mentions sailors. It says nothing about soldiers.\" She smirked, a very supply-officer smirk. \"Does it?\"\n\nHe cocked his head doubtfully. \"But, isn't the intent to separate the people from the bombs?\"\n\n\"Sure. But two things, Mr Amisuul: one, they're soldiers. They're trained to deal with explosives, and they're going to end up carrying them anyway. And two? It's a regulation. The intent doesn't matter, just the way it's written.\"\n\nHe sighed and yawned, flipping the manifest pages. \"I just... it feels wrong.\"\n\n\"Of course it does.\" She gave him an encouraging clap on the shoulder. \"That's why supply officers don't have feelings. Cheer up, Mr Amisuul. We're heading out tonight; after that, all this crap will be secured and you can go back to pimping.\" He did brighten at that, but the grey fatigue in his face was still there three hours later as the Army shuttle came into range.\n\n\"Docking ring first, then Main Bay.\" The captain himself was controlling all this, a delicate maneuver that required a long, painful checklist. Getting a troop shuttle into a cargo bay was not a simple task. \"Lieutenant Cooper can offload all his guys at the ring, then their pilot can come around to the Bay. That'll be your piece of the puzzle, Ms Pfeiffer.\"\n\n\"Ready, sir.\" She was spectating for now, standing back by the hatch. It was weird, she reflected, to have a full bridge crew after all this time in the Basin; weirder still to see Joop Koster in Pixy's seat, minding her monitors. No, scratch that; it wasn't her seat anymore, not for this trip.\n\nNo, her ass would be planted in the big chair at the helm from now on, steering the ship. That was the First Officer's station at general quarters, and now it sat empty because the Pulver still wasn't moving. She'd be there in a few hours, though, once the shuttle was secured and the time came to move out.\n\nAbove her head, the last of the electrocoat was going onto the hull armor; the job still wasn't 100% complete, but it was close enough for Fleet work. She frowned as the shuttle approached the Blue Point where it would need to shut off its gravity to avoid messing with the Pulver's systems. \"Magnify,\" she told the scanner tech, and the little ship leapt into focus. \"Looks weird, sir, doesn't it.\"\n\n\"Hell yes.\" They both stared: a normal, run-of-the-marbleck shuttle Mark III, type large, subspace, and yet it looked so different. \"I'm so used to seeing them in grey.\" The craft was green, with oddly rippled stripes fanning back from the nose.\n\n\"Apparently it's their own ship. Like, just for that platoon. Cooper was telling me about it.\" The Placer/Extraction platoons were designed to be totally self-sufficient, he'd explained. \"Got their own pilot and crew chief and everything.\"\n\n\"Must cost a fortune, outfitting a unit like that.\"\n\n\"They say that's why the invasion of Cygnus XIX cost so much, sir: they had to send in, like, twenty P/E platoons just to do all the recon properly.\" She assumed it was the same for any major-planet invasion, but that was the only one Cooper had been on. \"Cooper was saying they spent thirteen days with no relief, just off what they brought along. I guess doctrine is, like, ten days.\"\n\nReye glanced coolly at her. \"Getting to be quite friendly with Lieutenant Cooper, sounds like,\" he muttered.\n\nPixy just stared back, coldly neutral. \"I'm trying to make sure I know what the Army's needs are in this mission, sir. Nothing more.\"\n\nReye's quick stare in return was just as neutral, carefully so. \"Excellent.\"\n\n\"Blue Point, sir!\" The tech had one job: that one announcement. He called it out with flair and a certain panache, like a guy introducing a singer.\n\n\"Okay.\" The captain picked up the microphone to call the shuttle, and that's when Pixy headed for the hatch; she had work to do. The Main Bay needed to be depressurized, its tiedowns checked, the gravity burped, all the windows deiced, guidelights checked and calibrated for the shuttle's speed...\n\n\"Sir, what closure rate are you going to give them at the Main Bay?\"\n\nReye paused. \"Three meters per second.\"\n\n\"Cool, sir.\" She was out the hatch without bothering him further; they'd all learned, and quickly, that Zonn Reye did not really enjoy small talk. Aside from his silly fucking motto, which still made no sense to anybody, he seemed decent; at least he could make a decision, which was more than anyone could say of old Captain Crick. That one had collapsed to the deck in a pool of vomit when in crisis, and Captain Reye didn't seem like the type.\n\nShe got all her supply geeks behind the barrier, doing a headcount before she punched in the depressurization code. Kluwer was off in a corner with Denman and Ana, trying to figure out what odds to give on the over-under for the Rat Bet. \"Hurry it up,\" Pixy growled. \"Place your bets; we've got real work to do here.\"\n\n\"Just a sec, ma'am.\" Kluwer had been slow to emerge from his shell, but he was an experienced warrant officer who'd run a betting pool on his last ship. More whispered consultation followed, and then the vague rustle as pay chits went into his pocket. \"Okay, ma'am. Over-under is sixteen; want any action?\"\n\n\"No.\" Pixy never gambled, especially on something so stupid. \"De-press!\" she called, then counted the requisite five seconds, and then she slapped the valve. At once the windows went cloudy grey, showing the sudden and intense fog of explosive decompression. \"Get on the gravity, Ana.\"\n\n\"Aye aye, ma'am.\" The Tygon Whore laid competent fingers on the lever, waiting for the order. \"Set.\"\n\n\"Right. Everybody grab on.\" The fog cleared. \"Kluwer? You ready to count?\"\n\n\"Sure!\"\n\n\"Gravity, Ana.\" The hiss made the trip tremble slowly. The hulls on these GP ships never liked localized gravity burps; the rumor was that doing too many of them could cause a breach, though nobody would ever swear to having seen one firsthand. Pixy felt slightly sick, like she always did, as her feet slowly left the deck, rising as zero gravity took hold. She felt herself drifting clear of the window and then casually reached out for one of the handles. A green light shone on Ana's console.\n\n\"Clear, ma'am,\" but Pixy was already working the deicers, and Kluwer leaned forward as the view cleared. In the hold the rats were rising, their little lungs ruptured by the decompression; most would drift out into space as soon as she opened the doors. His finger was jabbing at the window. \"Got it, Klu?\"\n\n\"Think so.\" He jabbed a few more times, then frowned. \"Got it, ma'am.\"\n\n\"Cool.\" She reached over to trip the hatch alarm, the chimes ringing briefly through the whole ship, and then the massive arc of space appeared at the far end of the bay as the doors louvered themselves open.\n\n\"Twenty-two!\" Kluwer announced, to the mingled groans and cheers of the folks who'd bet. He glared over at Pixy. \"My over-under was off. Gotta get rid of some of those things, ma'am, before next time.\"\n\n\"I think I just did,\" she shot back, watching as the frozen little creatures tumbled around randomly. She was checking to make sure the guidelights were set for 3 m/sec. \"Okay. Now we just wait.\" She glanced around, the younger sailors already doing what young sailors did in zero-G, spitting so that they could watch their saliva form globules, shoving each other into the ceiling; the usual. \"Limit your grab-ass, people. We'll be back at normal G in about three minutes.\" Already she could catch the glow of the shuttle's landing lights as Reye turned the ship to catch the glidepath. \"Shit. More like two minutes.\"\n\nThe shuttle was there, suddenly, the micrometeor pits gleaming dully. It was already backing in, looking like it was allowing just the barest amount of lead to account for Reye's momentum; the pilot must think he's a badass, she reflected. He swept past the zero point with a stylish fishtail. She spotted no wobbles, no wavers as the shuttle closed with the Main Bay; impressive. At forty meters, the Army pilot straightened out and flipped his tail, and then he was well into the glidepath. \"Sweet,\" murmured Ana. Pixy could only agree; she was a fine pilot herself, and usually she spent moments like this spotting flaws.\n\nThe mottled green craft settled, knocking a rat out of the way; the little chunk came bouncing off the window in front of Pixy. \"Let's see if it goes out into space,\" Denman piped up; just as well, too. She was the lowest-ranking sailor here, meaning she'd be sweeping up the little corpses after re-press.\n\n\"Two meters,\" Ana called, eyeing the landing gear. \"One meter...\" She didn't bother calling zero, as they all felt the magnets engage as a dull metallic clunking noise through this entire side of the ship.\n\n\"Hatch alarm. Get ready for gravity.\" The great doors slid shut like a wheezing old man settling into a tub, the servos working hard. \"And... gravity in three. Two. One.\" People worked, contorting their bodies to get their feet under them before Ana threw the lever, but it was no use; there was always some staggering that went on. This time, it didn't seem anyone was puking at least; that would have made Denman's day all the brighter. \"Everyone okay?\"\n\nA chorus of affirmative syllables, the rustle of swapped money, and the evolution was over. Pixy kicked the valve. \"Repressurize and secure.\"\n\nThe hatch opened automatically once the pressures equalized, and Denman was out there with her broom with commendable speed; pretty soon, Pixy told herself, little Denman would outrank that horrible fart McChang. \"Okay, everyone. That's it. General quarters for departure at 2100; until then, go ahead and carry on with whatever Chief has you doing.\"\n\nThe shuttle vented, harmless hydrogen drifting toward the scrubbers, and Pixy reached the side hatch just as it cranked slowly open. \"Hey, in there!\"\n\n\"Hello.\" The man was old, cracked with time, like he'd been shattered into a million pieces and then epoxied together. He descended carefully after the steps swung out. Pixy was no expert on Army ranks, but there were a lot of stripes on his arm. \"They call me Woj.\"\n\n\"Pfeiffer.\" She offered her hand, his feeling like a bag of bones as she shook. \"A pleasure. That was a nice fishtail.\"\n\n\"Thank you.\" He squinted up at her. \"Are you the Pfeiffer with the medal? The one with the overpowered hard-dock, out at that 447 engagement?\" Pixy sighed. She was used to questions like that by now; Detached Engagement #447 was what Fleet was calling the battle that had made her reputation and destroyed Okonfwe.\n\n\"The same.\" She nodded toward the hatch and Woj fell into step beside her. \"Just a lucky day for the shuttle.\"\n\n\"With you aboard? I suppose. Lucky for the whole ship too, or at least that's what I read.\"\n\nTwenty dead, Pixy reminded herself, but this Woj clearly meant it as a compliment, so she smiled. \"Thank you. One of your people should be here for you shortly; we've got you folks in the Number Four hold for now, but you'll be billeting in here with the shuttle.\" And the ammo, she left unsaid; a man this experienced would have noticed the stacked pallets right away. \"Just give my people an hour or so to get things tidied up in there.\"",
        "\"Woj!\" The voice was firm and high, unfamiliar; Pixy hadn't met most of the platoon yet. \"Get your fucking ass down to Bay Four. We're waiting on you.\" The voice belonged to a thin, hard-faced woman with that ambiguous ethnicity that all the real Earth folks had now. \"Move it.\"\n\n\"Yes, ma'am.\" With a long-suffering sigh Woj lumbered down the corridor, leaving Pixy with the new woman. They studied each other the way women always have, looking for any sign that decent competition could be expected and, as ever, deciding privately that the other was no match. Pixy waited until the young woman noticed their rank disparity, which took longer than it should have.\n\n\"Ma'am,\" the woman said grudgingly; she did not salute, but apparently that was an Army thing. \"Lieutenant Mozz. I'm the platoon XO. Like a First Officer, sort of.\"\n\n\"I know what an XO is.\" Pixy took the offered hand. \"That's a fantastic pilot you guys have.\" It was the closest she felt she could come to what she meant, which was Shut your fucking mouth, kid; that pilot of yours was already old when you were born. \"I'm Pixy Pfeiffer. I run the ship.\"\n\n\"Ah,\" Mozz replied vaguely, avoiding eye contact. She made a face. \"Woj thinks he's a fantastic pilot; that's true. He's a recovering addict, though, so I never do feel safe flying with him.\"\n\n\"Oh!\" Pixy frowned. The Fleet seldom cared about drug habits; actually, the Fleet probably created more drug habits than it resolved, as Pixy knew well. She paused as they walked down the corridor. \"Can you fly, Lieutenant?\"\n\n\"No.\" And that was it, the rest of the walk passing in stony silence as they followed Woj along the corridors. Pixy was not accustomed to quite such a shitty attitude; maybe Mozz's metering implant was faulty, or maybe she couldn't get one; Pixy had heard that PMS had once made women act like assholes, though nowadays almost everyone had the implant. But at least they found the right way through the corridors; DiBiase had posted signs, and he was waiting for her at the hatch to Bay Four. He watched as she approached, and the moment her foot crossed the threshold he straightened.\n\n\"Attention on deck!\" he cried.\n\nThere was a confused shuffle as the Army snapped to in a flurry of capes and hard shoes. Curious faces swiveled her way. \"At ease,\" Pixy barked. \"Everyone over in the corner; take a seat, squat, stand, whatever. I'll let you know what's up.\"\n\nThey'd all just come off the shuttle into the docking ring, and most hadn't even bothered beginning to rummage through their stuff. Lieutenant Cooper stood smiling at one side, aloof from his platoon, and a more motley collection of men and women from various planets Pixy had never seen. They came, she was curious to note, in every conceivable shape and size, including a group of Linders with their distinctively thick legs.\n\n\"I'm Lieutenant Pfeiffer. I don't know if they teach you people Fleet ranks, so I'm like a captain to you.\" She gestured to diBIase. \"Mr diBiase over here? He's a sublieutenant, so he and your platoon leader are on the same level. He'll be your liaison while you're here, but I'd like to take this opportunity to welcome you to the USS Pulver. We're looking at a four-day transit at .87 lightspace, in company with a pair of frigates as escort.\"\n\nShe saw dead eyes, fierce eyes, and bored eyes staring back at her, but no excitement. This was not interesting to them. They had a job to do, and listening to her was not part of it. \"So, yeah. If you need anything, send it to me through Mr diBiase or your own officers; whichever.\" She nodded over to diBiase, who was bursting with responsibility and authority; she'd requisitioned forty bunks from the Yard Captain, which he was about to take these Army fucks over to assemble in the Main Bay, and she left him to it.\n\nThe captain had told her to report once the Army shuttle was secure, so she went straight to his office and knocked briskly. \"Enter!\" came the call from within, and she obeyed.\n\nReye was obviously from some sort of jungle region, because he kept his office as carefully rain-forested as he possibly could. Real plants were everywhere, with expensive hydroponic tubes pinned to the walls; the air smelled of jungle rot and chlorophyll. She felt the room's moisture curling her hair every time she entered. If he kept his office this way, she couldn't imagine what his quarters must be like; probably slept in a hammock.\n\nShe stopped short, stubbing her toe on the chairs ranged hastily around the skipper's desk. Eight eyes stared at her as she entered, six of them strangers. Reye was interviewing two humans and a Linder, the latter in an Army uniform with a captain's cape; not much to say about him. Or her; it was a Linder, and they all looked the same to Pixy. But there was even less to say about the two humans, both of whom shared a carefully bland appearance: nondescript hair and jumpsuits, average height, average features, nothing special. The seventh and eighth eyebrows rose. \"Yes? What's up, Ms Pfeiffer?\"\n\n\"Sir, you wanted me to report when the Army was all aboard and secure?\"\n\n\"Yes?\"\n\nShe blinked. \"Um. The Army is all aboard and secure.\"\n\n\"Thank you.\" Reye hesitated, then jerked his head to indicate she should stay. \"Shut the hatch, Ms Pfeiffer.\" Pixy was kicking behind her when Reye turned to the Army captain. \"Lieutenant Pixy Pfeiffer. She's my First Officer; she runs the ship for me.\" The Linder turned in the chair in that weird swivelly way they had, like their hips had ball bearings. \"Pfeiffer, this is Captain Nyhre? Am I pronouncing that right?\"\n\n\"Nyhre,\" the Linder corrected, always with that slow, sibiliant Linder mutter; the syllables sounded exactly the same to Pixy whether they came from Nyhre's mouth or Reye's. \"A real honor, Lieutenant. We've heard of you.\"\n\n\"Really.\" She flicked a glance toward the captain. \"The truth is probably far less interesting.\"\n\n\"No doubt,\" and a chagrined Pixy remided herself that Linders were notably bad at sarcasm. Humor seemed to be a foreign concept wherever they came from. \"But I'm pleased, nonetheless.\" The Linder swung back around with every appearance of paying Pixy no further attention at all. Reye glanced at her.\n\n\"Densborg's quarters,\" he launched right in. \"You weren't going to take them, were you?\"\n\nWhy? Senior lieutenants' quarters were senior lieutenants' quarters; aboard Pulver, they were the same. Nothing differentiated Densborg's old room from her own. \"Negative. I was saving them for the new First, obviously, but my thought was to let Amisuul have them just for this trip.\" She shrugged. \"He's next in line.\"\n\n\"Yes, well, not anymore.\" Reye glanced at Nyhre, and Pixy nodded. This is the way things worked in Fleet. Amisuul would be pissed, but whatever. He was a big boy; he'd survive.\n\n\"Understood, sir.\" No biggie. The First's quarters were right across from her own, and she hadn't been crazy about the thought of Amisuul bringing all his skanks up there anyway. \"He'll be fine.\" Come to think of it, more than fine; he'd undoubtedly be putting the hard sell on all the new Army pussy, especially with only four days to capitalize.\n\n\"Captain Nyhre is mission commander. He's responsible for the, uh, the terraforming survey.\" Liar; he knew he wasn't telling the truth. He just didn't know what the truth was. So he went with a dry, brittle tone.\n\n\"Of course.\" Pixy turned to the two faceless humans. \"You guys are the terraformers?\"\n\n\"Sure,\" one of them said. Both had the same cold, blue-death eyes, she noticed; she had no wish to be looked at by either of them. Both were unsettling. So she looked at Nyhre instead. \"If you say so.\"\n\n\"What kind of quarters will these two need?\"\n\n\"None.\" The Linder was smiling.\n\n\"None?\"\n\n\"We don't sleep,\" one of the terraformers giggled, and then she got it: the two were stimmed out of their minds. She hoped they'd brought their own supply; stims had been hard to get in the Basin, especially Bump and Rush. No wonder Amisuul's Crystal had moved so fast. Still... she assumed they had money, and after 2100 she'd be their only supplier for a few dozen light years in every direction... she made a mental note, then made a try.\n\n\"I'll be preparing the watch bill and quarter bill as soon as we launch,\" she told them. \"I'm going to need to know where to find you, at least, in case we need to go to quarters.\"\n\n\"They'll be with me,\" Nyhre announced, all lofty like the Linders always seemed to be. \"Or, at least, I'll be able to find them.\" Pixy's reply was a doubtful squint; Densborg's quarters were no larger than her own. She could only shrug, though; this was not a large ship, and no officer knew it as well as she did. She'd find them if she had to. She arched an eyebrow over the desk at her captain, hoping to get out of there before the plants made her sneeze.\n\n\"Anything else, sir?\"\n\n\"Nope.\" Reye was leaning back, clearly in deep contemplation. \"As long as everything is secured and ready to launch at 2100.\"\n\n\"Aye aye, sir.\" She straightened, the motto automatic now when she was saluting him. \"Pulver!\"\n\n\"Rising.\" He was leaning forward again, turning toward Captain Nyhre, as the hatch whispered closed. Pixy let go at once, three tumultuous sneezes back-to-back, the snot flying. A passing sailor stared, fascinated.\n\n\"Sorry.\" She beat a hasty retreat, headed for the wardroom. They were doing her favorite for dinner, and she did not intend to miss the last meal without preserved food. First, though, she made a hasty trip to her supply office; this was even more urgent than food. She spotted Ana on duty behind the counter, the Tygon looking up inquisitively. \"Ana. Hi. Listen, this is important.\"\n\n\"Ma'am?\"\n\nPixy leaned over the counter, feeling the urgency; she should have come sooner. \"Remember that Army pilot, the shuttle dude?\"\n\nThe Tygon Whore frowned, her stubby fangs poking out. \"Oh. The little guy? Looked like he'd been crumpled up and left in the rain?\"\n\n\"Yeah. Look, he's an addict.\"\n\nAna brightened. \"Cool! That'll be an easy way to get in with the Army guys, ma'am; I've already got McChang in there helping Mr diBiase set up their bunks, sniffing around... what?\" She'd noticed Pixy biting her lower lip.\n\n\"Well... I mean, he's apparently in recovery. So... maybe not. No drugs for him.\" She shrugged. \"They need him to pilot the drop. He's stranded on an unfamiliar ship for four days, and at least one of his officers is already riding his ass. He doesn't need our kind of help.\"\n\nAna was frowning again, but it was a different kind of frown. \"Ma'am, I sent some stuff with McChang. I mean, I'll get down there now and let him know, but --\"\n\n\"Go. Now. Haul ass.\" Always another problem, Pixy thought bitterly, but then the cooking smells were starting through the ventilators with the second dinner service, and she forgot all about Woj.\n\n* * *\n\nDinner, though, was not the haven Pixy was expecting.\n\nShe was hunching forward in her seat, just beginning to tuck into the fresh macaroni'n'haggis, when a red-faced Klonmyre stalked toward her table. \"Bitch,\" the redhead hissed as she slammed her tray onto the table. \"Fucking cunt.\"\n\nPixy, her fork already poised among the rising tendrils of spicy steam, felt her eyes narrow. \"First off, this is the wardroom, Ms Klonmyre. You watch your mouth. Second off, there's no possible fucking way you're talking to me like that. No possible way.\" She glared up, evil-eyed, Klonmyre's status as bedwarmer no protection at all. \"Is there?\"\n\n\"Of course not.\" The engineer, agitated, dropped her silverware on the deck. \"Goddamn it, that little fiver hag!\" She found the seat at last and nearly fell right off, her hands spread impotently. \"I don't even know how the fuck to insult her; she just stands there and pretends not to understand.\"\n\nAh. Pixy set her fork carefully down, her mac'n'hag getting cold. \"Let me explain this to you clearly, Sublieutenant Klonmyre,\" she began, cold and precise. \"I'm interested in eating my dinner, and I'm interested in doing it prior to having to cope with this little bitch-fit you're having.\" Off to the side, diBiase was watching with interest, his head wagging back and forth with the changing fortunes of the conversation. But what happened in the wardroom stayed in the wardroom, so Pixy had no qualms about putting Klonmyre in her place here. \"So sit there, eat your fucking food, and let's have a nice, quiet dinner in peace before you blow it to shit.\" She turned to diBiase. \"Pass the wine, please, Elon?\"\n\n\"Gladly, Pixy.\" Dinner in the wardroom was occasionally on very casual terms, especially when the captain wasn't around. \"Let me pour.\"\n\n\"Oh! So very polite.\" Pixy was still glaring at Klonmyre, but she seemed to have gotten over the worst of it. Which was good; despite her words, Pixy was dying to find out what was going on. \"Thank you so much.\" The wine wasn't up to much, but they were leaving in an hour; they were getting rid of all their shittier product. \"Such a pity that we can't all be so polite, isn't it? Jannelle?\"\n\nKlonmyre shook her head, but at least her color was fading. \"Sorry,\" she managed at last. \"It's just... that little... that person won't stay out of my business.\"\n\nThe food slid down neatly, mellow, rich with cloves on the pasta; ah, heaven. Pixy chewed complacently, closing her eyes amid the steam, and only once she'd washed it down with a swallow of the wine did she sigh and smile gently across the table. She loved a passionate Klonmyre, but not at dinner. \"I take it we're speaking about our new friend Marso?\"\n\n\"I know she's an engineer, and I know she likes being in the engine room; we all do,\" she admitted. \"I mean, that's the point. But dammit, that's my domain down there.\"\n\n\"Correction, Jannelle,\" Pixy tsked, her head cocked. \"That's Captain Reye's domain.\"\n\n\"Either way,\" Klonmyre snapped, \"it's not hers.\" She looked at her plate and began slashing at her food, the steamed white fish nestled among some slivered almonds beside a healthy slice of zhwang.\n\n\"I believe,\" diBiase threw in carefully, \"that Junior Lieutenant Van Kleck is bored. She mastered the helm and nav shit in about twelve minutes.\" He took another sip. \"Let me get you some wine, Jannelle.\"\n\n\"Thanks,\" she said grudgingly, the comfortable rituals of sharing food already starting to do their work; she'd mellowed by at least 70%, Pixy estimated. \"I shouldn't have been such a bitch,\" she allowed.\n\n\"Launch is always stressful.\" Pixy, the steamy haggisy dam broken, was working her way very steadily through her food, savoring every bite. \"I spoke to Marso about her duties, but I'll have another quiet word with her.\" Granted, the fiver had only been around a few days, but already her Fifth Officer duties were beginning to seep through the cracks. Pixy was not surprised that Van Kleck liked to hang out in the engine room. It was best, she knew, to nip it in the bud. \"I'll do it as soon as we're underway, before we rendezvous with the frigates.\"\n\nBesides, nobody fucked with Klonmyre and got away with it, not while Pixy was around. The sooner Van Kleck knew that, the better.\n\n* * *\n\nLaunch was always exciting, with everyone at their assigned stations and the ship, presumably, operating at its best possible efficiency. That meant a bridge crew well-rehearsed and adequately trained, rock-solid navigation and comms, an engine-room gang that could be counted on to be awake and sober, and at last a captain that appeared at least marginally capable of directing everything.\n\n\"Clearance, sir.\" DiBiase was on the mid-beam himself, backed up by vox, listening carefully to the flurry of commands from the Launch Office. \"Fully go for departure.\"\n\n\"Right. Pop umbilicals.\"\n\n\"Sir.\" The supply officer did that, her own usual job; Pixy, at the helm, glanced over as Chief Koster hit the right switches. Good; Koster seemed to be on his game. \"Popped, sir.\" The massive berthing module, floating forever at this lively spot in space that Fleet had designated a Repair Basin, was no longer their home; Pulver was at last relying on her own resources.\n\n\"Thrust to port, 25% power. Then forward at 10% once we clear the berth.\"\n\n\"25% thrust.\" Pixy threw her levers with easy skill, years of duty on helm watch telling her exactly where to put her hands. \"Back off the attitude vents, Clipper.\"\n\n\"Yes ma'am.\" Clipper had been promoted now, Pixy reminded herself, the main man on the helm these days, with Jacobs dead.\n\n\"Sorry. Chief Clipper.\" The helmsman replied with a wan smile; Jacobs had been well-liked, especially by the women who'd paid Amisuul for his services. The berthing module drifted to the right of the viewport, and Pixy gave it an extra five seconds before she put her hand on the throttle. \"All ahead 10%.\"\n\n\"Course?\" Reye was checking the numbers.\n\nPixy let Clipper avoid collisions, the chief's sure hands guiding the ship now. The computer was flooding her with a dozen logarithms, and Pixy watched a moment before she frowned. \"We're four degrees off on yaw, sir, but I'll correct once we clear the Basin.\"\n\n\"Good enough.\" Reye did not seem concerned. \"Just keep an eye on it. That'll mean you'll need to recalculate back from the rendezvous, though.\"\n\nShe turned to stare at him an extra few seconds, letting him know she did not require his hovering. \"I'm aware, sir.\" She turned back, knowing she needed to cool her jets; this was not Captain Crick.\n\nReye gave her a couple of seconds right back before he replied with curt softness. \"I'm sure you are, Ms Pfeiffer.\" She fed the Pulver more power, and there it was: the old, familiar rattle from the port stabilizer, transmitting itself through the entire ship. Smiles broke out across the entire bridge; it felt like home. \"The fuck is that?\" Reye demanded. \"Feels like the stabilizer.\"\n\n\"They try to fix it every time we're in dock, sir.\" Chief della Sera shrugged from beside the weapons station, where he had nothing to do. \"It's been a problem for years.\"\n\n\"Doesn't seem to affect function, captain,\" Pixy soothed. She reminded himself that this was his first command, and his first time taking the ship out. He'd be nervous as a bride on her wedding night. \"The helm guys have always just compensated with the collapser bar.\"\n\n\"Ah.\"\n\n\"Coming up on the sentry ships.\" Amisuul, on the scope.\n\n\"They know it's us, sir.\" DiBiase was still working the mid-beam, and at last Reye seemed to settle back into the seat, relaxing. You never really knew what kind of crew you'd get until they had to actually do something more than watch while the Yard slapped some welds on the hull. \"Cleared,\" he announced after another moment.\n\n\"Great. Might as well do that course recalculation, Ms Pfeiffer.\"\n\n\"Already did.\" She was punching it into the computer as he spoke; she was very intentional in omitting the sir. He needed to back off, but it was probably better than Crick's laissez-faire sense of disdain. She couldn't help but compare the two, and so far Reye was fine. Except for that stupid fucking motto. \"We're squaring away at seventy-eight by ten-one-eight cubed, velocity factor... six? Accelerating now, sir.\"\n\n\"Good.\" Amisuul was giving the captain a pointed glance, and Reye checked the list he'd taped to the arm of his chair. \"Oh. Weapons status red, Mr Amisuul. Until we rendezvous.\"\n\n\"Red, sir.\" Two frigates awaited them out in space somewhere within half a light-year, and it would be Amisuul's job to find them tomorrow once Pixy brought them back into subspace. Let them go weapons green, if they wanted to; the whole little armada would be under Reye's control until the \"terraformers\" returned, so might as well save the power now.\n\n\"We'll go amber after that. The frigates can do what they want.\" Amisuul nodded and traded a quick glance with Pixy; so far, so good. He apparently was not going to crash the ship. Still room for error, obviously, but the Captain Crick bar was set very, very low."
    ],
    "authorname": "Voboy",
    "tags": [
        "spaceships",
        "space fleet",
        "miltary",
        "badass woman"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/dry-no-lube-pixys-choice"
}