{
    "title": "Felicity Ch. 09",
    "pages": [
        "Monday, November 25, 2013\n\nChapter 9. Edie and Allen\n\nThey were both somewhat tall and lanky. Each seemed to be forever smiling. They were both in their late twenties.\n\nHe was the set designer for both the opera and ballet companies, which shared the same venue. She was second violin for both the opera and ballet orchestras.\n\nBoth were gay.\n\nEven though they knew who the other was and orbited the same world they did not personally know each other. That changed after a late summer rehearsal. The season's first opera was a few short weeks away and Allen spent a Wednesday overseeing the erection of the sets while Edie and the orchestra rehearsed the score.\n\nLate that afternoon Allen was painting over the scratches and nicks that inevitably occur when a set is first erected and moved, he though he was alone.\n\nSuddenly an absolutely gorgeous violin air drew his complete attention. It was coming from the orchestra pit. He put his paintbrush down and walked over to it and lay on the floor with his head over the edge and listened.\n\nAllen often picked someone or something to watch for a period of a few days. It was just a quirk but he had made some interesting discoveries doing that. He had done that all of his life.\n\nEdie had been his subject for two weeks. He had yet to notice that was more than twice as long as he had spent on any of his other subjects. It was Edie playing the air.\n\nWhen she was finished Allen asked what it was she was playing. \n\nShe thought she was alone too and was startled by his voice.\n\n\"You scared me half to death! Don't do that,\" she said.\n\n\"Sorry. I was doing some repairs up here and heard that beautiful piece and wondered what it was.\"\n\n\"Thank you but it's just a doodle, nothing special.\"\n\n\"It certainly was special, you better write it down before you forget or I will turn you in to the muse as a very selfish person.\"\n\n\"Come on, it was not that good.\"\n\n\"It was better than good, it was mesmerizing. It made me want to hug the air the notes were flying though.\"\n\nEdie giggled and said, \"That is the best piece of malarkey anyone has thrown at me. Thanks.\"\n\n\"You are welcome although it was not malarkey. You know, you are only the second person to say that word to me.\"\n\n\"Malarkey?\"\n\n\"Yes, a rare word indeed. How did it end up in your vocabulary?\n\n\"My grandfather told me it was more ladylike than bullshit.\"\n\n\"Ah, a wise man indeed. My grandfather told my cousins to say malarkey too but one prefers cow hockey and two prefer bullshit.\n\nHe told me to go ahead and say bullshit so there would not be any misunderstanding. Listen, since I threw such a fine piece of non-malarkey to you could you reward me by playing the doodle again?\"\n\n\"I'll try.\"\n\nEdie began to play and though some passages were the same it was clearly not the same piece.\n\nThey both groaned and Allen said, \"Oh no, you lost it. Aoede will be pissed.\"\n\n\" Who is Aoede?\"\n\n\"The Muse of Song, one of my favorite goddesses.\"\n\n\"Maybe you can get her to help me a little. I am having problems with the score. Believe it or not I have never played it before. In fact I have never seen it\"\n\n\"La Boheme?\" Really?\" Oh wait, that's right. You can't see a damn thing from down there. I have a DVD of it from the La Scala Company. I will bring it to you tomorrow.\"\n\n\"Thanks, that would be nice,\" Edie said as she packed up to leave. \"I am going to be late for a date thanks to your very fine malarkey.\"\n\n\"Oboist?\" Allen asked.\n\n\"How did you know that?\"\n\n\"I have watched her hitting on you the last two weeks. Will there be a video?\" \n\nEdie laughed and gave him the finger.\n\nSomewhere in the space between Edie and Allen the Goddess Klotho, the spinner of the thread of life, was exchanging high fives with her sister the Goddess Aoede.\n\nAllen resumed his repairs of the set with a smile. That had been his most pleasant conversation with a woman in a long time. \n\nA few minutes later he stopped and closed his eyes. In his head he heard Edie's entire doodle clearly. He rushed to the office and transcribed it. \n\nHe was missing a bridge. \n\nAllen knew that it never helped for him to wrack his brain trying to remember anything. The memory would come when it was ready.\n\nEdie went home and got ready for her date. She was distracted by her run-in with Allen. She of course knew all about him she thought. He was a fast rising artist that was reputed to be an expert in all facets of the arts. Some thought he was a genius. \n\nShe had heard that Allen was the first set designer in memory to be admired by his crew, or at least they were not actively plotting to murder him. He treated everyone the same friendly courtesy from the artistic director to the big donors to the carpenters and stagehands. He was reputed to be gay but Edie could not remember anything that would confirm that.\n\nEdie thought he was very good looking, for a man.\n\nEdie had been looking forward to her date that Wednesday night. She was puzzled that it had suddenly become an afterthought.\n\nAllen went home and immediately searched for the La Boheme DVD, found it and placed it on the table by the door so he would not forget it. \n\nHe got ready for his own date, a date he no longer wanted. \n\nFor him the relationship he had carried with his counterpart at the Music Hall had died from lack of interest several weeks before. Allen was sure that he knew that too.\n\nAllen called him and cancelled the date. By the time they finished their conversation they both understood there were not going to be any more dates. It occurred to Allen that the guy sounded as relieved as he was. They did thank each other, it had been nice while it lasted and that had been eight months, a record for Allen.\n\nHe was dressed and free for the night. He was not aware of where he was going until he was parking his car at the most popular lesbian nightspot in town.\n\nHe had many friends in there of course and because he was alone many asked about his relationship.\n\nHe replied that his relationship had been sent out to live on a farm. \n\nAs soon as he said that one of the guys grabbed his hand and pulled him to the dance floor.\n\nThere were gay men in the club each night and they tended to be the more effeminate types, including some very passable transvestites. At times there were some bisexual couples looking for an adventurous woman and/or transvestite to take home. There usually were some straight couples there, most accompanied by a gay friend. It was a fun place.\n\nAllen was a perfectly straight looking and acting male with no outward signs of his sexual orientation unless he wanted to show it. \n\nHe had a very fine \"queen\" persona that he at times used for the amusement of others, and himself. He was a very handsome redhead who dressed well and pretty much got what or who he wanted. He was at ease in any setting, including a lesbian club.\n\nAllen loved to dance and was good at it. He danced with perhaps eight women and two other guys even though he dismissed any chance of an adventure that night. \n\nIt was late in the evening when he again felt himself dragged to the dance floor. \n\nIt was Edie.\n\nEdie somehow knew he would be there and had insisted on stopping by on the way to her date's house. \n\nIt was while Edie and her date were eating dinner that she mentally absorbed what Allen had said to her that afternoon.\n\nHe had watched the woman hit on her for two weeks. \n\nAllen had watched her. \n\nBefore that thought got carried away she mentally added, or her date. \n\nDancing with him was fun, she noted. It did not feel like a mating dance. She smiled at her sudden insight.\n\nAllen and Edie tried ridiculous dance moves on each other and laughed and clowned their way through a long number. When the music paused Edie's date took her hand and danced with her. \n\nAllen waved at both girls and retreated to the bar. While he waited for the bartender it occurred to Allen that he was done for the night and simply left the club.\n\nOn the way home he stopped for a pastrami sandwich and a beer. He was home in bed before the clubs closed.\n\nBefore he fell asleep he denied to his brain that he had gone to the lesbian club in hopes of seeing Edie and that as soon as that was accomplished the rest of the evening did not matter.\n\nAllen was and expert at lying to himself.\n\nEdie was less successful at that. She knew she was done with her date before closing time and asked her date to take her home. She allowed kisses and some groping but as her date drove home that night she kept asking herself what she had done wrong.\n\nEdie knew that had she taken her straight to her house they would be in the middle of passionate sex by now. She knew the night had changed when she danced with Allen. She did not know why.\n\nThe next Thursday morning started with a full run-through of act one. Everyone was very busy. Allen was sitting in a mid-orchestra seat making sure his sets did not overwhelm the performance but were still was an asset to the production. He was seated with his fellow ghouls, the sound director, the light director, the stage manager and their boss the artistic director. \n\nStand-ins stood for the principal singers; the stars would not be coming in for another two weeks. The orchestra did not play. \n\nAs usual for the first run-through there were many details to work out and the usual major disaster. For Allen it meant re-doing one corner of the first set because the lighting made the apartment colors look garish. He also had to come up with a way to provide more depth out of the apartment window. \n\nIt was the first and last set in the opera and it had to look like a dilapidated bachelor pad. It moved easily and silently. Allen was mostly happy with it. He then walked up to the balcony seats and noted a small area over the window had not been painted. He made notes on that. He was still up there when the cafe set was brought out. He saw no problems and walked down.\n\nHowever from the orchestra seats Allen saw the need to highlight some areas of the cafe and move a fountain to allow a coach to get by more easily during scene two. He made copious notes and drawings then went backstage to confer with his crews. He handed out their assignments and sent them home.\n\nThe shouting and movement on the stage had told him they were not going to be able to work on anything that day.\n\nAllen was happy he was not the stage manager; he had a lot of people that seemed to have no clue where on stage they were supposed to be during the second scene. All players were members of the opera and dance academies run by the theater district and were supposed to be familiar with stage directions. They were not. \n\nThe mezzo that would be playing Mussetta was not known for her calm demeanor. She would not be amused.\n\nAllen was about to leave the opera house when he ran into Edie. He handed her the DVD he had brought for her and asked for her DVD of her previous night.\n\nShe laughed and said, \"Believe me, there was nothing of any interest to record. You disappeared early last night, did you have a more interesting project waiting?\"\n\n\"Yes, pastrami on rye.\"\n\n\"Oh, I love that place. I usually eat a corned beef sandwich there and take a Reuben home. That can last me a whole day. I have already run through their menu once.\"\n\n\"Aahh, a girl after me own heart,\" Allen said in an Irish brogue. Would you have time for a loud hamburger across the street? It is almost lunch time,\" he said.\n\n\"Sure, good idea.\"\n\nAcross the street was a Hardrock Cafe, hence the loud hamburger line. They talked and joked around and led the patrons through the chorus of some rock tunes.\n\nEdie suddenly rushed out in a panic telling Allen, \"I forgot the time, I have rehearsal now.\"\n\nAllen suddenly realized that as he was coming out of the opera house Edie was going into the opera house for a rehearsal. His workday was done but hers was just starting.\n\nEven though she had been early to work Edie knew she had no business accepting an invitation to lunch from him. She apparently liked his company but knew to keep her priorities straight. She forcefully kept the question about a possible change in her priorities out of her head.\n\nAllen however refused to believe that she enjoyed being with him as much as he enjoyed being with her. In fact he refused to acknowledge he enjoyed her company. Denial was one of Allen's strengths.\n\nKlothos smiled as she shook her head.\n\nAllen stayed at the Hardrock for a while flirting with the manager who flirted back even though he was married and straight. They were friends. \n\nHe was leaving the cafe when he saw Edie walking towards him.\n\nShe said, \"There was pandemonium in there. We could not hear ourselves. Simon just looked at us, said, \"Nine AM Monday,\" and left.\"\n\nShe had already secured her instrument in her car when she suddenly wondered if Allen was still at the cafe. She had hurried over and was glad to see he was. \n\nShe had no idea as to what she would do or say if he was. He thankfully taken that problem away from her.\n\n\"So, you are suddenly free for the afternoon?\"\n\n\"Well yes, I guess so.\"\n\nAllen walked her to a cab and as they got in he told the cabbie, \"The Ball Park, please.\"\n\nAllen had seen Edie wear the team ball cap often and figured she would not mind. \n\nShe was in fact very pleased indeed.\n\nShe wondered if she was on a date.\n\nThe ballpark was not far from the theater district but he took a cab because it was almost game time. They just made it for the first pitch. They chatted and cheered and learned a lot about each other. By the time their team's massacre was secured by the visiting team they were good friends.\n\nAfter the game they walked back to the theater district and eventually to her car. Edie kissed Allen on the cheek and thanked him for a very good day.\n\nAs she drove away Edie thought to herself that even if it had not been a date she had still enjoyed it more than any she had recently.\n\nAs she drove away Allen said to himself, \"Yes, it was a very good day.\" \n\nAs he replayed the afternoon in his head he wondered if he had just hijacked Edie into a date. He blushed when it occurred to him he had done just that. He would apologize to her on Monday he vowed to himself.\n\nIt never crossed his mind to wonder why she had returned to the Hardrock.\n\nAllen's mind was occupied on Friday morning as he and his crews put the finishing touches on the sets for act one of La Boheme and began the final construction for act two. \n\nHe left for his hometown at noon and spent the weekend there at what turned out to be a rambunctious rehearsal dinner and fun wedding for one his favorite cousins. \n\nIt did occur to him that Edie would have probably enjoyed his weekend too.\n\nThe following Monday Edie and Allen went out of their way to say good morning to each other. They \"accidentally\" ended up sharing a fried calamari appetizer at a Japanese restaurant across from the complex for lunch. They had each searched for each other after their work was done for the day but had not connected. \n\nKlotho had them thirty feet apart but looking for the other in the opposite direction in which they were. She thought that was funny.\n\nTuesday they made formal plans to meet for lunch and after work for a drink. They had chosen places that the members of the company frequented at those times so no one took notice.\n\nEdie and Allen were using that excuse to justify their companionship; they were just following the gang.\n\nIt was at last Friday night but Allen did not seem to be able to drum up any interest in going out. Free weekend nights were rare for him so spending it at home was a major event in itself.\n\nHe decided to do some cooking as he played Puccini Without Words on his CD Player.\n\nEdie had mentioned that she had plans for that Friday night but had hinted he would be welcome to join her. Allen had stopped listening when she said her Friday night was not free so had missed the hint. Not that he intended to ask her out or hope they would accidentally meet someplace, of course.\n\nKlothos showed some frustration but Aoede kissed her cheek and smiled. She had a plan.\n\nAllen lived in a renovated downtown hotel that had been converted into luxury condos. He would not have spent the money to live there if it had not been for his grandfather's best friend. He had inherited it from him. \n\nIt was an easy walk to work for him above or below ground. Since he moved into the condo the downtown area had become a vibrant scene. He was very happy there.\n\nHis immediate neighbors were a gay couple to his left and a lesbian couple across from him. Both of the guys were chefs and they had gotten Allen hooked into the creative process in cooking. It was while staring at the pasta wondering how to finish it that the missing piece of Edie's doodle suddenly came to him. \n\nHe paused to write it down and overcooked the pasta.\n\n\"A small price to pay,\" he said to himself as he threw the pasta away.\n\nHe also burned the rice while he was at his computer trying to figure out how to copyright that piece of music for Edie. He decided he would just dump that task on his cousins Carly's lap. She was a lawyer in a large firm and worked with copyrights. \n\nHe had seen where a bit of arranging could extend Edie's air to about eight minutes. In his head he could hear a refrain and a coda. He knew it would be superb for a string quartet.\n\nHe now knew what he was going to give Edie for Christmas. He would take her to a premiere performance of her work. \n\nIt did not come close to sink into Allen's head that he had just decided to take Edie on a date almost five months into the future and present her with an extravagant gift. It was too good an idea for him to bother with details.\n\nAoede fought back a tear as Klothos kissed her cheek.\n\nAllen had ruined two dinners so he dressed, went to the buildings parking garage, got in his car and again drove himself to a pastrami sandwich and a beer. \n\nEdie was there. She was with an older woman and waved him over. He was introduced to her mother.\n\n\"I was wondering when you were going to get here,\" Edie said. \"We were getting worried.\"\n\nAllen was very quick witted and simply apologized and blamed a minor disaster at work. \"Maybe we should not have skipped out from work to go shopping,\" he threw at Edie.\n\n\"It was your idea, don't blame me if your set disintegrates. I can get a note from my mother,\" she said smugly.\n\n\"Pretty please, one for me too,\" Allen begged her mother who did not seem to be able to control her giggles for a while as Edie and Allen continued their sparring.\n\nAllen ate his corned beef sandwich, (Edie had talked him into one), while Edie and her mother Belinda shared a Reuben. \n\nIt became apparent to Allen that Edie had claimed to her mother that she did indeed have male friends and even a quasi-boyfriend. Allen had become the quasi-boyfriend when he walked in.\n\nHe did not know that when Edie was making such claims it was him that she had in mind. The phone call she had supposedly made to him was to time and temperature. The time had been 8: 49 and the temperature was 79 degrees. \n\nAt that exact time Allen was dumping his burnt rice.\n\nNeither heard Klotho's nor Aoede's mischievous giggling at that exact moment.\n\nFor the rest of the evening Allen and Edie tried to trip each other up adding fictitious details to their relationship for the other to amend or embellish. Her mother laughed at the most outlandish claims but she bought the close friend/possible relationship part. That part rang true.\n\nAllen had been with them for well over an hour when Edie's mother mentioned that she had always wondered about a nearby lesbian club she had heard about. Much to Edie's chagrin Allen piped up and while waving his car keys said he knew just where it was. ",
        "Allen knew that by that time on a Friday night there was little chance they could get in so Edie would not have to do any embarrassing explanations that evening.\n\nAs he drove by the place they could see that the line to get in went on forever and there was absolutely no place to park. \n\nEdie's mother sighed and said, \"Well maybe another time.\"\n\n\"Tuesday nights are good I hear,\" Allen said to her. \n\nAlmost immediately he felt Edie kick the back of his seat. \n\nTuesday nights were the nights of specials for the theater district crowd.\n\n\"That's nice to know\" Belinda said. \"I will call Edie and tell her when I can make that trip. I guess for now I need to go home. \n\nAllen could you take Edie home for me? My drive home is in the other direction and it is late for old people.\"\n\n\"Sure, no problem,\" Allen said, \"Since you have old people to attend to.\"\n\nEdie and her mother laughed and praised his \"truly inspired malarkey.\"\n\nBefore she got into her car she said to Allen, \"I though Edie was fibbing when she told me about her \"boyfriend\" and I am glad to see it was not all imaginary. Yes I know you are not a couple but I also see you care about each other. That is good enough for me, for now.\"\n\nEdie's mother softly kissed Allen on the cheek and whispered to him, \"Please watch over my baby.\"\n\nAllen kissed her cheek and whispered, \"I already do.\"\n\nAfter a big hug and kiss Edie and her mother reminded each other of their love. As Belinda drove away she saw that Allen and Edie were holding hands.\n\n\"Ah, a straw for me,\" Edie's mother giggled. \"How sweet.\"\n\nIt had not been a straw for Edie's mother; neither Edie nor Allen realized they were holding hands until it was time to get in his car. When they released each other's hand they mentally decided they would not stop the other from holding their hand if they wanted to do so, It would be OK they told themselves, they would not really mind.\n\nIt was the best they could do.\n\n\"Where to,\" Allen asked.\n\nEdie looked at her watch and said, \"I have at least two more hours to burn. Drop me off at the club. I can take a cab home from there.\"\n\n\"Why do you have two hours to burn?\"\n\n\"My housemate should be in the middle of a threesome about now. She requested three hours of privacy then I could go home and join them. I have no interest in that so I need to stay out a while longer.\"\n\n\"Interesting,\" Allen said. \"Are you sure you want to go to the club? Even with the VIP pass you did not mention to your mother you have it will take you a while to get in and once in you will not be able to move. Come home with me. We can watch Boheme if the disk is still in your purse. And I have some sweet wine. I can take you home when you are sure the coast is clear.\"\n\n\"You promised Mom you would keep an eye on me didn't you?\"\n\n\"Did not,\" Allen said. He knew he was not telling a lie. He had told her mother he already was. He was somewhat stunned to realize how true that statement was.\n\nEdie smiled as they drove downtown. \n\nShe wondered what the night would bring and decided anything at all would be fine with her.\n\nAoede placed her head on her sister's lap and hummed the melody that she gifted to Edie and Allen. Klotho smiled as she twisted their golden threads a bit tighter together.\n\nTheir first evening together did not go as either Edie or Allen expected. Of course since neither knew what to expect of the evening it was OK.\n\nThe one thing they had not considered at all was that they would have company.\n\nAs they neared his home from the deli restaurant they drove into a heavy rain. He had a parking garage that had an entrance directly into his building so he was not worried about it. When he opened his front door the first thing he saw was his cousin Carly wearing one of his t-shirts. Her hair was sopping wet. \n\nAs he and Edie walked all the way in he saw her fianc\u00e9 Jimmy in the kitchen apparently making hot chocolate. He was wearing one of Allen's gym shorts.\n\nAs was usual for her Carly jumped into Allen's arms and gave him a fierce kiss. She then introduced herself to Edie as Allen's former mistress. Jimmy came over and he and Allen did their air kiss thing and he introduced himself as Allen's former mistress. \n\nEdie could immediately see that they were family and introduced herself as Allen's future mistress, \n\n\"At least for the press releases.\"\n\nCarly was the only one to see Allen blush and smiled knowingly. She gave Edie a hug and whispered, \"Good luck with that.\"\n\nEdie was about to let go of an appropriate line but realized that Carly meant exactly what she said, leaving Edie speechless.\n\nCarly was the only one to see Edie's blush.\n\nEdie was surprised that Carly and Jimmy knew about her. Allen had mentioned her to them during the previous weekend when they attended a wedding. He had mentioned her several times, at length.\n\nJimmy and Allen went to the kitchen to brew up a bigger batch of hot chocolate and Carly joined Edie on the couch.\n\n\"Did people really throw cream pies at each other during the rehearsal dinner last week as he claims? Edie asked.\n\n\"Yes, but just the women,\" Carly answered. \"It has become a tradition in my extended family. The women in our family do not always adhere to the standards of decorum and get a little wild at times. \n\nIt started as a food-fight that erupted between Mom and my aunts during the rehearsal dinner of one of their dear friends who now that I think about it is now my aunt too. \n\nAnyway the dinner had just started but soon everybody was hurling food at everybody. It was a seafood dinner so most of the flying objects were fried shrimp and oysters, and lots of fries. Some caught what was thrown at them, ate half of it, and then threw the remains in the direction it came.\n\nThe men, (being the cowards that they are), slinked out of the room. By the time it ended all the women were laughing uncontrollably.\n\nThey all agreed it was the most fun any of them had in years.\n\nSince then there have been wars of some kind at each rehearsal dinner. The weapons change but they all begin with an altercation between the sisters, Mom and my aunts. The men know to sneak out as soon as the verbal abuse begins although that did not help Allen last weekend. Before he left the room I ran after him and hit him squarely in the butt with a pie.\"\n\n\"Hmm. He omitted that part of the story,\" Edie said. \"I am sorry I missed that. Maybe you can get me an invitation to the next one.\"\n\n\"Done. The next wedding is mine. Jimmy co-stars as the groom. Allen has an also starring in the role as best man. Now that I think about it you were probably going to be there anyway. How long have you been dating?\"\n\nEdie hesitated a bit then explained, \"I don't think we are dating. We just seem to end up in the same places at the same time. Some wildly imaginative force is pushing us together.\"\n\nUnseen in the room, Klotho, the weaver of life's threads took a bow as her sister the music muse Aoede applauded. They nodded in thanks to their father for providing the very localized thunderstorm. They had wanted Allen's second bed occupied.\n\nEdie continued, \"Tonight he showed up out of the blue at the deli where I was trying to convince my Mom that I had male friends and even a sort of boyfriend. I waved at him as if I was helping him find us and when he came over I told him that we were getting worried about him since he was so late. He sat with us and he played the part of my semi-boyfriend perfectly. Mom loves him already even though she is sure we are not a real couple.\n\nWe came here because I did not want to go home tonight, my roommate has multiple companions right now. She is a lot more liberal in her choices for company than I am.\"\n\n\"She has guys there?\"\n\n\"Two guys, three girls. They wanted four girls. I passed.\"\n\n\"Jimmy and I skirted around that world until we found out how intensely jealous I could get. He once congratulated me for not punching out a woman that grabbed his dick at a club.\"\n\nEdie took a closer look at Jimmy and ventured that such events will probably happen again. \"He is very handsome,\" she said.\n\nCarly sighed and said, \"Yeah, he is. Somebody must be looking after me because he is just as beautiful inside.\"\n\nAphrodite joined her cousins and accepted their kisses.\n\n\"How does it feel to be madly in love with someone?\" Edie asked her.\n\n\"Like being in the eye of a hurricane, peaceful with a chance of disaster.\"\n\n\"Sounds like you need Zantac, Valium, and maybe a helmet,\" quipped Edie.\n\nAs they giggled over that line the men presented them with mugs of chocolate and sugar cookies. Edie had a surprise in her chocolate, Kahlua. \n\nShe was informed it was a family thing. \n\nThey talked and laughed well into the night. It did not take long for Edie to be perfectly comfortable with them. Eventually they noticed that somewhere along the way it had stopped raining and it was past two in the morning.\n\nJimmy and Carly announced they were going to bed and after saying goodnight they walked to Allen's studio/extra bedroom.\n\nCarly flipped up the back of her shirt and flashed her naked ass at them.\n\nEdie asked, \"Does she always do that?\"\n\n\"Only since Jimmy. She was a career driven lesbian nerd before that.\"\n\nAllen stood and pulled Edie off the couch. Without releasing her hand he led her to his bedroom.\n\n\"I was going to sleep in the other bed tonight but it is about to get noisy in there. I have an extra big bed so we can share it and use our cell phones to talk to each other.\n\nEdie smiled at the line but when she saw the bed she had to admit it was the biggest bed she had ever seen, bigger than a king.\n\n\"Where did you get this monster?\" Edie asked.\n\n\"Warner Brothers. It was a prop in a movie. And no, I will not sell it to your roommate.\"\n\nEdie giggled and asked him for a shirt to wear to bed. \n\nHe handed her an open mesh shirt with no sleeves.\n\nEdie laughed and asked, \"You wear this?\"\n\n\"Only once at a costume party. I was very put out when I saw three other guys wearing them.\"\n\nHe handed her a dress shirt and pointed at the bathroom. \"Use my toothbrush if you must,\" he said.\n\nEdie made a sound of disgust. \n\nWhen they traded places in the bathroom he noted that she had indeed used his toothbrush. He found himself smiling over that. \"Odd,\" he thought. Why would that make me feel happy?\"\n\nWhen they went to bed there was probably a mile and a half of space between them, twenty minutes later they were about ten inches apart. \n\nEdie kissed Allen softly on the lips.\n\n\"Thank for keeping an eye on me. I will tell Mom you are on the job.\"\n\n\"Keeping an eye on you may be my easiest job.\"\n\nEdie leaned over towards him and kissed him again.\n\n\"What was that one for?\"\n\n\"No reason. I just wanted to kiss you.\"\n\nEdie looked at him and said, \"It's your turn to kiss me for no reason.\"\n\n\"You want me to kiss a girl?\"\n\n\"Yeah, it is really fun. I do it all the time.\"\n\nAllen leaned towards her and kissed her, then kissed her again. They were not quick pecks on her lips but they were not the kisses Edie was hoping for. His third kiss was interrupted by a primeval wail.\n\nAllen and Edie started laughing and Edie rolled over away from him onto her side and backed up to him. She took his upper arm and draped it around herself. He snuggled to her and kissed her hair until another wild sound joined them.\n\nEdie giggled and said, \"It must be nice to have what they have. They are not holding anything back from each other. Especially not the screams.\"\n\n\"There is one more, the duet,\" Allen said.\n\nSure enough about five minutes later first Carly then Jimmy announced that all was well in the world.\n\nEdie and Allen softly chuckled and went to sleep.\n\nWhen Edie awoke the next morning she noticed that Carly was again wailing then noticed that Allen's very erect dick was wedged between her ass cheeks. She wondered if he had done that on purpose or if it was just the normal morning woody she vaguely remembered men woke up with.\n\nAllen was asleep. Edie debated in her head whether she was relieved or disappointed and did not come to any conclusion.\n\nThe sounds of soft footsteps got her out of bed. She again used Allen's toothbrush and went out to the living room. Carly was fishing out hers and Jimmy's clothes out of the dryer. She was nude.\n\n\"I'm sorry Edie, I did not mean to wake you up.\"\n\n\"No problem, I love to hear you sing,\" Edie said.\n\nCarly blushed from head to toe.\n\n\"Its not my fault. That man in there, he's, he's....\"\n\n\"Good?\"\n\n\"Yeah, that's the word. Real, real good.\"\n\n\"Do you realize that when you think of him your nipples want to go find him?\"\n\n\"I did not know it was that obvious.\"\n\n\"Well it is now, you are naked.\"\n\n\"Humm, do you like my nipples?\"\n\n\"Yes, I do.\"\n\n\"Would you like to kiss them?\"\n\n\"Maybe later, when Allen is not standing behind me.\"\n\nBoth ladies burst into giggles and Carly hurried back to the other room to get dressed.\n\n\"Does Carly tease you like that often?\"\n\n\"Only since Jimmy. Let me start the coffee. Would Cafe DuMond be OK?\"\n\n\"Better than OK. I'll go get dressed.\"\n\n\"Are you leaving right away?\"\n\n\"Well no. I just figured you needed to do things today and I wanted to be ready so you could take me home when you are ready to do those things, today.\"\n\n\"I wont be ready to take you home until after I cook you breakfast......... and lunch. I will be ready then. But we might go out to dinner then I will probably be ready to take you home. \n\nOh. Wait, sorry, I did not think this through. Do you have something you need to do earlier than that? Today?\"\n\n\"No. Your schedule is fine with me.\"\n\nBoth stared into the each other's eyes and could hear their own hearts beating wildly. Each wondered exactly what they had just agreed to do. They each heard themselves babble but neither picked up that the other was babbling too.\n\nAphrodite kissed her cousins goodbye. Her work was done.\n\nCarly and Jimmy exited the bedroom fully clothed and Jimmy saw that Allen had been distracted in the middle of making coffee, he and Edie were just standing there with goofy smiles on their faces.\n\nJimmy took over the coffee making and got Allen's attention long enough to get him to prepare toast.\n\nCarly took Edie's hand and pulled her into Allen's bedroom. They sat on the bed and Carly gave Edie a soft, sweet kiss on the lips. She whispered in her ear, \"Welcome to the family. I can promise you that all of us will love you.\"\n\nEdie sputtered, \"But, but, I ,we, Allen, we,,,,,\"\n\n\"Are crazy in love with each other. Yes, that is easy to see. And yes, I know it's scary as hell. But for the two of you it is a done deal so you may as well go from there. \n\nYou can take a few weeks if you like but you already know the love of the rest of your life is in the kitchen trying not to burn toast. \n\nHe does not know that you have already changed his life. \n\nHe does not know that he would rather eat a car bumper than disappoint you in any way. Actually he probably knows that already.\n\nI got lucky, Jimmy and I knew in less than twenty-four hours. I have aunts and cousins that have taken over a year to figure it out. We make fun of them.\n\nTwo of my aunts and my Mom firmly believe that women have to slap men into their senses and just tell them who they really are. \n\nIt really does not matter what you do to make Allen realize what you are to him. You may scare him and he may run away but he will return. \n\nDeep down he already knows.\"\n\nEdie looked at Carly and suddenly began to sob. Carly hugged her and kissed her cheek. \n\nEdie said, \"I think I am going to need a helmet. Got any Valium?\"\n\nThey giggled and hugged. \n\nThey heard Jimmy shout, \"Coffee!\" and returned to the living room.\n\nAoede wondered if Klotho had guided Carly in that speech. She said no. Aoede then understood why Carly was one of Klotho's very favorite humans.\n\nThe coffee was perfect and the toast was edible.\n\nSoon Carly said, \"It's time to go home. \n\nAnd get naked. \n\nIt's Sunday.\"\n\nAs soon as they left Edie asked Allen if what Carly said was true.\n\nAllen said, \"Yes, it's true. If they have chores or shopping or feel they need to go to mass that is all done in the morning. \n\nAt one in the afternoon their clothes come off and do not go back on until they dress for work Monday morning. \n\nSex happens. Often.\n\nThey will not dress for close family members so if we end up going to see them some Sunday afternoon be prepared. We may do that sometime since they have a beautiful yard and a big beautiful hot tub.\n\nThey do put on robes for regular visitors but for some reason Carly has already decided you are family so don't expect that consideration. \n\nNo they wont have sex in front of you but you may hear them. \n\nOh, sorry. You already have.\"\n\nThey laughed as Edie helped Allen clean up the kitchen. They took their refilled coffee mugs into the living room and sat on the sofa close to each other listening to his Puccini Without words CD.\n\nEdie felt Allen fidget when the music got to the Mimi aria. She looked at him and saw tears falling from his eyes.\n\n\"You are such a beautiful man,\" she said to him and kissed his lips and his tears.\n\nKlotho now understood why Allen was one of Aoede's favorite humans.\n\nAllen apologized for his lack of manliness.\n\nEdie giggled and said, \"It has nothing to do with manliness. You simply feel the beauty of the music more than most people. Mom is like that, she cries every time she hears Clair de Lune.\n\nFunny, I used to be like that until I started playing. Now I am more concerned with the fingering than with the music itself.\"\n\nAllen smiled and said, \"By fingering I assume you mean on the strings.\"\n\nEdie immediately jumped on him and tried to gently rip his head off. That attack quickly turned into an embrace then to a soft kiss. Edie finally got the kiss she wanted from Allen. They looked into each other's eyes and smiled.\n\nEdie got off his lap and as she walked to the kitchen for a coffee refill said, \"By the way, you can kiss me anytime you want to, and you may as well. I am going to kiss you anytime I want to.\"\n\n\"Good to know,\" Allen said.\n\nHe was confused, conflicted, on edge. \n\nHe was ecstatic and terrified. \n\nHe felt as if he was falling. Up. \n\nHe wondered if pastrami had side effects. \n\nHe decided not to decide. He needed a better handle on things.\n\nHe really did not have much time left to do that. Edie had already decided that at one that afternoon their clothes were coming off.\n\nIt was well past noon and Edie and Allen were in the kitchen preparing lunch. They had both already agreed that cooking together was fun and had discovered that they worked in the kitchen smoothly . \n\nEdie had quartered some new potatoes and was smothering them in olive oil, rosemary, and black pepper in a bowl. Allen had thinly sliced skinless chicken breasts and as soon as Edie took the potatoes out of the bowl he put the chicken in the same oil and added lots of garlic to the mixture.\n\nEdie found a cookie sheet she needed but not the aluminum foil. She was about to ask Allen about its whereabouts when she noted the time.\n\nAphrodite again joined Aoede and Klotho. Aoede's daughter Erato joined them, she liked to watch.\n\nIt was one o'clock. Edie washed her hands then removed all of her clothing while still in the middle of the kitchen then walked into the bedroom and laid them on the bed. As she returned to the kitchen, acting like there was nothing amiss, she asked Allen where the aluminum foil was.\n\nAllen was catatonic, unmoving, his brain had short-circuited at the sight of the naked Edie. Somehow his misfiring synapses convinced him that staring at the nude Edie was against the law, but he was helpless, he could not look away. He expected a short trial and a long sentence.\n\nEdie pointed at the clock and acted as if she was hurt by the fact that she was the only one naked after one in the afternoon on a Sunday. ",
        "She asked Allen if he needed help. He whimpered some gibberish so Edie volunteered to help him. Allen raised his arms as Edie pulled his t-shirt off. She kissed him and that seemed to help some, at least he returned her kiss.\n\nEdie then knelt on the floor and pulled down his gym shorts. Edie was very happy to see that he had a very erect dick. She kissed it, the first cock she had ever kissed. Allen flinched and seemed to have returned to some version of reality. Edie took his garments to the bedroom and when she returned to the kitchen she again asked him for the aluminum foil. \n\nFrom somewhere in his jumbled mind Allen connected aluminum foil plus location and got it for her. Edie spread out the potatoes and chicken on the foil covered cookie sheet and put it in the pre-heated oven. \n\nAllen had tried to help but he did not seem to be able to control his hands. One of them clumsily tried to help Edie close the oven door as the other unconsciously caressed Edie's ass. That hand brought a smile to Edie's face and led to her decision to go ahead and slap him around.\n\n\"We have about twenty-five minutes,\" she said to Allen as she took his hand and led him to the bed. She placed Allen on his back and straddled his hips.\n\nEdie said, \"You have a nice size dick so this may take a while. Wait for me as long as you can but don't worry about me. We have lots of time to perfect this.\"\n\nIt did not take as long as Edie feared, her pussy was as lubricated as it had ever been and her favorite dildo had already blazed a trail for him. In less than two minutes she had arrived at a comfortable angle and pace and in less than ten minutes she was engulfed by her best orgasm in recent memory and her first with a man.\n\nShe continued to slide her pussy over his dick for a while as she kissed him hungrily. She felt his cum ooze out of her pussy and smiled. He had done his best for her.\n\nEdie rolled off Allen's body and pulled him back to the kitchen and he joined her in the preparation of a salad. Their naked bodies were in contact with each other through out the preparation and many quick kisses and a few long drawn out kisses were exchanged.\n\nThey checked on their food and turned the oven off but left their lunch inside, a decision that would turn out to be in error.\n\nThey ate their salad and stared at each other with wide grins. They fed each other. They kissed.\n\nAllen spoke his first coherent words in nearly an hour. \"What the hell happened to us?\"\n\n\"Apparently we fell in love two weeks ago,\" Edie said. \"Carly pointed that out to me and told me that I should slap you around until you realized it. Consider yourself as having been slapped around. However it will happen several more times today, whether you need it or not.\"\n\nAllen kissed her lips and said, \"You are the most beautiful woman I have ever seen. Seeing you naked was just stunning.\" \n\nEdie said. \"Yes, you did seem stunned. I loved seeing that, I was afraid I was just going to make a fool of myself.\"\n\n\"No, the fool was me. I was too scared to admit to myself what you already knew. I knew it last week while I was driving to my hometown for my cousin's wedding. I wanted you with me.\"\n\n\"So on our first real date you wanted to involve me in a cream pie fight.\"\n\n\"No. Yes, you would have loved it and you would have had the chance to announce who you really were, with a pie.\n\n\"And just how would that have worked?\"\n\n\"The guys were at the bar waiting for the ladies to emerge from their war. As they neared us all the ladies that had a man waiting for them plastered a pie on their crotch then ran away. \n\nA couple such attacks came as announcements of intent, we did not know the extent of the relationship until the boyfriends crotch was covered in cream pie. My crotch was clean, I really missed you then.\"\n\nEdie almost burst into tears but managed to confine it to a single drop. Allen kissed it then kissed her lips.\n\nEdie's hand caressed its way down to Allen's cock and found it very much ready. All of Edie was definitely ready. She stood and hand in hand they again walked back to the bed.\n\nShe lay on her back and opened her arms and legs to him. She moaned as he slowly sank his cock into her and when he was completely buried in her he began to shower her with kisses.\n\nHe paused, smiled at her and said,\" You know, this thing about being in love with a girl isn't so bad. It could work.\"\n\n\"Funny, I was just thinking that. Not the being in love with a girl part. Been there, done that, got the t-shirt. It never worked out for long but then I never expect it to. Being in love with you feels to me like a forever deal.\"\n\nAllen gave her a few more promissory kisses and said, \"I have a confession to make, I love you.\"\n\nEdie pulled him down by his neck and crushed their lips together. When the kiss ended they were somewhat surprised to find themselves in mid fuck. Their pace and their passion escalated rapidly and they were soon at the edge on an abyss and after a few torturous moments took flight together. They heard each other announce their bliss and smiled.\n\nAs they cuddled they kissed tears off each other's face and with their bodies still fully entwined they fell asleep.\n\nAphrodite excused herself and left her sisters. They knew she was in search of Ares; she was horny. Of course, Aphrodite was always horny.\n\nWhen Edie and Allen awoke about thirty minutes later they found that their lunch had turned to parchment and they were hungry. They debated on whether to break their new \"Nude Sundays\" rule on the very first Sunday and decided they needed to do so.\n\nBut it was not hunger that led to that decision. Allen had asked Edie if she wanted to go ahead and move in with him. Allen had reasoned that if Edie was with him he would worry less about the \"too good to be true\" syndrome. He had also noted that he could not go very long without kissing her.\n\nHe babbled to Edie something about her inconvenient roommate, babbled again to assure her that he would not be the inconvenient roommate and that anyway she could walk to work. With him.\n\nEdie immediately decided that she had already spent her last day at her house and wanted her stuff in Allen's home. She wanted to be with Allen. She wanted him nearby every time she decided she needed to kiss him.\n\nShe did not answer him directly but simply asked him if he had empty boxes.\n\nThey ate take out tacos as Allen drove to Edie's house and packed up everything she needed or wanted into his and her cars. Her roommate was not home so she left her a cryptic note and a check for her share of their next months rent.\n\nHis condo merited two parking spaces but only one was by their elevator door. Allen told Edie that was her parking spot and drove around to his other spot across the lot from the elevator. They disrobed when the last of Edie's stuff was brought in from the cars. Before nightfall they were living together. They celebrated with a slow, loving fuck. \n\nAllen's closet turned out to be less of a problem than either anticipated. It was a big closet and Edie thought her everyday stuff would fit. It was a lot but not an overwhelming amount of stuff. \n\nHe had a lot of stuff but he could easily see that more than half of it was never going to be worn again, they were for his now defunct alternative persona. He wondered how the Salvation Army was going to feel when they found those outfits in a donation box, particularly his lavender suit. He never had the nerve to wear it although an occasional lover of his had. His dresser and closet soon had a lot of room.\n\nWhen his and hers clothes were hung up they still had room in the closet. The bedroom had a second smaller closet that held his formal wear, Edie's formal wear fit nicely in it. They did note that they would need another dresser or a big chest of drawers. Between them they had a lot of underwear and a lot of t-shirts and gym shorts.\n\nWhile re-arranging stuff Edie saw the second bedroom/studio for the first time. It had a standard size bed and a small dresser by one wall. A keyboard, a cello, an electric guitar, and several shelves with sheet music lined another wall. The corner had a desk that held a large iMac and a printer/fax unit. A large canvas was leaning on the third wall. On the wall behind the door there were several un-framed paintings, many on the floor. \n\nEdie put her instrument next to his cello but she put off asking him about the unfinished large canvas. She had peeked under its cover and was intrigued. \n\nThe closet in that room had several items that appeared to belong to Carly and Jimmy. There was also a bra much too big for Carly and a sports coat too big for Jimmy. Apparently there was more than one couple sharing nights with Allen. She put those items on one side of the closet and then their not-needed-at-the-moment stuff, mostly winter garments, on the other side.\n\nDinner was pasta and shrimp and again they enjoyed working in the kitchen together. After dinner they cleaned up the kitchen, did a load of laundry and generally behaved as if they were a long-standing couple. Except that they were naked and he rubbed his face on her tits when it struck his fancy and she squeezed his cock when it struck her fancy. Their fancy struck often.\n\nShe was sitting on his lap as they sat on the couch preparing a list of things they needed, a dresser, another wastebasket, and a small blanket, (Edie thought the leather sofa was way too cold for a naked girl).\n\nA second list of kitchen items was started but abandoned when Edie noticed Allen had another erection. She straddled him on the couch and slid his cock into her. She picked up her note pad and restarted the list but soon Allen completely distracted her by again rubbing his face on her breasts. He loved doing that and Edie loved that he did.\n\nShe put down the pad hugged his neck, and she began a fuck. It was somewhat difficult going because the sofa had too much give for her knees, there was little action between his cock and her pussy. Edie loved the position they were in and did not want to move. She paused for a while and just enjoyed their complete union.\n\nHer body knew what to do. Without Edie's conscious thought her hips began to undulate around Allen's cock. The undulations caused her clit to slide over the top of his dick. Eureka!\n\nEdie was quickly in the throes of rapid-fire cums the third or fifth of which was louder than she intended. She slowed to a stop as she kissed Allen passionately until she felt Allen's cum slip out of her pussy, then she changed into \"I love you\" kisses.\n\n\"How many times can you cum in one day?\" Edie asked.\n\n\"Three to five. It used to be eight just ten years ago, today has already been exceptional.\"\n\n\"How many times today?\" Edie asked.\n\n\"Four, there is the possibility of one more when we go to bed. How many for you?\"\n\n\"I have no idea, way more than ten, more than three just now. Most likely I have already gone past my personal best. Are your cums always silent?\"\n\n\"Not always. I had always considered loud demonstrations to be bad form, for me that is. I enjoy the vocalizations of others and I just enjoyed yours.\" \n\n\"I'm a bit embarrassed by that. If you don't mind I will blame Carly.\"\n\nThey laughed as Edie got off Allen's lap and went to the bathroom returning with a wet washcloth. She gently cleaned Allen's cock then handed him the washcloth as she placed a foot on the couch. Her pussy was completely open for him. \n\nAllen saw droplets of his cum on her thighs and pussy lips but instead of wiping them off he licked them off. He heard Edie's sudden intake of breath so he licked his way to her pussy. As his tongue slid along her pussy lips Edie had another orgasm. Allen kissed his way up her tummy then released her. \n\nAllen was very pleased at his act of bravery; he had licked a pussy and had come out of it with no discernible trauma.\n\nEdie staggered back to the bathroom and returned wearing a hat. \"I could not find a helmet,' she said.\n\nAllen accepted her statement even though he had no clue as to what it meant.\n\nThey finished the lists they were making and settled in to watch TV. They were surprised it was time for the evening news, it was two hours later than they would have guessed.\n\nAfter the weather forecast they turned the TV off, got a glass of water and went to bed. They silently agreed that they were fucked out and immediately settled into spooning position.\n\nEdie said, \"I am so happy this day happened. I don't have to worry about what I am doing with my life. I know my life will be happy just because it will be with you.\"\n\n\"Me too,\" Allen said. I adore you.\"\n\nEdie commented, \"You know, I still can't shake that feeling that some unseen force led us to each other. I owe them thanks.\"\n\nKlotho smiled brilliantly. Erato and Aoede hugged her tightly.\n\n\"It was probably Klotho,\" Allen said. \"Probably with an assist from Aoede. Thank you ladies. We owe you.\"\n\nThank you,\" Edie softly added as she and Allen fell asleep.\n\nKlotho and Aoede suddenly glowed like brilliant stars. A long, long time had passed since the last humans had acknowledged their existence much less thanked them by name. All their sisters were awed by their brilliance.\n\nErato was a bit jealous so she slipped a love song into Edie and Allen's dreams. It did not take long for her to receive her gift of thanks.\n\nThree brilliant stars watched over Edie and Allen's slumber for the rest of their long lives. "
    ],
    "authorname": "jjcolejr",
    "tags": [
        "romance novella",
        "drama"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/felicity-ch-09"
}