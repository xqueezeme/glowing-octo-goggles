{
    "title": "The Twelve Zenati Pt. 30",
    "pages": [
        "Authors note: Hello everyone. I am grateful to MsSensualiT for her continued help to be my second sets of eyes. I hope those of you who enjoy this series continue to do so. ~ellie. \n\nNoah put down the tools and lifted the knife he had crafted. He'd had a solid morning's work out for one small blade, but it was weighted perfectly to his hand. As he went to stand outside in the sun, he glanced at the target and threw without taking the time to aim or adjust his stance. He wouldn't have time for that if it came down to it against the Varangian guard. He would make one for each day he had to stay trapped here and inactive to search for his heart. The knife sailed true, and he heard the heavy thud of sharp steel sinking into the wood. Pleased with the sharp acuity, he called the knife Stevie with a smile and wrapped it in his oilcloth before going to wash off the sweat of the last few hours in the waves that crashed onto the shore.\n\nIt was dangerous to have a forge in this part of the world or even country with tiny hot embers floating from the smokestack. But ever conscious of the environment, the Zenati forebears had built it close to the shoreline where the nearest vegetation was, not the dry bush and scrub notorious to the outback and northern reaches, but rather perpetually damp rainforest.\n\nComing back to the shore, he lay down to soak up the warmth of the late springtime sun. He had done enough thinking and physical labour since his rude awakening this morning, that he felt suddenly bone jarringly exhausted. He tried to will himself to stand up and make the trek back to his cabin, the cabin he had planned to share with Marcella during the gathering, but decided a few more minutes in the sun would not harm him.\n\nWhen he woke with a start, he was home in his bed again. Confused and groggy, he knew someone was in his house again. Not just in his home, but in his bed! He turned his head and laid his eyes on the most beautiful sight he could have wished for. Marcella was there, asleep, naked, and in his bed. He turned his whole body toward her gathering her in his arms.\n\nThe nipples on her breasts were swollen, and they brushed against his chest. Her hips rocked and undulated as they had done when he had made love to her, and he could feel her wet pussy on his leg. Her whole body moved like somebody was making love to her in her sleep and she would occasionally moan sensuously in a husky voice. Irrational jealousy overtook him. He wanted to be the one making love to her not some phantom dream man!\n\nNoah didn't know what had happened to her while she was with the Suebi and then Konrad. He didn't know if he would ever know the whole story. Having his beautiful Kitten with her sexy little body pressed to his and her desiring him, was every dream he'd had since meeting her come true. If this was, in fact, a dream, he was in no hurry to wake up from it. Noah didn't even fight for control as Marcella fluttered her eyes open and began kissing down his body toward his cock. Instead, he rolled to his back and let her do what she wanted just to keep her here with him and for once not argue with her. \n\nNoah knew he was in dream heaven now. The sensuous licking, sucking and nibbling were beyond his memory of her. He saw her fingers drop to her pussy as she began to deep throat him and knew it was his turn. Noah reached over and lifted her hips in the air and placed her pussy firmly over his mouth. Within minutes of using his tongue to tease and titillate her, her body froze and then bucked in his hold as her orgasm racked her body. Noah felt her throat spasm around his cock, and it was the most unbelievable feeling he'd ever had and almost lost control of his own orgasm. He held back by renewing his attack on her pussy, pushing her into the second and third climax before allowing her a reprieve and himself to climax with her.\n\nMarcella's body was twitching spasmodically as if she couldn't make sense of the bliss and the ecstasy overwhelming her body and mind. Her arms and legs were shaking as Noah moved them both so that her head was lying on his chest and he held her close until the spasms changed to smaller quivers and the quivers became an occasional shudder. \n\nNoah watched the woman who ruled his heart fall asleep on his chest. With the satiated glow she now wore, he'd never seen her appear more stunning. As she drifted off to sleep, he gave a contented sigh and closed his eyes as well relishing in the feel of her.\n\n\"Answer your phone dickhead,\" Gideon grumbled as he threw the phone to land on Noah's stomach, waking him up. \"You trying to burn to a crisp out here?\"\n\n\"Piss off, arsehole,\" Noah groaned, trying to cling to the last remnants of his dream. \"It had been so real. He wasn't sure what he would do if he managed to get her back from Konrad and she rejected him even then.\" \n\n\"Must have been some dream,\" Gideon commented. \n\n\"Yeah, just a dream,\" Noah lamented, as he gave up trying to remember it and sat up dusting the sand off his hands and arms before picking up his phone.\n\n\"X needs you,\" Gideon said, looking at his brother curiously.\n\n\"Yeah, I guessed as much,\" Noah stood, gathering the oilskin wrapped knife as he went.\n\n\"Dom's okay now though, right?\" Gideon didn't hide his concern for the Oracle of their table.\n\n\"Yeah, it's nothing like that,\" Noah gave a half-smile that didn't reach his eyes.\n\n\"Then what is it?\" Gideon asked directly. \"I want to help you Noah,\" he let out an explosive breath. Shutting Gen and me out of whatever you are planning will not help you find the answers you're looking for. We always worked best as a team.\"\n\n\"It's not my story to tell, Gideon. You have to trust that I am thinking clearly and in control of my emotions. I will get her back, but I also know it's not a typical adversary that has Marcella right now or that she is there against her will. X and Dom are keeping me close because of the whole Oracle thing, which is unnecessary now that he is recovered. Still, I guess they are making sure I don't go off the deep end again as well. I don't need a babysitter Gid. I need my brothers to back me and believe in me.\"\n\n\"I've always got your back, but you have to let me in to help me to protect it properly,\" Gideon growled in frustration.\n\n\"Okay if a plane took off from a private airfield and didn't log a flight plan how would you go about tracking it?\" Noah asked realising Gideon was probably the one person who would be able to haphazardly guess at the conundrum.\n\n\"Give me date and time, and I'll have the info in minutes,\" Gideon opened his phone to a forum page.\n\n\"Last night between say ten p.m. and one a.m.,\" he said uncertainly. \"Took off from...\"\n\n\"Brisbane and went to a private field between Proserpine and Airlie Beach. The majority are guessing Cannonvale as the closest town,\" Gideon smirked. \"Space nerds. They'll pick up anything in the night sky that hasn't got a known flight plan. E.T. is out there,\" he chuckled.\n\n\"Fuck, where were you at four a.m.,\" Noah groaned.\n\n\"Cuddled up to my beautiful wife as I should have been at that time. Why where were you?\" he asked, lifting an eyebrow and thinking he and Gen needed to keep closer tabs on their brother.\n\n*****\n\nMarcella had made another deal with Konrad when he had come to her the following morning for good or bad. The promise of seeing her sister and finding out what the hell had happened and why she hadn't cried out for help if she needed it had been far too much for her to ignore. She needed to see Jessa, and if she returned to the Zenati, she didn't know if they would let her leave again to rush to her sister's side. She'd caused them a lot of worry over the last weeks with her disappearing acts and as Konrad said, she knew she had seemed ungrateful for all they had done for her.\n\nIt was too late now to voice her concerns or reservations. She'd made her move, and she would have to deal with the consequences of her decisions when they arose. Once she had made her deal, Konrad had immediately flown her to Adelaide. He organised a nurse at the facility where Jessa was being treated to sneak her in and out. He kept to his end of the bargain swiftly, and she knew he would expect her to do the same.\n\nMarcella was surprised when Andrea, the nurse Konrad introduced her to when they arrived in the rear car park, ushered them into a light and airy room at the private clinic. This wasn't what she had expected at all when she had been told her sister was clinging to life. There were no horrifying machines or beeping noises, just a lump in the pristine white bed and a drip hovering over it. She looked at the nurse beside her, not wanting to push any boundaries on this hastily organised visit. \n\n\"You don't have long before rounds start again for the new shift. I have someone covering for me, but still, you need to be quick,\" the nurse said in a whisper.\n\n\"Thank you, Andrea, I appreciate every minute you can give me,\" Marcella whispered back and stepped forward toward the bed. Her breath caught at the sight of her pale and fragile-looking sister. She rushed forward taking her hand and squeezing it.\n\n\"Jessie, it's Marcie. Can you hear me? Please wake up. I don't have much time,\" she whispered. \"Please Jessie,\" she pleaded again.\n\n\"Go away Marcie,\" Jessa croaked. \"Haven't you done enough to me already? Have you come just to make sure the job is complete, by ruining my life entirely?\" \n\n\"Jessa, why didn't you tell me things were so bad for you. I would have come. I would have helped you and the children get out,\" Marcella rushed on, ignoring her sister's words.\n\n\"No Marcie. Listen to what I am saying. I don't need you or want you here. You only ever make things worse. It wasn't enough when you made my life hell at home, so you had to bring it to my marriage as well? This is all because of you,\" Jessa waved her arm around the room. \"Why can't you just do the right thing for once in your life? I never needed you to save me. I was happy, Mama was happy, Olivia could have been happy, but you had to fight all the time. You got me sent here telling everyone who would listen to you our family business. Papa had no choice but to send me away. You got Olivia killed by making her leave home. You left Mama to bear the brunt of all your rebellion. Leave me out of whatever you're planning now. My life has been destroyed because of you trying to save the fake Olivia. There is nothing else you can do to me now.\"\n\nMarcella gasped, fighting back the tears as she stared at Jessa, listening to her rail at her for all of the pain in her life. If Jessa had plunged a knife into her heart and twisted it, she couldn't have hurt Marcella more, and despite herself, she let out a sob when Jessa finished speaking.\n\n\"Tears Marcella? Where were those all the times Papa flogged Mama or me because of what you had done or said to make him mad? Where were those when I was bartered off to keep the family secrets you couldn't? No, you did exactly what you wanted to regardless of the consequences for the rest of us. Just go away Marcella, or I will call security,\" Jessa said tiredly and turned her back on her sister. \"I have lost my children because of you.\"\n\n\"I will get them back for you. I'm a lawyer, you have rights Jessa,\" Marcella promised, her heart breaking and making Jessa turn back with a hard-eyed stare.\n\n\"If you ever go near my children, I will kill you myself,\" Jessa threatened in a sneer, and then pointed to the door, \"Now get out. My sisters are both dead, my father wants me dead, and my children think I am dead. Just go away and let me die in peace.\"\n\nMarcella blinked back tears and left the room with a determination to make things right for Jessa. The words were seared into her mind. Was it true that all of her sisters pain and suffering was because of her? She couldn't deny what her sister said, only that she had never done any of it intentionally. She had fought against her own destiny and dragged her sisters along with her whether they liked it or not. \n\n\"Who the fuck is in charge here?\" Marcella asked in a loud voice as she appeared in the corridor outside her sister's room. Andrea caught her before she could say another word and pushed her into a storage room looking over her shoulder to make sure no one saw them.\n\n\"That was quick. I take it that didn't go well,\" Andrea hissed and shook Marcella by the shoulders. \"This is about more than you and your sister remember. I put my job on the line for you, and neither one of us wants to cross Konrad, trust me on that. Now we have to get you out of here before anyone else sees you and reports you to the authorities.\" Andrea pulled her phone from her pocket. \n\nHer words sobered Marcella. Her deal with Konrad racing to the forefront of her mind. She took a deep breath as Andrea made a call and tried to work out in her mind if trying to fix things for Jessa was worth the danger Konrad would pose to the people who would try to protect her. Images of Noah and his cousin being shot because of her already haunted her mind. Even though she hadn't seen it, she could still conjure the image of the two men crumpled to the ground and lying in a pool of blood.\n\n\"She's ready,\" Andrea said and paused, listening for a long time. \"Yep, helping out one sister to see another, no biggie.\" She ended the call and erased the history before looking Marcella in the eye and explaining. \"Looks like they had more security than I bargained for, so you are about to meet the Farnese Warlords. As far as I know, you were just a girl trying to see her sick sister outside of visiting hours that I helped. Konrad said he would see you again and that you would know what that meant. Are you ready?\"\n\n\"Fuck!\" Marcella swore with anger at having been so stupid as to give herself away as she exited Jessa's room. In hindsight, she could think of a dozen different scenarios that would have been preferable to this. She allowed herself to be guided from the storage room and straight into the path of one of the biggest men she had ever seen. She looked up at him with turmoil in her eyes and was surprised by the answering look of tender understanding. \n\n\"You have been a difficult girl to find, Miss Gambaro,\" Massimo said in his low rumble. \"Let's get you home, shall we? I believe there are a lot of people who are worried sick about you.\" He picked her up, hugging her to his chest, feeling the turmoil going through her and wondering what caused her this amount of distress.\n\n\"I'm not going anywhere until you bring my nephews to see their Mama,\" Marcella pushed out of the big man's arms. \"I don't know how you think she will heal when you have taken the only people, she lives for away from her.\"\n\nMassimo released Marcella and watched as she stepped back with her hands on her hips as she challenged him without fear of reprisals. It was refreshing for Massimo, and he couldn't help but smile at the petite woman who's head barely made it to his chest height. He turned his head and raised an eyebrow at the man in the white doctor's coat beside them. \n\n\"Is there some reason the woman cannot see her children?\" Massimo asked pleasantly.\n\n\"Their grandparents are caring for them and they have refused the request to bring the children to see their mother,\" the doctor said guardedly.\n\n\"I see there is more to that story,\" Massimo grumbled. \"Better for another time perhaps.\"\n\n\"I'll go and get them myself,\" a man almost as large as Massimo stepped forward. \"I'll call Papa on the way and let them know. They may wish to make the call themselves.\"\n\n\"Take Connie, she's more formidable than any of us,\" Massimo grinned. \"Now we have met your requirements, Miss Gambaro, shall we go?\" \n\n\"Not until they're here,\" she crossed her arms belligerently. \"You must think I'm stupid if you think I would trust the world of a Table man I've never met before.\"\n\n\"Then let's find somewhere comfortable we can sit and talk until they arrive, shall we?\" He said as if he had expected this, a small smile curing his full lips, enhancing the twinkle of merriment in his eyes. \"I was warned that you were a difficult woman to rescue.\"\n\n\"Do I look like I need rescuing to you?\" Marcella asked incredulously. \"Whoever told you that shit doesn't know me at all.\"\n\n\"My apologies,\" Massimo chuckled. He coughed as if to stifle his chuckle and then as if unable to help himself, he tilted his head back and laughed loudly, a full-body laugh that brought tears to his eyes. \"My God, you are fantastic, Miss Gambaro. My Connie is going to love you! Let's go and chat while we wait for her to bring the children.\"\n\n*****\n\nOlivia sat as still as stone watching the screen as the video of Marcella's visit to Jessa played on the screen. The cruel worlds of her oldest sister were fed to her by earphones. Guilt ate at her as she knew she had been just as hostile to Marcella in the beginning. Yet she knew without her she would be dead now or in prison. For all she had done and said to her sister, she had never made Marcella look so devastated or like she was dying inside. She had never even considered threatening to kill her if she came near her again.\n\n\"Can I travel now, with the case against Remington over? I mean could I go and see Jessa?\" Olivia asked unsure if that was something she wanted to do, but she had to try and make amends for her role in their disastrous life. She was happy now or at least well on the road to happiness, and she wanted that for her sisters too.\n\n\"We'll be leaving as soon as we can locate Noah who is burning off some steam somewhere after he met with X and Dom,\" Genesis said. \"I think it is Marcella who will need you the most though. She's not responding to any of the Farnese family at the moment. I think being hostage, part of a massacre and kidnapped was already too much then,\" he pointed at the phone. \"I think witnessing a massacre, being kidnapped and being a hostage, was already too much for her, then to add that,\" he pointed to the video on the phone. \"I think she finally ran out of strength to overcome everything.\" \n\n\"No one knows where Noah is?\" Olivia asked with a frown. \n\n\"He's not answering his phone,\" Genesis said. \n\n\"He was going to see Helena about something for sunburn after falling asleep on the beach, and he's probably still with Zanto because you know how Helena is about phones in her clinic,\" Olivia offered. That was just after his meeting in the big house. I can't imagine he went anywhere else where he would have turned his phone off on this property.\" \n\n\"Pack your bag and get to the airstrip,\" Genesis said, moving toward the door. \"I'll find him, and he'll want to leave immediately.\" Genesis jogged to the clinic and rushed past Helena to where Noah sat with Zanto.\n\n\"Fuck! We've been looking for you everywhere. Massimo Farnese has her. Let's go,\" Genesis said and turned to leave again. \n\n\"Wait! What?\" Zanto said, struggling to his feet. He knew what his cousin had said but didn't want to be left behind.\n\n\"I'll bring her back, I promise,\" Noah rushed and followed Genesis. He pointed backwards to Zanto as he left the clinic so that Helena would stop him from doing any more damage to his chest than coming to table meetings had caused.\n\n\"Airstrip, Viv packed for you and Gid has his jet ready,\" Genesis said and diverted to get Olivia. \n\nNoah didn't break stride heading straight to the jet. She was in Adelaide, Massimo had her. Thank God for this circle thing of Xavier's. They'd finished the impromptu video conference not much more than an hour ago, and they'd found her already. He didn't know it needed to be such a secret that all of the tables worked together through the new leaders' bonds of friendship when this resulted from sharing information. \n\nBounding up the stairs to the jet, he barely acknowledged Vivienne. She sat alone in the comfortable chairs in the plane's cabin and immediately turned to the cockpit prepared to co-pilot for his brother. He stopped short when he saw Xavier in the seat going through the pre-flight checks with Gideon.",
        "\"Hey, we'll catch you up on everything once we are in the air,\" Xavier said his voice tense. Even though they all had a pilot's licence in order to get to and from the family properties with ease, Xavier was not a confident pilot always leaving that role open for his brothers and cousins. \"Val should be here any minute. He's the only one Gid trusts with his baby while we talk about what happened in Adelaide. Go sit down Noah. Gen will show you what you need to know. It's a three-and-a-half-hour flight. We have time to talk over everything we know.\"\n\nNoah suppressed a growl of impatience and turned back to the cabin. He could feel the eyes of Vivienne regard him in a measured way that told him she was wearing her doctor persona for this trip. His anxiety immediately rose about what had gone down to put Marcella in Massimo Farnese's pathway when she hadn't wanted the Donati to interfere in her leaving the gallery in Brisbane. He slumped into a chair near Vivienne trying to breathe and find that calm zone he had been forcing himself to live in for the last two weeks since being released from the hospital. \n\n\"She's a survivor Noah,\" Vivienne said gently causing him to look up at her.\n\n\"How much more can she survive and stay sane?\" he asked.\n\n\"How long is a piece of string?\" she asked with a shrug. \"She's the strongest person I have ever met, and in my profession, that's saying something. She will survive this. We will make sure of it.\"\n\nGenesis climbed on board with Olivia and Valdemar directly behind them. Valdemar shut the cabin door threw his overnight bag to Genesis and strode to the cockpit. Noah let out a sigh of relief as Xavier came back into the cabin and everyone silently took their seats for take-off. What the fuck was he going to do if he had to leave these people to be with Marcella. He couldn't imagine not having the comfort of knowing these men would drop everything for him at a moment's notice. No matter how he tried to reconcile what he might have to do to keep Marcella, Noah also knew he would do everything he could to make her accept his family along with him.\n\n\"She went to visit her sister Jessa in the hospital. It didn't go well, and she ran from the room and straight into Massimo,\" Genesis said once the plane began to level out. \"Just remember not to shoot the messenger,\" he handed Noah his phone with the video from the hospital cued. \"Remember we are here for you. Raging at us won't help anyone,\" Gen warned a second time and let his eyes flick to where Vivienne and Olivia sat meaningfully.\n\n\"I get it,\" Noah growled and snatched the phone jamming the earbuds into his ears and dreading what he was about to see. \n\n*****\n\n\"Hello? Marcella?\" A feminine voice interrupted the slight doze Marcella had allowed herself once the Farnese men had left her alone when her nephews had arrived at the hospital.\n\nMarcella blinked her eyes open and found a pregnant woman with an open face looking at her with a sad expression. She was as feminine as the voice that spoke had led her to believe. Her hair curled around her face, and Marcella could imagine her whole face would light up when she smiled, and she would laugh with her entire body as her Aunt used to. Thinking of her Aunt caused another wave of pain to roll through her, and she closed her eyes again, trying to will the tears away.\n\n\"My name's Connie Farnese. I was told you are Marcella Gambaro, soon to be Marcella Zenati if I understand all the gossip properly,\" she said, introducing herself. \"My husband was the big guy who tried to rescue you when you didn't need rescuing. A lot of people have been very worried about you. I believe your other sister Olivia is on her way to see you.\"\n\n\"Olivia is coming here?\" Marcella asked in shock. \"No, it's too dangerous she has to go back! She is safe there with them. You don't understand she's...\"\n\n\"It's okay. We understand, and Olivia is not travelling alone. Your friend Vivienne is with her,\" Connie said, only mentioning the women and not the men who accompanied them.\n\n\"So, the brothers are coming too? All three of them?\" Marcella asked alarmed at the thought. She knew very well that Gideon and Genesis would never let either of the women out of their sight for long enough to fly here alone.\n\n\"Maybe, I get so confused by who is who in the zoo, when it comes to other families. Are they all brothers?\" Connie asked. \"Pregnancy brain, you understand,\" she sighed. \"This little one is almost cooked and should be making an appearance any day now. You know,\" she said conspiratorially. \"I never wanted kids or to be part of a big family like this let alone making one myself,\" she laughed softly. But there is nothing quite like it, and I wouldn't trade being a mother for anything. I'm sorry your mother didn't protect you and Jessa better. Most mothers, like me, are ferociously protective. It was not seeing her children, and believing her husband made sure his parents took them away from her that made Jessa lash out at you like that. You understand that, don't you?\"\n\nMarcella said nothing gulping loudly and unable to fight back the tears any longer. She swiped at her eyes and let out a shuddering breath. Fuck, she didn't cry, she was strong, she was invincible, she was a fucking force to be reckoned with not some teary woman who couldn't face the reality of her life.\n\n\"They will stay with her or someone that will bring them to see her?\" Marcella said, hating that her voice was not as confident as she would have liked it to be.\n\n\"Yes,\" Connie smiled softly. \"I have organised for their belongings to be taken to my home where they will stay until Jessa is well enough to look after them herself. We also told her the information we have from Oscar Gambaro about your father and Uncles plans for the three of you and her husband's part in it. It will take her some time to adjust to the new information, but that's to be expected. I imagine she would not have mistreated you if she were not so brainwashed herself. It will take time, but eventually, you will get your sister back,\" Connie patted her arm, and her eyes mirrored the tears in Marcella's.\n\n\"What did I tell you about getting upset again, Sweet Cheeks?\" Massimo said as he entered the room. His deep voice sounded like a growl even though his expression was pleasant enough.\n\n\"I warned her about my hormones, so it's all good,\" Connie waved him away.\n\n\"Who said I was talking to you?\" Massimo winked at Marcella who frowned at being included in their banter. \"Marcella and I had a moment together at the hospital when our eyes met, and she practically swooned into my arms. Before she started making demands of me,\" he chuckled.\n\n\"And I told you that you scared her and she probably almost feinted not swooned,\" Connie rolled her eyes and turned to Marcella. \"This is my husband, Massimo, he's an incorrigible flirt so do not under any circumstances encourage him, or you will never get rid of him. That was my mistake and look at what happened to me,\" she patted her belly.\n\n\"Pfft, it was the other way around. I had to fight her off with a stick in the beginning until I finally gave in to her womanly charms,\" he grumped. \"She does make the prettiest babies though, and I don't mind all the practising to get that part right,\" he grinned and bent to kiss the top of Connie's head. \"Auro is heading to the airport to pick up our guests, so you have an hour maybe two at the most to prepare and for goodness sakes stop crying you know I can't handle it when you do that.\"\n\n\"Is Carmelo going with him?\" Connie asked.\n\n\"No, he will be home with us in case our baby decides to make an appearance,\" Massimo smiled. \"Shall we go? I have done what you asked Marcella.\"\n\nMarcella nodded and accepted their hospitality. Now that Jessa would have access to her children, she had done all she could. She wished she could see the little boys and hug them and tell them they were loved, but she wouldn't do that after what Jessa had said. She was right, all of this was her fault and who knows maybe Jessa and Olivia could have been happy if she had just given up fighting the inevitable. \n\n\"Okay then help me up before you go, this baby thinks it's a dance party every time he hears your voice and my bladder just can't take it anymore,\" Connie grimaced.\n\n\"Be nice to your Mama, little one, she's the one with all the milk,\" Massimo crooned to her belly as he pulled her from the chair easily and placed a massive hand on her belly.\n\n\"Maybe you would like to use the bathroom too? Or freshen up?\" Connie asked.\n\n\"Thank you that would be great,\" Marcella said softly. \n\n\"Sure, the bathroom is right through there, and once we get home, you can have a shower, and I will find you some fresh clothes to change into,\" Connie gave her a small smile. \"It will all work out Marcella, trust me.\"\n\nMarcella got up and walked to where the bathroom was. It was an average bathroom, nicely appointed. She looked into the large mirror and grimaced. Her makeup was a tear-streaked mess, and the blonde hair was little more than a bird's nest. She would have to face the people she cared about most in the world in less than two hours. She felt anything but strong or capable enough to withstand their judgement with her usual shield of protectiveness around her heart and emotions.\n\nShe had never cried as much in her life as she had in the last few weeks. Olivia had brought her to a messy puddle when she had asked her to stay, and then Jessa had done the same thing by asking her to go. Could she be happy in either case? Could she have been comfortable keeping to her bargain with Konrad to keep them all safe? Once again, she was in someone else's territory and at their mercy because she had no money, no identification, no means of getting away and going into hiding from the world.\n\nAll the way back to Connie and Massimo's home, her thoughts spun negatively with the words of Konrad, her sisters, even the anguished look on Noah's face when she had left him. She couldn't live through doing that to him again. Maybe he would be the one to walk away this time. He had every right to turn his back on her as she had done to him and his family. Maybe Connie would help her, keep her hidden somewhere within the house until they left. \n\nMaybe she should stop being such a coward, own up to her mistakes once and for all and ask them to let her go. She would stop interfering in her sisters lives. She choked back a sob as the hatred in Jessa's voice filled her ears again. It made her remember how hostile Olivia had been in the beginning. When she had forced her way into her sister's life, and she had decided to take her back to Perth no matter what anyone else wanted. Her attempts to help her sister had worked in the end. She could see the love between Olivia and Genesis, so she had relented on forcing her rights as a blood relation to take Olivia home for medical and counselling help. \n\nShe'd been wrong about the Zenati men, even Noah. She hated that he had been shot because of her. That Zanto too, had been wounded, because of her. Most of all, she hated that she would only bring him more danger if she returned with them to Darwin because Konrad would come for her. She did not doubt that. He could play the charming and debonaire gentleman. Still, she had seen the cold, remorseless killer that lay behind that fa\u00e7ade. He played games with other people's lives. While she owed the tables no allegiance, she wouldn't let Konrad harm anyone she cared about as her father and Uncle had.\n\nMarcella resolved to tell the Zenati all she knew about Konrad's plans and ask to be returned to Perth to visit her Aunt's grave and try to piece her life back together. She would need to be strong in the face of Noah's love, but she couldn't let him be harmed because of her. Not him or Olivia. Not even Jessa though Jessa would not thank her for the sacrifice. Instead, Jessa would happily let Marcella go knowing they would never cross paths again. \n\nThe house they had arrived at was beautiful as she had known it would be. She allowed Connie to show her to a guest suite. It was so large it had its own walk-in wardrobe and bathroom. She showered as her thoughts rolled in her head. Connie arrived with clothes that were surprisingly perfectly sized for Marcella.\n\nShe was preparing herself to face the judgment and condemnation of the Zenati, standing at the window of her room. She looked out with growing anxiety for approaching cars when the door behind her opened and slammed closed. She turned to find a small girl in a pretty dress with unruly hair and bare feet leaning against the door and breathing heavily.\n\n\"Hello,\" Marcella said with a grin turning from her anxious vigil to talk to the girl.\n\n\"Hi,\" the girl looked at her with wide eyes. Noise in the corridor alerted them to whoever was looking for her. \"Don't tell them I am here, please,\" the little girl whispered.\n\n\"Okay but you have to tell me why you are hiding if I don't,\" Marcella said, holding out her hand as if making a deal. The girl furrowed her brow and Marcella held up her hand sideways with the pinkie extended. \"Pinkie promise you will tell me why you are hiding here if I get rid of them,\" she said seriously. \n\n\"I don't know what that means, but I promise,\" she whispered back.\n\n\"You hold your little finger up and wrap it around mine, and then we shake to make the promise unbreakable,\" Marcella explained helping the little girl to do it as she spoke.\n\n\"Excuse me,\" a smooth male voice said from the other side of her door. \"You wouldn't happen to have a little girl in there with you, would you?\"\n\n\"That's my Papa,\" the little girl gasped.\n\n\"I'm the only little girl in here although most people stop at calling me short not little,\" Marcella said with a wink at her new friend.\n\n\"Sorry to disturb you,\" the man said and hurried to the next door.\n\n\"You told a fib,\" the little girl whispered.\n\n\"I did not!\" Marcella said indignantly. \"If he had asked me for a pretty girl, a smart cookie, or even a brave girl I would have had to say yes, but anyone can see that you are not a little girl,\" she grinned again. \"Now your turn to keep your end of the bargain. Let's start with your name,\" Marcella smiled and took her hand, leading her back to the bed where they could sit.\n\n\"My name is Concetta Maria Giovanna Farnese, and I am five. Well, almost five,\" she dropped her head, and her shoulders sagged. \"Most people call me Jellybean because my mummy's name is Connie and it gets confusing with two people the same name.\"\n\n\"My name is Marcella, and most people call me Marcie. I prefer my full name, though. What would you like me to call you?\" Marcella asked.\n\n\"I guess Jellybean is okay, but when I meet new people like the ones who are coming, I don't want to be Jellybean. That's just for friends, you know? I don't want to meet the new people coming, and I don't want to wear this dress, and I don't want the Nanny to do my hair, she gets angry and says I wiggle too much and it hurts when she does it. I want Mama to do it.\"\n\n\"I see,\" Marcella nodded in agreement. \"Well, all of that is perfectly reasonable. Now, as your lawyer, you do want me to represent you when you present your grievances to your parents, don't you?\" Marcella asked and found the girl looking at her with a wide-eyed stare. \"A lawyer is someone who acts as a go-between. So as your lawyer, I would tell your parents what you are upset about and offer them a deal. Something like, if you wear the dress they pick out without complaint, your Mama will do your hair instead of the Nanny. We may have to throw in the shoes as well to sweeten the deal,\" Marcella giggled. \n\n\"No sandals just normal shoes I can run and climb in,\" Concetta demanded, as she folded her arms across her chest. \n\n\"A fair compromise,\" Marcella nodded as if treating the whole conversation with the seriousness it deserved. \"Okay, first the shoes to show you are serious and then we will find your Mama and Papa and air your grievances. Lead the way to your room, don't worry as your lawyer, I will protect you until both your parents are present.\"\n\n\"I have two Papa's but one has gone to pick up his friend X-man from the Airport,\" Concetta reported. \n\n\"Well then we will just have to deal with the one that is here and your Mama,\" Marcella said, holding the little girl's hand as they exited her room. They headed up another flight of stairs towards what Marcella realised were the children's rooms in this house given the noise of several high-pitched voices.\n\n\"My brothers,\" Concetta rolled her eyes and tiptoed down to her room with Marcella following her and mimicking her movements.\n\n\"Okay, show me the shoe collection we have to work with,\" Marcella said once the door was closed.\n\n\"Well,\" Concetta opened a vast wardrobe and squatted down in front of a shoe rack. \"These are the ones they want me to wear, but I think these are better,\" she said, pointing at two pairs of shoes. \n\n\"Okay, you like these because you can run, jump and climb in them, do I have that right?\" she waited for the girl to nod and tapped her chin gravely. \"What about those?\" she pointed to a pair of flat-soled Mary-Janes and raised an eyebrow.\n\n\"They aren't as good,\" she said, considering the option.\n\n\"But they are shiny and will look as nice if not better than the sandals, and you will still be able to run, jump and climb in them,\" Marcella countered. \"That might be all the compromise your Mama needs to come to do your hair for you when you have guests, trying to sell the major sticking point.\"\n\n\"I guess, but not the long socks,\" Concetta eyed Marcella as if this was a deal-breaker. \n\n\"No long socks,\" Marcella agreed and pulled a face to show she disliked long socks too. Having found some ankle socks in the drawers and solved the problem of shoes, she tackled the next issue with the same serious negotiating skills she had when she met this stubborn little powerhouse.\n\n\"Now,\" she said, getting to her feet with her hands on her hips. \"Do you want to know a secret?\" Concetta nodded avidly and held out her pinkie as if promising not to tell it. Marcella wrapped hers around the little digit and shook with a smile. \"I want to hide from the guests too, so if you let me stay here with you a little longer, I will use all the tricks I learned having to do my sister's hair when we were little and didn't have a nanny.\"\n\n\"Why didn't your Mama do it for you?\" she asked.\n\n\"My Mama was always very busy looking after my Papa, like the story about the three princesses and the ogre king. I can tell you that story if you let me do your hair. I can even make it look like a princess's hair if you like,\" Marcella wheedled.\n\n\"I'm not a princess,\" Concetta folded her arms across her chest, stubbornly.\n\n\"Gosh, you could have fooled me. You look like the princess in my story who was always getting into trouble. She was a princess though because all little girls are princesses to their Papas. All Papas except the ogre king, because he was mean and rotten all the time. He kept her Mama too busy to do their hair,\" Marcella could see she was reeling in her little friend just as she always had with her sisters. \"Come sit up here, and if I hurt you at all we will go get your mother, and you can hide and protect me from the frog prince who is coming to visit.\"\n\n\"The frog prince?\" Concetta asked.\n\n\"Oh yes, but don't worry he is a nice one, he's not like the ogre king and his brother. He's the type of frog that if the right princess kissed him, he would turn into a real prince,\" Marcella explained. Then she began to untangle her new friend's soft brown hair before continuing the story by starting at the beginning. \"Once upon a time...\"\n\n*****\n\nNoah fidgeted nervously as the car raced from the airport to Massimo's home. He knew that to rush to Marcella and hold her close like he wanted to do when they got there was probably not the best idea, but he wasn't sure he could hold himself back once she was in arms reach. He drew a deep breath. If he had ever doubted the curse was real, the physical and mental torment this woman had given him was enough to convince him. Even the most ardent nay-sayers, including his mother, had to admit his pain was real. ",
        "He had to fight everything in his being to sit still enough not to alert his brothers to his turmoil when they had separated at the airport. When he reached the Farnese house, it took him long minutes to get his body under control enough to step from the car without shaking. He was shown into the front living room, and Noah felt sicker than ever about being face-to-face again with the woman who had walked out on him. No matter how much he rationalised it in his mind, he wasn't sure he would survive her rejecting him again. Only she wasn't there. He could feel her close by, but she wasn't there in the living room where he could see her. He wanted to search the house, open every door and turn over every bed until he found her. Instead, he stood uselessly in another man's house, unsure of what to do next.\n\n\"You're here, good. It would seem that Jellybean and her lawyer have locked themselves in your office and are refusing to come out until we listen to her grievances and make some modifications to how we are raising our daughter. They have requested to speak with all three of us,\" Carmelo said to Massimo doing little to hide his smirk.\n\n\"Jellybean? Our four-year-old has legal representation and is demanding a meeting to list her grievances?\" Massimo was caught between being proud and outraged at his daughter's antics. \n\n\"She's almost five, and I understand that Mr. Noah Zenati is also a lawyer who might represent us in this case,\" Carmelo went on. \"Probably best to go in armed with our own legal mind don't you think?\"\n\nMassimo eyed his brother wondering what the hell he was playing at, but grunted and nodded. He turned to look at Noah, who was shaking his head with a soft smile. Only Marcella could cause this much upheaval after being here only a matter of hours.\n\n\"I have some experience going up against this lawyer. I am sure we can have this sorted out in a few minutes,\" Noah held back his chuckle, wondering what the hell was going on in Marcella's mind. From what he had seen on the tape and heard during their flight and car ride this was not anything like the sad or devastated woman he had been told he would find here.\n\n\"Lead on,\" Mo grumbled, following Carmelo from the room to where Connie stood in front of the office door. She was bargaining with her daughter to come out and meet the guests first, and then they could discuss her grievances.\n\n\"Jellybean, I am here with my lawyer, now open the door and let's hear these grievances of yours,\" Massimo said in a deep rumble. He couldn't help a smile when he heard his daughter explain that the giant one wasn't scary at all, even though he was bigger than anyone else in the world.\n\nIt was his son who opened the door; however, earning him a stern look from his parents even though they knew he would be in on any mischief his sister had thought up. They filed into the room and stood in front of the massive desk and chair that dwarfed the tiny girl sitting and happily swinging her legs.\n\nNoah's eyes immediately sought out Marcella, raking over her and noting the blonde hair and strained look on her face as she did the same to him. \n\n\"The grievances?\" Massimo prompted in a surly tone despite his dancing eyes.\n\n\"I don't like sandals, and I won't wear them anymore, but...\" the little girl held up her hand as if to fend off whatever her mother had opened her mouth to say. \"I will wear these shoes as long as I have the little socks, not the long ones.\"\n\n\"I see, and what else?\" Massimo asked.\n\n\"It hurts when Nanny does my hair. She gets so cranky with me and says I wiggle too much. I want Mama to do it,\" she sagged sadly. \"It really hurts Papa not like when Mama or Marcella do it.\"\n\n\"Is that all?\" he asked again.\n\n\"I get that Mama is sometimes too busy to do my hair like Marcella's Mama always was, so I would like a sister, please. Then we can do each other's hair like she did with her sisters,\" Concetta announced. All three of the parents blinked wide-eyed at Marcella who looked just as astounded by this request.\n\n\"If I may,\" Noah said, looking to the three parents. \"Firstly, good footwear is always important. I think it is reasonable that you wish to protect your feet with full coverage rather than strappy sandals. I'm sure your parents would agree that as long as the shoes fit the circumstance, you would be allowed the ones you are wearing now. However, should you wish to wear slippers or joggers with such a pretty dress they may not be as understanding, and you would have to have excellent reasons for the choice for them to allow it.\" Noah looked at his clients for approval taking the grievances as seriously as Marcella seemed to be. \n\nThe parents nodded their heads in agreement. Concetta and Marcella whispered back and forth before agreeing to what he said as the other adults in the room watched on in amusement. Once Concetta had given her agreement, Noah began on the second point of contention.\n\n\"As for your other grievance pertaining to your hair. Trust me, we all like it best when our Mama can do our hair for us, but I understand you are almost five now and quite a grown-up young lady ready to start school next year. Perhaps your mother could take the time to teach you to do your hair all by yourself, and you could practise on the Nanny's hair. That way, you could show her how not to make it hurt, and when a little sister comes along, you will be an expert at doing hair, and able to help her learn. Little sisters are not made overnight though, and you would have to put in some hard work if you want your parents to try and make one for you,\" Noah said seriously. \"I got two brothers before my parents gave me the little sister I wanted.\"\n\n\"I think that is a wonderful idea,\" Connie said, hiding her own smirk of amusement as once again Concetta and Marcella began whispering to each other.\n\n\"Okay,\" Concetta said solemnly. \"I will meet your friends now.\"\n\n\"Good, we can leave our lawyers here to sort out the details,\" Carmelo said, feeling the tension running between Noah and Marcella.\n\n\"No!\" Concetta said suddenly. \n\n\"Jellybean,\" Massimo growled in a reproving tone.\n\n\"You don't understand, I pinkie promised. I promised I'd stay with Marcella and protect her when the guests arrived,\" she whined.\n\n\"Protect her from me?\" Noah asked with a frown looking from the child to Marcella and back again. \"You don't have to protect her from me. I love her, and it's my job to protect her. She just makes that very difficult sometimes like now. What if I made the same pinkie promise would you trust me then?\" He asked as the little girl seemed to consider what he was saying. Once again, she started a whispered conversation with Marcella before answering him. \n\nMarcella knew it wasn't fair to put the little girl between herself and Noah and relented agreeing that it would mean the same as her pinkie promise and she could go and meet their guests.\n\n\"Okay,\" Concetta agreed and slipped from the big chair walking around the desk and offering her pinkie to Noah with a serious look.\n\n\"I promise no harm will come to Marcella while I am here,\" he said solemnly and took her pinkie in his. \n\n\"No silly, you have to protect her from the frog prince, because he is coming too. He's nice he just needs a kiss from the right princess to turn into a prince though,\" Concetta explained patiently. \n\n\"I see. That is different then,\" Noah nodded. \"None of the men who came with me look like frogs or princes. But I will watch for him,\" he said, holding back his smile until she accepted his promise. Then he stood and looked at Marcella, raising an eyebrow at her while the others left the room and closed the door.\n\n\"Noah, I...\" Marcella held up her hand in front of her, but there was no stopping him as he snatched her to his body and held her close as he kissed her words away. The desperation he exuded wrapped around her and tears came to her eyes knowing that the longer she let this go on, the further in danger she would put him. Yet it felt so right, so good, like a piece of her had been missing, and he had just dropped it back into place.\n\n\"Noah,\" she tried in vain to push her hands against his chest, but he only collected them in his larger ones and held them behind her back as he held her as close as possible until his racing heart calmed.\n\n\"No,\" Noah growled. \"You don't get to be a martyr anymore or make all the sacrifices anymore for people who can't or won't appreciate them. I played your game and did everything you wanted and expected. This time we are playing my game, not yours. I will keep you from rushing headlong into danger again even if that means you hate me in the end. You have no options and no choices this time.\" His voice was barely more than a growl.\n\n\"Can I at least go to my Aunt's funeral and check on my mother before you lock me away from the world,\" she spat angrily. \"Or is this tantrum of yours going to exclude even those basic rights? You don't always get what you want, Noah. Grow the fuck up and join the real world.\" Marcella struggled against him.\n\n\"If you want it enough and you are prepared to fight for it you do. You taught me that with the way you went after the Suebi to clear Olivia. So, prepare for the fight of your life if you intend to leave me again, because I love you and I know you love me and I am sure as shit grown up enough to take you on, Kitten,\" Noah argued back.\n\n\"Don't you get it, that's why we can't be together. You got hurt because of me. Zanto was shot because of me. Konrad will come for me, and he won't care that you are in his way. You have to understand he will kill you if you get in his way. He gave me time to tie up the loose ends of my life, a few weeks maybe a month at most, and by being one of those loose ends, you will be a target for him,\" she sagged the fight going out of her with her confession. \"Let me go, Noah, I am no good for any of you. Not you, or Olivia or Jessa. Just could you please buy me a ticket to Perth, I have no money or ID, and I just want to go home and sort out the wreck my life has become.\"\n\n\"No,\" Noah said evenly. \"I will take you to Perth, Xavier and Massimo have to go there anyway. We will stay while you tidy up the loose ends of your life, and then you will come home where I can keep you safe until Konrad is dealt with.\"\n\n\"No, you don't understand,\" Marcella pleaded. \"You don't know him like I do. He's cold and ruthless, and he has no remorse for the lives he ends. He justifies everything he does, including this stupid game of his. I am the game right now, Noah, and you are doing exactly what he expects you to do.\"\n\n\"It's you who doesn't understand Marcella. We are the cursed ones, the black shirts, the Zenati. We are the ones that others fear to cross and for excellent reasons. Konrad knew we would thank him rather than chastise him for what he did to the Suebi. Still, he made a big mistake taking you, and for the first time in centuries, the Zenati flag is waving its warning to the man who dared to cross us. Trust me, my Father and Uncles are far more frightening to an enemy than Konrad could ever hope to be.\" Noah didn't release his tight hold on her as he spoke.\n\n\"He won't come after you if you just let me go,\" Marcella demanded.\n\n\"Maybe not, but nothing can save him from my family now. He has challenged us in our own territory, and we will answer that challenge whether you are with him or not. So, you shouldn't be there, and if that means I lock you up until it is all over, so be it. , I will not let you risk your life for anyone else again. Even if you hate me for it,\" he admitted sadly. \"I love you Marcella, and I will keep you safe.\"\n\n\"So, I am to be a prisoner then?\" she narrowed her eyes at him.\n\n\"If that is how it has to be to keep you from doing anything else to put yourself in the line of fire, but I hope not,\" he said quietly. \"I need you, and I want you, and I love you, enough to get us both through this.\" \n\nThere was a small knock on the door, and Marcella sagged against Noah as Concetta rushed in. \n\n\"I could hear you yelling and fighting. You promised Marcella would be safe and you would protect her,\" she frowned at Noah as Carmelo hurried in to grab his daughter.\n\n\"Sorry, but maybe you should come out and put everyone's mind at ease. Dinner will be ready soon, then you can take the argument upstairs, and no one will bother you.\" Carmelo looked meaningfully at Concetta.\n\n\"It's okay we were about done here anyway. Marcella just needed to hear me and what I had to say properly this time. Hey Carmelo, what are the Zenati known for? What skills did their ancestors bring to the very first table meeting?\" Noah asked casually.\n\n\"They are the boogiemen, the shadow warriors, assassins who are never seen,\" Carmelo answered quickly and looked at Marcella who looked sceptical. \"Scouts honour.\" He held up three fingers on one hand. \"They are the cursed ones, the dark ones, the...\"\n\n\"That's enough, thanks,\" Noah groaned.\n\n\"The Farnese, on the other hand, are the shining ones, the golden people,\" he winked at her. \"We are the angelic opposite to the dark ones, but we can hold our own against dark forces just as easily as the boogiemen can. You, Marcella, cannot save us all. Sometimes you have to let us save you,\" he smiled softly and picked up Concetta and strode from the room. \"Come and have dinner. You can fight again later,\" he said over his shoulder.\n\n*****\n\nOlivia had asked to go straight from the airport to the hospital to see Jessa. There were a few things she needed to get off her chest, like the fact that she was still alive no thanks to her. Olivia couldn't have been happy being left in her father's house, she would be dead and she sure as shit knew her mother wasn't happy. How could Jessa even think that? Was her life so terribly bad that she would cling to their mother for the small amount of happiness it had given her when they cooked together? The woman needed help and a stiff dose of reality. \n\n\"Gen,\" Olivia said softly as the car arrived at the hospital. \"Can you let me go in on my own please?\" \n\n\"I don't think that is wise. Jessa is not the same sister you knew if she could lash out at Marcie like that,\" Genesis said carefully.\n\n\"I lashed out at Marcie like that when she first arrived in Darwin,\" she sighed. \"It was easy to blame her and believe that she was the source of all our problems and Papa's rages. The thing is Jessa hasn't found her happy yet, or maybe she did and lost it when her children were taken from her. I don't think she gets how wrong Papa and her husband were and how much better life can be,\" Olivia said. \"She never had anyone aside to show her any differently.\"\n\n\"I still don't see why you would need to see her alone,\" Genesis said curiously.\n\n\"Because in her mind, just like mine in the beginning with you, family secrets are just that and not to be shared with everyone,\" Olivia shook her head. \"She's in a bad place, a place I have lived. Just let me do this, please.\"\n\n\"What about Viv? Will you take her with you?\" Genesis tried to compromise.\n\n\"Gosh no, she's a stranger and a doctor, Jessa would clam up tighter than a fishes bum!\" she gasped.\n\n\"Sorry, a what?\" Auro chuckled from the seat where he drove with Gideon beside him.\n\n\"She's a writer and has been coming out with those little gems a lot lately. I think my Aunt gave her a book of simile's or adages or something,\" Gideon chuckled with him.\n\n\"I like that one and very apt for the circumstance,\" Vivienne chimed in taking Olivia's hand. \"Besides, I think she has a point. We can stand outside so she only has to call out of she needs help.\"\n\n\"We're here. Why don't we go and see what kind of mood she is in after seeing her children,\" Auro announced, pulling up close to the entrance uncaring about the no parking signs.\n\n\"Or why don't you and I take the little guys on a Macca's run while Olivia visits with their Mama,\" Gideon suggested. \n\n\"That's doable,\" Auro agreed. \n\n\"If I hear one raised voice Little One, I will be coming in after you,\" Genesis warned, as he gave in to her request despite his misgivings.\n\n\"Thank you,\" Olivia smiled, knowing it went against his nature to let her walk into what could be a volatile situation without him. She walked up to the room with Genesis and Gideon flanking her and opened the door slowly. She was surprised by the sight of three fearful little boys sitting on Jessa's bed quietly and not saying anything.\n\n\"Hello Jessa,\" Olivia said softly into the silence. \"I brought the DNA proof that I'm not a fake, and as you can see, I'm not dead, thanks to Marcie and these men.\"\n\n\"Olivia?\" Jessa whispered. \n\n\"Yes, aren't you going to introduce me to these handsome young men? I am their Aunty, after all.\" She asked pleasantly. \"Or do you plan to threaten me to stay away too?\"\n\n\"Olivia, I um...\" Jessa started to speak, but one of the boys interrupted her.\n\n\"We have an Aunty?\" the middle-sized boy asked his big brother.\n\n\"Of course, you have an Aunty, more than one Aunty. Your other Aunty, Marcella, came and saw your Mum earlier and made sure you got to visit her today. She's the good one,\" Olivia smiled. \"This man here is your Uncle Genesis, and that is Uncle Gideon and Aunty Vivienne. I guess that makes three Aunties. I'm not the smart one,\" Olivia wrinkled her nose, making him giggle, but he quickly covered his mouth to muffle the sound. The action made Olivia sad as she remembered doing the same thing when she was little so that she would draw her father's attention.\n\n\"Alright guys, are you hungry? I know where they make the best burgers and the thickest thick shakes. You can have any flavour you like,\" Gideon said with a wide smile. \"We can even get a sundae for Mama. She looks like she could use some ice cream, she hasn't been well and needs a little bit of rest, by the time she rests up we will be back.\" The littlest boy had immediately looked at his older brother, but the middle child being braver, eyed Gideon cautiously.\n\n\"Jaco can't eat burgers,\" he instructed, pointing to the baby as if Gideon wouldn't know that information. \n\n\"I bet he would like a cookie though,\" Gideon offered.\n\n\"Jessa, Olivia would like to speak with you without an audience. Allow your children the small treat. Tell them it's okay, and they will come back to say goodnight to you before being taken to their new home,\" Auro spoke with authority. \"They know I am the one who brought them to you and that I can be trusted.\"\n\n\"Go with your Uncles,\" Jessa said softly kissing her eldest son's cheek and giving a small smile. Then watched them leave the room as if she might call them back at any moment.\n\n\"I will protect them as if they were my own,\" Auro reassured the two women before closing the door behind him.\n\n\"I will be just outside with Vivienne. Remember what I said Little One,\" Genesis kissed her forehead and left the room with Vivienne, leaving Olivia to speak freely with her sister.\n\n\"They said you were dead,\" Jessa said quietly.\n\n\"They said you were happily married. They lied on both counts. You know who never lied to save her own skin?\" Olivia asked. \"You know who let Mama blame her for everything bad in our lives? The same person who saved my life several times, even though I tried to tell her to leave me alone. The same person who got your kids here today and found them a new home where they won't ever have to be frightened again despite you threatening to kill her. Oh, don't worry, she hasn't been near them and probably never will after that threat, but she did that for you and them regardless.\"\n\n\"That's the problem right there. Marcella does what she wants regardless of the consequences for us. Do you think my husband won't come after them and make them pay for disobeying him by coming to see me? Do you think their grandparents will treat them kindly after being humiliated by Connie Farnese of all people?\" Jessa shook her head. \"As usual, she has just made everything worse.\"",
        "\"For fuck's sake,\" Olivia shook her head. \"Haven't they told you anything about what happened to Papa and Zio, as well as your husband in the last few days?\" Olivia gave an exasperated eye roll. \n\n\"Words, words, words! Everyone has some story, and all I know is what I know in my life,\" Jessa argued back. \"This isn't some fairy tale where the frog prince comes in and saves us Olivia. This is reality, and in the real world, we do as we are told, or we get punished. The end.\"\n\n\"Fine you want proof I have proof,\" she raised her voice and called. \"Genesis, Vivienne?\" Between the two of them, there should be enough video and emailed documents on their phones to prove everything she was about to tell her sister was true.\n\nAs Olivia told her story, Genesis also gathered one of the Farnese into the conversation to speak about the consequences Jessa's husband faced for his part in the whole sad saga of their lives. It took much longer than expected. They were barely close to the end of the tale when the boys returned still quiet and solemn as they walked into the hospital room followed by the two men who had taken them out.\n\n\"You will bring them back tomorrow?\" Jessa asked Auro.\n\n\"Yes, Ma'am,\" Auro responded. \"They will be safe until you see them again, I promise.\"\n\nJessa finally let them go, and the others left Olivia alone with her oldest sister again.\n\n\"Please, Liv, I can't handle any more revelations tonight,\" she held up a hand.\n\n\"Fine, but we will be leaving in the morning. When I say we, that includes Marcella. She will go with us now that she has done all she can for you. Just know that if you need her again, all you have to do is pick up a phone and she will be here,\" Olivia lectured. \"Have a nice life, Jessa. I hope you change your mind about having sisters, for the boys sake if for no other reason. They have their whole lives ahead of them free of violence and anger, if only you will let them take the opportunities the Farnese family will offer you and them. If you go home to Perth and the woman who allowed our abuse without trying to protect us, then you're a fool."
    ],
    "authorname": "xelliebabex",
    "tags": [
        "brothers",
        "dominant",
        "family",
        "sisters",
        "submissive",
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-zenati-pt-30"
}