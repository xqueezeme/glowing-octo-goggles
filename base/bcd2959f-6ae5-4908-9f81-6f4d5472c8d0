{
    "title": "Below & Above: A Fable of Lust",
    "pages": [
        "PART I SUCCUBUS:\n\n---------\n\nIt was not going to work, but fuck if I would admit it!\n\nI planned to continue making believe my students' stories were riveting until she noticed I was ignoring her. She took up far too much of my attention during class for me to volunteer more.\n\nDown that path lay damnation, or at least losing my job.\n\nThe unfortunate part happened to be that I wouldn't lose my job if I talked to her or did the ten thousand sexual things I wanted to her body.\n\nI would not lose my job because teaching college students not to use the passive voice, or to intend alliteration instead of puking it on a page was not really a job to me. I considered it a hobby away from my career of amazing myself stupid by the amount of praise I could collect from literary critics.\n\nMy hobby was also safe since technically she wasn't one of my students. I took roll call a half-dozen times hoping to see after which name she raised her hand, but she never did.\n\n\"You're not like the characters in your stories,\" she said.\n\nHer voice was a Stradivarius violin playing Handel in a moon-shunned field.\n\n\"Excuse me?\" I replied.\n\nI learned after my first book how to say those two words in a way that made them sound like 'Why are you talking me?'. Critics like being insulted; if a writer does not look down at them, they feel cheated. I think it has something to do with not enjoying tearing someone down as much when they put out a bad book.\n\n\"I figured that out from watching you in class,\" she continued. \"There are girls throwing themselves at your feet, but you kick every one of them aside.\"\n\n\"They are my students,\" I pointed out. \"It would be unethical for me to have anything to do with them.\"\n\n\"I'm not your student.\"\n\nI KNEW SHE WAS GOING TO SAY THAT!\n\n\"You're still in my class,\" I answered quickly.\n\n\"I'm in your class because you are in your class,\" she told me with a smile.\n\n\"I need to go,\" I told her standing up and walking around the desk.\n\n\"It's incredible!\" she said standing up. \"Are your characters who you want to be, or who you don't dare to be?\"\n\nShe was between the door and me so I stood still. There was no way I was getting that close to her. The motion she used to stand up was also hypnotizing; everything she did was seductive.\n\n\"What's really your name?\" I asked trying to push some of the discomfort I felt onto her.\n\n\"L\"\n\n\"L is a letter,\" I said reasonably. \"Is it E-l-l-e, or E-l?\"\n\n\"My name is L,\" she replied. \"If you're lucky, someday you'll know the rest.\"\n\nSo much for making her uncomfortable!\n\nL closed the distance between us. I backed away, but the very table I hid behind earlier thwarted my escape.\n\nThe woman was flat-out stunning! \n\nHer hair was strawberry-blonde as if God could not decide between making her a redhead or a blonde so he split the difference and moved on to creating something less beautiful like a star. Her bodylines followed a thoroughbred mare's; slim with obvious strength. The most devastating feature was her green eyes; I'd watched every male in the class stutter when she applied their full force, even the one guy I was sure would have preferred that L had a cock.\n\nMy first smell of her confirmed my suspicions; dealing with L was like fucking a virgin, bloody was an assumed adjective.\n\n\"I've read your books,\" she said standing too close for my sanity. \"They're nothing like your stories. I found the books empty, as if no part of you is in them.\"\n\n\"Books... stories?\" I asked. \"I've only published books.\"\n\n\"I'm sorry,\" she said. \"Let me clarify, I was talking about your erotica. You're not at all like the characters you write about online.\"\n\n\"Oh,\" I said stupidly.\n\nWriting online erotica was another hobby of mine. I started doing it my sophomore year in college hoping to develop my writing skills. The feedback was useful so I kept doing it until I felt ready to tackle the commercial world.\n\nThe critics lauded my first assault on the publishing world as a classic first book. I would have preferred less praise and more sales. I considered it a monumental failure since my aim had been pop rather than something only writers and critics 'appreciated'. I had to re-read my own book trying to find what one critic called 'the bourgeois lamentations of a mediocre middle class'.\n\nThe strictly critical success of my first book engendered me to write a second one that I thought a scathing insult to the cockroaches also known as critics. The main character was a suicidal literary critic suffering from a variety of physical problems that included leprosy, rampant acne, and an underdeveloped penis.\n\n'Heroic' was the worst thing any critic said about it.\n\nI sat in front of my computer for three months of insomnia after that. I never read that third book, and until the reviews came out I didn't know what it was about. The critics had many different opinions about what I tried to say; I made each one feel good by agreeing with whichever cockroach had me cornered.\n\nBy then, the University noticed that a 'beloved' of the elite was slaving away as a TA in the English Department. They offered me a choice of classes that my Master in Fine Arts qualified me to teach. I chose a creative writing class usually filled with freshmen.\n\nStudents fell into several categories in my classes; the easy A's, the couldn't-be Hemingways but tried anyway, the hobbyists, and kids with credits to throw away. There were even the occasional individuals who wanted to wipe my ass in the hope that I would get them closer to the Holy Grail of being published. I let them; I even introduced some to their cockroach relatives.\n\nL did not fit into any of those categories. She never handed in written work or participated in the discussions unless asked direct questions. Until the day she did not leave as soon as class ended, all L ever did was catch me staring at her.\n\n\"I thought you would be different,\" she said. \"More decadently vibrant.\"\n\n\"You're vibrant, L,\" I told her. \"I'm corduroy.\"\n\nI tried to edge by on her left, but she cut off me better than most boxers could have.\n\n\"Take me to lunch,\" she commanded and turned around to lead the way.\n\nI followed meekly.\n\nThere was no avoiding whatever L wanted from me. I did not have the protection of her being my student, not that it would have mattered to the University. My class was pointless, so if I banged a co-ed or twenty, what was the harm? Writers are prone to those kinds of slip-ups, or so I hear.\n\nI could have run but that would have looked even sillier than whatever marks she would leave on me. I brightened thinking I was getting too far ahead of myself, and maybe L only wanted to get to know me better just like the critics I so easily impressed.\n\nIt was not that L intimidated me so much as she was built to overwhelm. Being overwhelmed sounds attractive, until the Category Five hurricane overwhelms your house into the next county. Any hurricane regardless of category would have known better than to tangle with L, which made me wish I were following the hurricane instead.\n\n\"You should have ordered a salad,\" she told me when we sat down at the off-campus cafe.\n\n\"Listen, it's obvious you're going to fuck up my life,\" I told her. \"I have two requests; lay off the burgers with extra bacon, and I'm not watching figure skating.\"\n\nI learned if a woman respected those lines, there was a chance I could escape with my pride.\n\n\"That's a very limited set of demands,\" she said playing the straw across her lower lip. \"Is that all you desire?\"\n\n\"I'd like your lips around my dick,\" I said sarcastically. \"I'm quite fond of the fantasy where I bend you over my office desk and lay some serious pipe into your ass. I admit to quite a few thoughts about handcuffs and your extremities. Hands down though, my absolute favorite is the one where I drink tequila out of your snatch, and wake up twelve days later on a Hawaiian beach wearing a grass skirt and a coconut bra with a tattoo of a burly, biker chick named Sam on my arm.\"\n\nSexual harassment suit, here I came!\n\n\"Why do so many men have that thing with woman's ass?\" she asked me calmly. \"Are you sure you're straight? Although, I find it hard to believe a gay male could write a story like the 'Sunrise On Her Skin'.\"\n\n\"I'm married,\" I said.\n\nSince the disgusting misogynistic bit did not make her flinch, her morality might be a better angle.\n\n\"No, you're not,\" she told me confidently. \"So which is it, Miguel?\"\n\n\"What?\" I asked.\n\n\"Are your characters who you want to be, or who you don't dare be?\"\n\n\"I don't have the genital equipment to be any male character in my stories,\" I told her honestly.\n\nThe last resort of a desperate man; 'I got a little dick!'\n\n\"I'll leave if you ask me to,\" L said quietly.\n\n\"Has there ever been a man who sent you away?\" I asked curiously.\n\n\"One, a very long time ago,\" she admitted with a sadness so deep I could have cried.\n\n\"Is 'Sunrise' your favorite story?\" I asked sighing.\n\n\"I don't have a favorite,\" she told me. \"I treasure all of them.\"\n\nI nodded and looked out the window.\n\n\"Do you remember when the Orlando realizes what Malia means to him?\"\n\n\"Yes,\" she told me. \"You wrote 'A sunrise would never be the same without her.'\"\n\n\"I might dare to be 'someone' with you,\" I told her.\n\n\"Is that bad?\"\n\n\"I'll be no one when you leave,\" I answered. \"A lonelier no one than today.\"\n\n\"I don't leave men lonely, Miguel.\"\n\n\"If we lined up every man who has been with you, I would bet not a single one would agree with that statement. It's probably the only thing they could disagree with you about.\"\n\n\"There was one who made me lonely,\" she said angrily.\n\n\"He regretted it every day for the rest of his life,\" I told her.\n\nShe snickered.\n\n\"You don't have to believe it, L,\" I said. \"But I know it.\"\n\nHer green eyes burned into mine trying to make me take my words back, but like burgers with extra bacon and figure skating I was not budging.\n\n\"You're cheating those poor girls who drape themselves across your shoes,\" she told me with a wicked smile.\n\nI laughed out loud surprising everyone near us.\n\n\"I'm doing them a favor,\" I told her reaching for my burger.\n\n\"How?\"\n\n\"I'm a bad experience,\" I answered around a mouthful of beef and pork.\n\n\"I've been on a few discussion groups; female readers love your stories,\" she said.\n\n\"Women like the romance in my stories, and that I keep the sex nasty enough to inspire some shower-head fun,\" I said with a smirk.\n\n\"You seem disdainful of that,\" she said.\n\n\"Hell no!\" I exclaimed. \"I'd trade each and every one of my books for a successful romance novel. Women are more loyal than critics.\"\n\n\"What about your male readers?\" L asked me.\n\n\"I like the 'more such-and-such type of sex' requests,\" I told her. \"Other than that the male readers come and go, sort of how I moved from sci-fi to horror to romance to impressing the critics with my own meaningless drivel.\"\n\n\"Hmm,\" she said.\n\nWe ate quietly for a few minutes until I cracked.\n\n\"So... what do you like about my stories?\" I asked her.\n\nI had the same chances of not asking that question as not getting a hard-on if L and I happened to fall naked onto the same bed. I guess it was always possible to break my neck on the way down so the odds of not getting wood were better; discounting any engorging effects of rigor mortis obviously.\n\n\"I like the sex,\" she said staring at me. \"Your words made me wet.\"\n\n\"You shouldn't read in the rain,\" I told her. \"Those computer parts aren't as waterproof as they used to be.\"\n\n\"I prefer your darker stories,\" she said ignoring my humor. \"If the little girls in your class read those stories, some would hand in moist panties with their work.\"\n\nI couldn't believe what she did next! \n\nHer hands reached under the table and she moved around in a way that made my lungs burn. L's left hand came up with her panties in it. She reached across the table to give them to me. I took them as if every woman handed me her underwear at some point during a meal. I brought them up to my nose and the bouquet of the finest wine could not have compared.\n\nRose oil, garden musk, and the tartness of remembered heartache!\n\nI moved them around in my hand until I could place a thumb where they had hugged her lips.\n\nMoist!\n\nI rubbed my thumb against the cloth and changed the hand I held them with. Staring into her green eyes, I licked my thumb as I put her panties into my pocket.\n\n\"The man you don't dare to be,\" she said with satisfaction.\n\n-----\n\nI would like to say that we rushed over to my house, stripped, and I proceeded to rock her world with multiple nuclear explosions cleverly disguised as orgasms.\n\nDon't get me wrong, she glowed!\n\nThe problem was I didn't have anything to with the ethereal light that came off her body.\n\n-----\n\nWe somehow made it to my house without any ejaculatory emanations into my underwear, L tried though.\n\nI let her into my car and got attacked when I got into the driver's seat. It felt like L had twelve pair of hands and if I didn't keep one of mine blocking my asshole she'd shove a finger or two in there.\n\nHer lips fell on mine like an avalanche, making me forget to breathe until she moved back to her side of the car. I opened the car door and crawled out coughing. Trying to recover my breath, I wondered if a woman that gave you asthma was rated below or above one that required a morning-after dose of penicillin.\n\n\"Are you okay?\" she asked sweetly.\n\nBy that point, I had given up on the word 'no' coming out of my mouth in the general vicinity of L.\n\n\"I just need a minute,\" I coughed out.\n\n\"It's okay to breathe when you're kissing a woman,\" she said helpfully. \"You do know that, right?\"\n\n\"It's been awhile,\" I told her as I got back in the car.\n\n\"Really?\"\n\n\"The opposite of yes,\" I said.\n\n\"What?\"\n\n\"The opposite of yes,\" I repeated.\n\n\"No!\"\n\n\"Exactly!\"\n\n\"Oh,\" she said brightly. \"It hasn't been a while.\"\n\n\"Exactly!\"\n\nI never appreciated the exactness of exactly before.\n\n\"It's no problem if it has been some time for you,\" she told me. \"I'll just blow you in the car. It should give you enough time to recover for when we get to your house and fuck.\"\n\nLuckily, the car was not in gear or we might have slammed into something.\n\n\"We're going to fuck?\" I asked to make sure I had heard correctly.\n\nThe panties signaled her intentions, but there is nothing more comforting than a yes to that kind of question.\n\n\"I'd like to wait until we get to your house,\" she said. \"You're backseat is not big enough for anything more than a blowjob, and even then my ass would be hanging out the door. Not that I mind, if you really need to get off now.\"\n\n\"I think I can wait,\" I told her a bit facetiously.\n\n\"Hmm...\" she said and grabbed a handful of my crotch to check for herself.\n\nIt was in the realm of possibility that I would not have popped my cork with that, but my anti-humiliation instincts kicked in when I felt her hand move in an up-and-down motion. I grabbed her wrist tightly and pried it away. The effort needed to remove the hand had more to do with my body complaining that I was a fucking idiot rather than any struggle on L's part.\n\nI barely managed to save my underwear from a semen stain.\n\nThe car lurched forward when I hit the gas, which was not the direction we needed to go.\n\n\"Relax, Miguel,\" she said. \"We have all night.\"\n\nI put my head against the steering wheel and took a deep breath; my dick gained voice and said that a blowjob would go a long way in calming us down.\n\nAmazingly, I did not encounter a single red light on the way home. There were a few oranges, but none that had been red for more than five seconds and it would have been hard on my brakes to stop for those.\n\n\"I have a roommate!\" I screamed when L tackled me as I opened my front door.\n\nNeighbors would have been a more appropriate worry on my part with the door wide open.\n\nShe ripped my belt open, unbuttoned the jeans, and pulled down my zipper. Her hand snaked into the opening; I was the one that had to work my pants down. She seemed to like the idea so she grabbed my underwear and yanked down. I felt the flutter of nervousness that always came when my dick was exposed to a new woman. As hot as I thought she was and as much as I fantasized about this very scene, my hard-on could only be kindly described as average.\n\nIt was a RAGING average though!\n\nWhen she got my pants and underwear around my ankles, L pounced mouth first on my dick. While not much of an accomplishment, sort of like a cougar pouncing on a mouse, it felt fantastic from my end.\n\nI should have blasted her then, but her tongue was doing this thing where it wrapped completely around my dick and stroked. My impending orgasm was frozen while I tried to figure out how that was physically possible.\n\nI thought that was the best it could get, but L showed me the world she came from.\n\nThe tongue that had been wrapped around my dick licked my balls. I looked up because I had not felt her mouth move away from my dick. L still had me completely in her mouth; I thought that maybe I was hallucinating then felt the sensation on my balls again.\n\nTechnically, a woman having an 'Oh, how cute!' dick sheathed in her mouth and licking a guy's nutsack is not really a big deal. If the size of my dick was the only reason L could do it, I had found the silver lining to my small cloud.\n\nA third pass with her tongue battered down my defenses forcing me to push my hips up. I released a teaspoon-torrent of cum into her mouth and for the first time ever screamed out my relief.\n\nIt was a long hard yell that lasted the entire time she tried to suck more seed out of my body. L finally released the suction and I settled down breathing hard.\n\n\"I can die,\" I said. \"I would really like to die now!\"\n\n\"Not for a long time,\" L said standing up.\n\nI watched entranced as she reached behind her body and pulled the zipper of her dress down. She wriggled her shoulders to get her arms out of the sleeves and let the dress slip down to her feet.\n\nMy eyes closed automatically to protect me from the sight of her naked body. I opened one but closed it again when her beauty hit me.\n\nL was perfect.\n\n\"Aren't you coming?\" she asked.\n\nI opened my eyes and turned to watch her walk up the stairs. The view from behind was as perfect, but I could focus on a perfect ass without losing my lunch.\n\nThe jeans around my ankles made me stumble a couple of times when I followed her up the steps, but I was not going to take my eyes off L's ass. My mind was already planning what we would do in the ten or twelve hours that my mouth would spend plastered to that behind. I figured by then I would be able to handle the entirety of the package without the nauseous feeling.\n\nL caught me by surprise inside my bedroom by turning around. My eyes slammed shut and I felt her place a foot on my jeans.\n\n\"Off,\" she commanded.\n\nI stepped on the back of my shoes to take them off and stepped out of my pants. Her hands guided me to the bed and pushed me on top of it on my back. I opened an eye to take a peek but closed it right away.\n\nIsn't it canonical law that cream skin came with freckles?\n\nHer hand touched my balls and slid up my dick.\n\n\"Up, sweetie,\" she whispered.\n\nI could have told her that was not going to happen, but that my tongue was built for stamina. It certainly worked in the past after I learned how to make up for a quick trigger by licking a woman to pleasure first.\n\nMy dick was in an obedient mood though and rose up proudly; as proudly as a man that has to wear six-inch platforms to feel short can anyway.\n\nI opened my eyes to look down my body in amazement. L took my breath away as she moved into position to mount me. Her body lowered and the tightest, warmest, wettest pussy I had ever experienced surrounded my dick. I prayed a thank you to God that he had not taken me up on the offer to die earlier, because I would have missed knowing what it was like to be inside a pussy made for me.",
        "L shuddered on top of me and released a hard breath.\n\n\"Perfect,\" she said with another shudder.\n\nIt had not happened to me often, as in at all, but I was pretty sure L had cum around my dick. The idea that she was so ready for me that she came upon the initial penetration blew my chest up.\n\nIf a Tarzan yell weren't so undignified, I would have let one go!\n\nThen things got scary.\n\nI'm a writer so I try to be careful with the words I choose; part of that is considering how the context might make words mean something you did not intend.\n\nHere is the present context.\n\nI like to keep my room dark regardless of the time of the day. The writing sometimes goes late into the night and it is difficult for me to sleep with sunlight streaming into the room. For this reason, my curtains are black, and my door is curtained off to prevent light coming in from the rest of the house. I could see in the room, but it was still very dark.\n\nL had cream skin; beautiful, pristine cream skin that a cat would have licked thinking it was milk in solid form.\n\nNow, there are many ways to say things, but I've found nothing really expresses certain sentiments like the ghetto-isms of my youth.\n\nTHE BITCH STARTED TO GLOW!\n\nI don't think women are bitches, but being balls deep in a woman and having her light up like a Christmas tree could shock some crude language choices out of any man.\n\nI wanted to grab L, take her off my dick, and throw her across the room. I tried to do exactly that but found that my arms were stuck to the bed. \n\nI stared at my arms incredulously and tried to lift them off the bed. My dick not wanting to go anywhere was one thing, but my arms should have moved. I tried convincing myself that all I wanted to do was fill my hands with L's breasts instead of get her the fuck off me. It had nothing to do with my mind though; my arms were on the bed to stay.\n\nL's hair rose up and what looked like lightning started dancing between individual strands. Personally, I thought that was a little much; the disobedient arms and glowing body were more than enough to scare the shit out of me!\n\n\"Yes!\" she screamed.\n\nI felt a surge of energy enter my body through our physical connection as another orgasm washed over her. My own hair stood on end as pure pleasure raced up my spine.\n\nThe light coming from L grew brighter, and I tried to yell but my throat was swelled shut.\n\n\"Now, you are mine,\" L said looking down at me.\n\nMy head refused to shake in denial of her words; a second invasion of power flooded my body. I shut my eyes tightly as my orgasm began. Even through my eyelids, the light coming from L was blinding as I came into her.\n\n\"Now, you are mine!\"\n\n----------\n\nPART II INCUBUS\n\n----------\n\nI stepped out of the shower and stood in front of the mirror staring at my body.\n\nWell... I stared at my dick mostly.\n\nThe rest of me was worth more than a cursory glance as evidenced by the way women looked at me now, but the jutting edifice between my legs commanded attention.\n\nI changed since L's entrance into my life months before. The changes happened so slowly that I barely noticed them at first; L's sexual appetite made for a distraction that did not let me pay attention to details. I did not notice growing two inches taller, the twenty-five pounds of fat becoming muscle, my skin tone gaining a luxurious hue, or the hairline making a late inning rally. The cock thing was impossible to miss after a while though, especially since it only 'technically' qualified as a dick when I met L.\n\nAdjusting to L glowing in amorous situations, and invisible hands holding me down while she had her way was easier to adjust to than I would have thought. \n\nI was stunned the morning after my first sexual experience with L, but my housemate removed any thought that glowing or invisible helpers were worse than a rash in a tender place. I walked into my house that afternoon to find a hypnotized housemate in the living room; L was lying naked on the couch flipping through channels. I gave my housemate a look meant to chase him away, which he blithely ignored to continue drooling over the new entertainment center shaped like a gorgeous woman that followed me home and stayed.\n\nL asked for a glass of water. \n\nI figured the vicious chop block I put on my housemate's bad knee to slow him down so I could fulfill her request proved that glowing was not an insurmountable issue. I offered L the glass proudly while my competitor writhed on the ground trying not to whimper.\n\nShe rewarded my victory on the couch. \n\nNormally, I would not have been such an exhibitionist, but the invisible hands did not give me a choice. After that, I accepted that L's minor idiosyncrasies were really none of my business.\n\nIt took three weeks for me to notice that my sexual equipment had become an appendage rather than an add-on.\n\nInitially, I scoffed.\n\nThe angle was different; it is not like a woman on her knees in the shower had sucked me off very often or ever. It REALLY liked L, and IT had never liked a woman so much or so often therefore its enthusiasm could be understood. More sex means a healthier limb was my last stand; I read sex manuals hoping for the impossible, but accepting the common medical stance that a willie does not get bigger.\n\nCancerous growth!\n\nThe thought scared me so I visited the doctor, who finally convinced me that medical science did not account for L.\n\nI prefer female doctors but mine was on vacation so I had to visit one that was not familiar with my limitations. It was embarrassing to explain so I cut out most of the details and settled on 'feeling achy down there'.\n\nThe doctor was lovely in a bookish fashion and focused on making sure she missed nothing in her investigation of what might be causing my discomfort. \n\nShe had a hands-on approach that raised the issue right away.\n\nThe doctor did not alleviate my fears with anything she said, but with her actions. She wrote down notes with her left-hand even though it was obvious she was right-handed. I had an epiphany watching her; the doctor could not take her primary hand off me.\n\n\nI looked down and watched her stroke me to full-size and then continue. I leaned back as her writing hand joined the one ministering to me. My head dropped back a few minutes later as my body surged and shot.\n\n\"Everything seems to be in working order!\" the doctor said excitedly while washing her hands off in the nearby sink. \"You had some buildup, but if you continue to feel uncomfortable come back and we'll take a closer look.\"\n\nBuildup, a proper medical symptom?!? Where was this doctor when my mom caught me spanking it?\n\nBeing male, the situation was well out of hand by the time I decided to visit a doctor so I could only ride it out from that point on. I finally noticed that the change closest to my heart was far from the only one.\n\nStanding in front of the bathroom mirror, I reached down and grabbed what had become a perpetually erect cock. It had gotten bigger since my visit to the doctor.\n\nThe size of the thing was not an easy adjustment to make. \n\nFirst, there were the pants that no longer fit; I was not fond of shopping.\n\nSecond, the thing kept bumping into other things. I could not turn without checking so that I did not knock anything over.\n\nThird, it was extremely unbalancing making me afraid that if I spun around too fast I would go flying like an Olympic hammer thrower that was strapped to their hammer.\n\nBy far, the worst was a certain little known fact that I am sure medical science will someday prove. The male brain and penis share a common blood pool, so a hard-on causes the male brain to run low on processing power.\n\nStephanie Adita proved that to me.\n\nPeople in a college change constantly so my transformation went unnoticed. The professors in my department hated me for the critical success I achieved and avoided me while students are not well known for the attention they pay professors.\n\nStephanie was a freshman that immediately caught my eye. She had a way of swaying her hips when she walked that spoke of how confident she was about her attractiveness.\n\nShe did not think very highly of my creative writing class, and had taken it believing it would be an easy A. It would have been if she had done the required writings. I did not ask for Hemingway; it was enough that students tried as long as they handed the work in.\n\nI knew the drill as soon as Miss Adita asked to meet so we could discuss her grade. It had happened before, and I wondered when students would realize that most professors prepared canned responses to the desperate pleas to save collegiate lives.\n\nI sighed when Stephanie chose the flirtation angle in my office the next day. I could have saved both of us time by handing her the assignment I had for the situation. It was an easy thing; to make up for all the work missed the student had to hand in one large product that equaled the entire required page-count for the semester. My higher level writing class got the offer at the beginning of the semester, but I thought it too dangerous an option for kids that had not realized how powerful the gravitational pull of procrastination was yet.\n\nStephanie flashed her dark eyes at me and gave me a smile that must have melted hearts in high school. I knew she thought a little flirting with the promise of more would get her what she wanted without having to cross any lines.\n\nI had seen the game played before so I ignored the words to study her. Stephanie was a couple of inches over five feet with nice feminine curves. Her dark skin added an exotic touch to a sexy package.\n\n\"So is there anything I can do to bring up my grade?\" she asked huskily.\n\nI noticed the room was a little darker than when she came in, and sighed at the thought of rain.\n\n\"Sir?\" Stephanie asked pushing for an answer.\n\nMy hand rested on top of the assignment that I planned to give her, but instead of handing it to her I stood up. I walked around to her side of the table and leaned back.\n\nI was dressed comfortably in baggy jeans and a button-down shirt. The jeans were one of the few articles of clothing that had survived the changes. The crotch was loose enough to give me freedom, but did nothing to hide it when I was aroused.\n\nStephanie's night dark eyes drifted to the obvious and widened. She sat back suddenly tense and looking trapped. I had never partaken of the hinted offers of the coeds in my classes, but that was about to change.\n\n\"You're going to fail my class, Stephanie,\" I told her seriously.\n\n\"But...\" she started to say but stopped when I raised my hand for silence.\n\nI did not care; I wanted her.\n\n\"You're going to fail my class,\" I pushed mercilessly.\n\nI extended a hand out to her as a lifeline. Her eyes were scared as she put her hand in mine. I pulled Stephanie to her feet, and then tight against my body. Her heartbeat fluttered madly, unsure what rhythm to settle into, as the storm clouds seemed to gather outside my window.\n\nA small part of my brain screamed about losing my job, but hung as another part of my body demanded more blood.\n\nI put my hands on Stephanie's womanly hips and straightened her body so I could press my groin against hers. She opened her mouth to speak a protest that became a heady kiss when my lips touched her mouth. Her fingers dug into my hair as I palmed her ass and pulled her closer. Stephanie broke the kiss so I burrowed my face against her neck. Her hips circled, applying pressure on me as I kissed and nibbled her skin. I spun Stephanie around suddenly and put my hands on her belt. She gasped but recovered fast. She got up on her toes so that she could rub her ass against my desire to be inside her. Her belt came undone easily and so did her jeans. She grabbed my hands as I worked her jeans down, but her body could not decide whether it was to help or hinder.\n\nHer jeans and panties were around her knees when I pressed Stephanie forward. I had an old couch in the office and I made Stephanie kneel on it. She put her head on the back waiting for whatever came.\n\nI stripped quickly and stepped up to Stephanie's ass. Her knees were together hiding her treasure from me. I grabbed my dick and guided it forward until I touched her. I moved downwards until moisture kissed the tip of my dick.\n\nStephanie gasped as I powered forward with my hips. I could only penetrate a couple of inches into her, but it was enough to keep me on point. I grabbed Stephanie's hips, pulled mine back, and fucked into her determined to make her body accept me.\n\nShe was ready for sex so her pussy only protested my size, and not what I was doing with it. Stephanie took most of me, but it was still not enough. I tightened my grip, pulled halfway out, and rammed forward.\n\nHer head came up and she grunted trying to hold in a scream as her pussy convulsed wetly. I held her tightly, riding the waves of her pleasure until Stephanie beached.\n\nI moved, fucking in and out of her slowly, when Stephanie's breathing recovered. She whimpered deliciously as I lengthened the strokes. I looked down enjoying the sight of my cock fucking into one of my students.\n\nStephanie spent a long afternoon earning that easy A.\n\nL walked into the bathroom and wrapped her arms around my waist. I watched her hands move to my erection. She stroked me slowly as she kissed my shoulders.\n\nSomehow, I forgot about L and did not clean up before I headed home from my meeting with Stephanie. L stood up from the couch as soon as I walked in. She stared at me intently, but before I could confess to having been a very bad boy with one of my students she pressed me up against the door. Her hands opened my pants, and she knelt to take me into her mouth.\n\n\"She's not our type,\" L whispered after I had a dizzying orgasm. \"But you should have brought her home for me to play with.\"\n\nStephanie indirectly inspired my fourth book, 'A Small Penis'. Many things had changed since L entered my life, but I could not blame fucking a student on some weight re-distribution, an encroaching hairline, or clearer skin. The thing between my legs, at least the arrogance of having something for which the words dick and cock seemed small to describe, had changed me.\n\nFuck my housemate if he did not like watching L blow me during my favorite TV show! Fuck the university administration if they had a problem with me giving extra credit for sexual favors! Fuck any woman that wanted me was exactly what I planned to do!\n\nThe book was about living with feelings of inadequacy. The critics loved it; after all, who could have possibly related better. The faculty was amused and could not stop giving me looks like I had told them I contracted cancer. It was my best selling book, doing quite well as a gag gift and a favorite parting shot from women towards their newly ex-ed boyfriends.\n\nA new department head was appointed a month after my book came out. He was a smarmy little fuck that reminded me of the worst critics I ever met. I wondered how he got the job without having published anything, until a fellow associate professor showed me some of his old articles.\n\nThe new head had been a famous literary critic.\n\nHe threw a 'get to know my staff' party at his large home. His family left him a sizeable trust fund; unfortunately, they did not leave him the taste or class that should come with old money. L winced as soon as we entered the man's house. I was not surprised she kept her sunglasses on since the colors clashed horrendously.\n\nThe head appreciated a good-looking woman so he spent a lot of his time around L. His favorite word seemed to be 'inadequate', hinting at 'if your man is as inadequate as his book says, I can take care of you'. \n\nThe idiot's wife was an elegant blonde that gritted her teeth and bore her husband's boorishness.\n\n\"You don't actually have a small dick, do you?\" she asked catching me coming out of the upstairs bathroom.\n\n\"Excuse me?\" I asked.\n\nShe surprised me by grabbing the front of my trousers.\n\n\"Hold on,\" she whispered.\n\nHer fingers outlined me slowly and then stroked until she got all of my attention.\n\n\"I knew a man could not write that book and have a dick like my husband's,\" she said heatedly.\n\nShe squeaked in fear when L covered her mouth.\n\n\"Ssshhhhh,\" L whispered. \"We wouldn't want your husband to come looking for us, would we?\"\n\nThe head's wife eyes turned languid as she shook her head meaningfully.\n\n\"This is more our type, Miguel,\" L told me kissing the woman's neck. \"Too bad she's married, or we could keep her.\"\n\n\"Are you ready to go?\" L asked after she finished rinsing my cum down the bathroom sink.\n\nMore amazing than the new body was that I did not hate the rituals needed to maintain it, or at least that I thought were needed to maintain it. After I lost the extra flab, L suggested I take advantage of the school gym with her. At the beginning, my enjoyment had more to do with a naked, sweaty L on my bed afterwards, but within six months I started to enjoy the quiet time I could get working out.\n\nL preferred getting there at 7am and I had no reason to protest anything she wanted. We were stretching on the mats after our workout when she turned to me.\n\n\"Which one of these do you think we should take home?\" she asked.\n\nI raised an eyebrow.\n\n\"I want a new playmate,\" she said smiling.\n\nI studied the occupants of the gym carefully. The department head's wife had not been a one-afternoon thing. L and I fucked her seven ways to Sunday in her husband's bed during the party, and she knocked on my door the next day for more of the same. A few months after our affair started, the department head took her on extended vacation that everyone thought was a last attempt to save their marriage.\n\n\"The one behind the counter,\" I told L.\n\nThe girl was pretty with long brown hair, hazel eyes, and a fit body.\n\n\"No,\" L replied.\n\n\"Why not?\" I asked.\n\n\"Look at her,\" L said moving behind me and grabbing my head. \"Really look at her!\"\n\nI studied the girl again but felt like something was pushing me away from her; a good story with tragic grammar. I shook my head and tried again.\n\n\"Now, look at her,\" L said turning my head towards a girl on a Stairmaster.\n\nThe lights darkened as I focused on the girl. She was one of the few that also enjoyed 7am workouts; watching her tight ass move up and down on the Stairmaster made my workouts pass faster. She had arrived late that morning so I did not get my forty-five minutes with her ass; I had missed those minutes.\n\n\"Smell her,\" L instructed wrapping her arms around my neck. \"Breathe her in.\"\n\nI did what she instructed.\n\n\"Clean, pure,\" L whispered against my ear. \"A touch of innocence with a healthy swath of lust.\"\n\n\"She knows I watch her,\" I said surprised. \"She likes it.\"\n\n\"You're a beautiful man, Miguel,\" L whispered. \"She loves your eyes on her; the thought of your hands on her. She laments that no one is taking advantage of a body she worked so hard to build.\"\n\nThe girl seemed to start glowing before my eyes; not like L who burned with white light, but with a softer orange of desire.\n\n\"She wants you to say hello,\" L told me before standing up and walking out of the gym.\n\nI sat for a few minutes trying to think of what to say. I could not think of anything original or witty so I sighed and got up. I passed her Stairmaster when a touch of the girl's sweat-salted scent froze me. I turned and looked at her.\n\nShe had big blue eyes and light brown hair that she recently cut short. I walked up to the Stairmaster and smiled at her. She pulled her headset off looking at me confused.\n\n\"I like the haircut,\" I told her sincerely. \"It does wonderful things for your eyes.\"\n\n\"Thank you,\" she said smiling widely.\n\n\"It's just an opinion,\" I said returning the smile. \"I have a lot of those about you.\"",
        "\"Like what?\" she asked with a little nervousness injecting itself into her voice.\n\n\"Dear God, don't let her have a man!\" I said desperately.\n\nShe let out a small, sexy laugh and shook her head.\n\n\"That's not an opinion,\" she pointed out.\n\n\"Okay,\" I said shrugging. \"So I have a lot of hopes too.\"\n\nI nodded to her before walking out of the gym.\n\nThere were many smiles over her shoulder as she worked out on the Stairmaster in the mornings after our brief introduction. I noticed her around campus more, and noticed that her pretty eyes always seemed happy to see me. \n\nShe gave me a warmer smile than usual one morning after her workout as she walked by the vendor stand inside the gym.\n\n\"Can I buy you a water?\" I asked before she passed me.\n\nShe stopped and approached the stand to look at the selection.\n\n\"How about a protein bar too?\" she asked hopefully.\n\n\"Anything you want,\" I replied.\n\n\"I like it when a man thinks like that,\" she told me.\n\nThe blonde behind the counter pulled two waters out and rang us up.\n\n\"I'm Susan,\" my Stairmaster girl said as I paid.\n\n\"Hello, Susan,\" I said. \"It's nice to finally know your name.\"\n\n\"You're Miguel, right?\" she asked.\n\nI looked at her questioningly.\n\n\"The machine you work on is reservation-only so you have to sign in for it,\" she explained.\n\n\"Your usual machine isn't, so you had an advantage,\" I said guiding her towards one of the tables.\n\nWe sat down and took a sip of our waters wondering how to continue.\n\n\"You're a professor,\" she said unsurely.\n\n\"Now, that's more than you should know,\" I said humorously.\n\n\"I have a friend who took a class with you,\" she answered. \"She told me you were a disdainful asshole, who'd written a few books only critics like.\"\n\n\"That's an accurate description of my faults,\" I said thoughtfully. \"But I would like to point out that I'm only an associate professor, and any show of disdain comes wrapped in a wicked wit.\"\n\n\"Why is only being an associate important?\" she asked.\n\n\"Nobody cares if I flirt with the occasional pretty student,\" I informed her.\n\n\"She did say you were funny,\" she replied. \"And fucking hot!\"\n\n\"Does hot make up for asshole?\" I asked her eagerly. \"Witty definitely trumps disdainful, at least in my opinion but I must admit to bias.\"\n\n\"She told me you weren't an asshole to everyone,\" she said ignoring my attempt at humor. \"You were always nice to her; you even let her make up for work she missed.\"\n\n\"I teach creative writing, Susan,\" I said. \"Kids take my class for an easy grade; I try to oblige within limitations.\"\n\n\"Is the woman you come here with your girlfriend?\" she asked suddenly.\n\nI took a deep breath and stared at her.\n\n\"I saw you kissing her the other day,\" Susan said quietly.\n\n\"L thinks of herself as my big sister. I have one of those so I would know,\" I told her sadly. \"There's something not there between us on her side.\"\n\n\"Do you regret that?\" she asked leaning forward.\n\n\"I wouldn't be sitting here if whatever is missing for L wasn't,\" I responded honestly.\n\nSusan and I ran into each other more often around campus after our conversation and always took the time to say a couple of words. She accepted my invitation to lunch one afternoon. Sometime during the meal, she invited me to go on bike ride with her that weekend.\n\nA bike ride for Susan was incomplete without a few falls so we were pretty dirty when it was over. I offered to buy her dinner, but she pointed out the mess we had made of our clothing.\n\n\"You can take a shower at my place,\" I told her. \"I have some sweats you can wear if we don't go anywhere fancy.\"\n\nShe readily agreed and we headed to my place.\n\nLike with Stephanie, I forgot to consider L but she was nowhere to be found when I opened my front door. I sighed in relief after opening my bedroom door and not finding her inside. I grabbed a pair of sweats, handed them to Susan, and pointed her towards the bathroom.\n\n\"Do you want something to drink?\" I asked.\n\n\"Water,\" she said over her shoulder as she walked into the bathroom.\n\nI came back upstairs a couple of minutes later with the water. The bathroom door was open so I peeked inside.\n\nSusan was standing in front of the mirror in her underwear. Her panties were small enough that most of her ass was on exhibit. I caressed the skin of her lower back with my eyes before looking in the mirror. Her breasts were the perfect size for her frame.\n\nOur eyes met in reflection.\n\n\"I have your water,\" I told her softly.\n\nShe tapped a spot next to the sink with her left hand. I entered the bathroom and stood behind her. I reached around and put the glass down. Susan backed up until her body was touching me.\n\n\"Can you tell me about those hopes?\" she asked.\n\nI wrapped an arm around her and flattened my hand on her tummy.\n\n\"I love your ass,\" I told her. \"I don't feel anything on the exercise machine if I'm staring at your ass.\"\n\nShe pressed against the sink and leaned forward. I moved my hands down until I could grab her ass. She must have turned off the light because the bathroom dimmed as I touched her skin.\n\nI spread her ass cheeks and traced the line of her body around to the front. The panel covering her pussy was moist as I pressed my fingers against it. Susan's breathing heightened when I could not control the urge to grab her panties and pull them down her legs. She spread her legs when my fingers went questing again. I knelt down behind her and scored her ass cheeks with my teeth.\n\nMy dick pulsed with the need to be inside Susan as the aroma of her desire made me dizzy. I penetrated her body with two fingers and she pushed back to get them deeper. I stood up, ripped the bra from her body, and lifted her into the shower.\n\nThe hot water washed away the dirt and sweat, but inflamed the reason we stood naked underneath its spray. Susan turned in the circle of my arms and pulled me down for a deep kiss. Her hands pulled the clothes I had forgotten about off my body until I was naked. She pushed my back against the wall and rubbed my hard cock with her tummy as we continued kissed. My hands were on her ass pressing her against me.\n\nShe squealed when I reached down and picked her up. She must have thought I was planning to fuck her right there and complained when her body went up higher than necessary.\n\nShe grabbed the shower rod as my mouth touched her center. I had lifted her high enough to taste her. She let out a full-throat yell when my tongue penetrated into her.\n\nHer excitement was easily discernible from the water, and it increased when I sucked on her clit. Bringing my tongue to bear took Susan over the top, and she yelled out her pleasure again.\n\nI wanted more of the same so I kept at her; she wriggled trying to make me release her. Her clit was sensitive after the orgasm but I did not relent. She pulled hard on my hair as the second orgasm flooded her.\n\nI slid her body down mine until my dick touched her heat.\n\n\"Yes!\" she whispered reaching down for me.\n\nI stepped out of the shower and walked into my bedroom while Susan tried to stuff me inside of her. I knelt on my bed and lifted her a little higher. It gave her enough room to straighten my dick and place me where she wanted.\n\nI lowered her.\n\nSusan's head went back and her eyes with it as I opened her body with mine. She gasped as her weight worked against her body's discomfort at my size. She let out a soundless cry when I hit bottom, grabbed her ass cheeks, spread them, lifted her up, and impaled her deeper onto my cock.\n\nI held my cock pressed against the deepest part of her body until Susan dug her nails into arms.\n\n\"Jesus!\" she screamed as an orgasm overcame her defenses.\n\nI set her down carefully. My hands grabbed Susan's legs and pushed them against her chest spreading her. I turned as I felt a hand on the small of my back.\n\nL sat naked on the bed next to us.\n\n\"It's okay, sweetie,\" L whispered when Susan tried to get up. \"Enjoy my beautiful son; I made him for you.\"\n\nSusan relaxed and moved her hips in small circles enjoying the feel of me inside her.\n\n\"Look at her, Miguel,\" L instructed.\n\nI turned my eyes on Susan.\n\n\"Really look at her!\" L said stroking my hair.\n\nThe room darkened as if I were drawing in the light. L started to glow with her unearthly brightness, and Susan seeped with the orange I had seen in the gym.\n\n\"Push her!\" L whispered.\n\nI looked at her confused.\n\n\"You've been doing it,\" she encouraged. \"To Stephanie, to that dickhead's wife, even to me! Push her!\"\n\nTheir lights became brighter as something inside of me reached out and fanned their source.\n\n\"Push her!\" L chanted.\n\nI pulled my hips back and fucked into Susan as hard as I could. I did not know how to do what L wanted but it seemed connected to sexual pleasure. I sawed my cock in and out of Susan, lifting her higher and drinking from the glow of her pleasure.\n\nNothing in the room had any light except the two women; the darkness inside of me pulled on them. I shook my head angrily and discarded L from my awareness.\n\nThere was only Susan and her lust.\n\nShe screamed as an orgasm rocketed through her and then another. It was not enough for me; there was not enough light to feed me!\n\nI turned her over on to her hands and knees. I imagined her on the Stairmaster; months of staring at her nearly perfect ass, wanting it, needing it, and now having it.\n\nIt was not enough to feed me!\n\nI fucked Susan in mad strokes: making the light brighter, and my hunger for more greater. Her body clamped down on me during another orgasm and my body warmed, as finally her pleasure seemed enough.\n\nSusan's light was blinding.\n\n\"Push her now!\" L's voice said inside of my head.\n\nI knew what she meant; what I had done to Stephanie that made her fuck me for a grade, that made the department head's wife fuck L and me in her husband's bed, and what made Susan need me.\n\nI pushed her!\n\nSusan's light fragmented, and came back together in a different pattern.\n\nShe pushed back!\n\nI erupted inside of her as she fed the darkness.\n\n\"Beautiful little girl!\" L whispered stroking Susan's hair. \"My beautiful daughter!\"\n\nI was exhausted but my cock was still hard. I moved in and out of Susan building up the energy to continue.\n\n\"Get off her!\" L growled.\n\nI growled back in anger.\n\nL pushed me.\n\n-----\n\nIt behooves a writer to be exact.\n\nI pushed Stephanie, a college student who while not serious about fucking me for a grade, had thought about the possibility. I pushed the department head's wife, an unsatisfied woman in search of adventure, and a way of getting back at her husband. I pushed Susan, an iris being ignored in a sea of roses.\n\nSo when I describe what L did as a push, I am speaking of the act not its power.\n\nAn accurate description of its power would have been 'launched'.\n\n-----\n\nL launched me off the bed; zero to escape velocity before I hit the window. The glass, frame, and part of the wall disintegrated when I blew through it.\n\nI had a strange thought during my flight.\n\nI remembered when my big sister had done the same thing to me down a flight of steps. We were playing at jumping steps, but she did not know if the next height was safe. She dared me to and when I would not do it, she helped me get over my fear.\n\nHitting the ground at the bottom of the steps sounded a lot like the impact I made hitting the car parked in my driveway.\n\nMore glass exploded as the top of the car absorbed my momentum.\n\n\"Hey, chap!\" a cheery voice said from beside the car. \"If you didn't like the vehicle, you only needed to tell us. We could have gotten you a different one; no reason to destroy it.\"\n\nA British accent!\n\nWhy couldn't it have been an Australian accent? An Aussie would have known to bring beer and lots of ice! The Brit did not even have the decency to have a bottle of aspirin handy.\n\nI rested my head back and looked up to my window; orange and white light mated.\n\n\"Looks like our mother has a new daughter,\" the Brit said happily.\n\nI thought the British were supposed to be dour?\n\n\"You've done good, chap,\" he said patting my arm. \"Very good!'\n\nI was about ask him what I had done exactly, but fainted instead.\n\n----------\n\nPART III EPILOGUE:\n\n---------\n\nI drifted towards the light slowly. I pondered whether I actually wanted to get to the light or if I should roll over and swim back into the darkness.\n\n\"You must wake, Miguel,\" a male voice accented with British inflections said.\n\nI shook my head.\n\n\"The woman is ready for him to feed on, Robert,\" another male voice said.\n\nI shook my head even harder and rolled over. I tried to swim back into the welcoming arms of nothingness.\n\n\"What is he doing?\" male voices asked together.\n\n\"How would I know?\" the British voice answered with anger. \"I haven't been human in a hundred and fifty years.\"\n\nThe swimming was not carrying me away from the voices; I was being dragged closer to them somehow.\n\nI swam harder.\n\n\"Wake, Miguel!\" the British voice commanded.\n\n\"Fuck you!\" I answered and tried harder to escape.\n\nI felt pain in my arms and opened my eyes. I had slammed my arms against the top of the car I was lying on. I turned my head to the right and saw a nattily dressed man.\n\n\"Very well done, Miguel,\" he said with a nod.\n\nThe Brit.\n\nHe put his hand on my arm and pulled at me. I didn't have the strength to yank it away so I had to let him drag me off the car.\n\n\"You're completely drained,\" the Brit said to me.\n\nI tried to pull away as he guided me down the block.\n\n\"No, Miguel,\" the Brit admonished. \"You must feed!\"\n\nA burger with extra-extra bacon sounded real good so I stopped fighting him. He stopped in front of another male who was looking up at one of my neighbor's bedroom window.\n\nI looked around for the person who was going to take my burger order.\n\n\"What a waste!\" the man said with remorse. \"She has a strong sexuality, but her husband ignores the fruit that fate has gifted him with.\"\n\n\"Is she ready?\" the Brit asked.\n\n\"Ripe for plucking, Robert,\" the man answered and stepped back.\n\nRobert set me down carefully, making me realize how much of my weight he had been carrying. My legs couldn't hold me so I collapsed to my knees. He crouched by me and turned my face towards the window.\n\n\"See her, Miguel,\" Robert ordered.\n\n\"Who?\" I asked confused. \"I really want that burger with extra bacon so could you get her to bring me one.\"\n\n\"Open your eyes and look at her, brother,\" he encouraged.\n\nI focused on the window and beyond.\n\nIt was beautiful, way better than a hill of extra bacon! A painting of sunflowers, an aria, my mother's chocolate chip cookies, and perfume on the inside of a woman's wrists rolled into one perfect thing.\n\nI reached out for it.\n\n\"No, Miguel,\" Robert said. \"That's the succubus way.\"\n\nMy hands stretched grasping for the thing I needed. Robert got behind me and grabbed my wrists. He stretched my arms out to the sides.\n\n\"You are incubus!\" Robert whispered. \"She comes to you.\"\n\nI growled and tried to pull away.\n\n\"Be still, Miguel!\" Robert said. \"Open, and let her nature drive her to you!\"\n\nI stared up watching the thing get sweeter. Robert would not let me go so I relaxed hoping to catch him by surprise.\n\nThe thing tasted brighter suddenly!\n\n\"Yes!\" Robert whispered excitedly. \"A black hole for a woman's desire is what you are!\"\n\nI felt the thing get closer to me.\n\n\"Now, twist her around you,\" Robert instructed. \"Make her travel the outer edges of your gravity, building up speed as she gets closer to the core.\"\n\nI didn't know what he was talking about it, but I turned the thing's momentum in a circle around me in a way that felt natural.\n\nAs it spun behind me, it got closer.\n\nThat was it!\n\nI arched my back and stretched my arms out as far as I could.\n\n\"Make her dance for you, Miguel!\"\n\nThe thing danced in circles around me getting closer and closer with each revolution.\n\n\"You see, Miguel,\" Robert said happily. \"They will always come to you!\"\n\nThe thing became frantic in its desire to get nearer; I had to work at controlling its spin.\n\n\"Closer,\" Robert said. \"Let her come closer.\"\n\nIt/she was almost touching me.\n\n\"Now, push!\" Robert commanded.\n\nI shoved the thing away at the same time that I shutdown whatever was holding it near me.\n\nShe exploded!\n\nA shockwave of pleasure-made-energy struck me, and I absorbed its power.\n\n\"You're weak, Miguel,\" Robert said. \"Take everything she has to give you!\"\n\nSome of her pleasure was escaping. Robert said nothing about my reaching out for it so I pulled as much as I could into myself. She exploded again, and then once again.\n\nRobert gave me time to recover from the gluttony of the woman's feast. I could see her; she lay on an empty marriage bed bathed in sweat and gasping sobs of breath from the intensity of her release.\n\n\"There's a wall between us,\" I whispered. \"Why can I see her?\"\n\n\"She is a sexually vibrant woman, Miguel,\" Robert said pulling me up to my feet. \"You're not seeing her with your mind, but with your soul.\"\n\n\"It's true then,\" someone said.\n\nI looked around to see six men surrounding us. I was thrown by how good-looking they were.\n\n\"The mother's direct sons are the strongest,\" a different male said.\n\n\"I told you that,\" Robert replied in an exasperated voice.\n\n\"Only you have met a direct son, Robert,\" the others chorused.\n\n\"Okay, fuck that shit!\" I exclaimed. \"Pod people who can't talk as individuals have to go across the street! I'm not going to listen to six voices explaining what the FUCK is going on here!\"\n\n\"Forgive them, Miguel,\" Robert said soothingly. \"They have the same mother, and learned how to be incubus together.\"\n\n\"Incubus?\" I asked.\n\n\"That is what we are!\" the others said.\n\nI turned to glare at them, and got half-shamed smiles for my effort.\n\n\"Go,\" Robert told them.\n\nThey turned and got into the six expensive sport cars that lined in the street.\n\n\"You should tell them to move those cars,\" I informed Robert. \"Mrs. Smith is a nosy bitch, and she'll call the cops if you're parked in the street too long.\"\n\nI noticed the silence surrounding us finally.\n\n\"Actually, Mrs. Smith should be out here,\" I said confused. \"It's been a while since someone got thrown out a window in this neighborhood. Like maybe never, but if it ever happened Mrs. Smith would definitely know!\"\n\n\"We're redirecting your neighbors' attention,\" Robert said nonchalantly. \"Come, Lilith is almost done with your daughter.\"\n\n\"Lilith?\" I asked following him when he started walking back to my house.\n\n\"The mother,\" Robert said when I caught up. \"That's her name.\"\n\n\"Lilith,\" I whispered trying it out.\n\n\"You didn't know?\" Robert asked curiously.\n\n\"She told me her name was L,\" I told him. \"That if I were lucky, I would learn the rest some day.\"\n\n\"You were... lucky,\" Robert said sadly refusing to meet my eyes. \"Very lucky, I guess.\"\n\n\"Lilith,\" I repeated softly. \"I like it.\"\n\n\"For now,\" Robert answered.\n\nI looked up at the space that used to be my window; the white and orange lights had softened.\n\n\"So what's this about incubus?\" I asked.\n\n\"It's what you are now,\" Robert replied. \"A very special kind of incubus.\"\n\n\"Huh?\"\n\n\"You must have noticed Lilith was different,\" Robert said turning towards me.\n\n\"The Christmas light imitation gave it away,\" I said sarcastically. \"I haven't fucked every woman, but I think I would have heard about one that did that if it were something that happened even rarely.\"\n\n\"You are Lilith's creation,\" he said shrugging. \"I simply assumed there was something different about Lilith from the other women in your life.\"\n\n\"Okay, how about this... start at the beginning,\" I said angrily. \"None of this shit makes sense anymore.\"\n\n\"God created woman, and she was good,\" he intoned. \"But Adam did not agree.\"",
        "\"What the fuck are you talking about?!?\" I spat.\n\nRobert raised a hand towards the window.\n\n\"So Lilith was cast from the Garden for refusing to lie beneath Adam,\" Robert concluded.\n\nI looked up at the window; the lights dimmed.\n\n\"You've got to be on some good shit if you think I'm going to buy that!\" I exclaimed. \"So why don't you pass some to me, and you can try again in fifteen minutes.\"\n\n\"You don't have to believe anything you don't want to, Miguel,\" Robert said with another shrug. \"You're different now; I hope you believe that at least.\"\n\nI stared at him angrily.\n\n\"Lilith was the first succubus, that is what I was told by your predecessor,\" Robert said. \"I believe it.\"\n\n\"Why?\" I asked.\n\n\"Because as her son, you can do something I cannot,\" he told me. \"Something that makes you very special to every incubus.\"\n\n\"Let me guess,\" I said putting a finger over my lips. \"I've got the biggest cock and all of you love a Saturday night cornholing! I really hate to disappoint, but it's not my thing.\"\n\nHe looked up at my window again.\n\n\"Any succubus can make a man into an incubus, Miguel,\" he said. \"But we are mules.\"\n\n\"Excuse me?\"\n\n\"We cannot turn a woman into a succubus,\" he said looking at me. \"Only a direct son of Lilith can do that; the last one died a hundred years ago.\"\n\n\"I need to sit down,\" I said and hopped onto the car in my driveway.\n\n\"We haven't had a new succubus since his death,\" Robert said. \"The last one was extremely active as you can tell by the others, but she died a couple of decades ago.\"\n\nHe closed his eyes and got on his toes pressing his face towards my window.\n\n\"It has been a long time since one of our sisters walked with us,\" Robert said worshipfully. \"She will make one of us a fine wife.\"\n\n\"A wife?\" I asked putting my face in my hands.\n\n\"Didn't you feel it when you converted her?\" Robert asked. \"That desperate wife over there can feed us, but only a succubus can satisfy our hunger!\"\n\n\"I don't understand what's going on here,\" I said feeling nauseous.\n\n\"Lilith has been lonely without a daughter,\" Robert said. \"We felt her pain, and knew she would go looking for someone like you. You are a direct son of Lilith, Miguel, and you will give us succubus to mate with.\"\n\nI turned my face towards the house.\n\n\"They're coming,\" the other incubi said walking up to us.\n\nMy front door opened and Lilith walked out guiding Susan. My housemate followed anxiously behind them. They walked past me without saying a word. I got off the car and started towards them but Robert stepped in front of me.\n\n\"Don't, Miguel,\" Robert said shaking his head. \"You've given Lilith what she wanted; she has no more use for you.\"\n\nI watched Lilith and Susan getting into my housemate's car. He climbed into the driver's seat and started it. The car pulled out of the parking spot and came to a halt in front of my driveway. My housemate got out and approached me.\n\n\"This is my share of the rent and utilities for the rest of our lease,\" he said holding out an envelope.\n\nHe didn't look at me.\n\n\"Thank you,\" Robert said accepting the envelope.\n\nThe other incubi followed my ex-housemate's car when it drove off.\n\n\"Let's go inside, Miguel,\" Robert said gesturing towards my door. \"I'll explain everything to your... I would say satisfaction but that's beyond you now. Let's go inside, brother. You have much to learn.\"\n\nI stared in the direction that Lilith had gone for a long time before following him into the house.\n\n----------\n\nI looked out at my students from the lecture podium. The class was predominantly female, and a few of them wore their hearts in their eyes as they stared at me.\n\nAngela leaned towards me, leading with her breasts to offer their bounty. A couple of girls glowed with a light only I could see, but Angela's blue aura had been a distraction since I met her.\n\n\"Make sure that you've read the two Miguel Sanchez books that I assigned before next week,\" I told them putting my lecture notes into my briefcase.\n\n\"I love his last book,\" someone announced. \"It's sad that he died so soon after writing it. I think the fifth anniversary of his death is next week.\"\n\n\"'The 'L' Word; and I Don't Mean Love',\" Angela sighed. \"What a great title for a book.\"\n\n\"I agree,\" I said to her. \"Miguel's last two books are considered breakthrough works because of their handling of male sexuality. Be prepared to discuss them.\"\n\nI managed to escape before any of them could corner me. Most had not learned to flirt or seduce except with the sledgehammer of their good looks and took it as a blow to their self-esteem when I did not respond to their charms.\n\nThey would not have understood that I was doing it for their sake.\n\nOn my walk home, I pondered the irony of teaching my own books when everyone thought that Miguel Sanchez was dead. It took Robert nearly four years to convince me that I could not continue living my life like before; stabbing me with a butcher knife finally did it. I watched the wound close and heal completely within seconds.\n\nIt is difficult for an incubus to die: most have to choose it and then take lengths to achieve that goal. Robert assured me that I was even harder to kill, as much harder from an incubus as an incubus from a normal man.\n\nI wrote my last book, about Lilith, and let Robert stage my death. There was not much to stage; I drove a car with a fresh corpse over a cliff and walked away at the bottom. Robert arranged for the changes in my medical records that led the coroner to believe the charred body they pulled from the wreckage was Miguel Sanchez.\n\nDavid was a good name, though after five years I still was not used to it.\n\nThe changes Robert had shown me how to craft in my body to make sure no one would recognize me were also hard to get used to. He had advised nothing extreme; hair a little lighter, eyes hazel instead of brown, a couple of shades lighter skin color. I did not recognize the person in the mirror, but it had very little to do with how I looked.\n\nI opened my front door and walked inside without locking it. I disliked the house, the town, and the school. I had never been one for change but continuing to live around people that no longer knew who I was proved too difficult. A new college town was the best I could do to keep any part of my past intact.\n\nRobert took care of everything; I did not bother thanking him. Incubi were willing to give me anything I wanted. It was not long after Lilith left that I learned why, and none would get a thank you from me as long as I lived.\n\nI sat in the living room and waited.\n\nThe first succubus I converted after Susan was my department head's wife. She knocked on my door the day her divorce finalized and left my life that night in the arms of one of my so-called brothers.\n\n\"Sir,\" Angela said from the doorway of my living room.\n\nI turned towards her.\n\n\"Your door was open,\" she explained softly.\n\n\"I left it like that for you,\" I told her.\n\n\"You knew I was coming?\" she asked with virginal confusion.\n\n\"I felt you following me,\" I said looking her up and down.\n\nI did not have to feel her. I knew she would come someday, just like I knew an incubus waited outside for the inevitable.\n\n\"Take your clothes off,\" I told her.\n\nThere was no protest; the fire that caused her blue light would not allow it, not this close to her goal anyway.\n\nShe stepped out of her sneakers and undid the belt of her skirt. She pushed the skirt down her legs and pulled her sweater off. I shook my head at her lack of underwear.\n\nAngela would fit in perfectly among the three succubi I had made.\n\nI closed my eyes and centered my sexual gravity. Angela's flame was already beginning an orbit around me. \n\nMost women reacted to me without realizing it; tightened inner thighs, the natural moistness of arousal, elevated heartbeats, and hard breathing.\n\nI fed on their pleasure.\n\nA potential succubus like Angela was different. I could try to push them away, but it was impossible. They were drawn to me like light to the black hole Robert had told me to emulate.\n\nI ignored the ones I could, but Angela had crossed my threshold.\n\nShe circled behind me and wrapped her arms around my neck. Her breath was hot against my skin. The kiss she placed on my skin burned with need.\n\nIt was the biggest difference between a potential succubus and other women; their sexual desire was need rather than want. The energy of it cracked their skin and shone out from the wounds making them visible to me as shining bodies of pleasure.\n\nI turned my face, and Angela's lips met mine.\n\nShe had taken every class I taught at the University. She sat in the front and dressed so that I couldn't miss her.\n\nAngela needed me and I needed her. \n\nNo matter how much I wished I didn't, I needed her. A potential succubus is the only one that I do not have to push away as they approach my center. I can let them spin and spin, getting closer and closer, until they fill me with their souls.\n\nAngela did not notice that I was naked when I stood up and pulled her tight against me. Her thigh lifted as she tried to fit me into her. I wanted to make it last, but I had made another mistake.\n\nThe suddenness of Susan and divorcee's abandonment after being converted made me take my time with the next one. The time made our parting more painful than it needed to be. I still felt the ache of that loss when I met Angela so I stayed away.\n\nOur foreplay had gone on for too long though; flashes of pink in a classroom, a light touch on my wrist in office hour meetings, gentle smiles, and her blue eyes swimming in the heat of her desire.\n\nI held out for nearly two years against Angela's need, but I could not go another second.\n\nI was desperate for her!\n\nMy tongue invaded her mouth, and she surrendered to its plundering. I dug bruising fingers into her hips. She gasped accepting the pain as long as we completed.\n\nI threw her down on the couch; her eyes scalded me. Her arms came up, pleading with me to fill her. I lay down between her legs feeling the first touch of her wetness on the tip of my cock.\n\n\"Yes!\" she whispered arching her back and sinking the head of my dick inside of her.\n\nHer nails dug into my arms as my size took her by surprise. It was too late for gentleness; I powered forward and she bit down on my shoulder in reaction. I pulled back and split Angela's body with my cock.\n\nHer head fell back, her eyes opened wide, and she screamed. I rode her body's convulsions and felt my breathing increase as her pleasure fed me like so few women could anymore.\n\nAngela was close but not yet inside my core. I spun her faster and tighter around me.\n\n-----\n\n\"I claim this one for myself,\" Robert said walking into the living room a half-hour after I was fulfilled.\n\nI stood up and moved to the chair I had been sitting in when Angela walked in.\n\n\"You should leave the room, Miguel,\" Robert said gently.\n\n\"Miguel is dead,\" I told him. \"My name is David now.\"\n\nHe nodded placatingly and looked at Angela's sleeping form.\n\n\"I've always liked blue,\" he said almost to himself. \"It's a peaceful color.\"\n\n\"She's not a quiet one,\" I said.\n\n\"I heard,\" he replied smiling. \"She shouldn't see you when she wakes. You know what will happen.\"\n\n\"I want to see it,\" I told him.\n\n\"Why, Miguel?\" he asked. \"It is the way of things.\"\n\n\"I want to see it,\" I said staring at him.\n\nHe backed off as I gathered power.\n\nThere were more differences than daughters between regular incubus and me. To feed they needed to wrap an individual woman around their center; I could stand in a stadium and draw energy from every female in its circle. None of them could match the power output I could get from a woman. I could also store vast reserves of the energy the women gave me; they needed to feed constantly.\n\nRobert bowed his head in acceptance and settled down to wait for Angela to waken. She did it in degrees, stretching to enjoy the way her body communicated its pleasure after a hard fucking. She opened her eyes and looked at Robert.\n\nHe smiled with kindness at her.\n\n\"Hello, my love,\" he said.\n\n\"Hi,\" she answered sitting up. \"Do I know you?\"\n\nThere was no shame in being naked in front of a stranger.\n\n\"Not yet,\" Robert replied. \"But you will.\"\n\nI watched him begin her rotation around him. Her back arched as she felt it.\n\n\"What are you doing to me?\" she asked with sexual curiosity.\n\n\"Someone has to lead in a dance,\" he told her. \"For now, it should be me.\"\n\n\"I like the way you dance,\" she said closing her eyes and bathing in the pleasure Robert gave her.\n\nShe turned her face towards me and I set myself. Her eyes opened and focused on me. Angela jumped off the sofa with her nails stretched out for my eyes. Robert caught her halfway and turned her so that she could not see me.\n\n\"Is that enough?\" he asked me.\n\n\"Let her see me again,\" I ordered.\n\n\"Brother!\" he pleaded.\n\n\"You're not my brother, Robert,\" I said. \"Let me look into her eyes!\"\n\nHe turned her until her blue eyes could see me. She struggled against Robert's grip as the hatred overcame her. Her hands reached out to me, and she began to draw power to strike at me.\n\n\"Enough!\" Robert yelled putting her over his shoulder and carrying her out.\n\nHe came back a couple of minutes later and stared at me.\n\n\"Thank you for my wife, David,\" he said simply.\n\nI dismissed him with a wave.\n\nThe darkness of night fell over the living room while I stared at nothing.\n\nIt was Lilith's curse on her sons.\n\nMy daughters hated me the instant that their conversion was complete. I had not seen it with Susan because Lilith had launched me out of the room, but I received a full dose of the unremitting loathing that a succubus feels for her creator with the department head's wife.\n\nIt was such a vast emotion that nothing could soften it.\n\nTheir hatred left me alone in their world. Succubus and incubus ran in packs. L, Susan, and my old housemate were one, while Robert headed the other. Every female among them hated me, leaving no room in the pack for my presence.\n\nLilith had no need for another direct son as long as I kept having daughters.\n\nI tried to hold out after the second time I felt the hatred of a succubus. I managed it for over five years before Angela came to my house.\n\n\"Trying to kill Lilith,\" Robert told me when I asked how the last incubus like me had died.\n\nIt had been after I converted the department head's wife so I did not need him to explain anything else\n\nI dressed and went for a walk.\n\nThe church doors were open. My footsteps echoed in its size as I walked up to the altar.\n\n\"Can I help you, my son?\" the old priest asked.\n\n\"Sleep, father,\" I commanded and caught him as he collapsed.\n\nI set him down gently and straightened to go back to staring at the cross that hung over the altar.\n\nThe last incubus like me lived for a thousand years of being alone. I wondered how Lilith could recognize a man that would continue living even seeing the future I had in front of me.\n\nAny woman could be mine, but I would never have children so keeping one that could not be converted was to rob her of life. They would love me deeply, and get nothing back for it. I touched women but tried to leave them happy that I left.\n\nI accepted that I would never stop making new daughters as long I breathed. They filled the void, and if it was for only seconds it still kept me going. Lilith was created before death so she did not need reasons to continue living. She had no conception that life ended like I did. She also had my daughters and their sons to keep her company.\n\n\"He was a fool to reject her,\" I told the one on the cross. \"But how could you abandon her like that?\"\n\nLilith's hatred was the source of my daughters' feelings for me.\n\nI understood it.\n\nL's hatred for her creator had no end, and it poisoned every succubus that came after her.\n\nI turned and walked out. I understood Lilith better with each day that passed as I contemplated centuries of loneliness.\n\nI hated the one who had made and abandoned me too.\n\n\n\nTHE END"
    ],
    "authorname": "elsol",
    "tags": [
        "associate professor",
        "fail class",
        "pushed susan",
        "visit doctor",
        "needed maintain",
        "figure skating",
        "medical science",
        "losing job",
        "told standing",
        "standing walking"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/below-and-above-a-fable-of-lust"
}