{
    "title": "My Only Talent Ch. 22",
    "pages": [
        "Chapter 22\n\nJust Ask Dallas\n\nNote: The descriptions and accounts in these stories are fictional and do not portray any actual people or events. \n\nI was looking forward to my first official Marathon run, in my home town to boot. Suzanne had sent in my registration for the race and attested to a qualifying time to get me registered for the race, I had no clue how. Bigun had picked up our race packets for us yesterday, and Lara and Suzanne argued about attaching my number to my 'Team Robbie' jersey properly, but finally decided that the rules prevented that and they would just put the official race shirt on over my jersey. I needed the extra layer, anyway, because it was cold and windy this morning. Grandma served up a very early breakfast of bacon, sausage, and lots of buttermilk pancakes full of pecans: the best kind of 'carbo-loading' there is. Suzanne was enthusiastically downing them almost as fast as I was, and praising my Grandma's cooking skills in between bites. \n\nFinally she polished off her last helping, and looked at me funny. \"By the way, Robbie, when we get back to Austin tonight we are invited to Strelsa and G\u00fcnter's for dinner. I figured that should be relatively restful for you, after all your race exertions, without being too boring! Don't you think?\" She put her tongue up on her upper lip and leered at me. Lara giggled and Suzanne tried to kick her under the table. Did Lara know about her plan?\n\nAlley and Bigun showed up to accompany us to the starting point downtown, and Grandma insisted in sending Eldee along for security, giving her a leash to comply with the local law, even though that dog off leash was more reliable than any thousand other dogs on. Bigun, Lara and Millie would constitute my cheering section, and Jay would join them down there, although I assumed that all his attention would be on Millie, rather than me. Good call, buddy. I would rely on Suzanne for pacing and race tips and she had somehow already gerrymandered her starting group such that she assured me she would be able to join me right away, despite the staggered start. \n\nThe rest of the drive down and final check in was kind of a blur, and suddenly I was doing my stretching and warm ups and waiting for the starting signal. Eldee stayed right on Lara's left at all times and sniffed and checkout out everything and everybody, but raised no alarms. Suzanne's group was starting just a few minutes behind mine, which was certainly a tribute to blatant sexism and ignorance, given our relative running capabilities. There was no danger of getting lost, especially for the first few miles, as the streets were lined with signs and spectators. Suddenly we were off. We left Main Street behind and went by a children's hospital that I knew Sapiento had made a big donation to. \n\nI had studied the route briefly and knew many of the major landmarks along it. It was basically a big loop from downtown, out to White Rock Lake, all the way around the lake, and then back downtown to finish at the Convention Center. When I was a little kid, we used to go to White Rock Lake for picnics and it seemed like a long drive to a whole 'nother country to me. It was cool for me to think that I could now run all the way from downtown, to the lake, and back. I was officially a big boy now, if I made it. Or maybe I was just too big for my britches? We had started out heading west, which confused me a little, but then we turned back east and north. \n\nAs we passed by the Turtle Creek neighborhood, a very expensive area very close to downtown, I pointed out to Suzanne the direction of Lara's dad's house. There, condos were often $2M or more and most homes $4M or more, and some of the older homes were being torn down and 'gentrified' to $20M or more. When I was a little kid, we used to go to a hotel in an historic old house there for dinner on my mother's birthday or when my dad closed a big deal. Lara's house was pretty close to the old mansion, now renamed and even ritzier than ever, but Lara said that their house was really on the 'wrong side of the tracks' so that her dad could be walking distance from the heliport. We stayed on course for White Rock Lake. It was pretty windy, wasn't it?\n\nWe were getting very close to my old neighborhood and passed just a block from Alley's old house, and then we went by Greenville Avenue and began climbing a gradual rise, moving toward the north end of the lake. Suzanne said we just crossed the halfway point, and I felt pretty good. I suddenly remembered, or at least my cock remembered, what happened the last time I finished a long distance run. Down boy! Suzanne told me that marathoner's often have post-race rituals: they drink a certain beer, recite a favorite poem, or dance to a favorite song. I wondered if any did a ritual sexual submission to two very hot women. I bet they would if they could. Should I?\n\nWe passed around the east side of the lake going south and turned west and then rounded the lake again and north to get back on the route toward downtown, climbing another damnable hill. Suddenly we were surrounded by Dolly Parton impersonators. WTF? Was this some kind of message from fate to me that submitting again was going to turn me into a female impersonator? Didn't Dolly herself once enter a Dolly impersonator contest and lose? Did that mean I was losing myself by submitting? I was starting to get a little silly. I was not paying attention to the pace, relying on Suzanne, but it did not seem like that many people had passed us. I expected to see a lot of them pass me. There was a gaggle of maybe 100 runners strung out in front of us, and I had lost sight of the ones way out in front about the time Suzanne said we reached the halfway point. Was that good or bad? \n\nFinally we turned left again which meant we were headed west and back toward town. We went close to Lakewood, one of the two places where my dad forced me to learn to play golf, a required career skill, he said. I like tennis better, you see. Then I recognized Swiss Avenue, and then we could see the skyline clearly. Suddenly we were getting close to downtown, and I hit the wall. This was just like being on that treadmill at maximum tilt, except those buildings looked miles and miles away. Why was this happening so much sooner than when I did this distance in Austin? Maybe there actually was something badly wrong with my metabolism. I decided to treat it like Duke Knorr had told me to, don't worry if it hurts: just keep going until they tell you to stop. It hurt. Darth Vader began breathing for me, and Suzanne was saying something but I couldn't quite make it out. I was glad she was beside me, but it might be better if she was in front of me so I could just focus on her ass. Damn she has a nice ass. Someone started playing the tom-toms again, fast, and even louder than Darth Vader was breathing. I couldn't decide if my legs or my chest hurt worse. \n\nWe turned left again and I think I saw a sign with a G. Gee! We crossed Main Street. Wasn't that close to where we started? There were some trees, and a bunch of people, and then, was that the convention center? Suzanne said something else, but the tom-toms completely drowned her out. A bunch of people were jumping and moving their mouths, but no sound came out. Some photo flashes went off, right in front of me. Should I stop? No! Keep going. Finally Suzanne was pulling on me, and everyone in front of me was stopping. I guess I shouldn't run them over. Did they hurt as much as I did? I just want to lie down, but Suzanne won't let me. She's shaking me! Trying to make me your little bitch, huh, bitch? Not me, baby, I won that tennis match, not you! Wait a minute, wrong girl. Which girl is the right girl? Who do I thrust, or ah, trust? Whom?\n\nThere was some skinny Russian looking idiot up on a platform. He looked a lot like Pavel! Where's my racket? There were two other guys up there with him, but they didn't look like Russians or caterers. They were skinny black guys waving little red, black and green flags. Suddenly someone was talking loud enough for me to hear them. \"Keep walking Robbie, don't stop yet!\" Suzanne handed me something.\n\n\"Drink this!\" I would if I could get it up to my mouth. She helped me. Boy, was that ever good! More please?\n\nOh! They did have another one. That Gatorade stuff is the bomb. Some of that jelly in the little envelopes again. Why do they never have any damn toast? Wow, I am feeling better already. My ears popped and suddenly hundreds of people were talking all around me. Wow. Look at Suzanne. She is really sweaty, her hair is a mess and she looks totally wrung out. I have never seen her that raggedy looking.\n\n\"Are you okay Suzanne?\"\n\n\"Yes, my animal, and so are you! Two Forty Nine Robbie! Two Forty Fucking Nine!\"\n\n\"That's my best time ever, isn't it, Suzanne!\" I smiled a stupid grin. I knew it was a stupid comment, but that didn't stop me from saying it. I seemed to remember that three hours was pretty okay. \n\nShe laughed. \"Mine too, Robbie, mine too! I think it was those pecan pancakes that did it for me!\"\n\nThere's Lara with Eldee, and Millie, Alley, Bigun, and even Jay Kincaid. Now I was feeling a lot better. Suzanne took me over to a little tent with some big video monitors, and keyed in our race numbers, and I saw photos of us crossing the finish line. We both looked pretty rough, but Suzanne was smiling VBG style. I looked drunk. There were some other monitors showing crowd photos, not the runners. Lara, Millie, and Alley seemed to be overrepresented, along with several other hotties, and there were several cute pictures of Lara with Eldee. Millie hugged me, gave me congratulations, and said that she and Jay were going to lunch with Jay's folks at the Adolphus and would meet us at Lara's dad's house a little later for the trip back to Austin, winking at Lara and Suzanne. \n\nI suddenly felt pretty damn good, and pretty damn horny, too. Somebody handed me a breakfast taco. Not bad for only two bites. Hey, with just Lara and Suzanne there, maybe I should take a chance and see what they had cooked up for me, if I turned things over them? Will they make me dress up like Dolly? I don't think I would like that. We watched some more people finishing, lots of people coming in behind us. That was kinda cool! When we got back to the car, Lara drove with Suzanne in the front seat and Eldee and I crowded into the tiny back seat. I got my phone out of my duffel bag to enter the race into my exercise diary. I put in 26.2 miles and then it asked me my weight and time, and I proudly enter entered 175 pounds and 2:49 and it computed to over 3,000 calories! I guess I could have dessert tonight. \n\nLara's dad's place made even Alleys' folk's ostentatious new estate seem like a restroom at a truck stop. It was on more acreage than our place in Prosperous, even though it was practically downtown, with a house that was at least 20,000 square feet. I figure if this was the wrong side of the tracks, it means her dad probably owns both sides. It had two tennis courts, one of clay; and one composition. I could get used to this. Lara stopped at the guard shack, which was apparently manned 24/7, and checked us in. She drove on around the circular driveway and hit a button on the Mini Cooper dash and a big garage door opened, letting us in to a garage that had six other cars in it, and room for several more. We went up the garage stairs to a big hall that seemed to serve the same purpose as our new mudroom in Prosperous, only was about six times as large. There was already a dish of water out for Eldee, and she immediately took advantage of it, then curled up on the tile floor and watched us carefully. \n\nLara totally took charge. \"OK you two, first a shower and then we have steaks, baked potatoes and a fruit salad for both of you.\" She marched us into a huge shower just off the mudroom and proceeded to strip both of us, Suzanne first. Eldee checked out the room, decided that there was only one entranceway between this bathroom and the rest of the house, and promptly platzed herself right across it, ever watchful. Before Suzanne could get in the shower, Lara grabbed her, and said \"Suzanne, haven't you ever heard that the even the sweetest meat tastes better with a little salt?\" and then she laughed, not a giggle, but a lecherous rattle. \n\nSuzanne put her tongue up on her upper lip, leered at me, and said \"I think I have heard that somewhere before!\" These two girls did talk about everything, didn't they? Everything?\n\nLara proceeded to kiss every square millimeter of Suzanne's very funky and buff little body, and I envied her the task. Suzanne cooed and giggled, and finally put one leg up on a little stone shelf to allow Lara full access to her pussy. Lara smacked her lips and Suzanne sneezed explosively. Lara spanked her butt and said \"Off to the shower with you, young lady.\"\n\nLara kneeled in front of me, never taking her eyes from mine. \"You are truly fetid, Master! But I will accept my punishment, by serving your stinky cock like a good slave should.\" She held my gaze and began to lick everything but my now aching cock, sending it into obsidian like hardness and making me want to beg for her to touch it. What a tease she was! Every little motion was calculated to enflame me and prolong my agony. I looked up and saw Suzanne peeking around the corner of the shower, her nipples hard and covered with goose bumps, her entire body covered with little drops of water. She watched with big eyes, her tongue up on her upper lip, and her hand between her legs, and I realized that I had never been so excited in my life. \n\nFinally Lara began to tentatively lick my dick with little butterfly kisses, and Suzanne sighed loudly. After what seemed like an eternity, her flaming blue eyes never leaving mine, Lara suddenly engulfed and devoured me. I was unable to resist, and suddenly my knees were weak and my blood pressure dropped, and I held her head to steady myself and pumped my essence into her. Lara hummed, and Suzanne, from about ten feet away, groaned. Lara sucked it out of me like she owned it, and she did. I stood for a minute to catch my breath and then she took my hand and led me into the shower, shedding her clothes as we went.\n\nSoap is a wonderful thing, and washing these two women was surely its highest and best use. Suzanne and I were both suddenly desperate to please our wonderful Lara, and we finally hit on something she liked just fine. She was bent over at the waist with one leg up on one of those little shower shelves, with my cock in her pussy, my hands gripping her wonderful ass to steady my aim. Suzanne was kneeling down underneath her and licking us both, but mostly Lara's golden curls and hardening clit. I could feel Lara quivering, and knew that her Suzie was just about to spike. Suddenly she drew in a big breath and said \"Oh yeah, just like that, right there!\" and then shook with big orgasm, gripping my cock and squirting a little. Suzanne made a loud sucking sound like she was slurping a milkshake through a straw, but I would prefer what she was having to any milkshake, even in my immediately post-race and very hungry state. \n\nSuzanne switched her tongue's emphasis to my cock and said \"Hurry up and come in her Robbie, I'm hungry!\"\n\nLara said \"Oh, I suppose that would be okay\" and then her perfect pussy began milking my cock like a pink steel vise. No one could resist that, and I didn't want to anyway. It hadn't been that long since Lara had finished me off with her mouth, but it did not take long for her powerful pussy to do it to me the second time. I made the hottest and deepest delivery I could, but then that pesky Suzanne did her level best to remove some of my best work. Lara grabbed Suzanne's head and said \"Oh yes baby that's it!\" and then came one more time. I sat on the little shower bench in awe of the two of them.\n\nOne more quick rinse and we dried each other off, put on some jeans and shirts, and headed for the kitchen, if you could call it that. It was the about the size of a medium ESU lecture hall, and had two of everything: two sinks, two dishwashers, two giant and perfectly restored vintage Viking commercial gas stoves, two convection ovens, two microwave ovens, two refrigerators, two freezers, two big island workspaces and two giant walk in pantries, one a 'butler's pantry' that connected to any equally huge formal dining room. Eldee sniffed around and found a spot near the door to lie down in, and Lara touched off the microwave ovens that hummed in concert as she pulled a big fruit salad out of the nearest fridge. When the oven timers beeped, Lara served up two picture perfect post-race meals for her hungry, clean, and recently very satisfied lovers and a small portion of cut up steak for Eldee. We all chowed down contentedly for a while. \n\nThe Eldee gave out two quick and not so loud barks, which meant 'someone is coming, but no threat detected' and a few seconds later the guard manning the gate called with notice that Alley, Jay, Millie, and Bigun had arrived, in two vehicles: Alley's roughed up but highly functional Suburban, and her Dad's gleaming white Bentley. The Bentley, at least, looked perfectly at home in the circle drive outside this house. The new arrivals streamed in though the front door, and there were hugs and congratulations all around. \n\nLara, as hostess, took the lead in greeting everyone, and I took the opportunity to give Suzanne a hug. \"If we had more time, beautiful, I might have let you two take me on another little magic carpet ride.\"\n\nShe smiled a smile with a funny little tilt to it. \"We couldn't do it here, Robbie. We do have a plan, you know. We will have to have some notice and make some preparations, so it will have to be in Austin. But are you sure you are ready for some new and challenging experiences?\" \n\n\"No. I am not sure I want to submit to anyone, anytime. But you and Lara are the only ones I would ever consider it with. I did get really excited, but I am still not sure it is a good idea.\"\n\nShe smiled. \"We promise not to shoot you up with heroin, Robbie. But I also promise we will give you some very exciting experiences you never had before!\" I heard a funny little Suzie overtone that I had never heard from her before.\n\n.....\n\nSuzanne felt no need at this point to tell Robbie that if he accepted their offer again, he might soon find himself on his knees, with his hands bound behind him and a little yellow leather hood on his head, eating some strange pussy and ass, and doing it with an audience, and that was just the next step. Therefore she also could also not promise that he wouldn't get 'shot up' with a few other 'something's' later on in their planned progression, either. Robbie thought he was having his wild college days before he settled down, but he might need her help to make sure they were wild enough. After all, what was good for the Gander should be good for the Goose, hum?\n\n.....\n\nA few minutes later we were all packing up for the return to Austin. Jay's folks were already on the way back to Waxahachie, Alley's folks had taken the Ferrari back home to Prosperous after their lunch, and Bigun was going to drive the Bentley back to Prosperous and reclaim his truck. Eldee was going to ride back with Bigun, her first time in a Bentley as far as I knew. The Bentley should be honored. Alley gave Bigun a final lingering kiss, and we headed out. Alley drove the Suburban, with Jay and Millie joining her, and Lara drove the Baby Beamer with Suzanne up front with her and me lolling in the back seat. \n\nI had plans for a serious conversation with both girls about our relationship going forward. But the road noise, room to spread out, and my two recent orgasms and marathon-depleted energy reserves conspired to send me off to sleep before we even got south of Interstate 20. I had a phantasmagoric dream that might best be described as 'Robbie-Locks and the Four Girls', wherein I appeared with ridiculous long blonde hair, perhaps inspired by the sight of all those Dolly Parton impersonators on the race route and/or my personal and sexual insecurity issues. ",
        "I was standing at an altar, next to a preacher that looked suspiciously like Professor Lillehammer, who was saying \"You have to choose one, Mr. Roberts!\" One of the 'Four Girls' had long dark hair and appeared with a black bullwhip, calling me her worm, and yelling at me to kiss her feet, while two lovely woman kissed her breasts and she was simultaneously being double penetrated by two body builder types with huge cocks, shoving one in her ass and the other in her pussy. Another girl had short black hair, and was on servicing a line of 40 or so guys waiting to fuck her. A third girl, a beautiful vision dressed in white and with platinum hair, floated above it all, saying \"Even if I decide to marry you I may not choose to have sex with you\". Finally, a fourth girl, a big blonde, stood right behind me, constantly whispering in my ear \"I love you Robbie!\" I suppose they could be bin sorted as too domineering, too hot, too cold, and just right, but I thought the whole point of college was to have some wild times and not have to choose right now!\n\nApparently I tossed and turned and slept all the way though the trip back to Austin, not really getting any rest nor resolving any of my dilemmas. Suddenly the Mini Cooper was in Lara's parking space below her high rise, with Suzanne's nondescript Dodge parked next to it. Suzanne was shaking me while Lara packed up stuff to carry upstairs.\n\n\"Wake up, Robbie. It's time for the two of us to go to supper at Strelsa and G\u00fcnter's. The walk will be good for us.\" \n\nLara said she had to study, but she certainly hoped we had a stimulating evening ahead of us, with emphasis and air quotes on the word 'head', and Suzanne tried to kick her again.\n\nSupper sounded good. I was hungry, again. Their place was only a few blocks south of Lara's, just north of the river. On the walk there, Suzanne strutted, her Suzie radiating a little marathon best time ever pride with some domination dance thrown in. I suppose there was some advantage to being as wiped out as I was, because when we got there G\u00fcnter looked very, very nervous, and I realized that I had been too tired to think about it much. For that matter, Strelsa looked a little nervous herself. Suzanne did not. In fact, she looked like the cat that knew it was about to eat the canary. Strelsa puttered about the kitchen while we all made small talk, comparing final exam schedules and workloads perfunctorily. \n\nEver the freshman, I had not realized it when I made up my schedule, but the times for final exams were based on when the class was scheduled. Kevin had explained it to me after being schooled by the frat house slackers on the top techniques to maximize free time. One of his buddies, who was from Colorado and wanted to leave early to go skiing as soon as possible, had selected his classes strictly on the basis of the earliest possible final exam dates and times and thus a departure date for him, putting aside all those frivolous considerations like required classes, pre-requisites, and teaching effectiveness surveys. I suspected that given my degree plan, I would have very few choices, and consider myself lucky just to get any section of any class I needed in the semester that I needed it.\n\nStrelsa served up another eye appealing and tasty but relatively insubstantial cheese dusted salad that was barely an appetizer and just made me realize how hungry I really was. The main course was lamb. This seemed appropriate as Strelsa was about to be staked out for Suzanne the she-wolf. Given the way Suzanne had just publicly dominated Lou Baby at ZZZ, I was a expecting her to crush poor Strelsa. But it did not turn out like that. Not at all.\n\nStresla served our plates and graciously accepted our complements. The lamb was just about perfect, and there was enough of it, too, plus potatoes, asparagus, and some sourdough rolls. I was starting to feel pretty good, but still tired enough to just sit back and watch the show that was about to unfold. We all cleared our own plates and put them in the sink, and Strelsa offered dessert; Suzanne touched her arm and said \"That's just what I was thinking.\"\n\nStrelsa drew in a whistling breath between her slightly gapped front teeth, and we walked into their living room. G\u00fcnter drew the curtains, ensuring that no neighbors could peek in. Suzanne maneuvered for position and we ended up with G\u00fcnter and I sitting on the two arm chairs flanking either end of the sofa, and she and Strelsa together in the middle on the sofa. The conversation continued, and Suzanne casually slipped her hand up onto the back of the couch and lightly touched Strelsa's shoulder again. I began to feel like I was a chaperone watching an attempted petting session at an eighth grade party, but it was much more than that. \n\nThey were talking very softly and looking right at each other, and I realized I really didn't care what they were talking about, and it really didn't matter. They were looking in each other's eyes and G\u00fcnter and I might as well not have been in the room. I looked over at G\u00fcnter and his eyes were glued to the two of them like he was watching a UFO land in his living room. The two women moved a little closer together, their shoulders now almost touching like they were riding together in a small car. They began to lean further toward each other, and somehow as they talked they seemed to speak more slowly and leave their mouths open at the end of each phrase. Strelsa laughed, and Suzanne looked at her and then stopped all motion, putting her tongue up on her upper lip and looking directly into Strelsa's eyes. Did that look have the same effect on Strelsa as it did on me? The Suzie signals surprised me: Suzanne's recent domination radiation was much less, and there was desire and tenderness. Strelsa, in complete opposition to my expectations, was excited and anxious to get on with it.\n\nSuzanne moved her arm down directly onto Strelsa's shoulder and squeezed it gently but unmistakably: it was a caress. Strelsa dropped her eyes, but then looked back up at Suzanne and smiled. Suzanne slipped her fingers inside Strelsa's loose fitting blouse, and repeated the same caress, but with fingers on bare skin. An involuntary sigh escaped from G\u00fcnter: I was too short of breath to even sigh. \n\nSuzanne's fingers began a slow, kneading motion, and Strelsa turned to face her more directly. She dipped her head and then looked up at Suzanne, who slowly moved her fingers toward Strelsa's neck, then moved them back to her shoulders, and then repeated the motion, gradually expanding the area she was touching. Strelsa smiled. Suzanne reached up with her other hand, and undid the first button on the front of Strelsa's blouse. G\u00fcnter groaned. I finally exhaled. \n\nThey almost looked like opposite colored dolls: Strelsa was white blond, pale, with very pale blue eyes. Suzanne was dark haired, olive-skinned and her eyes were a very dark chocolate brown. They were each healthy, athletic, and smart. Strelsa was a little taller, her arms and legs were a little longer, her face a little plainer. Suzanne was a little older, her breasts a little larger, her eyes a little bigger, her lips a little fuller, and right now her hands much more active. She was sitting on Strelsa's left and using her right hand to gently touch from the lobe of Strelsa's left ear all the way to the outside of her left shoulder and then back again. When Suzanne stopped for an instant, Strelsa moved her shoulder up toward the hand, like a dog trying to get its owner to keep petting it. \n\nSuzanne smiled, and undid another button on Strelsa's blouse. She then moved her hand around to the opposite side of Strelsa's neck and pulled her gently towards her. She stopped well short of pulling their faces together, and then leaned down and kissed Strelsa on the shoulder, where her fingers and previously been. Strelsa sighed, and then leaned her head to the right, offering Suzanne more neck to kiss. Suzanne did, simultaneously opening the rest of the buttons. G\u00fcnter shifted in his seat and cleared his throat. The girls did not notice.\n\nAs an eager student of seduction, I wondered about Suzanne's next move. Would she go for the kiss on the lips, try to slip the blouse off now that it was unbuttoned, or kiss the neck some more? It was none of the above. She gently took Strelsa's left ear lobe in her teeth and bit it. Strelsa shivered, her blouse slipped down, and I realized that she had no bra on. Suzanne moved her right hand over and across Strelsa's body and slipped the blouse down some more, exposing the right breast. A shock ran through me: I think I made a noise but they didn't seem to notice. Strelsa had the hardest, most spectacularly erect nipples that I had ever seen. It didn't matter how big her breasts were, it could take you years just to appreciate how wonderful those nipples were. I wanted to start my study right away, but I knew I would have to wait a while.\n\nSuzanne would not have to wait. She slipped the other side of that blouse down and began gently touching all around those amazing nipples, using the back of her fingers to explore the breast without ever actually touching the nipple itself. She kissed the tops of Strelsa's shoulders, and then the tops of her breasts, leaving the nipples still untouched. Strelsa groaned at the same time G\u00fcnter did. More patient than any man would have been, Suzanne continued to work the breasts, shoulders, neck and face, waiting placidly until Strelsa took the initiative and kissed her right on the lips. It was a slow progression, but soon Suzanne was kissing everything above Strelsa's waist, and Strelsa was beginning to murmur softly. \n\nTheir kisses got more and more active, and suddenly Suzanne pushed Strelsa gently back away from her and against the back of the couch. I wondered how she would get those little panties off. She fooled me again. She left them on, and began to gently touch Strelsa through them. A trail of kisses led toward Strelsa's navel, and then Suzanne hovered her mouth over the panties, and when Strelsa pushed her hips up to try to meet Suzanne's mouth, she then continued down to gently kiss the bare thighs below the panties. The Suzie signal environment continued to amaze me. Strelsa was growing increasingly impatient, her Suzie sounding like Janet's did when I first realized that it was saying 'just shut up and work on me', but Suzanne was sending tenderness, patience, and a strong desire to please. I certainly didn't see that coming. \n\nStrelsa pushed down with her feet and up with her thighs, lifting her butt off the couch and using one hand to slip her panties off. Another surprise, she was once again a fascinating partial mirror image of Suzanne: a wonderfully trimmed little white blond landing strip highlighting some puffy pink pussy lips, glistening in the light from the lamps on either side of the sofa. It took my breath away, and redirected my circulation dramatically. Strelsa stretched and opened her legs so far I wondered if she might dislocate a hip. Suddenly the thin blond Austrian exchange student who had so shyly walked the halls of my high school during junior year like a perfect pale sugar cookie that would never leave its wrapper, much less get eaten, was writhing naked on her couch, impatient to have one of my two incredibly hot college girlfriends go down on her, and filling the room with a wonderful smell like some kind of exotic European sushi, while her husband and I watched slack jawed. It made me want to bust out with a few stanzas of 'Texas, Our Texas' but with my singing voice that would constitute sadism. What starts here changes the world!\n\nSuzanne continued to patiently kiss Strelsa's thighs, and Strelsa began to murmur something like \"bitte jetzt\" over and over. Her nipples looked like delicious rock candy just crystallizing out of pink sugar water, so hard they were almost ready to crack. Finally Strelsa said \"teraz\" and \"lizac\" and grabbed the back of Suzanne's head and pulled it towards her crotch. \n\nSurprisingly, Suzanne did not resist. Her Suzie sang more and more excitement as she tenderly began tonguing Strelsa. For her part, Strelsa was sending crazed excitement and wild surprise at how incredibly turned on she was feeling. Suzanne was very systematic and thorough, but she was feeling the heat, too, as I detected her wonderful smell in the air. G\u00fcnter did to, and he began to breathe deeply like a diver that had just come up for air. Suzanne pressed forward and Strelsa began breathing much faster and shaking a bit. A low moan passed her lips, which morphed to a growl and then a guttural groan, and I felt Strelsa's orgasm as a Suzie blast hitting me like firecracker going off. Suzanne hummed just like she sometimes did when I came in her mouth, paused for a moment, and then went back to work, slowly, tenderly.\n\nAfter two more fragrant little eruptions, Suzanne's mouth worked her way back up to Strelsa's, and they had one of those deep kisses that lasted a very long time. G\u00fcnter let out a breath like he had been holding it forever and said 'verdammen' softly. Suzanne broke the kiss, pushed away gently, and leaned back against the arm of the couch on her side, giving Strelsa a very direct and smoky look that said 'your turn'. Strelsa wasted no time moving toward her, and her Suzie was singing urgency and lust. Suzanne looked up at G\u00fcnter. I thought she would give him one of those dominatrix looks that said 'I have conquered your wife' but instead she looked surprised and apprehensive. Suzanne turned and looked at me next, and she looked almost like a scared little girl. What is going on? Then Strelsa's lips closed on Suzanne's nipples and she closed her eyes and arched her neck. \n\nSuzanne slid her butt down to the edge of the couch, and put her knees up high, brazenly offering her pussy to Strelsa, who continued her patient progression around Suzanne's breasts and down toward her waist. When Strelsa finally found her target, Suzanne's eyes snapped open in surprise and she looked right at me. I wondered if Strelsa was just as amazed as I had been with how magical Suzanne's little snatch was. I believed that was Strelsa's first taste of pussy, and she was sure starting with the best. She seemed to be treating it very well, too, and Suzanne's eyes rolled up in her head and she began to moan. The two Suzie signals harmonized, not beating at almost the same frequency like Lara and Suzanne did, but staying an octave apart, harmonizing and syncopating. I had tuned in Suzanne's Suzie signal and used it to plot my tongue's path to making her come many times, and I knew her tendencies, and it seemed to me that little Strelsa was a natural. She had no Suzie receiver, but she had instincts, and she was about to launch dusky sweet Suzanne on a little rocket ride.\n\nThere was a groan, and a sneeze, and then in rapid succession there were two more quick sneezes. I looked up at G\u00fcnter: the sneezing when Suzanne came had surprised him. Strelsa too: she pulled her head up to look, and Suzanne smiled at her, then touched her head and urged it back down. That seemed a little more in character for her. Strelsa lost herself in it again, and seem to acquiesce as Suzanne crawled up on the couch toward her. I knew what was coming, so to speak, and sure enough, Strelsa soon found her face trapped between those lovely but hard olive thighs, and being fucked by those grinding pussy lips! Strelsa reacted just like I did; she rolled up her stiff tongue and thrust forward with her neck muscles to meet Suzanne's motions, doing her best to maximize her stimulation of Suzanne. Another wave of that wonderful aroma filled the room, and another sneeze.\n\nI looked over at G\u00fcnter. He looked like someone had hooked up a big bicycle pump to him and seriously overfilled his inner tube. He was pumped up, red faced; breathing hard and looking wildly about with crazed and dilated eyes. Did they use steroids on women's rowing teams? Did G\u00fcnter have access to them? Suzanne surprisingly now had that same wild look: and her Suzie telegraphed over excited and under satisfied. No relief for the wicked?\n\nStrelsa sat up with her version of a shit eating grin on her face. Or maybe I should say pussy eating grin: she tried it, she liked it, and she cleaned her plate. She and Suzanne shared another long and languid kiss, smiled warmly, and then began to help each other find their under things and put them back on. Somehow that was just as sexy as the buildup to the whole thing. \n\nAnd then it just seemed like just another after dinner evening, except for the crazy smells and pheromones still hanging in the air. There were polite thanks, a couple of hugs, and a polite handshake, and then suddenly Suzanne and I were standing just outside of the apartment door, looking at each other funny. Just on the other sides of the door, some guttural German sounding words were heard, and then something slammed into the other side of the door, presumably Strelsa's body. Something then pushed on the door, several times, and Suzanne covered her mouth to suppress a giggle. Then we heard a progression of sounds that sounded like the singer on one of my roommate Kevin's Rammstein mp3's. On crack. \n\nKevin would sometimes 'Go German' on nights when he did not have a date: buy a six pack of some kind of German beer, and slam all six in a row while singing along drunkenly to Rammstein songs like 'Rosenrot' and literally banging his head against the wall. I suppose it was no more unlikely than him having the initials 'KKK'. He said it was a throwback to junior high, when he and his buddies would 'get all Medieval' in his East Hampton garage. Right now, G\u00fcnter was apparently 'getting all Medieval' on Strelsa, but not like any Renaissance Fair I had ever heard of. I hoped she liked it. \n\nAs we made our way down to the street, Suzanne was surprisingly subdued, and actually took my hand as we left the elevator. I waited for her talk, usually the best option.\n\n\"Robbie? Will you take me back to your dorm for a while?\" Her Suzie carrier was suddenly vividly modulated with images recalling her last visit, where she said she enjoyed 'being fucked like an animal', and I certainly enjoyed making that happen for her. With swelling pride at Suzanne's growing need for penetration and her truly inspired choice of me to help her out, some practical considerations soon occurred to me. How late was Kevin pulling study hall at ZZZ? Text messaging sometimes comes in handy.\n\nROBBIE: how late at ZZZ? On my way to dorm room with company. KEVIN: here until at least midnight but would come back to watch Suze :) ROBBIE: Lou is invited to watch but you are not. KEVIN:!!!(*^(*&))(@)@&%!!!\n\nWe got into the dorm elevator, which at this hour predictably reeked with the smell of warm beer and stale cheap delivery pizza. Suzanne's Suzie signal filled the elevator, inspired by the olfactory memory triggers I supposed, and her breathing accelerated. There were three other guys in the elevator, and I recognized them and knew they were going on up to 12 after we got off, that is if they weren't still hypnotized by looking at my date, which they plainly were now. Totally out of character, Suzanne smiled at them instead of ignoring them, and then put her hand behind me and in my pants, under my underwear, and down between my ass cheeks.\n\nWell, it was nice to be wanted, and I did promise to be her meat puppet, didn't I? We exited the elevator at my floor, and made our way down the hallway to my room. As soon as the door was closed, Suzanne put her lips to my ear. \n\n\"I need you Robbie. I need your cock!\"\n\nThat was certainly straight up: at least she wasn't spinning it any, and my cock was definitely ready, willing, and able. This is what I really wanted, too. I remembered the last time I took her just the way I wanted here in my dorm room. I felt fantastic, on top, and in control, and she came better and more than she ever had in her life. Something clicked for me, and I remembered my father saying to use my talent 'to find girls that want what you want' and they would 'get you higher and make you happier than anything else' and it all made sense now. It was simple, not complicated. What I wanted right now was to fuck Suzanne like the hot rutting bitch she was, and if she didn't love it I could find someone who did. For that matter I already had one wonderful woman who did, and several promising candidates waiting in the wings.",
        "Forget about all these hypothetical scenarios and play acting and plans for submission and monotonic progression and perfectly designed wild college days. I felt like fucking the holy shit out of her and coming in her mouth! Then I would decide what I wanted to do next, and do that too. I almost tore her clothes off and threw her on her back on the bed, right on my ESU logo blanket. I could smell her pussy as it filled the room with its hot perfume. I dropped my pants and put my legs inside of hers and pushed them open, and entered her with one hard thrust. That's what I wanted. Her Suzie sang through my head. It just felt right. Let's see how it feels when I just take what I want. I tuned into her Suzie and used it to detect just how hard I could fuck her without freaking her out. Turns out I needn't have worried.\n\nI pounded her, and she rolled her hips up to get more. I used my weight on her pubic bone like she did when she fucked my face, and she came in an explosion, even before her Suzie seemed to peak. I bucked and twisted to put even more force on her. She bit my shoulder and came again. I found a rhythm that stimulated her and left me in John Henry mode, and she came again. Now I wanted to come in her mouth, but my cock wasn't ready to. I shifted and pulled her legs up double, putting her ankles up beside her neck, and slammed down on her from as high up as I could. She pushed her legs up and they slid along me so that so that now her knees were up over my shoulders, and I was really worried about hurting her. But Suzie said fuck on, baby, and I did. She came again and screamed in my ear. Suddenly I was ready to come. \n\nI jumped up, grabbed her head and fucked her mouth, shooting just as she closed her lips around my cock. \"Take it all Suzanne!\" She did, no hesitation, and then did her little lung trick and I stayed hard. I might not have even needed it. I turned her over and put my hands on her thighs, slammed into her pussy doggie style and just plain used her like a whore. She loved it and so did I. I turned her a little and pounded her face into the little wall mounted cushion. Taste it, bitch! She bit it, screamed through her closed teeth, and came again. I was in another world. Something had set me free. One more frantic sequence and I pushed into her as far as I could and drove my ejaculation into her. This was what it should be like.\n\nI was spent and just lay on top of her, trying to catch my breath. She clawed for air too and made noises like a baby with the croup. I laughed. Finally I rolled off and grabbed her around the neck, trapping her in the crook of my elbow like the choke hold one of the football coaches had taught us when he was subbing for our sick tennis coach and it rained too hard to play tennis. I didn't choke her out, but I wanted her to know that I could. I kissed her neck. \"You're a pretty hot little fuck, Suzanne!\"\n\n\"Damn you Robbie! Why haven't you done me like that before?\"\n\n\"I'm just now figuring out what I really want from you, and I decided to just take it!\"\n\nShe just gasped for breath for quite a while, until I actually got worried about her silence. But once she got her wind, she wouldn't shut up.\n\n\"Robbie, I have a theory. A marathon, a car ride , a little up close and personal lesbian show to whet your appetite, followed by pizza and beer smell, and then the feel of an ESU logo blanket. That's the ticket, baby. I don't know if it's the effect on you, on me, or both, but I have never even dreamed of coming like that. It was much better than last time we were here. Let's do this on our next date, hon.\"\n\nI started to reply, but I was not quite quick enough.\n\n\"You can't tell me the little scene with Strelsa didn't turn you on, Robbie, because I know it did, you animal. I thought G\u00fcnter was going to stroke out.\"\n\n\"It turned you on more than me, Suzanne. You wanted to dominate her, but you responded so strongly to her tenderness that it scared you a little, didn't it? And being with her got you really hot, and you had a couple of nice little polite practice orgasms, too, but what you really needed to put out the fire was some plain old straight hard fucking, and you were fortunate enough to find me in the mood to give it to you! I have a theory too. You need lots of good hard fucking and I am the best guy in the world to give it to you! You should remember that and treat me accordingly.\"\n\nShe sputtered a bit. \"I am not going to agree to that just on general principle, Robbie.\"\n\n\"You can stand on principle all you want, Suzanne, but if you want to get your sweet little candy ass laid the way you really need it, you know who you need to see for that, don't you baby?\"\n\n\"Damn you Robbie!\"\n\n\"Ain't love just grand, honey? I love you and I love fucking you like a snake, and you love it even more than I do!\"\n\n\"God damn you Robbie!\"\n\n\"Do you want to run Wednesday, beautiful? I should be finished with my exam before noon, and I don't have one that afternoon.\"\n\n\"Yes. Damn it!\"\n\n\"You'll get used to it, my love! The way to get what you need is to give me what I need. Or just stand there and be beautiful. I'll take it when I want it!\" She stuck out her tongue at me. I sucked it into my mouth and almost swallowed it. \n\n.....\n\nMonday morning I was up early, despite my late night exertions, and was surprised to find Kevin up and joining me for breakfast. Given no classes or exams for the next two days, we were almost alone in the dining hall. Most people were sleeping in.\n\n\"What's up Roomie? Why are you up so early?\"\n\n\"I quit drinking and smoking weed after that party Friday night! Nothing at all since then. I feel better already, and Lou has noticed that I get harder and last longer. I have had to: she has been an insatiable animal since then. She practically raped me when I took her home, and she has been stuck on me like superglue since then. It's wonderful!\"\n\n\"I'm glad to see that Suzanne's little dance routine had a positive effect for somebody else, too. I was afraid she was going to sit on Lou's face right there at the ZZZ house.\"\n\n\"I think Lou was afraid she wouldn't. Maybe she still is. All I have to do is whisper Suzanne's name in her ear and she gets wet. I have been taking advantage of that. Also, the tale of that little dance routine has spread through the Greek gossip grapevine like wildfire. My rep has improved 100 fold, and yours is now going nuclear!\"\n\n\"How does that work?\"\n\n\"Well, right in the front row Friday night and witnessing it up close and personal was Rebecca Renaldus Rossiter, the president of the Booty's, Beta Omicron Theta, the most prestigious and high minded sorority on any campus. The normally reserved Rebecca said that dance was so hot that she was going to have to take a cold shower. I overheard one of her girlfriends tell her that two male freshman roommates from Jester were dating those two hot women, and she said 'those two fellows must really have it goin' on!' Then another girl told her that one of the two guys was a ZZZ pledge named Kevin, and the other was the guy they called Master, the one who brought both that super top bitch she had just seen dominate Lou, plus Lara, the Amazon Ice Queen, to a UDP party on leashes!\"\n\n\"So that and a dollar will buy me what?\"\n\nHe laughed. \"She immediately turned to her fianc\u00e9, the President of Sigma Nu, and said 'that's the kind of guys you should be rushing, not another bunch of fat, pale, videogame addicted, pot smoking losers like your latest pledge class!' The discussion then turned to what frat you might happen to be in, and one of the other girls, a Bi Phi, said that you were independent, but hung out with ZZZ and with the UDPs, and that you had also been one of the only students invited to the 'Addicted to Austin' party, and certainly the only freshman. She then dared her boyfriend to get you to pledge Sigma Nu, so they could 'earn some respect' from the high end sororities. That is usually their code word for blowjobs from pledge girls.\"\n\nI do not fully understand the Greek mindset, but it did remind me of the clique system in junior high, only on steroids and with more alcohol and better drugs mixed in. But it did sound like it might result more notoriety for me, but not necessarily the good kind. \n\n\"What I'm telling you, Robbie, is that you are going to get the full court press for Spring Rush. Theo Cadwallader and the Phi Iota Gammas are not going to let Sigma Nu get you without a fight, and every other frat will want you to pledge, too even though most of them don't even know about your babe spotting ability. My prez told me to get you to pledge, and to offer no dues, no hazing at all, plus you don't have to convert, either!\"\n\n\"Well, you can tell him that ZZZ is the only Jewish frat I will consider, and I still value and want to keep my 'unofficial member' status with you guys no matter what. I am not sure I want to be in any frat, but if I did, it would probably be UDT.\"\n\n\"Just get ready for Spring Rush, buddy. You are going to get invited to more parties and mixers than you ever heard of, and you are going to get offered more perks and house girls than you ever dreamed.\"\n\n\"What's a house girl?\"\n\n\"That' something UDT doesn't have, either. It's a girl, usually not in a sorority, that hangs out at the frat house all the time and dates one of the members or several of them. They range from just pretty loose party chicks to all out nymphomaniacs and they liven up all the parties and during rush they often have a sex with the new pledges as soon as they commit to pledge the frat. It is an incentive they offer to get guys 'over the hump' so to speak and into the pledge class. Just like in football recruiting. Haven't you heard the saying 'Pussy is Undefeated' or watched any of those 'Nebraska Coed' videos?\"\n\nI had heard that before, every year on National Signing Day. \"When does this Spring Rush take place?\"\n\n\"It's the week before classes begin, coinciding with Orientation for the students starting at the University in the spring semester instead of the fall. You'll get a mailing asking you to sign up, and invitations to parties. You can check into the dorm early if you sign up for Spring Rush.\"\n\nI didn't know about joining a frat, even UDP, but getting here a few days early next semester to pounce on Nora as soon as she got back, and/or hang out with Suzanne and Lara, might not be a bad idea. I checked the dorm web site for the check out procedure after finals, and found a little box for 'spring rush' that I had not seen before. I clicked it and was soon offered the option to sign up with one click, and I did, the charge for the extra dorm days was seamlessly added to my regular dorm bill that was mailed to my 'permanent' address in Prosperous. I still had to hope that the return date from the mysterious second business trip with Barry Fermy was not a conflict. Kevin was also hoping his newly sober state would improve his scores on his finals, above the low C but still passing average he had now. I wished him luck and he headed for the study hall sessions at ZZZ. Maybe his unaided recall would improve with a substantially lower BAC and less THC in his bloodstream. Stranger things have happened. \n\nI found an empty classroom, and did my 'teach to a new freshman class' routine, and discovered that I pretty much had it together in all my classes with finals. I guess keeping up every day, doing all the homework, and never missing a class actually helped. Thanks Dad. I went over all the relevant old exams until early lunch, and then made my way to the dining hall. I was looking forward to running with Suzanne on Wednesday, and perhaps hearing her sputter in protest to the new tack our relationship was taking, but we had previously decided to not run together today -- she had a lunch meeting with the professor and other TAs for his class, and my post race plan had me doing only 3 miles today, and I could do those after lunch, not before. Apparently a lot of people were sleeping in all the way through breakfast and lunch, as the place was still almost deserted. \n\nI had been starving earlier at breakfast and was still hungry now, so I took advantage of the un-crowded conditions to fill my plate generously, several times. It felt weird having no classes scheduled. Did that mean I have no class either? I also felt that further study for my finals was unnecessary. Was I getting over confident and heading for a fall, or accurately assessing the situation? My reverie was broken when my phone announced with a beep that an email from a VIP had arrived: it was from none other than Saskia Grandael, PhD.\n\n\"Roberts: I am closing out my action items before taking my semester break. I have reviewed all the data on you, and while your heart and lungs are certainly healthy (and congrats on a fine marathon time in Dallas) I am still concerned that you have some potentially serious metabolic problem that our tests cannot identify. When one has eliminated the simple and probable, only the improbable or seemingly impossible can remain. I am speculating now, but you may have some sort of neurological condition, possibly a brain tumor or ectopic neural tissue tumor, that is somehow making you burn up much more energy than I can account for physiologically. Your family physician may be out of his depth on this, hopefully you can find a neurologist or neurosurgeon, and I strongly suggest you contact one to examine you. If you provide an email address I can send my data for their review. Saskia.\"\n\nWell, it wasn't signed 'love Saskia' or anything but as least it was her first name. Maybe she was warming up to me. I forwarded her email to Asa Weltschmerz, asking him if he thought there was any need to follow up on this and telling him that Lara was doing fine. I then went up to the room and put on my running clothes and did my three miles, plus a sprint and some cool down laps. When I went back up to take a shower, there was a bundle of mail on my bed, with a note from Kevin, saying 'told you so'. I seldom got any snail mail, but Kevin checked our box all the time. His dad apparently had some clients that paid only in cash, and he used some of that to fund Kevin's spending habits, using Fedex or Express Mail to send some of it along to Kevin. \n\nMy bundle contained no spending money: it was all conventional but fancy envelopes, hand addressed in flowing script, a couple even done in fancy calligraphy. There were all invitations to rush parties, mixers, and a formal dinner, from frats I had heard of, and some I never had, plus one pink perfumed one for an 'all night sleepover party' at Beta Omicron Theta, a sorority! Wait a minute, wasn't that the one my Country Chrissy had pledged? That one I would definitely go to, just for etiquette's sake, of course.\n\nWhen I got out of the shower, my phone pinged again. I was copied on an email from Asa Weltschmerz's assistant, asking Saskia to immediately forward all test results so he could see me tomorrow, and a separate email asking me if I could come in to see him tomorrow at 0730 before he began his morning rounds, with me in a fasting state. With no classes tomorrow, there was no better possible time, so I replied yes. Should I be worried? \n\nA few seconds later my phone rang. It was Saskia. \"Good Grief, Roberts! Weltschmerz is the top neuro wonk in the state, and the unofficial dean of the new medical school. I am going to have to spend some extra time making sure my write-ups are perfect before I send them to him. I want him to remember me as competent! How the hell do you know this guy?\" I tried to ignore that disappointing emphasis on the word 'you'.\n\n\"Oh, he's just the friend of a friend, darling. He and I usually sit together at ESU home football games. I will tell him how sexy you are, and may also mention that you are a decent scientist! But my dear, you should always give me your best effort, shouldn't you?\" She was still yelling when I hung up.\n\nHopefully I was not fiddling while Rome burned; academically speaking, but I proceeded to take a nap. No dreams that I remember, but I did wake up hungry. A text came in from Oiler, telling me to come over to the UDT house for dinner: fried chicken and peach cobbler. I took a second to grab my coat and was out the door. The food was wonderful, and there were about a dozen really hot girls with those bright, active, intelligent eyes that I like, also having dinner there, a couple sending some scrumptious Suzie for me. Was that just a coincidence, or was UDT just more subtle, and much more effective, at this 'rush' business? When I got back to the room, I texted Lara to see if she could have lunch tomorrow: she could, but only if I came to her place. No problem, beautiful. \n\nI woke up early the next morning, and it was hard to skip breakfast, but I left early and walked over to Asa's office, which was in the hospital complex just west and south of the basketball arena. Rumor had it that the old 'super drum' was due for demolition, to be replaced by a huge maze of high rise buildings to house the new medical school and emulate the Texas Medical Center in Houston, kicking off a big new commercial and medical real estate boom downtown. A new basketball and concert venue would be built east of the Interstate, near the baseball field, along with some other new ESU facilities. I was almost 30 minutes early; arriving even before his receptionist and assistant, but Asa was already sitting behind his desk reading and beckoned for me to come in. \n\n\"Good morning, Robbie. You must be an early riser like me. Close that door so we can talk in private. Does your stomach always growl like that?\"\n\nI laughed. \"Only when I haven't eaten anything in the last hour or so! I suppose that's connected to what Saskia wanted me to talk to you about? \"\n\n\"It may well be. Her analysis seems pretty complete, but there is one other relatively simple, but also unlikely, thing that didn't occur to her that I want to follow up on. Before we do the diagnostic stuff, though, let's talk about Lara.\"\n\n\"My favorite subject, Doc. She is fantastic, and lately looking even better, if that's even possible. I think she is working out some more, looking a little more buff, and she seems to be really clicking in school, too. I am having lunch with her after we finish here.\"\n\nHe looked pleased, and then looked worried. What was up? \"I am frankly amazed at her progress. In the space of one semester, she has gone from being worrisomely close to harming herself and being diagnosed with a pretty frank personality disorder, to a beamingly happy young woman. She's at peace with herself and very confident. And you're right about her school work; her grades are almost perfect this semester, also quite a change. Her father is worried that it is all too good to be true.\"\n\n\"I sure hope not, Doc. I want her to stay happy and healthy just like she is right now.\"\n\n\"For how long, Robbie?\"\n\n\"You know Doc, last time we talked about his I wasn't so sure, but now I am. Just as long as she will have me!\"\n\n\"What about the BDSM stuff?\"\n\nAsa had been her shrink forever, he knew about everything, probably even about lots of stuff from before I met her that I didn't know about. \"She doesn't need that as a pre-requisite to get excited anymore, but sometimes she still wants it, and she usually lets me know when she wants it, and when she does, I give it to her.\"\n\n\"Do you realize what kind of progress that is for her, having orgasms without being dominated and punished, and openly recognizing her desires, asking for them, and getting them?\"\n\n\"I just hope it is as good for her as it is for me!\"\n\n\"You many have literally saved her life, Roberts. And one of the reasons she looks better is that she is off all medication except for some vitamin supplements. I would not have thought that possible in August, but there it is. I just worry what will happen if you two break up.\"",
        "\"If that happens, it won't be my idea, Doc. She is the best thing that ever happened to me.\"\n\nHe smiled. \"I also talked to Erminia last week. Does Lara know about that, too?\n\n\"She knows what Millie and I are trying to do for Erminia, if not all the gory details. She likes Erminia, and wants her to be happy.\"\n\n\"To some extent, Robbie, what you have done with Erminia is even more amazing than for Lara. Given the depth of her guilt, I would have never expected talk therapy to accomplish anything.\" \n\n\"We don't just talk to her, Doc!\"\n\n\"I suppose officially I don't want to know. But off the record, what is your rationale for what you do with her?\" He leaned forward in his chair. \n\n\"Well, when I first met her, if she got the tiniest bit turned on, she would be overcome by guilt about her dead husband.\"\n\n\"Actually, she felt crushing guilt about surviving him all the time.\"\n\n\"But it was somehow worse when she thought of having sex with anyone else; even though she knew he would want her to move on.\"\n\n'She told you that?\"\n\n\"Oh, yes. Said he was a 'horny little bugger' who would want her to enjoy all the action she could get after he was gone. So I knew the guilt was coming from her, and that it was automatic and involuntary.\"\n\n\"So how did you plan to extinguish it?\"\n\n\"Well, let's not publish this in any feminist journals, Doc, but what she needed was the same kind of distraction work that we give our bitches during bite training.\"\n\nHe looked aghast. I went on to explain how the dog learns to bite and concentrate on it, despite all the other distracting stimuli that are gradually introduced, until it can totally ignore the extraneous signals. Erminia would pleasure another person, not bite them, and then learn to ignore the distractions and concentrate totally on their pleasure. Then I related how we were transitioning her from ignoring noxious distractions to ignoring pleasurable ones while she had to keep complete focus on pleasing her partner. Finally, making her pleasure her partner in ways that could not help but pleasure her, and that she must allow herself to feel that pleasure so she would not break off from pleasing her partner. \n\n\"From what she tells me, it's working.\"\n\n\"Erminia got wetter than hell last week and was very close to an orgasm. It was a joy to behold!\"\n\n\"How do you know when she is ready for the next transition? If you go too fast it could break her spirit completely!\"\n\n\"I'm not really sure Doc. I just get sort of a.... hunch, I guess you'd say.\"\n\n\"And the fellatio for Sapiento?\"\n\nI smiled. \"Well that had two purposes. First off a wise old guy like that who wants his wife to be happy so much that he will turn her over to a young guy like me to fuck deserved some kind of reward, but he will soon have to work hard to please her, and I wanted him to get used to the excitement gradually, so it wouldn't kill him.\" \n\n\"Robbie, he is the happiest guy on earth right now, mostly because he sees that Erminia has some glow on her face again. The blow jobs are a nice bonus, plus he says she is now better than he ever thought possible!\"\n\n\"She is a natural talent, Doc, and totally dedicated to pleasing him.\"\n\n\"I am wondering if your hunches are not a natural talent too, Robbie. But if they are, let's just keep it between us; now that you are officially my patient, confidentiality applies. And if your talent proves to confirm one of my wacko brain function theories, that many of my so-called 'esteemed colleagues' are too stupid and hide-bound to consider, I will just have to enjoy it intellectually and not publish it.\" He opened to door and spoke to his assistant. \"Tell Doctor Rubin that she will be leading grand rounds today without me. I will be down in the RMRI, and I am not to be disturbed.\" \n\nHe led me down a flight of stairs to a door that said 'Research Magnetic Resonance Imaging Facility' and 'Authorized Personnel Only'. There was a very attractive young woman there in a white lab coat that could have been Esmerelda Estigoy's first cousin, given her pretty face, jet black hair, light brown skin, and spectacular backside.\n\n\"Is your calibration complete, Dr. Bilog?\"\n\n\"Yes, Doctor, the machine is fully functional and ready. I will be glad to assist you from the booth.\"\n\n\"That won't be necessary; you can take a break for an hour or so. I will run everything myself. Strictly a little research test, I am not even going to record anything yet.\"\n\nAfter she left, he locked the door from the hallway to the control room, and turned off two racks of equipment, leaving some others on. \"In the regular clinical practice machines, everything is logged, recorded, and backed up offsite. We may not want anybody else to see these images.\" He had me strip down to my underwear and lie in small tube, just bigger than my shoulders that looked like it could slide into the big tube behind it. He fixed my head in some kind of plastic frame, and said \"This is going to be very loud for about 45 minutes. Close your eyes, relax as much as you can, breathe steady and shallow, and stay as still as possible. \" \n\nHe then put some earplugs in my ears, and hit a switch, and I began to slide into the larger tube. Good thing I wasn't claustrophobic. There was some humming and clicking, and then a series of 'bang, bang, bang' noises began to echo through my entire body, like some very strong elves were hitting the machine with titanium sledge hammers. It went on forever. Finally it stopped and I slid out, noticing that Dr. Weltschmerz had a very funny expression on his face. \n\n\"Okay, back into your clothes and then we need to go down three floors.\" He turned me over to an old guy he called \"Doctor Dee\" and said he would call me later. He looked worried.\n\nDoctor Dee was a gastroenterologist, and he asked me a series of detailed and disgusting questions about my food preferences, chewing techniques, bowel movements, stools, and digestive processes in general, and then asked me to give him a stool sample, which surprisingly I was able to do, despite my current fasting state. He looked very pleased. Ewwww! Get me outa here! He told me I could go and someone would be back in touch. It was still almost two hours before I was supposed to be at Lara's place, so I went on the hunt for some belated breakfast. My phone's maps app located a Taco Shack just a few blocks south and I took off like a hound dog on a track. Chorizo, egg, and cheese, with jalapenos, you are my savior. \n\nI walked around downtown, the weather very cool but pleasant, until it was time to arrive at Lara's place. I felt like a little contrast therapy, but with a true variation from last time, when she and Suzanne had applied it to me. She answered the door in an amazing one piece outfit I had never seen before. It was a heart shaped crimson red thing that barely covered her two breasts on top, narrowed and swept down to hug her sculpted abs, and then the point of the heart shape ended right above her clit, pointing to her perfect golden pubic patch like a crimson neon arrow. She was wearing that and a smile, and that was all. \n\n\"It's a little early, Lara, but yes, I'll be your Valentine!\"\n\nShe smiled. I picked her up, carried her to the bedroom, and tossed her onto the bed. I just love the way she bounces. I was going to show her some contrast therapy, and do some calibration drills on my Suzie receiver at the same time. I spread her legs out and took in how wonderful she looked -- like one of those pink valentine candies with the creamy centers. It was time for a taste test.\n\nI munched on her sweet little pussy like a starving man tastes ambrosia, slow and steady and then accelerating. Suzie signals played all over the spectrum, and her sticky fluids began to drip all over my chin and the bed. That's my funky Valentine! I tapped into her signal and tuned my tongue to resonate with her, hoping to soon hear a clear and clean signal diagnostic of a clitoral orgasm. I kept it pretty tender and worked primarily on her outer and inner lips with an occasional flick on her tender little clit. Soon the signal grew and crested, and she squirted just a little. I felt her pussy twitch once, and then I moved up, kissed her gently on the lips and said \"I love you Lara.\"\n\nI then plunged into her with everything I had, fucking her just as deep and as hard as I could manage. Again I tuned for maximum Suzie, and I was not disappointed. A different note rose up out of the noise, and I synchronized my motions to it, pumping it higher as I sensed it. I plunged in and out, focusing only on her signal and I did not know how long it took, but then she growled and turned her head back and forth, and then we both held our breath as her pussy clamped down on me and pulsed twice. I took a mental recording of that wonderful vaginal orgasm Suzie signal, and then I kissed her again, tenderly, and then pulled out and settled in again with my tongue just touching her now very red and very puffy outer lips.\n\nThey were so sensitive that I just barely touched them with my tongue, and her Suzie sang for rough tonguing, even biting, but instead I teased her mercilessly, gradually increasing my motions just a few percent each minute. Her whole pussy was hot and wet and wonderful. She shook with each little lick, and I enjoyed myself immensely. Slow and tantalizing was my credo, and listening to her breathing gradually accelerate was my reward. I used my Suzie receiver for negative feedback information for once, making sure she was stimulated and moving toward another orgasm, but approaching it obliquely and never quite getting there. She began to sob, and I switched to moving her forward again. Her respiration began to sound like an asthma attack, and I decided to use my big pink epi pen on her. I climbed up above her and jabbed myself into her and drove it home like I was a saving her life. It was my noble duty, you know.\n\nMy cousin used to read these really strange comic books that he got mail order from Venice (California) and they had this one character that was an old farmer who cheerfully watched all the farm animals copulate, and then urged his three clearly highly emotionally disturbed sons to try to replicate those feats with their girlfriends. One of his favorite exhortations was 'fuck her like you are gonna come out the other side, boy!' That phrase had never seemed apropos before, but I sort of understood it now. Lara was sticking her fingernails in my back and breathing in my ear, reminding me of Darth Vader during the marathon. Suddenly my loins exploded like a sperm laden Claymore, and I directed everything I could into my sweet Lara, and then almost passed out. I don't know how long we lay there, wonderfully tangled in each other. I moved over a little bit so my weight was not on her rib cage and made it easier for her to breathe, and just lost myself kissing her cheek and smelling her hair. \n\nSoon she was waking me and saying lunch was ready, which was perfect timing because I was starving. Why was I always hungriest after I really concentrated on using my Suzie receiver, or trying to listen for new things? Lara was the queen of casseroles, the little recipe card said \"Mediterranean Chicken Thighs\", and when she opened the oven door I was hit with a wonderful combination of aromas: garlic, celery, chicken, artichoke hearts, green olives, and sweet onions. She served all the above on a bed of fluffy rice, with a side of lettuce and tomatoes with some olive oil and feta cheese. I was a little handicapped while eating, because I just had to keep one hand on Lara at all times. \n\n\"Robbie, you are going to have to come over for lunch more often! Why haven't we done this before?\"\n\n\"You should have asked me sooner! You must be punished. Next time, it's your ass!\"\n\n\"Promises, promises! How about leftovers, tomorrow?\" She giggled, Suzie spiking. \n\n\"I suppose I could squeeze it in.\" More giggles, from both of us.\n\nFinally she shooed me out so she could go to a review session for her Geology exam. She could play with my rocks anytime she wanted. It suddenly occurred to me that it wouldn't be long before the dinner line opened.\n\n.....\n\nWednesday morning dawned cold and clear, with a more normal sized line for breakfast, and I felt good about my 9-12 final exam. I didn't finish this one early, though: it was long and detailed and I was still checking my answers when the proctors demanded that all papers be turned in. I was certainly not sure of an 'A' on that one. That meant no time for lunch before my run with Suzanne, but luckily the plan was only to run 6 miles today, and then there was time for leftovers with Lara afterward. Suzanne had a new running outfit: all burnt orange complete with iridescent tights. It wasn't quite as spectacular as the shimmering white one, but it was pretty damn fine. I admired it in detail as she did her pre-run stretching routine. It didn't hinder her ability to talk, either. \n\n\"My pussy is still sore, you animal!\"\n\n\"You're certainly welcome, beautiful. You're a great fuck!\"\n\n\"Damn you, Robbie!\"\n\n\"What are you so mad about, darlin'? You know I love you, you know I'd do anything for you, well, except maybe submit to you anymore. I also think that you should admit that what works for me might also work better for you than anything else!\" \n\n\"Robbie, I thought you would take me any way I would have you?\"\n\n\"Well, those promises certainly didn't anticipate my ongoing subjugation and humiliation at your hands. I don't even know that my doing that really turns you on, you just seem to think it will!\"\n\n\"What do you mean by that?\"\n\n\"Well, take Lara or Millie, for example.\"\n\n\"You have, many times, with me watching, you son of a bitch! And you have whipped me and them and humiliated us to get yourself off, haven't you?\"\n\n\"Yes, and it also got you off like crazy. But that makes my point for me. If it didn't get you all hot and bothered, I wouldn't enjoy it at all! I only got into learning about this stuff to make Lara hot, not due to my own fantasies. I have to admit it turned me on, but if I knew any of you didn't really like it, it wouldn't feel right. But some guys would like it much better if you hated it!\" Suddenly I thought, was that what Millie needed? Could Jay Kincaid do that for her?\n\n\"So you are saying I shouldn't enjoy it unless you do too! Then maybe I should find some guys that like it?\"\n\n\"Maybe you should. But my bet is that is all they could do for you: submit and let you feel dominant. I bet they couldn't fuck you like I do, or get you off like I do, and they definitely couldn't do for you what Lara and I can do for you when we three are together.\"\n\nShe got that quintessentially female 'I really hate it when you are right about something' look on her face. Something occurred to me, and I allowed my mouth to run on without really thinking things through first.\n\n\"Maybe you should date submissive guys the way Lara dates.\"\n\n\"You mean go out with them socially, tease them a little, and let them kiss me goodnight at my door, but no sex?\"\n\nHere's where I really stepped in it. \"I was thinking you could even let them kiss your boots, like we advised the woman at the 'addicted to Austin' stage show.\"\n\n\"Oh, you are an interesting man, Robbie! That's quite an idea. Do you think that would be enough for them?\"\n\n\"Well, I am only speaking from academic research, not personal knowledge, but I think most of the guys that need and want that kind of stuff wouldn't know what to do with you if you weren't in control. I think that's the whole point for them. With your super hot and fit little body, haughtily beautiful face, and relatively deep voice, you are probably their dream dominatrix.\"\n\n\"Oh, that is hot. But shouldn't I get them off at some point?\" Her tongue was up on her upper lip, and her Suzie suddenly radiated like somebody's dom, not anybody's mom. \n\nSometimes my creativity runs amok. \"Just make them kneel before you and jerk themselves off, while you tell them what worms they are!\"\n\nHer Suzie sparkled: she liked that idea. Have I created a monster? I was not prepared for this. \n\n\"Is this all a substitute for my evil plan with Strelsa and G\u00fcnter? Are you backing out on that?\" \n\nI thought of that old salesman's joke I had heard my father tell at least 100 times, with the punch line that goes 'nope, sweetie, a deal is a deal' but I decided it would not be a good idea to retell it at this point. \"Not at all, I committed to that!\" Here's where I had done some preparatory homework. I just hoped it would work. \"In fact, I'll go you one better, your hotness. If you can get Big Liz and Little Marilyn to go for it, I'll do you with Ralph, too!\"\n\nHer Suzie bubbled like a witch's cauldron, which I immediately thought was an image that might be much too close to the truth. \"Robbie, you amaze me! You really do want me to be happy don't you?\"\n\n\"Yes, but by realizing that you would be happier with me, not a bunch of other guys! But I realize you might have to try it to finally realize that.\"\n\n\"So you want me to end up like Millie? Trying it but not really liking it that much? Only you would let me try to the real thing, not an act?\"\n\n\"If that's what it took to finally win your heart, my love, I suppose so.\"\n\n\"Well I guess you called my bluff, cowboy! Robbie Roberts, you may really be the most intriguing man ever. I have some thinking to do, and maybe I need to start a dialog with Big Liz!\" She looked happy, but then her face changed to look almost like a very pensive little girl. \"Robbie?\"\n\n\"Yes, Suzanne?\"\n\n\"What if it turns out that being with two guys at once turns me on like nothing else, and I can't give it up? What happens then?\"\n\nI thought about Ralph's 80/20 rule. \"Well, if it turns out that is the movie of your life that you really need to make, you should do so. But I won't be in the cast.\"\n\nShe got a look on her face that I had never, ever seen before. I don't think I wanted to see it again, either. When we finished our run, Suzanne peeled off to go back to her office and start grading the exams she had just administered. She would see Nora there, but I would not get to. I just kept jogging toward Lara's place.\n\nI developed my afternoon delight plan for lovely Lara during the short jog to her place. Perhaps it had grown from thinking about Millie, Suzanne, and dwelling on the potentially perverse and awful desires of certain females. She greeted at the door stark naked, which was really her best outfit. I had her fetch the Kinky Katalog contraption that we had used on Millie, and put it in the middle of her bed. I strapped her in, face down, knees bent, ass up and exposed and hands restrained at her sides, and neck tied down holding her throat up horizontal. The possibilities were clear to us both. I smelled her sweet pussy already, but it was not destined for a starring role today. I posed her on the bed, considered how wonderful she looked, and then walked around the bed an opened her closet door. There was a full length mirror attached to the back, and when I placed the door at just the right angle, and if she turned her head as much as she could to her left, she could see a reflected and reversed image of her on the bed in the device. I savored the sound she made when she did.\n\nI walked back into the kitchen, letting her consider her immediate future for a while. She must be, because it almost seemed like I could smell that sweet pussy even in here. I took a long drink of water, and spotted the leftover chicken in the fridge. I was hungry for both, but Lara came first. Back in the bedroom, I knelt behind her on the bed, which put my face level with her almost perfect ass, up tilted and exposed as it was, and I gazed upon it in wonder. I gave it a tender kiss, all over. I gave it a little lick, all over. I lapped at it like a cat drinking cream. Some very sweet juice began to drip from Lara's golden twat, and life was good. ",
        "I realized I was fascinated with Lara's pretty pink anus. Its little puckers and twists beguiled me. Its little motions as I played with it were wonderful. I used my tongue to touch it, every so lightly, and I could feel the cute little contractions as my tongue flicked around it. I wanted to put my cock in it, but first, more from my tongue. I was not sure why, but it just fascinated me. I kissed her ass in random patterns, looking for some corresponding pattern in her Suzie signal responses. I noticed two things: her Suzie was ramping up and her glorious little twat was beginning to drip even more of its magic elixir of love. I got her to the point of being so excited that she was almost getting frustrated, and at the last minute I slipped a finger into her pussy and found her squishy little G spot. I synchronized my light finger touches with not so light tongue thrusts, enticing her to come from anal stimulation just like Mrs. Douglass had taught me. Lara may be my best student ever. She came surpassingly fast, twice, and I think I enjoyed it more than she did, drinking in her Suzie signal like enjoying a concert I had co-written. \n\nIt was time for some more contrast therapy for her. I knelt behind her and pushed my cock into her sweet little pink puckering, slow and steady. She made a wonderful little noise when I reached what I thought was the maximum for this first delicious excursion, but then she pushed back against me and got a little more. Is she perfect or what? I increased my pace and depth and was soon giving her almost everything I had, and her juices flowed down onto my thighs, and the bed. I reached around her and twiddled her clit and she came beautifully, her ass gripping my dick for one delightful little squeeze and then relaxing even further, encouraging me to plumb her depths even more. I whispered in her ear \"You are so beautiful Lara, and I just can't resist fucking your sweet little ass as hard as I can.\"\n\nShe drew in a huge gasping breath and arched her back down sending her ass up towards me a little more. I kissed her shoulders briefly, grabbed her waist just below her ribcage with both hands, and proceeded to fuck her ass like there was no tomorrow. Her Suzie was only serving as automatic alarm or non-verbal safe word should I hurt her, but otherwise I just set my inner lizard free and joyously fucked away. It was my destiny. I felt like the king of creation, pounding away and looking down at the fleshy standing waves I was making in her perfect buttocks. They should use this image to teach the subtleties of wave motion to us horny college boys: the attention span would be almost infinite. I looked over in the mirror and my eyes met Lara's -- they were wide and loving. Mine may have looked predatory, but I tried my best to convey that she was my favorite prey. \n\nHer Suzie took on some of that raspy note that said she was really turned on, the clue that a little more humiliation might pump her swing even higher. I pulled my cock out of her ass, getting two sonic rewards: a wonderful little 'pop' when it left her anus and a sigh from her that said 'where did it go?' It went directly in her sweet little mouth and her Suzie immediately flamed like a sparkler stuck into pure oxygen. Her sucking became frantic, but I pulled out before she could finish me off. Her Suzie said 'put it back in my ass!' but she would have to wait for it. I bent down and beheld her inflamed little anus, red, sweaty, slightly enlarged, and pulsing with excitement. Below it, from this angle, her pussy lips were red and engorged and beautiful, and covered with a lovely sheen of sweet lubrication. The monkey wanted it all. \n\nNo finger for the pussy, though, just an excited and almost prehensile tongue exploring that fine ass as far as humanly possible. I pulled back and spanked those perfect buttocks and marveled at their beauty. Her Suzie said \"If you are not going to fuck it at least spank it harder.' I did. But when it was fully red and her breath came in rapid shudders, I plunged my cock back into her ass and drove for the finish line. I looked up into the mirror and saw I was up on my tiptoes and pounding into her at a very steep angle. The catalog restraint device was actually a fine piece of biomedical engineering, opening her ass up to me almost perfectly, and it was good. My eyes met Lara's in the mirror again, and I said \"Your ass is mine, Lara!\" and shot off in her with everything I had, continuing to pound for several strokes even when I knew that I had nothing left to deliver. \n\nWe lay in each other's arms for a long time, and stayed wrapped together as we went into the kitchen and fed each other cold leftover chicken thighs with our fingers. I couldn't stop kissing her. I hoped I never had to. As I left Lara's, an email from Asa Weltschmerz pinged into my phone's inbox. He wanted me to come to his office Thursday, so we could review my MRI test results in person. He said my final exam should finish just before noon and I should then come right over and we could have lunch in his conference room. How the heck did he know my schedule so well? I spent the afternoon going over everything for my last final, and felt pretty good about it. My growling stomach reminded me that the dinner line was now open. After some significant supper, I went to bed early. Thursday would be a busy day: a final exam, lunch with Asa and the possible bad news that created the worry I saw in his eyes Tuesday morning and what I hoped would be a breakthrough and perhaps near final session with Erminia and Millie. \n\nThe final exam was anticlimactic; it was exactly the same as the practice exam that was handed out in the sparsely attended review sessions, and I had not only worked all the problems out before and checked them, but reviewed them all with Oiler. I knocked it out of the park. School goals for first semester: Check! My exuberance waned as I approached Asa's office, worried about what he might have to say to me. The receptionist bade me sit in the waiting room, where I immediately noticed there were four very attractive young women. Since school was now officially over until next semester, it was of course my duty to check out the beauty. \n\nBut I got a surprise! The four women were two couples, sending that interference style signal that said 'women only' and signaling absolutely no interest in me at all, there was in fact a not so subtle note of hostility instead. Their loss, I told myself. But then a very unusual signal came up out of the noise and hit me right between the ears, from the dowdy looking forty something receptionist, who was virtually a dead ringer for the church lady on Saturday Night Live. It was pure unadulterated lust, unbridled by any other consideration, accompanied by the strongest and most dramatically modulated Suzie carrier I had ever encountered. The images were not hard to decode, it fact they were impossible to avoid, and her black box sexual event data recorder was not at all protected, it was like an open and well lit book. She was ten years divorced, with no sexual activity since then, but had never allowed herself to pursue her recurring sexual fantasies. She was into young boys, and at 18, I was toward the top end of her preferred age range. But that did not inhibit her from imagining doing just about everything to me that I had ever experienced, starting with a reenactment of Peggy's little Greco-Roman style hand job with a side order of frantic anilingus. Holy Toledo!\n\nI couldn't help myself. I stood up and walked over to the front of her desk and stood close to her, with my crotch right at her eye level. She looked shamelessly, and I got an inkling of what being ogled by a horny guy felt like. I smiled at her, turned around and then bent over and retied my shoes. Her Suzie blew up, and she leaned toward me, lips pursed. About that time, Asa opened his door and asked me to come in. Even though I had initiated that little scene, I was suddenly glad for the escape route.\n\nWhen I went into his office, he led me into the adjoining conference room, and gestured towered a plentiful looking sandwich buffet. This looked a lot better than any hospital food I had ever heard of. I saw a little hospital catering ticket on the side of the table that said \"Board Room Menu #2\" with a list of stuff from a local deli, and a warm cookie delivery place that served corporate accounts. \n\n\"Have a seat Robbie. Make yourself a sandwich. You can take the couch if you want, you may need therapy to deal with all this.\"\n\n\"You mean psychotherapy, physical therapy, chemotherapy, or....\"\n\n\"Well talking about it might help. I will never reveal anything you say to me about this to anyone, even Lara.\"\n\n\"I will have to talk to her about it eventually, I think, but not now. I won't talk about anyone but me, either.\"\n\n\"OK. I'll tell you everything I learned from your testing, and then you can decide what you want to tell me. I agree with Dr. Grandael, you are burning a lot more energy than your food, exercise and basal metabolic rate would account for. She couldn't explain it, and I think I can, but it's not simple.\"\n\nIt sounded funny to hear Saskia called 'Dr. Grandael, but I guess she was.\n\n\"She thought of all the 'normal' explanations except one, and her testing plan was very well considered and ruled out all the ones she thought of. Doctor Dee eliminated the only other simple explanation I could think of. It might have been that you had problems with your intestinal tract, such that you were not fully digesting what you ate, and thus not extracting all the calories from it. But that's not it, either. He confirmed that your digestion is virtually optimal, in fact he said your stools were 'fantastic'.\"\n\nEwww. Keep me away from that guy. \n\n\"The good news is that you don't have a tumor in your brain or anywhere else for that matter. But the numbers do make sense if we assume that your brain burns somewhere between three and four times as much energy as normal. Yours seems to be doing a lot of extra work on something.\"\n\n\"You mean I need 150 to 200 grams of glucose each day for my brain, instead of 50?\"\n\n\"Exactly! How do you know that?\"\n\n\"My high school health class actually taught me more than how to put on a condom and how to find Planned Parenthood on the web. I guess that extra 'brain drain' might explain why I am hungry all the time and crave sweets after meals.\"\n\n\"That's my guess, too. To confirm it, we would have to run something called a functional MRI, in fact a new variant of it that I developed that would tell us when your brain was burning all this energy and where most of the activity was, and what kind of cells were using it. But I can't run that test without leaving some permanent records, which I would advise you against creating right now. \"\n\n\"So you don't know what is happening to make me use all that energy?\"\n\n\"Not conclusively but I think I may know where you are burning it. What I don't know yet is why, or what all that activity accomplishes. I really, really want to know, more than anything I have ever studied in the neurosciences before. You see, Robbie, you have some very unusual structures in your brain, something I have never seen before anywhere, and would never believed if I hadn't seen them myself. But now I have 'an existence proof' that I can't ignore!\"\n\n\"So you never would have thought these things possible, but here they are in my head so you have to accept that they are not only possible, but that they exist?\"\n\n\"Exactly. But remember I didn't make even a single copy of any of the images of your brain. I am just working from memory. Normally I would study the images for hours before making even a preliminary conclusion. With you, I just have to wing it, which is not good science, but it's all I have right now. Have you ever heard of something called 'mirror neurons', Robbie? \"\n\n\"No, but my tennis coach used to go on and on about 'motor neurons' and how we could program them be watching our ground strokes or serves in the mirror.\"\n\n\"He may have been a really smart coach. Mirror neurons are nerve cells in your body that help you to mimic something you observe another person doing. Like watching a tennis player with a good serve and then trying to copy what they do. Your mirror neurons fire as if you were doing what the other person does, 'mirroring' what their nerves do. A good dancer who can watch someone else do a dance routine and then reproduce it on the first try may have lots of mirror neurons with lots of connections to their motor neurons and the reflex arcs around them.\" \n\nI was starting to put things together. \"So the mirror neurons would tell the motor neurons if they were doing it like the other person did?\"\n\n\"Bingo. Some people say impressionist comics have lots of mirror neurons, so they can quickly learn to talk and hold their faces like other people. And good actors are really good at sending messages to the audience's emotional mirror neurons, making them feel the emotions they are trying to project.\"\n\nHe walked over to the white board on the wall, and drew several small circles and one big one divided into a top and bottom half. \"Let's say these small circles are mirror neurons, the average amount that most people have, and the big circle is your brain: the top half is your cerebral cortex, the 'thinking' or 'associative' part of your brain, and the bottom half is the 'automatic' part of your brain.\" \n\n\"What they sometimes call the 'lizard brain'?\"\n\n\"That's right.\" He then drew lines from each little circle to each other little circle and to each half of the big circle. \"This would be the connections that a 'normal' person has between mirror neurons and the brain, they are really 'nerve fibers' insulated with fatty cells that run in 'wiring harnesses' we call neural tracts. But your connections are different.\"\n\nHe quickly drew dozens of lines between each mirror cell and the others, and dozens more from each mirror cell to dozens of places in each half of the brain. \"You have many, many more connections than normal, and they go to many more and different places in your brain than normal. Your mirror neurons are actually some of the most 'connected' nerve cells I have ever seen in any brain.\"\n\nThen he began to draw dozens and dozens of the mirror cells, almost filling up the white board. \"You also have many more mirror neurons than I have ever seen before.\" Then he began to draw lines connecting all the cells to each other and also to many places in both halves of the brain. \"And they are also connected to each other and to thousands of places in your brain.\" The middle of the board was almost all black with circles and lines filling it completely.\n\nHe looked at me funny. \"If that weren't enough, there are some very unusual structures in your brain that I have never seen before, in any animal, much less a human. They look almost like microscopic fractal antennas, and they are connected to all your multitudinous mirror cells and except for those nerve tract connections, they are totally insulated from the rest of your brain.\"\n\nThis was a lot to take in at once, but it also made some sense. \"You mean electrically insulated?\"\n\n\"Yes, but thermally insulated too. The brain uses a fat called myelin as an insulator, and special cells grow and wrap it around and around nerve cells like electrical tape around a wire. The more layers that are built up, the better the 'R-value' if you will, and you have more layers than I ever would have thought possible. Robbie, have there ever been any x-rays taken of your head?\"\n\n\"Only once that I know of. When I was eleven, I was playing tennis at the old country club and I was goofing around with my friend, acting crazy. I charged the net, and tripped, and bonked my head pretty hard on one of those old style permanent metal net posts. The new ones are all breakaways that pop out of the ground if you run into them. They took me to Parkland ER and did an x-ray and said everything was fine. Now that I think about it, when my dad got there he was relieved that I was okay, but then he was totally pissed, like he almost never gets, saying they should not have exposed me to x-rays without his consent. He called some big time lawyer buddy, and the hospital agreed to give him the films and destroy all their copies, in return for him not suing them. He made a big stink about it and some people said he should wear a tinfoil hat and watch out for UFOs. He laughed, but he is not like that. He is still the most rational guy I know. Come to think of it, though, the club replaced all the net posts with modern ones right after that. \"\n\nAsa got that look on his face that people get when wheels are spinning rapidly inside their heads. \"Do you suppose your father still has those films? Did he ever tell you to avoid other things besides x-rays?\"\n\n\"He said he burned them. My parents made me promise to stay celibate until I turned 18, and not to drink or use dope, either.\"\n\n\"Did they say why?\"\n\n\"My grandmother said 'You should wait until your brain matures properly'.\"\n\nAsa's countenance changed, like he had reached a conclusion. \n\n\"Robbie, here's what I think. You have a set of very special mirror neurons with some kind of neural antennas attached to them. I'm not sure what they do, but I think that you burn up a lot of brainpower, and thus sugar, using them.\"\n\n\"Using them to do what?\"\n\n\"Lara tells me you seem to be unnaturally good at reading her moods and remarkably successful at pleasing her in bed. Would you please tell me your impressions of the ladies you met in the waiting room?\"\n\n\"Well, they were really beautiful, but they liked each other a lot more than they liked me, romantically speaking, at least.\"\n\n\"How do you know that?\"\n\nNow I was nervous. \"Just a hunch.\"\n\n\"So none of the women were interested in you sexually?\"\n\nI snorted. \"Your little experiment didn't produce the results you expected, eh, Doc? One of them was crazy hot for me!\" I tried not to sound childish and petulant. \n\nHe looked really surprised, then a little guilty. \"OK, you got me. Those are two very out and committed lesbian couples who work here at the hospital and seem totally happy with each other. Which one of them was interested in you?\"\n\n\"Not them, Doc. It was your receptionist and assistant.\"\n\nNow he did look plainly shocked. \"Mrs. Machakw?\"\n\n\"Yep. I think I may be a little old for her, though.\"\n\n\"But she has been divorced for years, and she never dates anybody!\"\n\n\"I don't know if you would call it dating, Doc, but it's a good thing she doesn't teach junior high age boys, if you know what I mean.\"\n\nHe looked totally shocked. \"OK. I'll keep that in mind. What else can you tell me about, Robbie?\"\n\nWas it time for truth to be truth? I decided I wanted to know more, so I had to tell him something to get more. There was no risk in telling him the same kind of stuff that Kevin knew, was there? I drew a deep breath and thought for a second.\n\n\"Well, Doc, I do get hunches about women, about whether or not they are interested in me sexually. I am right much more often than wrong. It didn't start until I went through puberty, which happened at a much later age for me than all my friends did. As I got older, the hunches got more accurate. I can also sometimes tell if a woman likes another guy or not, even if she doesn't like me.\"\n\nHe looked very thoughtful. \"That's all?\"\n\n\"Well I think it's pretty darned useful not to waste time chasing girls that don't want me to catch them!\"\n\n\"Yes I suppose it would be. But Lara tells me that you seem to know when she needs tender kisses and when she needs to be treated rough. How does that work?\"\n\n\"It's like a hunch, too. The more time I spend with her, the better my hunches seem to be. But Lara is so wonderful and so attractive to me and gets me so excited that I just want do everything I can think of to her. I think she just likes everything that I do, whenever I do it.\"",
        "He laughed. \"So you can't lose?\"\n\n\"Not with Lara, Doc. I win every time.\"\n\n\"What about with Suzanne?\"\n\n\"Well, I have hunches about her too, but not as many as with Lara. She is much more unpredictable, not that any woman is easy to understand!\"\n\nHe laughed. \"Boy is that ever the truth. The more I learn about my wife, the less I seem to know! So these hunches have told you when to move forward with Erminia?\"\n\n\"Yes. But in her case I kept going more slowly than the hunches told me, because I could not believe she was changing so fast.\"\n\nHe just looked at me for a while, the way people sometimes do when they want you to fill the silence and tell them more. I was done for now. It was certainly another subject to discuss with my Dad over the Christmas break. \n\n\"OK, Robbie. I guess that's all you want to tell me, for now. I desperately want to learn more, to learn all about it. But I will be as patient as I can be, and keep your confidentiality. But consider this: you might want to understand more about yourself before you make certain decisions, especially when it comes to having children later. \"\n\nIt reminded me of one of my grandfather's favorite aphorisms. 'Having children is hereditary. If your parent's didn't have any, chances are you won't either!' My dad decided to have kids, so I probably would too, but with whom, and when? \n\n\"One other thing: Dr. Grandael seems very competent, and is likely a very intelligent and curious person. She will not let go of this until she has some rational explanation of what is going on with you. I don't think we want to tell her what we just talked about. She might not be able to resist the chance to keep investigating and to do more experiments on you. Publishing something definitive about this could certainly make anyone's career take off. I propose that you tell her that we discovered a problem with your intestinal track, such that you were not absorbing all the calories from the food you ate, and that explains the difference. Tell her you are now under the care of Doctor Dee and that he expects to have things regulated and working normally by the time your spring semester starts. And don't let anybody take any x-rays of your head, either.\"\n\nI made myself another thick sandwich from the buffet, corned beef on rye with hot mustard and fresh tomato slices, and then polished off two still warm oatmeal chocolate chip cookies and one white chocolate with almonds. I wish they had these cookies at the dorm. I left without looking back at the receptionist, or even seeing if she was looking at me. I walked back toward campus, spirits suddenly soaring. No tumor threatened me with immediate death, and I was finished with my first semester of college. My most pessimistic current estimate of my grades was four A's and two B's, which I would be perfectly happy to take every semester from now on. Despite what I thought were upcoming troubles with Suzanne, I had my perfect Lara as my rock to hold onto no matter what else happened. Tonight I had to do my duty with Millie and Erminia, and if she progressed the way I expected her too, I would have to fuck both of them his evening. Duty calls!\n\n.....\n\nCarmencita closed her treatment notebook. Everything was updated and written up on her laptop; all the goals had been met. In fact, her latest patient, the so called 'Nando Longomonto' was actually in better shape now than before he was injured. She still had absolutely no information on how he was injured, other than 'in a fall', and according to the terms of that convoluted non disclosure agreement she had signed, she was not allowed to ask him about that, or anything else that did not pertain directly to his treatment. It had gone almost perfectly, thanks to his unrelenting effort and her brilliant new rehab techniques. \n\nShe had even tried something really brand new with him, a sexually charged reinforcement plan from a controversial assistant professor of Education up at ESU. He had proposed using it for more complex learning, but when she read about it she thought it was perfect for relearning 'muscle memory' things like she was trying to reinstall for her rehab patients. Every time 'Nando' made a new fitness plateau, she would show him a little more of her flashing smile or a little more thigh or chest flesh, or put her body in a more revealing and stimulating position near him. He watched her with obvious interest, and it was motivating him wonderfully, such that he had recovered well ahead of schedule, but it had some unintended consequences. It was programming her as much as it was him, and she began to have fantasies that when he was fully recovered he would stand up, rip off her clothes, throw her on the bed and make love to her.\n\nShe had only fallen in love with a patient once before, and that was a little cute as a button eight year old girl that had been terribly mangled in a car crash and had come back from it like a real trooper. Everyone at the specialty rehab hospital had fallen for her too, and Carmencita wanted to have a daughter like her someday, hopefully without the injuries. \n\nBut 'Nando' was very different from most of her male patients. First off he was smart as a whip. He never forgot anything she told him, and put it all together seamlessly in his mind. He seemed to intuitively pick up what her goals were for him, and why they were important, and he worked incredibly hard to reach them. There was another patient, a ten year old boy from rural Nueva Leon whose legs were injured in a school bus accident and that was apparently a savant chess player; destroying everyone in the hospital that was brave enough to play him in five minutes or less per game, and looking bored while doing it. But when 'Nando' arrived and sat down across from him, it became a 45 minute war, with both players concentrating fiercely, and the kid lost two out of three.\n\nShe asked Nando him about it and he laughed. \"That kid has real talent. He could have wiped the floor with the ten year Dw..., um, the ten year old me. Fortunately I have the advantage of having read so many chess books about all the classic openings and great games. Every time I use something, he stores it away and never falls for it again. He's a great kid, too.\" Nando stared at her whenever she laughed, or smiled. Dare she hope that he might be as interested in her as she was in him?\n\nIn the last two weeks, she had been taking him out of the hospital to try various things and assess his strength and range of motion. He turned out to be an excellent bowler, and golfer, and even a good dancer. But when she took him dancing, she learned something about him that scared her a little. There weren't too many dancehalls in their little town, and all of them made their money by selling beer, sometimes a little too much of it to certain customers. They had been completely absorbed in each other and having a great time when suddenly the mood was shattered by an obviously drunk ranch hand who loudly announced that her date was a 'wimp' and that the 'pretty lady should be dancing with a real man.' \n\nShe realized that Nando appeared average and unremarkable in almost every way: height, weight, and build, and with his glasses and haircut he looked more like a store clerk than anything else. He almost seemed to try to look that way. She felt the tension go up in the room and was worried that her rehab plan could suffer a real set back if this burly and beer charged rodeo rider pounded on her patient. But Nando said nothing, just turned his body slightly, crouched a little, and looked calmly at the guy, showing no signs of fear or even discomfort. This was clearly not what Rodeo Boy was expecting: he might have been hoping the little clerk would head for the hills. He must have decided to up the ante in this little macho game. \n\n\"You better get your little faggot ass out o' here boy, before I tear off one of your arms and beat you to death with it!\"\n\nThis engendered absolutely no reaction; Nando didn't even blink. This clearly unnerved Rodeo Boy even further. He must have decided he needed a little help, because a knife suddenly appeared in his hand and he lunged at Nando. It was almost like a dance class. Gracefully, with no wasted motion, Nando reached out and deflected the knife away, and grabbed the wrist that held it. A little sidestep and a half spin and the arm with the knife was totally wrapped up and immobilized by both of Nando's arms, and then the cowboy tripped on one of Nando's feet and started toward the floor. Before he hit the ground, Nando's other foot pushed into Rodeo Boy's armpit, she heard a muted popping sound, and the knife dropped to the floor. Then Nando was up on his feet while Rodeo Boy writhed and screamed on the floor. \n\nShe had never actually seen a shoulder being dislocated before. She was usually only involved in putting them back in. And she was absolutely certain that Nando had known exactly what he was doing, and she couldn't think of a faster or more efficient way to do it. She had to replay it in slow motion in her mind, because it happened so fast. Hadn't the ranch hand said he was going to tear off one of Nando's arms? Was that shoulder dislocation simply cold blooded irony?\n\nShe thought it probably was, but then there was a lot about her most interesting patient she still didn't know. But she certainly wanted to. What was that name he almost said? \"Dw.. something\"? She had gone to Eisenhower Middle School, and Dwight was the first name she thought of that fit. Maybe \"Dwayne\", or even \"Dweezil\"? Her curiosity burned. He kicked the knife away with his foot, and then came over to her to ask if she was alright. Then he surprised the hell out of her. \"Let's reset that shoulder. It might reduce the paperwork on this thing.\" She nodded, and he knelt behind Rodeo Boy, holding the shoulder in perfect EMT class form, while she popped it back in. Rodeo Boy stopped screaming and just sobbed. Who the hell was this guy, anyway?\n\nHe sure as hell wasn't the spoiled child of that real estate asshole she had seen on TV. That NDA agreement said big law firm, and big money, but all of his clothes and things were very inexpensive stuff. Everything except his laptop computer, that is. It had an all metal case that you could pound nails with without hurting it, and a funny screen. If you were not looking directly at it, you couldn't see anything but grey. But if it was turned right at you it was the brightest and most detailed she had ever seen. He worked on 'correspondence courses' on it almost every night. When he first checked in, he had to ask the LAN guy to give him a 'PK bit' or something like that so he could 'tunnel' into some kind of 'virtual network' through the wireless connection.\n\nFinally there was no delaying it anymore. She told him he was fully rehabilitated and ready to go back to work. He was excited and sad at the same time. So was she. She finished up her report and gave it to him on a USB drive, like the agreement specified, and asked him if he wanted a ride to the airport in San Antonio tomorrow. He said he would send an email and get instructions about when to report back to work, but in the meantime, could they go out to dinner tonight. She said yes without even thinking. What exactly was she getting herself into, here?\n\nHe had looked up the best restaurant in town and it turned out to be a BBQ joint that served on butcher paper instead of plates, and he asked her to stop on the main street for a minute, and came back into the car with a bouquet of flowers. She knew she was already lost at that moment. He told her he had never met anyone like her, and it might be because she was his therapist, but he thought he was in love with her. He wanted to wait a few weeks until he was back in his normal environment to be sure, but would she consider having a relationship with him after that. Her heart was in her throat, but she knew she had to get some information, and now was the best time. She asked him who he really was and who he really worked for.\n\nHe looked uncomfortable for just a moment, and then took out a business card and gave it to her. It said \"Dwight DeWitt Fleming, Systems Analyst, United States Department of Agriculture\" in Washington, DC. \n\nShe looked up, gave him what she hoped was her very best warm and loving smile, and said \"Bullshit!\""
    ],
    "authorname": "conanthe",
    "tags": [
        "bdsm",
        "gang bang",
        "analingus",
        "sorority",
        "anal intercourse",
        "fraternity",
        "felatio",
        "turtle creek",
        "texas",
        "white rock lake"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/my-only-talent-ch-22"
}