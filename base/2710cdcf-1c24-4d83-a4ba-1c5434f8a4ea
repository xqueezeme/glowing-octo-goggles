{
    "title": "Texas Trio Pt. 02 - Becky's Debt Ch. 23-24",
    "pages": [
        "<h2>\n\nTT2: Becky's Debt\u2014Chapters 23 &amp; 24\n\n</h2>\n\nREMINDER: I write long stories. Many chapters don't have naughty bits, but those that do will be way more fun if you read the others, too! Also, although TT2 is a stand-alone novel, it takes place in the same family as Texas Trio, so you might want to read that one first! --Stefanie\n\nNOTE: The chapter numbers 24a &amp; 24b don't adhere to the book, but I'm leaving them here in a bid for happy-reader brownie-points: back when I could depend on having semi-regular writing and uploading opportunities, I planned to split the text at that point and make you guys wait a week before coming across with 24b! (greedy hand-grasping, evil grin). Alas, my imploding life makes such shenanigans impractical . . . I'll have to rely on other methods of amusing myself! You're welcome!\n\n\u2014:\u2014:\u2014:\u2014:\u2014Chapter 23 \u2014:\u2014:\u2014:\u2014:\u2014\n\nBrody began showing up after dinner almost every night to walk out with Becky.\n\nHer fears about being too innocent for Brody turned out not to be an issue: as though they knew something had happened to change her attitude toward him, Colt and Jeremiah suddenly became even more vigilant guardians of Becky's virtue. Nanny began to seem like a soft touch when compared to Becky's two protective older brothers, and no one had ever called Nanny a soft touch.\n\nColt and Jem didn't want to do the chaperoning themselves, but they did want final say over whether a chaperone was or was not qualified for the job. Many applicants failed to live up to their standards. Nanny was acceptable, of course, as were Cookie and Louella. Yan was deemed too young until she heard about it the following day and gave Jeremiah a severe dressing&#x2011;down in the kitchen, threatening him with the mallet Cookie used to mash chicken bones for Topper. Jem told Colt he was afraid to refuse, which was good enough for Colt: if Yan could scare Jeremiah into giving her the job while speaking only Chinese, he was sure she could scare Brody into keeping his hands to himself.\n\nTheir top two choices as chaperones were Caleb and Clancy.\n\nClancy said he'd be happy to do it: he'd hook up the pony cart and trail them around anytime the bosses asked him, night or day.\n\nRebecca was forced to take a stand and veto Clancy. It was bad enough that she and Brody were forced to endure a chaperone\u2014she objected to that, of course, but she absolutely refused to have a chaperone who spent the whole evening muttering insults at her suitor. Jem blamed the veto on Nanny instead of telling the truth, because he knew Clancy wouldn't question Nanny. Jem was right: Clancy took it like a man.\n\nCaleb communicated his disgust with a stare that had everyone but Nanny looking at the ceiling. Nanny prevailed.\n\nSo, Becky and Brody were most often accompanied by Caleb, who paced them at a discrete distance, ever&#x2011;watchful.\n\nCaleb made it clear he didn't see the point\u2014the man would get to her eventually\u2014any idiot could see that, but his wife had asked him to stand in for her, and that's what he did. Whenever Brody got too close, Caleb grunted. Since \"too close,\" was defined as what Caleb thought Nanny would think was too close, holding hands was all that got done on Caleb's shift.\n\nYan was equally as diligent in her duties, but Brody developed a fondness for teasing Yan, who reminded him of his stable-man's wife, an under-cook in his kitchen back home. He'd sidle ever-closer to Becky, until he'd provoked Yan into trying to hit him with the birch switch she'd cut for the purpose, then he'd hide behind Becky until Yan stalked back to her post, insulting him in Chinese as she tried to hide her grin.\n\nOverall, though, Becky and Brody preferred Louella or Margaret, a widow from town who came out twice a week to help with what Catherine called the \"heavy cleaning\": bleaching, which was done in a pot of lye over an open fire; turning mattresses, washing windows, cleaning kerosene lanterns, and scrubbing soot off the hearths and fire surrounds. Between the cleaning and the four children waiting for her at home, Margaret didn't have the energy to care about Brody and Becky getting frisky. She was businesslike in view of the ranch&#x2011;house and kind to the lovers once they were away under the trees.\n\n\"I'm gonna rest right here on this rock. You two don't go too far, hear? And keep your braces on, Mr. Easton.\"\n\nBrody didn't wear suspenders, but he knew what Margaret meant. Every so often, she'd call softly to them, and Becky and Brody would walk back to where she could see they remained clothed.\n\nLouella was more zealous, but also sympathetic. She stayed in sight, but would periodically turn away, as though watching birds or admiring the sunset. She always hummed to let them know it was time and stopped suddenly on a louder note, so they'd know their time was up.\n\nIn this way, Brody and Becky accomplished a lot of walking, a lot of talking, quite a bit of kissing, and a tiny bit of petting\u2014on Margaret's shift, of course. Brody made absolutely sure he was there on the days Margaret worked. He would have been there every night, if he hadn't thought Colt would shoot him for it.\n\nNeither Brody nor Becky would have admitted it, but it was actually a perfect courtship\u2014they had plenty of time to learn about each other.\n\nThey learned they were both orphans who didn't remember their parents.\n\nThey both liked to read, though not at all the same types of books. Becky read science, news, and occasionally philosophy. She knew where wars were being fought and when borders changed. Brody read almost exclusively novels and travel books. She found it horrifying that he didn't care what was happening around the world.\n\n\"Are the Russians invading Texas?\"\n\n\"No.\"\n\n\"San Francisco?\"\n\n\"No.\"\n\n\"Then why should I care?\"\n\nTry as she might, Becky failed to convince him that current events were important.\n\nOn the other hand, what she initially considered \"dull travel books\" were educational in surprising ways. When she bored Brody with dictatorial regimes, he told her how the region's history contributed to what she'd told him was happening there. Becky thought of history as a dead thing, but when she wanted to discuss the current conflict in Eritrea, Brody knew right away why it was significant.\n\n\"But that's geography, and geology, and agriculture,\" Becky protested, after he'd talked for ten minutes about the Red Sea, fertile highlands, and fishing in the Dahlak Archipelago.\n\n\"Yes, but writers who travel often like to see rocky coastlines or climb mountains and eat local cuisine.\"\n\n\"Mmm,\" Becky said thoughtfully, and stopped calling Brody's travel books \"dull.\"\n\nThey were very different: Brody knew a little about a wide range of disparate topics, while Becky was intensely focused on a few specific subjects. Brody was much less serious by nature, gregarious, and widely&#x2011;traveled. Becky was politically well&#x2011;versed and friendly, but she was more comfortable at home with her family.\n\n\"Maybe it's because I've never been anywhere,\" she wondered aloud.\n\n\"You said you spent summers in New England.\"\n\n\"As a child, with school&#x2011;mates. We didn't visit museums and cathedrals: we rowed and played croquet.\"\n\nBrody wanted to show Rebecca the world, take her to the finest restaurants, the most luxurious hotels . . . he laughed to himself: she'd end up in the basement, examining furnaces and stone foundations.\n\nTo him, her life sounded idyllic and sheltered. Though she'd lost her parents at a young age: she'd been raised by family and had never been separated from her sister for longer than a few weeks.\n\nHe'd stayed with an uncle for a while, Brody said, but they didn't get along.\n\nBecky heard something in his voice and guessed his one&#x2011;sentence coda about running away failed to mention a lot of beatings. She'd been beaten once, too, but Colt and Jem had rescued them immediately; no one was there to rescue Brody.\n\n\"I have to tell you something,\" he said, after they'd been walking out together for several weeks.\n\nHe was so serious that Becky's heart sent a frantic pulse&#x2011;beat of alarm to her temples. He was leaving, going back to San Francisco. She bit the inside of her lip and clutched her fingers in her lap to avoid hanging on his arm and begging him to stay, reminding herself that she wasn't interested in marriage or courting.\n\nThey were sitting on a fallen tree that would soon be firewood, but for now acted as nature's serendipitous bench. Brody looked down at his hands.\n\n\"My foster mother--\"\n\nBecky released the breath she'd been holding in a rush, trying to do it silently while still paying attention. She knew about Miss May Murray, of course, and how wonderful she'd been to Brody, but his tone of voice told her this was something else.\n\n\"I was about fourteen when a storekeeper from Minneapolis started courting May. For no particular reason, I didn't like the man, though he gave me a job in his store and seemed nice enough. No one had anything bad to say about him. He and May got engaged, were supposed to be married the next year, but at the end of the summer, she told me she was breaking off their engagement. She didn't say why, and I didn't ask. We had a big shipment come in that weekend, and I slept in the storeroom Saturday night so I could get up early and start work again. When I got home Sunday night, she was dead.\"\n\nBecky started, putting a hand to her throat as though choking off the cry which had risen there.\n\n\"He'd . . . violated her . . . beaten her almost to death, then slid a knife into her heart. I couldn't prove it, of course. I was just a boy. No one listened to me.\"\n\nBrody held her hand between his own, without looking up. She was crying by then, silent tears for the lonely, lost boy he'd been, and for May, the woman who'd taken such good care of him.\n\n\"That's not what I have to tell you, though.\" He patted the back of her hand. \"After the gravedigger finished covering her up, I went and got my stuff\u2014didn't have much--\" He laughed, not a funny sound at all. \"--and I slit the storekeepers throat while he slept.\"\n\nHis tone didn't change.\n\n\"I stole everything I could carry from that store in one night, all the gold, jewelry, and cash in his safe, and struck out for Cassiar.\"\n\nBrody shrugged. \"You know most of the rest, but I got my start in the gold fields selling merchandise I stole from the store of a man I murdered, and I thought you should know that.\"\n\nBecky's small hand was clenched tightly about his, he realized. He looked up to find her face tear&#x2011;streaked and furrowed with emotion. Brody straightened in alarm, sure she was crying for what they might have had together if he weren't a thief and a murderer.\n\nHe turned toward her. \"Becky, I'm so sorry--\"\n\nBecky fell across his lap, sobbing, and he comforted her as well as he was able while his own heart tore in two. When she'd cried herself out, he gave her his handkerchief, apologizing again.\n\nBecky waved her hand to stop his speech, her palm so close she was practically polishing his nose. When she finished mopping her eyes and blowing her nose (he wondered inanely how ladies managed to sound so ladylike while blowing their noses) she rested her head on his shoulder.\n\n\"I'm crying for you, not for me, ninny.\"\n\nA great welling of gladness filled Brody's belly and came rolling out in a deep rumble of laughter, because she'd called him a ninny.\n\nBecky lifted her head with a questioning glance.\n\nBrody hugged her back to his side. \"You called me a ninny.\"\n\n\"And . . .?\"\n\n\"You wouldn't call me a ninny if you were sending me away.\"\n\nBecky sat straight up and hit him, an easy fist to his ribcage.\n\nHe 'oof'ed to make her happy.\n\n\"How could you think I wouldn't understand that, Brody Easton?\" She rose and turned away with a haughty flounce and her nose in the air.\n\nBrody was faster, though, and vaulted the log, stepping into her path and falling directly to his knees with a pleading, upturned face. \"I beg your forgiveness, Miss Connor. Please allow me to make it up to you in some way.\"\n\nBecky pursed her lips. \"I'll need time to devise an appropriate punishment, Mr. Easton.\"\n\nHe twinkled up at her, and she couldn't help embracing him.\n\nUnfortunately, he was at exactly the right level to turn his head and rub his cheek against her breast. \"Mmm.\"\n\n\"Miss Connor! Mr. Easton!\"\n\nBrody's murmur turned to a groan as Margaret's voice summoned them.\n\nBecky petted his hair, smiling tenderly.\n\nThey walked back to the house holding hands. When they crossed a fall of light from the library window, Brody stopped in his tracks. \"Jesus Christ.\"\n\n\"What?\"\n\n\"Becky, there's no delicate way to say this . . . you look\u2014\" Brody stopped speaking when he realized there really was no way to tell her she looked a fright without sounding beastly. He didn't need to finish the sentence, though.\n\nBecky figured it out, and her hands flew to her face. She wondered at how bad it must be to have occasioned Brody's comment. She began to blot with his handkerchief.\n\nMargaret waited at the corner, probably thinking they were whispering love words.\n\nHe shook his head slowly, side&#x2011;to&#x2011;side. \"That's not going to help. They'll know you've been crying.\"\n\nHe squared his shoulders and turned toward the porch, resigned. He hoped his nose didn't get broken this time.\n\nBecky dug her heels in and held onto his elbow, shaking her head. \"No.\"\n\n\"Becky . . . .\"\n\n\"No. I refuse to be the cause of you being beaten. I can explain it just fine if you aren't here. If you're here, they'll hit first and talk later.\"\n\n\"I'm not leaving you to face th--\"\n\n\"Oh, pshaw. That's a lovely sentiment, Brody, and a noble gesture if you actually believe I'm in danger of being hurt. Otherwise, it's just reckless.\"\n\nBrody frowned, not liking the idea at all.\n\n\"Miss Connor!\" Margaret was getting impatient.\n\n\"Brody!\" He wasn't going to agree, she could tell. \"Brody, if you don't leave this instant, I'll refuse to see you for at least a month, maybe more.\"\n\nHis eyebrows rose.\n\n\"Go ahead and tell them about the quicksand, too, because I'll definitely get beaten then . . . No, wait! Better yet, I'll go tell everyone right now.\"\n\nShe turned away, but he caught her elbow this time. \"Alright. I concede. I'll leave, but I do so under duress.\"\n\nBecky gave him a brilliant smile, a quick peck on the cheek, and shoved him toward the barn. \"Go.\"\n\nHe went.\n\n\u2014:\u2014:\u2014:\u2014:\u2014\n\nShe took her time strolling along the edge of the porch, and sat down with her back directly to the lantern by the door. \"Margaret, could you please fetch Mrs. Connor; I have a question for her. You may leave directly after.\"\n\n\"Yes, Miss Becky.\"\n\nCat appeared at the door a minute later. \"Becky? You wanted to ask a question?\"\n\n\"Could you come out and close the door?\"\n\nCatherine sighed, hoping it wasn't about sex again.\n\nAs soon as the door closed behind Catherine, Becky turned her face to the light.\n\nCat gasped and reached for her. \"What did he--\"\n\nBecky giggled, which had the dual effect of instantly vanquishing a brewing storm and rousing Cat's curiosity.\n\n\"I need your help.\"\n\n\u2014:\u2014:\u2014:\u2014:\u2014\n\nCatherine appeared silently in the archway to the parlor.\n\n\"Where's Becky?\" Colt asked, immediately suspicious.\n\nCat smiled\u2014not a soothing, wifely smile, but an about&#x2011;to&#x2011;bust&#x2011;out&#x2011;laughing smile.\n\nHe relaxed. Slightly.\n\n\"Colt . . . .\"\n\nHe growled.\n\n\"Do you remember when you told me about living in an old chicken house near an orchard because you 'ate real good' that summer, but you were only five and all alone in the world?\"\n\nColt's expression went from suspicion to curiosity and from there to impatience. He rolled his eyes. \"Yes, wife, I do.\"\n\n\"Jeremiah--\"\n\n\"Uh&#x2011;oh.\"\n\nCatherine frowned, so he smiled at her, charmingly, he hoped.\n\n\"Do you remember telling me about your twelfth birthday--\"\n\nHe held up his hand to stop her. He'd been beaten with a belt three times that day and didn't particularly want to remember. \"Yes.\"\n\n\"Do you remember how I reacted?\" She looked from one husband to the other.\n\nColt and Jem smiled the exact same loving, tolerant smile, and nodded. She'd bawled her eyes out in each instance, and they'd ended up comforting her.\n\nShe smiled widely in return.\n\n\"This,\" she said, reaching into the foyer beyond the archway wall, \"is like that,\" she finished, pulling Becky into the light.\n\n\u2014:\u2014:\u2014:\u2014:\u2014Chapter 24 a \u2014:\u2014:\u2014:\u2014:\u2014\n\n\"I don't like it.\"\n\n\"Neither do I.\"\n\nKendall and Wilson were standing shoulder&#x2011;to&#x2011;shoulder on their front porch, blocking Brody's access to the front door and telling him what they thought about him leaving Becky to face them alone the night before. Kendall's arms were crossed on his chest and Wilson stood with his fists on his hips. Both men had their shirt sleeves rolled up, exposing more brawn than Brody wanted to face down without a weapon. He kept his hands by his sides.\n\nBrody answered, \"And, sirs, that's exactly what I told Becky last night, about ten times, right by that corner of the porch.\"\n\n\"But Becky can be . . .\" He paused for a noticeable span of time \". . . persistent.\"\n\nThe corner of Wilson's right eye twitched.\n\n\"She had it in her mind to protect me, and she dug her heels in.\" He shrugged helplessly.\n\n\"Since I didn't believe there was the remotest chance of her being harmed,\" Brody looked from one man to the other, wordlessly pointing out that they were the ones he'd been trusting. \"I let her have her way with this.\"\n\nHe shrugged again.\n\nThey stared silently some more, then Wilson turned and went inside without a word. Kendall made Brody tough it out, eye to eye, for another minute or so, then followed his partner inside, leaving the front door open behind him.\n\nBrody heaved a sigh of relief before going in. He didn't know if he could best either man in a fight, and he didn't want to try. Whether he won or lost, it would hurt like hell.\n\n\u2014:\u2014:\u2014:\u2014:\u2014\n\nBecky had a hard time keeping her mind on the after&#x2011;dinner conversation. Most of the adults\u2014including Brody\u2014were seated on the porch, with the exception of Nanny, who'd left with Caleb for their cabin overlooking the river to the north. The family was discussing the petroleum industry, which normally topped Becky's list of favorite topics. Not only did she have her secret theory involving oil, but discussing the industry afforded her the opportunity to tease Jeremiah, a less common occurrence than being able to tease Colt. Often she began by claiming that the internal combustion engine was doomed to fail because steam engines or hot air balloons were much more practical. Lately a new bicycle design had become very popular, though, and she'd planned to substitute that for steam.\n\nSadly, Becky couldn't concentrate on the conversation because her mind\u2014and eyes\u2014were occupied with Brody.\n\nAlmost a month had passed since that day in the bunkhouse\u2014a month of frustrating kisses and hurried embraces. A lot of her nervousness had faded as they became more familiar, and Becky wanted more. She wanted Brody to touch her, she wanted to feel him against her again, and she had an idea how they could be together, for at least a little bit longer than their chaperones allowed. Her only problem now was how to tell Brody without sounding like a saloon girl, or giving him the impression that she wanted to do a whole lot more than kissing.\n\nAbruptly, she stood, forcing the men to do the same. \"Mr. Easton, would you care to walk with me?\"\n\nShe ignored the sharp look Nanny shot her way, much as she ignored the social convention that dictated a lady shouldn't ask a gentleman to walk with her.\n\nBrody didn't seem bothered by it. \"Yes, Miss Connor, I'd like that very much.\"",
        "Before the rest of the family could panic, Becky announced, \"We'll stay in sight of the porch.\"\n\nShe took Brody's arm, and they went for a stroll around Catherine's roses, along the paddock fence, across to Cookie's prized lemon tree, and back up the slope, as slowly as possible. Along the way, Becky told Brody her plan.\n\nBut first she offered a preface. \"Brody\u2014\"\n\n\"Mmm?\"\n\n\"I want to ask you something but I don't want to seem . . . fast or . . . too forward.\"\n\nHe patted the hand on his arm. \"I would never think that of you.\"\n\nShe smiled sideways at him, unintentionally reinforcing his belief she was shy when it came to certain aspects of their relationship.\n\n\"Well, I'd like to spend time without someone staring at us, so we can hold hands and not worry about whether we're sitting an inch too close to one another. It makes me nervous.\"\n\nBrody chuckled, belying his increased heart rate. He told himself not to be stupid. Whatever had happened in the bunkhouse was before. He was courting her properly now, and it was highly unlikely that Becky was suggesting anything other than exactly what she'd stated.\n\n\"I think your brothers are more concerned about your heart than your nerves.\" Heart wasn't the body part he'd been thinking, of course.\n\n\"Well, I had an idea . . . .\"\n\n\u2014:\u2014:\u2014:\u2014:\u2014Chapter 24b \u2014:\u2014:\u2014:\u2014:\u2014\n\nThis was insane, Brody thought, ducking his head to avoid a branch. If Kendall and Wilson didn't kill him, keeping his hands off Becky would probably do the job.\n\nHe didn't duck far enough and the next branch knocked his hat off. Reining Bear to a stop, Brody dismounted to retrieve it. He whacked the dust off on his leg and stilled, listening. After three or four minutes of hearing nothing but birds and bugs, he decided to walk for a ways. Being extra&#x2011;cautious couldn't hurt, and he was at least a couple of hours early for his rendezvous with Becky, since today had been another boring, dusty fence&#x2011;riding day. He cursed Kendall again, but the words lacked their previous heat, even in his head.\n\nBear lifted his head, ears twitching, and Brody stopped to listen again.\n\nBecky's plan wasn't bad. It was simple, but it made sense: if Brody wasn't around, nobody watched her. She didn't need a nanny, the household was noisy and busy, and nobody would miss her if she slipped out for half an hour. So Brody had gone north instead of south when he ran out of fences today. He'd kept to the trees along the river, crossed the creek and turned south, keeping out of sight of the house and outbuildings. He had a biscuit and an apple left from lunch. He figured he'd clean up in the swimming hole, dry off, eat, and snooze while he waited.\n\n\u2014:\u2014:\u2014:\u2014:\u2014\n\nBecky studied the woods around her carefully before bending her head to the tiny buttons of her bodice. It was an especially hot day, and she didn't want to run into someone else who'd decided to come down for a dip before dinner.\n\nShe shrugged the dress from her shoulders and stepped backwards, freeing her feet. Draping it over the nearest bush, she untied her underskirt and stepped out of that, also. Shoes, stockings, and her corset cover followed, though she wasn't corseted today. It wasn't as though anyone but Cat and Nanny would notice a little extra width in Becky's waist. God knew, she didn't have a bosom that would jiggle about drawing attention.\n\nWhen she waded into the water, Becky wore only her chemise and a split petticoat.\n\nShe sighed as she pushed away from the bank, floating toward the middle of the creek. The water was so cool here, where the creek broadened into a series of slow&#x2011;moving pools. At this time of day, most of the water was in the shade, though the sun was still a few hours above the horizon.\n\nBecky twirled in the pool, the water like cool silk on her heated limbs. Leaning her head back, she floated quietly beneath the flickering leaves and sky. She hoped it was this peaceful\u2014and deserted\u2014when she came to meet Brody here after supper. She smiled, imagining wrapping her arms around his waist as he kissed her deeply.\n\n\"Mmm.\" She closed her eyes, sighing, her hands fanning the water to keep herself afloat.\n\n\u2014:\u2014:\u2014:\u2014:\u2014\n\nShe was a complete surprise to Brody.\n\nThe creek was slow here, but running water always made some noise, and Becky wasn't making any.\n\nHe'd been winding through the woods to the creek and, when he stepped out of the brush onto the bank only twenty feet upstream from where he'd been aiming, he paused, smiling smugly. A flicker of white caught his eye and when he looked down, there she was, a magical water&#x2011;sprite awaiting him.\n\nA pale accent on the water's dark surface, she floated lightly, strands of long hair floating in bronze rays around her face, a scrap of sheer white fabric clinging to her breasts and doing nothing to conceal their tiny, dark tips.\n\nWhen he could breathe again, Brody shifted painfully in the saddle, his stiffening cock crushed against the pommel. He kneed Bear and walked him along the bank, waiting for Becky to notice she had company. It didn't take long.\n\n\u2014:\u2014:\u2014:\u2014:\u2014\n\nOne second, she was alone, floating, peaceful, dreaming of Brody, and the next second, he was there.\n\nBecky gasped, righting herself and twisting partway toward him, her eyes wide, serenity fleeing with her solitude.\n\nBrody's hat was off and he was leaning on the pommel, smiling down at her.\n\n\"Brody!\" she exclaimed on a rush of air.\n\n\"Miss Connor.\" He nodded, smiling wryly. \"Did I mistake the time of our appointment?\"\n\nShe made a face, paddling sideways until she could touch bottom. \"Of course not! You're not supposed to be here now!\"\n\nShe got her feet on solid ground and crossed her arms, putting one hand on each shoulder to cover her wet chemise so she could face him squarely. \"Why are you\u2014oh, never mind!\"\n\nShe glared.\n\nHe gazed calmly.\n\n\"Brody!\" she chastised. \"Turn around so I can get out.\"\n\n\"Are you cold?\"\n\n\"No, of course not.\"\n\nHe dismounted and turned away, leading Bear.\n\nBecky took a deep, relieved breath.\n\nThen he looped the reins around a branch, turned back toward the creek, and stood on one foot so he could pull the boot from his other.\n\nBecky's eyes widened. \"Brody! No!\"\n\nHe dropped the boot and lifted his left foot.\n\n\"Brody!\" she hissed again, alarmed. He could not possibly think to swim with her! She wanted to be alone with him, but she didn't want to be mostly naked at the time! Well, not to start with, anyway.\n\nBecky swam for the opposite bank, where her clothes were waiting, keeping one eye on Brody until he pulled his shirt off. She got a glimpse of bare skin and jerked her head around. She wasn't even acting casual about it now, just swimming as fast as she could. She ignored the splash\u2014she was a lot closer to the shore than he was! At least she'd have her dress to hold in front of her--\n\nHer toes had just touched ground when Brody surfaced a yard to her right, the same distance from land as Becky.\n\nShe gasped and froze.\n\nBrody shook his head, swinging his hair away from his face, grinning widely.\n\nNow that she was stuck in the water with him, Becky was no longer alarmed. He was smiling like the boys did when they got caught feeding Topper at the table or stealing cookies from the pantry. She rolled her eyes. \"What exactly do you think you're doing, Brody Easton?\"\n\nHe stepped forward, and she stepped back. \"Well, I think I'm walking, though I'm in the creek, so I'd rather be swimming.\"\n\nHe took another step, and so did she, narrowing her eyes in warning. \"Brody.\"\n\nHe dipped his chin, the only notice she had before he lunged.\n\n\"Eee--!\" Becky's shriek turned to laughter as Brody caught her about the waist, swinging her up and into deeper water. She was already paddling with her feet, sweeping with her hands, when she realized he was standing, his arm around her waist supporting her. Her laughter faded. She stopped paddling to wedge her hands against his chest, holding herself as far away from him as possible. He was right there, though, looking at her so intently . . . the pulses in her neck began to race.\n\nHis wet hair was otter&#x2011;dark, and in this light, the pale eyes stood out like crystal against his glowing bronze skin. A drop of water clung to the end of his nose, which was a little crooked from having been broken. Her eyes dropped to his lips, which were the color of . . . well, something delicious . . . she was having trouble thinking and couldn't put a name to the flavor. The dark hair on his chest tickled her palms, and she bent her fingers experimentally to feel her fingertips moving over it.\n\nWith no way to hold herself in place, her body tried to rise to the surface, pressing itself against Brody instead.\n\nFeeling her tremble and intuiting the cause, Brody shifted his grip, putting both hands on the sides of her waist to hold her hips away from him.\n\nBecky spread her hands apart. They hadn't taken their eyes off each other and hadn't moved, though his chest was rising and falling in time with her own rapid respirations. Becky closed her mouth and tipped her head down, breathing through her nose as she hid the lower third of her face in the water. She wondered how much he could see of her body. Wondering the reverse, she angled her eyes sharply upward, before she could reflexively check to see. That way his chest and ribcage were visible, but nothing else.\n\n\"Becky.\" His voice was rough as he inched her body closer, his eyes searing.\n\nShe didn't do anything. As Brody gathered her in, Becky's hands slid naturally up and over his shoulders. As he lifted her toward his mouth, her lips naturally came out of the water. When he kissed her, she stiffened momentarily. She wasn't nervous, exactly, but he was naked, and she didn't know how to hold herself properly, instead of rubbing against him in an unseemly way.\n\nThen he kissed her, and Becky forgot to worry.\n\nHis lips were cool, but where her breasts touched his chest, she burned. Wet skin gave their kisses an added dimension of sensuality\u2014Brody showing her another thing she'd never experienced before. He turned his head slowly, brushing his lips sideways across her own. She caught on and did the same. Their tongues tangled gently in the middle.\n\nUnconsciously, Becky mimicked the side&#x2011;to&#x2011;side motion with her body, rubbing her breasts against him. The feeling was startlingly erotic. She gasped against his mouth and did it again, his chest hair flitting like a million tiny fingers across her nipples, despite the fine lawn of her chemise between them. Brody helped, opening her chemise by simply hooking one big finger between the top two buttons and sweeping down, popping the rest. He turned his body away from hers and dragged her sideways across his chest again, her nipples uncovered now.\n\nShe made a small, helpless noise, and Brody pulled her in, wrapping his arms around her middle and holding her so close that the water between them flowed out in little ripples. One hand dipped to cup her bottom as he'd done in the bunkhouse, but this was nothing like the bunkhouse.\n\nIn the bunkhouse, gravity had held her down even as she'd clung to Brody like a limpet to the shore. Gravity was the friend of a modest woman, holding her skirts in place, her hands at her sides, and pinning her feet to the floor.\n\nWater, on the other hand, was capricious, faithful only to the moods and tides which drew it.\n\nWhen Brody cupped her bottom this time, buoyancy lifted her legs to hug his hips. When he pulled her close, the water tugged at the split center seam of her petticoat, and it wasn't Brody's thigh against her soft pink folds, but Brody himself. With her legs splayed and her hips angled, the current pushed her closer, and the puffy lips at the junction of her thighs landed directly on his erection.\n\nHe was so hard it was like straddling a branch, Becky thought dimly, if the branch was made of wood and hot velvet and made your pussy feel like you were melting over it.\n\nWater was a friend to the wanton, Becky decided.\n\nNo longer caring whether she seemed forward, Becky rocked her hips, feeling for the first time the sensual friction of Brody's skin sliding against the intimate places of her body.\n\nHe shuddered, straining not to move. It took everything Brody had not to lift her and set her back down on his cock. A few inches up, a few inches down\u2014that's all it would take\u2014one small motion and he could bury himself in Becky's body and stay there forever. Brody's hand tightened on her shapely cheek. His fingers brushed bare skin and he shifted slightly, pushing her petticoat further aside to get his hands on her. He was damn close to being out of control and he knew it.\n\nIf she wasn't wriggling around that way, trying to climb him . . . .\n\nBrody pulled her more tightly to him, trying both to hold her still and hold himself in check, which was difficult . . . he concentrated on her mouth, catching her lower lip between his teeth and tugging gently, then sucking on the spot he'd bitten. He did it again and again.\n\nBecky tipped her chin up, trying to get more of his mouth, and Brody went for her neck instead, kissing and nipping a hot line from her earlobe to her collarbone. He lifted her higher, holding his breath as her pussy moved against his cock, but he got her where he wanted and sucked the tip of one perfect, upturned mound directly into his mouth.\n\nBecky tore her hand away from the back of his head just in time to clap it over her mouth.\n\nHe supported her weight on one ropy forearm, squeezing her breast as he suckled. Becky arched suddenly, leaning back as she writhed, and he almost lost her. He moved his hand to her spine, but when she straightened, her weight shifted again, and she slipped down, her opening landing directly on the broad, silken head of his cock.\n\nThey both froze on a sharp intake of air, Brody's jaw taut and Becky's eyes wide. He lifted her carefully up and out, letting her settle back where she'd been, on the bottom ridge of the hard rod pinned between them, which was torture enough.\n\nBecky felt a fast flash of relief, which immediately dissolved in disgust when she recognized her own cowardice. This wasn't what she wanted. She wasn't a girl, splashing around in a puddle, she was a woman, and she wanted to dive right in. She wanted Brody, wanted to feel him against her, inside her.\n\nBecky wrapped her arms around his neck, using her strong thigh muscles to lever herself back onto the head of his cock, arching her back to try and seat herself.\n\nBrody's fingers dug into her flesh as he studied her face, breathing hard.\n\nShe wiggled her hips, her brow furrowed. He was too big: it wasn't going in, and she didn't know what to do.\n\nBrody lifted her an inch, kissing her and stroking her back. \"Wait. Just wait. One minute.\"\n\nHe licked her nipple, since her breasts were right there, then made his way back to her lips and devoured her while he tried to calm his racing heart, racing mind, and throbbing cock. \"Becky?\"\n\n\"Mmm,\" she murmured against his temple.\n\n\"We can't. You know we can't.\" His voice was low, raspy.\n\nHer lashes fluttered, baring sparkling topaz eyes, which lit somberly on his. \"Brody, please. Please don't say no to me.\"\n\nHe groaned, burying his face in the silken hollow between her small breasts. \"Jesus, Becky.\"\n\nDidn't she know what she was doing to him?\n\nSeveral long, shuddering breaths later, he lifted his mouth to hers and turned, carrying her out of the creek.\n\nBecky tamped down a sudden rush of alarm as the receding water bared her body to the air. The fine white cotton of her petticoat was completely sheer when wet, and her chemise was hanging open. She was as good as naked.\n\nShe buried her face in his neck to cover her blush, but he knew what she was doing and chuckled, deep in his chest. She opened one eye to peek when he sat down, her legs still wrapped around his waist. They were on the same tree they usually occupied on their courting walks, when most of the time, they were forced to sit at least a foot apart, and she'd never been able to feel his body against hers.\n\nBrody pried her face from his neck. Cupping it between his hands, he kissed her several times, which had the dual benefit of warming her up and banishing most of her embarrassment. By the time he was done kissing her, she was surging against him, her palms spread across his broad upper back, where the water had turned his skin to slippery velvet.\n\nHe pushed the straps of her chemise off her shoulders and draped the wet garment over the log beside him. Supporting her with an arm around her waist, he traced the outer curves of her breasts, his eyes intense as they followed the path of his finger. He traced the melon&#x2011;colored circles around each tip until they hardened into tiny buds, which he lifted to his lips and licked like ice cream.\n\nBecky leaned back, a hum of pleasure vibrating in her throat.\n\nBrody captured her eyes as he untied her petticoat strings, turning the petticoat into two loose legs connected by nothing at all. Once untied, he folded the tops aside like petals, exposing Becky, the fragrant center of the rose in his lap. She was slim and, except for the small breasts, boyish from the waist up, but her hips swelled into womanliness, and the thighs parted over his were rounded and sleek from riding. Her small triangular thatch of hair was light brown.\n\nWhen he examined her hotly, Becky covered her face. He brushed her hands away to kiss her again, letting his own hands explore. She quivered when he began to stroke her thigh, the backs of his fingers sweeping upward and slowing as they approached the soft folds between her legs.\n\nBecky stiffened and Brody broke the kiss, shifting her to one side. She nestled against his shoulder, feeling less exposed somehow when they weren't face to face, which was ridiculous, as naked as she was.\n\nCradling her, Brody parted her pussy lips with one slow, insidious stroke. She gasped and shuddered.\n\nHe let his finger dip lower, sliding across the opening to collect her juices and smooth them upward through her crease. He did it several times, adding fingers but not penetrating. When she was slick with moisture, he held her open, stroking her clit with the wide, flat pad of his thumb. It was an awkward position for him, but he knew she'd be more relaxed without him watching her. God knew, he didn't need his eyes; he was so attuned to Becky's desire that a mere shrug of her shoulder could tell him where to direct his next kiss, his next caress.\n\nAs her body responded to the sensual stimulation, Becky lost her inhibitions. Her belly and breasts rose and fell more quickly, and very soon she was facing him again, her fingers digging into the thick pads of muscle atop his shoulders, her hips rocking as her thighs gripped his waist, announcing her impending climax.\n\nBrody's nostrils flared as he watched her lids drift down over amber eyes that were glazed with passion. Her lips parted, her brow wrinkled, and her whole body stiffened, her flesh throbbing against his fingers.\n\nBrody gentled his touch while Becky regained her composure, then slid one long finger directly into her puss.\n\nShe whimpered as her body clamped down.\n\nWhen he worked another finger inside her alongside the first, she bit her lip stifling an indelicate squeal.\n\nHe soothed her with another kiss, and she soon relaxed around his fingers.\n\nAfter another minute of opening her passage, he repositioned her higher on his knees, guiding himself with a hand he could use to control her penetration. He gritted his teeth at the first touch of wetness, and moved the crown in a small circle around her entrance, lubricating himself. \"Sweetheart?'\n\nShe gave a tiny nod, but she'd seen the instrument of his invasion, and her eyes were panicky.\n\nBrody lowered his knees to ease the pressure and bent to nuzzle her neck, moving his fingers back to her slick velvet folds. Some pain was inevitable for her, but some he could avoid with care.",
        "It wasn't long before her arms were around his neck again, her upper body swaying as he teased her, describing circles which didn't quite touch the little nub where she so desperately needed his touch. She arched and curled, and he felt the liquid softening of her flesh against him.\n\nWhen her gyrations increased, he moved his feet again, lifting his knees, and the head of his cock popped easily into her creamy little quim. Unwittingly, he groaned, and she froze, expecting agony. When no lashings of pain assaulted her, Becky shifted her hips, experimenting. Instead of torment, she discovered the sweeter torture of need, the burning desire for Brody to fill her, to soothe the empty space between her legs.\n\nAfter spending so much time on horseback, Becky didn't bleed, but Brody could tell his penetration was uncomfortable for her. As much as he wanted to thrust deeply, to sheath himself in the heat that beckoned him forward, he resigned himself to patience. It was a mere matter of advance and retreat, loosening her as her wetness coated his aching flesh. He kept his mouth on some part of her body the whole time, kissing her, bending to suckle at the rosy tips of her soft breasts, nipping gently at her lobes.\n\nAfter the first few minutes, Becky began to murmur and moan, the soft, nearly constant song of pleasure vibrating against his lips.\n\nWhen Brody had embedded about two&#x2011;thirds of his cock inside her, he paused to run his thumb up over her clit, parting the folds more fully. Once, twice more he did it. When Becky began to pant and wiggle, he moved his thumb, slipped his index finger to the opposite side, and pinched gently, his fingers matching the tempo of his hips as he thrust deeply, impaling her. Becky shattered, her innermost muscles contracting as she twisted around him.\n\nBrody moved his hands to her hips, trying to control her frantic struggles, but she was insensate, immersed in the maelstrom. He gave up on stopping her and guided her into a more effective rhythm. Her contractions slowed, but Becky never stopped moaning as she rode him, her eyes closed, her graceful neck arched.\n\nHis eyes fierce, Brody took in each quiver of emotion across her flushed cheeks, every wrinkle of her silky brow, each tiny pout. She was no longer hiding her passion but free to find her pleasure.\n\nThe tempo of her song changed and her features smoothed, taking on the intense, inward&#x2011;facing concentration of impending release. Brody's fingertips dented the pillowy roundness of her hips, his jaw clenching in the rhythm of her ride. He forced himself to gentle his grip even as his ribcage expanded, blood pounding in his temples, his cock swelling inside her. Becky's pussy was liquid fire, consuming him, so tight Brody thought he'd die when he came.\n\nHe held it and held it until he had no choice. He couldn't wait any longer for her. He yanked her hips down, brutally slamming into her core. Becky's mouth opened on a silent scream, and she held her breath for one long&#x2011;explosive moment, then she folded as though punched in the belly, Brody's hot cream bathing her inner walls as she came.\n\n\u2014:\u2014:\u2014:\u2014:\u2014\n\nLying under a bush upstream of the spot where Brody had emerged from the forest, Lemuel swallowed, his throat dry as he watched the woman, keeping the glasses glued to the tiny pink bud of her asshole, exposed by her position on the cowboy's lap.\n\nHe couldn't believe that piece of shit cowhand was stickin' it to Becky Connor. Women were half&#x2011;wits about a pretty face, though, no matter who was wearin' it.\n\nHe'd seen Becky strolling right into the trees today and guessed where she was going. It was just plain luck nobody had seen him tearing down the main track to the ranch and veering off just before the bridge. He was elated, thinking how he'd finally got her, and didn't even have to share her with Ernesto. Well, he'd probably fetch Ern out to the cabin after a couple days of plugging her himself, so he could follow the plan and pin Becky's death on the dumb shit.\n\nHe'd heard a splash as he dismounted, and crept from the trees just in time to see that damned cowboy poppin' up next to her.\n\nWhen they were done fuckin', the cowboy had to hop bare&#x2011;assed back across the creek on some rocks, and Lem watched Becky's little titties as she giggled at him.\n\nErnesto had said she had tiny tits, and he was right about that. He'd been comparing them to Miz Connor's at the time. \"I seen her in town just afore she whelped one a them little bastards of hers, and a blind man couldn't a'missed them titties, Lem, they was so goddamn big.\"\n\nErnie was right about that, too. Missus Connor's knockers doubled right up when she was carrying. Once, when Lem had been out for one of his late&#x2011;night rambles, he'd seen her half&#x2011;naked in the downstairs parlor, bold as you please, that half&#x2011;breed \"husband\" playin' with her big titties. He did nothing but suck and tweak on those hard nips for 'bout half an hour, and damned if she didn't come twice. Lem couldn't see the whole room through the slit in the drapes, but he could see Kendall's hands, and they hadn't been on her pussy when she started in to squealin'. Before Kendall slid his cock into the bitch, Lem had spilled his seed right on the side of their nice white house.\n\nHis hips shifted as he ground his hips against the loamy soil, cursing the cowboy.\n\nLem shook his head slightly, watching Becky bend over to pull her petticoat up. He got a fast glimpse of still&#x2011;wet pink and cursed to himself. He woulda bet money this bitch was the teasin' kind who wouldn't do it without a ring on her finger, but damn, he woulda been wrong. She was a slut just like her sister. He bet she'd like what he had planned for her.\n\nKeeping his eye glued to the glasses so he could watch Becky dress, Lemuel lifted one hip and wriggled his hand down the front of his pants.\n\nShe'd made a bunch of little noises while that cowboy was plowing her, but she was gonna scream for him.\n\n\u2014:\u2014:\u2014:\u2014:\u2014\n\n.\n\nWRITERLY TIDBIT/CONFESSION: I'm overly-self-critical and seldom completely satisfied with what I've written\u2014a thought process I'm trying to outgrow\u2014but I love this scene. I like how their attitudes reverse: Becky's near-panic becomes a deliberate surrender to her passion, while Brody's early mastery becomes a struggle to maintain control. To me, this scene is what I'm aiming for when I write erotica\u2014the sex isn't just a physical act, but part of the characters' personal growth. The cool, shady swimming hole is also a real-life favorite of mine, and I hope I did a good job conveying the feeling of that setting. As always, thank you for any and all feedback! \n\n--Stefanie\n\nPS\u2014We're about half-way through now\u2014the book is 45 chapters, but the chapters are longer in the last half."
    ],
    "authorname": "SteffiOlsen",
    "tags": [
        "first time",
        "cowboy",
        "ranch",
        "swimming",
        "voyeur",
        "danger",
        "virgin",
        "sneaking",
        "skinny-dipping",
        "adventure"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/texas-trio-pt-02-beckys-debt-ch-23-24"
}