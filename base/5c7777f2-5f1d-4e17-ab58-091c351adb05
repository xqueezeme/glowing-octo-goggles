{
    "title": "Marte's Challenge No. 1",
    "pages": [
        "Here is a story from a few years ago. I was 27 at the time and very conservative. I hadn't dated or had sex with anyone in a couple of years. I rarely ever masturbated either. I met this guy on the Internet and he convinced me to take a few challenges to make me more outgoing and daring. The challenges started off with going pantyless while wearing a dress in public and even though it seems like nothing to me now, it seemed huge to me then. The challenges gradually became more and more daring. I protested some of them, but I really enjoyed doing them and got so turned on just thinking about them, even though they made me nervous as hell.\n\nEven though he lived states away he knew a lot about my friends and me. He also knew how wild and daring my two best friends, Terra and Cindy were. My next challenge was to let Terra and Cindy give me a challenge. They knew all about the challenges I had been doing so approaching them with this was terrifying to me because they knew what was going on and they were very mischievous.\n\nAfter telling them what my challenge was, I waited for days in terror wondering what they would come up with, yet I was a bit excited as well. Friday night Terra and Cindy came over to watch movies with me. I live up in the San Bernardino hills alone, so I get lonely at night. We sat and ate dinner and had conversation before retiring to the living room for a movie. The whole dinner Terra and Cindy were giggling and I wanted to ask them so bad what was funny but, I already knew.\n\nWhen we sat down in the living room Terra looked at me with a big grin on her face. She told me that they had come up with my challenge. I gasped and felt like my breath had been taken away. I wasn't ready to hear this. Cindy chimed in and told me that my challenge would take place tomorrow and that it involved my shell toy and public. I was worried, but it didn't seem too awful bad. I asked for more details but they refused to fill me in more until tomorrow morning. This worried me a bit. As we sat and watched the movie, I tried to guess and visualize what they would have me do. I could feel myself becoming turned on. The longer I thought about it the more and more turned on I got. I could feel myself starting to get wet and hot. Cindy and Terra were sitting on either side of me. Both were sitting close enough that our arms and legs were touching so I couldn't react at all to how I was feeling.\n\nWhen the movie was over, we decided to go to bed since it was going to be a long day tomorrow. We all piled into my bed. Terra slept on my right side, Cindy on my left and me in the middle. It took me awhile before I could clear my mind enough to fall asleep.\n\nI slowly began to awake in the morning when I noticed something strange. To my horror, I felt a hand on me. I was wearing only panties and a baby t-shirt. I opened my eyes and noticed that Terra's hand was resting down by my pussy. Half of her hand was on my pelvic bone, the other half resting on my lips. I was terrified. I had never been with a woman or had a woman touch me and had no intentions of such either. I lay there stiff as a board panicking, a thousand thoughts running through my head. The odd part was as horrifying as this was, I woke up horny and thankful the hand was just lying there motionless. I chalked it up as Terra just being asleep.\n\nA few minutes later her hand slowly began to move back and forth over the top of my lips. I didn't know what to do at first but after a few more times I freaked and shot out of the bed and into the bathroom. I was pretty sure Terra was awake and hitting on me. She was a great friend and good looking by any means, but I had never looked at her in a sexual way. I jumped into the shower and tried to put the past events behind me. As I washed my body I noticed how alive it felt. The touch of my cloth over my breasts and over my vagina sent electricity through my body. I wanted to touch myself more but knew it wasn't best with having to do the challenge today. I didn't know how I should act when I left the bathroom so I just pretended that nothing happened.\n\nI re-entered my bedroom to get dressed. Terra and Cindy were up and had picked out my outfit to wear. Lying on my bed was a blue flower dress and light blue panties. This didn't seem so bad. I waited a few seconds hoping they would leave and let me dress but they just sat on the edge of the bed looking at me.\n\n\"Well are you going to get dressed?\" Terra asked.\n\nWe had always changed in the same room, but this time it was different. They weren't changing and they were just sitting there watching me. Not wanting to make a big deal of it, I dropped my towel and quickly grabbed my panties sliding them on. I felt very awkward having my best friends watch me dress. I reached down and noticed that they had not picked out a bra for me.\n\n\"Where is my bra?\" I asked innocently.\n\nTerra and Cindy giggled. \"You are not wearing a bra for the challenge,\u201d Cindy added.\n\nWondering what my challenge in fact was I asked, \"So what exactly is my challenge?\"\n\nTerra promptly replied, \"Get dressed and we will fill you in.\"\n\nThis worried me a bit that they wouldn't give me all the details but I had no choice but to go on. I had agreed to do the challenge blindly and was going to have to pay the consequences. I finished dressing before the staring eyes and sat down on the end of the bed facing them. Terra said, \"Okay. This is your challenge. You are to get your shell out and wear it while driving to Bluejay. Leave the shell on low.\"\n\nThis had me worried already. It didn't take much for me to have an orgasm and the shell gave me great orgasms so it would be a real challenge just driving, but I knew that wasn't the end of the challenge, because they said it involved public the night before.\n\nTerra added, \"When we get to Bluejay you will go into the donut shop and order a dozen donuts.\"\n\nI was worried and shocked. \"No way. I am not going to be able to speak after wearing the shell for ten minutes driving over there. My words will be all broken.\"\n\nTerra quickly replied, \"A challenge is a challenge.\"\n\nI replied in a snotty attitude, \"Fine then! I will do it.\"\n\nTo my surprise, Terra said, \"That isn't the end of the challenge. Next you have to walk down Main Street to the restaurant where we will have lunch. Cindy and I will pick out a booth for us to sit in while you are getting the donuts. You will sit between us as we eat and we will have control of the shell.\"\n\n\"No fricken way. I am not doing this.\" I replied in total shock. \"You guys are totally crazy if you think I am going to do this.\"\n\nTerra, the older and more sensible of the two added, \"It won't be that bad. We will be with you and we will pick a booth towards the back. Besides a challenge is a challenge.\"\n\nI think they were really worried. I thought this had gone too far. My challenges had never been this bad. I imagined the worst and saw myself having orgasms in the donut shop and walking with people laughing at me.\n\nJust when I thought they were done, Terra added one more thing. \"Oh yeah. You are not allowed to have an orgasm until we tell you to. In other words, no orgasms before you get to the restaurant.\"\n\nAt this I stood up and turned my back to them. I was a bit relieved that I wasn't allowed to have an orgasm before I got to the restaurant, but at the same time I knew my orgasm would be that more intense at the restaurant.\n\nI went to my dresser drawer and reluctantly pulled out my shell. I slid it into the front of my panties and adjusted it. It formed perfectly around my vagina and had a two-inch nub that went inside of me. The nice thing about the shell was that it could be worn in public and no one would ever notice it, even if I were wearing jeans. I tucked the cord and controller into the waist of my panties and headed out of the room. \n\nAfter the girls showered and everything they met me at the door. \"I am riding with you just to make sure you follow the plan until we get to Bluejay.\" \n\nAs Terra and I sat in the car, Terra instructed me to turn the shell on low. I was already turned on and I thought it would not take long for me to orgasm. I turned the shell on low and felt the soft vibrations surround my entire pussy. My clit was already swollen and felt the tingling vibrations softly beat rhythmically against it. The nub inside me vibrated as well though the central vibrations were near my clit. I gasp and let out a low moan. Terra smiled and reminded me that I could not have an orgasm until I was in the restaurant. Cindy followed in her Blazer as I headed towards Bluejay. The kicker to this whole challenge was that I was a respected businessperson in this small village and everyone knew me.\n\nThe gentle wind outside had made my nipples hard and though I had small breasts, my nipples stood out like erasures when they were hard. I looked down and noticed that they were pressing against my dress. It made me worry that everyone would see them. I looked over at Terra. She was looking straight ahead but had a huge grin on her face and I knew she was enjoying this tremendously. Sitting in the car pressed the shell firmly against my pussy. I could feel my wetness growing.\n\nWe arrived in Bluejay and I pulled into the parking lot of the donut shop. Terra and I exited the car. While I headed for the front door, Terra got in Cindy's Blazer and they drove off hooting and hollering at me as they left. I had an urge to turn the shell off but it felt good and I knew I would feel bad for cheating. I entered the donut shop and just my luck; there was a line of people waiting in line. I tried to act as unsuspicious as I could as I joined the line. I could hear that my breathing had increased and my knees were beginning to get weak. My face felt like it was burning up and my rock hard nipples rubbed against the material of the dress with every movement I made, making them ache even more. The girls had planned this well.\n\nIn front of me were a middle-aged woman and two kids not more than seven years old. I was getting more and more turned on as the soft vibrations enticed my swollen clit. I wanted to let out a long moan but knew that would give me away. After a few minutes, I finally made my way up to the counter. I watched the old man at the counter's eyes drift down to my breasts then back up to my face twice before he asked what he could help me with. He had a large grin on his face as he waited for me to respond. I wasn't sure I could speak without releasing a moan or gasping. I took a deep breath and asked for a dozen of donuts. The old man asked if there was anything else he could do for me. I wasn't sure what he meant by that, especially with my clouded thinking.\n\nI hesitated a second before saying, \"Ummmm...no that will be it.\"\n\nHe told me it would be \"$7.85 cents.\"\n\nI fumbled through my purse. I could feel my sweaty fingers shake as I dug for my change purse. I pulled out a wad of dollars and pulled out a $5 dollar bill and then two ones. I put the dollars back in my coin purse and then dug for change. I had troubles counting out the change. After trying to count twice I pulled out another dollar and handed it to him. I could feel the old man's eyes burning a hole through me as I did this. Finally I handed him another dollar. Damn Terra and Cindy for doing this. They knew I would have troubles paying for the donuts in my state. I had forgot out my breathing and realized that I was taking short, quick breaths. I tried to slow down my breathing by concentrating on it as the man handed me my change and the dozen donuts.\n\nI turned and quickly exited the donut shop feeling so embarrassed. Everyone in the line behind me looked as I left. I felt like they had to know something was up. I opened the car door and set the donuts on my back seat. I looked in the rearview mirror and saw that my face was red and I was sweating. I growled at the girls as I shut my door and began walking down Main Street. I had a hard time taking a step not to mention that walking made the shell move back and forth, teasing my clit and my insides even more. The street was busy with people shopping and I prayed that I would see no one I knew. The mountain breeze blew under my dress and that was when I realized just how wet I was because I felt the cool breeze on my panties. My nipples were aching and I wanted to pinch them so bad. My breathing was short and heavy. I was so turned on there was nothing I could do about it at this point. \n\nAs I was walking one of the storeowners whom I did business with approached me as luck would have it. I got really nervous. She smiled and said, \"Hi Marte. How are you doing today?\" \n\nI didn't want to stop and talk because I knew there was no way I would be able to carry on a conversation with her, but at the same time I had to say something to her because I often did business with her. I smiled the best I could and blurted out, \"I am fine...and you?\"\n\nLuckily she replied, \"Just wonderful\" as she kept walking. I wished I were already in the restaurant. My clit was throbbing and the vibrations that once seemed soft and rhythmic now seemed stronger and torturous. I had to admit to myself that this was fun and definitely very exciting. After what seemed like an hour I finally approached the doors of the restaurant.\n\nI entered the restaurant and the greeter was a young man. He looked at me and a huge smile swept across his face. \"Hi there Ma'am. What can I...I mean how can I help you?\"\n\nI could tell he had become flustered and it made me even more paranoid because I knew it was obvious what state my body was in. \"I am here to meet two of my friends. They entered about 10 minutes ago.\"\n\nHe replied, \"Ah yes. They said you would be arriving. Right this way.\" \n\nI was horrified at the number of people in the restaurant. I looked at my watch and realized that it was lunchtime. With each step I took my clit throbbed and sent glorious sensations through my body. My skin was filled with goose bumps. I was trying to fight back the sensations because I was very close to having an orgasm. I had to take a step up to enter the back section of the restaurant. I held onto the railing as I slowly stepped up because my legs were so weak I could barely lift my leg. \n\nAs we approached my table Terra and Cindy were laughing. Terra slid out of the round booth and let me in. I quickly sat down and slid over next to Cindy. Terra slid in next to me. They had sandwiched me to the point that I felt like I was being sandwiched.\n\nTerra asked, \"How are you doing Marte?\"\n\nI let out a soft moan and hoped the talking around me was loud enough that no one heard me. I replied, \"I hate you guys.\" After a pause and several quick breaths I continued, \"I am about to cumm.\"\n\nCindy quickly whispered in my ear. \"Not yet hon. Hand me the controller.\" Her soft voice in my ear nearly sent me over the edge right there. I handed Cindy the controller and waited for her to make my world hell, but to my surprise she turned it off. On one hand I was relieved, but on the other hand I was disgruntled because I was so turned on and wanted to orgasm so bad. I sat there, my clit and nipples burning and aching to be touched and played with so bad. The nub inside me wanted me to feel a dick deep inside me.\n\nTerra put her hand on my thigh and rubbed softly. I slapped her hand away and told her to leave me alone. They both laughed. Our waitress approached us and asked us what we wanted to drink. Terra and Cindy both ordered a glass of wine. I ordered a large glass of water. Cindy added that she wanted a glass of wine for me as well. I tried to protest but she insisted. I knew that the wine would warm my body and make things even worse. I didn't drink much so more than one glass of wine would have me very tipsy, especially in my current state. \n\nCindy and Terra were joking with me and giggling. They told me how I looked and was reacting. I kept telling them to be quiet and keep it down so others around me didn't hear them and catch on to what was happening. My body felt wired, though I was beginning to come down a bit from the high I was on. I noticed that people surrounded us. There was a large family to my right and businessmen to my left then a couple at the table in front of us. One of the businessmen kept glancing our way and I wondered if he was watching me or just looking at a bunch of 20 something girls who were having a good time.\n\nThe waitress returned with our wine and my water and began to take orders. I was looking at the menu quickly to find something to eat but my mind didn't want to work. I finally decided to go with something simple and just as I began to speak; Cindy cranked the shell on high.\n\n\"I want the Chhhhicken...\" I gasp and leaned back against the seat. I quickly blurted out, \"Chicken Alfredo\". The waitress looked at me weird and asked if that was all. I quickly said, \"Yessss!\"\n\nThe waitress walked away and I wanted to hit Cindy but my body was taking over. The strong sensations brought me right back to heaven, or should I say hell. This time my hips began to rock. I wanted more pressure against my clit and wanted the nub to go as far in as possible. Cindy and Terra both put there inside leg over mine, holding me to the seat. I heard a low moan escape from my mouth, though I didn't want it to. This was pure torture. My body was moments from overload when Cindy turned the shell back off. I slid down into my seat exhausted. After a few seconds I smacked Cindy on the arm and told her that was evil. They both laughed.\n\nCindy handed the controller over to Terra and I knew I was in big trouble then. Terra decided she was going to torture the hell out of me. She turned the shell on low for a few seconds before jacking it up to high again. My hips jumped and my head thrashed back as my clit began burning like an inferno. I told them both in what I thought was a quiet voice that I couldn't take it anymore. I wanted, no I needed to orgasm. The both told me to quiet down. I didn't care anymore I was too far into it and just wanted a release. Terra dropped the level down to medium a few seconds before shutting it off. I begged her to turn it back on. I couldn't believe what I was saying but I needed to cumm. I tried to grab the controller from her to no avail.\n\nI took a huge drink of my water and as I was swallowing Terra turned the shell back on high. I about spit the water out all over the table as the electricity ran through my very being. And seconds later she turned it back off. The off and on again pace was worse than it just being on. The waitress returned in what seemed like no time with our food. She sat our food in front of us and we began eating. Terra turned the shell on medium and I gasp. My hips were rocking on the bench. I had a hard time cutting my chicken because my hands were trembling so much. Cindy asked if I needed her to cut my food like a kid and they both laughed. I blurted out in a grumpy tone, \"NO!\"\n\nI took a bite of my food and tried chewing. My mouth was dry and I needed more than just water to drink so I took a big gulp of my wine. The girls tried to start an intelligent conversation with me, but I couldn't think straight and they knew it. Cindy was gently rubbing my arm while Terra teased my inner thighs under my dress. They were driving me insane but I knew they wouldn't let me cumm just yet. I was moaning under my breath and my hips were rocking faster and faster. I could feel my skin burning up and the wine was beginning to hit me. I felt the warmth of the wine run through my blood as I took another drink only to notice my glass was empty. Cindy quickly ordered another glass of wine for me.\n\nTerra lowered the speed of the shell down to low and told me I could eat since it was on low, but I could only pick at my food. Cindy took the controller back from Terra. A cute guy I knew came over to our table and said hi. As my luck would have it, Cindy turned the shell off momentarily so I could half way talk. I said hi back and he asked how I was doing.",
        "\"I am good and you?\"\n\nHe replied, \"I am doing really well. So what are you three girls up to today?\"\n\nTerra and Cindy laughed and Terra replied, \"We are just hanging out and having some excitement to the drab everyday life and you?\"\n\nHe replied, \"Just eating here with my parents! Well, I am going to go eat before my food gets cold. I hope to see you ladies around again sometime.\"\n\nI told the girls that they would pay for this and that I had to go to the restroom. I was half hoping to get a little hiatus from the torture and to freshen up as well as use the facilities. They agreed, but Terra demanded to escort me. I hid the controller under my dress and we went to the restroom. I was shocked at how worn out I look when I glanced in the mirror. It appeared I had just run a marathon.\n\nWhen I pulled my panties down I realized that they were drenched with my juices. I wiped away some of the excess juices from my pussy when I was done and then washed my face before we exited. When I sat down I took another large drink of wine and took a few bites of my chicken before the girls decided they were ready to play again, just when my body had almost returned to a decent state.\n\nTerra took the controller and turned it on low. My swollen clit was now getting sensitive from being exposed and teased for so long. I wondered how turned on Terra and Cindy were from this whole escapade as I took another drink and began to feel a bit tipsy. Terra turned the shell up to medium and my breath quickened once again. My hips began rocking in small circles and I let out another soft, long moan. I slid down a bit into my seat and held on to the edge of the table. The shell was beginning its assault on my clit again. Waves of warmth swarmed over my body again as the intensity began moving closer and closer to my clit, building strength as it traveled. My body was full of sweat and I knew it wouldn't take much to send me over the edge. \n\nThe girls were asking me how I felt and if I wanted more. I couldn't answer them because I was on my way to ecstasy. My hips were now moving from a rocking motion to a bucking motion. My breath was very short and I was gasping for air. The build up was stronger than anything I had ever felt in my life. I didn't care if anyone knew or was watching at this point. In fact, it turned me on more to be doing this in a public place. When I was moments from reaching the edge Terra turned the shell off. I groaned and pleaded with her to let me cumm.\n\nShe refused and said I wasn't ready yet. I disagreed adamantly and told her I was on the edge. She laughed and said she knew that and that is why she turned it off. She said it was a real turn on to feel my legs rock against her leg and to listen to me and watch me in a state of ecstasy.\n\nI growled at her and Cindy said it was her turn. Cindy turned the shell on low a few seconds and then turned it off. Then she turned it on medium a few more seconds before turning it off again. A third time she turned it on high and left it there until I closed my eyes and began moaning before turning it off. I begged for mercy and said I would never do another challenge for the rest of my life if they didn't let me cumm. I think the girls knew how serious I was because Cindy turned the shell back on low. I pleaded for more but she left it on low for a while. When the waitress returned to check on our meals Cindy turned the shell on high. I was in hell. My body took over on its own and began twisting and turning; my muscles locked and tense. I was very close to the edge and there was nothing I could do. My hips were rocking and I slid down as far as I could in my seat. My knuckles were white from my grip on the edge of the table. I prayed that the waitress would leave before I hit my peak and to my luck she walked away just seconds before a swarm of heat took over my body.\n\nMy clit was screaming in pleasure overload as my orgasm hit. I felt my body wiggle and squirm around, the girls trying to hold me down as the orgasm thrashed through my body. I bit the edge of the table as I released moan after moan. My body shuddered and my inner walls tried grabbing the nub and pulling it in deeper with all of their might. The orgasm went on for what seemed like forever. It was the most intense and exhilarating thing I had ever felt. \n\nAs my orgasm began to subside Cindy turned the shell on low and I leaned back resting my head against the seat. I took several long, deep breaths. My head was swirling. My hips were still rocking a bit. My legs and arms felt like rubber with weights attached to them. I felt a huge smile across my face. When I opened my eyes Cindy and Terra were holding me and smiling back at me. \n\nAfter I gained my composure enough to function the girls paid for the meal and escorted me to Cindy's Blazer. I lay down in the back seat. The girls told me that was the most awesome thing they had ever experienced and that they were horny as hell. I woke up as they were pulling into the driveway of my house.\n\nIf you liked my story please drop me a line and let me know what you think."
    ],
    "authorname": "storytyme",
    "tags": [
        "turned shell",
        "nub inside",
        "terra asked",
        "hit felt",
        "pulled dollar",
        "donut shop",
        "shell medium",
        "anymore wanted",
        "cindy added",
        "quick breaths"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/martes-challenge-no-1"
}