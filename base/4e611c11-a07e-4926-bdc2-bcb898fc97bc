{
    "title": "Cum Pirates of the 99th Century",
    "pages": [
        "The Monastery\n\nGet. Get. Get. Get.\n\n\u201cGet me a blanket son.\u201d\n\n\u201cGet one of the Brothers to drop by my room at 7.\u201d\n\n\u201cGet another bottle of wine for me young man.\u201d\n\nI headed down into the wine cellar thinking, \u2018I got your GET right here old man.\u2019\n\nYou have no idea how much it sucks to be raised as an orphan on a monastic planet\u2026no idea. All day long, \u2018do this son\u2019 or \u2018could you get that for me youngster?\u2019 Running around for a bunch of old farts telling other old farts how to live, what to think. Really, you just have no idea.\n\nAfter delivering the bottle I headed for the kitchen. I\u2019d barely started my lunch when the building shook. We occasionally had planet quakes; I knew what those felt like. This was different more like an impact. The second time the building shook it was definitely from an impact.\n\nI smiled, because impacts meant uninvited guests, or space pirates, and space pirates meant a break in this otherwise dull and boring life of mine. Pirates had \u201craided\u201d the planet many times before. Raided is probably too descriptive a word. It was usually more of a performance and a spectacle then anything else. Oh sure they\u2019d do a little vandalism and take a bunch of wine and food, but that was pretty much it. Sometimes there were accidents and people got hurt but basically if you cooperated everything worked out fine.\n\nThen one of the maintenance staff rolled into the kitchen and he made a sign to the cook with his hands (thumbs held parallel to the ground, tips touching one another, pointed at the ground. Like an upside down triangle or something) and said something that I didn\u2019t understand.\n\nBoth of them looked at each other and then looked at me. I didn\u2019t really like the expressions on their faces. Maybe these were some of the more violent pirates. There were stories of pirate raids that got pretty wild. I doubted that anything that exciting would occur on Planet Absolutely Nothing Ever Happens Here!\n\nNeedless to say when the cook instructed me to go the maintenance area and wait, I went down to the wine cellar instead. I liked the old cook but I wasn\u2019t about to miss out on any excitement. \n\nI was hanging out in the cellars when the wall opposite me shimmered and then dissolved. I mean one second it was there and the next it\u2019s just not there (not that it was destroyed; it just wasn\u2019t there \u2013 right now.) Wow, the space pirates were using a Quantum Beam. Quantum beams will do stuff like that you know. Lots of happy atoms hanging together, just being a wall and then \u201cpoof\u201d they\u2019re somewhere else. I stood up and faced the non-existent wall, wondering to myself what might happen next, because you never want to get caught in a Quantum Beam \u2013 never. I know these things because we get a lot of ex-military types coming here to figure out the rest of their lives, and they just love to talk and talk and talk.\n\nIt was when the wall phased out that I realized that we were really under attack. These were serious pirates and now I was officially nervous. I mean, what if there was an accident (for some reason biological matter doesn\u2019t re-phase very well) and I died? It suddenly occurred to me that I might never see any other place or any other people then what I was used to. And what about all of those other places and those other people that everyone else was always talking about. A summary of my short life passed swiftly before me. I realized that I hadn\u2019t done much of anything.\n\nI mean how could I since I\u2019d always been on this stupid planet!\n\nThere was a flash of really bright light and a strong wind seemed to push me up against the wall. I was temporarily disoriented. When I got my bearings I found that I was suspended in mid air. I was still in the same room I was just hanging in the air \u2013 very strange. \n\nAnd then I heard voices \u2013 strange voices.\n\nAnd then I saw men \u2013 strange looking men. These men, who I assumed were the space pirates attacking us looked up at me and started talking amongst themselves really fast.\n\nThe three strange men who had entered the room I was hanging in were looking up at me. Actually they would have had to look up at me if I was standing on the floor, they were small for men. They\u2019re bodies seemed different too \u2013 bigger here, smaller there. Although for some strange reason it felt good to look at them. I mean, I was really enjoying just looking at them.\n\nI was enjoying listening to them too. Even though I had absolutely no idea what they were saying, I was just enjoying the sound of their voices. Everything about them seemed so nice. A thought struck me and I just had to ask them a question.\n\n\u201cExcuse me; I have lived here for my entire life. Could you please tell me if\u2026I mean I\u2019ve never seen\u2026are you by any chance \u201cwomans?\u201d\n\nOK, before you start laughing and roll your eyes you have to realize that I had never met a woman. I mean, this is a monastic planet that only men visit. Of course men talk about women, but it\u2019s all very confusing. Some insist that the best part of this planet is the lack of women. Others hold to the opposite view.\n\nEven though I\u2019ve never met a woman I think I\u2019ve got a pretty good handle on what they\u2019re like \u2013 based on what I\u2019ve heard. This is best summarized in a joke I overheard once. I found that whenever I repeated it, men nodded knowingly. The joke went like this:\n\n\u201cThe Creator of All had pretty much finished making everything and wanted someone to tell Him what a great job He\u2019d done. So He made man in His image and was really pleased with how man turned out. Man and the Creator hung out together and had some really good times. But the Creator had lots to do and went off to go do it. After awhile man was kind of lonely. Man mentioned this to the Creator. Man asked the Creator if He could make another man for man to hang out with. The Creator said that He would take it under advisement.\n\n\u201cThe Creator comes back to man and says He has an even better idea \u2013 woman. The Creator tells man that woman will be the perfect companion, pleasing to look at, pleasant to smell, voice like a soft babbling brook, breasts like soft pillows to rest upon, lips as sweet as honey. She will be easily pleased and eager to please in return. She will cook for you, clean for you, listen to you, and she will be obedient to you. And in her soft embrace you will experience a pleasure so fulfilling that you will call out My Name repeatedly.\n\n\u201cMan was really excited about woman and could hardly wait for the Creator to make her. The Creator says that he all he needs is some of man to make woman.\n\n\u201cSo man asked the Creator, \u201cWhat\u2019s this going to cost me?\u201d\n\n\u201cThe Creator told him, \u201cAn arm and a leg.\u201d\n\nMan was shocked, thought about it for a moment and then asked, \u201cWhat can I get for a rib?\u201d\n\nOk, back to the space pirates. As I was speaking the three looked at some kind of screen, I guess it was a translation device. Then they looked at me as if I was crazy, so I quickly told them my life story, such as it was. Stuck on this planet\u2026never having been anywhere\u2026never having seen a woman.\n\n\n\nThat last comment about never having seen a woman seemed to generate a lot of excitement amongst them. They started chattering amongst themselves and I hadn\u2019t the slightest clue as to what they were saying. The three talked some more amongst themselves as I continued to hang in mid air.\n\nOne of the women spoke a command and I floated down closer to the floor. Their hands reached out and unbuttoned my robes and pulled them to the floor. The three women cast strange glances back and forth between them \u2013 and then they all nodded. \n\nAnd then they all undressed.\n\nThe space pirates were definitely not men. They were womans. Yep, for the first time in my young life I was looking at womans.\n\nI experienced the strangest sense of exhilaration as I watched them remove their clothing. The exhilaration turned to light-headedness as their hands began to touch and caress me. Now I\u2019ve touched myself before, sometimes many times a day, you have to use the bathroom you know and it\u2019s never been any big deal. However, their touch was stimulating in a way that I had never experienced.\n\nOne of space pirates had one of her hands wrapped around me (well where she was touching I always thought of it as me, but I can tell you that I never felt the way I felt when she touched me as when I touched me. I mean there was no comparison!); she stroked me a few times and then squeezed me really hard. I watched as a large drop of clear fluid formed at the tip.\n\nThree tongues extended out and tasted the drop. \n\nThree mouths smiled. \n\nThree lips were licked. \n\nThe three women attacked me with their tongues and mouths \u2013 I never had a chance. \n\nI didn\u2019t want them to stop \u2013 ever.\n\nTheir movements were fluid and harmonious. Cheek to cheek one of the women would have me in her mouth while the other two licked and kissed me with their mouths and tongues. I had never dreamed that anything could feel so good. Even my concern for my own personal safety, was quickly swept away. It was a good thing that I was still in the suspension beam as there was no way I could have stood on my own legs at this point.\n\nOn and on the women sucked and licked and kissed on me. I felt a tingling sensation deep within me and my breathing changed. The sensation intensified and I felt as if something was growing inside me. It became hard to breathe. It felt so good it was almost painful as that part of me seemed to swell even larger. Then I was like falling for a moment, bam - ferocious spasms ripped through me. It felt like nothing I had ever experienced before.\n\nThe overwhelming ecstasy of delight slowly faded and it was only then that I refocused my attention on the three women. Their eyes were glazed and the one with me in her mouth swallowed noisily as she released me from her oral grip.\n\nAll three were smiling, I was too.\n\nAnother command was spoken and I felt myself being laid horizontal just above the floor. The three women towered over me and I found myself absolutely captivated by the junction of their legs. They were smooth where their legs came together, completely smooth. Where part of me hung out, they didn\u2019t. Nothing stood out, in fact, it seemed to fold in. From this fold a great deal of moisture seemed to flow. The moisture had a wonderfully pleasant aroma and I found myself breathing deeply of it.\n\nThey were different, definitely very different.\n\nThe women were talking amongst themselves again. They seemed to be having a discussion about what to do with me next. I couldn\u2019t understand what they were saying. But if it was anything like what had just transpired I was all for it.\n\nFor reasons unknown to me I felt me growing again. One of the women noticed and pushed through the others. She hardly paused before she gripped my hard man-ness in one hand and threw her leg over my hips. I didn\u2019t have the slightest idea about what she was going until she sat on me.\n\nIf the mouth thing was good \u2013 this was better. An intense wet heat surrounded that part of me and I couldn\u2019t help but think that this was just so right. Then she started moving and what had felt better began to feel unbelievable.\n\nJust as I was really beginning to enjoy this new thing one of the women sat down on my face! I panicked momentarily; I though for a moment that she was trying to suffocate me. Then she rose up and looked down at me she touched my lips and opened her mouth wagging her tongue up and down. I mimicked her and she sat down on me placing her fold right over my wagging tongue. My mouth was filled with the most exotic taste.\n\nI lapped happily away. This was just so cool!\n\nI felt the third woman rest her head on my stomach. I thought she might be tired until I felt a finger (I\u2019m assuming it was hers) search out my back end and push inside! I was surprised and a little concerned at first but it was somewhat pleasant. I could feel her jaw moving slightly. I wasn\u2019t sure what she was doing but guessed it had something to do with the woman bouncing up and down on me.\n\nThen they all changed position! The bouncing one stood up and took the place of the one on my stomach, that woman sat on my face and that woman sat on me and started bouncing away on her own. I went back to licking the new one on my face. \n\nShe tasted a little different then the first. Same thing with the third one, slightly different. I think I liked the way the third one tasted best.\n\nThey went through this change of positions five times before I felt that tingly feeling again. Then they all surrounded me and gripping me with their hands stroked up and down at a furious pace. I experienced that wonderful ecstasy again and briefly observed some kind of white stuff fly up in the air and then splat down onto my stomach. A feeding frenzy of tongues across my stomach followed.\n\nAnd then it was over. The three women had funny smiles on their faces. They were also acting like they were drunk. The three women got dressed and just as they exited I heard another spoken command. I fell the last three inches to the floor. \n\nThey had released me from the beam. I pulled my robes back on and was leaving the room when I saw a flash of light followed by a \u201cthump\u201d to my chest. \n\nI began to feel as if I was falling asleep. The last thing I remembered as I passed out was really strange. I was being put into an empty wine barrel.\n\n\n\nCommander Fallopia\u2019s Quarters\n\n\n\nElle licked slowly at the Commander Fallopia\u2019s thickening labia. The Commander\u2019s musky scent filled her nostrils. Every couple of minutes Elle looked at Fallopia\u2019s clitoris to see if it was ready.\n\n\u201cYou\u2019re thinking about other things Commander. If you don\u2019t want to orgasm now I can come back later.\u201d\n\n\u201cYou\u2019re right Elle I\u2019m light-years away. This has been a long voyage and I guess I\u2019m just tired.\u201d\n\n\u201cCommander, is it true that there was a stowaway \u2013 a man? Is he okay? Is he still on board?\u201d\n\n\u201cWell there is a man on board. He is in quarantine with the ground team right now. The ground teams have been having a very good time with him from the reports I\u2019ve received. I don\u2019t think I\u2019ve ever seen their morale higher. I guess he\u2019s safe, I haven\u2019t heard otherwise. Anyway their quarantine will be complete in three days and I was actually thinking of a special ceremony.\u201d\n\nElle watched at Commander Fallopia\u2019s clitoris swelled to fullness. \u201cMust be some ceremony you have in mind.\u201d She began to lick and suck her mistress\u2019s clit, until the Commander shivered in orgasm.\n\n\u201cIt is Elle, it is.\u201d The Commander pulled Elle up from between her thighs until Elle\u2019s head rested on the softness of her breasts. Fallopia felt soft lips nibble at her nipple. She stroked Elle\u2019s head lovingly.\n\n\u201cElle. You have given me good service during this voyage and I am deeply grateful for your loyalty and dedication. You have pleased me greatly. And yet, you are still a maiden. During the entire duration of this voyage you have yet to have your first man. And you know that I cannot take you until you do.\u201d\n\nElle tried not to trembled, but did anyway. A tear escaped her eye and fell to Commander Fallopia\u2019s breast.\n\n\u201cOh Elle. You must see it too. You\u2019re just not cut out for the life of a cum pirate. This is a ship filled with women who think nothing of fucking and sucking their way from one end of the galaxy to the other. I\u2019ve seen crewwomen so drunk on cum that they could barely walk.\u201d\n\n\u201cBut Commander, I like cum. I\u2019ve licked it out of you lots of times. And I\u2019ve snowballed you too. Remember when I sucked those three men for you and spit their cum into your mouth. And there was the time when\u2026\u201d\n\n\u201cElle.\u201d Commander Fallopia pressed her fingers against Elle\u2019s mouth. \u201cElle. I\u2019m talking about fucking. You\u2019ve never been fucked.\u201d\n\n\u201cCommander\u2026I just haven\u2019t found\u2026\u201d\n\n\u201cI want him to be your first Elle.\u201d\n\n\u201cWhat? Who? You mean the man?\u201d\n\n\u201cI want to watch him deflower you Elle. That\u2019s the ceremony I was talking about. I want to watch our \u2018man\u2019 fuck you. I want to watch his cum drip out of you. I want to lick his cum out of you. And after he has thoroughly taken you. I will take you.\u201d\n\n\u201cOh Commander Fallopia, I don\u2019t know what to\u2026thank you, thank you. I\u2019ll do whatever you\u2026\u201d\n\n\u201cYes, yes, yes. I know Elle, I know. Now give me another quick licking. Then you be off, I\u2019m sure then is plenty for you to do.\u201d\n\n\n\nFirst Officer Vulva slipped the two golden rings of her rank over her left nipple. She smiled as she looked at the invitation stuck in the frame of her mirror.\n\nCommander Fallopia of the Clitorious\n\nrequests your presence at the\n\nDeflowering of her Personal Attendant Elle Majora.\n\nClothes optional or erotic; orgy to follow immediately.\n\nBYFSO (Bring Your Favorite Strap On!)\n\nTonight we feast on: Virgin\u2019s Blood in Cum of Some Young Guy.\n\nAs Vulva entered the dining room she was pleased to see that everything was properly prepared. Vulva saluted Commander Fallopia and sucked gently on the Commander\u2019s left nipple. As she released it she couldn\u2019t help but notice the thick platinum band that surrounded it. Perhaps after this voyage she would be ready for her own command.\n\nIn the center of the room was the ceremonial bed. Elle looked stunningly beautiful as she floated in the suspender beam. Elle\u2019s legs were spread wide in readiness and her cunt was smooth as smooth could be. Vulva approached Elle and kissed her softly on the mouth, then knelt between Elle\u2019s thighs and loving licked her to orgasm. \n\nVulva faced the assemblage. \u201cA woman\u2019s first fuck with a man is a special event. Taking her into full womanhood and making her available for taking by all women. The pain of that first taking is evidenced by the blood that flows from her. It is her scared release from maidenhood.\u201d Vulva kissed Elle again and nodded at Commander Fallopia.\n\n\u201cBring forth the one who will be this girl\u2019s first.\u201d\n\nThe man was brought in and positioned between Elle\u2019s legs. As soon as he looked at her his man-ness began to grow. Vulva felt a tingle between her own thighs as she watched the man-ness harden. He was a smooth as Elle was and the effect of the two together was visually dramatic.\n\nHis man-ness was now quite hard and F.O. Vulva smiled as she saw it throb. The man was struggling against his restraints, after five days of near constant sex he had been isolated away from the sight or smell of any woman for the last two days. She watched his nostrils flare as he smelled Elle\u2019s virgin offering.\n\nCommander Fallopia was teasing the man into a near frenzy. His restraint harness would be allowed to move forward until the tip of his man-ness made contact with Elle\u2019s swollen cunt. Actually, Elle seemed to be pretty worked up too.\n\nThe Commander teased them three more times and then swung the harness back. She had the alignment perfect. The harness was swung forward and at the last instant he was released. His momentum carried him right between her thighs. His man-ness split her cunt right up the middle.\n\nElle\u2019s scream marked her initiation into womanhood. F.O. Vulva leaned in with the others to watch the man\u2019s frenzied fuck. She doubted that he would last more then a minute of two. Which was good as far as Vulva was concerned. She was hungry and she wanted to fuck and be fucked. She especially wanted a sip of Virgin\u2019s Blood in Cum of Some Young Guy.\n\nBut the man wasn\u2019t fucking Elle. \n\nHe was caressing her face. He was wiping the tears from her eyes. If First Officer Vulva didn\u2019t know better she would have said that the man was concerned about the pain he had just caused Elle. Of course, this was a preposterous idea that any man could care about the pain he caused a woman. The thought itself reeked of blasphemy.\n\nElle had to buck her hips into him to initiate his thrusting. Even then he was slow and gentle. There was an unexpected hush in the room as the man slowly fucked young Elle. Elle began to pant and writhe under the constant deep thrusting. Vulva had to smile, evidently the ground team personnel in quarantine with the man had taught him well. This man knew how to fuck.",
        "Elle was gasping for breaths as she came hard. The man quickened his pace dramatically and was now pounding hard into Elle. The poor girl seemed outside of herself with delight. Her head lolled side to side as her body tremble through orgasm after orgasm.\n\n\nThe man was grunting loudly now and Vulva thought that he must be getting close himself. Elle\u2019s body arched upward like a rigid bow as she screamed in ecstasy, the man roared with her. The clenching of his ass was proof enough. He had ejaculated into young Elle.\n\nCommander Fallopia energized his restraints and he was pulled back from Elle. Elle was quickly tipped to vertical and a receiving cup placed beneath her. There was a murmur of approval as a copious amount of blood-tinged cum dripped from young Elle\u2019s cunt. When the cup was full (an unusual event in of itself!) Elle was tipped back up upright.\n\nThe man looked as if he might be ready for another round. Vulva smiled at the thought, this could be a fun filled night for all.\n\nCommander Fallopia dipped her right nipple into the cup of Virgin Blood in Cum of Some Young Guy. She offered the nipple to the officer on her left who sucked it clean. Fallopia offered the same to every woman there. The cup wasn\u2019t close to being empty. This had every chance of being a very memorable evening as a second round of nipple dipped cum slurping occured.\n\nCommander Fallopia smiled broadly, \u201cWell, there appears to be plenty more where that came from! I certainly remember my first man, my One, as I\u2019m sure all of you do too. I don\u2019t think I\u2019ve ever seen anything quite like this.\u201d She eyed the man\u2019s re-erect man-ness, \u201cHe just might be the wildest One I\u2019ve ever seen.\u201d There were cheers throughout the room, Vulva noted that the Ground Team seemed to be cheering loudest. \u201cMy women, my shipmates, my friends, I give you the woman Elle Majora.\u201d Raucous applause and cheers filled the room. Fallopia looked round the room and then at her beautiful attendant.\n\nFirst Officer Vulva stepped forward and turned to her Commander. \u201cCunt or cock?\u201d\n\n\u201cI believe I\u2019ll have the cunt First Officer. You may enjoy the cock.\u201d\n\nCommander Fallopia knelt between Elle\u2019s thighs and thoroughly cleaned her of any remaining cum. Elle came again. Fallopia stood and pulled her favorite dildo from beneath the bed. She connected it to her harness and slowly lubed it up. Fallopia placed it at the swollen entry to Elle\u2019s womanliness and slowly filled her. She took Elle with a passion and an intensity the few of the crew had ever seen before. It was beautiful to see.\n\nAt the same time Vulva licked and slurped the cock until it was fastidiously clean as well as rock hard. She pushed the man onto his back and mounted him. She rode his cock to a delightful orgasm. The orgy was officially in full swing now.\n\nIt was a night that no one attending ever forgot. Although some of the crew remembered that night for reasons quite different than the rest. The officer in charge of the Ground Team as well as the three who had smuggled The One, as the man was soon called by all the crew, on board were subjected to 24 hours of orgasm denial as punishment for their violation of protocol. \n\nA device was fitted to them that short-circuited their orgasm just as it was starting. Their crewmates took extra care to stimulate the quartet to almost orgasm after almost orgasm, until the four were screaming in deprived agony. That particular protocol was never violated on the Clitoris again.\n\n\n\nIn Orbit Around Estrogenos\n\n\u201cCommander. We just received permission to go down planet.\u201d\n\n\u201cThank you, I\u2019ll be in my personal quarters if you need me.\u201d The Commander entered her quarters to the sound of Elle getting thoroughly fucked by The One. The One had become so deeply attached to Elle that the crew teased her unceasingly about it. Elle didn\u2019t seem to mind one bit and seemed to be quite fond of The One in return. \n\nElle saw the Commander enter and quickly grabbed a glass. \n\n\u201cActually Elle I\u2019d like it from you this time. Let him take you from behind dear.\u201d\n\nElle got onto her hands and knees and moaned as The One filled her swollen cunt again. He pounded into her as she clenched her Kegels rhythmically. As the ships bells chimed The One came with a loud moan. Elle presented her cum-filled cunt to Commander Fallopia who quaffed heartily of the milky fluid. Fallopia marveled as it\u2019s warmth filled her whole being. \u201cI can\u2019t begin to tell you how much I am going to miss this.\u201d\n\nElle tried to hide her emotions but failed miserably. The Commander couldn\u2019t help but notice and smiled at her assistant.\n\n\u201cElle, there is something very important I need to talk to you about. As you well know, I cannot keep The One on board, he must go planet side.\u201d\n\n\u201cThawn. Thawn. Thawn\u201d The One babbled enthusiastically.\n\n\u201cAre you still trying to teach him to say his name Elle? Oh he is the wild one isn\u2019t he. Why a man should try to speak is beyond me, everyone knows a man\u2019s tongue is really only good for one thing anyway.\u201d Fallopia smiled at Elle. \u201cAs I was saying, he must go planet side, where he will be quarantined for a year.\u201d\n\nElle gasped in horror. \u201cA year? How will he survive? Who will take care of him properly? If he\u2019s treated like most men\u2026\u201d\n\n\u201cI was coming to that Elle. As you know, I\u2019m planning on offering him up for stud service. The motility quotient of his sperm is quite high. Our men barely register on the scale, while he nearly exceeds our ability to measure his potency. I can\u2019t stay and manage him; in fact, I\u2019ve already received orders for my next voyage.\u201d\n\n\u201cOh. When do we leave Commander?\u201d Elle fought a losing battle with her tear-filled eyes. Had she just had her last fuck with The One?\n\n\u201cFor me, not for a while. For you...probably never.\u201d\n\n\u201cWhat? You\u2019re not taking me with you?\u201d This was all too much for Elle. To lose The One and her Beloved Commander was horrific beyond words. Amid body wracking sobs that caused her breasts to jiggle in a most becoming way Elle begged Fallopia to reconsider. \u201cAnything Commander, I\u2019ll do anything for you. Anything!\u201d\n\n\u201cI\u2019m counting on that Elle. I\u2019m counting on your loyalty to me. I\u2019m counting on your concern for The One.\u201d\n\n\u201cI\u2026I don\u2019t understand Commander.\u201d\n\n\u201cElle, would you agree with me if I said that The One needed to be milked daily, at the least? Yes, I though so. And would I be wrong in speculating that you have more experience milking him than anyone else? Good. Elle I\u2019ll come right to the point. I want you to go into quarantine with The One and see that he is milked daily. Until he has cleared quarantine I want 9 out of 10 emissions stored cryogenically. What you do with the tenth is up to you. Once he clears quarantine I want him mated no more then once per day. Any extra emissions will be accounted for according to our prior agreement. Is this acceptable to you?\u201d\n\n\u201cYES! Oh yes, you can trust me completely Commander.\u201d Elle hugged and kissed Fallopia on her lips, breasts and cunt. She slowly and lovingly licked Fallopia to a satisfying orgasm.\n\n\u201cYou\u2019ll have to give him a name Elle. Something catchy. The One will never do. Think up something exotic or wild.\u201d\n\n\u201cWhile\u2026thawn\u2026while\u2026thawn.\u201d\n\nElle placed her fingers on the sides of The One\u2019s mouth and squeezed as he tried speak. \u201cOne. One. One.\u201d\n\n\u201cWawn.\u201d\n\n\u201cOh my god Elle he can almost say it. Well done. Well done.\u201d\n\n\u201cWawn whell dawn. Wawn whiled won. Wawnwhiledwon.\u201d The One patted his chest.\n\n\u201cI think he\u2019s trying to say that his name is juanwildone?\u201d\n\n\u201cJuanwildone? That\u2019s the stupidest name I\u2019ve ever heard. You know that\u2019s just the kind of proof that shows that repeated erections can lead to serious brain damage.\u201d\n\n\u201cJuanwildone indeed. Gimme a break!\u201d"
    ],
    "authorname": "juanwildone",
    "tags": [
        "cum young",
        "wagging tongue",
        "space pirates",
        "elle looked",
        "blood cum",
        "floor women",
        "man idea",
        "virgin blood",
        "met woman",
        "pain caused"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/cum-pirates-of-the-99th-century"
}