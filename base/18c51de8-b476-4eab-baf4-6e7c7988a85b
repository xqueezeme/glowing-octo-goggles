{
    "title": "A Totally Unromantic Love Story Pt. 03",
    "pages": [
        "We have had the conflict. Now it's time for the denouement. Our protagonist needs a handy god-from-the-machine to sort out his irreconcilable situation (to continue our pretentious classical allusions). Fortunately he just happens to have one in his pocket, which is one of the wonders of the internet age. Plenty of monkey sex in this one for those who think I am too sappy. I hope the four of you who like my stuff enjoy this. And as usual thank the rest of you for reading me.\n\n~ \n\nWhen you have been a parent as long as I have, your kid waking up is like an alarm clock. And Billy was starting to stir. The sun was streaming through the windows. It would have been a beautiful day except for the events of the night before.\n\nI had not had the happiest of dreams. But on this day the transition from sleeping to wakeful was the most unpleasant experience of my life. Reality hit me like an NFL linebacker with rabies. And the road ahead was paved with nothing but desolation and despair. \n\nBilly was still slowly coming around. So before I got back to him I took a piss in the ensuite, brushed my hair and teeth and pulled on a t-shirt and jeans. I was ready to deal with things now. \n\nBilly was looking up at me with his bright blue eyes. He said puzzled, \"Where's Maddie?\" His reminder of our loss triggered a momentary throbbing in my head that nearly stroked me out. \n\nBut I had to hide it. You can do those kind of super-tough things for your kid. \n\nI blithely lied, \"Oh, she was so happy to see her sisters that she wanted to spend the night with them. I know that you will want to do that with little Chelsea when she gets bigger. \n\n\"Now how about some breakfast. Milly can't wait to play with you.\" \n\nHe smiled his beautiful little-boy smile and said with absolute sincerity, \"I LOVE aunt Milly.\" \n\nI said, \"She loves you too. She wants to take you to the University's museum today. They have ACTUAL dinosaur skeletons there. You can see them.\" \n\nHis eyes went wide and he said with hushed reverence \"Really???\"\n\nI laughed with sheer love for my little nerd. My life will always have meaning as long as I have Billy.\n\nI brushed his hair and dressed him in a pair of shorts and a polo shirt with an alligator on it. He slipped on his miniature topsiders. He fit in this new preppy universe a whole lot better than his daddy. \n\nWe went out into the hall. Maddie's door was closed. Mary was sitting in a chair outside our door reading a Kindle. She looked like she had been posted there. She was extremely nervous. I didn't blame her. \n\nShe must have been waiting for Billy and me to get up. \n\nI gave her a warning look and said cheerily, \"Oh here's Mary. She can't wait to take us to breakfast. \n\n\"Maddie will be along as soon as she wakes up. She had a lot of fun last night and I know she must be a lot sleepier than we are.\"\n\nMary caught the drift. She said, \"Oh yes, Maddie had such a good time last night that she is exhausted. So she wanted to sleep for a little while longer.\"\n\nI said, \"I told Billy about Milly's plans to take him to see the dinosaurs.\" \n\nMary looked puzzled. \n\nI said lightly but with meaning, \"Don't you remember the thing we discussed last night? Milly told me that they have real dinosaur skeletons at the museum and that she wanted to take Billy away for the day to see them while Maddie and I talk about the fun she had last night.\"\n\nMary \"got\" it. She said with fake joviality, \"Oh yes, how could I have forgotten THAT. Milly is downstairs at breakfast waiting for you. Why don't you two go down there? I was just going to wake Maddie up.\"\n\nBilly said, \"I thought she was sleeping with her sisters?\" \n\nThat sent a jolt of electricity through me. He was way too perceptive for a 4 year old. This wouldn't be easy.\n\nI said, \"She did but her sisters woke up before she did. They didn't have as much fun as she had.\" I kept every bit of sarcasm out of my voice. \n\nI grabbed him and said, \"I feel a tickle attack coming on!\" He squealed with delight and I walked down the stairs, embracing him in a deadly tickle hold, while he giggle ferociously. \n\nMilly was waiting at the bottom of the stairs. She had a huge grin on her face but it didn't reach her eyes. Those were pools of abject misery. \n\nI said continuing the fake jolly mood. \"Here's Milly and she is going to take you to the museum for the day.\" Billy jumped out of my arms and ran to her. \n\nHe impulsively hugged her around the waist. She kissed him on top of his head. Then she bent down to talk to him and he kissed her on the cheek. \n\nBilly announced, \"I love Milly as much as I love Maddie.\" \n\nThank God he didn't see Milly's look of anguish, or the way her eyes began to mist.\n\nMilly said brightly, \"Let's get you two fed\" and led us into the dining hall. It was not QUITE that baronial but it was close. \n\nThere was a buffet set up in chafing dishes on a side-table, in the same fashion as the classic complimentary hotel breakfast. I scooped out some scrambled eggs and a sausage for Billy. I had a yogurt. That was all I could stomach. \n\nBilly was chattering away to Milly about what dinosaurs he hoped he would see. She was looking at him with sadness. \n\nHe picked up on it and said, \"Why are you so sad Milly?\" The shock wave hit me again. This was going to take some intricate maneuvering. He was way too smart.\n\nI said as rationally as I could, \"Aren't you going to be sad to leave Milly when we go home? Well she doesn't want you to go home either.\" \n\nHe said in an equally reasonable tone, like he was talking to a total idiot, \"Well then, she should come with us.\" \n\nWe both laughed and Milly leaned over and kissed him on top of his head. \n\nShe said, \"Unfortunately I live here but we will always be best friends, even if I am not with you.\" \n\nThe sense of loss in her voice was palpable.\n\nHe looked at her again and said in the sweetest voice, \"I love you Milly.\" Milly started to tear up.\n\nMary came downstairs. She said to me, \"Maddie's up and she wants to talk to you.\"\n\nI said, \"I will as soon as we get Billy on his way to see the dinosaurs. Please tell her to wait up there and I will be up in a minute.\" \n\nMilly took the hint and said with considerable jolly energy, \"Okay my junior paleontologist, let's get going. The dinosaurs haven't had breakfast yet and if we make them wait too long they might eat YOU.\" \n\nBilly squealed and took her hand as they headed out the door. He started playfully swinging on her arm the way kids do then they are hanging onto an adult they trust. \n\nMilly was laughing with real joy now. \n\nShe turned to me and the sadness returned to her eyes. She said, \"Take your time but remember what I said.\" \n\nI promised her that I would. \n\nMilly and Billy exited stage left. I heard the garage door open. At that moment Mary and Maddie made their appearance, coming cautiously down the stairs. \n\nMaddie was still walking unsteadily and it looked like she had a monster hangover. \n\nShe was wearing a simple tennis skirt and polo top with boat shoes and no socks. She was clearly terrified.\n\nShe was beautiful. Even after the night she had just experienced. She had put on a little bit of makeup, eyes and lip gloss. Her hair was carefully pulled back from her face in a ponytail. She wouldn't even look at me. \n\nShe walked silently over to the buffet and got some coffee, black. \n\nShe sat down opposite me still looking down. \n\nMary sat next to her. She had obviously filled Maddie in about what we had witnessed the night before. \n\nThe room was silent for a few heartbeats. \n\nFinally Maddie raised her eyes to me. You could see the absolute desolation written in them. \n\nI looked back at her sadly and said, \"Maddie, I love you with all of my heart and there will never be another woman in my life. But there is no way I can trust you after what I saw and heard last night.\" \n\nShe wailed, \"WHAT??!! NO!! YOU PROMISED!!\"\n\nI continued with, \"Billy loves you. He considers you his mother. It will kill him when I go home without you. All I pray is that you have enough human compassion to cooperate with me to do whatever it takes to keep this from ruining him.\n\n\"As much as it is killing me I will work with you for his sake. I can't help that I am stupid but I will not let my gullibility affect my little boy. \n\n\"Fool me once, shame on me. But there is no going forward from this. I can't put Billy at risk again.\"\n\nMaddie started to cry, \"Noooooo.\" Then she put her head down on her crossed arms and sobbed with outright abandon. She was like a little child whose heart had been utterly broken. \n\nShe was so obviously hurting that I wanted to hold her and comfort her. After all, I loved her like my own life. \n\nShe raised her head and looked at me beseechingly. Tears and the mascara that she had put on were running down her faultless cheekbones. \n\nShe said in a voice dulled with wretchedness, \"Mary told me what happened. I wish I could explain it. But I have no recollection. You have to believe me when I tell you that I simply don't remember anything.\n\n\"The last thing I clearly remember was you being dragged off to the library by my dad. \n\n\"Then Bitsy handed me a glass of champagne. I told her that I was not going to drink while I was pregnant. \n\n\"She scoffed at me and told me that one glass wouldn't hurt. My friends all joined in. They said that they just wanted to toast the happy couple. \n\n\"I took a couple of sips for appearances sake. The next thing I knew I was woozy and about to pass out. That was the last thing I recall. \n\n\"Then I woke up in bed this morning feeling like a truck had run over me. \n\n\"I know that somebody fucked me last night. Mary says it was Chad Smithson. That makes this even more dreadful. \n\n\"I am sure that they already told you that he date-raped me in college. It creeps me out to even be in the same room with him.\" \n\nShe said, \"Bill, I love you and only you. I have no idea why I was with that man. You don't have any concept of how much I hated and feared him. \n\n\"If I was going to cheat on you he would be the last person on earth that I would do it with. \n\n\"The only explanation I can offer is that whatever I was given completely wiped out my memory and removed all of my inhibitions. \n\n\"What you saw was a pure animal reaction. It wasn't a conscious response. You and Billy mean everything to me.\n\nShe looked at me pleadingly, \"You have to believe that I would never willingly let that evil son-of-a-bitch touch me.\"\n\nI said, \"You are obviously planning to go with the drugged defense. And maybe it's true. I don't know about things like that. But I imagine that whatever drug you were given is probably out of your system by now. So we will never be able to find out.\" \n\nShe looked at me like the noose was around her neck and I had just pulled the lever on the gallows.\n\nI added quickly, \"But fortunately I have the whole thing on video.\" \n\nBoth Maddie and Mary gawked at me astounded. \n\nI ducked my head in embarrassment and mumbled something apologetic, along the lines of, \"I didn't have the stomach to listen to this last night.\n\n\"So NOW we are going to find out exactly what happened\" and I punched the play button on the I-Pad that I had put on the table between us. \n\nWhen I force-paired Chad's phone I had copied the souvenir that he had made of his pas de deux with Maddie. \n\nThat was what I had sent to his wife. \n\nThe clip started several seconds after he had pushed his cock into her. He must have taken out his phone when he bottomed out. And then videoed the rest of their little tryst holding it in his hand. \n\nThe first several seconds featured a prolonged gasp and moan. It showed asshole-breath's cock, which was impressive, buried to the hilt in Maddie's slit. \n\nFrom the perspective of the phone you could see his shiny rod start to emerge and then disappear again between her outer lips. \n\nShe threw her pussy up to meet him and they got a good rhythm going. The focus was on his cock sliding in and out. Her moaning was continuous.\n\nMaddie wailed and started to reach for the I-Pad to turn it off. Mary took a gentle hold of her hand. She shook her head. Like me, she knew that we had to get the entire thing out on the table.\n\nThe cinematography was remarkably good, given that he was fucking her at the same time. \n\nThis was obviously a trophy fuck, rather than one for his personal enjoyment. He was concentrating on the photography instead of the act itself. \n\nYou could hear Maddie grunting and moaning loudly over the very liquid slap of flesh on flesh. She was repeating, \"That's it! That feels so good, harder, harder.\" \n\nThe perspective shifted to Maddie's face. She was in the throes of extreme ecstasy. Her head was thrown back, lost in a frenzy of erotic sensation and unrestrained abandon. \n\nMaddie burns white hot. And when her buttons get pushed the inevitable outcome is what we were seeing.\n\nI froze the picture. I said, \"This was the point where I left the scene of the crime. I witnessed everything we have seen so far in the flesh.\" Maddie blanched with shame.\n\nI added, \"Up until now your story COULD be true. But I have never seen the video. And there might be something really incriminating after this. Are you strong enough to hear the rest?\" \n\nGiven the stakes I was definitely not sure that I was.\n\nShe gave a quick fatalistic nod. It looked like she had just put her entire happiness on one throw of the dice. \n\nI pushed \"play\" again.\n\nThere were extreme effort noises, the sounds you would expect when two people are finishing off a really intense fuck. \n\nThen we heard Maddie's voice loudly imploring, \"Oh God Yesssss! I love your cock! MORE, MORE, give it to me Billy. Give it ALL to me. I'm yours!! I'll always be YOURS!!\" \n\nThen there was the sound of two people loudly cumming. \n\nThere was a short silence with a lot of panting in it. Then there was some jerky moving around as fuck-face pulled out of her, still holding the phone. \n\nShe moaned loudly over the loss. He chuckled at her response. \n\nThen he stood and muttered something like. \"You won't remember this. But I'LL always know how much you loved having my cock inside of you again.\" \n\nAcross the table Maddie's face was a mask of horror. \n\nMy selfish emotion was joy. She HAD been drugged. \n\nWe heard the sound of him reassembling himself, the picture jerked crazily as he did it. \n\nThen he stumbled off up the path wobbling like he had just gone a couple of rounds with Iron Mike Tyson. \n\nFrom extensive personal experience I knew that a bout with Maddie can do that to you. \n\nHe focused back at her for one last shot. She was lying in exactly the same position where we had encountered her, out cold. As the clip ended he was chuckling, totally pleased with himself. \n\nI made a solemn pledge that I was going to pull out every trick in the hacker handbook to make his pathetic life absolute shit.\n\nMost importantly, we all understood what those last few seconds meant. Maddie thought that she was fucking ME. \n\nIt is a fact that the Titanic sent the first radioed SOS. The operator transmitted to the bitter end. He did not want to die without letting the world know what had happened. \n\nThe last few seconds of the fuck had the same hopeless quality to it. \n\nLike the Titanic, catastrophe had struck Maddie's conscious mind. But her subconscious was still active. And it could STILL forlornly transmit her thoughts. \n\nIt was obvious that this was NOT some clever ploy to cover up her cheating. \n\nIn the state Maddie was in there was no WAY that she could be THAT devious. First, she was barely conscious. Secondly she obviously didn't know that she was being filmed. And finally, there was nobody else there to hear her except the piece of shit who was actually fucking her. \n\nFortunately, the dumb-shit had RECORDED it. And that recording was irrefutable proof that she had NOT betrayed me. \n\nTo say that BOTH Maddie and I were relieved was an understatement. \n\nShe looked like the Governor had called with the reprieve, just as the executioner was reaching for the switch. And I felt like bright skies had come out after a force five hurricane had blown over. \n\nThere had probably not been so much relief written on two faces since the end of World War II. \n\nThen as if it was scripted, the culprits walked in for breakfast. \n\nThey must have both heard what I had just been playing. Both of them looked thunderstruck. Mary gave them an outraged stare. \n\nHer voice had steel in it as she said, \"Mother and father, we have to talk.\"\n\nThe mother looked defiant. She said, \"You don't tell me what I HAVE to do young lady.\" \n\nMaddie looked at her mother with absolute contempt and said, \"Sit down mother!!\"\n\nHer mother saw the look. It was pure unmitigated loathing. \n\nHer father read it. He took his wife's arm and sat her down at the table. He said, \"You knew that we would have to have this discussion sooner-or-later My Dear.\" \n\nMaddie's mother sat down looking defiant. I thought to myself, \"Maddie got her brains from her dad, not her mom.\"\n\nI looked evenly at her father and said, \"You know who I am now and what I do, don't you?\" \n\nHer dad said, \"Walter filled me in after you left. You should have told me.\"\n\nI said, \"It was really none of your business. But I might make YOU my business depending on what happens next.\"\n\nHer mother snorted with anger and said, \"Is that a THREAT young man?!!\"\n\nHer dad surprised us all. He said harshly, \"For once in your life Martha, SHUT UP!\"\n\nI said in my mildest tone of voice. \"I just have to know why you did it. You owe us that.\"\n\nHe looked a little sheepish and said, \"Until my conversation with Walter we honestly didn't think you were good enough for our daughter. \n\n\"You must understand how it looked to us, no education and no discernable career path. You were just not the right sort... \n\n\"And a parent protects their child. You would do the same for your son, right? \n\n\"So YES, we conspired with a few of Maddie's friends to get her back together with somebody who we felt was more suitable. \n\n\"At our request, some of her friends contacted her old boyfriend Chad Smithson and he flew all the way here from Omaha on a moment's notice to try to talk her out of marrying you. \n\n\"They grew up with each other. He is from a good family. He has a Harvard MBA and he has a very promising career. He never understood why Maddie and he broke up in the first place. \n\n\"He told us that he had always loved her and that he would do ANYTHING to get another chance with her. He wants to marry her.\"\n\nI said conversationally, \"Did he say how his CURRENT wife would feel about that?\"\n\nBoth of her parents said, \"Chad's MARRIED?!!\" \n\nI said mildly, \"Probably not for much longer\" and hit \"play\" again. \n\nWhile I was still force-paired to Chad's phone I had recorded one last conversation. \n\nA very angry female voice said, \"You TOTAL BASTARD!! You aren't on a last second BUSINESS trip!! Somebody just sent me a video of you fucking that whore Maddie Wilson. \n\n\"I have ignored your infidelities, because I didn't have concrete proof. Needless to say I am going to use this clip to fleece you for all that you are worth.\"\n\nAsshole-breath's voice whined, \"Anita, it isn't what you think. I couldn't help myself. You know what a slut she was at Harvard. She came on to me. She wouldn't leave me alone. I'm only human. It was just sex. I love you and only you...\" \n\nHe had maxed-out the bullshit meter. So he ground to a halt. \n\nShe terminated the call with, \"And don't bother to come home. I will have the restraining order in place before you get back!!\" \n\nI said conversationally, \"Since the final thing I did last night was add old Chad, to TSA's No-Fly and CAPPS II, coming home might take a bit longer than either of them anticipated.\" ",
        "The image of that sleazy piece of shit riding back to Omaha in a Greyhound made me smile.\n\nMaddie's parents looked stricken. Maddie wailed, \"Anita was a sorority sister.\" \n\nI honestly thought that was a little beside the point. But it told me how totally messed up Maddie's mind was at that moment. They had put her through hell and now she had to listen to THAT.\n\nHer mother was staring straight ahead. She looked like she had just had a lobotomy. \n\nThe confusion in the woman's eyes was gratifying. Apparently the certainties in her over-privileged life weren't as absolute as they had been a few minutes earlier. \n\nI turned to her dad, who was clearly the only parent who was in command of his senses. I said, \"Did you know in advance that he would use a drug like Rohypnol, or Ecstasy to rape her again?\" \n\nBoth of her parent's said, \"He RAPED her!!???\" \n\nTheir voices were way beyond shocked. \n\nThen almost in harmony they both quaveringly added , \"AGGGGAIN???!!\"\n\nMary said with utter disdain in her voice, \"He's always been a predator. Everybody knows that! He raped Maddie back in college. That is why she was so afraid of him. \n\n\"Last night you two just served her up on a platter to be drugged and raped again. \n\n\"I am embarrassed and ashamed to be your daughter.\"\n\nMaddie's mother just kept repeating over-and-over in a ghostly voice, \"He raped her? Oh my God he raped her?\"\n\nHer father put his arm around her and said, \"Come on Martha. We will get you something. You have to lie down.\"\n\nThen he turned to me and said, \"We have to talk some more.\"\n\nI said, \"What is it with this 'we need to talk' nonsense. I'm leaving for DC the minute Billy gets back. I hope Maddie consents to come with me. \n\n\"This has been traumatic for me and worse for her. We don't need either of you. \n\n\"Someday Maddie might forgive you. After all, she's your daughter. But I never will. \n\n\"And if I were you I would pay careful attention to your internet presence from now on.\"\n\nThen I turned to Mary and said, \"Of course since you and Milly are honorary aunts we want you two to be around our six prospective children as much as possible.\" \n\nShe favored me with the most loving smile.\n\nMy Maddie, the love of my life, had been handed over to a predator because her snobby parents didn't think that I was good enough for her? Well fuck them!! \n\nI turned to her father and added, \"I have nothing to say to you, and you have ABSOLUTELY nothing to say to us. \n\n\"If it wasn't for the fact that your 'right sort' is also a pervert and recorded his little keepsake, I would never have had the proof that I could still trust Maddie. \n\n\"And I would have walked away from the best thing that could have happened to me in ten lifetimes.\n\n\"No amount of talking is going to make that go away. You tried to ruin my life and you caused your daughter to be violated in the worst way possible. \n\n\"You know who I am now and I can assure you that you are going to regret that.\" \n\nI was really not planning to follow up on that threat. But it told me that I was getting way too far over the line. So I took a step back, turned and stormed out onto the patio in a frenzy of anger. \n\nMaddie rushed out to stand apprehensively in front of me. She put her hands on my shoulders as I hyperventilated with fury. \n\nShe regarded me solemnly with those beautiful intelligent eyes. They were staring deep into my soul. \n\nThen she reached up on tip-toes, gave me the sweetest, most innocent kiss and said timidly, \"We're okay, right?\" \n\nIt was a simple little question with a world of hope and anguish hidden in it. \n\nI had thought that I had lost her. And if it was not for the happenstance of Chad wanting a little something to remember her by, we would have gone our separate ways. \n\nI had made a trip from \"blissful\", by way of \"shattered\", to \"thankful\" in a single day. That was as close to walking over a cliff as you can get. \n\nI said with infinite relief, \"We will always be okay, as long as this never ends. I promise that I will never stop loving you.\"\n\nOn the other hand, as a result of the past 12 hours I had felt a sea change occur in our relationship. And it was probably a good thing for us. \n\nI had always felt that Maddie WAS too good for me. In the end that insecurity was going to kill our relationship. \n\nMarried people have to be, as the bible puts it, \"Equally yoked.\" And to this point Maddie was always the dominant one. \n\nShe was the one with all of the leverage and in the back of her mind she knew it. \n\nYet, after I had seen her with Chad I was fully prepared to take Billy and walk away. \n\nI had accepted that we were finished and I had moved on in my mind. \n\nShe understood that I had made the commitment to leave and was resolved to do so. And it just killed her. \n\nThat strengthened my hand immeasurably.\n\nIt would be excruciating if I ever had to leave her in the future. But it was always a viable option, which I knew I could take. And Maddie knew it too. \n\nIn my mind that newfound strength only brought us closer together. That was because we were now on a much more equal footing. \n\nI also think that the events of the past 24 hours had opened Maddie's eyes and increased her respect for me as a potential life partner. \n\nIn every way Maddie is a traditional high-achiever. She has all of the pedigree and college degrees. \n\nBut it was my unconventional black art that had saved the day. And the knowledge of my clandestine friends and associates had her father shitting a brick. \n\nMore importantly at this particular moment, our new much closer to equal status was clearly turning her on. \n\nI looked into those tawny cat eyes and I could see the hunger and unrequited lust. She wanted a make-up fuck in the worst possible way. \n\nI took her arm, turned her to face across the patio and said, \"Let's take a little walk.\" \n\nWhen we reached the lawn we walked toward the gazebo, which was off in the distance. She said with trepidation stealing into her voice, \"Where are we going? I don't EVER want to go back there. That is where Mary said it happened.\"\n\nI said a bit more forcefully then I might have, \"That is EXACTLY where we are going. \n\n\"We are going back there NOW to thoroughly exorcise any demons that might be hanging around that place.\"\n\nMaddie gave a little sob of relief and hugged my arm, smashing it against one big floating breast. \n\nShe said with continuing seriousness, \"Do you understand what I was talking about now? Do you see how I grew up and the pressures I was constantly under? \n\n\"If you DO you will know why I want the life we have now. I want it with every fiber of my being. You can see it as selfish if you like. But I would never take a chance of losing this state of peace, acceptance and comradeship, and the absolute reward of the many children that I will give you. \n\n\"We are stronger for having gone through this. But, I would rather that you saw our bond as what it actually always was. \n\n\"You are a good man and I respect you way too much to hurt you in any way. I was yours from the instant I saw you sitting there in that chair. I will always be yours. I would never willingly betray you.\"\n\nThat was something to think about as we walked. I had always counted on Maddie's sense of our deep personal connection. But I had never understood her motivations. \n\nAfter spending a weekend with Doctor and Mrs. Doctor Machiavelli and meeting the shallowest and most malicious set of \"friends\" a girl could ever ask for, I saw exactly WHY she would want out of that slough of despond. \n\nAnd I could understand for the first time why she envied me rather than the other way around. \n\nNot many people would have friends who would maneuver you into a situation like Maddie's had done. \n\nWorse, they did it on behalf of a person who most of them knew had committed the unpardonable crime. \n\nThe old adage, \"With friends like these...\" definitely applied here.\n\nMaddie and her sisters are genuine, loving people with a strong sense of values and a need to do the right thing. They all adore children, which speaks to their kind and nurturing nature. More importantly they supported each other unselfishly and without hesitation throughout our troubles. \n\nI could still remember Milly on her knees like a supplicant begging me to not throw Maddie away. \n\nGiven that she was also 3 or 4 levels out of my league, her willingness to humble herself for her sister's sake spoke volumes about who she was as a person.\n\nI didn't need to be any more perceptive than the nerd I actually am to fully accept that Maddie was the woman that I had always thought her to be, kind, generous and totally committed to her family. \n\nThe easy rapport and friendship that have been the hallmark of our relationship from the instant that we met is something that long-time married couples have. \n\nYou can't learn how to do that. It is just there from the beginning. That is, IF you pick the right mate to start with. \n\nThe fact that she was also the hottest fuck in the entire District of Columbia was exactly what you would expect from a woman whose soul burned with Maddie's bright intensity. And now I was certain that all of that fire was devoted to me. \n\nI looked down at her as we strolled down that fateful path toward the scene of last night's crime. \n\nI could almost understand what motivated the fucker to do what he did. Maddie is a walking wet-dream. \n\nHer face can only be described as gorgeous, ideally proportioned dark features, huge eyes and that full wide sensuous mouth. \n\nShe is shorter than average. But she is substantial, huge breasts, full hips and the world's nicest roundest and biggest set of rock hard buns. \n\nNonetheless, it is her overall aura of happiness, her spirit with that unquenchable need to love and be loved. That is what sets her apart and captivated me. \n\nEverybody can see it. I remember the reaction of my next door neighbors the very first day that Maddie and I were actually together. \n\nMaddie interacted with me like we had been married for years, which caused a bit of confusion with Tom and Nancy since they had never seen me with a woman before. It was like, \"Where have you been hiding your wife?\" \n\nWe reached the gazebo. She was freaked out. I could see it in her eyes. I said, \"We are going to wipe every vestige of last night out of this space with a blast of true married sex. \n\nShe looked terrified. She said, \"I was lying on that couch. I saw it in the video but I don't remember it\"\n\nI looked into her enormous, wide-set cat eyes and I could see that she was both upset at the thought of what had happened there and absolutely craving unrestrained jungle sex with me this instant.\n\nI shushed her and turned her to face me. Her massive boobs were rubbing on my stomach their nipples already standing out in steep points. \n\nI tenderly kissed her. I am a foot taller than she is and she had to stand on her tip-toes to do it. But she kissed me back with simple tenderness and affection, the way a wife would. \n\nThen you could feel the sheer desire hit her. It was like she had suddenly been struck by lightning. \n\nHer hard little body tensed. She groaned loudly and her mouth opened like a flower. Her kiss became heated, her tongue almost wild. \n\nShe had one hand behind my head and one arm around my neck making little sighs. \n\nThen she moaned loudly and literally climbed me like a pole. \n\nShe swung her strong dancer's legs up and wrapped them around my butt jamming her pussy against the bulge in my pants. \n\nShe hunched her mound against me for a count of about five, leaning away with her head thrown back and with her arms clasped tightly around the my neck. \n\nThen she came like a crazy woman, wailing and moaning. \n\nShe was bucking frantically, while attached to my front now, hugging me like a spider monkey. It was all-in all both indescribable comedy and the most erotic thing I had ever experienced. \n\nI walked us both over to the couch, with her still writhing against me in the grip of a strong orgasm. \n\nHer head was still thrown back, arms around my neck almost strangling me. And she was urgently repeating her mantra of, \"Fuckme-Fuckme-Fuckme-Fuckme!!\" \n\nI deposited her on the couch. Her legs still wrapped around me holding my crotch to hers. \n\nShe was wild with passion bucking against me and those ardent legs were about to be a problem because there wasn't a micron of separation between her panty-clad pussy and my zipper. \n\nI knew I wasn't going to be able to reason with her. She was so far beyond out of control that she was plainly in her own special world. \n\nYet, I couldn't clear the decks below until I could get her to stop dry-humping me like a demented terrier. \n\nI pushed her back onto the couch. She made a deep contented noise, like she had been waiting to be laid on her back. Then she put one arm up to shield her eyes, just as she had done last night. \n\nThe image of Chad buried to the hilt in her in the exact same position flashed across my mind. \n\nThe anger overwhelmed me and I temporarily stopped all participation in the fuck. \n\nMaddie was so lost in her own desire that she didn't even notice what had happened. \n\nHer mouth was open in the widest \"O\". I couldn't see her eyes, which were under her arm. She was lying on her back panting and moaning and rhythmically pulling herself into me using her legs, which were still wrapped around my butt. \n\nThen she just shrieked, \"Oh-mi-God! Oh-mi-God! Oh-mi-God! Oh-mi-God!\" and came again; very loudly and wetly, wailing with desire and bucking frantically. \n\nThe two giant mounds of her breasts were swaying like an earthquake under her polo shirt. Chad had fucked her for an intense fifteen minutes and had not gotten a reaction like that. \n\nShe opened her eyes and hissed, \"I have to have you inside me, you've got to put your cock in my little pussy. You've got to DO it. Do it NOW!!\" \n\nShe was in the grip of overwhelming lust, so much so that her voice had deepened. At that point she almost sounded like some one of those anime demons. \n\nI pushed her legs apart to unzip my pants and I got Old Lucifer out. \n\nHe was hard as molybdenum and looked like the Empire State Building. \n\nMaddie would do that to any man. But her exceptional need for me in this instance was something special. The smell of her arousal was like a flashing beacon.\n\nI pulled the gusset of her panties aside, which were absolutely drenched, and pushed into the middle of an active volcano. \n\nShe was hot enough inside to nearly burn me. Her inner walls were churning with contractions. Her thighs gripped me like she was riding a bronco.\n\nIt was easy to penetrate her to the top. She was so well lubricated that she was dripping down the crack of her ass. \n\nShe gave a loud snort that could have been heard back in the house and raised her legs in the widest \"V\" imaginable. I put my arms behind the backs of them and spread her slightly wider, driving her knees back almost to her shoulders. \n\nShe shouted, \"That's it baby!! Fuck me, pound me, make it hurt, I loooove you!!\" \n\nThat was all in a tone of voice like she was at Churchill Downs, it was the Kentucky Derby, and she was encouraging the horse she had just bet on down to the wire. \n\nI was expending all of my energy driving her hips into the cushions of the couch. Her tits were flailing wildly under her shirt, I heard a loud snap as her bra couldn't take the strain any longer and disintegrated. Then her boobs really began to bounce on her chest. \n\nAll the time the only sound was a very liquid slurp-slurp-slurp, flesh slapping on flesh and Maddie making little ug-ug-ug grunting noises. \n\nShe was moving her hips underneath all of that pounding. It was like she was dancing the hula, which had the effect of rotating me inside her in 360 degree arcs. \n\nThe feeling of her insides, both hot and silky and also violently roiling, like the ocean in a storm, was getting me there faster than I wanted to get. \n\nI looked at her beautiful face. It was lost in passion, her mouth wide open and her eyes rolled up in her head. They were visible now that both hands were frantically clawing at my ass. \n\nHer chest was heaving violently with her huge mounded boobs flopping wildly underneath her shirt. That last vision did it, I completely lost it. \n\nI heard myself give a low growl and then it was more like a scene out of Animal Planet. \n\nI was grunting like a wild boar, she shrieked with outright visceral passion and we began to collide at the point where we joined. \n\nIt was not so much sex as it was cage wrestling. \n\nShe writhed like a snake under me. I continued to ram her as hard as I could. As we did it she was shrieking over and over, \"More-more-more-more-deeper-deeper-deeper!!\" \n\nThen she spasmed. It wasn't so much an orgasm as it was a feat of strength. \n\nIt was an amazing demonstration of the power of her muscular little body. \n\nHer back arched in a bow, literally lifting me off the ground at the point where I was buried in her. \n\nThen her legs, which I was holding back with my arms broke free of my grip and began to quiver and shake.\n\nShe shot them out to the side at an almost 45 degree angle and I could feel them vibrating at a fantastic rate. It was like she was trying to shake something off her legs. Her well-developed little feet were bouncing around on the end of her legs like they were not under her control, toes tightly curled. \n\nMeanwhile she was soaking me with her juices. Her pussy was literally sucking on me, while her whole love channel pulsated. It was about as close to a full body orgasm as any woman will ever achieve. \n\nI couldn't stand the stimulation any longer and I came. Cumming is not the correct word. It felt like I transferred my male genetalia, cock balls and all into her famished hole. \n\nIt was an exquisite sensation; maximum pain and supreme pleasure all in one moment. \n\nIt took me a very long time to get my awareness back. She was out cold. Lying on her back, breathing like a sprinter and with me slowly shrinking out of her. \n\nHer arms were at her sides. Her feet were flat on the floor. She looked as totally fucked as any woman since Eve. \n\nIt was also almost the exact same position I had seen her in last night when we came to get her. \n\nJealousy and anger flared and subsided.\n\nShe opened her eyes slowly. She looked panic stricken. I said with all of the gentleness and love I could muster, \"Welcome back my love.\" \n\nThere were a lot of meanings in that statement, all of them sincerely felt. \n\nShe smiled wistfully and said, \"I adore you. \n\n\"I have never come like that in my life. It was probably the fear of your loss and the horror of last night but it was beyond earth shaking. I felt like my insides were being squeezed out of me.\" \n\nI continued to rest on my knees. I was between her spread legs, with my totally depleted cock lying against her very messy pussy. \n\nThe intense heat from that part of her was waking Old Lucifer up. Round two was in the offing. \n\nThe languid Maddie was instantly replaced by my spirited partner. \n\nShe smacked me on the arm and said, \"Get off!! We have to get back to the house before Billy gets back so we can arrange things. I don't want him to even suspect what happened. \n\n\"And I have a heck of a lot of cleaning to do thanks to you.\" She started reassembling her wardrobe.\n\nI laughed as I was standing up and zipping. The Maddie I knew had returned. We were back together with a gusto. And all of the evil spirits of preppies past had been banished from the world. \n\nWe entered the lounge area through the patio. \n\nThank God Mary was the only one sitting there. We both looked so well-fucked that I am sure her parents would have had us flogged.\n\nI had the physically exhausted look of a man who had been through a rousing workout with a Marine Drill Sergeant. ",
        "Maddie's lovely thick hair looked like she had run it through a wind tunnel. Her bra had been so thoroughly destroyed that her tits were swinging back and forth as she walked and she was moving around bowlegged. I didn't even want to think about why that was. \n\nMary looked delighted. She said with considerable irony, \"Well, I see that you two have worked things out.\" \n\nMaddie walked over to Mary and tenderly kissed her on her cheek. She said simply, \"Thank you.\" \n\nMary teared up.\n\nMaddie said, \"We have gotten past the present disaster and there will never be anything that will drive us apart again. \n\n\"We are going down to the court house now to get married and we want you and Milly to come along.\" \n\nThat was news to me; welcome news but news nonetheless. But I am a well-trained male. I know who holds the script. \n\nMaddie added, \"I'm sorry but please do not tell mother, or father. I will forgive them someday but the wounds are too raw right now.\"\n\nBilly and Milly made their appearance at that point. Mary must have called her to tell her the coast was clear. \n\nBilly was beyond excited. He was clutching half a museum's worth of souvenir fossils in a plastic bag. \n\nHe said with delight, \"Milly bought these for me. I can curate my own collection.\"\n\nI thought, \"Seriously? Curate? How old is this kid?\"\n\nMilly came up to me and lightly kissed me on the cheek. She said, \"This means everything to me.\"\n\nI took both of her hands and said, \"You were a rock. I will never be able to repay you.\" \n\nIt was Milly's turn to get misty eyed.\n\nMaddie was back to her usual high spirits. She said, \"You all need to get dressed. We have a wedding to attend.\" \n\nI was afraid that Milly's shriek of delight would attract their parents, but apparently Martha was off somewhere having the vapors and Bud must have been out riding the grounds, or one of the female servants, or whatever the Lord of the Manor does in his spare time.\n\nMaddie went upstairs with Billy. \n\nI walked upstairs with them. \n\nOf course I was immediately banished from the bridal chamber. She told me it was bad luck. \n\nI was thinking, \"Sheeeze! How much worse could our luck get?\" But I didn't want to tempt fate. \n\nI was sitting downstairs reading and drinking a cup of tea when Maddie came down with Billy. I dropped the cup in sheer wonder. \n\nShe was in a simple vintage Laura Ashley dress. It was pure white linen with a low scoop in the front and it had \"my wedding dress\" written all over it. The shoes were taupe and only four inch heels. \n\nAnd she had gone all-out with the things women do to make themselves look exceptional. \n\nMaddie's beauty is a scientific fact. There is a mathematical conceptualization called \"the Golden Ratio\", which is a proportional arrangement of things that humans perceive as \"beauty\". Mattie's face is right on that proportion, 1.618 or Phi, and it is hypnotic. I couldn't stop looking at her. \n\nBut I tore myself away from that beautiful face as soon as I saw who she was leading hand-in-hand down the stairs. \n\nIt was a small boy in kid sized morning dress. He looked as proud as he could be. Since it had clearly been tailored for Billy it must have been THEIR little secret.\n\nShe looked at me impishly and said, \"I needed somebody to give me away and YOU needed a best man.\"\n\nWe were driven into downtown Ann Arbor in a big black Suburban, not unlike the ones I see the President riding around in in DC. \n\nMilly was in a pure silk floral print that was both simple and screamed expensive. \n\nMary was in one of her usual business dresses. She is a Partner in a CPA firm. Her outfit was classy, while still sexy beyond belief. \n\nThe ceremony was performed by a judge who of course knew Dr. Bud and Dr. Martha. \n\nMaddie blithely explained that they were not able to make the ceremony. \n\nThe judge looked skeptical. Maddie looked lawyerly. The judge performed the ceremony. \n\nAt the point where he got to the \"who gives this woman\" part, a little voice next to her said with firm and unyielding authority, \"I do.\" \n\nWhen the judge asked for a ring my four year old best man, who had now moved over to stand beside ME produced a brilliant ring that I had made especially for my new wife. \n\nShe had never seen it. Billy and I can keep a few secrets too. \n\nIt was a flawless five caret Blue Ceylon sapphire between two thee caret diamonds on a white gold band. \n\nBased on what I had spent on it I knew that the next several generations would be wearing it at THEIR weddings. \n\nIt shone like a supernova as I slipped it on her finger. \n\nShe gasped in wonder. The two bridesmaids broke protocol to mob her to see it. \n\nThe judge did his part about pronouncing us man and wife. \n\nHe then stomped off to his office. My guess was that he was going to give old Bud a call.\n\nTwo ecstatic women were milling around the bride. \n\nThen Maddie threw herself into my arms, hugged that tight little body with its big soft boobs against me and said with command in her voice, \"You may kiss the bride.\" \n\nDid I mention that she was bossy? \n\nEpilogue:\n\nIt was Commissioning Week. Billy was standing among the steadfast white-clad ranks of Midshipmen. \n\nAs a Battalion Commander he was at rigid attention in front of his battalion. He had already qualified for Naval Aviation's advanced strike pipeline. \n\nHe would leave for his assignment at NAS Pensacola today. It was Maddie alone, who had given our son the confidence to be a carrier pilot. \n\nShe was standing next to me, my perfect soul mate of a wife, beaming with pride at him. \n\nShe had raised a damaged little boy into the outstanding specimen of All-American manhood standing in front of us. She had also managed to turn a solitary 34 year old nerd, into a 52 year old man of some influence and wealth. \n\nMy exquisite Chelsea was standing next to me weeping silently. She was crying with joy. She and Billy have always had a special bond. Maddie created that. \n\nI didn't think it could be possible for any woman to outshine Maddie for sheer feminine sex appeal but my beautiful Chelsea had done it. \n\nBut Chelsea is going to MIT, rather than off to read the classics at her mother's alma mater. Apparently gorgeous 18 year old girls with Chelsea's formidable talents in mathematics and theoretical computing are quite rare. \n\nI like to think that she got some of that knack from me but her mother is the smart one. \n\nThe rest of my children were strung out next to Maddie, all holding little signs congratulating Billy. \n\nThey were spaced an ideal two years apart. Both of them were as bright and well-brought up as you would expect from any product of Maddie's mothering. \n\nSixteen year old Janey is the athlete. She is already taller than average, like her aunt Mary. She was just included on the Women's Youth Soccer ODP for the National Team. \n\nWhere Chelsea has Maddie's extreme sex appeal Janey comes off more like the Goddess Athena. She has a natural clean-cut almost aesthetic beauty that radiates good health and extreme athleticism. \n\nShe is interested in boys. But she is a lot more interested in being a female Olympian.\n\nLanky fourteen year old Tom is the one I claim. He is the one who picked up my black arts. Except he did it by age ten. \n\nI knew that I had to train him simply to keep him just this side of the line. That was a smart move on my part because he has already surpassed me as a super-hacker. \n\nBut he is the original good-guy white-hatter in cyberspace. And I am certain that the adults who utilize his skills would probably faint dead away if they knew how old he actually was. \n\nMilly and her husband stood on the other side of me. \n\nShe went into medicine and has been a practicing Pediatrician for ten years. There are other specialties that pay more. But Milly loves kids and they are who she wants to spend her life helping. \n\nHer husband is an all-around good guy and s man's-man. He is with USAID so Milly has had plenty of opportunity to take care of children in some very interesting Third World places. \n\nThey plan to have their own brood once Milly gets her fill of rescuing the world.\n\nMary never married. She worked her way into a senior partnership at Deloitte. She is definitely NOT an old maid though. Mary seems to like them gorgeous and very frisky, with a lot of variety. \n\nAnd with her money she has the pick of the litter. The guy standing next to her was some Brazilian stud ten years younger. And he might as well have showed up with a leash on him. \n\nMe, I have my perfect friend and life-companion. We raise our kids and live our lives as partners and we spend as much time as possible together visiting interesting places. \n\nMaddie still turns heads, especially when we are in Italy. And she is still the hottest fuck in the beltway. \n\nI have not had the balls to question my good fortune but I always wonder what would have happened if I had not given in to my voyeuristic nature. \n\nI know that some of you are thinking, \"How could you go through life with a woman you met at a gangbang?\" And I understand your point. \n\nBut it is hard to argue with a lifetime of results. \n\nThere is no moral to the story. Except perhaps that once in a while a nowhere man like me can have a bit of luck. But, if Lady Luck DOES choose to favor you, you had better hang on tight because the ride can get bumpy."
    ],
    "authorname": "dtiverson",
    "tags": [
        "cheating",
        "hot wife",
        "bigtits",
        "videos"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/a-totally-unromantic-love-story-pt-03"
}