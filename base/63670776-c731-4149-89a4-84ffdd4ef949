{
    "title": "A Bargain Ch. 02",
    "pages": [
        "Chapter 2: Seduction \n\nSATURDAY: JENN EXPLORES HER SEXUALITY\n\nI woke up Saturday morning to find the sun shining through the curtainless windows, with one of my hands on Jenn's boobs, and with one of Jenn's hands holding my sticky penis and balls. She was already awake and was trying to arouse me! I pretended to be asleep, and she carefully twisted around on the bed so that she could examine my penis closely.\n\nJenn held her face just inches from my body as she fondled and explored me. Her innocent curiosity coupled with her touching immediately caused my penis to become fully erect. She caressed and rubbed it, a look of wonder and excitement on her face. Then she began to mimic what I had done when I jacked off, and as I peeked at her naked body through my slitted eyes, I felt the pressure at the base of my penis quickly building.\n\nMy penis was pointed directly at Jenn's face, and she was looking at its cyclops eye, now swollen and dark red. She watched my balls pull up hard against my shaft, and she began to rub them with one hand while stroking my shaft with the other. I felt a growing heat spreading out from my balls as Jenn continued rubbing and fondling me.\n\nI ejaculated. My first burst hit Jenn between the eyes, and before she could react, a second rope of cum hit the side of her nose and flopped into her open mouth. She recoiled in disgust, saying, \"Yuck!\" and the next shot struck directly on her right nipple. It was still coated with dried cum from the night before.\n\nAs Jenn jerked back, I grabbed her and pulled her back against me, and my remaining cum splashed against her stomach and dripped onto my abdomen. \"GOD! It's in my mouth! It's all over my face! Let go of me!\" She cried.\n\nI forced Jenn down onto her back, and I rolled over on top of her and pinned her to the bed. Then I licked the cum off of her face. She kept trying to keep me from kissing her, but I persisted, and I finally pushed a wad of my cum into her mouth with my tongue. She tried to spit it out, but I kept my mouth clamped against hers, and I began to rub my thigh against her pussy. I could feel the fresh, sticky cum on my stomach as I rubbed against her.\n\nJenn swallowed, then kissed me back. It was obvious that she was really turned on. \"I think I'd like you to do me again!\" She shyly said. \"And your . . . stuff . . . didn't taste so bad after all!\"\n\nI was happy to oblige, and I moved my lips to her pussy. About twenty minutes later I enjoyed her screams of climax while I watched waves of passion ripple through her abdomen. This time I had two fingers inside her when she came, and I could feel her vagina contracting against them as her orgasm trembled through her body. \n\nWe shared a long, sticky kiss as we clung to each other. The pussy juice on my mouth covered up our morning breath. Jenn hungrily licked my face. \"I thought it would taste awful!\" She declared. \"But it . . . somehow . . . makes me feel even more excited!\"\n\nAs Jenn pressed herself against me, I knew I was winning the struggle. She had experienced far more sexual arousal than anything she had done before, and we had become almost as physically intimate as two people could be. My penis throbbed as I realized that she would probably soon be asking for me to really have sex with her. All I needed to do was to keep her aroused and ready!\n\nThe cabin slowly got warmer. We were sticky with our various secretions and covered with dried sweat, and needed to shower. When we got up, I pointed out the various wet spots on the sheets. I pulled them off the mattress and put them in the washing machine. While I got it running, Jenn took her still-damp towel into the bathroom and began to shower.\n\nI got my mostly-dry towel from the porch and joined her. Jenn didn't complain when I climbed into the tub with her, and we took turns cleaning each other off. While I was cleaning her pussy, I slid one finger into her vagina and another into her anus, with my thumb pressing against her clitoris. Jenn was disgusted by the finger in her ass, so I told her she should do the same thing to me.\n\nWith her soapy finger inside me, I helped her find my prostate, and instructed her on the way to rub it that really turned me on. I was soon moaning and groaning, and Jenn had a huge, satisfied grin on her face. Before I ejaculated, I made her stop, and I pushed my fingers back into her, this time without complaint. She was soon grunting as I had done a couple of minutes before. We stopped before the hot water ran out, but we were both nearly ready to climax.\n\nAfter drying each other off, I took the wet towels outside, and I hung them on a clothesline about fifty feet from the cabin. Then we began preparing breakfast. Our frequent kisses kept our arousal at a peak. My balls had a slight ache, and I could smell Jenn's pussy even though she had just showered.\n\nWith the bacon sizzling and the eggs ready to be put on, the washing machine stopped, and I told Jenn it was her turn to hang out the laundry. After some arguing, she finally walked outside, completely naked, and hung the sheets up. Watching her do this in the nude was really a sight! It was still a little chilly outside, so her nipples were stiff and she was shivering when she came back in, so we cuddled and kissed for a couple of minutes. Once again she got really aroused. Most likely she had never really gotten calmed down from our earlier activities.\n\nThe cabin was quickly warmed by the sun, so we unclasped each other and finished making breakfast. We ate it in the nude. Of course there really wasn't any choice since I still had Jenn's clothes locked up! Jenn blushed occasionally, but she gave no other sign that she was uncomfortable. While we drank coffee after breakfast, I sat across from her and talked her into giving me beaver shots like Sharon Stone had done in Basic Instinct. Of course it's even a better view if the woman is nude! And her blonde pubic curls were incredibly beautiful to stare at!\n\n\"Your penis points up when I do this!\"\n\n\"I can tell you're enjoying this. I am too!\" I replied.\n\nEvery time Jenn spread her legs apart and arched her hips forward, she blushed very deeply, but she was becoming more wanton. I had a world-class hard-on.\n\nWhen we hadn't touched each other for several minutes, we slowly calmed down. Jenn said she wanted to explore the woods some more, and I agreed. I retrieved the VW key, and I told her that she could go out and get any clothes she wanted to wear. Once again I was treated to the sight of a naked woman outside in the sunlight while she made two trips back-and-forth with her collection of little bags of clothes.\n\nI insisted that we not wear any underwear. We wore shorts, T-shirts, and shoes and socks. Jenn looked fabulous, particularly with her two erect nipples pushing her shirt front out!\n\nWe explored the woods and rocky outcroppings for nearly two hours. We saw lots of snakes. Some were poisonous, but they were easily avoided. Late in the morning we returned to the clearing around the cabin. I suggested we have a drink and sunbathe. I got a beach blanket out of the car, spread it on the grass, and began to take off my clothes.\n\nJenn said she was afraid of getting burned in sensitive places, but I pulled out a bottle of suntan lotion and told her that we could prevent that easily enough! As soon as she was completely nude, I insisted on applying lotion to her entire body, paying particular attention to her breasts and nipples. Since she was a blonde, I pointed out that I really had to be thorough, and by the time I was done with the pale skin below her waist, she was once again really aroused. Then she greased me up, paying particular attention to my erect penis. Finally we lay down and began to bake in the sun.\n\nEvery few minutes we would change positions, and I insisted that we apply more lotion to the white, untanned areas on our bodies. Jenn used the lotion to make my penis slippery, and she mimicked our strokes of the night before and began to give me a hand job.\n\nLying on my back, with a beautiful, greasy, naked girl rubbing my dong, was too much. When she slid a greasy finger into my anus and began to rub my prostate, I shot my wad. This time she had me aimed away from her, and it ended up on my legs. She laughed and wiped it off me with her hands, then used the grass to clean her hands off. She was amazed at how small my penis was when it was uninflated, and she made fun of it. But then it was my turn.\n\nI had Jenn lie on her back, and I rubbed a lot of lotion onto her breasts, and onto the front of her thighs. Then I straddled her waist, and rubbed her breasts with one hand while I reached back and used my slippery hand to rub her pussy. She raised her knees and spread her legs apart, and I slid my fingers in and out of her vagina. The lotion made her clitoris very slippery, and she began to move with the rhythm of my hand strokes.\n\nMy penis stiffened up, and she caressed it while I slowly brought her tensions up. As I had done before, I brought her to the brink, then paused, then brought her to the brink again. I did this over and over until she arched her head back and looked like she was in pain. I increased the tempo on her pussy and she began to scream my name over and over. I could feel her body shaking under me.\n\nAs she calmed down, she pulled my hand away from her clitoris saying it was just too sensitive. I kissed and fondled her for a few minutes, then built her up again. This time I told her that she had to finish herself.\n\n\"I can't do that! Not with you watching!\" She cried.\n\n\"I did it last night while you watched!\" I retorted. I rubbed her clitoris with my finger until she was almost there, and then stopped. \"Your turn, Jenn! Finish yourself off!\"\n\nAfter a few false starts, she began to rub her breasts with one hand while rubbing her crotch with the other. I leaned back and I watched her masturbate, thinking about how far I'd already brought her. Late yesterday she had been reluctant to eat a meal with me while nude. Now she was allowing me to watch her masturbate herself! \n\nAs Jenn twisted her legs around, I could hear her wet vagina making smacking sounds, and I knew she was getting close. Finally she climaxed, and screamed, although not as loudly as before. But she kept rubbing herself and her climax repeated several times. Finally she stopped, and lay on her back with her legs spread apart, with the sun shining directly on her pussy lips. If any woman ever had a well-fucked look, it was Jenn - and she hadn't fucked me!\n\nI leaned over her and kissed her. She clung to me for several minutes. She made little purring sounds in her throat. A little later we picked up our stuff, including our clothes and my beach blanket with a couple of spots of Jenn's pussy juice on it, and we went back to the cabin. It was so hot we had to open the windows to cool it off, and then we made some ham and cheese sandwiches and ate them in the nude outside in the shade. We washed them down with cold beer. When we tried to get up, we both found we had stiff and sore muscles from the hiking and climbing.\n\nWe went back inside and ran a warm bath, and then we both climbed in and soaked. Every few minutes we added a little hot water. We soon drifted off to sleep in the tub, with our heads at opposite ends, and with our legs intertwined so that our crotches were pressing against each other. In the warm water I could clearly see that Jenn's labia were engorged and that her pussy was open and ready. My prick stuck straight up out of the water, and if I hadn't made my \"no intercourse\" promise, I would have screwed her right then. She was ready, I was ready, and we were both relaxed. Instead of making love, we napped.\n\nJenn woke me when she pulled the plug and stood up. We repeated the shower action of the morning, and washed all of the residual lotion off our various body parts. Then we grabbed a couple of cold beers, walked naked outside, pulled our towels off the line, and dried off outdoors. A gentle breeze had come up, and it was warm but not hot. The smell of the woods made it feel like paradise. Of course holding and caressing a naked Jenn didn't hurt, either!\n\nI told Jenn that I had a couple of presents for her, and I retrieved them from the car. First I handed her a package with a pink bow on it. She quickly finished her beer and then opened it. When she pulled out the black negligee, she blushed and stammered, \"I could never wear something like this!\"\n\nBut I insisted, so Jenn told me to wait outside while she went into the cabin and put the skimpy outfit on. After a couple of minutes Jenn called my name, and I entered the cabin to find her wearing the negligee, lying on her back on our bed, with her hands over her head and with her knees up and her legs spread wide apart. She looked like a gift from God, and her posture and the look on her face said, \"Unwrap me and fuck me!\" She was clearly learning how to exploit her sexuality!\n\nI kissed her and caressed her entire body, and she quickly became extremely aroused. After a lot of foreplay, I untied the bow between her breasts, slipped the negligee top off her sweaty body, and paused to look at her wearing nothing but the skimpy black bikini bottoms. As I rubbed her crotch through the material, her pussy juice soaked the panties, and I could see her wet pussy lips through the material. Before I slid the panties off her, I had her bend down and look at herself. She looked again when she was naked, and it was obvious that she was ready. Her outer lips were dark and spread, and her vagina was partially open.\n\nI slipped her pussy-juice-sodden panties down her legs and dropped them onto the floor. I handed her the second package. She looked confused when she pulled out a dildo, but she immediately started comparing it to my erect penis. \"It's almost an exact copy of yours!\" She laughed. \"It's even the same size!\"\n\nThe dildo came complete with balls, and also with a tickler which, I explained to Jenn, was to stimulate her clitoris. \"I'm not sure about using this!\" She said. I quickly smeared lubricating gel all over it (even though it probably wasn't necessary, given the state of her arousal), and I began to push it slowly into her vagina. Jenn stared at it as it slowly disappeared into her, and then she gasped when the tickler struck her clitoris.\n\nI began to move the dildo in and out of Jenn, pressing down and twisting when I had it all the way in, and this really drove Jenn wild! She began to grunt, and she jerked her hips against the dildo as I began to increase the in-and-out tempo. She had her fastest climax yet, and they probably heard her scream at the store in the valley! \n\nI held the Dildo inside Jenn while she calmed down, then I began to move it again. As soon as she started responding, I told her that it was hers to use, and she sat up a little and began to move it around inside her. It was instructive to see the motions, patterns, and timing she used. Within a few minutes she again exploded with orgasm. While she calmed down, I gently caressed her body and kissed her. The dildo remained inside her.\n\nI was becoming aware that my feelings for Jenn weren't just sexual. We had been friends for a couple of years, and now that we were getting intimate, I knew I was starting to fall in love with her. I began to worry about what would happen once I finally got her so aroused that she wanted to fuck me. I knew that I was already close to that point, but how would she feel afterwards? I'd given my word, after all. For the most part I was concerned about her feelings for me. That was a first for me - with any woman!\n\nI told Jenn that she could use the dildo any time she wanted to pretend that I was fucking her, and she kissed and hugged me. Then I had an idea. I told her that the black negligee could be her way of signaling me that she wanted to really have intercourse. \"If you ever wear that for me again, I'll know that you are ready for us to have real sex. Until you decide to do that, you can always use the dildo.\"\n\nJenn smiled, looking completely sated. \"So, if I wear this outfit for you, you will make love to me? And until I do that, you won't?\" She asked. I nodded and she kissed me for a long time. \"It's a deal!\" She said. One again I realized I'd just made a promise that I didn't think I would be able to keep. If I got her hot enough to beg me to fuck her, could I do so without breaking this new promise? It really surprised me that I cared!\n\nI wanted to have her \"wear\" the dildo, and after a trip to the bathroom, we found that a pair of panties she had packed would almost hold it in place inside her. Certainly with a little help from me, and with an occasional push from her, she could move around with the dildo inside her. Even with her panties on it was sexier than having her nude since I knew that she had an erect \"copy\" of my penis inside her!\n\nWe decided to have an early dinner, and we quickly made spaghetti which we ate with garlic bread and more red wine. Throughout the preparation and the meal, I pressed the dildo through her panties, and Jenn wiggled and gasped with the stimulation. She was so turned on that her face and chest were covered with blotchy red areas and her nipples were rigid. I teased her by dripping some wine onto her breasts and then licking it off, and I challenged her to do the same thing with my penis. She was reluctant, but finally tried it. It felt so good having her lick, suck, and kiss my prick, particularly since it was completely new to her.\n\nThen I talked Jenn into giving me a real blow job. She quickly picked up the idea after a few instructions, and she really drove me wild! At the same time she was flexing her hips and rubbing the dildo through her panties, driving herself into a frenzy. She suddenly began to orgasm, and as she raised her head to scream, I exploded into her open mouth, onto her face, and onto her neck. She collapsed on top of me with her legs apart, straddling me. She kissed me, and I licked some of the cum off her face. Before I could finish, she began to drift to sleep. My limp penis was against one of her legs, and I could feel the sticky cum between us. I could taste it, and I could reach down her back and feel between her legs and push on the dildo through her panties. She obviously enjoyed the sensation, but we were both exhausted and I quickly joined her in sleep.\n\nEARLY SUNDAY: THE FINAL DAY AT THE CABIN\n\nJenn woke up first, and she woke me when she got up. It was sometime after 2:00 a.m. Jenn removed the dildo and we both looked at the way her vagina stayed open, even with it out. We shared a fast, joint shower. The cabin was really cold, and we quickly got back into our sticky bed. Jenn was on top as she had been earlier, only this time she wasn't wearing her panties. She slid down me until my stiff prick was pressed upright firmly against her pussy. Then she wiggled against me, kissed me deeply, and quickly fell asleep.\n\nI dozed for a while, then decided to resume stimulating Jenn. I gently stroked her back, all the way down to the backs of her thighs. My fingers gently brushed the sides of her breasts, even lightly touching one nipple. I began to slowly move my hips forward and back a little bit, producing a sliding motion with my erection along her pussy and against her clitoris. Other than my prick, I was completely relaxed. I kept this up for at least a half hour, then I began to be more direct in my touching. I worked my thumbs between our chests and applied direct stroking to her nipples. \n\nI gradually increased the tempo of my hip thrusts, and I lengthened the strokes. In only a few minutes I could feel Jenn's pussy getting wet, and my penis, now partially wrapped in her labia, began to slide smoothly up and down her slit. Her heart began to beat faster, and her breathing picked up, but she still appeared to be asleep. She began to move her hips in time with the movement of my prick, and I reached between her legs and pressed the head of my penis more solidly against her.",
        "Soon the head of my penis moved almost inside Jenn on each stroke, and I began to move from side to side when my thrust was at its greatest, rubbing back and forth against her clitoris. Her hip action increased, and I no longer needed to press my penis with my hand in order for its head to begin to enter her vagina. She was so wet that it felt like her pussy lips were greased. The only reason my penis didn't enter her was the angle between our bodies, and either of us could easily correct if we so desired.\n\nJenn began to grunt and moan with each of my slow, deliberate thrusts, and I left the head of my penis at her vaginal opening longer and longer. She suddenly woke up, and we both added side-to-side motion to our forward and back hip action. She raised herself up to kiss me, and I began to rub her breasts and pull gently on her nipples. The change in her posture caused the head of my penis to begin to enter her vagina, and I held it there, twisting and turning, while we kissed. If she pushed herself up and leaned back, my penis was going to enter her. As it was her rocking hip action caused the head of my penis to really stimulate her, and I could feel the opening to her vagina alternately squeezing and releasing me.\n\nOur motions got faster and faster, and Jenn's grunts and moans got louder and longer. Suddenly she climaxed, and once again the only thing that kept my penis from entering her was the angle between our bodies when she dropped herself on me. The head of my penis was still at the entrance to her vagina, and I could feel her contractions through it. The sensations were incredibly exciting, and as her orgasm died down, I moved my penis back and forth against her, and she climaxed again, dislodging the head of my penis from the entrance to her vagina with her writhing.\n\nAfter a few seconds Jenn's screaming stopped, and I could hear a wet popping sound from her vagina as she twisted her hips back and forth. Jenn was still really aroused! I gently rolled her off me so that we were lying side-by-side, and I slid one hand down to her crotch. I rubbed my hand along her pussy, lubricating my fingers and thumb, and then I pushed three fingers into her, and rubbed her clitoris with my slippery thumb.\n\nInside Jenn I spread my fingers to make her feel as if her cunt had a really big dork in it, and I again found her G-spot. Very gently and slowly I began to rub her most sensitive spots, alternating between her G-spot and her clitoris, while kissing her face, neck, and breasts. For at least ten minutes I rubbed her almost to orgasm, then backed away.\n\nIn spite of the cold cabin air, Jenn kicked off the sheet and blanket, and lay spread-eagled on her back on the bed. She began to rub her hands all over my body. The cold air in the cabin didn't matter to either of us anymore.\n\nI slowly moved until I was kneeling between her legs. I placed the head of my penis at the entrance to her vagina. \"Do you want me to slide it into you, Jenn?\" I asked in a husky voice.\n\n\"God yes! Now! Fuck me now! I want you inside me!\" she screamed and threw one arm over her eyes and arched her back, opening herself up even more. I heard her vagina make another wet pop, but I found I couldn't do it. If I'd had a condom, I wouldn't have even considered what was really bothering me. I would have slipped it over my cock and plunged it into her waiting snatch. \n\nI had correctly believed that I could arouse Jenn to this point by making her live up to her arrangement with me. But I had also promised that I wouldn't fuck her unless she wore the black outfit. But so what? Wasn't the idea to get her up here and fuck her? As I hesitated, I suddenly found myself exploding with feelings for Jenn. I realized I was unable to betray our new arrangement concerning the black negligee. Stupid!\n\nJenn was twisting and writhing under me. I heard her vagina pop again. Since I couldn't just fuck Jenn, I picked up the dildo, pushed my dork away from her pussy, and held the dildo just like my penis. Then I rocked forward, sliding the dildo all of the way into her in one, slow, smooth push. I had two fingers between the tickler and her clitoris so that she wouldn't feel it, and I pressed my fingers against her clitoris. This was too much for Jenn, and she arched her back, thrashed her arms, pulled her knees up, and screamed over and over. I held the dildo firmly against my crotch, and I pretended it was my penis as I fucked her with it. She screamed and climaxed twice more before she went completely limp, gasping for breath. I pulled the dildo out of her with a wet \"plop,\" and then lay down beside her and caressed her all over as we cuddled.\n\nMy balls were aching like they were going to explode! As Jenn recovered, she reached down, took hold of my penis, and realized that it was still rock-hard and erect. \"Didn't you fuck me?\" she asked?\n\n\"No, I used the dildo,\" I replied. \n\n\"Why? I wanted you inside me! Why didn't you? God, I even thought it was you and it was incredible!\"\n\n\"Jenn, I can't talk about that until I get some relief! My balls are throbbing!\". \n\nJenn giggled, and crawled on top of me with her dripping twat almost in my face and licked and sucked until I came. This time she was ready, and she caught nearly all of my cum in her mouth. As my penis began to deflate, Jenn spun herself around on me and pushed a huge mass of cum into my mouth with her tongue. Then she giggled again.\n\nAfter pulling the sheet and blanket back over us and cuddling for a few minutes, Jenn repeated her question. \"So, why didn't you fuck me when you had the chance? Is there something wrong with me?\"\n\nBy that time I could verbalize my answer. \"Jenn, I took unfair advantage of you all weekend, and I made you do all sorts of things you had never done before. I kept turning you on, and I figured that eventually your sexual passions would overwhelm everything else, even your own sense of right and wrong.\"\n\nJenn was staring at me with a strange look in her eyes. Abruptly I realized something else, and I told her, \"We didn't have any protection, and I knew I might get you pregnant. I'd gladly marry you if that happened, cuz I know you would never get an abortion. But I don't think we could succeed in a marriage if a baby caused it.\"\n\nNow the look on Jenn's face was a mixture of confusion and sadness. \"So you didn't fuck me because you don't want us to make babies together? Is that it?\"\n\n\"No, Jenn. If we decided - in particular if YOU decided - that we should have unprotected sex because we were heading toward marriage anyway, then that would make everything different. But I couldn't just . . . arouse you . . . trick you . . . Ah, shit! I couldn't take advantage of you like that, okay? Particularly after we made that deal with the negligee! And I've never wanted to make babies with anyone before, but now I think I do with you!\"\n\nNow Jenn was smiling. \"Does this happen to you a lot? You get the girl all hot and then can't finish because you worry about her?\"\n\n\"Truthfully, this is the first time I've ever turned down a fully-aroused and ready woman! It's not that I didn't want to fuck you, it's more like . . . I've never wanted to have sex so much before. Hell, I don't really understand!\"\n\nJenn kissed me then held me close for a couple of minutes. \"So, you don't ever plan to make love to me, is that it?\" She asked.\n\nThis time I laughed. \"Not exactly! If you decide to make love to me when you're not turned on to the point of losing control - as you were a few minutes ago - then you won't be able to keep me out of you! Let me repeat what we agreed earlier. If you ever wear that black negligee for me again, I'll assume you've decided that we can make love, and I'll do everything I can to arouse every sexual passion in you I can before I slide my penis into you.\"\n\nJenn looked thoughtful in the dawn light coming in the windows. After a few minutes she spoke. \"Okay, I'll go along with that. But I'm still a little confused. I reached the point where I couldn't stop. I didn't even WANT to stop! How were you able to keep from having sex with me? Did I do something wrong? Weren't you as excited as I was?\"\n\n\"Jenn, it wasn't easy! We both know I've had a lot more experience with sex than you! I knew you would have felt 'used' if I had taken advantage of you that way.\"\n\nJenn was quiet for another minute or so. \"What would happen if I let another guy get me into the same position? Would he be able to quit?\"\n\n\"Jenn, you would almost certainly get fucked,\" I replied. \"I don't mind breaking down your inhibitions, and I love introducing you to sexual passion, but I have too much feeling and too much respect for you to take advantage of you like that. And that is a surprise to me, too!\"\n\n\"You don't call what you did so far taking advantage?\" Jenn challenged and she began to punch me gently in the stomach.\n\n\"Of course I took advantage of you!\" I replied. \"But did we do anything that you regret? Besides you took advantage of me in order to finish that exam!\"\n\nAfter a few moments Jenn answered. \"My only regret is I've lost my sexual innocence. My relationships with men will never be the same again.\"\n\n\"You were naive before, Jenn. Now you understand much more about your own desires as well as mine, and your relationships with men will be mature, as a woman, not as a girl.\"\n\nJenn grinned at me. \"You're hoping that I'll put on that black outfit and lie back down like I was before, aren't you?\"\n\nI grinned back. \"Of course! And if you do, I promise I won't stop! You can watch my penis going in and out of you, not the dildo!\"\n\n\"Well, your instincts are pretty darned good, Don!\" Jenn said. \"I'm right in the middle of the month, between periods. If you wanted to get me pregnant, this is probably just about the best day to do it. I think I'll skip unprotected sex today! I'm not ready to become a mother just yet!\" We cuddled and kissed for several minutes.\n\nWe finally got up from the sweat-drenched, sticky sheets, and explored our mutual passions by taking a long, gentle shower. Then we dried off and prepared breakfast. As we sat together, each enjoying the relaxed nudity of the other, Jenn asked, \"So what am I supposed to do when I get really horny? That's probably going to happen a lot from now on.\"\n\nI pointed to the dildo, still covered with her slime, lying on the floor. \"Pretend that's me!\" \n\nJenn grabbed my dork, \"Why couldn't I pretend it was someone else?\" she asked and she named a couple of movie stars.\n\n\"Jenn, your fantasies are your own business!\" I said. \"But that dildo still looks like my dork, regardless of who your fantasy lover is!\" Jenn laughed and we kissed again.\n\nWe tossed the sheets, our towels, her negligee, and most of our other clothes into the washing machine, and turned it on. I picked Jenn up, placed her on its vibrating top, and then stood against her with my penis pressing against her pubic hair. She slid forward until the head of my penis was against her pussy, and then we kissed while the vibrations of the washing machine got us both turned on. \n\n\"It's incredible how much I want to have you inside me when I get this stirred up!\" Jenn exclaimed. \n\n\"Just pretend I'm really inside you and let yourself go! I'll hold my penis against your love button.\"\n\nI positioned the head of my penis directly against her clitoris and Jenn closed her eyes. I kissed her and fondled her breasts until she had another screaming orgasm. As she calmed down, she remarked, \"I came to this cabin without knowing what an orgasm really was. Now I'm getting them doing the laundry!\"\n\nWe both laughed, and I pulled her down, and we kissed and cuddled until the washing finished.\n\nIt was only about nine in the morning, and we figured we could dry things for several hours, so we hung everything on the line outside. Then we walked around the little clearing and took in the view. I turned to look at Jenn, and marveled at her beautiful face and hair, her perky breasts, and her blond pubic thatch. She turned, smiled, and kissed and hugged me. We clung together and stood there for quite a while. Our touching got us both more and more excited.\n\n\"Wait here!\" Jenn said. She got the blanket we'd used for sunbathing from the car and spread it out on some soft ground in the shade under some trees. She motioned for me to join her.\n\n\"I really want to make love with you, but I'm afraid to today!\" She said. \"I want us to climax together here, under these trees. You told me about sixty-nine when we took the purity test. Can we do that here?\"\n\nWe could and we did. I lay on my back and Jenn knelt over my head. She leaned down and began to kiss and lick my penis, and I started kissing and licking her labia. I had to stop her several times because she got me too close, but after a half- hour or so, I knew that she was right on the edge. With the help of a couple of fingers, I got her to explode. The sight of her pulsing vagina set me off, and I blasted cum into her mouth.\n\nJenn clamped her thighs so hard around my head that at first I couldn't hear her screams. But I could see and feel her orgasm against my face. As she licked my penis, I brought her to yet another climax. This one I heard as her screams echoed across the valley.\n\nAs Jenn began to calm down, she clambered around and lay atop me, our mouths together and my limp penis against her crotch. She giggled as we shared the mixed sexual juices from our bodies. She rolled part-way off me, and she caressed my genitals with one hand as we kissed. I slid one hand down and stroked her fuzzy, wet pussy. We didn't talk, but Jenn made little noises, deep in her throat. We lay together for at least an hour, completely engrossed in each other and in our feelings.\n\nFinally we returned to the cabin, took a final erotic shower, ate an easy lunch of peanut butter and jelly sandwiches, and began packing up. We remained naked. We had to clean some cum and cunt juice from the plastic mattress cover, and we also found several spots where stuff had dripped out of Jenn onto the floor. We cleaned the dildo together, and put it on the counter to dry. I turned off the propane, then went outside and turned of the power. Finally I drained the pump and plumbing per the instructions I had received. Everything was dry, and we packed everything into our various bags.\n\nSUNDAY: THE RIDE BACK TO CAMPUS\n\n\"How should we dress going home?\" I asked her.\n\nJenn spread her legs, leaned back against the porch railing, and spread her pussy lips apart with her fingers. \"How about the negligee?\" she asked in a deep voice. I knew she was kidding, but I was glad she was thinking about it!\n\n\"That's your fuck-me outfit, and I don't want to do you for the first time in a VW Bug!\" I said, and Jenn laughed.\n\nI told Jenn that I had an idea, so I told her to wait a moment. I went into the cabin, got out the lubricating jelly, and greased up the dildo. Then I went back onto the porch and gently pushed it all the way into her. I told her she could wear it all the way home. She grinned. She put on a pair of black panties and her short-shorts, and the combination was tight enough in the crotch that she could move around without the dildo falling out. However, It did make a rather masculine bulge in the crotch of her shorts! \n\nI pulled on my shorts, skipping undershorts, and Jenn pulled on a T-shirt that was so faded it was nearly transparent. I reached down and pushed on her crotch and felt the dildo move in and out a little, causing her to start breathing loudly through her nose. I could even see through her shirt that her areolae were getting darker! This was going to be a fun ride home!\n\nWe finished packing everything into the VW, emptied the refrigerator, and left it unplugged with the door open. Once everything was in the car, I locked the cabin; We strapped ourselves in, and we headed back toward campus. As the Bug bounced along the roads leading back to the paved roads, Jenn had trouble getting comfortable in the seat. But once we hit pavement, Jenn managed to slide forward on the seat so that the vibrations from the car went right into the dildo's balls. I helped out by rubbing her crotch, causing the tickler to rub against her clitoris. I also bared her breasts and rubbed her nipples.\n\nBefore we had gone ten miles, Jenn began her moaning and grunting, and almost immediately she grabbed her breasts with one hand, pushed against the dildo with the other. She rocked her hips forward and back and side-to-side and yelled over and over. Even with the windows down it was deafening in that small space. Jenn had become a real screamer!\n\nAs soon as she calmed down, Jenn reached over, undid my belt, unzipped my fly, pulled my shorts halfway down my thighs, and took hold of my penis. Even though her head was wedged between the steering wheel and my chest, she managed to rub, kiss, and suck me until I almost ran off the road as I yelled with my own climax. As my penis deflated, she licked and sucked it, finally letting it flop between my legs. Even though she had swallowed most of my cum, I could taste it on her tongue. I almost put the car into the ditch a second time! Two days before I had pressured her into riding nude, and today she was giving me a blowjob while I drove!\n\nJenn rearranged herself on the seat so that she could again take advantage of the irregular vibration of the car through the dildo. About 15 minutes later, while we were driving on a four-lane highway, Jenn began to grunt again. Abruptly she rose out of her seat, undid her shorts, and pulled them and her panties completely off. Then she sat back down on the front of the seat, and moved the dildo in and out of her pussy. She went faster and faster with her head back, her eyes closed, and her mouth open. I pulled her T-shirt up and over her head, leaving her completely nude. She began to rub her breasts with one hand.\n\nMy pants were still down and my dork was again sticking straight up and banging against the steering wheel. Every few seconds Jenn would pull the dildo so far out that it made that familiar, wet, sucking sound, and then she would ram it back in again. Finally she had it moving much faster than I could ever have done with my penis and so fast I thought she would hurt herself. This time her screams began slowly, then got louder and louder, and finally subsided. I could see her abdomen rippling with the orgasm, and as it finished, she slumped in her seat, one hand still holding the dildo inside her. Her legs were spread wide apart, and the smell of excited pussy was overwhelming! I had unleashed a sexual monster!\n\nJenn just lay back, contented grunts coming from her throat, with her eyes closed and a just-fucked look on her face. She stayed that way until an air horn on a truck that I was passing broke the spell. The trucker gave me a big grin, and tried to lean out of his window to see the naked Jenn better! She surprised me by flashing her breasts at him, and, and the trucker responded with another couple of blasts form his air horn. We got past him, and he tried to catch up to us, but after a couple of hills, we left him behind.\n\nJenn decided she needed to cover herself again. So she put her T-shirt and shorts back on, and she hung her soaked panties over the gear shift lever. Then she arranged herself so that the seat's vibration would travel up the dildo again, closed her eyes, and dozed with a sleepy smile on her face. Her rest soon ended. With each bump, Jenn began to moan. I could see through her shirt that her nipples were hard as she moaned, \"Ah! Ah! Ah!\" over and over.\n\nWithin a couple of minutes, Jenn was grunting and groaning, \"Unh! Oh! Uh!\" with each movement of the Bug. She leaned her head back and cried, \"Oh! God! That feels so good! Unh! AAAH! OOOH!\" She began to rub her breasts with one hand, and with the other she pressed the tickler against her clitoris. I could hear her cries getting louder and louder until she finally screamed, \"AAAAAAAAAH!\" Her body jerked in the seat and her legs trembled as she squeezed them together.",
        "Jenn stopped rubbing herself, but she never really came all the way back down. Almost immediately she began to grunt loudly, and a few minutes later again began to rub her breasts and press the tickler against her love button. Less than ten minutes after her last orgasm, she climaxed again, longer and louder than before.\n\nWhether it was one continuous orgasm or a series of them was difficult to determine, but Jenn's high points got more and more intense as we drove. Soon she was pounding her feet against the floor, and shortly thereafter she was jerking her legs around. After about an hour she began to rise out of the seat as she screamed, trembling all over.\n\nJenn did this every ten or fifteen minutes I drove. I got used to her frequent loud cries of passion, and the scent of her arousal kept me stiff. I was fascinated by her pattern of orgasms, and I kept the speed down to enjoy them. I also drove near the shoulder to increase the vibrations through the wheels. After the first hour, she never really stopped moaning, and her body trembled and twitched almost continuously. Only when her screams got really loud could I be certain she had really climaxed. Most of the time her eyes were closed, and the only sounds coming out of her mouth were sounds of extreme pleasure. She was in continuous sexual stimulation, and probably in darned near continuous orgasm.\n\nDuring Jenn's most intense climaxes, I could see her whole upper-body turning dark under her shirt. Her areolae and nipples turned a deep purple and looked like they were going to explode. Her head was thrown back against the headrest. Her eyes were closed. Her mouth was wide open and the look on her face could have been mistaken for agony. Her hips bounced off the seat and her abdominal muscles rippled as she screamed, again and again.\n\nAfter slightly more than three hours of driving, we were about a half-hour from the campus. I drove into a scenic rest area that had bathrooms and parked. With the engine off, Jenn gradually stopped moaning. Her body stopped twitching, and she opened her eyes and looked at me. Her smile was beyond passion! She leaned over, took hold of my bare penis, and kissed me. The way she moaned I thought she was going to climax again.\n\nWe both had to go to the bathroom, and Jenn decided that she needed to change her shorts and put on a bra. As she twisted around to reach into the back seat for her other clothes, I told her we had to clean my car, too. I pointed between her legs. There was an incredible wet mess on the front of her seat! I reached over and pushed through the crotch of her shorts against the dildo, and it made a squishing sound. Jenn moaned with pleasure.\n\nJenn reluctantly decided she needed to take the dildo out, too. She dropped her shorts and removed the dildo with a magnificent, sucking smack. Her pubic hair was soaked and matted. She asked me to hold the dildo while she pulled her shorts back up, and so I started licking it like an ice cream cone. At first she looked at me like I was a degenerate, but as I smeared her juice around my lips and it began to run down my chin, she had to laugh. She said it was really disgusting, and I challenged her to try it. After a disapproving look at me, she did exactly that, and in a few seconds both our mouths were dripping with her pussy juice. We giggled and enjoyed a long kiss, punctuated with the true flavor of pure, raw, female passion.\n\nJenn waited until the women's bathroom was empty and then walked in carrying her bag of fresh clothes. Her legs were weak and her steps were unsteady. She actually staggered as if she were drunk. I took the dildo into the men's room and finished cleaning it off. Then I took a leak, wrapped the dildo in some wet paper towels, and carried it back to the car.\n\nI used the wet towels to scrub the pussy-juice mess off the passenger seat, and finally I used dry paper towels to finish the job. I also removed her panties from the shift lever and dried it off. Jenn got back just as I was finishing, and she packed the dildo in one of her bags while I threw the paper towels away. She had changed her shirt and she clearly had a bra on, but I teasingly asked her if she had panties on. \n\nIn response she lowered her shorts and white panties, showing me the wad of toilet paper she had wedged between her thighs. \"I sat on the toilet and I just kept dripping! If I don't soak this up, I'll make a stain on these shorts, too!\" Then she handed me the shorts she had been wearing. The entire crotch area was soaked through. I sniffed them. They were really juiced up! And the car again smelled like pussy!\n\nJenn packed everything away, belted herself in, slid her hand up my bare leg and tweaked my penis through my shorts, and said it was time to get back. While we completed our drive, we didn't speak, but every time I glanced over at her, she smiled. The look on her face clearly showed that she had spent the afternoon enjoying sex, albeit from a dildo.\n\nI found a place near the dorm where I could drop her off, and she took just one small bag of stuff. I insisted she take the dildo and negligee in it, so it took a moment for her to repack her things. I agreed to take care of everything else, and we decided we would get together later to get her stuff back to her. She leaned over to kiss me, and she still tasted of pussy. She grinned and hopped out of the car. As she walked off, she waggled her hips at me. What a view!\n\nSUNDAY EVENING BACK AT THE DORM\n\nI made two trips and hauled everything up to my room. With final exams over, there was a two-week break until summer school began, and most people, including my roommate, had gone home to visit their parents. Jenn's roommate, Dianne, was involved in a research project that required her to make daily checks on the equipment, so she was one of the people remaining, and that's why I didn't just take Jenn's stuff to her. \n\nI spread everything out on the floor of my room, then filled a laundry bag and took it to the laundry room in the basement. I put all of our stuff into a machine, and got it going. There was an incredible scent of female crotch in the air after I unpacked Jenn's stuff! Dianne suddenly walked into the room, sniffed, and she commented on the smell. Then she leaned close to me, stared at my mouth, and said, \"Judging from the smell and the slop on your face, you've been eating pussy!\" What could I say? Dianne laughed and left.\n\nDianne was out of the laundry room when the washer finished, and I put everything into a dryer. She returned to start her own drying, and leaned against a table and waited. I heard her chuckle. She was obviously amused as she looked at the spinning clothes in the dryer. I leaned against the table next to her, and glanced at my dryer. Every few seconds Jenn's white panties would stick to the window before whirling away. \"The last time I saw those, they were on Jenn's ass!\" she remarked and winked at me. When my dryer stopped, Dianne offered to help me fold everything, and I told her I was in a hurry and pulled everything into the laundry bag. I could hear her laughing as I raced out.\n\nI got back to my room and separated Jenn's and my stuff into piles. While I was trying to decide what I should tell Jenn about my encounter with Dianne in the laundry room, my phone rang, and it was Dianne. \"Since the cafeteria doesn't serve on Sunday nights, how about you, Jenn, and I go out for a pizza? Say downstairs in ten minutes?\" She asked. I agreed.\n\nI met the two women in on the first floor, and we walked to my car. As Dianne crawled into the back seat, she sniffed, then laughed and asked, \"What have you been doing in here?\"\n\nI helped Jenn into the passenger seat and her face immediately turned crimson. As I got in, I realized why. In the closed-up car, the heat had brought out an intense aroma of Jenn's pussy juice, probably from some place we hadn't cleaned. Jenn's face remained red and she wouldn't look at me. Dianne continued to giggle.\n\nDianne sat across from Jenn and me at the pizza place, and after we had placed our order, she said, \"Cut it out you two!\"\n\n\"W-What?\" we asked in unison.\n\n\"Every time you look at each other I expect to see you start ripping each other's clothes off!\"\n\nJenn and I stammered some nonsense, but Dianne interrupted. \"Look, you two. I watched Jenn sneak little bags of stuff out of our room. Then she told me she was going away for a couple of days, and I called you to see if you knew where she had gone. Your roommate told me you were also gone. Then you both came back at the same time. When Jenn came into our room, she put a little bag in the closet, then undressed and went to take a shower. I could smell pussy in the air, so I went over and sniffed her shorts and panties. Wow! They were even damp! Then I took a look in the bag.\"\n\nJenn turned really red again and stared down at the table. \"I really like that bordello negligee, but what's the plastic penis for? Didn't you get enough of him? And she gestured toward my crotch. Jenn started to protest, but Dianne cut her off. \"Jenn, you've got that 'fucked long and well' look that I know intimately because I've been there, and he's got that smug 'stud' look that says he's the reason you're looking that way.\"\n\n\"We did not have intercourse!\" Jenn muttered, but Dianne just shook her head.\n\n\"I was married for two years to a really good stud,\" Dianne said. \"I often saw Jenn's look on my own face in the mirror after making love over and over again. And my ex-husband had your look, too!\" And she turned toward me.\n\nMy suspicion that Dianne was older than Jenn was correct. \"Jenn's telling the truth, Dianne!\" I replied. \"We did some pretty exciting things, but we did NOT have intercourse.\"\n\nDianne didn't believe us, but we kept assuring her that we had done just about everything else except fuck, and then the pizza came and we stopped talking while we ate. Dianne looked thoughtful, and after we were done and finishing our beers, she said, \"So you used the dildo, right?\" Jenn nodded and turned crimson again. \"Can't you get it up?\" she asked me.\n\nAt this Jenn laughed. \"He seems to be stiff all the time!\"\n\nJenn gestured with one hand for Dianne to look under the table, and with the other hand she began to rub my crotch. Dianne looked under the table. Since I wasn't wearing underpants, the head of my penis quickly came out of the leg of my shorts. Dianne sat back up, leaned her head back, and laughed out loud.\n\nWhen she could talk again, Dianne said, \"Look you two! All you have to do is tell me that you want to use the room and I'll leave for a couple of hours! Or I could stay and watch!\"\n\nThat made Jenn blush again, and that, in turn, made Dianne laugh. I decided to change the subject, so I asked Dianne, \"Where's your husband now?\"\n\n\"That bastard? I divorced him!\"\n\n\"Why, if he was such great lover?\" I inquired.\n\n\"Oh he was a great lover!\" She said. \"He wanted sex all the time, at least five or six times a week, and it always lasted for several hours. He couldn't get enough, and I stayed hot and ready, and it was wonderful.\n\n\"Then one day when he was doing some painting in the dining room, I left work early to go home and get an afternoon fuck. As I came in the back door, I heard grunting and the wet sound of a dork slamming into a twat and a woman yelling in climax, and a few seconds later, I heard the same woman say, 'Do it again, harder!' The grunting and wet slapping sound started again, and I walked into the dining room and found our next-door neighbor's twenty-year-old daughter getting fucked by my husband, doggy style on a furniture pad on the floor.\"\n\nJenn wrinkled her brow and looked puzzled as Dianne continued. \"When my husband saw me, he just grinned, then continued yanking on the girl's nipples and slamming into her. The girl had her head down and she was pushing back against his prick with every stroke. I watched as my husband and the girl shared a giant, screaming climax and then collapsed together onto the pad. When the girl opened her eyes and saw me standing over her, I demanded to know how long this had been going on. The girl said, 'Since you moved in.' And that's how I found out that my husband had started screwing a neighbor girl two years before - and right under my nose.\"\n\nJenn mumbled, \"Doggy style?\"\n\nDianne pointed at me and said, \"Ask him to show you! I'll be he knows how to do it! I know I really like it!\"\n\nJenn blushed again and wouldn't look at either of us. \"Look, I'll pay the check,\" Dianne insisted. \"I hadn't meant to embarrass you two, but I was insulted that Jenn thought she could fool me so easily!\"\n\nJenn and I thanked her. \"I still don't really believe you two didn't fuck, but whatever you did was obviously great sex!\" As we walked to the car, Dianne told Jenn, \"If he can get you this satisfied without putting his magic wand in you, think of how good it's going to be when he does!\" This made Jenn giggle, and all the way back to the dorm Jenn kept muttering \"Magic wand!\" and then we would all laugh.\n\nDianne insisted that the three of us go to my room to get Jenn's other clothes. When we walked in the first thing we saw were Jenn's panties on top of her shorts and T-shirt on the end of my bed. \"I guessed that Don would be doing laundry after I smelled your shorts, Jenn,\" Dianne said. Then she described the incident in the laundry room - including her comment about eating pussy. Jenn blushed and didn't say anything.\n\nDianne peeked into the plastic bags I'd left on the floor. \"Jenn obviously didn't wear much wherever you two went!\" Jenn got even darker red, but she smiled at me. I loved the look in her eyes.\n\n\"Okay, I'm sorry I'm heaping all this grief on you two lovebirds!\" Dianne said. \"Now kiss each other goodnight so that Jenn and I can get back to our room for some serious girl-girl talk!\"\n\nAs I took Jenn in my arms, she said, \"You're still taking me to the airport tomorrow, right? I want to visit my parents for a few days before summer school begins.\"\n\n\"I'm planning on it, Jenn. What time?\"\n\n\"I forgot to check before we ate. I'll call you in a few minutes after Dianne and I get back to our room\"\n\nWe shared a long goodnight kiss under Dianne's watchful eye, and then Jenn and Dianne left, carrying all of Jenn's stuff from my room. A few minutes later Jenn called and we agreed to meet for breakfast around 8:30.\n\nI put my own things away and then tried to fall asleep. I was really glad that I hadn't gotten Jenn pregnant, but I still wondered why had I stopped when she asked me to fuck her. What the hell was going on in my head? Hadn't I planned to seduce her? Even if I was falling for her - and that certainly seemed to be a reasonable deduction - why would that prevent my slipping my rod - my magic wand! - into her wet- and-ready pussy? What was it about Jenn that caused me to behave this way? Was it love? Or something else? \n\nMONDAY: JENN LEAVES FOR TWO WEEKS\n\nAt breakfast Jenn and I sat alone and teased each other about the weekend. Jenn's face had lost most of the just-fucked look, but it lighted up when I reminded her of the things we had done. Several times, however, I caught her staring into space, and it was obvious that her thoughts were somewhere else.\n\n\"Would you get my suitcase from Dianne around 10:00 - and then pick me up at the Student Health Center?\" She asked. \"We can go directly to the airport form there.\"\n\nI agreed, but I was confused. Student Health? Did Jenn have something wrong? She certainly looked great, but maybe all the stuff we had done had caused her to - what? Certainly not get pregnant! Did she catch something from me? So fast? I was too stupid and too afraid to ask.\n\nPromptly at 10:00 I knocked on Jenn's and Dianne's door, and Dianne opened it wearing Jenn's negligee! My jaw must have dropped open as Dianne pulled me into the room. She was about the same height as Jenn, but with bigger breasts, and the nearly transparent material left most of her breasts and nipples bare. Her pubic thatch was thick and hairy, and dark curls were coming out of both sides of the panties. She twisted her torso back and forth, causing her boobs to bounce completely out of the negligee. She spread her legs wide apart, and asked, \"Want some, big boy?\"\n\nDianne laughed deep in her throat, bent down, gave me a great look at her swinging breasts, picked up Jenn's suitcase, put it in my hands, then opened the door and shoved me into the hall. Then she said, \"Better do something about that before you walk around in public!\" And she pointed to my crotch.\n\nI looked down, and my penis had lifted the right leg of my shorts up and was almost visible from above. I put the suitcase down and shoved my prick into a less visible position. When I looked back toward the door, Dianne had removed both the panties and the top. She was standing there, just inside the room, completely nude. She blew me a kiss and slowly closed the door. I could hear her laughing. \n\nI stared at the closed door for several seconds. The image of Dianne's body was vivid in my mind. Her dark nipples poking out from her full and bouncing breasts, her dark triangle of thick fur between her legs, her full lips open in a smile, the contrast between her woman's hips and her thinner waist, the smooth skin on her shapely legs - I could still see everything. She had gotten me so aroused and so totally focused on her body that I was surprised when I looked down and saw the suitcase at my feet. Jenn!\n\nI grabbed the suitcase and headed for the stairway, not daring to risk meeting anyone in the elevator. I was so turned on that I heard a swishing sound in my ears. I had worn light, loose shorts without any underpants so that Jenn would be able to play with my penis during the drive to the airport, and Dianne had exploited it - not that I really cared! Every step made my shorts rub the head of my penis, and at first my penis stayed completely erect.\n\nAfter walking down seven flights, I was again presentable, and I walked out to the car, put the suitcase in the back seat, and headed off to the Student Health Center. I stopped in front, and in less than five minutes Jenn came out, gave me a quick kiss, smiled, and buckled herself in. \"Would you mind stopping at the drug store on the corner by the gym? I have to get a prescription filled.\"\n\n\"Jenn, is something wrong?\" I finally managed to inquire.\n\n\"Don't worry, Don!\" She replied. \"It's just one of those female things!\"\n\nWhen I looked puzzled, she kissed me. \"Now don't get all worried, silly!\" She said. Then she giggled. I was too dense to figure it out.\n\nI offered to go into the pharmacy with her, but Jenn told me she wanted me to wait in the car. After about twenty minutes, she came out with a big grin on her face, and told me to head for the airport. It was only about a twenty-minute drive, and there wasn't any easy way for us to bare ourselves without people seeing, so we contented ourselves with lots of caresses and touching through our clothes.\n\nJenn checked her bag, and we both went through security (which was allowed before the 9/ll attack). We sat in a corner by ourselves while we waited for her plane to be called. She told me the time of her return flight, and I promised to be waiting for her. She was chewing on her lower lip, and once again I could tell that her mind was somewhere else. \"Can I call you a couple of times at your parents' home? I'll need the number.\"\n\nJenn held my face in her hands and looked deeply into my eyes. \"No, Don!\" She said. \"I don't want you to call me. I have your number if I need to call you. But I probably won't\"\n\nAll I saw was love in her eyes. \"Why, Jenn? I though . . . I want . . . Could we . . . Don't you want . . .\"\n\n\"To make us an official couple? Almost engaged?\" Jenn asked, and I nodded. \"That's the problem, Don! I NEED to be away from you! Completely away from you! So that I can figure that out!\"",
        "\"Jenn, don't you know how I feel? I'm . . . I'm falling in love with you! What do you want from me?\"\n\nJenn signed. \"Don, I'm going to see my old boyfriend. From highschool. The one I had sex with after the prom. I still have feelings for him. He's back there and wants to take me out. I may have sex with him again while I'm home.\"\n\n\"Jenn, don't you feel . . . something for me, too? I know you're turned on. Right now! Well, so am I!\"\n\n\"Don, I just want things to be clear. And honest. I don't know where you and I are going, but until I get back, don't sit around waiting for me. If I'm this excited with my old boyfriend, I'm going to have sex with him. I'm not going to ask you to be faithful to me since I can't promise to be faithful to you. At least until I figure myself out.\"\n\nI must have looked both hurt and puzzled. Jenn smiled at me. \"Look, Don! I need to know if what I feel is you. Or me. Or the two of us together. I need time to figure that out. If you're even talking to me, I won't be able to do that! My sex volume- control is stuck in the high position when you're around! Right now my nipples are hard, I can feel myself getting wet, and my love-button - as you called it! - is pressing hard against my panties! I'm almost ready to climax!\"\n\nI pulled Jenn closer and gently kissed her lips. \"Do you think being out-of- contact for a couple of weeks will help you to figure it out, Jenn? Will having sex with . . . him . . . help?\"\n\nShe nodded her head. \"I need to come down from this sexual high! Being home should do that, and then I'll be able to think. Right now all I can think about is how your body felt when we were together, naked, kissing. Oh shit!\" I saw Jenn's pupils get wide, and then her whole body trembled in my arms. She arched her head back and stifled a groan.\n\nI looked around, but nobody seemed to be paying attention to us. \"What are you going to do if you get this horny at home? Run to your old boyfriend? What if he isn't right for you?\"\n\nJenn sort of shook herself and smiled. \"I've always got Donnie!\" She said.\n\n\"Donnie?\"\n\nShe laughed. \"That's what I named the dildo you gave me!\"\n\n\"Jenn, I feel so stupid! I didn't have sex with you because I care so much about you. But you're going home to have sex with your highschool sweetheart? Does this make sense?\"\n\n\"I'm not sure, Don. I thought I was in love with him back then, and I still have feelings for him. And as for you. I just don't . . . I can't sort everything out! But even if I do have sex with him, he'll still be the only man who's . . . had me. When I get back, we'll see. But don't count on me, okay? I may not be able to become part of your life. Not if everything clicks with him.\"\n\n\"Okay, Jenn. But we can kiss each other goodbye.\" Jenn stood up and we wrapped ourselves around each other. She was pressing her pussy against my left thigh, and I could feel the heat coming from her. After a couple of minutes she began to moan into my mouth, and I could feel her sliding herself up and down my thigh.\n\nWe heard her flight called, and Jenn pulled away from me. \"Whew! Just in time! I was about ready to undress you!\" She said. \"Now look, Don! I'm not promising anything except that I'm probably going to have sex with someone else! Don't be a dufuss and count on me coming back all lovey-dovey and ready to be your woman. I don't know what I'll decide. Or what I'll be feeling. I don't know what's going on inside my head or my body. So put me out of your mind until I get back here. Then we'll decide, okay? And if you want to have sex with someone else, do it! I'm making no promises. Agreed?\"\n\nI nodded. The image of Dianne standing naked in the doorway flashed unbidden into my head. I wrapped my arms around Jenn and concentrated on how her body felt against me. Dianne's image disappeared as abruptly as it had arrived.\n\nJenn and I kissed a final time, and I watched Jenn as she got in line to board. I found that I could think about how her naked body looked and felt, and each time Jenn looked back at me she smiled as if she could feel my thoughts. She was finally out of my sight, and I sat down to conceal my erection. It was ten minutes or so after her plane took off that I was finally soft enough to walk out of the airport.\n\nI headed back to the dorm, feeling lonely, rejected, and more than a little horny. My horniness was in large part due to my feelings for Jenn. I hadn't felt so fixated on another person since my first, teenage love. But those same feelings had kept me from fucking her, and I didn't understand why! Now she was probably going to fuck her old boyfriend, and it made me feel . . . well, lonely, rejected - and angry.\n\nI hadn't been faithful to any woman I dated since my first lover when I was nineteen. Now I wondered if it was natural for anyone to be faithful. But damn it! I wanted Jenn to be faithful to me! And, after not fucking her when I could have, I knew I could be faithful to her. But she told me she was going home prepared to fuck her old boyfriend. It wasn't really cheating, but it felt like it.\n\nI really didn't understand. I had stoked the furnace, and now that it was burning hot, another guy got to enjoy the heat! Damn, that hurt! But she was being honest, and it could hardly be called cheating since we didn't have any vow or pledge to uphold. So why was I so upset?\n\nSuppose Jenn let her old lover fuck her, but then she decided that she wanted me. Would I still feel the same when she came back? My emotions twisted and jerked around as I thought this over. I realized I'd probably forgive her, but only this one time because we weren't officially committed to each other. The thought of another guy with his dick in her pussy hurt so much that I knew I could never forgive her if she did it after promising to be faithful to me. She wasn't ready to make that commitment, but I thought that I was. I always thought that was a problem guys had, not girls.\n\nPart of me still had serious doubts. I had a terrible feeling that I had acted stupidly. Why hadn't I told her that we had no future together if she fucked her old flame? How could a man in love not demand his woman be faithful? Was I in love with her? Shit! What kind of pussy-whipped wimp was I? I'd passed up a chance to make love to Jenn, and this is the way she treated me? Shit! Was Jenn \"the one?\" Well, I wasn't going to find out until she got back. In the meantime she had made it crystal clear that she wasn't planning to be faithful to me, and that I shouldn't feel any obligation to be faithful to her. I vowed that I wouldn't turn down any opportunity to dip my wick while she was away. Hell, I owed it to myself to go trolling for a hot piece of ass, didn't I? I headed to the cafeteria and ate lunch alone since I didn't see anyone I knew. I wondered what was really going on Jenn's mind. In the two years I'd known her, we'd had lots of good conversations, but I'd never known her to be so indecisive. Or so confused. Well, there was nothing I could do until she got back. I was still horny, and I mentally checked-off several women as possible future conquests. My heart really wasn't in it. I kept thinking about Jenn, and going to all the trouble to meet and seduce someone while she was gone just didn't seem to be worth it.\n\nAfter lunch I walked over to the library to do some research, and I finished just after 6:00. I headed straight to the nearly-deserted cafeteria, and ate with a group of girls, all of whom I knew, one of whom I'd dated, and we all enjoyed flirting. I tried to pick up one of them, but they all had plans so I headed back to my room alone. The prospect of a date had aggravated my state of arousal, and I was thinking about beating off to relieve the sexual tension.\n\nRather than ride the elevator, I ran up the stairs for exercise. As I climbed, I thought about Jenn. She would be back in a couple of weeks, and then what? Did her departure today announce the end of our passionate relationship? Was she feeling guilty about cheating on the exam or about what we had done - or both? Would we start to have a real romance? Or were the previous couple of days just one of those special interludes two people sometimes share? \n\nIt was too early to tell. But I knew that I was really horny, and if one of the girls at dinner had been willing, I convinced myself I would have been in bed with her right now. Talking with them had given me a new approach. I already knew quite a few women, so rather than try to pick someone up and talk her into bed, perhaps I could concentrate on those I already knew. There wasn't much happening until summer school started, so maybe one of them would be interested in fucking me.\n\nOnce again I remembered Dianne and how her naked body had looked when I picked up Jenn's suitcase, and I felt myself getting hard. Clearly Jenn wasn't the only woman on my mind! And Dianne was still in town! But could I fuck Jenn's best friend and roommate? As I climbed the stairs, I realized I was horny, frustrated, and lonely enough that I could fuck any woman who would let me. That certainly included Dianne. Damn Jenn and her old boyfriend anyway!\n\nThis story continues in \"A Bargain Ch.3: Swap - Roommate offers sexual relief. \""
    ],
    "authorname": "LeoDavis",
    "tags": [
        "seduction",
        "nakedness"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/a-bargain-ch-02"
}