{
    "title": "Mine...Yours Pt. 08",
    "pages": [
        "Author's Note: Thank you to everyone who waited patiently, and also to the ones who did not wait so patiently. I appreciate the Emails of encouragement...and deleted the Emails of death and dismemberment. I never knew I had such...CREATIVE readers! Honestly, I thank you all for the support. I hope you all enjoy the next section of my story.\n\nChapter 23: Care\n\n(One month later)\n\nI fell backwards, landing hard on my ass and rolling completely over my shoulder to lay out flat on my belly. The blue field around me shimmered and winked out. I was panting so hard that I sucked a bit of grass into my mouth from the lawn and spit it out in disgust. Something flickered in my vision and I rolled to the side as a sharp black spear pierced the ground right where my head had been resting!\n\nI gripped the shaft and turned enough to kick out hard and hit the knee of my attacker. She just smiled at me through sharp teeth. Lucretia chuckled at my counterattack. Yep, she has taken over my training times in the morning. No more working out in my gym, at least not the same way I usually did. Once I asked her to help me find out about what type of magic I had, she turned into a slave driver making me use it and control it. \n\n\"That tickled Greg! Got to focus or your magic won't let you stop me!\" She punctuated this by attacking again!\n\nI absolutely hate it when she uses this stupid, rotten, mean and annoying attack! Her wings fold up, I mean all the way up. She has around a twenty foot wing span right, and the whole wing part lays flat along the thick spine of the wing. Then the little claws near the arches fold over her arms so that the spine of the wing runs along her arms all the way down to her claws. Basically, they act like pointed rods that extend at least 5 feet past her fingertips. I never knew that the spine of her wing was so flexible. It actually was kinda nifty to see her do that, it looked like she was packing up a stunt kite.\n\nExcept then she would attack me with her brand new weapons!\n\nI thought it was hard enough to spar with her when she had those nasty claws on her hands and feet, and let's not forget those ominous spurs on the back of her legs, but nooo! Then she had to go ahead and get her wings involved in the whole mess! They stung and cracked like a switch that left deep bruises instead of welts, and one time when I dodged her attack, the points penetrated the walls of my backyard shed! She never gave me any slack when we were training, constantly pushing me and punishing me when I let my shield fall.\n\nAll right, let me bring you up to speed here. Turns out, Mother was right about me, sort of. I am a telekinetic, just not a very useful one. When you think of telekinesis you think of somebody cool, who can do useful things. Like someone who can reach out a hand and call their keys from the coffee table across the room and they float gracefully to their hand. Or any number of other useful tricks. Yes, I am a telekinetic, but my range is almost exactly...2 inches. \n\nThat's right! I am about as useless as crescent wrench in a beauty parlor! I can move things without touching them, as long as they are only two inches away from me, or less. That is the lamest and most pathetic power restriction I had ever heard of... or even imagined! Let's use that key analogy from earlier. If my hand is within two inches of my keys? I just lean and pick them up! There, problem solved, no need for any power or magical whoopy!\n\nLucretia seemed fascinated with my ability. She had me lift things with my mind, or lack there of, from the palm of my hands. Then she made me hold it there for a half hour each day. She said something about pushing my boundaries and yadda-yadda. My mind would usually wander off as I didn't understand any of it. Then she would measure the space between whatever she was having me lift and the palms of my hands to see if I was extending my range at all.\n\nNever did.\n\nOne of the useful things I got out of the deal was a full body shield that protects me. I first brought it up when Will dropped his...whatever it was on me at that disastrous first meeting between him and my roommate. The other is that I seem to be able to lift things that are really...REALLY heavy now. Lucretia says it's because I have such a short range, that my power can lift heavier things to make up for the lack of distance. Something to do with \"balance and forces\" and again my mind just wandered off for a bit while she tried to explain it.\n\nAll I know is that now, I can almost juggle my dumpsters at work! Also Lucretia has to work really hard not to get hit when my power is active. Though, like now...when my brain is tired and I can't even hold a shield against a puff of wind she likes to ramp up her attacks on me!\n\nIt's at times like this I wish I hadn't of given her free will. Her clawed foot came up to stomp me and I shifted so it missed, then rolled the other way as her other wing struck down at me. Then she pounced, or fell on me and I rolled with her over and over on the grass. She was laughing as I finally stopped moving with her on top.\n\n\"So, giving up I see....Whoa!\" She shouted as I brought up my legs and my power flickered enough for me to have the force to get her off of my chest. I rolled to my feet, breathing hard and sweating like an ice cube in a toaster. Lucretia stood, and looked me over. \n\n\"You are getting better Master. You're able to hold your concentration longer than a week ago. Your shield is able to take stronger strikes. You are also able to move faster by letting your mind move your body through your power.\" She observed while brushing yard debris off of her skin.\n\n\"I honestly don't like using my telekinesis to move my body around.\" I told her. \"It makes me feel like some kind of psionic sock puppet! I was born with muscles to get around, seems weird to use my mind to move my arms and legs faster.\"\n\nLucretia nodded. \"Wise to think like that. Using telekinesis to move your limbs you might push them to hard or too fast and damage yourself.\" She paused and scratched her chin, a gesture she seemed to be picking up from Jemima.\n\nI guess I should tell you about that too. Lucretia has not been hanging out with me 24/7 all this time. \n\nWe enjoy each other's company, but she needs interaction with others.\n\nJemima, Gwen and Lucretia seemed to all have hit it off really well. Three weeks ago I had walked Lucretia over to visit my neighbors. She was in human form, so the apprehension on her face was easier to see. They were going to have a girl's night with a Twilight movie marathon. They seemed to see it as a comedy. \n\nDon't ask me, I'm male...it must be one of those female things. \n\nI walked in to say \"Hi\" to everyone and show that I was alive, and undrained by my succubus. Lucretia had brought over cookies since she wanted to see if she could make them as well as I did. She didn't add the white chocolate chips and instead doubled the amount of butterscotch. They seemed alright, not really up to my standards of cookies, but I may be a bit biased. After the initial awkwardness was done, the two Gatewatchers and Lucretia seemed to relax. Yet, we seemed to be missing one?\n\n\"Where's Hildy?\" I asked Gwen. She just sighed with a cute little frown. \n\n\"She is still not...comfortable with having an Outsider in the house.\" Jemima explained from over by the microwave. \n\nI glanced at my two neighbors appraisingly, \"And, you all are?\"\n\n\"More or less...\" replied Gwen as she took the cookies from Lucretia and set them over on the dining table. \"I am more of the more and not the less!\" Said Gwen as she started to divide cookies between three plates. There was a large veggie, and a large pepperoni pizza sitting there as well. Both just waiting to be devoured. I thought about asking for a slice, but decided against it. \n\nLucretia looked uncomfortable, and I stood next to her as she stared at the dining room table. \n\n\"You okay?\" I asked Lucretia.\n\nGwen continued her dividing of food, but I could tell she was listening. That was fine. The ice needed to be broken somehow, and if they could see a little of Lucretia's vulnerability that might help. It was important for my succubus to have interaction with more people than just me.\n\n\"No, Greg...\" she said.\n\n\"Wanna tell me what's up?\" I asked. I could almost see Gwen leaning forward to hear a little better. Ten dollars says Jemima is doing a vampy thing of some sort to hear better also...any takers?\n\n\"I...I am in the house where I almost killed these people that you want me to be friends with.\" Lucretia said hesitatingly. \"I feel...ashamed?\" She looked at me questioningly. I nodded.\n\n\"That might be the word. Remember how you apologized to them a few days back?\" I asked. She nodded.\n\n\"Maybe it's not so much ashamed, maybe it's more that you realize what you almost did. You nearly took the lives of an entire party of people. Now you are in the same house where it all happened and two of those people are here and want to get to know you better. Little overwhelming huh?\" I asked. I gently took her hand in mine and rubbed her soft skin with the pad of my thumb.\n\nI didn't meet her eyes for what I was about to say, deep down I was a little uncomfortable myself. Especially with what I was about to admit.\n\n\"Now, let's work on your empathy a little...okay?\" I said, looking down at our hands.\n\n\"Okay.\" Lucretia said softly.\n\n\"Now, think from my perspective here for a moment. I am back in this house where I first met you. In fact right about where we are standing I hurt you and then tossed you out of the house through that door over there.\" I pointed at the now repaired sliding glass doors, but Lucretia didn't look at them, she stayed looking at me.\n\n\"So for me...\" I continued. \"...I don't feel so much ashamed of what I did. What I feel is bad for hurting you. At the time I didn't know you, now that I have gotten to know you, I need to tell you something.\"\n\nNow I looked her in the eyes.\n\n\"Lucretia, I am very sorry for hurting you. Will you forgive me?\" \n\nThe look on her face was weird. She looked both delighted, scared and puzzled at the same time.\n\n\"Forgive you? I...I don't have the authority to forgive you. You are my Master...\" She stammered. Oh, I was having none of that from her!\n\n\"Did I or did I not give you free will?\" I asked.\n\n\"You did.\" She said quietly.\n\n\"Then you have all the authority you need. Will you forgive me for hurting you?\" I asked again.\n\nThis was a big moment for her in understanding humans. \n\nTo forgive someone is to not hold an action against a person. That doesn't mean you forget what they did, that would be foolish and silly. Like when you loan a friend twenty bucks and then you forgive the debt. They don't owe you twenty bucks anymore, but you also remember that they aren't good at paying back debts. They are still your friend, but you don't loan them money...well...maybe you do but that's your own prerogative.\n\nPoint is, I was asking Lucretia to really exercise her freedom here. I wanted her to use what I had given her. I wanted her to experience what it was to be human. Sure Mother wanted her to learn how to seduce me, but I wanted her to learn what it was to be human as well. Every hunter knows it's important to study their target, right now Lucretia has the option to study her prey by being it.\n\nAlso, I really did actually feel bad for hurting her. At the time it was justified, but now getting to know her better I understood where she was coming from. I really did want her forgiveness. I wanted to move on in our relationship and to have that always in the back of my mind weighed heavily on me. Of course I knew that there would be more times ahead when we would hurt each other, but that was then, this is now.  \n\nMy succubus looked around the room for a moment as if looking for some inspiration to help her make a decision.\n\n\"It's okay...I understand why you hurt me back then. There is nothing to forgive Greg.\" She said finally.\n\nI shook my head, \"You are on the right track but you're missing the point.\" I leaned forward and gave her a little kiss on the forehead.\n\n\"Understanding is fine. To put yourself in my position and see the world from my perspective is good. Forgiving is to go past that. To not hold something against someone even though you don't understand why they did it in the first place. I am glad you understand where I am coming from. But still...I would like your forgiveness. You don't have to do it now, but think on what I said and let me know your decision okay?\" I rubbed one hand up and down her bare arm and watched her face as she thought on what I said.\n\n\"Yes Master.\" She said, though it was said almost absently. I gave her a quick hug and then snagged a slice of pepperoni pizza anyway. Come on! I was hungry!\n\nI spoke to Gwen and Jemima for a moment.\n\n\"You guys look out for her while she's here? Give me a call if there is any trouble. Even if you think there isn't a situation starting you give me a call okay?\" I asked.\n\nJemima chuckled and dug through the refrigerator for a bottle of wine that sloshed funny. It was probably blood of some sort.\n\n\"Don't worry. We have been watching you two for a while now, well...Gwen has. I think we will be fine tonight.\"\n\nI looked at Gwen for an explanation. She just gave me a saucy grin and with a flick of her fingers a large card from her deck appeared between her middle and forefinger.\n\n\"Magic silly! How else could we watch you?\" She grew somber for a moment and looked a little peeved. Though I wasn't sure if it was with me or not.\n\n\"Really Greg. I am surprised at you...why didn't you tell us that you were a practitioner? We could have helped you a lot sooner?\" Gwen scolded me.\n\nI shrugged and gave her a lopsided grin. \"You saw how tightlipped I was about myself before all of this supernatural stuff happened. Then we had our little falling out, then Lucretia showed up as a houseguest...Just when was I supposed to find the time to tell you?\"\n\nI watched Lucretia walk into the kitchen where Jemima was drinking her blood and wander around it a little, gently touching and sniffing everything. She went over to the refrigerator and looked at Jemima questioningly who nodded her assent. She opened the door and gasped!\n\n\"Greg! They have eggs! Lots of eggs!\" She said delightedly. I walked over and shut the door when I saw her start to reach inside. \n\n\"Wait a minute! Whose house is this?\" I asked before Lucretia could pout. She didn't pout but crossed her arms under her chest.\n\n\"This house belongs to the Gatewatch.\" She replied with a touch of sullenness.\n\n\"Good. Do you remember the rule when in another person's house?\" I asked.\n\n\"Always stay in human form and even if they know my true nature to remain clothed unless I am hunting prey.\" She responded automatically.\n\nI almost face-palmed myself!\n\n\"I meant concerning drawers and things around their house? You know? Around their things that belong to them?\" I asked again with a little more emphasis on certain words. She caught on quick. I think seeing the eggs short-circuited her head since her taste buds were taking over the thinking process. At least my first rule came through loud and clear since she remembered it quickly.\n\n\"Oh! That one. Always ask before taking, and if you're not sure about it...ask the owners of the house first for permission.\" She responded after a pause.\n\nShe turned and looked at Gwen and Jemima, \"Excuse me, I really like eggs. Would it be alright with you if I had some?\"\n\nJemima and Gwen exchanged a glance and then Jemima replied. \"Sure...why not? You can have a few.\" Lucretia quickly opened the door and snagged a carton of large grade A extra-large chicken eggs. Just as she opened the carton I made a subtle motion that stopped her and got her attention. I mouthed to her silently...\n\n\"A few means three...\"\n\nShe nodded and gently tapped each egg with a fingernail before selecting three. She put the carton back gently holding her treasures. She inspected each one carefully sniffing it and tapping them a few more times. Then she popped each one into her mouth and swallowed them whole! The eggs made a crackling noise as their shells compressed in her throat. She patted herself just above her sternum and sighed with pleasure as her crop began its job of crushing the food the rest of the way.\n\n\"As Greg likes to say, that hit the spot!\" She turned with bright eyes to see Jemima and Gwen watching her with open mouths. \n\n\"I know...\" I said. \"I was surprised the first time I saw it too. But she really likes eggs.\"\n\nHmmm....gave me an idea for a gift to get her in the future. Likes eggs...seems to like them whole. How big...? Oh yeah! She would like those! I chuckled to myself, and no...I am not telling you what it is! It's a surprise for her and I am not giving any hints.\n\nJemima and Gwen got over the surprise of seeing what looked like a regular human girl swallow eggs whole, and then they began the careful dance that girls do when meeting each other. Compliment accessories. It must be true for succubae as well as humans for Lucretia picked up on the art form rather quickly.. Gwen complimented Lucretia on her pants and Lucretia seemed fascinated by Jemima's hair. She asked if it got in the way at all.\n\n\"Not really Luce!\" Jemima said with a small grin. \"I had it in corn rows for a while but didn't really like it. I also think I look better this way.\"\n\n\"I agree.\" I said with a nod. I was putting my coat back on before I left. I had the night off so I figured I would go to the store. I was going to purchase a selection of CD's for Lucretia to listen to. She had discovered that my clock radio played music so would lay on my bed and slowly roll through the stations listening to it for long stretches of time.\n\n\"Jemima has great hair. That time when she almost kissed me I had wanted to touch it to see if it was as soft as it looked!\" I said with a wink. It was only after I said it that I realized what had come out of my mouth!\n\nLucretia got very still as she touched Jemima's afro. Then she continued as if nothing had been said. \n\n\"This was before I was bound to you?\" She asked carefully. \n\nJemima answered for me. \"Yeah. I thought he deserved a kiss for saving us from you. He turned me down. Though I guess it all worked out all right in the end. After all...he got you didn't he?\" Lucretia looked at the vampire's face and took a deep breath through her nose. Then leaned over a little closer and took another.\n\n\"You are trying to protect my feelings, but you are mostly telling the truth. You find my Master attractive?\" Lucretia asked quietly.\n\nJemima seemed unsure how to respond but decided on the truth, \"I find him attractive, but not really physically. I prefer my men tall, dark, handsome and with a definite hint of evil!\" That last word was said with a suggestion of lechery and her tongue touched her lips for an instant.\n\nLucretia took that in and then asked, \"If he didn't meet your requirements then why do you find him attractive?\"\n\nGwen walked up alongside of my succubus and placed her hand on Lucretia's arm in a familiar gesture. Women are very touchy feely it seems! One minute they want to banish and the next the want to cuddle! Does anything women do actually make sense?\n\n\"I also really like Greg. I had wondered what it would be like to have him as more than just a friend...or neighbor. Most women wonder that, at times, about the men in their lives.\" Gwen said.\n\nLucretia looked at Gwen in surprise. I myself was starting to feel really uncomfortable and was hurriedly eating my slice of pizza so I could leave!\n\n\"Why would women think that about a man who didn't meet their requirements?\" Lucretia asked Gwen.\n\n\"Simple Luce!\" Jemima answered, her trademark smirk back on her lips. \"Women always want the fantasy, but in reality...we want someone who is totally different!\" ",
        "Jemima sighed as she saw Lucretia's expression. \"How about this cupcake...? We watch the movies, have some girly time, eat until we can't move...then if you still have questions? We will answer as many of them as we can before \"daddy\" over there comes to pick you up and take you home...okay?\"\n\nLucretia nodded, then giggled. \"He doesn't like being called daddy!\"\n\n\"So what do you call him then?\" Gwen asked.\n\nI coughed loudly getting their attention.\n\n\"HE...\" I said a little loudly. \"...would like to be called when you girls are done so I can walk Lucretia home. He also doesn't like to be talked about like he isn't there while in the same room!\"\n\nJemima nodded and I could see the tip of her tongue poke out her cheek while she considered me. \n\n\"You probably call him...\" Jemima began to say it but I put my fingers in my ears and hummed to myself with a smirk on my face.\n\n\"Sorry! Can't hear you.\" I took my fingers away and walked up to Lucretia giving her a hug.\n\n\"Have fun, be good. I will be back to pick you up and walk you home. Any questions before I go?\" I asked. Okay, I was being a little sneaky here. \n\nI noticed Lucretia gets this...jealousy thing...with me around other females of any kind...even with Nancy! I like to reassure her. So usually it means I give her hugs and my scent gets on her, and she can smell her own scent on me. For some reason it seems to calm her, don't ask me why, I don't fully understand it myself. Kind of like how she still doesn't like seat belts. She tolerates it and after explaining in greater detail how they work she understands why she has to wear one. Though she still complains saying that she can't get hurt, and I have a body shield so we don't need to wear one.\n\n\"No questions Greg. I will stay and watch...whatever they were talking about.\" She finished. \n\n\"It's a movie....you're going to be watching a movie.\" I explained.\n\n\"Oh...movie? It moves?\" she asked.\n\n\"Yeah. Humans like to shortenize stuff. Movie stands for \"Moving Pictures.\" It basically is a whole bunch of pictures that moves rapidly so people can see the film.\" I attempted to explain, but with no frame of reference for her to understand...I don't think I did very well. .\n\nShe still looked confused, but Gwen put a plate of food in her hand and directed her to the couch.\n\n\"If we try to explain everything to you Lucretia, it loses its fun. Let's just watch the films and let Greg go out for some guy time...okay?\"\n\nI left, but wasn't too worried. I hadn't gone shopping for music in a long time. There were all sorts of things from Indie music which made me think of Indiana Jones and was something completely different! Then there's the alternative pop/rock/ballad/bagpipe music? Then the oldies, the gold/platinum/ceramic editions. Then techno, electronic, trance, dance, and industrial....\n\nSigh! \n\nI decided to take Lucretia with me next time and forget the whole thing. I meandered around a while, just killing time, and then thought about going back home to relax and...my right hand trembled.\n\nNormally, that's not a big thing, but then I felt a rush of anger, followed by extreme sadness and then frustration and more anger! \n\nWhat in the world? I looked around and could see nothing that would make me feel like...it hit again and I almost felt like snarling!\n\nSomething was wrong with Lucretia!\n\nI pulled out my phone and dialed Gwen's number. She picked up on the first ring.\n\n\"Everything's fine Greg.\" Gwen said quickly.\n\n\"Bullshit!\" I spat into the mouth piece. An older woman gave me a look of disdain, which I returned with a look of fury making her back up a step from the heat of my glare.\n\n\"Put her on the phone right now!\" I demanded. \n\nI heard Gwen saying something and an answering snarl in return.\n\n\"Lucretia?\" I asked loudly, then heard the phone clatter. I heard footsteps and Gwen picked up the phone. \n\n\"I don't think she knows how to use a phone and she's...\"Gwen's voice trailed off and she sounded almost in shock. I felt my eyes tearing up and growled in my throat a bit.\n\n\"I don't believe it...\" Gwen said in a soft voice.\n\n\"What? I don't like being kept in the dark here Gwen!\" I tried not to shout into the phone.\n\n\"Lucretia...she's...crying! I am seeing a succubus cry!\" Gwen sounded like she was witnessing a pig with wings pulling aerial acrobatics!\n\n\"I'll be right there! Stay with her, please.\" I said quickly.\n\n\"It's alright Greg, she's...she is alright, take your time.\" Gwen said quietly, with a trace of wonder in her voice.\n\nAlright? ALRIGHT? \n\nMy roommate is crying her eyes out and it's alright? I'll make Gwen eat her entire card deck and Jemima can snort her hair products if Lucretia is...\n\nThe feelings were changing.\n\nThe sadness was changing into, I don't know, a sort of melancholy and then resignation. As I got into my truck I felt it shift again and even felt a twinge of hope, like a little tiny sparkler all by its lonesome on the fourth of July. It grew, and I could almost feel myself smiling along with the gaiety I felt in my chest. I pulled up in front of my neighbors and I heard...trumpets?\n\nI knocked on the front door and then just opened it since no one was answering it. I heard oldies band music playing and turned into the living room to a bizarre sight.\n\nGwen, Jemima and Lucretia were all in 1920's flapper dresses with head-bands and feathers and the whole nine yards. They were grooving to \"The Boogie Woogie Bugle Boy from Company B!\" Lucretia was dancing and prancing and Jemima was strutting and posing and Gwen was shaking and bouncing! There was a bottle of root beer imbedded in the dry wall and cookies and food launched all over the floor. A pizza box was upside down on the table leaking sauce on the heavily varnished wood.\n\nThe girls were laughing and singing along to the song, and then it came to the end.\n\n\"Alright Lucky! You liked that one. Let's get some Louis Armstrong from back when...Hey Greg!\" Jemima said as she took the old vinyl out from under the phonograph needle and reached for another sleeve.\n\n\"I can't believe this girl! Luce here can dance like I have never seen! She's the bee's knees!\"\n\nLucretia spotted me and skipped over to wrap her arms around me in a tight hug pressing her face to my chest, her long feather from her head band poking me in the nose!\n\n\"Master I am having so much fun! Jemmy has so much good music to listen to and it makes me...\" Her voice trailed off as a lone trumpet sang out from the speakers and I swear my roommate's eyes rolled back into her head as she began to twirl and sway to the golden sounds of Louis Armstrong.\n\nGwen came over to me as Jemima (Jemmy? Really?) and Lucretia (Lucky? REALLY?) swayed about the open floor of the living room.\n\n\"What the hell happened Gwen? One minute I feel Lucretia angry enough to chew through a tent stake and I come here and she's dancing and happy as...I don't know...something happy! What gives?\"\n\nGwen shrugged. \n\n\"We were about halfway, maybe three quarters the way through the first movie. Lucretia had been getting more and more tense as she watched. Finally she threw her drink at the wall and starting tossing the food and screaming at the TV telling them how they were idiots and didn't know anything. She changed back to her, succubus form, I guess you would call it and hid her face in her hands and wouldn't look at us. Jemima tried to talk to her but Lucretia just walked over to the corner of the room and folded her wings around herself and wouldn't respond to us. You called and I think she might 'of heard your voice. \n\nI tried to hand her the phone, but I don't think she understood what it was because she knocked it away from me which set Jemima off and she grabbed a hold of her to keep her from moving. Then after I picked up the phone from the floor I turned to see Jemima looking surprised as Lucretia hugged her and began...she began too...\" Gwen's voice trailed off.\n\n\"She cried...right? That's what you told me.\" I offered. Gwen nodded and still looked a little shell-shocked.\n\n\"Well she seems better now, what did you do to help her? I usually just stay near her and hold her hand when she gets that way.\" I said.\n\nGwen watched me carefully and spoke slowly. \"Greg...Succubae don't cry. They don't feel sadness or remorse. All they feel are the basic needs and wants, maybe a little curiosity, but they CAN'T feel those other things!\"\n\nI looked back at her startled a little myself, \"Are you trying to tell me that Lucretia isn't a succubus?\"\n\nGwen huffed in exasperation. \"Of course not! Lucky...Lucretia is a succubus. To be born of a succubus no matter what it sleeps with, its offspring will be a succubus! What I am saying, Greg, is that succubae don't feel sad, they don't feel remorse or pity.\"\n\nShe faced me straight on. \"When Jemima and I heard you talking to her about forgiveness and trying to explain it all, we were both laughing inside, because a succubus would never understand or want to understand what you were talking about.\" \n\nShe looked back at \"Jemmy\" and \"Lucky\" who had linked elbows to dance side by side. \n\n\"She was holding Jemima, thinking Jemima had been trying to give her a hug and not restrain her. She was sobbing about the show. We had to explain to her it wasn't real, that it was just a story, a made up one at that.\" Gwen swallowed. \n\n\"Somehow...I don't know how...you really did allow her so much more than just free will Greg. You are letting her feel the world that we live in as we do!\"\n\nI tried to process that. I always knew that Lucretia was a stranger in a strange land, but this, I think...went way beyond that. Lucretia is basically over 200 years old, and never felt a ton of emotions and feelings that we as people from this plane do. At least, that is what Gwen was telling me, as I understood it. Now, on top of being in a brand new place, Lucretia is also now feeling...well, feelings! It must be like what a blind man feels if he had never been able to see and now all of a sudden he can, but even more extreme than that. Gwen was looking at me like she was waiting for me to say something.\n\nOf course my mouth opened before I really thought of what to say!\n\n\"So you're basically telling me I made an Outsider into an Insider?\" I asked.\n\nGwen shook her head and clenched her little fists at her side while giving me a gimlet glare. The effect was spoiled by her flapper dress and long necklace. She looked a little like a child in her mother's clothes, but I would never say that. \n\nWhat...? Piss off a witch? That's just crazy!\n\n\"Don't treat this lightly!\" Gwen admonished me. \"We have an Outsider who for all intents and purposes is...is...Native!\" Gwen rubbed her forehead and looked down with a sigh.\n\n\"Jemima had asked Lucretia if she had liked anything about the movie at all, you know, trying to have her focus on something that didn't make her sad or upset.\" Gwen then looked me dead in the eye.\n\n\"Music!\" Gwen spat out! I raised my eyebrows in question.\n\n\"Yeah...music...everyone likes music, I was going out to try to find some for her when...\" I started to tell her when Gwen grabbed my arm to get my attention.\n\n\"My point exactly! Succubae don't give a crap about that sort of thing! Jemima started pulling out her old records and playing that big band music and she started smiling! Then when looking at the cover of the album she wondered about the clothing...the CLOTHING!\" Gwen said as if thunderstruck.\n\nI shrugged, sure Lucretia liked that stuff, we had talked about it before. She wanted different clothing and so we went shopping again for her to make copies of stuff she liked. I drew the line at skinny jeans...I don't care what anyone says...I hate designer skinny jeans!\n\nJemima pulled out some of her old clothes from the flapper era and then Lucretia made copies of them and then we were all...\" Gwen's voice trailed off. She smiled and her eyes grew warm. \"Your succubus is different, it made me think and I did a little research...even consulted the cards.\" Gwen stepped closer and started whispering to me. \n\n\"In all of our histories among my people and we DO know our history! There has been only one other confirmed joining of an Outsider to a being from our Plane. It wasn't to a human either.\" Gwen said quietly.\n\nObvious question, had to ask it. \"Who or what was it with?\"\n\nJust as Gwen was about to tell me Lucretia snaked her arm through mine and began to pull on me. \n\n\"Dance with me Greg!\" she told me, and my stomach clenched a bit.\n\nNope, not afraid of dancing...I actually enjoy it. I like to waltz and swing as much as most people...maybe more...okay... a lot more! I just hadn't done it in a while and the last time I did it was with a woman who...yep. Dark thoughts all over again. \n\nSigh...I have a lot of issues don't I?\n\nLucretia seemed to feel that, probably the same way as I felt her earlier. She began to pull away but I stopped her with my hands on her hips and pulled her closer, leaving about a six-inch gap between us.\n\n\"I would l...enjoy dancing with you!\" I said through a stutter. I have been having more of those lately! I placed my right hand on her waist, pinky finger brushing the dress material over her hip. My left took her right hand in mine and I looked at Jemima. \n\n\"Moon River?\" I asked. She nodded and I quietly told Lucretia how we are going to dance, and how I would lead. I can't do that cool, hip, freestyle \"Shake your booty to the music!\" type of thing. I do know how to dance with a woman though...it's simple. All you have to do is picture yourself as a stand that holds something precious and lovely and you want other people to see how special it is. Once that thought is firmly in your mind, follow the steps you know by heart and it will happen. What will happen you ask? \n\nYour partner will shine!\n\nThe sweet gentle song played and I swayed my succubus across the carpet. Her brown human eyes were on mine. I could smell her, that soft vanilla tangerine scent that her body always seemed to produce. Her left hand on my shoulder every now and then squeezing as she would give a little giggle or a small smile of pleasure. I felt...so good! The fear of something wrong when I first showed up had dissipated, and this felt so right, being with her like this. When the song was done I leaned over and kissed her, deeply, right in front of Gwen and Jemima who both gasped.\n\nOh right...that is one of the ways succubae feed! I pulled back and planted a small kiss on top of her head through her hair.\n\nWe went home shortly after the dance, actually, I take that back. We went home after we helped clean up the mess and worked hard at cleaning the stains out of the carpets. I never knew that Lucretia's ability to replicate stuff could be tweaked to remove marinara sauce from cloth! Interesting possibilities. I may never have to dry clean again.\n\nBack in our house I was getting ready for bed and Lucretia in her winged form was already in it. When she asked me something as I was taking off my pants.\n\n\"Greg...am I a monster?\"\n\nI stopped as I considered her question. My initial response was anger, how dare she call herself a monster! But I had to temper that reaction with logic. The more I thought about it, the more I didn't like the answer. I sighed and finished taking off my pants and socks and lay down on the mattress next to her. \n\nAfter that one time of lying next to each other, I found I wanted her there, so while she did have a bedroom, she would sleep with me in mine. If I wasn't there though, she was not allowed in my room, I do need some privacy now and then. That being said though...I had forgotten how much I had missed a body next to me while I slept.\n\n\"Technically...yes. You are considered a monster.\" I said gently. I rolled over on my side to face her. She had a faraway look that was kind of sad and anxious at the same time.\n\n\"Technically...I am a monster as well.\" I told her in the same tone of voice. Her eyes lost the faraway look and returned back to examine me.\n\n\"Because you are a mage and different from most humans?\" she questioned.\n\n\"No, because I am seen as someone who harms others.\" I clarified.\n\nShe thought about this and placed a clawed hand on my chest, her fingers sliding over the little bit of chest hair I had in an absentminded way.\n\n\"You are seen as a monster because of this woman who told others you had hurt her when you didn't.\" She stated. I nodded my head, not really wanting to talk about it. I watched her mull over whatever she was thinking and then give a half nod. \n\n\"I am a monster because not only am I different from humans I also prey upon them.\" She stated and her voice trembled once in the middle of her sentence. I didn't say anything, but took her hand that was laying on my chest and held it tighter against me. She watched our hands touching and smiled then it gradually disappeared as her eyes rose to mine again. Her expression turned incredibly serious, like she needed to...I don't know, confess or something.\n\n\"When I came back here with Mother I wanted to kill you, very badly, and very painfully.\" She said quietly. I said nothing but I am sure she felt my heart beating faster.\n\n\"It was strange how you responded to both Mother and me. I felt fear from you, and many other emotions, then you invited us inside to eat. You cooked and served us, and ate with us.\" Her voice had turned a little incredulous at the end as she stared at me.\n\n\"When Mother told me we would be bound I began to panic. I had been down that path before, and it was very unpleasant. I did not want to be bound to someone who hated me, and who I hated! I did not want to be bound to you.\" Her voice grew quiet, but her eyes never left mine. I waited to see what she would say next. A minute passed. Then two minutes, the only thing moving on her was her nictating membrane that was under her eyelid. It would flick out every now and then to moisten her shiny black eyes. I did not have that luxury, so I would have to blink, or clear my throat, but I kept eye contact with her as we lay there in my bed.\n\n\"You were kind to me...\" she said suddenly and it almost made me jolt in bed a little. \"You were kind to me even when you were scared. Mother and I could feel the hurt coming off of you.\" She swallowed hard and her eyes got wider. \n\n\"Greg, the reason we know you are not a...sex offender? Yes, that is the word. The reason we know is that you do not have that...taste about you. You do not succumb quickly to us, they are broken people and are easy to influence, you are not. You are very hurt and do not trust easily. You are also very...\" Her voice trailed off and she snuggled closer to me, my arms went around her automatically.\n\nI wished she hadn't stopped talking! It felt like there was something important that she was going to tell me! Then I heard her voice.\n\n\"I don't want you to die...\" it was so quiet that I could barely hear her. My eyes began to tear up.\n\n\"Well, Lucretia...It's only a matter of time until I do.\"\n\nI felt her nose rub against my sternum as she shook her head at me. \n\n\"I have decided to use my free will to disobey you if it ever comes up, Master.\" Lucretia said quietly. I immediately wanted to jump on that and ask what she was talking about. However, being quiet so far had seemed to be a good idea. I kept on shutting up!\n\n\"I told you once before that I would never kill you unless you really wanted me to...remember?\" She asked.\n\nHow could I forget! I could hardly get to sleep that night, and I still had no idea what she was talking about! I said nothing and just gave an \"MmmHmmm\" of acknowledgement. \n\n\"I have decided that even if you asked me to kill you...I will disobey you.\" She said finally.\n\nEnough of this! I need to talk, to say...something!\n\nI pulled back a little, but Lucretia wouldn't look up at me.",
        "\"Why? What does this have to do with anything?\" I asked. She finally looked back up at me and I saw she was crying.\n\n\"I care about you! I am a succubus. I hunt, I use magic, I kill what I want and take what I want, I don't know fully what you have done to me but I don't want it to stop and I am afraid that if you die I will go back to being what I was and I don't want that!\" She was starting to get louder and her tail was lashing behind her.\n\n\"I saw that...movie? Yes...movie. And more and more I started to feel something inside of me, I got angry. These two humans, well not human. One of them was and the other wasn't. One was food for the other and they came to care for each other. But one needs to eat, and the other is food...don't you understand?\" Lucretia's voice was getting louder and sounded almost desperate.\n\nShe had risen up onto an elbow and was looking down into my face now. I think I kinda sorta got what she was saying...but it didn't make much sense. I knew I should have watched that whole first twilight movie!\n\n\"You're worried because I am food?\" I asked. She shook her head and gritted her teeth.\n\n\"Not just food! You don't understand...you taste...You taste....RAAAH!\" Her hands captured my head and she gave me several quick kisses and I felt a tiny shiver of cold slide past my lips. Lucretia moaned and dropped my head and her back arced while she seemed to roll the flavor of whatever was in her mouth before swallowing.\n\n\"You are a man, full of fear, hate, anger...but also full of compassion, caring, and honor. You are conflicted but try to do what is right. You are fiercely loyal, and also even when scared you showed kindness and trust to a monster that wanted to kill you!\" She blinked and looked down at me. \n\n\"That is why you taste so good! It's not because you are a mage, it's not because of good breeding. We draw on the energy that you create in how you live your life! Someone like you, hurt and still trying to do what you believe is right is a delicacy of much worth where I come from. I know of succubae that would FIGHT to get you into their clutches!\" \n\nShe almost sobbed then and fell forward onto me, clutching me tight...given what she had just said about clutching I was feeling a little nervous, but still I smoothed my hands over her back trying to give her comfort. That did make her sob.\n\n\"It proves it...right there! You just did it again. I felt your fear then you pushed it aside because you wanted to make sure I am okay! That is why I am not going to kill you, which is why I am so torn! I have one of the best sources of energy, and you gave me freedom to take it if I want to and I can't because I CARE about you!\"\n\nI felt her punch the floor of my room and I heard a cracking sound and something falling. Judging by what I heard I think my succubus just punched a hole in my floor.\n\nI tried to look at this from her perspective...because I was still a little lost. My brain is pretty slow most times, and it's hard for me to wrap my head around some concepts. Then the last thing she said, and the rest of what she said filtered through and one thing above all else slammed into me so hard that it shook me to my very core!\n\nI grabbed her biceps and I felt my power give me a little extra juice to raise her face to meet my eyes.\n\n\"Did you just...Lucretia...did you...?\" I stammered. I could feel my body shaking under her. Her eyes went wide at, I guess what she was feeling from me, or my expression.\n\n\"Did I what Greg?\"\n\n\"Did you just say that you care about me?\" I asked quickly, all in a rush so I hopefully wouldn't stammer.\n\n\"I care about you...more than...mph!\" I cut her off so she couldn't finish that sentence with my hand over her mouth\n\n\"Don't bite me! Just...stop a second alright?\" I asked. She nodded, but looked a little peeved.\n\nI fell back on my mattress and felt my grey skinned roomie get more comfortable on me. I tipped my head down to look at her. Her hands were flat on my chest and her chin was on them watching me intently. I sighed and let my head fall back on my pillow.\n\n\"I can see up your nose.\" She said out of nowhere. She sounded curious and I think she would have moved for a better look if I had not lifted my head to give her a dark look.\n\n\"What? I have never seen up a human's nose before. There is a lot of hair in there!\" She remarked.\n\n\"Lucretia, focus for a second. Actually I need to focus...ummm...okay, short answers. Three words or less.\" I stated, holding up three fingers. My head lying back on the pillow I couldn't see her, but I felt her nod.\n\n\"You care about me?\" I asked.\n\n\"Yes I do.\" She responded.\n\n\"I am not a good choice of someone to care about.\" I groaned.\n\n\"I'll decide that.\" She quietly growled.\n\nI decided maybe I was looking at this wrong. The surge of emotions I felt from her, this is just a new experience right? It's that she care's, she couldn't possibly l...like me! I am...in the eyes of the world I am a monster. Sure she is a monster too but she comes by it naturally. I am a \"self-made\" monster so it would seem! I can't believe I am thinking like this!\n\n\"You care for me as a friend right?\" I asked finally.\n\n\"Yes.\" Was her instant response.\n\nWhew! That I can handle! That makes sense...but...gotta know.\n\n\"Any other way you care about me I should know about?\" I asked tentatively. She was quiet, but I let her think.\n\n\"Use more words?\" she asked hesitantly. \n\nI nearly slapped myself in the face! \n\n\"Yes! Of course...sorry Lucretia.\"\n\n\"I naturally care for you very much, as you are my Master!\" She paused, and took a breath. Her fingers moved slowly over the skin of my chest. \"I also care for you because you are very brave, and very kind.\" \n\nShe almost said more, then stopped and rubbed her right palm with that small scar over the area on my chest where my heart was located.\n\n\"That's enough for now.\" Lucretia said quietly.\n\nI pulled her to my side and covered her with our blankets. As I looked over at my friend I smiled and rubbed the base of her horns making her give an avian type of purr.\n\n\"I care about you an awful lot too my friend. Thank you for saying those nice words to me.\"\n\n\"Your welcome Master...\" Lucretia mumbled as she quickly fell asleep. \n\nJust like I have for several nights before, sleep was a longer time coming for me. Not that I was upset, but I felt a little bit of warmth and a strange hope in my chest. It had been a very, very long time since I had felt that way. It was comforting and a little nerve wracking at the same time, and it was nice to stay up for a while and watch my roommate sleep next to me. The last thing I remember before sleep took me, was thinking how natural it felt to have this grey skinned woman be at my side.\n\n\n\nChapter 24: Papa.\n\nSo I guess you could say my life has been getting very interesting indeed! For some reason having verbalized the fact that we actually care about each other seems to have dropped a lot of nervousness that Lucretia feels and a lot of that is also inside of me. Of course that coupled with our workouts together and then the distraction of the workers coming over and fixing up my house is also a help...sort of. \n\nNever would have thought that Lucretia would take such a shine to working!\n\nShe would pester the workers asking questions as they were laying carpet, or using that funny looking wire to run more wire of different colors through the holes they were making in the drywall. William came by sometimes, which also made me realize I had never invited him over! I had gone to his place several times, but never had him over to my house...some friend I was! \n\n\"There is a certain...uhmmm...elegance you might say...to living in such...humble quarters.\" He said haltingly as I showed him what and how I lived. Nancy was perched in his shoulder, she looked different, her eyes were more...I don't know, aware maybe? She was just as she was before though...sensible and sweet.\n\n\"William...\" she said mildly. \"I don't think that Greg would mind you telling him how your really feel.\"\n\nWilliam raised a hand to stroke her back gently for a moment then said, \"I never knew you lived in such a state! No water heater, bare floor and walls, no furniture to speak of! I do not call that dilapidated old couch with coffee stains and gods know what else permeating it...furniture!\" \n\nHe gave the living area of the house another quick glance and then said, \"Really Greg! You could have moved in with me! A camp shower...a bloody camp shower! Why did you choose to stay here, or not try to fix it up more?\"\n\nI shrugged and watched Nancy tickle Will's ear with her whiskers and give a little chittering laugh.\n\n\"It's mine, and I don't really need much to keep me satisfied. It works, but...\" My voice trailed off as I watched Lucretia in the backyard walking slowly in the grass. She was staring down at the ground as if searching for something.\n\n\"How are things with our little Outsider?\" William asked as he stood next to me. Together we watched as Lucretia bent to pick up a rock, tapped it with her finger nails while examining it closely.\n\n\"Pretty good. We have made a lot of headway in my abilities with my magic, and she has become, much more comfortable with me. This past month she has been running me ragged, between that and getting into all the supplies and tools used by the workers to fix up the house I sometimes...heh...it's hard to keep up with her!\" I grinned at my friend. I watched his eyes widen and he gasped in shock.\n\nI turned my head back to the yard and saw the tail end of Lucretia swallowing the rock! \n\n\"Did she just...? My word I...!\" William stuttered.\n\n\"I thought you knew everything there was to know about Outsiders? That is for her crop...she uses it to grind up her food.\" I paused for a moment, thinking.\n\n\"When you were with Mother...\" I shuddered again, bad mental image! \"Didn't you spend time talking with her? Getting to know her?\"\n\nWilliam shook his head, \"At the time we both were only after one thing. She wanted my energy and I wanted to...\" He grinned at me with a little waggle of his eyebrows. \"I wanted to \"Get Busy\" I think is how you put it!\" \n\nHe sighed again, \"You are the only person I have heard of who tried to get to know his charge. I assume you have not lain with her?\" He asked with a sideways glance.\n\n\"Not in the biblical sense. We sleep together at night. We have kissed and made out several times, that's about it though.\" I answered.\n\nWilliam nodded absently, \"You show great restraint. Succubae have pheromones and even their saliva contains a form of mood enhancing toxin that makes their victims succumb to their desires.\"\n\nI blinked...Her...?...Eeew! Her saliva?...Blech! Roofie spit!\n\n\"Well she has bitten me several times and I have had plenty of time to...uhm...ingest her drugged...uh...saliva! I never really felt it then.\" I answered hesitantly.\n\nNancy quickly climbed over to William's other shoulder, \"I told you so! Now...pay up.\" \n\nWilliam frowned, \"Wait a moment you verminous hussy! Gregory...this is very important. This may be uncomfortable to answer, but much is riding on this...since you have been at my house, she has never tried to use magic or her other assets to make you want to have sex with her?\" His voice sounded a little strained...almost desperate!\n\n\"Ummm...no, not to my knowledge?\" I said questioningly. \n\nI heard Nancy laugh and she shook herself, running her forepaws over her face and around her ears.\n\n\"HA! 720 years old and still a 30 year old rat knows something he doesn't!\" She chattered. Lucretia looked up and saw us. She smiled and gave a little wave, then continued her search around the arborvitae.\n\n\"Pay up!\" Nancy demanded now.\n\n\"Fine!\" growled William. He reached up and handed me Nancy, then took a few steps back. Then he crooked his left elbow and raised up his right arm and began to sing!\n\n\"I am the very model of a modern major general...!\" Will started and my mouth fell open! \n\nNancy began to giggle and clap her paws with glee! I saw Lucretia stalk back to the back porch and watch with wide eyes as William rapidly went through the whole song with dramatic flourishes and embellishments. I wanted to laugh, but decided against it. \n\nWhen he was done Nancy scurried down my body and quickly scaled Williams's clothes to perch on his shoulder and rub against his cheek. He blew air out of the corner of his mouth and growled out, \"Enough woman! I hope you're satisfied!\"\n\n\"That was wonderful William!\" Nancy squeaked, continuing to rub against him affectionately. He appeared somewhat mollified. He shot the sleeves of his jacket and inspected the cuffs for a moment.\n\n\"I almost don't want to ask...\" I began but William cut me off with, \n\n\"Then don't, Gregory...just...let it be known, and realize that I never welch on a bet!\"\n\nHis eyes twinkled for a moment. \"Though if I had won the bet Nancy would have...\" He stopped as Nancy's fur stood on end and she resembled a bottle brush!\n\n\"You wouldn't DARE!\" Nancy hissed.\n\n\"Why madam! I wouldn't dream of it!\" William replied guilelessly.\n\nLucretia came up on the porch then, she held some smooth river stones that came from...well, no idea how those got in my back yard. She had an excited look on her face as she gazed up at the overcast sky. \n\n\"There's going to be a storm tonight!\" She almost crowed as she handed me the rocks. She then kissed me on the cheek and skipped into the house as William stared after her in surprise.\n\n\"You really have bound her completely! I saw how she acted before, holding your hand and looking for reassurance...but now...something happened?\" He asked.\n\nI nodded, not sure how much to tell him. \"We had a conversation a few weeks back, and I told her that I cared about her, and she told me she cared for me. It...seemed to free us both up in some way. Not really sure how.\" \n\nWill nodded, \"The truth will set you free...\" he began but I cut him off.\n\n\"No, the truth only sometimes set people free! The actual truth means nothing unless you can prove it.\" I told him sternly. He blinked at me for a moment. \n\n\"I keep forgetting how young you are, so you look at life with eyes so jaded.\" Will said softly. He glanced around my house again and gave a small smile. \"For all of its broken promises and pain...life...the world...it's still a beautiful and wonderful thing. One day you will remember it.\"\n\nNancy rubbed against his ear. \"William you are such a sweet man and you try to hide it behind your fangs!\"\n\nWilliam shrugged, making Nancy wobble on her perch, \"I try...though...Gregory...\" He said my name thoughtfully, almost like a question.\n\n\"I have a question, but Nancy knows more of this, and more of the proper phrasing so I will let her ask you.\" William finished.\n\nNancy just shook her little head, her ears wiggling for a moment. \"I don't know if this is the proper time for it...\" she said quietly to Will.\n\n\"You think about that now? After making me perform in front of an audience? It could be nothing, so tell him since he is probably being kept in suspense right now.\" William said with a small smile, though his tone was serious.\n\nNancy harrumphed, which was very cute to hear from something so small! Then she fixed her button eyes on me and asked, \"The first time you met Lucretia she had been brought over by a wizard that is what she told you?\"\n\nI nodded.\n\n\"Normally a sacrifice is given, and that creates energy to allow them to have a physical form over here on our Plane. Usually it involves blood or the trade of something powerful, like an artifact of magic. The lords and ladies of realms can pass through the veil if they contain enough energy, but to remain here for an extended stay they require an anchor. If not, then at some point they will do what William told me you saw.\"\n\nI gaped for a second, \"You mean Lucretia is going to turn into ash spontaneously on me?\" I asked incredulously. I had the horrid thought of waking up one morning to a pile of black ash and soot next to me on my sheets and gagged a little.\n\nNancy chattered and shook her head.\n\n\"No! Silly...she is stuck with you and you with her. The sacrifice for her was the death of a wolf and a...elk?\" She said the last part questioningly and I nodded. \n\n\"Yes, a meaningful sacrifice symbolizing both the predator and the prey...\" she continued. \"What you did was give her a sacrifice AND an anchor, a stable platform upon which to draw energy. In this manner she can stay here as long as you are alive.\"\n\nI thought about that and I saw a look of concern on William's face. I raised my eyebrows at him and asked, \"Something you want to add?\"\n\nHe paused, thought for a moment, \"It could be nothing...but how is she feeding herself...maintaining her body while she is here?\" Will asked.\n\n\"You have already told me you are not laying with her, and you know what it feels like when she draws your strength through a kiss...so how is she...?\"\n\n\"I haven't.\" Lucretia answered. She walked through the patio doors onto the back porch where we were all standing. \"I haven't been feeding on Greg, and I won't.\"\n\nNancy gave Lucretia a look of concern, \"Dearie, how will you be able to stay here and...\" Lucretia interrupted her and spoke right over her.\n\n\"I only really need his energy to heal myself quickly, or to power my magic, other than that...it's been taken care of.\" She gave me a sidelong glance and I wish she was in her human form to see her blush. Like this with grey skin, I could only feel it through our connection.\n\nWilliam scratched his head, \"Well, I trust that you know what you're on about. However...\" He gave me a pointed look. \"You two need to discuss what it means having an Outsider this closely attached to you.\" \n\nThen he directed his gaze to Lucretia, \"You also need to tell him what could happen to you...understand?\" \n\nShe nodded and we walked William and Nancy to the door. I opened my gate and he backed up his Honda Odyssey Minivan onto the street and drove off. Really...a MINIVAN? I was surprised too until I saw the inside. All blacked out windows with a comfortable place for him to crash when the sun comes up if he's on a long trip. Also, it was one of those new anniversary type vehicles, had something like 1,000 horsepower with a rebuilt engine and a big ol' turbo something or other on it. Made no sense to me but hey...who am I to judge?\n\nI thought about what Will had told me before he left and now I felt grumpy! How come I was the last to know about these things? That there was an additional problem or danger to Lucretia's and my relationship? Isn't there like a rule book somewhere like...I don't know...\"Dating Outsiders for Dummies?\" Not that we were really dating or anything, I mean I liked Lucretia a lot...I mean, I really cared for her a HUGE amount. It's not like I l...\n\nFLASH!\n\nThe overcast sky lit up in the distance, but bright enough it still caught my attention and distracted my thoughts. Several seconds later I heard a rolling rumble of thunder. Ah! Lucretia was right...\n\nA storms coming.\n\nMy succubus was starting to bounce on the balls of her feet.\n\n\"Lucretia, can we talk a bit?\" I asked.\n\n\"Sure Greg...what about?\" I blinked at her, was she really that clueless? Didn't she just hear the conversation that we all had on the back porch? She was staring at the sky, seeming to wait for the next lightning flash.\n\nOh...distracted by the storm.\n\n\"William told me something about ash and you then leaving and a lot about energy...care to fill in the missing pieces?\" I asked a little sourly. She may be distracted, but this was important! To me it was important at any rate.\n\n\"Oh..that...\" she said absently while watching the clouds darken. \"It's nothing really. I won't turn to ash because I had more than a strong enough sacrifice...you.\"\n\nMe? Wait...ME! I am the sacrifice? As if she could read my mind, and maybe she could...hope not.",
        "\"You gave yourself to me, and I gave you myself. I am now a part of this world as if I was born here.\" She told me, her eyes still on the horizon, a small smile on her face.\n\n\"There is no chance of me turning to ash and fading away if this body is destroyed.\" She grew somber for a moment and faced me.\n\n\"If this body is destroyed, while I am here this strong...I would die...true death.\" She told me. Then smiled. \"But I am very hard to kill Master, because of our bond I have all of my strength and abilities...so do not worry!\" Then turned back to watch as the storm grew larger, and the lightning got closer.\n\nI was gobsmacked! What a thing to lay on me? Lucretia could DIE? I was not comfortable with that idea at all. Did she know this would happen back when we first clasped hands at our joining? Did Mother know? I seriously contemplated asking how to break the bond and send her home! I didn't want her in any danger, sure when we first met I didn't care a fig about her, she tried to kill me! Now though, I enjoyed her company. It was wonderful to wake up to her smiling sharp-toothed face even if it still gave me a moment of near bladder relieving terror before I remembered her. Just because it felt good to have her in my life was it worth the risk to her? Should I release her and let her go? I was staring at my shoes when I saw her long claws appear in my vision, they scratched idly at the wood of my front porch. She crouched down and looked up into my face.\n\n\"I forgive you...Greg.\" \n\nI shook my head and gave her a puzzled look. She gave me a tender smile and her black eyes seemed to soften.\n\n\"You sometimes turn into a...what is that word...grab bag? That's the one! You sometimes seem to turn into a grab bag of emotions. I have had time to get used to it, but Mother? She reads thoughts so she probably had a confusing time trying to keep up with you!\" She straightened up to look me in the eye since I wasn't slouched and looking down anymore.\n\nShe grasped my right hand in hers, our scars touching.\n\n\"You were thinking of breaking our bond to protect me?\" She asked quietly. I nodded. She gave a small coo of pleasure and ran the back of her fingers gently on my cheek.\n\n\"You would set me free to protect me...how could I not forgive you Greg?\"\n\nHer grip cinched on my hand, almost painful. Her voice came out tight. \"If you did, I would no longer be the way I am now. I would be...I think the word is...not evil...what?\" Her voice trailed off as she thought. Her eyes widened and then narrowed as she got the concept she was wanting to impart to me.\n\n\"I would then be the hunter and you would be my prey again.\" She said finally. Her hand squeezed even tighter, and I activated my shield to increase my strength to squeeze back and protect my hand from her pressure. She smiled and stroked the translucent membrane of power that covered me.\n\n\"That is one of the reasons I train you so hard Greg...\" she told me quietly, but with a slightly impish smile to belie the serious nature of our conversation. \"...I fear little, but I am afraid of one day going back to the way I was. I want you to be able to protect yourself from me if that should ever happen!\"\n\n\"I did pretty good against you the first time!\" I said, trying to joke, but the thought of Lucretia in all of her fury coming after me made my belly button want to pucker all the way to my backbone! All she had been doing so far against me were physical attacks, she hadn't used any of her so called magic yet! Well, beside the parlor tricks of replicating clothes and odds and ends, or getting stains out of upholstery and carpet. If her magical ability was anything like her physical fighting ability then my roommate was a thaumaturgic powerhouse!\n\nShe chuckled and ducked her head for a moment then looked up at me through her eyelashes. \"You may not have a porch railing to use in your next fight!\" Then a large raindrop fell on the side of my face. Lucretia looked at it, smiled and then licked it off! \n\nShe was six inches away from my face and licked it off! I keep forgetting how long her tongue is.\n\n\"It's starting!\" She nearly squealed and began to prance around the front yard, glorying in the rain.\n\nNow I like the rain as much as the next person, but the growing nearness of lightning flashes and the shorter space between the flashes of light and growls of thunder were kind of disturbing to me.\n\n\"Lucretia!\" I called as she spun around the locust tree in the front yard. \"Get your grey tail in the house! It's dangerous out here!\"\n\nShe laughed and said, \"I can't Master! It's a storm! I need to be in the storm!\" Saying that she pirouetted, spread her wings and lifted her self to the ridge of my roof in a few strong beats that sprayed rain from their surface. I spluttered then ran to the back porch to get a better view of what she was doing. Entering my backyard and looking up I saw the clouds begin to race, moving faster and thickening. I could only imagine how massive the thunderhead was becoming! \n\nI felt suddenly very small and very, very insignificant.\n\nClouds don't form that fast normally, this seemed...was Lucretia doing this? I watched her as she was standing in the rain, clawed hands held to the sky her head tilted back and from the side view I had it looked like her mouth was open. She looked wild and savage and beautiful up there. She also looked happy, like she was having the time of her life.\n\nThen I felt a tingle, a feeling...just like I had felt in my basement and at a few other times before. That feeling you get of being watched. I scanned around my yard, wondering if someone was finally able to see my succubus in her true form, then it felt as if the eyes shifted from me, and the feeling changed. I felt...pride?\n\nLighting in twin forks rippled along the belly of the dark clouds overhead and when the thunder crashed through the air Lucretia moved and I saw her dance.\n\nNow I had danced with Lucretia a couple weeks back, and I saw her messing around with Jemima and Gwen when I had first showed up. We had even danced, just the two of us through the construction debris of our living room and in our backyard through the tall grass. So I had an idea of how she moved and how her body shifted.\n\nThis was nothing like that.\n\nHer wings extended and those little claw like fingers at the arch of her wing folded over her arms, just like when she made those nasty weapons in my training. She left her wings unfurled though, and began to wave them hypnotically. She then moved her feet in intricate patterns that only someone with the sure grip of a birds claws could do on the ridge of a roof made slippery from rainwater. She moved along the ridge, stepping almost daintily and with precision as if she had done this many times before, a wing going up, then back, around and then over. It was a dance, but it felt more primal, stylized...yet random.\n\nShe swept low, both arms and wings coming forward like she was bowing in supplication, even her tail drooping in the wet drops of rain splashing around her, then she sprang up and began it all over again...but faster this time! Then she began to sing, but not in the voice I knew so well. This sounded like an avian call, like that of a murder of crows all calling at the same time! It was strident, fierce and in a weird way sounded kinda cool. \n\nIt hurt my ears though! I sighed, and even as strangely beautiful as this whole production was...I figured it was better to get her inside. I was opening my mouth to yell to her to get down when both the song and dance rose in pitch and fervor! She was spinning and twirling like a dervish when it came crashing to a halt! Standing tall with her wings and arms reaching for the clouds she called out in a loud voice that seemed to pierce the sky...\n\n\"PAPA\"\n\nLighting flared like roiling snakes, meshing together almost like a net as they passed far into the distance in every direction, one bright bolt slammed down into Lucretia's raised palms and my succubus was illuminated from within and without and I heard her joyous voice shout out again...\n\n\"PAPA!\"\n\nThen all was still and the clouds dispersed. My roommate was still on the roof and watching as the dark storm that maybe really wasn't a storm, rolled away towards the hills. I stood there as well, staring, trying to make sense out of what I had just seen, then my slow turtle of a brain kicked into high gear and I flashed back to a memory.\n\nI was about 8 or 9 years old at the time and my younger sister was about 4 or 5. Dad was sitting on the couch and had turned off the TV. I was upset since we were watching a movie that I had wanted to see, and my sister was trying to get my dad's attention. She was wearing a long sleeved pink shirt with Rainbow Bright on it, and a ballerina tutu colored yellow and blue that was far too big for her and she had huge oversized movie glasses on. Dad smiled and hugged her and she laughed. Then she carefully got up on the wood coffee table we had and began to sing...off-key...and dance...badly. \n\nHey, I was a kid...I was no judge of the Modern Arts at the time! Come to think of it I still don't know the difference between a dip and a duck!\n\nDad was smiling and watching as my sister twirled and sang and he watched her carefully in case she got too near the edge of the table so he would have to catch her. I wanted to get back to the movie, but it appeared that dad didn't care to watch it anymore. I got up to turn on the television set when I saw him give me a glance and a signal with his finger not to. I sighed and picked up a book I had been reading earlier and decided to wait it out. \n\nWhen my sister was done, my dad praised her and hugged her, telling her how much he loved her and was proud of her. I sighed again, loudly, and rolled my eyes. She ran off to go play, or do her dolls hair, or whatever she wanted to do and dad came over to sit next to me.\n\n\"Whats wrong son?\" dad asked...he liked to ask questions that he already knew the answer to!\n\n\"We missed so much of the movie, and she had to ruin it by singing and doing that dance thing!\" I replied in a snit.\n\nI could see dad trying to figure out to explain this to me, and that pissed me off even more. I wasn't a little kid! Sure I was kid, but I knew about more adult stuff like car wax and hammers and snails and stuff!\n\n\"Greg...I am the first man that your little sister will ever love...\" he began. I shrugged and he noticed, then turned me so I could face him more directly.\n\n\"Listen son...this is important. You may not understand what I am telling you now, but you will get it one of these days and it will make sense. So listen up...you hear?\" He said seriously.\n\nI knew then that this would be important, because the last time he told me this, I finally understood what death meant when I stepped on a frog.\n\n\"I am the first man your sister will love, and that means that she wants to sing and dance for me. She wants to know that I find her beautiful and special and precious. That's why I turned off the movie, and paid attention to her. I wanted her to know that I would stop what I was doing to give her the attention that she deserves both as my daughter and the woman that she is going to one day be.\" \n\nHe paused and his eyes got a faraway and sad look. A little pensive as well.\n\n\"I am the example of what she is going to look for in a husband, and I want her to find a husband who will turn off the TV and look at her and pay her attention. To accept what she is giving him...\" \n\nHe looked back at me.\n\n\"When your little sister was singing and dancing...do you know what she was doing, do you know what she was saying and doing through her actions?\"\n\nI shook my head, still trying to wrap my mind around the concepts he was sharing with me. It was too big of a thought for a boy like me to understand, but the nature of it felt immense.\n\nMy dad smiled and his eyes softened as he looked back at the coffee table where just a few minutes before my sis was singing her off-key little heart out.\n\n\"Your sister was saying that she loved and honored me...even though she was too young to fully understand it.\" His eyes hardened as he caught my young eyes with his stern ones. \n\n\"So next time she does that? You keep your loud sighs and grumbles to yourself young man! Do not disrespect what your sister is doing when she is trying to express herself to me!\" He said quietly in a no nonsense tone of voice.\n\nLooking up at Lucretia, watching her stare after the clouds, that's what she was doing! I had never heard her speak of her father before...never asked or thought of it myself to be honest. This whole light and sound show though? I had to wonder about who or what he was. All the dancing and singing though made sense now.\n\nLucretia was honoring her daddy."
    ],
    "authorname": "payenbrant",
    "tags": [
        "sex offender",
        "monster",
        "succubus",
        "vampire",
        "witch",
        "dance",
        "forgiveness",
        "hope",
        "papa",
        "care"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/mine-yours-pt-08"
}