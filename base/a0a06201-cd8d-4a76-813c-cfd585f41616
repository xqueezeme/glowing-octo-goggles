{
    "title": "Lilith's Emporium: The Neighbor",
    "pages": [
        "Jake was coming home from work one day and heading up to his apartment to see his wife Anna. It had been a long day and he was tired and just couldn't wait to walk in and see her smiling face like he did every day. She always had her hair a mess after a long day but it really just added to her charm.\n\nJake and Anna had been married for almost ten years. They had lived in this apartment building a few miles outside the city for that whole time. They both worked in town and it was taking a toll on them both and even though Anna would say she wasn't stressed out but he could see it despite how she would keep getting promotions and such making it even harder to leave and start over somewhere else but Jake didn't really care where they lived as long as they were together.\n\nAs he approached his door he stopped as he saw some guys bringing boxes on two-wheelers into the apartment across from theirs which had been empty ever since the elderly woman Mrs. Brown died there a year ago. He was curious as to who his new neighbor was going to be as he walked by and peeked inside but couldn't see much.\n\n\"Can I help you?\" A woman's voice said right behind him making Jake jump a little as he didn't see or hear anyone approach.\n\n\"Oh crap, I'm sorry, you startled me,\" he said looking at the woman with dark hair standing in front of him.\n\n\"My apologies,\" she said with a slight grin before putting her hand out. \"I am Venessa, I just moved in.\"\n\n\"Well hello Venessa, I'm Jake, I live right over here,\" he said looking at his door while shaking her hand. \"So we will probably see you quite a bit.\"\n\n\"Hm, I hope so,\" she said almost teasingly before glancing down at his other hand for a moment. \"You're married I take it?\"\n\n\"Oh, yes, almost ten years now,\" he said showing his ring.\n\n\"Congratulations, Well, I would very much like to meet your wife,\" she said and a way that almost made Jake feel uncomfortable yet he wasn't sure why.\n\n\"Oh, um, of course, Anna would love to meet you, she always gets along with the neighbors. If you want, maybe we can stop over once you are settled?\"\n\n\"I would like that very much, come by this evening, I insist, I really want to get to know the people in the building,\" she said before finally letting go of his hand and walking past him. She looked back at him once inside and said: \"please, around 7:00 perhaps, I look forward to it.\n\nJake watched her walk into the apartment as she was wearing a long black coat and high heeled boots that made a lot of noise when she walked. He wondered how he didn't hear her coming in those boots but didn't think much of it before continuing to his home a few feet down the hall.\n\nAs he unlocked the door and walked in he saw Anna sitting at the kitchen counter on her computer and on her phone. She was wearing her reading glass and had her hair up in a bun with a pen sticking out of it. A few strands of her dirty blonde hair hanging down in her face as he heard her arguing with one of her employees about a report not getting done.\n\nJake stood there admiring her in her current state. She would say she looked like a mess but he loved her looking like this. She was a beautiful woman and for some reason even like this with her appearance toned down by work stress and other factors it just made her look even better in his eyes.\n\n\"Just get it done okay? Thank you!\" She said before hanging up the phone. \"Hey Honey.\"\n\n\"Busy day?\" He asked putting down his work bag.\n\n\"I work with a bunch of idiots, gonna give me gray hairs.\"\n\n\"I don't see any, you look as beautiful as ever.\"\n\n\"Thanks but I am a fucking mess right now,\" she said as Jake chuckled as he knew that is what she would say.\n\n\"Did you know someone was moving into Mrs. Brown's place?\"\n\n\"No, but that's good.\"\n\n\"Yeah, her name is Venessa, asked me to come by with you later because she wanted to meet some people in the building.\"\n\n\"Oh, okay, should we bring something?\"\n\n\"I can go grab some wine maybe,\" he said unsure of how to answer.\n\n\"I think we have an unopened bottle in the cabinet.\"\n\nJake went over and looked seeing the bottle. \"Ah yes, I'll throw it in the fridge to chill it a bit,\" he said pulling it out.\n\n\"Perfect, oh crap, what should I wear, maybe I should jump in the shower.\"\n\n\"Maybe I'll join you,\" he said with a grin.\n\n\"Not now, we want to make a good first impression, if she is gonna live right next to us we want to get along with her don't we?\"\n\n\"Honey, calm down, it's just a neighbor, you aren't meeting the president.\"\n\n\"Right, but anyway I should at least change,\" she said as she ran to the bedroom and began digging through the closet.\n\n-----------\n\nLater that night Anna had cleaned herself up and put on a casual dress. She had fixed her hair before putting back up in a bun and was still wearing her glasses but grabbed the bottle out of the fridge and was ready to go meet their new neighbor.\n\n\"Anna, you're still wearing your glasses.\"\n\n\"Huh, oh, I guess I am,\" she said feeling a little embarrassed. \n\n\"You need to see Doctor Ericson, think it might be time to get permanent glasses.\"\n\n\"I know, just hard to find the time, but anyway, let's go meet our new neighbor,\" she said heading for the door with Jake in tow.\n\nThey approached the door and Jake gave it a few knocks. They waited a few moments before it opened up and Venessa was standing there with her hair around her shoulders wearing a very tight and revealing black dress. Anna looked at Jake for a second before she turned back to Venessa.\n\n\"Hi, I believe you met my husband earlier, I'm Anna, and welcome to the neighborhood,\" she said with a smile before handing her the bottle of wine.\n\n\"My my, Jake you did not tell me your wife was such a beautiful woman.\"\n\n\"Oh, stop, work stress really brings out my eye's,\" Anna said jokingly.\n\n\"Nonsense, please come in, make yourself comfortable,\" Venessa said letting them enter before shutting the door behind her.\n\n\"Wow, this place already looks amazing,\" Jake said seeing how everything already seemed unpacked and set up.\n\n\"Thank you, spared no expense on the moving company, please make yourselves comfortable,\" she said showing them the living room while she went into the kitchen with the bottle.\n\n\"You didn't tell me she was a stone cold fox,\" Anna whispered as she and Jake sat down on the couch.\n\n\"Why would I say that, you want me to walk in and say hey honey we have a new hot neighbor?\"\n\n\"Well no, but Jesus, she is gorgeous.\"\n\n\"So are you, stop thinking about it,\" he said as they heard footsteps.\n\n\"Yes Jake, your Anna here is a remarkable beauty,\" Venessa said walking into the living room handing them a few glasses of the wine they brought.\n\n\"Sorry, I just wasn't expecting you to be so, stunning,\" Anna said talking about Venessa's looks.\n\n\"All women are beautiful, that is how we lure in our prey.\"\n\n\"Prey?\" Jake said confused.\n\n\"You my Dear, men are our prey.\"\n\n\"Oh, ha, I get it,\" he said before noticing the large painting on the wall of what appeared to be a woman with large wings and horns. \"That is a nice painting.\"\n\n\"You like it, it is of the succubus Vylerris, she is an ancient beautiful creature, the original Daughter of Lilith.\"\n\n\"She is very attractive, yes, but a daughter of Lilith?\" he said not sure what she meant.\n\n\"The daughters of Lilith were her generals, her most powerful, they fulfilled her every desire when she wanted to rule over mankind.\"\n\n\"What happened to her?\" Anna asked seemingly enthralled in the story.\n\n\"One day Lilith gave up her venture to rule, she felt guilty and tired, the daughters scattered to the four winds, some died, some went into hiding.\"\n\n\"Wow, so what happened to Vylerris. And Lilith?\"\n\nShe smiled a little before she said: \"Vylerris hasn't been seen or heard from in quite some time, Lilith, it is said she wonders the world as a beautiful woman, trying to enjoy the simple pleasures in life along with her... daughter.\"\n\n\"Wait, Lilith had an actual daughter?\" Jake asked.\n\n\"Adopted, but yes, her name was Nessira, the one true daughter that Lilith loved more than any other,\" Venessa said seemingly with sadness in her voice.\n\n\"Wow, these are amazing stories,\" Anna said breaking the silence as Venessa smiled at her comment.\n\n\"I am sorry, I am sort of a feminist, I like symbols that inspire women to take control and be the powerful predators that they are,\" she said as she looked over at Anna. \"In fact, perhaps you can help me, Anna?\"\n\n\"With what?\" Anna asked curiously.\n\n\"I want to start hosting a sort of weekly get together, just the ladies from the building, some wine, some chatting, just womanly fun.\"\n\n\"That sounds nice, I've been looking for something to take my mind off of work stuff lately.\"\n\n\"Wonderful, oh and don't worry Jake, I will return her home to you every night safe and sound.\"\n\n\"Not worried at all, sounds like it would be good for her, I can keep myself entertained for a few hours.\"\n\n\"I am sure you can,\" Venessa said with a smile that sent a chill down Jake's spine.\n\n\"Oh this is gonna be fun, I know most of the women in the building so I will spread the word.\"\n\n\"Thank you, Anna, maybe on Wednesdays, starting tomorrow?\"\n\n\"Um, short notice but, yes I definitely will get to work on this.\"\n\n\"You are a wonderful woman Anna, you must feel so lucky Jake,\" she said looking back at him again.\n\n\"I'm the lucky one,\" Anna said holding his hand and smiling at him while he looked over at Venessa who seemed to be looking down at their interlocked hands.\n\nAfter about an hour of chatting Jake and Anna decided to head home. Venessa walked them to the door examining Anna closely. Jake looked over and saw Venessa checking out his wife and began to wonder if maybe she was a lesbian. He didn't care either way just as long as she didn't try to put any moves on his wife.\n\n'Well welcome to the neighborhood,\" Jake said as Venessa got very close to Anna. Anna seemed suddenly enthralled in Venessa as she looked into her eye's. \"So tomorrow night then?\" Jake said breaking the silence.\n\n\"Yes, I am looking forward to it, my Dear Anna,\" she said looking at Jake's wife with lust in her eye. \n\nJake eventually tapped his wife on the shoulder getting her attention before they both headed home. \"So that was an odd night?\" Jake said as he and Anna walked in the door.\n\n\"A little, but she just seems the type who has a hard time making friends, but these little get-togethers sound like fun.\"\n\n\"Oh yeah, looks like she might have wanted to be more than friends there for a moment.\"\n\n\"Hey if she swings that way who are we to judge?\"\n\n\"But you're my wife.\"\n\n\"You aren't really worried about that are you?\"\n\n\"I suppose not, it would be nice for you to go and do something that wasn't work related for a change.\"\n\n\"Okay I know, I've been stressed out lately, but hopefully this will take my mind off things.\"\n\n\"Well if you are feeling stressed, maybe I can help with that,\" he said walking over to her and pulling her into his arms.\n\n\"I am very tempted, but also very exhausted Honey.\"\n\n\"Well, I need to get some alone time with you as much as I can before our new neighbor turns you into a man-hating feminist or a lesbian.\" He said jokingly.\n\n\"Jake, there is nothing she can do or say that will ever make me stop loving you, you hear me? You are my whole world, until the end.\" She said putting her hands on his cheeks.\n\n\"Poetic, but I know.\"\n\n\"Don't worry, I'll make it up to you,\" she said giving him a kiss before heading to the bedroom.\n\nJake had an erection that almost hurt against his pants. It started when he was at Venessa's which he thought was odd but figured it was just his mind wondering. He followed her to bed getting undressed before going to sleep. Anna was out cold rather quick but he still had a painful erection that didn't seem to want to stop.\n\n\"Great,\" he said before rolling over and going to sleep.\n\n------------------\n\nThe next day when Jake got home from work he saw Anna getting ready in the bedroom for her get together at Venessa's. As he walked in he saw her with her hair down and she was wearing a black dress that she usually wore to business dinners and other events but he couldn't help but check her out as she looked good.\n\n\"Damn, wished you dressed up like this for me,\" Jake said looking her over.\n\n\"Oh stop it, weren't you saying yesterday how I looked good with my hair a mess and in my work clothes.\"\n\n\"You do, but I do like some effort sometimes.\"\n\n\"Oh shut up, I don't know how late I'll be, not sure how many of the other girls are going but I am right across the hall if you need me.\"\n\n\"I'm a big boy, I can take care of myself.\"\n\n\"I know you can,\" she said walking over and giving him a kiss before heading for the door.\n\n\"There is a microwave pizza in the freezer, or you can just order something if you...\"\n\n\"Anna, I can feed myself, go have will you.\"\n\n\"Love you,\" she said blowing him a kiss before shutting the door.\n\nJake watched her leave before he looked at the living room. \"So what to do with my spare time,\" he said to himself as he went and grabbed a microwave pizza and turned on the TV. He flipped through channels for a while finding a few sitcoms to watch but after a while he found himself starting to doze off.\n\nHe looked down at his watch and realized it was after 9:00. He looked at his phone and hadn't seen any messages from her so he hopped up and poked his head out into the hallway. He walked up to Venessa's door and could hear a commotion on the other side. It sounded like multiple women chatting so he shrugged and went back to his place. He figured if the get together was still going on he would let Anna have her fun so he decided to head to bed.\n\nJake got into his boxers and a t-shirt and laid down. He played a few games on his phone for a while before finally closing his eye's and falling asleep. He wasn't sure how long he was asleep for before he suddenly awoke but wasn't sure why. The lights were off and it was quiet but he noticed someone standing in the doorway.\n\n\"Anna, what time is it?\" He asked still a little groggy from waking up. He looked up as he noticed her sliding off her dress figuring she was getting ready for bed but she began to crawl on the bed towards him as the light from passing cars shined in every now and then showing a lustful look in her eyes. \"Anna, are you okay?\" He asked before she lunged at him pressing her lips to his and pulling away the blanket covering him.\n\nJake was a bit confused but he found this very arousing. She pulled off his shirt and began to kiss his chest almost scraping her teeth along his skin as she did. She was acting almost like a wild animal in heat as her hands went and pulled off his boxer shorts almost ripping them as she did. He was still a little soft but was quickly getting hard as she grabbed his cock and began to suck on it.\n\n\"Shit,\" he blurted out as she had her way with his manhood.\n\nShe had never been this forceful before or direct. She always gave good head but this was different like she just wanted to fuck like crazy as her tongue bathed his member tickling every part of it making Jake moan out. He sat up as he felt her release his member and just continue to tease it with her tongue before she climbed back up towards him and impaling herself on his member.\n\nIt was all happening so quickly but it felt amazing. Her pussy was warm and tight as she started to slowly move her hips milking him until gradually getting faster. His hands slid up her body as he pulled himself up towards her kissing her again. She grabbed his shoulders digging her fingernails into his skin. Jake let out a slight wince of pain but everything felt so good he didn't want it to stop.\n\nHe grabbed her and turned her over putting her beneath him as he began to thrust himself into her. She let out a moan wrapping her legs around his waist as their lips met again. She actually bit his lips at one point which for some reason aroused him even more. There was no blood but it did hurt but he just wanted to continue to fuck her as he felt his balls begin to tighten.\n\nAs his cock slid in and out he knew he couldn't last much longer as he felt her tighten her grip around him. He gave one last deep thrust before he felt himself begin to drain his seed into her. She let out a moan as well which told him she too was climaxing as her breathing became more erratic before he collapsed on top of her.\n\nJake felt drained and exhausted but he couldn't remember the last time they had fucked that good. He looked up at her as she was still reeling from her orgasm until she opened her eyes and smiled at him. He kissed her again as he felt her fingers run through his hair. He eventually rolled to her side and they fell asleep wrapped in each other's arms.\n\n------------------\n\nThe next morning Jake awoke to the sun shining through the window. His alarm was going off as he quickly silenced. Anna was asleep with her head against his chest and he didn't want to disturb her but they both had to get ready for work.\n\n\"Anna, Babe, time to get up.\"\n\n\"Hhmmm, I don't want to,\" she said in a moaning voice.\n\n\"Me neither but it's time.\"\n\n\"Oh, fine,\" she said finally sitting up and stretching before looking back at him.\n\n\"So, had a good time last night?\" He asked.\n\n\"I did, I told you I'd make it up to you.\"\n\n\"Oh yeah, no that was great, but I was talking about the party.\"\n\n\"Oh, oh yeah that was fun, Venessa has this way with words you know.\"\n\n\"How so?\"\n\n\"Well at one point she was giving us all this empowering speech about being a woman, and to take our power back, it just got me so turned on.\"\n\n\"Well, in that case, you should keep hanging out with her.\"\n\n\"Oh I plan to, but don't worry, whatever feminist speeches she gives, you will reap the benefits,\" she said before leaning down and kissing him.\n\nShe rolled out of bed and headed for the shower. Jake went to get up but felt a little more tired than usual. He didn't think much of it as the sex they had last night was amazing. He shook his head regained his balance and followed her to the shower without giving it a second thought.\n\nAnna left before him as she had some stuff to do at the office. Jake got his stuff together and headed out the door only to see Venessa heading out as well. She looked at him and smiled as Jake did the same.\n\n\"Good morning Venessa, hope you are having a good morning.\"\n\n\"I am, thank you, Jake, I see you have some spring in your step today.\"\n\n\"Oh I do, say that is a beautiful necklace,\" he said seeing the large red gem around her neck. It had looked familiar but he wasn't sure why before he said: \"were you wearing that the other night?\"\n\n\"Sure you aren't looking for an excuse to look at my cleavage?\" She said in a playful voice.\n\n\"Oh, no no, my apologies, it just looks familiar but I'm not sure why...\" He stopped as there was a reflective light that hit him in the eye.\n\n\"Oh my, are you alright?\" She said seeing him pull away as if in pain.\n\n\"Huh, yeah just the light shined in my eye,\" he said blinking a few times.\n\n\"Sorry about that,\" Venessa said.\n\n\"Nope, my fault for looking at your chest,\" he said joking around. \"I am sorry though, didn't mean to make you feel uncomfortable.\n\n\"Not at all, I appreciate anyone complimenting my... jewelry,\" she said as if toying with him a little.\n\n\"I truly am sorry, this is all a bit awkward.\"\n\n\"Don't worry yourself over it, unless you want to take things a little further?\" She said stepping closer to him.\n\n\"Um, excuse me?\"\n\n\"You have a lovely wife, and I can tell how much you love her, but maybe there is something else you want instead?\" She said getting even closer as Jake could feel his heart racing.\n\nHe wasn't sure if she was serious or not but he couldn't deny home amazingly hot she was. As he stood there a strange feeling came over him as he saw him and Venessa from a third person perspective. They were in her bed or at least he assumed it was hers but they were both naked as she fucked him. He could almost taste her lips and feel the warmth of her pussy around his cock. It all happened in quick flashes but it felt strange but amazing.",
        "\"Woah, what the?\" He said as he was suddenly back in the hallway with Venessa standing in front of him.\n\n\"I'm sorry,\" she said with a laugh. \"I was just teasing you. Anna is a lovely woman, you hold on to her.\" She said with a grin before putting on her sunglasses and heading for the elevator.\n\nJake was a little confused by what he had just witnessed as he watched her leave. He went back into his apartment to get a drink and wrap his head around what he just saw. The light that hit his eye had made him feel strange all of a sudden. His head felt off but soon he just shrugged it off as he headed off to work.\n\n-------------\n\nThe next few nights everything seemed normal. He hadn't said anything to Anna about that strange vision as he was just trying to forget it. One night when he got home from work they decided to stay in and rent a movie. They ordered some food and got comfortable on the couch letting it start. They chatted for a bit about work and such like they always did before they really started paying attention to what they were watching.\n\nJake was starting to get bored but Anna seemed interested so he didn't say anything. As he sat there he noticed that she had placed her hand on his thigh which he didn't think much of at first. The movie went on but every few minutes he felt her hand slid up more. It was hard for him to pay attention to the film as her hand began to slide closer to his crotch every few moments. He wasn't sure if she was doing this intentionally or if she just wasn't paying attention but it was getting him turned on.\n\n\"Um, there something you want in there?\" He asked as she started to gently rub the bulge in his pants with her finger.\n\n\"Huh,\" she asked before looking down. \"Oh, I'm sorry, I wasn't even paying attention.\n\n\"No big deal, but if you want, maybe we can go to the bedroom and...\"\n\n\"No need,\" she said pausing the film.\"I'll take care of it for you,\" as she suddenly slid off the couch getting in front of him and opening his pants.\n\n\"Wait, what are you...\"\n\n\"This is my doing, so I'll fix it,\" she said sliding his underwear down and pulling out his erect cock holding it in her hand.\n\nShe began to gently stroke it which Jake was loving but this was very out of character for her. She suddenly spits on the tip before spreading it all over getting his cock lubricated and stroking it even more. Jake tilted his head back enjoying the attention until she began to tease his tip with her tongue giving it little flicks. She kissed the head a few times sucking on his foreskin before she lowered her mouth deeper taking his cock as far back as she could.\n\nShe grabbed his shaft and was in full control as she sucked him faster and faster. Her other hand began to gently stroke his balls which only added to the sensation as he squirmed on the couch. He could feel the cum ready to burst but couldn't deny how good it felt.\n\n\"Shit... Honey... I'm gonna...\" he said trying to warn her but she just moaned and continued to suck him off until he suddenly blew into her mouth.\n\nShe tightened her lips around his member and swallowed every single drop of cum which she had never done before. Every blow job she had ever given him was never that good and swallowing was completely out of the question but she was like a vacuum tonight. She finally released his cock and even licked it clean before wiping her mouth and closing his pants back up.\n\n\"Feel better?\" She asked before she cuddled up next to him an unpaused the movie.\n\n\"Yeah, but allow me to return the favor,\" he said leaning towards her before she put her hand up stopping him.\n\n\"I'm fine, just want to watch the rest of this,\" she said as Jake moved back over confused by the way she was acting.\n\n---------------\n\nThe next Wednesday night Anna headed over like before and Jake stayed home. He had begun to wonder what they all talked about over there but he didn't want to intrude at all. He knew Anna was having a good time and he wasn't going to do anything to interfere. \n\nIt wasn't long before Jake decided to make it an early night and head to bed. His head felt a little weird almost like it did back when that red jewel of Venessa's flashed in his eye. He changed his clothes and climbed into bed getting comfortable before quickly falling asleep.\n\nHis dreams suddenly felt weird as he was looking around a room full of woman. There was a red haze all over and it felt like he was drunk at a party or something but it reminded him of that weird fantasy he had in the hallway with Venessa. He soon saw Anna talking to her in the kitchen. She was pouring her a glass of some sort of red wine which Anna began to sip before seemingly getting a little drunk off it.\n\n\"You enjoy that my Dear Sweet Anna,\" Venessa said before she turned her attention towards Melissa a friend of theirs. \"Melissa, will you come with me a moment?\" She asked as Melissa followed her out of the room.\n\nAnna seemed to be sweating a bit as Jake noticed some of the women in the room had begun to make out. Anna just seemed to be getting very aroused but didn't seem to be with anyone and just began to touch herself a little as the passions in the room grew and grew.\n\nJake awoke covered in sweat and a huge boner beneath the blanket. He quickly turned and saw Anna was home standing in the doorway just like last week looking at him with lust in her eye's.\n\n\"Is that for me?\" She asked looking down at the tent in the blankets.\n\n\"Anna, I just had the craziest dream.\"\n\n\"Oh really, well let me give you better ones,\" she said pulling off the blankets and getting on top of him just like she had the week before and fucked him for a good hour or so until they both fell asleep.\n\n------------- \n\nThe next two weeks were very similar. Every Wednesday Anna would go to Venessa's with a bunch of the other women from the building. He would have similar dreams as well about Anna but sometimes about the other women as well. He began to think maybe his fantasies were starting to get the better of him.\n\nAnna would always come home from Venessa's and fuck Jake's brains out. It wasn't just on Wednesdays either as she just seemed hornier all the time and he loved it. He wasn't sure why she was like this but he also couldn't argue with the results. It was truly the best sex he and she had ever had. He even noticed a confidence boost in Anna like she didn't care about her appearance as much even though she looked amazing all the time.\n\nHe began to notice some strange things though. Anna was no longer wearing her glasses and claimed her eyesight was fine. He was happy if it was true but just unsure how it was possible. He also noticed she would leave the top buttons on her shirt open showing a little skin before she went to work. He enjoyed the view but couldn't help but start to wonder.\n\nOne day Jake was down in the front hallway of his apartment building heading out when he saw Trisha come walking past him. He knew Trisha a while and she was friends with Anna but what was strange was she walked by and smiled at him and he noticed that she looked incredible. Trish had always looked good but she looked younger and was wearing a skirt that he wasn't sure was even allowed where she worked. Her legs were flawless as he tried not to stare at them.\n\nHe didn't think much of it until he began to notice all the women in the building looked sexy as hell. They all just oozed sexuality in the way they dressed and acted. He also ran into his friend Evan who looked exhausted. He had bags under his eye's and looked like he hadn't slept in days as he was heading out the front door.\n\n\"Hey Evan, you feeling okay?\" Jake asked.\n\n\"Oh, hey Jake, yeah I'm good, just think I'm getting a cold or something.\"\n\n\"Oh, that sucks, maybe you should see a doctor?\"\n\n\"Maybe, but Melissa has been taking good care of me.\"\n\n\"Really, you two still having problems, I mean if you don't mind me asking?\"\n\n\"That's just it, ever since she started going to this wine with friends thing every Wednesday, she is like a different person, we have amazing sex all the time and...\"\n\n\"Woah, don't need the details.\"\n\n\"Sorry, but yeah it has been amazing, probably why I am so tired all the time, ha, well see you later Jake.\"\n\n\"Yeah, you too,\" Jake said surprised by what he had just heard.\n\nWhen he got into his car he took a look in the mirror and noticed bags under his eye's. Not as dark as Evan's but he was starting to wonder what the hell was going on every Wednesday night across the hall from him. He tried to convince himself he was over thinking it all but it was stuck in the back of his mind all day long.\n\nIt wasn't until that night he really began to worry. He had gotten home from work and Anna was there looking as good as ever. They didn't have sex as Jake said he was too tired, to which Anna was a little disappointed but still gave him the night to rest. This made him feel a little better seeing that his wife still cared about his health so he went to sleep.\n\nThat night he had a slightly different dream which was odd because it wasn't Wednesday but he saw Melissa and Evan. She looked so sexy as she seemed to be trying to seduce him wearing nothing but sexy lingerie and was kissing him passionately.\n\n\"Honey, I would love to but I am exhausted, I think I'm getting sick or something,\" Evan said.\n\n\"Oh, poor Baby, let me take care of you,\" she said as she slid down and pulled down his pants taking his cock into her mouth.\n\nJake was getting aroused watching this but it was weird and he didn't understand why he was suddenly fantasizing about Evan and Melissa's sex life. He watched her continues to suck his cock to the point he could almost feel it himself as Evan let out a moan.\n\n\"Is that better?\" Melissa asked still stroking his cock before pushing him down on the bed and quickly climbing on top of him.\n\nJake watched as Melissa began to fuck Evan like a wild cowgirl or something. It was so erotic and arousing to see but the longer it went on he suddenly found himself seeing it through Evan's eyes. He was looking up at Melissa as her eye's suddenly turned black as night and she sprouted fangs. Her hands began to turn into claws as he felt his orgasm getting closer.\n\n\"Oh shit, Melissa, what's happening to... Oh God... oh FUCK!\" Evan yelled as Jake suddenly sprung awake right around midnight, \n\nHe awoke to see red flashing lights through the window. He got out of bed and looked outside to see an ambulance and police cars outside. He saw a stretcher being rolled out with the face covered and he suddenly had a panicked feeling.\n\n\"What is it, Honey?\" Anna asked still half asleep.\n\n\"Stay here, I'm gonna run down and find out,\" he said throwing pants and shoes on before he grabbed his keys and ran downstairs.\n\nAs the elevator door opened he saw Melissa standing there in her bathrobe talking to the police. She had a strange look in her eye's almost as if there was no emotion. He figured it was just shock but still he wanted to know what happened.\n\n\"Melissa, is that Evan?\" He asked.\n\n\"Excuse me, Sir,\" a police officer said asking him to step away from Melissa so they could speak.\n\n\"What happened?\"\n\n\"You know Evan Summers?\" The officer asked.\n\n\"Yeah, we've lived in the same building for years.\"\n\n\"When was the last time you saw him?\"\n\n\"This morning, on his way to work.\"\n\n\"Did anything seem odd?\"\n\n\"He seemed tired, sick even, said he thought he was coming down with something.\"\n\n\"Did he say anything else?\"\n\n\"No, just that his wife was taking good care of him.\"\n\n\"In what way.\"\n\n\"Wait, do you think Melissa...\"\n\n\"We are just trying to get all the facts straight Sir, what did he say?\"\n\n\"He mentioned that she was, well, taking care of him, insinuating a sexual nature.\"\n\n\"I see,\" the officer said as Jake looked over and saw Venessa come out of the elevator giving Melissa a hug as if comforting her but Melissa still seemed to have no emotion in her face.\n\n\"Is she okay?\" Jake asked referring to Melissa.\n\n\"She seems to be in shock but yes.\"\n\n\"I see,\" Jake said as Venessa looked over at him and smiled a little before taking Melissa by the hand and leading her to the elevator. He thought about the dream he had but realized telling the cop about it would just make him sound crazy or worse. \"Is that all?\" He asked the officer.\n\n\"Yes Sir, but here, take my card, call us if you remember anything else.\"\n\nJake stood there for a while wondering what was going on before finally going back upstairs. When he opened the door he saw Anna standing there with a worried look on her face before walking over and hugging him. He held her tight in his arms for a moment.\n\n\"What happened?\" She asked.\n\n\"Evan, Evan's dead.\"\n\n\"Oh my God, how?\"\n\n\"I don't know,\" he said as she rushed to him and wrapped her arms around him.\n\nSo stroked his hair and comforted him for a few moments, but soon her hands began to move a little along his waist. She looked up at him kissing him to which he was a little confused by but he kissed her back. She opened up her robe showing off her naked body as they got more hot and heavy.\n\n\"Wait, wait, Anna, Evan is dead.\"\n\n\"I know, and it's sad, it just reminds us to enjoy life a little more,\" she said as Jake felt confused by what she was saying. \"You're upset and I want you to feel better.\"\n\nSomething wasn't right here but he wasn't sure what it was. \"I think you should skip your little get together tomorrow night.\"\n\n\"What, why?\"\n\n\"I just have this feeling,\" he said with worry in his voice.\n\n\"What, you think Venessa did this?\"\n\n\"What, No, I don't know what I think, but I just want you home okay.\"\n\n\"No, I can't, tomorrow is special!\" She said raising her voice a bit.\n\n\"Special, special how?\"\n\n\"I... I'm not sure, but I know it's supposed to be a special night. She even gave me the key to her place so I could bring over some stuff early and get things set up.\"\n\n\"What, why, what do you need to set up?\"\n\n\"Just bringing over some glasses and such, that's all.\"\n\n\"I see, I'm sorry, I would just feel better if you didn't...\"\n\n\"Jake, I am going and that is final!\" She yelled at him before closed her robe and stormed off and slammed the bedroom door shut.\"\n\nJake stood there for a moment trying to figure out what had just happened. He walked over to the bedroom door and heard her crying on the other side. He knew something wasn't right about all of this but he wasn't sure what, all he knew was he had to get to the bottom of it. Jake had decided to sleep on the couch that night. Wasn't his first choice but he didn't want to disturb Anna so he got as comfortable as he could to sleep for the rest of the night.\n\n---------------\n\nWhen morning came he awoke to see Anna standing over him with a smile on her face. \"Hey,\" she said placing her hand on his shoulder and helping him wake up.\n\n\"Anna, are you okay?\" He asked as he sat up a little.\n\n\"Yeah, look I'm sorry for how I acted last night, I know you are only just worrying about me, and I love you for it.\"\n\n\"It's been a crazy few weeks, people in the building acting odd, Evan dying, it's just a lot to process.\"\n\n\"I know,\" she said climbing on top of him straddling him. \"Let's make things simple again.\"\n\nShe leaned down and kissed him as at first all he could think about was the dream but soon he didn't care anymore. She pulled off her shirt off and was naked on top of him before she leaned down and began to kiss him again. He slid his arms around feeling her soft flawless skin as he quickly became aroused. This was still strange the way she was acting but he couldn't deny how much he wanted her right then and there.\n\nIt wasn't long before she was pulling off his underwear and letting his erect member slide inside her. Anna began to move her hips slowly just gently milking his cock. This was not the animalistic sex they had been having since her visits to Venessa's, this was more the woman he loved and had known for over a decade. Jake sat up taking her breast into his mouth kissing her skin and teasing her nipples with his tongue. His hands slid down around her ass as he squeezed it a little making her moan.\n\nHer hand slid through his hair before she wrapped her arms around his head. Her moans grew louder as she motioned her hips a little faster. She pulled his mouth from her chest and up towards hers tasting his lips. Jake looked up at the beautiful woman who was his wife and suddenly everything seemed right in the world.\n\nShe was absolutely breathtaking as her skin glistened with sweat. He noticed her breasts seemed perkier than before as his hands slid over them. He wasn't sure if it was his own imagination or if his wife was physically more attractive. It raised.more questions in his head but they faded fast as the feeling of her body against his was all he could concentrate on at the moment.\n\nThe pleasure grew between them both as he felt ready to burst at any moment. She held him tight against herself and he knew she was about to cum as well. He wrapped his arms around her waist as they both let out a loud moan and roughly the same time before his cock began to twitch and he began to drain his seed into the woman he loved. His cock burst much harder than it usually did and it felt amazing as she began to shake in his arms.\n\nThey both sat there wrapped in each others embrace for what seemed like a long time. Eventually, she looked down at him and pressed her lips to his before both laying down on the couch together. He held her tight and didn't want to let her go. With everything that had been going on lately he just wanted to hold onto his wife forever.\n\n\"I have to go to work,\" she said breaking the silence.\n\n\"I think I'm gonna call in, just take a day to recharge and wrap my head around everything.\"\n\n\"Okay, that's probably a good idea, you've seemed tired and stressed lately.\"\n\n\"Why don't you call in too, we can take a ride to the beech, just spend the day together?\"\n\n\"That sounds amazing, but I have too much work to do, and I still have to get to Venessa's early so...\"\n\n\"Oh, you're still...\"\n\n\"Jake, we've been over this.\"\n\n\"You're right, forget I said anything,\" he said as his hand slid along her leg. \"Just let her know that you're still mine,\" he said looking into her eye's.\n\n\"Jake, I will always be yours, I love you,\" she said before she pulled him in for another kiss that was long and passionate until she finally got up and headed for the bathroom.\n\nAnna got showered and headed off to work kissing Jake again before leaving. He sat at the kitchen counter for a long time trying to wrap his head around what was going on. He knew in his gut something wasn't right. This morning with Anna was perfect, it was the woman he knew and loved more than ever but last night the way she reacted when he asked her not to go to Venessa's was not her normal self.\n\nJust the way all the women in the building had been acting was bothering him. Seeing the emotionless look on Melissa after Evan died apparently in her embrace. He knew he looked ill when he saw him but couldn't believe that Melissa would have killed him but still something was very wrong.\n\nJake got cleaned up and saw the key to Venessa's apartment. He looked over at the glasses Anna had pulled out for tonight's party and got an idea but needed to wait. He walked over to the peak hole in the door and could just barely see Venessa's. He had to wait and hope she left her home at some point so he could get inside and see if he could find anything odd or at least something to convince Anna to stop going.\n\nIt was a few hours but he suddenly heard something in the hallway. He ran to the door and looked out seeing Venessa leaving her apartment and heading for the elevator. He knew this was his chance so he grabbed the key and the glasses and headed over.\n\nHis heart was racing but he knew he had to do this. He unlocked the door and headed inside gently placing the glassware on the kitchen counter before he began to look around. Everything looked the way it did the night they came over before. He knew e",
        "He had to be quick but he wasn't even sure what he was looking for.\n\nIt was then he noticed a bottle of wine on the counter. It was a deep red wine but the name was a little odd. He looked over the bottle and read the label that said: \"Essence of Lilith.\" It seemed like a strange name but then he looked over at the painting in the living room. The more he looked at it he began to notice something he hadn't before.\n\n\"It can't be?\" He said to himself as he realized that the creature in the painting looked just like Venessa and he remembered the story she had told them that first night. \"It's not possible, is it?\" The necklace she was wearing was the same red necklace that Venessa had been wearing, the one that had hurt his eyes that night he spoke to her in the hallway. \"Could it be?\"\n\n\"What is that?\"\n\n\"Oh shit!\" He yelled out turning around and seeing Venessa standing there looking at him with her arms crossed. \"Venessa, Okay, I know this looks bad.\"\n\n\"Well it doesn't look great anyway, my neighbor sneaking into my apartment while I am not here.\"\n\n\"I knocked first, but please let me explain, Anna had a key and said she had to bring some stuff over for tonight,\" he said pointing over at the glassware he left on the counter. \"I took the day off and figured I'd help her out, that's all, and I got lost looking at that painting again.\"\n\n\"It is a beautiful painting isn't it,\" she said as she began to slowly walk towards him. \"Why did you take the day off?\"\n\n\"Oh, well I haven't been feeling great and with what happened to Evan, just tells me to rest and take care of myself.\"\n\n\"It was tragic what happened to him.\"\n\n\"How is Melissa, I saw you consoling her last night.\"\n\n\"She will be okay, it will take time,\" she said still staring at him.\n\n\"Yeah, well, once again, I am sorry for the intrusion, here is the key back,\" he said handing it to her.\n\n\"That's alright, please bring it back to your lovely Anna, I know you were just trying to be a good husband and help her.\"\n\n\"Well, I...\" he said before Venessa suddenly pressed her lips to his pushing him back against the counter.\n\n\"Woah, Venessa, what are you...\"\n\n\"You want this Jake, just give yourself to me, it will be better than the alternative.\"\n\n\"What are you talking about?\"\n\n\"Just trust me,\" she said kissing him again. \"One moment of passion with me could save you much pain,\" she said rubbing the front of his pants. \"Very few men have ever aroused my interest, I want you, just give in, and it will be the most amazing moment of your little insignificant life.\"\n\nJake suddenly had a vision just like his dreams and the one the day he stared into her necklace. They were in her bedroom as he was laying on the bed and she standing next to it. She removed her clothes before climbing on top of him kissing his lips before working her way down his chest. He was naked and could feel her warm lips on his skin as she worked her way further down. \n\nShe hovered above his cock which was fully erect and already dripping with precum. He could feel her breath against it as she stuck out her tongue which seemed unnaturally long as it slithered around his member. It felt amazing as his cock was covered in warm slimy spit before she wrapped her lips around it and began to suck him off.\n\n\"This is what you want Jake,\" she said removing her lips for a moment before going back at it again. Just give in and let me pleasure you, you have no idea what I can do to you,\" she said before she began to work on his cock again.\n\nShe crawled up towards him and teased his cock with her pussy. She would let his tip enter just a little and then pull away leaving his cock wanting more only to tease him again. Her pussy lips almost seemed to suck on his cock a little like it was kissing the head every time.\n\nAfter torturing him for what felt like a long time she finally lowered herself onto his waiting member. Jake let out a gasp as it felt incredible as her body rested against his. Every tiny motion of her hips sent him into ecstasy as he moaned beneath her. \n\n\"My necklace gave you this power to see, it was not my intention but I can make this last as long as you want, an eternity of pleasure, you will die in the end but you will be more satisfied than any mortal man has ever been, just give in to me, give in to your lust!\"\n\n\"Oh fuck, no,\" he yelled out as he was standing in the kitchen again with Venessa standing in front of him with her hand gently around his cheek. \"I can't!\" He said as he backed away from her. \"I love Anna, she is my everything, I would do anything for her,\" He said in a stern voice looking her in the eye.\n\nVenessa gave him a sexy smile kissing him one more time before she said: \"And you will,\" as she turned and walked towards the bedroom looking back at him and wiggling her ass a little. \"One last chance,\" she added before she was out of sight.\n\nJake quickly headed for the door and left. He got out into the hallway and decided to head to his car. His heart was racing as he felt like something was very wrong now and if Venessa was what he thought she was this was a bigger deal than he could have imagined. \n\nAs he got to the elevator he saw the door across open and Janine standing there. He didn't know her too well but knew who she was. He went to wave but noticed she was glaring at him in a way that gave him chills. He also noticed that she looked amazing compared to the last time he saw her. He watched her until the doors closed.\n\nWhen he got out at the bottom floor he saw Tina, Casey, and Aisha all standing there having a conversation but as soon as he stepped out of the elevator they all stopped and stared at him with that same glare Janine gave him upstairs. They all looked very sexy as well and Jake was starting to feel worried as he quickly walked past them and headed for his car.\n\nOnce he got in he pulled out his phone and began typing in Lilith trying to find out about that wine. He couldn't remember the exact name but when he started typing something popped up. \"Lilith's Erotic Emporium\" was the first thing on the list. He didn't pay it much mind at first until he noticed a name in the comments section.\n\n\"Yeah I went to this place to check it out and it is weird, not your average sex toy shop, but the owner Nessira is a sweetheart and absolutely gorgeous!\"\n\nThe name Nessira rang a bell in Jake's head. He remembered Venessa mentioning the name in the story she told. Nessira was the true daughter of Lilith. As weird as this all sounded it couldn't be a coincidence but he saw that the shop was only 7 miles away so he headed there hoping to find some answers about what is going on here.\n\n----------------\n\nThe store was odd as he walked in the front door. There were strange statues and plants all around. Small stones with strange symbols on them covered a table to his left. What looked like dream catchers hung from the ceiling and he noticed a blonde woman standing behind the counter reading a book.\n\n\"Um, excuse me,\" he said getting her attention as she looked up and smiled. She was rather breathtaking to look at so he asked: \"are you Nessira?\"\n\n\"Nope, I'm her daughter, Shadow.\"\n\n\"Shadow, unusual name for such a pretty woman,\" he said to her.\n\n\"Look, I love flattery as much as the next woman but why are you looking for Nessira?\"\n\n\"I have a question, about a wine, called, Lilith, or um, what was the name, Essence of Lilith?\"\n\nShadow got a little wide-eyed before Jake suddenly felt something bash him over the head from behind him. He quickly went down to the floor and was out cold. He wasn't sure how long he was out before he awoke in a dark room tied to a chair with a person standing in the shadows in front of him.\n\n\"Ouch, what the hell?\" He said as his head hurt.\n\n\"What do you know about The Essence of Lilith?\" A woman's voice said.\n\n\"Is this really necessary?\" He asked.\n\n\"Look you can either die from pleasure or pain, the choice is yours but do not lie to me!\" She said before walking into the light.\n\nJake looked up at this beautiful red-haired woman before him knowing this must be Nessira. \"Are you Nessira, daughter of Lilith?\"\n\n\"How do you know that?\"\n\n\"Look, I need your help,\" he said struggling to get free.\n\n\"Nobody here can save you from me!\"\n\n\"No, you don't understand, my wife, something is wrong with my wife.\"\n\n\"See a marriage counselor.\"\n\n\"No dammit! Some woman moved into my building and now all the women have been acting weird, a friend of mine even died, I am seeing strange visions and my wife isn't acting like herself, I need to save her, they have all been drinking something called Essence of Lilith, a sort of red wine and...\"\n\n\"Are you certain, it said Essence of Lilith?\"\n\n\"Yes, I saw the bottle quickly before she came home and caught me snooping around her apartment.\"\n\n\"What is her name?\"\n\n\"The woman, Venessa.\"\n\n\"No, her real name, have you heard it?\"\n\nJake thought for a moment about the painting before he said: \"Vylerris.\"\n\nNessira stood there with a shocked look on her face but silent. Jake looked up at her and she could notice the bags under his eye's and the weakness in him and knew exactly what was happening. His life force was being drained slowly by a woman who was becoming a succubus, his wife she assumed.\n\n\"Your wife is in great danger,\" she said before untying him and helping him up. \"And so are you, come with me.\"\n\nJake followed her back into the shop as he put his hand on the back of his head feeling a little blood from where he had been hit. \"What the hell did you hit me with?\"\n\n\"Never mind that, your wife is slowly killing you.\"\n\n\"What, what are you talking about, she would never...\"\n\n\"She doesn't even know she's doing it, you have been tired, feeling run down lately yes?\"\n\n\"Um, yeah why?\"\n\n\"And she has been very sexual lately, more than usual?\"\n\n\"What is your point?\"\n\n\"Your wife is becoming a succubus, a minion of Vylerris, and soon she will be a creature whose sole purpose is to fuck and feed, you will most likely be her first victim.\"\n\n\"This is crazy!\"\n\n\"Is it, you came here looking for the daughter of Lilith, which tells me you already know how crazy this is, the wine you mentioned, it was used back in the day to corrupt women, turning them slowly into succubi, that is what is happening to them all, unless Vylerris finishes their transformation herself.\"\n\n\"Well, what can I do?\"\n\n\"You have to get her away from there before it is too late, you have to leave today, bring her here, I may be able to reverse the process if she's not too far along, but first put this on,\" she said tossing him a condom.\n\n\"Um, what?\"\n\n\"It'll protect you from her feeding.\"\n\n\"Oh, okay?\" He said putting it in his pocket.\n\n\"No, you need to put it on now,\" Nessira said turning towards him.\n\n\"What, but I'm not... oh shit!\" He said as Nessira held out her hand and Jake felt his cock tingle and become erect in his pants. \"What the... how are you...\"\n\n\"Put it on now!\"\n\n\"Do you have a restroom I can...\"\n\n\"Jesus Christ,\" she said walking over and quickly opening his pants letting his erection flop out.\n\nJake felt a little violated as she opened the package and slid the rubber over his erect cock and then walked away. Jake looked down and watched as the condom seemed to suddenly burn away make his penis tingle as he had just got shocked or something.\n\n\"What the hell just happened?\"\n\n\"Something that may just save your life.\"\n\n\"Oh, okay?\" He said tucking his penis back in his pants. \"Please come with me, I need your help.\"\n\n\"I cannot, Vylerris is a daughter of Lilith.\"\n\n\"But you are THE daughter of Lilith, please, I need to save her.\"\n\n\"I swore I would never cross the daughters of Lilith, I cannot break my vow, they leave me alone as long as I do the same,\" she said turning towards him. \"I feel for you I do, to see the woman you love be corrupted and you feel helpless to stop it, but I cannot put my family at risk to save yours.\"\n\n\"This is crazy, but fine, I will save her myself.\"\n\n\"You love her don't you?\"\n\n\"What kind of question is that?\"\n\n\"The kind you haven't answered yet.\"\n\nJake stood there as this red-haired woman glared at him. \"More than anything.\"\n\n\"Then take this,\" she said handing him a knife with a gold handle.\n\n\"What is this?\"\n\n\"A blade that can kill a succubus.\"\n\n\"You want me to kill Vylerris?\"\n\n\"If you can, you may have to use it on your wife instead if you're too late.\"\n\n\"Don't say that, I would never...\"\n\n\"Then go and rescue your bride,\" Nessira said giving him a peck on the cheek. \"Take this as well,\" she said handing him a small tablet.\n\n\"What is it?\"\n\n\"If you find yourself in a tough spot, throw it on the ground.\"\n\n\"Okay?\" \n\n\"Just trust me, I truly want you to succeed.\"\n\n\"Well, thank you,\" he said before turning towards the door.\n\nNessira watched him get into his car and head back as Shadow stood there confused. \"You aren't going to just let her do this are you?\"\n\n\"You know the rules Shadow,\" Nessira said not looking at her daughter.\n\n\"When the hell have you ever cared about the rules Mom!\"\n\n\"When my families safety is at risk!\" She said in anger before marching upstairs.\n\n--------------\n\n\"Come on, pick up the phone dammit,\" Jake said as he was trying to call Anna but wasn't getting through. \n\nHe was heading home hoping to catch her before she got home and get her as far away from this place as he could. He was about halfway home when he suddenly had another vision. He saw Anna walk into their apartment and look at her phone seeing the missed calls from Jake. It came in flashes and it was hard for him to concentrate on driving but he couldn't stop them.\n\nAnna stood there looking at her phone seemingly struggling with calling him back but she eventually put the phone on the counter and headed to Venessa's apartment. This left a sinking feeling in Jake as she didn't seem to be herself or even fully under her own control but he pulled over to the side of the road as the images became stronger.\n\nAs Anna walked into Venessa's apartment all the ladies were there wearing matching dresses as Venessa said: \"ah, ladies, our guest of honor has arrived.\" The other woman seemed to clap as Anna walked towards them seemingly in a trance. \"My Dear sweet Anna, are you ready to become what you were truly meant to be?\"\n\n\"Yes,\" Anna said as she approached Venessa who took her by the hand and lead her to her bedroom.\n\nThe rest of the images came in bursts as he saw Venessa walk up behind Anna and begin to undress her while kissing the side of her neck. Jake couldn't stop these visions as he was both disgusted and aroused by what he was seeing. Now naked Anna laid down on the bed as Venessa's eyes turned solid black before she climbed on top of her kissing her passionately. Anna seemed to be enjoying this as Venessa began to work her way down Anna's body licking her breasts with a tongue that seemed long and inhuman.\n\nJake was angry with how turned on her was seeing this but he couldn't stop it. Venessa worked all the way down to Anna's pussy teasing her clit with that tongue before slithering it deep inside her. He heard Anna moan being fucked by Anna's tongue and squirming in the bed. It was hard to watch but sexy as hell as he was force-fed these images of his wife.\n\nVenessa pulled her tongue away and glared at Anna's dripping slit with a smile on her face. Jake could see her eyes were still black and she had fangs in her mouth before she began to breathe out this strange red smoke that began to flow into Anna. Jake watched his wife squirm and moan as this red mist entered her body until she suddenly opened her eye's which had now turned black just like Venessa's.\n\n\"No!\" Jake yelled out as the vision had finally seemed to stop.\n\nHe quickly began driving again trying to get home as soon as possible. When he finally got there he saw Anna's car. He didn't even wait for the elevator and just ran upstairs and to his door. He didn't see a soul in the building as the lobby and the halls were empty. He got to his door and went to get his keys before he realized it was unlocked. Opening the door he rushed in and saw Anna sitting on the recliner in the living room looking at him. \n\n\"Anna, you're here, are you okay?\" He asked hoping none of the visions were true.\n\n\"Of course I am, I got your message so I waited for you.\"\n\nHe ran over to her as she stood up and he kissed her. She wrapped her arms around him and kissed him back as he was just so happy she was home and began to think the vision was something that hadn't happened yet like the ones with him and Venessa.\n\n\"I'm so happy your home, I tried to call you over and over but...\"\n\n\"Sshhh,\" she said putting a finger on his lips before kissing him again. \"I'm here, everything is fine.\"\n\n\"Look, we need to leave now, there's a place I need to take you right now, please just trust me.\"\n\n\"You're my husband, of course, I trust you, I love you,\" she said as she began kissing him again more passionately before pushing him down on the couch and quickly climbing on top of him.\n\n\"Woah, Anna, we don't have time to...\" he was interrupted by her lips against his as she reached down and began to open up his pants. \"Anna, Honey, wait!\"\n\n\"I want you,\" she whispered before sucking on his bottom lip. \"Do you not want me?\" She asked with a sad look in her eye's before she ripped her button-up shirt open and showing off her breasts in his face. She was not wearing a bra and he couldn't help but want to fuck her so badly but he knew it was not a good idea. \"Do you not desire my body?\"\n\n\"Anna, I want you more than anything, but we have to...\" he stopped as her finger pressed against his mouth again.\n\nShe quickly got his cock out and began to stroke it gently with her fingers before guiding it into her waiting pussy. As aroused as he was he suddenly began to realize that maybe he was too late to save his wife and too late to stop what she was about to do to him. He began to understand what Evan probably felt before he died, he couldn't resist the woman he loved just as he can't resist Anna, she is his wife, she is the most beautiful woman in the world to him and if he was going to die he couldn't think of a better way to go than to be fucked to death by the love of his life.\n\nHer pussy felt like heaven as it slid up and down milking his cock. He had no choice but to give in and enjoy the moment as Anna felt amazing on top of him like every stroke of his cock was pure ecstasy as she moaned and moved up and down. He buried his face in her chest sucking on her nipples and kissing them as well.\n\nHe suddenly looked up and was shocked by what he saw. Anna had begun to change right in front of him. Her eye's turned very dark and she had what looked like fangs for teeth. Two small horns had sprouted from the side of her head curling backward before two large wings sprouted from her back. He felt claws on his shoulders as her hands turned black with long fingernails.\n\n\"Anna, I love you,\" he said as he felt ready to pop at any moment and hoped that deep down she was still in there.\n\nHe felt her lips press against his again as her rhythm quickened on his member. He felt an orgasm building that was stronger than any he had ever felt before. Time seemed to slow down a little as he felt lightheaded before he felt his cock erupt inside her. A rush went through his body as he had never cum so hard in his life. Anna let out a scream like a banshee as her pussy tightened around his member and sucked up every last drop.\n\nJake was winded as he sat there but he was still alive. He suddenly remembered the condom Nessira had put on him and realized what she had meant but saving his life. He looked up at Anna who still looked inhuman as she writhed on top of him. Soon she looked down at him with those dark eyes and climbed off of him. The door suddenly burst open and Venessa and the other ladies came barging in as Jake struggled to pull his pants up as he jumped off the couch.",
        "\"He is still alive?\" Venessa said looking over at Jake.\n\n\"I don't know what happened Vylerris, when his orgasm hit I felt nothing,\" Anna said in an almost inhuman voice.\n\n\"So, a protection spell, no matter, we will just have to kill you the old fashion way,\" Venessa said as all the woman began to sprout claws and wings before surrounding him. \"I could have saved you this pain Jake if you had only given in and let me have my way with you.\"\n\nJake looked over at Anna as she glared at Venessa for a moment as if bothered by what she had just said before she joined the crowd ready to kill him. His heart broke at what his wife had become but he couldn't give up yet. He reached into his pocket and found the tablet Nessira had given him. He quickly threw it on the floor and it created a large flash of light. All of the women fell to their knees in pain including Venessa as Jake grabbed his keys and ran out the door. \n\nHe didn't know how long it would take for the effect to wear off but he got into his car and headed back towards Lilith's Emporium hoping maybe there was more Nessira could do or at least protect him until he thought of a plan. \n\nIt was miles of dark road and there was nothing following him. He breathed a sigh of relief thinking maybe he had escaped. He was about a mile away from the store when he thought he saw something. It looked like a bird fly overhead but bigger than usual. He didn't think much of it at first until it landed on the hood of his car.\n\nWith a loud bang, this heavy creature crushed the front of the car screeching it to a halt. Jake was sore from the accident before he looked up and saw the creature that was once Anna glaring at him before ripping off the windshield and pulling him out of the car.\n\nJake was thrown to the ground with a thud. He heard Anna land behind him as he tried to crawl away but he soon felt something grab him and pick him up before grabbing him by the throat and lifting him in the air. He struggled as his feet lifted off the ground and he looked down at the beast in front of him.\n\n\"Anna... please...\" he choked out as she squeezed his neck. \"You said... you'd never...for...get.\"\n\n\"What?\" She growled at him dropping him to the ground before pushing him up against a nearby tree. \"Begging for your life mortal?\" She said almost as if she didn't remember who he was.\n\n\"You said,... no matter what,... you would never forget... that you loved me,\" he said still struggling to breathe. \"please tell me there is still a part of you that remembers that, that you remember us, that I love you?\"\n\nShe stuck one of her claws into his shoulder as she growled even louder. She looked ready to kill him and he waited for the end. His wife was truly gone and had been replaced by this creature. He tried to get through to her but the pain he was feeling as her claw went deeper did more than hurt physically but it killed him emotionally as well.\n\n\"Just do it,\" he said waiting for the end as her teeth were inches from his face. \"If you're truly not the woman I love anymore, then just kill me now!\"\n\nHe closed his eyes and waited for death unsure of what was going to happen. He felt her claw pull out of his shoulder causing him to open his eyes and kneel down in pain. He looked up at the demonic creature standing over him looking down with those same cold eye's. He was still waiting for her to finish him off but she hadn't yet and he didn't know why.\n\nShe pulled him back to his feet still glaring at him with those lifeless black eyes. Before he could react or say anything she reached out and wrapped her arms around him. He felt her grip around him tighten before she took off into the air carrying him into the night. Everything became foggy after that and he passed out from the pain.\n\n----------------\n\nJake awoke feeling groggy as he looked around the room. He was in Venessa's apartment as all the women she had corrupted stood around him as he was tied down to a table. Anna stood there looking human again and wearing a very revealing red dress and holding the knife Nessira had given him.\n\n\"Ah, Anna, I see you have brought back Jake, there's a good girl,\" Venessa said as she caressed Anna's cheek.\n\n\"What have you done to her?\" Jake said in a stern tone.\n\n\"I have freed her, from everything holding her back in life, her mortality, even you,\" she said to him.\n\n\"Anna, Anna I still love you!\"\n\n\"Of course you do, she is a prize catch, too good for cattle like yourself.\"\n\n\"Coming from the women who tried to seduce me?\"\n\n\"I was tempted, it's been so long since I felt a man inside me, your strength is impressive for a mere mortal,\" she said as she began to rub the front of his pants. He noticed Anna look up as if bothered by this until her eyes went back down. \"But no matter, you had your chance.\"\n\n\"So what happens now?\"\n\n\"You are going to die, painfully now,\" she said turning back towards him. \"You could have died being fucked by a Goddess like myself, but when you refused you were supposed to die in the loving sexual embrace of your wife, but you screwed that up by dealing with that little Witch Nessira, all those chances for a pleasurable death and you have chosen pain.\"\n\n\"Anna, listen to me!\" He pleaded as she stood there looking at the ground.\n\n\"She is mine Jake, she is no longer your slave.\"\n\n\"You said to me you would always be mine, and that you would always love me!\" He said as Anna finally made eye contact with him.\n\n\"Silence,\" Venessa said slapping him across the face. \"You are going to die, and Anna is going to do it with the same knife you brought with you to kill me with,\" she said grabbing him by the jaw before she turned towards his wife. \"Come here, my dear.\"\n\nAnna walked over with the knife in her hand obeying Venessa's command. Jake looked around the room at all the women in there. He saw Melissa standing nearby watching what was going on with no emotion in her eye's as Jake realized she really did kill Evan. \n\n\"Melissa,\" he said trying to get her attention as she turned away from him. \"Evan's death wasn't your fault!\" He said trying to get through to her as well.\n\n\"These are my children Jake, Melissa, now your lovely Anna, besides haven't enjoyed what I've done to her, I've heard your moans of pleasure nightly, and Evan died a much better death than he deserved, but now it is time for your lively wife to finish the job,\" Venessa said as Anna held the knife tightly.\n\n\"Yes Vylerris,\" Anna said saying her true name before holding up the knife.\n\nJake knew he had done everything he could to stop this but it had done him no good. He watched as she positioned her arm ready to jam the blade into his chest and his heart broke seeing what his beautiful wife had become. He had failed to save her or any of the others and this was the last thing he was going to feel before the end.\n\n\"Do it my child, and take your place as my number 1, my sweet Special Anna,\" Vylerris said in her ear.\n\n\"Do it Anna, but just know, I still love you,\" Jake said before he closed his eyes and waited for the end.\n\nAnna stood there holding the blade in her hand as she felt Vylerris standing behind her whispering in her ear to do it. She looked up into Jakes' eyes just as he opened them again seeing a tear ran down her cheek. Vylerris could sense her hesitation and was getting angry.\n\n\"Dammit, girl, Do it!\" She commanded.\n\nAnna lowered her hand as tears ran down her eye's. \"I cannot.\"\n\n\"You useless Bitch,\" Vylerris said slapping Anna knocking her down. \"Fine, then you will watch me fuck you pitiful husband until I have had my fill, then I will rip his heart out and make you watch it stop beating in my hand,\" Vylerris said as she began to transform in front of them all growing her wings and sprouting her fangs.\n\n\"You fucking Bitch!\" Melissa yelled as she suddenly jumped onto her back and held her to Vylerris's surprise.\n\nAnna quickly jumped up seeing what was happening and with little hesitation, she took the blade and used the distraction to jam it into Vylerris's chest right through her heart. All the women gasped seeing what had just happened and soon confusion filled the room. Vylleris fell to her knees looking up at Anna with a look of shock on her face as Anna backed up towards her husband.\n\n\"I had such high hopes for you, you were so... Special,\" Vylerris said as blood dripped from her lips.\n\nEveryone in the room had a look of confusion on their face almost as if they didn't know what had been going on for the past few weeks. Anna quickly untied Jake and kissed him throwing her arms around him as he did the same.\n\n\"I'm sorry,\" she said sobbing against him.\n\n\"It's okay, your okay.\"\n\n\"I love you Jake,\" she said before kissing him again.\n\nMelissa stood over her Venessa before taking the knife out and stabbing her again over and over. \"You fucking bitch, Evan is dead because of you, I fucking hate you!\" She yelled as the Venessa fell dead before her body dissolved into dust and Melissa fell to her knees and began to sob uncontrollably.\n\nAnna let go of Jake and went to tend to Melissa hugging her and trying to comfort her the best she could. Most of the women headed for the door all feeling confused and ashamed as if Vylerris's hold on them was suddenly broken and they didn't know what to do or want to talk about it. A few stayed behind to help console Melissa.\n\nJake looked over at the painting on the wall of the daughter of Lilith. He felt a small victory but seeing Melissa who now had to live with the guilt of what she had done and he also had no idea what toll this was going to take on Anna as well but at least for the time being it was over.\n\n-------------------------\n\nIt had been a week since everything had happened and Jake was standing in the kitchen with Anna. She seemed her old self again, still looking just as good as ever but her sex drive was diminished as they hadn't had sex since that day. Given everything that had happened sex wasn't really the first thing on their mind but in a way, he was happy about it because at least she wasn't under any sort of supernatural influence anymore. He assumed that when Vylerris died all of the physical effects she had on the women died with her.\n\nThey had just gotten back from Evan's funeral. Jake's arm had been sewn up and in a sling from the damage caused by Anna's clawed hand that night which he never mentioned the pain he was in as he didn't want to make her feel bad. It didn't hurt as much anymore anyway but she hadn't talked much since that night either but he knew she had been through a lot.\n\n\"It was a nice service, I just hope Melissa will be okay,\" Jake said breaking the silence.\n\n\"Me too, it must be hard, that could have been...\" She said before stopping herself.\n\n\"If it was, there probably wouldn't have been a funeral, I just wish I could have done more\"\n\n\"It wasn't your fault Jake, you were the only one to figure this out at all, you and every other man in the building could have died if you hadn't done what you did.\"\n\n\"All I did was get through to you,\" he said walking over and taking her in his arms. \"You came back to me.\"\n\n\"I will always come back to you, and I will always love you.\"\n\n\"Venessa made a mistake too, her necklace, I stared at it once and then I started seeing visions, like her seducing you, Melissa killing Evan, everything, it's how I knew something was wrong, I am just not sure if it actually was a mistake or not.\"\n\n\"Just be thankful that it is all over,\" she said pulling him down and kissing him.\n\nIt was a gentle peck at first but then he looked into Anna's eyes as she held on to him. For a moment he was happy again having his wife in his arms not wanting to let her go again as she smiled up at him and stared at him with those beautiful eyes of her. He leaned in and kissed her again.\n\nIt lasted for a moment or two before she began to pull him in even tighter. Their kiss grew more passionate as both of them didn't want to admit how badly they wanted each other ever since the night Venessa died and all of that was bubbling to the surface right here and now as he picked her up and put her on the counter. The pain in his shoulder was barely noticeable when he picked her up but he didn't care anyway as his lust was overpowering his pain.\n\n\"Oh my God, I want you so fucking bad right now,\" she said as she nibbled on his ear and kissed the side of his neck.\n\nJake smiled before sliding his hands up her skirt and pulling off her panties. He kneeled down sticking his head between her legs kissing her inner thigh even sucking on the skin leaving a small hickey there before he began to tease her clit with his tongue sucking on it as she ran her fingers through his hair. She let out a yell as he continued to tease her not caring the fluids from her pussy were dripping on the counter.\n\n\"Oh fuck yeah Baby,\" she said leaning back against the wall enjoying everything he was doing to her. \"Oh, God!\"\n\nShe suddenly made a noise that almost sounded like a growl as he pulled his lips away and looked up at her. \"What was that?\" He asked.\n\n\"Huh, I'm sorry, I must have snorted,\" she said feeling a little embarrassed.\n\n\"Well, let's see if I can make you scream,\" he said scooping her up in his arms and carrying her to the bedroom.\n\nHe laid her down gently on the bed as he lifted her skirt up even higher before burying his face between her legs again. He pussy was dripping wet at this point as he did everything he knew she liked making her squirm uncontrollably. Her moans were music to his ears to the point she even began to squeak a bit bucking her hips as he relentlessly pleasured her with his mouth.\n\n\"Oh Fuck!\" She yelled out as Jake felt her fluids roll down his chin staining the mattress beneath her but not stopping.\n\nHe continued to attack her pussy making her moan louder and louder wanting her to cum as many times as he could make her which didn't seem too difficult. She suddenly loud a scream as her fluids sprayed even harder in his face.\n\n\"Did you like that?\" He asked wiping his face as she was breathing very heavily and sweating through her clothes.\n\nShe grabbed him and pulled him up towards her kissing him as she was quickly trying to get his pants off while ripping off her clothing as well. Her skin glistened from sweat and other fluids as she pushed him down against the mattress with force. She began to grind herself against his cock getting it good and wet from the moisture of her pussy. \n\nJake moaned at the sensation before his cock was so lubed up it just slid inside her with ease. \"Now fuck me,\" she said with a deep voice as she began to milk his cock between her legs.\n\nThe deeper voice threw him off a little but he didn't care as she grabbed his button up shirt and ripped it open sending buttons flying. He pulled himself up towards her starting to lick the sweat off her breasts while she continued to bounce up and down in his lap. Her hair was soaked as she was sweating a lot but it didn't matter to him as he sucked on her nipples while grabbing her breast as well.\n\n\"That's it, oh Fuck!\" She moaned out leaning back a little but still moving her hips.\n\nJake was enjoying this as he still worked on her beautiful breasts. He teased her nipples even more enjoying the saltiness of then and hearing her moans of approval. He kissed her neck as she was still arched back moving her hips in a way that felt amazing.\n\nHer moan suddenly sounded deeper as he heard another growl like before. Before he could comment he suddenly noticed something strange as well. Her pussy suddenly felt tight around his cock like it was gripping it. It felt very good but also a little strange at the same time because it didn't feel natural. Her breathing got heavier as she still was arched back milking his member wildly.\n\n\"Oh shit, Anna,\" he said as she suddenly pulled herself back towards him and glared at him with black eyes. \"Oh fuck, shit, Anna?\"\n\nShe didn't answer and just pushed him down against the mattress leaning forward and licking his face with a lanced tongue. She shoved it in his mouth before bringing her lips down connecting in another passionate kiss. As she pulled away she sucked on his bottom lip as her hands came up looking black and clawed again.\n\n\"Oh God, Anna, No!\"\n\n\"Shhh, just relax,\" she said as he began to feel his orgasm approaching. \"Just give yourself to me!\"\n\n\"No, it can't be, we killed Venessa!\"\n\n\"Yes we did, she said I was special, but she should have known that you are mine, always mine,\" she said in an inhuman voice before pressing her lips to his again.\n\nHe didn't know what to do or if there was anything he could do as she continued to milk his cock sprouting her wings and showing off her full succubus glory which for some reason only aroused him further. She was a Goddess on top of him and soon it didn't matter what was going to happen as his cock began to twitch inside her.\n\n\"Fu...uck!\" He yelled out. \n\n\"Yes my love, just give yourself to me, there is nothing to worry about, there is only pleasure!\"\n\nHe suddenly and violently came much harder than he expected feeling his cum drain into her while she screeched like a banshee in the night sucking up every last drop. She continued to move her hips making him cum even more as she looked down at him with those cold dark eyes smiling at him showing off the long fangs as she lowered herself down towards him.\n\n\"Oh My God!\" He yelled suddenly sitting up in his bed confused as she was no longer on top of him.\n\nAs he looked around Anna was sleeping in the bed next to him and looked completely normal. He was naked and there were stains and other evidence that they had just recently had sex including his flaccid penis that just felt used up but something was very wrong.\n\n\"You okay Baby?\" Anna said as she awoke with a confused look on her face sitting up to check on him.\n\n\"Anna, did we, are you, I just had a crazy dream and...\"\n\n\"Sshhh, it's okay,\" she said putting her hand on his chest and guiding him back down against the bed. \"Just relax, we've been through a lot but everything is okay,\" she said giving him a soft kiss on the lips while still rubbing his chest. \"I'm here, you are okay,\" she said again before laying her head down against his chest.\n\nJake took a deep breath and calmed himself thinking it was just a dream. Anna saw his flaccid penis sticking out as the blanket had slid off of him. She ran her hand down to gently touched it seeing a small orange spark when her finger caressed it being caused by the protection spell Nessira had put on him with the condom.\n\nSeeing this and knowing what it was she smiled as her eye's turned black again but unseen by Jake. \"Everything is going to be okay Honey,\" she said as kissed his chest resting before resting her head on him again and falling asleep wrapped in his arms."
    ],
    "authorname": "maestro84",
    "tags": [
        "eating out",
        "female transformation",
        "husband wife sex",
        "loving wife",
        "erotic horror",
        "sexual visions",
        "succubus",
        "wife transformation",
        "wife corruption"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/liliths-emporium-the-neighbor"
}