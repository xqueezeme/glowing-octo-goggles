{
    "title": "The Guidance Counselor",
    "pages": [
        "Jonathan Gilchrist sat at his desk, his head in his hands as he grumbled quietly to himself.\n\nHe was a trained psychiatrist! He had attended one of the best schools in the country and had a list of professional credentials a mile long! Right now, he was supposed to be sitting in some oak paneled corner office with a great view while dressed in a corduroy jacket with patches on the elbows, listening to the rich and famous whine about how unhappy their childhood had been!\n\nHow had he then ended up as a high school guidance counselor?! Why was he sitting here trying to shepherd spoiled, snotty children through their ridiculous teenage dramas?\n\nDamn economy . . .\n\nAs far as he could see, the only saving grace to all of this was that he got to spend so much time around a veritable army of drop dead sexy girls, each and every one of them in the prime of life and armed with perfect young bodies. Even this was bittersweet though - not merely because he certainly wasn't allowed to touch any of these girls, but also because he had to sit here and listen to them talk about how their lives had been ruined because their mothers wouldn't buy them the right color of nail polish.\n\nThere were times when it was almost enough to make a man like him want to stick a gun barrel in his mouth.\n\nA knock on the door made him groan in misery, but it at least brought his head up. \n\nHe knew who this would be. It would be yet another kid looking for someone to tell him he's right to think that his parents should be waiting on him hand and foot! It was the last thing he wanted to have to deal with right now, but then again he could hardly just hide behind the closed door of his cramped office and expect to keep getting a paycheck. Taking a quick moment to straighten himself up a little so that he would at least look reasonably professional, he heaved a long-suffering sigh, braced himself, and bit the bullet.\n\n\"Come in!\"\n\nWhen the door swung open and this new visitor to his tiny sanctum was revealed, Jonathan's mouth fell open, his eyes bulged, and his mind completely short-circuited what with all of the blood rushing from it down to the snake that was starting to rear up in his pants. His long litany of whiny complaints was instantly forgotten.\n\nThe girl who appeared in the doorway was a vision, an absolute wet dream come to life. He had never even imagined that such incredible beauty could exist, much less that it might be found in a crappy little high school like this one! How could he have spent so long working in this place and not caught so much as a glimpse of this piece of perfection?\n\nMaybe he should leave his office every once in a while . . .\n\nVery thankful that he was sitting behind that desk, he motioned for her to come in, stammering out, \"C-come in, my dear. W-what can I do to . . . er, for you?\"\n\nThe girl drifted slowly into the room, glancing back into the hallway. Her body language made it evident that she was nervous, unsure if she was really prepared to talk about whatever it was that was troubling her. He guessed that she was probably deathly afraid that anyone she knew would see her going into the counselor's office and so wasn't surprised in the least when she closed the door behind her just as soon as she had entered the room.\n\n\"Good afternoon, Mr. Gilchrist,\" she ventured, coming over to stand behind the chair opposite him, keeping as many obstacles as possible between her and this authority figure. \"I'm Layla . . . er, and I'm a senior.\" \n\nHe noted how she had quickly caught herself from telling him her last name, no doubt wanting to stay as anonymous as possible in case he felt the need to do something about whatever she'd come to talk about.\n\nA senior? Eighteen years old, then. That she was almost two decades younger than he was not enough to squelch out his lust, however.\n\nJonathan found himself constantly reminding himself that he had to be professional here, that there would be all sorts of traumatic repercussions if he actually tried to make any of the fantasies currently swirling through his head a reality, but it was proving to be a rather hard sell. As he looked this sexy babe over from head to toe, all he could think of instead was how incredible it would be if he could only get his hands on her.\n\n\"Why don't you come and sit down, Layla?\" he invited, making an effort to keep his voice calm and his smile friendly. The girl was on a hair trigger and he knew that just one wrong look would be enough to send her flying back out the door. \"Tell me what I can do for you.\"\n\nShe was still worried, though. \"Um, this will remain confidential, won't it? I mean, this won't go beyond these four walls, will it?\"\n\nHe just kept smiling, his eyes focused more on the full swell of her bosom than on her face. \"Now you know I can't promise that, my dear,\" he answered, praying that she would understand. \"I mean, if your safety is at risk, I'm legally required to do whatever I can to make sure you're all right. Short of that though, I can promise that I'll never reveal to anyone whatever you choose to tell me.\"\n\nHe allowed himself a small sigh of relief when that didn't send her rushing out the door. On the other hand, it didn't exactly get her talking either.\n\n\"Layla? Why don't you come on in here, sit down, and tell me what brought you to see me today.\"\n\nShe hesitated a long moment more, but at last made her decision and came around the chair to sit down, her head down. He couldn't resist the temptation and let his eyes dip, enjoying how her short skirt drifted back to show off even more of those long, smooth legs. If only he could pull them apart and get at what lay between them . . .\n\n\"Well, it all started about a week ago,\" she began slowly and painfully, trying to find the right words. \"I went out on a date with . . . with this guy, you see.\" \n\nThe counselor noticed that, just as she had edited out part of her own name, she was also being very careful to avoid mentioning the name of this young man. Jonathon was perfectly fine with that though as he couldn't really focus on whatever petty problem had brought the teenager here anyway. Instead, despite the fact that he knew he shouldn't, he was being consumed with torrid fantasies about this little babe.\n\nIn the meantime, the girl was continuing her story as best she could. \"He was so gorgeous and so sweet and so romantic. We were over at his place watching this movie and his parents weren't home, okay? We . . . we . . .\"\n\nJonathan couldn't resist. \n\nAs his fantasies about Layla got hotter and hotter, he found himself almost trembling with the need to get closer to her. It seemed to him that she had just given him a way he could do it without raising any suspicions that he might have an ulterior motive and he couldn't resist jumping at the offered opportunity. \n\nRising, he came around to her side of the desk swiftly, drawing a chair up very close so that he could slip what was supposed to seem like a supportive arm around her. Though he regretted that there was no chance of hiding his erection from the teen, he also reveled in the heady aroma of her perfume, the permeating warmth of her body.\n\n\"It's all right, dear,\" he murmured. \"I'm here to help you, not judge you.\"\n\nShe gave him a very odd look as he got so very close to her, but he was cheered when she did not make a dash for the door, yelling that he was a dirty old man and that she was going to call the cops on him. \"Well,\" she tried again, \" we were just innocently watching that movie at first, but then . . . he . . . and I . . . so we . . .\"\n\nJonathon thought he could guess what had happened, despite how much trouble the girl was having telling her story. \n\nIn his mind, this guy she'd imagined to be so wonderful must have seduced her and she'd just naturally thought that meant they were going to be a couple. Unfortunately for her though, the guy had probably only been interested in the thrill of the hunt and, now that he'd bagged this poor girl, he had dropped her like a hot potato to chase after the next piece of ass to cross his path. She was feeling hurt and depressed about it, he figured, and so she'd come to him today to be comforted and reassured.\n\nUnfortunately for her, words like help and comfort were not part of his vocabulary right then.\n\nAs he sat there with his arm around her, the counselor was realizing that closing the distance between himself and this delectable young creature had been a terrible mistake. Just as he hadn't been able to resist moving to her side before though, he now could not stop himself from trying to take advantage of her.\n\nThe trouble she was having telling her story gave him the perfect opportunity, too.\n\n\"Let me see if I can help you,\" he said to her softly, raising his hand to cup her cheek, turning her face to his. \"Did he do this?\" \n\nThe teenager's eyes went very wide as he leaned towards her and she instinctively started to draw away back, only to find herself held firmly in place by the counselor. When their lips met, it was to be no tender kiss of exploration either, no lingering peck yearning to be more that spoke of his growing lust for this nubile girl. \n\nNo, it was the kind of passionate, hungry kiss that only lovers know - the wet, open-mouthed, tongue-down-your throat, feel from your hair to your toes kind.\n\nDespite that initial attempt to pull back when she realized that he was going to try to kiss her, Layla had not tried to rise from her chair and, however hesitantly, was soon actually kissing him back. Though she seemed understandably uncertain at suddenly finding herself fooling around with an older man, she also seemed to be willingly taking part in what was happening here now, so Jonathon elected to risk that she would not leap up and rush away to report him.\n\nHis grip on her loosened to something that would be more comfortable for them both and his hand slipped down from her cheek to her neck. Not only did she not flee from him, she also did not break their kiss.\n\nJonathon could have jumped for joy!\n\nWhen they finally did come up for air, he gave her a warm smile and chose to keep up the pretense that he was just trying to help her tell him what happened on her date. \"Your young man did that, didn't he?\"\n\nLayla looked away from him shyly, her face a delightful shade of red. \"Yes, he did. Many times.\"\n\nReassured that this young woman was his for the taking, the counselor now did not hesitate for a moment to grab hold of her firm breast, squeezing and caressing it in ways that brought forth happy little mewling sighs from her throat.\n\n\"And this?\" he inquired, leaning in nuzzle her soft and scented hair and to kiss her ear. \"I'll bet he did this, too.\"\n\nIt was blatantly obvious that the teenager was becoming just as aroused as her guidance counselor. Not only could she only answer his question with a nod as she was unable to find her voice, but her breath was coming hard and fast and her firm nipples showing through her top quite obviously.\n\nGazing down at those hardened peaks, the hand he had on her bosom telling him that she wasn't wearing a bra, Jonathan decided that he needed to see this girl's tits just as soon as he could. His hand dropped away from her breast to start tugging up on the front of her shirt and, though seeming a little startled, she did not resist as he unveiled her perky young breasts and got his hand on her bare flesh.\n\n\"He did this, too, didn't he?\" Jonathon asked gruffly, marveling at the texture and warmth of her skin as he ran his hands all over her, using his fingers to gently tug and twist the large and very erect nipples. \"Yeah, how could he not have done this?\"\n\nLayla was moaning softly as her breasts were skillfully manipulated, but her eyelids fluttered closed and she threw her head back only when he leaned down to take one of her stiff nipples into his mouth. Suckling and working his tongue over that extremely sensitive bundle of nerve endings, he elicited breathless cried of pleasure from her.\n\n\"Yes,\" she finally groaned hoarsely, \"he did that, too.\"\n\n\"Of course, he did,\" the counselor purred, \"Who wouldn't have?\"\n\nThere was so much more that Jonathon wanted to do to this girl, to show her that the fumblings of some amateurish boy her age was nothing compared to the skill of an experienced man, but he realized that he simply could not wait any longer to get into this young woman's cunt. His cock had been hard from the moment she had walked into this office and things were growing awfully painful down there as his manhood tried to rip through his slacks.\n\nRising suddenly from his chair, he pulled her up with him and she let out a startled little squeal as she found herself being bent forward over his desk. \n\nThere could be no question about what he meant to do, especially as he came up close behind her, and she suddenly seemed to have some second thoughts about going through with this. When she tried to rise from where she had been placed though, he shoved her right back down with one hand between her shoulder blades.\n\nHis other hand had the back of her skirt pulled up in an instant, her panties down in the next, and his own pants open in the third. It may well have been world record speed! The girl reached back with both hands in an effort to put her clothes back in order, tried to utter a desperate protest, but was too late as he plunged his dick straight into her velvety hole.\n\nHer guttural moan as she was suddenly filled was mirrored by one from him as he found himself clenched in something hotter and tighter than anything he had been in for many, many a year. It took them both a few long moments to get used to this intimate connection of their two bodies, but then he set to work.\n\nUsing every trick of the trade he had learned over a lifetime of fooling around with women, Jonathon would spend the next several minutes plowing this young woman's furrow. He was earnestly hoping that this would not be the only time he would be able to have sex with this girl, so he wanted to make this event just as good as it possibly could be for her and he flattered himself that he succeeded.\n\n\"So,\" he grunted as he slammed himself into her in a steady and relentless rhythm, \"I guess he did this, too?\"\n\nClenching the edge of the desk so tightly that her knuckles had gone white, the teenager could only grunt over and over, \"Yes, yes, oh, yes!\" Whether or not she was actually responding to his question or just enjoying the ride was another matter, though.\n\nUnder the circumstances, it would not take long for either of them to reach their climaxes and, without even trying, they somehow managed to pull off a simultaneous orgasm. Both heaved and convulsed as the most blissful ecstacy imaginable ripped through their conjoined bodies, his pearly white cum filling her to overflowing. By the time this overwhelming seizure had passed, the couple were left sprawled over the edge of the desk in an untidy and exhausted heap.\n\nEventually, Jonathan managed to lever himself up and off of the girl with a weary but very satisfied moan. Working hard to catch his breath, he ran his hand over this girl's taut little ass as he managed to inquire, \"So, that young man of your's did all of that to you?\"\n\nShe lifted her head and looked back over her shoulder at him with a rueful expression. \"He did,\" she confirmed. \"But he also did something more.\"\n\n\"Oh?\" Hoping that this meant that they weren't quite done yet, that there was even more that she wanted to do with her guidance counselor, he eagerly asked, \"What else did he do?\"\n\nShe sighed. \"He gave me gonorrhea.\" "
    ],
    "authorname": "Ignoble",
    "tags": [
        "high school",
        "senior",
        "counselor",
        "straight",
        "older-younger",
        "18-year-old",
        "teacher",
        "student",
        "office"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/the-guidance-counselor"
}