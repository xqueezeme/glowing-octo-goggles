{
    "title": "Used Ch. 06",
    "pages": [
        "Author's Note: Whew! This one took forever to get finished. But here it is, the final Used chapter. Hope you guys enjoy it. Major props to my super twin TangledinYou for helping me get a fresh perspective. You rock, chica! And now, without further ado, Nate and Jamie's story...\n\nSienna H.\n\n********\n\nJamie woke to the sound of gulls crying out their morning song. Her eyes flew open and attempted to focus. The room was dim, the light streaks of early dawn visible in the still-night sky. \n\nShe flung a slender arm carelessly and was surprised when all she felt was emptiness. Jamie sat upright, clutching the sea-blue sheet to her body. Was it all just a dream, she wondered. A slight pang vibrated through her heart at the thought. Her eyes shut tightly, as if to keep the idea out her head. Please let him be here, she pleaded. Don't leave me Nate. Please don't leave me.\n\nWhen a warm body slid in next to hers, she nearly jumped. \"Don't worry darlin'. I'm not goin' anywhere.\" He kissed her on the shoulder before bringing back to rest in the crook of his arm as he sat against the headboard.\n\n\"What happened?\" she asked.\n\nNate chuckled lightly. \"I just had to use the bathroom, is all.\" His fingers twirled idly in her dark hair.\n\nJamie could feel her heartbeat slowly returning to normal. \"Oh.\"\n\nHe tilted her face up to his. \"I'd never leave you like that, Jamie. That's your job, remember?\"\n\nShe winced involuntarily. \n\n\"Too soon?\" he said. \n\n\"A little\" she replied while trying to attempt a smile. \n\n\"Will an 'I love you' fix it?\"\n\nHer shoulders moved in a nonchalant shrug. \"I suppose so.\" \n\nCupping her face in his tanned hands, he kissed her deeply. A little sigh escaped, signaling the small thrill that rang throughout his body every time he was blessed with the touch of her full lips to his. He could definitely get used to it.\n\n\"I love you, Jamie.\" \n\n\"I love you, Nate.\" She kissed his cheeks before tracing her tongue lightly over his stubble-lined jaw. \"So very much.\"\n\nHe let out a low groan. \"Darlin'. I need to feel you again.\" \n\nJamie moved to straddle him. Their lips connected once more as she guided his hard cock into her warm pussy. She let out a small whimper when he sat her down firmly, sliding in all the way.\n\n\"Fuck\" he cursed, biting down on his bottom lip to keep from screaming out. She began to rock back and forth on his cock, squeezing him tightly inside her. His hands grasped at her hips, guiding them in a circular motion. \n\nJamie covered her mouth to suppress a moan. Her back arched when her thumb grazed over a dark nipple. Nate brought her closer, his mouth desperate for hers. \n\n\"You okay baby?\" he breathed. His hips thrust into her powerfully. Jamie moaned and wrapped her arms around his neck. \n\n\"Yeah,\" she said. \"You just feel so good, honey.\" \n\nNate smiled. It was the first time she had called him something like that. It was either Harlow or Nate. To hear something like that roll off her tongue made him feel incredibly warm inside. His fingers ran across the smooth, dark expanse of her back as he cradled her slender body to his. \n\nShe rode him hard, her eyes closed as her back arched with every stroke. Nate reveled in the way her body seemed to fit his. The curve of her body met perfectly with the muscle of his.\n\nHis fingers wound their way into her hair as he urged her on. Her whimpers turned into loud moans and he silenced them with his mouth. \"Quiet, darlin'\" he said softly. \"You don't want to wake everyone else up, do you?\"\n\nJamie buried her face into his neck as her hips rocked faster. \"Shit,\" she cursed. She came hard, squeezing Nate's cock inside her almost painfully. With a low growl he joined her, his essence shooting deep inside her. \n\nNate slid down, still cradling her to his chest. Jamie chuckled softly. \"You think they heard us?\" \n\n\"Let's hope not.\" His breath caught in his throat as her finger lightly traced his flat nipple. \n\n\"You know what? I really couldn't care less.\" She smiled up at him. \"I don't think I've ever felt this happy.\"\n\nHe kissed the top of her hair, inhaling the scent of her shampoo mixed with the sea air. \"I know how you feel, darlin'. Like my heart's about to burst.\"\n\n\"Did you know I was going to be here?\" \" No,\" he replied. \"But I was kind of hopin' you were.\"\n\n\"Really?\"\n\n\"Yeah. It's crazy. I was still so mad at you, but it's like my heart was practically leapin' out of my chest when I saw you on the beach. You were lookin' so fine too.\"\n\nJamie smiled. \"You don't look too bad yourself. All that southern sunshine does a body good.\"\n\nNate's eyes crinkled in a smile. Jamie noticed they were back to that loving sky blue color and all at once she realized how much she missed him. \"It was more than sunshine, darlin'. I was spendin' so much time at the gym they might as well had donated a wing in my name. It was like workin' out was the only thing that helped get my mind off you.\"\n\nShe sighed, a low and heavy sound. \"I know how you feel. My outlet was art.\"\n\n\"What kind of art?\"\n\n\"Painting and sculpting, but sometimes it was just idle sketches.\" She sighed once more, only this time it was a happy one, as his fingers twirled through her hair once more. A small smile crept on her lips. He must like her hair that way.\n\n\"I didn't know you were an artist.\"\n\n\"Not a major one. I just do it as a stress reliever. My mom was the real artist.\"\n\nThis was the first time he had ever heard her mention her family. \"Your mother?\"\n\nShe nodded. \"My mother. I do have a family, you know.\"\n\n\"Smartass. I know, it's just you never mentioned her before.\"\n\n\"Well, you and I weren't exactly close back in the day. It just seemed wrong to bring up my mother during sex.\"\n\nHe nodded. \"Good point. So, does your mother still do art?\"\n\nJamie was quiet for a moment. \"Can we not talk about this right now?\"\n\nHis fingers paused in her hair. He was sure she was trying to shut down again, but he didn't want to force it. \"Sure, darlin'. Let's get some sleep, alright?\"\n\nJamie kissed his chest. \"Okay. I love you.\"\n\nNate yawned. \"I love you too.\" ********\n\nIt was a beautiful Saturday on the boardwalk. Jamie could barely contain her excitement. She had never been to the beach before and all the kitschy shops on the boardwalk were a sight to behold. \n\nNate kept laughing at her. She was like a little kid in a toy store; she was wearing brown shorts and matching flip-flops with a sky blue tank top. Her hair was down and flowing and he was really starting to like it that way. \n\nShe kept tugging his hand, begging him to go into different stores. Nora smiled knowingly at them. Everyone had taken noticed of the change in their behavior, but thankfully no one mentioned anything.\n\n\"Jamie, you're like a kid on sugar\" he remarked. \n\nShe smiled. \"I can't help it! It's a gorgeous day and I've got a great guy on my arm. What could be better?\"\n\nWrapping her arms around his waist, she brought him close for a gentle kiss. \n\nNate groaned happily before pulling away. \"Whatever you're on, I definitely want some.\"\n\n\"You already have it,\" she said sweetly. \"It's called love.\"\n\nHe laughed loudly. \"That was corny darlin', even for you.\" She laughed along with him. \n\n\"Don't make fun because I'm serious. Now, let's go shopping.\"\n\nThey stayed on the boardwalk for quite some time, walking along the wooden planks and taking peeks inside the stores. They had decided to buy each other small gifts. Jamie bought a Nate a hemp bracelet with various colored beads and smooth sea glass woven in. She thought the blue in the bracelet matched his eyes perfectly. His present to her was silver necklace. The pendant was polished stone the color of the sea. \n\nJamie thought the day was perfect. After getting back from the boardwalk, they made frenzied love in the shower of Jamie's bathroom before joining everyone for a barbeque dinner on the beach. There was a silly grin on her face that was positively hard to get rid of. This, this feeling here was something she'd been longing to feel her entire life.\n\nAs she helped Lila bring the dishes from outside into the kitchen, Nora stopped her. \n\n\"My, don't we look goofy.\"\n\n\"I can't help it Nora. I am so fucking happy.\"\n\nNora grinned. \"I'm happy for you Jay. I can't think of anyone more deserving.\"\n\n\"It's like I've been waiting my whole life to feel this good.\"\n\nNora rinsed the dishes and handed them to Jamie, who placed them in the dishwasher. \"You love him?\" she asked gingerly. \n\nJamie eyed her wistfully. \"I do. I really do. And he loves me.\"\n\nNora hugged her best friend tightly. \"I'm glad, Jay. I know how important this is for you. And I don't mean to burst your bubble...but what happens when he leaves tomorrow?\"\n\nShe was thoughtful. \"Fuck. I completely forgot about that. He was only here for the weekend.\" All at once it seemed like her good mood was rapidly deflating. \n\n\"Honey, no. Don't think about it that way. \"\n\n\"Nora what am I going to do? I can't just let him leave but he has a life of his own to get back to.\" She slapped her hand to her forehead. \"How the fuck was I expecting this to work?\"\n\nNora grasped her friend's hands in hers. \"If you two love each other as I know you do, then you can work it out. This s not the end of the world, Jay. You will figure it out.\"\n\n********\n\nShe was biting down hard on the sheets, legs trembling almost violently as she willed herself to keep quiet. It was so hard to do, especially with him above her, his creamy hands on her dark hips, his hard cock plunging into her dewy folds. \n\nNate grabbed a handful of her hand and pulled her up from all fours to cup her neck. \n\n\"You gonna come for me darlin'?\"\n\nThere were no words coming from her mouth, just heavy gasps of pleasure. She whimpered loudly when his fingers slid down her body, already coated with sweat to rub her clit. He circled the little button with his thumb before flicking it back and forth rapidly. \n\n\"N-nate,\" she heaved. \n\n\"Ahh, I knew my pussy was creamin' for me,\" he whispered wickedly. \"That's right, my pussy. You're all mine, Jamie Kincaid.\"\n\n\"Oh,\" she moaned. \"Fuck!\" She came in a shuddering explosion, her limbs almost growing rigid. Nate bit down almost painfully on her shoulder as his orgasm hit. She fell to the bed, stretching out on her stomach. He followed suit, the creamy tan of his body covering the golden caramel glow of hers. \n\n\"Jesus,\" he breathed. \"I don't think I'll ever get enough of you.\"\n\nShe was still trembling underneath. He thought it was just from pleasure until he heard the sniffling. \n\n\"Jamie? Darlin' are you alright?\" He slid out of her before turning her to face him. His callused thumbs brushed away the large tears now spilling from her cheeks. It was amazing; he had never seen her cry before and now it was breaking his heart. \n\nNate gathered her in his arms. \"Jamie'\" he said, his voice breaking a little. \"Please tell me what's wrong.\"\n\nJamie sobbed into his shoulder. \"I...It's nothing.\"\n\n\"Don't tell me it's nothing when I know damn well something's up.\"\n\nJamie felt like her heart was breaking. \"I can't do this anymore, Nate.\" She felt his arms stiffen around her. Suddenly she felt herself being shaken by the shoulders. \n\n\"Goddammit, Jamie!\" he cursed. \"You can't keep doin' this. I thought we moved past this.\" He felt the anger surge in his chest. This cannot be happenin', he thought angrily. Not again. \n\nShe sobbed harder, the tears falling freely now. \"We have, you jackass! That's the problem.\"\n\n\"What are you talkin' about?\"\n\n\"You're going to leave me tomorrow!\" She wrenched away from his grasp, bringing her knees up to her chest. \n\nNate stared at her incredulously. Did she really believe he would leave her like that, after everything they shared? \"Jamie,\" he said softly, the anger draining from his words. \"Honey look at me.\" \n\nJamie turned reluctantly to face him. \n\n\"I have to go back. I have a life in Nashville and as much as I am so glad you and I worked things out, I have to take care of things back home.\"\n\nShe sniffed loudly. \"So, was I just your vacation fuck?\"\n\nHis blue eyes turned icy and she almost regretted the words. \"You know, if I didn't love you so much I just might strangle you. Jamie, you are more than just a vacation fuck and you know that.\"\n\nShe sighed. \"I know. It's just...\" her sentence trailed off. \n\n\"What? What is it?\"\n\nJamie sighed. The words were trying to come out, but it felt like thee was an invisible wall blocking her. \"It's nothing. I'm sorry for getting so upset.\"\n\nNate gritted his teeth; she was lying and he knew it. But he didn't want to push the subject because tonight was supposed to be special. \"Don't worry about it baby. Let's just make this night memorable. We can worry about what happens next when the sun comes up.\"\n\n********\n\nIt was early Sunday morning. Jamie sat on the edge of the bed in Nate's room, watching him stuff his clothes in a dark green duffel bag. \"Do you even know how to fold clothes?\" she asked. \n\nNate shrugged. \"Why fold 'em? I just gotta wash them when I get back home.\" He walked to the adjoining bathroom and grabbed his toothbrush and shower stuff. \"You gonna come see me off at the airport?\"\n\n\"Isn't that going to make it harder?\"\n\nHe tossed his toothbrush in his duffel and crouched down to meet her eyes. She was already fighting the tears. Don't do this again, she willed herself. \n\n\"Baby, seein' you like this is already hard enough. If you don't want to come I will definitely understand.\" His hand went out to hers, stroking the soft brown skin. \n\nJamie chewed her bottom lip. \"I'm gonna miss you.\"\n\n\"Me too. Now where's the sarcasm? I miss my old Jamie.\" His hand started to reach under her flouncy white skirt.\n\n\"Hey!\" she exclaimed as she slapped his hand away. \"Old Jamie says you're not getting any right now. Why don't you hit on some southern skank when you get back to Nashville, Rascal Flatts?\"\n\nNate grinned devilishly. \"Nah son,\" he said in a thick Northern accent. \"I don't like them Southern girls.\" He pushed her back on the bed as he slid up her body. \"I want that sweet Yankee brown sugar.\" Jamie giggled as he kissed her neck. \"Mmm, sweet and spicy, that's how I like my skanks.\"\n\n\"Shut up,\" she squealed, trying to push him off her. \"I'm not your skank.\"\n\n\"My ho? My girl?\" His blue eyes twinkled. \"My shawty?\"\n\nThey both burst out laughing. \n\n\"Get out of here before you miss your plane, jackass.\"\n\nHis thumb ran soft circles around her nipple. \"One more for the road?\" he asked.\n\nJamie sighed. \"Nate, I'm so tired. I think six times in one day may be my limit.\" Even as she protested, her dark legs began to spread slowly, her skirt rising up. Her hips began to involuntarily grind against his, the friction making both of them breathe heavier. \n\nNate groaned. \"Are you sure about that? His hand snaked under her skirt as he slid a finger inside her soaking pussy. \"Mmm, feels like you're up for it.\"\n\nShe chuckled. \"Speak for yourself. That thing is poking me in the stomach.\"\n\n\"Aww, don't be cruel darlin'. You'll hurt his feelings.\"\n\nHer hand moved between them, unzipping his khaki shorts and diving into them. She pumped him slowly, enjoying the way his face scrunched in pleasure. The way he bit his lip to suppress the manly moan dying to break free was so erotic. She knew now, more than ever it was going to be hard to let him go again. \n\n\"Fuck,\" he growled. His cheek grazed hers and she trembled from the sensation of his stubble. \n\n\"Nate, when I see you next I want your hair to be longer,\" she whispered sweetly, her hand still fisting his rock hard cock. \n\n\"Whatever you say, baby\" he moaned. He would agree to anything at this point. \"Just don't fucking stop.\"\n\nHer hand left his member for a moment before she was positioning him at her entrance. Her hips thrust powerfully, connecting them and she whimpered loudly. \n\nNate rammed into her, making both of them. He fucked her hard, in the middle of his bed, slamming into her pussy. He was reminded of that time on the beach; somehow this felt the same. He was leaving her and he was pretty miffed. But he had to get back to work, and try to sort out his life.\n\nJamie's legs wrapped around his waist, her heels pressing into his ass. Her head was tilted back, the only sound a series of heavy breaths. \"I'm gonna come,\" he groaned. He went over the edge, coming in a wave of almost blinding white. He felt her shuddering climax as he kissed her softly. \n\n\"Now that was a goodbye,\" he said, his mega-watt grin practically contagious.\n\nJamie scoffed. \"Goodbye? No, that was definitely not a goodbye; more like 'until then'.\"\n\n********\n\nShe walked back into the kitchen to see Danny and Nora covered in flour. They were supposed to be baking cookies but the batter lay forgotten in a bowl on the counter as they kissed each other softly. \n\nJamie sighed. She missed Nate. It had been only yesterday when Matt dropped him off at the airport. He called her when his plane landed and when he got back to his house. She excused herself from the dinner table and locked her door when their conversation turned steamy. \n\nA slight blush crept into her face. She had never been this insatiable. Nora joked that they had over two years of good lovin' to make up.\n\n\"Oh eww, you two\" she said, making a dramatic face. \"No one wants to see that.\"\n\nNora pulled away from Danny and shot her friend a look. \"Yeah? Well no one wanted to hear you and Nate hump like bunnies all weekend, but I guess we can't always get what we want.\"\n\n\"Yeah, Jay\" Danny chimed in. \"It was just like being back at ATO.\"\n\nJamie rolled her eyes. \"Whatever guys. What happened was your fault, meddlin' with people.\"\n\nNora raised a blonde eyebrow in amusement. \"Meddlin', huh? Seems like Nate's rubbed off on you more than we thought.\"\n\n\"Oh...that's just wrong Nora,\" she said grinning. \n\n\"How you holding up?\" Matt asked as he entered the kitchen. \n\n\"I'm fine, guys. Stop worrying about me.\" She tried to force a smile. Things weren't fine. She missed Nate way too much, and that bothered her. \"Nora, you wouldn't mind if I took off a little early, do you?\"\n\nNora glanced at her, a worried expression crossing her pretty features. \"What's wrong, Jamie?\"\n\n\"Nothing. I just...I really need to get some perspective.\"\n\nNora opened her mouth as if in protest, but Danny stopped her. \"No worries, Jamie. I'll drive you back up. Nora can chill out here with Matt and Lila.\"\n\nJamie smiled, relief coursing through her veins. She knew where she wanted to go, the one place that always made her feel absolutely amazing.\n\n********\n\nIt had been two days of solid driving since Danny dropped her off at her car. Two days filled with burger wrappers and Styrofoam cups of cappuccino. Nora had called several times just to check in on her. She talked to her briefly, wanting to get back to her music and her solitude. Though she didn't want to admit it, her thoughts were driving her crazy. Too much time to think things over was making her paranoid. \n\nShe had made of elaborate fantasies of Nate with other women, their limbs entwined intimately as he did the things she liked. Stop it, she urged herself. He loves you. \n\nMaybe...maybe not, the little voice whispered nastily. Or maybe he'll just leave like all the others. \n\nJamie gripped the steering wheel tightly as she turned onto a narrow dirt road. All at once she felt her bad mood slowly ebb. Being here always made her feel so good. She made a sharp left turn and started up a dirt driveway before pulling up to a modest brick house with a white wraparound porch. A white wicker swing sat in a corner of the porch which had many large potted plants and flowers placed haphazardly. \n\nTurning off the car, she got out and stretched languidly. She closed her eyes and tilted her face towards the afternoon. She breathed deeply and smiled, the warm Georgia air caressing her skin.",
        "\"Is that my Jamie-bear?\" a voice called out behind the screen door.\n\n\"Hey, Momma\" she said softly. \n\nThe door swung open and a slender woman stepped out. She was a soft brown sugar color, her eyes warm and inviting. Her long black hair fanned out wildly behind her. She was wearing a pair of dark denim jeans tucked into cowboy boots and a short-sleeved flannel button down shirt. \n\nWith the exception of a few hardly noticeable wrinkles, Maureen Sinclair could have been mistaken as daughter's twin sister.\n\nMaureen smiled. \"Look at you, all skin and bones girl. What the hell have you been eatin' up in New York?\" Jamie smiled as she bounded up the porch steps and grabbed her mother in a tight hug. Hot tears stung her eyes as they fell onto her Momma's shirt. She inhaled her scent deeply, smelling like a mixture of the original Dial soap she still used and freshly made peach caramel cheesecake. She missed that smell; it reminded her of better times.\n\nMaureen rubbed her back soothingly. \"It's okay, Jamie-bear. I'm just glad you came to see me.\" She smiled, her chocolate eyes lighting up. \"Come on in. I've got lunch warmin' for you.\"\n\nShe stepped inside after her mother into the cool interior of the house. Though the outside looked a little old, inside was a different story. Maureen had bought the house many years ago as a fixer-upper project and it had taken her several months to get it just the way she wanted. Each room had a different theme and color. Jamie loved it; her mother was so talented. \n\nThey walked into the large kitchen, painted a soft honey color. Maureen opened the microwave and removed the cloth covering a large blue plate. \n\nJamie grinned as her mother set down the plate in front of a stool on the light stone counter. \"Momma this is too much.\"\n\nMaureen shook her head. \"Ain't no such thing,\" she replied, the twang of her accent becoming even more noticeable. \"Especially now since I seen how gangly you are. Eat up, baby girl. I made your favorites.\"\n\nPicking up her fork, she dove into the large helping of mashed potatoes on her plate. Her mouth was practically watering as she savored her mother's good cooking. God, she missed food like this. Thick-cut meatloaf on toasted and buttered sandwich bread with just a touch of beef gravy, fluffy mashed potatoes and buttered broccoli. It was total comfort food and just what she needed.  \"Momma, this is just awesome. You don't know how much I needed this.\"\n\n\"Of course I do, baby girl.\" She brought two bottles of beer to the counter. \"Now why don't you tell me what the hell is goin' on?\"\n\nTaking a deep breath, she started at the beginning. Jamie told her mother about her first encounter with Nate over two years ago and the event leading up to their bitter parting. At first she was a little embarrassed to reveal the sexual nature of their relationship, but her mother was never one to judge in the first place. \n\nMaureen didn't interrupt her daughter; she listened intently while sipping her beer. \n\n\"...and that's how I ended up here,\" Jamie said.\n\nMaureen chuckled. \"Lord, I say you've had a tough go of things. I do gotta ask you one question, honey. Are you in love with him?\"\n\nShe was silent for a moment before she nodded feverishly. \"Yeah. I am. I'm very much in love with him.\"\n\n\"So what's the problem Jamie-bear? Why are you sittin' here shootin' the shit with your Momma instead of headin' to Nashville?\"\n\nShe sighed. \"I don't know Momma. I feel like there's this huge wall just holding me back from...just being happy. It's like every time I think things are going to be okay, there's this little voice that persuades me otherwise. I just need to know that things are going to work out before I invest my time and heart into this.\"\n\nMaureen covered her hand. \"Baby girl, if you're waitin' for things to work out perfectly, then you'll be waiting a helluva long time. You're never gonna know how things will go unless you take that first step. Stop being so scared of love, honey.\"\n\nThe tears welled in her brown eyes and Jamie swiped at them. \"I don't want to get hurt, Momma. And I don't want to hurt him anymore. He's such a good guy. You'd like him a lot. I'm just terrified he's gonna leave me. It's like having this perfect gift just snatched away without warning.\"\n\nMaureen smiled. \"Well Jamie, running away ain't gonna solve anything either. It's not gonna make the hurt any less painful. You think just by denying yourself and him the happiness you both want just because you're afraid...that's just bullshit baby girl. I didn't raise any bullshit artists.\"\n\nThey both smiled. \"But Momma, look at you. You trusted someone with your heart and he hurt you.\"\n\nHer mother was thoughtful for a moment. \"Ahh, I see. Are you afraid he'd hit you? 'Cause Momma's got a pistol you can use.\"\n\nJamie laughed through her tears. \"No, not that. He wouldn't dare do that. I'd castrate him. I'm talking about emotional hurt.\"\n\n\"I see, honey. But you have to understand something. Nate isn't your father. You've seen your daddy's cruelty along with his sparse kindness. I'd like to say that there is something redeemable inside, but even after all these years I don't think I can. Your father hurt me deep, and in front of my babies.\" She waved the words away as if they were flies. \"But that's beside the point. From what you've told me about this boy, I don't doubt his love for you. Maybe you need to do the same.\"\n\n********\n\nTwo Days Later...\n\nNate plopped down on his sofa, his t-shirt sticking to his back. He tossed the earphones from his sweaty ears and practically pelted them on the sofa. The phone on the side table was ringing loudly. \n\nSnatching it from the hook, he pressed the 'ON' button. \n\n\"'Lo?\" he said gruffly.\n\n\"You answer the phone like that all the time?\" \n\nNate grinned. \"Only when it's someone I can't stand. How goes it, Ms. Masters.\"\n\nNora chuckled. \"It goes well. I'm surprised you're home.\"\n\n\"Well, I do have off days.\"\n\n\"I'm not talking about that, Harlow.\"\n\nNate sighed. \"I'm not gonna chase after her, Nora.\"\n\n\"Nate...\"\n\n\"No,\" he interrupted. \"It's been almost a week and I haven't heard from her.\"\n\n\"Last time I talked to her she was still at her mother's place in Macon.\"\n\n\"I know where she is. She sent me a text.\" He chuckled bitterly. \"Imagine that. She sent me a fuckin' text.\"\n\nNora sighed. \"She's scared, Nate\" she said quietly.\n\n\"Nora, sooner or later that excuse just stops workin'. I'm scared too. I'm tired of havin' to prove myself and my love over and over.\"\n\n\"Nate, there's a lot of stuff about Jamie you apparently don't know.\"\n\nHe sighed. \"Masters, what I don't know about Jamie could fill a textbook. Every time I think she's goin' to open up and let me in, there goes the fuckin' wall.\" \n\nNora was so silent he thought she hung up the phone. \"Nate,\" she said slowly. \"I'm not sure if I'm the one to tell you all this, but there's some stuff from Jamie's past you don't know about. Stuff about her father.\"\n\nHe stiffened. \"What about?\"\n\n\"I don't know all the details, but they aren't close at all.\" \"Well, what about her mother? She mentioned she was an artist?\"\n\n\"Yes. She lives in Georgia. She left Jamie's father when Jamie was young.\"\n\n\"Nora, what are you tryin' to say?\" He could feel himself becoming flustered. \n\n\"Well, she never really said...but I think her father was kind of an asshole.\"\n\n\"Is that all you know?\"\n\n\"Yeah. That's why you need to talk to her. Find out the whole thing, Nate. Don't leave until you tell everything and vice versa. You love her, right?\"\n\nHe sighed. \"More than anythin'.\"\n\n\"Then fucking go get her.\"\n\n********\n\n\"Momma, what happened between you and my father?\"\n\nJamie and Maureen were sitting on the wicker swing on the front porch, sipping peach tea and watching the Georgia sun set in the sky. The air was still thick with heat but it was a gorgeous night out. \n\nMaureen was quiet for some time, mulling over the question her daughter asked her. It had been a long time coming. The sound of crickets making their dusk symphony could be heard for miles. \n\n\"Jamie, you know what happened\" she replied. \n\n\"I guess I do. But maybe I just want to know why. Why did you leave me?\"\n\n\"Jamie,\" she sighed. \n\nBut Jamie shook off her protests. \"I remember the day you left. I was sitting in the kitchen with Rina, listening to him beat the shit out of you. I was so happy to see you come down those steps. It was just like showing Rina that you were strong enough to leave him.\" Her voice faltered a little. \"I begged you to take me, Momma. You knew how much he hated me, and yet you left me there. You have no idea what it was like living with him after you were gone. He didn't beat me, but I'm not sure what was worst: getting beaten or being ignored.\"\n\nMaureen's hand grasped her daughter's. \"Jamie-bear, I wanted to take you with me. I did. But I just couldn't. I didn't even know where I was going at the time and I couldn't just upset your life. My plan was always to start over, make a comfortable life, and bring you and your sister to me.\"\n\nJamie felt the familiar sting of tears. She had cried more in the last days than in her whole life. \"Well, you never came back for me.\"\n\nMaureen nodded. \"I did. Nearly a year after I left I came back to the house to pick you up. You and Rina were at school. Your father met me at the door and said I couldn't have you guys.\" She scoffed bitterly. \"He was only holding on to you and Rina because he knew how much I loved and wanted my girls. Selfish bastard.\"\n\n\"He never told me that.\"\n\nMaureen drank her tea slowly. \"No, I didn't think he would.\" She turned to her daughter, her face illuminated by the string of soft outdoor light around the porch. \"You listen to me, Jamie Renee. Your father will always be your father. Your relationship has nothing to do with me. But I just want you to know that I love you. And that sooner or later you need to stop blaming your past for your present situation.\"\n\nHer words stung, but Jamie knew she was right. \"I know, Momma.\"\n\nMaureen nodded. \"You are blaming Nate for what I did and what your father continues to do to you and you are losing out, honey.\"\n\nShe was silent. She was constantly afraid that they people she loved would abandon her so running seemed like the best thing. Maybe it was time to face her life. Maureen smiled at the look of realization on her daughter's face. \n\n\"What do I do?\" Jamie asked. \n\nHer mother shot her a 'duh' look. \"Hightail your ass outta here.\" She patted her gently on the knee. \"It's been nearly a week since you left the beach. Don't you think it's time you put some more mileage on that car of yours?\"\n\nJamie grinned. \"You don't mind if I leave you?\"\n\n\"Mind?\" Maureen scoffed. \"I've been trying to get your bony tail outta here so I can invite my man over.\"\n\nThey both laughed. The thought of Maureen dating brought tears of mirth to Jamie's eyes. \"That's too much info.\"\n\n\"Maybe,\" Maureen shrugged. \"Actually, I've just been itching to paint. I've been working on an incredible piece.\"\n\n\"That's cool.\" \"It is. The local high school wants me to help the art kids paint a mural in a couple of weeks.\"\n\n\"That's amazing, Momma!\"\n\nShe nodded. \"It is. Now everyone's gonna start to notice the work of Maureen Sinclair.\"\n\nJamie drained her tea. \"Speaking of, when did you start using your maiden name?\"\n\n\"Been going on a couple of years.\" She picked up a wooden basket beside her. \"Now, back to your issue. I think it's time you headed on out.\" She handed Jamie the basket which was full of wrapped sandwiches and other goodies. \n\nJamie smiled. It was just like her mother to pack as if she was feeding the Russian army. \"You planned this all along.\"\n\n\"What? You think I want you hiding out at my house all damn summer?\" She shooed Jamie away. \"Get on, girl. Go get your life back. And someday I wanna meet this boy!\"\n\n********\n\nNate placed his messenger bag containing his laptop on the passenger of his black pickup. Glancing at his watch he groaned inwardly. Today was supposed to be his day off but a sudden emergency called for his presence. \n\nHe straightened the pale green silk tie he was wearing, matching the dress shirt he was wearing. Nate fished his cell phone out of his grey slacks and dialed his boss' number. \n\n\"Hey, Gary. I'm about to leave my house to deliver the graphics to the office. I'll see you guys in about twenty minutes.\"\n\nSnapping his phone shut, he realized he left his cup of coffee on his kitchen countertop. Cursing softly, he jogged up the short walkway to his front door. \n\nHe was only inside for a moment. When he came out, the sight that greeted him nearly made him drop his drink. \n\nJamie climbed tiredly out her Highlander. It had taken her more hours than she cared to admit, but she was here. She had pulled up to Nate's very modest house nestled in the Nashville suburbs. She was about to prepare a speech when she saw him gaping at her next to his truck. \n\nShe smiled sheepishly before stepping on the curb to meet him. \n\n\"Hey,\" she said softly.\n\nNate was stunned. \"How...how did you find me?\"\n\n\"Google'd you. Actually I Google'd your father and found his address. Then I looked you up in the yellow pages. Thank heavens for MapQuest.\" \n\n\"Wow,\" was all he said. She had gone through all that trouble just to find him.\n\n\"No worries,\" she replied, shrugging her shoulder as if stalking someone on the internet was something she did regularly. \"Are you off somewhere?\" she asked. He was impeccably dressed, his dress shirt highlighting his muscular chest and arms. Even his slacks were well tailored. He looked hot. She smiled when she noticed the slight stubble on his face and that he hadn't shaved his hair, the short blond hair curling nicely. \n\nNate cleared his throat. \"Um, gotta go into work to hand in a coupla documents.\"\n\n\"Oh. You look hot.\"\n\nHe grinned a little, his body clearly forgetting he was kind of pissed at her. \"So do you.\"\n\nShe scoffed. \"I look like shit. I've been driving for fucking hours.\" Her hand ran absently through her dark hair, which hung limply at her shoulders. \n\nNate took a good look at her. Her jeans had rips in them, her black tank top was bit wrinkled and she looked like she could use a good night's rest. But she still looked beautiful.\n\n\"Why are you here?\" he asked, somewhat gruffly. He was beginning to get irritated for some reason by their small talk.\n\n\"I,\" she started. \"I needed to tell you some things.\"\n\nHe sighed, a long and weary sound that made Jamie ached. He sounded so beat up, so defeated. \"Jamie, I'm done.\"\n\n\"What?\"\n\n\"I can't do this anymore. I can't always wait around for you to decide what it is you want.\"\n\nShe was shocked. This wasn't how things were supposed to go. \"Nate, you can't mean that. I love you. I want to be with you.\"\n\n\"Why?\" he asked. \n\nOnce again she was stunned into silence. \"What?\"\n\nNate set his cup on the hood of his car. \"Why do you want to be with me? 'Cause I know why I want to be you.\"\n\nJamie's mind frantically searched for the right answer. \n\n\"You don't know, do you?\"\n\n\"I do...\"\n\n\"Well then what is it? What is it that you can't say? Why can you never fuckin' open your mouth and tell me how you feel?\" His anger and frustration from the past days finally boiled over. \"Goddamit! I don't know what to do anymore. I love you so much it hurts darlin' but I can't fuckin' put myself through these games. We're not in college anymore Jamie. Step up already because I'm tired of hangin' out on this goddamn limb by myself.\"\n\nHis blue eyes blazed with anger and it almost made her tremble. She had never seen him look so fierce. \n\n\"Nate, I wanted to be with you. But I just couldn't let go of all the bullshit in the past.\"\n\n\"What bullshit?\" his temper seemed to have subsided a little.\n\nJamie shoved her hands in her pockets. \"All the shit from my past. Stuff with my dad; how he used to beat on my mother, how he loves my sister way more than he'll ever love me, how I spent the majority of my life trying to please everyone else but they always left.\" \n\nShe was practically willing herself not to cry. \"I didn't want to tell these things because I thought it would make me weak.\" Her brown eyes stared into his. \"Nate, loving you has hands-down been the scariest thing I've ever done in my life. It's also been the bravest. I've opened up to you more than I've had with anyone, including Nora. And see, that's the problem. In the back of my mind, there's always this thought that letting you in would ultimately be my downfall. You'd leave me like all the others, and honey I don't think I'd ever recover from that.\"\n\nNate's anger had vanished completely and was now replaced by understanding. She really was a basket case. \"So you decided to push me away, without givin' me a say on my future with you? How is that helpful?\"\n\nShe shook her head. \"It isn't. I never said my thought process was logical.\"\n\nHe chuckled sarcastically. \"Clearly. So why tell me all this now. What's changed?\"\n\nJamie took his hand, linking their fingers together. \"Me, if you'll have me. I can't promise I won't hurt you, and I now realized I can't expect you to make such an unfair promise too.\"\n\nHe was hesitant. His heart was screaming yes, but the logical side of him wasn't convinced. \"I don't know, Jamie. What happens if you think you'll get scared again? You can't just run away from things when it suits you. You've got to face your issues.\"\n\nThe tears really did fall now, but she didn't move to wipe them. He had clearly moved on. \"Nate, I...\"\n\n\"Luckily,\" he continued. \"You won't have to face them alone.\"\n\nHer sentence died on her lips as she stared wide eyed at him. He grinned shyly at her. \"We've all got our baggage, darlin'. Lovin' someone means you take the bad along with the good. And you've got too much good in you; I can't let you go.\"\n\nShe fell into his arms, sighing and crying tears of happiness. \n\nHe cradled her in his arms as he planted sweet kisses on her forehead. \"I can't change you, sweetheart\" he whispered. \"I realize that. But for some fuckin' reason I actually like havin' you near. So I guess puttin' up with your craziness is the only way I can make you stay.\"\n\nJamie laughed through her tears. \"That's the most semi, almost romantic thing I've ever heard.\" Her heart beat rapidly in her chest, happy adrenaline coursing through her veins almost making her giddy. \n\n\"So where do we go from here?\" she asked.\n\nNate shrugged. \"Well, first I gotta tell my boss I can't come into work today because I'm gonna head to Vegas for an impromptu wedding...\"\n\nJamie stared stupidly at him. \"What?\" Panic started to creep in slowly.\n\n\"Kidding,\" he joked, noticing her face slowly returning to normal. He grabbed his bag from his car and led her into the house. \"But callin' off is definitely in order.\"\n\nJamie smiled. \"Really? Why is that?\"\n\nHis grin was slow and wicked. \"Because you and I have a lot of making up to do.\" His hands went to cup her ass as he pulled her into the main hallway of the house.\n\n\"Oh really?\" she kissed him, enjoying his lips once more. \"What do you have in mind?\" She started to loosen his tie and tossed it to the floor.\n\n\"Not sure right now, but it involves a lot of groveling.\" He unbuttoned her jeans as she slipped off her sneakers. \n\n\"Groveling, eh?\" His shirt was next, nearly ripping the buttons in her haste. \"Will there begging involved?\"\n\nNate lifted her tank top over her head, marveling the sight of her large breasts inside a dark green bra. \"Oh, you'll definitely be on your knees darlin'.\" He kissed her hard, his tongue parting her lips to explore inside her mouth. His strong arms lifted her easily as Jamie wrapped her legs around his trim waist. God, she missed this. To think she had decided to walk away from this man, this blond god determined to make her beg for him. Foolish girl, she thought.",
        "\"I love you,\" she moaned.\n\n\"I love you too baby,\" His blue eyes sparkled, that sky color making her feel overwhelming ecstatic. \"Hey, I gotta bathroom we can use. Figure it'd be a helluva lot more exciting that way.\" \n\nThey both laughed. That was the same thing she said to him the night they first met.\n\n\"Very funny Harlow.\" She ran her hand through his short curls. \"Are we gonna stand here and talk, or are you gonna show me the only reason why I like you?\"\n\n\"Now there's the old Kincaid fire.\" \n\n\"What can I say, you bring it out of me.\" She kissed the tip of his nose. \"Now, let's get this reunion started.\"\n\nShe held him tight. For the first time her brain and her heart was on the same page. This moment, this was where she was supposed to be. His love was deep and unlike anything she'd ever experienced before: messy but powerfully unconditional. \n\nRunning away wasn't an option any longer. \n\nThe End. "
    ],
    "authorname": "nerd4music",
    "tags": [
        "drama"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/used-ch-06"
}