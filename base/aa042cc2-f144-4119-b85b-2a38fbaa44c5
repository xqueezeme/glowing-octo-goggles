{
    "title": "Gamer Goddess Ch. 01",
    "pages": [
        "Gamer Goddess Ch.01\n\nby Tx Tall Tales (c)\n\n==============================\n\nThe Gamer Goddess meets her match.\n\nThis story is very online-gaming-centric. It uses a lot of concepts, vocabulary and acronyms from games, especially Diablo 3, which this story revolves around. If you're not a gamer, it's likely this story might not be for you. Just a heads-up.\n\nA little gaming, online lingo:\n\nIRL/RL - In Real Life / Real Life (as opposed to gaming world)\n\nOP - Over Powered / Original Poster\n\nIMHO - In My Humble Opinion (I feel dumb even listing this one)\n\nXP - eXPerience, how you track progress in game\n\nNeckbeard - Overweight, unshaven, unkempt geek with hair on his neck\n\nNormal/Nightmare/Hell/Inferno - Progressively harder Diablo3 Levels\n\nDPS - Damage per second, how much game damage you do\n\nPortal - Game ability to teleport back to town. Takes a few seconds\n\nNoob/Newbie/New Meat - New to the game, ignorant or stupid\n\nRes/Rez/Resurrect - Bring a dead game character back to life\n\nGTFO - Get the Fuck Out - insult for a noob or jerk to get lost\n\nSTFU - Shut the Fuck Up\n\nTits or GTFO - popularized in 4chan. Typical response to anonymous 'girls'\n\n\n\n==============================\n\nI wasn't a socializer. I played hard and played to win. Recorded and posted some of my more interesting tactics, strategies and successes. No time for the namby pamby. I only had 11 in-game friends, turning down numerous requests a day. If I didn't know you IRL you weren't on my list.\n\nAnother scrolling pink message in the bottom corner of my screen was nothing special. Something to be ignored nine times out of 10.\n\n[CherryBomb] Dan says you have all the good gear. Hook me up\n\nWasn't worthy of a reply. Too busy farming Inferno Act III non-stop. I picked up my second legendary in as many days. I know that would excite a lot of newbies, but 9 times out of 10, I'd prefer a good yellow drop over the infrequent orange.\n\nThe game had been out for over three weeks already. Playing Beta had helped me get off to a rocking start, but people were catching up. I couldn't back off now.\n\nI popped out of the campaign, checking my auctions. I was well up into the 10's of millions. Maybe not the most, but doing well. The damn Chinese gold farmers would pass me before long, but that was the game. WoW had been just as bad, if not worse. Once I finished the game solo, I was going full-time hardcore anyway, and that would keep most of the bots at bay.\n\n[CherryBomb] Busy? I desperately need decent all-resist. Amulet would be best\n\nI'm sure it would be best. Pricey as hell. The Auction House held plenty. Go shop.\n\nColMustard was begging for a trip to WhimseyShire. Since I'd posted a vid of me solo'ing it at Inferno level, all my friends wanted to pay a visit. But he was better than most, and gave as good as he got. I opened up the game to take him on a tour. I was the only person I knew with the upgraded staff needed for Whimsey Inferno. It still kicked my ass. But the loot so far had been unGodly.\n\nFucker had to be res'd half a dozen times, and got me killed twice, which I hate, but it was good for about 60K in gold and two bags of loot. A kick ass shield, max block, hi armor, good crit. Should net a few 100K on the auction.\n\nCherryBomb was consistent, I'll give 'em that. Not spamming me, but every few hours I'd get a request for help with gear. It was getting hard to ignore it.\n\nI was leveling a new hardcore barbarian, after my accidental level 53 death the day before. Fuckin' lag. It was slower going, but I hated power-leveling through exploits. Finding some combo that was OP, that was one thing, but multiple quest turn-ins at double your level sucks IMHO.\n\nPerZeus was online, and offered an invite. He played a Demon Hunter. We worked together well. I also owed him. He'd found my quiver with 9% bonus to Elemental Arrow for my own DH.\n\nI joined his game and hit his banner in town. We were both almost level 50, and he wanted to run the boss's for XP before moving to Hell. \n\n[AceHole] Rdy?\n\n[PerZeus] One more. On her way\n\nShit. I hated that. Playing with someone I didn't know, especially hardcore, where if you died you lost the character for good, and everything on it. Anyone but PerZeus, or maybe GnuMeat, and I'd have left. We were standing in the stairwell, idling when the flash appeared.\n\n[CherryBomb] You ready? I only have 30 minutes\n\nCrap. I'd been dodging this character for three days.\n\n[CherryBomb] AceHole? Cool. I like your play-style\n\nCherryBomb was running a level 54 Monk. That was pretty impressive. A quick check of the profile was more disappointing. \n\n[AceHole] 4K DPS? Do you ever manage to kill anything?\n\n[CherryBomb] My gear sucks. Yeah. Why don't you hook me up?\n\n[PerZeus] Chat later? Let's get some XP and loot\n\nI'll say this. For someone so under-geared, CherryBomb had skills. Thirty minutes became an hour and we knocked out some pretty tough elite mobs and several bosses. The loot was mediocre but this was all about the XP.\n\n[CherryBomb] Gotta run. RL calls. Nice party. We should do it again\n\n[AceHole] I take back the 4K shit. You're good\n\n[CherryBomb] That's what they tell me ;)\n\nSmiley? Really? Fuckin' noob.\n\n[PerZeus] One more run?\n\nMistake. Almost died. It was a lot harder without CherryBomb. Still, we managed to survive, and broke level 51 where the gear got better. I had a 10 level reduction two-hander that was epic. It had been used by my previous character, and had been swapped out the same day I lost him and everything on him. The only good thing on an otherwise crappy day. Doubled my damage as soon as I equipped it. The next 4-6 levels would fly by.\n\n[PerZeus] Easier with Cherry. You gonna help her out gear-wise?\n\n[AceHole] You know her in RL?\n\n[PerZeus] No, but she's cool. Been around since day one\n\n[AceHole] Lotta noob mistakes. Doesn't know how to use Shadow worth a damn. And shitty gear. All the cursing. I think she's mapped a different curse to every quick chat key. Probably some neckbeard in his Momma's basement pretending to be a chick\n\n[PerZeus] That, or some 13 year old, who's just learned half those words. Never can tell\n\n* * *\n\nI hit level 56, and went back to my softcore account to do a little farming. Softcore was for learning. I intended to clear Inferno with every class, softcore. Hardcore was for fun. My auctions were almost all done, another 5.2 million in my account, mostly thanks to a 3.1 million ring. Needed to stock up. The economy was shifting. People had gold, and prices were going up. A couple of hours should do it.\n\nI logged in and saw the new friend request. CherryBomb. \n\nDenied.\n\nI was building my valor stacks for improved looting when the messages started.\n\n[CherryBomb] No friend? :( \n\n[AceHole] Sorry. It's a personal rule. Only peeps I know IRL\n\n[CherryBomb] Understood. A lot of fake weirdo's online. I'm pretty picky too\n\n[AceHole] Yeah. Sorry about that. You do play well. We can party some time\n\n[CherryBomb] Your place or mine? ;) \n\n[AceHole] Right. Your place is probably your Mom's basement, under about 3 feet of old Pizza boxes\n\n[CherryBomb] And your place is better?\n\n[AceHole] You'll never know. Access me through the recently played list\n\n[CherryBomb] You gonna help gear me up? Dan says you have the corner on amulets. You got a +75-80 all resist?\n\n[AceHole] 70 is max. Noob\n\n[CherryBomb] Why are you mean to me?\n\n[AceHole] I hate f*cking neckbeards pretending to be hot chicks just to scam gear\n\n[CherryBomb] I never said I was hot, and I am a 'chick' \n\n[AceHole] Tits or GTFO\n\nThat shut him up. Or so I thought.\n\n[CherryBomb] Skype. CherryB0mb22. Now!\n\nThis should be interesting. I escaped to menus, and alt-tabbed out. \n\nTwo minutes later I had Skype up, calling CherryB0mb22. The video chat window popped open.\n\nFuck. Me.\n\nNot possible. She was a little hottie. Geek glasses. Ultra-tight t-shirt showing some serious assets. Headset looked like the new Astro A40. Nice. \n\n\"Believe me now?\" she asked, smirking.\n\n\"Nice try. How much is he paying you to pose for him?\"\n\nShe looked a little more than irritated. \"You saying I can't play 'cause I'm a girl?\"\n\n\"I'm saying nobody that looks like that plays Diablo 3 eight hours a day.\"\n\nShe smiled. \"Kind of a backhanded compliment but I'll take it. My job is kind of hit or miss. I get a lot of free time.\"\n\n\"No, really. You a sister? Friend? Paid escort?\"\n\nSuddenly she wasn't so sweet looking, snarling at me. \"Listen, AceHole, I game. I'm good. How about some fucking credit where it's due?\"\n\n\"How did we meet in game?\" I asked, still finding it hard to believe she was the same CherryBomb.\n\n\"Other than you ignoring me for 3 days, PerZeus brought me in so I could escort your weenie asses through the end of Hell.\"\n\nI was stunned. \"You're real?\"\n\nShe smiled. She reached down and grabbed her t-shirt clad breasts, shaking them. \"Tits or Get-The-Fuck-Out? These real enough for you?\"\n\n\"I've seen neckbeard fakers with bigger.\"\n\nShe laughed with me, and it was nice to see. \"Trust me. Mine are better.\"\n\n\"I'm not the trusting sort. Pics or it didn't happen.\"\n\nShe pouted prettily. \"Pics aren't free. Not from the only girl on the internet.\"\n\n\"A 76 resist-all amulet, with 46 physical resist says those aren't real.\"\n\nShe grinned, raising her eyebrows cutely. \"I thought they only went to 70, noob.\"\n\n\"Shows what you know. 68 All Resistance, with 84 Intelligence. 76 Resist.\"\n\nShe looked interested. \"Pretty cool. I didn't think about it stacking like that. I prove they're real, I get the amulet?\"\n\n\"They better be spectacular. It's a 2 million gold amulet.\"\n\n\"No screenshots. Eyes only. And you deliver the amulet first.\"\n\nI knew I was being scammed. No way this was legit. It didn't stop me; tits were tits. I could make the 2 million back in a few hours. \"Switching to game now. Invite me in a couple of minutes.\"\n\nI popped back into the game. Took me about two minutes to grab the amulet out of my stash and accept her party invite. I ended up in town, with her main character. I dropped the loot on the ground. She only took a second to pick it up. \n\n[CherryBomb] Sweet! These stats are incredible!\n\nHardly incredible. Secondary stats were crap except for the Int. None of the really important attributes. But the resist alone made it valuable.\n\n[AceHole] It's pretty good. A big upgrade. It should help.\n\n[CherryBomb] Wow. Almost 40 percent increase in resist across the board. Thanks. Back to Skype?\n\nForty percent? She really was playing with crap for gear. And stupid. Monk had the easiest resistance in the game with their passive skill. Surprised she made it to level 54 hardcore.\n\n[AceHole] Sounds good to me.\n\nSkype was still up, and I switched out of the game, seeing her pecking at her keyboard. She turned to the camera suddenly looking shy. \"To be honest, I thought you were going to try to scam me somehow,\" she said.\n\n\"It's the internet. I thought the same.\"\n\nShe nodded. \"It's a kickin' amulet. Best gear I have by far. So much better than just the resistance.\"\n\n\"Yeah. I try to be fair. You cheat people, it comes back to bite you. Too many scammers out there. It's part of why I only friend Real-Life.\"\n\nShe smiled. \"I'll be honest. I was only going to flash you, but I'd feel like a shit after this. You so over delivered.\"\n\n\"I'll be honest too. I'm still waiting to be scammed.\"\n\nShe gave me a pout. \"Poor baby. So untrusting. So are you ready for me?\" She had her arms crossed in front of her, holding the bottom of her t-shirt. \n\n\"I've got my fingers crossed, and I'm hoping I'm wrong for once.\"\n\nShe smiled, scooted forward on the chair, and lifted her shirt slowly. I saw her firm stomach, cute little belly-button with requisite gemmed piercing, and then a simple white bra, covering some very nice if not huge tits. I'd guess a solid C. Then again, I'm hardly an expert.\n\n\"Like what you see?\" she asked, reaching up and shaking them.\n\n\"Very nice,\" I admitted. I hoped to God this wasn't the end of the show. \n\nShe laughed. \"I can see you, you know. You're thinking I'm gonna stiff you, right? Bra isn't tits.\"\n\n\"The thought crossed my mind.\"\n\n\"I'm not. I wouldn't. I'm not like that. Karma and all that shit. Besides, I think you and I are going to be great friends in game, and I know who has the outrageous gear.\"\n\nShe leaned forward, showing me cleavage. \"Close your eyes for me, OK?\"\n\nI really had my fingers crossed. On both hands. I closed my eyes.\n\n\"Open them.\"\n\nThe video window was full side to side, with the sweetest most perfect tits I could imagine. Ideal shape, pink areola the size of silver dollars, perfect hard little nipples a little bigger than a pencil eraser. I leaned forward, taking in every little bump, line and freckle.\n\n\"Don't disappoint me and start licking the monitor now,\" she giggled. \"You've been holding up so well.\"\n\n\"I was wrong. I'll man up. Definitely not a neckbeard. You, young lady, are the real deal.\"\n\nShe backed away from the screen, her hands reaching up and covering her tits. \"Fair trade? No scam right.\"\n\n\"Not fair at all,\" I said.\n\nShe looked mad. \"How could you say that? I thought it was more than fair! I know you liked them.\"\n\n\"Unfair. In the game. Now.\"\n\nI punched over. It wasn't fair. I'd underpaid. Let's face it, incredible gamer girl tits were a lot rarer than anything else in game. Possibly unique. We were still partied-up in her game. \n\n[AceHole] Give me the amulet back\n\n[CherryBomb] No way. A deal's a deal \n\nI hit the /take emote key, for its pre-recorded message.\n\n[AceHole] Take this.\n\n[CherryBomb] What?\n\n[AceHole] Swap Amulets. Give me old one, take this. Those tits are epic. I didn't pay enough. Now we're even\n\nShe picked up the Amulet, and dropped the previous one. She spent a few seconds examining it. I had her player up in the profile, and watched her swap out the jewelry.\n\n[CherryBomb] OMG! This thing is unreal! I didn't know they could have stats like this\n\n[AceHole] Mine is only .5% better on Crit. Maybe 12 million on auction. A few weeks from now, five times that. You still have a lot to learn. Amulets are attack gear. Max crit %, attack speed are more important than resist. Way more important than base stats. It is epic, but so are those tits\n\n[CherryBomb] You really think that one look was worth this? Are you always so fair in your dealings? \n\n[AceHole] I try to be \n\n[CherryBomb] You didn't take any screenshots or anything did you? Please tell me I'm not going to find pictures of my tits all over the place\n\n[AceHole] No way. Not my style. For my eyes only\n\n[CherryBomb] I'm going to be honest again. With a nick like AceHole, I didn't expect such decent behavior. Skype?\n\nI swapped out of game, and decided immediately I was going to upgrade my video card and run dual displays so I didn't have to switch out of the game. Maybe I'd replace the computer with something ridiculously overpowered, and play windowed. Fuck. Never mind. I'd run a second PC, second monitor. So much easier.\n\nShe was still topless, typing, her pretty tits jiggling. She turned to the camera. \"I'm going to put them away now, Ok? Debt paid and all?\"\n\n\"One more close-up?\" I asked.\n\nShe grinned. \"Hard to say no after that upgrade.\" She moved forward until those amazing breasts filled the window. \"No screenshots, right?\"\n\n\"I promise,\" I leaned forward, still finding it hard to believe these tits were on a fellow gamer. \"Do you know how hard it is to believe that someone who plays as good as you, has tits like these?\"\n\nShe backed away, giggling as she slipped her shirt back over her head. \"Now that is the nicest thing you've said so far. You admit I play good?\"\n\n\"You've got skills. Your movement in game is very good. You choose among your skills well. You still have a lot of holes in your game, and your strategy sucks ass, but you could be very, very good.\"\n\nShe leaned back crossing her arms. \"So what am I doing wrong?\"\n\nI laughed \"I don't have that kind of time. But you could start with worrying less about dexterity since you seem to have a ton, and work more on Attack Speed and Crit Hit Chance. I bet your Critical Hit chance is next to nothing.\"\n\n\"With my new Amulet, it's over 12%.\"\n\nWe spent about 20 minutes chatting about the best stats to chase, what equipment would have them, and why they were worth having. She was knowledgeable, knew the game pretty well, and was willing to learn. I was surprised to find I was enjoying the convo. \n\n\"I gotta run,\" I finally told her. \"RL calls.\"\n\nShe grinned. \"Don't you hate that? If only we didn't have to pay the bills, although I guess your Mom's paying yours.\"\n\n\"My bills are low.\" \n\n\"I'm sure. Pizza, Coke and Kleenex. Catch you in game?\"\n\n\"Sure. I'll be around.\"\n\n* * *\n\nIt was late the following afternoon. I was leveling my hardcore barbarian again, up to level 55. Things were starting to slow a little. I'd already finished Nightmare Act II. Champion Jailor Wasps damn near killed me, when I ran into a second boss crowd.\n\nI saw the rose colored writing in the corner.\n\n[CherryBomb] Amulet helps a lot. Thanks again\n\nI was too busy to reply, barely keeping my ass alive in a whacked out rare timed dungeon. Run-run-run. I had a ton of interruptions, both in game and in RL. It was over an hour before I had time to respond to Cherry.\n\n[AceHole] Glad you liked it. You upgrading anything else?\n\nNo reply. Maybe she was pissed at me for ignoring her for so long. I hit the auction house to see how my bank was doing.\n\n[CherryBomb] Sorry about that. Party play, crazy times. You should have been there, could have helped a lot\n\n[AceHole] I don't play open or with strangers. Especially not hardcore\n\n[CherryBomb] We're not still strangers are we?\n\n[AceHole] No\n\n[CherryBomb] You didn't tell me that Attack Speed and Crit Chance together were stupid expensive\n\n[AceHole] They're not. Shop a little. You can get some decent stuff for under $400K\n\n[CherryBomb] As if. At $200K I'd be broke again\n\n[AceHole] I hope you're kidding\n\n[CherryBomb] I wish\n\nCute girl. Total noob. Gold was too easy. How could she not be able to afford the basics? She did have decent gaming skills, just really short on game knowledge. I smiled to myself. Legendary tits. \n\n[AceHole] Got some time? Do a little softcore farming?\n\n[CherryBomb] Cool. Where?\n\n[AceHole] WhimseyShire\n\n[CherryBomb] No shit? You got the staff?\n\n[AceHole] Upgraded to Inferno. Ready in 5? I'm gonna stock up on pizza, Coke and Kleenex\n\n[CherryBomb]  :-) Invite when ready\n\nIt was slow going. She'd never been there before, and these were some of the hardest fucker's in the game, in a cartoon setting. We wiped out the first Elite pack, and she went to click on the Happy Cloud.\n\n[AceHole] Stop. Don't. Not yet\n\n[CherryBomb] Why not? We share evenly right?\n\n[AceHole] Clear level first. Then loot after switch to MF gear\n\n[CherryBomb] Magic Find? Does it help?\n\n[AceHole] Silly Noob. My MF buffed is 304. It helps a ton\n\nIt took us another 40 minutes to clear the rest of the level. She died three times, and I died once. She did a good job of staying alive and rezzing me, I'll give her that. It normally takes me less than 1/2 hour to do the whole thing solo. We still needed work, but by the end we were getting the hang of each other.",
        "[AceHole] Now. Let me swap out gear and we'll hit the loot\n\n[CherryBomb] My packs almost full already\n\n[AceHole] Should be. Portal to town. Dump pack. Grab MF gear. Loot. That's the way we farm places like this\n\nEverything I'd picked up was pretty trashy, but I did get one decent rare. Probably 40K or so. Not worth the effort so far, but we weren't done. I had picked up maybe 25K in loose gold. I grabbed my MF gear, and portaled back. I had to wait about 5 minutes.\n\n[AceHole] Took your time\n\n[CherryBomb] I'm not good at figuring what's good or not\n\n[AceHole] Link the rares to me, and I'll tell you. Not now though. Let's loot\n\nWe ran the level. I picked up 9 rares, including one good one, one very good one, and a remarkably useful legendary. The girl was good luck.\n\n[CherryBomb] I'm full\n\n[AceHole] We're done. To Town\n\nIn town we spent another 15 minutes with me explaining what would sell and what wouldn't. She had a lot of stuff, but nothing as good as my best 3. Too bad.\n\n[AceHole] Take this. Take this. Take this.\n\nI dropped the best of the loot at my feet. I didn't need it. Nothing would upgrade my personal gear, and I had plenty in my stash to auction for the next few days.\n\n[CherryBomb] One is a legendary\n\n[AceHole] Great boots. Use them\n\n[CherryBomb] Shit. This is all great stuff! You just picked these up? Is it because you have better MF\n\n[AceHole] All picked up this run. MF is shared, so you should have had better luck\n\n[CherryBomb] Two of these are upgrades to my gear!\n\n[AceHole] Because your gear sucks. We'll get you better\n\n[CherryBomb] You gotta leave soon?\n\n[AceHole] Yeah. More RL bullshit. Sorry. I'll show you better farming later. We'll work on your DPS too\n\n[CherryBomb] Do you have 5 more minutes for me?\n\nDamn. It was always like this. You help somebody out, and they keep beggin' for more. She should be happy I gave her the extra loot. The legendary boots would sell for a couple of million easy, maybe 3. Sigh.\n\n[AceHole] I do have to go. But I can give you a few minutes. What do you have in mind?\n\n[CherryBomb] Skype. Now\n\nI didn't even have to log out. My old laptop was up, hooked up to my 24\" display, Skype running. One button press, and it was on my main 32\". I made the call.\n\nThe window popped up, bigger today. Her cute face filled the screen. \"That was really nice of you to give me your drops.\"\n\n\"Not a problem. I would have sold them. You could use them. The boots are pretty sweet, I'll admit. You'll have a hard time ever replacing those.\"\n\nShe grinned. \"Well I think you earned a reward. Close your eyes.\"\n\nI closed them, smiling. Tits, Lord, let her show me her tits.\n\n\"You can open them.\"\n\nI opened my eyes and almost fell off my seat. She was sitting back in her chair. A top of the line Aero, the girl had good taste. I'm almost ashamed to admit I even saw the chair. She had one foot up on the desk, the other extended to the side. She was wearing nothing but a pair of pretty striped panties. This babe had a body to die for.\n\nShe laughed. \"Breathe, Ace. Don't go dying on me. I still need in game help.\"\n\n\"Nice. Are you sure you're a gamer girl?\"\n\n\"You got lucky. I was playing in my underwear today. Figured you deserved to know after such a good deed. I appreciate it all. The info on what's good. The help with the game play. And of course, the awesome gear.\"\n\nShe leaned forward, putting on a little less of a show. It might have been even more exciting, seeing her moving around, her breasts in motion, looking so natural. \"These boots are worth over a million, aren't they?\" she asked.\n\n\"Three to five, depending on your luck.\"\n\nShe grinned at me. \"Think this is a fair trade?\" She asked, opening her arms and exposing her body to me.\n\n\"Please don't ask that. I can't afford a fair trade this time.\"\n\nShe laughed beautifully, her tits bouncing up and down. \"No, I think you've given me plenty today, as long as you don't think I'm cheating you.\"\n\n\"Worth everything and more. Thanks.\"\n\n\"You're welcome.\"\n\nI couldn't believe I was talking so casually to a nearly naked game girl. \"You going to go back to farming?\" I asked.\n\n\"I don't know. I was thinking of leveling my hardcore monk. You already passed me.\" She stuck her tongue out at me. It was so cute I wanted to die. Of course I couldn't let her know.\n\n\"Don't. Farm softcore. You need the gear. Write this down.\"\n\nShe leaned over the desk and started typing. \"Act I Inferno. Start at The Cursed Hold. Go to the Festering woods and clear the two dungeons. Usually good for 2 to 3 stacks. Portal to town. Go to and clear Halls of Agony. Clear Cursed Hold. Make sure you have 5 valor stacks. If not, do Leoric's Manor backwards. Good for one sometimes two more stacks. Then kill the Warden, and Kill the Butcher. Go to town, and do Dank Cellar north of town, if it spawns. Got that?\"\n\nShe was nodding. \"5 Stacks?\"\n\nNoob. \"Each rare Mob gives you a valor stack. The 5 stacks make your magic drops much better. Don't kill the Warden until 5 stacks. Once you have 5 stacks kill everything and open everything. Try it for an hour or two. One run should take less than 30 minutes.\"\n\n\"Good loot?\" she asked.\n\n\"Some. Lots of loot. You can vendor, you can salvage. You can auction. Do it for a couple of hours and you should have some gold to buy things with.\"\n\nShe finished typing and sat back turning back to the camera. \"You still here? Don't you have someplace to go?\"\n\nI grinned. \"Yeah. But a few minutes won't kill me. I can't seem to tear myself away.\"\n\nShe laughed. \"I'm sure. Perv. I'll let you know how the farming goes. I'm going to get dressed now. I'm not going to have you blaming me if you're late.\"\n\n\"Spoilsport. Leave the camera on. I've got Skype on my phone. Nice distraction from the meeting.\"\n\n\"Now you're being silly. Go on.\" She had her t-shirt in hand, and she turned it right side out before putting it back on. She looked at the camera. \"Go. You're embarrassing me. I'm sure you've seen tits before.\"\n\n\"Once or twice. These are well above average. Like their owner.\"\n\nShe rolled her eyes, hit the keyboard, and the window went black.\n\n* * *\n\nWhen I logged in the next day, I saw the new friend request. I popped up the friend's box. Three new requests. One from CherryBomb. I thought about it. I really did. For several long seconds.\n\nDeny. Deny... \n\nDeny.\n\nI was trying out some different skill combinations on my Barbarian, while farming Act III. It was good loot, and consistently difficult. Gave me a good feel for what was and wasn't working.\n\n[CherryBomb] I'm a sad Panda. Nobody wants to be my friend\n\nI quickly cleared the room and moved back to a safe distance before responding. She did deserve a response.\n\n[AceHole] I doubt that. Sincerely\n\n[CherryBomb] Nobody that matters. :( \n\n[AceHole] Come farm Siegebreaker with me. You stay alive, I'll be your friend\n\n[CherryBomb] Inferno? Act III?\n\n[AceHole] It's a nice farming run. Best gear in the game\n\n[CherryBomb] No way I'll survive. I haven't finished even half of Act II yet. I can barely survive Act I\n\n[AceHole] Play carefully. I'll take the risks. Let me lead. You should be Ok\n\n[CherryBomb] This isn't your way of teaching me I'm not worthy, is it?\n\n[AceHole] This is teaching. That's all. Come play\n\nWe made four runs in a row. She only died seven times. Three against one troublesome crowd that even killed me. Not bad, really. She was still woefully under-geared. During the final boss kill, at 10% life, I took a chance, doing a quick gear change. Wish I had a macro for that. He dropped four rares for me.\n\n[AceHole] How's the drops for you?\n\n{CherryBomb] 3,4,5 blues and 3 yellow \n\n[AceHole] Town, we'll sort through it\n\nShe linked her gear to me. A backpack full of nothing but crap. Hardly worth the effort to try to auction any of it. \n\n[AceHole] Vendor blues, Salvage yellows. Nothing here\n\n[CherryBomb] Crapola. How'd you do?\n\nI was still scanning the gear. It was getting harder to find useful gear. People wanted max stats, good stats weren't good enough.\n\n[AceHole] This sucks. New plan. Gimme a minute\n\nI had to switch characters, get one of my mules. Transfer half a dozen items back to my stash and switch back.\n\n[AceHole] Take this. Take this. Take this\n\n[CherryBomb] This stuff is no good. Not nearly as good as my stuff\n\n[AceHole] Farming gear. Max Magic and Gold find. You'll have to be a little more careful. What's your Magic find now?\n\n[CherryBomb] 164\n\n[AceHole] One minute. BRB\n\nI scanned her gear. Got it. Less than a minute on the Auction house and about 4 million gold later, I was back.\n\n[AceHole] Take this. Take this\n\n[CherryBomb] Holy crap! Really?\n\nThe helm with the Perfect Star and the max Magic Find amulet would help a lot. The helm was a lucky find. Almost 2 Million, but way underpriced. It couldn't have been on the auction for long. Another couple of million for the treasure gem. The amulet was in my auction house stash, after not selling. I'd been asking a lot.\n\n[CherryBomb] I'm at 246\n\n[AceHole] Got a few minutes? We'll try Act II, Vault of the Assassin\n\n[CherryBomb] Sure\n\nMuch easier than Act III. Even with the weaker gear she only died once. We stayed above ground until we had four stacks. Then into the vault. Typically 4-5 packs, each one dropping multiple rares. And the jackpot. Legendary. Skorn. Best weapon in the game. Excellent rolls. Massive damage. Damn, this gamer babe was good luck!\n\n[AceHole] How'd you do?\n\n[CherryBomb] Pack full of rares. Two good ones I think\n\nShe linked them to me, and she was right. They were valuable. Three to five million for the gloves. \n\n[AceHole] Better gear, better loot. Three million min for the gloves. You like my weapons?\n\n[CherryBomb] You kidding? They're epic\n\nTo her, everything was epic. However in this case, she was right. At least for the main hand.\n\n[AceHole] Take this. Take this.\n\n[CherryBomb] Christ, Ace! I can't take this!\n\n[AceHole] You can. I have better\n\n[CherryBomb] How? Your main weapon is near perfect. 94% natural crit damage? 840 life on hit? And that DPS? Shit!\n\nI equipped the best two-handed weapon in the game.\n\n[AceHole] I'm using this\n\n[CherryBomb] OMG. You just found that?\n\n[AceHole] Jackpot. I could sell it for over $50 million. Makes the 5 million investment trivial\n\n[CherryBomb] What 5 Million?\n\n[AceHole] Your helm, gem and amulet. Auction house. Investment. Better drops. How much Gold did you get?\n\n[CherryBomb] Wow! I'm over a million. How'd that happen?\n\n[AceHole] Gear, baby. Farm with that gear. Level with the good stuff\n\n[CherryBomb] My base damage is up over 14000!\n\n[AceHole] Quick run to test it? Gear up. Good stuff. Seigebreaker\n\nWe did two quick runs. She didn't die. The loot was good. We were mowing down the bad guys with the huge damage we were doing. Skorn kicked ass.\n\n[CherryBomb] Skype. Now. Don't make we wait\n\nI laughed. She was stoked.\n\nI brought up the camera. I was a little disappointed to see she was wearing an oversized t-shirt. Her hair was disheveled. She stood up, facing the camera. \"That was incredible. We're playing easy-mode now.\"\n\nI laughed. \"DPS is the number one stat for everything. You like?\"\n\nShe leaned over and a sexy pair of unpainted lips blowing up large on my monitor. She gave me a kiss. \"I love it, Ace. You're too good to me.\"\n\nI'm sure I blushed. \"You bring me luck. You're great to play with. My lucky charm gamer Goddess.\"\n\nShe laughed, peeling off her shirt, wearing nothing but some simple light blue panties. She did an adorable pirouette. \"Maybe someday you'll get to find out how right you are.\" She sat back, giving me a wink, playing with her tits for me. \"Shit. I feel so inadequate teaming with you. I bring you down.\"\n\n\"Angel, you never bring me down. You're getting better. Lots better. Only one or two people I play with are as good. Don't put yourself down. Besides, you're more fun than any of them. We're a good team.\"\n\nShe grinned. Then pouted dramatically. \"How can I ever pay you back for this? It really is too much.\"\n\n\"Another kiss?\" I asked.\n\n\"You liked that? Better than these?\" she laughed, wiggling her boobs.\n\n\"Not better. But yes. I liked that a lot.\"\n\nShe got closer to the camera, licking her lips. \"You're not thinking naughty thoughts about my mouth, are you Ace? These lonely lips, and what they could do for you?\"\n\n\"You have the sexiest mouth,\" I told her.\n\n\"A lot of people say I have a dirty mouth.\"\n\n\"A LOT of people?\"\n\nShe grinned, blown up big on my screen. \"Filthy. Language like a sailor. At least in game. If only they knew.\"\n\nI giggled. She did curse in game all the time. \"Knew what?\"\n\n\"These lips. Barely been kissed.\"\n\n\"That's the saddest thing I've ever heard. A friggin' shame.\"\n\nShe leaned back, her face filling the frame. She looked a little sad. \"Would you change that, Ace? If you could.\"\n\n\"In a heartbeat. I'd love to taste those lips.\"\n\n\"You'd be gentle with me, right? I know I come on strong in game, but real-life is different you know.\"\n\n\"Pamper you like a princess.\"\n\nShe pouted. \"That's not what I need. I get plenty of pampering. I need a strong man. Like you. But gentle.\"\n\nWas she still teasing? Like me? \"I'd try. Gotta be honest, it would be awfully easy to lose control with someone like you.\"\n\n\"Tell me you'd be careful. Gentle. Breaking me in. Making a woman out of me.\"\n\n\"Whatever you need. I could be that for you. I'd be gentle. Gentle but firm.\"\n\n\"Kiss me, Ace.\"\n\nI leaned in, close to the camera, I pursed my lips, but not for a quick blown kiss. I closed my eyes, parting my lips, licking my upper lip, teasing the tip of my tongue forward, imagining the feel and taste of her lip.\n\nI heard a sexy moan. I opened my eyes and saw the fire in her eyes. \n\n\"I have to go Ace. I should have started getting ready 30 minutes ago. I wish I didn't have to.\"\n\n\"Wait. You ever play with voice chat, in game?\"\n\n\"No.\"\n\n\"We should try it. Next time we get a chance, I'll call you, voice only, and we can talk in game. Makes things a lot easier.\"\n\n\"Voice only? You afraid I might distract you?\"\n\nI laughed. \"I know you would. But that's not the reason. Much lower bandwidth, and the voice quality is excellent.\"\n\n\"Tomorrow. Morning. Teach me,\" she said.\n\n\"Everything I can,\" I promised.\n\n* * *\n\nI logged in and texted her by name. \n\n[AceHole] You out there, Cherry?\n\nI didn't wait 10 seconds. \n\n[CherryBomb] Waiting anxiously. What are we doing? You going to show me how to use voicechat?\n\n[AceHole] In a minute. First things first. AceHole#1101. My battletag\n\n[CherryBomb] Friend?\n\n[AceHole] Please\n\n[CherryBomb] I thought you only friended RL peeps\n\n[AceHole] I consider you a friend\n\n[CherryBomb] RU sure about this?\n\n[AceHole] No. But if I'm ever going to take a chance, I figure you're worth it\n\n[CherryBomb] I'd like to think I am. Thanks\n\n[AceHole] YW. Let's talk voicechat\n\n[CherryBomb] Can't hear enough of my sexy voice?\n\n[AceHole] Yeah. That's it. Get over yourself, gamer girl\n\n[CherryBomb] Not until you get over me. In every way\n\n[AceHole] Tease\n\n[CherryBomb] You know you love it\n\n[AceHole] I won't deny it. Now let's play, gamer Goddess\n\n* * *\n\nWe were playing at least a few hours together pretty much every day. She was getting better, and I'd have to admit I was as well. I was managing incrementally smaller upgrades on gear, but something improved every couple of days. Even better on our hardcore accounts.\n\nAs for Cherry, her gear was improving exponentially. We started playing our alts more to see how they stacked up. My Demon Hunter was doing massive damage, but still having problems with survivability. On the other hand, her hardcore wizard was kicking ass. We spent a whole day, nearly 11 straight hours farming hardcore gear for her, until it was almost up to her monk's level. \n\nOur game play was becoming so smooth. With Skype on, one word was all it needed half the time to make sure we were in sync. I'd never played with anyone I meshed with so well.\n\nOur softcore guys were making money, and learning the ropes, but hardcore was still the adrenaline pump. One misstep, and it was wipe and restart.\n\nWe were finishing up Inferno Act I hardcore, with only two levels of game play left to finish the whole damn thing. It was surprising how smooth the final kill went.\n\nWe were sitting back relaxing, talking about moving to the next step.\n\n\"What's New York weather like these days,\" I asked her.\n\n\"You stalking me, Ace?\"\n\n\"Hardly. You give away too much when you're playing. Manhattan?\"\n\nI'd never asked anything that personal. We were all about the game and the occasional T&A show.\n\n\"Yeah. Only a block from the park. I should get out more. How about you? Or do you mind my asking?\"\n\n\"We done here?\" I asked.\n\n\"Video?\"\n\n\"Would be nice.\"\n\n\"Switching over now.\"\n\nI logged out of the voicechat, and called her on video chat. 5 seconds later I was looking at her.\n\n\"Disappointed?\" she asked with her quirky smile.\n\n\"Never.\"\n\nShe was sitting in a pair of baggy pajama bottoms, and an oversized sweat-shirt. \"Getting over some kind of bug. Trying to keep warm,\" she said.\n\n\"You should have told me. You could be resting.\"\n\n\"This is the best rest I can get. It makes my day.\"\n\n\"Me too. I'm outside DC by the way.\"\n\n\"So are we getting chummy now? Going to get all close and personal like?\" she asked, grinning.\n\n\"Maybe, not too much. I'm sorry I'm such a weenie about this kind of stuff.\"\n\n\"Can I ask what you do for a living, that you have so much time for gaming?\"\n\n\"Perhaps later. I don't have to work much; I have enough to get by. Twenty hours of work in a week would be a heavy load, lately.\"\n\nShe leaned back, stretching. \"Ditto. It's been a dry spell here, but I can weather it. When work comes along, I may be away for a couple of days at worst. I usually can get some evening play in, but chances are the internet will be spotty. No hardcore on the road.\"\n\n\"You ever get down this way?\" I asked.\n\n\"Not often. Why? Are you asking me out?\"\n\n\"Sure. I thought we could hit Chez McDonald's if you've got a few hours to spare.\"\n\n\"Ohh, Mr. Generous. You buying?\"\n\nI laughed. \"Haven't I bought you enough? How about that awesome ring I got you.\"\n\n\"I love it. The gem is particularly beautiful. I bet that set you back a pretty penny.\"\n\n\"It would be gauche to mention it cost over 6 million. My gamer Goddess is worth every penny of it.\"\n\n\"6 Million? Are you kidding me? You shouldn't do that, Ace.\"\n\n\"Steve.\"\n\n\"Steve?\"\n\n\"My name. It's Steve. Not Ace.\"\n\n\"Well, Steve. Pleased to meet you. I'm Sheri.\"\n\nWe both started laughing. \"We are kind of silly aren't we? Over two weeks, spending most of our waking hours together, and I didn't even know your name,\" she said.\n\n\"13 days since we first played together. 12 days since your first show.\"\n\n\"You counting?\" she teased.\n\n\"Yes. I know the privacy is weird. Blame me. I've got hang-ups. Give me time.\"\n\nShe leaned closer to the camera. \"Take all the time you need. I'm not going anywhere.\" She sat back. \"Still, a ring like that, with a 6 million dollar stone? I feel like Elizabeth Taylor.\"\n\n\"I'm glad you like it. You're worth every bit and more.\"",
        "\"You trying to embarrass me again? Looking for a show maybe?\"\n\nI chuckled. \"You know me by now. I'll never turn down the show, but it's not required. No quid-pro-quo. I'm happy to gear you up. Playing with you is more than pay enough.\"\n\nHer smile turned sultry, as she leaned closer to the camera. \"You have no idea, Steve.\"\n\n\"In game, harlot! Playing with you in game!\" \n\nShe laughed again. I liked that. \"Tomorrow?\"\n\n\"Do you even have to ask?\"\n\n* * *\n\nIt was getting ugly. It had started well. The Act III dungeon was good for a couple of chests. We were playing hardcore, my Barb and her Wizard. \n\nWe stepped in it. Deep. Two elite mobs, all the things you hate. Walls, magma, extra health, invulnerable minions, crap. We were barely holding our own when she took a massive hit. \n\n\"Out. Out,\" I told her covering her retreat. She went in the wrong room. Dead End. Fuck. We got walled in a doorway. Our own tactics turned against us by the AI. I pulled out the stops, using my last big damage skill. \n\n\"HEAL,\" I shouted to her.\n\n\"Cooldown,\" she whined.\n\nI was down to about 10% life. Not good. I was walled in, standing in slow death, an invulnerable minion on each side of me. \"Portal,\" I told her calmly.\n\n\"But...\"\n\n\"PORTAL, DON'T DIE!\"\n\nI saw the animation start. I had to give her a few more seconds. Pot for health, and a push into the middle of the pack, pulling the mob with me. Block the door. Click, click, click. Dead.\n\n\"Fuck!\"\n\nIt was enough. She had made it out.\n\nA new tombstone, in my hero list. Not my first. Wouldn't be my last.\n\n\"You died?\" she asked.\n\nNo shit. \"Yeah, it happens.\"\n\n\"Not to you.\"\n\n\"Even to me. At least you made it out.\"\n\n\"What are you doing now?\"\n\n\"Starting a new hardcore Barb.\"\n\n\"I'm sorry,\" she said plaintively.\n\n\"I'm not. It happens. Not your fault. Ugly mobs. The invulnerable minions ruined it. No healing, no way past them. I had the wrong skills for this group. I screwed it up.\"\n\n\"You sacrificed yourself so I could get away.\"\n\n\"No reason both of us should die.\"\n\n\"You could have made it, if not for me.\"\n\n\"Maybe. I'd rather see you stay alive.\"\n\n\"I...I've got to go,\" she said. It sounded like she was crying.\n\n\"Don't get upset. It doesn't bother me. I'm happy you made it. I'll catch up fast. Give me a day.\"\n\nI was talking to dead air.\n\n* * *\n\nI slept two hours. I was level 41 when she showed up the next morning.\n\n[CherryBomb] Voice?\n\nI was in a hairy spot. It took me a couple of minutes before I could answer.\n\n[AceHole] Almost done here. One minute\n\n[CherryBomb] Ok. I'll be on when you're ready\n\nI finished up the dungeon, and popped out. Quick portal to town. Safe, I brought up voicechat.\n\n\"I'm on,\" I said.\n\n\"Good. Level 41? Already?\" she asked.\n\n\"I had my crew help a bit. I'll be back in the fifties by tonight.\"\n\n\"God, you're fast. About yesterday...\"\n\n\"It's a game, Sheri. It happens. Please don't sweat it.\"\n\n\"But you died for me.\"\n\n\"And I'll do it again, if I need to.\" I chuckled, \"I have to. I can't afford to equip you again.\"\n\n\"It's not funny,\" she said.\n\n\"Help me level, and we'll call it even.\"\n\n\"We won't be even.\"\n\n\"Stop it, Ok? I wanted to do it. I chose to do it. Accept it graciously, and let's play. I want my fun Sheri back.\"\n\n\"When you didn't respond to my message, I thought you were still mad at me.\"\n\n\"I was never mad at you. Now get your monk out, and help me. I hate being lower level than you,\" I teased.\n\nWe played until late at night. PerZeus offered to help, as did GnuMeat, but I stuck with Cherry. I was getting exhausted, sloppy, when she told me to call it quits. I was level 52. \"A couple of more levels.\"\n\n\"No. Stop. We can do it tomorrow morning. You're taking too many risks.\"\n\nShe was trying to talk sense into me. Tired and sloppy was not the way to play hardcore. \"You're right. Let's get to the next waypoint, and we'll call it a night.\"\n\nWe made it safely, cleaned out our bags, and logged out.\n\n\"Skype,\" she said.\n\nI turned on the video chat, and was greeted by an exhausted looking girl. \"Wow, you look like crap.\" I teased.\n\nShe smiled. \"Nice. Exactly what I was hoping to hear from my game beau.\"\n\n\"Ok. You look like beautiful crap. We played too long?\"\n\n\"I didn't get much sleep last night.\"\n\n\"I guess that explains the pajamas.\"\n\nShe laughed. \"This is my new gaming attire. It's the hottest trend. You like?\"\n\n\"Hell yeah. Then again, I'd like you in a burlap sack. Feel better now? We're almost the same level again. We lost a day and a half. No big deal.\"\n\n\"Your gear is shit.\"\n\n\"I'll get better. Most gear doesn't matter until level 60. Go through it in a few hours. Still an improvement over yours at this level.\"\n\n\"Rub it in. So you're really not mad?\"\n\n\"Not at all. I'm happy to be able to play with my favorite gamer.\"\n\n\"Right. That would be GnuMeat or PerZeus.\"\n\n\"No it wouldn't. I turned them both down today.\"\n\n\"But PerZeus is level 60, hardcore Inferno Act III. He could have covered you easily.\"\n\n\"I'd much rather team with you. You know that, right? We click. I love Dan like a brother, but you and I are perfect together.\"\n\n\"Except last night.\"\n\n\"Even last night. PerZeus and I would have wiped. You survived. How cool is that?\"\n\n\"I owe you big time.\"\n\n\"How about a kiss, and we'll call it even.\"\n\nShe smiled, leaning forward and kissing the camera. \"Better?\"\n\n\"Getting there,\" I teased.\n\nShe laughed, standing and walking around slowly disrobing. \"When do you want to start tomorrow?\" she asked, tossing her pajama top on the chair. She was going braless, and I was more than thankful.\n\n\"I'm going to have to take a pass, most of the day. I won't be online until after 9:00 pm, maybe later.\"\n\nShe was shimmying out of her pajama bottoms, and they slid to her feet. She stepped out and kicked them to the side. \"Good. I'll get some sleep. Maybe actually eat something healthy. Work out. So many things I should be doing. You're corrupting me you know.\"\n\nShe turned away from me, wiggling her sweet little butt. She was wearing sexy boy shorts under those pajama bottoms. And she had her thumbs hooked in the sides, slowly working them down. \"What's it worth, Steve? Panties on the ground?\"\n\n\"Four hours of farming. First choice of all drops,\" I offered.\n\n\"Six hours, and a Topaz to match my Ruby,\" her hands had stopped, with her panties halfway down her cheeks.\n\n\"Eight hours, a Topaz and an Emerald,\" I countered.\n\n\"Hey! That's not the way it goes. You're not supposed to outbid me!\"\n\n\"Please. 12 hours. All four gems, and 20 million in gold.\"\n\nShe was laughing so hard she had to sit down.\n\n\"Ok. Five hours and the Topaz it is. And no argument. After we get you to level 59 again.\" She brought her legs together bent at the knees, and raised them up. I watched those panties slide along her legs, then down her calves, ending up on one foot. She gave me a wink, and with a kick of her foot, the panties flew across the room.\n\nAnd onto the camera, blocking my view.\n\n\"Nooooo!\" I groaned.\n\nThe picture was back, her pretty face looking right at me. \"Sorry. That was not intended at all.\" She walked slowly backward, exposing more and more of her body, until she was almost full frame. She did a slow spin. \"What do you think? Too skinny for you?\"\n\n\"I wish I could come up with the appropriate joke or even a nice suave comment. I can't. You are amazing. Simply amazing. A Goddess. You take my breath away.\"\n\nShe smiled shyly, turning and looking over her shoulder as she slowly bent over, her ass pointed my way. She gave a little wiggle and bounce, setting her full cheeks in motion. \"You like?\"\n\n\"I have goosebumps. God, I wish I had some way of conveying how much I like it.\"\n\n\"Show me.\"\n\n\"Show you?\"\n\n\"I'm tired of being the only one half naked. Or fully naked, like now. Strip for me. Let me see if you really like the way I look.\"\n\nI smiled. \"What's it worth, Sheri?\"\n\n\"Trust me?\"\n\nI nodded. \n\n\"I promise it will be worth it. Maybe not this minute, but I swear you won't regret it.\"\n\nI moved back from the camera, pulling my shirt off. I wasn't as gorgeous as my Skypemate, but I did try to take care of myself. At the least, I ate pretty well. I could probably stand to lost 10 lbs, but I liked to think I wasn't hideous.\n\nShe gave me a wolf-whistle. \"Take it off, baby.\"\n\nI smiled at her. \"This is a little hard for me. Not too much teasing, Ok?\"\n\nShe nodded. \"Just a little then. You have to allow me a little. You give me enough shit.\"\n\nI took my shoes off, then opened my pants. I pulled the sides down, and my boxers were tenting badly. I stepped out of the pants, smiled for her, and gave her a raised arm hip roll and thrust.\"\n\n\"God. If I was there now, there would be singles sticking out of those boxers, all over,\" she said leaning closer to the camera. \"Don't stop now.\"\n\n\"Close your eyes.\"\n\nShe did, and I dropped my boxers, taking my aching cock in hand and moving closer to the camera. \"Open 'em.\"\n\nHer eyes opened wide, and her hand flew to her mouth. \"Oh my God. You're kidding, right?\"\n\n\"This is what you do to me, Sheri. Every day, hours and hours each day.\"\n\nHer face was pressed up almost against the monitor. \"So I guess you did like what you saw,\" she said softly.\n\n\"Like I said. More than I could ever hope to express.\"\n\nShe looked nervous. Even a little uncomfortable. \n\n\"Should I stop?\" I asked.\n\n\"Please don't. I need to do this.\"\n\n\"Let me know, if you change your mind.\"\n\n\"Give me a second? This is...difficult for me. But I want it. I need it. You have no idea how bad.\"\n\nI stroked it once, up and down, turning slightly. \"I think we should stop now,\" I said slowly.\n\n\"I think we shouldn't.\"\n\n\"No?\"\n\n\"No. Stroke that thing. Let me see you finish for me.\"\n\n\"I...I've never done anything like that. To be honest, if I do, I won't last 10 seconds. Not in the state you have me now.\"\n\n\"Please, Steve. I don't ask for much, do I? Do this for me?\"\n\nI turned toward the camera, stroking my cock almost straight at it. She leaned forward, and I saw her hands moving down between her delicious legs. \"You're beautiful,\" she said softly. \"Not scary at all.\"\n\n\"I'm moving the camera,\" I told her, breathing heavily.\n\n\"Why?\"\n\nI lifted the camera and placed it directly under the monitor. I could now look directly at her stunning face, while stroking. It was like I was doing it with her right there, with her looking down at me.\n\n\"It's under the monitor isn't it? You're doing it right in front of my face.\"\n\n\"I told you. It's too much,\" I gasped, speeding up my stroking.\n\n\"Come for me, Steve.\"\n\nI groaned and came hard. My cum hit the camera and all over the monitor. I watched her jerk backward in her chair, laughing self-consciously afterward. \"God, that was so real. Right at me.\"\n\nAfter the fact, I was dying of embarrassment. I opened the desk drawer, pulling out a roll of paper towels, wiping my cock clean, and starting on the monitor. \"Jeez, I can't believe I did that.\" I muttered.\n\n\"Thank you. It's a hell of a compliment. I owe you one. I'm going to leave you to clean up. I gotta get dressed before I get sick again. This place has the AC up way too high.\"\n\n\"Goodnight, Sheri,\" I said. \"Tomorrow evening?\"\n\n\"Look me up when you log on.\"\n\n* * * \n\nI got my 7 levels, and we started doing some farming, careful stuff since we were still working our hardcore characters. PerZeus gave us a couple of hours, and GnuMeat pitched in for a while. I got a few texts from my buddies, and some improved level 63 gear started dribbling my way.\n\n\"You play the trades and auction house like it's more of the game than the leveling,\" Sheri observed.\n\n\"In some ways it is. Almost impossible to farm all your own gear, if you're going for the good stuff. I wish I had some decent auction bots. The Auction House here sucks. So hard to search for the good stuff.\"\n\n\"You seem to be doing alright.\"\n\n\"Ok. I don't like this part as much. Boring, and I don't get to play with you.\"\n\nShe laughed. \"Is that what you want to do? Play with me?\"\n\n\"In every way imaginable.\"\n\n\"When am I going to get my farming for dropping my panties?\"\n\n\"We can start whenever you want. Hardcore or softcore?\"\n\n\"If you're going to play with me, wouldn't you rather it be hardcore?\" she teased.\n\n\"Hardcore it is.\"\n\nWe didn't get our full five hours in, but it was close to 2:00 am and we'd done more than four hours. We'd hadn't gotten much useful, until our last run.\n\n\"Bingo,\" I said, picking up the sweetest Mojo.\n\n\"What?\"\n\n\"Jackpot. We've got a home-run here, babe. About friggin' time.\"\n\nI linked it to her. \"What is that? A snake? Any good?\" she asked.\n\n\"I'll say. You could farm non-stop for two weeks and not find its match. I know someone who'll pay big for it.\"\n\n\"Really,\" Sheri sounded surprised. \"What makes it good?\"\n\nI had to laugh at her. \"You're kidding right? Silly noob. It's only 12 points from Max Damage, high min damage, huge int, decent vitality, 9% crit, mana regen and a socket. Friggin' epic. I've never seen a better one.\"\n\n\"Worth something?\"\n\n\"Worth enough to upgrade half your gear. Let me put out feelers. Gimme a sec.\"\n\nIt only took 5 minutes to scan the auction house, and contact my buds.\n\n\"Alright. Not as much money here in hardcore, but I got an offer for 28 million.\"\n\n\"MILLION? 28 MILLION?\" she shrieked.\n\n\"Yeah, probably double that on softcore, but that kind of gold buys so much more here. I'm gonna ask you a favor, though.\"\n\n\"Uh-oh, why do I feel like I'm about to be hoodwinked.\"\n\nI chuckled. \"ColMustard could really use it. He can only afford 21 million, but he'll owe you one, and he does a lot of farming. I'm sure he'll either have some sick gear for you, or he'll pay you later.\"\n\n\"You're serious. These guys are talking more money than I've ever seen. It's really worth that much?\"\n\n\"More, but you can make a quick deal. Personally, having Jaime owe you one would be useful. Fucker will be wracked with guilt, and he'll be sending you everything but his first born, for that thing. Like I said, best I've ever seen. Poor guy's creaming his jeans as we speak.\"\n\n\"You don't talk about him much. He a friend?\"\n\n\"One of the big three. He's just not much of a team player in game. Solo all the way.\"\n\n\"Big three. That would be PerZeus, GnuMeat and now ColMustard?\"\n\n\"Yep. Dan, Mark and Jaime. I'd consider it a favor. I'll owe you one.\"\n\nShe laughed. \"You found it, you're going to get me 21 MILLION gold, he's going to owe me one, and you're going to owe me one as well? Now I know I'm dreaming.\"\n\n\"Please? Seriously, every second you delay, he's out there going nuts. He just offered me his Helm as part of the deal. It's decent, but it's got a 6 Million Gem in it. Don't take the helm. He'll come up with something better.\"\n\n\"Alright. I just let him know he had a deal. He's so cute when he grovels.\"\n\nI laughed. \"First time I ever heard anyone call Jaime 'cute'. The guys will get a kick out of that. Go make the trade, and I'll meet you in town.\"\n\nFive minutes later, she was beside me again.\n\n\"I've got a new 'friend',\" she giggled.\n\n\"You're shitting me, right? Jaime friended you?\"\n\n\"He asked. Should I have said no?\"\n\nIt was a day for miracles. \"That was nice. I think you're his fourth friend.\"\n\n\"Fourth? The gang and me?\"\n\n\"You're in, babydoll. You got all three of us. Jesus, PerZeus is going to be lording this over us forever. I don't suppose you could de-friend him?\"\n\n\"The man who dragged you into my web, kicking and screaming? Not a chance. Video-time, sweetie.\"\n\nI punched out, and switched the monitor over. She was only a few seconds behind, smiling into the monitor. \"You remember our first deal?\"\n\n\"Like it was yesterday.\"\n\n\"Unfair. You way overpaid for those panties.\"\n\n\"Impossible.\"\n\n\"Seriously. 18 Million, and the last of the Big 3 as a new friend. How am I ever going to repay you?\" She rolled her chair back away from the camera, and she was already peeling off her shirt, leaving her in cute polka dotted bikini panties. She chuckled. \"Shit, Steve, I had no idea being rich would get me this worked up!\"\n\nI laughed. \"You're getting me pretty worked up over here.\"\n\n\"Dick or GTFO,\" she said huskily, sliding her panties off her legs.\n\nI stood, watching her, as I stripped naked, pausing for a moment to move the camera again, right under the monitor. Sheri opened her legs, her hand moving between them, rubbing herself. \n\n\"I...I'm wet,\" she said softly.\n\n\"I'm hard,\" I told her, centering myself in front of the monitor, and stroking my cock slowly.\n\n\"No, you don't understand. You're always hard. I, shit,\" she moaned, pulling her hand up and looking at her fingers, her beautiful pink slot on display. \"I don't get wet, Steve. Not without a lot of solo work on my side.\"\n\n\"Show me,\" I asked her.\n\nShe scooted her chair forward, rubbed between her legs, and slid her fingers inside, moaning. She sat up, and brought her fingers close to the camera, separating them, a string of her sticky juices stretching between them. \"You did this to me, Steve. This,\" she whispered, her eyes moving to the monitor, watching my hand moving up and down my shaft.\n\n\"I wish I was there,\" I told her. \"I'd suck them clean.\"\n\nShe looked into the camera, and a sexy little smile stretched her lips. She reached down between her legs, rubbing in small circles, and sliding back inside again. She brought her messy fingers back up to the camera. \"You'd suck this?\"\n\n\"Jesus, Sheri. You're so fucking beautiful,\" I moaned.\n\nShe eased her fingers into her mouth, closing her eyes, drawing them back out slowly, clean. \"Is that what you want to do, Steve? Taste my nasty juices, which only you can make me cream?\"\n\n\"Right from the source. I'd park myself between your legs, and nothing short of Armageddon would pull me away.\"\n\n\"You...you want to lick me, there?\" she asked hesitantly.\n\n\"More than I've ever wanted anything in my life. This is killing me. I want to smell you, feel you, taste you. I want to glue my mouth to that pretty little kitty, and make it purr.\"\n\nShe smiled, mischievously, \"The boobies and booty might get jealous.\" She reached up and cupped her tits, giving her hard nipples a tweak.\n\n\"They wouldn't lack for attention, I promise.\"\n\nShe was watching my hand, slowly moving up and down. \"Sit back, I want to see all of you, not just that huge dick.\"\n\nI adjusted the camera, and sat back on the edge of the chair, opening my legs, still playing with myself. \"Better?\"\n\n\"Much. You're lasting longer this time.\"\n\nI could feel myself blushing. \"I cheated. At our last break, you were driving me so crazy I squeezed one off.\"\n\nShe sat up abruptly, closer to the camera. \"You're shitting me! My voice got you that excited?\"\n\nI nodded. \"I told you. I'm hard for you now half the time I play. The only time I'm not, is when I get myself off, and then it's only for a few minutes before I'm aching for you again.\"\n\n\"Do you do that often? Get off when we're playing?\"\n\n\"At least a couple of times. Again, right after we're done. I'm sorry, I hope I'm not embarrassing you.\"\n\n\"I play with myself sometimes. That's why I'm only wearing my panties half the time. When you...the last time...you know, I went to my bed and had the hugest fucking orgasm thinking of you.\" She quieted down, her head bowed, and she looked up a few seconds later, her eyes glistening. \"Thank you for that. I felt normal there for a while.\"\n\nI grinned. \"Sheri, you're anything but normal. You're exceptional. Amazing.\"\n\nHer tears were running down her cheeks. \"I'm not, but thanks for saying so.\"\n\n\"To me you are. The best girl I've ever known. I adore everything about you. I wish I could let you feel what I feel.\"\n\nShe had closed her legs, wiping her eyes with her arm. \"I'm broken, Steve. I know it. Everyone knows it. I can't stand a man's touch, I'm frigid, sexless.\"",
        "\"Bullshit. You are anything but frigid. You are so fucking hot and sexy, you're making my blood boil.\"\n\n\"I hate men,\" she sobbed.\n\n\"Do you hate me, Angel?\"\n\nShe shook her head. \"But you're not real. You're just a fantasy.\"\n\n\"I'm very real. Look at me.\" I moved my face closer to the camera. \"Look, Sheri. I'm not a virtual person. I'm skin and bones, dreams and desires, and I'm falling in love with you. Tell me I'm not real.\"\n\n\"How can you say that? How can you say you love me? You don't even know me.\"\n\nI smiled. \"Do you think you know me? I think you do. You know what I'm going to do in game before I do half the time.\"\n\nShe grinned, sniffling. \"Duh. You're pretty predictable you know.\"\n\n\"You're sweet boobies think they know me,\" I teased.\n\n\"Ignore them, they're just sluts.\"\n\n\"No, they're in love, just like me. Lots of my body parts want to get to know yours, very intimately.\"\n\nHer grin got larger, \"You think? The boobies have been wondering what those strong hands would be like.\"\n\n\"They'd have to share. These hands want to get to know all of you, especially the big three.\"\n\nShe giggled. \"Big three? I hope you don't mean your clan.\"\n\n\"You know damn well what I mean.\"\n\n\"Tell me. Who do your hands want to get to know?\"\n\n\"Your incredible tits, which I can see perfectly any time I close my eyes. That amazing ass, which I fantasize about every night. Your beautiful, wet pussy, which I'm going to meet someday, and change my mind about kitties once and for all.\"\n\nThe camera went haywire for a second, the picture wobbly, and then it settled down, showing her belly. She scooted back, opening her legs again, her inner thighs and pink cleft filling the screen. \"You want to pet my kitty, Steve? Make it purr for you?\"\n\n\"Pet it, kiss it, lick it, stroke it. I want to feed it, so much cream it would never go hungry.\"\n\nHer fingers were moving, rubbing, slipping inside, driving me crazy. \"How would you feed it, Steve?\"\n\n\"I'd pet it with my cock, rubbing it until it was eager for me. I'd nudge its tight little mouth open, and push deep inside, slowly, savoring every moment of being there for the first time. So damn slowly, sliding deeper, every little motion in danger of making my head explode. I'd fill it, all the way, right to the end, and hold it there, the perfect fit, matching your tight clasp. Then I'd pet it on the inside, back and forth, learning everything about my new kitty, in and out endlessly, until the cream burst forth, feeding my beautiful pet.\"\n\n\"She's hungry. One feeding might not be enough,\" Sheri whispered, her hand working fast, rub, rub, slide inside. Rub, rub, slide.\n\n\"As much cream as she could ever want,\" I said.\n\nHer weepy moments earlier had left my cock in a similarly depressed state, but now it was eager to deliver on my promise.\n\nSheri's feet were on the desk, her thighs trembling. Her hand was a blur. \"Feed her now, Steve. Give me your cream,\" she begged. All I could see was the space between her legs, but I knew she was looking at the monitor.\n\nI stood, bringing my cock to the camera, stroking it faster. \"Open her mouth, beautiful. Open her mouth for me.\"\n\nI heard her whimper, both hands between her legs, her finger parting her lips, exposing the bright pink interior. Her thumbs looked to be fighting over ownership of her clit, buried beneath a dense forest of dark curly hair. I cupped my hand over the head of my cock, letting the glans peak out from where my index finger and thumb formed a tight little circle.\n\nI pushed forward, slowly. \"He's sneaking his way in,\" I said softly. \"First introduction.\"\n\nI heard the trembling in her voice. \"I wish it was true.\"\n\n\"See it. Feel it. Imagine it opening you, spreading you wide, sliding into your moistness,\" I whispered, poking my cock through the opening between my fingers, pushing downward, exposing more and more of my shaft.\n\nShe whimpered softly, her thumbs teasing her own clit, her fingers pushing into her pink opening, deeper, pulling wide, exposing a dark little opening.\n\n\"All the way, baby. All the way to the back. Filling you totally.\"\n\n\"Fuck,\" she groaned, her fingers sliding inward as far as she could.\n\n\"Quiet now, feel it.\" \n\nI stroked my cock, slowly, ever so slowly, the full length of my shaft. I took my time picking up the pace, stroking faster, longer. Faster yet, until my hand was almost a blur.\n\nShe squealed softly, and I could see her legs trembling, her fingers darting into her fissure. \"Coming,\" she moaned.\n\n\"Come for me,\" I groaned loudly. \"Come on my cock.\"\n\nHer voice moved up an octave, squealing. \"F...F...Fuck!\" she gasped.\n\nI stroked steadily, taking care of the head at the end of each stroke, until I felt my own imminent release. \"Spread it open,\" I demanded.\n\nShe had two fingers from each hand back inside of herself, opening up.\n\nI put one hand down on the desk bracing myself, stroking my cock at her big-screen face, right in front of the camera. \n\n\"Come for me, Steve. Fill me,\" she pleaded.\n\nI groaned, as I felt my release, spraying the monitor and camera again, as rope after rope burst forth.\n\nA few seconds later her camera was back on top of her monitor, and she was acting shy. \"I never expected to do that,\" she said softly.\n\n\"You have no idea how glad I am you did,\" I told her, cleaning up after myself.\n\nShe laughed. \"No, I got a pretty good idea. Got you a little worked up, didn't I? Kitty loved the attention.\"\n\n\"I'm not the only one worked up,\" I reminded her.\n\nShe grinned back. \"Guilty as charged.\" The smile slipped from her face, \"I still don't understand how.\"\n\n\"Me either. I know you could do better, but I'm glad you chose me.\"\n\nShe looked surprised, then angry. \"Don't say that. Don't you EVER say that!\"\n\nI was the one to look surprised. \"Come on. Face it. You're one in a million, so beautiful you make my soul ache. The only girl on the internet. I'm just an out-of-shape, older guy, who's good at hitting a few keys. It's a nice fantasy.\" \n\nI was more than a little shocked when she reached out and the screen went black.\n\n* * * \n\nIt was late, and I should have been sleeping. Big business meeting the next day. Still, I was restless and disturbed. Worried. \n\n[CherryBomb] Sorry. Forgive me?\n\n[AceHole] Nothing to forgive. Didn't mean to upset you\n\n[CherryBomb] You're everything to me. Please don't put yourself or us down\n\n[AceHole] I won't. My mistake. I'm sorry I ruined the most magical moment ever\n\n[CherryBomb] We'll have others. Better. Incredible\n\n[AceHole] Forgiven?\n\n[CherryBomb] Nothing to forgive. I didn't want you to be angry with me. I need you to know you're special. To me\n\n[AceHole] You too. Best thing in my life, by far. Tomorrow night? I'll be late\n\n[CherryBomb] However long it takes. I'll be here for you\n\n* * *\n\nThe meeting went well. The numbers guys had done their due diligence, and the price was right. I liked the product and their IP. Couple of nice patents. Dan, my best friend since childhood gave it his full approval. We closed the deal. My biggest yet. This would one would hurt if it didn't work out.\n\n\"You going to fly back tonight?\" Dan asked afterward. \"Want to grab a drink? Celebrate?\"\n\n\"Maybe another time.\"\n\nHe gave me a knowing grin. \"You're going to go play with CherryBomb, aren't you? You've forgotten all about your real friends.\"\n\n\"Hell. You know PerZeus is always welcome. It's your own fault. You introduced us.\" I gave him a friendly shove. \"Besides, you know I'd never forget my few real friends.\"\n\n\"I know. Nice deal, huh? Thanks for bringing me in on it.\"\n\n\"You and your money. You're still on the hook for 20%.\"\n\nHe laughed. \"You stupid fuck. You know I'd follow you in any deal, anywhere. The golden touch. You've already made me a wealthy man. All of us.\"\n\nI didn't like to talk about money. \"True friends. I'd give you all of it. Just ask.\"\n\n\"Ditto, buddy. You like her, don't you?\"\n\n\"More than I should. More than I'm comfortable with.\"\n\n\"She's the real deal. Family has money. Her gigs take less than 20 hours a week. A bit of a shut-in. Shy and aloof. No debt. No crimes. No stalkers. No marriages. Great credit. Nice bank account.\"\n\nI was not happy, to say the least. \"You're checking up on her?\" I snapped angrily.\n\n\"Of course. I'd rather have you hate me than get screwed over again.\"\n\n\"Damn it, Dan! You had no right!\"\n\nHe didn't flinch. He stood up to me, like only he and a very select few ever did. \"Fuck you, Steve. I have every right. I was there. Raked through the same damn coals. Don't tell me that I don't have a right.\"\n\n\"She's not like that,\" I told him.\n\n\"I had to make sure. I'm sorry if you think I overstepped my bounds. If I didn't do it, you know Mark or Jaime would have.\"\n\nHe was right. I had a history of bad decisions with women. And they'd suffered through the last one with me. It hurt all of us. \"I like her Dan.\"\n\nHe smiled. Put his hand on my shoulder. \"One drink in the bar. Then you can tell me.\" He chuckled, \"She is different. Special. I like her too.\"\n\nI'd been hoping to get online early, but one drink became two, then three. I told him about our escalation, and little webcam games. He was laughing, and jealous as hell. \"Got any pics?\"\n\n\"Nope. Sorry.\"\n\n\"You fucking liar. Mr. Security? Records every damn thing that goes across the internet? You're holding out.\"\n\nHe had me. I didn't consider it lying to her, I really didn't record anything other than what I always did, which was everything. I brought out my iPad. \"One look, and not the good stuff.\"\n\nI showed him a picture of her leaning back in her chair, laughing, dressed only in panties and bra. Another one of the close up of her lips, \"kissing me\".\n\n\"She's a honey. Who would ever guess?\" he said, zooming in on the picture.\n\n\"You knew that already. I'm sure you have pictures.\"\n\nHe laughed. \"Not like these.\" He passed me back the tablet. \"She's got my Ok. Seems safe. She's not dating. You should pursue it.\" He looked at his watch. \"Hell, it's not even 10:00 pm. You want to go over there? Surprise her?\"\n\n\"Hell no. That's not going to happen. Not like this, by surprise, half-drunk.\"\n\nHe looked serious for a moment. \"You're happier lately. Don't think we don't notice. She's good for you.\"\n\nI nodded. \"I am happier. She is good for me.\"\n\nHe took my drink. \"I've got the bill. Go play with her.\"\n\nI didn't argue. It's where my heart was. \"Thanks for the talk. And the research. I understand why you thought you had to do it.\"\n\n\"We're friends. Fuck, who am I kidding, we're family.\"\n\n\"Yes we are. I couldn't ask for better.\"\n\n\"Ditto. Now go. I'm sure she's waiting.\"\n\nThe laptop was good, but it wasn't like playing at home. Different keyboard, smaller screen, slower connection. \n\nI started up the game, logging in. She was playing.\n\n[CherryBomb] Voice is on\n\nI slipped on the head phones, connecting via Skype.\n\n\"Sorry I'm late.\"\n\nShe laughed. \"Good start. I was going to chew you out. I've been farming.\"\n\n\"Good,\" I was feeling all sappy, after my conversation. \"I missed you today.\"\n\n\"You too. Everything go well?\"\n\n\"Great. Closed the deal. Hung out with PerZeus a bit. I'm on my laptop so nothing too difficult tonight. I'll be flying back tomorrow.\"\n\n\"Where are you?\" she asked.\n\n\"Downtown.\"\n\n\"Here? Manhattan?\"\n\n\"Yeah. The Carlyle. Gotta keep up the image.\"\n\n\"Did you...do you want to meet?\" she sounded as nervous as me.\n\nI took a deep breath. \"I do. Not like this. It's late. I've been drinking. I'm in my damn monkey suit. Sometime. Soon. But not tonight Ok?\"\n\nShe chuckled. \"Thank God. I'm a horror right now. You'd run screaming. Soon?\"\n\n\"Soon. And for the record? I'd never run.\"\n\n\"Next Friday? I have a thing I have to go to. I could use a handsome date.\"\n\nA chill ran down my back. Meet her? Face-to-face? Friday? Could I?\n\nShe must have been concerned with my lack of response. \"I understand if you're busy.\"\n\n\"No. I'd love to meet you. Pick you up at your place? Give me a time.\"\n\n\"7:00. I'll text you my address.\"\n\nI didn't need it. I was embarrassed. \"I have to tell you something.\"\n\n\"Let me guess. You're really 50 years old, 5'2 and 300 lbs. You have a stand-in for our chats.\"\n\n\"No, seriously. I know where you live. What you do. Everything.\"\n\nI heard the catch in her voice. \"You are stalking me!\"\n\n\"No. One of my guys had you investigated. I'm sorry. It wasn't my idea.\"\n\n\"Damn it, Steve! That's not right,\" she sounded furious.\n\n\"I know. I'm sorry. That's why I wanted to tell you. I just found out.\"\n\n\"Your posse, wasn't it? Fuckers won't tell me dick about you. They all clam up like it's some kind of national secret. What do you have on them?\"\n\n\"Friends. Good friends. I don't have many, but these are like brothers. They were worried for me. I've had some problems with relationships in the past. They were only trying to protect me.\"\n\n\"PerZeus? GnuMeat? Which one, damn it! I'm going to tear them a new one.\"\n\nShe would too. Vicious little thing. I chuckled. \"Don't. For me. Please. Let this one go, and I'll owe you one.\"\n\nShe sighed loudly. \"Steve, this isn't something some toy in game is going to fix. You betrayed me.\"\n\n\"I know. I was hoping you could understand, I didn't want this. I told you as soon as I found out. I love what we have, and it would kill me to ruin it. Let me make it up to you.\"\n\n\"Fine. One chance. No more holding back. You know all about me, I want to know about you.\"\n\nIt was difficult, but I did it. I told her. About my background. No family. Three childhood friends, and two more college friends starting a business. Failing, and doing it again. Got it right the third time. A bad relationship, with my first serious girl cheating on me with one of my partners, both no longer in the picture. Later a wife, cheating slut who screwed me over when we sold the business, transferring her stock ownership after we got bought out, working with my enemies to force me out. I'd been conned by her from the start. I had money, and friends, but the business I'd built from scratch and poured my soul into yanked out from under me. We got our payday, but I was betrayed, and lost. Nothing to dedicate my life too. Eighty hour work weeks became zero. Until Dan and Mark got me into the Venture Capital game. It gave me something to do. Not enough, but something.\n\nMy friends were all men. I had an issue trusting women. I'd been burned badly, twice. Fool me once, shame on you. Fool me twice, shame on me. \n\nShe was quiet on the other end. Not interrupting, letting me get it all out.\n\n\"That's me. I don't trust anyone I haven't known for 15 years. Especially not women. I'm a recluse, rarely leaving my house. I don't socialize anymore. I don't do much of anything except play these fucking games. A month from now, I'll be done with Diablo and I'll have to find a new outlet.\"\n\n\"I'm sorry,\" she said softly. \"You must know, after digging up all my shit, that I would understand. I won't press it. We can skip next Friday.\"\n\n\"No, Sheri. Please. I do want to meet you. I have to. I can't live like this.\"\n\n\"Skype?\" she asked softly. \"Video.\"\n\n\"Alright.\" I brought up the video feed. She was sitting there, dressed to tease. Tight little shirt with 'Gamer Grrrl' emblazoned across the front.\n\nShe looked at me, and I could see her eyes were moist. \"I want to hug you, now, Ok?\"\n\nI nodded, and she leaned forward and hugged the monitor. \"That's the closest I've come to touching a man in two years,\" she said softly. \"I'd like a real hug someday.\"\n\n\"Me too,\" I told her. \"Thanks.\"\n\nShe smiled. \"I'm still going to chew PerZeus out. He's supposed to be my friend. I know it was him. He's always too damned curious. Way fucking over-protective.\"\n\n\"He approves of you. That's a first. According to him you're special.\"\n\n\"Damn straight I am! He's not getting off that easy. I'm going to get those epic bracers out of him for this. He owes me.\"\n\nI laughed. \"His pride and joy? That should be interesting.\"\n\n\"We're on for Friday then? You'll need to wear a tux. It's formal.\"\n\n\"I think I can scrape one up.\"\n\nShe looked nervous. \"It's just a date, Ok? Nothing afterward. I'm still not ready for that. I want to spend some time with you, see if I can, without freaking out. You promised to be gentle with me.\"\n\n\"A date. That's all.\"\n\nShe smiled sadly. \"I'm tired, Steve. Mind if we don't play tonight? Tomorrow. Look me up tomorrow.\"\n\n\"Tomorrow. Looking forward to it. And thank you for listening.\"\n\n\"Thank you for sharing. Sleep tight. Sweet dreams,\" she said, grinning mischievously.\n\n\"Shit. I'm going to meet you for real in a week. That's a dream come true. Goodnight.\"\n\nI called Dan. \n\n\"I thought you'd be online all night. She's not on?\" he asked.\n\n\"You missed something. In her background. Problem with men. Find it out.\"\n\n\"Got it. Anything else?\"\n\n\"No that's it. That and she figured out it was you who sold her out. You're in deep Kimchi.\"\n\n\"Shit, dude. You told her?\"\n\n\"I told her she was investigated. She figured out who all on her own. You're not very subtle, are you? Never were.\"\n\nHe laughed. \"Not my strong suit. Thanks for the heads up.\"\n\n* * *\n\nThings were awkward between us. We still played, and flirted in game, but there were no more late shows. We'd video chat some, and she'd still dress to tease, but nothing beyond that. We both recognized the issue, but we skirted around it. \n\nI had my assistant make the arrangements. Hotel, flight, limo, tux. A few options for a late night bite afterward if we wanted. I was getting nervous.\n\nWednesday I got the call from Dan.\n\n\"You're right. I fucked up. She's damaged goods,\" he said anxiously.\n\n\"How damaged?\"\n\n\"Kidnapping, assault and gang rape. Three days they had her. She managed to escape. The first person who found her walking down the street, naked and beaten, raped her again. Pretty ugly. She was hurt. The hospital pictures are bad.\"\n\n\"Two years ago?\" I asked.\n\n\"Thirty months. She's messed up. Got her psychiatric records. That wasn't cheap. You don't want this one.\"\n\n\"I'll decide what I want or don't want.\"\n\n\"She can't stand men. Can't stand to be touched. I don't know how that idiot investigator missed it.\"\n\n\"Thanks for the info. I'm sorry I had to drag you into this.\"\n\n\"No sweat. You want I should send you the package?\"\n\nI knew he meant the pictures. \"No. She's been raped enough.\"\n\n* * *\n\nOn Thursday we played for a couple of hours until she abruptly cut me off. \"Video. Now.\"\n\nI switched over. She was as beautiful as always, still dressed teasingly. I don't know how she did it.\n\n\"What's wrong? You getting cold feet about tomorrow?\" she asked nervously.\n\n\"Nothing's wrong. I'm still looking forward to our date.\"\n\n\"Bullshit. Something's wrong. You don't think I know you by now? Spill.\"\n\nShe deserved to know. \"I was wrong. I didn't know all about you. I didn't know about your ordeal two years ago.\"\n\nShe sighed and put her head in her hands. \"Jesus, Steve. So I'm not good enough now? Too dirty? Soiled goods?\"\n\n\"Stop. That's not it. Not at all. But when we talked, you seemed to think I knew. I wanted you to know the truth. I'm sorry.\"\n\nShe leaned back, and I saw she was crying. \"I understand if you don't want to go out. This probably won't work, you know. I'll probably run screaming. I can't stand to be touched. The thought of a man doing things to me makes me physically sick.\"\n\n\"What I don't understand is the way you can tease me and joke with me over the web. How could you even stand to see my...my penis, after what happened to you?\"\n\n\"I don't know. In game it's easy enough, everyone's anonymous. Teasing you over Skype made it a fantasy. Like I was normal. Almost like a real relationship. I've never had a boyfriend. I liked pretending that you and me, we could be like regular people.\"",
        "\"You wanted to see me. Down there. You even seemed to like it.\"\n\nShe blushed. \"I did like it. Fuck if I know how. It wasn't real. My boyfriend getting excited over me, like a normal couple. I liked it. I'm scared to death it won't transfer to real life. I know it can't.\"\n\n\"But you're willing to try.\"\n\nI saw the tears in her eyes. \"Please. You'll have to take it slow. Try to understand if I freak out on you. The party alone is terrifying.\"\n\n\"Maybe we should start out on a normal date. No crowds.\"\n\nShe shook her head. \"I have to go. It's family. I need to do something. I'll end up a crazy old woman in a house full of cats at this rate.\"\n\n\"Cats? Please tell me you're not a cat person.\"\n\nShe laughed. \"That's the deal breaker? Not the rest of it? Cats?\"\n\n\"Don't dodge the subject. Fess up. There's a line, you know. Some things a man can't accept.\"\n\nSheri shook her head and got up. She didn't say anything, she just walked out of the camera view.\n\nGod, had I fucked up? I was trying to lighten the mood. I waited patiently. I had nothing else to do anyway. \n\nShe was gone a while. At least a couple of minutes. She came back and settled into her chair, looking up at the camera. She tapped her hand on the desk, and a big beautiful chocolate lab hopped up, panting in front of the camera.\n\n\"Steve, meet Max.\" She put her arm around his neck, hugging him. \"The only man in my life for the last couple of years. He's a deal breaker. No Max, no me.\"\n\nI grinned. \"He's the most beautiful thing I've ever seen. Gamer, gorgeous and loves dogs. No wonder I adore you.\"\n\nShe peeled off her shirt, laughing. \"He's the most beautiful thing? Mangy ol' cur. Have you forgotten about these already?\" She was wearing a simple cream bra. I didn't know she had anything that plain.\n\n\"Like I could ever forget? They're pretty sweet. But have you seen that dog? Really seen him? He's the whole package.\"\n\nShe leaned forward, and Max licked her face. She pushed him away. \"Bullshit. You know which you would choose.\"\n\n\"Really? You would make me choose? And I thought you were nice.\"\n\n\"No you didn't. I'm not nice, and you know it.\" She leaned closer. \"I'd never make you choose. It's a package deal.\"\n\nI laughed. \"Smart girl. Sweeten the pot. How'd you know I had a weak spot for labs?\"\n\n\"Did my research. Your first dog, Yogi? When I saw that, I knew it was destiny. Max's grandma was Boo-Boo.\"\n\n\"You're checking up on me?\"\n\n\"Not me. Dad. He wanted to know who the man was I'd leave my room for. Sorry. At least you're honest.\"\n\n\"Scared off yet?\" I asked.\n\n\"Hardly. If anything I want you more. Oh, and I want a limo and an orchid corsage. I think you can afford it. Be glad I don't ask for the whole florist shop.\"\n\n\"Pick one. It's yours. What color are you wearing?\"\n\n\"A very light pink. A hint of lavender. I think you're going to like it.\"\n\n\"I don't doubt that. Cleavage?\"\n\nShe blushed. \"As much as I can dare. The boobies insisted. They think they have a very special relationship with you.\"\n\n\"I think they're smarter that both of us. Matchmaker boobs.\"\n\n\"I know, right? I would try to hide them. Let you and me get to know each other. As soon as they'd hear your voice, they'd perk up, make me miserable until I had to take my shirt off. You're not bribing them or anything, are you?\"\n\n\"You caught me. I promised them a trip to Victoria's secret. They were complaining that the booty gets all the love. Fancy panties but nothing for the girls. Come on, look at that bra. I bet the booty is partying in lace.\"\n\n\"I've had the booty longer. The boobies have only been around a few years. The booty's been with me forever.\"\n\n\"Lucky booty. She deserves the lace. I'd be happy to invest in more.\"\n\n\"Oh no you don't! I see what you're up to. Butter up to the booty, bribe the boobies, next thing you'll be trying to get in good with the kitty.\"\n\n\"You wound me. You know my stance on cats.\"\n\n\"Why do I think you might make an exception for this little pussy...cat?\" she grinned.\n\n\"I don't know. That's a lot to ask.\" I told her.\n\n\"I think I'll let her make her own case. She can be very convincing.\"\n\n\"I don't know. I'm a tough nut to crack.\"\n\nShe giggled. \"She's cracked tougher nuts.\"\n\nI leaned forward. \"You are driving me crazy here, gorgeous.\"\n\nShe opened her bra, slipping it off, leaning forward. \"Purely intentional. Trying to build up credit for tomorrow. Just in case.\"\n\n\"Sheri, relax. You've got a lifetime of credit already. You could stab me, shoot me and set me on fire, and I'd still come back for more. I'm not a quitter. I'm going to ride this out until you tell me to stop.\"\n\n\"Could be a bumpy ride.\"\n\n\"I'm thinking the ride of a lifetime.\"\n\nShe smiled. \"That too. Ticket price is not too high?\"\n\n\"Not for me. I'll buy a lifetime pass. Whatever the cost.\"\n\nShe leaned over and hugged Max. \"What do you think, Max? Is he worth it?\"\n\nHe licked her, and she laughed. \"I agree. We'll give him a chance, Ok?\"\n\nShe grinned, \"Did you bribe him too?\"\n\n\"Didn't have to. Us guys stick together. Bro-code.\"\n\n\"What time are you flying in?\" she asked.\n\n\"I've got a meeting downtown at 3:00. I'll be at your door at 7:00. Wild horses couldn't keep me away.\"\n\n\"This is going to be great, isn't it?\" she asked.\n\n\"Perfect.\"\n\n======================\n\nThank you for reading. This is chapter 1 of a 3 chapter story. If you enjoyed it, you're invited to comment and vote!"
    ],
    "authorname": "Tx Tall Tales",
    "tags": [
        "gaming",
        "skype",
        "video",
        "tits",
        "ass",
        "masturbation",
        "victim"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/gamer-goddess-ch-01"
}