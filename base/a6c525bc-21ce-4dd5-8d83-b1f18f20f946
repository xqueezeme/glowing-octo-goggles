{
    "title": "The Wingman",
    "pages": [
        "All characters in this story are 18 years of age or older. They are in or have completed their final year of high-school and are moving on to college. \n\nIowa has been the corn capital of the good old U.S. of A. for as long as anyone in my state can remember.\n\nWe have corn festival's, corn parties and I'm sure any other thing that you can imagine that is associated with the sacred yellow cob.\n\nI come from a small place called Pleasantville. Yeah, just like the show. It's near Lake Red Rock and it was a great place to grow up.\n\nLike the Keith Urban song says, it had, \"Everything I needed, John Cougar, John Deere, John 3:16.\"\n\nMusic, farming and Jesus. What else could a boy ask for? Oh, I don't know, maybe a girl.\n\nYou see, all through high school I played the Invisible Man. Not intentionally, but because of my lack of status on any of the sports teams, I was usually just a ride along, or as my best friend once put it, I was the World's Best Wingman.\n\nThe handle was given to me early in my first year. Mark Robinson was a star at everything that he did, but basketball was his calling. He starred immediately in the early years of high school. All the pretty girls wanted to be by his side, and he refused to disappoint any of them.\n\nMark's biggest problem was that he came from a very religious family and he was never allowed to date unchaperoned, and that's where I came into the picture. The only time that Mark was able to get away was if he took his twin sister Macy and or me, along with him and his date. Turns out that it was also a community thing, strength in numbers when teenagers are out, I guess.\n\nWith only 200 students at our school it wasn't hard to know most of the students, so Macy was almost always friends with, or an acquaintance of Mark's dates.\n\nOnce, and only once, Mark referred to it as a double date. For his efforts he received an earful from his sister, and a threat to tell his parents about him having pre-marital sex in the backseat of their mother's SUV. Even if that sex was just a hand job.\n\nMany a Saturday night, Macy and I would sit in the front seat together at the drive-in, sharing a tub of greasy, buttered popcorn and a pop, while her brother and one of her friends learned the facts of life in the backseat.\n\nMacy was everything that you would want in a girl. She was beautiful with her dark hair and Eastern European, almost Russian looks. She was also very athletic and smart. I know what you're thinking, and yes, I tried to make a move. Both times it resulted in a slap and a punch.\n\nThe punch was from Macy, \"I swear to fuck Brandon, you touch my tit one more time and I'll knock you out\", and the slap came from Mark in the backseat of the car both times. \"Fuck man, what are you doing? That's my sister.\"\n\nIt was hard to explain to my best friend that his sister wasn't ugly, and the sounds and smells of him playing with a pussy just over my shoulder had the same effect on me that would on most other guys my age.\n\nSo, after a couple of months of riding shotgun on dates, with a number of different girls, the nickname, \"Wingman\" stuck with me until graduation.\n\nBy the start of senior year, I was the guy that you hired if you needed someone to tag along so that your dates friend or ugly cousin was covered. And if your dates friend / cousin tried to cock block you, I could steer her clear. A true wingman.\n\n\"Hey Brandon, I'm taking Alysa to the Vallee on Saturday night, you feel like tagging along?\"\n\nNot only was I not that close of friends with the guy asking, I had always had a small crush on Alysa, so the idea of her getting fingered or worse, while I played nice with her friend had absolutely zero appeal to me.\n\n\"Sorry man, I saw the movies last weekend.\"\n\n\"Yeah, I know. Mark told me. Look, I'll pay for everything. I'll even buy dinner and I'll get my brother to pick up a six pack for us.\"\n\n\"Nah. It's not going to work for me. Thanks anyway.\"\n\nI could tell what was coming next, Harry Bateman's parents had the biggest farm within 100 miles, and he wasn't afraid to flash their cash around.\n\n\"Come on man, she promised to blow me. Maybe you can hook up with her friend.\"\n\nThat wasn't likely. It had never happened so far. Most times when the girls at my school were going out and needed to bring a friend, they requested that I came along, because knew that I was the safe choice. Not too handsy, never forceful, and as a few had said, I even smelled good.\n\n\"Sorry, Harry. Not gonna happen.\"\n\n\"Fuck man, I'll give you fifty bucks and you can drive the Yukon. Look, I'll even put in a good word with Alysa, maybe she can talk her friend into blowing you too.\"\n\n\"In advance.\" I held my hand out and waited for him to peel off five $10 bills. It was a drop in the bucket for Harry and it would be a bit of extra cash for me.\n\nPocketing the Alexander Hamilton's, I made my way toward the gym. I could hear the sound of Mark's monstrous feet slapping the asphalt as he ran to catch up to me. From the speed of his approach, I could tell that it wasn't a good sign.\n\n\"What the fuck Bran, did you just pimp yourself out to Bateman over me?\"\n\n\"If that's what you want to call it, then yes. And just so we are crystal clear, he pays me. Unlike my ungrateful, piece of shit friend. Also, he said that I might have a chance with the girl Alysa's bringing.\"\n\n\"Yeah, let me know how that works out for you.\"\n\n\"What's that mean?\"\n\n\"You're too soft buddy. The girls at this school want a guy that's assertive. You know, someone that will take what they want. Anyway, now what the fuck am I gonna do on Saturday? I already told Cheryl and Macy that it was a go.\"\n\n\"Sorry buddy, but I'm trying to be more \"assertive\".\" Putting my fingers in the air for quotations to mock him just pissed him off more.\n\n\"Fuck you Brandon. Next time I'll bring someone else.\"\n\n\"Oh yeah, I bet that there's a line-up of assholes dying to listen to you getting a hand job from Cheryl. The sound of latex gloves rubbing on your dry dick is a turn on for us all. Tell you what, I'll honk the horn when I drive Harry's Yukon past your house.\"\n\n\"Wow. You're such a cunt when who wanna be.\"\n\n\"Yeah, but I'm a cunt with $50 bucks in my pocket, the keys to Bateman's whip, and he, unlike you, is going to try and hook me up.\"\n\n\"Fuck you.\"\n\n\"Is that all you got Robinson? Don't play this game with me, you're just not any good at it.\"\n\nI wish that I'd kept my mouth shut, because this basketball practice was harder than most. Coach had me trying to guard Mark, and he proved a point to me about just how good he was by punishing me on the court.\n\nAs planned, Harry's text came in around 3:00 in the afternoon. He picked me up and as agreed, I got behind the wheel and drove over to Alysa's house to pick up the girls.\n\nThey were standing near the end of the driveway as we pulled up. Alysa was waving and bouncing like a maniac while her friend had her back to us making a phone call. Alysa was dressed in her usual short skirt and low-cut blouse. She always liked to show off the goods. That, accompanied with her blonde hair, is why she is so popular around school.\n\nI knew the other girl before she even turned around. Her shoulder length brown ponytail, with her small frame covered with tight Levi's, a school hoodie, and the ever-present plaid backpack that she called a purse, gave her identity away.\n\nHarry jumped out of his truck and held open the back door like a gentleman. He and Alysa jumped in and buckled up while we waited for the friend.\n\nThe look on her face was enough to make me laugh when she saw who was behind the wheel of Harry's Yukon. She shook her head and climbed in.\n\n\"Brandon?\"\n\n\"Mace.\"\n\n\"Mark couldn't talk you into going with him and Cheryl tonight?\"\n\n\"Nope. Better options here. Plus, the last time we went out with Cheryl, I was seated in the splash zone. Ended up with a little something extra on my jacket if you remember?\"\n\n\"Ew. That's gross. Thanks for reminding me.\"\n\n\"Oh shit, I forgot.\" I looked over at Mark's sister as she shot death rays at me through burning eyes.\n\n\"You say one fucking word, and I swear, I'll kill you right here.\"\n\n\"What?\" Both Harry and Alysa asked from the backseat.\n\nMacy was quick with a \"nothing\" and from her tone, neither of them had the nerve to continue the questioning.\n\nIt was the same night and the same time as the jacket incident. Cheryl had her hand wrapped around Mark so hard that he couldn't ejaculate. All of the sperm was being held in the shaft of his dick as Cheryl stroked him furiously. Mark was groaning in what was later determined to be agony. When she finally released her hold. Mark's cum flew everywhere. Some landed on the shoulder of my jacket, but the best was the huge glob that landed in his twin sister's hair.\n\nMark laid back against the seat. Cheryl tried her best to clean up all that had landed on her, and I laughed like a hyena. To this day, it is a sore spot with Macy.\n\n\"I'm not joking Brandon. Say anything, and you'll burn in hell.\"\n\nI didn't say anything, but there was no way she could erase the smile that was curled up on my face.\n\nThe ride to the restaurant was quiet. The sounds of Harry and Alysa making out was drowned out by Harry's playlist belting out of the speakers while Macy kept herself busy, texting.\"\n\nAbout 10 minutes away, Macy looked at me with a look of disgust on her face.\n\n\"Really?\"\n\n\"Really, what?\"\n\n\"Did you tell my brother that you were getting a blow job tonight?\" Her tone wasn't much higher than whispering so that those in the backseat couldn't hear. So was mine.\n\n\"NO! Well not exactly. I told him that Harry promised to try and hook me up tonight. But that's before I knew it was you.\" Her expressions changed before my very eyes, they were both pissed off looks, but for completely different reasons.\n\n\"What, I'm not good enough for you Brandon?\"\n\n\"No. Yes. You know what I mean. Fuck, we've been out so many times. I mean come on Mace, I tried to touch your boob once and you almost killed me. Do you honestly think I'd try anything funny on you?\"\n\n\"You're a piece of work Wingman. You think that just because Bateman tells his new girlfriend to ask, I should blow you?\"\n\nI whispered that she should blow me just for putting up with all of her shit for the past several years.\n\n\"What?\"\n\n\"I said that I think you should blo...nothing. Never mind. Look why did you come anyway. You must have heard that it was me tagging along.\"\n\n\"As a matter of fact, I didn't, or I probably wouldn't have come. But free food and a movie, is never a bad thing.\"\n\n\"Yeah, and we've both had our fair share of those over the years, haven't we?\"\n\nDinner was good, and with darkness just on the horizon, we headed to the drive-in. Parked away from the other cars, Harry got a small cooler out of the back and handed out a round of drinks.\n\nThe cold beer tasted good as we watched the movie.\n\nI could hear zippers and buttons being undone, but I never once looked over my shoulder, and that's why I was the best wingman in Iowa. Both Harry and Alysa knew that they were safe with me. Unfortunately, the same could not be said for Macy.\n\nCuriosity got the best of her. The sounds of our friends making out was more than enough to draw her stares. At one point I noticed a naked leg pushing on the headrest of Macy's seat and knew that tonight's party had escalated beyond a simple make-out session.\n\nMacy's head bobbed just like Alysa's as she followed the movements of her friend's head as she sucked Harry, and her eyes widened when the main act started.\n\nWith a few grunts and some \"Oh, oh, oh\" noises, I would have guessed that Bateman was in, but I didn't need to.\n\nMace had her eyes glued on them, and when she noticed that I was looking at her, she made a circle with the finger and thumb on her left hand, and thrust the index finger of her right hand in and out of it.\n\nWe had been together many times when her brother ventured deeper and deeper into sexual exploration, but this was a first for either of us. Never had anyone ever had full on intercourse in front of or in this case, behind us.\n\nMacy squirmed on her seat while Harry thrust into Alysa. The sounds of, \"Harry, oh fuck, harder, faster, oh my fucking god\", will always be etched into my memory. My crush on her was over forever.\n\nAs fast as it started, it had stopped. It was a 42 second rollercoaster ride for both of them. Harry came quietly and Alysa put her hand over the doom light as he dropped the used-up condom onto the gravel of the drive-in parking lot below us. The eighteen-year old's had just lost their virginity in the backseat and Macy had watched the whole thing.\n\nDisheveled, would be the best word to describe the couple as they walked toward the concession stands. Macy and I laughed at the same time, and for the first time, I looked in the backseat. Everything was in order. No spare clothes, no splashed cum dripping down or condoms laying around, just a wool blanket to keep their naked skin off the cool leather seats.\n\nI didn't hear Macy move, but I felt her breath on the side of my face. Turning to look at her, I was surprised to find her on her knees on the seat next to me. She was leaning over the console, inches away from my face. Her make-up bare, all-American beauty was right there in front of me.\n\n\"What?\"\n\nI was lost. I had no idea what was going through her head.\n\nMy best friends twin sister put her hand on my chin and closed the distance between us. Her lips were soft and warm against mine, and although my kissing experience was limited to a couple of games of spin the bottle, I did what came naturally. I could feel her soft breasts pushing against my arm as Macy moved her mouth and pressed her tongue against my lips. Our tongues darted back and forth over our teeth and lips. It was the best things that I had ever felt, by a long shot. If I wasn't mistaken, our kiss lasted way longer than Harry and Alysa's copulation.\n\n\"Holy shit Mace. That was incredible.\"\n\nHer \"shut up\" came out just as Harry opened the door to his Yukon. The doom light brightened the vehicle. I looked at Macy sitting next to me and noticed how flushed her face looked.\n\nShe looked a little lower and noticed how my pants were tenting out.\n\n\"Really Brandon?\"\n\n\"Holy fuck, can't you two get along for even 5 minutes?\" Alysa was scolding her friend but had no idea why.\n\nLogically it was me that got dropped off first. Harry took over the wheel and with a round of good-byes, we parted ways.\n\nMy parents were long in bed and that worked in my favor. Even though I had only had the one beer, my mother could smell beer a mile away, and I would have caught proper hell for it. And then there was also the fact that my boner still hadn't gone down.\n\nNaked in bed, I replayed every second of night. Normally, the thought of hearing someone having sex right behind would have been enough for the spank bank, but then Macy had to go and fuck it all up.\n\nThe bing sound of a text snapped me out of my trance. I picked up my phone and opened the text. The shy blushing face emoji was the only thing on the screen. I didn't recognize the number, but I knew that it was either Alysa or Macy. Alysa would have been the logical guess. How often is it that you fuck someone with two people sitting 2 feet away from you. It would be no wonder that she was blushing.\n\nThe second bing scared me enough that I dropped the phone on my chest.\n\nIt was still the same number, but this time there was a message. \"Don't tell Mark.\" Again, it could have been either girl. Alysa had been out with Mark a number of times, so maybe she wanted to keep him on the back burner in case things didn't work out with Harry. On the other hand, it might be Macy getting nervous about me telling her brother and my best friend, that she kissed me. I was torn, but in the mood for some fun.\n\n\"What's in it for me?\" The response was instantaneous.\n\n\"Fuck you Brandon.\"\n\n\"Is that what's in it for me or is that a veiled threat?\"\n\n\"Not veiled at all. I will kick your ass.\" I still wasn't positive, but given my experience with both, I was leaning toward Macy.\n\n\"Too late. Texting him now.\"\n\n\"No. Don't do it Bran. I'll tell everyone about your boner.\"\n\nDefinitely Macy. Alysa never called me Bran. I put Macy's info into my phone.\n\n\"Every guy my age gets boners. Who do you think you're gonna shock with that revelation?\"\n\nI waited for over a minute for the text to arrive.\n\n\"I'll tell them it was because you were perving on Alysa and Harry.\"\n\n\"You don't get the rep of being the best Wingman in the state by perving, so no one, not even you would ever believe that. I'll tell them the truth. It was because you crammed your tongue down my throat.\"\n\n\"What's it going to cost?\"\n\n\"Boob pic.\"\n\n\"Fuck you, asshole.\"\n\n\"Hey Mace, you have to reel in that crazy. You know that when I tell Mark, he'll hound you about it forever.\"\n\nMy phone fell into silent mode. The screen darkened because of lack of use and I figured it was the last I'd heard from her until Monday at school. Just when I was about to call it a night, in came a text alert.\n\n\"Bra shot. No skin!\"\n\n\"Bare\"\n\n\"Fuck you\"\n\n\"Hey Mark, did I ever tell you about the time...\"\n\n\"Fucker. Bra. Some cleavage.\"\n\nIt was probably the best that I would get, and it would be better than anything else I had ever received in the way of a naked picture.\n\n\"Agreed\"\n\nIt took longer than I thought it would, but when the attachment arrived, I was shocked. Macy's face wasn't visible, but she was pulling down the front of her black lacy bra, giving me a really good look at her cleavage and her soft mounds. Macy's hair was swept over her shoulder almost as if she were trying to cover herself up.\n\nSomething inside of me changed forever just seeing that picture. My courage to reply took forever. The dry lump in my throat wouldn't permit me to swallow and almost stopped me from breathing.\n\n\"Absolutely beautiful Mace. I'm going to stare at it for 5 more minutes, then I'll delete it. I promise. Thanks for the kiss.\"\n\nIt broke my heart, but as promised, I deleted the picture. Although gone from my phone, it would live in my memory forever.\n\nOver 30 minutes had passed and nothing. It appeared as though our texting was over for the night.\n\nLights out. Tucked in. It was going to be hard to sleep thinking about my first real kiss and my first semi-nude girl picture text.\n\nThe light and binging from an in-coming message alerted me again. I almost rolled over and avoided looking at it, but for some reason I was compelled to. Drawn to it like a bug to a porch light, I picked up the phone.\n\n\"Mace\" appeared at the top of the screen. When I opened my message center, my heart definitely skipped a beat.\n\nMy best friend's sister had sent me another picture. No words were attached. No explanation why. She just sent it. There they were Macy's naked breasts.\n\nNo one could prove that it was her, but there she was. Her boobs, naked and on display for my viewing pleasure. They were spectacular. Perky and firm, with hard nipples and crinkled areolas. I hadn't asked for this picture, nor did I plan on deleting it in five minutes like the other one.\n\nThe flash of my phone filled the dark room. Seconds later, I was sending a picture back to Macy.\n\n\"Jerk\" came back to me in a matter of moments. I guess my naked chest didn't do to her what hers had done for me.\n\n\"Really? Yours had a way more profound effect on me\"\n\nThe smiley / blushing face emoji was back, along with \"I was hoping for something south of your chest\"\n\n\"Wow. Who's a perv now\"",
        "Another blushing emoji.\n\nI knew better than to send nudes of myself. Dick pics live forever on the internet once they are out there, but common sense had long gone to bed for the night when I pushed the send button. I knew it would be less than a second before Macy was looking at a picture of my semi hard cock pressing the material of my Joe Boxer's, on the screen of her phone.\n\n\"Fuck me\" Her text was short and sweet, yet not very lady like.\n\n\"Is that a request or a statement?\"\n\n\"Why do you have to ruin stuff Bran?\"\n\nAt some point I drifted off into a restless night of sleep. This would be a night that I would relive more than once in my lifetime.\n\nThe sound of my phone ringing woke me. I wanted it to be Macy, but it was the exact opposite, it was Mark.\n\n\"Hey.\"\n\n\"Hey skid, we're heading to the lake to kayak in 45, I'll pick you up.\"\n\n\"Who's we?\"\n\n\"Cheryl and me. You and Macy. Who the hell did you think \"we\" was?\"\n\nThe Robinson Family SUV pulled up in front of my house and my options were limited so I hopped in the back with Macy. With a round of, \"Hey. Hi. What's up?\", we were on our way.\n\nThere was no uncomfortableness between Macy and I, the only thing that was out of the norm, was when she, tilted her head pursed her lips and looked down at my crotch.\n\nMacy looked amazing in her cut-off jean shorts and grey t-shirt. For the entire trip she sat sideways, half looking at me, half looking out the window.\n\nWith everything loaded into the kayaks, we headed in different directions, only agreeing on a place and time to meet for lunch.\n\nAfter a solid 2 hours of kayaking around the lake we made our way to the stone bluffs to swim and cool off.\n\nMy eyes were glued to Macy's ass as she shimmied her legs out of her jean shorts to reveal the white bikini that lay beneath, but when she pulled the t-shirt up over her head, I almost died. The real live boobs that I had a picture of on my phone were less than 10 feet away from me.\n\n\"What?\" Macy was staring at me, staring at her.\n\n\"Oh, you know exactly what. I'll never be able to look at you the same again.\"\n\nFor the first time ever, Macy and I were alone on what some might just call a date. Laying on a blanket, soaking up the sun, we talked about everything from going away to college, to sex.\n\n\"Why do you think your brother does so good with the girls at school?\"\n\n\"Definitely basketball.\"\n\n\"Do you think he'll do as good in college.\"\n\n\"Yeah, even if he doesn't start, he has good pick-up lines to fall back on.\" I couldn't help but laugh. Mark didn't have any lines that I could ever remember him using effectively.\n\n\"What? They all say that he's sweet. He charms them with his words. All the girls say that he has classic pick-up lines.\" I was still smiling but played along.\n\n\"Okay, so your friends with most of his dates. Enlighten me with the magic words that he uses, maybe I'll try them on you\"\n\n\"Ha, you wish. Well he told Cheryl that she must have come from heaven, because she looked like an angel.\"\n\n\"Come on. That's sooooo cheesy. And you think that it's a good pick-up line?\"\n\n\"I suppose that you could do better?\"\n\n\"Easily.\" Macy cocked her eyebrow and called my bluff.\n\n\"Then let's hear it tough guy.\"\n\n\"Well, my personal favorite is, \"Does this rag smell like chloroform?\" It works for me every time.\"\n\nMacy threw herself back on the blanket and screamed with laughter.\n\n\"Fuck Bran, you're truly a jerk.\"\n\n\"Really Mace? Then give me your best line.\"\n\n\"Okay, \"You're so hot, even my pants are falling for you\". She tried to cover her eyes in mock embarrassment, but we both knew that we were just having fun.\n\n\"So, you going to take it there? How about, \"Your ankles are having a party, I think your panties should come down for a visit\". Macy was instantly ready with her next one.\n\n\"I'm just not feeling like myself today, can I feel you instead?\"\n\n\"I like it. It's good, but not nearly as good as, \"You remind me of my baby toe. You're small and cute, and I'm probably going to end up banging you on the coffee table later tonight\".\n\n\"Like hell you are. How about, \"Legs are the word of the day, now let's spread the word\"' It was my turn to laugh and scream.\n\n\"I'm still ahead on the score clock. This is also a good one, \"I've played lots of Tetris in my day, let me see if I can make this fit\" or \"Hey, my dick needs a hug from your mouth\". Macy stopped before she spoke, with her mouth just slightly open. Was she thinking of her next line or had I crossed a line to a game that she was no longer comfortable with?\n\n\"Sorry Mace, I was just playing.\"\n\n\"I know. It just gave me a flashback from last night. Maybe we should have stuck to ones that were less aggressive.\"\n\n\"Like, \"Do you know what you'd look really beautiful in? My arms.\" Macy looked at me and though barely noticeable, she bit her bottom lip.\n\n\"Well Bran, I don't know if you were trying, but that was your best one so far.\"\n\n\"Not really. I have one that's better, but I'll save it for another time.\"\n\n\"Not a chance buddy. The damage has already been done. Let's hear it.\" I wished that I could have just sent her the blushing face emoji in advance, but that wasn't an option.\n\n\"Hey, I just realized that you look a lot like my first girlfriend.\"\n\n\"Boo. That one's not even that good Brandon, because I know you've never even had a girlfriend.\"\n\n\"Exactly.\"\n\nOur mouths found each other for the second time in as many days. Rolling onto my back, I pulled Macy over onto me so that her upper torso was on me. Her fingers clawed at my curly hair as she ravaged my mouth with her tongue. What we lacked in experience in kissing, we more than made up with in enthusiasm.\n\nFor the first time in all of my 18 years, my hands roamed naked flesh that didn't belong to me. Although it was only her back and shoulders, it felt perfect.\n\nMacy's leg moved so that it was just over my lap, in a position where if she moved a little more to her left, she would have mounted me. There was no possible way that she couldn't feel my erection pressing against it.\n\nBravely, I slid my right hand up her back, over her ribcage, and with my thumb just under the bottom, I cupped her breast. A moan and warm breath filled my mouth.\n\nMacy's leg rubbed the hardness in my shorts to the point where I thought that I might explode. Our first time in each other's arms felt very natural.\n\nThe only thing that could have possibly ruined it for us, did. The sounds of Mark calling our names from the shoreline of the lake, accompanied by Cheryl's cackling had us scrambling.\n\nMacy was safe, but there I was with a boner pointing skyward in my shorts. It was going to be hard to explain to Mark what I was doing with one, when it was only me and his twin sister.\n\nDistracted by a fish or some stupid thing in the water, Macy took the opportunity to drag my sorry ass into the water and to safety.\n\n\"What the fuck are you two doing, I thought that we were having lunch, not swimming.\" Mark seemed a little irritated by us.\n\nWhile the girls opened the cooler bags and took out the sandwiches, Mark told me why he was so upset.\n\n\"Fuck man, I thought that today was the day. We talked about it all week.\" I knew that Mark meant having sex. He always meant having sex.\n\n\"What happened?\"\n\n\"Nature. She's got her period man.\"\n\n\"Shit luck buddy.\"\n\n\"Right? Mandy Townes ask me to hang out today. I know that I would have got something from her.\"\n\n\"Wow man, that's pretty shallow. Just because Cheryl's not down to fuck, doesn't mean that she won't blow you or something. Maybe, just maybe, you can treat it like a real date and try having some fun with her. She's pretty cool to hang with.\"\n\n\"Fuck you. What kind of bullshit have you been eating? Once you ever get to touch a pussy, you'll want it all the time. Wait and see.\"\n\nHe wasn't wrong. I had looked at a picture of his sister's perfect boobs 12 hours ago and I had a covered one in my hand less than 10 minutes ago, and it was all that I could think of.\n\nThe rest of the day was spent on the lake. We kayaked until darkness approached and we could no longer move our arms. Mark's pouting had dropped to a level that was acceptable for everyone and when we loaded up and headed out, he even treated for ice cream.\n\nCheryl rode with her body hanging over the console of Mark's mom's SUV. If we had to guess, he was getting a hand job, while driving. Sitting in the silence, Macy undid her seat belt and turned her back toward me and pushed closer.\n\n\"Rub my shoulders Brandon. They're sore from today.\" Her words caught her brother's attention and he looked at us in the rearview mirror.\n\n\"No way. I'm sore too. You rub mine.\"\n\n\"Don't be a goof Brandon, rub my sister's shoulders.\" And there it was, Mark's approval to touch his sister. Macy had wanted contact of any kind on the ride home and this was all that she could come up with.\n\nI undid my own seatbelt, turned to my left and lifted my leg onto the seat so that Macy could slide back between my legs and I could rub her shoulders.\n\n\"Not like that. A little harder by the neck. Jesus, I should just get Cheryl to do it.\" The show was a good one. Mark looked back a couple of times and smiled at his twin giving me shit, but what he didn't noticed was her hand gently running her fingernails over the skin and hair on my thigh.\n\nShifting and moving until she had perfect placement, Macy reached back and untied the strings of her bikini top.\n\n\"Do it on my skin. The material of my t-shirt is going to give me a rash.\" It was the same as earlier. Me touching her bare skin, but this time someone else knew that I was doing it.\n\nI was concerned about my best friend and what he might feel if he knew what was going on with his sister and I, but I didn't have to worry. Cheryl's handy work had him in a spell and it was all that he could do to focus on driving.\n\nUnder the shroud of darkest, I risked death and dismemberment when I lowered my left hand off of Macy's shoulder and put it on her belly. Her palm instinctively covered it, pressing me against the clammy heat. I wasn't sure where to go from there, but if Mark happened to look back, he would still see my right hand on his sister's shoulder.\n\nTo my surprise, Macy lifted her hand and pulled the thin fabric that was covering her breasts, away from her skin. With a gentle push, she moved my hand up.\n\nThe smoothness shocked me. As did the idea that her breast was hard, yet soft, all at the same time. The hardness of her nipple was like a stone under my thumb. I could never imagine ever feeling another boob in my life that would feel any better than this.\n\nA moan that was probably louder than she expected, escaped Macy's mouth.\n\n\"Is he loosening up the stiffness Mace?\" Mark asked his sister.\n\nShe put her hand over my hard shaft and told him, \"Not really. It's still really stiff, but we're working on it.\"\n\nI focused on the back of Mark's head to see what he was doing, and when the coast was clear, I kissed Macy softly on the back of her salty, sweaty neck.\n\nBrakes being applied snapped us both out of our trance. There I was, once again in a predicament. Having the time of my life with Macy but pulled up in front of my house with a raging boner.\n\nMacy shuffled over to her side of the backseat and I grabbed my backpack and held it in front of me.\n\n\"Thanks for the day. Ladies, lunch was great, see you guys later.\"\n\n\"Hey Bran, drive-in next Saturday?\" I tried to downplay my excitement, but I answered way too quickly.\n\n\"Yeah, sounds good.\"\n\nI hadn't made it to the door of my house, when for the first time that day, my phone binged. A paired of over-exaggerated puckered red lips appeared on screen. It was from Macy.\n\nLater in total darkness, the vibration of my phone awoke me. It was shortly after midnight, but I was immediately awake.\n\n\"You up?\"\n\n\"That would depend on what you mean by up\"\n\n\"Awake\"\n\n\"Then yes. Wasn't, am now. Why aren't you sleeping?\"\n\n\"Can't\"\n\n\"Why?'\n\n\"What are you looking for?\"  Macy apparently felt like texting about things that I had no idea about.\n\n\"I was sleeping. Wasn't looking for anything\"\n\n\"In a girlfriend. What are you looking for? What are your \"Classic\" rules?\"\n\n\"Classic rules? Dirty in the mouth...don't go down south\"\n\n\"WTF\"\n\n\"it's 3:00am. I don't know\"\n\n\"Come on. Tell me one of your rules.\n\n\"Common sense. A dirty mouth implies poor hygiene. I won't kiss a girl with a dirty mouth, so I guess that I won't go down south either. Everybody knows that\"\n\n\"Remind me not to text you after bedtime anymore.\"\n\n\"What? You asked?\"\n\n\"You have lots of experience in the \"down south\" department?\"\n\n\"Honestly? Seen a few movies, but that's it\"\n\n\"Sorry I'm bugging you\"\n\n\"You kidding? Your texts are the best. You can text me anytime you want.\"  The very next, was a face shot with a dog's snout and ears attached to it.\n\n\"Thanks for today Bran. It was a good time.\"\n\n\"Great time. You?\"\n\n\"Me what?\"\n\n\"Lots of experience south of the border?\"\n\n\"Nope...same as you. But, Mark walks around here naked all the time, so I've seen \"it\" several times.\"\n\n\"Hey Mace\"\n\n\"Yeah\"\n\n\"You kiss soooo good, and your lips taste like strawberries\" Another blushing face emoji and some puckered lips showed up on my screen.\n\n\"You're not so bad yourself Wingman\"\n\n\"OUCH!!!\"\n\nI laughed to myself about Macy calling me a wingman. Laying there surrounded by the dark, I wonder where this was headed. Would we progress to the point where my buddy might want to do damage to me? If my concerns were unreasonable before, the messages that followed were enough to cause me fits.\n\nThree consecutive pings told me that Mace had sent a few more messages to me, but I was wrong. The first was a picture of her mouth and teeth. They looked clean and perfect. The second was the same picture that she had sent the night before of her boobs, and the third was the game changer.\n\nMacy had held her arm up as high as she could and took a picture of her naked body, laying on her bed. She was lean, tanned and sexy. With one of her hands on her stomach and one of her legs bent at the knee, I could see the sparse black hair that barely covered her mound. It was short and straight, with absolutely no curls. From the angle, there was only the slight view of her ass. Her beautiful face was missing from the shot, but it was overall the best thing that I had ever witnessed.\n\n\"Mace, you're absolutely beautiful. I would have told you that even without these pictures\"\n\nAs suddenly as the text messages started, they stopped. As my Grandpa used to say, \"Radio silence\".\n\nMonday mornings suck. It was the last week of school and I had to get used to work, because I always have to work at my summer job early on Monday's with no exceptions. My only saving grace is a quick, cold shower and the jog to school, to wake me up. Unfortunately, today's shower wouldn't help my condition. The thoughts of Macy laying naked had me rock hard and my dick was pointed skyward like a missile that was ready to launch.\n\nFuck it. I grabbed my phone, took three quick pictures, sent them off along with the caption \"you did this to me\" and opened up my last night's text.\n\nLooking at the picture of the naked body on the screen, I wrapped my hand around my shaft and started to stroke. It didn't take long, before I was stuccoing the inside of the shower with a fresh batch of batter.\n\nAfter 8 hours of listening to repetitive shit, I found myself back in the shower and once again rinsing my load down the drain. No texts, no pictures, no messages. Nothing. Macy's radio silence continued on until Thursday evening, when my phone rang.\n\n\"What?\"\n\n\"Get ready numb nuts, we'll pick you up in ten.\"\n\n\"For what?\"\n\n\"I'm taking Cheryl to the Dairy Shoppe for an ice cream.\"\n\n\"Why the fuck would I want to go with the two of you?\"\n\n\"Like you've got anything fuckin better to do. Plus, tonight we're celebrating. I'll buy.\"\n\n\"Celebrating what?\"\n\n\"I'll tell you later. See you in ten.\"\n\n\"No. I don't feel like being the third wheel.\"\n\n\"You've always been the third wheel Wingman.\" Click.\n\nSure enough, Macy was in the backseat and gave me the usual \"Bran\" greeting.\n\nFinding a table under one of the umbrella's I asked Mark what we were celebrating.\n\n\"Buddy, I got the call. It's Boston College baby. Full ride. I'll be just down the street from you.\"\n\n\"What? Wait. Where are you going to school?\" Macy asked.\n\nIn all the times we had been in the same vehicle, or at the same function, I had never spoke to Macy about \"where\" she planned on continuing her education after we graduated high school.\n\n\"MIT. Why?'\n\n\"Shit. I don't know. Maybe you could have said something considering I'll be next door at Harvard.\"\n\n\"Fuck. Really? That's cool. I forgot to mention it and it never came up.\" Mark chimed in when his sister finished speaking. \"Yeah, the three of us will be in Mass. We're just down the road from each other.\"\n\n\"Four of us.\" We all turned our heads in Cheryl's direction. \"I'm going to Tufts, and in case you didn't know, it's also in Mass.\"\n\n\"Look at that Wingman, you'll still have to hang out with Macy to keep her company even when we're in college.\"\n\n\"Fuck you Mark. Yeah, pretty tough job isn't it, Bran?\" Macy's sarcasm wasn't lost on me.\n\nCheryl and Mark started talking about all of the potential hook-up possibilities once they were back in school. How maybe after first year they could get a place together to save on money. All the things that couples talk about. Macy on the other hand looked at me in a way that she hadn't in the past. Our only contact was when she touched my hand so that she could pick up my phone and play with it. The outing turned into a very quiet night.\n\nMacy kept her distance and Mark dropped me off at my house without her kissing me like she had in the past two times that we'd been out.\n\nSitting around with my parents and little sister, they let me know that they would be leaving Friday night when my dad got home from work and wouldn't be back until late Sunday. They were heading to Chicago to my mom's side of the family. Apparently, they had a wedding on Saturday and some christening thing on Sunday.\n\nI had completely forgotten about everything else. Weekend freedom was a very rare commodity in my family, and having it was great news. After watching a ball game with my father, I headed upstairs.\n\nTossing the dirty clothes off my bed, I picked up my phone and flopped down. One text from Mark, and a series of texts from Macy were waiting for me. Mark's was just bullshit guy stuff, but Macy had questions and she didn't seem to be impressed that hadn't answered her.\n\n\"Where are they?\"\n\n\"Bran\"\n\n\"Tell me\"\n\n\"WTF Bran\"\n\n\"Okay, I'm sorry for not texting you after you sent the pics\"\n\n\"Brandon come on\"\n\nAnd so on, and so on. When I finally responded, she came back in a flash.\n\n\"Sorry Mace. Watched the Cubs with my dad. Didn't have my phone\"\n\n\"Where are the pictures that I sent you?\"\n\n\"Gone\"\n\n\"Gone where?\"\n\n\"Gone, gone. Deleted gone\" It took a while for her to send anything back to me.\n\n\"What? Why?\"\n\n\"It broke my heart, but you know your brother uses my phone all the time. Pretty sure that you wouldn't want him finding them\" This time it took even longer for her to respond, but when she did, it was worth the wait.\n\n\"So responsible. You get a gold star for that, but next time we're together, I'll show you how to make a hidden file so that only you can open them\" Following her words was a close-up picture of her vagina. Protruding from her puffy pinkish brown lips was a clit that looked like a pebble.",
        "My cock was so hard that I thought I would burst. I couldn't resist the urge to jerk off to the pictures.\n\n\"Fuck Mace, you're killin me\"\n\nThe next text was a short video. It was the same pussy, but I could hear her breathing, as I watched a finger gently slide downward and part the wet lips and slide in to the first knuckle on her small finger.\n\nI couldn't let this go without sending something back to her. Hitting the video on my phone's camera, I was getting closer and closer to cumming, so I gave my dick a few more tugs until it shot cum up and over my stomach. I hit the send button and waited.\n\n\"Was that cum?\"\n\n\"Yes\"\n\n\"From the pictures and video, I sent you?\"\n\n\"Mace, you're so fuckin hot. What did you expect?\"\n\n\"You came so hard, is there any on your shoulder?\" There was a laughing / crying face emoji also attached.\n\n\"Close but no\"\n\n\"Bet some of that would have landed in my hair\" Same emoji as before.\n\n\"I wish\"\n\n\"You wish it landed in my hair?\"\n\n\"No. I wish that you were here\" Here was nothing for a while after that, so I started.\n\n\"Hey Mace, why me?\"\n\n\"???\"\n\n\"You could have any guy at school. You've almost beat me up for trying to touch your boob and now... well you know\" Again it was quiet for a bit.\n\n\"Your Mark's best friend. I couldn't just tell you what I thought, we've known each other forever, but now with us moving away it's different\"\n\nDifferent in what way? The rest of the night and the next day at school, it was all that I could do to not stare at the pictures and video of Macy on my phone. When the day was over Mark was waiting for me outside.\n\nMark had a proposal, that of course would work in his favor. He wanted me to be his wingman on Saturday, but only for a short time. He wanted his parents and Cheryl's parents to believe that the four of us were all going to hang out and the only way he could have the car, was to bring Macy along. Then after we were all together, he would drop his sister and I off so that he and Cheryl could be alone.\n\nIt was a great plan, but he didn't want Macy to know until the last minute, nor did he realize that it would be beneficial for me also.\n\n\"Bran, you have to do me this solid. Figure out what to do with Mace for a couple of hours and I'll owe you forever.\"\n\n\"You already owe me more than you'll ever be able to pay back.\"\n\nMark dropped me off at my place and told me that he would send details later. It felt good to be in my vacant house. My parents had left $50 emergency money and instructions on how to heat up a frozen pizza on the counter. Setting the temp at 350 and the timer at the required setting, I opened a pop and turned on the game.\n\nThe pizza wasn't nearly as bad as I thought it would be, but the game was. By the seventh inning I said fuck it and changed the channel.\n\nWhen my phone rang, I assumed it was Mark, but for the hundredth time that day, I was wrong.\n\nHarry Bateman was again in the need of my services. He needed a wingman for another night Alysa. When I told him no, he immediately came back with the usual $50 offer, but once again I turned him down.\n\n\"Come on Brando, I need this. Same deal as last time and I'll give you $100 cash.\" I thought it over in my head and came to the conclusion that we could make it work. Mark work drop Mace and I off at my place, Mace could walk over to Alysa's place, and Harry and I would pick them up there.\n\n\"Done.\" And then I told him the details.\n\n\"Sorry man, Macy's not coming.\"\n\n\"What, why?\"\n\n\"Alysa's all freaked out. Said that Macy was watching and perving on us screwing last time. Said it felt like her grandma was staring at us doing it.\"\n\n\"I'm not third wheeling it man.\"\n\n\"You're not. Her cousin is in town for a couple weeks. She saw your yearbook pic and she's down. Buddy, you're getting a free meal, a couple of beers, a hundred bucks, and you're losing your cherry all in the same night.\"\n\nIn any other universe, at any other time, this would have been the best news that I had ever heard, but tonight it broke my heart.\n\n\"Sorry Harry, count me out. I can't do it\", and I hung up. No sense even thinking about it any longer.\n\nThe sound of my phone ringing didn't surprise me. I knew Harry would try again. He'd sweeten the offer somehow. Guys like him aren't used to being told no. Without looking, I answered.\n\n\"Yeah.\"\n\n\"What the fuck Bran?\" I wasn't Harry after all.\n\n\"Hey Mace.\"\n\n\"Did you just turn down Harry, a night out, a hundred bucks and a sure thing?\"\n\n\"Ah, yeah.\"\n\n\"Did you tell him you'd go if I went?\"\n\n\"No.\"\n\n\"Well Alysa's in my face about it. Said that you said you wouldn't go unless I tagged along.\"\n\n\"Never said that. Said I wanted you to come, and then said I wasn't going with Alysa's cousin. No more, no less.\"\n\nThe tone and mood changed with those words. Everyone knew that Macy was my best friend's sister and they would have never expected anything to be going on between us.\n\nAfter a few moments her voice seemed to be a couple of octaves lower, when she asked, \"Are you still coming tomorrow night?\"\n\n\"You still want me to?\"\n\n\"Yes\", and that was it.\n\nRight on time, the Robinson family vehicle came into view, but unlike every other time Mark was going on a date, I didn't get in. Instead, I opened the door so that Macy could get out. She looked at her brother, then to me, then back to her brother.\n\n\"Come on Mace, I'll explain it to you.\"\n\nWhen I had finished giving her the general idea of why her brother had dumped us both she asked if my parents would be okay with her hanging out until Mark returned.\n\n\"I didn't tell Mark, and I don't want to freak you out, but they're gone for the weekend.\"\n\n\"To where?\"\n\n\"Chicago.\"\n\n\"Why didn't you tell Mark?\" That was a good question. I should have. It would have made things easier for him, but I was self-serving. I wanted to be alone with his sister and I told her so.\n\n\"What do you thinks going to happen Brandon?\"\n\n\"Nothing. I just want to be alone with you.\"\n\nMacy had been in my home before, but it had been years. The last time was probably my 10<sup>th</sup> birthday party, so I showed her around and offered her something to drink. Diet Coke's and a bag of Cool Ranch Doritos was served up.\n\nPutting on The Mandalorian, we sat beside each other on the sofa.\n\nFrightened, yet aroused would be the only way that I could describe what I was feeling. I swear that I could feel Macy's pulse beating into the cushion where we sat.\n\nEvery chance I got, I inched closer, until the naked skin of our shorts covered legs touched. Macy jumped when she felt the hair of my leg, pressing onto her smooth, hairless leg, but she didn't move.\n\nMy hands were shaking so much I had to set down my can of pop. With a quick, direct move, I put my right arm around Macy's shoulder. She didn't object, and leaned into my body, which was a good sign, and when I looked down, I could see that her nipples were erect beneath her brasserie and t-shirt, which was an even better sign.\n\nWe continued sitting quietly until I couldn't take it anymore.\n\n\"Mace, would you be mad if I kissed you?\"\n\n\"More like, mad if you didn't.\" There was a smile on her face, but I noticed that her can of pop was shaking even worse than mine had.\n\nFive minutes into our kiss, I was half-laying on the sofa with my back leaning on the arm, and Macy was laying on top of me. Our lips explored every inch of the others mouth. Macy tasted sweet and tangy from the pop and chips, but I wouldn't have changed it.\n\nAs casual as possible, I moved my hand up to the side of her ribcage and gave her boob a gentle cupping from underneath. When there was no resistance, I cupped it until my hand was full and my thumb worked back and forth over the hardened nipple under her clothing.\n\nMacy stopped and back up.\n\n\"Are you sure that your parents won't be back tonight?\"\n\n\"Positive.\"\n\nThat was the key word. In one fluid motion Macy pulled her t-shirt and bra up over her head. Her chest was naked in front of me for the very first time. Only strands of her long dark hair gave her any sort of coverage.\n\n\"Up.\" Macy beckoned me forward until she was able to reach down and pull off my tee.\n\nWhen she leaned back into me, her naked skin felt warm and soft against my chest. Our lips met and our hands roamed freely over the naked skin beneath them. I honestly would have been content do keep this up all night, but Macy's thigh grinding on my bulging crotch told me that things would continue to escalate.\n\nLifting my ass up off the cushion, Macy pulled my boxer briefs to my ankles and stood back. Without removing her eyes from my erection, she looped her tiny fingers into the sides of her delicate panties and eased them to the floor.\n\nNaked. Macy Robinson was naked and beautiful, and she was in my home. I was so excited that precum had started oozing from the hole in my dick. If Macy sat down where she was before we started all of this, and her naked thigh touched my dick, I'm pretty sure that I would ejaculate on the spot.\n\nI didn't. Macy sat on my lap with her knees on either side of my hips. The warmth and wetness of her pussy pressed on the underside of my shaft. Every move caused the tiny delicate hairs above her slit to tickle me. It was a feeling that I could easily get used to.\n\nThe small cheeks of her ass filled my hands as I squeezed them together. Macy arched her back, removing her chest from mine. Without asking, I sucked one of her hard nipples into my mouth and rolled it around with my tongue.\n\n\"Oh shit.\" Macy was very receptive to my actions. Her hands and fingers wrapped themselves into my short hair and pulled my face hard to her breast.\n\nHer slim silky body slid down my legs and off of me. Her hand grabbed at my penis and tugged the shaft up and down. Macy's mouth was opened and not far form the tip. I knew what was coming and as happy as I was with it, I offered to be a gentleman.\n\n\"Mace, I really want you to, but I'll be okay if you don't.\"\n\nWith not so much as a blink from her, she put me between her lips, and started bobbing her head. It didn't take long for her to be rewarded for her actions. The sensation of her tongue wetly caressing me, while her fingers cradled my balls was more than my virgin cock could take.\n\n\"Mace, I'm there.\"\n\nThe mushroom head of my penis exited her mouth with a popping sound. My first spray hit her just under the chin and my second and third splattered across her chest and boobs. I watched in amazement as the cum dripped down her neck, dripping and coating her hard nipples. I wasn't sure what to do next, but I couldn't resist kissing her as hard as I could.\n\nA warm, damp towel cleaned Macy's chin and upper torso. She was giggling when she asked if I always came that much.\n\n\"I don't know Mace. I've never been that excited before in my life.\"\n\n\"Me either. I think I'm soaking your sofa.\"\n\nShe probably was, but I wanted to check for myself. Laying back against the arm, Macy spread her legs so that I was able to reciprocate her earlier actions.\n\nSmall strands of her juices looked like a tiny spider's web on the lips of her pussy. With one swipe of my tongue, they were erased from her. Macy was very wet. Her excitement leaked freely, and my mouth savored all of her rich flavors. With nothing else to compare it to, I still felt that if would never be any better than it was at that very second.\n\nPleasing her became my number one goal. Everything that I did at that point felt like it was for her, but there was no doubt that I was enjoying it as much, or more. Macy let me know what she liked and what she didn't. Trying to push my rolled-up tongue into her was met with a \"No\". Then, while gently sucking her clit, she brought her hand to my cheek, and a soft \"Yes\" escaped her.\n\nWe were learning on the fly.\n\nFocused on what was making her happy, I sucked on her dark pinkish lips and nibbled at the little button of her clit. My intention was to never stop doing this for her, but after her body shook from what I believe was an orgasm, Macy had other ideas.\n\n\"Break. Break, I need to take a break.\"\n\nBefore she would kiss me, Macy wiped the stickiness off of my face, with the same damp towel that she had used to clean up my cum.\n\nIt was a big day. One that I would hopefully remember for the rest of my life. I was normally the proverbial good-boy son, but for tonight's special occasion, I risked the wrath of both my parents when I snuck a beer and a White claw out of the family beer fridge.\n\nMacy sat facing me. We idly played with one another's previously untouched body parts. Kissing, caressing, stroking, enjoying.\n\n\"Bran.\" I answered with a \"Uhm\" as she lightly pulled her fingernails down the length of my still hard shaft.\n\n\"Can we move upstairs. I don't want my first time to be on your family's sofa.\"\n\nMy head bobbed like it was on a spring. Macy stood first, held out her hand, and lead the way up the stairs.\n\nThe hand me down queen size mattress that had once belonged to my parents was in the center of the room. Macy stood on one side of the bed and I stood on the other. My lips were dry, my mouth felt like it was made of cotton and my stomach churned into knots.\n\n\"Mace, there's a condom hidden in the drawer next to you. It's in the tin Altoids box.\" She just shook her head and whispered, \"on the pill\".\n\nVisibly shaking, we climbed into the middle of the bed. Macy was sexy beyond her years. On her hands and knees, her perky boobs hung down away from her chest, while her back swayed, showing off her firm belly and sweet round ass.\n\nHer warm frame draped itself over my body. She was silky smooth compared to the abrasiveness of my skin, yet we both seemed to be enjoying the feeling. Our kissing and fondling were what could be considered foreplay, but other than the sensation, it wasn't needed. Macy's hard nipples and moist vagina, along with my raging hardon was enough to let anyone know that we were both ready to go.\n\n\"How do you want to do it Mace?\"\n\n\"You on top, so that I can look into your eyes.\"\n\nOn my knees, between her spread legs we had the alignment perfect. Macy rubbed the head of my penis around her opening. My precum mixed with her natural lubrication was more than we needed. With a nod of her head I moved forward.\n\nAlmost with a pop, the slick knob was inside of her. Macy and I stared at one another and moaned in unison. Slowly, I continued. There was no barrier to impede my progress, so a little by little, I sank into heaven.\n\nThe feel of her silky grip and wetness was epic. If I hadn't came earlier, it would have already been over for me. When my testicles came to rest the cheeks of her ass, I knew that we were no longer virgins.\n\nA smile came to my face and a small chuckle escaped me. Macy had a quizzical look on her face.\n\n\"What?\"\n\n\"Your just so beautiful. I'm thinking about how lucky I am. Six months ago you punched me for trying to feel your boob, and now you're naked in my bed.\"\n\n\"Naked in your bed and you've done more than cop a feel of my tit, you're inside me.\"\n\nWrapping her arms around my neck, she pulled herself up, buried her tongue into my mouth, and started gyrating her hips.\n\nEvery nerve ending in my body was on high alert. Our timing was off, but we would work on it. Each thrust, each push, every nibble and bite, was added to our sexual experience resume.\n\nAt one point, Macy flopped her head back onto my pillow and closed her eyes. Closing my eyes was the last thing on my mind. I watched every movement of the female form below me. I watched as my shaft entered and exited. I watched as my dick pulled back the fleshy meat of her pink lips and pushed it back together. I watched the grip of skin that encompassed me. I watched the build up of her juices that coated me. I watched her hands tearing at my bedding beneath her as she came.\n\nIt was all too much for.\n\n\"Mace...sorry\"\n\n\"Do it. Don't worry baby.\" She knew it. She knew that it was over for me. I had given all I could, and she had given me permission to finish.\n\n\"Fuuuuuuuuuuuck.\"\n\nEntwined, body and soul, we drifted off to a place most 18 years old's, don't normally go this early, to sleep.\n\n\"What?\" I jumped out of my skin. Macy was beside me, still asleep. No one was talking and the room was dark. Then it happened again. Within a split second of one another's, our phones rang again. Searching the darkness for the offending sound and noises, I found my phone on the coffee table downstairs.\n\n\"Yeah?'\n\n\"Fuck man, where the fuck have you been? Cheryl's been calling Mace, and this is the third time I called you.\"\n\n\"We're watching Netflix. We couldn't hear because it's so loud.\"\n\n\"We'll be there in ten. Cheryl's gotta get home.\"\n\n\"Okay.\"\n\nThree stairs at a time I sprinted up to my room. Touching my naked lover to shake her awake, had me starting to get hard again.\n\n\"Mace, Mark called. They'll be here in ten minutes.\"\n\nLike a stretching cat, she raised her arms over her head, yawned and semi screamed, \"I feel so freakin great.\"\n\n\"Bran, call Mark back and tell him that I'm staying until your parents come home on Sunday.\"\n\n\"Think I won't? I'd do that in a heartbeat.\"\n\nBegrudgingly, she got out of bed and went into my washroom. With the door open, I had another first in my life. Macy sat and peed in front of me. When she wiped and washed her hands, she took my toothbrush out of its holder, dabbed on some paste and started brushing. My look must have surprised her.\n\n\"What?\"\n\n\"Nothing.\"\n\n\"Damn right nothing. Just remember where your mouth has been today. I think you're safe letting me use it.\" I nodded in agreement. Macy spit, rinsed, dabbed on more paste and handed the toothbrush to me to prove her point.\n\nStanding inside the door of my parent's home, making out with my best friend's sister was surreal. Every single kiss felt as alive as the first time at the drive-in. Her lips owned me.\n\nWhen the brightness from the lights of her mom's car could be seen coming down the street, it took everything in my power, to let her go.\n\n\"Mace...I love you.\"\n\n\"I know you do.\"\n\nStepping out on the porch, the plaid backpack flung over her shoulder, Macy jogged toward the SUV and jumped in the backseat. With a honk and a wave, I was alone in my house.\n\nThe shower felt good, but it didn't fill the void that I was feeling. I had told Macy that I loved her and got nothing in return. She had been gone for nearly 2 hours, no text, no call. I knew that I was reading too much into it, but I missed her.\n\nWatching sports highlights, eating cold pizza and washing it down with a Dr Pepper took my mind off the events of day, if only for a second.\n\nI grinned at my luck. I was no longer a virgin. I had lost that card to the hottest girl in town, and it was great, even if no one would ever know.\n\nEven on a noisy night like tonight, when the wind blows the neighbors chimes like that of a percussion orchestra, I could hear the creaking wood on the porch as it gave away the secret of someone's presence. I knew that I wasn't alone even before I heard the light knocking.\n\nMacy stood on the other side of the screen door. She was wearing different clothes than from earlier, her still wet hair was pulled back in the customary ponytail, and her backpack was stuffed to the brim.\n\nNo vehicle in sight. No one had dropped her off.\n\nOpening the screen, she slid in between and door and the frame, dropped her bag and basically jumped into my arms.\n\n\"I love you too. I'm sorry that I didn't say it first.\"\n\nThere was no need to apologize, but I wondered how she was, and why she was here.\n\n\"Mace, what are you doing? Your parents are gonna murder you.\"\n\nMurder might be a little strong, but they certainly would be pissed that their only daughter was out past her curfew, and in the company of a guy.",
        "\"It's alright. They went to bed early. They're going fishing tomorrow morning and never check on us when they leave that early.\"\n\nOur lips met in a greedy kiss as I pulled her into the house. Everything about her made me tingle. The smell of her freshly washed hair and the scent of girly soap on her skin was making me hard.\n\n\"How long can you stay?\"\n\n\"They'll be back before dinner tomorrow night. I was hoping that you would ask me to stay over.\"\n\nMy smile and chuckle seemed to piss Macy off a bit.\n\n\"What?\"\n\n\"Oh, I don't know. For all the years that I've known you, you've acted like a good girl and now it is painfully apparent what a truly bad girl you are, sneaking out of the house, staying overnight with a strange boy, having pre-marital sex. Shame on you.\"\n\n\"You're not a strange boy Bran, you're just fucking weird.\" Her punch caught me just under my ribs.\n\nI imagine that one day I'll look back on the events of the day and the evening with great fondness, but it will also be humorous to me. Macy and I had almost everything that a man and woman could during the day, yet here we were in the evening acting nervous toward one another.\n\nCurled up against me, still wrapped in her oversized hoodie, we watched television until the tension was greater than the two of us.\n\nMacy stood, held out her hand and pulled me along like a puppy. Across the room, up the stairs, down the hall, into my room.\n\nHer hands pulled the hoodie up over her head and her sweats down her legs. The matching pink bra and panty set was driving me wild.\n\nMacy sync'd her phone to my Bose and started playing her music. I tried to make my way toward her, but like a crossing guard, she put her palm up and stopped me in my tracks, pointed at the bed for me to lay down, almost as if giving me directions.\n\nTaylor Swift's \"Lover\" filled the night air as Macy swayed her hips from side to side and danced seductively around the room. Everything about her excited me. I forced myself to stay put. Every inch of my being screamed for me to grab her, but I watched in amazement as she removed my underwear and then her own.\n\nMoving her lips along with the song, Mace stood on the bed, rubbed her fingertips across her hard nipples and looked me in the eyes every time that she and Taylor said \"Lover\". It was more than enough to prepare me for the main event. My dick was rock hard and pre-cum once again was oozing from the tip. The last \"Lover\" came out of Macy's mouth just before she sank down on my hardness.\n\nUnlike earlier in the day, there was no sense of urgency. Tonight, we were taking our time. We were making love. My hands traced every inch of her tanned body as she slowly moved her hips in time with the music.\n\nMacy used her fingers to caress her clit as I pushed into her wetness. With her back arched and my hands cupping her breasts, my lover came to the sounds my Lana Del Rey singing \"Let me love you like a woman\". The warm, wet grip of her pussy sent me over the edge. Shot after shot of my semen coated the insides of her womanhood.\n\nLeaning forward, still linked together as lovers, we kissed. Her hands dragged her fingers through my hair, while mine held the back of her still damp head. All the while, I could feel myself throbbing inside her. It would be the best night of sleep that I could remember.\n\nThe morning sunlight rose above the plains lighting everything in its path. My bedroom filled with dancing orange rays, highlighting all of Macy features as she lay naked on my bed. Yesterday and this morning would be recorded as the two best days of my life thus far.\n\nOur youthful lust was in full swing. We made love in my bed before breakfast. We had sex in the shower while trying to get clean. Macy gave me a blow job while the Cubs were playing in the background. I returned the favor by making her cum on my tongue while she watched me.\n\nBefore we showered for the second time that day, we capped the day off by having sex on the family sofa. Family movie night would never be the same.\n\nHand in hand, I walked Macy home.\n\nHer place was empty and as much as I wanted to stay, we both knew that it would be too risky. Mark and her parents could show up at home any time and getting caught there would cause more grief than either of us were ready for.\n\nMark was sitting in the family SUV in front of my house when I got home. He was beaming. His smile was from ear to ear. He was dying to tell me something and I had a pretty good guess what it was.\n\nWith two ice cold beers in hand, we sat on the grass at Shadle Park as Mark told me how he had lost his virginity the night before. His story was exactly what he had planned. He dropped Mace off at my place, went to the drive-in and in the backseat of his mom's vehicle, he became a man.\n\nAs much as I wanted to tell him about my night, I knew that it would never happen.\n\nReaching into his shirt pocket, Mark pulled out a used condom wrapper.\n\n\"This is the one buddy. The one that made it all happen. I'm keeping this fucking trophy for life. It will go on the shelf right beside all of the other ones.\"\n\nI couldn't help but wonder how his very religious parents would take the news that their twin 18-year old children had lost their virginities on the very same night. I wanted to chuckle or even smile, but I stifled that notion quicker than it popped into my head.\n\n\"I'm happy for you man. Was it everything that you expected?\"\n\n\"More. You wait. Next time Harry says that Alysa's cousin is around, go. You won't regret it. Remember when I told you how good if felt to finger Beth Hanlin, well this was a hundred times better. By the way, sorry for making you hang out with Macy.\"\n\nWhen I told him that that was what friends were for, Mark tapped his can against mine, said \"Cheers\", then he chuckled and told me that I'd be a \"Wingman\" forever.\n\nFor Mace and me, the next couple of days were limited to some light sexting. We both had work and chores around the house, so sneaking away was not an option. Knowing that a rendezvous during the week was out of the question, we were looking forward to the weekend.\n\nBy Thursday the weekend plans were a go.\n\nMy cell vibrated in my pocket, so I snuck to where I wouldn't get in shit for answering.\n\n\"Hey.\"\n\n\"Brando. Don't make any plans for the weekend. Were going to the lake.\"\n\nAs much as I wanted to jump at the chance, I played it as cool as possible.\n\n\"I don't know man. Two other guys asked me to tag long.\"\n\n\"Look Bran, your day will come, I promise. I called Harry to ask about Alysa's cousin, but her and Alysa are both grounded. They got caught drinking and you know that Cheryl can't go anywhere unless Macy asks her. So, you're fucked.\"\n\n\"Why is it that I'm fucked, because you want to get fucked?\" I wanted to string him along, but my phone lit up with a text from his sister.\n\n\"Cheryl called. Lake this weekend. Can't wait. Miss you so much.\" With a set of puckered lips.\n\nEyes glued to the message, I felt myself growing in my pants.\n\n\"Hey...come on man, answer me.\"\n\n\"What?\" Mark had been speaking and I hadn't heard a word of what he was saying.\n\n\"I said, do me this solid and I promise when we get to college, I'll get you laid. My word.\"\n\n\"Your word? Kinda like when you said you'd throw one down the pipe so that I'd get a homer off of you and impress Debbie Hinks? That word?\"\n\n\"We were in middle school you dumb fuck. I'm not talkin baseball. I'm talkin pussy, and you have my word.\"\n\n\"Forget it. You don't owe me shit. I'll do it because we're friends, but you have to get me tickets to the first college game you start in.\"\n\n\"Deal motherfucker.\"\n\nKayaking at the lake was on.\n\nI could hear the glee in his voice as he hung up the phone. As for me, I spent the next three hours adjusting the boner in my pants.\n\nShit luck sometimes causes it to rain on a parade, and that day was today. I knew just by looking at Macy something was wrong, but she didn't say a word, and stayed on her side of the SUV until we arrived at the lake.\n\nWith lifejackets and refreshments packed up, and details to meet later for lunch worked out, Mark and Cheryl headed north, and the two of us headed south.\n\nSmall but noticeable tears filled the corners of Macy' eyes as we paddled toward the beach.\n\nGrounding the kayaks in the sand, I looked around and sure enough, just like every other time on this piece of rock, we were alone. Taking the opportunity, I pulled Macy forward me and asked what the problem was.\n\nTurns out the same fate of being a woman that had struck Cheryl on our last time here, had surprised Macy earlier in the morning.\n\n\"Bran, I'm normally so regular. I don't know why it came three days early.\"\n\n\"Why were you crying? I don't care about all the other stuff. I wanted to be with you. I mean, I like, no, I love the other stuff, but just being together with you is way more important.\"\n\nHer little tears turned into full on sobs as she pulled at my t-shirt and buried her face in it.\n\nThings always find a way to calm themselves down. Laying out the blanket and resting on it beside Macy was just what was needed. Her mood changed when our lips met, and my hands rubbed at the soft skin on her neck. We talked at length about everything that popped into our heads. No question went unanswered. It was good to be together.\n\nThe idea of sex was always in the back of my 18-year old skull, but today it was buried under other feelings, and it wouldn't have come into play, until Macy's fingers started to play with the draw string on my shorts.\n\nShe was on her side, laying with her head on my chest. Her small fingers had been circling the hairs around my chest and bellybutton as we spoke, but as soon as they slipped inside my pants, I was like a rock.\n\nSliding her head lower, Macy pulled me out from under the fabric covering me and sucked me into her warm mouth.\n\nJust like last weekend, it felt fucking incredible. Her tongue and puckered lips caressed me as she bobbed up and down on my shaft. My balls became playthings for her fingers as she gently dragged her nails across them.\n\nMacy choked once or twice when she took me too deep, but not once did she quit.\n\nUntying the string that held her bikini top in place, I released my two newest friends.\n\nMacy responded to my touch with a moan. When she did, it sent a shockwave up my penis and through my body.\n\nWatching her sexy lips circled around my shaft, the feeling of her sucking on me, and her soft breasts and hard nipple filling my hand, sent me over the top.\n\n\"Macy, I'm cumming.\"\n\n\"Uhm\" was all she said as the pressure increased, and I exploded.\n\nUnlike our first time, nothing splashed onto her. Macy caught it all in her mouth, swirled it around, then spit it onto the sand behind her. It was the sexiest thing that I could ever imagine seeing.\n\n\"Holy shit Mace, that felt so good.\"\n\nSwinging her leg over my hips, Macy straddled me and locked her lips onto mine. We stayed that way for at least ten minutes until Macy got up and walked topless over to the cooler, to get us something to drink.\n\nOn her way back from the cooler, she stopped, put her hands up and asked, \"really?\".\n\n\"Really, what?\"\n\n\"Doesn't that thing ever get soft, really.\"\n\n\"Not around you. It'll never go soft lookin at your sexy ass. Mace, I feel so bad that you made me cum, and I can't return the favor for you.\"\n\nIn the most shy and sheepish way, she sat next to me and said, \"We could always just do it in the water.\"\n\nAnother first. It wouldn't have been something that I was about to think about, but once the idea was put in my head, it made me even harder.\n\n\"It won't hurt you or anything, will it?\"\n\nHer laughter echoed across the lake.\n\n\"No. But I'm guessing that it could be messy, so in the lake would probably be the best bet for us. Plus, we get to try something new together.\"\n\nIn a spot that we knew no one would see us, we stripped and laid our swimwear over the rocks. Macy had me turn away as she removed and discarded her tampon. Hand in hand we walked chest deep into the lake.\n\nMacy turned toward me, jumped up and wrapped her legs around my hips. With me supporting her by the ass, she reached between us and positioned me so that she could impale herself on my shaft.\n\n\"Aaarrrrrggggh.\"\n\nI wondered if everything was okay until she mashed her face against mine and rammed her tongue into my mouth.\n\n\"Fuck Brandon, that feels so good.\"\n\nShe was not wrong. It did feel good. It was different from the first time. The inner walls felt different. It was still wet and warm, but in a different kind of way. When we started moving together, Macy shuddered and shivered on my cock. Every time I moved in and out, her warmth was replaced by the cool water surrounding my dick causing strange sensations, and apparently it was affecting her in the very same way.\n\nThe water and my hands cupping the cheeks of her ass, helped me keep my slim lover suspended over my cock. Every thrust brought forth a grunt and a moan. Her lips only left mine, so that she could tell me that she loved me.\n\nPulling my face toward her breast, Macy pulled at my hair and screamed out as she came. Knowing that she was on the pill and was having her period, I didn't even bother to ask permission.\n\nMy seed shot up and into her as we held each other tight.\n\nIn the afterglow of our lustful love making, we washed off in the water. Playfully splashing and kissing like teens. When Macy pushed me backward and jumped on me, poking herself on my hardness, a second \"really\" came out of her.\n\n\"I told you, it has nothing to do with me. It's all your fault.\"\n\nMacy cocked her eyebrow and dunked my head under water.\n\nThe safety of our rock the and higher vantage point enabled us to see Mark and Cheryl coming toward us across the lake. Their kayaks were almost touching. They playfully splashed and pushed at the other, trying to tip over the vessels. They were as happy as us, only we couldn't show it.\n\nAnother great day at the lake. Kayaking, swimming, lunch and sex, life couldn't get any better than that.\n\nCheryl called it. With the paddle back to the boat launch and the ride home we would have to hustle to be home in time for her curfew.\n\nIn the car, it was the same seating arrangement as the last time, only this time Macy wasn't nearly as coy. With my back to the door, she curled up next to me pulled my arm over her shoulder, covered herself with her oversized towel and told everyone that her was tired.\n\nMark's watchful eyes glanced back a few times and I made direct eye contact with him each time. If he only knew that his sister's hand was wrapped around me and my hand had slipped into her top and was caressing her soft tit, he would have killed me.\n\nThe activities of the day and the overall comfort of what I was surrounded by must have put me into a semi, comatose state.\n\nJarred into reality by Mark slamming on the brakes and screaming, \"Wingman, front seat\", made me feel like Macy and I had been found out.\n\nCheryl dove between the two front buckets and landed in Macy's lap. Me and my erection had no choice but to crawl into the seat that had just been vacated.\n\n\"Everybody. Fix yourself up. Macy and Cheryl, pretend you're asleep. Mom and dad are at Brandon's house. Wingman, get rid of that.\" And he pointed at my crotch.\n\nLots of credit had to be given for his alertness. Mark noticed his father's company pick-up truck from a block away. Nothing good would have come from us pulling up in front of my house with each of the twins snuggled to a boyfriend or girlfriend.\n\n\"What the fuck. Oh, shit we are soooo fucking dead.\" Honestly, I had never heard Cheryl swear. It was her upbringing. Yet here we were, and she had just let lose with back to back expletives. As strange as they sounded coming from her mouth, she was probably correct.\n\nMy father, Mr. Robinson, and what I could only assume was Cheryl's father, all sat on the front porch of my family home. It appeared that they were enjoying either a cold beer or at the very least, some iced tea.\n\nWhen we pulled up, my father yelled into the house. Marks' father stood and motion Mark to him. Both Mark and I stepped out and made our way to the back hatch. Pulling out my backpack, I whispered, \"what the fuck man?\".\n\n\"Mark, bring Mace and Cheryl over too.\" Mr. Robinson's voice seemed to boom from across the street.\n\n\"They're asleep dad.\"\n\n\"Wake 'em up.\" Apparently, them getting out of the SUV and coming over to my house was not a suggestion.\n\nThe girls did a pretty good acting job. They stretched and talked like nothing was out of the ordinary, but they didn't over-do it.\n\nStanding in the walkway, my father thought that we should take the conversation indoors.\n\nThe three mothers sat around the dining room table that was scattered with forms and papers. The kitchen counter was sporting a couple of trays of snacks, two open bottles of wine, a pitcher of iced-tea and a few empty beer cans. Whatever it was, it required refreshments.\n\n\"If the others don't mind, I'll start.\" Cheryl's father took center stage. \"Over the years Cheryl and Macy have became very good friends. We know and love Macy like she is one of our own. Mark and Brandon, Cheryl always speaks highly of you lads, and I want to thank you for letting her tag along with you and protecting her.\"\n\nI heard Mark swallow the lump in his throat.\n\n\"At times, the world is a big ungodly place and bad things can happen. Boston isn't Pleasantville. Never has been, never will be. To survive a city like that unscathed, you need support. You need the lord and each other. That's why we're here.\"\n\nThe four of us looked around befuddled. None of us had any idea what he was talking about. So, Mark and Macy's mom took over.\n\n\"Kid's, what we're trying to say is that we feel it would be safer for everyone, if instead of each of you living in separate dorm room in a big strange city, you could all share a place. Cheryl and Macy could share a room, and Brandon could share one with Mark. You four have been friends since kindergarten.\"\n\nMark let out a \"come on, I don't want to babysit\", just for appearances.\n\n\"It would also help ease some of the financial pain also Mark. School in a different state isn't cheap, even when you have scholarships.\"\n\nMy father took the edge off for a while.\n\n\"Look, lets have some snacks and a drink. You kids talk it over and think about it for a little while and see if it's something that you could possibly live with.\"\n\nTwo glasses of tea and a half a pound of taco dip and my mind hadn't changed one bit. Fuck yes. I loved the plan.\n\nWhen we re-grouped, Cheryl spoke for us all.\n\n\"I think that we can all live with it as long as the boys pick up after themselves and there are two bathrooms. If you think that it will be safer for us and cheaper for you. We'll do it.\"\n\nHugs were handed out all around. Our parents thought that they had pulled one over on us, but that would remain to be seen. With Mark and I in a room across the hall, in the same apartment, who knew what would happen.\n\nIn total darkness, I heard my phone pinging. I knew that it wasn't Macy because we had said our goodnights earlier.\n\n\"I'm not sharing a room with you, dickhead.\"\n\n\"Then why the fuck didn't you say something at my house? Tell your old man that we need a 3-bedroom place.\"\n\n\"We only need 2.\"\n\n\"???\"\n\n\"I'm sharing with Cheryl.\"\n\n\"What the hell am I supposed to do?\"\n\n\"Figure it out Wingman. You've always been a smart guy. BTW I saw you grabbing my sister's tit.\"\n\nMark's father and my dad pulled the U-Haul trailer up in front of our new place. It was central to all of our schools. Within walking distance of everything. Three hours later, all of the furniture had been carried up the three flights of stairs and was sitting in our living room.",
        "Before they left, Mark's and my father gave us a lecture on how to behave, then they were gone.\n\nAs requested, the place had two bathrooms and it was definitely big enough for the four of us. Mark and I let the girls pick out the rooms, because it really didn't matter much to us. Setting up the beds and unpacking took less time than expected.\n\nMark ordered some \"big city\" pizza, and we continued emptying boxes.\n\n\"Bran, what's in this, can I open it?\" Macy was pointing a large box with my name on it.\n\n\"Yeah, go ahead.\"\n\nThe sounds of cardboard ripping were drowned out by a single word, \"Sweeeeeeet\". Macy lifted a box from within the box. 12 cans of White Claw coolers. Next was a 30 pack of Bud Light. Nestled between those wrapped in paper was a gallon jug of Chablis. Macy handed me the attached note.\n\nIt was from my father. \"I was young once too. Make me proud. Stay safe. Share with the others, but this is our secret.\"\n\nGlasses filled with ice and booze, we toasted to our first night away from home.\n\nIn our room there was 2 desks, 2 dressers for clothes and a large closet for sharing. It the middle of the room, Macy had duct tapped our single mattress's together so that they wouldn't slip apart and surprised me by having brought a set of king-sized sheets with her. There would be no more secrets. Macy and I would be sleeping together, in the same bed and she didn't care who knew.\n\nMark saw it. He couldn't miss it, yet he didn't comment.\n\nSix hours after we had arrived, we had settled in. The beer had chilled, and the pizza had been delivered. We were 18-year old's living like adults.\n\nThe sights and sounds of the big city were far different than Iowa. Louder and faster. But I loved it already.\n\nIt had been a long day. Mark and Cheryl were acting all frisky on the sofa, so Mark broke the ice and told us they were calling it a night.\n\n\"You excited about being able to spend the night together?\" Macy asked. Not sure if she was asking her twin brother or her best friend, but Cheryl answered.\n\n\"Sure are. You?\"\n\nMacy's response of, \"This won't be our first time spending a whole night together\" made Mark's head spin toward me.\n\nWhen he walked toward me, I was uncertain if he was going to take a shot at me. Instead he hugged me.\n\n\"If it had to be anybody, I'm glad that it's you Wingman.\""
    ],
    "authorname": "Frankenstein1962",
    "tags": [
        "18-year-old",
        "virginity",
        "religious parents",
        "oral sex",
        "blowjob"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/the-wingman-1"
}