{
    "title": "The Neighbors Ch. 02",
    "pages": [
        "The morning after Cindy and I slept together was filled with anticipation and longing. I couldn't stop thinking about her. Her warm kiss. Her perfect breasts. Her smooth, stiff shaft. It was all playing through my head on an infinite loop that next morning. One night with her had completely shifted my worldview. Before meeting Cindy and Darci I had never once considered being with a transwoman. Now, I couldn't imagine anything better.\n\nI spent the morning working on various chores around the house, really just burning time until I could see Cindy again. While putting some dishes away, the doorbell rang. I literally dropped my dishes in the sink and ran to the front door.\n\n\"Hey Jon!\" Cindy said to me after opening the door. \n\n\"Hey you, want to come in?\" I replied.\n\nCindy sashayed into the house, completely fitting for her bright personality. It was still mid-morning but she looked radiant. She was wearing blue boy shorts and simple sandals, which showed off her red painted toe nails. She was wearing a white, low cut, tight-hugging tank top which showed off her impressive assets nicely. She was wearing a ratty baseball cap with her red hair pulled through the back. She looked delicious. \n\n\"So, how are you feeling?\" she asked me, a tinge of nervousness in her voice.\n\n\"I'm ... good. Are you ok?\" I responded.\n\n\"So, you don't have any regrets or anything or you know,\" Cindy said softly with her voice trailing off, her anxiousness more obvious now.\n\n\"What? Oh, god no. Are you kidding me? Last night was amazing. I haven't been able to stop thinking about you. It was perfect, Cindy,\" I responded with exuberance.\n\n\"Really? Oh good,\" she replied before adding, \"The thing is, some guys are all about sleeping with a transwoman until they actually do. I've been with quite a few guys who had buyer's remorse the next day. I couldn't sleep, actually. I've been worried that you would have regrets about being with me.\"\n\nIt had never occurred to me to react that way, but I was reminded that dating and intimacy were very difficult for Cindy and Darci. They had been burned enough times by enough jerks that this reaction was normal - and expected.\n\n\"I like you too much, Jon. I don't want to lose you at all. I just wanted to make sure we're ok,\" she added, her head tilting down and staring at the floor.\n\nHer insecurity was evident and my heart broke for her. I pulled her close and lifted her chin to look up at me.\n\n\"We're more than ok. We're great. You've rocked my world, to be honest. But I have no regrets. None. I don't know where any of this is headed, but I'm here for it,\" I told her, our eyes locked intently as I did. \n\nWith those words, she smiled a wide smile and buried her head into my chest as she hugged me tightly. I wrapped my arms around her, kissing her softly on the head.\n\n\"Good, because if you hurt me I'd kick your ass,\" she said through some muffled tears. \n\n\"Yeah, well, we can't have that can we,\" I responded playfully. \n\nWe stayed in that warm, soft hug for a few minutes. I could tell Cindy was incredibly anxious and needed some comfort. I was more than happy to oblige. \n\nAfter breaking our hug, Cindy wiped her few tears and gathered herself. \n\n\"So, maybe you can come over for dinner tonight with Darci and me?\" she said in a tone that indicated I really didn't have a choice.\n\n\"That sounds great, actually,\" I answered, more than happy to spend time with the gals.\n\n\"Ok. I'll let Darci know. Come over at 5 and we'll get things started,\" she said, as she moved towards the front door. As she opened the door and began stepping out, she added, \"Maybe after dinner you and I can have desert.\"\n\nShe winked really big two times with her left eye which made me laugh. Her intention was painfully clear, and I couldn't wait.\n\n Dinner drama\n\n========================================\n\nAfter finishing up some chores at the house and getting cleaned up, I walked next door to hang out with Cindy and Darci. I brought a bottle of wine since they were footing the bill for dinner. When I walked in, the girls looked absolutely delicious.\n\nCindy had apparently just gotten out of the shower and was wearing very revealing white lace panties and a sexy, white crop-top. She was not bashful at all and when I walked in, she walked over and gave me a nice, wet kiss on the lips.\n\n\"Like what you see?\" she asked.\n\n\"God, you're so fucking hot,\" I responded.\n\nShe laughed at my words before adding, \"I'm going to get changed. Darci's in the kitchen.\" \n\nWhen I walked into the kitchen, Darci looked hot as well. She was wearing a pair of jeans that hugged her shapely legs. Her top was a simple, white low-cut t-shirt that showed off her impressive cleavage. Her hair was done nicely as well.\n\n\"Hey Darci, how are you?\" I said to her as I made my way into the kitchen.\n\n\"Hey,\" she replied in an uninterested tone.\n\n\"Everything alright?\" I asked, a little concerned.\n\n\"Fine,\" she replied in the same tone.\n\nI decided not to press it further, but I was a little concerned at how she was acting. She was cold and distant, something she hadn't been before.\n\nAfter a few minutes of awkward silence, Cindy came into the kitchen and noticed the silence. \n\n\"Everything ok guys?\" she asked, a little confused at the tension in the air.\n\n\"Everything's fine,\" Darci replied in a cold, distant tone.\n\nCindy looked over at me with confusion painted on her face. I shrugged my shoulders upwards in response. Neither of us knew what to make of Darci's responses, and neither of us pressed matters. We both chalked it up to her being in a bad mood. We'd soon find out it was far more than that.\n\nOnce the spaghetti was ready, I popped the top off the wine bottle and we sat down for dinner. Dinner with the girls was a regular joy of mine. We'd normally banter during the entire dinner, arguing over a variety of topics. Dinner would normally end with us deciding what movie to watch together. This evening was different, though.\n\nDarci remained distant, and didn't speak during the entire dinner. It was incredibly awkward and Cindy and I were unable to talk around it. We tried, but eventually the tension became too thick to navigate.\n\n\"Ok, Darci. What. Is. Wrong? You need to talk to us,\" Cindy said as our plates began to clear.\n\n\"Nothing's wrong,\" Darci replied in a cold tone.\n\n\"Stop it! If you don't tell me what's wrong, I'm gonna come over there and kick your ass!\" Cindy shot out, obviously frustrated by the cold treatment she was getting from Darci.\n\nDarci looked at Cindy and responded, \"So, you two fucked last night.\"\n\nCindy had a puzzled look on her face, as I felt my stomach drop. Darci looked upset. I had never once considered that maybe Darci was more attached to Cindy than I thought. Did Cindy and I sleeping together bring that to the surface?\n\n\"Darci, I never would have done anything to hurt your relationship with Cindy. If I had known you were invested in her, I never would have done it. I don't want to come between you two,\" I said after a moment.\n\n\"It's not that,\" Darci said quietly.\n\n\"I'm confused, Darci. You're obviously mad at us for sleeping together,\" Cindy chirped. \n\n\"No, it's not that. I'm not mad about that,\" Darci added defensively.\n\n\"Then what's the matter Darci? You need to let us know. We never would have knowingly hurt you,\" I chimed in.\n\nInstead of answering, Darci got up and walked out of the kitchen. She was obviously having a hard time conveying her thoughts. I was immediately worried and wanted to follow after her.\n\n\"Let me talk to her. I'll get to the bottom of this,\" Cindy said to me.\n\nI stayed in the kitchen as Cindy followed her friend into the living room. Sex with Cindy was unbelievable but I never would have done it if I had known that it would hurt Darci. They were both my friends and I highly valued my relationship with both of them. My mind began to fill with regret, hoping that the three of us could get past this.\n\nAfter a few minutes, Cindy walked into the kitchen and sat next to me.\n\n\"So, Darci opened up to me. And, here's the deal: she's into you, big time,\" Cindy said.\n\n\"I'm sorry, what?\" I responded.\n\n\"Yeah, she wasn't mad. She's jealous. Apparently she's wanted to fuck you since the first time she saw you,\" Cindy continued.\n\n\"Really? Wow, holy shit. I had no idea,\" I responded.\n\n\"So, I think you should fuck her,\" Cindy said quickly.\n\n\"Wait, what? Are you serious?\" I responded.\n\n\"Heck yeah. And don't worry about me. I'm fine with sharing you with Darci. Plus, she's incredibly good in the sack and I think you'd have fun,\" Cindy said nonchalantly.\n\nMy mind began racing. Both Cindy and Darci were incredibly hot. I couldn't believe my luck. These two incredibly beautiful transwomen were both clamoring for me. I felt like I had died and gone to heaven. \n\n\"I mean, if you're sure you are cool with it,\" I began replying to Cindy, before she cut me off.\n\n\"I'm not only cool with it, I insist. Maybe it will get her out of this stupid funk and we can finally pick a damned movie to watch,\" she replied.\n\nI looked at Cindy and could tell she was 100% serious. In fact, she made it clear that her expectation was for me to go in there and seduce Darci right now so that we could \"get it done\" and pick a movie. \n\n\"Go,\" Cindy said again, shooing me into the living room with Darci.\n\nI made my way into the living room and saw Darci sitting on the couch, staring at me as I walked in. She looked incredibly vulnerable at that moment but also incredibly hot. \n\n\"Hey Darci,\" I said, before sitting on the couch next to her.\n\nShe didn't respond.\n\n\"I guess you know that Cindy and I just talked,\" I continued.\n\nAgain, no response.\n\n\"And if I'm being honest, I never thought I'd have a chance with someone like you. You're way out of my league,\" I said in an honest and flattering tone.\n\nDarci's eyes rolled upwards as she laughed a bit. She finally spoke, saying, \"Yeah right.\"\n\n\"No, I'm serious Darci. Look at you. You're really fucking hot. You've got an incredible body and you're a pretty amazing lady. You are a dream girl,\" I pleaded.\n\n\"With a dick, Jon. Most guys aren't looking for that last bit,\" she replied in a deadpan tone.\n\n\"Well, it's not an issue for me. In fact, I think it makes you even hotter,\" I added.\n\n\"So, you're into chicks with dicks now, are you?\" Darci responded.\n\n\"Well, at least the two in this house, that's for sure,\" I replied.\n\nWith that, Darci leaned over, planting a firm kiss on my lips. After breaking the kiss, she whispered into my ear, \"Let's go to my room then.\"\n\nWe both got up from the couch and walked down the hall to Darci's room. \n\n\"Wait here. I have something I want to show you,,\" she said, walking into her bathroom and closing the door. \n\nAfter a few minutes, the door finally opened and Darci emerged. She had changed out of her jeans and t-shirt into an absolutely mesmerizing piece of lingerie. It was black and made of sheer cloth with a frilly skirt that poofed out at the hips. Her bra was lace and black and barely held in her large, round breasts. Her panties were also black and see thru, and I could see her massive cock tucked away underneath the sheer cloth. She looked glorious.\n\n\"What do you think?\" she asked me.\n\n\"God, I can't wait to get you out of it,\" I said, my heart placed firmly in my throat. \n\n\"Mmmmmm, Jon. I can't wait to get my hands on you,\" she replied, walking over in a seductive manner.\n\nAs soon as she was close enough, she ripped my shirt right off of me. She immediately grabbed the button on my jeans and popped it, before pulling the zipper down aggressively. Darci was very, very aggressive and it was a huge turn-on.\n\nShe ripped my jeans to the ground and while on her knees, pulled my boxers off as well. My cock was already hardening from the sight of her in the lingerie, and it quickly stiffened as she took control of me. \n\nDarci's hands immediately grabbed hold of my cock, as her mouth began to work it over in expert fashion. She licked the shaft vigorously while also placing the head between her lips and sucking it into her mouth. Her tongue lashed back and forth over the entirety of my cock, as her head began to bob back and forth on my shaft. Darci was clearly experienced with this and she knew exactly what she was doing. \n\nWhile she worked over my cock with her mouth and tongue, her hand reached behind me and she began to work one of her fingers inside of my asshole. At first, I felt a tinge of shock. I wasn't sure if I was ready for that, but after a moment she hit a spot inside of me that nearly brought me to my knees in pure pleasure.\n\n\"There we go,\" Darci said, as she continued to work her finger inside of my ass. \n\nI felt my erection get even harder as she continued to blow me and work her finger in my ass. It was an amazing experience that was bringing me quickly to sexual explosion. \n\nSensing that I was nearing a climax, Darci quickly backed off. \n\n\"Nuh uh. Not so fast, mister. We're both going to enjoy this,\" she said.\n\nI pulled Darci in and placed a long, passionate kiss on her lips. I could feel her cock getting stiff inside her panties and pressing against my own. I reached down with my hand, feeling her massive cock through the sheer panties. The transparent cloth was doing a feeble job of holding in her hardening shaft. \n\nI dropped down to my knees and pulled her panties down to the ground. Her massive cock was staring me in the face, fully erect and begging for attention. Driven by instinct and passion, I began licking her perfect cock in the same way she did for me, sucking on the head attentively.\n\n\"Ohhhhhhh. Mmmmmmmmmm,\" Darci responded approvingly. \n\nI reached one of my hands up and began massaging one of her massive breasts through the sheer, black lingerie. I pulled the cup to the side and found her nipple with my finger, tweaking it as I continued to suck on her perfect cock. \n\nHer hips began to thrust slightly as I continued to blow her. I couldn't fit all of her huge shaft in my mouth, but did my best, nearly choking a few times. \n\n\"Oh god, we've gotta stop Jon or I'm going to explode,\" Darci said through a racing breath. \n\nI pulled away, but kept a hand on her massive shaft. She reached down and grabbed a hold of mine. We began kissing again as our hands stroked each other slowly and gently. It was a thrilling sensation.\n\nAfter a moment, we both couldn't take it anymore. We each began stroking the other's shaft more and more vigorously. Our breaths began to quicken and I could feel the explosion building inside of me. After a few more seconds, I reached a powerful climax. My cock began rocketing out loads of my cum all over Darci's lingerie. \n\nDarci also began cumming, as her massive cock shot out her warm, white cum against my body. We both stood there as our shafts continued to unload on one another. After we both finished, Darci and I brought our lips together once again. \n\n\"That was round one, lover,\" Darci said to me.\n\nShe took off her lingerie top, leaving only her black bra covering her. She reached behind and undid the bra, allowing her two massive mounds to finally burst free. They were fake, but looked amazing. They were easily DD cup in size, and she had perfect, medium sized eraser shaped, pink nipples with tiny round areolas. She took a step back from me, allowing me to take in the sight of her. \n\nI looked her up and down, and she was a glorious sight. Her firm, muscular legs to her slim waist to her massive breasts. Her cock was somewhat limp now, but I could tell it wouldn't be long before we were both ready for round two.\n\n\"Let's get in the shower,\" Darci commanded.\n\nAs she turned towards the bathroom, I marveled at her perfect ass. It wasn't large, but it was perfectly shaped and toned. I gleefully followed her.\n\nDarci started the shower and waited a minute for the water to warm. Thankfully, it was a very large shower and we both were able to step in comfortably with room to spare. The warm water began washing over both of us.\n\nDarci took the soap in her hands and lathered them up. She began rubbing her hands on my semi-soft cock. She then began working the lather all over my body. As she finished, she put the soap in my hands and said, \"Your turn.\" \n\nI grabbed the soap and lathered it up in my hand and began working my hands all over her body. I grabbed her semi-hard cock and stroked it slowly. I dropped down and applied the soap to her legs, turning her around and working her perfect, firm ass attentively. I reached around to her chest, massaging her massive breasts as my hardening cock pressed against her backside. \n\nThe more I rubbed her down, the more her cock grew in front of me. I couldn't believe how turned on I had become by the sight of it, but I was completely sold now. The sight of her sexual arousement caused the same in me.\n\nAfter a moment, she turned around and looked me in the eyes intently, saying, \"Jon, have you ever bottomed?\"\n\n\"No, I haven't,\" I responded.\n\n\"Are you willing to try?\" she asked me.\n\nThe thought of her massive cock popped into my head, but I was so worked up I was willing to give it a shot.\n\n\"Yes, Darci. Let's do it,\" I responded nervously.\n\n\"It's going to hurt at first. I am a big girl, after all,\" Darci said, before continuing, \"but once we get going, I'm positive you'll love it.\" \n\nI turned my back to her, unsure of what this experience was going to be like. Darci grabbed my right leg, and positioned the foot on the built-in shower stool, lifting my leg and widening my hole for her. She began working her finger into my ass again, knowingly finding my prostate and rubbing it. My cock twitched approvingly. \n\n\"Mmmmm, you're so tight. I'll be gentle though,\" Darci said seductively.\n\nShe continued to work my hole, massaging it and stretching it like an expert. Before long, she had inserted two, then three fingers. My cock had fully hardened again, as I didn't anticipate how good it would feel. \n\nThen I felt it. The head of Darci's massive cock was pressed against my asshole. She began to push and I could feel her head slowly push inside of me. It was a strange and painful feeling, but it was simultaneously amazing. \n\n\"Don't hold your breath. Just relax,\" she said from behind me.\n\nI did my best to breathe normally, but each subtle push brought me a little more pain. For a minute we continued the exercise, as her rock hard shaft pushed inch by inch inside of me. After a few minutes and a lot of pain, her giant cock was fully pushed inside of me. It was a sensation I had never experienced, but it was sexually charged. \n\nSlowly, Darci began to pull out of me, leaving me with a strangely empty feeling. She pushed back into me, which was still painful but not as bad as before.\n\n\"Are you ok, Jon?\" she asked me.\n\n\"Yeah, keep going,\" I told her.\n\nDarci's hips slowly began thrusting her massive cock in and out of me. At first, all I could feel was the pain, but I gritted my teeth, trusting that it would get better. After a moment, though, the pain was drowned out by sexual pleasure with each thrust of her shaft deep inside of me. \n\nI began breathing heavily as the pleasure began to wash over me. I felt Darci's arm reach around me and grab my own hardening cock in her hand. Her hands expertly rubbed my shaft, occasionally fondling my balls and brushing the lip of my cock head. It was as if she knew every sensual spot on my body and was toying with all of them at once.\n\n\"Mmmmmmm. You are so tight, Jon. This feels so good,\" Darci groaned behind me, as she continued to thrust her massive meat in and out of me.\n\nAs the warm water pounded down on our gyrating bodies, Darci's thrusting grew more and more intense as her cock began pounding my ass harder and harder. Her hand expertly stroked my rigid cock in unison, driving us both towards a massive orgasm. ",
        "The sensation of her pounding me and stroking me off became too much, as I quickly reached yet another explosion. \n\n\"Oh god, I'm cumming again,\" I yelled out as the sensation washed over me.\n\nWith Darci's stiff meat buried into me, my cock began spurting out my seed against the shower wall. I was clearly not done from earlier, as rope after rope of my white juices splashed violently against the brown tiles. Darci continued thrusting her hips into my backside as I was exploding, as she began to also reach her peak.\n\n\"Oh shittttttttt,\" Darci grunted out. I could feel her cock twitching inside of me as she began to fill me with load and loads of her white, warm cum. She grunted softly with each release and I could feel her cum slipping out of me, the volume too much to be contained. \n\nAs we both continued to erupt, I leaned back and felt Darci's massive breast and erect nipples press into my back. She withdrew her cock from me and I turned to face her, locking into a long, passionate kiss as our cocks met between us. \n\n\"That was unbelievable, Darci. I never would have thought I would feel that way, but having you inside me was a sensation I can't describe,\" I confessed to her.\n\n\"You were amazing too Jon. I can't wait to try more with you,\" she said, clearly elated with everything we had just experienced.\n\n Not Done Yet\n\n======================================\n\nWe proceeded to rinse off, and left the bathroom together completely and refreshingly naked. When we entered the bedroom, we found Cindy laying on the bed completely naked with her semi-stiff cock in her hand. \n\n\"Cindy, what are you doing?\" Darci asked of her housemate.\n\n\"I'm sorry, Darci. I heard you and Jon going at it and it got me so worked up. I had to pleasure myself while listening to you two fuck. So, Jon ... you let Darci top you. Wow! You're such a surprise!\" Cindy replied, a wide grin on her face.\n\n\"Yeah, I guess so. It was so amazing, though,\" I responded.\n\n\"So...uh...are you two completely spent?\" Cindy asked inquisitively.\n\nI knew the answer already. The thought of being with these two beautiful transwomen at once had already made my cock respond in immediate approval. Cindy definitely noticed.\n\n\"Oh, it looks like Jon isn't! Oh, Darci, it looks like you're game too! Oh yes!\" Cindy said with excitement.\n\nI looked next to me and could see that Darci's cock was beginning to harden again as well. Our respective sexual drives were clearly not quenched.\n\nI crawled into bed and laid next to Cindy, whose cock was also beginning to harden considerably. We laid on our sides facing one another, our hardening cocks gently touching between us as we began to kiss softly. I felt Darci lay behind me, her cock pressing against my back. I felt her draw close as her chest pressed against my upper back and she whispered into my ear.\n\n\"I want you to fuck me, Jon,\" she said.\n\nMy cock hardened even more at the words. As my lips parted from Cindy's, I could see a large smile on her face as she whispered, \"Do it.\". \n\nI flipped over to face Darci, our cocks pressing together once more. I pulled her in for another passionate kiss before answering, \"Your wish is my command.\"\n\nDarci handed me the bottle of lube on her nightstand, which I promptly used on my stiffened cock. She laid on her back, spreading her legs for me to take her. Her cock was fully erect in anticipation. Cindy moved next to Darci and they began to make out, with Cindy's hands massaging Darci's massive breasts in front of me. Darci's hand reached out to begin slowly stroking Cindy's stiff shaft.\n\nI nestled between Darci's legs and pushed my manhood against her tight, pink hole. She moaned in pleasure as my cock began to press into her. Slowly, I pushed my manhood deeper and deeper into this beautiful creature, watching as her body twitched in pleasure.\n\nAs I did, Cindy began to reposition herself, with her head moving towards Darci's cock and her stiff shaft around Darci's chest. Cindy began licking Darci's shaft passionately.\n\n\"Oh, holy shit this is so amazing,\" Darci moaned as Cindy began to work on her shaft, with my own cock buried fully inside of her.\n\nDarci reached over and began stroking Cindy's cock with her hand as Cindy continued working on Darci's erect cock passionately. Cindy's tongue lashed back and forth over Darci's massive shaft, placing the head between her lips periodically and into her throat. I had begun slowly thrusting my cock in and out of Darci's tight hole as well.\n\n\"Oh my god. Oh god, this is ... oh god ... oh god,\" Darci uttered in an unbridled sexual growl. \n\nHer sexual pleasure was such a huge turn on and amplified my own thrusting. Her hole was so tight, putting the perfect amount of pressure on my cock. Each thrust in and out of her was like a small moment of ecstasy, driven to new extremes as I watched her and Cindy also pleasure each other. \n\nDarci had begun vigorously stroking Cindy's massive cock as well, and Cindy was thoroughly enjoying it, groaning in extreme pleasure as she continued to blow Darci's stiffened cock. \n\n\"Oh shit, keep doing that Darci. Holy shit, I won't last long!\" Cindy moaned out.\n\nAll three of our bodies grinded, pushed and writhed in perfect unison. Darci's eyes were closed, as she had found perfect sexual fulfillment. Cindy's body glistened with sweat, as her sexual energy continued to build. My cock continued thrusting in and out of Darci, bringing me closer and closer to a perfect release.\n\n\"Mmmmmmm, I'm about to cum. Holy shit, oh god ... oh god ...uhhhh,\" Darci groaned out.\n\nI watched as Cindy placed her mouth over Darci's cock head and tried to take all of her cum in at once. I felt Darci's body clench up as she erupted an explosive amount of her seed in sexual perfection. Her ass tightened around my cock, and with one last thrust, I also reached my peak.\n\nMy cock began erupting inside of Darci, filling her with loads of my cum. My body felt a rush as wave after wave of release poured inside of her body uncontrollably.\n\nCindy moved off of Darci's cock as it continued to shoot out loads of her cum. Her rigid shaft shot several more ropes of cum that landed on her massive breasts. Somehow, even through her orgasm, Darci continued to stroke Cindy's cock, finally bringing her to sexual fulfillment as well.\n\nCindy got on her knees and groaned out, \"Holy shittttttt!\"\n\nIn a moment too perfect, Cindy's huge shaft began spurting out her sex on Darci's chest as well. Cindy's body looked perfect in that moment, as her head was tilted back and her eyes pinched closed. Her ample chest was pushed out, her eraser stiff nipples pointing approvingly in the air. I watched as her massive cock rocked up and down, shooting rope after rope in perfect sexual release.\n\nAfter a minute, the three of us were completely depleted. I withdrew my cock from Darci, as Cindy collapsed on the bed next to her. I crawled up the bed and planted myself in between the two of them, completely exhausted. \n\nI turned my head to Cindy who pressed her lips passionately against mine. I felt her hands rub over my body. After our kiss broke, I turned to face Darci, who wanted the same. I put our lips together, as our bodies pressed together in passion. \n\n\"I think we should all get cleaned off together,\" Darci said a few minutes after our kissing subsided. \n\n\"I think that's a perfect idea,\" Cindy added.\n\nAs they got up and headed towards the bathroom, I watched admiringly at the girls as they went before me. I watched as their hips swayed back and forth, their perfect asses a sight to behold. I pinched myself to make sure I wasn't dreaming and once I realized I was firmly in reality, I bolted up to join them yet again. \n\nAs we made our way towards the shower, Cindy finally added, \"So, can we pick a fucking movie to watch now guys?\""
    ],
    "authorname": "DaniW",
    "tags": [
        "anal",
        "transsexuals",
        "big cock",
        "shower",
        "three-way",
        "transwoman",
        "threesome"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/the-neighbors-ch-02-2"
}