{
    "title": "The Baseball Trip Pt. 08",
    "pages": [
        "Inning 8 \n\nPart 8 of a 9 part series. It's going to be a tight one folks -- who will come out on top after everyone scores? All our players over 18. Now get out there and give 'em your all! \n\n***** \n\nWhen I finally woke up, my whole body hurt. Looking down I saw I was scratched, bruised, punctured. In giving Julia pleasure, I hadn't noticed how much she'd hurt me. The aggressive athlete was still passed out, snoring lightly. She almost looked cute this way. Like a snoozing tiger. \n\nWe had a long day ahead of us, so I started to wake everyone up. We were all mostly naked and, at this point, it hardly seemed to matter. Tits and balls just hanging out all over the place. We'd all seen it all, so why pretend to be prudish? \n\nThat didn't stop me from appreciating Kelsey's supermodel body, Sarah's sexy physique, and Julia's fantastic figure. Each girl so different and yet the same result -- they were amazing. Anyone would kill to be with any of them, and I had been with all three. Well, to some extent anyway. Still working on the Sarah stuff, of course. \n\nAs per usual, Julia gave me a slap on the ass as she went by, her version of after sex cuddling, I suppose. Kelsey, on the other hand, offered up a high five. \n\n\"You two were awesome,\" she leaned in and whispered, \"We are totally topping that today.\" \n\nI got in the shower, once again clearly covered in bodily fluids. Sarah came into the bathroom completely naked without even knocking. Like it was nothing. She started to brush her teeth. Massive breasts shaking in synchronicity with her arm. \n\nI stepped out of the shower and grabbed a towel. Sarah eye fucked me hard before I could cover up. \n\n\"Wow, Julia goes pretty rough, huh?\" she asked, pointing at all the scratches and bruises. \n\n\"Her thing, I guess,\" I said. \n\n\"Glad it's not your thing -- not sure I'd have survived this trip, otherwise.\" \n\n\"I'm assuming Kelsey was more your speed?\" I asked. I was trying to be playful but I could hear it came out mean. Sarah just blushed. \n\n\"We... ummm... I mean. You and Julia were going at it and we just... Got a little carried away, I guess.\" \n\n\"Was it good?\" \n\n\"Yeah. For sure. Did kinda wish that it was someone else's tongue, though. Or maybe his other parts.\" She reached down and gave my bare cock a squeeze. It was still sticky with Julia's juices but Sarah didn't say anything. \n\n\"That could be arranged, you know.\" \n\n\"That was the other thing I kind of figured out last night.\" \n\n\"What's that?\" I asked. \n\n\"Watching you with Julia... I wasn't just turned on. I mean, OK, I was totally fucking flying. But I felt something else, too. Jealous.\" \n\n\"Sarah, fuck, I mean... You have a right to your feelings. Of course you do. But you can't just... I mean, it's not fair to me or anyone if you're going to do one thing and then expect us to not...\" \n\nSarah put her hand on my cheek and kissed me lightly on the lips. A brush. \n\n\"I'm not mad at you or anyone. Well, at myself maybe. And that's really what I guess I'm getting at. Remember that story I told you? About the quarry? I think sometimes doing the safe thing's also the stupid thing. So last night, after everything that happened, I sat up in bed and just... I decided it was time to do something different. Maybe a lot of things. Time to just jump and hope I hit the water.\" \n\n\"I'm not sure what you mean. I mean, no, I get it. I just... you're talking about school? Rob? You and me?\" \n\nSarah smiled then leaned in. This time she gave me a far more passionate kiss. Lips and teeth and a little bit of tongue. \n\n\"You'll see soon enough,\" she said. \n\n* \n\nThe second to last day of our trip took us to Toronto for one final game. It was a five hour drive -- one of the longest of the trip -- and all of us, though clearly tired and a little worn, were ready for a last round of fireworks. \n\nContinuing her tradition, Julia asked me to drive post-coitus. \n\n\"You fucked me too good,\" she said, \"I can barely walk, let alone drive.\" \n\nOf course, my own wounds from our encounter went unremarked on. At that point I didn't want to argue it, I just grabbed the keys and took my seat. Julia climbed in the other side, putting Sarah and Kelsey in the back. \n\nOur first hour of driving was basically silent. I didn't even bother to turn on the radio. We all just stared out our windows, not even acknowledging that other people were in the car. I guess we were all a little fucked out. \n\nThen out of nowhere, Julia said, \"I think we should all play a game.\" \n\n\"Like, 'I Spy' or '20 Questions' or whatever?\" Kelsey asked. She did not sound excited. \n\n\"Yeah, but like, I dunno. Fun.\" \n\n\"OK -- what do you have in mind?\" I asked. \n\n\"It can't be boring,\" Kelsey said. \n\n\"I need to keep my eyes on the road,\" I said. \n\n\"I don't want to do anything... inappropriate,\" Sarah said. \n\n\"Oh we're definitely going to do that,\" Julia said. Sarah seemed not unpleased by that promise. \"OK, here's the game: 'I Bet You Won't.'\" \n\n\"Oh this can only end well,\" I said. \n\n\"Trust me,\" Julia said, \"One person bets that the other won't do something. Soooo for example, I could say 'I bet Ben won't eat this smushed up gummy bear I found under the seat this morning.'\" \n\n\"You're damn right I won't,\" I said, \"I'm pretty sure the last time this car was cleaned, Yugoslavia was still a country.\" \n\n\"Right. So in this case I was right. I get a point and it moves on to the next person to make a bet. Whoever has the most points when we get to Toronto wins the game.\" \n\n\"What do we get if we win?\" Kelsey asked, ever competitive. \n\n\"The satisfaction of knowing all of us better than we even know ourselves,\" Julia said. \n\n\"Bragging rights,\" Kelsey said, \"I can live with that. OK -- let's do this thing.\" \n\n\"Wait,\" Sarah said, \"What if Ben did eat the gummy bear?\" \n\n\"Then Ben would get the point and I have to do something that Ben tells me to do -- a dare -- since I clearly injured his pride by suggesting he wouldn't do it.\" Then Julia popped the floor bear in her mouth. \"There's an open bag in the door. Jeez dude, it was just an example.\" \n\n\"I don't know,\" Kelsey said, \"It seems like I could just bet ridiculous stuff. Like 'I bet Sarah won't jump out of the car right this second' or 'I bet Ben won't turn his face inside out' every time and win the game.\" \n\n\"It has to be something that someone might do,\" Julia said, \"The rest of the group can vote. If a question is deemed unrealistic, then the person who suggested loses two points and has to do a dare for each other person in the car. OK?\" \n\n\"Got it.\" \n\n\"Works for me.\" \n\n\"Good, I'll go first,\" Julia said. She made a big show of considering her options. Traffic whooshed by. Sun glinted through the windshield. It was turning into a perfect day for baseball. And other things, of course. \n\n\"OK Ben,\" Julia said, \"now that this gummy bear has been in my mouth, I bet you won't eat it for sure.\" She took it out and showed me the red, dripping bear, most of its features already worn away. \n\nI shrugged. I'd tasted almost everything else of Julia's. Why not? She reached over and put the bear in my open mouth. It was a little strange, all warm and wet. I was kind of grossed out. A little turned on. \n\n\"OK, so that's a point for Ben, plus now he gets to make me do something.\" \n\nI was kind of at a loss for what I was supposed to do here, so I stuck with something icky and told Julia to lick her window. She did it, not all that excitedly, and then spent the next five minutes wiping her tongue off. \"Ugh. Not doing that again. OK Ben, your turn.\" \n\nWe went this way for a while and, about an hour in, the score was basically level with all of us having done one thing and turned down another. We were feeling each other out, like always. Seeing where the line was, then trying to push the other person over it. \n\nMost of our bets involved doing gross things with gummies. The Haribo people would not be pleased. \n\nIt was not a great game but it passed the time and led to some laughs. Then Julia made her third bet and I saw what she had really been up to the whole time. \n\n\"Sarah, I bet you won't kiss Kelsey. On the lips. For a minute.\" \n\nDid she really think Sarah wouldn't do that? Oh I guarantee Julia knew she would. Sure enough, without even a word, Sarah leaned over to the middle seat and kissed her besty. Hard. I tried to keep my eyes on them and the road at the same time and failed miserably. It sounded like a heck of a kiss though. \n\nAnd that -- not the points or the wishes or even passing the time -- was the real point of this game. I can't believe I ever thought that Kelsey was the instigator in our group. \n\nFor her dare, Sarah decided to turn the tables. \"Since you seem to like kissing so much, maybe it's time you tried it yourself.\" \n\nJulia sighed, as if she really couldn't have seen this one coming. She turned around in her seat and started shoving things aside. Then she carefully leaned over and shared a taste of Sarah. It was not comfortable for anyone and so they quickly disengaged and sat back down. \n\nBut Julia had gotten the point and was now tied for the lead with Kelsey. \n\n\"Your lips are awesome. Really full and fantastic,\" Julia said. \n\n\"Oh. Thanks, I guess,\" Sarah said, turning a little red, \"It was kind of nice\". \n\n\"Sounded like it,\" I said. \n\n\"You like her lips so much Ben,\" Julia said, \"But I bet you won't kiss them.\" \n\n\"I'm driving right now so 'no.'\" \n\n\"Oh right. Fuck. Well, that's a point for me, I guess.\" \n\n\"Hey guys,\" Sarah said, \"I really have to pee. Can we stop at the next rest stop?\" \n\n\"I bet you won't hold it for... ten minutes,\" I said. It wasn't much of a bluff, the next rest stop was 10 miles away. \n\n\"Done.\" \n\n* \n\nWe put the game on hold and when we got to the rest stop, Sarah got her point. Kindly, she told me my punishment was also to use the bathroom, as well, which was good because I really had to go. \n\nAs we were getting out of the car, though, Sarah said, \"Hey Kelsey, I bet you won't 'help' Ben in there.\" \n\n\"You mean, like... hold his thing while he...\" \n\n\"Yeah.\" \n\nKelsey thought about it for a moment, then shrugged and got out of the car. \"Come on big guy, let's get 'er done.\" \n\nThe stop was pretty simple -- a concrete slab in the middle of a grassy spot on the side of the highway. The bathrooms were on either side of the building, so Kelsey and I made our way to the left while Sarah scampered over to the right.. \n\nAt first I'd thought this would be easy, but I hadn't considered the fact that Kelsey was now going to have to find her way into a busy men's room without anyone seeing. The beautiful blonde made a big show of hiding behind a nearby tree, like a goofy James Bond. She even held her hands together like she was clutching a gun, though I have no idea why. \n\nWe watched the door as people entered and left. Finally there was a slow point where it seemed like no one was around and we sprinted inside. I grabbed Kelsey's sleeve and pulled her into a stall. Less chance of getting seen in here. \n\nI stood in front of the toilet and held my arms up, making it clear that this was now Kelsey's game. \n\n\"Hurry it up if you can,\" I said, \"I really do have to go.\" \n\nThe tremendous teenager reached down to my zipper and slid it open. Then she fished inside my shorts and, finally, grabbed hold of my cock. It would have been stiff at this point, anyway, even if I didn't desperately have to pee. \n\nClumsily, though not in a way that was at all unpleasant, Kelsey pulled my cock out of the zipper and sort of pointed it forward. \n\n\"Good?\" she asked. \n\n\"It'll do.\" \n\nI tried to pee, but Kelsey holding my hardness had made my member switch gears. I could piss or I could cum -- not both -- and in the hand of such a beautiful woman, my penis was in the wrong setting. \n\nFinally, a long, slightly burning stream shot out. Kelsey hadn't judged it exactly right, and I started pissing on the floor. She quickly realigned me to the bowl. \n\n\"That's really neat,\" she said, keeping a firm grip. \n\nIt felt like forever -- my bladder had more than a bit to give -- but finally it trickled off. I told Kelsey to give my guy a little shake, then let her tuck him back in. \n\nThen she turned around so she was facing me and dropped her shorts. \n\n\"What? It's contagious,\" she said and sat down. I have to admit there was something a bit arousing about watching her pee. I don't want to say it was intimate exactly, but it was something most people don't share with each other and it was watching liquid spew out of her pussy so... Yeah, I mean, if I wasn't already aroused I would have been by then. \n\nEventually she stood up and pulled her pants back up. I gave her a pouty look as her pussy was put away, but Kelsey just smiled. \n\n\"I'm sure we'll get plenty more opportunities,\" she said. \n\nWe were lucky that the bathroom had been empty this whole time. We opened the stall and went to wash our hands. As we did, an older man came in. He stared at Kelsey, shocked that she was there, though probably a bit taken aback, too. Like I said, Kelsey was striking. \n\n\"He needed help,\" she told the man, then walked out. I shrugged and then followed. \n\n* \n\nBack at the car, we agreed to switch seats -- I would continue to drive, but Sarah wanted to sit up front. So Julia joined Kelsey in the back. \n\nOnce we got on the road, we tallied the points. Sarah, Kelsey and I were all tied at 4 with Julia close behind with 3. \n\nIf Kelsey was competitive than Julia was... I don't know, psychotic. She was not going to lose at her own game and so she made a bet that I'm sure she believed was uncallable. \n\n\"Sarah, I know you won't suck Ben's magic dick while he drives.\" \n\nSarah didn't even blink. She tucked her brown hair behind her ear, then reached over and grabbed for my fly. I practically swerved off the road right then and she hadn't even touched my cock. \n\n\"Guys, are we sure this is such a good idea with me driving?\" \n\n\"Yep,\" Julia said. \n\n\"Definitely,\" Sarah said. \n\nShe reached down and got me out with ease. Then in one swift motion the buxom brunette bobbed my apple. Holy fucking FUCK! It might seem like this was old hat by now, but Sarah had only touched my dick twice -- once on day one and again on day three -- with her hands, and never since. She'd gone from first to third on an infield grounder, this gorgeous girl with deep brown eyes and an even deeper chest. \n\n\"Whoah.\" \n\nIt was all any of us could say. Except maybe for Sarah and she had her mouth full. As I said, I'd never experienced Sarah's ministrations. Kelsey was eager, sometimes a little too much. Julia, like everything, was aggressive. But Sarah was attentive, almost loving. Passionate and strangely appreciative. Like it was me doing her the favor by letting her put my cock in her mouth. Sarah swirled her tongure around my shaft like it was something precious to be savored. \n\nI did my best to keep my eyes on the road, but honestly Godzilla could have stepped onto the highway and I'd have plowed right into him. Instead, because this wasn't dangerous enough, I took one hand off the wheel and rested it on the back of Sarah's head, twining my fingers in her brown tresses. \n\nShe hmmmmed softly and shifted her rhythm, switching from little licks to full on suction. I swear I almost blacked out. \n\n\"Sar...\" I groaned. She lifted her head up with a loud, savory smack of her lips. I bit of drool trailed from her mouth to my cock. Sarah sat back, a contented little smile played on her lips. \n\n\"You said just suck, right?\" she said. Julia nodded dumbly. Reluctantly I put my penis back in my pants. If my balls weren't aching already... \n\n\"So that's a point for me,\" Sarah said and smoothed her shorts. Don't think I didn't notice the way she moved her legs as she did it. The sexy brunette was as worked up as I'd seen her. \n\n\"And Julia, for so rudely challenging me, I believe you should also do some licking. On Kelsey.\" \n\nKelsey's legs popped open like they were set on springs, but Julia seemed to hesitate. I'd been living with my roommate long enough to know she was straight as a board. Despite the whole athlete, tomboy thing -- maybe BECAUSE of the athlete tomboy thing -- Julia was into boys all the way. \n\nBut if Julia had bet against Sarah's reluctance and lost, well then Sarah hadn't counted on Julia's ingenuity. She leaned over and, like a big dog, took a long wet lap of Kelsey's cheek. \n\nKelsey giggled, ticklish, and we all laughed. Things had actually gotten tense for a moment there. \n\n\"Good enough?\" Julia asked. She wiped her mouth, self-satisfied. \"I keep telling you guys. You gotta be more specific.\" \n\n\"Clearly,\" Sarah said, \"But don't worry. I'll make it up to you.\" \n\n\"You'd better,\" Kelsey agreed. \n\n* \n\nOurs was not a fast moving game. People actually took their time on their turns, thinking about who to challenge and with what. Plus the bet, itself, was often time consuming as well. And Toronto was fast approaching. \n\nI got a feel of Sarah's fantastic tits (over the shirt, but still). Then Kelsey got to do the same. Sarah's breasts were getting molested regularly, but she didn't seem to mind. She then bet, perhaps looking for a little revenge, that Julia wouldn't finger herself right there in the back seat. \n\nBy the time I glanced back, Julia's shorts and panties were already on the floor. Her pussy pink and drooling. \n\nSLAP! Julia's hand rebounded off her clit. \n\n\"Doesn't that, like, hurt?\" Kelsey asked. \n\n\"That's kinda the point,\" Julia said, dipping her fingers in, \"It's no different than Sarah. Y'know... tasting. Whatever gets you off, you know?\" \n\nJulia continued jilling for about a minute or so, then stopped, a little bored with it, and pulled up her shorts. I pretty much missed the whole thing. This driving thing was killing me. \n\nSince it had been Sarah's bet, Julia made her spend the rest of the drive with her tits out. A reward for the entire highway, really. As soon as her shirt was off, her beautiful boobs glinting in the sun, Sarah took her turn. \n\n\"Since we just talked about it, Kelsey, I bet you won't slap your bare puss like Julia does.\" \n\nKelsey sighed and took off her shorts again. At this point I was starting to think we might be better off just staying bottomless. The beautiful blonde's shaved snatch was out for everyone to see. Kelsey flattened her hand and then tapped her pussy lightly. \n\n\"Jeez, you guys are all such pussies,\" Julia said. She reached over and took Kelsey by the wrist, showing her the motion. \"Fast and hard. Like that.\" \n\n\"I did say you had to do it 'like Julia.'\" Sarah said. Kelsey growled in response, reared back and hit herself right on the clit. I heard it this time, but Julia still groaned in frustration, as if it was her own sex getting so under stimulated. Then without even thinking about it, Julia reared back and... \n\nSLAP! \n\nKelsey whimpered, crossing her legs. Julia suddenly stopped herself, looking at her hand in horror. \"Fuck, I'm sorry Kelsey I didn't... I don't know what came over me.\" Julia seemed legitimately upset. \n\nBut then Kelsey raised her own hand and whacked her clit, herself, with that same amount of force. Her poor puss looked a little red, but Kelsey just smiled and got her shorts back on. \n\n\"Not bad,\" she said, \"Just not for me, I don't think. Well, since Sarah loves sharing so much, I know she won't taste everyone in the car, including herself.\" \n\nSarah unzipped her pants, dipped her hand in and licked a finger. Then she reached over to me, sliding her hand right up my shorts leg and did the same to my cock. \n\n\"Kinda testosterone-y,\" she said. She turned to the backseat as if to say, 'well?' Kelsey wasted no time get her finger good and sauced, then stuck it up front for Sarah to lick. Then Julia did the same, winding her arm around the suitcases as best she could. ",
        "\"Kinda the same,\" Sarah said, \"Kinda different.\" \n\nWe all shared a look at that moment, as if reality had suddenly sunk in. We'd all woken up horny and were now in some higher, super-horny state previously unquantified in human history. All of us was ready for almost anything and the day could promise only that. Anything. \n\nEverything. \n\nIt was exciting. Honestly, a little scary. Like four of us going down the deep dive on a roller coaster. Holding each other's hands, not sure if we were screaming in wondrous delight or absolute terror. \n\n* \n\nFor our final hour, we pulled over one last time and changed seats. Julia still didn't want to drive and she didn't trust the newly licensed Kelsey to take the wheel either so Sarah got the honor (everyone agreed she could put her shirt back on in exchange for her service). I joined Kelsey in the back -- a dangerous combination -- while Julia sat in the passenger seat. It was probably the safest place in the car, since there were only limited things you could be forced to do to someone who was driving. \n\nKelsey climbed onto my lap as soon as I sat down. She didn't really rub much, just sort of pressed against me. Amazing how something that once seemed so illicit could now feel this mundane. \n\nWe continued betting, but things started to slow. With the score so tight, and the city getting closer, everyone sort of froze, as if content to just run the clock out. Everyone except for Kelsey. \n\n\"Why won't anyone challenge me?\" Kelsey asked, sort of pouting. She'd clearly thought that being in the back with me was going to lead to something exciting. Instead, everyone avoided her because it was well known that she was up for anything. A call station, in the poker parlance. \n\n\"Fine,\" Julia said, \"I bet that Kelsey won't let Ben stick it in her ass.\" \n\nThe whole car practically gasped. Julia smirked, satisfied that she'd shut the teenager up. I could see Kelsey's eyes get a little wide. But she went on undaunted. Up for anything, indeed, Kelsey unbuckled her shorts and threw them up to the front seat. \n\nI shucked my short as well, then I took my tool out of my boxers and held it upright. \n\n\"Holy fuck,\" Sarah said. \n\n\"No lube in here or anything, right?\" Kelsey asked. \n\n\"I have some hand sanitizer,\" Julia said. Kelsey sort of thought about it, then shook her head. \n\nWithout saying a word, Kelsey sat up a bit and spread her cheeks. Then she slowly maneuvered herself downward, careful to aim me at the correct target. I felt Kelsey's tight ring try to wrap around the head of my cock, but then it stopped dead. As if there wasn't an entrance at all. The beautiful blonde gamely tried to go further, but we were stuck. \n\n\"Dammit, it won't go in!\" Kelsey said. She sounded more disappointed than I'd thought. \n\n\"You need some kind of moisture,\" Julia said, apparently our acting expert on anal. \n\n\"I mean, his head is kind of in there...\" \n\n\"I'll concede that you were willing, if not exactly able,\" Julia said, \"But I expect an IOU at some point.\" \n\nWe were now in Toronto proper and Julia kindly gave Kelsey her shorts back so she could get dressed. When we pulled into the lot we did the math and realized we had finished the game all tied up. \n\n\"It's probably for the best,\" Kelsey said, sadly, \"After everything this trip. I dunno. I guess it just feels right that everyone ends up even.\" \n\n\"Oh, we're all winners,\" Julia said, grinning wickedly, \"But we still have one last game to play.\" \n\n* \n\nAs worked up as we all were, somehow we managed to hold it together this time. It was our last game and I guess that sort of trumped everything else. As per usual, Sarah took out her camera, Julia kept score and Kelsey tried to convince me to fool around, to no avail. It was a good game, nothing too memorable. Just the usual weekday matchup between two teams. \n\nI was reminded, then, of the majesty of it all. Of why I'd chosen this trip in the first place. Not to get laid -- that was a nice side benefit -- but because there's something about the game of baseball that just lifts my spirits. I'm not going to go all Ken Burns on you. I won't spend the next six paragraphs waxing lyrically about the innate inspiration of the game. Just know that I felt refreshed under the slowly setting sun. \n\nAlive. \n\nAs the third baseman squeezed the final out into his glove, I felt my heart crack. This was really the end. The last game. This wonderful thing I'd planned so many months ago. More incredible than I'd ever imagined. It was over. \n\nAlmost. \n\n* \n\nHome was only a few hours away, but when we planned the trip we knew the Toronto game would end late and so we'd gotten one last hotel reservation a short walk away from the stadium. \n\nAll four of us had this nervous energy about us. We were all horny as fuck. All a bit apprehensive about what was about to happen. I mean, how did this all go down? Did we pair up or split off or... \n\nEverything to this point had been spontaneous. We all sort of crashed into each other. Now that it felt planned, preordained, it was odd. Uncomfortable. Like getting into the final positions in Twister without ever playing the game. What made sense when taken step by step suddenly seemed ridiculous thrown together all at once. \n\nOur trip was ending and I couldn't stop thinking -- where do we go from here? \n\n* \n\nOur room -- the usual two queen beds with little else -- seemed to stare back at us blankly as we got in. We flopped on the beds and stared at each other. It was strange. We were all so familiar. Too familiar really. But at the moment of truth, no one could even say the words. \n\n\"So how do we...\" Sarah started to talk, then stumbled. \n\n\"Wait,\" Kelsey said, \"Is there a pool?\" \n\nJulia shook her head. We were frozen in that moment. Willing to do everything, unable to do anything. The room practically vibrated with anticipation. Or maybe that was the A/C unit kicking in. \n\nAnd then I had a thought. I walked over to where Sarah was sitting and smiled down at her. \"What you said before. About taking a risk. Maybe it wouldn't be so scary if we did it together?\" \n\nShe seemed to think about it, then smiled broadly. \n\n\"So, Sarah,\" I said, \"That bed looks really uncomfortable. What do you say you sit on my lap?\" \n\nThe sexy brunette smiled then stood up, eager. I put my hand on her shoulder and pushed her back down to the bed. Then, standing over her, I stripped down. \n\nNow I was naked in front of three beautiful, fully dressed women. I should have felt nervous. Exposed. But after everything we'd done together, it was like nothing. Like we were supposed to be this way. \n\nSarah started to stand again, but I motioned for her to wait. Julia and Kelsey just sat there on the other bed, watching. \n\nI reached over and lifted Sarah's shirt right over her head. I was expecting some pushback. Something. But she just sat there, pliant. My plaything. So I reached around and unsnapped her bra, careful not to touch anything other than lace and elastic. Though damn did I want to. Her pendulous breasts hung out, just begging for my hands. My mouth. \n\nInstead I signaled that Sarah should stand. I reached down and slid her bottoms -- shorts and panties at once -- down to the floor. She stood before me in tan, naked glory. The sexiest woman I'd ever known. Seriously. Sarah's body just seemed built for fucking. I took a moment to appreciate it. \n\nThen I sat down, penis protruding rudely. I gestured, arm extended, like welcoming her to my abode. Which I suppose was sort of the case. \n\nWithout a word, Sarah turned and planted her magnificent bottom on top of me. My penis sank between her legs, pressed down by her pussy. The head stuck out a little, as if peeking out from under her sex. \n\nI reached around and hugged her tight, from behind. \n\n\"What?\" Sarah said, seeing the other two women staring at us, \"I'm just sitting on his lap.\" \n\nAnd then Kelsey -- God bless her -- Kelsey dropped to her knees in front of both of us. She stuck out her thin, pink tongue and gave my protruding penis one long lick -- up from the root, over the head, and then right into Sarah's gash, finishing with a little slurp on the coed's erect clit. Then Kelsey smiled up at both of us. Clearly pretty pleased with herself. \n\nThe blonde teenager, without a doubt the most beautiful woman I'd ever seen, lifted off her shirt and shucked off her bottoms so she was as naked as Sarah and I. Then she leaned forward and took my cock fully into her mouth. \n\nShe suckled for a little bit, then released me and went back to Sarah's pussy. Teasing both of us. Her chin lightly rubbing my cock as she went down on Sarah. Her nose and forehead pressing into Sarah's most sensitive place while she worked me over. \n\nIn the background, I heard Julia sigh, exasperated. Looking around Sarah and over Kelsey, I saw my roommate stand up and quickly get undressed -- leaving her glasses on and her hair up, of course. I revelled in my roomie's tight, toned body. Truly, my best friend and maybe the most desirable woman I'd ever known. \n\nJulia sort of strutted over, then slid her head around Sarah's and kissed me, full, on the lips. \n\n\"Hm!\" she gasped, surprised. I looked down and saw that Sarah had taken Julia's tiny breast into her mouth. \n\n\"Sorry,\" Sarah said, \"I couldn't help myself.\" \n\nI felt a warm wet mouth engulf my member. Kelsey, making sure her presence was known. We were all wrapped around each other -- me and these three sexy, beautiful, desirable women -- and I felt like the luckiest person on earth. \n\nKelsey disengaged from my cock, gave Sarah's clit a goodbye kiss as well, and stood up. She pulled Julia aside. The blonde teenager looked down at Sarah and me, still pressed against each other, like we were a physics problem she needed to solve.  \n\nThen Kelsey put her hand on my chest and slowly pushed me into the bed. As I lay back, my cock naturally started pushing upward. Sarah didn't move as my member pressed up into her pubic hair, knocking lightly at her clit. \n\nWhen my head hit the pillow, Kelsey walked back up to the end of the bed and took Sarah's hand. The brunette's eyes widened slightly, but then she let her friend drag her back. At first I was disappointed as Kelsey pulled Sarah away from my cock. After all, this was the closest we'd come to almost anything. Was Kelsey really going to now take the saddle for herself? \n\nAgain, Sarah let herself be posed, this time by her besty. Kelsey set up the sexy brunette so she was facing me, kneeling over my head. Her pussy hung over my mouth promisingly. Sarah's labia were flushed, open. Her clit already showing it's own little erection. I could smell her, too. After everything, I could have closed my eyes and known that it was Sarah sitting over me. \n\nSarah and I both looked at each other questioningly. Was she really going to do this? I thought. Am I really going to do this? I imagined Sarah was thinking. Then, before she could pull back, I leaned my head up and put my tongue at her dripping hole. Sarah sighed, content, and then let her legs relax, sinking us both down into the pillow. \n\nI worked her for all she was worth, knowing that this was one chance -- one that would almost certainly never happen again and would possibly not last for much longer. I made love to that sexy woman's twat with my tongue. Lapped at her opening, sucked at her clit. Reached up and grasped at her tremendous, gravity-defying tits. Glorified in her little groans. \n\nThen I felt her pick herself up. Sarah got back up on her knees. \n\n\"Sar...?\" \n\nShe put her fingers to my lips and shook her head. Making sure I was watching, she took that same hand and dragged it over her puss and took a long, lingering taste of her self. Then she slowly turned around, making sure her snatch was still centered over my mouth. \n\nSlowly, the sexy coed lowered her sex back down. My cock, till now waving in the cool air, was suddenly warm and wet -- swallowed by Sarah's mouth. As soon as her hungry little puss was within reach, I went back to work on it. Following the pattern of providing attention to every little part. \n\nSarah did the same, licking and stroking at me in a way that felt like it was as much about sharing affection as it was about giving pleasure. I reached up and grasped her ample ass cheeks with my hand. Squeezing and holding her in place while I continued to lick her. \n\nThen I felt my cock go cold again and Sarah slowly sat up. With a sigh, I felt her climb off my mouth and then step to the side. \n\n\"My turn.\" I looked up and saw Julia standing over me. \"Wow, you have a lot of bruises, dude.\" \n\n\"I can't imagine why,\" I deadpanned. \n\nJulia didn't respond. She just climbed up and took Sarah's place, facing the same direction. Not one to complain about a meal, I quickly started on Julia's quim. She was different than Sarah obviously. Juicier. Her clit didn't stand out as much but I'd been here before and I knew what it liked. \n\nI felt a hand on my dick, stroking slowly. I couldn't tell whose it was. \n\n\"J... Jules,\" I gasped, \"Who's...\" \n\n\"Kelsey is stroking you while she rubs herself. She's at the end of the bed. Sarah is too. They're both... OH! Ffffffuck you're good at that.\" \n\n\"I know my roomie's buttons,\" I said. \n\n\"Kelsey's leaning forward. She's gonna start...\" \n\nI felt a warm mouth surround my member. Kelsey, according to Julia. Honestly I could almost have guessed. The way she slurped at my cock. The little bit of teeth. Not the most skilled, perhaps, but certainly the most energetic. \n\nJulia continued with her play by play. \n\n\"Sarah she's... kneeling down at Kelsey...\" \n\nI felt Kelsey groan against my cock as her besty started licking at her pussy. We were all connected now. Chained together. Sarah licking Kelsey while she sucked me while I dined on Julia. \n\nI felt Julia's fingertips brush against my lips as she found her clit. No slapping this time, she just jammed on the accelerator, rubbing so hard and fast I had trouble staying out of her way. I did my best to get my tongue inside her and let her steer. \n\nThen her legs snapped hard against me head. \"AH!\" She had me so tight, my face felt like it was turning purple. A splash of warm liquid hit my chest. Then suddenly she dropped away. I looked up and saw Julia splayed next to me, still trembling with little cums, There was a jet of girl cum like a lightning streak down to my stomach. \n\nKelsey was still sucking my cock, but she looked up, eyes wide. Then I saw her own body cinch as Sarah's work was done. Kelsey groaned, eyes rolled back. My cock slipped out of her mouth. Sarah popped up from behind her friend and smiled at me. Her face sticky with her friend's cum. \n\nKelsey and Julia both lay there like corpses. Slowly, Sarah climbed up on to the bed. She kissed my leg, my cock, my chest, then finally pressed her thick lips to mine. I tasted Kelsey on her, as she no doubt tasted Julia, but we didn't stop. \n\nI forced my tongue forward and slid it against Sarah's. Wrapped my arms around her back. My cock was trapped between us pushing upward. Sarah ground down on it slightly. Her breasts pushed down into my chest. \n\n\"You cum?\" she asked. \n\n\"Nuh uh. You?\" \n\n\"Some friends we have,\" Sarah said, \"Leaving us high and dry like this.\" \n\n\"Seriously. I don't suppose there's anything we can do about it at this point.\" \n\nSarah kissed me again. Hard. \"I'm sure we can think of something,\" she said, then gasped. \"OH! Someone's stroking my... Kelsey. She's rubbing my clit. Her tongue is on my... OH god. Fuck.\" \n\nI felt a mouth around my balls. I glanced down and saw it was Julia, sucking at me while Kelsey worked on her friend. Stupid penis trapped in between Sarah and I. \n\nSarah shook, I felt her body press down on me, hard -- maybe my cock was in a good place after all. She buried her head in my chest and groaned. I felt both Kelsey and Julia disengage. \n\nI didn't see where Julia went, but Kelsey just leaned forward, climbing on top of Sarah on top of me. She whispered something in Sarah's ear. The sexy brunette shook her head, but Kelsey kept talking. Then the tantalizing teenager slipped off the bed and walked back around to our feet. \n\nSarah looked up and stared at me. It was an odd face, satisfied and wanting. Maybe a little scared. I felt a hand slide between Sarah and I. Searching. It found my cock and freed it. Gave it a few small strokes. \n\n\"Someone's stroking my...\" \n\n\"Kelsey,\" Sarah said, \"That little slut.\" \n\nSLAP! Kelsey whacked Sarah's ass cheek. The sexy coed cringed a little, but she didn't move. \"Ben?\" Sarah asked, her voice tremulous. I reached up and stroked her hair. It was smooth and cool to the touch. Silky. Kelsey was still holding my cock, but she was no longer stroking me. \n\n\"Ben? Kelsey. She's... She's holding your cock.\" \n\n\"I know.\" \n\n\"She's going to... Gonna...\" \n\nI felt Sarah shift slightly, like raising her bottom a bit, tucking it under her legs. \n\n\"Gonna do it, Sar,\" Kelsey said, \"Gonna give it to you like you deserve.\" \n\n\"Oh Ben,\" Sarah said, \"She's gonna take your cock and st... stuff it inside me. I'm so open baby and she's just gonna... My little pussy. She... She's going to try so hard but...\" \n\nI felt Kelsey twist my cock upwards. Sarah shifted herself a little more. My heart raced. Sarah searched my eyes. I looked beyond her, to what was going on at the bottom of the bed. \n\n\"She's doing it,\" I said, \"Kelsey. She's moving my cock so it's...\" \n\n\"Yeah,\" Sarah said, \" She's gonna jam that... that fucking monster in me. Oh Ben. Don't you wish you were inside me right now? Pumping me. ...\" \n\n\"But Sarah...\" \n\n\"Shhh... It's OK. I mean... How is that enormous, amazing cock even going to fit?\" \n\nSure enough, Sarah lifted herself a little more. Like she was doing a pushup. I could see between us that Kelsey was still holding my cock in one hand, opening Sarah's sex with the other. \n\n\"My little puss,\" Sarah said, \"Shes gonna try so hard. Be so good for you, Ben. I just know she will. Try so hard to take it all. That little... slut. OH! She's gonna make me fuck you, Ben. Make me your slut.\" \n\nI felt Sarah settle down a little more. I felt her nether lips kiss the head of my cock. Kelsey was still holding me straight up. Feeding me into Sarah's sex. \n\n\"Oh FUCK that's big,\" Sarah said, she tossed her head back and I could see tears forming in her eyes. Kelsey wasn't moving her anymore, wasn't pushing or pulling. Sarah was just sinking down onto my cock while Kelsey held me there, waiting. \"Too big. Oh my tight little pussy. She wants it so bad but...\" \n\nI felt myself swallowed a little bit. My head wholly inside. Then another inch. Another. Sarah was wet as all get out but it was still slow going as she slowly took me in. She hadn't been kidding -- her pussy really was tiny. Tight. Like nothing I'd ever felt. \n\nKelsey let go of my base. Sarah dropped a little further. We both sighed, content, as we were finally fully joined. \n\n\"OH... Sarah... I'm inSIDE you,\" I said. \n\n\"Uh huh,\" Sarah said, \"See? My pussy did so good for you. Just like I told you she would.\" \n\nI looked up. Sarah's eyes looked so deep, more than I could ever fathom. She smiled almost shyly and tucked her hair behind her ear. Her breasts hung down over us. I leaned up and kissed an erect nipple. She held my head there in place. Stroked my hair. \n\nAnd there it was. That thing I'd been lusting for since day one of our trip. Me and Sarah, joined. Connected. After all our other intimacies I thought that this might feel... less, somehow. It didn't. It felt like more. Like the entire universe no rotated around one cock in one pussy. \n\nSarah groaned and giggled. Clenched herself around my cock and dropped kisses on whatever her mouth could reach. Her pussy was beyond wet, beyond tight. It gripped me warm and dripping like holding on for dear life. ",
        "\"So good...\" I sighed. \n\n\"Oh God this is so much better than good. Fuck. Clearly I'm the stupidest girl alive. I could have had this... Had you... This whole time? FUCK.\" \n\nI saw Kelsey come up by my side. She was examining us, like reviewing a newly constructed building, searching for flaws in the design. She looked right where my cock was buried in her besty. \n\n\"Nice!\" she said, then gave Sarah a high five. The busty brunette laughed and I felt it through her pussy. \n\n\"See?\" Kelsey said, \"Awesome.\" \n\n\"So awesome.\" \n\nSarah slowly started to slide back and forth on my cock. I felt her pussy walls grrrrrrrrrriiiiiip me as she rode up to the top, then went back down to the root. It was like being held in a velvety vice. A warm, wet tube that was designed exactly to my dimensions, only a centimeter too small. \n\n\"fffffFFFFUCK Sarah! Fuck you feel so fucking amazing.\" \n\n\"It's so much. Too much. How can I even take all of this I feel... beyond full. Stretched. Oh BEN you're stretching me so good and I'm not ever gonna be able to stop.\" \n\nI noticed Kelsey was still standing there, staring. She had a strange sort of smile playing on her face. Something kinda like pride but also lust. \n\n\"OK -- this is nice and all. But it's my turn,\" Kelsey said. She climbed up on the bed, facing her friend. Then she inched backward till her pussy was over my face. I couldn't see anything now, but I could feel it. Sarah wrapped tight around my cock. Kelsey pressed hard over my mouth. \n\n\"Oh FUCK! Sar... He's licking me. Feels so good and I... He... I think he's breaking me. I want it so bad\" \n\n\"M... me too...\" Sarah said. She started rocking back and forth on my cock. I did my best to time my tongue on Kelsey's clit to match Sarah's movements. \n\n\"My little pussy. She was so wanting. Had to let her have it.\" \n\n\"It's OK,\" Kelsey said. \n\n\"I know it's just... Don't know if I wanted my besty to watch me while I fuck another guy.\" \n\n\"Shut up and take it, slut. Besides, it's not another guy,\" Kelsey said, \"It's B... Ben. Our Ben. Ours only.\" \n\nSarah bounced up and down, faster. Kelsey ground down on my mouth, harder. I felt both women building. Building on me. Their cums driving mine. \n\n\"I think he's... g... getting close,\" Sarah said, \"Can feel him swelling in me. Oh Ben... God... I want you to fill my little pussy up so bad. She wants it all but... Can't... Not... Not on the pill. I've only ever used condoms and I'm...\" \n\nI grunted against Kelsey's pussy and she lifted up to let me talk. \n\n\"I'll warn you... when I'm about to go I'll...\" \n\n\"Yeah,\" Sarah said. \n\nKelsey's pussy went right back down on my face. I could hear the two girls still talking, only distantly through Kelsey's thighs. My only focus on what was in front of me -- making the tiny teenager on top of me peak. \n\n\"OH!\" Kelsey cried, \"Getting close.\" \n\n\"Yeah. M... me too. Too close. God... Kels?\" Sarah's voice got small. \"I need to cum... Don't know if I can.\" \n\n\"Gonna... gonna help, OK? Gonna reach down and... that better?\" \n\n\"OH! OH GOD, Ben our little slut is rubbing my clit. FUCK! My puss, my poor little pussy... I've never c... Never cum like this. Oh FUCK! I don't think she can take much more of... OH!\" \n\n\"Sarah, I'm cu...cummmmmming!\" Kelsey cried. \n\n\"M... me tooooooooo!\" \n\nI felt Kelsey slide forward as she came. I looked up. Both girls were wrapped around each other on top of me. Holding onto each other, shaking in ecstasy as both peaked. Breasts crushed. Covered in sweat. Howling and trembling through an unending earthquake of pleasure. Then Sarah's pussy CLAMPED down on my cock. Crying out for me to fill it with my fertile cum. \n\n\"G... getting CLOSE!\" I shouted. \n\nKelsey suddenly leapt forward, tackling her best friend right off my cock. Sarah fell back to the end of the bed. Kelsey covered me like a grenade. Then she wrenched my cock upwards, aimed at her own puss, and slammed herself down. \n\nIt took that one stroke, less than a stroke. Moving from one wetness to another, the violence of Kelsey's pussy suddenly suffocating my cock, I burst. \n\n\"Oh FUCK!\" My cum, intended for Sarah's unprotected pussy, poured into Kelsey. The beautiful blonde, herself coming down from her last orgasm, now rolled right into another, sparked by my ejaculation. \n\n\"CUMMMMMING!\" Kelsey cried, her body bent down, now grabbing my legs and shaking. Sarah slid up and kissed her best friend, lovingly stroking her cheek as she came from my cum. \n\n\"You stole my cum,\" Sarah said, teasingly. \n\n\"A... all mine,\" Kelsey said, shaking with our shared explosion. \n\nI filled Kelsey like machine gun fire, blasting into her hungry pussy. The ecstasy of it ever higher as I roared my orgasm. \n\nI forced my eyes open. Panting. I saw Kelsey splayed over my legs, my cock still buried in her. Sarah was smiling, brushing her friend's hair. Lightly kissing her cheeks and eyes. \n\n\"You got her good,\" Sarah said, \"Got us both...\" \n\nKelsey slid off my dick, which promptly popped up into place like it hadn't already emptied itself. \n\n\"Fuck Ben,\" Sarah said, \"How are you still...\" \n\n\"Magic. Penis.\" Kelsey mumbled into the bed, then laughed. \n\nI felt someone near my side and looked over. Julia. Somehow still wearing glasses. \n\n\"Wondered where you'd gone,\" I said. \n\n\"Ready for one last at bat?\" she asked. I smiled. She climbed on to the bed next to me and spread her legs. I rolled on top of her. My cock resting at her dripping snatch. I pulled her glasses off and kissed her lightly on her freckled cheeks. She smiled at me, a sort of feminine smile I wasn't used to seeing from my Jules. \n\n\"Put me in, coach,\" I said. Julia laughed then reached down, aiming me at her target. I slid forward in one full stroke -- already lubricated from both Sarah and Kelsey's snatches. Tenderly, I leaned in and kissed my friend, entwined our tongues, tried to pour everything I'd ever felt about her right into her open mouth. \n\n\"Enough of this,\" Julia said, biting at my lip, \"Fucking fuck me you fucker.\" \n\nI pulled back and then drove into her with abandon. Plugged away at her hungry puss. Julia started shaking almost immediately. Sarah was tight as all fuck and Kelsey was dripping. But Julia just seemed to... fit. Maybe it was the friendship. We knew each other's rhythms in everything else, why not here, too? \n\n\"God that's good,\" Julia said. \n\n\"Your p... pussy. So amazing...\" \n\nI gripped Julia's shoulders so I could slam into her harder. Her back arched upwards and I took her tiny breast into my mouth. I bit down on the nipple and she cried out. \n\n\"HA aH!\" I felt a little burst of liquid splash against my pubic hair. I was never going to get over that -- the way my Jules came for me. \n\n\"You gonna fill her up?\" Kelsey asked. I turned and saw the blonde teenager standing next to us. \n\nJulia reached out and grabbed Kelsey's hand. \"Hey little slut. Haven't you already had your fill?\" \n\n\"Not even close,\" Kelsey said. \n\n\"You heard the girl,\" Julia said, \"F... Fill us... Fill us both.\" \n\nKelsey didn't need a second invitation. She jumped up onto the bed and spread her legs next to Julia. Their thighs crossed over one another, putting their pussies as close as they could. \n\nIn one motion I pulled out of Jules and ploughed into Kels. Three hard strokes into her tight, pink puss then back out and into Julia again. \n\nIt was awesome for me, but I'm sure it kinda sucked for them. Sure enough, I saw Kelsey reach over and start rubbing Julia's slit. Then, when I switched back to my roomie, I saw she did the same for little Kelsey. Both girls rubbing each other off. \n\n\"God you're sluts,\" Sarah said, looking over at us. \n\n\"You wish you could be this slutty,\" Kelsey said. Sarah nodded, clearly in agreement. Then she got up on the bed and slowly lowered herself down, putting her hungry puss right on her best friend's face. \n\nI heard Kelsey's muffled laugh, then Sarah stiffened as her besty began lapping at her. We all settled into a rhythm, the four of us. One writhing, racking beast. Me pounding Julia, then Kelsey. The beautiful blonde's hand full of Julia's clit, her mouth wrapped around Sarah's nether lips. Sarah grunting in time with me, reaching down to rub Julia, as well. \n\n\"G... Getting close,\" I said. \n\n\"Me too,\" the women chorused. \n\n\"On... or in.\" \n\n\"In me,\" Kelsey said, \"Fill me up.\" \n\n\"Me f... first,\" Julia said. \n\nI gave Kelsey two more hard strokes, then jammed Julia full. At the same time, Kelsey grabbed hold of Julia's clit and squeezed. \n\n\"OH FUCK!\" Julia screamed. An absolute fire hose of girl cum blasted out of her cunny, shooting so high it practically hit me in the face. \n\nI kept driving myself into her. My balls building and then... \n\n\"CummmmmmMMMMMIIIIINNNNG!\" \n\nI exploded inside Julia. Like I'd never cum in my life. A long thick stream of sperm shot out of me, like I was trying to match her own ejaculation. \n\nAs if somehow my cum had gone straight through to her, Sarah suddenly snapped back. She howled, then fell to the side -- her whole body tremoring, fingers buried in her snatch. \n\nJulia was still screaming, a long high siren's wail. Her whole body bent -- clenched. Gouts of Julia juice bursting out from her like a sprinkler on a Summer day. I did my best to stay with her. My eyes rolling back. I felt a little tug on my arm. \n\nI pulled out of my roomie and plunged back into the beautiful blonde next to her. Kelsey cried out, her own orgasm overtaking her like a tidal wave from her toes up to her head. \n\nMy cock was still streaming sperm like it would never stop. A squall of semen blasting past the poor girl's cervix and into her womb. So much that I could already feel it leaking out around me. \n\nI held both girls so tight. My arms wrapped around Julia. Around Kelsey. Sarah. Feeling them all clutching me back. Julia's keening down to a rasping breath. Sarah squeezing my arm and shuddering. Kelsey still bearing down. \"Hrrrn... hrrrrrnnnnnn... Hrrrrrrrnnnnnn...\" \n\nI shook and seized into them. Barely able to control myself as the ecstasy coursed through me. It was all too much, all four of us writhing on the bed in a tangle of sweat and flesh \n\nI felt my muscles slowly relax. My cock still spitting into Kelsey -- down to a drizzle. I rolled off her, my cock finally starting to fade. Sarah smiled at me, warmly, then knelt down and took my shrinking sex into her mouth, licking hungrily. He did his best, my dick, to produce a little more sperm for her to suck on, and Sarah happily lapped at my essence, at Kelsey's, at Julia's, all until my cock was covered only in her own saliva. \n\nI heard a pained groan and rolled over. I was lying on top of poor Julia, probably crushing her ribs. The three of us slowly slid around. Like working a weird puzzle till we were all side by side. We didn't speak. Just grunted and whined. Then Sarah climbed in too and all four of us squeezed against each other in a bed built for two. \n\nOne of the girl's sighed, almost like a cat's purr, and mumbled. \n\n\"Best... trip... ever...\""
    ],
    "authorname": "Spector_Dugan",
    "tags": [
        "group sex",
        "oral",
        "girl on girl",
        "squirting",
        "blow job",
        "orgy",
        "exhibitionism",
        "college",
        "cunnilingus"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/the-baseball-trip-pt-08"
}